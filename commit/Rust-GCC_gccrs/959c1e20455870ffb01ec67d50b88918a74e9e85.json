{"sha": "959c1e20455870ffb01ec67d50b88918a74e9e85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU5YzFlMjA0NTU4NzBmZmIwMWVjNjdkNTBiODg5MThhNzRlOWU4NQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2016-10-27T16:13:19Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2016-10-27T16:13:19Z"}, "message": "builtins.c (expand_builtin_nonlocal_goto): Avoid evaluating PIC_OFFSET_TABLE_REGNUM twice.\n\n\t* builtins.c (expand_builtin_nonlocal_goto): Avoid evaluating\n\tPIC_OFFSET_TABLE_REGNUM twice.\n\nFrom-SVN: r241625", "tree": {"sha": "c7d0815bffb9c7fe33a7b4744bbf7c0bef22a000", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7d0815bffb9c7fe33a7b4744bbf7c0bef22a000"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/959c1e20455870ffb01ec67d50b88918a74e9e85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/959c1e20455870ffb01ec67d50b88918a74e9e85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/959c1e20455870ffb01ec67d50b88918a74e9e85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/959c1e20455870ffb01ec67d50b88918a74e9e85/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "93f90bec31ba60f78a1242fe2c3544c1d7ac3469", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93f90bec31ba60f78a1242fe2c3544c1d7ac3469", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93f90bec31ba60f78a1242fe2c3544c1d7ac3469"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "ce103ab4a9d5439518d5b28a3106de85443f5a13", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959c1e20455870ffb01ec67d50b88918a74e9e85/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959c1e20455870ffb01ec67d50b88918a74e9e85/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=959c1e20455870ffb01ec67d50b88918a74e9e85", "patch": "@@ -1,3 +1,8 @@\n+2016-10-27  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* builtins.c (expand_builtin_nonlocal_goto): Avoid evaluating\n+\tPIC_OFFSET_TABLE_REGNUM twice.\n+\n 2016-10-27  Bin Cheng  <bin.cheng@arm.com>\n \n \t* match.pd ((convert (op:s (convert@2 @0) (convert?@3 @1)))): Add"}, {"sha": "cc711a0f8430de41f77d1ff2b10abc9560a1025a", "filename": "gcc/builtins.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/959c1e20455870ffb01ec67d50b88918a74e9e85/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/959c1e20455870ffb01ec67d50b88918a74e9e85/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=959c1e20455870ffb01ec67d50b88918a74e9e85", "patch": "@@ -1140,8 +1140,8 @@ expand_builtin_nonlocal_goto (tree exp)\n \t to targets with a nonlocal_goto pattern; they are free\n \t to implement it in their own way.  Note also that this is\n \t a no-op if the GP register is a global invariant.)  */\n-      if ((unsigned) PIC_OFFSET_TABLE_REGNUM != INVALID_REGNUM\n-\t  && fixed_regs[PIC_OFFSET_TABLE_REGNUM])\n+      unsigned regnum = PIC_OFFSET_TABLE_REGNUM;\n+      if (regnum != INVALID_REGNUM && fixed_regs[regnum])\n \temit_use (pic_offset_table_rtx);\n \n       emit_indirect_jump (r_label);"}]}