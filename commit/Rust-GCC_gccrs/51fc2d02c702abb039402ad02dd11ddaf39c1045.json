{"sha": "51fc2d02c702abb039402ad02dd11ddaf39c1045", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFmYzJkMDJjNzAyYWJiMDM5NDAyYWQwMmRkMTFkZGFmMzljMTA0NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-03-31T21:50:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-03-31T21:50:03Z"}, "message": "C++ DR 613\n\n        C++ DR 613\n        * semantics.c (finish_non_static_data_member): Allow such references\n        without an associated object in sizeof/decltype/alignof.\n\nFrom-SVN: r145375", "tree": {"sha": "b19c1e8906a07afb485b4b834d248c7570bf6ea9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b19c1e8906a07afb485b4b834d248c7570bf6ea9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51fc2d02c702abb039402ad02dd11ddaf39c1045", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51fc2d02c702abb039402ad02dd11ddaf39c1045", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51fc2d02c702abb039402ad02dd11ddaf39c1045", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51fc2d02c702abb039402ad02dd11ddaf39c1045/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "824523999285e704ff2c549d8dbd8d20bb1c6ac0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/824523999285e704ff2c549d8dbd8d20bb1c6ac0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/824523999285e704ff2c549d8dbd8d20bb1c6ac0"}], "stats": {"total": 45, "additions": 34, "deletions": 11}, "files": [{"sha": "adb5be358ad48f2bf9b02ff81f55bbae876c076d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51fc2d02c702abb039402ad02dd11ddaf39c1045/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51fc2d02c702abb039402ad02dd11ddaf39c1045/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=51fc2d02c702abb039402ad02dd11ddaf39c1045", "patch": "@@ -1,5 +1,9 @@\n 2009-03-31  Jason Merrill  <jason@redhat.com>\n \n+\tC++ DR 613\n+\t* semantics.c (finish_non_static_data_member): Allow such references\n+\twithout an associated object in sizeof/decltype/alignof.\n+\n \t* ptree.c (cxx_print_decl): Pretty-print full name of\n \tfunction/template.\n \t(cxx_print_type): Pretty-print full name of class."}, {"sha": "038715ba2b11e4718facecc3d9bf9ca4e468b538", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51fc2d02c702abb039402ad02dd11ddaf39c1045/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51fc2d02c702abb039402ad02dd11ddaf39c1045/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=51fc2d02c702abb039402ad02dd11ddaf39c1045", "patch": "@@ -1422,6 +1422,16 @@ finish_non_static_data_member (tree decl, tree object, tree qualifying_scope)\n {\n   gcc_assert (TREE_CODE (decl) == FIELD_DECL);\n \n+  if (!object && skip_evaluation)\n+    {\n+      /* DR 613: Can use non-static data members without an associated\n+         object in sizeof/decltype/alignof.  */\n+      tree scope = qualifying_scope;\n+      if (scope == NULL_TREE)\n+\tscope = context_for_name_lookup (decl);\n+      object = maybe_dummy_object (scope, NULL);\n+    }\n+\n   if (!object)\n     {\n       if (current_function_decl\n@@ -1433,7 +1443,8 @@ finish_non_static_data_member (tree decl, tree object, tree qualifying_scope)\n \n       return error_mark_node;\n     }\n-  TREE_USED (current_class_ptr) = 1;\n+  if (current_class_ptr)\n+    TREE_USED (current_class_ptr) = 1;\n   if (processing_template_decl && !qualifying_scope)\n     {\n       tree type = TREE_TYPE (decl);\n@@ -1443,7 +1454,9 @@ finish_non_static_data_member (tree decl, tree object, tree qualifying_scope)\n       else\n \t{\n \t  /* Set the cv qualifiers.  */\n-\t  int quals = cp_type_quals (TREE_TYPE (current_class_ref));\n+\t  int quals = (current_class_ref\n+\t\t       ? cp_type_quals (TREE_TYPE (current_class_ref))\n+\t\t       : TYPE_UNQUALIFIED);\n \n \t  if (DECL_MUTABLE_P (decl))\n \t    quals &= ~TYPE_QUAL_CONST;"}, {"sha": "b5f3099288165e0d50b1d3a7e516b323312cc39d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51fc2d02c702abb039402ad02dd11ddaf39c1045/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51fc2d02c702abb039402ad02dd11ddaf39c1045/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51fc2d02c702abb039402ad02dd11ddaf39c1045", "patch": "@@ -26,6 +26,12 @@\n \n 2009-03-31  Jason Merrill  <jason@redhat.com>\n \n+\tC++ DR 613\n+\t* g++.old-deja/g++.dg/cpp0x/decltype3.C: Remove expected errors.\n+\t* g++.old-deja/g++.ext/typeof2.C: Remove expected errors.\n+\t* g++.old-deja/g++.other/sizeof2.C: Remove some expected errors,\n+\txfail others.\n+\n \t* g++.dg/other/typedef2.C: New test.\n \n \tPR c++/37806"}, {"sha": "6958afd007103bee446f2047826ef01d7c1a086e", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype3.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51fc2d02c702abb039402ad02dd11ddaf39c1045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51fc2d02c702abb039402ad02dd11ddaf39c1045/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype3.C?ref=51fc2d02c702abb039402ad02dd11ddaf39c1045", "patch": "@@ -47,10 +47,10 @@ CHECK_DECLTYPE(decltype(caa.a), int);\n \n class B { \n public:\n-  int a;  // { dg-error \"invalid use\" }\n+  int a;\n   enum B_enum { b }; \n-  decltype(a) c; // { dg-error \"from this location\" }\n-  decltype(a) foo() { } // { dg-error \"from this location\" }\n+  decltype(a) c;\n+  decltype(a) foo() { }\n   decltype(b) enums_are_in_scope() { return b; } // ok \n }; \n "}, {"sha": "008ecf6da0c27227730e0e85ee287ecd4bcfc445", "filename": "gcc/testsuite/g++.old-deja/g++.ext/typeof2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51fc2d02c702abb039402ad02dd11ddaf39c1045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Ftypeof2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51fc2d02c702abb039402ad02dd11ddaf39c1045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Ftypeof2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Ftypeof2.C?ref=51fc2d02c702abb039402ad02dd11ddaf39c1045", "patch": "@@ -3,6 +3,6 @@\n \n struct S\n {\n-  int i; // { dg-error \"\" } non-static data member\n-  __typeof( S::i ) f (); // { dg-error \"\" } referenced here\n+  int i;\n+  __typeof( S::i ) f ();\n };"}, {"sha": "cb3c9bb721f7113b7b4d1d8d7e76f764842f3daf", "filename": "gcc/testsuite/g++.old-deja/g++.other/sizeof2.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51fc2d02c702abb039402ad02dd11ddaf39c1045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsizeof2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51fc2d02c702abb039402ad02dd11ddaf39c1045/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsizeof2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsizeof2.C?ref=51fc2d02c702abb039402ad02dd11ddaf39c1045", "patch": "@@ -3,13 +3,13 @@\n \n struct S\n {\n-  int j; // { dg-error \"\" } non-static data member\n-  int i[2]; // { dg-error \"\" } non-static data member\n+  int j;\n+  int i[2]; // { dg-error \"\" \"\" { xfail *-*-* } } non-static data member\n };\n \n void f ()\n {\n-  sizeof (S::j); // { dg-error \"\" } used here\n-  sizeof (S::i[0]); //  { dg-error \"\" } used here\n+  sizeof (S::j);\n+  sizeof (S::i[0]); //  { dg-error \"\" \"\" { xfail *-*-* } } used here\n }\n "}]}