{"sha": "4a414de84a8e51b60b0be0c6c3ad9c33f7310d92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE0MTRkZTg0YThlNTFiNjBiMGJlMGM2YzNhZDljMzNmNzMxMGQ5Mg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2015-12-15T13:07:15Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2015-12-15T13:07:15Z"}, "message": "[PR 68851] Do not collect thunks in collect_callers\n\n2015-12-15  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/68851\n\t* cgraph.c (collect_callers_of_node_1): Do not collect thunks.\n\t* cgraph.h (cgraph_node): Change comment of collect_callers.\n\ntestsuite/\n\t* g++.dg/ipa/pr68851.C: New test.\n\nFrom-SVN: r231648", "tree": {"sha": "062c93856d8ecd5b8d3539d305d0f33b8f624de8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/062c93856d8ecd5b8d3539d305d0f33b8f624de8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a414de84a8e51b60b0be0c6c3ad9c33f7310d92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a414de84a8e51b60b0be0c6c3ad9c33f7310d92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a414de84a8e51b60b0be0c6c3ad9c33f7310d92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a414de84a8e51b60b0be0c6c3ad9c33f7310d92/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b15f02734659e9babcb743e368b40f57f60c0b48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b15f02734659e9babcb743e368b40f57f60c0b48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b15f02734659e9babcb743e368b40f57f60c0b48"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "9b81b4818f235353b40d01eecfa0de453700d643", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a414de84a8e51b60b0be0c6c3ad9c33f7310d92/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a414de84a8e51b60b0be0c6c3ad9c33f7310d92/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a414de84a8e51b60b0be0c6c3ad9c33f7310d92", "patch": "@@ -1,3 +1,9 @@\n+2015-12-15  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/68851\n+\t* cgraph.c (collect_callers_of_node_1): Do not collect thunks.\n+\t* cgraph.h (cgraph_node): Change comment of collect_callers.\n+\n 2015-12-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/66688"}, {"sha": "5a9c2a2d928f16421d4e1f730ed54dcdc912203a", "filename": "gcc/cgraph.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a414de84a8e51b60b0be0c6c3ad9c33f7310d92/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a414de84a8e51b60b0be0c6c3ad9c33f7310d92/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=4a414de84a8e51b60b0be0c6c3ad9c33f7310d92", "patch": "@@ -2592,7 +2592,8 @@ collect_callers_of_node_1 (cgraph_node *node, void *data)\n \n   if (avail > AVAIL_INTERPOSABLE)\n     for (cs = node->callers; cs != NULL; cs = cs->next_caller)\n-      if (!cs->indirect_inlining_edge)\n+      if (!cs->indirect_inlining_edge\n+\t  && !cs->caller->thunk.thunk_p)\n         redirect_callers->safe_push (cs);\n   return false;\n }"}, {"sha": "ba14215ed6f1b0e88b004c12c851534be9704a2a", "filename": "gcc/cgraph.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a414de84a8e51b60b0be0c6c3ad9c33f7310d92/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a414de84a8e51b60b0be0c6c3ad9c33f7310d92/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=4a414de84a8e51b60b0be0c6c3ad9c33f7310d92", "patch": "@@ -1070,7 +1070,7 @@ struct GTY((tag (\"SYMTAB_FUNCTION\"))) cgraph_node : public symtab_node {\n   cgraph_edge *get_edge (gimple *call_stmt);\n \n   /* Collect all callers of cgraph_node and its aliases that are known to lead\n-     to NODE (i.e. are not overwritable).  */\n+     to NODE (i.e. are not overwritable) and that are not thunks.  */\n   vec<cgraph_edge *> collect_callers (void);\n \n   /* Remove all callers from the node.  */"}, {"sha": "d08b40046e23889c34aaa39671e330117f915f10", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a414de84a8e51b60b0be0c6c3ad9c33f7310d92/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a414de84a8e51b60b0be0c6c3ad9c33f7310d92/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4a414de84a8e51b60b0be0c6c3ad9c33f7310d92", "patch": "@@ -1,3 +1,8 @@\n+2015-12-15  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/68851\n+\t* g++.dg/ipa/pr68851.C: New test.\n+\n 2015-12-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/63506"}, {"sha": "659e4cdcc4a1c62b58e63746644137eec44404bd", "filename": "gcc/testsuite/g++.dg/ipa/pr68851.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a414de84a8e51b60b0be0c6c3ad9c33f7310d92/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr68851.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a414de84a8e51b60b0be0c6c3ad9c33f7310d92/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr68851.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr68851.C?ref=4a414de84a8e51b60b0be0c6c3ad9c33f7310d92", "patch": "@@ -0,0 +1,29 @@\n+// { dg-do compile }\n+// { dg-options \"-O3\" }\n+\n+class A;\n+class B {\n+public:\n+  operator A *() const;\n+};\n+class A {\n+public:\n+  virtual bool isFormControlElement() const {}\n+};\n+class C {\n+  struct D {\n+    B element;\n+  };\n+  bool checkPseudoClass(const D &, int &) const;\n+};\n+class F {\n+  virtual bool isFormControlElement() const;\n+};\n+class G : A, F {\n+  bool isFormControlElement() const {}\n+};\n+bool C::checkPseudoClass(const D &p1, int &) const {\n+  A &a = *p1.element;\n+  a.isFormControlElement();\n+  a.isFormControlElement() || a.isFormControlElement();\n+}"}]}