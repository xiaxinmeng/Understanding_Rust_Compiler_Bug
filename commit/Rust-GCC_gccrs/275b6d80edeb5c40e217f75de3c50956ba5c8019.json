{"sha": "275b6d80edeb5c40e217f75de3c50956ba5c8019", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc1YjZkODBlZGViNWM0MGUyMTdmNzVkZTNjNTA5NTZiYTVjODAxOQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2002-09-04T18:11:18Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-09-04T18:11:18Z"}, "message": "target-def.h (TARGET_HAVE_SRODATA_SECTION): New macro.\n\n        * target-def.h (TARGET_HAVE_SRODATA_SECTION): New macro.\n        * target.h (gcc_target): Add have_srodata_section member.\n        * varasm.c (section_category): Add SECCAT_SRODATA.\n        (categorize_decl_for_section): Return SECCAT_SRODATA for sdata if\n        READONLY_SDATA_SECTION defined.\n        (decl_readonly_section_1): True for SECCAT_SRODATA also.\n        (default_elf_select_section_1): Map SECCAT_SRODATA to .sdata2.\n        (default_unique_section_1): Likewise.\n\nFrom-SVN: r56806", "tree": {"sha": "14249a66a863f3cb90c2a01b57d8301ed45902dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14249a66a863f3cb90c2a01b57d8301ed45902dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/275b6d80edeb5c40e217f75de3c50956ba5c8019", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/275b6d80edeb5c40e217f75de3c50956ba5c8019", "html_url": "https://github.com/Rust-GCC/gccrs/commit/275b6d80edeb5c40e217f75de3c50956ba5c8019", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/275b6d80edeb5c40e217f75de3c50956ba5c8019/comments", "author": null, "committer": null, "parents": [{"sha": "015b1ad1dfa8fbd7323691515a5c1c38c4c1541d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/015b1ad1dfa8fbd7323691515a5c1c38c4c1541d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/015b1ad1dfa8fbd7323691515a5c1c38c4c1541d"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "3713dd09ac87f427e32930eb44bbc491b57ed0fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/275b6d80edeb5c40e217f75de3c50956ba5c8019/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/275b6d80edeb5c40e217f75de3c50956ba5c8019/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=275b6d80edeb5c40e217f75de3c50956ba5c8019", "patch": "@@ -1,3 +1,14 @@\n+2002-09-04  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* target-def.h (TARGET_HAVE_SRODATA_SECTION): New macro.\n+\t* target.h (gcc_target): Add have_srodata_section member.\n+\t* varasm.c (section_category): Add SECCAT_SRODATA.\n+\t(categorize_decl_for_section): Return SECCAT_SRODATA for sdata if\n+\tREADONLY_SDATA_SECTION defined.\n+\t(decl_readonly_section_1): True for SECCAT_SRODATA also.\n+\t(default_elf_select_section_1): Map SECCAT_SRODATA to .sdata2.\n+\t(default_unique_section_1): Likewise.\n+\n 2002-09-04  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* expr.c (emit_group_load): Revise to allow splitting TCmode source"}, {"sha": "897ad541fc7df71799d6f18f96f6fe3c7cdd3581", "filename": "gcc/target-def.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/275b6d80edeb5c40e217f75de3c50956ba5c8019/gcc%2Ftarget-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/275b6d80edeb5c40e217f75de3c50956ba5c8019/gcc%2Ftarget-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-def.h?ref=275b6d80edeb5c40e217f75de3c50956ba5c8019", "patch": "@@ -118,6 +118,10 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n #define TARGET_HAVE_TLS false\n #endif\n \n+#ifndef TARGET_HAVE_SRODATA_SECTION\n+#define TARGET_HAVE_SRODATA_SECTION false\n+#endif\n+\n #ifndef TARGET_ASM_EXCEPTION_SECTION\n #define TARGET_ASM_EXCEPTION_SECTION default_exception_section\n #endif\n@@ -224,7 +228,10 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n \n /* In hook.c.  */\n #define TARGET_CANNOT_MODIFY_JUMPS_P hook_void_bool_false\n+\n+#ifndef TARGET_IN_SMALL_DATA_P\n #define TARGET_IN_SMALL_DATA_P hook_tree_bool_false\n+#endif\n \n #ifndef TARGET_ENCODE_SECTION_INFO\n #define TARGET_ENCODE_SECTION_INFO hook_tree_int_void\n@@ -253,7 +260,8 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n   TARGET_STRIP_NAME_ENCODING,\t\t\t\\\n   TARGET_HAVE_NAMED_SECTIONS,\t\t\t\\\n   TARGET_HAVE_CTORS_DTORS,\t\t\t\\\n-  TARGET_HAVE_TLS\t\t\t\t\\\n+  TARGET_HAVE_TLS,\t\t\t\t\\\n+  TARGET_HAVE_SRODATA_SECTION\t\t\t\\\n }\n \n #include \"hooks.h\""}, {"sha": "6bb1bb0aa641da31a89db9a2b1d604c7e27808a7", "filename": "gcc/target.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/275b6d80edeb5c40e217f75de3c50956ba5c8019/gcc%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/275b6d80edeb5c40e217f75de3c50956ba5c8019/gcc%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.h?ref=275b6d80edeb5c40e217f75de3c50956ba5c8019", "patch": "@@ -262,6 +262,9 @@ struct gcc_target\n \n   /* True if thread-local storage is supported.  */\n   bool have_tls;\n+\n+  /* True if a small readonly data section is supported.  */\n+  bool have_srodata_section;\n };\n \n extern struct gcc_target targetm;"}, {"sha": "02078a3ede173d06b65893ad938f01ad992f85b3", "filename": "gcc/varasm.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/275b6d80edeb5c40e217f75de3c50956ba5c8019/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/275b6d80edeb5c40e217f75de3c50956ba5c8019/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=275b6d80edeb5c40e217f75de3c50956ba5c8019", "patch": "@@ -4898,6 +4898,7 @@ enum section_category\n   SECCAT_RODATA_MERGE_STR,\n   SECCAT_RODATA_MERGE_STR_INIT,\n   SECCAT_RODATA_MERGE_CONST,\n+  SECCAT_SRODATA,\n \n   SECCAT_DATA,\n \n@@ -4999,6 +5000,8 @@ categorize_decl_for_section (decl, reloc, shlib)\n     {\n       if (ret == SECCAT_BSS)\n \tret = SECCAT_SBSS;\n+      else if (targetm.have_srodata_section && ret == SECCAT_RODATA)\n+\tret = SECCAT_SRODATA;\n       else\n \tret = SECCAT_SDATA;\n     }\n@@ -5026,6 +5029,7 @@ decl_readonly_section_1 (decl, reloc, shlib)\n     case SECCAT_RODATA_MERGE_STR:\n     case SECCAT_RODATA_MERGE_STR_INIT:\n     case SECCAT_RODATA_MERGE_CONST:\n+    case SECCAT_SRODATA:\n       return true;\n       break;\n     default:\n@@ -5069,6 +5073,9 @@ default_elf_select_section_1 (decl, reloc, align, shlib)\n     case SECCAT_RODATA_MERGE_CONST:\n       mergeable_constant_section (DECL_MODE (decl), align, 0);\n       break;\n+    case SECCAT_SRODATA:\n+      named_section (NULL_TREE, \".sdata2\", reloc);\n+      break;\n     case SECCAT_DATA:\n       data_section ();\n       break;\n@@ -5141,6 +5148,9 @@ default_unique_section_1 (decl, reloc, shlib)\n     case SECCAT_RODATA_MERGE_CONST:\n       prefix = one_only ? \".gnu.linkonce.r.\" : \".rodata.\";\n       break;\n+    case SECCAT_SRODATA:\n+      prefix = one_only ? \".gnu.linkonce.s2.\" : \".sdata2.\";\n+      break;\n     case SECCAT_DATA:\n     case SECCAT_DATA_REL:\n     case SECCAT_DATA_REL_LOCAL:"}]}