{"sha": "c6db08cd564e877e192e1c499ab51cf04102eaa9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZkYjA4Y2Q1NjRlODc3ZTE5MmUxYzQ5OWFiNTFjZjA0MTAyZWFhOQ==", "commit": {"author": {"name": "David Billinghurst", "email": "David.Billinghurst@riotinto.com", "date": "2004-07-08T23:43:13Z"}, "committer": {"name": "David Billinghurst", "email": "billingd@gcc.gnu.org", "date": "2004-07-08T23:43:13Z"}, "message": "f77-edit-i-in.f: Copy from g77.dg and change X to 1X in format.\n\n2004-07-09  David Billinghurst (David.Billinghurst@riotinto.com)\n\n\t* gfortran.dg/g77/f77-edit-i-in.f: Copy from g77.dg and\n\tchange X to 1X in format.\n\t* gfortran.dg/g77/20010216-1.f:  Copy from g77.dg and\n\tadd data statements to conform to standard.\n\nFrom-SVN: r84328", "tree": {"sha": "1d13a07c1322346e1ae5132922252f556e3ccb7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d13a07c1322346e1ae5132922252f556e3ccb7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6db08cd564e877e192e1c499ab51cf04102eaa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6db08cd564e877e192e1c499ab51cf04102eaa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6db08cd564e877e192e1c499ab51cf04102eaa9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6db08cd564e877e192e1c499ab51cf04102eaa9/comments", "author": null, "committer": null, "parents": [{"sha": "8d05a22ef25d36104f4375f8752bf2f63f737220", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d05a22ef25d36104f4375f8752bf2f63f737220", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d05a22ef25d36104f4375f8752bf2f63f737220"}], "stats": {"total": 81, "additions": 81, "deletions": 0}, "files": [{"sha": "3b94ce020b95197a85c3fcceda2bd60ede3f18f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6db08cd564e877e192e1c499ab51cf04102eaa9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6db08cd564e877e192e1c499ab51cf04102eaa9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c6db08cd564e877e192e1c499ab51cf04102eaa9", "patch": "@@ -1,3 +1,10 @@\n+2004-07-09  David Billinghurst (David.Billinghurst@riotinto.com)\n+\n+\t* gfortran.dg/g77/f77-edit-i-in.f: Copy from g77.dg and\n+\tchange X to 1X in format.\n+\t* gfortran.dg/g77/20010216-1.f:  Copy from g77.dg and\n+\tadd data statements to conform to standard.\n+\n 2004-07-09  David Billinghurst (David.Billinghurst@riotinto.com)\n \n \t* gfortran.dg/g77/f77-edit-s-out.f: Copy from g77.dg. XFAIL "}, {"sha": "a12548073c0dff078c578640df8527b0bb5eef9a", "filename": "gcc/testsuite/gfortran.dg/g77/20010216-1.f", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6db08cd564e877e192e1c499ab51cf04102eaa9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F20010216-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6db08cd564e877e192e1c499ab51cf04102eaa9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F20010216-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F20010216-1.f?ref=c6db08cd564e877e192e1c499ab51cf04102eaa9", "patch": "@@ -0,0 +1,52 @@\n+C Test for bug in reg-stack handling conditional moves.\n+C Reported by Tim Prince <tprince@computer.org>\n+C\n+C { dg-do run { target \"i[6789]86-*-*\" } }\n+C { dg-options \"-ffast-math -march=pentiumpro\" }\n+\n+      double precision function foo(x, y)\n+         implicit none\n+         double precision x, y\n+         double precision a, b, c, d\n+         if (x /= y) then\n+             if (x * y >= 0) then\n+                 a = abs(x)\n+                 b = abs(y)\n+                 c = max(a, b)\n+                 d = min(a, b)\n+                 foo = 1 - d/c\n+             else       \n+                 foo = 1\n+             end if  \n+         else\n+             foo = 0\n+         end if\n+      end\n+\n+      program test\n+      implicit none\n+\n+      integer ntests\n+      parameter (ntests=7)\n+      double precision tolerance\n+      parameter (tolerance=1.0D-6)\n+\n+C Each column is a pair of values to feed to foo,\n+C and its expected return value.\n+      double precision a(ntests), b(ntests), x(ntests)\n+      data a /1, -23, -1,   1,   9,  10,  -9/\n+      data b /1, -23, 12, -12,  10,   9, -10/\n+      data x /0,   0,  1,   1, 0.1, 0.1, 0.1/\n+\n+      double precision foo\n+      double precision result\n+      integer i\n+\n+      do i = 1, ntests\n+         result = foo(a(i), b(i))\n+         if (abs(result - x(i)) > tolerance) then\n+           print *, i, a(i), b(i), x(i), result\n+           call abort\n+         end if\n+      end do\n+      end"}, {"sha": "49eb41608bb2aaae7638f35005b92485f53758d4", "filename": "gcc/testsuite/gfortran.dg/g77/f77-edit-i-in.f", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6db08cd564e877e192e1c499ab51cf04102eaa9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Ff77-edit-i-in.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6db08cd564e877e192e1c499ab51cf04102eaa9/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Ff77-edit-i-in.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Ff77-edit-i-in.f?ref=c6db08cd564e877e192e1c499ab51cf04102eaa9", "patch": "@@ -0,0 +1,22 @@\n+C Test Fortran 77 I edit descriptor for input\n+C      (ANSI X3.9-1978 Section 13.5.9.1)\n+C\n+C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n+C\n+C { dg-do run }\n+\n+      integer i,j\n+      character*10 buf\n+\n+      write(buf,'(A)') '1  -1'\n+\n+      read(buf,'(I1)') i\n+      if ( i.ne.1 ) call abort()\n+\n+      read(buf,'(1X,I1)') i\n+      if ( i.ne.0 ) call abort()\n+\n+      read(buf,'(1X,I1,1X,I2)') i,j\n+      if ( i.ne.0 .and. j.ne.-1 ) call abort()\n+\n+      end"}]}