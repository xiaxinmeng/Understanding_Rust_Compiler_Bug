{"sha": "54625ca1213528d64717d1a95163a2613151beb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ2MjVjYTEyMTM1MjhkNjQ3MTdkMWE5NTE2M2EyNjEzMTUxYmViNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-12-08T11:57:15Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-12-08T11:57:15Z"}, "message": "trans.c (Subprogram_Body_to_gnu): Be prepared for a by-ref VAR_DECL in the case of an Out parameter passed by copy.\n\n\t* gcc-interface/trans.c (Subprogram_Body_to_gnu): Be prepared for a\n\tby-ref VAR_DECL in the case of an Out parameter passed by copy.\n\nFrom-SVN: r194321", "tree": {"sha": "f1385a8610ac4efc56aa70d4c3ef83d6015783ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1385a8610ac4efc56aa70d4c3ef83d6015783ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54625ca1213528d64717d1a95163a2613151beb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54625ca1213528d64717d1a95163a2613151beb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54625ca1213528d64717d1a95163a2613151beb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54625ca1213528d64717d1a95163a2613151beb7/comments", "author": null, "committer": null, "parents": [{"sha": "a2ce7808e4763ebbcea9d9369a5a506cddd90dea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2ce7808e4763ebbcea9d9369a5a506cddd90dea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2ce7808e4763ebbcea9d9369a5a506cddd90dea"}], "stats": {"total": 65, "additions": 63, "deletions": 2}, "files": [{"sha": "5a5834fc98e3d5cf255cd01c1cc04ab8c1a440b2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54625ca1213528d64717d1a95163a2613151beb7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54625ca1213528d64717d1a95163a2613151beb7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=54625ca1213528d64717d1a95163a2613151beb7", "patch": "@@ -1,3 +1,8 @@\n+2012-12-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (Subprogram_Body_to_gnu): Be prepared for a\n+\tby-ref VAR_DECL in the case of an Out parameter passed by copy.\n+\n 2012-12-05  Robert Dewar  <dewar@adacore.com>\n \n \t* par_sco.adb, sem_prag.adb, put_scos.adb, get_scos.adb: Minor"}, {"sha": "f1398e2b6ba452bf3b5bfa39fccc282ccd9d9b77", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54625ca1213528d64717d1a95163a2613151beb7/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54625ca1213528d64717d1a95163a2613151beb7/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=54625ca1213528d64717d1a95163a2613151beb7", "patch": "@@ -3375,16 +3375,22 @@ Subprogram_Body_to_gnu (Node_Id gnat_node)\n \tif (!present_gnu_tree (gnat_param))\n \t  {\n \t    tree gnu_cico_entry = gnu_cico_list;\n+\t    tree gnu_decl;\n \n \t    /* Skip any entries that have been already filled in; they must\n \t       correspond to In Out parameters.  */\n \t    while (gnu_cico_entry && TREE_VALUE (gnu_cico_entry))\n \t      gnu_cico_entry = TREE_CHAIN (gnu_cico_entry);\n \n+\t    /* Do any needed dereferences for by-ref objects.  */\n+\t    gnu_decl = gnat_to_gnu_entity (gnat_param, NULL_TREE, 1);\n+\t    gcc_assert (DECL_P (gnu_decl));\n+\t    if (DECL_BY_REF_P (gnu_decl))\n+\t      gnu_decl = build_unary_op (INDIRECT_REF, NULL_TREE, gnu_decl);\n+\n \t    /* Do any needed references for padded types.  */\n \t    TREE_VALUE (gnu_cico_entry)\n-\t      = convert (TREE_TYPE (TREE_PURPOSE (gnu_cico_entry)),\n-\t\t\t gnat_to_gnu_entity (gnat_param, NULL_TREE, 1));\n+\t      = convert (TREE_TYPE (TREE_PURPOSE (gnu_cico_entry)), gnu_decl);\n \t  }\n     }\n   else"}, {"sha": "b1f6c995bb11b9bd6fc5fa1e218078f2a0dd63e9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54625ca1213528d64717d1a95163a2613151beb7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54625ca1213528d64717d1a95163a2613151beb7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=54625ca1213528d64717d1a95163a2613151beb7", "patch": "@@ -1,3 +1,7 @@\n+2012-12-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/vect10.ad[sb]: New test.\n+\n 2012-12-08  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/vect9.ad[sb]: New test."}, {"sha": "819e2446d7a961cf332222b28369825a009431f7", "filename": "gcc/testsuite/gnat.dg/vect10.adb", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54625ca1213528d64717d1a95163a2613151beb7/gcc%2Ftestsuite%2Fgnat.dg%2Fvect10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54625ca1213528d64717d1a95163a2613151beb7/gcc%2Ftestsuite%2Fgnat.dg%2Fvect10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvect10.adb?ref=54625ca1213528d64717d1a95163a2613151beb7", "patch": "@@ -0,0 +1,29 @@\n+-- { dg-do compile }\n+\n+package body Vect10 is\n+\n+   procedure Add_Mul (X : in out Unit; Y, Z : in Unit) is\n+   begin\n+       X := X + Y * Z;\n+   end;\n+   pragma Inline_Always (Add_Mul);\n+\n+   procedure Proc\n+     (F           : in Rec_Vector;\n+      First_Index : in Natural;\n+      Last_Index  : in Natural;\n+      Result      : out Unit)\n+   is\n+   begin\n+      Result := (others => 0.0);\n+\n+      for I in First_Index + 1 .. Last_Index loop\n+         declare\n+            Local : Rec renames F (I);\n+         begin\n+            Add_Mul (Result, Local.Val, Local.Val);\n+         end;\n+      end loop;\n+   end;\n+\n+end Vect10;"}, {"sha": "aa3aa343233b6197a13103afc81fb755e352dd44", "filename": "gcc/testsuite/gnat.dg/vect10.ads", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54625ca1213528d64717d1a95163a2613151beb7/gcc%2Ftestsuite%2Fgnat.dg%2Fvect10.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54625ca1213528d64717d1a95163a2613151beb7/gcc%2Ftestsuite%2Fgnat.dg%2Fvect10.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvect10.ads?ref=54625ca1213528d64717d1a95163a2613151beb7", "patch": "@@ -0,0 +1,17 @@\n+with Vect9_Pkg; use Vect9_Pkg;\n+\n+package Vect10 is\n+\n+   type Rec is record\n+      Val : Unit;\n+   end record;\n+\n+   type Rec_Vector is array (Positive range <>) of Rec;\n+\n+   procedure Proc\n+     (F            : in Rec_Vector;\n+      First_Index : in Natural;\n+      Last_Index  : in Natural;\n+      Result      : out Unit);\n+\n+end Vect10;"}]}