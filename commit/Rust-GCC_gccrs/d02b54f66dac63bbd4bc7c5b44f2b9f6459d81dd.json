{"sha": "d02b54f66dac63bbd4bc7c5b44f2b9f6459d81dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDAyYjU0ZjY2ZGFjNjNiYmQ0YmM3YzViNDRmMmI5ZjY0NTlkODFkZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2001-02-12T08:34:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2001-02-12T08:34:30Z"}, "message": "c-common.c (constant_fits_type_p): New function.\n\n\t* c-common.c (constant_fits_type_p): New function.\n\t(convert_and_check): Use it.\n\n\t* gcc.c-torture/compile/20010209-1.c: New test.\n\nFrom-SVN: r39596", "tree": {"sha": "0b7df8968036ccd7157ea67cb1f4b25c98fab59a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b7df8968036ccd7157ea67cb1f4b25c98fab59a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d02b54f66dac63bbd4bc7c5b44f2b9f6459d81dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d02b54f66dac63bbd4bc7c5b44f2b9f6459d81dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d02b54f66dac63bbd4bc7c5b44f2b9f6459d81dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d02b54f66dac63bbd4bc7c5b44f2b9f6459d81dd/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1012f1b4ca901ced4d2ff3ccbb64887cbf42381", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1012f1b4ca901ced4d2ff3ccbb64887cbf42381", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1012f1b4ca901ced4d2ff3ccbb64887cbf42381"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "fbaa4c6cd603b20e234c1fd45ce031dceaceda55", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d02b54f66dac63bbd4bc7c5b44f2b9f6459d81dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d02b54f66dac63bbd4bc7c5b44f2b9f6459d81dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d02b54f66dac63bbd4bc7c5b44f2b9f6459d81dd", "patch": "@@ -1,3 +1,8 @@\n+2001-02-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-common.c (constant_fits_type_p): New function.\n+\t(convert_and_check): Use it.\n+\n 2001-02-11  Mark Mitchell  <mark@codesourcery.com>\n \n \t* Makefile.in (GXX_ABI_FLAG): Don't define."}, {"sha": "5d3510c883479570e330279ba4d9c0bddc42112c", "filename": "gcc/c-common.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d02b54f66dac63bbd4bc7c5b44f2b9f6459d81dd/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d02b54f66dac63bbd4bc7c5b44f2b9f6459d81dd/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=d02b54f66dac63bbd4bc7c5b44f2b9f6459d81dd", "patch": "@@ -232,6 +232,7 @@ static void add_attribute\t\tPARAMS ((enum attrs, const char *,\n \t\t\t\t\t\t int, int, int));\n static void init_attributes\t\tPARAMS ((void));\n static int default_valid_lang_attribute PARAMS ((tree, tree, tree, tree));\n+static int constant_fits_type_p\t\tPARAMS ((tree, tree));\n \n /* Keep a stack of if statements.  We record the number of compound\n    statements seen up to the if keyword, as well as the line number\n@@ -1189,6 +1190,20 @@ unsigned_conversion_warning (result, operand)\n     }\n }\n \n+/* Nonzero if constant C has a value that is permissible\n+   for type TYPE (an INTEGER_TYPE).  */\n+\n+static int\n+constant_fits_type_p (c, type)\n+     tree c, type;\n+{\n+  if (TREE_CODE (c) == INTEGER_CST)\n+    return int_fits_type_p (c, type);\n+\n+  c = convert (type, c);\n+  return !TREE_OVERFLOW (c);\n+}     \n+\n /* Convert EXPR to TYPE, warning about conversion problems with constants.\n    Invoke this function on every expression that is converted implicitly,\n    i.e. because of language rules and not because of an explicit cast.  */\n@@ -1216,7 +1231,7 @@ convert_and_check (type, expr)\n \t       don't warn unless pedantic.  */\n \t    if ((pedantic\n \t\t || TREE_UNSIGNED (type)\n-\t\t || ! int_fits_type_p (expr, unsigned_type (type)))\n+\t\t || ! constant_fits_type_p (expr, unsigned_type (type)))\n \t        && skip_evaluation == 0)\n \t      warning (\"overflow in implicit constant conversion\");\n \t}"}, {"sha": "c8832787c323d4ee79b77e71312c3f3656bbc25c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d02b54f66dac63bbd4bc7c5b44f2b9f6459d81dd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d02b54f66dac63bbd4bc7c5b44f2b9f6459d81dd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d02b54f66dac63bbd4bc7c5b44f2b9f6459d81dd", "patch": "@@ -1,3 +1,7 @@\n+2001-02-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c-torture/compile/20010209-1.c: New test.\n+\n 2001-02-11  Jeffrey Oldham  <oldham@codesourcery.com>\n \n \t* g++.old-deja/g++.other/crash26.C: XFAIL if parser produces"}, {"sha": "20434644be676f4df1c815a190f229ae6c6474dd", "filename": "gcc/testsuite/gcc.c-torture/compile/20010209-1.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d02b54f66dac63bbd4bc7c5b44f2b9f6459d81dd/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010209-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d02b54f66dac63bbd4bc7c5b44f2b9f6459d81dd/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010209-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010209-1.c?ref=d02b54f66dac63bbd4bc7c5b44f2b9f6459d81dd", "patch": "@@ -0,0 +1,7 @@\n+short int a;\n+\n+int main (void)\n+{\n+  a = 65535.0;\n+  return 0;\n+}"}]}