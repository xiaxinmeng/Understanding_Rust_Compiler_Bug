{"sha": "9a07cfaf9f9d67cbc41624904ee1f833eb81e2b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWEwN2NmYWY5ZjlkNjdjYmM0MTYyNDkwNGVlMWY4MzNlYjgxZTJiOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-12-22T00:52:30Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-12-22T00:52:30Z"}, "message": "boehm.c (PROCEDURE_OBJECT_DESCRIPTOR): Merge into ..\n\n        * boehm.c (PROCEDURE_OBJECT_DESCRIPTOR): Merge into ..\n        (get_boehm_type_descriptor): ... here.  Arrange for the\n        TREE_TYPE to get set properly.\n\nFrom-SVN: r48261", "tree": {"sha": "a877417b0b3f685c894a76459939bd13797420ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a877417b0b3f685c894a76459939bd13797420ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a07cfaf9f9d67cbc41624904ee1f833eb81e2b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a07cfaf9f9d67cbc41624904ee1f833eb81e2b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a07cfaf9f9d67cbc41624904ee1f833eb81e2b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a07cfaf9f9d67cbc41624904ee1f833eb81e2b9/comments", "author": null, "committer": null, "parents": [{"sha": "4585ae3de289f2174e3c294c6cad953d086d8a8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4585ae3de289f2174e3c294c6cad953d086d8a8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4585ae3de289f2174e3c294c6cad953d086d8a8f"}], "stats": {"total": 49, "additions": 28, "deletions": 21}, "files": [{"sha": "a1773a33a2ace860101540e0d44f3d000c59ad7c", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a07cfaf9f9d67cbc41624904ee1f833eb81e2b9/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a07cfaf9f9d67cbc41624904ee1f833eb81e2b9/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=9a07cfaf9f9d67cbc41624904ee1f833eb81e2b9", "patch": "@@ -1,3 +1,9 @@\n+2001-12-21  Richard Henderson  <rth@redhat.com>\n+\n+\t* boehm.c (PROCEDURE_OBJECT_DESCRIPTOR): Merge into ..\n+\t(get_boehm_type_descriptor): ... here.  Arrange for the\n+\tTREE_TYPE to get set properly.\n+\n 2001-12-21  Richard Henderson  <rth@redhat.com>\n \n \t* class.c (compile_resource_file): Set TREE_PUBLIC on the constructor\n@@ -774,7 +780,7 @@ Tue Oct 23 14:02:17 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n 2001-08-28  Per Bothner  <per@bothner.com>\n \n \t* jcf-write.c  (generate_bytecode_insns):  For increments and\n-        decrements just recurse to push constant.  Improvement on Mark's patch.\n+\tdecrements just recurse to push constant.  Improvement on Mark's patch.\n \n 2001-08-28  Mark Mitchell  <mark@codesourcery.com>\n \n@@ -981,7 +987,7 @@ Tue Oct 23 14:02:17 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2001-08-06  Richard Henderson  <rth@redhat.com>\n \n-        * class.c (emit_register_classes): Pass a symbol_ref and priority\n+\t* class.c (emit_register_classes): Pass a symbol_ref and priority\n \tto assemble_constructor.\n \n 2001-08-02  Alexandre Petit-Bianco  <apbianco@redhat.com>\n@@ -993,8 +999,8 @@ Tue Oct 23 14:02:17 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2001-08-01  Jeff Sturm  <jsturm@one-point.com>\n \n-        * java-tree.h (BUILD_FILENAME_IDENTIFIER_NODE):\n-        Use ggc_add_tree_root to register roots.\n+\t* java-tree.h (BUILD_FILENAME_IDENTIFIER_NODE):\n+\tUse ggc_add_tree_root to register roots.\n \n 2001-07-31  Alexandre Petit-Bianco  <apbianco@redhat.com>\n \n@@ -1252,7 +1258,7 @@ Tue Oct 23 14:02:17 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n 2001-05-18  Per Bothner  <per@bothner.com>\n \n \t* jvspec.c (lang_specific_pre_link):  Re-arrange the linker\n-        command line so the jvgenmain-generated main program comes first.\n+\tcommand line so the jvgenmain-generated main program comes first.\n \n 2001-05-15  Tom Tromey  <tromey@redhat.com>\n \n@@ -1287,7 +1293,7 @@ Tue Oct 23 14:02:17 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2001-05-03  Mo DeJong  <mdejong@redhat.com>\n \n-        * lex.c (java_new_lexer): Call iconv_close on temp handle used to\n+\t* lex.c (java_new_lexer): Call iconv_close on temp handle used to\n \tcheck for byte swap.\n \n 2000-05-02  Jeff Sturm  <jsturm@one-point.com>\n@@ -1744,8 +1750,8 @@ Tue Oct 23 14:02:17 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2001-03-19  Andrew Haley  <aph@cambridge.redhat.com>\n \n-        * class.c (build_static_field_ref): Call make_decl_rtl() after\n-        setting the DECL_EXTERNAL flag.\n+\t* class.c (build_static_field_ref): Call make_decl_rtl() after\n+\tsetting the DECL_EXTERNAL flag.\n \n 2001-03-17  Per Bothner  <per@bothner.com>\n \n@@ -1918,7 +1924,7 @@ Fri Feb 23 15:28:39 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t* Make-lang.in (jvspec.o): Modify rule to match that of cp/g++spec.o.\n \n 2001-02-14  Tom Tromey  <tromey@redhat.com>\n-            Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\t    Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \tFix for PR java/1261.\n \t* typeck.c (build_java_array_type): Add public `clone' method to\n@@ -2545,7 +2551,7 @@ Sun Feb  4 15:52:44 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \t* gen-table.pl: new file.\n \n 2000-11-20  Tom Tromey  <tromey@cygnus.com>\n-            Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\t    Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (java_complete_lhs): Only allow compound assignment of\n \treference type if type is String."}, {"sha": "3eb20434d26f43f1bc231f65ac7e122c12dca16d", "filename": "gcc/java/boehm.c", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a07cfaf9f9d67cbc41624904ee1f833eb81e2b9/gcc%2Fjava%2Fboehm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a07cfaf9f9d67cbc41624904ee1f833eb81e2b9/gcc%2Fjava%2Fboehm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fboehm.c?ref=9a07cfaf9f9d67cbc41624904ee1f833eb81e2b9", "patch": "@@ -43,14 +43,6 @@ static void set_bit PARAMS ((unsigned HOST_WIDE_INT *,\n \t\t\t     unsigned HOST_WIDE_INT *,\n \t\t\t     unsigned int));\n \n-/* Compute a procedure-based object descriptor.  We know that our\n-   `kind' is 0, and `env' is likewise 0, so we have a simple\n-   computation.  From the GC sources:\n-\t    (((((env) << LOG_MAX_MARK_PROCS) | (proc_index)) << DS_TAG_BITS) \\\n-\t    | DS_PROC)\n-   Here DS_PROC == 2.  */\n-#define PROCEDURE_OBJECT_DESCRIPTOR build_int_2 (2, 0)\n-\n /* Treat two HOST_WIDE_INT's as a contiguous bitmap, with bit 0 being\n    the least significant.  This function sets bit N in the bitmap.  */\n static void\n@@ -167,7 +159,7 @@ get_boehm_type_descriptor (tree type)\n \n   /* If we have a type of unknown size, use a proc.  */\n   if (int_size_in_bytes (type) == -1)\n-    return PROCEDURE_OBJECT_DESCRIPTOR;\n+    goto procedure_object_descriptor;\n \n   bit = POINTER_SIZE / BITS_PER_UNIT;\n   /* The size of this node has to be known.  And, we only support 32\n@@ -187,7 +179,7 @@ get_boehm_type_descriptor (tree type)\n   ubit = (unsigned int) bit;\n \n   if (type == class_type_node)\n-    return PROCEDURE_OBJECT_DESCRIPTOR;\n+    goto procedure_object_descriptor;\n \n   field = TYPE_FIELDS (type);\n   mark_reference_fields (field, &low, &high, ubit,\n@@ -227,7 +219,16 @@ get_boehm_type_descriptor (tree type)\n       value = build_int_2 (low, high);\n     }\n   else\n-    value = PROCEDURE_OBJECT_DESCRIPTOR;\n+    {\n+      /* Compute a procedure-based object descriptor.  We know that our\n+\t `kind' is 0, and `env' is likewise 0, so we have a simple\n+\t computation.  From the GC sources:\n+\t    (((((env) << LOG_MAX_MARK_PROCS) | (proc_index)) << DS_TAG_BITS) \\\n+\t    | DS_PROC)\n+\t Here DS_PROC == 2.  */\n+    procedure_object_descriptor:\n+      value = build_int_2 (2, 0);\n+    }\n \n   TREE_TYPE (value) = type_for_mode (ptr_mode, 1);\n   return value;"}]}