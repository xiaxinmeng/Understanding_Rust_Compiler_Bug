{"sha": "bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI0YWMwM2I4ZmZkYTI2ZDNiMWQ1NWQ0MzNiNzc3NTA5ZGJjNWU0Yw==", "commit": {"author": {"name": "Sudakshina Das", "email": "sudi.das@arm.com", "date": "2018-03-22T17:24:41Z"}, "committer": {"name": "Sudakshina Das", "email": "sudi@gcc.gnu.org", "date": "2018-03-22T17:24:41Z"}, "message": "[ARM][PR target/84826] Fix ICE in extract_insn, at recog.c:2304 on\narm-linux-gnueabi\n\nThe ICE in the bug report was happening because the macro\nUSE_RETURN_INSN (FALSE) was returning different values at different points\nin the compilation. This was internally occurring because the function\narm_compute_static_chain_stack_bytes () which was dependent on\narm_r3_live_at_start_p () was giving a different value after the cond_exec\ninstructions were created in ce3 causing the liveness of r3 to escape up\nto the start block.\n\nThe function arm_compute_static_chain_stack_bytes () should really only\ncompute the value once duringepilogue/prologue stage. This pass introduces\na new member 'static_chain_stack_bytes' to the target definition of the\nstruct machine_function which gets calculated in expand_prologue and is the\nvalue that is returned by arm_compute_static_chain_stack_bytes () beyond that.\n\nChangeLog entries:\n\n*** gcc/ChangeLog ***\n\n2018-03-22  Sudakshina Das  <sudi.das@arm.com>\n\n\tPR target/84826\n\t* config/arm/arm.h (machine_function): Add static_chain_stack_bytes.\n\t* config/arm/arm.c (arm_compute_static_chain_stack_bytes): Avoid\n\tre-computing once computed.\n\t(arm_expand_prologue): Compute machine->static_chain_stack_bytes.\n\t(arm_init_machine_status): Initialize\n\tmachine->static_chain_stack_bytes.\n\n*** gcc/testsuite/ChangeLog ***\n\n2018-03-22  Sudakshina Das  <sudi.das@arm.com>\n\n\tPR target/84826\n\t* gcc.target/arm/pr84826.c: New test.\n\nFrom-SVN: r258777", "tree": {"sha": "adaaf81bbf737cd7ad08fc0dd9c5425ba529deb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adaaf81bbf737cd7ad08fc0dd9c5425ba529deb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c/comments", "author": {"login": "sudakshina-das-arm", "id": 28538945, "node_id": "MDQ6VXNlcjI4NTM4OTQ1", "avatar_url": "https://avatars.githubusercontent.com/u/28538945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sudakshina-das-arm", "html_url": "https://github.com/sudakshina-das-arm", "followers_url": "https://api.github.com/users/sudakshina-das-arm/followers", "following_url": "https://api.github.com/users/sudakshina-das-arm/following{/other_user}", "gists_url": "https://api.github.com/users/sudakshina-das-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/sudakshina-das-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sudakshina-das-arm/subscriptions", "organizations_url": "https://api.github.com/users/sudakshina-das-arm/orgs", "repos_url": "https://api.github.com/users/sudakshina-das-arm/repos", "events_url": "https://api.github.com/users/sudakshina-das-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/sudakshina-das-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "253db5538bfa249acd24d3aa30a3e28bcf8046d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/253db5538bfa249acd24d3aa30a3e28bcf8046d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/253db5538bfa249acd24d3aa30a3e28bcf8046d1"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "57bb60a9043f6e33a30b4dc04e2234cde1cacea4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c", "patch": "@@ -1,3 +1,13 @@\n+2018-03-22  Sudakshina Das  <sudi.das@arm.com>\n+\n+\tPR target/84826\n+\t* config/arm/arm.h (machine_function): Add static_chain_stack_bytes.\n+\t* config/arm/arm.c (arm_compute_static_chain_stack_bytes): Avoid\n+\tre-computing once computed.\n+\t(arm_expand_prologue): Compute machine->static_chain_stack_bytes.\n+\t(arm_init_machine_status): Initialize\n+\tmachine->static_chain_stack_bytes.\n+\n 2018-03-22  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n \n \tPR target/84760"}, {"sha": "b98195603e0b05fa9affc0f2e64d60c5bb9f285e", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c", "patch": "@@ -19392,6 +19392,11 @@ arm_r3_live_at_start_p (void)\n static int\n arm_compute_static_chain_stack_bytes (void)\n {\n+  /* Once the value is updated from the init value of -1, do not\n+     re-compute.  */\n+  if (cfun->machine->static_chain_stack_bytes != -1)\n+    return cfun->machine->static_chain_stack_bytes;\n+\n   /* See the defining assertion in arm_expand_prologue.  */\n   if (IS_NESTED (arm_current_func_type ())\n       && ((TARGET_APCS_FRAME && frame_pointer_needed && TARGET_ARM)\n@@ -21699,6 +21704,11 @@ arm_expand_prologue (void)\n       emit_insn (gen_movsi (stack_pointer_rtx, r1));\n     }\n \n+  /* Let's compute the static_chain_stack_bytes required and store it.  Right\n+     now the value must be -1 as stored by arm_init_machine_status ().  */\n+  cfun->machine->static_chain_stack_bytes\n+    = arm_compute_static_chain_stack_bytes ();\n+\n   /* The static chain register is the same as the IP register.  If it is\n      clobbered when creating the frame, we need to save and restore it.  */\n   clobber_ip = IS_NESTED (func_type)\n@@ -24875,6 +24885,7 @@ arm_init_machine_status (void)\n #if ARM_FT_UNKNOWN != 0\n   machine->func_type = ARM_FT_UNKNOWN;\n #endif\n+  machine->static_chain_stack_bytes = -1;\n   return machine;\n }\n "}, {"sha": "2809112f68dd83eeb5b4764e82d552d8b8be3e4e", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c", "patch": "@@ -1384,6 +1384,9 @@ typedef struct GTY(()) machine_function\n   machine_mode thumb1_cc_mode;\n   /* Set to 1 after arm_reorg has started.  */\n   int after_arm_reorg;\n+  /* The number of bytes used to store the static chain register on the\n+     stack, above the stack frame.  */\n+  int static_chain_stack_bytes;\n }\n machine_function;\n #endif"}, {"sha": "d1ddb79a8090bb917bab3ac7fa2e842f0e7d7917", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c", "patch": "@@ -1,3 +1,8 @@\n+2018-03-22  Sudakshina Das  <sudi.das@arm.com>\n+\n+\tPR target/84826\n+\t* gcc.target/arm/pr84826.c: New test.\n+\n 2018-03-22  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/arm/addr-modes-float.c: Move dg-do before"}, {"sha": "c61c548da29a9cab6fd359ec222d3a134ac07c4e", "filename": "gcc/testsuite/gcc.target/arm/pr84826.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr84826.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr84826.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr84826.c?ref=bb4ac03b8ffda26d3b1d55d433b777509dbc5e4c", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Ofast -fstack-clash-protection\" } */\n+\n+void d (void *);\n+\n+void a ()\n+{\n+  int b;\n+  void bar (int c)\n+  {\n+    if (__builtin_expect (c, 0))\n+      ++b;\n+  }\n+  d (bar);\n+}"}]}