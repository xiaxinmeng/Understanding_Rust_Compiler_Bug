{"sha": "b24d8acbfffe30f40e280f11f23adac81b1e7f0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI0ZDhhY2JmZmZlMzBmNDBlMjgwZjExZjIzYWRhYzgxYjFlN2YwYw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2021-04-29T19:50:47Z"}, "committer": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2021-04-29T19:50:47Z"}, "message": "preprocessor: Handle digit separators in #line [PR82359]\n\nAs reported in bug 82359, the preprocessor does not allow C++ digit\nseparators in the line number in a #line directive, despite the\nstandard syntax for that directive using digit-sequence which allows\ndigit separators.\n\nThere is some confusion in that bug about whether C++ is meant to\nallow digit separators there or not, but the last comment there\nsuggests they are meant to be allowed, and the version of digit\nseparators accepted for C2X at the March meeting explicitly mentions\ndigit separators in the #line specification to avoid any ambiguity\nthere.\n\nThis patch thus adds code to handle digit separators in the line\nnumber in #line, as part of the preparation for enabling digit\nseparators in C2X mode.  The code changed does not contain any\nconditionals for whether digit separators are supported in the chosen\nlanguage version, because that was handled earlier in pp-number lexing\nand if they aren't supported they won't appear in the string passed to\nthat function.  It does however make sure not to allow adjacent digit\nseparators because those are only handled at a later stage of lexing\nat present.  (Problems with how certain source character sequences\ninvolving digit separators that don't actually match the pp-number\nsyntax get lexed as a pp-number and only diagnosed later, if at all,\nare bugs 83873 and 97604, to be addressed separately.)\n\nMaking the change in this location will have the effect of allowing\ndigit separators in the \"# <line-number> <file> <flags>\" form of\ndirective as well as #line; I don't think that's a problem.\n\nBootstrapped with no regressions for x86_64-pc-linux-gnu.\n\nlibcpp/\n\tPR preprocessor/82359\n\t* directives.c (strtolinenum): Handle digit separators.\n\ngcc/testsuite/\n\tPR preprocessor/82359\n\t* g++.dg/cpp1y/digit-sep-line.C,\n\tg++.dg/cpp1y/digit-sep-line-neg.C: New tests.", "tree": {"sha": "4ff4db5fbe13d87dafae9e20e9f59426da278cf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ff4db5fbe13d87dafae9e20e9f59426da278cf3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b24d8acbfffe30f40e280f11f23adac81b1e7f0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b24d8acbfffe30f40e280f11f23adac81b1e7f0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b24d8acbfffe30f40e280f11f23adac81b1e7f0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b24d8acbfffe30f40e280f11f23adac81b1e7f0c/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f03973251db33ad8d08c03ac570cd378e46d3a20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f03973251db33ad8d08c03ac570cd378e46d3a20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f03973251db33ad8d08c03ac570cd378e46d3a20"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "fa3b13521092effd13a016dd375c707f96b052fb", "filename": "gcc/testsuite/g++.dg/cpp1y/digit-sep-line-neg.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24d8acbfffe30f40e280f11f23adac81b1e7f0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fdigit-sep-line-neg.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24d8acbfffe30f40e280f11f23adac81b1e7f0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fdigit-sep-line-neg.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fdigit-sep-line-neg.C?ref=b24d8acbfffe30f40e280f11f23adac81b1e7f0c", "patch": "@@ -0,0 +1,4 @@\n+// Test digit separators in #line (bug 82359).  Test invalid usage.\n+// { dg-do preprocess { target c++14 } }\n+\n+#line 0''123 // { dg-error \"is not a positive integer\" }"}, {"sha": "48846e4222198c22df3162d3b703eebd78b6800a", "filename": "gcc/testsuite/g++.dg/cpp1y/digit-sep-line.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24d8acbfffe30f40e280f11f23adac81b1e7f0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fdigit-sep-line.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24d8acbfffe30f40e280f11f23adac81b1e7f0c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fdigit-sep-line.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fdigit-sep-line.C?ref=b24d8acbfffe30f40e280f11f23adac81b1e7f0c", "patch": "@@ -0,0 +1,8 @@\n+// Test digit separators in #line (bug 82359).\n+// { dg-do compile { target c++14 } }\n+\n+#line 0'123\n+static_assert (__LINE__ == 123, \"#line with digit separator\");\n+\n+#line 4'56'7'8'9\n+static_assert (__LINE__ == 456789, \"#line with digit separator\");"}, {"sha": "795f93e664bc18b1ab6e311bb3f4aa72e68e8e9e", "filename": "libcpp/directives.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24d8acbfffe30f40e280f11f23adac81b1e7f0c/libcpp%2Fdirectives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24d8acbfffe30f40e280f11f23adac81b1e7f0c/libcpp%2Fdirectives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fdirectives.c?ref=b24d8acbfffe30f40e280f11f23adac81b1e7f0c", "patch": "@@ -922,12 +922,19 @@ strtolinenum (const uchar *str, size_t len, linenum_type *nump, bool *wrapped)\n   linenum_type reg = 0;\n \n   uchar c;\n+  bool seen_digit_sep = false;\n   *wrapped = false;\n   while (len--)\n     {\n       c = *str++;\n+      if (!seen_digit_sep && c == '\\'' && len)\n+\t{\n+\t  seen_digit_sep = true;\n+\t  continue;\n+\t}\n       if (!ISDIGIT (c))\n \treturn true;\n+      seen_digit_sep = false;\n       if (reg > ((linenum_type) -1) / 10)\n \t*wrapped = true;\n       reg *= 10;"}]}