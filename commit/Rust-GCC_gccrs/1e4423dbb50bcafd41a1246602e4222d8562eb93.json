{"sha": "1e4423dbb50bcafd41a1246602e4222d8562eb93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU0NDIzZGJiNTBiY2FmZDQxYTEyNDY2MDJlNDIyMmQ4NTYyZWI5Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-12-30T16:01:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-12-30T16:01:50Z"}, "message": "sse.md (vgf2p8affineinvqb_<mode><mask_name>, [...]): Formatting fixes.\n\n\t* config/i386/sse.md (vgf2p8affineinvqb_<mode><mask_name>,\n\tvgf2p8affineqb_<mode><mask_name>, vgf2p8mulb_<mode><mask_name>,\n\tvpshrd_<mode><mask_name>, vpshld_<mode><mask_name>,\n\tvpshrdv_<mode>, vpshrdv_<mode>_mask, vpshrdv_<mode>_maskz,\n\tvpshrdv_<mode>_maskz_1, vpshldv_<mode>, vpshldv_<mode>_mask,\n\tvpshldv_<mode>_maskz, vpshldv_<mode>_maskz_1, vpdpbusd_<mode>,\n\tvpdpbusd_<mode>_mask, vpdpbusd_<mode>_maskz, vpdpbusd_<mode>_maskz_1,\n\tvpdpbusds_<mode>, vpdpbusds_<mode>_mask, vpdpbusds_<mode>_maskz,\n\tvpdpbusds_<mode>_maskz_1, vpdpwssd_<mode>, vpdpwssd_<mode>_mask,\n\tvpdpwssd_<mode>_maskz, vpdpwssd_<mode>_maskz_1, vpdpwssds_<mode>,\n\tvpdpwssds_<mode>_mask, vpdpwssds_<mode>_maskz,\n\tvpdpwssds_<mode>_maskz_1, vaesdec_<mode>, vaesdeclast_<mode>,\n\tvaesenc_<mode>, vpclmulqdq_<mode>,\n\tavx512vl_vpshufbitqmb<mode><mask_scalar_merge_name>): Formatting fixes.\n\nFrom-SVN: r256044", "tree": {"sha": "e287e2fe6cab3e3625930cba89cab45008677628", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e287e2fe6cab3e3625930cba89cab45008677628"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e4423dbb50bcafd41a1246602e4222d8562eb93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e4423dbb50bcafd41a1246602e4222d8562eb93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e4423dbb50bcafd41a1246602e4222d8562eb93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e4423dbb50bcafd41a1246602e4222d8562eb93/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88e4ed6481fb2d044d9753557ed5253481f1d914", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88e4ed6481fb2d044d9753557ed5253481f1d914", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88e4ed6481fb2d044d9753557ed5253481f1d914"}], "stats": {"total": 316, "additions": 171, "deletions": 145}, "files": [{"sha": "18a92a980559af8d97f9d20445955507a152bacb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e4423dbb50bcafd41a1246602e4222d8562eb93/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e4423dbb50bcafd41a1246602e4222d8562eb93/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e4423dbb50bcafd41a1246602e4222d8562eb93", "patch": "@@ -1,3 +1,20 @@\n+2017-12-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/sse.md (vgf2p8affineinvqb_<mode><mask_name>,\n+\tvgf2p8affineqb_<mode><mask_name>, vgf2p8mulb_<mode><mask_name>,\n+\tvpshrd_<mode><mask_name>, vpshld_<mode><mask_name>,\n+\tvpshrdv_<mode>, vpshrdv_<mode>_mask, vpshrdv_<mode>_maskz,\n+\tvpshrdv_<mode>_maskz_1, vpshldv_<mode>, vpshldv_<mode>_mask,\n+\tvpshldv_<mode>_maskz, vpshldv_<mode>_maskz_1, vpdpbusd_<mode>,\n+\tvpdpbusd_<mode>_mask, vpdpbusd_<mode>_maskz, vpdpbusd_<mode>_maskz_1,\n+\tvpdpbusds_<mode>, vpdpbusds_<mode>_mask, vpdpbusds_<mode>_maskz,\n+\tvpdpbusds_<mode>_maskz_1, vpdpwssd_<mode>, vpdpwssd_<mode>_mask,\n+\tvpdpwssd_<mode>_maskz, vpdpwssd_<mode>_maskz_1, vpdpwssds_<mode>,\n+\tvpdpwssds_<mode>_mask, vpdpwssds_<mode>_maskz,\n+\tvpdpwssds_<mode>_maskz_1, vaesdec_<mode>, vaesdeclast_<mode>,\n+\tvaesenc_<mode>, vpclmulqdq_<mode>,\n+\tavx512vl_vpshufbitqmb<mode><mask_scalar_merge_name>): Formatting fixes.\n+\n 2017-12-28  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* builtins.def: (_Float<N> and _Float<N>X BUILT_IN_CEIL): Add"}, {"sha": "105b5cf609281a282800cfd65ed6c17fbe4573dc", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 154, "deletions": 145, "changes": 299, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e4423dbb50bcafd41a1246602e4222d8562eb93/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e4423dbb50bcafd41a1246602e4222d8562eb93/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=1e4423dbb50bcafd41a1246602e4222d8562eb93", "patch": "@@ -20082,10 +20082,11 @@\n \n (define_insn \"vgf2p8affineinvqb_<mode><mask_name>\"\n   [(set (match_operand:VI1_AVX512F 0 \"register_operand\" \"=x,x,v\")\n-\t(unspec:VI1_AVX512F [(match_operand:VI1_AVX512F 1 \"register_operand\" \"%0,x,v\")\n-\t\t\t       (match_operand:VI1_AVX512F 2 \"nonimmediate_operand\" \"xBm,xm,vm\")\n-\t\t\t       (match_operand:QI 3 \"const_0_to_255_operand\" \"n,n,n\")]\n-\t\t\t      UNSPEC_GF2P8AFFINEINV))]\n+\t(unspec:VI1_AVX512F\n+\t  [(match_operand:VI1_AVX512F 1 \"register_operand\" \"%0,x,v\")\n+\t   (match_operand:VI1_AVX512F 2 \"nonimmediate_operand\" \"xBm,xm,vm\")\n+\t   (match_operand:QI 3 \"const_0_to_255_operand\" \"n,n,n\")]\n+\t  UNSPEC_GF2P8AFFINEINV))]\n   \"TARGET_GFNI\"\n   \"@\n    gf2p8affineinvqb\\t{%3, %2, %0| %0, %2, %3}\n@@ -20099,10 +20100,11 @@\n \n (define_insn \"vgf2p8affineqb_<mode><mask_name>\"\n   [(set (match_operand:VI1_AVX512F 0 \"register_operand\" \"=x,x,v\")\n-\t(unspec:VI1_AVX512F [(match_operand:VI1_AVX512F 1 \"register_operand\" \"%0,x,v\")\n-\t\t\t       (match_operand:VI1_AVX512F 2 \"nonimmediate_operand\" \"xBm,xm,vm\")\n-\t\t\t       (match_operand:QI 3 \"const_0_to_255_operand\" \"n,n,n\")]\n-\t\t\t      UNSPEC_GF2P8AFFINE))]\n+\t(unspec:VI1_AVX512F\n+\t  [(match_operand:VI1_AVX512F 1 \"register_operand\" \"%0,x,v\")\n+\t   (match_operand:VI1_AVX512F 2 \"nonimmediate_operand\" \"xBm,xm,vm\")\n+\t   (match_operand:QI 3 \"const_0_to_255_operand\" \"n,n,n\")]\n+\t  UNSPEC_GF2P8AFFINE))]\n   \"TARGET_GFNI\"\n   \"@\n    gf2p8affineqb\\t{%3, %2, %0| %0, %2, %3}\n@@ -20116,9 +20118,10 @@\n \n (define_insn \"vgf2p8mulb_<mode><mask_name>\"\n   [(set (match_operand:VI1_AVX512F 0 \"register_operand\" \"=x,x,v\")\n-\t(unspec:VI1_AVX512F [(match_operand:VI1_AVX512F 1 \"register_operand\" \"%0,x,v\")\n-\t\t\t       (match_operand:VI1_AVX512F 2 \"nonimmediate_operand\" \"xBm,xm,vm\")]\n-\t\t\t      UNSPEC_GF2P8MUL))]\n+\t(unspec:VI1_AVX512F\n+\t  [(match_operand:VI1_AVX512F 1 \"register_operand\" \"%0,x,v\")\n+\t   (match_operand:VI1_AVX512F 2 \"nonimmediate_operand\" \"xBm,xm,vm\")]\n+\t  UNSPEC_GF2P8MUL))]\n   \"TARGET_GFNI\"\n   \"@\n    gf2p8mulb\\t{%2, %0| %0, %2}\n@@ -20134,9 +20137,9 @@\n   [(set (match_operand:VI248_VLBW 0 \"register_operand\" \"=v\")\n \t(unspec:VI248_VLBW\n \t  [(match_operand:VI248_VLBW 1 \"register_operand\" \"v\")\n-\t(match_operand:VI248_VLBW 2 \"nonimmediate_operand\" \"vm\")\n-\t(match_operand:SI 3 \"const_0_to_255_operand\" \"n\")\n-] UNSPEC_VPSHRD))]\n+\t   (match_operand:VI248_VLBW 2 \"nonimmediate_operand\" \"vm\")\n+\t   (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")]\n+\t  UNSPEC_VPSHRD))]\n   \"TARGET_AVX512VBMI2\"\n   \"vpshrd<ssemodesuffix>\\t{%3, %2, %1, %0<mask_operand4>|%0<mask_operand4>, %1, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))])\n@@ -20145,9 +20148,9 @@\n   [(set (match_operand:VI248_VLBW 0 \"register_operand\" \"=v\")\n \t(unspec:VI248_VLBW\n \t  [(match_operand:VI248_VLBW 1 \"register_operand\" \"v\")\n-\t(match_operand:VI248_VLBW 2 \"nonimmediate_operand\" \"vm\")\n-\t(match_operand:SI 3 \"const_0_to_255_operand\" \"n\")\n-] UNSPEC_VPSHLD))]\n+\t   (match_operand:VI248_VLBW 2 \"nonimmediate_operand\" \"vm\")\n+\t   (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")]\n+\t  UNSPEC_VPSHLD))]\n   \"TARGET_AVX512VBMI2\"\n   \"vpshld<ssemodesuffix>\\t{%3, %2, %1, %0<mask_operand4>|%0<mask_operand4>, %1, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))])\n@@ -20157,23 +20160,23 @@\n \t(unspec:VI248_VLBW\n \t  [(match_operand:VI248_VLBW 1 \"register_operand\" \"0\")\n \t   (match_operand:VI248_VLBW 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI248_VLBW 3 \"nonimmediate_operand\" \"vm\")\n-] UNSPEC_VPSHRDV))]\n+\t   (match_operand:VI248_VLBW 3 \"nonimmediate_operand\" \"vm\")]\n+\t  UNSPEC_VPSHRDV))]\n   \"TARGET_AVX512VBMI2\"\n   \"vpshrdv<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"vpshrdv_<mode>_mask\"\n   [(set (match_operand:VI248_VLBW 0 \"register_operand\" \"=v\")\n-\t(vec_merge:VI248_VLBW (unspec:VI248_VLBW\n-\t  [(match_operand:VI248_VLBW 1 \"register_operand\" \"0\")\n-\t   (match_operand:VI248_VLBW 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI248_VLBW 3 \"nonimmediate_operand\" \"vm\")\n-\t] UNSPEC_VPSHRDV)\n-           (match_dup 1)\n-           (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\"))\n-)]\n+\t(vec_merge:VI248_VLBW\n+\t  (unspec:VI248_VLBW\n+\t    [(match_operand:VI248_VLBW 1 \"register_operand\" \"0\")\n+\t     (match_operand:VI248_VLBW 2 \"register_operand\" \"v\")\n+\t     (match_operand:VI248_VLBW 3 \"nonimmediate_operand\" \"vm\")]\n+\t    UNSPEC_VPSHRDV)\n+\t  (match_dup 1)\n+\t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\")))]\n   \"TARGET_AVX512VBMI2\"\n   \"vpshrdv<ssemodesuffix>\\t{%3, %2, %0%{%4%}|%0%{%4%}, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))\n@@ -20187,22 +20190,23 @@\n    (match_operand:<avx512fmaskmode> 4 \"register_operand\")]\n   \"TARGET_AVX512VBMI2\"\n {\n-  emit_insn (gen_vpshrdv_<mode>_maskz_1 (\n-    operands[0], operands[1], operands[2], operands[3],\n-    CONST0_RTX (<MODE>mode), operands[4]));\n+  emit_insn (gen_vpshrdv_<mode>_maskz_1 (operands[0], operands[1],\n+\t\t\t\t\t operands[2], operands[3],\n+\t\t\t\t\t CONST0_RTX (<MODE>mode),\n+\t\t\t\t\t\t     operands[4]));\n   DONE;\n })\n \n (define_insn \"vpshrdv_<mode>_maskz_1\"\n   [(set (match_operand:VI248_VLBW 0 \"register_operand\" \"=v\")\n-\t(vec_merge:VI248_VLBW (unspec:VI248_VLBW\n-\t  [(match_operand:VI248_VLBW 1 \"register_operand\" \"0\")\n-\t   (match_operand:VI248_VLBW 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI248_VLBW 3 \"nonimmediate_operand\" \"vm\")\n-\t] UNSPEC_VPSHRDV)\n+\t(vec_merge:VI248_VLBW\n+\t  (unspec:VI248_VLBW\n+\t    [(match_operand:VI248_VLBW 1 \"register_operand\" \"0\")\n+\t     (match_operand:VI248_VLBW 2 \"register_operand\" \"v\")\n+\t     (match_operand:VI248_VLBW 3 \"nonimmediate_operand\" \"vm\")]\n+\t    UNSPEC_VPSHRDV)\n \t  (match_operand:VI248_VLBW 4 \"const0_operand\" \"C\")\n-          (match_operand:<avx512fmaskmode> 5 \"register_operand\" \"Yk\"))\n-)]\n+\t  (match_operand:<avx512fmaskmode> 5 \"register_operand\" \"Yk\")))]\n   \"TARGET_AVX512VBMI2\"\n   \"vpshrdv<ssemodesuffix>\\t{%3, %2, %0%{%5%}%{z%}|%0%{%5%}%{z%}, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))\n@@ -20213,23 +20217,23 @@\n \t(unspec:VI248_VLBW\n \t  [(match_operand:VI248_VLBW 1 \"register_operand\" \"0\")\n \t   (match_operand:VI248_VLBW 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI248_VLBW 3 \"nonimmediate_operand\" \"vm\")\n-] UNSPEC_VPSHLDV))]\n+\t   (match_operand:VI248_VLBW 3 \"nonimmediate_operand\" \"vm\")]\n+\t  UNSPEC_VPSHLDV))]\n   \"TARGET_AVX512VBMI2\"\n   \"vpshldv<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"vpshldv_<mode>_mask\"\n   [(set (match_operand:VI248_VLBW 0 \"register_operand\" \"=v\")\n-\t(vec_merge:VI248_VLBW (unspec:VI248_VLBW\n-\t  [(match_operand:VI248_VLBW 1 \"register_operand\" \"0\")\n-\t   (match_operand:VI248_VLBW 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI248_VLBW 3 \"nonimmediate_operand\" \"vm\")\n-\t] UNSPEC_VPSHLDV)\n-\t   (match_dup 1)\n-\t   (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\"))\n-)]\n+\t(vec_merge:VI248_VLBW\n+\t  (unspec:VI248_VLBW\n+\t    [(match_operand:VI248_VLBW 1 \"register_operand\" \"0\")\n+\t     (match_operand:VI248_VLBW 2 \"register_operand\" \"v\")\n+\t     (match_operand:VI248_VLBW 3 \"nonimmediate_operand\" \"vm\")]\n+\t    UNSPEC_VPSHLDV)\n+\t  (match_dup 1)\n+\t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\")))]\n   \"TARGET_AVX512VBMI2\"\n   \"vpshldv<ssemodesuffix>\\t{%3, %2, %0%{%4%}|%0%{%4%}, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))\n@@ -20243,22 +20247,23 @@\n    (match_operand:<avx512fmaskmode> 4 \"register_operand\")]\n   \"TARGET_AVX512VBMI2\"\n {\n-  emit_insn (gen_vpshldv_<mode>_maskz_1 (\n-    operands[0], operands[1], operands[2], operands[3],\n-    CONST0_RTX (<MODE>mode), operands[4]));\n+  emit_insn (gen_vpshldv_<mode>_maskz_1 (operands[0], operands[1],\n+\t\t\t\t\t operands[2], operands[3],\n+\t\t\t\t\t CONST0_RTX (<MODE>mode),\n+\t\t\t\t\t\t     operands[4]));\n   DONE;\n })\n \n (define_insn \"vpshldv_<mode>_maskz_1\"\n   [(set (match_operand:VI248_VLBW 0 \"register_operand\" \"=v\")\n-\t(vec_merge:VI248_VLBW (unspec:VI248_VLBW\n-\t  [(match_operand:VI248_VLBW 1 \"register_operand\" \"0\")\n-\t   (match_operand:VI248_VLBW 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI248_VLBW 3 \"nonimmediate_operand\" \"vm\")\n-\t] UNSPEC_VPSHLDV)\n+\t(vec_merge:VI248_VLBW\n+\t  (unspec:VI248_VLBW\n+\t    [(match_operand:VI248_VLBW 1 \"register_operand\" \"0\")\n+\t     (match_operand:VI248_VLBW 2 \"register_operand\" \"v\")\n+\t     (match_operand:VI248_VLBW 3 \"nonimmediate_operand\" \"vm\")]\n+\t    UNSPEC_VPSHLDV)\n \t  (match_operand:VI248_VLBW 4 \"const0_operand\" \"C\")\n-\t  (match_operand:<avx512fmaskmode> 5 \"register_operand\" \"Yk\"))\n-)]\n+\t  (match_operand:<avx512fmaskmode> 5 \"register_operand\" \"Yk\")))]\n   \"TARGET_AVX512VBMI2\"\n   \"vpshldv<ssemodesuffix>\\t{%3, %2, %0%{%5%}%{z%}|%0%{%5%}%{z%}, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))\n@@ -20269,22 +20274,22 @@\n \t(unspec:VI4_AVX512VL\n \t  [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n \t   (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")\n-] UNSPEC_VPMADDUBSWACCD))]\n+\t   (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n+\t  UNSPEC_VPMADDUBSWACCD))]\n   \"TARGET_AVX512VNNI\"\n   \"vpdpbusd\\t{%3, %2, %0|%0, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))])\n \n (define_insn \"vpdpbusd_<mode>_mask\"\n   [(set (match_operand:VI4_AVX512VL 0 \"register_operand\" \"=v\")\n-\t(vec_merge:VI4_AVX512VL (unspec:VI4_AVX512VL\n-\t  [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n-\t   (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")\n-\t] UNSPEC_VPMADDUBSWACCD)\n-           (match_dup 1)\n-           (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\"))\n-)]\n+\t(vec_merge:VI4_AVX512VL\n+\t  (unspec:VI4_AVX512VL\n+\t    [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n+\t     (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n+\t     (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n+\t    UNSPEC_VPMADDUBSWACCD)\n+\t  (match_dup 1)\n+\t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\")))]\n   \"TARGET_AVX512VNNI\"\n   \"vpdpbusd\\t{%3, %2, %0%{%4%}|%0%{%4%}, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))])\n@@ -20297,22 +20302,23 @@\n    (match_operand:<avx512fmaskmode> 4 \"register_operand\")]\n   \"TARGET_AVX512VNNI\"\n {\n-  emit_insn (gen_vpdpbusd_<mode>_maskz_1 (\n-    operands[0], operands[1], operands[2], operands[3],\n-    CONST0_RTX (<MODE>mode), operands[4]));\n+  emit_insn (gen_vpdpbusd_<mode>_maskz_1 (operands[0], operands[1],\n+\t\t\t\t\t  operands[2], operands[3],\n+\t\t\t\t\t  CONST0_RTX (<MODE>mode),\n+\t\t\t\t\t\t      operands[4]));\n   DONE;\n })\n \n (define_insn \"vpdpbusd_<mode>_maskz_1\"\n   [(set (match_operand:VI4_AVX512VL 0 \"register_operand\" \"=v\")\n-\t(vec_merge:VI4_AVX512VL (unspec:VI4_AVX512VL\n-\t  [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n-\t   (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")\n-\t] UNSPEC_VPMADDUBSWACCD)\n+\t(vec_merge:VI4_AVX512VL\n+\t  (unspec:VI4_AVX512VL\n+\t    [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n+\t     (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n+\t     (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")\n+\t    ] UNSPEC_VPMADDUBSWACCD)\n \t  (match_operand:VI4_AVX512VL 4 \"const0_operand\" \"C\")\n-          (match_operand:<avx512fmaskmode> 5 \"register_operand\" \"Yk\"))\n-)]\n+\t  (match_operand:<avx512fmaskmode> 5 \"register_operand\" \"Yk\")))]\n   \"TARGET_AVX512VNNI\"\n   \"vpdpbusd\\t{%3, %2, %0%{%5%}%{z%}|%0%{%5%}%{z%}, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))])\n@@ -20323,22 +20329,22 @@\n \t(unspec:VI4_AVX512VL\n \t  [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n \t   (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")\n-] UNSPEC_VPMADDUBSWACCSSD))]\n+\t   (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n+\t  UNSPEC_VPMADDUBSWACCSSD))]\n   \"TARGET_AVX512VNNI\"\n   \"vpdpbusds\\t{%3, %2, %0|%0, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))])\n \n (define_insn \"vpdpbusds_<mode>_mask\"\n   [(set (match_operand:VI4_AVX512VL 0 \"register_operand\" \"=v\")\n-\t(vec_merge:VI4_AVX512VL (unspec:VI4_AVX512VL\n-\t  [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n-\t   (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")\n-\t] UNSPEC_VPMADDUBSWACCSSD)\n-           (match_dup 1)\n-           (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\"))\n-)]\n+\t(vec_merge:VI4_AVX512VL\n+\t  (unspec:VI4_AVX512VL\n+\t    [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n+\t     (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n+\t     (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n+\t    UNSPEC_VPMADDUBSWACCSSD)\n+\t  (match_dup 1)\n+\t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\")))]\n   \"TARGET_AVX512VNNI\"\n   \"vpdpbusds\\t{%3, %2, %0%{%4%}|%0%{%4%}, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))])\n@@ -20351,22 +20357,23 @@\n    (match_operand:<avx512fmaskmode> 4 \"register_operand\")]\n   \"TARGET_AVX512VNNI\"\n {\n-  emit_insn (gen_vpdpbusds_<mode>_maskz_1 (\n-    operands[0], operands[1], operands[2], operands[3],\n-    CONST0_RTX (<MODE>mode), operands[4]));\n+  emit_insn (gen_vpdpbusds_<mode>_maskz_1 (operands[0], operands[1],\n+\t\t\t\t\t   operands[2], operands[3],\n+\t\t\t\t\t   CONST0_RTX (<MODE>mode),\n+\t\t\t\t\t\t       operands[4]));\n   DONE;\n })\n \n (define_insn \"vpdpbusds_<mode>_maskz_1\"\n   [(set (match_operand:VI4_AVX512VL 0 \"register_operand\" \"=v\")\n-\t(vec_merge:VI4_AVX512VL (unspec:VI4_AVX512VL\n-\t  [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n-\t   (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")\n-\t] UNSPEC_VPMADDUBSWACCSSD)\n+\t(vec_merge:VI4_AVX512VL\n+\t  (unspec:VI4_AVX512VL\n+\t    [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n+\t     (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n+\t     (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n+\t    UNSPEC_VPMADDUBSWACCSSD)\n \t  (match_operand:VI4_AVX512VL 4 \"const0_operand\" \"C\")\n-          (match_operand:<avx512fmaskmode> 5 \"register_operand\" \"Yk\"))\n-)]\n+\t  (match_operand:<avx512fmaskmode> 5 \"register_operand\" \"Yk\")))]\n   \"TARGET_AVX512VNNI\"\n   \"vpdpbusds\\t{%3, %2, %0%{%5%}%{z%}|%0%{%5%}%{z%}, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))])\n@@ -20377,22 +20384,22 @@\n \t(unspec:VI4_AVX512VL\n \t  [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n \t   (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")\n-] UNSPEC_VPMADDWDACCD))]\n+\t   (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n+\t  UNSPEC_VPMADDWDACCD))]\n   \"TARGET_AVX512VNNI\"\n   \"vpdpwssd\\t{%3, %2, %0|%0, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))])\n \n (define_insn \"vpdpwssd_<mode>_mask\"\n   [(set (match_operand:VI4_AVX512VL 0 \"register_operand\" \"=v\")\n-\t(vec_merge:VI4_AVX512VL (unspec:VI4_AVX512VL\n-\t  [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n-\t   (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")\n-\t] UNSPEC_VPMADDWDACCD)\n-           (match_dup 1)\n-           (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\"))\n-)]\n+\t(vec_merge:VI4_AVX512VL\n+\t  (unspec:VI4_AVX512VL\n+\t    [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n+\t     (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n+\t     (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n+\t    UNSPEC_VPMADDWDACCD)\n+\t  (match_dup 1)\n+\t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\")))]\n   \"TARGET_AVX512VNNI\"\n   \"vpdpwssd\\t{%3, %2, %0%{%4%}|%0%{%4%}, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))])\n@@ -20405,22 +20412,23 @@\n    (match_operand:<avx512fmaskmode> 4 \"register_operand\")]\n   \"TARGET_AVX512VNNI\"\n {\n-  emit_insn (gen_vpdpwssd_<mode>_maskz_1 (\n-    operands[0], operands[1], operands[2], operands[3],\n-    CONST0_RTX (<MODE>mode), operands[4]));\n+  emit_insn (gen_vpdpwssd_<mode>_maskz_1 (operands[0], operands[1],\n+\t\t\t\t\t  operands[2], operands[3],\n+\t\t\t\t\t  CONST0_RTX (<MODE>mode),\n+\t\t\t\t\t\t      operands[4]));\n   DONE;\n })\n \n (define_insn \"vpdpwssd_<mode>_maskz_1\"\n   [(set (match_operand:VI4_AVX512VL 0 \"register_operand\" \"=v\")\n-\t(vec_merge:VI4_AVX512VL (unspec:VI4_AVX512VL\n-\t  [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n-\t   (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")\n-\t] UNSPEC_VPMADDWDACCD)\n+\t(vec_merge:VI4_AVX512VL\n+\t  (unspec:VI4_AVX512VL\n+\t    [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n+\t     (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n+\t     (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n+\t    UNSPEC_VPMADDWDACCD)\n \t  (match_operand:VI4_AVX512VL 4 \"const0_operand\" \"C\")\n-          (match_operand:<avx512fmaskmode> 5 \"register_operand\" \"Yk\"))\n-)]\n+\t  (match_operand:<avx512fmaskmode> 5 \"register_operand\" \"Yk\")))]\n   \"TARGET_AVX512VNNI\"\n   \"vpdpwssd\\t{%3, %2, %0%{%5%}%{z%}|%0%{%5%}%{z%}, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))])\n@@ -20431,22 +20439,22 @@\n \t(unspec:VI4_AVX512VL\n \t  [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n \t   (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")\n-] UNSPEC_VPMADDWDACCSSD))]\n+\t   (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n+\t  UNSPEC_VPMADDWDACCSSD))]\n   \"TARGET_AVX512VNNI\"\n   \"vpdpwssds\\t{%3, %2, %0|%0, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))])\n \n (define_insn \"vpdpwssds_<mode>_mask\"\n   [(set (match_operand:VI4_AVX512VL 0 \"register_operand\" \"=v\")\n-\t(vec_merge:VI4_AVX512VL (unspec:VI4_AVX512VL\n-\t  [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n-\t   (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")\n-\t] UNSPEC_VPMADDWDACCSSD)\n-           (match_dup 1)\n-           (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\"))\n-)]\n+\t(vec_merge:VI4_AVX512VL\n+\t  (unspec:VI4_AVX512VL\n+\t    [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n+\t     (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n+\t     (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n+\t    UNSPEC_VPMADDWDACCSSD)\n+\t  (match_dup 1)\n+\t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\")))]\n   \"TARGET_AVX512VNNI\"\n   \"vpdpwssds\\t{%3, %2, %0%{%4%}|%0%{%4%}, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))])\n@@ -20459,29 +20467,30 @@\n    (match_operand:<avx512fmaskmode> 4 \"register_operand\")]\n   \"TARGET_AVX512VNNI\"\n {\n-  emit_insn (gen_vpdpwssds_<mode>_maskz_1 (\n-    operands[0], operands[1], operands[2], operands[3],\n-    CONST0_RTX (<MODE>mode), operands[4]));\n+  emit_insn (gen_vpdpwssds_<mode>_maskz_1 (operands[0], operands[1],\n+\t\t\t\t\t   operands[2], operands[3],\n+\t\t\t\t\t   CONST0_RTX (<MODE>mode),\n+\t\t\t\t\t\t       operands[4]));\n   DONE;\n })\n \n (define_insn \"vpdpwssds_<mode>_maskz_1\"\n   [(set (match_operand:VI4_AVX512VL 0 \"register_operand\" \"=v\")\n-\t(vec_merge:VI4_AVX512VL (unspec:VI4_AVX512VL\n-\t  [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n-\t   (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")\n-\t] UNSPEC_VPMADDWDACCSSD)\n+\t(vec_merge:VI4_AVX512VL\n+\t  (unspec:VI4_AVX512VL\n+\t    [(match_operand:VI4_AVX512VL 1 \"register_operand\" \"0\")\n+\t     (match_operand:VI4_AVX512VL 2 \"register_operand\" \"v\")\n+\t     (match_operand:VI4_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n+\t    UNSPEC_VPMADDWDACCSSD)\n \t  (match_operand:VI4_AVX512VL 4 \"const0_operand\" \"C\")\n-          (match_operand:<avx512fmaskmode> 5 \"register_operand\" \"Yk\"))\n-)]\n+\t  (match_operand:<avx512fmaskmode> 5 \"register_operand\" \"Yk\")))]\n   \"TARGET_AVX512VNNI\"\n   \"vpdpwssds\\t{%3, %2, %0%{%5%}%{z%}|%0%{%5%}%{z%}, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))])\n \n (define_insn \"vaesdec_<mode>\"\n   [(set (match_operand:VI1_AVX512VL_F 0 \"register_operand\" \"=v\")\n-\t  (unspec:VI1_AVX512VL_F\n+\t(unspec:VI1_AVX512VL_F\n \t  [(match_operand:VI1_AVX512VL_F 1 \"register_operand\" \"v\")\n \t   (match_operand:VI1_AVX512VL_F 2 \"vector_operand\" \"v\")]\n \t  UNSPEC_VAESDEC))]\n@@ -20491,7 +20500,7 @@\n \n (define_insn \"vaesdeclast_<mode>\"\n   [(set (match_operand:VI1_AVX512VL_F 0 \"register_operand\" \"=v\")\n-\t  (unspec:VI1_AVX512VL_F\n+\t(unspec:VI1_AVX512VL_F\n \t  [(match_operand:VI1_AVX512VL_F 1 \"register_operand\" \"v\")\n \t   (match_operand:VI1_AVX512VL_F 2 \"vector_operand\" \"v\")]\n \t  UNSPEC_VAESDECLAST))]\n@@ -20501,7 +20510,7 @@\n \n (define_insn \"vaesenc_<mode>\"\n   [(set (match_operand:VI1_AVX512VL_F 0 \"register_operand\" \"=v\")\n-\t  (unspec:VI1_AVX512VL_F\n+\t(unspec:VI1_AVX512VL_F\n \t  [(match_operand:VI1_AVX512VL_F 1 \"register_operand\" \"v\")\n \t   (match_operand:VI1_AVX512VL_F 2 \"vector_operand\" \"vm\")]\n \t  UNSPEC_VAESENC))]\n@@ -20511,7 +20520,7 @@\n \n (define_insn \"vaesenclast_<mode>\"\n   [(set (match_operand:VI1_AVX512VL_F 0 \"register_operand\" \"=v\")\n-\t  (unspec:VI1_AVX512VL_F\n+\t(unspec:VI1_AVX512VL_F\n \t  [(match_operand:VI1_AVX512VL_F 1 \"register_operand\" \"v\")\n \t   (match_operand:VI1_AVX512VL_F 2 \"vector_operand\" \"vm\")]\n \t  UNSPEC_VAESENCLAST))]\n@@ -20522,9 +20531,9 @@\n (define_insn \"vpclmulqdq_<mode>\"\n   [(set (match_operand:VI8_FVL 0 \"register_operand\" \"=v\")\n \t(unspec:VI8_FVL [(match_operand:VI8_FVL 1 \"register_operand\" \"v\")\n-\t\t      (match_operand:VI8_FVL 2 \"vector_operand\" \"vm\")\n-\t\t      (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")]\n-\t\t     UNSPEC_VPCLMULQDQ))]\n+\t\t\t (match_operand:VI8_FVL 2 \"vector_operand\" \"vm\")\n+\t\t\t (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")]\n+\t\t\tUNSPEC_VPCLMULQDQ))]\n   \"TARGET_VPCLMULQDQ\"\n   \"vpclmulqdq\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"mode\" \"DI\")])\n@@ -20534,7 +20543,7 @@\n \t(unspec:<avx512fmaskmode>\n \t  [(match_operand:VI48_AVX512VLBW 1 \"register_operand\" \"v\")\n \t   (match_operand:VI48_AVX512VLBW 2 \"nonimmediate_operand\" \"vm\")]\n-\tUNSPEC_VPSHUFBIT))]\n+\t  UNSPEC_VPSHUFBIT))]\n   \"TARGET_AVX512BITALG\"\n   \"vpshufbitqmb\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\"\n   [(set_attr \"prefix\" \"evex\")"}]}