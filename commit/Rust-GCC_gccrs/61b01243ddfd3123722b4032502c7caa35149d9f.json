{"sha": "61b01243ddfd3123722b4032502c7caa35149d9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFiMDEyNDNkZGZkMzEyMzcyMmI0MDMyNTAyYzdjYWEzNTE0OWQ5Zg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-30T00:40:57Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-30T00:40:57Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1348", "tree": {"sha": "a904a3865a1c274f732c7a1aab04757d62f50c1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a904a3865a1c274f732c7a1aab04757d62f50c1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61b01243ddfd3123722b4032502c7caa35149d9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61b01243ddfd3123722b4032502c7caa35149d9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61b01243ddfd3123722b4032502c7caa35149d9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61b01243ddfd3123722b4032502c7caa35149d9f/comments", "author": null, "committer": null, "parents": [{"sha": "c7c0a6352313c467379126100a37ec700dd69a13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7c0a6352313c467379126100a37ec700dd69a13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7c0a6352313c467379126100a37ec700dd69a13"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "fcc50c8676f7617c69662645f7459ccd66f18a99", "filename": "gcc/regclass.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61b01243ddfd3123722b4032502c7caa35149d9f/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61b01243ddfd3123722b4032502c7caa35149d9f/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=61b01243ddfd3123722b4032502c7caa35149d9f", "patch": "@@ -601,7 +601,10 @@ regclass (f, nregs)\n \t\t\t\t\t    insn);\n \n \t\t      /* If this insn was the start of a basic block,\n-\t\t\t include the new insn in that block.  */\n+\t\t\t include the new insn in that block.\n+\t\t\t We need not check for code_label here;\n+\t\t\t while a basic block can start with a code_label,\n+\t\t\t INSN could not be at the beginning of that block.  */\n \t\t      if (previnsn == 0 || GET_CODE (previnsn) == JUMP_INSN)\n \t\t\t{\n \t\t\t  int b;"}]}