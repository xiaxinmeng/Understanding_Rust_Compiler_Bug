{"sha": "c2b15fe27e6a0e42b108111d51acce69628593b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJiMTVmZTI3ZTZhMGU0MmIxMDgxMTFkNTFhY2NlNjk2Mjg1OTNiNA==", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-07-21T16:54:00Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-07-21T16:54:00Z"}, "message": "Fortran: ICE, OOM while calculating sizes of derived type array components\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/101514\n\t* target-memory.c (gfc_interpret_derived): Size of array component\n\tof derived type can only be computed here for explicit shape.\n\t* trans-types.c (gfc_get_nodesc_array_type): Do not dereference\n\tNULL pointers.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/101514\n\t* gfortran.dg/pr101514.f90: New test.", "tree": {"sha": "a91c6a885559369b2e6bfa1670335d4af02c3556", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a91c6a885559369b2e6bfa1670335d4af02c3556"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2b15fe27e6a0e42b108111d51acce69628593b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2b15fe27e6a0e42b108111d51acce69628593b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2b15fe27e6a0e42b108111d51acce69628593b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2b15fe27e6a0e42b108111d51acce69628593b4/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b937dbf2577e0fa3018c562312da7b08bbe72d70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b937dbf2577e0fa3018c562312da7b08bbe72d70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b937dbf2577e0fa3018c562312da7b08bbe72d70"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "7b21a9e04e8b375bc0327259bcc2a2db59d775bd", "filename": "gcc/fortran/target-memory.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2b15fe27e6a0e42b108111d51acce69628593b4/gcc%2Ffortran%2Ftarget-memory.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2b15fe27e6a0e42b108111d51acce69628593b4/gcc%2Ffortran%2Ftarget-memory.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftarget-memory.c?ref=c2b15fe27e6a0e42b108111d51acce69628593b4", "patch": "@@ -534,6 +534,9 @@ gfc_interpret_derived (unsigned char *buffer, size_t buffer_size, gfc_expr *resu\n \t{\n \t  int n;\n \n+\t  if (cmp->as->type != AS_EXPLICIT)\n+\t    return 0;\n+\n \t  e->expr_type = EXPR_ARRAY;\n \t  e->rank = cmp->as->rank;\n "}, {"sha": "50fda4328f788219ccefcc87f8ed31e46df43e4f", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2b15fe27e6a0e42b108111d51acce69628593b4/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2b15fe27e6a0e42b108111d51acce69628593b4/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=c2b15fe27e6a0e42b108111d51acce69628593b4", "patch": "@@ -1644,7 +1644,7 @@ gfc_get_nodesc_array_type (tree etype, gfc_array_spec * as, gfc_packed packed,\n       GFC_TYPE_ARRAY_STRIDE (type, n) = tmp;\n \n       expr = as->lower[n];\n-      if (expr->expr_type == EXPR_CONSTANT)\n+      if (expr && expr->expr_type == EXPR_CONSTANT)\n         {\n           tmp = gfc_conv_mpz_to_tree (expr->value.integer,\n \t\t\t\t      gfc_index_integer_kind);\n@@ -1694,7 +1694,7 @@ gfc_get_nodesc_array_type (tree etype, gfc_array_spec * as, gfc_packed packed,\n   for (n = as->rank; n < as->rank + as->corank; n++)\n     {\n       expr = as->lower[n];\n-      if (expr->expr_type == EXPR_CONSTANT)\n+      if (expr && expr->expr_type == EXPR_CONSTANT)\n \ttmp = gfc_conv_mpz_to_tree (expr->value.integer,\n \t\t\t\t    gfc_index_integer_kind);\n       else"}, {"sha": "51fbf8a7e85559db1f75c65ac4c5e50a718cd8cb", "filename": "gcc/testsuite/gfortran.dg/pr101514.f90", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2b15fe27e6a0e42b108111d51acce69628593b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr101514.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2b15fe27e6a0e42b108111d51acce69628593b4/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr101514.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr101514.f90?ref=c2b15fe27e6a0e42b108111d51acce69628593b4", "patch": "@@ -0,0 +1,35 @@\n+! { dg-do compile }\n+! PR fortran/101514 - ICE: out of memory allocating ... bytes\n+\n+subroutine s\n+  type t1\n+     integer :: a(..) ! { dg-error \"must have an explicit shape\" }\n+  end type\n+  type t2\n+     integer :: a(*)  ! { dg-error \"must have an explicit shape\" }\n+  end type\n+  type t3\n+     integer :: a(:)  ! { dg-error \"must have an explicit shape\" }\n+  end type\n+  type t4\n+     integer :: a(0:) ! { dg-error \"must have an explicit shape\" }\n+  end type\n+  type t5\n+     integer, allocatable :: a(:)\n+  end type\n+  type t6\n+     integer, pointer     :: a(:)\n+  end type\n+  type(t1) :: a1\n+  type(t2) :: a2\n+  type(t3) :: a3\n+  type(t4) :: a4\n+  type(t5) :: a5\n+  type(t6) :: a6\n+  a1 = transfer(1, a1)\n+  a2 = transfer(1, a2)\n+  a3 = transfer(1, a3)\n+  a4 = transfer(1, a4)\n+  a5 = transfer(1, a5)\n+  a6 = transfer(1, a6)\n+end"}]}