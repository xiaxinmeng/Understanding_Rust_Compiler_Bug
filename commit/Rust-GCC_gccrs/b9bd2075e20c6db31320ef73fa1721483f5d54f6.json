{"sha": "b9bd2075e20c6db31320ef73fa1721483f5d54f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjliZDIwNzVlMjBjNmRiMzEzMjBlZjczZmExNzIxNDgzZjVkNTRmNg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-06-04T22:58:22Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-06-04T22:58:22Z"}, "message": "lto-cgraph.c (get_alias_symbol): Remove weakref sanity check.\n\n\n\t* lto-cgraph.c (get_alias_symbol): Remove weakref sanity check.\n\t(input_node, input_varpool_node): Handle correctly external same\n\tbody aliases.\n\t* ipa.c (symtab_remove_unreachable_nodes): Do not remove external\n\tnodes at ltrans stage.\n\nFrom-SVN: r199675", "tree": {"sha": "d5c2cb6bca860b0c073d207e96501af0f8244efc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5c2cb6bca860b0c073d207e96501af0f8244efc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9bd2075e20c6db31320ef73fa1721483f5d54f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9bd2075e20c6db31320ef73fa1721483f5d54f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9bd2075e20c6db31320ef73fa1721483f5d54f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9bd2075e20c6db31320ef73fa1721483f5d54f6/comments", "author": null, "committer": null, "parents": [{"sha": "aaae719df3df968a3a5cf5a03a8fb9d1889f1a50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaae719df3df968a3a5cf5a03a8fb9d1889f1a50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaae719df3df968a3a5cf5a03a8fb9d1889f1a50"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "c168af8587883c2fcf4486f8a764ec13fa9ba1c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bd2075e20c6db31320ef73fa1721483f5d54f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bd2075e20c6db31320ef73fa1721483f5d54f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9bd2075e20c6db31320ef73fa1721483f5d54f6", "patch": "@@ -1,3 +1,11 @@\n+2013-06-04  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto-cgraph.c (get_alias_symbol): Remove weakref sanity check.\n+\t(input_node, input_varpool_node): Handle correctly external same\n+\tbody aliases.\n+\t* ipa.c (symtab_remove_unreachable_nodes): Do not remove external\n+\tnodes at ltrans stage.\n+\n 2013-06-04  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa-inline.c (update_caller_keys): Fix availability test."}, {"sha": "443d737c44aed43e77aaed5ed879ca9e2a90e1a5", "filename": "gcc/ipa.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bd2075e20c6db31320ef73fa1721483f5d54f6/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bd2075e20c6db31320ef73fa1721483f5d54f6/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=b9bd2075e20c6db31320ef73fa1721483f5d54f6", "patch": "@@ -387,7 +387,11 @@ symtab_remove_unreachable_nodes (bool before_inlining_p, FILE *file)\n   for (vnode = varpool_first_variable (); vnode; vnode = vnext)\n     {\n       vnext = varpool_next_variable (vnode);\n-      if (!vnode->symbol.aux)\n+      if (!vnode->symbol.aux\n+\t  /* For can_refer_decl_in_current_unit_p we want to track for\n+\t     all external variables if they are defined in other partition\n+\t     or not.  */\n+\t  && (!flag_ltrans || !DECL_EXTERNAL (vnode->symbol.decl)))\n \t{\n \t  if (file)\n \t    fprintf (file, \" %s\", varpool_node_name (vnode));"}, {"sha": "065d8480eb95626923a8f69a668166cb30e1cfb8", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bd2075e20c6db31320ef73fa1721483f5d54f6/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bd2075e20c6db31320ef73fa1721483f5d54f6/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=b9bd2075e20c6db31320ef73fa1721483f5d54f6", "patch": "@@ -918,7 +918,6 @@ static tree\n get_alias_symbol (tree decl)\n {\n   tree alias = lookup_attribute (\"alias\", DECL_ATTRIBUTES (decl));\n-  gcc_assert (lookup_attribute (\"weakref\", DECL_ATTRIBUTES (decl)));\n   return get_identifier (TREE_STRING_POINTER\n \t\t\t  (TREE_VALUE (TREE_VALUE (alias))));\n }\n@@ -1008,7 +1007,8 @@ input_node (struct lto_file_decl_data *file_data,\n       node->thunk.virtual_value = virtual_value;\n       node->thunk.virtual_offset_p = (type & 4);\n     }\n-  if (node->symbol.alias && !node->symbol.analyzed)\n+  if (node->symbol.alias && !node->symbol.analyzed\n+      && lookup_attribute (\"weakref\", DECL_ATTRIBUTES (node->symbol.decl)))\n     node->symbol.alias_target = get_alias_symbol (node->symbol.decl);\n   return node;\n }\n@@ -1050,7 +1050,8 @@ input_varpool_node (struct lto_file_decl_data *file_data,\n       DECL_EXTERNAL (node->symbol.decl) = 1;\n       TREE_STATIC (node->symbol.decl) = 0;\n     }\n-  if (node->symbol.alias && !node->symbol.analyzed)\n+  if (node->symbol.alias && !node->symbol.analyzed\n+      && lookup_attribute (\"weakref\", DECL_ATTRIBUTES (node->symbol.decl)))\n     node->symbol.alias_target = get_alias_symbol (node->symbol.decl);\n   ref = streamer_read_hwi (ib);\n   /* Store a reference for now, and fix up later to be a pointer.  */"}]}