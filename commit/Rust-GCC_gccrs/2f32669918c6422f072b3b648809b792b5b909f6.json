{"sha": "2f32669918c6422f072b3b648809b792b5b909f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYzMjY2OTkxOGM2NDIyZjA3MmIzYjY0ODgwOWI3OTJiNWI5MDlmNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-01-30T13:48:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-01-30T13:48:37Z"}, "message": "re PR tree-optimization/52046 (ICE: verify_gimple failed: invalid operands in ternary operation with -O -fexceptions -fnon-call-exceptions -ftree-vectorize)\n\n\tPR tree-optimization/52046\n\t* tree-vect-patterns.c (check_bool_pattern): Give up if\n\ta comparison could throw.\n\n\t* gcc.dg/pr52046.c: New test.\n\nFrom-SVN: r183724", "tree": {"sha": "d611f349ef72e7c39faf03dcb10d5a45d92b41d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d611f349ef72e7c39faf03dcb10d5a45d92b41d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f32669918c6422f072b3b648809b792b5b909f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f32669918c6422f072b3b648809b792b5b909f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f32669918c6422f072b3b648809b792b5b909f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f32669918c6422f072b3b648809b792b5b909f6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dd44dcb02211b31660a9688878d39ae9bf41aa52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd44dcb02211b31660a9688878d39ae9bf41aa52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd44dcb02211b31660a9688878d39ae9bf41aa52"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "c819d1d0636a8579050763eb565596836ffac82a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f32669918c6422f072b3b648809b792b5b909f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f32669918c6422f072b3b648809b792b5b909f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f32669918c6422f072b3b648809b792b5b909f6", "patch": "@@ -1,5 +1,9 @@\n 2012-01-30  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/52046\n+\t* tree-vect-patterns.c (check_bool_pattern): Give up if\n+\ta comparison could throw.\n+\n \tPR debug/52048\n \t* tree-ssa-tail-merge.c (local_def): Ignore debug uses.\n "}, {"sha": "36dab8f112b126d325ec13ff9674ab91b7a02dd1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f32669918c6422f072b3b648809b792b5b909f6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f32669918c6422f072b3b648809b792b5b909f6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2f32669918c6422f072b3b648809b792b5b909f6", "patch": "@@ -1,5 +1,8 @@\n 2012-01-30  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/52046\n+\t* gcc.dg/pr52046.c: New test.\n+\n \tPR debug/52048\n \t* g++.dg/other/pr52048.C: New test.\n "}, {"sha": "e72061f9908e2a5550b9ff99f5ae4823bd11d23c", "filename": "gcc/testsuite/gcc.dg/pr52046.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f32669918c6422f072b3b648809b792b5b909f6/gcc%2Ftestsuite%2Fgcc.dg%2Fpr52046.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f32669918c6422f072b3b648809b792b5b909f6/gcc%2Ftestsuite%2Fgcc.dg%2Fpr52046.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr52046.c?ref=2f32669918c6422f072b3b648809b792b5b909f6", "patch": "@@ -0,0 +1,14 @@\n+/* PR tree-optimization/52046 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fexceptions -fnon-call-exceptions\" } */\n+\n+extern float a[], b[], c[], d[];\n+extern int k[];\n+\n+void\n+foo (void)\n+{\n+  int i;\n+  for (i = 0; i < 1024; ++i)\n+    k[i] = (a[i] < b[i]) | (c[i] < d[i]);\n+}"}, {"sha": "f63b4e593cc27aad48695b2abb35362af1fd1fd2", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f32669918c6422f072b3b648809b792b5b909f6/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f32669918c6422f072b3b648809b792b5b909f6/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=2f32669918c6422f072b3b648809b792b5b909f6", "patch": "@@ -1,5 +1,5 @@\n /* Analysis Utilities for Loop Vectorization.\n-   Copyright (C) 2006, 2007, 2008, 2009, 2010, 2011\n+   Copyright (C) 2006, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Dorit Nuzman <dorit@il.ibm.com>\n \n@@ -1967,6 +1967,11 @@ check_bool_pattern (tree var, loop_vec_info loop_vinfo)\n \t{\n \t  tree vecitype, comp_vectype;\n \n+\t  /* If the comparison can throw, then is_gimple_condexpr will be\n+\t     false and we can't make a COND_EXPR/VEC_COND_EXPR out of it.  */\n+\t  if (stmt_could_throw_p (def_stmt))\n+\t    return false;\n+\n \t  comp_vectype = get_vectype_for_scalar_type (TREE_TYPE (rhs1));\n \t  if (comp_vectype == NULL_TREE)\n \t    return false;"}]}