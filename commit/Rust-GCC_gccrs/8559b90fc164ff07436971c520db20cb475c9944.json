{"sha": "8559b90fc164ff07436971c520db20cb475c9944", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU1OWI5MGZjMTY0ZmYwNzQzNjk3MWM1MjBkYjIwY2I0NzVjOTk0NA==", "commit": {"author": {"name": "Cesar Philippidis", "email": "cesar@codesourcery.com", "date": "2016-06-17T20:32:03Z"}, "committer": {"name": "Cesar Philippidis", "email": "cesar@gcc.gnu.org", "date": "2016-06-17T20:32:03Z"}, "message": "openmp.c (match_acc): New generic function to parse OpenACC directives.\n\n\tgcc/fortran/\n\t* openmp.c (match_acc): New generic function to parse OpenACC\n\tdirectives.\n\t(gfc_match_oacc_parallel_loop): Use it.\n\t(gfc_match_oacc_parallel): Likewise.\n\t(gfc_match_oacc_kernels_loop): Likewise.\n\t(gfc_match_oacc_kernels): Likewise.\n\t(gfc_match_oacc_data): Likewise.\n\t(gfc_match_oacc_host_data): Likewise.\n\t(gfc_match_oacc_loop): Likewise.\n\t(gfc_match_oacc_enter_data): Likewise.\n\t(gfc_match_oacc_exit_data): Likewise.\n\nFrom-SVN: r237565", "tree": {"sha": "90847be58dec87390da1e3db069f11cbf3e3d04e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90847be58dec87390da1e3db069f11cbf3e3d04e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8559b90fc164ff07436971c520db20cb475c9944", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8559b90fc164ff07436971c520db20cb475c9944", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8559b90fc164ff07436971c520db20cb475c9944", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8559b90fc164ff07436971c520db20cb475c9944/comments", "author": {"login": "cesarjp", "id": 4576177, "node_id": "MDQ6VXNlcjQ1NzYxNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/4576177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cesarjp", "html_url": "https://github.com/cesarjp", "followers_url": "https://api.github.com/users/cesarjp/followers", "following_url": "https://api.github.com/users/cesarjp/following{/other_user}", "gists_url": "https://api.github.com/users/cesarjp/gists{/gist_id}", "starred_url": "https://api.github.com/users/cesarjp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cesarjp/subscriptions", "organizations_url": "https://api.github.com/users/cesarjp/orgs", "repos_url": "https://api.github.com/users/cesarjp/repos", "events_url": "https://api.github.com/users/cesarjp/events{/privacy}", "received_events_url": "https://api.github.com/users/cesarjp/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c561b09181d6543d310f203072f5940604df3fb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c561b09181d6543d310f203072f5940604df3fb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c561b09181d6543d310f203072f5940604df3fb9"}], "stats": {"total": 102, "additions": 32, "deletions": 70}, "files": [{"sha": "0bb604c51ed77acc2bef30c3d376132e72df0d62", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8559b90fc164ff07436971c520db20cb475c9944/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8559b90fc164ff07436971c520db20cb475c9944/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8559b90fc164ff07436971c520db20cb475c9944", "patch": "@@ -1,3 +1,17 @@\n+2016-06-17  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* openmp.c (match_acc): New generic function to parse OpenACC\n+\tdirectives.\n+\t(gfc_match_oacc_parallel_loop): Use it.\n+\t(gfc_match_oacc_parallel): Likewise.\n+\t(gfc_match_oacc_kernels_loop): Likewise.\n+\t(gfc_match_oacc_kernels): Likewise.\n+\t(gfc_match_oacc_data): Likewise.\n+\t(gfc_match_oacc_host_data): Likewise.\n+\t(gfc_match_oacc_loop): Likewise.\n+\t(gfc_match_oacc_enter_data): Likewise.\n+\t(gfc_match_oacc_exit_data): Likewise.\n+\n 2016-06-16  Martin Liska  <mliska@suse.cz>\n \n \t* trans-stmt.c (gfc_trans_simple_do): Predict the edge."}, {"sha": "f5148667f5ccacc3a6c9793d23c5d048e7cabeae", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 18, "deletions": 70, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8559b90fc164ff07436971c520db20cb475c9944/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8559b90fc164ff07436971c520db20cb475c9944/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=8559b90fc164ff07436971c520db20cb475c9944", "patch": "@@ -1411,101 +1411,63 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, uint64_t mask,\n   (OMP_CLAUSE_GANG | OMP_CLAUSE_WORKER | OMP_CLAUSE_VECTOR | OMP_CLAUSE_SEQ)\n \n \n-match\n-gfc_match_oacc_parallel_loop (void)\n+static match\n+match_acc (gfc_exec_op op, uint64_t mask)\n {\n   gfc_omp_clauses *c;\n-  if (gfc_match_omp_clauses (&c, OACC_PARALLEL_LOOP_CLAUSES, false, false,\n-\t\t\t     true) != MATCH_YES)\n+  if (gfc_match_omp_clauses (&c, mask, false, false, true) != MATCH_YES)\n     return MATCH_ERROR;\n-\n-  new_st.op = EXEC_OACC_PARALLEL_LOOP;\n+  new_st.op = op;\n   new_st.ext.omp_clauses = c;\n   return MATCH_YES;\n }\n \n+match\n+gfc_match_oacc_parallel_loop (void)\n+{\n+  return match_acc (EXEC_OACC_PARALLEL_LOOP, OACC_PARALLEL_LOOP_CLAUSES);\n+}\n+\n \n match\n gfc_match_oacc_parallel (void)\n {\n-  gfc_omp_clauses *c;\n-  if (gfc_match_omp_clauses (&c, OACC_PARALLEL_CLAUSES, false, false, true)\n-      != MATCH_YES)\n-    return MATCH_ERROR;\n-\n-  new_st.op = EXEC_OACC_PARALLEL;\n-  new_st.ext.omp_clauses = c;\n-  return MATCH_YES;\n+  return match_acc (EXEC_OACC_PARALLEL, OACC_PARALLEL_CLAUSES);\n }\n \n \n match\n gfc_match_oacc_kernels_loop (void)\n {\n-  gfc_omp_clauses *c;\n-  if (gfc_match_omp_clauses (&c, OACC_KERNELS_LOOP_CLAUSES, false, false,\n-\t\t\t     true) != MATCH_YES)\n-    return MATCH_ERROR;\n-\n-  new_st.op = EXEC_OACC_KERNELS_LOOP;\n-  new_st.ext.omp_clauses = c;\n-  return MATCH_YES;\n+  return match_acc (EXEC_OACC_KERNELS_LOOP, OACC_KERNELS_LOOP_CLAUSES);\n }\n \n \n match\n gfc_match_oacc_kernels (void)\n {\n-  gfc_omp_clauses *c;\n-  if (gfc_match_omp_clauses (&c, OACC_KERNELS_CLAUSES, false, false, true)\n-      != MATCH_YES)\n-    return MATCH_ERROR;\n-\n-  new_st.op = EXEC_OACC_KERNELS;\n-  new_st.ext.omp_clauses = c;\n-  return MATCH_YES;\n+  return match_acc (EXEC_OACC_KERNELS, OACC_KERNELS_CLAUSES);\n }\n \n \n match\n gfc_match_oacc_data (void)\n {\n-  gfc_omp_clauses *c;\n-  if (gfc_match_omp_clauses (&c, OACC_DATA_CLAUSES, false, false, true)\n-      != MATCH_YES)\n-    return MATCH_ERROR;\n-\n-  new_st.op = EXEC_OACC_DATA;\n-  new_st.ext.omp_clauses = c;\n-  return MATCH_YES;\n+  return match_acc (EXEC_OACC_DATA, OACC_DATA_CLAUSES);\n }\n \n \n match\n gfc_match_oacc_host_data (void)\n {\n-  gfc_omp_clauses *c;\n-  if (gfc_match_omp_clauses (&c, OACC_HOST_DATA_CLAUSES, false, false, true)\n-      != MATCH_YES)\n-    return MATCH_ERROR;\n-\n-  new_st.op = EXEC_OACC_HOST_DATA;\n-  new_st.ext.omp_clauses = c;\n-  return MATCH_YES;\n+  return match_acc (EXEC_OACC_HOST_DATA, OACC_HOST_DATA_CLAUSES);\n }\n \n \n match\n gfc_match_oacc_loop (void)\n {\n-  gfc_omp_clauses *c;\n-  if (gfc_match_omp_clauses (&c, OACC_LOOP_CLAUSES, false, false, true)\n-      != MATCH_YES)\n-    return MATCH_ERROR;\n-\n-  new_st.op = EXEC_OACC_LOOP;\n-  new_st.ext.omp_clauses = c;\n-  return MATCH_YES;\n+  return match_acc (EXEC_OACC_LOOP, OACC_LOOP_CLAUSES);\n }\n \n \n@@ -1617,28 +1579,14 @@ gfc_match_oacc_update (void)\n match\n gfc_match_oacc_enter_data (void)\n {\n-  gfc_omp_clauses *c;\n-  if (gfc_match_omp_clauses (&c, OACC_ENTER_DATA_CLAUSES, false, false, true)\n-      != MATCH_YES)\n-    return MATCH_ERROR;\n-\n-  new_st.op = EXEC_OACC_ENTER_DATA;\n-  new_st.ext.omp_clauses = c;\n-  return MATCH_YES;\n+  return match_acc (EXEC_OACC_ENTER_DATA, OACC_ENTER_DATA_CLAUSES);\n }\n \n \n match\n gfc_match_oacc_exit_data (void)\n {\n-  gfc_omp_clauses *c;\n-  if (gfc_match_omp_clauses (&c, OACC_EXIT_DATA_CLAUSES, false, false, true)\n-      != MATCH_YES)\n-    return MATCH_ERROR;\n-\n-  new_st.op = EXEC_OACC_EXIT_DATA;\n-  new_st.ext.omp_clauses = c;\n-  return MATCH_YES;\n+  return match_acc (EXEC_OACC_EXIT_DATA, OACC_EXIT_DATA_CLAUSES);\n }\n \n "}]}