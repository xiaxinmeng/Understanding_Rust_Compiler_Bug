{"sha": "d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVhODdjMmIxZDhmNTU2ZTNkMGUwMWQxZTI0ZmZiNDhkNzMyMmNiMA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-10-11T18:42:07Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-10-11T18:42:07Z"}, "message": "ActivationInstantiator.java, [...]: Removed redundant modifiers.\n\n2003-10-11  Michael Koch  <konqueror@gmx.de>\n\n\t* java/rmi/activation/ActivationInstantiator.java,\n\tjava/rmi/activation/ActivationMonitor.java,\n\tjava/rmi/activation/ActivationSystem.java,\n\tjava/rmi/activation/Activator.java,\n\tjava/rmi/dgc/DGC.java,\n\tjava/rmi/registry/Registry.java,\n\tjava/rmi/registry/RegistryHandler.java,\n\tjava/rmi/server/LoaderHandler.java,\n\tjava/rmi/server/RMIClientSocketFactory.java,\n\tjava/rmi/server/RMIFailureHandler.java,\n\tjava/rmi/server/RMIServerSocketFactory.java,\n\tjava/rmi/server/RemoteCall.java,\n\tjava/rmi/server/RemoteRef.java,\n\tjava/rmi/server/ServerRef.java,\n\tjava/rmi/server/Skeleton.java,\n\tjava/rmi/server/Unreferenced.java:\n\tRemoved redundant modifiers.\n\nFrom-SVN: r72354", "tree": {"sha": "5ebb7b9267c30c07655f7b2ef88990e63722626d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ebb7b9267c30c07655f7b2ef88990e63722626d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/comments", "author": null, "committer": null, "parents": [{"sha": "7afb0eea2b9144349fb41e0ae799abbeee2a2ca8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7afb0eea2b9144349fb41e0ae799abbeee2a2ca8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7afb0eea2b9144349fb41e0ae799abbeee2a2ca8"}], "stats": {"total": 196, "additions": 116, "deletions": 80}, "files": [{"sha": "4261e15028e7009a8dbd2e7077d4a52361e7293a", "filename": "libjava/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "patch": "@@ -1,3 +1,23 @@\n+2003-10-11  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/rmi/activation/ActivationInstantiator.java,\n+\tjava/rmi/activation/ActivationMonitor.java,\n+\tjava/rmi/activation/ActivationSystem.java,\n+\tjava/rmi/activation/Activator.java,\n+\tjava/rmi/dgc/DGC.java,\n+\tjava/rmi/registry/Registry.java,\n+\tjava/rmi/registry/RegistryHandler.java,\n+\tjava/rmi/server/LoaderHandler.java,\n+\tjava/rmi/server/RMIClientSocketFactory.java,\n+\tjava/rmi/server/RMIFailureHandler.java,\n+\tjava/rmi/server/RMIServerSocketFactory.java,\n+\tjava/rmi/server/RemoteCall.java,\n+\tjava/rmi/server/RemoteRef.java,\n+\tjava/rmi/server/ServerRef.java,\n+\tjava/rmi/server/Skeleton.java,\n+\tjava/rmi/server/Unreferenced.java:\n+\tRemoved redundant modifiers.\n+\n 2003-10-11  Michael Koch  <konqueror@gmx.de>\n \n \t* java/net/ContentHandlerFactory.java,"}, {"sha": "d47071a22deffc4c88c7dd73899d1d52a8e9526b", "filename": "libjava/java/rmi/activation/ActivationInstantiator.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Factivation%2FActivationInstantiator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Factivation%2FActivationInstantiator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Factivation%2FActivationInstantiator.java?ref=d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "patch": "@@ -44,6 +44,6 @@\n public interface ActivationInstantiator\n   extends Remote\n {\n-  public MarshalledObject newInstance (ActivationID id, ActivationDesc desc)\n+  MarshalledObject newInstance (ActivationID id, ActivationDesc desc)\n     throws ActivationException, RemoteException;\n }"}, {"sha": "67b7755533c6326dae3a0245c82973759a59605b", "filename": "libjava/java/rmi/activation/ActivationMonitor.java", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Factivation%2FActivationMonitor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Factivation%2FActivationMonitor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Factivation%2FActivationMonitor.java?ref=d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "patch": "@@ -41,11 +41,14 @@\n import java.rmi.RemoteException;\n import java.rmi.MarshalledObject;\n \n-public interface ActivationMonitor\n-\textends Remote {\n+public interface ActivationMonitor extends Remote\n+{\n+  void inactiveObject (ActivationID id)\n+    throws UnknownObjectException, RemoteException;\n \n-public void inactiveObject(ActivationID id) throws UnknownObjectException, RemoteException;\n-public void activeObject(ActivationID id, MarshalledObject obj) throws UnknownObjectException, RemoteException;\n-public void inactiveGroup(ActivationGroupID id, long incarnation) throws UnknownGroupException, RemoteException;\n+  void activeObject (ActivationID id, MarshalledObject obj)\n+    throws UnknownObjectException, RemoteException;\n \n+  void inactiveGroup (ActivationGroupID id, long incarnation)\n+  throws UnknownGroupException, RemoteException;\n }"}, {"sha": "a4b9a054d300d31777b77473bdf5b12dba926f76", "filename": "libjava/java/rmi/activation/ActivationSystem.java", "status": "modified", "additions": 33, "deletions": 15, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Factivation%2FActivationSystem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Factivation%2FActivationSystem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Factivation%2FActivationSystem.java?ref=d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "patch": "@@ -40,20 +40,38 @@\n import java.rmi.Remote;\n import java.rmi.RemoteException;\n \n-public interface ActivationSystem\n-\textends Remote {\n-\n-public static final int SYSTEM_PORT = 0; // XXX\n-\n-public ActivationID registerObject(ActivationDesc desc) throws ActivationException, UnknownGroupException, RemoteException;\n-public void unregisterObject(ActivationID id) throws ActivationException, UnknownObjectException, RemoteException;\n-public ActivationGroupID registerGroup(ActivationGroupDesc desc) throws ActivationException, RemoteException;\n-public ActivationMonitor activeGroup(ActivationGroupID id, ActivationInstantiator group, long incarnation) throws UnknownGroupException, ActivationException, RemoteException;\n-public void unregisterGroup(ActivationGroupID id) throws ActivationException, UnknownGroupException, RemoteException;\n-public void shutdown() throws RemoteException;\n-public ActivationDesc setActivationDesc(ActivationID id, ActivationDesc desc) throws ActivationException, UnknownObjectException, UnknownGroupException, RemoteException;\n-public ActivationGroupDesc setActivationGroupDesc(ActivationGroupID id, ActivationGroupDesc desc) throws ActivationException, UnknownGroupException, RemoteException;\n-public ActivationDesc getActivationDesc(ActivationID id) throws ActivationException, UnknownObjectException, RemoteException;\n-public ActivationGroupDesc getActivationGroupDesc(ActivationGroupID id) throws ActivationException, UnknownGroupException, RemoteException;\n+public interface ActivationSystem extends Remote\n+{\n+  int SYSTEM_PORT = 0; // XXX\n \n+  ActivationID registerObject (ActivationDesc desc)\n+    throws ActivationException, UnknownGroupException, RemoteException;\n+\n+  void unregisterObject (ActivationID id)\n+    throws ActivationException, UnknownObjectException, RemoteException;\n+\n+  ActivationGroupID registerGroup (ActivationGroupDesc desc)\n+    throws ActivationException, RemoteException;\n+\n+  ActivationMonitor activeGroup (ActivationGroupID id,\n+                                 ActivationInstantiator group, long incarnation)\n+    throws UnknownGroupException, ActivationException, RemoteException;\n+\n+  void unregisterGroup (ActivationGroupID id)\n+    throws ActivationException, UnknownGroupException, RemoteException;\n+\n+  void shutdown()\n+    throws RemoteException;\n+\n+  ActivationDesc setActivationDesc (ActivationID id, ActivationDesc desc)\n+    throws ActivationException, UnknownObjectException, UnknownGroupException,\n+           RemoteException;\n+\n+  ActivationGroupDesc setActivationGroupDesc (ActivationGroupID id,\n+                                              ActivationGroupDesc desc)\n+    throws ActivationException, UnknownGroupException, RemoteException;\n+\n+  ActivationDesc getActivationDesc (ActivationID id) throws ActivationException, UnknownObjectException, RemoteException;\n+\n+  ActivationGroupDesc getActivationGroupDesc (ActivationGroupID id) throws ActivationException, UnknownGroupException, RemoteException;\n }"}, {"sha": "834f68e28823e6eb1868e35381ce54b3542e0b9e", "filename": "libjava/java/rmi/activation/Activator.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Factivation%2FActivator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Factivation%2FActivator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Factivation%2FActivator.java?ref=d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "patch": "@@ -44,6 +44,6 @@\n public interface Activator\n   extends Remote\n {\n-  public MarshalledObject activate(ActivationID id, boolean force)\n+  MarshalledObject activate (ActivationID id, boolean force)\n     throws ActivationException, UnknownObjectException, RemoteException;\n }"}, {"sha": "b62c7fdbde734a07bc962475cd993ee6a36f2915", "filename": "libjava/java/rmi/dgc/DGC.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fdgc%2FDGC.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fdgc%2FDGC.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fdgc%2FDGC.java?ref=d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "patch": "@@ -41,11 +41,11 @@\n import java.rmi.RemoteException;\n import java.rmi.server.ObjID;\n \n-public interface DGC\n-\textends Remote {\n-\n-public Lease dirty(ObjID[] ids, long sequenceNum, Lease lease) throws RemoteException;\n-\n-public void clean(ObjID[] ids, long sequenceNum, VMID vmid, boolean strong) throws RemoteException;\n+public interface DGC extends Remote\n+{\n+  Lease dirty (ObjID[] ids, long sequenceNum, Lease lease)\n+    throws RemoteException;\n \n+  void clean (ObjID[] ids, long sequenceNum, VMID vmid, boolean strong)\n+    throws RemoteException;\n }"}, {"sha": "cbab4e725972359742666505d3eedd1b4583787e", "filename": "libjava/java/rmi/registry/Registry.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fregistry%2FRegistry.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fregistry%2FRegistry.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fregistry%2FRegistry.java?ref=d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "patch": "@@ -45,20 +45,20 @@\n \n public interface Registry extends Remote\n {\n-  public static final int REGISTRY_PORT = 1099;\n+  int REGISTRY_PORT = 1099;\n \n-  public Remote lookup(String name)\n+  Remote lookup(String name)\n     throws RemoteException, NotBoundException, AccessException;\n \n-  public void bind(String name, Remote obj)\n+  void bind(String name, Remote obj)\n     throws RemoteException, AlreadyBoundException, AccessException;\n \n-  public void unbind(String name)\n+  void unbind(String name)\n     throws RemoteException, NotBoundException, AccessException;\n \n-  public void rebind(String name, Remote obj)\n+  void rebind(String name, Remote obj)\n     throws RemoteException, AccessException;\n \n-  public String[] list()\n+  String[] list()\n     throws RemoteException, AccessException;\n }"}, {"sha": "27cedfb5457804e19ee8744256c370d6fa56d6be", "filename": "libjava/java/rmi/registry/RegistryHandler.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fregistry%2FRegistryHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fregistry%2FRegistryHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fregistry%2FRegistryHandler.java?ref=d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "patch": "@@ -48,11 +48,11 @@\n   /**\n    * @deprecated\n    */\n-  public Registry registryStub (String host, int port)\n+  Registry registryStub (String host, int port)\n     throws RemoteException, UnknownHostException;\n \n   /**\n    * @deprecated\n    */\n-  public Registry registryImpl (int port) throws RemoteException;\n+  Registry registryImpl (int port) throws RemoteException;\n }"}, {"sha": "3f44142ce0478fc384cb666b12384a2a3a4c0cde", "filename": "libjava/java/rmi/server/LoaderHandler.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fserver%2FLoaderHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fserver%2FLoaderHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FLoaderHandler.java?ref=d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "patch": "@@ -45,22 +45,22 @@\n  */\n public interface LoaderHandler\n {\n-  public static final String packagePrefix = \"\";\n+  String packagePrefix = \"\";\n \n   /**\n    * @deprecated\n    */\n-  public Class loadClass(String name)\n+  Class loadClass(String name)\n     throws MalformedURLException, ClassNotFoundException;\n \n   /**\n    * @deprecated\n    */\n-  public Class loadClass(URL codebase, String name)\n+  Class loadClass(URL codebase, String name)\n     throws MalformedURLException, ClassNotFoundException;\n \n   /**\n    * @deprecated\n    */\n-  public Object getSecurityContext(ClassLoader loader);\n+  Object getSecurityContext(ClassLoader loader);\n }"}, {"sha": "cbb8dba7b1d1aa58995be5fd57003ea952b13c45", "filename": "libjava/java/rmi/server/RMIClientSocketFactory.java", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fserver%2FRMIClientSocketFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fserver%2FRMIClientSocketFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FRMIClientSocketFactory.java?ref=d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "patch": "@@ -40,8 +40,7 @@\n import java.net.Socket;\n import java.io.IOException;\n \n-public interface RMIClientSocketFactory {\n-\n-public Socket createSocket(String host, int port) throws IOException;\n-\n+public interface RMIClientSocketFactory\n+{\n+  Socket createSocket (String host, int port) throws IOException;\n }"}, {"sha": "c48f250aaa226ecf4230c39d261d17278284bef8", "filename": "libjava/java/rmi/server/RMIFailureHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fserver%2FRMIFailureHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fserver%2FRMIFailureHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FRMIFailureHandler.java?ref=d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "patch": "@@ -42,5 +42,5 @@\n   /**\n    * @exception IOException If an error occurs\n    */\n-  public boolean failure (Exception ex);\n+  boolean failure (Exception ex);\n }"}, {"sha": "a5c52ffb6fd3bdd3a6568a186a94854a7cf72091", "filename": "libjava/java/rmi/server/RMIServerSocketFactory.java", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fserver%2FRMIServerSocketFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fserver%2FRMIServerSocketFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FRMIServerSocketFactory.java?ref=d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "patch": "@@ -40,8 +40,7 @@\n import java.net.ServerSocket;\n import java.io.IOException;\n \n-public interface RMIServerSocketFactory {\n-\n-public ServerSocket createServerSocket(int port) throws IOException;\n-\n+public interface RMIServerSocketFactory\n+{\n+  ServerSocket createServerSocket(int port) throws IOException;\n }"}, {"sha": "c244d6e94f8a085225185b56de035b79fb27e60f", "filename": "libjava/java/rmi/server/RemoteCall.java", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fserver%2FRemoteCall.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fserver%2FRemoteCall.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FRemoteCall.java?ref=d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "patch": "@@ -51,36 +51,36 @@\n   /**\n    * @deprecated\n    */\n-  public ObjectOutput getOutputStream () throws IOException;\n+  ObjectOutput getOutputStream () throws IOException;\n \n   /**\n    * @deprecated\n    */\n-  public void releaseOutputStream () throws IOException;\n+  void releaseOutputStream () throws IOException;\n \n   /**\n    * @deprecated\n    */\n-  public ObjectInput getInputStream () throws IOException;\n+  ObjectInput getInputStream () throws IOException;\n \n   /**\n    * @deprecated\n    */\n-  public void releaseInputStream () throws IOException;\n+  void releaseInputStream () throws IOException;\n \n   /**\n    * @deprecated\n    */\n-  public ObjectOutput getResultStream (boolean success)\n+  ObjectOutput getResultStream (boolean success)\n     throws IOException, StreamCorruptedException;\n \n   /**\n    * @deprecated\n    */\n-  public void executeCall () throws Exception;\n+  void executeCall () throws Exception;\n \n   /**\n    * @deprecated\n    */\n-  public void done () throws IOException;\n+  void done () throws IOException;\n }"}, {"sha": "10168690dc083a413bf42c5da6c2c613fbd4d9cf", "filename": "libjava/java/rmi/server/RemoteRef.java", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fserver%2FRemoteRef.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fserver%2FRemoteRef.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FRemoteRef.java?ref=d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "patch": "@@ -45,35 +45,34 @@\n \n public interface RemoteRef extends Externalizable\n {\n-  public static final long serialVersionUID = 0;\n+  long serialVersionUID = 0;\n   \n-  public static final String packagePrefix = \"gnu.java.rmi.server\";\n+  String packagePrefix = \"gnu.java.rmi.server\";\n \n   /**\n    * @deprecated\n    */\n-  public void invoke(RemoteCall call) throws Exception;\n+  void invoke (RemoteCall call) throws Exception;\n   \n-  public Object invoke (Remote obj, Method method, Object[] params, long opnum)\n+  Object invoke (Remote obj, Method method, Object[] params, long opnum)\n     throws Exception;\n   \n   /**\n    * @deprecated\n    */\n-  public RemoteCall newCall (RemoteObject obj, Operation[] op, int opnum,\n-                             long hash)\n+  RemoteCall newCall (RemoteObject obj, Operation[] op, int opnum, long hash)\n     throws RemoteException;\n \n   /**\n    * @deprecated\n    */\n-  public void done (RemoteCall call) throws RemoteException;\n+  void done (RemoteCall call) throws RemoteException;\n   \n-  public boolean remoteEquals (RemoteRef ref);\n+  boolean remoteEquals (RemoteRef ref);\n   \n-  public int remoteHashCode ();\n+  int remoteHashCode();\n   \n-  public String getRefClass (ObjectOutput out);\n+  String getRefClass (ObjectOutput out);\n   \n-  public String remoteToString ();\n+  String remoteToString();\n }"}, {"sha": "e347de974bd1b4e0ec212d8128de9be0d5a49609", "filename": "libjava/java/rmi/server/ServerRef.java", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fserver%2FServerRef.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fserver%2FServerRef.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FServerRef.java?ref=d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "patch": "@@ -37,17 +37,16 @@\n \n package java.rmi.server;\n \n-import java.rmi.server.RemoteStub;\n import java.rmi.Remote;\n import java.rmi.RemoteException;\n+import java.rmi.server.RemoteStub;\n import java.rmi.server.ServerNotActiveException;\n \n-public interface ServerRef\n-\textends RemoteRef {\n-\n-public static final long serialVersionUID = 0;\n+public interface ServerRef extends RemoteRef\n+{\n+  long serialVersionUID = 0;\n \n-public RemoteStub exportObject(Remote obj, Object data) throws RemoteException;\n-public String getClientHost() throws ServerNotActiveException;\n+  RemoteStub exportObject(Remote obj, Object data) throws RemoteException;\n \n+  String getClientHost() throws ServerNotActiveException;\n }"}, {"sha": "96c421456f5e76161a27f2e83afa5a9da507b01f", "filename": "libjava/java/rmi/server/Skeleton.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fserver%2FSkeleton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fserver%2FSkeleton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FSkeleton.java?ref=d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "patch": "@@ -48,11 +48,11 @@\n   /**\n    * @deprecated\n    */\n-  public void dispatch (Remote obj, RemoteCall theCall, int opnum, long hash)\n+  void dispatch (Remote obj, RemoteCall theCall, int opnum, long hash)\n     throws Exception;\n \n   /**\n    * @deprecated\n    */\n-  public Operation[] getOperations();\n+  Operation[] getOperations();\n }"}, {"sha": "8602ce16e2de6b5804ae1857ce517d26458c66ba", "filename": "libjava/java/rmi/server/Unreferenced.java", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fserver%2FUnreferenced.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0/libjava%2Fjava%2Frmi%2Fserver%2FUnreferenced.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FUnreferenced.java?ref=d5a87c2b1d8f556e3d0e01d1e24ffb48d7322cb0", "patch": "@@ -37,8 +37,7 @@\n \n package java.rmi.server;\n \n-public interface Unreferenced {\n-\n-public void unreferenced();\n-\n+public interface Unreferenced\n+{\n+  void unreferenced();\n }"}]}