{"sha": "dd3b6464c54804dcfa82bba61a10c46706a65bed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQzYjY0NjRjNTQ4MDRkY2ZhODJiYmE2MWExMGM0NjcwNmE2NWJlZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-05-06T13:15:24Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-05-06T13:15:24Z"}, "message": "sse.md (<mask_codefor>ashr<mode>3<mask_name>): Move before the ashr<mode>3 pattern.\n\n\t* config/i386/sse.md (<mask_codefor>ashr<mode>3<mask_name>): Move\n\tbefore the ashr<mode>3 pattern.\n\n\t* gcc.target/i386/avx512bw-vpsraw-3.c: New test.\n\t* gcc.target/i386/avx512vl-vpsrad-3.c: New test.\n\nFrom-SVN: r235972", "tree": {"sha": "d827fa4107e0a288f4c0c85af14c4630d75a89a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d827fa4107e0a288f4c0c85af14c4630d75a89a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd3b6464c54804dcfa82bba61a10c46706a65bed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd3b6464c54804dcfa82bba61a10c46706a65bed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd3b6464c54804dcfa82bba61a10c46706a65bed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd3b6464c54804dcfa82bba61a10c46706a65bed/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "58ec1d0e679a0ddd9648d1f4eff810c9973bede0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58ec1d0e679a0ddd9648d1f4eff810c9973bede0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58ec1d0e679a0ddd9648d1f4eff810c9973bede0"}], "stats": {"total": 122, "additions": 108, "deletions": 14}, "files": [{"sha": "886905dbc8aa65c532876dc37570dff701d74da3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3b6464c54804dcfa82bba61a10c46706a65bed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3b6464c54804dcfa82bba61a10c46706a65bed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd3b6464c54804dcfa82bba61a10c46706a65bed", "patch": "@@ -1,5 +1,8 @@\n 2016-05-06  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* config/i386/sse.md (<mask_codefor>ashr<mode>3<mask_name>): Move\n+\tbefore the ashr<mode>3 pattern.\n+\n \t* config/i386/sse.md (*avx2_pmaddwd, *sse2_pmaddwd): Use\n \tv instead of x in vex or maybe_vex alternatives, use\n \tmaybe_evex instead of vex in prefix."}, {"sha": "bb0d217583e0e94ed4a0f9e8130b056603070f8d", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3b6464c54804dcfa82bba61a10c46706a65bed/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3b6464c54804dcfa82bba61a10c46706a65bed/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=dd3b6464c54804dcfa82bba61a10c46706a65bed", "patch": "@@ -10088,6 +10088,20 @@\n   DONE;\n })\n \n+(define_insn \"<mask_codefor>ashr<mode>3<mask_name>\"\n+  [(set (match_operand:VI24_AVX512BW_1 0 \"register_operand\" \"=v,v\")\n+\t(ashiftrt:VI24_AVX512BW_1\n+\t  (match_operand:VI24_AVX512BW_1 1 \"nonimmediate_operand\" \"v,vm\")\n+\t  (match_operand:SI 2 \"nonmemory_operand\" \"v,N\")))]\n+  \"TARGET_AVX512VL\"\n+  \"vpsra<ssemodesuffix>\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\"\n+  [(set_attr \"type\" \"sseishft\")\n+   (set (attr \"length_immediate\")\n+     (if_then_else (match_operand 2 \"const_int_operand\")\n+       (const_string \"1\")\n+       (const_string \"0\")))\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n (define_insn \"ashr<mode>3\"\n   [(set (match_operand:VI24_AVX2 0 \"register_operand\" \"=x,x\")\n \t(ashiftrt:VI24_AVX2\n@@ -10107,20 +10121,6 @@\n    (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"<mask_codefor>ashr<mode>3<mask_name>\"\n-  [(set (match_operand:VI24_AVX512BW_1 0 \"register_operand\" \"=v,v\")\n-\t(ashiftrt:VI24_AVX512BW_1\n-\t  (match_operand:VI24_AVX512BW_1 1 \"nonimmediate_operand\" \"v,vm\")\n-\t  (match_operand:SI 2 \"nonmemory_operand\" \"v,N\")))]\n-  \"TARGET_AVX512VL\"\n-  \"vpsra<ssemodesuffix>\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\"\n-  [(set_attr \"type\" \"sseishft\")\n-   (set (attr \"length_immediate\")\n-     (if_then_else (match_operand 2 \"const_int_operand\")\n-       (const_string \"1\")\n-       (const_string \"0\")))\n-   (set_attr \"mode\" \"<sseinsnmode>\")])\n-\n (define_insn \"<mask_codefor>ashrv2di3<mask_name>\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=v,v\")\n \t(ashiftrt:V2DI"}, {"sha": "75fa9c6d94e9b4f84a5c1500bd94088db228f1b5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3b6464c54804dcfa82bba61a10c46706a65bed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3b6464c54804dcfa82bba61a10c46706a65bed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dd3b6464c54804dcfa82bba61a10c46706a65bed", "patch": "@@ -1,5 +1,8 @@\n 2016-05-06  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* gcc.target/i386/avx512bw-vpsraw-3.c: New test.\n+\t* gcc.target/i386/avx512vl-vpsrad-3.c: New test.\n+\n \t* gcc.target/i386/avx512bw-vpmaddwd-3.c: New test.\n \n 2016-05-06  Yuri Rumyantsev  <ysrumyan@gmail.com>"}, {"sha": "305dbccb9a03c9ec54f8f6a60f8e0ed30be8f14b", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-vpsraw-3.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3b6464c54804dcfa82bba61a10c46706a65bed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpsraw-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3b6464c54804dcfa82bba61a10c46706a65bed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpsraw-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-vpsraw-3.c?ref=dd3b6464c54804dcfa82bba61a10c46706a65bed", "patch": "@@ -0,0 +1,44 @@\n+/* { dg-do assemble { target { avx512bw && { avx512vl && { ! ia32 } } } } } */\n+/* { dg-options \"-O2 -mavx512bw -mavx512vl\" } */\n+\n+#include <x86intrin.h>\n+\n+void\n+f1 (__m128i x, int y)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = _mm_srai_epi16 (a, y);\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+void\n+f2 (__m128i x)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = _mm_srai_epi16 (a, 16);\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+void\n+f3 (__m256i x, int y)\n+{\n+  register __m256i a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = _mm256_srai_epi16 (a, y);\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+void\n+f4 (__m256i x)\n+{\n+  register __m256i a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = _mm256_srai_epi16 (a, 16);\n+  asm volatile (\"\" : \"+v\" (a));\n+}"}, {"sha": "2e3f92b58b7361a5983091ff32e489f3cc694573", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-vpsrad-3.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd3b6464c54804dcfa82bba61a10c46706a65bed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpsrad-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd3b6464c54804dcfa82bba61a10c46706a65bed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpsrad-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vpsrad-3.c?ref=dd3b6464c54804dcfa82bba61a10c46706a65bed", "patch": "@@ -0,0 +1,44 @@\n+/* { dg-do assemble { target { avx512vl && { ! ia32 } } } } */\n+/* { dg-options \"-O2 -mavx512vl\" } */\n+\n+#include <x86intrin.h>\n+\n+void\n+f1 (__m128i x, int y)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = _mm_srai_epi32 (a, y);\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+void\n+f2 (__m128i x)\n+{\n+  register __m128i a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = _mm_srai_epi32 (a, 16);\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+void\n+f3 (__m256i x, int y)\n+{\n+  register __m256i a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = _mm256_srai_epi32 (a, y);\n+  asm volatile (\"\" : \"+v\" (a));\n+}\n+\n+void\n+f4 (__m256i x)\n+{\n+  register __m256i a __asm (\"xmm16\");\n+  a = x;\n+  asm volatile (\"\" : \"+v\" (a));\n+  a = _mm256_srai_epi32 (a, 16);\n+  asm volatile (\"\" : \"+v\" (a));\n+}"}]}