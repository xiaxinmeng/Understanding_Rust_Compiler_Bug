{"sha": "20f8e4c7cc297b72ab9b4388cda59e43d9972c35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBmOGU0YzdjYzI5N2I3MmFiOWI0Mzg4Y2RhNTllNDNkOTk3MmMzNQ==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-06-25T04:48:55Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-06-25T04:48:55Z"}, "message": "jni.exp (gcj_jni_compile_c_to_so): Fix path for jni.h.\n\n\t* libjava.jni/jni.exp (gcj_jni_compile_c_to_so): Fix path for\n\tjni.h.\n\nFrom-SVN: r43549", "tree": {"sha": "6ece606f4d959a2b40be2ad6802095db00417d01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ece606f4d959a2b40be2ad6802095db00417d01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20f8e4c7cc297b72ab9b4388cda59e43d9972c35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20f8e4c7cc297b72ab9b4388cda59e43d9972c35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20f8e4c7cc297b72ab9b4388cda59e43d9972c35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20f8e4c7cc297b72ab9b4388cda59e43d9972c35/comments", "author": null, "committer": null, "parents": [{"sha": "f0523f020a20bea82110237521681b099697150f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0523f020a20bea82110237521681b099697150f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0523f020a20bea82110237521681b099697150f"}], "stats": {"total": 58, "additions": 31, "deletions": 27}, "files": [{"sha": "bd18b33996c76ed24ae118c68e0640db1ece515c", "filename": "libjava/testsuite/ChangeLog", "status": "modified", "additions": 30, "deletions": 26, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20f8e4c7cc297b72ab9b4388cda59e43d9972c35/libjava%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20f8e4c7cc297b72ab9b4388cda59e43d9972c35/libjava%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FChangeLog?ref=20f8e4c7cc297b72ab9b4388cda59e43d9972c35", "patch": "@@ -1,3 +1,8 @@\n+2001-06-24  Andreas Jaeger  <aj@suse.de>\n+\n+\t* libjava.jni/jni.exp (gcj_jni_compile_c_to_so): Fix path for\n+\tjni.h.\n+\n 2001-06-14  Tom Tromey  <tromey@redhat.com>\n \n \t* libjava.jni/jni.exp: New file.\n@@ -189,7 +194,7 @@\n Fri Nov 24 11:25:20 2000  Anthony Green  <green@redhat.com>\n \n \t* lib/libjava.exp (bytecompile_file): Change default from javac to\n- \tgcj -C.\n+\tgcj -C.\n \t(libjava_arguments): Fix classpath.\n \n \t* libjava.compile/PR129_B.no-link: New file.\n@@ -317,7 +322,7 @@ Sun Oct  8 19:14:05 2000  Anthony Green  <green@redhat.com>\n \n \tTest for PR gcj/224:\n \t* libjava.compile/PR224.java: New file.\n-\t* libjava.compile/PR224.xfail: New file.\t\n+\t* libjava.compile/PR224.xfail: New file.\n \n 2000-04-28  Bryce McKinlay  <bryce@albatross.co.nz>\n \n@@ -729,7 +734,7 @@ Sun Oct  8 19:14:05 2000  Anthony Green  <green@redhat.com>\n \n \t* lib/libjava.exp (bytecompile_file): Use `env(SUN_JAVAC)', that\n \tdefaults to javac, as Sun-javac compiler or compatible.\n-\t(libjava_init): Get GCJ from environment if neither GCJ_UNDER_TEST \n+\t(libjava_init): Get GCJ from environment if neither GCJ_UNDER_TEST\n \tnor TOOL_EXECUTABLE are set.  Set `original_ld_library_path' from\n \tenvironment.\n \t(libjava_arguments): Prepend `.' and `$srcdir/$subdir' to\n@@ -835,7 +840,7 @@ Sun Oct  8 19:14:05 2000  Anthony Green  <green@redhat.com>\n Thu Jul  1 16:22:19 1999  Anthony Green  <green@cygnus.com>\n \n \t* libjava.mauve/mauve.exp: Don't stop counting test results\n- \tprematurely.\n+\tprematurely.\n \n 1999-06-25  Tom Tromey  <tromey@cygnus.com>\n \n@@ -1130,21 +1135,21 @@ Fri Sep 18 12:43:52 1998  Warren Levy  <warrenl@cygnus.com>\n \n \t* libjava.lang/Integer_1.java, libjava.lang/Integer_1.out,\n \tlibjava.lang/Integer_2.java, libjava.lang/Integer_2.out: Created.\n-\t\n+\n \t* libjava.lang/String_2.java, libjava.lang/String_2.out: Use JDK 1.2\n \tvalues for hashCode.\n \n Thu Sep 10 12:44:42 1998  Warren Levy  <warrenl@cygnus.com>\n \n \t* libjava.lang/String_1.java, libjava.lang/String_1.out,\n- \tlibjava.lang/String_2.java, libjava.lang/String_2.out,\n- \tlibjava.lang/String_3.java, libjava.lang/String_3.out,\n- \tlibjava.lang/String_4.java, libjava.lang/String_4.out,\n- \tlibjava.lang/String_5.java, libjava.lang/String_5.out,\n- \tlibjava.lang/String_6.java, libjava.lang/String_6.out,\n- \tlibjava.lang/String_7.java, libjava.lang/String_7.out,\n- \tlibjava.lang/String_8.java, libjava.lang/String_8.out,\n- \tlibjava.lang/String_9.java, libjava.lang/String_9.out: Created.\n+\tlibjava.lang/String_2.java, libjava.lang/String_2.out,\n+\tlibjava.lang/String_3.java, libjava.lang/String_3.out,\n+\tlibjava.lang/String_4.java, libjava.lang/String_4.out,\n+\tlibjava.lang/String_5.java, libjava.lang/String_5.out,\n+\tlibjava.lang/String_6.java, libjava.lang/String_6.out,\n+\tlibjava.lang/String_7.java, libjava.lang/String_7.out,\n+\tlibjava.lang/String_8.java, libjava.lang/String_8.out,\n+\tlibjava.lang/String_9.java, libjava.lang/String_9.out: Created.\n \n Tue Sep  8 13:31:59 1998  Warren Levy  <warrenl@cygnus.com>\n \n@@ -1154,10 +1159,10 @@ Tue Sep  8 13:31:59 1998  Warren Levy  <warrenl@cygnus.com>\n Thu Sep  3 15:57:57 1998  Warren Levy  <warrenl@cygnus.com>\n \n \t* libjava.lang/Boolean_1.java, libjava.lang/Boolean_1.out,\n- \tlibjava.lang/Boolean_2.java, libjava.lang/Boolean_2.out,\n- \tlibjava.lang/Boolean_3.java, libjava.lang/Boolean_3.out,\n- \tlibjava.lang/Boolean_4.java, libjava.lang/Boolean_4.out,\n- \tlibjava.lang/Boolean_5.java, libjava.lang/Boolean_5.out: Created.\n+\tlibjava.lang/Boolean_2.java, libjava.lang/Boolean_2.out,\n+\tlibjava.lang/Boolean_3.java, libjava.lang/Boolean_3.out,\n+\tlibjava.lang/Boolean_4.java, libjava.lang/Boolean_4.out,\n+\tlibjava.lang/Boolean_5.java, libjava.lang/Boolean_5.out: Created.\n \n Tue Sep  1 12:27:54 1998  Tom Tromey  <tromey@cygnus.com>\n \n@@ -1194,14 +1199,14 @@ Tue Sep  1 12:27:54 1998  Tom Tromey  <tromey@cygnus.com>\n Mon Aug 31 17:49:21 1998  Warren Levy  <warrenl@cygnus.com>\n \n \t* libjava.util/Random_1.java, libjava.util/Random_1.out,\n- \tlibjava.util/Random_2.java, libjava.util/Random_2.out,\n- \tlibjava.util/Random_3.java, libjava.util/Random_3.out,\n- \tlibjava.util/Random_4.java, libjava.util/Random_4.out,\n- \tlibjava.util/Random_5.java, libjava.util/Random_5.out,\n- \tlibjava.util/Random_6.java, libjava.util/Random_6.out,\n- \tlibjava.util/Random_7.java, libjava.util/Random_7.out,\n- \tlibjava.util/Random_8.java, libjava.util/Random_8.out,\n- \tlibjava.util/test.exp: Created.\n+\tlibjava.util/Random_2.java, libjava.util/Random_2.out,\n+\tlibjava.util/Random_3.java, libjava.util/Random_3.out,\n+\tlibjava.util/Random_4.java, libjava.util/Random_4.out,\n+\tlibjava.util/Random_5.java, libjava.util/Random_5.out,\n+\tlibjava.util/Random_6.java, libjava.util/Random_6.out,\n+\tlibjava.util/Random_7.java, libjava.util/Random_7.out,\n+\tlibjava.util/Random_8.java, libjava.util/Random_8.out,\n+\tlibjava.util/test.exp: Created.\n \n Mon Aug 31 16:37:19 1998  Tom Tromey  <tromey@cygnus.com>\n \n@@ -1223,4 +1228,3 @@ Tue Aug 25 17:27:37 1998  Anthony Green  <green@cygnus.com>\n \tlibjava.lang/Finalize_1.java, libjava.lang/Finalize_1.out,\n \tlibjava.lang/Float_1.java, libjava.lang/Float_1.out\n \tlibjava.lang/test.exp, Makefile.am, Makefile.in: Created.\n-"}, {"sha": "583462bb07da7bbde193f011c81e61d8f351bf8e", "filename": "libjava/testsuite/libjava.jni/jni.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20f8e4c7cc297b72ab9b4388cda59e43d9972c35/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20f8e4c7cc297b72ab9b4388cda59e43d9972c35/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp?ref=20f8e4c7cc297b72ab9b4388cda59e43d9972c35", "patch": "@@ -13,7 +13,7 @@ proc gcj_jni_compile_c_to_so {file {options {}}} {\n   # Find the generated header.\n   lappend options \"additional_flags=-I.\"\n   # Find jni.h.\n-  lappend options \"additional_flags=-I$srcdir/../../include\"\n+  lappend options \"additional_flags=-I$srcdir/../include\"\n \n   set x [prune_warnings [target_compile $file $soname executable $options]]\n   if {$x != \"\"} {"}]}