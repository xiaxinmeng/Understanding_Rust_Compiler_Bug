{"sha": "c9e71b36cfef620a506f37e5922f1cf68c7869a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzllNzFiMzZjZmVmNjIwYTUwNmYzN2U1OTIyZjFjZjY4Yzc4NjlhOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-02-14T21:52:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-02-14T21:52:24Z"}, "message": "re PR c++/47482 ([C++0x] ICE: unexpected expression \u2018sizeof (\"A\")\u2019 of kind sizeof_expr)\n\n\tPR c++/47482\n\t* parser.c (cp_parser_enumerator_definition): Call\n\tfold_non_dependent_expr.\n\nFrom-SVN: r170156", "tree": {"sha": "3f1f70c2b7ef7068bf0c900a03e3380d42af6abb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f1f70c2b7ef7068bf0c900a03e3380d42af6abb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9e71b36cfef620a506f37e5922f1cf68c7869a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9e71b36cfef620a506f37e5922f1cf68c7869a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9e71b36cfef620a506f37e5922f1cf68c7869a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9e71b36cfef620a506f37e5922f1cf68c7869a8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b09c308168b572a21c7b540117358f3e2b470ce5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b09c308168b572a21c7b540117358f3e2b470ce5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b09c308168b572a21c7b540117358f3e2b470ce5"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "61a3e4addc2ac1be31efa19cdf60910a1a4e3586", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e71b36cfef620a506f37e5922f1cf68c7869a8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e71b36cfef620a506f37e5922f1cf68c7869a8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c9e71b36cfef620a506f37e5922f1cf68c7869a8", "patch": "@@ -1,3 +1,9 @@\n+2011-02-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/47482\n+\t* parser.c (cp_parser_enumerator_definition): Call\n+\tfold_non_dependent_expr.\n+\n 2011-02-09  Jason Merrill  <jason@redhat.com>\n \n \t* decl.c (cp_make_fname_decl): Set DECL_THIS_STATIC at toplevel."}, {"sha": "8f4a1219a736677e38582a5ddee3e5679959f978", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e71b36cfef620a506f37e5922f1cf68c7869a8/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e71b36cfef620a506f37e5922f1cf68c7869a8/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=c9e71b36cfef620a506f37e5922f1cf68c7869a8", "patch": "@@ -13763,6 +13763,10 @@ cp_parser_enumerator_definition (cp_parser* parser, tree type)\n   if (check_for_bare_parameter_packs (value))\n     value = error_mark_node;\n \n+  /* integral_constant_value will pull out this expression, so make sure\n+     it's folded as appropriate.  */\n+  value = fold_non_dependent_expr (value);\n+\n   /* Create the enumerator.  */\n   build_enumerator (identifier, value, type, loc);\n }"}, {"sha": "cd73643e916bf9e6a4350225b2bec70136e1d118", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e71b36cfef620a506f37e5922f1cf68c7869a8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e71b36cfef620a506f37e5922f1cf68c7869a8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c9e71b36cfef620a506f37e5922f1cf68c7869a8", "patch": "@@ -1,3 +1,7 @@\n+2011-02-14  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/regress/enum1.C: New.\n+\n 2011-02-14  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/include.adb: New test."}, {"sha": "6e29f9ea92385cf2b5278f10eb52bd91b15a8727", "filename": "gcc/testsuite/g++.dg/cpp0x/regress/enum1.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e71b36cfef620a506f37e5922f1cf68c7869a8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fenum1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e71b36cfef620a506f37e5922f1cf68c7869a8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fenum1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fenum1.C?ref=c9e71b36cfef620a506f37e5922f1cf68c7869a8", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/47482\n+// { dg-options -std=c++0x }\n+\n+template<class>\n+struct K\n+{\n+  enum { A = sizeof\"A\", B = +A };\n+};"}]}