{"sha": "17c77f44b188b16f24b43bfdde90a4a069d65d95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdjNzdmNDRiMTg4YjE2ZjI0YjQzYmZkZGU5MGE0YTA2OWQ2NWQ5NQ==", "commit": {"author": {"name": "Kirill Yukhin", "email": "kirill.yukhin@intel.com", "date": "2014-01-15T12:01:08Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-01-15T12:01:08Z"}, "message": "re PR testsuite/59808 (r206596 caused: FAIL: gcc.target/i386/sse-14.c (test for excess errors))\n\n        PR target/59808\n        * gcc.target/i386/sse-12.c: Add `-mavx512[cd, er, pf]' options.\n        * gcc.target/i386/sse-14.c: Fix PR59808.\n\nFrom-SVN: r206629", "tree": {"sha": "1c8a6c62184c6bed2cce42c9c726060a68185655", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c8a6c62184c6bed2cce42c9c726060a68185655"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17c77f44b188b16f24b43bfdde90a4a069d65d95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17c77f44b188b16f24b43bfdde90a4a069d65d95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17c77f44b188b16f24b43bfdde90a4a069d65d95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17c77f44b188b16f24b43bfdde90a4a069d65d95/comments", "author": null, "committer": null, "parents": [{"sha": "d103f29bc32f9bbbe14657b6258ae9c761fc9a28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d103f29bc32f9bbbe14657b6258ae9c761fc9a28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d103f29bc32f9bbbe14657b6258ae9c761fc9a28"}], "stats": {"total": 44, "additions": 25, "deletions": 19}, "files": [{"sha": "dde78783d8d789ed430b5815b941a2f9838eb594", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17c77f44b188b16f24b43bfdde90a4a069d65d95/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17c77f44b188b16f24b43bfdde90a4a069d65d95/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=17c77f44b188b16f24b43bfdde90a4a069d65d95", "patch": "@@ -1,3 +1,9 @@\n+2014-01-15  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\n+\tPR target/59808\n+\t* gcc.target/i386/sse-12.c: Add `-mavx512[cd, er, pf]' options.\n+\t* gcc.target/i386/sse-14.c: Fix PR59808.\n+\n 2014-01-15  Matthew Gretton-Dann  <matthew.gretton-dann@linaro.org>\n \t    Kugan Vivekanandarajah  <kuganv@linaro.org>\n "}, {"sha": "b95d36bf30826ef99d74ae59ea051ae4b1600c60", "filename": "gcc/testsuite/gcc.target/i386/sse-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17c77f44b188b16f24b43bfdde90a4a069d65d95/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17c77f44b188b16f24b43bfdde90a4a069d65d95/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-12.c?ref=17c77f44b188b16f24b43bfdde90a4a069d65d95", "patch": "@@ -3,7 +3,7 @@\n    popcntintrin.h and mm_malloc.h are usable\n    with -O -std=c89 -pedantic-errors.  */\n /* { dg-do compile } */\n-/* { dg-options \"-O -std=c89 -pedantic-errors -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f\" } */\n+/* { dg-options \"-O -std=c89 -pedantic-errors -march=k8 -msse4a -m3dnow -mavx -mavx2 -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mlzcnt -mbmi -mbmi2 -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c -mfma -mrtm -mrdseed -mprfchw -madx -mfxsr -mxsaveopt -mavx512f -mavx512cd -mavx512er -mavx512pf\" } */\n \n #include <x86intrin.h>\n "}, {"sha": "ad7ca7600f76c7ca1d39605c9ed96d1c25aa8be1", "filename": "gcc/testsuite/gcc.target/i386/sse-14.c", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17c77f44b188b16f24b43bfdde90a4a069d65d95/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17c77f44b188b16f24b43bfdde90a4a069d65d95/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c?ref=17c77f44b188b16f24b43bfdde90a4a069d65d95", "patch": "@@ -525,24 +525,24 @@ test_3vx (_mm512_mask_prefetch_i64gather_ps, __m512i, __mmask8, void const *, 1,\n test_3vx (_mm512_mask_prefetch_i64scatter_ps, void const *, __mmask8, __m512i, 1, 1)\n \n /* avx512erintrin.h */\n-test_1 (_mm512_exp2a23_round_pd, __m512d, __m512d, 1)\n-test_1 (_mm512_exp2a23_round_ps, __m512, __m512, 1)\n-test_1 (_mm512_rcp28_round_pd, __m512d, __m512d, 1)\n-test_1 (_mm512_rcp28_round_ps, __m512, __m512, 1)\n-test_1 (_mm512_rsqrt28_round_pd, __m512d, __m512d, 1)\n-test_1 (_mm512_rsqrt28_round_ps, __m512, __m512, 1)\n-test_2 (_mm512_maskz_exp2a23_round_pd, __m512d, __mmask8, __m512d, 1)\n-test_2 (_mm512_maskz_exp2a23_round_ps, __m512, __mmask16, __m512, 1)\n-test_2 (_mm512_maskz_rcp28_round_pd, __m512d, __mmask8, __m512d, 1)\n-test_2 (_mm512_maskz_rcp28_round_ps, __m512, __mmask16, __m512, 1)\n-test_2 (_mm512_maskz_rsqrt28_round_pd, __m512d, __mmask8, __m512d, 1)\n-test_2 (_mm512_maskz_rsqrt28_round_ps, __m512, __mmask16, __m512, 1)\n-test_3 (_mm512_mask_exp2a23_round_pd, __m512d, __m512d, __mmask8, __m512d, 1)\n-test_3 (_mm512_mask_exp2a23_round_ps, __m512, __m512, __mmask16, __m512, 1)\n-test_3 (_mm512_mask_rcp28_round_pd, __m512d, __m512d, __mmask8, __m512d, 1)\n-test_3 (_mm512_mask_rcp28_round_ps, __m512, __m512, __mmask16, __m512, 1)\n-test_3 (_mm512_mask_rsqrt28_round_pd, __m512d, __m512d, __mmask8, __m512d, 1)\n-test_3 (_mm512_mask_rsqrt28_round_ps, __m512, __m512, __mmask16, __m512, 1)\n+test_1 (_mm512_exp2a23_round_pd, __m512d, __m512d, 5)\n+test_1 (_mm512_exp2a23_round_ps, __m512, __m512, 5)\n+test_1 (_mm512_rcp28_round_pd, __m512d, __m512d, 5)\n+test_1 (_mm512_rcp28_round_ps, __m512, __m512, 5)\n+test_1 (_mm512_rsqrt28_round_pd, __m512d, __m512d, 5)\n+test_1 (_mm512_rsqrt28_round_ps, __m512, __m512, 5)\n+test_2 (_mm512_maskz_exp2a23_round_pd, __m512d, __mmask8, __m512d, 5)\n+test_2 (_mm512_maskz_exp2a23_round_ps, __m512, __mmask16, __m512, 5)\n+test_2 (_mm512_maskz_rcp28_round_pd, __m512d, __mmask8, __m512d, 5)\n+test_2 (_mm512_maskz_rcp28_round_ps, __m512, __mmask16, __m512, 5)\n+test_2 (_mm512_maskz_rsqrt28_round_pd, __m512d, __mmask8, __m512d, 5)\n+test_2 (_mm512_maskz_rsqrt28_round_ps, __m512, __mmask16, __m512, 5)\n+test_3 (_mm512_mask_exp2a23_round_pd, __m512d, __m512d, __mmask8, __m512d, 5)\n+test_3 (_mm512_mask_exp2a23_round_ps, __m512, __m512, __mmask16, __m512, 5)\n+test_3 (_mm512_mask_rcp28_round_pd, __m512d, __m512d, __mmask8, __m512d, 5)\n+test_3 (_mm512_mask_rcp28_round_ps, __m512, __m512, __mmask16, __m512, 5)\n+test_3 (_mm512_mask_rsqrt28_round_pd, __m512d, __m512d, __mmask8, __m512d, 5)\n+test_3 (_mm512_mask_rsqrt28_round_ps, __m512, __m512, __mmask16, __m512, 5)\n \n /* shaintrin.h */\n test_2 (_mm_sha1rnds4_epu32, __m128i, __m128i, __m128i, 1)"}]}