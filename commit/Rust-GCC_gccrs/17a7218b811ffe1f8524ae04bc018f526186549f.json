{"sha": "17a7218b811ffe1f8524ae04bc018f526186549f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdhNzIxOGI4MTFmZmUxZjg1MjRhZTA0YmMwMThmNTI2MTg2NTQ5Zg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-06-28T12:47:24Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-06-28T12:47:24Z"}, "message": "Do not allow to inline ifunc resolvers (PR ipa/81128).\n\n2017-06-28  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/81128\n\t* ipa-visibility.c (non_local_p): Handle visibility.\n2017-06-28  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/81128\n\t* c-attribs.c (handle_alias_ifunc_attribute): Append ifunc alias\n\tto a function declaration.\n2017-06-28  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/81128\n\t* gcc.target/i386/pr81128.c: New test.\n\nFrom-SVN: r249735", "tree": {"sha": "1c46b8ca68933463b4e70c805b837b13d65fd050", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c46b8ca68933463b4e70c805b837b13d65fd050"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17a7218b811ffe1f8524ae04bc018f526186549f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17a7218b811ffe1f8524ae04bc018f526186549f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17a7218b811ffe1f8524ae04bc018f526186549f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17a7218b811ffe1f8524ae04bc018f526186549f/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6301008994fa6370261a8c190e4cdf0a27021e63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6301008994fa6370261a8c190e4cdf0a27021e63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6301008994fa6370261a8c190e4cdf0a27021e63"}], "stats": {"total": 95, "additions": 91, "deletions": 4}, "files": [{"sha": "5fc16ca8afd68e6fd91d997899417af68ac296a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17a7218b811ffe1f8524ae04bc018f526186549f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17a7218b811ffe1f8524ae04bc018f526186549f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17a7218b811ffe1f8524ae04bc018f526186549f", "patch": "@@ -1,3 +1,8 @@\n+2017-06-28  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/81128\n+\t* ipa-visibility.c (non_local_p): Handle visibility.\n+\n 2017-06-28  Martin Liska  <mliska@suse.cz>\n \n \tPR driver/79659"}, {"sha": "74009cf8dfc78eab248aff31afc590c77ff411db", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17a7218b811ffe1f8524ae04bc018f526186549f/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17a7218b811ffe1f8524ae04bc018f526186549f/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=17a7218b811ffe1f8524ae04bc018f526186549f", "patch": "@@ -1,3 +1,9 @@\n+2017-06-28  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/81128\n+\t* c-attribs.c (handle_alias_ifunc_attribute): Append ifunc alias\n+\tto a function declaration.\n+\n 2017-06-28  Martin Liska  <mliska@suse.cz>\n \n \tPR driver/79659"}, {"sha": "626ffa1cde7283c83ff1d083e13a905ea1e0b51d", "filename": "gcc/c-family/c-attribs.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17a7218b811ffe1f8524ae04bc018f526186549f/gcc%2Fc-family%2Fc-attribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17a7218b811ffe1f8524ae04bc018f526186549f/gcc%2Fc-family%2Fc-attribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-attribs.c?ref=17a7218b811ffe1f8524ae04bc018f526186549f", "patch": "@@ -1846,9 +1846,14 @@ handle_alias_ifunc_attribute (bool is_alias, tree *node, tree name, tree args,\n \tTREE_STATIC (decl) = 1;\n \n       if (!is_alias)\n-\t/* ifuncs are also aliases, so set that attribute too.  */\n-\tDECL_ATTRIBUTES (decl)\n-\t  = tree_cons (get_identifier (\"alias\"), args, DECL_ATTRIBUTES (decl));\n+\t{\n+\t  /* ifuncs are also aliases, so set that attribute too.  */\n+\t  DECL_ATTRIBUTES (decl)\n+\t    = tree_cons (get_identifier (\"alias\"), args,\n+\t\t\t DECL_ATTRIBUTES (decl));\n+\t  DECL_ATTRIBUTES (decl) = tree_cons (get_identifier (\"ifunc\"),\n+\t\t\t\t\t      NULL, DECL_ATTRIBUTES (decl));\n+\t}\n     }\n   else\n     {"}, {"sha": "da4a22e7329cb95ac2ff4aa9a572dc48d9e7fea8", "filename": "gcc/ipa-visibility.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17a7218b811ffe1f8524ae04bc018f526186549f/gcc%2Fipa-visibility.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17a7218b811ffe1f8524ae04bc018f526186549f/gcc%2Fipa-visibility.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-visibility.c?ref=17a7218b811ffe1f8524ae04bc018f526186549f", "patch": "@@ -97,7 +97,8 @@ non_local_p (struct cgraph_node *node, void *data ATTRIBUTE_UNUSED)\n \t   && !DECL_EXTERNAL (node->decl)\n \t   && !node->externally_visible\n \t   && !node->used_from_other_partition\n-\t   && !node->in_other_partition);\n+\t   && !node->in_other_partition\n+\t   && node->get_availability () >= AVAIL_AVAILABLE);\n }\n \n /* Return true when function can be marked local.  */"}, {"sha": "ed6f8a6b7f995b2ffa0cc085aef6c2972a0b7a8a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17a7218b811ffe1f8524ae04bc018f526186549f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17a7218b811ffe1f8524ae04bc018f526186549f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=17a7218b811ffe1f8524ae04bc018f526186549f", "patch": "@@ -1,3 +1,8 @@\n+2017-06-28  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/81128\n+\t* gcc.target/i386/pr81128.c: New test.\n+\n 2017-06-28  Martin Liska  <mliska@suse.cz>\n \n \tPR driver/79659"}, {"sha": "90a567ad690dc4d670fa3347404495e8f5f5b013", "filename": "gcc/testsuite/gcc.target/i386/pr81128.c", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17a7218b811ffe1f8524ae04bc018f526186549f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81128.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17a7218b811ffe1f8524ae04bc018f526186549f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81128.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81128.c?ref=17a7218b811ffe1f8524ae04bc018f526186549f", "patch": "@@ -0,0 +1,65 @@\n+/* PR ipa/81128 */\n+/* { dg-do run } */\n+/* { dg-options \"-O3\" } */\n+/* { dg-require-ifunc \"\" } */\n+\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <time.h>\n+\n+int resolver_fn = 0;\n+int resolved_fn = 0;\n+\n+static inline void\n+do_it_right_at_runtime_A ()\n+{\n+  resolved_fn++;\n+}\n+\n+static inline void\n+do_it_right_at_runtime_B ()\n+{\n+  resolved_fn++;\n+}\n+\n+static inline void do_it_right_at_runtime (void);\n+\n+void do_it_right_at_runtime (void)\n+  __attribute__ ((ifunc (\"resolve_do_it_right_at_runtime\")));\n+\n+static void (*resolve_do_it_right_at_runtime (void)) (void)\n+{\n+  srand (time (NULL));\n+  int r = rand ();\n+  resolver_fn++;\n+\n+  /* Use intermediate variable to get a warning for non-matching\n+   * prototype. */\n+  typeof(do_it_right_at_runtime) *func;\n+  if (r & 1)\n+    func = do_it_right_at_runtime_A;\n+  else\n+    func = do_it_right_at_runtime_B;\n+\n+  return (void *) func;\n+}\n+\n+int\n+main (void)\n+{\n+  const unsigned int ITERS = 10;\n+\n+  for (int i = ITERS; i > 0; i--)\n+    {\n+      do_it_right_at_runtime ();\n+    }\n+\n+  if (resolver_fn != 1)\n+    __builtin_abort ();\n+\n+  if (resolved_fn != 10)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}]}