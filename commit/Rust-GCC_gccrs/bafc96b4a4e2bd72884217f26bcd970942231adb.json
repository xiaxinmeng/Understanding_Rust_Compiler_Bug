{"sha": "bafc96b4a4e2bd72884217f26bcd970942231adb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFmYzk2YjRhNGUyYmQ3Mjg4NDIxN2YyNmJjZDk3MDk0MjIzMWFkYg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2009-04-08T08:59:34Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2009-04-08T08:59:34Z"}, "message": "re PR fortran/38863 (WHERE with multiple elemental defined assignments gives wrong answer)\n\n2009-04-08  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/38863\n\t* trans-array.c (gfc_trans_deferred_array): Return if this\n\tis a result variable.\n\n2009-04-08  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/38863\n\t* gfortran.dg/alloc_comp_result_1.f90: New test.\n\nFrom-SVN: r145714", "tree": {"sha": "59a5eb4e851c7cf27c6a926532ca20e710d5abcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59a5eb4e851c7cf27c6a926532ca20e710d5abcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bafc96b4a4e2bd72884217f26bcd970942231adb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bafc96b4a4e2bd72884217f26bcd970942231adb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bafc96b4a4e2bd72884217f26bcd970942231adb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bafc96b4a4e2bd72884217f26bcd970942231adb/comments", "author": null, "committer": null, "parents": [{"sha": "8e481a2ca6dcab968cc8c18f0fdc6745e75b8afc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e481a2ca6dcab968cc8c18f0fdc6745e75b8afc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e481a2ca6dcab968cc8c18f0fdc6745e75b8afc"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "d078a21255bb1661318ad20e068a4719a8cf8702", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bafc96b4a4e2bd72884217f26bcd970942231adb/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bafc96b4a4e2bd72884217f26bcd970942231adb/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bafc96b4a4e2bd72884217f26bcd970942231adb", "patch": "@@ -1,3 +1,9 @@\n+2009-04-08  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/38863\n+\t* trans-array.c (gfc_trans_deferred_array): Return if this\n+\tis a result variable.\n+\n 2009-04-07  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/38152"}, {"sha": "a96a48da2b76f7873f33cfc67f3f2f472992b7f4", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bafc96b4a4e2bd72884217f26bcd970942231adb/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bafc96b4a4e2bd72884217f26bcd970942231adb/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=bafc96b4a4e2bd72884217f26bcd970942231adb", "patch": "@@ -5825,8 +5825,8 @@ gfc_trans_deferred_array (gfc_symbol * sym, tree body)\n       gfc_trans_vla_type_sizes (sym, &fnblock);\n     }\n \n-  /* Dummy and use associated variables don't need anything special.  */\n-  if (sym->attr.dummy || sym->attr.use_assoc)\n+  /* Dummy, use associated and result variables don't need anything special.  */\n+  if (sym->attr.dummy || sym->attr.use_assoc || sym->attr.result)\n     {\n       gfc_add_expr_to_block (&fnblock, body);\n "}, {"sha": "1e1206e537931d2912251eb1c2442587a60a2b8c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bafc96b4a4e2bd72884217f26bcd970942231adb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bafc96b4a4e2bd72884217f26bcd970942231adb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bafc96b4a4e2bd72884217f26bcd970942231adb", "patch": "@@ -1,3 +1,8 @@\n+2009-04-08  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/38863\n+\t* gfortran.dg/alloc_comp_result_1.f90: New test.\n+\n 2009-04-07  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/34691"}, {"sha": "90f6d97fdf967ae77ea375a45a2920fe571162e8", "filename": "gcc/testsuite/gfortran.dg/alloc_comp_result_1.f90", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bafc96b4a4e2bd72884217f26bcd970942231adb/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_result_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bafc96b4a4e2bd72884217f26bcd970942231adb/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_result_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_result_1.f90?ref=bafc96b4a4e2bd72884217f26bcd970942231adb", "patch": "@@ -0,0 +1,33 @@\n+! { dg-do run }\n+! Test the fix for PR38802, in which the nulling of the result 'p'\n+! in 'a_fun' would cause a segfault.\n+!\n+! Posted on the gfortran list by Marco Restelli http://gcc.gnu.org/ml/fortran/2009-01/\n+\n+!\n+module mod_a\n+  implicit none\n+  public :: a_fun, t_1, t_2\n+  private\n+  type t_1\n+    real :: coeff\n+  end type t_1\n+  type t_2\n+    type(t_1), allocatable :: mons(:)\n+  end type t_2\n+contains\n+  function a_fun(r) result(p)\n+    integer, intent(in) :: r\n+    type(t_2) :: p(r+1)\n+    p = t_2 ([t_1 (99)])\n+  end function a_fun\n+end module mod_a\n+\n+program test\n+  use mod_a, only: a_fun, t_1, t_2\n+  implicit none\n+  type(t_2) x(1)\n+  x = a_fun(0)\n+  if (any (x(1)%mons%coeff .ne. 99)) call abort\n+end program test\n+! { dg-final { cleanup-modules \"mod_a\" } }"}]}