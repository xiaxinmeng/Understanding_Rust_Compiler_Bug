{"sha": "614bb5d45d8b87b1f0d5c8d8cb1d02a1377e6ede", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE0YmI1ZDQ1ZDhiODdiMWYwZDVjOGQ4Y2IxZDAyYTEzNzdlNmVkZQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-02-12T14:26:47Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-02-12T14:26:47Z"}, "message": "cse.c (delete_dead_from_cse): If a libcall produces a constant result and that result can be substituted into...\n\n        * cse.c (delete_dead_from_cse): If a libcall produces a constant\n        result and that result can be substituted into SET_SRC of the\n        insn with the REG_RETVAL note, then perform the substitution\n        and delete the libcall.\n\nFrom-SVN: r17871", "tree": {"sha": "12b0cad7f604e9b8c306d6a7900c27a9e978de26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12b0cad7f604e9b8c306d6a7900c27a9e978de26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/614bb5d45d8b87b1f0d5c8d8cb1d02a1377e6ede", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/614bb5d45d8b87b1f0d5c8d8cb1d02a1377e6ede", "html_url": "https://github.com/Rust-GCC/gccrs/commit/614bb5d45d8b87b1f0d5c8d8cb1d02a1377e6ede", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/614bb5d45d8b87b1f0d5c8d8cb1d02a1377e6ede/comments", "author": null, "committer": null, "parents": [{"sha": "00bb4b6208ccd1dfbec9a6ac24a106bafb80ae04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00bb4b6208ccd1dfbec9a6ac24a106bafb80ae04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00bb4b6208ccd1dfbec9a6ac24a106bafb80ae04"}], "stats": {"total": 46, "additions": 40, "deletions": 6}, "files": [{"sha": "8129ee645b2e4d8b8fff4d89aeab63adbe029cbe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614bb5d45d8b87b1f0d5c8d8cb1d02a1377e6ede/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614bb5d45d8b87b1f0d5c8d8cb1d02a1377e6ede/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=614bb5d45d8b87b1f0d5c8d8cb1d02a1377e6ede", "patch": "@@ -1,3 +1,10 @@\n+Thu Feb 12 15:26:50 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* cse.c (delete_dead_from_cse): If a libcall produces a constant\n+\tresult and that result can be substituted into SET_SRC of the\n+\tinsn with the REG_RETVAL note, then perform the substitution\n+\tand delete the libcall.\n+\n Thu Feb 12 14:04:09 1998  Gavin Koch  <gavin@cygnus.com>\n \n \t* mips.md (trucndihi2,truncdiqi2): Change these to support "}, {"sha": "865451ab684f08969eef662ed8ed04ce69c0524b", "filename": "gcc/cse.c", "status": "modified", "additions": 33, "deletions": 6, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614bb5d45d8b87b1f0d5c8d8cb1d02a1377e6ede/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614bb5d45d8b87b1f0d5c8d8cb1d02a1377e6ede/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=614bb5d45d8b87b1f0d5c8d8cb1d02a1377e6ede", "patch": "@@ -8754,7 +8754,7 @@ delete_dead_from_cse (insns, nreg)\n   rtx insn, prev;\n   rtx tem;\n   int i;\n-  int in_libcall = 0;\n+  int in_libcall = 0, dead_libcall = 0;\n \n   /* First count the number of times each register is used.  */\n   bzero ((char *) counts, sizeof (int) * nreg);\n@@ -8767,17 +8767,41 @@ delete_dead_from_cse (insns, nreg)\n   for (insn = prev_real_insn (get_last_insn ()); insn; insn = prev)\n     {\n       int live_insn = 0;\n+      rtx note;\n \n       prev = prev_real_insn (insn);\n \n-      /* Don't delete any insns that are part of a libcall block.\n+      /* Don't delete any insns that are part of a libcall block unless\n+\t we can delete the whole libcall block.\n+\n \t Flow or loop might get confused if we did that.  Remember\n \t that we are scanning backwards.  */\n       if (find_reg_note (insn, REG_RETVAL, NULL_RTX))\n-\tin_libcall = 1;\n+\t{\n+\t  in_libcall = 1;\n+\t  live_insn = 1;\n+\t  dead_libcall = 0;\n \n-      if (in_libcall)\n-\tlive_insn = 1;\n+\t  /* See if there's a REG_EQUAL note on this insn and try to\n+\t     replace the source with the REG_EQUAL expression.\n+\t\n+\t     We assume that insns with REG_RETVALs can only be reg->reg\n+\t     copies at this point.  */\n+\t  note = find_reg_note (insn, REG_EQUAL, NULL_RTX);\n+\t  if (note)\n+\t    {\n+\t      rtx set = single_set (insn);\n+\t      if (set\n+\t\t  && validate_change (insn, &SET_SRC (set), XEXP (note, 0), 0))\n+\t\t{\n+\t\t  remove_note (insn,\n+\t\t\t       find_reg_note (insn, REG_RETVAL, NULL_RTX));\n+\t\t  dead_libcall = 1;\n+\t\t}\n+\t    }\n+\t}\n+      else if (in_libcall)\n+\tlive_insn = ! dead_libcall;\n       else if (GET_CODE (PATTERN (insn)) == SET)\n \t{\n \t  if (GET_CODE (SET_DEST (PATTERN (insn))) == REG\n@@ -8839,6 +8863,9 @@ delete_dead_from_cse (insns, nreg)\n \t}\n \n       if (find_reg_note (insn, REG_LIBCALL, NULL_RTX))\n-\tin_libcall = 0;\n+\t{\n+\t  in_libcall = 0;\n+\t  dead_libcall = 0;\n+\t}\n     }\n }"}]}