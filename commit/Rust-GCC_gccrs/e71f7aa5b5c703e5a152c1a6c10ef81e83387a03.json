{"sha": "e71f7aa5b5c703e5a152c1a6c10ef81e83387a03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcxZjdhYTViNWM3MDNlNWExNTJjMWE2YzEwZWY4MWU4MzM4N2EwMw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-07-08T22:11:03Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-07-08T22:11:03Z"}, "message": "(aggregate_value_p): If hard_function_value returns\na non-REG, then return 0.\n\nFrom-SVN: r12413", "tree": {"sha": "498ad93596ddcb5d2c9f6ea87ea5be6005091b89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/498ad93596ddcb5d2c9f6ea87ea5be6005091b89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e71f7aa5b5c703e5a152c1a6c10ef81e83387a03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e71f7aa5b5c703e5a152c1a6c10ef81e83387a03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e71f7aa5b5c703e5a152c1a6c10ef81e83387a03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e71f7aa5b5c703e5a152c1a6c10ef81e83387a03/comments", "author": null, "committer": null, "parents": [{"sha": "320aba9c08dfc4c677a90a5c3fa152ff90c674b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/320aba9c08dfc4c677a90a5c3fa152ff90c674b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/320aba9c08dfc4c677a90a5c3fa152ff90c674b4"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "275685e6ab29a1fe4c350bd557bc91ce159bed3b", "filename": "gcc/function.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e71f7aa5b5c703e5a152c1a6c10ef81e83387a03/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e71f7aa5b5c703e5a152c1a6c10ef81e83387a03/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=e71f7aa5b5c703e5a152c1a6c10ef81e83387a03", "patch": "@@ -3222,6 +3222,12 @@ aggregate_value_p (exp)\n   /* Make sure we have suitable call-clobbered regs to return\n      the value in; if not, we must return it in memory.  */\n   reg = hard_function_value (type, 0);\n+\n+  /* If we have something other than a REG (e.g. a PARALLEL), then assume\n+     it is OK.  */\n+  if (GET_CODE (reg) != REG)\n+    return 0;\n+\n   regno = REGNO (reg);\n   nregs = HARD_REGNO_NREGS (regno, TYPE_MODE (type));\n   for (i = 0; i < nregs; i++)"}]}