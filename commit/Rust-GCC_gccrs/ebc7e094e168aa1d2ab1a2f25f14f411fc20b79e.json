{"sha": "ebc7e094e168aa1d2ab1a2f25f14f411fc20b79e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJjN2UwOTRlMTY4YWExZDJhYjFhMmYyNWYxNGY0MTFmYzIwYjc5ZQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-04-03T12:51:38Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-04-03T12:51:38Z"}, "message": "* fixinc.x86-linux-gnu: Deleted.\n\nFrom-SVN: r26156", "tree": {"sha": "34907859f321f5e9a1a2b2d7d8b5a91495f8869c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34907859f321f5e9a1a2b2d7d8b5a91495f8869c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebc7e094e168aa1d2ab1a2f25f14f411fc20b79e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebc7e094e168aa1d2ab1a2f25f14f411fc20b79e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebc7e094e168aa1d2ab1a2f25f14f411fc20b79e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebc7e094e168aa1d2ab1a2f25f14f411fc20b79e/comments", "author": null, "committer": null, "parents": [{"sha": "706e665aeeda9005b6ebc635f542eeae85fa9f49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/706e665aeeda9005b6ebc635f542eeae85fa9f49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/706e665aeeda9005b6ebc635f542eeae85fa9f49"}], "stats": {"total": 144, "additions": 4, "deletions": 140}, "files": [{"sha": "3816e965ece32cea54bfdf3aaa51244dfd08a9d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebc7e094e168aa1d2ab1a2f25f14f411fc20b79e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebc7e094e168aa1d2ab1a2f25f14f411fc20b79e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ebc7e094e168aa1d2ab1a2f25f14f411fc20b79e", "patch": "@@ -1,3 +1,7 @@\n+Sat Apr  3 13:50:16 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* fixinc.x86-linux-gnu: Deleted.\n+\n Sat Apr  3 17:05:13 1999  Alexandre Oliva  <oliva@dcc.unicamp.br>\n \n \t* inclhack.tpl: insert spaces between `sed -e' and '...'"}, {"sha": "9e32586ef2ba9cb3f5c5009c9fbaeb21f5949c00", "filename": "gcc/fixinc.x86-linux-gnu", "status": "removed", "additions": 0, "deletions": 140, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/706e665aeeda9005b6ebc635f542eeae85fa9f49/gcc%2Ffixinc.x86-linux-gnu", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/706e665aeeda9005b6ebc635f542eeae85fa9f49/gcc%2Ffixinc.x86-linux-gnu", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc.x86-linux-gnu?ref=706e665aeeda9005b6ebc635f542eeae85fa9f49", "patch": "@@ -1,140 +0,0 @@\n-#! /bin/sh\n-#\n-# The script is created for Cygnus by vmakarov@cygnus.com and based on\n-# fixinc.wrap\n-#\n-# This script is designed for x86 with gnulibc of version 2.0 and less\n-# for solution of problems with invalid asm-statements by creating\n-# small wrappers around the include files containg the asm-statements.\n-#\n-# See README-fixinc for more information.\n-\n-\n-# Directory in which to store the results.\n-LIB=${1?\"fixincludes: output directory not specified\"}\n-\n-# Make sure it exists.\n-if [ ! -d $LIB ]; then\n-  mkdir $LIB || exit 1\n-fi\n-\n-# Make LIB absolute if it is relative.\n-# Don't do this if not necessary, since may screw up automounters.\n-case $LIB in\n-/*)\n-\t;;\n-*)\n-\tcd $LIB; LIB=`${PWDCMD-pwd}`\n-\t;;\n-esac\n-\n-echo Building fixed headers in ${LIB}\n-  \n-file=selectbits.h\n-echo Fixed $file for glibc-2.0.x\n-rm -f $LIB/$file\n-cat <<'__EOF__' >$LIB/$file\n-/* This file fixes __FD_ZERO bug for glibc-2.0.x. */\n-#ifndef _SELECTBITS_H_WRAPPER\n-#include <features.h>\n-#include_next <selectbits.h>\n-\n-#if defined(__FD_ZERO) && defined(__GLIBC__) && defined(__GLIBC_MINOR__) && __GLIBC__ == 2 && __GLIBC_MINOR__ == 0\n-#undef __FD_ZERO\n-#define __FD_ZERO(fdsetp) \\\n-  do { \\\n-    int __d0, __d1; \\\n-  __asm__ __volatile__ (\"cld; rep; stosl\" \\\n-                        : \"=m\" (((__fd_mask *) \\\n-                                 (fdsetp))[__FDELT (__FD_SETSIZE)]), \\\n-                          \"=&c\" (__d0), \"=&D\" (__d1) \\\n-                        : \"a\" (0), \"1\" (sizeof (__fd_set) \\\n-                                        / sizeof (__fd_mask)), \\\n-                          \"2\" ((__fd_mask *) (fdsetp)) \\\n-                        : \"memory\"); \\\n-  } while (0)\n-#endif\n-\n-#define _SELECTBITS_H_WRAPPER\n-#endif /* _SELECTBITS_H_WRAPPER */\n-__EOF__\n-# Define _SELECTBITS_H_WRAPPER at the end of the wrapper, not\n-# the start, so that if #include_next gets another instance of\n-# the wrapper, this will follow the #include_next chain until\n-# we arrive at the real <selectbits.h>.\n-chmod a+r $LIB/$file\n-\n-# asm/posix_types.h for libc version 1.x\n-file=asm/posix_types.h\n-echo Fixed $file for glibc-1.x\n-rm -f $LIB/$file\n-dir=`dirname $LIB/$file`\n-if [ ! -d $dir ]; then\n-  mkdir -p $dir || exit 1\n-fi\n-cat <<'__EOF__' >$LIB/$file\n-/* This file fixes __FD_ZERO bug for glibc-1.x. */\n-#ifndef _POSIX_TYPES_H_WRAPPER\n-#include <features.h>\n-#include_next <asm/posix_types.h>\n-\n-#if defined(__FD_ZERO) && !defined(__GLIBC__)\n-#undef __FD_ZERO\n-#define __FD_ZERO(fdsetp) \\\n-  do { \\\n-    int __d0, __d1; \\\n-\t\t__asm__ __volatile__(\"cld ; rep ; stosl\" \\\n-\t\t\t: \"=m\" (*(__kernel_fd_set *) (fdsetp)), \\\n-                          \"=&c\" (__d0), \"=&D\" (__d1) \\\n-\t\t\t: \"a\" (0), \"1\" (__FDSET_LONGS), \\\n-\t\t\t  \"2\" ((__kernel_fd_set *) (fdsetp)) :\"memory\"); \\\n-  } while (0)\n-#endif\n-\n-#define _POSIX_TYPES_H_WRAPPER\n-#endif /* _POSIX_TYPES_H_WRAPPER */\n-__EOF__\n-# Define _POSIX_TYPES_H_WRAPPER at the end of the wrapper, not\n-# the start, so that if #include_next gets another instance of\n-# the wrapper, this will follow the #include_next chain until\n-# we arrive at the real <asm/posix_types.h>.\n-chmod a+r $LIB/$file\n-\n-# gnu/types.h for libc version 1.x\n-file=gnu/types.h\n-echo Fixed $file for glibc-1.x\n-rm -f $LIB/$file\n-dir=`dirname $LIB/$file`\n-if [ ! -d $dir ]; then\n-  mkdir -p $dir || exit 1\n-fi\n-cat <<'__EOF__' >$LIB/$file\n-/* This file fixes __FD_ZERO bug for glibc-1.x. */\n-#ifndef _TYPES_H_WRAPPER\n-#include <features.h>\n-#include_next <gnu/types.h>\n-\n-#if defined(__FD_ZERO) && !defined(__GLIBC__)\n-#undef __FD_ZERO\n-# define __FD_ZERO(fdsetp) \\\n-  do { \\\n-    int __d0, __d1; \\\n-\t__asm__ __volatile__(\"cld ; rep ; stosl\" \\\n-        \t: \"=m\" (*(__fd_set *) (fdsetp)), \\\n-                  \"=&c\" (__d0), \"=&D\" (__d1) \\\n-        \t: \"a\" (0), \"1\" (__FDSET_LONGS), \\\n-\t\t  \"2\" ((__fd_set *) (fdsetp)) :\"memory\"); \\\n-  } while (0)\n-#endif\n-\n-#define _TYPES_H_WRAPPER\n-#endif /* _TYPES_H_WRAPPER */\n-__EOF__\n-# Define _TYPES_H_WRAPPER at the end of the wrapper, not the start,\n-# so that if #include_next gets another instance of the wrapper,\n-# this will follow the #include_next chain until we arrive at\n-# the real <gnu/types.h>.\n-chmod a+r $LIB/$file\n-\n-exit 0\n-"}]}