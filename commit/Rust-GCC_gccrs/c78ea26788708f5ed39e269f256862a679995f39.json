{"sha": "c78ea26788708f5ed39e269f256862a679995f39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc4ZWEyNjc4ODcwOGY1ZWQzOWUyNjlmMjU2ODYyYTY3OTk5NWYzOQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1998-07-13T10:50:32Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-07-13T10:50:32Z"}, "message": "cplus-dem.c (SCOPE_STRING): Remove DMGL_JAVA stuff.\n\n\t* cplus-dem.c (SCOPE_STRING): Remove DMGL_JAVA stuff.\n\t(cplus_demangle_opname):  Initialize work.\n\t(demangle_template): Remove is_java_array.\n\t(do_type): Remove DMGL_JAVA stuff.\n\t(long_options): Remove \"java\".\n\t(main): Remove 'j' option.\n\nFrom-SVN: r21100", "tree": {"sha": "d565be8ce3b3d5a08fab1c9b63eb269a177bbe38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d565be8ce3b3d5a08fab1c9b63eb269a177bbe38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c78ea26788708f5ed39e269f256862a679995f39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c78ea26788708f5ed39e269f256862a679995f39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c78ea26788708f5ed39e269f256862a679995f39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c78ea26788708f5ed39e269f256862a679995f39/comments", "author": null, "committer": null, "parents": [{"sha": "b5f881570be51f9c67780802e7e8627a62c8a1de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5f881570be51f9c67780802e7e8627a62c8a1de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5f881570be51f9c67780802e7e8627a62c8a1de"}], "stats": {"total": 50, "additions": 20, "deletions": 30}, "files": [{"sha": "9f859f1d8992031895473bb6ee74ae8863907459", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c78ea26788708f5ed39e269f256862a679995f39/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c78ea26788708f5ed39e269f256862a679995f39/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c78ea26788708f5ed39e269f256862a679995f39", "patch": "@@ -1,3 +1,12 @@\n+Mon Jul 13 10:50:17 1998  Mark Mitchell  <mark@markmitchell.com>\n+\n+\t* cplus-dem.c (SCOPE_STRING): Remove DMGL_JAVA stuff.\n+\t(cplus_demangle_opname):  Initialize work.\n+\t(demangle_template): Remove is_java_array.\n+\t(do_type): Remove DMGL_JAVA stuff.\n+\t(long_options): Remove \"java\".\n+\t(main): Remove 'j' option.\n+\n Mon Jul 13 10:19:00 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* expr.c (expand_expr): Only set MEM_IN_STRUCT_P if the memory address"}, {"sha": "c754734f0776c6df02e86684620a3c642823388f", "filename": "gcc/cplus-dem.c", "status": "modified", "additions": 11, "deletions": 30, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c78ea26788708f5ed39e269f256862a679995f39/gcc%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c78ea26788708f5ed39e269f256862a679995f39/gcc%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcplus-dem.c?ref=c78ea26788708f5ed39e269f256862a679995f39", "patch": "@@ -1,5 +1,5 @@\n /* Demangler for GNU C++ \n-   Copyright 1989, 91, 94, 95, 96, 97, 1998 Free Software Foundation, Inc.\n+   Copyright 1989, 1991, 1994, 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n    Written by James Clark (jjc@jclark.uucp)\n    Rewritten by Fred Fish (fnf@cygnus.com) for ARM and Lucid demangling\n    \n@@ -229,8 +229,7 @@ static const struct optable\n #define LEN_STRING(str)         ( (STRING_EMPTY(str))?0:((str)->p - (str)->b))\n \n /* The scope separator appropriate for the language being demangled.  */\n-#define SCOPE_STRING(work) \\\n-  (((work)->options & DMGL_JAVA) ? \".\" : \"::\")\n+#define SCOPE_STRING(work) \"::\"\n \n #define ARM_VTABLE_STRING \"__vtbl__\"\t/* Lucid/ARM virtual table prefix */\n #define ARM_VTABLE_STRLEN 8\t\t/* strlen (ARM_VTABLE_STRING) */\n@@ -443,6 +442,7 @@ cplus_demangle_opname (opname, result, options)\n   len = strlen(opname);\n   result[0] = '\\0';\n   ret = 0;\n+  memset ((char *) work, 0, sizeof (work));\n   work->options = options;\n   \n   if (opname[0] == '_' && opname[1] == '_'\n@@ -1416,7 +1416,6 @@ demangle_template (work, mangled, tname, trawname, is_type, remember)\n   int need_comma = 0;\n   int success = 0;\n   const char *start;\n-  int is_java_array = 0;\n   string temp;\n   int bindex;\n \n@@ -1460,19 +1459,13 @@ demangle_template (work, mangled, tname, trawname, is_type, remember)\n \t    {\n \t      return (0);\n \t    }\n-\t  is_java_array = (work -> options & DMGL_JAVA)\n-\t    && strncmp (*mangled, \"JArray1Z\", 8) == 0;\n-\t  if (! is_java_array)\n-\t    {\n-\t      string_appendn (tname, *mangled, r);\n-\t      if (trawname)\n-\t\tstring_appendn (trawname, *mangled, r);\n-\t    }\n+\t  string_appendn (tname, *mangled, r);\n+\t  if (trawname)\n+\t    string_appendn (trawname, *mangled, r);\n \t  *mangled += r;\n \t}\n     }\n-  if (!is_java_array)\n-    string_append (tname, \"<\");\n+  string_append (tname, \"<\");\n   /* get size of template parameter list */\n   if (!get_count (mangled, &r))\n     {\n@@ -1599,16 +1592,9 @@ demangle_template (work, mangled, tname, trawname, is_type, remember)\n \t}\n       need_comma = 1;\n     }\n-  if (is_java_array)\n-    {\n-      string_append (tname, \"[]\");\n-    }\n-  else\n-    {\n-      if (tname->p[-1] == '>')\n-\tstring_append (tname, \" \");\n-      string_append (tname, \">\");\n-    }\n+  if (tname->p[-1] == '>')\n+    string_append (tname, \" \");\n+  string_append (tname, \">\");\n   \n   if (is_type && remember)\n     remember_Btype (work, tname->b, LEN_STRING (tname), bindex);\n@@ -2534,8 +2520,7 @@ do_type (work, mangled, result)\n \tcase 'P':\n \tcase 'p':\n \t  (*mangled)++;\n-\t  if (! (work -> options & DMGL_JAVA))\n-\t    string_prepend (&decl, \"*\");\n+\t  string_prepend (&decl, \"*\");\n \t  break;\n \n \t  /* A reference type */\n@@ -3755,7 +3740,6 @@ static struct option long_options[] = {\n   {\"strip-underscores\", no_argument, 0, '_'},\n   {\"format\", required_argument, 0, 's'},\n   {\"help\", no_argument, 0, 'h'},\n-  {\"java\", no_argument, 0, 'j'},\n   {\"no-strip-underscores\", no_argument, 0, 'n'},\n   {\"version\", no_argument, 0, 'v'},\n   {0, no_argument, 0, 0}\n@@ -3800,9 +3784,6 @@ main (argc, argv)\n \tcase '_':\n \t  strip_underscore = 1;\n \t  break;\n-\tcase 'j':\n-\t  flags |= DMGL_JAVA;\n-\t  break;\n \tcase 's':\n \t  if (strcmp (optarg, \"gnu\") == 0)\n \t    {"}]}