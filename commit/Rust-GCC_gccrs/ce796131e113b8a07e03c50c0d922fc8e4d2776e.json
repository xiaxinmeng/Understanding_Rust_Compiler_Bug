{"sha": "ce796131e113b8a07e03c50c0d922fc8e4d2776e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U3OTYxMzFlMTEzYjhhMDdlMDNjNTBjMGQ5MjJmYzhlNGQyNzc2ZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-11-08T14:40:33Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-11-08T14:40:33Z"}, "message": "type_traits (__decay_selector<_Up, [...]): Change according to DR 705.\n\n2007-11-08  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/std/type_traits (__decay_selector<_Up, false, false>):\n\tChange according to DR 705.\n\t* include/bits/stl_pair.h (make_pair(_T1&&, _T2&&)): Change\n\taccording to DR 706.\n\t* include/tr1_impl/tuple: Tweak.\n\nFrom-SVN: r130001", "tree": {"sha": "3d993480f8340ba75c118ac958d59d749b4e01b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d993480f8340ba75c118ac958d59d749b4e01b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce796131e113b8a07e03c50c0d922fc8e4d2776e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce796131e113b8a07e03c50c0d922fc8e4d2776e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce796131e113b8a07e03c50c0d922fc8e4d2776e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce796131e113b8a07e03c50c0d922fc8e4d2776e/comments", "author": null, "committer": null, "parents": [{"sha": "71733172a45e638feaed625231589440b56256e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71733172a45e638feaed625231589440b56256e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71733172a45e638feaed625231589440b56256e3"}], "stats": {"total": 65, "additions": 53, "deletions": 12}, "files": [{"sha": "0dc8222b7cfe85945da9f76db154817f9e9886e7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce796131e113b8a07e03c50c0d922fc8e4d2776e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce796131e113b8a07e03c50c0d922fc8e4d2776e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ce796131e113b8a07e03c50c0d922fc8e4d2776e", "patch": "@@ -1,3 +1,11 @@\n+2007-11-08  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/std/type_traits (__decay_selector<_Up, false, false>):\n+\tChange according to DR 705.\n+\t* include/bits/stl_pair.h (make_pair(_T1&&, _T2&&)): Change\n+\taccording to DR 706.\n+\t* include/tr1_impl/tuple: Tweak.\n+\n 2007-11-08  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/debug/vector (push_back, emplace): Fix signature typo."}, {"sha": "66230261077c5e0010466cabfa9212953ee06970", "filename": "libstdc++-v3/include/bits/stl_pair.h", "status": "modified", "additions": 35, "deletions": 5, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce796131e113b8a07e03c50c0d922fc8e4d2776e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce796131e113b8a07e03c50c0d922fc8e4d2776e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h?ref=ce796131e113b8a07e03c50c0d922fc8e4d2776e", "patch": "@@ -211,14 +211,44 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     make_pair(_T1 __x, _T2 __y)\n     { return pair<_T1, _T2>(__x, __y); }\n #else\n+  template<typename _Tp>\n+    class reference_wrapper;\n+\n+  // Helper which adds a reference to a type when given a reference_wrapper\n+  template<typename _Tp>\n+    struct __strip_reference_wrapper\n+    {\n+      typedef _Tp __type;\n+    };\n+\n+  template<typename _Tp>\n+    struct __strip_reference_wrapper<reference_wrapper<_Tp> >\n+    {\n+      typedef _Tp& __type;\n+    };\n+\n+  template<typename _Tp>\n+    struct __strip_reference_wrapper<const reference_wrapper<_Tp> >\n+    {\n+      typedef _Tp& __type;\n+    };\n+\n+  template<typename _Tp>\n+    struct __decay_and_strip\n+    {\n+      typedef typename __strip_reference_wrapper<\n+\ttypename decay<_Tp>::type>::__type __type;\n+    };\n+\n+  // NB: DR 706.\n   template<class _T1, class _T2>\n-    inline pair<typename std::decay<_T1>::type,\n-\t\ttypename std::decay<_T2>::type>\n+    inline pair<typename __decay_and_strip<_T1>::__type,\n+\t\ttypename __decay_and_strip<_T2>::__type>\n     make_pair(_T1&& __x, _T2&& __y)\n     {\n-      return pair<typename std::decay<_T1>::type,\n-\t          typename std::decay<_T2>::type>(std::forward<_T1>(__x),\n-\t\t\t\t\t\t  std::forward<_T2>(__y));\n+      return pair<typename __decay_and_strip<_T1>::__type,\n+\t          typename __decay_and_strip<_T2>::__type>\n+\t(std::forward<_T1>(__x), std::forward<_T2>(__y));\n     }\n #endif\n "}, {"sha": "38c92abf6e81fa14859d1e5b44dd9b9dfc35516f", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce796131e113b8a07e03c50c0d922fc8e4d2776e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce796131e113b8a07e03c50c0d922fc8e4d2776e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=ce796131e113b8a07e03c50c0d922fc8e4d2776e", "patch": "@@ -308,21 +308,21 @@ namespace std\n \t   bool _IsFunction = is_function<_Up>::value> \n     struct __decay_selector;\n \n+  // NB: DR 705.\n   template<typename _Up> \n     struct __decay_selector<_Up, false, false>\n-    { typedef _Up __type; };\n+    { typedef typename remove_cv<_Up>::type __type; };\n \n   template<typename _Up> \n     struct __decay_selector<_Up, true, false>\n     { typedef typename remove_extent<_Up>::type* __type; };\n \n-\n   template<typename _Up> \n     struct __decay_selector<_Up, false, true>\n     { typedef typename add_pointer<_Up>::type __type; };\n \n   template<typename _Tp> \n-  struct decay \n+    struct decay \n     { \n     private:\n       typedef typename remove_reference<_Tp>::type __remove_type;"}, {"sha": "e71bd4174c2b57d8e55599b63a5f5d2289ef1f73", "filename": "libstdc++-v3/include/tr1_impl/tuple", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce796131e113b8a07e03c50c0d922fc8e4d2776e/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce796131e113b8a07e03c50c0d922fc8e4d2776e/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ftuple?ref=ce796131e113b8a07e03c50c0d922fc8e4d2776e", "patch": "@@ -39,9 +39,6 @@ namespace std\n {\n _GLIBCXX_BEGIN_NAMESPACE_TR1\n \n-  template<typename _Tp>\n-    class reference_wrapper;\n-\n   // Adds a const reference to a non-reference type.\n   template<typename _Tp>\n     struct __add_c_ref\n@@ -375,6 +372,10 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n \t       const tuple<_UElements...>& __u)\n     { return !(__t < __u); }\n \n+#ifdef _GLIBCXX_INCLUDE_AS_TR1\n+  template<typename _Tp>\n+    class reference_wrapper;\n+\n   // Helper which adds a reference to a type when given a reference_wrapper\n   template<typename _Tp>\n     struct __strip_reference_wrapper\n@@ -393,6 +394,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     {\n       typedef _Tp& __type;\n     };\n+#endif\n \n   template<typename... _Elements>\n     inline tuple<typename __strip_reference_wrapper<_Elements>::__type...>"}, {"sha": "30b98d518e0822662aafbc58286d0c96fc37d62a", "filename": "libstdc++-v3/testsuite/20_util/decay/requirements/typedefs.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce796131e113b8a07e03c50c0d922fc8e4d2776e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdecay%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce796131e113b8a07e03c50c0d922fc8e4d2776e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdecay%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdecay%2Frequirements%2Ftypedefs.cc?ref=ce796131e113b8a07e03c50c0d922fc8e4d2776e", "patch": "@@ -34,8 +34,9 @@ void test01()\n   typedef decay<bool>::type     \ttest1_type;\n   VERIFY( (is_same<test1_type, bool>::value) );\n \n+  // NB: DR 705.\n   typedef decay<const int>::type  \ttest2_type;\n-  VERIFY( (is_same<test2_type, const int>::value) );\n+  VERIFY( (is_same<test2_type, int>::value) );\n \n   typedef decay<int[4]>::type     \ttest3_type;\n   VERIFY( (is_same<test3_type, std::remove_extent<int[4]>::type*>::value) );"}]}