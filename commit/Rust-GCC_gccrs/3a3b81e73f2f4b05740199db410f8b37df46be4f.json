{"sha": "3a3b81e73f2f4b05740199db410f8b37df46be4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2EzYjgxZTczZjJmNGIwNTc0MDE5OWRiNDEwZjhiMzdkZjQ2YmU0Zg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2005-03-14T20:06:23Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2005-03-14T20:06:23Z"}, "message": "re PR rtl-optimization/18628 (miscompilation of switch statement in loop)\n\ngcc/ChangeLog:\nPR middle-end/18628\n* cse.c (fold_rtx_mem): Don't fold a load from a jumptable into a\nregister.\ngcc/testsuite/ChangeLog:\n* gcc.dg/pr18628.c: New.\n\nFrom-SVN: r96445", "tree": {"sha": "1c5ac4147db728d1db8cce06fbd59ea041cbd2c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c5ac4147db728d1db8cce06fbd59ea041cbd2c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a3b81e73f2f4b05740199db410f8b37df46be4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a3b81e73f2f4b05740199db410f8b37df46be4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a3b81e73f2f4b05740199db410f8b37df46be4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a3b81e73f2f4b05740199db410f8b37df46be4f/comments", "author": null, "committer": null, "parents": [{"sha": "aff98faf417c338db54204046c684b91d9788e55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aff98faf417c338db54204046c684b91d9788e55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aff98faf417c338db54204046c684b91d9788e55"}], "stats": {"total": 67, "additions": 65, "deletions": 2}, "files": [{"sha": "1e0a0f48f74ca59a7c46255ec8129bbe2b8091cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3b81e73f2f4b05740199db410f8b37df46be4f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3b81e73f2f4b05740199db410f8b37df46be4f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a3b81e73f2f4b05740199db410f8b37df46be4f", "patch": "@@ -1,3 +1,9 @@\n+2005-03-14  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR middle-end/18628\n+\t* cse.c (fold_rtx_mem): Don't fold a load from a jumptable into a\n+\tregister.\n+\n 2005-03-14  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/20280"}, {"sha": "fd5e21ac2ee13f3b9a2a9fe78afb64e5303c46c2", "filename": "gcc/cse.c", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3b81e73f2f4b05740199db410f8b37df46be4f/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3b81e73f2f4b05740199db410f8b37df46be4f/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=3a3b81e73f2f4b05740199db410f8b37df46be4f", "patch": "@@ -3515,8 +3515,30 @@ fold_rtx_mem (rtx x, rtx insn)\n \t    if (offset >= 0\n \t\t&& (offset / GET_MODE_SIZE (GET_MODE (table))\n \t\t    < XVECLEN (table, 0)))\n-\t      return XVECEXP (table, 0,\n-\t\t\t      offset / GET_MODE_SIZE (GET_MODE (table)));\n+\t      {\n+\t\trtx label = XVECEXP\n+\t\t  (table, 0, offset / GET_MODE_SIZE (GET_MODE (table)));\n+\t\trtx set;\n+\n+\t\t/* If we have an insn that loads the label from the\n+\t\t   jumptable into a reg, we don't want to set the reg\n+\t\t   to the label, because this may cause a reference to\n+\t\t   the label to remain after the label is removed in\n+\t\t   some very obscure cases (PR middle-end/18628).  */\n+\t\tif (!insn)\n+\t\t  return label;\n+\n+\t\tset = single_set (insn);\n+\n+\t\tif (! set || SET_SRC (set) != x)\n+\t\t  return x;\n+\n+\t\t/* If it's a jump, it's safe to reference the label.  */\n+\t\tif (SET_DEST (set) == pc_rtx)\n+\t\t  return label;\n+\n+\t\treturn x;\n+\t      }\n \t  }\n \tif (table_insn && JUMP_P (table_insn)\n \t    && GET_CODE (PATTERN (table_insn)) == ADDR_DIFF_VEC)"}, {"sha": "3053e823e8f68ec112ecb2667e400ca7b05b2ae5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3b81e73f2f4b05740199db410f8b37df46be4f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3b81e73f2f4b05740199db410f8b37df46be4f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3a3b81e73f2f4b05740199db410f8b37df46be4f", "patch": "@@ -1,3 +1,7 @@\n+2005-03-14  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* gcc.dg/pr18628.c: New.\n+\n 2005-03-14  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/20280"}, {"sha": "d365075b7291a3bac626879892f15b4d17eebe3d", "filename": "gcc/testsuite/gcc.dg/pr18628.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3b81e73f2f4b05740199db410f8b37df46be4f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18628.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3b81e73f2f4b05740199db410f8b37df46be4f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18628.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18628.c?ref=3a3b81e73f2f4b05740199db410f8b37df46be4f", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do link } */\n+/* { dg-options \"-O2\" } */\n+\n+/* PR middle-end/18628 exposed a problem in which cse folded a load\n+   from a jump table into the label that was the target of the branch.\n+   Unfortunately, the indirect jump was moved to a different basic\n+   block, and the LABEL_REF copied to the register wasn't enough to\n+   keep the cfg from optimizing the otherwise-unused label away.  So\n+   we ended up with a dangling reference to the label.  */\n+\n+int i;\n+\n+int main()\n+{\n+  for (;;)\n+  {\n+    switch (i)\n+    {\n+      case 0:\n+      case 1:\n+        return 1;\n+\n+      case 2:\n+      case 3:\n+        return 0;\n+\n+      case 5:\n+        --i;\n+    }\n+  }\n+}"}]}