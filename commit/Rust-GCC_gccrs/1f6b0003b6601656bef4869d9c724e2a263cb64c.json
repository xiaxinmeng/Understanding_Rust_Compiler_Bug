{"sha": "1f6b0003b6601656bef4869d9c724e2a263cb64c", "node_id": "C_kwDOANBUbNoAKDFmNmIwMDAzYjY2MDE2NTZiZWY0ODY5ZDljNzI0ZTJhMjYzY2I2NGM", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-12-08T00:16:23Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-12-08T00:16:23Z"}, "message": "Daily bump.", "tree": {"sha": "8f5bbfb16914ce3e57554e3d5e7382d782b5c106", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f5bbfb16914ce3e57554e3d5e7382d782b5c106"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f6b0003b6601656bef4869d9c724e2a263cb64c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f6b0003b6601656bef4869d9c724e2a263cb64c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f6b0003b6601656bef4869d9c724e2a263cb64c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f6b0003b6601656bef4869d9c724e2a263cb64c/comments", "author": null, "committer": null, "parents": [{"sha": "9eec77c0df9e5c67454a2e8f83246104458ba4f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9eec77c0df9e5c67454a2e8f83246104458ba4f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9eec77c0df9e5c67454a2e8f83246104458ba4f0"}], "stats": {"total": 143, "additions": 142, "deletions": 1}, "files": [{"sha": "7e8b67c8dc94a8edc27dceaa80688fbef870319b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f6b0003b6601656bef4869d9c724e2a263cb64c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f6b0003b6601656bef4869d9c724e2a263cb64c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f6b0003b6601656bef4869d9c724e2a263cb64c", "patch": "@@ -1,3 +1,57 @@\n+2021-12-07  Martin Liska  <mliska@suse.cz>\n+\n+\tPR middle-end/103438\n+\t* config/s390/s390.c (s390_valid_target_attribute_inner_p):\n+\tUse new enum CLVC_INTEGER.\n+\t* opt-functions.awk: Use new CLVC_INTEGER.\n+\t* opts-common.c (set_option): Likewise.\n+\t(option_enabled): Return -1,0,1 for CLVC_INTEGER.\n+\t(get_option_state): Use new CLVC_INTEGER.\n+\t(control_warning_option): Likewise.\n+\t* opts.h (enum cl_var_type): Likewise.\n+\n+2021-12-07  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/103594\n+\t* config/i386/i386.c (ix86_call_use_plt_p): Check FUNCTION_DECL\n+\tbefore calling cgraph_node::get.\n+\n+2021-12-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/103596\n+\t* tree-ssa-sccvn.c (eliminate_dom_walker::eliminate_stmt):\n+\tNote we are not propagating into a PHI argument to may_propagate_copy.\n+\t* tree-ssa-propagate.h (may_propagate_copy): Add\n+\targument specifying whether we propagate into a PHI arg.\n+\t* tree-ssa-propagate.c (may_propagate_copy): Likewise.\n+\tWhen not doing so we can replace an abnormal with\n+\tsomething else.\n+\t(may_propagate_into_stmt): Update may_propagate_copy calls.\n+\t(replace_exp_1): Move propagation checking code to\n+\tpropagate_value and rename to ...\n+\t(replace_exp): ... this and elide previous wrapper.\n+\t(propagate_value): Perform checking with adjusted\n+\tmay_propagate_copy call and dispatch to replace_exp.\n+\n+2021-12-07  Matthias Kretz  <m.kretz@gsi.de>\n+\n+\t* hash-map.h (hash_map::traverse): Let both overloads behave the\n+\tsame.\n+\t* predict.c (assert_is_empty): Return true, thus not changing\n+\tbehavior.\n+\n+2021-12-07  YunQiang Su  <yunqiang.su@cipunited.com>\n+\n+\t* config/mips/mips.h (ISA_HAS_UNALIGNED_ACCESS, STRICT_ALIGNMENT):\n+\t\tR6 can unaligned access.\n+\t* config/mips/mips.md (movmisalign<mode>): Likewise.\n+\t* config/mips/mips.opt: add -m(no-)unaligned-access\n+\t* doc/invoke.texi: Likewise.\n+\n+2021-12-07  Eugene Rozenfeld  <erozen@microsoft.com>\n+\n+\t* auto-profile.c (afdo_propagate_edge): Improve count propagation algorithm.\n+\n 2021-12-06  Paul A. Clarke  <pc@us.ibm.com>\n \n \tPR target/103545"}, {"sha": "fdf0dacb4c2d83a8967b61ee4a7d87f9d44841cb", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f6b0003b6601656bef4869d9c724e2a263cb64c/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f6b0003b6601656bef4869d9c724e2a263cb64c/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=1f6b0003b6601656bef4869d9c724e2a263cb64c", "patch": "@@ -1 +1 @@\n-20211207\n+20211208"}, {"sha": "ece8186beacbaed214df38a4d3db3c88aa50c936", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f6b0003b6601656bef4869d9c724e2a263cb64c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f6b0003b6601656bef4869d9c724e2a263cb64c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1f6b0003b6601656bef4869d9c724e2a263cb64c", "patch": "@@ -1,3 +1,10 @@\n+2021-12-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/95009\n+\t* typeck.c (is_bitfield_expr_with_lowered_type) <case MODIFY_EXPR>:\n+\tHandle UNARY_PLUS_EXPR, NEGATE_EXPR, NON_LVALUE_EXPR, BIT_NOT_EXPR,\n+\tP*CREMENT_EXPR too.\n+\n 2021-12-04  Jakub Jelinek  <jakub@redhat.com>\n \n \t* cp-tree.h (is_byte_access_type_not_plain_char): Declare."}, {"sha": "4fb4f3c6b0493eec787eba2cfdbd1a6db0ab1e5f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f6b0003b6601656bef4869d9c724e2a263cb64c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f6b0003b6601656bef4869d9c724e2a263cb64c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1f6b0003b6601656bef4869d9c724e2a263cb64c", "patch": "@@ -1,3 +1,21 @@\n+2021-12-07  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/103607\n+\t* frontend-passes.c (do_subscript): Ensure that array bounds are\n+\tof type INTEGER before performing checks on array subscripts.\n+\n+2021-12-07  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/103588\n+\t* array.c (gfc_ref_dimen_size): Do not generate internal error on\n+\tfailed simplification of stride expression; just return failure.\n+\n+2021-12-07  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/103591\n+\t* match.c (match_case_selector): Check type of upper bound in case\n+\trange.\n+\n 2021-12-04  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* dump-parse-tree.c (show_omp_clauses): Handle"}, {"sha": "aac6350535fc8f4205aa000890cf37d7c1d45665", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f6b0003b6601656bef4869d9c724e2a263cb64c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f6b0003b6601656bef4869d9c724e2a263cb64c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1f6b0003b6601656bef4869d9c724e2a263cb64c", "patch": "@@ -1,3 +1,55 @@\n+2021-12-07  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/103607\n+\t* gfortran.dg/pr103607.f90: New test.\n+\n+2021-12-07  Marek Polacek  <polacek@redhat.com>\n+\n+\t* g++.dg/cpp0x/decltype-bitfield1.C: Change a type to unsigned\n+\tlong long.  Only run on longlong64 targets.\n+\n+2021-12-07  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\tPR testsuite/103556\n+\tPR testsuite/103586\n+\t* lib/target-supports.exp (check_effective_target_rop_ok): Remove '\\n'.\n+\n+2021-12-07  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/103588\n+\t* gfortran.dg/pr103588.f90: New test.\n+\n+2021-12-07  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/103591\n+\t* gfortran.dg/select_9.f90: New test.\n+\n+2021-12-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/95009\n+\t* g++.dg/cpp0x/decltype-bitfield1.C: New test.\n+\t* g++.dg/cpp0x/decltype-bitfield2.C: New test.\n+\n+2021-12-07  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/103594\n+\t* gcc.dg/pr103594.c: New test.\n+\n+2021-12-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/103596\n+\t* gcc.dg/torture/pr103596.c: New testcase.\n+\n+2021-12-07  YunQiang Su  <yunqiang.su@cipunited.com>\n+\n+\t* gcc.target/mips/mips.exp: add unaligned-access\n+\t* gcc.target/mips/unaligned-2.c: New test.\n+\t* gcc.target/mips/unaligned-3.c: New test.\n+\n+2021-12-07  Eugene Rozenfeld  <erozen@microsoft.com>\n+\n+\t* gcc.dg/tree-prof/init-array.c: New test for unrolling inner loops.\n+\n 2021-12-06  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/103581"}, {"sha": "4e9825f1897d24296e11c853115b347e7bcba2b9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f6b0003b6601656bef4869d9c724e2a263cb64c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f6b0003b6601656bef4869d9c724e2a263cb64c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1f6b0003b6601656bef4869d9c724e2a263cb64c", "patch": "@@ -1,3 +1,13 @@\n+2021-12-07  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tRevert:\n+\t2021-11-19  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR libstdc++/103305\n+\t* config/os/newlib/ctype_base.h (upper, lower, alpha, digit, xdigit,\n+\tspace, print, graph, cntrl, punct, alnum, blank): Use short or long\n+\tnames depending on if short ones are defined.\n+\n 2021-12-04  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/103549"}]}