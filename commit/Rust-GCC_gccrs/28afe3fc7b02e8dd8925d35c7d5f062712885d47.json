{"sha": "28afe3fc7b02e8dd8925d35c7d5f062712885d47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhhZmUzZmM3YjAyZThkZDg5MjVkMzVjN2Q1ZjA2MjcxMjg4NWQ0Nw==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2012-12-21T22:06:38Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2012-12-21T22:06:38Z"}, "message": "re PR tree-optimization/55355 (internal compiler error: in tree_low_cst, at tree.c:6415)\n\n2012-12-21  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/55355\n\t* tree-sra.c (type_internals_preclude_sra_p): Also check that\n\tbit_position is small enough to fit a single HOST_WIDE_INT.\n\n\t* testsuite/g++.dg/torture/pr55355.C: New test.\n\nFrom-SVN: r194682", "tree": {"sha": "0c0efc5d601d7b0ae1e8707ebec73c815804ffe4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c0efc5d601d7b0ae1e8707ebec73c815804ffe4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28afe3fc7b02e8dd8925d35c7d5f062712885d47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28afe3fc7b02e8dd8925d35c7d5f062712885d47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28afe3fc7b02e8dd8925d35c7d5f062712885d47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28afe3fc7b02e8dd8925d35c7d5f062712885d47/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c84a808e493a4041b64a91eb662042d490f8f84c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c84a808e493a4041b64a91eb662042d490f8f84c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c84a808e493a4041b64a91eb662042d490f8f84c"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "8bc25edd86c4cb481cd3a2d2dcf32ab2c5ed13ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28afe3fc7b02e8dd8925d35c7d5f062712885d47/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28afe3fc7b02e8dd8925d35c7d5f062712885d47/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28afe3fc7b02e8dd8925d35c7d5f062712885d47", "patch": "@@ -1,3 +1,9 @@\n+2012-12-21  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/55355\n+\t* tree-sra.c (type_internals_preclude_sra_p): Also check that\n+\tbit_position is small enough to fit a single HOST_WIDE_INT.\n+\n 2012-12-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* rtlanal.c (volatile_insn_p): Delete commented out code."}, {"sha": "3fa83c217a9a662d24af96b0f8c05c88ed282a2b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28afe3fc7b02e8dd8925d35c7d5f062712885d47/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28afe3fc7b02e8dd8925d35c7d5f062712885d47/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=28afe3fc7b02e8dd8925d35c7d5f062712885d47", "patch": "@@ -1,3 +1,8 @@\n+2012-12-21  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/55355\n+\t* g++.dg/torture/pr55355.C: New test.\n+\n 2012-12-21  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR middle-end/55775"}, {"sha": "6d8f8b6be1ec2f83843fb408719095d5b90f469c", "filename": "gcc/testsuite/g++.dg/torture/pr55355.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28afe3fc7b02e8dd8925d35c7d5f062712885d47/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr55355.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28afe3fc7b02e8dd8925d35c7d5f062712885d47/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr55355.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr55355.C?ref=28afe3fc7b02e8dd8925d35c7d5f062712885d47", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+\n+struct A\n+{\n+    void funcA(void);\n+};\n+\n+struct B {};\n+\n+struct C\n+{\n+    void funcC(void) { a_mp->funcA(); }\n+\n+    char buf_ma[268435456];\n+    A   *a_mp;\n+    B    b_m;\n+};\n+\n+void\n+func(C *c_p)\n+{\n+    c_p->funcC();\n+}"}, {"sha": "286ef266920ed768411e8646041557dc52ec1009", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28afe3fc7b02e8dd8925d35c7d5f062712885d47/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28afe3fc7b02e8dd8925d35c7d5f062712885d47/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=28afe3fc7b02e8dd8925d35c7d5f062712885d47", "patch": "@@ -714,7 +714,12 @@ type_internals_preclude_sra_p (tree type, const char **msg)\n \t      {\n \t        *msg = \"structure field size not fixed\";\n \t\treturn true;\n-\t      }\t      \n+\t      }\n+\t    if (!host_integerp (bit_position (fld), 0))\n+\t      {\n+\t        *msg = \"structure field size too big\";\n+\t\treturn true;\n+\t      }\n \t    if (AGGREGATE_TYPE_P (ft)\n \t\t    && int_bit_position (fld) % BITS_PER_UNIT != 0)\n \t      {"}]}