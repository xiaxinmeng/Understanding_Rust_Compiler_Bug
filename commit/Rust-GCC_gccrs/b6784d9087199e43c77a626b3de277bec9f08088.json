{"sha": "b6784d9087199e43c77a626b3de277bec9f08088", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY3ODRkOTA4NzE5OWU0M2M3N2E2MjZiM2RlMjc3YmVjOWYwODA4OA==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-05-24T13:05:54Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-24T13:05:54Z"}, "message": "[Ada] Minor reformatting\n\n2018-05-24  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch7.adb, sem_ch3.adb, sem_res.adb: Minor reformatting.\n\nFrom-SVN: r260658", "tree": {"sha": "0fe89245a17647437563faf5fa56b4f467e2f8ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fe89245a17647437563faf5fa56b4f467e2f8ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6784d9087199e43c77a626b3de277bec9f08088", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6784d9087199e43c77a626b3de277bec9f08088", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6784d9087199e43c77a626b3de277bec9f08088", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6784d9087199e43c77a626b3de277bec9f08088/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "861e589e8b957713fb02b5db0773c39bed2dcc61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/861e589e8b957713fb02b5db0773c39bed2dcc61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/861e589e8b957713fb02b5db0773c39bed2dcc61"}], "stats": {"total": 44, "additions": 27, "deletions": 17}, "files": [{"sha": "cf19019775da9012c6ac2599300d37fac444e1e3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6784d9087199e43c77a626b3de277bec9f08088/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6784d9087199e43c77a626b3de277bec9f08088/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b6784d9087199e43c77a626b3de277bec9f08088", "patch": "@@ -1,3 +1,7 @@\n+2018-05-24  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch7.adb, sem_ch3.adb, sem_res.adb: Minor reformatting.\n+\n 2018-05-24  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_aggr.adb (Flatten): Add a warning on an others clause in an array"}, {"sha": "de21674c4463e66be8f1d949ed846e51a707410c", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6784d9087199e43c77a626b3de277bec9f08088/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6784d9087199e43c77a626b3de277bec9f08088/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=b6784d9087199e43c77a626b3de277bec9f08088", "patch": "@@ -1781,15 +1781,20 @@ package body Exp_Ch7 is\n \n          if Present (Mark_Id) then\n             declare\n-               Release : Node_Id :=\n-                 Build_SS_Release_Call (Loc, Mark_Id);\n+               Release : Node_Id := Build_SS_Release_Call (Loc, Mark_Id);\n+\n             begin\n-               --  If this is a build-in-place function, then we need to\n-               --  release the secondary stack, unless we are returning on the\n-               --  secondary stack. We wrap the release call in:\n-               --    if BIP_Alloc_Form /= Secondary_Stack then ...\n-               --  If we are returning on the secondary stack, then releasing\n-               --  is the caller's responsibility (or caller's caller, or ...).\n+               --  If the context is a build-in-place function, the secondary\n+               --  stack must be released, unless the build-in-place function\n+               --  itself is returning on the secondary stack. Generate:\n+               --\n+               --    if BIP_Alloc_Form /= Secondary_Stack then\n+               --       SS_Release (Mark_Id);\n+               --    end if;\n+               --\n+               --  Note that if the function returns on the secondary stack,\n+               --  then the responsibility of reclaiming the space is always\n+               --  left to the caller (recursively if needed).\n \n                if Nkind (N) = N_Subprogram_Body then\n                   declare\n@@ -1802,16 +1807,17 @@ package body Exp_Ch7 is\n                      if BIP_SS then\n                         Release :=\n                           Make_If_Statement (Loc,\n-                            Condition =>\n+                            Condition       =>\n                               Make_Op_Ne (Loc,\n                                 Left_Opnd  =>\n                                   New_Occurrence_Of\n                                     (Build_In_Place_Formal\n                                       (Spec_Id, BIP_Alloc_Form), Loc),\n                                 Right_Opnd =>\n                                   Make_Integer_Literal (Loc,\n-                                    UI_From_Int (BIP_Allocation_Form'Pos\n-                                                   (Secondary_Stack)))),\n+                                    UI_From_Int\n+                                      (BIP_Allocation_Form'Pos\n+                                        (Secondary_Stack)))),\n \n                             Then_Statements => New_List (Release));\n                      end if;"}, {"sha": "1a3e4d42186b7dba6618138751e03f8dd09353d7", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6784d9087199e43c77a626b3de277bec9f08088/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6784d9087199e43c77a626b3de277bec9f08088/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=b6784d9087199e43c77a626b3de277bec9f08088", "patch": "@@ -7862,7 +7862,7 @@ package body Sem_Ch3 is\n \n          if Present (Full_View (Parent_Type))\n            and then not Is_Itype (Derived_Type)\n-           and then not (Is_Concurrent_Type (Full_View (Parent_Type)))\n+           and then not Is_Concurrent_Type (Full_View (Parent_Type))\n          then\n             declare\n                Der_Base   : constant Entity_Id := Base_Type (Derived_Type);\n@@ -13444,7 +13444,7 @@ package body Sem_Ch3 is\n          if Is_Itype (Def_Id) and then Has_Predicates (T) then\n             Inherit_Predicate_Flags (Def_Id, T);\n \n-            --  Indicate where the predicate function may be found.\n+            --  Indicate where the predicate function may be found\n \n             if Is_Itype (T) then\n                if Present (Predicate_Function (Def_Id)) then\n@@ -21759,7 +21759,7 @@ package body Sem_Ch3 is\n          if Has_Predicates (Subtype_Mark_Id) then\n             Inherit_Predicate_Flags (Def_Id, Subtype_Mark_Id);\n \n-            --  Indicate where the predicate function may be found.\n+            --  Indicate where the predicate function may be found\n \n             if No (Predicate_Function (Def_Id)) then\n                Set_Predicated_Parent (Def_Id, Subtype_Mark_Id);"}, {"sha": "6329d92fd72616c213783c33d438fd681dc7913f", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6784d9087199e43c77a626b3de277bec9f08088/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6784d9087199e43c77a626b3de277bec9f08088/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=b6784d9087199e43c77a626b3de277bec9f08088", "patch": "@@ -7293,9 +7293,9 @@ package body Sem_Res is\n          end if;\n       end if;\n \n-      --  We may be resolving an entity within expanded code, so a reference\n-      --  to an entity should be ignored when calculating effective use clauses\n-      --  to avoid inappropriate marking.\n+      --  We may be resolving an entity within expanded code, so a reference to\n+      --  an entity should be ignored when calculating effective use clauses to\n+      --  avoid inappropriate marking.\n \n       if Comes_From_Source (N) then\n          Mark_Use_Clauses (E);"}]}