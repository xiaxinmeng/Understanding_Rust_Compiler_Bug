{"sha": "56609046169fd76b40c2303288858db63cb721ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY2MDkwNDYxNjlmZDc2YjQwYzIzMDMyODg4NThkYjYzY2I3MjFmZg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1999-04-07T08:01:31Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1999-04-07T08:01:31Z"}, "message": "Initial revision\n\nFrom-SVN: r26247", "tree": {"sha": "f5cd2a4da66426592107c2e1d7d0b114383d1c30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5cd2a4da66426592107c2e1d7d0b114383d1c30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56609046169fd76b40c2303288858db63cb721ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56609046169fd76b40c2303288858db63cb721ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56609046169fd76b40c2303288858db63cb721ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56609046169fd76b40c2303288858db63cb721ff/comments", "author": null, "committer": null, "parents": [{"sha": "73ffefd017128fecccdd52aa8b6fb9f042e0bbb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73ffefd017128fecccdd52aa8b6fb9f042e0bbb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73ffefd017128fecccdd52aa8b6fb9f042e0bbb8"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "f920bf0093c90739e23468cf8e24f9b7fafd81a8", "filename": "boehm-gc/alpha_mach_dep.s", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56609046169fd76b40c2303288858db63cb721ff/boehm-gc%2Falpha_mach_dep.s", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56609046169fd76b40c2303288858db63cb721ff/boehm-gc%2Falpha_mach_dep.s", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Falpha_mach_dep.s?ref=56609046169fd76b40c2303288858db63cb721ff", "patch": "@@ -0,0 +1,60 @@\n+ # $Id: alpha_mach_dep.s,v 1.1 1999/04/07 14:56:06 tromey Exp $\n+\n+# define call_push(x)    \t\t\t\t\t\t\\\n+\tlda   $16, 0(x);    \t/* copy x to first argument register */\t\\\n+\tjsr   $26, GC_push_one; /* call GC_push_one, ret addr in $26 */\t\\\n+\tldgp  $gp, 0($26)\t/* restore $gp register from $ra */\n+\t\n+        .text\n+        .align  4\n+        .globl  GC_push_regs\n+        .ent    GC_push_regs 2\n+GC_push_regs:\n+\tldgp    $gp, 0($27)\t\t# set gp from the procedure value reg\n+\tlda     $sp, -32($sp)\t\t# make stack frame\n+\tstq     $26, 8($sp)\t\t# save return address\n+        .mask   0x04000000, -8\n+        .frame  $sp, 16, $26, 0\n+\n+ #      call_push($0)    # expression eval and int func result\n+\n+ #      call_push($1)    # temp regs - not preserved cross calls\n+ #      call_push($2)\n+ #      call_push($3)\n+ #      call_push($4)\n+ #      call_push($5)\n+ #      call_push($6)\n+ #      call_push($7)\n+ #      call_push($8)\n+\n+        call_push($9)    # Saved regs\n+        call_push($10)\n+        call_push($11)\n+        call_push($12)\n+        call_push($13)\n+        call_push($14)\n+\n+        call_push($15)   # frame ptr or saved reg\n+\n+ #      call_push($16)   # argument regs - not preserved cross calls\n+ #      call_push($17)\n+ #      call_push($18)\n+ #      call_push($19)\n+ #      call_push($20)\n+ #      call_push($21)\n+\n+ #      call_push($22)   # temp regs - not preserved cross calls\n+ #      call_push($23)\n+ #      call_push($24)\n+ #      call_push($25)\n+\n+ #      call_push($26)   # return address - expression eval\n+ #      call_push($27)   # procedure value or temporary reg\n+ #      call_push($28)   # assembler temp - not presrved\n+        call_push($29)   # Global Pointer\n+ #      call_push($30)   # Stack Pointer\n+\n+\tldq     $26, 8($sp)\t\t# restore return address\n+\tlda     $sp, 32($sp)\t\t# pop stack frame\n+\tret     $31, ($26), 1\t\t# return ($31 == hardwired zero)\n+\t.end    GC_push_regs"}]}