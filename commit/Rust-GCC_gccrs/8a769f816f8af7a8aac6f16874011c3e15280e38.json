{"sha": "8a769f816f8af7a8aac6f16874011c3e15280e38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE3NjlmODE2ZjhhZjdhOGFhYzZmMTY4NzQwMTFjM2UxNTI4MGUzOA==", "commit": {"author": {"name": "Matthew Malcomson", "email": "matthew.malcomson@arm.com", "date": "2020-11-25T16:31:39Z"}, "committer": {"name": "Matthew Malcomson", "email": "matthew.malcomson@arm.com", "date": "2020-11-25T16:35:35Z"}, "message": "libsanitizer:  Only build libhwasan when targeting AArch64\n\nThough the library has limited support for x86, we don't have any\nsupport for generating code targeting x86 so there is no point building\nfor that target.\n\nEnsure we build for AArch64 but not for AArch64 ilp32.\n\nlibsanitizer/ChangeLog:\n\n\t* Makefile.am: Condition Build hwasan directory.\n\t* Makefile.in: Regenerate.\n\t* configure: Regenerate.\n\t* configure.ac: Set HWASAN_SUPPORTED based on target\n\tarchitecture.\n\t* configure.tgt: Likewise.", "tree": {"sha": "eda23cbdda6dccbf3f6c73a7fa0f57390cb8937f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eda23cbdda6dccbf3f6c73a7fa0f57390cb8937f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a769f816f8af7a8aac6f16874011c3e15280e38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a769f816f8af7a8aac6f16874011c3e15280e38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a769f816f8af7a8aac6f16874011c3e15280e38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a769f816f8af7a8aac6f16874011c3e15280e38/comments", "author": {"login": "mmalcomson", "id": 57484298, "node_id": "MDQ6VXNlcjU3NDg0Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmalcomson", "html_url": "https://github.com/mmalcomson", "followers_url": "https://api.github.com/users/mmalcomson/followers", "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}", "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions", "organizations_url": "https://api.github.com/users/mmalcomson/orgs", "repos_url": "https://api.github.com/users/mmalcomson/repos", "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}", "received_events_url": "https://api.github.com/users/mmalcomson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmalcomson", "id": 57484298, "node_id": "MDQ6VXNlcjU3NDg0Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmalcomson", "html_url": "https://github.com/mmalcomson", "followers_url": "https://api.github.com/users/mmalcomson/followers", "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}", "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions", "organizations_url": "https://api.github.com/users/mmalcomson/orgs", "repos_url": "https://api.github.com/users/mmalcomson/repos", "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}", "received_events_url": "https://api.github.com/users/mmalcomson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edb07cb95afc362f7f76d2ab1ed9d14ad0ee300d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edb07cb95afc362f7f76d2ab1ed9d14ad0ee300d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edb07cb95afc362f7f76d2ab1ed9d14ad0ee300d"}], "stats": {"total": 78, "additions": 60, "deletions": 18}, "files": [{"sha": "065a65e78d49f7689a01ecb64db1f07ca83aa987", "filename": "libsanitizer/Makefile.am", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a769f816f8af7a8aac6f16874011c3e15280e38/libsanitizer%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a769f816f8af7a8aac6f16874011c3e15280e38/libsanitizer%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FMakefile.am?ref=8a769f816f8af7a8aac6f16874011c3e15280e38", "patch": "@@ -14,7 +14,7 @@ endif\n if LIBBACKTRACE_SUPPORTED\n SUBDIRS += libbacktrace\n endif\n-SUBDIRS += lsan asan ubsan hwasan\n+SUBDIRS += lsan asan ubsan\n nodist_saninclude_HEADERS += \\\n   include/sanitizer/lsan_interface.h \\\n   include/sanitizer/asan_interface.h \\\n@@ -23,6 +23,9 @@ nodist_saninclude_HEADERS += \\\n if TSAN_SUPPORTED\n SUBDIRS += tsan\n endif\n+if HWASAN_SUPPORTED\n+SUBDIRS += hwasan\n+endif\n endif\n \n ## May be used by toolexeclibdir."}, {"sha": "3873ea4d7050f04a3f7bbd0dd3f2a71e9b65d287", "filename": "libsanitizer/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a769f816f8af7a8aac6f16874011c3e15280e38/libsanitizer%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a769f816f8af7a8aac6f16874011c3e15280e38/libsanitizer%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FMakefile.in?ref=8a769f816f8af7a8aac6f16874011c3e15280e38", "patch": "@@ -97,6 +97,7 @@ target_triplet = @target@\n @SANITIZER_SUPPORTED_TRUE@@USING_MAC_INTERPOSE_FALSE@am__append_2 = interception\n @LIBBACKTRACE_SUPPORTED_TRUE@@SANITIZER_SUPPORTED_TRUE@am__append_3 = libbacktrace\n @SANITIZER_SUPPORTED_TRUE@@TSAN_SUPPORTED_TRUE@am__append_4 = tsan\n+@HWASAN_SUPPORTED_TRUE@@SANITIZER_SUPPORTED_TRUE@am__append_5 = hwasan\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n@@ -208,7 +209,7 @@ ETAGS = etags\n CTAGS = ctags\n CSCOPE = cscope\n DIST_SUBDIRS = sanitizer_common interception libbacktrace lsan asan \\\n-\tubsan hwasan tsan\n+\tubsan tsan hwasan\n ACLOCAL = @ACLOCAL@\n ALLOC_FILE = @ALLOC_FILE@\n AMTAR = @AMTAR@\n@@ -364,7 +365,7 @@ sanincludedir = $(libdir)/gcc/$(target_alias)/$(gcc_version)/include/sanitizer\n nodist_saninclude_HEADERS = $(am__append_1)\n @SANITIZER_SUPPORTED_TRUE@SUBDIRS = sanitizer_common $(am__append_2) \\\n @SANITIZER_SUPPORTED_TRUE@\t$(am__append_3) lsan asan ubsan \\\n-@SANITIZER_SUPPORTED_TRUE@\thwasan $(am__append_4)\n+@SANITIZER_SUPPORTED_TRUE@\t$(am__append_4) $(am__append_5)\n gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS"}, {"sha": "720d4e17044170e4b91c42fede685761d98c1965", "filename": "libsanitizer/configure", "status": "modified", "additions": 34, "deletions": 14, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a769f816f8af7a8aac6f16874011c3e15280e38/libsanitizer%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a769f816f8af7a8aac6f16874011c3e15280e38/libsanitizer%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure?ref=8a769f816f8af7a8aac6f16874011c3e15280e38", "patch": "@@ -659,6 +659,8 @@ link_libubsan\n link_libtsan\n link_libhwasan\n link_libasan\n+HWASAN_SUPPORTED_FALSE\n+HWASAN_SUPPORTED_TRUE\n LSAN_SUPPORTED_FALSE\n LSAN_SUPPORTED_TRUE\n TSAN_SUPPORTED_FALSE\n@@ -12362,7 +12364,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12365 \"configure\"\n+#line 12367 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12468,7 +12470,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12471 \"configure\"\n+#line 12473 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15819,6 +15821,7 @@ fi\n # Get target configury.\n unset TSAN_SUPPORTED\n unset LSAN_SUPPORTED\n+unset HWASAN_SUPPORTED\n . ${srcdir}/configure.tgt\n  if test \"x$TSAN_SUPPORTED\" = \"xyes\"; then\n   TSAN_SUPPORTED_TRUE=\n@@ -15836,6 +15839,14 @@ else\n   LSAN_SUPPORTED_FALSE=\n fi\n \n+ if test \"x$HWASAN_SUPPORTED\" = \"xyes\"; then\n+  HWASAN_SUPPORTED_TRUE=\n+  HWASAN_SUPPORTED_FALSE='#'\n+else\n+  HWASAN_SUPPORTED_TRUE='#'\n+  HWASAN_SUPPORTED_FALSE=\n+fi\n+\n \n # Check for functions needed.\n for ac_func in clock_getres clock_gettime clock_settime lstat readlink\n@@ -16818,14 +16829,19 @@ ac_config_files=\"$ac_config_files Makefile libsanitizer.spec libbacktrace/backtr\n ac_config_headers=\"$ac_config_headers config.h\"\n \n \n-ac_config_files=\"$ac_config_files interception/Makefile sanitizer_common/Makefile libbacktrace/Makefile lsan/Makefile asan/Makefile hwasan/Makefile ubsan/Makefile\"\n+ac_config_files=\"$ac_config_files interception/Makefile sanitizer_common/Makefile libbacktrace/Makefile lsan/Makefile asan/Makefile ubsan/Makefile\"\n \n \n if test \"x$TSAN_SUPPORTED\" = \"xyes\"; then\n   ac_config_files=\"$ac_config_files tsan/Makefile\"\n \n fi\n \n+if test \"x$HWASAN_SUPPORTED\" = \"xyes\"; then\n+  ac_config_files=\"$ac_config_files hwasan/Makefile\"\n+\n+fi\n+\n \n \n \n@@ -17090,6 +17106,10 @@ if test -z \"${LSAN_SUPPORTED_TRUE}\" && test -z \"${LSAN_SUPPORTED_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"LSAN_SUPPORTED\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${HWASAN_SUPPORTED_TRUE}\" && test -z \"${HWASAN_SUPPORTED_FALSE}\"; then\n+  as_fn_error $? \"conditional \\\"HWASAN_SUPPORTED\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${USING_MAC_INTERPOSE_TRUE}\" && test -z \"${USING_MAC_INTERPOSE_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"USING_MAC_INTERPOSE\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n@@ -18099,9 +18119,9 @@ do\n     \"libbacktrace/Makefile\") CONFIG_FILES=\"$CONFIG_FILES libbacktrace/Makefile\" ;;\n     \"lsan/Makefile\") CONFIG_FILES=\"$CONFIG_FILES lsan/Makefile\" ;;\n     \"asan/Makefile\") CONFIG_FILES=\"$CONFIG_FILES asan/Makefile\" ;;\n-    \"hwasan/Makefile\") CONFIG_FILES=\"$CONFIG_FILES hwasan/Makefile\" ;;\n     \"ubsan/Makefile\") CONFIG_FILES=\"$CONFIG_FILES ubsan/Makefile\" ;;\n     \"tsan/Makefile\") CONFIG_FILES=\"$CONFIG_FILES tsan/Makefile\" ;;\n+    \"hwasan/Makefile\") CONFIG_FILES=\"$CONFIG_FILES hwasan/Makefile\" ;;\n \n   *) as_fn_error $? \"invalid argument: \\`$ac_config_target'\" \"$LINENO\" 5;;\n   esac\n@@ -20035,7 +20055,7 @@ _EOF\n    . ${multi_basedir}/config-ml.in\n    { ml_norecursion=; unset ml_norecursion;}\n  ;;\n-    \"hwasan/Makefile\":F) cat > vpsed$$ << \\_EOF\n+    \"ubsan/Makefile\":F) cat > vpsed$$ << \\_EOF\n s!`test -f '$<' || echo '$(srcdir)/'`!!\n _EOF\n    sed -f vpsed$$ $ac_file > tmp$$\n@@ -20046,18 +20066,18 @@ _EOF\n    . ${multi_basedir}/config-ml.in\n    { ml_norecursion=; unset ml_norecursion;}\n  ;;\n-    \"ubsan/Makefile\":F) cat > vpsed$$ << \\_EOF\n+    \"tsan/Makefile\":F) cat > vpsed$$ << \\_EOF\n s!`test -f '$<' || echo '$(srcdir)/'`!!\n _EOF\n-   sed -f vpsed$$ $ac_file > tmp$$\n-   mv tmp$$ $ac_file\n-   rm vpsed$$\n-   echo 'MULTISUBDIR =' >> $ac_file\n-   ml_norecursion=yes\n-   . ${multi_basedir}/config-ml.in\n-   { ml_norecursion=; unset ml_norecursion;}\n+    sed -f vpsed$$ $ac_file > tmp$$\n+    mv tmp$$ $ac_file\n+    rm vpsed$$\n+    echo 'MULTISUBDIR =' >> $ac_file\n+    ml_norecursion=yes\n+    . ${multi_basedir}/config-ml.in\n+    { ml_norecursion=; unset ml_norecursion;}\n  ;;\n-    \"tsan/Makefile\":F) cat > vpsed$$ << \\_EOF\n+    \"hwasan/Makefile\":F) cat > vpsed$$ << \\_EOF\n s!`test -f '$<' || echo '$(srcdir)/'`!!\n _EOF\n     sed -f vpsed$$ $ac_file > tmp$$"}, {"sha": "13cd302030db7d0107ac8de0863d42558dea5c71", "filename": "libsanitizer/configure.ac", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a769f816f8af7a8aac6f16874011c3e15280e38/libsanitizer%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a769f816f8af7a8aac6f16874011c3e15280e38/libsanitizer%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure.ac?ref=8a769f816f8af7a8aac6f16874011c3e15280e38", "patch": "@@ -96,9 +96,11 @@ fi\n # Get target configury.\n unset TSAN_SUPPORTED\n unset LSAN_SUPPORTED\n+unset HWASAN_SUPPORTED\n . ${srcdir}/configure.tgt\n AM_CONDITIONAL(TSAN_SUPPORTED, [test \"x$TSAN_SUPPORTED\" = \"xyes\"])\n AM_CONDITIONAL(LSAN_SUPPORTED, [test \"x$LSAN_SUPPORTED\" = \"xyes\"])\n+AM_CONDITIONAL(HWASAN_SUPPORTED, [test \"x$HWASAN_SUPPORTED\" = \"xyes\"])\n \n # Check for functions needed.\n AC_CHECK_FUNCS(clock_getres clock_gettime clock_settime lstat readlink)\n@@ -352,7 +354,7 @@ AH_BOTTOM([#include \"libbacktrace/backtrace-rename.h\"])\n AC_CONFIG_FILES([Makefile libsanitizer.spec libbacktrace/backtrace-supported.h])\n AC_CONFIG_HEADER(config.h)\n \n-AC_CONFIG_FILES(AC_FOREACH([DIR], [interception sanitizer_common libbacktrace lsan asan hwasan ubsan], [DIR/Makefile ]),\n+AC_CONFIG_FILES(AC_FOREACH([DIR], [interception sanitizer_common libbacktrace lsan asan ubsan], [DIR/Makefile ]),\n   [cat > vpsed$$ << \\_EOF\n s!`test -f '$<' || echo '$(srcdir)/'`!!\n _EOF\n@@ -380,6 +382,21 @@ _EOF\n ])\n fi\n \n+if test \"x$HWASAN_SUPPORTED\" = \"xyes\"; then\n+  AC_CONFIG_FILES(AC_FOREACH([DIR], [hwasan], [DIR/Makefile ]), \n+    [cat > vpsed$$ << \\_EOF\n+s!`test -f '$<' || echo '$(srcdir)/'`!!\n+_EOF\n+    sed -f vpsed$$ $ac_file > tmp$$\n+    mv tmp$$ $ac_file\n+    rm vpsed$$\n+    echo 'MULTISUBDIR =' >> $ac_file\n+    ml_norecursion=yes\n+    . ${multi_basedir}/config-ml.in\n+    AS_UNSET([ml_norecursion])\n+])\n+fi\n+\n AC_SUBST([TSAN_TARGET_DEPENDENT_OBJECTS])\n AC_SUBST([SANITIZER_COMMON_TARGET_DEPENDENT_OBJECTS])\n "}, {"sha": "5d1dba1826669e64550c8267cbce54abd0ade973", "filename": "libsanitizer/configure.tgt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a769f816f8af7a8aac6f16874011c3e15280e38/libsanitizer%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a769f816f8af7a8aac6f16874011c3e15280e38/libsanitizer%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure.tgt?ref=8a769f816f8af7a8aac6f16874011c3e15280e38", "patch": "@@ -60,6 +60,7 @@ case \"${target}\" in\n \t\tTSAN_SUPPORTED=yes\n \t\tLSAN_SUPPORTED=yes\n \t\tTSAN_TARGET_DEPENDENT_OBJECTS=tsan_rtl_aarch64.lo\n+\t\tHWASAN_SUPPORTED=yes\n \tfi\n \t;;\n   x86_64-*-darwin2* | x86_64-*-darwin1[2-9]* | i?86-*-darwin1[2-9]*)"}]}