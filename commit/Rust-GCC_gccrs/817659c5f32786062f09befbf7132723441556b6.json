{"sha": "817659c5f32786062f09befbf7132723441556b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE3NjU5YzVmMzI3ODYwNjJmMDliZWZiZjcxMzI3MjM0NDE1NTZiNg==", "commit": {"author": {"name": "Jerome Lambourg", "email": "lambourg@adacore.com", "date": "2018-05-22T13:26:33Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-22T13:26:33Z"}, "message": "[Ada] Fix the signal trampoline on QNX\n\nThe trampoline now properly restores the link register as well as the stack\npointer. As a minor optimisation, now only callee-saved registers are\nrestored: the scratch registers don't need that.\n\n2018-05-22  Jerome Lambourg  <lambourg@adacore.com>\n\ngcc/ada/\n\n\t* sigtramp-qnx.c: Properly restore link register in signal trampoline.\n\nFrom-SVN: r260530", "tree": {"sha": "97cbe1e933bf5ebaf35ed066115384293c9b6cee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97cbe1e933bf5ebaf35ed066115384293c9b6cee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/817659c5f32786062f09befbf7132723441556b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/817659c5f32786062f09befbf7132723441556b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/817659c5f32786062f09befbf7132723441556b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/817659c5f32786062f09befbf7132723441556b6/comments", "author": {"login": "lambourg", "id": 480233, "node_id": "MDQ6VXNlcjQ4MDIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/480233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambourg", "html_url": "https://github.com/lambourg", "followers_url": "https://api.github.com/users/lambourg/followers", "following_url": "https://api.github.com/users/lambourg/following{/other_user}", "gists_url": "https://api.github.com/users/lambourg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambourg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambourg/subscriptions", "organizations_url": "https://api.github.com/users/lambourg/orgs", "repos_url": "https://api.github.com/users/lambourg/repos", "events_url": "https://api.github.com/users/lambourg/events{/privacy}", "received_events_url": "https://api.github.com/users/lambourg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "529749b9480f8690c8474cd782664a2d38459ad2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/529749b9480f8690c8474cd782664a2d38459ad2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/529749b9480f8690c8474cd782664a2d38459ad2"}], "stats": {"total": 33, "additions": 13, "deletions": 20}, "files": [{"sha": "985f876649410137ecd10c7fbce678c9a0e55374", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/817659c5f32786062f09befbf7132723441556b6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/817659c5f32786062f09befbf7132723441556b6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=817659c5f32786062f09befbf7132723441556b6", "patch": "@@ -1,3 +1,7 @@\n+2018-05-22  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* sigtramp-qnx.c: Properly restore link register in signal trampoline.\n+\n 2018-05-22  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_aggr.adb (Aggr_Assignment_OK_For_Backend): Strip away any"}, {"sha": "d0968ded8a17dad3f6692c78e00cfee2e02f06bb", "filename": "gcc/ada/sigtramp-qnx.c", "status": "modified", "additions": 9, "deletions": 20, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/817659c5f32786062f09befbf7132723441556b6/gcc%2Fada%2Fsigtramp-qnx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/817659c5f32786062f09befbf7132723441556b6/gcc%2Fada%2Fsigtramp-qnx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsigtramp-qnx.c?ref=817659c5f32786062f09befbf7132723441556b6", "patch": "@@ -170,33 +170,20 @@ TCR(\"ret\")\n #define REG_OFFSET_GR(n)     (n * 8)\n #define REGNO_GR(n)   n\n \n-/* point to the ELR value of the mcontext registers list */\n+/* ELR value offset withing the mcontext registers list */\n #define REG_OFFSET_ELR           (32 * 8)\n-#define REGNO_PC      30\n+/* The register used to hold the PC value to restore. We need a scratch\n+   register.  */\n+#define REGNO_PC      9\n \n #define CFI_DEF_CFA \\\n   TCR(\".cfi_def_cfa \" S(CFA_REG) \", 0\")\n \n+/* This restores the callee-saved registers, the FP, the LR, and the SP.\n+   A scratch register is used as return column to indicate the new value\n+   for PC */\n #define CFI_COMMON_REGS \\\n   CR(\"# CFI for common registers\\n\") \\\n-  TCR(COMMON_CFI(GR(0)))  \\\n-  TCR(COMMON_CFI(GR(1)))  \\\n-  TCR(COMMON_CFI(GR(2)))  \\\n-  TCR(COMMON_CFI(GR(3)))  \\\n-  TCR(COMMON_CFI(GR(4)))  \\\n-  TCR(COMMON_CFI(GR(5)))  \\\n-  TCR(COMMON_CFI(GR(6)))  \\\n-  TCR(COMMON_CFI(GR(7)))  \\\n-  TCR(COMMON_CFI(GR(8)))  \\\n-  TCR(COMMON_CFI(GR(9)))  \\\n-  TCR(COMMON_CFI(GR(10))) \\\n-  TCR(COMMON_CFI(GR(11))) \\\n-  TCR(COMMON_CFI(GR(12))) \\\n-  TCR(COMMON_CFI(GR(13))) \\\n-  TCR(COMMON_CFI(GR(14))) \\\n-  TCR(COMMON_CFI(GR(15))) \\\n-  TCR(COMMON_CFI(GR(16))) \\\n-  TCR(COMMON_CFI(GR(17))) \\\n   TCR(COMMON_CFI(GR(18))) \\\n   TCR(COMMON_CFI(GR(19))) \\\n   TCR(COMMON_CFI(GR(20))) \\\n@@ -209,6 +196,8 @@ TCR(\"ret\")\n   TCR(COMMON_CFI(GR(27))) \\\n   TCR(COMMON_CFI(GR(28))) \\\n   TCR(COMMON_CFI(GR(29))) \\\n+  TCR(COMMON_CFI(GR(30))) \\\n+  TCR(COMMON_CFI(GR(31))) \\\n   TCR(\".cfi_offset \" S(REGNO_PC) \",\" S(REG_OFFSET_ELR)) \\\n   TCR(\".cfi_return_column \" S(REGNO_PC))\n "}]}