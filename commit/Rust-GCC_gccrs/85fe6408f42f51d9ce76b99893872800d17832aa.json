{"sha": "85fe6408f42f51d9ce76b99893872800d17832aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVmZTY0MDhmNDJmNTFkOWNlNzZiOTk4OTM4NzI4MDBkMTc4MzJhYQ==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2011-05-24T21:39:24Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-05-24T21:39:24Z"}, "message": "In libobjc/: 2011-05-24 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn libobjc/:\n2011-05-24  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\tPR libobjc/48177\n\t* selector.c (__sel_register_typed_name): Use sel_types_match()\n\tinstead of strcmp() to compare selector types (Suggestion by\n\tRichard Frith-Macdonald <rfm@gnu.org>).\n\nIn gcc/testsuite/:\n2011-05-24  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\tPR libobjc/48177\n\t* objc.dg/pr48177.m: New testcase.\n\nFrom-SVN: r174143", "tree": {"sha": "ef03cd7bfc79288a42aa94318fff40863ba6bb86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef03cd7bfc79288a42aa94318fff40863ba6bb86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85fe6408f42f51d9ce76b99893872800d17832aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85fe6408f42f51d9ce76b99893872800d17832aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85fe6408f42f51d9ce76b99893872800d17832aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85fe6408f42f51d9ce76b99893872800d17832aa/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4e26ba9022c2052fee9511a0f9d343da5645029f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e26ba9022c2052fee9511a0f9d343da5645029f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e26ba9022c2052fee9511a0f9d343da5645029f"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "c1dcaedaf6569bfab8e817c69bd3d1d1690c2d71", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85fe6408f42f51d9ce76b99893872800d17832aa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85fe6408f42f51d9ce76b99893872800d17832aa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=85fe6408f42f51d9ce76b99893872800d17832aa", "patch": "@@ -1,3 +1,8 @@\n+2011-05-24  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tPR libobjc/48177\n+\t* objc.dg/pr48177.m: New testcase.\t\n+\n 2011-05-24  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tPR objc/48187"}, {"sha": "0d7ff2979c4fef5af0826f2fc930773d008a58cd", "filename": "gcc/testsuite/objc.dg/pr48177.m", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85fe6408f42f51d9ce76b99893872800d17832aa/gcc%2Ftestsuite%2Fobjc.dg%2Fpr48177.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85fe6408f42f51d9ce76b99893872800d17832aa/gcc%2Ftestsuite%2Fobjc.dg%2Fpr48177.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fpr48177.m?ref=85fe6408f42f51d9ce76b99893872800d17832aa", "patch": "@@ -0,0 +1,35 @@\n+/* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, May 2011.  */\n+/* { dg-do run } */\n+/* { dg-skip-if \"No API#2 pre-Darwin9\" { *-*-darwin[5-8]* } { \"-fnext-runtime\" } { \"\" } } */\n+\n+#include <objc/runtime.h>\n+#include <stdlib.h>\n+\n+int main(int argc, void **args)\n+{\n+#ifdef __GNU_LIBOBJC__\n+  /* This special test tests that, if you have a selector already\n+     registered in the runtime with full type information, you can use\n+     sel_registerTypedName() to get it even if you specify the type\n+     with incorrect argframe information.  This is helpful as\n+     selectors generated by the compiler (which have correct argframe\n+     information) are usually registered before hand-written ones\n+     (which often have incorrect argframe information, but need the\n+     correct one).\n+\n+     Note that in this hand-written test, even the type information of\n+     the first selector may be wrong (on this machine); but that's OK\n+     as we'll never actually use the selectors.  */\n+  SEL selector1 = sel_registerTypedName (\"testMethod\", \"i8@0:4\");\n+  SEL selector2 = sel_registerTypedName (\"testMethod\", \"i8@8:8\");\n+  \n+  /* We compare the selectors using ==, not using sel_isEqual().  This\n+     is because we are testing internals of the runtime and we know\n+     that in the current implementation they should be identical if\n+     the stuff is to work as expected.  Don't do this at home.  */\n+  if (selector1 != selector2)\n+    abort ();\n+#endif\n+\n+  return 0;\n+}"}, {"sha": "1785ff165fa8a1a93e30ab73f8c67deebbb92c2d", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85fe6408f42f51d9ce76b99893872800d17832aa/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85fe6408f42f51d9ce76b99893872800d17832aa/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=85fe6408f42f51d9ce76b99893872800d17832aa", "patch": "@@ -1,3 +1,10 @@\n+2011-05-24  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tPR libobjc/48177\n+\t* selector.c (__sel_register_typed_name): Use sel_types_match()\n+\tinstead of strcmp() to compare selector types (Suggestion by\n+\tRichard Frith-Macdonald <rfm@gnu.org>).\n+\n 2011-04-15  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR libobjc/32037"}, {"sha": "628b4f6f46611d6cd9e91c32f869071e77ec22a4", "filename": "libobjc/selector.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85fe6408f42f51d9ce76b99893872800d17832aa/libobjc%2Fselector.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85fe6408f42f51d9ce76b99893872800d17832aa/libobjc%2Fselector.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fselector.c?ref=85fe6408f42f51d9ce76b99893872800d17832aa", "patch": "@@ -597,7 +597,7 @@ __sel_register_typed_name (const char *name, const char *types,\n \t\t    return s;\n \t\t}\n \t    }\n-\t  else if (! strcmp (s->sel_types, types))\n+\t  else if (sel_types_match (s->sel_types, types))\n \t    {\n \t      if (orig)\n \t\t{"}]}