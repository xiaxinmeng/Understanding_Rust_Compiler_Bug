{"sha": "b351b287b70b47f67c310858202042d6b270938a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM1MWIyODdiNzBiNDdmNjdjMzEwODU4MjAyMDQyZDZiMjcwOTM4YQ==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1998-10-20T11:16:37Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1998-10-20T11:16:37Z"}, "message": "class.c (is_compiled_class): New local variable seen_in_zip.\n\nTue Oct 20 09:15:38 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* class.c (is_compiled_class): New local variable\n \tseen_in_zip. Identify classes found in currently compiled source\n \tfile(s).\n\t* decl.c (complete_start_java_method): Fixed typo.\n\t* java-tree.h (CLASS_FROM_CURRENTLY_COMPILED_SOURCE_P,\n \tHAS_BEEN_ALREADY_PARSED_P, IS_A_COMMAND_LINE_FILENAME_P): New macros.\n\t(CLASS_P): Moved around.\n\t(java_parse_abort_on_error): Macro moved from jcf-parse.c\n\t* jcf-parse.c (java_parse_abort_on_error): Macro moved to\n \tjava-parse.h\n\t(jcf_parse_source): Changed leading comment. Removed unnecessary\n \tfclose and CLASS_FROM_SOURCE_P marking.\n\t(parse_source_file): New local variables remember_for_generation\n \tand filename. Mark parsed file name identifier node. Removed block\n \texecuted when parse_only was null. Set remember_for_generation.\n\tUse it as an argument to java_pop_parser_context.\n\t(yyparse): New local variables several_files, list, next node and\n \tcurrent_file_list. Split ampersand separated file names into\n \tcurrent_file_list. Iterate through the list and parse accordingly.\n\t* parse.h (java_pop_parser_context): New function prototype.\n\t* parse.y (ctxp_for_generation): New static global variable.\n\t(java_pop_parser_context): New argument generate. Link popped ctxp\n \tto ctxp_for_generation list accordingly.\n\t(java_complete_expand_methods): Fixed indentation.\n\t(java_expand_classes): New function.\nAdd support for the use of `&' as a file separator on the jc1 command\nline.\n\nFrom-SVN: r23201", "tree": {"sha": "dfc31a7ace81e0e453bad8eb1c3f339df92a71cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfc31a7ace81e0e453bad8eb1c3f339df92a71cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b351b287b70b47f67c310858202042d6b270938a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b351b287b70b47f67c310858202042d6b270938a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b351b287b70b47f67c310858202042d6b270938a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b351b287b70b47f67c310858202042d6b270938a/comments", "author": null, "committer": null, "parents": [{"sha": "2331d640cee930caa1464c0d754846d339168bc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2331d640cee930caa1464c0d754846d339168bc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2331d640cee930caa1464c0d754846d339168bc8"}], "stats": {"total": 1120, "additions": 644, "deletions": 476}, "files": [{"sha": "afc117a2fb705763fc6eac2c5fde8207b8c0a20e", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b351b287b70b47f67c310858202042d6b270938a/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b351b287b70b47f67c310858202042d6b270938a/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=b351b287b70b47f67c310858202042d6b270938a", "patch": "@@ -1,3 +1,31 @@\n+Tue Oct 20 09:15:38 1998  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* class.c (is_compiled_class): New local variable\n+ \tseen_in_zip. Identify classes found in currently compiled source\n+ \tfile(s).\n+\t* decl.c (complete_start_java_method): Fixed typo.\n+\t* java-tree.h (CLASS_FROM_CURRENTLY_COMPILED_SOURCE_P,\n+ \tHAS_BEEN_ALREADY_PARSED_P, IS_A_COMMAND_LINE_FILENAME_P): New macros.\n+\t(CLASS_P): Moved around.\n+\t(java_parse_abort_on_error): Macro moved from jcf-parse.c\n+\t* jcf-parse.c (java_parse_abort_on_error): Macro moved to\n+ \tjava-parse.h\n+\t(jcf_parse_source): Changed leading comment. Removed unnecessary\n+ \tfclose and CLASS_FROM_SOURCE_P marking.\n+\t(parse_source_file): New local variables remember_for_generation\n+ \tand filename. Mark parsed file name identifier node. Removed block\n+ \texecuted when parse_only was null. Set remember_for_generation. \n+\tUse it as an argument to java_pop_parser_context.\n+\t(yyparse): New local variables several_files, list, next node and\n+ \tcurrent_file_list. Split ampersand separated file names into\n+ \tcurrent_file_list. Iterate through the list and parse accordingly.\n+\t* parse.h (java_pop_parser_context): New function prototype.\n+\t* parse.y (ctxp_for_generation): New static global variable.\n+\t(java_pop_parser_context): New argument generate. Link popped ctxp\n+ \tto ctxp_for_generation list accordingly.\n+\t(java_complete_expand_methods): Fixed indentation.\n+\t(java_expand_classes): New function.\n+\t\n Sat Oct 17 11:25:21 1998  Per Bothner  <bothner@cygnus.com>\n \n \t* Makefile.in:  Link with libiberty.a instead of memmove.o."}, {"sha": "c637c762c9889de331ddaea3cc45f718642d6ceb", "filename": "gcc/java/class.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b351b287b70b47f67c310858202042d6b270938a/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b351b287b70b47f67c310858202042d6b270938a/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=b351b287b70b47f67c310858202042d6b270938a", "patch": "@@ -1131,6 +1131,7 @@ int\n is_compiled_class (class)\n      tree class;\n {\n+  int seen_in_zip;\n   if (TREE_CODE (class) == POINTER_TYPE)\n     class = TREE_TYPE (class);\n   if (TREE_CODE (class) != RECORD_TYPE)  /* Primitive types are static. */\n@@ -1139,18 +1140,21 @@ is_compiled_class (class)\n     return 0;\n   if (class == current_class)\n     return 2;\n-  if ((TYPE_LANG_SPECIFIC (class) &&  TYPE_LANG_SPECIFIC (class)->jcf && \n-       TYPE_LANG_SPECIFIC (class)->jcf->seen_in_zip))\n+\n+  seen_in_zip = (TYPE_LANG_SPECIFIC (class) && TYPE_LANG_SPECIFIC (class)->jcf\n+\t\t && TYPE_LANG_SPECIFIC (class)->jcf->seen_in_zip);\n+  if (CLASS_FROM_CURRENTLY_COMPILED_SOURCE_P (class) || seen_in_zip)\n     {\n       /* The class was seen in the current ZIP file and will be\n \t available as a compiled class in the future but may not have\n \t been loaded already. Load it if necessary. This prevent\n-\t build_class_ref () from crashing.  This should take into\n-\t consideration class specified in a multiple class file\n-\t command line. FIXME if necessary.  */\n+\t build_class_ref () from crashing. */\n \n-      if (!CLASS_LOADED_P (class))\n+      if (seen_in_zip && !CLASS_LOADED_P (class))\n         load_class (class, 1);\n+\n+      /* We return 2 for class seen in ZIP and class from files\n+         belonging to the same compilation unit */\n       return 2;\n     }\n "}, {"sha": "89dc3d749949ba7767feb8107d9f007fb745bdaf", "filename": "gcc/java/decl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b351b287b70b47f67c310858202042d6b270938a/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b351b287b70b47f67c310858202042d6b270938a/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=b351b287b70b47f67c310858202042d6b270938a", "patch": "@@ -1507,7 +1507,6 @@ complete_start_java_method (fndecl)\n      using a different local variables management, and for them,\n      pushlevel shouldn't be called from here.  */\n   if (!CLASS_FROM_SOURCE_P (DECL_CONTEXT (fndecl)))\n-\n     {\n       pushlevel (2);\n       if (! flag_emit_class_files)"}, {"sha": "df0670cfcad1d9d5a05accbed261f84e6695821a", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 33, "deletions": 4, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b351b287b70b47f67c310858202042d6b270938a/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b351b287b70b47f67c310858202042d6b270938a/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=b351b287b70b47f67c310858202042d6b270938a", "patch": "@@ -49,15 +49,18 @@ struct JCF;\n       MODIFY_EXPR_FROM_INITIALIZATION_P (in MODIFY_EXPR)\n    3: IS_AN_IMPORT_ON_DEMAND_P (in IDENTIFIER_NODE)\n       RESOLVE_PACKAGE_NAME_P (in EXPR_WITH_FILE_LOCATION)\n-   4: RESOLVE_TYPE_NAME_P (in EXPR_WITH_FILE_LOCATION)\n-   5: IS_BREAK_STMT_P (in EXPR_WITH_FILE_LOCATION)\n+   4: IS_A_COMMAND_LINE_FILENAME_P (in IDENTIFIER_NODE)\n+      RESOLVE_TYPE_NAME_P (in EXPR_WITH_FILE_LOCATION)\n+   5: HAS_BEEN_ALREADY_PARSED_P (in IDENTIFIER_NODE)\n+      IS_BREAK_STMT_P (in EXPR_WITH_FILE_LOCATION)\n       IS_CRAFTED_STRING_BUFFER_P (in CALL_EXPR)\n \n    Usage of TYPE_LANG_FLAG_?:\n    1: TYPE_ARRAY_P (in RECORD_TYPE).\n    2: CLASS_LOADED_P (in RECORD_TYPE).\n    3: CLASS_FROM_SOURCE_P (in RECORD_TYPE).\n    4: CLASS_P (in RECORD_TYPE).\n+   5: CLASS_FROM_CURRENTLY_COMPILED_SOURCE_P (in RECORD_TYPE)\n \n    Usage of DECL_LANG_FLAG_?:\n    1: METHOD_PUBLIC (in FUNCTION_DECL).\n@@ -521,6 +524,8 @@ extern void init_outgoing_cpool PROTO (());\n extern void make_class_data PROTO ((tree));\n extern void register_class PROTO (());\n extern int alloc_name_constant PROTO ((int, tree));\n+extern void emit_register_class PROTO (());\n+extern void lang_init_source PROTO ((int));\n \n /* Access flags etc for a method (a FUNCTION_DECL): */\n \n@@ -567,8 +572,6 @@ extern int alloc_name_constant PROTO ((int, tree));\n    virtual methods. */\n #define TYPE_VTABLE(TYPE) TYPE_BINFO_VTABLE(TYPE)\n \n-/* True of a RECORD_TYPE of a class/interface type (not array type) */\n-#define CLASS_P(TYPE) TYPE_LANG_FLAG_4 (TYPE)\n /* Use CLASS_LOADED_P? FIXME */\n #define CLASS_COMPLETE_P(DECL) DECL_LANG_FLAG_2 (DECL) \n \n@@ -653,6 +656,13 @@ extern tree *type_map;\n /* True if class TYPE was defined in Java source code. */\n #define CLASS_FROM_SOURCE_P(TYPE) TYPE_LANG_FLAG_3 (TYPE)\n \n+/* True of a RECORD_TYPE of a class/interface type (not array type) */\n+#define CLASS_P(TYPE) TYPE_LANG_FLAG_4 (TYPE)\n+\n+/* True if class TYPE was defined in a Java source file compiled. */\n+#define CLASS_FROM_CURRENTLY_COMPILED_SOURCE_P(TYPE) \\\n+  TYPE_LANG_FLAG_5 (TYPE)\n+\n /* True if identifier ID was seen while processing a single type import stmt */\n #define IS_A_SINGLE_IMPORT_CLASSFILE_NAME_P(ID) TREE_LANG_FLAG_0 (ID)\n \n@@ -665,6 +675,12 @@ extern tree *type_map;\n /* True if ID is an already processed import on demand */\n #define IS_AN_IMPORT_ON_DEMAND_P(ID) TREE_LANG_FLAG_3 (ID)\n \n+/* True if ID is a command-line specified filename */\n+#define IS_A_COMMAND_LINE_FILENAME_P(ID) TREE_LANG_FLAG_4 (ID)\n+\n+/* True if filename ID has already been parsed */\n+#define HAS_BEEN_ALREADY_PARSED_P(ID) TREE_LANG_FLAG_5 (ID)\n+\n /* True if EXPR is RHS sub-tree of a compound assign expression */\n #define COMPOUND_ASSIGN_P(EXPR) TREE_LANG_FLAG_1 (EXPR)\n \n@@ -754,3 +770,16 @@ extern tree *type_map;\n #define IS_UNCHECKED_EXPRESSION_P(TYPE)\t\t\t\t\\\n   (inherits_from_p ((TYPE), runtime_exception_type_node)\t\\\n    || inherits_from_p ((TYPE), error_exception_type_node))\n+\n+/* Make the current function where this macro is invoked report error\n+   messages and and return, if any */\n+#define java_parse_abort_on_error()\t\t\\\n+  {\t\t\t\t\t\t\\\n+     extern int java_error_count;\t\t\\\n+     if (java_error_count)\t\t\t\\\n+       {\t\t\t\t\t\\\n+         java_report_errors ();\t\t\t\\\n+\t java_pop_parser_context (0);\t\t\\\n+\t return;\t\t\t\t\\\n+       }\t\t\t\t\t\\\n+   }"}, {"sha": "fee19c06a2e8eeb991ccdf04a8ad2ae3b8754d29", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 87, "deletions": 46, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b351b287b70b47f67c310858202042d6b270938a/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b351b287b70b47f67c310858202042d6b270938a/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=b351b287b70b47f67c310858202042d6b270938a", "patch": "@@ -73,16 +73,6 @@ void process_zip_dir();\n \n /* Source file compilation declarations */\n static void parse_source_file ();\n-extern int java_error_count;\n-#define java_parse_abort_on_error()\t\t\\\n-  {\t\t\t\t\t\t\\\n-     if (java_error_count)\t\t\t\\\n-       {\t\t\t\t\t\\\n-         java_report_errors ();\t\t\t\\\n-\t java_pop_parser_context ();\t\t\\\n-\t return;\t\t\t\t\\\n-       }\t\t\t\t\t\\\n-   }\n \n /* Handle \"SourceFile\" attribute. */\n \n@@ -525,8 +515,7 @@ load_class (class_or_name, verbose)\n     fseek (current_jcf->read_state, saved_pos, SEEK_SET);\n }\n \n-/* Parse a source file when JCF refers to a source file. This piece\n-   needs further work as far as error handling and report. */\n+/* Parse a source file when JCF refers to a source file.  */\n \n int\n jcf_parse_source (jcf)\n@@ -538,12 +527,7 @@ jcf_parse_source (jcf)\n   if (!(finput = fopen (input_filename, \"r\")))\n     fatal (\"input file `%s' just disappeared - jcf_parse_source\",\n \t   input_filename);\n-\n   parse_source_file (1);\t/* Parse only */\n-  if (current_class && TREE_TYPE (current_class))\n-    CLASS_FROM_SOURCE_P (TREE_TYPE (current_class)) = 1;\n-\n-  fclose (finput);\n   java_parser_context_restore_global ();\n }\n \n@@ -696,6 +680,12 @@ static void\n parse_source_file (parse_only)\n      int parse_only;\n {\n+  int remember_for_generation;\n+  tree filename = get_identifier (input_filename);\n+\n+  /* Mark the file as parsed */\n+  HAS_BEEN_ALREADY_PARSED_P (filename) = 1;\n+\n   lang_init_source (1);\t\t    /* Error msgs have no method prototypes */\n   java_push_parser_context ();\n   java_init_lex ();\t\t    /* Initialize the parser */\n@@ -710,45 +700,96 @@ parse_source_file (parse_only)\n   java_parse_abort_on_error ();\n   java_layout_classes ();\n   java_parse_abort_on_error ();\n-  if (!parse_only)\n-    {\n-      lang_init_source (2);\t        /* Error msgs have method prototypes */\n-      java_complete_expand_methods ();  /* Complete and expand method bodies */\n-      java_parse_abort_on_error ();\n-      java_expand_finals ();\t        /* Expand and check the finals */\n-      java_parse_abort_on_error ();\n-      java_check_final ();              /* Check unitialized final  */\n-      java_parse_abort_on_error ();\n-      if (! flag_emit_class_files)\n-\temit_register_class ();\n-      java_report_errors ();\t        /* Final step for this file */\n-    }\n+\n   if (flag_emit_class_files)\n     write_classfile (current_class);\n-  java_pop_parser_context ();\n+\n+  /* If only parsing, make sure that the currently parsed file isn't\n+     also present in the argument list. If it's the case, remember\n+     that we should generate it. */\n+  remember_for_generation = !parse_only \n+    || IS_A_COMMAND_LINE_FILENAME_P (filename);\n+  java_pop_parser_context (remember_for_generation);\n }\n \n int\n yyparse ()\n {\n-  /* Everything migh be enclosed within a loop processing each file after\n-     the other one.  */\n+  int several_files = 0;\n+  char *list = strdup (input_filename), *next;\n+  tree node, current_file_list = NULL_TREE;\n \n-  switch (jcf_figure_file_type (current_jcf))\n+  do \n     {\n-    case JCF_ZIP:\n-      parse_zip_file_entries ();\n-      emit_register_class ();\n-      break;\n-    case JCF_CLASS:\n-      jcf_parse (current_jcf);\n-      parse_class_file ();\n-      emit_register_class ();\n-      break;\n-    case JCF_SOURCE:\n-      parse_source_file (0);\t/* Parse and generate */\n-      break;\n+      next = strchr (list, '&');\n+      if (next)\n+\t{\n+\t  *next++ = '\\0';\n+\t  several_files = 1;\n+\t}\n+\n+      if (list[0]) \n+\t{\n+\t  char *value;\n+\n+\t  if (*list != '/' && several_files)\n+\t    obstack_grow (&temporary_obstack, \"./\", 2);\n+      \n+\t  obstack_grow0 (&temporary_obstack, list, strlen (list));\n+\t  value = obstack_finish (&temporary_obstack);\n+\t  node = get_identifier (value);\n+\t  IS_A_COMMAND_LINE_FILENAME_P (node) = 1;\n+\t  current_file_list = tree_cons (NULL_TREE, node, current_file_list);\n+\t}\n+      list = next;\n+    }\n+  while (next);\n+\n+  current_file_list = nreverse (current_file_list);\n+  for (node = current_file_list; node; node = TREE_CHAIN (node))\n+    {\n+      /* Don't substitute if INPUT_FILENAME doesn't feature the &\n+         separator: we have only one file to deal with, we're fine */\n+      if (several_files)\n+\t{\n+\t  tree name = TREE_VALUE (node);\n+\n+\t  /* Skip already parsed files */\n+\t  if (HAS_BEEN_ALREADY_PARSED_P (name))\n+\t    continue;\n+\n+\t  /* Close previous descriptor, if any */\n+\t  if (main_jcf->read_state && fclose (main_jcf->read_state))\n+\t    fatal (\"failed to close input file `%s' - yyparse\",\n+\t\t   (main_jcf->filename ? main_jcf->filename : \"<unknown>\"));\n+\n+\t  /* Open new file */\n+\t  main_jcf->read_state = fopen (IDENTIFIER_POINTER (name), \"r\");\n+\t  if (main_jcf->read_state == NULL)\n+\t    pfatal_with_name (IDENTIFIER_POINTER (name));\n+\n+\t  /* Set new input_filename and finput */\n+\t  input_filename = IDENTIFIER_POINTER (name);\n+\t  finput = main_jcf->read_state;\n+\t}\n+\n+      switch (jcf_figure_file_type (current_jcf))\n+\t{\n+\tcase JCF_ZIP:\n+\t  parse_zip_file_entries ();\n+\t  emit_register_class ();\n+\t  break;\n+\tcase JCF_CLASS:\n+\t  jcf_parse (current_jcf);\n+\t  parse_class_file ();\n+\t  emit_register_class ();\n+\t  break;\n+\tcase JCF_SOURCE:\n+\t  parse_source_file (0);\t/* Parse and generate */\n+\t  break;\n+\t}\n     }\n+  java_expand_classes ();\n   return 0;\n }\n "}, {"sha": "e8ff19d301f25133cbebe7c8b45c3354f08a8022", "filename": "gcc/java/parse.c", "status": "modified", "additions": 449, "deletions": 416, "changes": 865, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b351b287b70b47f67c310858202042d6b270938a/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b351b287b70b47f67c310858202042d6b270938a/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=b351b287b70b47f67c310858202042d6b270938a", "patch": "@@ -152,6 +152,9 @@ int java_warning_count;\n /* The current parser context */\n static struct parser_ctxt *ctxp;\n \n+/* List of things that were anlyzed for which code will be generated */\n+static struct parser_ctxt *ctxp_for_generation = NULL;\n+\n /* binop_lookup maps token to tree_code. It is used where binary\n    operations are involved and required by the parser. RDIV_EXPR\n    covers both integral/floating point division. The code is changed\n@@ -185,7 +188,7 @@ static tree wfl_append = NULL_TREE;\n /* The \"toString\" identifier used for String `+' operator. */\n static tree wfl_to_string = NULL_TREE;\n \n-#line 114 \"gcc/java/parse.y\"\n+#line 117 \"gcc/java/parse.y\"\n typedef union {\n   tree node;\n   int sub_token;\n@@ -490,56 +493,56 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   268,   274,   276,   277,   278,   279,   280,   284,   286,   289,\n-   291,   292,   295,   297,   300,   304,   308,   312,   318,   320,\n-   322,   324,   329,   331,   334,   338,   343,   348,   350,   351,\n-   352,   353,   354,   355,   356,   359,   364,   370,   372,   375,\n-   378,   380,   384,   386,   389,   419,   421,   425,   438,   440,\n-   444,   450,   451,   453,   463,   468,   483,   487,   490,   493,\n-   496,   498,   500,   502,   506,   508,   510,   512,   516,   518,\n-   520,   527,   533,   538,   542,   545,   549,   551,   554,   556,\n-   557,   558,   562,   564,   565,   567,   572,   575,   585,   588,\n-   590,   594,   597,   604,   610,   618,   620,   622,   624,   626,\n-   630,   632,   637,   644,   656,   660,   663,   665,   667,   669,\n-   671,   673,   675,   677,   684,   687,   689,   694,   696,   700,\n-   705,   710,   714,   719,   721,   723,   730,   732,   734,   738,\n-   741,   743,   747,   749,   750,   755,   760,   766,   778,   783,\n-   789,   794,   803,   805,   808,   810,   811,   812,   816,   818,\n-   821,   823,   827,   835,   846,   850,   853,   856,   859,   862,\n-   865,   868,   871,   873,   877,   883,   888,   890,   894,   897,\n-   901,   903,   906,   908,   909,   911,   915,   919,   925,   930,\n-   935,   939,   943,   949,   951,   952,   957,   960,   963,   970,\n-   972,   975,   977,   979,   983,   987,   990,   994,   996,   997,\n-   998,   999,  1000,  1010,  1012,  1013,  1014,  1015,  1018,  1020,\n-  1021,  1022,  1023,  1024,  1025,  1026,  1027,  1028,  1029,  1032,\n-  1037,  1048,  1055,  1059,  1070,  1080,  1086,  1092,  1098,  1100,\n-  1102,  1104,  1106,  1108,  1110,  1112,  1114,  1118,  1120,  1121,\n-  1122,  1123,  1124,  1125,  1128,  1131,  1133,  1135,  1139,  1144,\n-  1149,  1157,  1163,  1165,  1167,  1171,  1174,  1176,  1178,  1187,\n-  1189,  1196,  1201,  1210,  1212,  1219,  1225,  1230,  1232,  1234,\n-  1238,  1246,  1249,  1251,  1253,  1257,  1262,  1271,  1276,  1279,\n-  1286,  1288,  1290,  1294,  1297,  1306,  1313,  1315,  1319,  1332,\n-  1334,  1340,  1346,  1350,  1352,  1356,  1359,  1361,  1365,  1368,\n-  1370,  1372,  1376,  1379,  1381,  1383,  1387,  1390,  1392,  1394,\n-  1398,  1404,  1406,  1410,  1417,  1419,  1421,  1423,  1427,  1435,\n-  1438,  1440,  1442,  1446,  1448,  1455,  1463,  1480,  1482,  1484,\n-  1488,  1494,  1499,  1501,  1504,  1506,  1508,  1510,  1511,  1512,\n-  1513,  1517,  1519,  1521,  1526,  1528,  1530,  1532,  1534,  1538,\n-  1541,  1546,  1548,  1553,  1554,  1555,  1556,  1557,  1559,  1561,\n-  1563,  1565,  1567,  1571,  1573,  1576,  1582,  1587,  1591,  1594,\n-  1596,  1598,  1602,  1604,  1606,  1608,  1612,  1615,  1619,  1625,\n-  1627,  1635,  1638,  1640,  1644,  1647,  1655,  1659,  1662,  1664,\n-  1669,  1674,  1683,  1696,  1698,  1702,  1705,  1707,  1712,  1717,\n-  1722,  1729,  1731,  1732,  1733,  1736,  1741,  1746,  1748,  1749,\n-  1751,  1753,  1754,  1756,  1760,  1763,  1767,  1770,  1774,  1776,\n-  1778,  1780,  1781,  1783,  1787,  1795,  1797,  1799,  1811,  1813,\n-  1819,  1821,  1823,  1827,  1829,  1834,  1839,  1844,  1846,  1848,\n-  1852,  1854,  1859,  1864,  1866,  1870,  1872,  1877,  1882,  1887,\n-  1889,  1891,  1895,  1897,  1902,  1907,  1912,  1917,  1918,  1920,\n-  1922,  1924,  1926,  1930,  1932,  1937,  1942,  1944,  1948,  1950,\n-  1955,  1959,  1961,  1966,  1970,  1972,  1977,  1981,  1983,  1988,\n-  1992,  1994,  1999,  2003,  2005,  2006,  2012,  2014,  2018,  2020,\n-  2023,  2026,  2034,  2036,  2037,  2040,  2042,  2045,  2049\n+   271,   277,   279,   280,   281,   282,   283,   287,   289,   292,\n+   294,   295,   298,   300,   303,   307,   311,   315,   321,   323,\n+   325,   327,   332,   334,   337,   341,   346,   351,   353,   354,\n+   355,   356,   357,   358,   359,   362,   367,   373,   375,   378,\n+   381,   383,   387,   389,   392,   422,   424,   428,   441,   443,\n+   447,   453,   454,   456,   466,   471,   486,   490,   493,   496,\n+   499,   501,   503,   505,   509,   511,   513,   515,   519,   521,\n+   523,   530,   536,   541,   545,   548,   552,   554,   557,   559,\n+   560,   561,   565,   567,   568,   570,   575,   578,   588,   591,\n+   593,   597,   600,   607,   613,   621,   623,   625,   627,   629,\n+   633,   635,   640,   647,   659,   663,   666,   668,   670,   672,\n+   674,   676,   678,   680,   687,   690,   692,   697,   699,   703,\n+   708,   713,   717,   722,   724,   726,   733,   735,   737,   741,\n+   744,   746,   750,   752,   753,   758,   763,   769,   781,   786,\n+   792,   797,   806,   808,   811,   813,   814,   815,   819,   821,\n+   824,   826,   830,   838,   849,   853,   856,   859,   862,   865,\n+   868,   871,   874,   876,   880,   886,   891,   893,   897,   900,\n+   904,   906,   909,   911,   912,   914,   918,   922,   928,   933,\n+   938,   942,   946,   952,   954,   955,   960,   963,   966,   973,\n+   975,   978,   980,   982,   986,   990,   993,   997,   999,  1000,\n+  1001,  1002,  1003,  1013,  1015,  1016,  1017,  1018,  1021,  1023,\n+  1024,  1025,  1026,  1027,  1028,  1029,  1030,  1031,  1032,  1035,\n+  1040,  1051,  1058,  1062,  1073,  1083,  1089,  1095,  1101,  1103,\n+  1105,  1107,  1109,  1111,  1113,  1115,  1117,  1121,  1123,  1124,\n+  1125,  1126,  1127,  1128,  1131,  1134,  1136,  1138,  1142,  1147,\n+  1152,  1160,  1166,  1168,  1170,  1174,  1177,  1179,  1181,  1190,\n+  1192,  1199,  1204,  1213,  1215,  1222,  1228,  1233,  1235,  1237,\n+  1241,  1249,  1252,  1254,  1256,  1260,  1265,  1274,  1279,  1282,\n+  1289,  1291,  1293,  1297,  1300,  1309,  1316,  1318,  1322,  1335,\n+  1337,  1343,  1349,  1353,  1355,  1359,  1362,  1364,  1368,  1371,\n+  1373,  1375,  1379,  1382,  1384,  1386,  1390,  1393,  1395,  1397,\n+  1401,  1407,  1409,  1413,  1420,  1422,  1424,  1426,  1430,  1438,\n+  1441,  1443,  1445,  1449,  1451,  1458,  1466,  1483,  1485,  1487,\n+  1491,  1497,  1502,  1504,  1507,  1509,  1511,  1513,  1514,  1515,\n+  1516,  1520,  1522,  1524,  1529,  1531,  1533,  1535,  1537,  1541,\n+  1544,  1549,  1551,  1556,  1557,  1558,  1559,  1560,  1562,  1564,\n+  1566,  1568,  1570,  1574,  1576,  1579,  1585,  1590,  1594,  1597,\n+  1599,  1601,  1605,  1607,  1609,  1611,  1615,  1618,  1622,  1628,\n+  1630,  1638,  1641,  1643,  1647,  1650,  1658,  1662,  1665,  1667,\n+  1672,  1677,  1686,  1699,  1701,  1705,  1708,  1710,  1715,  1720,\n+  1725,  1732,  1734,  1735,  1736,  1739,  1744,  1749,  1751,  1752,\n+  1754,  1756,  1757,  1759,  1763,  1766,  1770,  1773,  1777,  1779,\n+  1781,  1783,  1784,  1786,  1790,  1798,  1800,  1802,  1814,  1816,\n+  1822,  1824,  1826,  1830,  1832,  1837,  1842,  1847,  1849,  1851,\n+  1855,  1857,  1862,  1867,  1869,  1873,  1875,  1880,  1885,  1890,\n+  1892,  1894,  1898,  1900,  1905,  1910,  1915,  1920,  1921,  1923,\n+  1925,  1927,  1929,  1933,  1935,  1940,  1945,  1947,  1951,  1953,\n+  1958,  1962,  1964,  1969,  1973,  1975,  1980,  1984,  1986,  1991,\n+  1995,  1997,  2002,  2006,  2008,  2009,  2015,  2017,  2021,  2023,\n+  2026,  2029,  2037,  2039,  2040,  2043,  2045,  2048,  2052\n };\n #endif\n \n@@ -2563,66 +2566,66 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 270 \"gcc/java/parse.y\"\n+#line 273 \"gcc/java/parse.y\"\n {;\n     break;}\n case 18:\n-#line 314 \"gcc/java/parse.y\"\n+#line 317 \"gcc/java/parse.y\"\n { \n \t\t  yyval.node = build_java_array_type (yyvsp[-2].node, -1);\n \t\t  CLASS_LOADED_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 19:\n-#line 319 \"gcc/java/parse.y\"\n+#line 322 \"gcc/java/parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 20:\n-#line 321 \"gcc/java/parse.y\"\n+#line 324 \"gcc/java/parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 21:\n-#line 323 \"gcc/java/parse.y\"\n+#line 326 \"gcc/java/parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 22:\n-#line 325 \"gcc/java/parse.y\"\n+#line 328 \"gcc/java/parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 26:\n-#line 340 \"gcc/java/parse.y\"\n+#line 343 \"gcc/java/parse.y\"\n { yyval.node = make_qualified_name (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 28:\n-#line 349 \"gcc/java/parse.y\"\n+#line 352 \"gcc/java/parse.y\"\n {yyval.node = NULL;;\n     break;}\n case 36:\n-#line 361 \"gcc/java/parse.y\"\n+#line 364 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 37:\n-#line 365 \"gcc/java/parse.y\"\n+#line 368 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 40:\n-#line 377 \"gcc/java/parse.y\"\n+#line 380 \"gcc/java/parse.y\"\n { ctxp->package = EXPR_WFL_NODE (yyvsp[-1].node); ;\n     break;}\n case 41:\n-#line 379 \"gcc/java/parse.y\"\n+#line 382 \"gcc/java/parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 42:\n-#line 381 \"gcc/java/parse.y\"\n+#line 384 \"gcc/java/parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 45:\n-#line 391 \"gcc/java/parse.y\"\n+#line 394 \"gcc/java/parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-1].node), node, last_name;\n \t\t  int   i = IDENTIFIER_LENGTH (name)-1;\n@@ -2653,15 +2656,15 @@ case 45:\n \t\t;\n     break;}\n case 46:\n-#line 420 \"gcc/java/parse.y\"\n+#line 423 \"gcc/java/parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 47:\n-#line 422 \"gcc/java/parse.y\"\n+#line 425 \"gcc/java/parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 48:\n-#line 427 \"gcc/java/parse.y\"\n+#line 430 \"gcc/java/parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-3].node);\n \t\t  tree node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n@@ -2675,39 +2678,39 @@ case 48:\n \t\t;\n     break;}\n case 49:\n-#line 439 \"gcc/java/parse.y\"\n+#line 442 \"gcc/java/parse.y\"\n {yyerror (\"'*' expected\"); RECOVER;;\n     break;}\n case 50:\n-#line 441 \"gcc/java/parse.y\"\n+#line 444 \"gcc/java/parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 51:\n-#line 446 \"gcc/java/parse.y\"\n+#line 449 \"gcc/java/parse.y\"\n {\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 53:\n-#line 452 \"gcc/java/parse.y\"\n+#line 455 \"gcc/java/parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 54:\n-#line 454 \"gcc/java/parse.y\"\n+#line 457 \"gcc/java/parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Class or interface declaration expected\");\n \t\t;\n     break;}\n case 55:\n-#line 465 \"gcc/java/parse.y\"\n+#line 468 \"gcc/java/parse.y\"\n {\n \t\t  yyval.value = (1 << yyvsp[0].value);\n \t\t;\n     break;}\n case 56:\n-#line 469 \"gcc/java/parse.y\"\n+#line 472 \"gcc/java/parse.y\"\n {\n \t\t  int acc = (1 << yyvsp[0].value);\n \t\t  if (yyval.value & acc)\n@@ -2721,116 +2724,116 @@ case 56:\n \t\t;\n     break;}\n case 57:\n-#line 485 \"gcc/java/parse.y\"\n+#line 488 \"gcc/java/parse.y\"\n { create_class (yyvsp[-4].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 58:\n-#line 487 \"gcc/java/parse.y\"\n+#line 490 \"gcc/java/parse.y\"\n { \n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 59:\n-#line 491 \"gcc/java/parse.y\"\n+#line 494 \"gcc/java/parse.y\"\n { create_class (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 60:\n-#line 493 \"gcc/java/parse.y\"\n+#line 496 \"gcc/java/parse.y\"\n { \t\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 61:\n-#line 497 \"gcc/java/parse.y\"\n+#line 500 \"gcc/java/parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 62:\n-#line 499 \"gcc/java/parse.y\"\n+#line 502 \"gcc/java/parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 63:\n-#line 501 \"gcc/java/parse.y\"\n+#line 504 \"gcc/java/parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); DRECOVER(class1);;\n     break;}\n case 64:\n-#line 503 \"gcc/java/parse.y\"\n+#line 506 \"gcc/java/parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 65:\n-#line 507 \"gcc/java/parse.y\"\n+#line 510 \"gcc/java/parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 66:\n-#line 509 \"gcc/java/parse.y\"\n+#line 512 \"gcc/java/parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 67:\n-#line 511 \"gcc/java/parse.y\"\n+#line 514 \"gcc/java/parse.y\"\n {yyerror (\"'{' expected\"); ctxp->class_err=1;;\n     break;}\n case 68:\n-#line 513 \"gcc/java/parse.y\"\n+#line 516 \"gcc/java/parse.y\"\n {yyerror (\"Missing super class name\"); ctxp->class_err=1;;\n     break;}\n case 69:\n-#line 517 \"gcc/java/parse.y\"\n+#line 520 \"gcc/java/parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 70:\n-#line 519 \"gcc/java/parse.y\"\n+#line 522 \"gcc/java/parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 71:\n-#line 521 \"gcc/java/parse.y\"\n+#line 524 \"gcc/java/parse.y\"\n {\n \t\t  ctxp->class_err=1;\n \t\t  yyerror (\"Missing interface name\"); \n \t\t;\n     break;}\n case 72:\n-#line 529 \"gcc/java/parse.y\"\n+#line 532 \"gcc/java/parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 73:\n-#line 534 \"gcc/java/parse.y\"\n+#line 537 \"gcc/java/parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 74:\n-#line 539 \"gcc/java/parse.y\"\n+#line 542 \"gcc/java/parse.y\"\n {yyerror (\"Missing interface name\"); RECOVER;;\n     break;}\n case 75:\n-#line 544 \"gcc/java/parse.y\"\n+#line 547 \"gcc/java/parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 76:\n-#line 546 \"gcc/java/parse.y\"\n+#line 549 \"gcc/java/parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 82:\n-#line 559 \"gcc/java/parse.y\"\n+#line 562 \"gcc/java/parse.y\"\n { yyval.node = parse_jdk1_1_error (\"instance initializer\"); ;\n     break;}\n case 85:\n-#line 566 \"gcc/java/parse.y\"\n+#line 569 \"gcc/java/parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner classe declaration\"); ;\n     break;}\n case 86:\n-#line 568 \"gcc/java/parse.y\"\n+#line 571 \"gcc/java/parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 87:\n-#line 574 \"gcc/java/parse.y\"\n+#line 577 \"gcc/java/parse.y\"\n { register_fields (0, yyvsp[-2].node, yyvsp[-1].node); ;\n     break;}\n case 88:\n-#line 576 \"gcc/java/parse.y\"\n+#line 579 \"gcc/java/parse.y\"\n {\n \t\t  check_modifiers \n \t\t    (\"Illegal modifier `%s' for field declaration\",\n@@ -2840,19 +2843,19 @@ case 88:\n \t\t;\n     break;}\n case 90:\n-#line 589 \"gcc/java/parse.y\"\n+#line 592 \"gcc/java/parse.y\"\n { yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 91:\n-#line 591 \"gcc/java/parse.y\"\n+#line 594 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 92:\n-#line 596 \"gcc/java/parse.y\"\n+#line 599 \"gcc/java/parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 93:\n-#line 598 \"gcc/java/parse.y\"\n+#line 601 \"gcc/java/parse.y\"\n { \n \t\t  if (java_error_count)\n \t\t    yyvsp[0].node = NULL_TREE;\n@@ -2861,50 +2864,50 @@ case 93:\n \t\t;\n     break;}\n case 94:\n-#line 605 \"gcc/java/parse.y\"\n+#line 608 \"gcc/java/parse.y\"\n {\n \t\t  yyerror (\"Missing variable initializer\");\n \t\t  yyval.node = build_tree_list (yyvsp[-2].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 95:\n-#line 611 \"gcc/java/parse.y\"\n+#line 614 \"gcc/java/parse.y\"\n {\n \t\t  yyerror (\"';' expected\");\n \t\t  yyval.node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 97:\n-#line 621 \"gcc/java/parse.y\"\n+#line 624 \"gcc/java/parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 98:\n-#line 623 \"gcc/java/parse.y\"\n+#line 626 \"gcc/java/parse.y\"\n {yyerror (\"Invalid declaration\"); DRECOVER(vdi);;\n     break;}\n case 99:\n-#line 625 \"gcc/java/parse.y\"\n+#line 628 \"gcc/java/parse.y\"\n {yyerror (\"']' expected\"); DRECOVER(vdi);;\n     break;}\n case 100:\n-#line 627 \"gcc/java/parse.y\"\n+#line 630 \"gcc/java/parse.y\"\n {yyerror (\"Unbalanced ']'\"); DRECOVER(vdi);;\n     break;}\n case 102:\n-#line 633 \"gcc/java/parse.y\"\n+#line 636 \"gcc/java/parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 103:\n-#line 639 \"gcc/java/parse.y\"\n+#line 642 \"gcc/java/parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 104:\n-#line 644 \"gcc/java/parse.y\"\n+#line 647 \"gcc/java/parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY \n \t\t    (DECL_FUNCTION_BODY (current_function_decl)) = yyvsp[0].node;\n@@ -2919,191 +2922,191 @@ case 104:\n \t\t;\n     break;}\n case 105:\n-#line 657 \"gcc/java/parse.y\"\n+#line 660 \"gcc/java/parse.y\"\n {YYNOT_TWICE yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 106:\n-#line 662 \"gcc/java/parse.y\"\n+#line 665 \"gcc/java/parse.y\"\n { yyval.node = method_header (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 107:\n-#line 664 \"gcc/java/parse.y\"\n+#line 667 \"gcc/java/parse.y\"\n { yyval.node = method_header (0, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 108:\n-#line 666 \"gcc/java/parse.y\"\n+#line 669 \"gcc/java/parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 109:\n-#line 668 \"gcc/java/parse.y\"\n+#line 671 \"gcc/java/parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 110:\n-#line 670 \"gcc/java/parse.y\"\n+#line 673 \"gcc/java/parse.y\"\n {RECOVER;;\n     break;}\n case 111:\n-#line 672 \"gcc/java/parse.y\"\n+#line 675 \"gcc/java/parse.y\"\n {RECOVER;;\n     break;}\n case 112:\n-#line 674 \"gcc/java/parse.y\"\n+#line 677 \"gcc/java/parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 113:\n-#line 676 \"gcc/java/parse.y\"\n+#line 679 \"gcc/java/parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 114:\n-#line 678 \"gcc/java/parse.y\"\n+#line 681 \"gcc/java/parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, return type required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 115:\n-#line 686 \"gcc/java/parse.y\"\n+#line 689 \"gcc/java/parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 116:\n-#line 688 \"gcc/java/parse.y\"\n+#line 691 \"gcc/java/parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 117:\n-#line 690 \"gcc/java/parse.y\"\n+#line 693 \"gcc/java/parse.y\"\n {\n \t\t  /* Issue a warning here: obsolete declaration. FIXME */\n \t\t  yyval.node = NULL;\t/* FIXME */\n \t\t;\n     break;}\n case 118:\n-#line 695 \"gcc/java/parse.y\"\n+#line 698 \"gcc/java/parse.y\"\n {yyerror (\"')' expected\"); DRECOVER(method_declarator);;\n     break;}\n case 119:\n-#line 697 \"gcc/java/parse.y\"\n+#line 700 \"gcc/java/parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 120:\n-#line 702 \"gcc/java/parse.y\"\n+#line 705 \"gcc/java/parse.y\"\n {\n \t\t  ctxp->formal_parameter_number = 1;\n \t\t;\n     break;}\n case 121:\n-#line 706 \"gcc/java/parse.y\"\n+#line 709 \"gcc/java/parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 122:\n-#line 711 \"gcc/java/parse.y\"\n+#line 714 \"gcc/java/parse.y\"\n {yyerror (\"Missing formal parameter term\"); RECOVER;;\n     break;}\n case 123:\n-#line 716 \"gcc/java/parse.y\"\n+#line 719 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 124:\n-#line 720 \"gcc/java/parse.y\"\n+#line 723 \"gcc/java/parse.y\"\n { yyval.node = parse_jdk1_1_error (\"final local\"); ;\n     break;}\n case 125:\n-#line 722 \"gcc/java/parse.y\"\n+#line 725 \"gcc/java/parse.y\"\n {yyerror (\"Missing identifier\"); RECOVER;;\n     break;}\n case 126:\n-#line 724 \"gcc/java/parse.y\"\n+#line 727 \"gcc/java/parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-2].value));\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t;\n     break;}\n case 127:\n-#line 731 \"gcc/java/parse.y\"\n+#line 734 \"gcc/java/parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 128:\n-#line 733 \"gcc/java/parse.y\"\n+#line 736 \"gcc/java/parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 129:\n-#line 735 \"gcc/java/parse.y\"\n+#line 738 \"gcc/java/parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 130:\n-#line 740 \"gcc/java/parse.y\"\n+#line 743 \"gcc/java/parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 131:\n-#line 742 \"gcc/java/parse.y\"\n+#line 745 \"gcc/java/parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 132:\n-#line 744 \"gcc/java/parse.y\"\n+#line 747 \"gcc/java/parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 135:\n-#line 751 \"gcc/java/parse.y\"\n+#line 754 \"gcc/java/parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 136:\n-#line 757 \"gcc/java/parse.y\"\n+#line 760 \"gcc/java/parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 137:\n-#line 761 \"gcc/java/parse.y\"\n+#line 764 \"gcc/java/parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 138:\n-#line 768 \"gcc/java/parse.y\"\n+#line 771 \"gcc/java/parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[0].value));\n \t\t;\n     break;}\n case 139:\n-#line 780 \"gcc/java/parse.y\"\n+#line 783 \"gcc/java/parse.y\"\n {\n \t\t  RULE (\"CONSTRUCTOR_DECLARATION\");\n \t\t;\n     break;}\n case 140:\n-#line 784 \"gcc/java/parse.y\"\n+#line 787 \"gcc/java/parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-3].value));\n \t\t  RULE (\"CONSTRUCTOR_DECLARATION (modifier)\");\n \t\t;\n     break;}\n case 141:\n-#line 790 \"gcc/java/parse.y\"\n+#line 793 \"gcc/java/parse.y\"\n {\n \t\t  RULE (\"CONSTRUCTOR_DECLARATION\");\n \t\t;\n     break;}\n case 142:\n-#line 795 \"gcc/java/parse.y\"\n+#line 798 \"gcc/java/parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-4].value));\n \t\t  RULE (\"CONSTRUCTOR_DECLARATION (modifier)\");\n \t\t;\n     break;}\n case 151:\n-#line 822 \"gcc/java/parse.y\"\n+#line 825 \"gcc/java/parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 152:\n-#line 824 \"gcc/java/parse.y\"\n+#line 827 \"gcc/java/parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 153:\n-#line 829 \"gcc/java/parse.y\"\n+#line 832 \"gcc/java/parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (this_identifier_node, \n \t\t\t\t\t     input_filename, 0, 0);\n@@ -3112,7 +3115,7 @@ case 153:\n \t\t;\n     break;}\n case 154:\n-#line 836 \"gcc/java/parse.y\"\n+#line 839 \"gcc/java/parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (super_identifier_node,\n \t\t\t\t\t     input_filename, 0, 0);\n@@ -3121,163 +3124,163 @@ case 154:\n \t\t;\n     break;}\n case 155:\n-#line 848 \"gcc/java/parse.y\"\n+#line 851 \"gcc/java/parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 156:\n-#line 850 \"gcc/java/parse.y\"\n+#line 853 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 157:\n-#line 854 \"gcc/java/parse.y\"\n+#line 857 \"gcc/java/parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 158:\n-#line 856 \"gcc/java/parse.y\"\n+#line 859 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 159:\n-#line 860 \"gcc/java/parse.y\"\n+#line 863 \"gcc/java/parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 160:\n-#line 862 \"gcc/java/parse.y\"\n+#line 865 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 161:\n-#line 866 \"gcc/java/parse.y\"\n+#line 869 \"gcc/java/parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 162:\n-#line 868 \"gcc/java/parse.y\"\n+#line 871 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 163:\n-#line 872 \"gcc/java/parse.y\"\n+#line 875 \"gcc/java/parse.y\"\n {yyerror (\"(here)'{' expected\"); RECOVER;;\n     break;}\n case 164:\n-#line 874 \"gcc/java/parse.y\"\n+#line 877 \"gcc/java/parse.y\"\n {yyerror (\"(there)'{' expected\"); RECOVER;;\n     break;}\n case 165:\n-#line 879 \"gcc/java/parse.y\"\n+#line 882 \"gcc/java/parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 166:\n-#line 884 \"gcc/java/parse.y\"\n+#line 887 \"gcc/java/parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 167:\n-#line 889 \"gcc/java/parse.y\"\n+#line 892 \"gcc/java/parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 168:\n-#line 891 \"gcc/java/parse.y\"\n+#line 894 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 169:\n-#line 896 \"gcc/java/parse.y\"\n+#line 899 \"gcc/java/parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 170:\n-#line 898 \"gcc/java/parse.y\"\n+#line 901 \"gcc/java/parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 175:\n-#line 910 \"gcc/java/parse.y\"\n+#line 913 \"gcc/java/parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 176:\n-#line 912 \"gcc/java/parse.y\"\n+#line 915 \"gcc/java/parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 178:\n-#line 921 \"gcc/java/parse.y\"\n+#line 924 \"gcc/java/parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 179:\n-#line 926 \"gcc/java/parse.y\"\n+#line 929 \"gcc/java/parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 180:\n-#line 932 \"gcc/java/parse.y\"\n+#line 935 \"gcc/java/parse.y\"\n {\n \t\t  RULE (\"ARRAY_INITIALIZER (empty)\");\n \t\t;\n     break;}\n case 181:\n-#line 936 \"gcc/java/parse.y\"\n+#line 939 \"gcc/java/parse.y\"\n {\n \t\t  RULE (\"ARRAY_INITIALIZER (variable)\");\n \t\t;\n     break;}\n case 182:\n-#line 940 \"gcc/java/parse.y\"\n+#line 943 \"gcc/java/parse.y\"\n {\n \t\t  RULE (\"ARRAY_INITIALIZER (,)\");\n \t\t;\n     break;}\n case 183:\n-#line 944 \"gcc/java/parse.y\"\n+#line 947 \"gcc/java/parse.y\"\n {\n \t\t  RULE (\"ARRAY_INITIALIZER (variable, ,)\");\n \t\t;\n     break;}\n case 186:\n-#line 953 \"gcc/java/parse.y\"\n+#line 956 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 187:\n-#line 959 \"gcc/java/parse.y\"\n+#line 962 \"gcc/java/parse.y\"\n { yyval.node = size_zero_node; ;\n     break;}\n case 188:\n-#line 961 \"gcc/java/parse.y\"\n+#line 964 \"gcc/java/parse.y\"\n { enter_block (); ;\n     break;}\n case 189:\n-#line 964 \"gcc/java/parse.y\"\n+#line 967 \"gcc/java/parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  yyval.node = exit_block ();\n \t\t;\n     break;}\n case 193:\n-#line 978 \"gcc/java/parse.y\"\n+#line 981 \"gcc/java/parse.y\"\n { yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 194:\n-#line 980 \"gcc/java/parse.y\"\n+#line 983 \"gcc/java/parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 196:\n-#line 989 \"gcc/java/parse.y\"\n+#line 992 \"gcc/java/parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 197:\n-#line 991 \"gcc/java/parse.y\"\n+#line 994 \"gcc/java/parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 203:\n-#line 1001 \"gcc/java/parse.y\"\n+#line 1004 \"gcc/java/parse.y\"\n { \n \t\t  /* If the for loop is unlabeled, we must return the\n \t\t     block it was defined it. It our last chance to\n@@ -3287,11 +3290,11 @@ case 203:\n \t\t;\n     break;}\n case 220:\n-#line 1034 \"gcc/java/parse.y\"\n+#line 1037 \"gcc/java/parse.y\"\n { yyval.node = size_zero_node; ;\n     break;}\n case 221:\n-#line 1039 \"gcc/java/parse.y\"\n+#line 1042 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3301,27 +3304,27 @@ case 221:\n \t\t;\n     break;}\n case 222:\n-#line 1050 \"gcc/java/parse.y\"\n+#line 1053 \"gcc/java/parse.y\"\n { \n \t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n \t\t  pop_labeled_block ();\n \t\t  POP_LABELED_BLOCK ();\n \t\t;\n     break;}\n case 223:\n-#line 1056 \"gcc/java/parse.y\"\n+#line 1059 \"gcc/java/parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 224:\n-#line 1061 \"gcc/java/parse.y\"\n+#line 1064 \"gcc/java/parse.y\"\n { \n \t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n \t\t  pop_labeled_block ();\n \t\t  POP_LABELED_BLOCK ();\n \t\t;\n     break;}\n case 225:\n-#line 1072 \"gcc/java/parse.y\"\n+#line 1075 \"gcc/java/parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3332,129 +3335,129 @@ case 225:\n \t\t;\n     break;}\n case 226:\n-#line 1081 \"gcc/java/parse.y\"\n+#line 1084 \"gcc/java/parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 227:\n-#line 1087 \"gcc/java/parse.y\"\n+#line 1090 \"gcc/java/parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 228:\n-#line 1093 \"gcc/java/parse.y\"\n+#line 1096 \"gcc/java/parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 229:\n-#line 1099 \"gcc/java/parse.y\"\n+#line 1102 \"gcc/java/parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 230:\n-#line 1101 \"gcc/java/parse.y\"\n+#line 1104 \"gcc/java/parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 231:\n-#line 1103 \"gcc/java/parse.y\"\n+#line 1106 \"gcc/java/parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 232:\n-#line 1105 \"gcc/java/parse.y\"\n+#line 1108 \"gcc/java/parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 233:\n-#line 1107 \"gcc/java/parse.y\"\n+#line 1110 \"gcc/java/parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 234:\n-#line 1109 \"gcc/java/parse.y\"\n+#line 1112 \"gcc/java/parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 235:\n-#line 1111 \"gcc/java/parse.y\"\n+#line 1114 \"gcc/java/parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 236:\n-#line 1113 \"gcc/java/parse.y\"\n+#line 1116 \"gcc/java/parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 237:\n-#line 1115 \"gcc/java/parse.y\"\n+#line 1118 \"gcc/java/parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 245:\n-#line 1130 \"gcc/java/parse.y\"\n+#line 1133 \"gcc/java/parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 246:\n-#line 1132 \"gcc/java/parse.y\"\n+#line 1135 \"gcc/java/parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 247:\n-#line 1134 \"gcc/java/parse.y\"\n+#line 1137 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 248:\n-#line 1136 \"gcc/java/parse.y\"\n+#line 1139 \"gcc/java/parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 249:\n-#line 1141 \"gcc/java/parse.y\"\n+#line 1144 \"gcc/java/parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 250:\n-#line 1146 \"gcc/java/parse.y\"\n+#line 1149 \"gcc/java/parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 251:\n-#line 1151 \"gcc/java/parse.y\"\n+#line 1154 \"gcc/java/parse.y\"\n { \n \t\t  TREE_OPERAND (yyvsp[-1].node, 1) = yyvsp[0].node;\n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-1].node), yyvsp[-1].node);\n \t\t;\n     break;}\n case 252:\n-#line 1159 \"gcc/java/parse.y\"\n+#line 1162 \"gcc/java/parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 253:\n-#line 1164 \"gcc/java/parse.y\"\n+#line 1167 \"gcc/java/parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 254:\n-#line 1166 \"gcc/java/parse.y\"\n+#line 1169 \"gcc/java/parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 255:\n-#line 1168 \"gcc/java/parse.y\"\n+#line 1171 \"gcc/java/parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 256:\n-#line 1173 \"gcc/java/parse.y\"\n+#line 1176 \"gcc/java/parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 257:\n-#line 1175 \"gcc/java/parse.y\"\n+#line 1178 \"gcc/java/parse.y\"\n { yyval.node = build_tree_list (yyvsp[-1].node, NULL_TREE); ;\n     break;}\n case 258:\n-#line 1177 \"gcc/java/parse.y\"\n+#line 1180 \"gcc/java/parse.y\"\n { yyval.node = yyvsp[-1].node; ;\n     break;}\n case 259:\n-#line 1179 \"gcc/java/parse.y\"\n+#line 1182 \"gcc/java/parse.y\"\n { \n \t\t  /* Switch labels alone are empty switch statements */\n \t\t  tree sl = build_tree_list (yyvsp[-1].node, NULL_TREE);\n@@ -3463,18 +3466,18 @@ case 259:\n \t\t;\n     break;}\n case 261:\n-#line 1190 \"gcc/java/parse.y\"\n+#line 1193 \"gcc/java/parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 262:\n-#line 1198 \"gcc/java/parse.y\"\n+#line 1201 \"gcc/java/parse.y\"\n { yyval.node = build_tree_list (yyvsp[-1].node, exit_block ()); ;\n     break;}\n case 263:\n-#line 1203 \"gcc/java/parse.y\"\n+#line 1206 \"gcc/java/parse.y\"\n { \n \t\t  /* All statements attached to this group of cases\n \t\t     will be stored in a block */\n@@ -3483,82 +3486,82 @@ case 263:\n \t\t;\n     break;}\n case 265:\n-#line 1213 \"gcc/java/parse.y\"\n+#line 1216 \"gcc/java/parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 266:\n-#line 1221 \"gcc/java/parse.y\"\n+#line 1224 \"gcc/java/parse.y\"\n { \n \t\t  yyval.node = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 267:\n-#line 1226 \"gcc/java/parse.y\"\n+#line 1229 \"gcc/java/parse.y\"\n { \n \t\t  yyval.node = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-1].operator.location;\n \t\t;\n     break;}\n case 268:\n-#line 1231 \"gcc/java/parse.y\"\n+#line 1234 \"gcc/java/parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 269:\n-#line 1233 \"gcc/java/parse.y\"\n+#line 1236 \"gcc/java/parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 270:\n-#line 1235 \"gcc/java/parse.y\"\n+#line 1238 \"gcc/java/parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 271:\n-#line 1240 \"gcc/java/parse.y\"\n+#line 1243 \"gcc/java/parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 272:\n-#line 1248 \"gcc/java/parse.y\"\n+#line 1251 \"gcc/java/parse.y\"\n { yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 273:\n-#line 1250 \"gcc/java/parse.y\"\n+#line 1253 \"gcc/java/parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 274:\n-#line 1252 \"gcc/java/parse.y\"\n+#line 1255 \"gcc/java/parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 275:\n-#line 1254 \"gcc/java/parse.y\"\n+#line 1257 \"gcc/java/parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 276:\n-#line 1259 \"gcc/java/parse.y\"\n+#line 1262 \"gcc/java/parse.y\"\n { yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 277:\n-#line 1264 \"gcc/java/parse.y\"\n+#line 1267 \"gcc/java/parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 278:\n-#line 1273 \"gcc/java/parse.y\"\n+#line 1276 \"gcc/java/parse.y\"\n { yyval.node = complete_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 279:\n-#line 1278 \"gcc/java/parse.y\"\n+#line 1281 \"gcc/java/parse.y\"\n { yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 280:\n-#line 1280 \"gcc/java/parse.y\"\n+#line 1283 \"gcc/java/parse.y\"\n { \n \t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3567,23 +3570,23 @@ case 280:\n \t\t;\n     break;}\n case 281:\n-#line 1287 \"gcc/java/parse.y\"\n+#line 1290 \"gcc/java/parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 282:\n-#line 1289 \"gcc/java/parse.y\"\n+#line 1292 \"gcc/java/parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 283:\n-#line 1291 \"gcc/java/parse.y\"\n+#line 1294 \"gcc/java/parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 284:\n-#line 1296 \"gcc/java/parse.y\"\n+#line 1299 \"gcc/java/parse.y\"\n { yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 285:\n-#line 1298 \"gcc/java/parse.y\"\n+#line 1301 \"gcc/java/parse.y\"\n { \n \t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3592,23 +3595,23 @@ case 285:\n \t\t;\n     break;}\n case 286:\n-#line 1308 \"gcc/java/parse.y\"\n+#line 1311 \"gcc/java/parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 287:\n-#line 1314 \"gcc/java/parse.y\"\n+#line 1317 \"gcc/java/parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 288:\n-#line 1316 \"gcc/java/parse.y\"\n+#line 1319 \"gcc/java/parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 289:\n-#line 1321 \"gcc/java/parse.y\"\n+#line 1324 \"gcc/java/parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -3621,176 +3624,176 @@ case 289:\n \t\t;\n     break;}\n case 290:\n-#line 1333 \"gcc/java/parse.y\"\n+#line 1336 \"gcc/java/parse.y\"\n { yyval.node = size_zero_node; ;\n     break;}\n case 291:\n-#line 1335 \"gcc/java/parse.y\"\n+#line 1338 \"gcc/java/parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 292:\n-#line 1341 \"gcc/java/parse.y\"\n+#line 1344 \"gcc/java/parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 293:\n-#line 1347 \"gcc/java/parse.y\"\n+#line 1350 \"gcc/java/parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 294:\n-#line 1351 \"gcc/java/parse.y\"\n+#line 1354 \"gcc/java/parse.y\"\n {yyval.node = size_zero_node;;\n     break;}\n case 295:\n-#line 1353 \"gcc/java/parse.y\"\n+#line 1356 \"gcc/java/parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 296:\n-#line 1358 \"gcc/java/parse.y\"\n+#line 1361 \"gcc/java/parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 297:\n-#line 1360 \"gcc/java/parse.y\"\n+#line 1363 \"gcc/java/parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 298:\n-#line 1362 \"gcc/java/parse.y\"\n+#line 1365 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 299:\n-#line 1367 \"gcc/java/parse.y\"\n+#line 1370 \"gcc/java/parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 300:\n-#line 1369 \"gcc/java/parse.y\"\n+#line 1372 \"gcc/java/parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 301:\n-#line 1371 \"gcc/java/parse.y\"\n+#line 1374 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 302:\n-#line 1373 \"gcc/java/parse.y\"\n+#line 1376 \"gcc/java/parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 303:\n-#line 1378 \"gcc/java/parse.y\"\n+#line 1381 \"gcc/java/parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 304:\n-#line 1380 \"gcc/java/parse.y\"\n+#line 1383 \"gcc/java/parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 305:\n-#line 1382 \"gcc/java/parse.y\"\n+#line 1385 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 306:\n-#line 1384 \"gcc/java/parse.y\"\n+#line 1387 \"gcc/java/parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 307:\n-#line 1389 \"gcc/java/parse.y\"\n+#line 1392 \"gcc/java/parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 308:\n-#line 1391 \"gcc/java/parse.y\"\n+#line 1394 \"gcc/java/parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 309:\n-#line 1393 \"gcc/java/parse.y\"\n+#line 1396 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 310:\n-#line 1395 \"gcc/java/parse.y\"\n+#line 1398 \"gcc/java/parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 311:\n-#line 1400 \"gcc/java/parse.y\"\n+#line 1403 \"gcc/java/parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 312:\n-#line 1405 \"gcc/java/parse.y\"\n+#line 1408 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 313:\n-#line 1407 \"gcc/java/parse.y\"\n+#line 1410 \"gcc/java/parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 314:\n-#line 1412 \"gcc/java/parse.y\"\n+#line 1415 \"gcc/java/parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 315:\n-#line 1418 \"gcc/java/parse.y\"\n+#line 1421 \"gcc/java/parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 316:\n-#line 1420 \"gcc/java/parse.y\"\n+#line 1423 \"gcc/java/parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 317:\n-#line 1422 \"gcc/java/parse.y\"\n+#line 1425 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 318:\n-#line 1424 \"gcc/java/parse.y\"\n+#line 1427 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 319:\n-#line 1429 \"gcc/java/parse.y\"\n+#line 1432 \"gcc/java/parse.y\"\n {\n \t\t  if ((1 << yyvsp[0].value) != ACC_SYNCHRONIZED)\n \t\t    fatal (\"synchronized was '%d' - yyparse\", (1 << yyvsp[0].value));\n \t\t;\n     break;}\n case 320:\n-#line 1437 \"gcc/java/parse.y\"\n+#line 1440 \"gcc/java/parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 321:\n-#line 1439 \"gcc/java/parse.y\"\n+#line 1442 \"gcc/java/parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 322:\n-#line 1441 \"gcc/java/parse.y\"\n+#line 1444 \"gcc/java/parse.y\"\n { yyval.node = build_try_statement (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 323:\n-#line 1443 \"gcc/java/parse.y\"\n+#line 1446 \"gcc/java/parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 325:\n-#line 1449 \"gcc/java/parse.y\"\n+#line 1452 \"gcc/java/parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 326:\n-#line 1457 \"gcc/java/parse.y\"\n+#line 1460 \"gcc/java/parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 327:\n-#line 1465 \"gcc/java/parse.y\"\n+#line 1468 \"gcc/java/parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -3808,203 +3811,203 @@ case 327:\n \t\t;\n     break;}\n case 328:\n-#line 1481 \"gcc/java/parse.y\"\n+#line 1484 \"gcc/java/parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 329:\n-#line 1483 \"gcc/java/parse.y\"\n+#line 1486 \"gcc/java/parse.y\"\n {yyerror (\"Missing term or ')' expected\"); DRECOVER (2);;\n     break;}\n case 330:\n-#line 1485 \"gcc/java/parse.y\"\n+#line 1488 \"gcc/java/parse.y\"\n {yyerror (\"')' expected\"); DRECOVER (1);;\n     break;}\n case 331:\n-#line 1490 \"gcc/java/parse.y\"\n+#line 1493 \"gcc/java/parse.y\"\n { \n \t\t  yyval.node = build (FINALLY_EXPR, NULL_TREE,\n \t\t\t      create_label_decl (generate_name ()), yyvsp[0].node);\n \t\t;\n     break;}\n case 332:\n-#line 1495 \"gcc/java/parse.y\"\n+#line 1498 \"gcc/java/parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 336:\n-#line 1507 \"gcc/java/parse.y\"\n+#line 1510 \"gcc/java/parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 337:\n-#line 1509 \"gcc/java/parse.y\"\n+#line 1512 \"gcc/java/parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 342:\n-#line 1518 \"gcc/java/parse.y\"\n+#line 1521 \"gcc/java/parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 343:\n-#line 1520 \"gcc/java/parse.y\"\n+#line 1523 \"gcc/java/parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 344:\n-#line 1522 \"gcc/java/parse.y\"\n+#line 1525 \"gcc/java/parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 345:\n-#line 1527 \"gcc/java/parse.y\"\n+#line 1530 \"gcc/java/parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 346:\n-#line 1529 \"gcc/java/parse.y\"\n+#line 1532 \"gcc/java/parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 347:\n-#line 1531 \"gcc/java/parse.y\"\n+#line 1534 \"gcc/java/parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 348:\n-#line 1533 \"gcc/java/parse.y\"\n+#line 1536 \"gcc/java/parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 349:\n-#line 1535 \"gcc/java/parse.y\"\n+#line 1538 \"gcc/java/parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 350:\n-#line 1540 \"gcc/java/parse.y\"\n+#line 1543 \"gcc/java/parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 351:\n-#line 1542 \"gcc/java/parse.y\"\n+#line 1545 \"gcc/java/parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 352:\n-#line 1547 \"gcc/java/parse.y\"\n+#line 1550 \"gcc/java/parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 353:\n-#line 1549 \"gcc/java/parse.y\"\n+#line 1552 \"gcc/java/parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 358:\n-#line 1558 \"gcc/java/parse.y\"\n+#line 1561 \"gcc/java/parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 359:\n-#line 1560 \"gcc/java/parse.y\"\n+#line 1563 \"gcc/java/parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 360:\n-#line 1562 \"gcc/java/parse.y\"\n+#line 1565 \"gcc/java/parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 361:\n-#line 1564 \"gcc/java/parse.y\"\n+#line 1567 \"gcc/java/parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 362:\n-#line 1566 \"gcc/java/parse.y\"\n+#line 1569 \"gcc/java/parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 363:\n-#line 1568 \"gcc/java/parse.y\"\n+#line 1571 \"gcc/java/parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 366:\n-#line 1578 \"gcc/java/parse.y\"\n+#line 1581 \"gcc/java/parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 367:\n-#line 1583 \"gcc/java/parse.y\"\n+#line 1586 \"gcc/java/parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 368:\n-#line 1588 \"gcc/java/parse.y\"\n+#line 1591 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 369:\n-#line 1593 \"gcc/java/parse.y\"\n+#line 1596 \"gcc/java/parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 370:\n-#line 1595 \"gcc/java/parse.y\"\n+#line 1598 \"gcc/java/parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 371:\n-#line 1597 \"gcc/java/parse.y\"\n+#line 1600 \"gcc/java/parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, ctxp->osb_number); ;\n     break;}\n case 372:\n-#line 1599 \"gcc/java/parse.y\"\n+#line 1602 \"gcc/java/parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, ctxp->osb_number); ;\n     break;}\n case 373:\n-#line 1603 \"gcc/java/parse.y\"\n+#line 1606 \"gcc/java/parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 374:\n-#line 1605 \"gcc/java/parse.y\"\n+#line 1608 \"gcc/java/parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 375:\n-#line 1607 \"gcc/java/parse.y\"\n+#line 1610 \"gcc/java/parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 376:\n-#line 1609 \"gcc/java/parse.y\"\n+#line 1612 \"gcc/java/parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 377:\n-#line 1614 \"gcc/java/parse.y\"\n+#line 1617 \"gcc/java/parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 378:\n-#line 1616 \"gcc/java/parse.y\"\n+#line 1619 \"gcc/java/parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 379:\n-#line 1621 \"gcc/java/parse.y\"\n+#line 1624 \"gcc/java/parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 380:\n-#line 1626 \"gcc/java/parse.y\"\n+#line 1629 \"gcc/java/parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 381:\n-#line 1628 \"gcc/java/parse.y\"\n+#line 1631 \"gcc/java/parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 382:\n-#line 1637 \"gcc/java/parse.y\"\n+#line 1640 \"gcc/java/parse.y\"\n { ctxp->osb_number = 1; ;\n     break;}\n case 383:\n-#line 1639 \"gcc/java/parse.y\"\n+#line 1642 \"gcc/java/parse.y\"\n { ctxp->osb_number++; ;\n     break;}\n case 384:\n-#line 1641 \"gcc/java/parse.y\"\n+#line 1644 \"gcc/java/parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 385:\n-#line 1646 \"gcc/java/parse.y\"\n+#line 1649 \"gcc/java/parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 386:\n-#line 1648 \"gcc/java/parse.y\"\n+#line 1651 \"gcc/java/parse.y\"\n {\n \t\t  tree super_wfl = \n \t\t    build_wfl_node (super_identifier_node, \n@@ -4014,33 +4017,33 @@ case 386:\n \t\t;\n     break;}\n case 387:\n-#line 1656 \"gcc/java/parse.y\"\n+#line 1659 \"gcc/java/parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 388:\n-#line 1661 \"gcc/java/parse.y\"\n+#line 1664 \"gcc/java/parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 389:\n-#line 1663 \"gcc/java/parse.y\"\n+#line 1666 \"gcc/java/parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 390:\n-#line 1665 \"gcc/java/parse.y\"\n+#line 1668 \"gcc/java/parse.y\"\n { \n \t\t  tree invok = build_method_invocation (yyvsp[-2].node, NULL_TREE);\n \t\t  yyval.node = make_qualified_primary (yyvsp[-4].node, invok, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 391:\n-#line 1670 \"gcc/java/parse.y\"\n+#line 1673 \"gcc/java/parse.y\"\n { \n \t\t  tree invok = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node);\n \t\t  yyval.node = make_qualified_primary (yyvsp[-5].node, invok, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 392:\n-#line 1675 \"gcc/java/parse.y\"\n+#line 1678 \"gcc/java/parse.y\"\n {\n \t\t  tree invok;\n \t\t  tree wfl = build_wfl_node (super_identifier_node, \n@@ -4051,7 +4054,7 @@ case 392:\n \t\t;\n     break;}\n case 393:\n-#line 1684 \"gcc/java/parse.y\"\n+#line 1687 \"gcc/java/parse.y\"\n {\n \t\t  tree invok;\n \t\t  tree wfl = build_wfl_node (super_identifier_node, \n@@ -4062,107 +4065,107 @@ case 393:\n \t\t;\n     break;}\n case 394:\n-#line 1697 \"gcc/java/parse.y\"\n+#line 1700 \"gcc/java/parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 395:\n-#line 1699 \"gcc/java/parse.y\"\n+#line 1702 \"gcc/java/parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 396:\n-#line 1704 \"gcc/java/parse.y\"\n+#line 1707 \"gcc/java/parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 397:\n-#line 1706 \"gcc/java/parse.y\"\n+#line 1709 \"gcc/java/parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 398:\n-#line 1708 \"gcc/java/parse.y\"\n+#line 1711 \"gcc/java/parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 399:\n-#line 1713 \"gcc/java/parse.y\"\n+#line 1716 \"gcc/java/parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 400:\n-#line 1718 \"gcc/java/parse.y\"\n+#line 1721 \"gcc/java/parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 401:\n-#line 1723 \"gcc/java/parse.y\"\n+#line 1726 \"gcc/java/parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 406:\n-#line 1738 \"gcc/java/parse.y\"\n+#line 1741 \"gcc/java/parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 407:\n-#line 1743 \"gcc/java/parse.y\"\n+#line 1746 \"gcc/java/parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 410:\n-#line 1750 \"gcc/java/parse.y\"\n+#line 1753 \"gcc/java/parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 411:\n-#line 1752 \"gcc/java/parse.y\"\n+#line 1755 \"gcc/java/parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 413:\n-#line 1755 \"gcc/java/parse.y\"\n+#line 1758 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 414:\n-#line 1757 \"gcc/java/parse.y\"\n+#line 1760 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 415:\n-#line 1762 \"gcc/java/parse.y\"\n+#line 1765 \"gcc/java/parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 416:\n-#line 1764 \"gcc/java/parse.y\"\n+#line 1767 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 417:\n-#line 1769 \"gcc/java/parse.y\"\n+#line 1772 \"gcc/java/parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 418:\n-#line 1771 \"gcc/java/parse.y\"\n+#line 1774 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 420:\n-#line 1777 \"gcc/java/parse.y\"\n+#line 1780 \"gcc/java/parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 421:\n-#line 1779 \"gcc/java/parse.y\"\n+#line 1782 \"gcc/java/parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 423:\n-#line 1782 \"gcc/java/parse.y\"\n+#line 1785 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 424:\n-#line 1784 \"gcc/java/parse.y\"\n+#line 1787 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 425:\n-#line 1789 \"gcc/java/parse.y\"\n+#line 1792 \"gcc/java/parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n \t\t  while (ctxp->osb_number--)\n@@ -4171,15 +4174,15 @@ case 425:\n \t\t;\n     break;}\n case 426:\n-#line 1796 \"gcc/java/parse.y\"\n+#line 1799 \"gcc/java/parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 427:\n-#line 1798 \"gcc/java/parse.y\"\n+#line 1801 \"gcc/java/parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 428:\n-#line 1800 \"gcc/java/parse.y\"\n+#line 1803 \"gcc/java/parse.y\"\n { \n \t\t  char *ptr;\n \t\t  while (ctxp->osb_number--)\n@@ -4193,264 +4196,264 @@ case 428:\n \t\t;\n     break;}\n case 429:\n-#line 1812 \"gcc/java/parse.y\"\n+#line 1815 \"gcc/java/parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 430:\n-#line 1814 \"gcc/java/parse.y\"\n+#line 1817 \"gcc/java/parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 431:\n-#line 1820 \"gcc/java/parse.y\"\n+#line 1823 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 432:\n-#line 1822 \"gcc/java/parse.y\"\n+#line 1825 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 433:\n-#line 1824 \"gcc/java/parse.y\"\n+#line 1827 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 435:\n-#line 1830 \"gcc/java/parse.y\"\n+#line 1833 \"gcc/java/parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 436:\n-#line 1835 \"gcc/java/parse.y\"\n+#line 1838 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 437:\n-#line 1840 \"gcc/java/parse.y\"\n+#line 1843 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 438:\n-#line 1845 \"gcc/java/parse.y\"\n+#line 1848 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 439:\n-#line 1847 \"gcc/java/parse.y\"\n+#line 1850 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 440:\n-#line 1849 \"gcc/java/parse.y\"\n+#line 1852 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 442:\n-#line 1855 \"gcc/java/parse.y\"\n+#line 1858 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 443:\n-#line 1860 \"gcc/java/parse.y\"\n+#line 1863 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 444:\n-#line 1865 \"gcc/java/parse.y\"\n+#line 1868 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 445:\n-#line 1867 \"gcc/java/parse.y\"\n+#line 1870 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 447:\n-#line 1873 \"gcc/java/parse.y\"\n+#line 1876 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 448:\n-#line 1878 \"gcc/java/parse.y\"\n+#line 1881 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 449:\n-#line 1883 \"gcc/java/parse.y\"\n+#line 1886 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 450:\n-#line 1888 \"gcc/java/parse.y\"\n+#line 1891 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 451:\n-#line 1890 \"gcc/java/parse.y\"\n+#line 1893 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 452:\n-#line 1892 \"gcc/java/parse.y\"\n+#line 1895 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 454:\n-#line 1898 \"gcc/java/parse.y\"\n+#line 1901 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 455:\n-#line 1903 \"gcc/java/parse.y\"\n+#line 1906 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 456:\n-#line 1908 \"gcc/java/parse.y\"\n+#line 1911 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 457:\n-#line 1913 \"gcc/java/parse.y\"\n+#line 1916 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 459:\n-#line 1919 \"gcc/java/parse.y\"\n+#line 1922 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 460:\n-#line 1921 \"gcc/java/parse.y\"\n+#line 1924 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 461:\n-#line 1923 \"gcc/java/parse.y\"\n+#line 1926 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 462:\n-#line 1925 \"gcc/java/parse.y\"\n+#line 1928 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 463:\n-#line 1927 \"gcc/java/parse.y\"\n+#line 1930 \"gcc/java/parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 465:\n-#line 1933 \"gcc/java/parse.y\"\n+#line 1936 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 466:\n-#line 1938 \"gcc/java/parse.y\"\n+#line 1941 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 467:\n-#line 1943 \"gcc/java/parse.y\"\n+#line 1946 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 468:\n-#line 1945 \"gcc/java/parse.y\"\n+#line 1948 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 470:\n-#line 1951 \"gcc/java/parse.y\"\n+#line 1954 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 471:\n-#line 1956 \"gcc/java/parse.y\"\n+#line 1959 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 473:\n-#line 1962 \"gcc/java/parse.y\"\n+#line 1965 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 474:\n-#line 1967 \"gcc/java/parse.y\"\n+#line 1970 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 476:\n-#line 1973 \"gcc/java/parse.y\"\n+#line 1976 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 477:\n-#line 1978 \"gcc/java/parse.y\"\n+#line 1981 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 479:\n-#line 1984 \"gcc/java/parse.y\"\n+#line 1987 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 480:\n-#line 1989 \"gcc/java/parse.y\"\n+#line 1992 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 482:\n-#line 1995 \"gcc/java/parse.y\"\n+#line 1998 \"gcc/java/parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 483:\n-#line 2000 \"gcc/java/parse.y\"\n+#line 2003 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 486:\n-#line 2007 \"gcc/java/parse.y\"\n+#line 2010 \"gcc/java/parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 487:\n-#line 2013 \"gcc/java/parse.y\"\n+#line 2016 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 488:\n-#line 2015 \"gcc/java/parse.y\"\n+#line 2018 \"gcc/java/parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 491:\n-#line 2025 \"gcc/java/parse.y\"\n+#line 2028 \"gcc/java/parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 492:\n-#line 2027 \"gcc/java/parse.y\"\n+#line 2030 \"gcc/java/parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -4655,7 +4658,7 @@ case 492:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2053 \"gcc/java/parse.y\"\n+#line 2056 \"gcc/java/parse.y\"\n \n \f\n \n@@ -4703,7 +4706,8 @@ java_parser_context_restore_global ()\n }\n \n void \n-java_pop_parser_context ()\n+java_pop_parser_context (generate)\n+     int generate;\n {\n   tree current;\n   struct parser_ctxt *toFree = ctxp;\n@@ -4727,7 +4731,13 @@ java_pop_parser_context ()\n     for (current = ctxp->import_list; current; current = TREE_CHAIN (current))\n       IS_A_SINGLE_IMPORT_CLASSFILE_NAME_P (TREE_PURPOSE (current)) = 1;\n \n-  free (toFree);\n+  if (generate)\n+    {\n+      toFree->next = ctxp_for_generation;\n+      ctxp_for_generation = toFree;\n+    }\n+  else\n+    free (toFree);\n }\n \n /* Reporting JDK1.1 features not implemented */\n@@ -5128,6 +5138,8 @@ maybe_create_class_interface_decl (decl, qualified_name, cl)\n   DECL_SOURCE_FILE (decl) = EXPR_WFL_FILENAME (cl);\n   DECL_SOURCE_LINE (decl) = EXPR_WFL_LINENO (cl);\n   CLASS_FROM_SOURCE_P (TREE_TYPE (decl)) = 1;\n+  CLASS_FROM_CURRENTLY_COMPILED_SOURCE_P (TREE_TYPE (decl)) =\n+    IS_A_COMMAND_LINE_FILENAME_P (EXPR_WFL_FILENAME_NODE (cl));\n \n   ctxp->current_parsed_class = decl;\n   \n@@ -7421,7 +7433,8 @@ java_complete_expand_methods ()\n \t{\n \t  make_class_data (current_class);\n \t  register_class ();\n-\t  rest_of_decl_compilation (TYPE_NAME (current_class), (char*) 0, 1, 0);\n+\t  rest_of_decl_compilation (TYPE_NAME (current_class), \n+\t\t\t\t    (char*) 0, 1, 0);\n \t}\n     }\n }\n@@ -7516,6 +7529,26 @@ java_expand_finals ()\n {\n }\n \n+/* Generate code for all context remembered for code generation */\n+\n+void\n+java_expand_classes ()\n+{\n+  for (; ctxp_for_generation; ctxp_for_generation = ctxp_for_generation->next)\n+    {\n+      ctxp = ctxp_for_generation;\n+      lang_init_source (2);\t       /* Error msgs have method prototypes */\n+      java_complete_expand_methods (); /* Complete and expand method bodies */\n+      java_parse_abort_on_error ();\n+      java_expand_finals ();\t      /* Expand and check the finals */\n+      java_parse_abort_on_error ();\n+      java_check_final ();            /* Check unitialized final  */\n+      java_parse_abort_on_error ();\n+    }\n+  if (! flag_emit_class_files)\n+    emit_register_class ();\n+}\n+\n /* Wrap non WFL PRIMARY around a WFL and set EXPR_WFL_QUALIFICATION to\n    a tree list node containing RIGHT. Fore coming RIGHTs will be\n    chained to this hook. LOCATION contains the location of the"}, {"sha": "b0d90a1897cd8578c1c30db30f68a892b5edec1a", "filename": "gcc/java/parse.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b351b287b70b47f67c310858202042d6b270938a/gcc%2Fjava%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b351b287b70b47f67c310858202042d6b270938a/gcc%2Fjava%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.h?ref=b351b287b70b47f67c310858202042d6b270938a", "patch": "@@ -720,6 +720,7 @@ tree java_get_catch_block PROTO ((tree, int));\n /* Always in use, no matter what you compile */\n \n void java_push_parser_context PROTO ((void));\n+void java_pop_parser_context PROTO ((int));\n void java_init_lex PROTO ((void));\n int yyparse PROTO ((void));\n int yylex ();"}, {"sha": "d552871c7e4b832fe66326da5b5de2c978b9af77", "filename": "gcc/java/parse.y", "status": "modified", "additions": 36, "deletions": 3, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b351b287b70b47f67c310858202042d6b270938a/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b351b287b70b47f67c310858202042d6b270938a/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=b351b287b70b47f67c310858202042d6b270938a", "patch": "@@ -77,6 +77,9 @@ int java_warning_count;\n /* The current parser context */\n static struct parser_ctxt *ctxp;\n \n+/* List of things that were anlyzed for which code will be generated */\n+static struct parser_ctxt *ctxp_for_generation = NULL;\n+\n /* binop_lookup maps token to tree_code. It is used where binary\n    operations are involved and required by the parser. RDIV_EXPR\n    covers both integral/floating point division. The code is changed\n@@ -2097,7 +2100,8 @@ java_parser_context_restore_global ()\n }\n \n void \n-java_pop_parser_context ()\n+java_pop_parser_context (generate)\n+     int generate;\n {\n   tree current;\n   struct parser_ctxt *toFree = ctxp;\n@@ -2121,7 +2125,13 @@ java_pop_parser_context ()\n     for (current = ctxp->import_list; current; current = TREE_CHAIN (current))\n       IS_A_SINGLE_IMPORT_CLASSFILE_NAME_P (TREE_PURPOSE (current)) = 1;\n \n-  free (toFree);\n+  if (generate)\n+    {\n+      toFree->next = ctxp_for_generation;\n+      ctxp_for_generation = toFree;\n+    }\n+  else\n+    free (toFree);\n }\n \n /* Reporting JDK1.1 features not implemented */\n@@ -2522,6 +2532,8 @@ maybe_create_class_interface_decl (decl, qualified_name, cl)\n   DECL_SOURCE_FILE (decl) = EXPR_WFL_FILENAME (cl);\n   DECL_SOURCE_LINE (decl) = EXPR_WFL_LINENO (cl);\n   CLASS_FROM_SOURCE_P (TREE_TYPE (decl)) = 1;\n+  CLASS_FROM_CURRENTLY_COMPILED_SOURCE_P (TREE_TYPE (decl)) =\n+    IS_A_COMMAND_LINE_FILENAME_P (EXPR_WFL_FILENAME_NODE (cl));\n \n   ctxp->current_parsed_class = decl;\n   \n@@ -4815,7 +4827,8 @@ java_complete_expand_methods ()\n \t{\n \t  make_class_data (current_class);\n \t  register_class ();\n-\t  rest_of_decl_compilation (TYPE_NAME (current_class), (char*) 0, 1, 0);\n+\t  rest_of_decl_compilation (TYPE_NAME (current_class), \n+\t\t\t\t    (char*) 0, 1, 0);\n \t}\n     }\n }\n@@ -4910,6 +4923,26 @@ java_expand_finals ()\n {\n }\n \n+/* Generate code for all context remembered for code generation */\n+\n+void\n+java_expand_classes ()\n+{\n+  for (; ctxp_for_generation; ctxp_for_generation = ctxp_for_generation->next)\n+    {\n+      ctxp = ctxp_for_generation;\n+      lang_init_source (2);\t       /* Error msgs have method prototypes */\n+      java_complete_expand_methods (); /* Complete and expand method bodies */\n+      java_parse_abort_on_error ();\n+      java_expand_finals ();\t      /* Expand and check the finals */\n+      java_parse_abort_on_error ();\n+      java_check_final ();            /* Check unitialized final  */\n+      java_parse_abort_on_error ();\n+    }\n+  if (! flag_emit_class_files)\n+    emit_register_class ();\n+}\n+\n /* Wrap non WFL PRIMARY around a WFL and set EXPR_WFL_QUALIFICATION to\n    a tree list node containing RIGHT. Fore coming RIGHTs will be\n    chained to this hook. LOCATION contains the location of the"}]}