{"sha": "e2fee30d5490aac27479b1908f8cd8efe13b6189", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJmZWUzMGQ1NDkwYWFjMjc0NzliMTkwOGY4Y2Q4ZWZlMTNiNjE4OQ==", "commit": {"author": {"name": "Emmanuel Briot", "email": "briot@adacore.com", "date": "2011-08-04T12:28:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T12:28:58Z"}, "message": "make.adb, [...] (Compute_Builder_Switches): now shared with gprbuild.\n\n2011-08-04  Emmanuel Briot  <briot@adacore.com>\n\n\t* make.adb, makeutl.adb, makeutl.ads (Compute_Builder_Switches): now\n\tshared with gprbuild.\n\nFrom-SVN: r177372", "tree": {"sha": "d05221c631ae46515cef4225e81e6e87ec112819", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d05221c631ae46515cef4225e81e6e87ec112819"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2fee30d5490aac27479b1908f8cd8efe13b6189", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2fee30d5490aac27479b1908f8cd8efe13b6189", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2fee30d5490aac27479b1908f8cd8efe13b6189", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2fee30d5490aac27479b1908f8cd8efe13b6189/comments", "author": {"login": "briot", "id": 42402, "node_id": "MDQ6VXNlcjQyNDAy", "avatar_url": "https://avatars.githubusercontent.com/u/42402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briot", "html_url": "https://github.com/briot", "followers_url": "https://api.github.com/users/briot/followers", "following_url": "https://api.github.com/users/briot/following{/other_user}", "gists_url": "https://api.github.com/users/briot/gists{/gist_id}", "starred_url": "https://api.github.com/users/briot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briot/subscriptions", "organizations_url": "https://api.github.com/users/briot/orgs", "repos_url": "https://api.github.com/users/briot/repos", "events_url": "https://api.github.com/users/briot/events{/privacy}", "received_events_url": "https://api.github.com/users/briot/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d395256d71921f464153393f04ef688f1eab209", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d395256d71921f464153393f04ef688f1eab209", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d395256d71921f464153393f04ef688f1eab209"}], "stats": {"total": 621, "additions": 399, "deletions": 222}, "files": [{"sha": "655feddda7d3c12e715835061876abce6ff8691d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2fee30d5490aac27479b1908f8cd8efe13b6189/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2fee30d5490aac27479b1908f8cd8efe13b6189/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e2fee30d5490aac27479b1908f8cd8efe13b6189", "patch": "@@ -1,3 +1,8 @@\n+2011-08-04  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* make.adb, makeutl.adb, makeutl.ads (Compute_Builder_Switches): now\n+\tshared with gprbuild.\n+\n 2011-08-04  Yannick Moy  <moy@adacore.com>\n \n \t* par-ch4.adb (P_Primary): preferentially issue an error message about"}, {"sha": "d450648e8a6f996bbff620673c6095ccc40b6e9b", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 37, "deletions": 222, "changes": 259, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2fee30d5490aac27479b1908f8cd8efe13b6189/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2fee30d5490aac27479b1908f8cd8efe13b6189/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=e2fee30d5490aac27479b1908f8cd8efe13b6189", "patch": "@@ -596,15 +596,6 @@ package body Make is\n    procedure Process_Multilib (Env : in out Prj.Tree.Environment);\n    --  Add appropriate --RTS argument to handle multilib\n \n-   procedure Compute_Builder_Switches\n-     (Project_Node_Tree   : Project_Node_Tree_Ref;\n-      Root_Environment    : in out Prj.Tree.Environment;\n-      Main_Unit_File_Name : String;\n-      Main_Index          : Int := 0);\n-   --  Analyze the root project to find the builder switches and the global\n-   --  compilation switches (the latter are ignored if there were multiple main\n-   --  on the command line.\n-\n    procedure Resolve_Relative_Names_In_Switches (Current_Work_Dir : String);\n    --  Resolve all relative paths found in the linker and binder switches,\n    --  when using project files.\n@@ -4991,214 +4982,6 @@ package body Make is\n       end if;\n    end Compilation_Phase;\n \n-   ------------------------------\n-   -- Compute_Builder_Switches --\n-   ------------------------------\n-\n-   procedure Compute_Builder_Switches\n-     (Project_Node_Tree   : Project_Node_Tree_Ref;\n-      Root_Environment    : in out Prj.Tree.Environment;\n-      Main_Unit_File_Name : String;\n-      Main_Index          : Int := 0)\n-   is\n-      Builder_Package : constant Prj.Package_Id :=\n-                           Prj.Util.Value_Of\n-                             (Name        => Name_Builder,\n-                              In_Packages => Main_Project.Decl.Packages,\n-                              Shared      => Project_Tree.Shared);\n-\n-      Global_Compilation_Array    : Array_Element_Id;\n-      Global_Compilation_Elem     : Array_Element;\n-      Global_Compilation_Switches : Variable_Value;\n-\n-      Default_Switches_Array : Array_Id;\n-\n-   begin\n-      --  If there is a package Builder in the main project file, add\n-      --  the switches from it.\n-\n-      if Builder_Package /= No_Package then\n-         Global_Compilation_Array := Prj.Util.Value_Of\n-           (Name      => Name_Global_Compilation_Switches,\n-            In_Arrays => Project_Tree.Shared.Packages.Table\n-                           (Builder_Package).Decl.Arrays,\n-            Shared    => Project_Tree.Shared);\n-\n-         Default_Switches_Array :=\n-           Project_Tree.Shared.Packages.Table (Builder_Package).Decl.Arrays;\n-\n-         while Default_Switches_Array /= No_Array\n-           and then\n-             Project_Tree.Shared.Arrays.Table (Default_Switches_Array).Name /=\n-                                                        Name_Default_Switches\n-         loop\n-            Default_Switches_Array :=\n-              Project_Tree.Shared.Arrays.Table (Default_Switches_Array).Next;\n-         end loop;\n-\n-         if Global_Compilation_Array /= No_Array_Element and then\n-           Default_Switches_Array /= No_Array\n-         then\n-            Errutil.Error_Msg\n-              (\"Default_Switches forbidden in presence of \" &\n-               \"Global_Compilation_Switches. Use Switches instead.\",\n-               Project_Tree.Shared.Arrays.Table\n-                 (Default_Switches_Array).Location);\n-            Make_Failed (\"*** illegal combination of Builder attributes\");\n-         end if;\n-\n-         --  If there is only one main, we attempt to get the gnatmake switches\n-         --  for this main (if any). If there are no specific switch for this\n-         --  particular main, get the general gnatmake switches (if any).\n-\n-         if Osint.Number_Of_Files = 1 then\n-            if Verbose_Mode then\n-               Write_Str (\"Adding gnatmake switches for \"\"\");\n-               Write_Str (Main_Unit_File_Name);\n-               Write_Line (\"\"\".\");\n-            end if;\n-\n-            Add_Switches\n-              (Project_Node_Tree                => Project_Node_Tree,\n-               Env                              => Root_Environment,\n-               File_Name                        => Main_Unit_File_Name,\n-               Index                            => Main_Index,\n-               The_Package                      => Builder_Package,\n-               Program                          => None,\n-               Unknown_Switches_To_The_Compiler =>\n-                 Global_Compilation_Array = No_Array_Element);\n-\n-         else\n-            --  If there are several mains, we always get the general gnatmake\n-            --  switches (if any).\n-\n-            --  Warn the user, if necessary, so that he is not surprised that\n-            --  specific switches are not taken into account.\n-\n-            declare\n-               Defaults : constant Variable_Value :=\n-                 Prj.Util.Value_Of\n-                   (Name                    => Name_Ada,\n-                    Index                   => 0,\n-                    Attribute_Or_Array_Name => Name_Default_Switches,\n-                    In_Package              => Builder_Package,\n-                    Shared                  => Project_Tree.Shared);\n-\n-               Switches : constant Array_Element_Id :=\n-                 Prj.Util.Value_Of\n-                   (Name      => Name_Switches,\n-                    In_Arrays => Project_Tree.Shared.Packages.Table\n-                                   (Builder_Package).Decl.Arrays,\n-                    Shared    => Project_Tree.Shared);\n-\n-               Other_Switches : constant Variable_Value :=\n-                 Prj.Util.Value_Of\n-                   (Name                    => All_Other_Names,\n-                    Index                   => 0,\n-                    Attribute_Or_Array_Name => Name_Switches,\n-                    In_Package              => Builder_Package,\n-                    Shared                  => Project_Tree.Shared);\n-\n-            begin\n-               if Other_Switches /= Nil_Variable_Value then\n-                  if not Quiet_Output\n-                    and then Switches /= No_Array_Element\n-                    and then Project_Tree.Shared.Array_Elements.Table\n-                               (Switches).Next /= No_Array_Element\n-                  then\n-                     Write_Line\n-                       (\"Warning: using Builder'Switches(others), \"\n-                        & \"as there are several mains\");\n-                  end if;\n-\n-                  Add_Switches\n-                    (Project_Node_Tree                => Project_Node_Tree,\n-                     Env                              => Root_Environment,\n-                     File_Name                        => \" \",\n-                     Index                            => 0,\n-                     The_Package                      => Builder_Package,\n-                     Program                          => None,\n-                     Unknown_Switches_To_The_Compiler => False);\n-\n-               elsif Defaults /= Nil_Variable_Value then\n-                  if not Quiet_Output\n-                    and then Switches /= No_Array_Element\n-                  then\n-                     Write_Line\n-                       (\"Warning: using Builder'Default_Switches\"\n-                        & \"(\"\"Ada\"\"), as there are several mains\");\n-                  end if;\n-\n-                  Add_Switches\n-                    (Project_Node_Tree => Project_Node_Tree,\n-                     Env               => Root_Environment,\n-                     File_Name         => \" \",\n-                     Index             => 0,\n-                     The_Package       => Builder_Package,\n-                     Program           => None);\n-\n-               elsif not Quiet_Output\n-                 and then Switches /= No_Array_Element\n-               then\n-                  Write_Line\n-                    (\"Warning: using no switches from package \"\n-                     & \"Builder, as there are several mains\");\n-               end if;\n-            end;\n-         end if;\n-\n-         --  Take into account attribute Global_Compilation_Switches\n-         --  (\"Ada\").\n-\n-         declare\n-            Index : Name_Id;\n-            List  : String_List_Id;\n-            Elem  : String_Element;\n-\n-         begin\n-            while Global_Compilation_Array /= No_Array_Element loop\n-               Global_Compilation_Elem :=\n-                 Project_Tree.Shared.Array_Elements.Table\n-                   (Global_Compilation_Array);\n-\n-               Get_Name_String (Global_Compilation_Elem.Index);\n-               To_Lower (Name_Buffer (1 .. Name_Len));\n-               Index := Name_Find;\n-\n-               if Index = Name_Ada then\n-                  Global_Compilation_Switches := Global_Compilation_Elem.Value;\n-\n-                  if Global_Compilation_Switches /= Nil_Variable_Value\n-                    and then not Global_Compilation_Switches.Default\n-                  then\n-                     --  We have found attribute Global_Compilation_Switches\n-                     --  (\"Ada\"): put the switches in the appropriate table.\n-\n-                     List := Global_Compilation_Switches.Values;\n-                     while List /= Nil_String loop\n-                        Elem :=\n-                          Project_Tree.Shared.String_Elements.Table (List);\n-\n-                        if Elem.Value /= No_Name then\n-                           Add_Switch\n-                             (Get_Name_String (Elem.Value),\n-                              Compiler,\n-                              And_Save => False);\n-                        end if;\n-\n-                        List := Elem.Next;\n-                     end loop;\n-\n-                     exit;\n-                  end if;\n-               end if;\n-\n-               Global_Compilation_Array := Global_Compilation_Elem.Next;\n-            end loop;\n-         end;\n-      end if;\n-   end Compute_Builder_Switches;\n-\n    ----------------------------------------\n    -- Resolve_Relative_Names_In_Switches --\n    ----------------------------------------\n@@ -5429,6 +5212,38 @@ package body Make is\n       Compute_Builder   : Boolean;\n       Current_Work_Dir  : String)\n    is\n+      function Add_Global_Switches\n+        (Switch      : String;\n+         For_Lang    : Name_Id;\n+         For_Builder : Boolean;\n+         Has_Global_Compilation_Switches : Boolean) return Boolean;\n+      --  Handles builder and global compilation switches, as read from the\n+      --  project file.\n+\n+      function Add_Global_Switches\n+        (Switch      : String;\n+         For_Lang    : Name_Id;\n+         For_Builder : Boolean;\n+         Has_Global_Compilation_Switches : Boolean) return Boolean\n+      is\n+         pragma Unreferenced (For_Lang);\n+      begin\n+         if For_Builder then\n+            Program_Args := None;\n+            Switch_May_Be_Passed_To_The_Compiler :=\n+              not Has_Global_Compilation_Switches;\n+            Scan_Make_Arg (Root_Environment, Switch, And_Save => False);\n+\n+            return Gnatmake_Switch_Found\n+              or else Switch_May_Be_Passed_To_The_Compiler;\n+         else\n+            Add_Switch (Switch, Compiler, And_Save => False);\n+            return True;\n+         end if;\n+      end Add_Global_Switches;\n+\n+      procedure Do_Compute_Builder_Switches\n+         is new Makeutl.Compute_Builder_Switches (Add_Global_Switches);\n    begin\n       if Main_Project /= No_Project then\n          declare\n@@ -5496,11 +5311,11 @@ package body Make is\n             end;\n \n             if Compute_Builder then\n-               Compute_Builder_Switches\n-                 (Project_Node_Tree   => Project_Node_Tree,\n-                  Root_Environment    => Root_Environment,\n-                  Main_Unit_File_Name => Main_Unit_File_Name,\n-                  Main_Index          => Main_Index);\n+               Do_Compute_Builder_Switches\n+                 (Project_Tree     => Project_Tree,\n+                  Root_Environment => Root_Environment,\n+                  Main_Project     => Main_Project,\n+                  Only_For_Lang    => Name_Ada);\n \n                Resolve_Relative_Names_In_Switches\n                  (Current_Work_Dir => Current_Work_Dir);"}, {"sha": "95fab06643549b4e5cbdadecff205f87aa1726fd", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 330, "deletions": 0, "changes": 330, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2fee30d5490aac27479b1908f8cd8efe13b6189/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2fee30d5490aac27479b1908f8cd8efe13b6189/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=e2fee30d5490aac27479b1908f8cd8efe13b6189", "patch": "@@ -2894,4 +2894,334 @@ package body Makeutl is\n       Compute_All (Root_Project, Tree);\n    end Compute_Compilation_Phases;\n \n+   ------------------------------\n+   -- Compute_Builder_Switches --\n+   ------------------------------\n+\n+   procedure Compute_Builder_Switches\n+     (Project_Tree        : Project_Tree_Ref;\n+      Root_Environment    : in out Prj.Tree.Environment;\n+      Main_Project        : Project_Id;\n+      Only_For_Lang       : Name_Id := No_Name)\n+   is\n+      Builder_Package  : constant Package_Id :=\n+        Value_Of (Name_Builder, Main_Project.Decl.Packages,\n+                  Project_Tree.Shared);\n+\n+      Global_Compilation_Array    : Array_Element_Id;\n+      Global_Compilation_Elem     : Array_Element;\n+      Global_Compilation_Switches : Variable_Value;\n+\n+      Default_Switches_Array : Array_Id;\n+\n+      Builder_Switches_Lang : Name_Id := No_Name;\n+\n+      List             : String_List_Id;\n+      Element          : String_Element;\n+\n+      Index            : Name_Id;\n+      Source           : Prj.Source_Id;\n+\n+      Lang              : Name_Id := No_Name;  --  language index for Switches\n+      Switches_For_Lang : Variable_Value := Nil_Variable_Value;\n+      --  Value of Builder'Default_Switches(lang)\n+\n+      Name             : Name_Id := No_Name;  --  main file index for Switches\n+      Switches_For_Main : Variable_Value := Nil_Variable_Value;\n+      --  Switches for a specific main. When there are several mains, Name is\n+      --  set to No_Name, and Switches_For_Main might be left with an actual\n+      --  value (so that we can display a warning that it was ignored).\n+\n+      Other_Switches : Variable_Value := Nil_Variable_Value;\n+      --  Value of Builder'Switches(others)\n+\n+      Defaults : Variable_Value := Nil_Variable_Value;\n+\n+      Switches : Variable_Value := Nil_Variable_Value;\n+      --  The computed builder switches\n+\n+      Success          : Boolean := False;\n+   begin\n+      if Builder_Package /= No_Package then\n+         Mains.Reset;\n+\n+         --  If there is no main, and there is only one compilable language,\n+         --  use this language as the switches index.\n+\n+         if Mains.Number_Of_Mains (Project_Tree) = 0 then\n+\n+            if Only_For_Lang = No_Name then\n+               declare\n+                  Language : Language_Ptr := Main_Project.Languages;\n+\n+               begin\n+                  while Language /= No_Language_Index loop\n+                     if Language.Config.Compiler_Driver /= No_File\n+                       and then Language.Config.Compiler_Driver /= Empty_File\n+                     then\n+                        if Lang /= No_Name then\n+                           Lang := No_Name;\n+                           exit;\n+                        else\n+                           Lang := Language.Name;\n+                        end if;\n+                     end if;\n+                     Language := Language.Next;\n+                  end loop;\n+               end;\n+            else\n+               Lang := Only_For_Lang;\n+            end if;\n+\n+         else\n+            for Index in 1 .. Mains.Number_Of_Mains (Project_Tree) loop\n+               Source := Mains.Next_Main.Source;\n+               if Source /= No_Source then\n+\n+                  if Switches_For_Main = Nil_Variable_Value then\n+                     Switches_For_Main := Value_Of\n+                       (Name                    => Name_Id (Source.File),\n+                        Attribute_Or_Array_Name => Name_Switches,\n+                        In_Package              => Builder_Package,\n+                        Shared                  => Project_Tree.Shared,\n+                        Force_Lower_Case_Index  => False,\n+                        Allow_Wildcards         => True);\n+\n+                     --  If not found, try without extension ???\n+                     --  That's because gnatmake accepts unit names in Switches\n+\n+                     if Switches_For_Main = Nil_Variable_Value\n+                       and then Source.Unit /= null\n+                     then\n+                        Switches_For_Main := Value_Of\n+                          (Name                    => Source.Unit.Name,\n+                           Attribute_Or_Array_Name => Name_Switches,\n+                           In_Package              => Builder_Package,\n+                           Shared                  => Project_Tree.Shared,\n+                           Force_Lower_Case_Index  => False,\n+                           Allow_Wildcards         => True);\n+                     end if;\n+                  end if;\n+\n+                  if Index = 1 then\n+                     Lang := Source.Language.Name;\n+                     Name := Name_Id (Source.File);\n+                  else\n+                     Name := No_Name;  --  Can't use main specific switches\n+\n+                     if Lang /= Source.Language.Name then\n+                        Lang := No_Name;\n+                     end if;\n+                  end if;\n+               end if;\n+            end loop;\n+         end if;\n+\n+         Global_Compilation_Array := Value_Of\n+           (Name      => Name_Global_Compilation_Switches,\n+            In_Arrays => Project_Tree.Shared.Packages.Table\n+              (Builder_Package).Decl.Arrays,\n+            Shared    => Project_Tree.Shared);\n+\n+         Default_Switches_Array :=\n+           Project_Tree.Shared.Packages.Table (Builder_Package).Decl.Arrays;\n+\n+         while Default_Switches_Array /= No_Array and then\n+           Project_Tree.Shared.Arrays.Table (Default_Switches_Array).Name /=\n+           Name_Default_Switches\n+         loop\n+            Default_Switches_Array :=\n+              Project_Tree.Shared.Arrays.Table (Default_Switches_Array).Next;\n+         end loop;\n+\n+         if Global_Compilation_Array /= No_Array_Element\n+           and then Default_Switches_Array /= No_Array\n+         then\n+            Prj.Err.Error_Msg\n+              (Root_Environment.Flags,\n+               \"Default_Switches forbidden in presence of \" &\n+               \"Global_Compilation_Switches. Use Switches instead.\",\n+               Project_Tree.Shared.Arrays.Table\n+                 (Default_Switches_Array).Location);\n+            Fail_Program\n+              (Project_Tree,\n+               \"*** illegal combination of Builder attributes\");\n+         end if;\n+\n+         if Lang /= No_Name then\n+            Switches_For_Lang := Prj.Util.Value_Of\n+              (Name                    => Lang,\n+               Index                   => 0,\n+               Attribute_Or_Array_Name => Name_Switches,\n+               In_Package              => Builder_Package,\n+               Shared                  => Project_Tree.Shared,\n+               Force_Lower_Case_Index  => True);\n+\n+            Defaults := Prj.Util.Value_Of\n+              (Name                    => Lang,\n+               Index                   => 0,\n+               Attribute_Or_Array_Name => Name_Default_Switches,\n+               In_Package              => Builder_Package,\n+               Shared                  => Project_Tree.Shared,\n+               Force_Lower_Case_Index  => True);\n+         end if;\n+\n+         Other_Switches := Prj.Util.Value_Of\n+           (Name                    => All_Other_Names,\n+            Index                   => 0,\n+            Attribute_Or_Array_Name => Name_Switches,\n+            In_Package              => Builder_Package,\n+            Shared                  => Project_Tree.Shared);\n+\n+         if not Quiet_Output\n+           and then Mains.Number_Of_Mains (Project_Tree) > 1\n+           and then Switches_For_Main /= Nil_Variable_Value\n+         then\n+            --  More than one main, but we had main-specific switches that\n+            --  are ignored.\n+\n+            if Switches_For_Lang /= Nil_Variable_Value then\n+               Write_Line\n+                 (\"Warning: using Builder'Default_Switches\"\n+                  & \"(\"\"\" & Get_Name_String (Lang)\n+                  & \"\"\"), as there are several mains\");\n+\n+            elsif Other_Switches /= Nil_Variable_Value then\n+               Write_Line\n+                 (\"Warning: using Builder'Switches(others), \"\n+                  & \"as there are several mains\");\n+\n+            elsif Defaults /= Nil_Variable_Value then\n+               Write_Line\n+                 (\"Warning: using Builder'Default_Switches(\"\"\"\n+                  & Get_Name_String (Lang)\n+                  & \"\"\"), as there are several mains\");\n+            else\n+               Write_Line\n+                 (\"Warning: using no switches from package \"\n+                  & \"Builder, as there are several mains\");\n+            end if;\n+         end if;\n+\n+         Builder_Switches_Lang := Lang;\n+\n+         if Name /= No_Name then\n+            --  Get the switches for the single main\n+            Switches := Switches_For_Main;\n+         end if;\n+\n+         if Switches = Nil_Variable_Value or else Switches.Default then\n+            --  Get the switches for the common language of the mains\n+            Switches := Switches_For_Lang;\n+         end if;\n+\n+         if Switches = Nil_Variable_Value or else Switches.Default then\n+            Switches := Other_Switches;\n+         end if;\n+\n+         --  For backward compatibility with gnatmake, if no Switches\n+         --  are declared, check for Default_Switches (<language>).\n+\n+         if Switches = Nil_Variable_Value or else Switches.Default then\n+            Switches := Defaults;\n+         end if;\n+\n+         --  If switches have been found, scan them\n+\n+         if Switches /= Nil_Variable_Value and then not Switches.Default then\n+            List := Switches.Values;\n+\n+            while List /= Nil_String loop\n+               Element := Project_Tree.Shared.String_Elements.Table (List);\n+               Get_Name_String (Element.Value);\n+\n+               if Name_Len /= 0 then\n+                  declare\n+                     --  Add_Switch might itself be using the name_buffer, so\n+                     --  we make a temporary here.\n+                     Switch : constant String :=\n+                       Name_Buffer (1 .. Name_Len);\n+                  begin\n+                     Success := Add_Switch\n+                       (Switch      => Switch,\n+                        For_Lang    => Builder_Switches_Lang,\n+                        For_Builder => True,\n+                        Has_Global_Compilation_Switches =>\n+                          Global_Compilation_Array /= No_Array_Element);\n+                  end;\n+\n+                  if not Success then\n+                     for J in reverse 1 .. Name_Len loop\n+                        Name_Buffer (J + J) := Name_Buffer (J);\n+                        Name_Buffer (J + J - 1) := ''';\n+                     end loop;\n+\n+                     Name_Len := Name_Len + Name_Len;\n+\n+                     Prj.Err.Error_Msg\n+                       (Root_Environment.Flags,\n+                        '\"' & Name_Buffer (1 .. Name_Len) &\n+                        \"\"\" is not a builder switch. Consider moving \" &\n+                        \"it to Global_Compilation_Switches.\",\n+                        Element.Location);\n+                     Fail_Program\n+                       (Project_Tree,\n+                        \"*** illegal switch \"\"\" &\n+                        Get_Name_String (Element.Value) & '\"');\n+                  end if;\n+               end if;\n+\n+               List := Element.Next;\n+            end loop;\n+         end if;\n+\n+         --  Reset the Builder Switches language\n+\n+         Builder_Switches_Lang := No_Name;\n+\n+         --  Take into account attributes Global_Compilation_Switches\n+\n+         while Global_Compilation_Array /= No_Array_Element loop\n+            Global_Compilation_Elem :=\n+              Project_Tree.Shared.Array_Elements.Table\n+                (Global_Compilation_Array);\n+\n+            Get_Name_String (Global_Compilation_Elem.Index);\n+            To_Lower (Name_Buffer (1 .. Name_Len));\n+            Index := Name_Find;\n+\n+            if Only_For_Lang = No_Name or else Index = Only_For_Lang then\n+               Global_Compilation_Switches := Global_Compilation_Elem.Value;\n+\n+               if Global_Compilation_Switches /= Nil_Variable_Value\n+                 and then not Global_Compilation_Switches.Default\n+               then\n+                  --  We have found an attribute\n+                  --  Global_Compilation_Switches for a language: put the\n+                  --  switches in the appropriate table.\n+\n+                  List := Global_Compilation_Switches.Values;\n+                  while List /= Nil_String loop\n+                     Element :=\n+                       Project_Tree.Shared.String_Elements.Table (List);\n+\n+                     if Element.Value /= No_Name then\n+                        Success := Add_Switch\n+                          (Switch      => Get_Name_String (Element.Value),\n+                           For_Lang    => Index,\n+                           For_Builder => False,\n+                           Has_Global_Compilation_Switches =>\n+                             Global_Compilation_Array /= No_Array_Element);\n+                     end if;\n+\n+                     List := Element.Next;\n+                  end loop;\n+               end if;\n+            end if;\n+\n+            Global_Compilation_Array := Global_Compilation_Elem.Next;\n+         end loop;\n+      end if;\n+   end Compute_Builder_Switches;\n+\n end Makeutl;"}, {"sha": "f3ac998b6ae01523e05036622aa4fac4e20ab526", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2fee30d5490aac27479b1908f8cd8efe13b6189/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2fee30d5490aac27479b1908f8cd8efe13b6189/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=e2fee30d5490aac27479b1908f8cd8efe13b6189", "patch": "@@ -233,6 +233,33 @@ package Makeutl is\n    --  Terminate program, with or without a message, setting the status code\n    --  according to Fatal. This properly removes all temporary files.\n \n+   --------------\n+   -- Switches --\n+   --------------\n+\n+   generic\n+      with function Add_Switch\n+        (Switch      : String;\n+         For_Lang    : Name_Id;\n+         For_Builder : Boolean;\n+         Has_Global_Compilation_Switches : Boolean) return Boolean;\n+      --  For_Builder is true if we have a builder switch\n+      --  This function should return True in case of success (the switch is\n+      --  valid), False otherwise. The error message will be displayed by\n+      --  Compute_Builder_Switches itself.\n+      --  Has_Global_Compilation_Switches is True if the attribute\n+      --  Global_Compilation_Switches is defined in the project.\n+\n+   procedure Compute_Builder_Switches\n+     (Project_Tree     : Project_Tree_Ref;\n+      Root_Environment : in out Prj.Tree.Environment;\n+      Main_Project     : Project_Id;\n+      Only_For_Lang    : Name_Id := No_Name);\n+   --  Compute the builder switches and global compilation switches.\n+   --  Every time a switch is found in the project, it is passed to Add_Switch.\n+   --  You can provide a value for Only_For_Lang so that we only look for\n+   --  this language when parsing the global compilation switches.\n+\n    -----------------------\n    -- Project_Tree data --\n    -----------------------"}]}