{"sha": "d3ac17c9c5c7c3ebf92e33c96733134b9304f811", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNhYzE3YzljNWM3YzNlYmY5MmUzM2M5NjczMzEzNGI5MzA0ZjgxMQ==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2002-11-14T19:44:41Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2002-11-14T19:44:41Z"}, "message": "syntactic cleanup\n\nFrom-SVN: r59111", "tree": {"sha": "49b4f048bf735eed2f999af145e32d3b560e2052", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49b4f048bf735eed2f999af145e32d3b560e2052"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3ac17c9c5c7c3ebf92e33c96733134b9304f811", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3ac17c9c5c7c3ebf92e33c96733134b9304f811", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3ac17c9c5c7c3ebf92e33c96733134b9304f811", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3ac17c9c5c7c3ebf92e33c96733134b9304f811/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "06fa6442a30609c18312b28b5dcb5a522442680a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06fa6442a30609c18312b28b5dcb5a522442680a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06fa6442a30609c18312b28b5dcb5a522442680a"}], "stats": {"total": 73, "additions": 54, "deletions": 19}, "files": [{"sha": "96dc497d239723245021c7da3e454f0607d8b220", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3ac17c9c5c7c3ebf92e33c96733134b9304f811/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3ac17c9c5c7c3ebf92e33c96733134b9304f811/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=d3ac17c9c5c7c3ebf92e33c96733134b9304f811", "patch": "@@ -1,3 +1,7 @@\n+2002-11-13  Bruce Korb  <bkorb@gnu.org>\n+\n+\t* Makefile.tpl: syntactic cleanup\n+\n 2002-11-13 Stuart Hastings <stuart@apple.com>\n \n \t* MAINTAINERS: Add myself to write-after-approval list."}, {"sha": "7428f4124519e3beba0669481318a224fe935d28", "filename": "Makefile.tpl", "status": "modified", "additions": 50, "deletions": 19, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3ac17c9c5c7c3ebf92e33c96733134b9304f811/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3ac17c9c5c7c3ebf92e33c96733134b9304f811/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=d3ac17c9c5c7c3ebf92e33c96733134b9304f811", "patch": "@@ -1,4 +1,4 @@\n-[+ AutoGen5 template\n+[+ AutoGen5 template -*- Mode: Makefile -*-\n in\n +]\n \n@@ -522,8 +522,10 @@ CONFIGURE_BUILD_MODULES = \\\n \n # This is a list of the targets for all of the modules which are compiled\n # using $(FLAGS_TO_PASS).\n-ALL_MODULES = [+ FOR host_modules +]\\\n-\tall-[+module+] [+ ENDFOR host_modules +]\\\n+ALL_MODULES =[+\n+    FOR host_modules +] \\\n+\tall-[+module+][+\n+    ENDFOR host_modules +] \\\n \t$(EXTRA_TARGET_HOST_ALL_MODULES)\n \n # This is a list of the check targets for all of the modules which are\n@@ -539,16 +541,25 @@ NATIVE_CHECK_MODULES = \\\n \tcheck-flex \\\n \tcheck-zip\n \n-CROSS_CHECK_MODULES = [+ FOR host_modules +][+ IF no_check  +][+ ELIF no_check_cross +][+ ELSE x +]\\\n-\tcheck-[+module+] [+ ENDIF no_check +][+ ENDFOR host_modules +]\\\n+CROSS_CHECK_MODULES =[+\n+    FOR host_modules +][+\n+        IF (not (or (exist? \"no_check_cross\") (exist? \"no_check\")))\n+           +] \\\n+\tcheck-[+module+][+\n+        ENDIF no_check +][+\n+    ENDFOR host_modules +] \\\n \t$(EXTRA_TARGET_HOST_CHECK_MODULES)\n \n CHECK_MODULES=$(NATIVE_CHECK_MODULES) $(CROSS_CHECK_MODULES)\n \n # This is a list of the install targets for all of the modules which are\n # compiled using $(FLAGS_TO_PASS).\n-INSTALL_MODULES = [+ FOR host_modules+][+ IF no_install +][+ ELSE no_install +]\\\n-\tinstall-[+module+] [+ ENDIF no_install +][+ ENDFOR host_modules +]\\\n+INSTALL_MODULES =[+\n+    FOR host_modules+][+\n+        IF (not (exist? \"no_install\")) +] \\\n+\tinstall-[+module+][+\n+        ENDIF no_install +][+\n+    ENDFOR host_modules +] \\\n \t$(EXTRA_TARGET_HOST_INSTALL_MODULES)\n \n # This is a list of the targets for all of the modules which are compiled\n@@ -583,31 +594,51 @@ INSTALL_X11_MODULES = \\\n \n # This is a list of the targets for all of the modules which are compiled\n # using $(TARGET_FLAGS_TO_PASS).\n-ALL_TARGET_MODULES = [+ FOR target_modules +]\\\n-\tall-target-[+module+] [+ ENDFOR target_modules +]\n+ALL_TARGET_MODULES =[+\n+    FOR target_modules +] \\\n+\tall-target-[+module+][+\n+    ENDFOR target_modules +]\n \n # This is a list of the configure targets for all of the modules which\n # are compiled using the target tools.\n-CONFIGURE_TARGET_MODULES = [+ FOR target_modules +]\\\n-\tconfigure-target-[+module+] [+ ENDFOR target_modules +]\n+CONFIGURE_TARGET_MODULES =[+\n+    FOR target_modules +] \\\n+\tconfigure-target-[+module+][+\n+    ENDFOR target_modules +]\n \n # This is a list of the check targets for all of the modules which are\n # compiled using $(TARGET_FLAGS_TO_PASS).\n-CHECK_TARGET_MODULES = [+ FOR target_modules +][+ IF no_check +][+ ELSE check +]\\\n-\tcheck-target-[+module+] [+ ENDIF no_check +][+ ENDFOR target_modules +]\n+CHECK_TARGET_MODULES =[+\n+    FOR target_modules +][+\n+        IF (not (exist? \"no_check\")) +] \\\n+\tcheck-target-[+module+][+\n+        ENDIF no_check +][+\n+    ENDFOR target_modules +]\n \n # This is a list of the install targets for all of the modules which are\n # compiled using $(TARGET_FLAGS_TO_PASS).\n-INSTALL_TARGET_MODULES = [+ FOR target_modules +][+ IF no_install +][+ ELSE install +]\\\n-\tinstall-target-[+module+] [+ ENDIF no_install +][+ ENDFOR target_modules +]\n+INSTALL_TARGET_MODULES =[+\n+    FOR target_modules +][+\n+        IF (not (exist? \"no_install\")) +] \\\n+\tinstall-target-[+module+][+\n+        ENDIF no_install +][+\n+    ENDFOR target_modules +]\n \n # This is a list of the targets for which we can do a clean-{target}.\n-CLEAN_MODULES = [+ FOR host_modules +][+ IF no_clean +][+ ELSE no_clean +]\\\n-\tclean-[+module+] [+ ENDIF no_clean +][+ ENDFOR host_modules +]\n+CLEAN_MODULES =[+\n+    FOR host_modules +][+\n+        IF (not (exist? \"no_clean\")) +] \\\n+\tclean-[+module+][+\n+        ENDIF no_clean +][+\n+    ENDFOR host_modules +]\n \n # All of the target modules that can be cleaned\n-CLEAN_TARGET_MODULES = [+ FOR target_modules +][+ IF no_clean +][+ ELSE clean +]\\\n-\tclean-target-[+module+] [+ ENDIF no_clean +][+ ENDFOR target_modules +]\n+CLEAN_TARGET_MODULES =[+\n+    FOR target_modules +][+\n+        IF (not (exist? \"no_clean\")) +] \\\n+\tclean-target-[+module+][+\n+        ENDIF no_clean +][+\n+    ENDFOR target_modules +]\n \n # All of the x11 modules that can be cleaned\n CLEAN_X11_MODULES = \\"}]}