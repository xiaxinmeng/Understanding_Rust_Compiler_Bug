{"sha": "3317aae90b39123922aa92f0f10f65212df1699a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMxN2FhZTkwYjM5MTIzOTIyYWE5MmYwZjEwZjY1MjEyZGYxNjk5YQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchell@gcc.gnu.org", "date": "1998-02-12T14:55:02Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchell@gcc.gnu.org", "date": "1998-02-12T14:55:02Z"}, "message": "call.c (reference_binding): Use comptypes when comparing TYPE_MAIN_VARIANTS to handle non-canonical...\n\n\t* call.c (reference_binding): Use comptypes when comparing\n\tTYPE_MAIN_VARIANTS to handle non-canonical array/index types.\n\nFrom-SVN: r17875", "tree": {"sha": "d39d31d183a285aeb90430f6de9a9f26d2821fe9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d39d31d183a285aeb90430f6de9a9f26d2821fe9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3317aae90b39123922aa92f0f10f65212df1699a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3317aae90b39123922aa92f0f10f65212df1699a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3317aae90b39123922aa92f0f10f65212df1699a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3317aae90b39123922aa92f0f10f65212df1699a/comments", "author": null, "committer": null, "parents": [{"sha": "9ca21c0adb7d4de79d72a402914a71bcd38df3a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ca21c0adb7d4de79d72a402914a71bcd38df3a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ca21c0adb7d4de79d72a402914a71bcd38df3a2"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "d30092eff9a1363e66ae355ae82e52e13e86d90d", "filename": "gcc/cp/call.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3317aae90b39123922aa92f0f10f65212df1699a/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3317aae90b39123922aa92f0f10f65212df1699a/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=3317aae90b39123922aa92f0f10f65212df1699a", "patch": "@@ -3242,7 +3242,8 @@ reference_binding (rto, rfrom, expr, flags)\n   else if (! expr || ! real_lvalue_p (expr))\n     lvalue = 0;\n \n-  related = (TYPE_MAIN_VARIANT (to) == TYPE_MAIN_VARIANT (from)\n+  related = (comptypes (TYPE_MAIN_VARIANT (to),\n+\t\t\tTYPE_MAIN_VARIANT (from), 1)\n \t     || (IS_AGGR_TYPE (to) && IS_AGGR_TYPE (from)\n \t\t && DERIVED_FROM_P (to, from)));\n \n@@ -3252,7 +3253,8 @@ reference_binding (rto, rfrom, expr, flags)\n     {\n       conv = build1 (IDENTITY_CONV, from, expr);\n \n-      if (TYPE_MAIN_VARIANT (to) == TYPE_MAIN_VARIANT (from))\n+      if (comptypes (TYPE_MAIN_VARIANT (to),\n+\t\t     TYPE_MAIN_VARIANT (from), 1))\n \tconv = build_conv (REF_BIND, rto, conv);\n       else\n \t{"}, {"sha": "18932194a27ea394ef9ad593cd14a30d9e6e3aa8", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memtemp69.C", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3317aae90b39123922aa92f0f10f65212df1699a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp69.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3317aae90b39123922aa92f0f10f65212df1699a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp69.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp69.C?ref=3317aae90b39123922aa92f0f10f65212df1699a", "patch": "@@ -0,0 +1,35 @@\n+struct S \n+{\n+  template <class T>\n+  void f(T (&i)[7])\n+    {}\n+\n+  void g()\n+    {\n+      int i[] = {1, 2, 3, 4, 5, 6, 7};\n+      f(i);\n+      int j[7];\n+      f(j);\n+    }\n+};\n+\n+struct foo {\n+  template <typename T, int N>\n+  static T* array_end(T(&array)[N]) { return &array[N]; }\n+};\n+\n+struct X\n+{\n+  template <class T1>\n+  void f(const T1&) {}\n+};\n+\n+main(int ac, char* av[]) {\n+  S s;\n+  s.g();\n+  int i[] = {1,2,3,4,5};\n+  int* e = foo::array_end(i);\n+  X x;\n+  x.f(\"hello\");\n+}\n+ "}]}