{"sha": "dd6f2a43780177ecf4f55585ec19c49abfffbe5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ2ZjJhNDM3ODAxNzdlY2Y0ZjU1NTg1ZWMxOWM0OWFiZmZmYmU1ZQ==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2005-11-25T14:50:20Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2005-11-25T14:50:20Z"}, "message": "fold-const.c (negate_mathfn_p): Fix comment and add support for BUILT_IN_CBRT...\n\n\t* fold-const.c (negate_mathfn_p): Fix comment and add support\n\tfor BUILT_IN_CBRT, BUILT_IN_SINH, BUILT_IN_TANH, BUILT_IN_ASINH,\n\tBUILT_IN_ATANH.\n\nFrom-SVN: r107507", "tree": {"sha": "8a5cb59dc6b029ac45e8a1df28660435efa467b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a5cb59dc6b029ac45e8a1df28660435efa467b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd6f2a43780177ecf4f55585ec19c49abfffbe5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd6f2a43780177ecf4f55585ec19c49abfffbe5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd6f2a43780177ecf4f55585ec19c49abfffbe5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd6f2a43780177ecf4f55585ec19c49abfffbe5e/comments", "author": null, "committer": null, "parents": [{"sha": "1fb8a438aa103b4d479a7344eafbc65d0f91f6be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fb8a438aa103b4d479a7344eafbc65d0f91f6be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fb8a438aa103b4d479a7344eafbc65d0f91f6be"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "580dd5339234a75f74afd57deebdc957711c7ecf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd6f2a43780177ecf4f55585ec19c49abfffbe5e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd6f2a43780177ecf4f55585ec19c49abfffbe5e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd6f2a43780177ecf4f55585ec19c49abfffbe5e", "patch": "@@ -1,3 +1,9 @@\n+2005-11-25  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\t* fold-const.c (negate_mathfn_p): Fix comment and add support\n+\tfor BUILT_IN_CBRT, BUILT_IN_SINH, BUILT_IN_TANH, BUILT_IN_ASINH,\n+\tBUILT_IN_ATANH.\n+\n 2005-11-25  Joseph S. Myers  <joseph@codesourcery.com>\n \n \tPR middle-end/24998"}, {"sha": "59037d5975801660eb3d8a03a8b225a2f7d68043", "filename": "gcc/fold-const.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd6f2a43780177ecf4f55585ec19c49abfffbe5e/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd6f2a43780177ecf4f55585ec19c49abfffbe5e/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=dd6f2a43780177ecf4f55585ec19c49abfffbe5e", "patch": "@@ -857,8 +857,8 @@ div_if_zero_remainder (enum tree_code code, tree arg1, tree arg2)\n   return build_int_cst_wide (type, quol, quoh);\n }\n \f\n-/* Return true if built-in mathematical function specified by CODE\n-   preserves the sign of it argument, i.e. -f(x) == f(-x).  */\n+/* Return true if the built-in mathematical function specified by CODE\n+   is odd, i.e. -f(x) == f(-x).  */\n \n static bool\n negate_mathfn_p (enum built_in_function code)\n@@ -868,15 +868,30 @@ negate_mathfn_p (enum built_in_function code)\n     case BUILT_IN_ASIN:\n     case BUILT_IN_ASINF:\n     case BUILT_IN_ASINL:\n+    case BUILT_IN_ASINH:\n+    case BUILT_IN_ASINHF:\n+    case BUILT_IN_ASINHL:\n     case BUILT_IN_ATAN:\n     case BUILT_IN_ATANF:\n     case BUILT_IN_ATANL:\n+    case BUILT_IN_ATANH:\n+    case BUILT_IN_ATANHF:\n+    case BUILT_IN_ATANHL:\n+    case BUILT_IN_CBRT:\n+    case BUILT_IN_CBRTF:\n+    case BUILT_IN_CBRTL:\n     case BUILT_IN_SIN:\n     case BUILT_IN_SINF:\n     case BUILT_IN_SINL:\n+    case BUILT_IN_SINH:\n+    case BUILT_IN_SINHF:\n+    case BUILT_IN_SINHL:\n     case BUILT_IN_TAN:\n     case BUILT_IN_TANF:\n     case BUILT_IN_TANL:\n+    case BUILT_IN_TANH:\n+    case BUILT_IN_TANHF:\n+    case BUILT_IN_TANHL:\n       return true;\n \n     default:"}]}