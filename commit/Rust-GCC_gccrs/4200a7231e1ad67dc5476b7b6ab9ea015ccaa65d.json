{"sha": "4200a7231e1ad67dc5476b7b6ab9ea015ccaa65d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDIwMGE3MjMxZTFhZDY3ZGM1NDc2YjdiNmFiOWVhMDE1Y2NhYTY1ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-08-11T15:43:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-08-11T15:43:12Z"}, "message": "PR c++/73456 - ICE with constrained parameter pack.\n\n\t* logic.cc (non_atomic_constraint_p): Handle EXPR_PACK_EXPANSION.\n\nFrom-SVN: r239376", "tree": {"sha": "331d5162ca8cdf18e4771b9113a074479d90ba07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/331d5162ca8cdf18e4771b9113a074479d90ba07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4200a7231e1ad67dc5476b7b6ab9ea015ccaa65d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4200a7231e1ad67dc5476b7b6ab9ea015ccaa65d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4200a7231e1ad67dc5476b7b6ab9ea015ccaa65d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4200a7231e1ad67dc5476b7b6ab9ea015ccaa65d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e8283787cbbd0438c8c6199807347ff5addcf522", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8283787cbbd0438c8c6199807347ff5addcf522", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8283787cbbd0438c8c6199807347ff5addcf522"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "04d6aa0ccbf09f12ffc6d3316bc240c0536ca9f0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4200a7231e1ad67dc5476b7b6ab9ea015ccaa65d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4200a7231e1ad67dc5476b7b6ab9ea015ccaa65d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4200a7231e1ad67dc5476b7b6ab9ea015ccaa65d", "patch": "@@ -1,3 +1,8 @@\n+2016-08-11  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/73456\n+\t* logic.cc (non_atomic_constraint_p): Handle EXPR_PACK_EXPANSION.\n+\n 2016-08-10  Jason Merrill  <jason@redhat.com>\n \n \tImplement C++17 constexpr if."}, {"sha": "b86e740e7c39d5de611789aba8136881bdc36655", "filename": "gcc/cp/logic.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4200a7231e1ad67dc5476b7b6ab9ea015ccaa65d/gcc%2Fcp%2Flogic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4200a7231e1ad67dc5476b7b6ab9ea015ccaa65d/gcc%2Fcp%2Flogic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flogic.cc?ref=4200a7231e1ad67dc5476b7b6ab9ea015ccaa65d", "patch": "@@ -305,6 +305,9 @@ non_atomic_constraint_p (tree t)\n     case ICONV_CONSTR:\n     case DEDUCT_CONSTR:\n     case EXCEPT_CONSTR:\n+      /* A pack expansion isn't atomic, but it can't decompose to prove an\n+\t atom, so it shouldn't cause analyze_atom to return undecided.  */\n+    case EXPR_PACK_EXPANSION:\n       return false;\n     case CHECK_CONSTR:\n     case PARM_CONSTR:"}, {"sha": "d20fa7da4e555f59adc73b05b85905a7aebd9e17", "filename": "gcc/testsuite/g++.dg/concepts/variadic4.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4200a7231e1ad67dc5476b7b6ab9ea015ccaa65d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4200a7231e1ad67dc5476b7b6ab9ea015ccaa65d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fvariadic4.C?ref=4200a7231e1ad67dc5476b7b6ab9ea015ccaa65d", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/73456\n+// { dg-options \"-std=c++1z -fconcepts\" }\n+\n+template<typename...> struct list {};\n+\n+template<typename Seq>\n+concept bool Sequence = true;\n+\n+template<Sequence... Seqs>\n+struct zip;\n+\n+template<Sequence... Seqs>\n+    requires requires { typename list<Seqs...>; }\n+// main.cpp:12:8: internal compiler error: in non_atomic_constraint_p, at cp/logic.cc:315\n+struct zip<Seqs...> {};\n+\n+int main()\n+{\n+    zip<list<>, list<int>> {};\n+}"}]}