{"sha": "5b880ea61c107da98ea87a5ffad4520445d60007", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI4ODBlYTYxYzEwN2RhOThlYTg3YTVmZmFkNDUyMDQ0NWQ2MDAwNw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-08-18T14:47:46Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-08-18T14:47:46Z"}, "message": "Keep tm, div_t, ldiv_t, lconv mangling on Solaris (PR libstdc++-v3/1773)\n\nCo-Authored-By: Marc Glisse <marc.glisse@normalesup.org>\n\nFrom-SVN: r177863", "tree": {"sha": "15183626c4d31ca839660bc4750300b8ed0ef58d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15183626c4d31ca839660bc4750300b8ed0ef58d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b880ea61c107da98ea87a5ffad4520445d60007", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b880ea61c107da98ea87a5ffad4520445d60007", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b880ea61c107da98ea87a5ffad4520445d60007", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b880ea61c107da98ea87a5ffad4520445d60007/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "901ebcdf97fefd24e464f98593bfa6dc741d4525", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/901ebcdf97fefd24e464f98593bfa6dc741d4525", "html_url": "https://github.com/Rust-GCC/gccrs/commit/901ebcdf97fefd24e464f98593bfa6dc741d4525"}], "stats": {"total": 171, "additions": 161, "deletions": 10}, "files": [{"sha": "3f07787cf9126d0d4386c6ba8f88d8c9ac2dd1de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b880ea61c107da98ea87a5ffad4520445d60007", "patch": "@@ -1,3 +1,18 @@\n+2011-08-18  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\t    Marc Glisse  <marc.glisse@normalesup.org>\n+\n+\tPR libstdc++-v3/1773\n+\t* target.def (decl_mangling_context): New C++ hook.\n+\t* doc/tm.texi: Regenerate.\n+\t* config/sol2-cxx.c, config/sol2-stubs.c: New files.\n+\t* config/sol2-protos.h: Group by source file.\n+\t(solaris_cxx_decl_mangling_context): Declare.\n+\t* config/sol2.h (TARGET_CXX_DECL_MANGLING_CONTEXT): Define.\n+\t* config/t-sol2 (sol2-cxx.o, sol2-stubs.o): New targets.\n+\tUse $<.\n+\t* config.gcc (*-*-solaris2*): Add sol2-cxx.o to cxx_target_objs.\n+\tAdd sol2-stubs.o to extra_objs.\n+\n 2011-08-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/50009"}, {"sha": "b92ce3d4fb63f123f9bcd7e6b5b022de64ed210c", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=5b880ea61c107da98ea87a5ffad4520445d60007", "patch": "@@ -718,8 +718,8 @@ case ${target} in\n   tm_p_file=\"${tm_p_file} sol2-protos.h\"\n   tmake_file=\"${tmake_file} t-sol2 t-slibgcc-dummy\"\n   c_target_objs=\"${c_target_objs} sol2-c.o\"\n-  cxx_target_objs=\"${cxx_target_objs} sol2-c.o\"\n-  extra_objs=\"sol2.o\"\n+  cxx_target_objs=\"${cxx_target_objs} sol2-c.o sol2-cxx.o\"\n+  extra_objs=\"sol2.o sol2-stubs.o\"\n   extra_options=\"${extra_options} sol2.opt\"\n   case ${enable_threads}:${have_pthread_h}:${have_thread_h} in\n     \"\":yes:* | yes:yes:* )"}, {"sha": "4c89d0d3607c0821313ee28edbeca07341c8eee6", "filename": "gcc/config/sol2-cxx.c", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Fconfig%2Fsol2-cxx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Fconfig%2Fsol2-cxx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2-cxx.c?ref=5b880ea61c107da98ea87a5ffad4520445d60007", "patch": "@@ -0,0 +1,64 @@\n+/* C++ specific Solaris system support.\n+   Copyright (C) 2011 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tree.h\"\n+#include \"cp/cp-tree.h\"\n+#include \"tm.h\"\n+#include \"tm_p.h\"\n+\n+/* Before GCC 4.7, g++ defined __cplusplus 1 to avoid coping with the C++98\n+   overloads in Solaris system headers.  Since this was fixed, 4 structure\n+   types would move to namespace std, breaking the Solaris libstdc++ ABI.\n+   To avoid this, we forcefully keep those types in the global namespace.\n+   This can be removed once the next major version of libstdc++ is\n+   released.  */\n+\n+/* Cache the identifiers of the affected types to speed up lookup.  */\n+#define NUM_FGID 4\n+static GTY(()) tree force_global_identifiers[NUM_FGID];\n+\n+/* Check if DECL is one of the affected types and move it to the global\n+   namespace if so.  */\n+tree\n+solaris_cxx_decl_mangling_context (const_tree decl)\n+{\n+  static bool init = false;\n+  int i = 0;\n+\n+  if (!init)\n+    {\n+      force_global_identifiers[i++] = get_identifier (\"div_t\");\n+      force_global_identifiers[i++] = get_identifier (\"ldiv_t\");\n+      force_global_identifiers[i++] = get_identifier (\"lconv\");\n+      force_global_identifiers[i++] = get_identifier (\"tm\");\n+      init = true;\n+    }\n+\n+  if (!(DECL_P (decl) && DECL_NAMESPACE_STD_P (CP_DECL_CONTEXT (decl))))\n+    return NULL_TREE;\n+\n+  for (i = 0; i < NUM_FGID; i++)\n+    if (DECL_NAME (decl) == force_global_identifiers[i])\n+\treturn global_namespace;\n+\n+  return NULL_TREE;\n+}"}, {"sha": "9f31ce34aff39004be7fb7e1e22320a27f533965", "filename": "gcc/config/sol2-protos.h", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Fconfig%2Fsol2-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Fconfig%2Fsol2-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2-protos.h?ref=5b880ea61c107da98ea87a5ffad4520445d60007", "patch": "@@ -18,9 +18,15 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-extern void solaris_insert_attributes (tree, tree *);\n-extern void solaris_register_pragmas (void);\n-extern void solaris_output_init_fini (FILE *, tree);\n+/* In sol2.c.  */\n extern void solaris_assemble_visibility (tree, int);\n extern void solaris_elf_asm_comdat_section (const char *, unsigned int, tree);\n extern void solaris_file_end (void);\n+extern void solaris_insert_attributes (tree, tree *);\n+extern void solaris_output_init_fini (FILE *, tree);\n+\n+/* In sol2-c.c.  */\n+extern void solaris_register_pragmas (void);\n+\n+/* In sol2-cxx.c.  */\n+extern tree solaris_cxx_decl_mangling_context (const_tree);"}, {"sha": "94cab490c1a9ae299472300c58138b936263485f", "filename": "gcc/config/sol2-stubs.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Fconfig%2Fsol2-stubs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Fconfig%2Fsol2-stubs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2-stubs.c?ref=5b880ea61c107da98ea87a5ffad4520445d60007", "patch": "@@ -0,0 +1,33 @@\n+/* Stubs for C++ specific Solaris system support.\n+   Copyright (C) 2011 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tree.h\"\n+#include \"tm.h\"\n+#include \"tm_p.h\"\n+\n+/* Stub implemenation of TARGET_CXX_DECL_MANGLING_CONTEXT for non-C++\n+   frontends.  */\n+tree\n+solaris_cxx_decl_mangling_context (const_tree decl ATTRIBUTE_UNUSED)\n+{\n+  return NULL_TREE;\n+}"}, {"sha": "b265f15ad39db170bc5f346d844d562fa41c24d8", "filename": "gcc/config/sol2.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Fconfig%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Fconfig%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.h?ref=5b880ea61c107da98ea87a5ffad4520445d60007", "patch": "@@ -217,6 +217,8 @@ along with GCC; see the file COPYING3.  If not see\n /* Allow macro expansion in #pragma pack.  */\n #define HANDLE_PRAGMA_PACK_WITH_EXPANSION\n \n+#define TARGET_CXX_DECL_MANGLING_CONTEXT solaris_cxx_decl_mangling_context\n+\n /* Solaris/x86 as and gas support unquoted section names.  */\n #define SECTION_NAME_FORMAT\t\"%s\"\n "}, {"sha": "f915622359336bd08dc8f54c817148c6fbda7870", "filename": "gcc/config/t-sol2", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Fconfig%2Ft-sol2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Fconfig%2Ft-sol2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-sol2?ref=5b880ea61c107da98ea87a5ffad4520445d60007", "patch": "@@ -20,14 +20,22 @@\n sol2-c.o: $(srcdir)/config/sol2-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   tree.h c-family/c-format.h $(C_PRAGMA_H) $(C_COMMON_H) $(CPPLIB_H) \\\n   intl.h $(TM_H) $(TM_P_H)\n-\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t  $(srcdir)/config/sol2-c.c\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+\n+# Solaris-specific C++ mangling.\n+sol2-cxx.o: $(srcdir)/config/sol2-cxx.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+  tree.h cp/cp-tree.h $(TM_H) $(TM_P_H)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+\n+# Corresponding stub routines.\n+sol2-stubs.o: $(srcdir)/config/sol2-stubs.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n+  tree.h $(TM_H) $(TM_P_H)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n \n # Solaris-specific attributes\n sol2.o: $(srcdir)/config/sol2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   tree.h output.h $(TM_H) $(TARGET_H) $(TM_P_H) $(GGC_H)\n-\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t  $(srcdir)/config/sol2.c\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n \n # This is required by gcc/ada/gcc-interface/Makefile.in.\n TARGET_LIBGCC2_CFLAGS = -fPIC"}, {"sha": "f0c0193a388d677cc5edef469f13c065ec54af53", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5b880ea61c107da98ea87a5ffad4520445d60007", "patch": "@@ -1,3 +1,11 @@\n+2011-08-18  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\t    Marc Glisse  <marc.glisse@normalesup.org>\n+\n+\tPR libstdc++-v3/1773\n+\t* mangle.c (decl_mangling_context): Call\n+\ttargetm.cxx.decl_mangling_context.\n+\t(write_unscoped_name): Use decl_mangling_context.\n+\n 2011-08-18  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/45625"}, {"sha": "53d4bc648ae613e324520e545e5da126d463d368", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=5b880ea61c107da98ea87a5ffad4520445d60007", "patch": "@@ -747,6 +747,11 @@ write_encoding (const tree decl)\n static tree\n decl_mangling_context (tree decl)\n {\n+  tree tcontext = targetm.cxx.decl_mangling_context (decl);\n+\n+  if (tcontext != NULL_TREE)\n+    return tcontext;\n+\n   if (TREE_CODE (decl) == TYPE_DECL\n       && LAMBDA_TYPE_P (TREE_TYPE (decl)))\n     {\n@@ -857,7 +862,7 @@ write_name (tree decl, const int ignore_local_scope)\n static void\n write_unscoped_name (const tree decl)\n {\n-  tree context = CP_DECL_CONTEXT (decl);\n+  tree context = decl_mangling_context (decl);\n \n   MANGLE_TRACE_TREE (\"unscoped-name\", decl);\n "}, {"sha": "0a2f120cd58e93e7b65653078b398c6fe747b0a3", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=5b880ea61c107da98ea87a5ffad4520445d60007", "patch": "@@ -10178,6 +10178,10 @@ unloaded. The default is to return false.\n @var{type} is a C++ class (i.e., RECORD_TYPE or UNION_TYPE) that has just been defined.  Use this hook to make adjustments to the class (eg, tweak visibility or perform any other required target modifications).\n @end deftypefn\n \n+@deftypefn {Target Hook} tree TARGET_CXX_DECL_MANGLING_CONTEXT (const_tree @var{decl})\n+Return target-specific mangling context of @var{decl} or @code{NULL_TREE}.\n+@end deftypefn\n+\n @node Named Address Spaces\n @section Adding support for named address spaces\n @cindex named address spaces"}, {"sha": "857f463217f11f1678a72267c05c8003832c6ba5", "filename": "gcc/target.def", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b880ea61c107da98ea87a5ffad4520445d60007/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=5b880ea61c107da98ea87a5ffad4520445d60007", "patch": "@@ -2451,6 +2451,12 @@ DEFHOOK\n  void, (tree type),\n  hook_void_tree)\n \n+DEFHOOK\n+(decl_mangling_context,\n+ \"Return target-specific mangling context of @var{decl} or @code{NULL_TREE}.\",\n+ tree, (const_tree decl),\n+ hook_tree_const_tree_null)\n+\n HOOK_VECTOR_END (cxx)\n \n /* Functions and data for emulated TLS support.  */"}]}