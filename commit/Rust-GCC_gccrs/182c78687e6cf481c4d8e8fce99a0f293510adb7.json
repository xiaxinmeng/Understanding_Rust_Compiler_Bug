{"sha": "182c78687e6cf481c4d8e8fce99a0f293510adb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgyYzc4Njg3ZTZjZjQ4MWM0ZDhlOGZjZTk5YTBmMjkzNTEwYWRiNw==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2016-04-17T05:22:33Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2016-04-17T05:22:33Z"}, "message": "Only finalize dot files that have been initialized\n\n2016-04-17  Tom de Vries  <tom@codesourcery.com>\n\n\tPR other/70185\n\t* tree-pass.h (class opt_pass): Remove graph_dump_initialized member.\n\t* dumpfile.h (struct dump_file_info): Add graph_dump_initialized field.\n\t* dumpfile.c (dump_files): Initialize graph_dump_initialized field.\n\t* passes.c (finish_optimization_passes): Only call\n\tfinish_graph_dump_file if dfi->graph_dump_initialized.\n\t(execute_function_dump, pass_init_dump_file): Use\n\tdfi->graph_dump_initialized instead of pass->graph_dump_initialized.\n\nFrom-SVN: r235074", "tree": {"sha": "97b74889cb3b1dc20672ef13dd4e303c8125a677", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97b74889cb3b1dc20672ef13dd4e303c8125a677"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/182c78687e6cf481c4d8e8fce99a0f293510adb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/182c78687e6cf481c4d8e8fce99a0f293510adb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/182c78687e6cf481c4d8e8fce99a0f293510adb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/182c78687e6cf481c4d8e8fce99a0f293510adb7/comments", "author": null, "committer": null, "parents": [{"sha": "c5e2d17df05391834d97d4ceaa1007af1d2fc038", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5e2d17df05391834d97d4ceaa1007af1d2fc038", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5e2d17df05391834d97d4ceaa1007af1d2fc038"}], "stats": {"total": 58, "additions": 36, "deletions": 22}, "files": [{"sha": "2a20ceee5ba6898941d58d30f30191d4bf5bb23c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182c78687e6cf481c4d8e8fce99a0f293510adb7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182c78687e6cf481c4d8e8fce99a0f293510adb7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=182c78687e6cf481c4d8e8fce99a0f293510adb7", "patch": "@@ -1,3 +1,14 @@\n+2016-04-17  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR other/70185\n+\t* tree-pass.h (class opt_pass): Remove graph_dump_initialized member.\n+\t* dumpfile.h (struct dump_file_info): Add graph_dump_initialized field.\n+\t* dumpfile.c (dump_files): Initialize graph_dump_initialized field.\n+\t* passes.c (finish_optimization_passes): Only call\n+\tfinish_graph_dump_file if dfi->graph_dump_initialized.\n+\t(execute_function_dump, pass_init_dump_file): Use\n+\tdfi->graph_dump_initialized instead of pass->graph_dump_initialized.\n+\n 2016-04-17  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/70256"}, {"sha": "74522a66fc0244ec3414d062accb24e62e4370d6", "filename": "gcc/dumpfile.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182c78687e6cf481c4d8e8fce99a0f293510adb7/gcc%2Fdumpfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182c78687e6cf481c4d8e8fce99a0f293510adb7/gcc%2Fdumpfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.c?ref=182c78687e6cf481c4d8e8fce99a0f293510adb7", "patch": "@@ -50,29 +50,29 @@ int dump_flags;\n    TREE_DUMP_INDEX enumeration in dumpfile.h.  */\n static struct dump_file_info dump_files[TDI_end] =\n {\n-  {NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 0, 0, 0, false},\n+  {NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 0, 0, 0, false, false},\n   {\".cgraph\", \"ipa-cgraph\", NULL, NULL, NULL, NULL, NULL, TDF_IPA,\n-   0, 0, 0, 0, 0, false},\n+   0, 0, 0, 0, 0, false, false},\n   {\".type-inheritance\", \"ipa-type-inheritance\", NULL, NULL, NULL, NULL, NULL, TDF_IPA,\n-   0, 0, 0, 0, 0, false},\n+   0, 0, 0, 0, 0, false, false},\n   {\".tu\", \"translation-unit\", NULL, NULL, NULL, NULL, NULL, TDF_TREE,\n-   0, 0, 0, 0, 1, false},\n+   0, 0, 0, 0, 1, false, false},\n   {\".class\", \"class-hierarchy\", NULL, NULL, NULL, NULL, NULL, TDF_TREE,\n-   0, 0, 0, 0, 2, false},\n+   0, 0, 0, 0, 2, false, false},\n   {\".original\", \"tree-original\", NULL, NULL, NULL, NULL, NULL, TDF_TREE,\n-   0, 0, 0, 0, 3, false},\n+   0, 0, 0, 0, 3, false, false},\n   {\".gimple\", \"tree-gimple\", NULL, NULL, NULL, NULL, NULL, TDF_TREE,\n-   0, 0, 0, 0, 4, false},\n+   0, 0, 0, 0, 4, false, false},\n   {\".nested\", \"tree-nested\", NULL, NULL, NULL, NULL, NULL, TDF_TREE,\n-   0, 0, 0, 0, 5, false},\n+   0, 0, 0, 0, 5, false, false},\n #define FIRST_AUTO_NUMBERED_DUMP 6\n \n   {NULL, \"tree-all\", NULL, NULL, NULL, NULL, NULL, TDF_TREE,\n-   0, 0, 0, 0, 0, false},\n+   0, 0, 0, 0, 0, false, false},\n   {NULL, \"rtl-all\", NULL, NULL, NULL, NULL, NULL, TDF_RTL,\n-   0, 0, 0, 0, 0, false},\n+   0, 0, 0, 0, 0, false, false},\n   {NULL, \"ipa-all\", NULL, NULL, NULL, NULL, NULL, TDF_IPA,\n-   0, 0, 0, 0, 0, false},\n+   0, 0, 0, 0, 0, false, false},\n };\n \n /* Define a name->number mapping for a dump flag value.  */"}, {"sha": "3f08b1624586049df8210baf00258ffb56f9e973", "filename": "gcc/dumpfile.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182c78687e6cf481c4d8e8fce99a0f293510adb7/gcc%2Fdumpfile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182c78687e6cf481c4d8e8fce99a0f293510adb7/gcc%2Fdumpfile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.h?ref=182c78687e6cf481c4d8e8fce99a0f293510adb7", "patch": "@@ -120,6 +120,10 @@ struct dump_file_info\n   bool owns_strings;            /* fields \"suffix\", \"swtch\", \"glob\" can be\n \t\t\t\t   const strings, or can be dynamically\n \t\t\t\t   allocated, needing free.  */\n+  bool graph_dump_initialized;  /* When a given dump file is being initialized,\n+\t\t\t\t   this flag is set to true if the corresponding\n+\t\t\t\t   TDF_graph dump file has also been\n+\t\t\t\t   initialized.  */\n };\n \n /* In dumpfile.c */"}, {"sha": "2b70846dd4012ff0f27d61dc06474414cca017fc", "filename": "gcc/passes.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182c78687e6cf481c4d8e8fce99a0f293510adb7/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182c78687e6cf481c4d8e8fce99a0f293510adb7/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=182c78687e6cf481c4d8e8fce99a0f293510adb7", "patch": "@@ -364,10 +364,9 @@ finish_optimization_passes (void)\n \n   /* Do whatever is necessary to finish printing the graphs.  */\n   for (i = TDI_end; (dfi = dumps->get_dump_file_info (i)) != NULL; ++i)\n-    if (dumps->dump_initialized_p (i)\n-\t&& (dfi->pflags & TDF_GRAPH) != 0\n-\t&& (name = dumps->get_dump_file_name (i)) != NULL)\n+    if (dfi->graph_dump_initialized)\n       {\n+\tname = dumps->get_dump_file_name (dfi);\n \tfinish_graph_dump_file (name);\n \tfree (name);\n       }\n@@ -1764,10 +1763,13 @@ execute_function_dump (function *fn, void *data)\n       if ((fn->curr_properties & PROP_cfg)\n \t  && (dump_flags & TDF_GRAPH))\n \t{\n-\t  if (!pass->graph_dump_initialized)\n+\t  gcc::dump_manager *dumps = g->get_dumps ();\n+\t  struct dump_file_info *dfi\n+\t    = dumps->get_dump_file_info (pass->static_pass_number);\n+\t  if (!dfi->graph_dump_initialized)\n \t    {\n \t      clean_graph_dump_file (dump_file_name);\n-\t      pass->graph_dump_initialized = true;\n+\t      dfi->graph_dump_initialized = true;\n \t    }\n \t  print_graph_cfg (dump_file_name, fn);\n \t}\n@@ -2111,7 +2113,9 @@ pass_init_dump_file (opt_pass *pass)\n \t  && cfun && (cfun->curr_properties & PROP_cfg))\n \t{\n \t  clean_graph_dump_file (dump_file_name);\n-\t  pass->graph_dump_initialized = true;\n+\t  struct dump_file_info *dfi\n+\t    = dumps->get_dump_file_info (pass->static_pass_number);\n+\t  dfi->graph_dump_initialized = true;\n \t}\n       timevar_pop (TV_DUMP);\n       return initializing_dump;"}, {"sha": "cd8c3399f9fe4e01c8002df2aee49cf66b29a40b", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182c78687e6cf481c4d8e8fce99a0f293510adb7/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182c78687e6cf481c4d8e8fce99a0f293510adb7/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=182c78687e6cf481c4d8e8fce99a0f293510adb7", "patch": "@@ -108,11 +108,6 @@ class opt_pass : public pass_data\n   /* Static pass number, used as a fragment of the dump file name.  */\n   int static_pass_number;\n \n-  /* When a given dump file is being initialized, this flag is set to\n-     true if the corresponding TDF_graph dump file has also been\n-     initialized.  */\n-  bool graph_dump_initialized;\n-\n protected:\n   gcc::context *m_ctxt;\n };"}]}