{"sha": "0207efa210a8cf5c2777b9ebaf3cd0d34295afc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDIwN2VmYTIxMGE4Y2Y1YzI3NzdiOWViYWYzY2QwZDM0Mjk1YWZjNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-21T23:08:53Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-21T23:08:53Z"}, "message": "(calls_function_1): A language-specific code must be assumed to call a function and also call alloca.\n\n(calls_function_1): A language-specific code must be assumed to call a\nfunction and also call alloca.  Check for inlined functions that call\nalloca.\n\nFrom-SVN: r7133", "tree": {"sha": "89104da2a7076ab222a77ad3524b8c422a40a8ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89104da2a7076ab222a77ad3524b8c422a40a8ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0207efa210a8cf5c2777b9ebaf3cd0d34295afc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0207efa210a8cf5c2777b9ebaf3cd0d34295afc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0207efa210a8cf5c2777b9ebaf3cd0d34295afc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0207efa210a8cf5c2777b9ebaf3cd0d34295afc5/comments", "author": null, "committer": null, "parents": [{"sha": "56f58d3a43c2adf16c117bfcaf94e11324b09184", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56f58d3a43c2adf16c117bfcaf94e11324b09184", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56f58d3a43c2adf16c117bfcaf94e11324b09184"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "2622b5b7f2aba3fc21c7ef527d8aa5c765e9f196", "filename": "gcc/calls.c", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0207efa210a8cf5c2777b9ebaf3cd0d34295afc5/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0207efa210a8cf5c2777b9ebaf3cd0d34295afc5/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=0207efa210a8cf5c2777b9ebaf3cd0d34295afc5", "patch": "@@ -157,27 +157,37 @@ calls_function_1 (exp, which)\n      int which;\n {\n   register int i;\n-  int type = TREE_CODE_CLASS (TREE_CODE (exp));\n-  int length = tree_code_length[(int) TREE_CODE (exp)];\n+  enum tree_code code = TREE_CODE (exp);\n+  int type = TREE_CODE_CLASS (code);\n+  int length = tree_code_length[(int) code];\n \n-  /* Only expressions and references can contain calls.  */\n+  /* If this code is langauge-specific, we don't know what it will do.  */\n+  if ((int) code >= NUM_TREE_CODES)\n+    return 1;\n \n+  /* Only expressions and references can contain calls.  */\n   if (type != 'e' && type != '<' && type != '1' && type != '2' && type != 'r'\n       && type != 'b')\n     return 0;\n \n-  switch (TREE_CODE (exp))\n+  switch (code)\n     {\n     case CALL_EXPR:\n       if (which == 0)\n \treturn 1;\n       else if (TREE_CODE (TREE_OPERAND (exp, 0)) == ADDR_EXPR\n \t       && (TREE_CODE (TREE_OPERAND (TREE_OPERAND (exp, 0), 0))\n-\t\t   == FUNCTION_DECL)\n-\t       && DECL_BUILT_IN (TREE_OPERAND (TREE_OPERAND (exp, 0), 0))\n-\t       && (DECL_FUNCTION_CODE (TREE_OPERAND (TREE_OPERAND (exp, 0), 0))\n-\t\t   == BUILT_IN_ALLOCA))\n-\treturn 1;\n+\t\t   == FUNCTION_DECL))\n+\t{\n+\t  tree fndecl = TREE_OPERAND (TREE_OPERAND (exp, 0), 0);\n+\n+\t  if ((DECL_BUILT_IN (fndecl)\n+\t       && DECL_FUNCTION_CODE (fndecl) == BUILT_IN_ALLOCA)\n+\t      || (DECL_SAVED_INSNS (fndecl)\n+\t\t  && (FUNCTION_FLAGS (DECL_SAVED_INSNS (fndecl))\n+\t\t      & FUNCTION_FLAGS_CALLS_ALLOCA)))\n+\t    return 1;\n+\t}\n \n       /* Third operand is RTL.  */\n       length = 2;"}]}