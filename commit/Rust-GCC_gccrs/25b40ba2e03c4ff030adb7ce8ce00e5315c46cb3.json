{"sha": "25b40ba2e03c4ff030adb7ce8ce00e5315c46cb3", "node_id": "C_kwDOANBUbNoAKDI1YjQwYmEyZTAzYzRmZjAzMGFkYjdjZThjZTAwZTUzMTVjNDZjYjM", "commit": {"author": {"name": "Owen Avery", "email": "powerboat9.gamer@gmail.com", "date": "2023-06-05T14:41:43Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@embecosm.com", "date": "2023-06-07T08:31:28Z"}, "message": "Add error message when derive macro is invoked\n\ngcc/rust/ChangeLog:\n\n\t* expand/rust-macro-builtins.cc: Fix comments.\n\t(MacroBuiltin::proc_macro_builtin): Add error message.\n\t* expand/rust-macro-builtins.h: Fix comments.\n\ngcc/testsuite/ChangeLog:\n\n\t* rust/compile/derive_macro8.rs: New test.\n\nSigned-off-by: Owen Avery <powerboat9.gamer@gmail.com>", "tree": {"sha": "ba48eaf0e4682b7958d74b437023fbf1a866d69d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba48eaf0e4682b7958d74b437023fbf1a866d69d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25b40ba2e03c4ff030adb7ce8ce00e5315c46cb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25b40ba2e03c4ff030adb7ce8ce00e5315c46cb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25b40ba2e03c4ff030adb7ce8ce00e5315c46cb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25b40ba2e03c4ff030adb7ce8ce00e5315c46cb3/comments", "author": {"login": "powerboat9", "id": 7397652, "node_id": "MDQ6VXNlcjczOTc2NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/7397652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/powerboat9", "html_url": "https://github.com/powerboat9", "followers_url": "https://api.github.com/users/powerboat9/followers", "following_url": "https://api.github.com/users/powerboat9/following{/other_user}", "gists_url": "https://api.github.com/users/powerboat9/gists{/gist_id}", "starred_url": "https://api.github.com/users/powerboat9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/powerboat9/subscriptions", "organizations_url": "https://api.github.com/users/powerboat9/orgs", "repos_url": "https://api.github.com/users/powerboat9/repos", "events_url": "https://api.github.com/users/powerboat9/events{/privacy}", "received_events_url": "https://api.github.com/users/powerboat9/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12d79b13fc314b349a727b2ab15d4d06270f3496", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12d79b13fc314b349a727b2ab15d4d06270f3496", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12d79b13fc314b349a727b2ab15d4d06270f3496"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "59a1f19ba69256882c7440644f3e4edc53e599f5", "filename": "gcc/rust/expand/rust-macro-builtins.cc", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b40ba2e03c4ff030adb7ce8ce00e5315c46cb3/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b40ba2e03c4ff030adb7ce8ce00e5315c46cb3/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc?ref=25b40ba2e03c4ff030adb7ce8ce00e5315c46cb3", "patch": "@@ -106,7 +106,7 @@ std::unordered_map<\n     {\"global_allocator\", MacroBuiltin::sorry},\n     {\"cfg_accessible\", MacroBuiltin::sorry},\n     /* Derive builtins do not need a real transcriber, but still need one. It\n-       will however never be called since builtin derive macros get expanded\n+       should however never be called since builtin derive macros get expanded\n        differently, and benefit from knowing on what kind of items they are\n        applied (struct, enums, unions) rather than receiving a list of tokens\n        like regular builtin macros */\n@@ -949,9 +949,12 @@ MacroBuiltin::sorry (Location invoc_locus, AST::MacroInvocData &invoc)\n }\n \n AST::Fragment\n-MacroBuiltin::proc_macro_builtin (Location, AST::MacroInvocData &)\n+MacroBuiltin::proc_macro_builtin (Location invoc_locus,\n+\t\t\t\t  AST::MacroInvocData &invoc)\n {\n-  // nothing to do!\n+  rust_error_at (invoc_locus, \"cannot invoke derive macro: %qs\",\n+\t\t invoc.get_path ().as_string ().c_str ());\n+\n   return AST::Fragment::create_error ();\n }\n "}, {"sha": "896ccf9da630c8d57c6fecbbe02c1dd0478abb5b", "filename": "gcc/rust/expand/rust-macro-builtins.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b40ba2e03c4ff030adb7ce8ce00e5315c46cb3/gcc%2Frust%2Fexpand%2Frust-macro-builtins.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b40ba2e03c4ff030adb7ce8ce00e5315c46cb3/gcc%2Frust%2Fexpand%2Frust-macro-builtins.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-builtins.h?ref=25b40ba2e03c4ff030adb7ce8ce00e5315c46cb3", "patch": "@@ -160,8 +160,8 @@ class MacroBuiltin\n \n   static AST::Fragment sorry (Location invoc_locus, AST::MacroInvocData &invoc);\n \n-  /* Builtin procedural macros do not work directly on tokens, but still need an\n-   * empty builtin transcriber to be considered proper builtin macros */\n+  /* Builtin procedural macros do not work directly on tokens, but still need a\n+   * builtin transcriber to be considered proper builtin macros */\n   static AST::Fragment proc_macro_builtin (Location, AST::MacroInvocData &);\n };\n } // namespace Rust"}, {"sha": "ba7e710363149827fd50d04e2bb0ced6b5815437", "filename": "gcc/testsuite/rust/compile/derive_macro8.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b40ba2e03c4ff030adb7ce8ce00e5315c46cb3/gcc%2Ftestsuite%2Frust%2Fcompile%2Fderive_macro8.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b40ba2e03c4ff030adb7ce8ce00e5315c46cb3/gcc%2Ftestsuite%2Frust%2Fcompile%2Fderive_macro8.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fderive_macro8.rs?ref=25b40ba2e03c4ff030adb7ce8ce00e5315c46cb3", "patch": "@@ -0,0 +1,9 @@\n+#![feature(rustc_attrs)]\n+#![feature(decl_macro)]\n+\n+#[rustc_builtin_macro]\n+pub macro Copy($i:item) { /* builtin */ }\n+\n+pub fn foo() {\n+    Copy!(); // { dg-error \"cannot invoke derive macro\" }\n+}"}]}