{"sha": "56592e03b487f3c20ef54bbd97766d207f77b31d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY1OTJlMDNiNDg3ZjNjMjBlZjU0YmJkOTc3NjZkMjA3Zjc3YjMxZA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2010-02-10T20:52:31Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2010-02-10T20:52:31Z"}, "message": "ira-conflicts.c (add_insn_allocno_copies): Use find_reg_note instead of loop.\n\n2010-02-10  Vladimir Makarov  <vmakarov@redhat.com>\n\n\t* ira-conflicts.c (add_insn_allocno_copies): Use find_reg_note\n\tinstead of loop.\n\nFrom-SVN: r156670", "tree": {"sha": "94dd7b04ab391024feb0e5653bf55cd4be433ce4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94dd7b04ab391024feb0e5653bf55cd4be433ce4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56592e03b487f3c20ef54bbd97766d207f77b31d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56592e03b487f3c20ef54bbd97766d207f77b31d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56592e03b487f3c20ef54bbd97766d207f77b31d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56592e03b487f3c20ef54bbd97766d207f77b31d/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ab65a4c7bdf10e5465cbf47faae88af258dc2baa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab65a4c7bdf10e5465cbf47faae88af258dc2baa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab65a4c7bdf10e5465cbf47faae88af258dc2baa"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "0a9a4d764c956e8fe754b30511160b07f81bdee6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56592e03b487f3c20ef54bbd97766d207f77b31d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56592e03b487f3c20ef54bbd97766d207f77b31d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56592e03b487f3c20ef54bbd97766d207f77b31d", "patch": "@@ -1,3 +1,8 @@\n+2010-02-10  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\t* ira-conflicts.c (add_insn_allocno_copies): Use find_reg_note\n+\tinstead of loop.\n+\n 2010-02-10  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/43017"}, {"sha": "cbb3e17ebc0f2ba0395ec769ae03dbaf66775bd5", "filename": "gcc/ira-conflicts.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56592e03b487f3c20ef54bbd97766d207f77b31d/gcc%2Fira-conflicts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56592e03b487f3c20ef54bbd97766d207f77b31d/gcc%2Fira-conflicts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-conflicts.c?ref=56592e03b487f3c20ef54bbd97766d207f77b31d", "patch": "@@ -447,7 +447,7 @@ process_reg_shuffles (rtx reg, int op_num, int freq, bool *bound_p)\n static void\n add_insn_allocno_copies (rtx insn)\n {\n-  rtx set, operand, dup, link;\n+  rtx set, operand, dup;\n   const char *str;\n   bool commut_p, bound_p[MAX_RECOG_OPERANDS];\n   int i, j, n, freq;\n@@ -466,10 +466,9 @@ add_insn_allocno_copies (rtx insn)\n       process_regs_for_copy (SET_DEST (set), SET_SRC (set), false, insn, freq);\n       return;\n     }\n-  for (link = REG_NOTES (insn); link; link = XEXP (link, 1))\n-    if (REG_NOTE_KIND (link) == REG_DEAD)\n-      break;\n-  if (! link)\n+  /* Fast check of possibility of constraint or shuffle copies.  If\n+     there are no dead registers, there will be no such copies.  */\n+  if (! find_reg_note (insn, REG_DEAD, NULL_RTX))\n     return;\n   extract_insn (insn);\n   for (i = 0; i < recog_data.n_operands; i++)"}]}