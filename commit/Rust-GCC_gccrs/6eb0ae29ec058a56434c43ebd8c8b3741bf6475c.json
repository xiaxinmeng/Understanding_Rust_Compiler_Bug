{"sha": "6eb0ae29ec058a56434c43ebd8c8b3741bf6475c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmViMGFlMjllYzA1OGE1NjQzNGM0M2ViZDhjOGIzNzQxYmY2NDc1Yw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2014-09-26T01:49:40Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-09-26T01:49:40Z"}, "message": "ipa-prop.c (ipa_intraprocedural_devirtualization): Remove.\n\n\n\t* ipa-prop.c (ipa_intraprocedural_devirtualization): Remove.\n\t* ipa-prop.h (ipa_intraprocedural_devirtualization): Remove.\n\t* tree-ssa-prop.c (eliminate_dom_walker::before_dom_children):\n\tRemove.\n\nFrom-SVN: r215628", "tree": {"sha": "c89e2e926d323591a5f20d5347f51459e4809ae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c89e2e926d323591a5f20d5347f51459e4809ae2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6eb0ae29ec058a56434c43ebd8c8b3741bf6475c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eb0ae29ec058a56434c43ebd8c8b3741bf6475c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6eb0ae29ec058a56434c43ebd8c8b3741bf6475c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eb0ae29ec058a56434c43ebd8c8b3741bf6475c/comments", "author": null, "committer": null, "parents": [{"sha": "9f442ef4a094e8d284e28ca6c9b9f57763289b07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f442ef4a094e8d284e28ca6c9b9f57763289b07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f442ef4a094e8d284e28ca6c9b9f57763289b07"}], "stats": {"total": 40, "additions": 7, "deletions": 33}, "files": [{"sha": "e19ba1f48352a0c5ffe64e2e4bd1f95af63f8bf5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb0ae29ec058a56434c43ebd8c8b3741bf6475c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb0ae29ec058a56434c43ebd8c8b3741bf6475c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6eb0ae29ec058a56434c43ebd8c8b3741bf6475c", "patch": "@@ -1,3 +1,10 @@\n+2014-09-25  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-prop.c (ipa_intraprocedural_devirtualization): Remove.\n+\t* ipa-prop.h (ipa_intraprocedural_devirtualization): Remove.\n+\t* tree-ssa-prop.c (eliminate_dom_walker::before_dom_children):\n+\tRemove.\n+\n 2014-09-25  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-utils.h (subbinfo_with_vtable_at_offset, type_all_derivations_known_p,"}, {"sha": "34d4c0207d1a36e588eeb161c999fd75706ee665", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb0ae29ec058a56434c43ebd8c8b3741bf6475c/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb0ae29ec058a56434c43ebd8c8b3741bf6475c/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=6eb0ae29ec058a56434c43ebd8c8b3741bf6475c", "patch": "@@ -2566,36 +2566,6 @@ ipa_analyze_node (struct cgraph_node *node)\n   pop_cfun ();\n }\n \n-/* Given a statement CALL which must be a GIMPLE_CALL calling an OBJ_TYPE_REF\n-   attempt a type-based devirtualization.  If successful, return the\n-   target function declaration, otherwise return NULL.  */\n-\n-tree\n-ipa_intraprocedural_devirtualization (gimple call)\n-{\n-  tree binfo, token, fndecl;\n-  struct ipa_jump_func jfunc;\n-  tree otr = gimple_call_fn (call);\n-\n-  jfunc.type = IPA_JF_UNKNOWN;\n-  compute_known_type_jump_func (OBJ_TYPE_REF_OBJECT (otr), &jfunc,\n-\t\t\t\tcall, obj_type_ref_class (otr));\n-  if (jfunc.type != IPA_JF_KNOWN_TYPE)\n-    return NULL_TREE;\n-  binfo = ipa_binfo_from_known_type_jfunc (&jfunc);\n-  if (!binfo)\n-    return NULL_TREE;\n-  token = OBJ_TYPE_REF_TOKEN (otr);\n-  fndecl = gimple_get_virt_method_for_binfo (tree_to_uhwi (token),\n-\t\t\t\t\t     binfo);\n-#ifdef ENABLE_CHECKING\n-  if (fndecl)\n-    gcc_assert (possible_polymorphic_call_target_p\n-\t\t  (otr, call, cgraph_node::get (fndecl)));\n-#endif\n-  return fndecl;\n-}\n-\n /* Update the jump function DST when the call graph edge corresponding to SRC is\n    is being inlined, knowing that DST is of type ancestor and src of known\n    type.  */"}, {"sha": "27a1697d082e21f3379ff8a8e1169f2997b87c89", "filename": "gcc/ipa-prop.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb0ae29ec058a56434c43ebd8c8b3741bf6475c/gcc%2Fipa-prop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb0ae29ec058a56434c43ebd8c8b3741bf6475c/gcc%2Fipa-prop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.h?ref=6eb0ae29ec058a56434c43ebd8c8b3741bf6475c", "patch": "@@ -587,7 +587,6 @@ tree ipa_get_indirect_edge_target (struct cgraph_edge *ie,\n \t\t\t\t   vec<ipa_agg_jump_function_p> );\n struct cgraph_edge *ipa_make_edge_direct_to_target (struct cgraph_edge *, tree);\n tree ipa_binfo_from_known_type_jfunc (struct ipa_jump_func *);\n-tree ipa_intraprocedural_devirtualization (gimple);\n tree ipa_impossible_devirt_target (struct cgraph_edge *, tree);\n \n /* Functions related to both.  */"}, {"sha": "cbbd422043329080ff12aafda0f74b15cac19e26", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb0ae29ec058a56434c43ebd8c8b3741bf6475c/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb0ae29ec058a56434c43ebd8c8b3741bf6475c/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=6eb0ae29ec058a56434c43ebd8c8b3741bf6475c", "patch": "@@ -4314,8 +4314,6 @@ eliminate_dom_walker::before_dom_children (basic_block b)\n \t\t  gimple_call_set_fndecl (stmt, fn);\n \t\t  gimple_set_modified (stmt, true);\n \t\t}\n-\t      else\n-\t        gcc_assert (!ipa_intraprocedural_devirtualization (stmt));\n \t    }\n \t}\n "}]}