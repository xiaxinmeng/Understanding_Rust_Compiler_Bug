{"sha": "4923a23068350b1db115d081b89800728f6241b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkyM2EyMzA2ODM1MGIxZGIxMTVkMDgxYjg5ODAwNzI4ZjYyNDFiMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-09-23T19:11:50Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-09-23T19:11:50Z"}, "message": "tm.texi (POINTERS_EXTEND_UNSIGNED): Document extensions to word_mode as well as Pmode.\n\ngcc/\n\t* doc/tm.texi (POINTERS_EXTEND_UNSIGNED): Document extensions to\n\tword_mode as well as Pmode.\n\nFrom-SVN: r128698", "tree": {"sha": "ead7cbfac362b7eca8e308338359cf81337d2120", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ead7cbfac362b7eca8e308338359cf81337d2120"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4923a23068350b1db115d081b89800728f6241b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4923a23068350b1db115d081b89800728f6241b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4923a23068350b1db115d081b89800728f6241b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4923a23068350b1db115d081b89800728f6241b2/comments", "author": null, "committer": null, "parents": [{"sha": "1e1c1dec7aa734ea5fe52ca756df7b222c89320f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e1c1dec7aa734ea5fe52ca756df7b222c89320f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e1c1dec7aa734ea5fe52ca756df7b222c89320f"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "7dcbf7238b2272da51df95dae19a978e27f340ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4923a23068350b1db115d081b89800728f6241b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4923a23068350b1db115d081b89800728f6241b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4923a23068350b1db115d081b89800728f6241b2", "patch": "@@ -1,3 +1,8 @@\n+2007-09-23  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* doc/tm.texi (POINTERS_EXTEND_UNSIGNED): Document extensions to\n+\tword_mode as well as Pmode.\n+\n 2007-09-23  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* function.c (assign_parm_setup_block): Explicitly convert BLKmode"}, {"sha": "34668f2c2ac2f556a6bd8ff40a3f781f9eff1065", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4923a23068350b1db115d081b89800728f6241b2/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4923a23068350b1db115d081b89800728f6241b2/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=4923a23068350b1db115d081b89800728f6241b2", "patch": "@@ -1004,14 +1004,15 @@ a value the default is @code{BITS_PER_WORD}.\n @end defmac\n \n @defmac POINTERS_EXTEND_UNSIGNED\n-A C expression whose value is greater than zero if pointers that need to be\n-extended from being @code{POINTER_SIZE} bits wide to @code{Pmode} are to\n-be zero-extended and zero if they are to be sign-extended.  If the value\n-is less then zero then there must be an \"ptr_extend\" instruction that\n-extends a pointer from @code{POINTER_SIZE} to @code{Pmode}.\n-\n-You need not define this macro if the @code{POINTER_SIZE} is equal\n-to the width of @code{Pmode}.\n+A C expression that determines how pointers should be extended from\n+@code{ptr_mode} to either @code{Pmode} or @code{word_mode}.  It is\n+greater than zero if pointers should be zero-extended, zero if they\n+should be sign-extended, and negative if some other sort of conversion\n+is needed.  In the last case, the extension is done by the target's\n+@code{ptr_extend} instruction.\n+\n+You need not define this macro if the @code{ptr_mode}, @code{Pmode}\n+and @code{word_mode} are all the same width.\n @end defmac\n \n @defmac PROMOTE_MODE (@var{m}, @var{unsignedp}, @var{type})"}]}