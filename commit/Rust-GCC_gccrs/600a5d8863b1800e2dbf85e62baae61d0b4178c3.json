{"sha": "600a5d8863b1800e2dbf85e62baae61d0b4178c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAwYTVkODg2M2IxODAwZTJkYmY4NWU2MmJhYWU2MWQwYjQxNzhjMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-03T01:44:23Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-03T01:44:23Z"}, "message": "(gen_rtx, case REG): Don't use frame_pointer_rtx or arg_pointer_rtx if\nreload is in progress.\n\nFrom-SVN: r1758", "tree": {"sha": "70e1465f49809808aa2b16e84219bde54be78a88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70e1465f49809808aa2b16e84219bde54be78a88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/600a5d8863b1800e2dbf85e62baae61d0b4178c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/600a5d8863b1800e2dbf85e62baae61d0b4178c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/600a5d8863b1800e2dbf85e62baae61d0b4178c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/600a5d8863b1800e2dbf85e62baae61d0b4178c3/comments", "author": null, "committer": null, "parents": [{"sha": "0782cd717f3e48c2f3a5c84a6ad7a7bc6beef1f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0782cd717f3e48c2f3a5c84a6ad7a7bc6beef1f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0782cd717f3e48c2f3a5c84a6ad7a7bc6beef1f5"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "a540ef7a3e663bfe710b682eae4314b4ea66776c", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/600a5d8863b1800e2dbf85e62baae61d0b4178c3/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/600a5d8863b1800e2dbf85e62baae61d0b4178c3/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=600a5d8863b1800e2dbf85e62baae61d0b4178c3", "patch": "@@ -271,15 +271,21 @@ gen_rtx (va_alist)\n \t If we have eliminated the frame pointer or arg pointer, we will\n \t be using it as a normal register, for example as a spill register.\n \t In such cases, we might be accessing it in a mode that is not\n-\t Pmode and therefore cannot use the pre-allocated rtx.  */\n+\t Pmode and therefore cannot use the pre-allocated rtx.\n \n-      if (frame_pointer_rtx && regno == FRAME_POINTER_REGNUM && mode == Pmode)\n+\t Also don't do this when we are making new REGs in reload,\n+\t since we don't want to get confused with the real pointers.  */\n+\n+      if (frame_pointer_rtx && regno == FRAME_POINTER_REGNUM && mode == Pmode\n+\t  && ! reload_in_progress)\n \treturn frame_pointer_rtx;\n #if FRAME_POINTER_REGNUM != ARG_POINTER_REGNUM\n-      if (arg_pointer_rtx && regno == ARG_POINTER_REGNUM && mode == Pmode)\n+      if (arg_pointer_rtx && regno == ARG_POINTER_REGNUM && mode == Pmode\n+\t  && ! reload_in_progress)\n \treturn arg_pointer_rtx;\n #endif\n-      if (stack_pointer_rtx && regno == STACK_POINTER_REGNUM && mode == Pmode)\n+      if (stack_pointer_rtx && regno == STACK_POINTER_REGNUM && mode == Pmode\n+\t  && ! reload_in_progress)\n \treturn stack_pointer_rtx;\n       else\n \t{"}]}