{"sha": "8f78ecdbe08233a96bad6d268a6bd06c754949b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY3OGVjZGJlMDgyMzNhOTZiYWQ2ZDI2OGE2YmQwNmM3NTQ5NDliMA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2014-04-23T10:29:47Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-04-23T10:29:47Z"}, "message": "Revert\n\t2014-04-22  Richard Henderson  <rth@redhat.com>\n\n\t* gcc-interface/Makefile.in: Support aarch64-linux.\n\n\t2014-04-22  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* fe.h (Compiler_Abort): Replace Fat_Pointer with String_Pointer.\n\t(Error_Msg_N): Likewise.\n\t(Error_Msg_NE): Likewise.\n\t(Get_External_Name_With_Suffix): Likewise.\n\t* types.h (Fat_Pointer): Delete.\n\t(String_Pointer): New type.\n\t(DECLARE_STRING_POINTER): New macro.\n\t* gcc-interface/decl.c (create_concat_name): Adjust.\n\t* gcc-interface/trans.c (post_error): Likewise.\n\t(post_error_ne): Likewise.\n\t* gcc-interface/misc.c (internal_error_function): Likewise.\n\nFrom-SVN: r209684", "tree": {"sha": "5e4ae646ce6b47a1c937834a7d57b54af38e57e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e4ae646ce6b47a1c937834a7d57b54af38e57e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f78ecdbe08233a96bad6d268a6bd06c754949b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f78ecdbe08233a96bad6d268a6bd06c754949b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f78ecdbe08233a96bad6d268a6bd06c754949b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f78ecdbe08233a96bad6d268a6bd06c754949b0/comments", "author": null, "committer": null, "parents": [{"sha": "eab264af0c65e7830f140d12008527244a7236a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eab264af0c65e7830f140d12008527244a7236a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eab264af0c65e7830f140d12008527244a7236a8"}], "stats": {"total": 124, "additions": 51, "deletions": 73}, "files": [{"sha": "6dc0c11ed3fddbeb991162a7ece0a07cc11e08b1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f78ecdbe08233a96bad6d268a6bd06c754949b0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f78ecdbe08233a96bad6d268a6bd06c754949b0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8f78ecdbe08233a96bad6d268a6bd06c754949b0", "patch": "@@ -1,3 +1,24 @@\n+2014-04-23  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tRevert\n+\t2014-04-22  Richard Henderson  <rth@redhat.com>\n+\n+\t* gcc-interface/Makefile.in: Support aarch64-linux.\n+\n+\t2014-04-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* fe.h (Compiler_Abort): Replace Fat_Pointer with String_Pointer.\n+\t(Error_Msg_N): Likewise.\n+\t(Error_Msg_NE): Likewise.\n+\t(Get_External_Name_With_Suffix): Likewise.\n+\t* types.h (Fat_Pointer): Delete.\n+\t(String_Pointer): New type.\n+\t(DECLARE_STRING_POINTER): New macro.\n+\t* gcc-interface/decl.c (create_concat_name): Adjust.\n+\t* gcc-interface/trans.c (post_error): Likewise.\n+\t(post_error_ne): Likewise.\n+\t* gcc-interface/misc.c (internal_error_function): Likewise.\n+\n 2014-04-22  Richard Henderson  <rth@redhat.com>\n \n \t* gcc-interface/Makefile.in: Support aarch64-linux."}, {"sha": "d9fe48b5baa291b5dc70b4d57651a67d379b893b", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f78ecdbe08233a96bad6d268a6bd06c754949b0/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f78ecdbe08233a96bad6d268a6bd06c754949b0/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=8f78ecdbe08233a96bad6d268a6bd06c754949b0", "patch": "@@ -39,7 +39,7 @@ extern \"C\" {\n /* comperr:  */\n \n #define Compiler_Abort comperr__compiler_abort\n-extern int Compiler_Abort (String_Pointer, int, String_Pointer) ATTRIBUTE_NORETURN;\n+extern int Compiler_Abort (Fat_Pointer, int, Fat_Pointer) ATTRIBUTE_NORETURN;\n \n /* csets: */\n \n@@ -90,8 +90,8 @@ extern Node_Id Get_Attribute_Definition_Clause (Entity_Id, char);\n #define Error_Msg_NE              errout__error_msg_ne\n #define Set_Identifier_Casing     errout__set_identifier_casing\n \n-extern void Error_Msg_N\t          (String_Pointer, Node_Id);\n-extern void Error_Msg_NE          (String_Pointer, Node_Id, Entity_Id);\n+extern void Error_Msg_N\t          (Fat_Pointer, Node_Id);\n+extern void Error_Msg_NE          (Fat_Pointer, Node_Id, Entity_Id);\n extern void Set_Identifier_Casing (Char *, const Char *);\n \n /* err_vars: */\n@@ -151,7 +151,7 @@ extern void Setup_Asm_Outputs\t\t(Node_Id);\n \n extern void Get_Encoded_Name\t\t\t(Entity_Id);\n extern void Get_External_Name\t\t\t(Entity_Id, Boolean);\n-extern void Get_External_Name_With_Suffix\t(Entity_Id, String_Pointer);\n+extern void Get_External_Name_With_Suffix\t(Entity_Id, Fat_Pointer);\n \n /* exp_util: */\n "}, {"sha": "9af1967ce9f4b775d5056bb9cd9c769b08fe77c9", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f78ecdbe08233a96bad6d268a6bd06c754949b0/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f78ecdbe08233a96bad6d268a6bd06c754949b0/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=8f78ecdbe08233a96bad6d268a6bd06c754949b0", "patch": "@@ -2188,44 +2188,6 @@ ifeq ($(strip $(filter-out alpha% linux%,$(target_cpu) $(target_os))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n-# AArch64 Linux\n-ifeq ($(strip $(filter-out aarch64% linux%,$(arch) $(osys))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-exetim.adb<a-exetim-posix.adb \\\n-  a-exetim.ads<a-exetim-default.ads \\\n-  a-intnam.ads<a-intnam-linux.ads \\\n-  a-synbar.adb<a-synbar-posix.adb \\\n-  a-synbar.ads<a-synbar-posix.ads \\\n-  s-inmaop.adb<s-inmaop-posix.adb \\\n-  s-intman.adb<s-intman-posix.adb \\\n-  s-linux.ads<s-linux.ads \\\n-  s-mudido.adb<s-mudido-affinity.adb \\\n-  s-osinte.ads<s-osinte-linux.ads \\\n-  s-osinte.adb<s-osinte-posix.adb \\\n-  s-osprim.adb<s-osprim-posix.adb \\\n-  s-taprop.adb<s-taprop-linux.adb \\\n-  s-tasinf.ads<s-tasinf-linux.ads \\\n-  s-tasinf.adb<s-tasinf-linux.adb \\\n-  s-tpopsp.adb<s-tpopsp-tls.adb \\\n-  s-taspri.ads<s-taspri-posix.ads \\\n-  g-sercom.adb<g-sercom-linux.adb \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n-  system.ads<system-linux-x86_64.ads\n-  ## ^^ Note the above is a pretty-close placeholder.\n-\n-  TOOLS_TARGET_PAIRS =  \\\n-    mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n-    indepsw.adb<indepsw-gnu.adb\n-\n-  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n-  EH_MECHANISM=-gcc\n-  THREADSLIB=-lpthread -lrt\n-  GNATLIB_SHARED=gnatlib-shared-dual\n-  GMEM_LIB = gmemlib\n-  LIBRARY_VERSION := $(LIB_VERSION)\n-endif\n-\n # x86-64 Linux\n ifeq ($(strip $(filter-out %x86_64 linux%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\"}, {"sha": "7c3f7e5ea7bd472312ae3bff38d6825446e22bd9", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f78ecdbe08233a96bad6d268a6bd06c754949b0/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f78ecdbe08233a96bad6d268a6bd06c754949b0/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=8f78ecdbe08233a96bad6d268a6bd06c754949b0", "patch": "@@ -8861,10 +8861,8 @@ create_concat_name (Entity_Id gnat_entity, const char *suffix)\n   if (suffix)\n     {\n       String_Template temp = {1, (int) strlen (suffix)};\n-      DECLARE_STRING_POINTER (sp);\n-      sp.Bounds = &temp;\n-      sp.Array = suffix;\n-      Get_External_Name_With_Suffix (gnat_entity, sp);\n+      Fat_Pointer fp = {suffix, &temp};\n+      Get_External_Name_With_Suffix (gnat_entity, fp);\n     }\n   else\n     Get_External_Name (gnat_entity, 0);"}, {"sha": "a5f2881d697bbc7fcb206f8e38a408347dc52009", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f78ecdbe08233a96bad6d268a6bd06c754949b0/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f78ecdbe08233a96bad6d268a6bd06c754949b0/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=8f78ecdbe08233a96bad6d268a6bd06c754949b0", "patch": "@@ -283,8 +283,8 @@ internal_error_function (diagnostic_context *context,\n   text_info tinfo;\n   char *buffer, *p, *loc;\n   String_Template temp, temp_loc;\n-  DECLARE_STRING_POINTER (sp, sp_loc);\n-  expanded_location xloc;\n+  Fat_Pointer fp, fp_loc;\n+  expanded_location s;\n \n   /* Warn if plugins present.  */\n   warn_if_plugins ();\n@@ -311,21 +311,21 @@ internal_error_function (diagnostic_context *context,\n \n   temp.Low_Bound = 1;\n   temp.High_Bound = p - buffer;\n-  sp.Bounds = &temp;\n-  sp.Array = buffer;\n+  fp.Bounds = &temp;\n+  fp.Array = buffer;\n \n-  xloc = expand_location (input_location);\n-  if (context->show_column && xloc.column != 0)\n-    asprintf (&loc, \"%s:%d:%d\", xloc.file, xloc.line, xloc.column);\n+  s = expand_location (input_location);\n+  if (context->show_column && s.column != 0)\n+    asprintf (&loc, \"%s:%d:%d\", s.file, s.line, s.column);\n   else\n-    asprintf (&loc, \"%s:%d\", xloc.file, xloc.line);\n+    asprintf (&loc, \"%s:%d\", s.file, s.line);\n   temp_loc.Low_Bound = 1;\n   temp_loc.High_Bound = strlen (loc);\n-  sp_loc.Bounds = &temp_loc;\n-  sp_loc.Array = loc;\n+  fp_loc.Bounds = &temp_loc;\n+  fp_loc.Array = loc;\n \n   Current_Error_Node = error_gnat_node;\n-  Compiler_Abort (sp, -1, sp_loc);\n+  Compiler_Abort (fp, -1, fp_loc);\n }\n \n /* Perform all the initialization steps that are language-specific.  */"}, {"sha": "813a1dce6f8867e880a180f559628951f40227e4", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f78ecdbe08233a96bad6d268a6bd06c754949b0/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f78ecdbe08233a96bad6d268a6bd06c754949b0/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=8f78ecdbe08233a96bad6d268a6bd06c754949b0", "patch": "@@ -9356,16 +9356,16 @@ void\n post_error (const char *msg, Node_Id node)\n {\n   String_Template temp;\n-  DECLARE_STRING_POINTER (sp);\n+  Fat_Pointer fp;\n \n   if (No (node))\n     return;\n \n   temp.Low_Bound = 1;\n   temp.High_Bound = strlen (msg);\n-  sp.Bounds = &temp;\n-  sp.Array = msg;\n-  Error_Msg_N (sp, node);\n+  fp.Bounds = &temp;\n+  fp.Array = msg;\n+  Error_Msg_N (fp, node);\n }\n \n /* Similar to post_error, but NODE is the node at which to post the error and\n@@ -9375,16 +9375,16 @@ void\n post_error_ne (const char *msg, Node_Id node, Entity_Id ent)\n {\n   String_Template temp;\n-  DECLARE_STRING_POINTER (sp);\n+  Fat_Pointer fp;\n \n   if (No (node))\n     return;\n \n   temp.Low_Bound = 1;\n   temp.High_Bound = strlen (msg);\n-  sp.Bounds = &temp;\n-  sp.Array = msg;\n-  Error_Msg_NE (sp, node, ent);\n+  fp.Bounds = &temp;\n+  fp.Array = msg;\n+  Error_Msg_NE (fp, node, ent);\n }\n \n /* Similar to post_error_ne, but NUM is the number to use for the '^'.  */"}, {"sha": "dd049db908a2134d58444ed8c6b25133437ee31a", "filename": "gcc/ada/types.h", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f78ecdbe08233a96bad6d268a6bd06c754949b0/gcc%2Fada%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f78ecdbe08233a96bad6d268a6bd06c754949b0/gcc%2Fada%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.h?ref=8f78ecdbe08233a96bad6d268a6bd06c754949b0", "patch": "@@ -76,14 +76,11 @@ typedef Char *Str;\n /* Pointer to string of Chars */\n typedef Char *Str_Ptr;\n \n-/* Types for the fat pointer used for strings and the template it points to.\n-   On most platforms the fat pointer is naturally aligned but, on the rest,\n-   it is given twice the natural alignment.  For maximum portability, we do\n-   not overalign the type but only the objects.  */\n-typedef struct { int Low_Bound, High_Bound; } String_Template;\n-typedef struct { const char *Array; String_Template *Bounds; } String_Pointer;\n-#define DECLARE_STRING_POINTER(...) \\\n-  __attribute__ ((aligned (sizeof (char *) * 2))) String_Pointer __VA_ARGS__\n+/* Types for the fat pointer used for strings and the template it\n+   points to.  */\n+typedef struct {int Low_Bound, High_Bound; } String_Template;\n+typedef struct {const char *Array; String_Template *Bounds; }\n+\t__attribute ((aligned (sizeof (char *) * 2))) Fat_Pointer;\n \n /* Types for Node/Entity Kinds:  */\n "}]}