{"sha": "82c066f587fe99cc3d5cd0d685582f0272d3a40f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJjMDY2ZjU4N2ZlOTljYzNkNWNkMGQ2ODU1ODJmMDI3MmQzYTQwZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-01-09T13:35:43Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-01-09T13:35:43Z"}, "message": "re PR tree-optimization/83668 (wrong code with -O -fno-tree-dominator-opts -fgraphite-identity)\n\n2018-01-09  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/83668\n\t* graphite.c (canonicalize_loop_closed_ssa): Add edge argument,\n\tmove prologue...\n\t(canonicalize_loop_form): ... here, renamed from ...\n\t(canonicalize_loop_closed_ssa_form): ... this and amended to\n\tswap successor edges for loop exit blocks to make us use\n\tthe RPO order we need for initial schedule generation.\n\n\t* gcc.dg/graphite/pr83668.c: New testcase.\n\nFrom-SVN: r256381", "tree": {"sha": "87bc765c4b2faf45547a43111b2ab530ff3bfad8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87bc765c4b2faf45547a43111b2ab530ff3bfad8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82c066f587fe99cc3d5cd0d685582f0272d3a40f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82c066f587fe99cc3d5cd0d685582f0272d3a40f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82c066f587fe99cc3d5cd0d685582f0272d3a40f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82c066f587fe99cc3d5cd0d685582f0272d3a40f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e96a5786c75a9fb7c1720a0a4860e990bcc830bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e96a5786c75a9fb7c1720a0a4860e990bcc830bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e96a5786c75a9fb7c1720a0a4860e990bcc830bf"}], "stats": {"total": 81, "additions": 73, "deletions": 8}, "files": [{"sha": "f908b7cc2cc13e12df23b2f60e27adc62832289b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c066f587fe99cc3d5cd0d685582f0272d3a40f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c066f587fe99cc3d5cd0d685582f0272d3a40f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=82c066f587fe99cc3d5cd0d685582f0272d3a40f", "patch": "@@ -1,3 +1,13 @@\n+2018-01-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/83668\n+\t* graphite.c (canonicalize_loop_closed_ssa): Add edge argument,\n+\tmove prologue...\n+\t(canonicalize_loop_form): ... here, renamed from ...\n+\t(canonicalize_loop_closed_ssa_form): ... this and amended to\n+\tswap successor edges for loop exit blocks to make us use\n+\tthe RPO order we need for initial schedule generation.\n+\n 2018-01-09  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR tree-optimization/64811"}, {"sha": "3b7f46bebd6e4c56438cf0fc1fbdc0b7e7e4f616", "filename": "gcc/graphite.c", "status": "modified", "additions": 24, "deletions": 8, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c066f587fe99cc3d5cd0d685582f0272d3a40f/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c066f587fe99cc3d5cd0d685582f0272d3a40f/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=82c066f587fe99cc3d5cd0d685582f0272d3a40f", "patch": "@@ -227,15 +227,11 @@ free_scops (vec<scop_p> scops)\n /* Transforms LOOP to the canonical loop closed SSA form.  */\n \n static void\n-canonicalize_loop_closed_ssa (loop_p loop)\n+canonicalize_loop_closed_ssa (loop_p loop, edge e)\n {\n-  edge e = single_exit (loop);\n   basic_block bb;\n   gphi_iterator psi;\n \n-  if (!e || (e->flags & EDGE_COMPLEX))\n-    return;\n-\n   bb = e->dest;\n \n   /* Make the loop-close PHI node BB contain only PHIs and have a\n@@ -314,14 +310,34 @@ canonicalize_loop_closed_ssa (loop_p loop)\n    other statements.\n \n    - there exist only one phi node per definition in the loop.\n+\n+   In addition to that we also make sure that loop exit edges are\n+   first in the successor edge vector.  This is to make RPO order\n+   as computed by pre_and_rev_post_order_compute be consistent with\n+   what initial schedule generation expects.\n */\n \n static void\n-canonicalize_loop_closed_ssa_form (void)\n+canonicalize_loop_form (void)\n {\n   loop_p loop;\n   FOR_EACH_LOOP (loop, LI_FROM_INNERMOST)\n-    canonicalize_loop_closed_ssa (loop);\n+    {\n+      edge e = single_exit (loop);\n+      if (!e || (e->flags & EDGE_COMPLEX))\n+\tcontinue;\n+\n+      canonicalize_loop_closed_ssa (loop, e);\n+\n+      /* If the exit is not first in the edge vector make it so.  */\n+      if (e != EDGE_SUCC (e->src, 0))\n+\t{\n+\t  unsigned ei;\n+\t  for (ei = 0; EDGE_SUCC (e->src, ei) != e; ++ei)\n+\t    ;\n+\t  std::swap (EDGE_SUCC (e->src, ei), EDGE_SUCC (e->src, 0));\n+\t}\n+    }\n \n   /* We can end up releasing duplicate exit PHIs and also introduce\n      additional copies so the cached information isn't correct anymore.  */\n@@ -360,7 +376,7 @@ graphite_transform_loops (void)\n   the_isl_ctx = ctx;\n \n   sort_sibling_loops (cfun);\n-  canonicalize_loop_closed_ssa_form ();\n+  canonicalize_loop_form ();\n \n   /* Print the loop structure.  */\n   if (dump_file && (dump_flags & TDF_DETAILS))"}, {"sha": "bbf9c760647acbd1e134bc37ec610ded04bd960b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c066f587fe99cc3d5cd0d685582f0272d3a40f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c066f587fe99cc3d5cd0d685582f0272d3a40f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=82c066f587fe99cc3d5cd0d685582f0272d3a40f", "patch": "@@ -1,3 +1,8 @@\n+2018-01-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/83668\n+\t* gcc.dg/graphite/pr83668.c: New testcase.\n+\n 2018-01-09  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR tree-optimization/64811"}, {"sha": "22b01b8c4aef60ae18160b23721546ba16734fab", "filename": "gcc/testsuite/gcc.dg/graphite/pr83668.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c066f587fe99cc3d5cd0d685582f0272d3a40f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83668.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c066f587fe99cc3d5cd0d685582f0272d3a40f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83668.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83668.c?ref=82c066f587fe99cc3d5cd0d685582f0272d3a40f", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O -fno-tree-dominator-opts -fgraphite-identity\" } */\n+\n+int a, b, c;\n+int d[14];\n+\n+int\n+main (void)\n+{\n+  short e;\n+  char f;\n+\n+  for (; b >= 0; b--)\n+    {\n+      e = 0;\n+      for (; e < 2; e++)\n+\t{\n+\t  a = 0;\n+\t  for (; a < 7; a++)\n+\t    d[a] = 1;\n+\t}\n+      if (c)\n+\t{\n+\t  f = 0;\n+\t  for (; f >= 0; f--)\n+\t    ;\n+\t}\n+    }\n+\n+  if (a != 7)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}]}