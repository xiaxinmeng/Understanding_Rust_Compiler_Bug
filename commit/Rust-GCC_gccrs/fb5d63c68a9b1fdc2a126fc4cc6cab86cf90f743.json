{"sha": "fb5d63c68a9b1fdc2a126fc4cc6cab86cf90f743", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI1ZDYzYzY4YTliMWZkYzJhMTI2ZmM0Y2M2Y2FiODZjZjkwZjc0Mw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-11-04T10:58:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-11-04T10:58:44Z"}, "message": "exp_ch2.adb (Expand_Entity_Reference): Extend handling of atomic sync to type case.\n\n2011-11-04  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch2.adb (Expand_Entity_Reference): Extend handling of\n\tatomic sync to type case.\n\t* sem_prag.adb (Process_Suppress_Unsuppress): Atomic Sync can\n\tapply to types.\n\nFrom-SVN: r180938", "tree": {"sha": "4fb7d2b99ab6a632f2c8d21830170c4d8019ef8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fb7d2b99ab6a632f2c8d21830170c4d8019ef8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb5d63c68a9b1fdc2a126fc4cc6cab86cf90f743", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5d63c68a9b1fdc2a126fc4cc6cab86cf90f743", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb5d63c68a9b1fdc2a126fc4cc6cab86cf90f743", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5d63c68a9b1fdc2a126fc4cc6cab86cf90f743/comments", "author": null, "committer": null, "parents": [{"sha": "c2d1a4747cf6d6b98813ca855888dd246fce3013", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2d1a4747cf6d6b98813ca855888dd246fce3013", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2d1a4747cf6d6b98813ca855888dd246fce3013"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "0d298e5bf3eba1bb3bdc26e058c358b580fed1d1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5d63c68a9b1fdc2a126fc4cc6cab86cf90f743/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5d63c68a9b1fdc2a126fc4cc6cab86cf90f743/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fb5d63c68a9b1fdc2a126fc4cc6cab86cf90f743", "patch": "@@ -1,3 +1,10 @@\n+2011-11-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch2.adb (Expand_Entity_Reference): Extend handling of\n+\tatomic sync to type case.\n+\t* sem_prag.adb (Process_Suppress_Unsuppress): Atomic Sync can\n+\tapply to types.\n+\n 2011-11-04  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_warn.adb (Warn_On_Useless_Assignment): More accurate test"}, {"sha": "24f47a7775bfa48bbe0385368ff123c0fbb5d2f3", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5d63c68a9b1fdc2a126fc4cc6cab86cf90f743/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5d63c68a9b1fdc2a126fc4cc6cab86cf90f743/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=fb5d63c68a9b1fdc2a126fc4cc6cab86cf90f743", "patch": "@@ -401,7 +401,9 @@ package body Exp_Ch2 is\n \n       --  Set Atomic_Sync_Required if necessary for atomic variable\n \n-      if Is_Atomic (E) then\n+      if Nkind_In (N, N_Identifier, N_Expanded_Name)\n+        and then (Is_Atomic (E) or else Is_Atomic (Etype (E)))\n+      then\n          declare\n             Set  : Boolean;\n             MLoc : Node_Id;\n@@ -417,10 +419,25 @@ package body Exp_Ch2 is\n             elsif Debug_Flag_Dot_D then\n                Set := False;\n \n-            --  Otherwise setting comes from Atomic_Synchronization state\n+            --  If variable is atomic, but type is not, setting depends on\n+            --  disable/enable state for the variable.\n \n-            else\n+            elsif Is_Atomic (E) and then not Is_Atomic (Etype (E)) then\n                Set := not Atomic_Synchronization_Disabled (E);\n+\n+            --  If variable is not atomic, but its type is atomic, setting\n+            --  depends on disable/enable state for the type.\n+\n+            elsif not Is_Atomic (E) and then Is_Atomic (Etype (E)) then\n+               Set := not Atomic_Synchronization_Disabled (Etype (E));\n+\n+            --  Else both variable and type are atomic (see outer if), and we\n+            --  disable if either variable or its type have sync disabled.\n+\n+            else\n+               Set := (not Atomic_Synchronization_Disabled (E))\n+                        and then\n+                      (not Atomic_Synchronization_Disabled (Etype (E)));\n             end if;\n \n             --  Set flag if required"}, {"sha": "e1bf31be23a81eb45a14dc5142d1d7db08c1d161", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5d63c68a9b1fdc2a126fc4cc6cab86cf90f743/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5d63c68a9b1fdc2a126fc4cc6cab86cf90f743/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=fb5d63c68a9b1fdc2a126fc4cc6cab86cf90f743", "patch": "@@ -5465,7 +5465,7 @@ package body Sem_Prag is\n               and then not Is_Atomic (E)\n             then\n                Error_Msg_N\n-                 (\"pragma & requires atomic variable\",\n+                 (\"pragma & requires atomic type or variable\",\n                   Pragma_Identifier (Original_Node (N)));\n             end if;\n "}]}