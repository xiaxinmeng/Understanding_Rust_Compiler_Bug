{"sha": "00ca66405c3b9da27fab36bd55e62148e97d7491", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBjYTY2NDA1YzNiOWRhMjdmYWIzNmJkNTVlNjIxNDhlOTdkNzQ5MQ==", "commit": {"author": {"name": "Daniel Kraft", "email": "d@domob.eu", "date": "2008-09-09T18:08:08Z"}, "committer": {"name": "Daniel Kraft", "email": "domob@gcc.gnu.org", "date": "2008-09-09T18:08:08Z"}, "message": "re PR fortran/37429 (Checks when assigning from a type-bound procedure broken)\n\n2008-09-09  Daniel Kraft  <d@domob.eu>\n\n\tPR fortran/37429\n\t* resolve.c (expression_rank): Added assertion to guard against\n\tEXPR_COMPCALL expressions.\n\t(resolve_compcall): Set expression's rank from the target procedure's.\n\n2008-09-09  Daniel Kraft  <d@domob.eu>\n\n\tPR fortran/37429\n\t* gfortran.dg/typebound_call_7.f03: New test.\n\t* gfortran.dg/typebound_call_8.f03: New test.\n\nFrom-SVN: r140163", "tree": {"sha": "652b729072d1934ca2c55d2cf26b864558540c25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/652b729072d1934ca2c55d2cf26b864558540c25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00ca66405c3b9da27fab36bd55e62148e97d7491", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00ca66405c3b9da27fab36bd55e62148e97d7491", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00ca66405c3b9da27fab36bd55e62148e97d7491", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00ca66405c3b9da27fab36bd55e62148e97d7491/comments", "author": {"login": "domob1812", "id": 4943644, "node_id": "MDQ6VXNlcjQ5NDM2NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domob1812", "html_url": "https://github.com/domob1812", "followers_url": "https://api.github.com/users/domob1812/followers", "following_url": "https://api.github.com/users/domob1812/following{/other_user}", "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}", "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions", "organizations_url": "https://api.github.com/users/domob1812/orgs", "repos_url": "https://api.github.com/users/domob1812/repos", "events_url": "https://api.github.com/users/domob1812/events{/privacy}", "received_events_url": "https://api.github.com/users/domob1812/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a3d7e74caea0e0ff01f12191aaf479a558fa192", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a3d7e74caea0e0ff01f12191aaf479a558fa192", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a3d7e74caea0e0ff01f12191aaf479a558fa192"}], "stats": {"total": 104, "additions": 104, "deletions": 0}, "files": [{"sha": "c8f1aaf5d92c17772758451c67fbc5f336e23b43", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00ca66405c3b9da27fab36bd55e62148e97d7491/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00ca66405c3b9da27fab36bd55e62148e97d7491/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=00ca66405c3b9da27fab36bd55e62148e97d7491", "patch": "@@ -1,3 +1,10 @@\n+2008-09-09  Daniel Kraft  <d@domob.eu>\n+\n+\tPR fortran/37429\n+\t* resolve.c (expression_rank): Added assertion to guard against\n+\tEXPR_COMPCALL expressions.\n+\t(resolve_compcall): Set expression's rank from the target procedure's.\n+\n 2008-09-09  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/37411"}, {"sha": "69245f2ce35f1463df6749d0ee280643e2512fe5", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00ca66405c3b9da27fab36bd55e62148e97d7491/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00ca66405c3b9da27fab36bd55e62148e97d7491/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=00ca66405c3b9da27fab36bd55e62148e97d7491", "patch": "@@ -4021,6 +4021,10 @@ expression_rank (gfc_expr *e)\n   gfc_ref *ref;\n   int i, rank;\n \n+  /* Just to make sure, because EXPR_COMPCALL's also have an e->ref and that\n+     could lead to serious confusion...  */\n+  gcc_assert (e->expr_type != EXPR_COMPCALL);\n+\n   if (e->ref == NULL)\n     {\n       if (e->expr_type == EXPR_ARRAY)\n@@ -4550,6 +4554,11 @@ resolve_compcall (gfc_expr* e)\n \n   if (resolve_typebound_generic_call (e) == FAILURE)\n     return FAILURE;\n+  gcc_assert (!e->value.compcall.tbp->is_generic);\n+\n+  /* Take the rank from the function's symbol.  */\n+  if (e->value.compcall.tbp->u.specific->n.sym->as)\n+    e->rank = e->value.compcall.tbp->u.specific->n.sym->as->rank;\n \n   /* For now, we simply transform it into an EXPR_FUNCTION call with the same\n      arglist to the TBP's binding target.  */"}, {"sha": "185c066b9ba95cc9fdafc8a76d9164ec551d7794", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00ca66405c3b9da27fab36bd55e62148e97d7491/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00ca66405c3b9da27fab36bd55e62148e97d7491/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=00ca66405c3b9da27fab36bd55e62148e97d7491", "patch": "@@ -1,3 +1,9 @@\n+2008-09-09  Daniel Kraft  <d@domob.eu>\n+\n+\tPR fortran/37429\n+\t* gfortran.dg/typebound_call_7.f03: New test.\n+\t* gfortran.dg/typebound_call_8.f03: New test.\n+\n 2008-09-09  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/37354"}, {"sha": "c429dc71257f90b388ecf501eedaf23ee3564273", "filename": "gcc/testsuite/gfortran.dg/typebound_call_7.f03", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00ca66405c3b9da27fab36bd55e62148e97d7491/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_7.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00ca66405c3b9da27fab36bd55e62148e97d7491/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_7.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_7.f03?ref=00ca66405c3b9da27fab36bd55e62148e97d7491", "patch": "@@ -0,0 +1,50 @@\n+! { dg-do compile}\n+\n+! PR fortran/37429\n+! Checks for assignments from type-bound functions.\n+\n+MODULE touching\n+  IMPLICIT NONE\n+\n+  TYPE :: EqnSys33\n+  CONTAINS\n+    PROCEDURE, NOPASS :: solve1\n+    PROCEDURE, NOPASS :: solve2\n+    PROCEDURE, NOPASS :: solve3\n+  END TYPE EqnSys33\n+\n+CONTAINS\n+\n+  FUNCTION solve1 ()\n+    IMPLICIT NONE\n+    REAL :: solve1(3)\n+    solve1 = 0.0\n+  END FUNCTION solve1\n+\n+  CHARACTER(len=5) FUNCTION solve2 ()\n+    IMPLICIT NONE\n+    solve2 = \"hello\"\n+  END FUNCTION solve2\n+\n+  REAL FUNCTION solve3 ()\n+    IMPLICIT NONE\n+    solve3 = 4.2\n+  END FUNCTION solve3\n+\n+  SUBROUTINE fill_gap ()\n+    IMPLICIT NONE\n+    TYPE(EqnSys33) :: sys\n+    REAL :: res\n+    REAL :: resArr(3), resSmall(2)\n+\n+    res = sys%solve1 () ! { dg-error \"Incompatible rank\" }\n+    res = sys%solve2 () ! { dg-error \"Can't convert\" }\n+    resSmall = sys%solve1 () ! { dg-error \"Different shape\" }\n+\n+    res = sys%solve3 ()\n+    resArr = sys%solve1 ()\n+  END SUBROUTINE fill_gap\n+\n+END MODULE touching\n+\n+! { dg-final { cleanup-modules \"touching\" } }"}, {"sha": "c8bf8d83c01dbc5fbc47905d1c52fea955791262", "filename": "gcc/testsuite/gfortran.dg/typebound_call_8.f03", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00ca66405c3b9da27fab36bd55e62148e97d7491/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_8.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00ca66405c3b9da27fab36bd55e62148e97d7491/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_8.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_8.f03?ref=00ca66405c3b9da27fab36bd55e62148e97d7491", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do compile}\n+\n+! PR fortran/37429\n+! This used to ICE, check that is fixed.\n+\n+MODULE touching\n+  IMPLICIT NONE\n+\n+  TYPE :: EqnSys33\n+  CONTAINS\n+    PROCEDURE, NOPASS :: solve1\n+  END TYPE EqnSys33\n+\n+CONTAINS\n+\n+  FUNCTION solve1 ()\n+    IMPLICIT NONE\n+    REAL :: solve1(3)\n+    solve1 = 0.0\n+  END FUNCTION solve1\n+\n+  SUBROUTINE fill_gap ()\n+    IMPLICIT NONE\n+    TYPE(EqnSys33) :: sys\n+    REAL :: res\n+\n+    res = sys%solve1 () ! { dg-error \"Incompatible rank\" }\n+  END SUBROUTINE fill_gap\n+\n+END MODULE touching\n+\n+! { dg-final { cleanup-modules \"touching\" } }"}]}