{"sha": "d038420ea8bfbe2c4b7253d718ef00791cb5e78b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDAzODQyMGVhOGJmYmUyYzRiNzI1M2Q3MThlZjAwNzkxY2I1ZTc4Yg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-26T17:06:44Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-26T17:06:44Z"}, "message": "(num_sign_bit_copies): Fix 1-off error in PLUS case.\n\nFrom-SVN: r2807", "tree": {"sha": "d0fc56eb794334d1e96e9553a4b84df6d8a16715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0fc56eb794334d1e96e9553a4b84df6d8a16715"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d038420ea8bfbe2c4b7253d718ef00791cb5e78b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d038420ea8bfbe2c4b7253d718ef00791cb5e78b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d038420ea8bfbe2c4b7253d718ef00791cb5e78b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d038420ea8bfbe2c4b7253d718ef00791cb5e78b/comments", "author": null, "committer": null, "parents": [{"sha": "3b2f07926a2c2a98bd0e6d281a8d75dcc2087c17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b2f07926a2c2a98bd0e6d281a8d75dcc2087c17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b2f07926a2c2a98bd0e6d281a8d75dcc2087c17"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fc856b5e08804fef20322e8adf53c0478aa22cde", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d038420ea8bfbe2c4b7253d718ef00791cb5e78b/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d038420ea8bfbe2c4b7253d718ef00791cb5e78b/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=d038420ea8bfbe2c4b7253d718ef00791cb5e78b", "patch": "@@ -6355,7 +6355,7 @@ num_sign_bit_copies (x, mode)\n \t  sig = significant_bits (XEXP (x, 0), mode);\n \t  if ((((HOST_WIDE_INT) 1 << (bitwidth - 1)) & sig) == 0)\n \t    return (sig == 1 || sig == 0 ? bitwidth\n-\t\t    : bitwidth - floor_log2 (sig));\n+\t\t    : bitwidth - floor_log2 (sig) - 1);\n \t}\n \n       num0 = num_sign_bit_copies (XEXP (x, 0), mode);"}]}