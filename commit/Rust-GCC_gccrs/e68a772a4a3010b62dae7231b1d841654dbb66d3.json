{"sha": "e68a772a4a3010b62dae7231b1d841654dbb66d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY4YTc3MmE0YTMwMTBiNjJkYWU3MjMxYjFkODQxNjU0ZGJiNjZkMw==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-09-10T12:25:12Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-09-10T12:38:18Z"}, "message": "Make override context permissive when the TypeParam cannot resolve\n\nWhen we have generic code that calls other generic code the type system\nwill have already setup the side tables for substituions and at this point\nthe referenced generic code does not need to be substituted again.", "tree": {"sha": "fbe737f7eef9b8fb14bdbe6db076ef5214e439dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbe737f7eef9b8fb14bdbe6db076ef5214e439dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e68a772a4a3010b62dae7231b1d841654dbb66d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e68a772a4a3010b62dae7231b1d841654dbb66d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e68a772a4a3010b62dae7231b1d841654dbb66d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e68a772a4a3010b62dae7231b1d841654dbb66d3/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "454b78dd044854440f358a3a64fae929937e1527", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/454b78dd044854440f358a3a64fae929937e1527", "html_url": "https://github.com/Rust-GCC/gccrs/commit/454b78dd044854440f358a3a64fae929937e1527"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "899ad59384f3d3808493871c8b633d92bf8c9721", "filename": "gcc/rust/typecheck/rust-tyty.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e68a772a4a3010b62dae7231b1d841654dbb66d3/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e68a772a4a3010b62dae7231b1d841654dbb66d3/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc?ref=e68a772a4a3010b62dae7231b1d841654dbb66d3", "patch": "@@ -310,7 +310,8 @@ StructFieldType::clone () const\n void\n SubstitutionParamMapping::override_context ()\n {\n-  rust_assert (param->can_resolve ());\n+  if (!param->can_resolve ())\n+    return;\n \n   auto mappings = Analysis::Mappings::get ();\n   auto context = Resolver::TypeCheckContext::get ();"}]}