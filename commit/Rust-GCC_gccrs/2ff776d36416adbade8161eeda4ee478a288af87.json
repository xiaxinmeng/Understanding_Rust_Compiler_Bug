{"sha": "2ff776d36416adbade8161eeda4ee478a288af87", "node_id": "C_kwDOANBUbNoAKDJmZjc3NmQzNjQxNmFkYmFkZTgxNjFlZWRhNGVlNDc4YTI4OGFmODc", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-07-14T14:06:22Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-07-14T14:07:15Z"}, "message": "Support ast dump of generic parameters on functions", "tree": {"sha": "67638d91bb831d2d243c0d2c81a7ab5d330f09c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67638d91bb831d2d243c0d2c81a7ab5d330f09c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ff776d36416adbade8161eeda4ee478a288af87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ff776d36416adbade8161eeda4ee478a288af87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ff776d36416adbade8161eeda4ee478a288af87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ff776d36416adbade8161eeda4ee478a288af87/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab9f7f287ef0a775ac6a504d743e20c2f5488f6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab9f7f287ef0a775ac6a504d743e20c2f5488f6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab9f7f287ef0a775ac6a504d743e20c2f5488f6f"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "9af8fa8b237de2e5b48a71a76461f3f1db4fa0fb", "filename": "gcc/rust/ast/rust-ast-dump.cc", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ff776d36416adbade8161eeda4ee478a288af87/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ff776d36416adbade8161eeda4ee478a288af87/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-dump.cc?ref=2ff776d36416adbade8161eeda4ee478a288af87", "patch": "@@ -48,7 +48,11 @@ void\n Dump::go (AST::Crate &crate)\n {\n   for (auto &item : crate.items)\n-    item->accept_vis (*this);\n+    {\n+      stream << indentation;\n+      item->accept_vis (*this);\n+      stream << \"\\n\";\n+    }\n }\n \n void\n@@ -401,8 +405,12 @@ Dump::visit (AsyncBlockExpr &expr)\n void\n Dump::visit (TypeParam &param)\n {\n-  // Is it possible to have a null type here?\n-  param.get_type ()->accept_vis (*this);\n+  stream << param.get_type_representation ();\n+  if (param.has_type ())\n+    {\n+      stream << \": \";\n+      param.get_type ()->accept_vis (*this);\n+    }\n }\n \n void\n@@ -473,8 +481,24 @@ Dump::visit (UseDeclaration &use_decl)\n void\n Dump::visit (Function &function)\n {\n-  stream << indentation << \"fn \" << function.get_function_name () << '(';\n+  stream << \"fn \" << function.get_function_name ();\n+\n+  if (function.has_generics ())\n+    {\n+      stream << \"<\";\n+      for (size_t i = 0; i < function.get_generic_params ().size (); i++)\n+\t{\n+\t  auto &param = function.get_generic_params ().at (i);\n+\t  param->accept_vis (*this);\n+\n+\t  bool has_next = (i + 1) < function.get_generic_params ().size ();\n+\t  if (has_next)\n+\t    stream << \", \";\n+\t}\n+      stream << \">\";\n+    }\n \n+  stream << '(';\n   auto &params = function.get_function_params ();\n   if (params.size () >= 1)\n     {"}]}