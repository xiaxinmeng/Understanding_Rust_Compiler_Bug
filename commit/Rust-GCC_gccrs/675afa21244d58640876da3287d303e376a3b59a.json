{"sha": "675afa21244d58640876da3287d303e376a3b59a", "node_id": "C_kwDOANBUbNoAKDY3NWFmYTIxMjQ0ZDU4NjQwODc2ZGEzMjg3ZDMwM2UzNzZhM2I1OWE", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-30T12:54:10Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-30T23:10:03Z"}, "message": "libstdc++: Fix fully-dynamic-string build\n\nMy last change to the fully-dynamic-string actually broke it. This fixes\nthe move constructor so it builds, and simplifies it slightly so that\nmore code is common between the fully-dynamic enabled/disabled cases.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/cow_string.h (basic_string(basic_string&&)): Fix\n\tmem-initializer for _GLIBCXX_FULLY_DYNAMIC_STRING==0 case.\n\t* testsuite/21_strings/basic_string/cons/char/noexcept_move_construct.cc:\n\tRemove outdated comment.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/noexcept_move_construct.cc:\n\tLikewise.", "tree": {"sha": "7391a3e9a81328161eba6ad3da42aeef96fa18d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7391a3e9a81328161eba6ad3da42aeef96fa18d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/675afa21244d58640876da3287d303e376a3b59a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/675afa21244d58640876da3287d303e376a3b59a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/675afa21244d58640876da3287d303e376a3b59a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/675afa21244d58640876da3287d303e376a3b59a/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56b07badf052fb140c4636f6d77cfc02d1ac357c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56b07badf052fb140c4636f6d77cfc02d1ac357c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56b07badf052fb140c4636f6d77cfc02d1ac357c"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "ced395b80b8d28c8fd818b6414d1e9b3736e8d59", "filename": "libstdc++-v3/include/bits/cow_string.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/675afa21244d58640876da3287d303e376a3b59a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcow_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/675afa21244d58640876da3287d303e376a3b59a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcow_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcow_string.h?ref=675afa21244d58640876da3287d303e376a3b59a", "patch": "@@ -621,14 +621,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  @a __str is a valid, but unspecified string.\n        */\n       basic_string(basic_string&& __str) noexcept\n-#if _GLIBCXX_FULLY_DYNAMIC_STRING == 0\n       : _M_dataplus(std::move(__str._M_dataplus))\n       {\n+#if _GLIBCXX_FULLY_DYNAMIC_STRING == 0\n+\t// Make __str use the shared empty string rep.\n \t__str._M_data(_S_empty_rep()._M_refdata());\n-      }\n #else\n-      : _M_dataplus(__str._M_rep())\n-      {\n \t// Rather than allocate an empty string for the rvalue string,\n \t// just share ownership with it by incrementing the reference count.\n \t// If the rvalue string was \"leaked\" then it was the unique owner,\n@@ -637,8 +635,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  __gnu_cxx::__atomic_add_dispatch(&_M_rep()->_M_refcount, 2);\n \telse\n \t  __gnu_cxx::__atomic_add_dispatch(&_M_rep()->_M_refcount, 1);\n-      }\n #endif\n+      }\n \n       /**\n        *  @brief  Construct string from an initializer %list."}, {"sha": "74b0ed3910cd638d199d7bd1d2c53bf0231f26c1", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/noexcept_move_construct.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/675afa21244d58640876da3287d303e376a3b59a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fnoexcept_move_construct.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/675afa21244d58640876da3287d303e376a3b59a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fnoexcept_move_construct.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fnoexcept_move_construct.cc?ref=675afa21244d58640876da3287d303e376a3b59a", "patch": "@@ -23,7 +23,6 @@\n \n typedef std::string stype;\n \n-// True except for COW strings with _GLIBCXX_FULLY_DYNAMIC_STRING:\n static_assert(std::is_nothrow_move_constructible<stype>::value, \"Error\");\n \n // True for std::allocator because is_always_equal, but not true in general:"}, {"sha": "53cb81d8aee4487890ef4de4e0f7d3e038f9a38f", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/noexcept_move_construct.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/675afa21244d58640876da3287d303e376a3b59a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fnoexcept_move_construct.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/675afa21244d58640876da3287d303e376a3b59a/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fnoexcept_move_construct.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fnoexcept_move_construct.cc?ref=675afa21244d58640876da3287d303e376a3b59a", "patch": "@@ -23,7 +23,6 @@\n \n typedef std::wstring wstype;\n \n-// True except for COW strings with _GLIBCXX_FULLY_DYNAMIC_STRING:\n static_assert(std::is_nothrow_move_constructible<wstype>::value, \"Error\");\n \n // True for std::allocator because is_always_equal, but not true in general:"}]}