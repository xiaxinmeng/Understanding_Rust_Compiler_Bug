{"sha": "07ad5438a12e26c3d361462ea5e3e3163b2928e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdhZDU0MzhhMTJlMjZjM2QzNjE0NjJlYTVlM2UzMTYzYjI5MjhlMA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-02-01T11:35:34Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-02-01T11:35:34Z"}, "message": "re PR rtl-optimization/51374 ([avr] insn combine reorders volatile memory accesses)\n\ngcc/\n\tPR rtl-optimization/51374\n\t* combine.c (can_combine_p): Don't allow volatile_refs_p insns\n\tto cross other volatile_refs_p insns.\n\ngcc/testsuite/\n\tPR rtl-optimization/51374\n\t* testsuite/gcc.target/avr/torture/pr51374-1.c: New.\n\nFrom-SVN: r183796", "tree": {"sha": "157006ab69f61f15564411baac61ae0b1b51e9d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/157006ab69f61f15564411baac61ae0b1b51e9d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07ad5438a12e26c3d361462ea5e3e3163b2928e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07ad5438a12e26c3d361462ea5e3e3163b2928e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07ad5438a12e26c3d361462ea5e3e3163b2928e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07ad5438a12e26c3d361462ea5e3e3163b2928e0/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76a3962fe967dfde16d1b16460149d42680651b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76a3962fe967dfde16d1b16460149d42680651b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76a3962fe967dfde16d1b16460149d42680651b0"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "60c43a61bc53805f225b62c7d247b8f8f84999cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ad5438a12e26c3d361462ea5e3e3163b2928e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ad5438a12e26c3d361462ea5e3e3163b2928e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=07ad5438a12e26c3d361462ea5e3e3163b2928e0", "patch": "@@ -1,3 +1,9 @@\n+2012-02-01  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR rtl-optimization/51374\n+\t* combine.c (can_combine_p): Don't allow volatile_refs_p insns\n+\tto cross other volatile_refs_p insns.\n+\n 2012-02-01  Richard Guenther  <rguenther@suse.de>\n \n \t* doc/invoke.texi (fno-inline): Clarify documentation."}, {"sha": "582db1ffe0daf5a8527efb53cbfd192240efd62a", "filename": "gcc/combine.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ad5438a12e26c3d361462ea5e3e3163b2928e0/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ad5438a12e26c3d361462ea5e3e3163b2928e0/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=07ad5438a12e26c3d361462ea5e3e3163b2928e0", "patch": "@@ -1700,6 +1700,7 @@ can_combine_p (rtx insn, rtx i3, rtx pred ATTRIBUTE_UNUSED,\n   rtx link;\n #endif\n   bool all_adjacent = true;\n+  int (*is_volatile_p) (const_rtx);\n \n   if (succ)\n     {\n@@ -1948,11 +1949,17 @@ can_combine_p (rtx insn, rtx i3, rtx pred ATTRIBUTE_UNUSED,\n       && REG_P (dest) && REGNO (dest) < FIRST_PSEUDO_REGISTER)\n     return 0;\n \n-  /* If there are any volatile insns between INSN and I3, reject, because\n-     they might affect machine state.  */\n+  /* If INSN contains volatile references (specifically volatile MEMs),\n+     we cannot combine across any other volatile references.\n+     Even if INSN doesn't contain volatile references, any intervening\n+     volatile insn might affect machine state.  */\n \n+  is_volatile_p = volatile_refs_p (PATTERN (insn))\n+    ? volatile_refs_p\n+    : volatile_insn_p;\n+    \n   for (p = NEXT_INSN (insn); p != i3; p = NEXT_INSN (p))\n-    if (INSN_P (p) && p != succ && p != succ2 && volatile_insn_p (PATTERN (p)))\n+    if (INSN_P (p) && p != succ && p != succ2 && is_volatile_p (PATTERN (p)))\n       return 0;\n \n   /* If INSN contains an autoincrement or autodecrement, make sure that"}, {"sha": "18a727699471c21d9762622884731bcd25ec30b7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ad5438a12e26c3d361462ea5e3e3163b2928e0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ad5438a12e26c3d361462ea5e3e3163b2928e0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=07ad5438a12e26c3d361462ea5e3e3163b2928e0", "patch": "@@ -1,3 +1,8 @@\n+2012-02-01  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR rtl-optimization/51374\n+\t* testsuite/gcc.target/avr/torture/pr51374-1.c: New.\n+\n 2012-01-31  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/52024"}, {"sha": "b31d17363cdfd67103c72869fe6e1c8ccb249949", "filename": "gcc/testsuite/gcc.target/avr/torture/pr51374-1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ad5438a12e26c3d361462ea5e3e3163b2928e0/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Ftorture%2Fpr51374-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ad5438a12e26c3d361462ea5e3e3163b2928e0/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Ftorture%2Fpr51374-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Ftorture%2Fpr51374-1.c?ref=07ad5438a12e26c3d361462ea5e3e3163b2928e0", "patch": "@@ -0,0 +1,14 @@\n+/* PR rtl-optimization/51374 */\n+/* { dg-do compile } */\n+\n+void vector_18 (void)\n+{\n+    extern char slot;\n+    unsigned char status = (*(volatile unsigned char*) 0x2B);\n+    unsigned char data   = (*(volatile unsigned char*) 0x2C);\n+\n+    if (status & 0x10)\n+        slot = 0;\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\tsbic \" } } */"}]}