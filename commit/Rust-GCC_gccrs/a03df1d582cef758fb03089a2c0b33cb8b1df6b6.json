{"sha": "a03df1d582cef758fb03089a2c0b33cb8b1df6b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAzZGYxZDU4MmNlZjc1OGZiMDMwODlhMmMwYjMzY2I4YjFkZjZiNg==", "commit": {"author": {"name": "Kugan Vivekanandarajah", "email": "kuganv@linaro.org", "date": "2016-09-20T23:41:01Z"}, "committer": {"name": "Kugan Vivekanandarajah", "email": "kugan@gcc.gnu.org", "date": "2016-09-20T23:41:01Z"}, "message": "Use ipa-vrp result in tree-vrp\n\ngcc/ChangeLog:\n\n2016-09-21  Kugan Vivekanandarajah  <kuganv@linaro.org>\n\n\t * tree-vrp.c (get_value_range): Teach PARM_DECL to use ipa-vrp\n\t results.\n\n\ngcc/testsuite/ChangeLog:\n\n2016-09-21  Kugan Vivekanandarajah  <kuganv@linaro.org>\n\n\t* gcc.dg/guality/pr54519-1.c: Add -fno-ipa-vrp. Else constant\n\targuments/compare will be optimized away.\n\t* gcc.dg/torture/ftrapv-1.c: Likewise.\n\nFrom-SVN: r240293", "tree": {"sha": "55bb949e1c68b5bfb5b1acc8411ec489bd6a595f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55bb949e1c68b5bfb5b1acc8411ec489bd6a595f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a03df1d582cef758fb03089a2c0b33cb8b1df6b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a03df1d582cef758fb03089a2c0b33cb8b1df6b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a03df1d582cef758fb03089a2c0b33cb8b1df6b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a03df1d582cef758fb03089a2c0b33cb8b1df6b6/comments", "author": null, "committer": null, "parents": [{"sha": "8bc5448f39ccd26b6f06cd7120f09c2254bac3be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bc5448f39ccd26b6f06cd7120f09c2254bac3be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bc5448f39ccd26b6f06cd7120f09c2254bac3be"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "4f2f973c1d3413f791a18801f57859a52e0321be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03df1d582cef758fb03089a2c0b33cb8b1df6b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03df1d582cef758fb03089a2c0b33cb8b1df6b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a03df1d582cef758fb03089a2c0b33cb8b1df6b6", "patch": "@@ -1,3 +1,8 @@\n+2016-09-21  Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\t * tree-vrp.c (get_value_range): Teach PARM_DECL to use ipa-vrp\n+\t results.\n+\n 2016-09-21  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \t* common.opt: New option -fipa-vrp."}, {"sha": "006607b19ab6e33516112ec90716aa7742a7b0a3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03df1d582cef758fb03089a2c0b33cb8b1df6b6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03df1d582cef758fb03089a2c0b33cb8b1df6b6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a03df1d582cef758fb03089a2c0b33cb8b1df6b6", "patch": "@@ -1,3 +1,9 @@\n+2016-09-21  Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\t* gcc.dg/guality/pr54519-1.c: Add -fno-ipa-vrp. Else constant\n+\targuments/compare will be optimized away.\n+\t* gcc.dg/torture/ftrapv-1.c: Likewise.\n+\n 2016-09-21  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \t* g++.dg/ipa/pure-const-3.C: Add -fno-ipa-vrp. Else constant arguments"}, {"sha": "e98dcb91107d412b2fdccf1acb8a383c417001a4", "filename": "gcc/testsuite/gcc.dg/guality/pr54519-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03df1d582cef758fb03089a2c0b33cb8b1df6b6/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03df1d582cef758fb03089a2c0b33cb8b1df6b6/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-1.c?ref=a03df1d582cef758fb03089a2c0b33cb8b1df6b6", "patch": "@@ -1,6 +1,6 @@\n /* PR debug/54519 */\n /* { dg-do run } */\n-/* { dg-options \"-g\" } */\n+/* { dg-options \"-g -fno-ipa-vrp\" } */\n \n __attribute__((noinline, noclone)) void\n fn1 (int x)"}, {"sha": "66fa33f1568563c053ec7204b59537c810b468ce", "filename": "gcc/testsuite/gcc.dg/torture/ftrapv-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03df1d582cef758fb03089a2c0b33cb8b1df6b6/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fftrapv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03df1d582cef758fb03089a2c0b33cb8b1df6b6/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fftrapv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fftrapv-1.c?ref=a03df1d582cef758fb03089a2c0b33cb8b1df6b6", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-additional-options \"-ftrapv\" } */\n+/* { dg-additional-options \"-ftrapv -fno-ipa-vrp\" } */\n /* { dg-require-effective-target trapping } */\n /* { dg-require-fork \"\" } */\n "}, {"sha": "3c75a0d98852854a80cef104be02e9a888450842", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03df1d582cef758fb03089a2c0b33cb8b1df6b6/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03df1d582cef758fb03089a2c0b33cb8b1df6b6/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=a03df1d582cef758fb03089a2c0b33cb8b1df6b6", "patch": "@@ -687,6 +687,18 @@ get_value_range (const_tree var)\n \t  if (POINTER_TYPE_P (TREE_TYPE (sym))\n \t      && nonnull_arg_p (sym))\n \t    set_value_range_to_nonnull (vr, TREE_TYPE (sym));\n+\t  else if (INTEGRAL_TYPE_P (TREE_TYPE (sym)))\n+\t    {\n+\t      wide_int min, max;\n+\t      value_range_type rtype = get_range_info (var, &min, &max);\n+\t      if (rtype == VR_RANGE || rtype == VR_ANTI_RANGE)\n+\t\tset_value_range (vr, rtype,\n+\t\t\t\t wide_int_to_tree (TREE_TYPE (var), min),\n+\t\t\t\t wide_int_to_tree (TREE_TYPE (var), max),\n+\t\t\t\t NULL);\n+\t      else\n+\t\tset_value_range_to_varying (vr);\n+\t    }\n \t  else\n \t    set_value_range_to_varying (vr);\n \t}"}]}