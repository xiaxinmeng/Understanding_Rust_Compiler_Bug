{"sha": "2050ac1a547eebe7de4af98b57429a934e75fff4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA1MGFjMWE1NDdlZWJlN2RlNGFmOThiNTc0MjlhOTM0ZTc1ZmZmNA==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2021-07-26T09:22:23Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2021-07-26T09:22:23Z"}, "message": "AArch64: correct usdot vectorizer and intrinsics optabs\n\nThere's a slight mismatch between the vectorizer optabs and the intrinsics\npatterns for NEON.  The vectorizer expects operands[3] and operands[0] to be\nthe same but the aarch64 intrinsics expanders expect operands[0] and\noperands[1] to be the same.\n\nThis means we need different patterns here.  This adds a separate usdot\nvectorizer pattern which just shuffles around the RTL params.\n\nThere's also an inconsistency between the usdot and (u|s)dot intrinsics RTL\npatterns which is not corrected here.\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64-builtins.c (TYPES_TERNOP_SUSS,\n\taarch64_types_ternop_suss_qualifiers): New.\n\t* config/aarch64/aarch64-simd-builtins.def (usdot_prod): Use it.\n\t* config/aarch64/aarch64-simd.md (usdot_prod<vsi2qi>): Re-organize RTL.\n\t* config/aarch64/arm_neon.h (vusdot_s32, vusdotq_s32): Use it.", "tree": {"sha": "48bd4189de691773b62c86b47c95d12ad313b0a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48bd4189de691773b62c86b47c95d12ad313b0a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2050ac1a547eebe7de4af98b57429a934e75fff4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2050ac1a547eebe7de4af98b57429a934e75fff4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2050ac1a547eebe7de4af98b57429a934e75fff4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2050ac1a547eebe7de4af98b57429a934e75fff4/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acf9d1fd806fabf62dfe232439b11263c191e32d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acf9d1fd806fabf62dfe232439b11263c191e32d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acf9d1fd806fabf62dfe232439b11263c191e32d"}], "stats": {"total": 38, "additions": 21, "deletions": 17}, "files": [{"sha": "f6b41d9c200d6300dee65ba60ae94488231a8a38", "filename": "gcc/config/aarch64/aarch64-builtins.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2050ac1a547eebe7de4af98b57429a934e75fff4/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2050ac1a547eebe7de4af98b57429a934e75fff4/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c?ref=2050ac1a547eebe7de4af98b57429a934e75fff4", "patch": "@@ -209,6 +209,10 @@ static enum aarch64_type_qualifiers\n aarch64_types_ternop_ssus_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n   = { qualifier_none, qualifier_none, qualifier_unsigned, qualifier_none };\n #define TYPES_TERNOP_SSUS (aarch64_types_ternop_ssus_qualifiers)\n+static enum aarch64_type_qualifiers\n+aarch64_types_ternop_suss_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n+  = { qualifier_none, qualifier_unsigned, qualifier_none, qualifier_none };\n+#define TYPES_TERNOP_SUSS (aarch64_types_ternop_suss_qualifiers)\n \n \n static enum aarch64_type_qualifiers"}, {"sha": "3bb45a82945b143497035ec30d35543b2dad55a3", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2050ac1a547eebe7de4af98b57429a934e75fff4/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2050ac1a547eebe7de4af98b57429a934e75fff4/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=2050ac1a547eebe7de4af98b57429a934e75fff4", "patch": "@@ -377,7 +377,7 @@\n   /* Implemented by <sur><dotprod>_prod<dot_mode>.  */\n   BUILTIN_VB (TERNOP, sdot, 0, NONE)\n   BUILTIN_VB (TERNOPU, udot, 0, NONE)\n-  BUILTIN_VB (TERNOP_SSUS, usdot_prod, 10, NONE)\n+  BUILTIN_VB (TERNOP_SUSS, usdot_prod, 10, NONE)\n   /* Implemented by aarch64_<sur><dotprod>_lane{q}<dot_mode>.  */\n   BUILTIN_VB (QUADOP_LANE, sdot_lane, 0, NONE)\n   BUILTIN_VB (QUADOPU_LANE, udot_lane, 0, NONE)"}, {"sha": "bf667b99944e3fcce618a21c77bd5b804b3a0b5d", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2050ac1a547eebe7de4af98b57429a934e75fff4/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2050ac1a547eebe7de4af98b57429a934e75fff4/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=2050ac1a547eebe7de4af98b57429a934e75fff4", "patch": "@@ -599,20 +599,6 @@\n   [(set_attr \"type\" \"neon_dot<q>\")]\n )\n \n-;; These instructions map to the __builtins for the armv8.6a I8MM usdot\n-;; (vector) Dot Product operation.\n-(define_insn \"usdot_prod<vsi2qi>\"\n-  [(set (match_operand:VS 0 \"register_operand\" \"=w\")\n-\t(plus:VS\n-\t  (unspec:VS [(match_operand:<VSI2QI> 2 \"register_operand\" \"w\")\n-\t\t      (match_operand:<VSI2QI> 3 \"register_operand\" \"w\")]\n-\t  UNSPEC_USDOT)\n-\t  (match_operand:VS 1 \"register_operand\" \"0\")))]\n-  \"TARGET_I8MM\"\n-  \"usdot\\\\t%0.<Vtype>, %2.<Vdottype>, %3.<Vdottype>\"\n-  [(set_attr \"type\" \"neon_dot<q>\")]\n-)\n-\n ;; These expands map to the Dot Product optab the vectorizer checks for.\n ;; The auto-vectorizer expects a dot product builtin that also does an\n ;; accumulation into the provided register.\n@@ -648,6 +634,20 @@\n   DONE;\n })\n \n+;; These instructions map to the __builtins for the Armv8.6-a I8MM usdot\n+;; (vector) Dot Product operation and the vectorized optab.\n+(define_insn \"usdot_prod<vsi2qi>\"\n+  [(set (match_operand:VS 0 \"register_operand\" \"=w\")\n+\t(plus:VS\n+\t  (unspec:VS [(match_operand:<VSI2QI> 1 \"register_operand\" \"w\")\n+\t\t      (match_operand:<VSI2QI> 2 \"register_operand\" \"w\")]\n+\t  UNSPEC_USDOT)\n+\t  (match_operand:VS 3 \"register_operand\" \"0\")))]\n+  \"TARGET_I8MM\"\n+  \"usdot\\\\t%0.<Vtype>, %1.<Vdottype>, %2.<Vdottype>\"\n+  [(set_attr \"type\" \"neon_dot<q>\")]\n+)\n+\n ;; These instructions map to the __builtins for the Dot Product\n ;; indexed operations.\n (define_insn \"aarch64_<sur>dot_lane<vsi2qi>\""}, {"sha": "0f439943ffed0437ebd1a4f7e2ca4f802582631a", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2050ac1a547eebe7de4af98b57429a934e75fff4/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2050ac1a547eebe7de4af98b57429a934e75fff4/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=2050ac1a547eebe7de4af98b57429a934e75fff4", "patch": "@@ -33744,14 +33744,14 @@ __extension__ extern __inline int32x2_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vusdot_s32 (int32x2_t __r, uint8x8_t __a, int8x8_t __b)\n {\n-  return __builtin_aarch64_usdot_prodv8qi_ssus (__r, __a, __b);\n+  return __builtin_aarch64_usdot_prodv8qi_suss (__a, __b, __r);\n }\n \n __extension__ extern __inline int32x4_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vusdotq_s32 (int32x4_t __r, uint8x16_t __a, int8x16_t __b)\n {\n-  return __builtin_aarch64_usdot_prodv16qi_ssus (__r, __a, __b);\n+  return __builtin_aarch64_usdot_prodv16qi_suss (__a, __b, __r);\n }\n \n __extension__ extern __inline int32x2_t"}]}