{"sha": "bd5a664eb51c47c7bcae051600099e2f269e0306", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ1YTY2NGViNTFjNDdjN2JjYWUwNTE2MDAwOTllMmYyNjllMDMwNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-25T19:16:16Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-25T19:16:16Z"}, "message": "(init_loop): Remove decls of unused variables.\n\n(loop_optimize): Remove decl of unused variable END.\n(combine_movables): Remove decls of unused variables.\n(check_final_value): Remove decl of unused variable TEM.\n(check_dbra_loop): Remove decls of unused variables.\n(maybe_eliminate_biv): Remove decls of unused variables SET and V.\n\nFrom-SVN: r6889", "tree": {"sha": "2eaeaae35d86f8f51af659b6d745488a1a980ed5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2eaeaae35d86f8f51af659b6d745488a1a980ed5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd5a664eb51c47c7bcae051600099e2f269e0306", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd5a664eb51c47c7bcae051600099e2f269e0306", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd5a664eb51c47c7bcae051600099e2f269e0306", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd5a664eb51c47c7bcae051600099e2f269e0306/comments", "author": null, "committer": null, "parents": [{"sha": "5de22273e188a97fd1dec4c8737351662030a646", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5de22273e188a97fd1dec4c8737351662030a646", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5de22273e188a97fd1dec4c8737351662030a646"}], "stats": {"total": 12, "additions": 1, "deletions": 11}, "files": [{"sha": "cd5e2e0eef68202e7a43927baef4002a24227656", "filename": "gcc/loop.c", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd5a664eb51c47c7bcae051600099e2f269e0306/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd5a664eb51c47c7bcae051600099e2f269e0306/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=bd5a664eb51c47c7bcae051600099e2f269e0306", "patch": "@@ -297,9 +297,6 @@ init_loop ()\n {\n   char *free_point = (char *) oballoc (1);\n   rtx reg = gen_rtx (REG, word_mode, 0);\n-  rtx pow2 = GEN_INT (32);\n-  rtx lea;\n-  int i;\n \n   add_cost = rtx_cost (gen_rtx (PLUS, word_mode, reg, reg), SET);\n \n@@ -329,7 +326,6 @@ loop_optimize (f, dumpfile)\n {\n   register rtx insn;\n   register int i;\n-  rtx end;\n   rtx last_insn;\n \n   loop_dump_stream = dumpfile;\n@@ -1241,7 +1237,6 @@ combine_movables (movables, nregs)\n       {\n \tregister struct movable *m1;\n \tint regno = m->regno;\n-\trtx reg_note, reg_note1;\n \n \tbzero (matched_regs, nregs);\n \tmatched_regs[regno] = 1;\n@@ -4504,7 +4499,6 @@ check_final_value (v, loop_start, loop_end)\n {\n   struct iv_class *bl;\n   rtx final_value = 0;\n-  rtx tem;\n \n   bl = reg_biv_class[REGNO (v->src_reg)];\n \n@@ -5609,7 +5603,6 @@ check_dbra_loop (loop_end, insn_count, loop_start)\n   rtx jump_label;\n   rtx final_value;\n   rtx start_value;\n-  enum rtx_code branch_code;\n   rtx new_add_val;\n   rtx comparison;\n   rtx before_comparison;\n@@ -5770,8 +5763,6 @@ check_dbra_loop (loop_end, insn_count, loop_start)\n \t      || (bl->giv_count + bl->biv_count + num_mem_sets\n \t\t  + num_movables + 2 == insn_count)))\n \t{\n-\t  rtx condition = get_condition_for_loop (PREV_INSN (loop_end));\n-\t  int win;\n \t  rtx tem;\n \n \t  /* Loop can be reversed.  */\n@@ -5901,8 +5892,7 @@ maybe_eliminate_biv (bl, loop_start, end, eliminate_p, threshold, insn_count)\n      int threshold, insn_count;\n {\n   rtx reg = bl->biv->dest_reg;\n-  rtx p, set;\n-  struct induction *v;\n+  rtx p;\n \n   /* Scan all insns in the loop, stopping if we find one that uses the\n      biv in a way that we cannot eliminate.  */"}]}