{"sha": "05f5c42cb42c5088187d44cc45a5f671d19ad8c5", "node_id": "C_kwDOANBUbNoAKDA1ZjVjNDJjYjQyYzUwODgxODdkNDRjYzQ1YTVmNjcxZDE5YWQ4YzU", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-09-14T07:00:35Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-09-14T09:57:23Z"}, "message": "tree-optimization/106934 - avoid BIT_FIELD_REF of bitfields\n\nThe following avoids creating BIT_FIELD_REF of bitfields in\nupdate-address-taken.  The patch doesn't implement punning to\na full precision integer type but leaves a comment according to\nthat.\n\n\tPR tree-optimization/106934\n\t* tree-ssa.cc (non_rewritable_mem_ref_base): Avoid BIT_FIELD_REFs\n\tof bitfields.\n\t(maybe_rewrite_mem_ref_base): Likewise.\n\n\t* gfortran.dg/pr106934.f90: New testcase.", "tree": {"sha": "95d7fd9c6372a386f4b648dfbb1daf3fdd5f1bda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95d7fd9c6372a386f4b648dfbb1daf3fdd5f1bda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05f5c42cb42c5088187d44cc45a5f671d19ad8c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05f5c42cb42c5088187d44cc45a5f671d19ad8c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05f5c42cb42c5088187d44cc45a5f671d19ad8c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05f5c42cb42c5088187d44cc45a5f671d19ad8c5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93b09bf3246f413b8e469ebfd8ce43947c0073a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93b09bf3246f413b8e469ebfd8ce43947c0073a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93b09bf3246f413b8e469ebfd8ce43947c0073a6"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "ac58a3e82e3bab0accbcc3cf4be30bc6660cd514", "filename": "gcc/testsuite/gfortran.dg/pr106934.f90", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05f5c42cb42c5088187d44cc45a5f671d19ad8c5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr106934.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05f5c42cb42c5088187d44cc45a5f671d19ad8c5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr106934.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr106934.f90?ref=05f5c42cb42c5088187d44cc45a5f671d19ad8c5", "patch": "@@ -0,0 +1,7 @@\n+! { dg-do compile }\n+! { dg-options \"-O\" }\n+subroutine s\n+   logical(1) :: a = .true.\n+   logical(2) :: b\n+   a = transfer(b, a)\n+end"}, {"sha": "1a93ffdbd64ed29d54393d4e8a4d30af83e4d2ec", "filename": "gcc/tree-ssa.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05f5c42cb42c5088187d44cc45a5f671d19ad8c5/gcc%2Ftree-ssa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05f5c42cb42c5088187d44cc45a5f671d19ad8c5/gcc%2Ftree-ssa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.cc?ref=05f5c42cb42c5088187d44cc45a5f671d19ad8c5", "patch": "@@ -1459,6 +1459,8 @@ maybe_rewrite_mem_ref_base (tree *tp, bitmap suitable_for_renaming)\n \t       && (! INTEGRAL_TYPE_P (TREE_TYPE (*tp)) \n \t\t   || (wi::to_offset (TYPE_SIZE (TREE_TYPE (*tp)))\n \t\t       == TYPE_PRECISION (TREE_TYPE (*tp))))\n+\t       && (! INTEGRAL_TYPE_P (TREE_TYPE (sym))\n+\t\t   || type_has_mode_precision_p (TREE_TYPE (sym)))\n \t       && wi::umod_trunc (wi::to_offset (TYPE_SIZE (TREE_TYPE (*tp))),\n \t\t\t\t  BITS_PER_UNIT) == 0)\n \t{\n@@ -1531,6 +1533,10 @@ non_rewritable_mem_ref_base (tree ref)\n \t  && (! INTEGRAL_TYPE_P (TREE_TYPE (base))\n \t      || (wi::to_offset (TYPE_SIZE (TREE_TYPE (base)))\n \t\t  == TYPE_PRECISION (TREE_TYPE (base))))\n+\t  /* ???  Likewise for extracts from bitfields, we'd have\n+\t     to pun the base object to a size precision mode first.  */\n+\t  && (! INTEGRAL_TYPE_P (TREE_TYPE (decl))\n+\t      || type_has_mode_precision_p (TREE_TYPE (decl)))\n \t  && wi::umod_trunc (wi::to_offset (TYPE_SIZE (TREE_TYPE (base))),\n \t\t\t     BITS_PER_UNIT) == 0)\n \treturn NULL_TREE;"}]}