{"sha": "fd14d6cbc4c82fd22a77d7c38ec37b5c8a97f23c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQxNGQ2Y2JjNGM4MmZkMjJhNzdkN2MzOGVjMzdiNWM4YTk3ZjIzYw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-11-08T14:53:42Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-11-08T14:53:42Z"}, "message": "rs6000: Fix branch_comparison_operator\n\n\n\t* config/rs6000/predicates.md (branch_comparison_operator): Allow only\n\tthe comparison codes that make sense for the mode used, and only the\n\tcodes that can be done with a single branch instruction.\n\nFrom-SVN: r277976", "tree": {"sha": "e2d8d4ee4efa2e435bea0608a7a1001de65dc965", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2d8d4ee4efa2e435bea0608a7a1001de65dc965"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd14d6cbc4c82fd22a77d7c38ec37b5c8a97f23c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd14d6cbc4c82fd22a77d7c38ec37b5c8a97f23c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd14d6cbc4c82fd22a77d7c38ec37b5c8a97f23c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd14d6cbc4c82fd22a77d7c38ec37b5c8a97f23c/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2afeb1ca38dbb7c8708272452417426e46b4d6ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2afeb1ca38dbb7c8708272452417426e46b4d6ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2afeb1ca38dbb7c8708272452417426e46b4d6ed"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "c68960c9d8bbaeb5c72dde772927e1a9fe63c24a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd14d6cbc4c82fd22a77d7c38ec37b5c8a97f23c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd14d6cbc4c82fd22a77d7c38ec37b5c8a97f23c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fd14d6cbc4c82fd22a77d7c38ec37b5c8a97f23c", "patch": "@@ -1,3 +1,9 @@\n+2019-11-08  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/predicates.md (branch_comparison_operator): Allow only\n+\tthe comparison codes that make sense for the mode used, and only the\n+\tcodes that can be done with a single branch instruction.\n+\n 2019-11-08  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \tPR tree-optimization/92351"}, {"sha": "d0c3f9a73b5f19599930199079be075515a7f5a1", "filename": "gcc/config/rs6000/predicates.md", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd14d6cbc4c82fd22a77d7c38ec37b5c8a97f23c/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd14d6cbc4c82fd22a77d7c38ec37b5c8a97f23c/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpredicates.md?ref=fd14d6cbc4c82fd22a77d7c38ec37b5c8a97f23c", "patch": "@@ -1134,10 +1134,14 @@\n ;; validate_condition_mode is an assertion.\n (define_predicate \"branch_comparison_operator\"\n    (and (match_operand 0 \"comparison_operator\")\n-\t(and (match_test \"GET_MODE_CLASS (GET_MODE (XEXP (op, 0))) == MODE_CC\")\n-\t     (match_test \"validate_condition_mode (GET_CODE (op),\n-\t\t\t\t\t\t   GET_MODE (XEXP (op, 0))),\n-\t\t\t  1\"))))\n+\t(match_test \"GET_MODE_CLASS (GET_MODE (XEXP (op, 0))) == MODE_CC\")\n+\t(if_then_else (match_test \"GET_MODE (XEXP (op, 0)) == CCFPmode\n+\t\t\t\t   && !flag_finite_math_only\")\n+\t\t      (match_code \"lt,gt,eq,unordered,unge,unle,ne,ordered\")\n+\t\t      (match_code \"lt,ltu,le,leu,gt,gtu,ge,geu,eq,ne\"))\n+\t(match_test \"validate_condition_mode (GET_CODE (op),\n+\t\t\t\t\t      GET_MODE (XEXP (op, 0))),\n+\t\t     1\")))\n \n ;; Return 1 if OP is an unsigned comparison operator.\n (define_predicate \"unsigned_comparison_operator\""}]}