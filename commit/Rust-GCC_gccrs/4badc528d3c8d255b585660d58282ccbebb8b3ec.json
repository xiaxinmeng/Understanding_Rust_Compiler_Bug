{"sha": "4badc528d3c8d255b585660d58282ccbebb8b3ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJhZGM1MjhkM2M4ZDI1NWI1ODU2NjBkNTgyODJjY2JlYmI4YjNlYw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-05T06:56:12Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-05T06:56:12Z"}, "message": "(gen_highpart): If arg is function value hard reg,\n\nreturn a subreg of it (as in gen_lowpart_common).\n\nFrom-SVN: r6005", "tree": {"sha": "f678539120c26d4cbb249a54390f7f09cb96f72b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f678539120c26d4cbb249a54390f7f09cb96f72b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4badc528d3c8d255b585660d58282ccbebb8b3ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4badc528d3c8d255b585660d58282ccbebb8b3ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4badc528d3c8d255b585660d58282ccbebb8b3ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4badc528d3c8d255b585660d58282ccbebb8b3ec/comments", "author": null, "committer": null, "parents": [{"sha": "3bbe51e708bbd8541f23e80ac81b8aa53e38f10c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bbe51e708bbd8541f23e80ac81b8aa53e38f10c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bbe51e708bbd8541f23e80ac81b8aa53e38f10c"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "3f1e995c3f4ca76a44819246d0a2395495e0b1a3", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4badc528d3c8d255b585660d58282ccbebb8b3ec/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4badc528d3c8d255b585660d58282ccbebb8b3ec/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=4badc528d3c8d255b585660d58282ccbebb8b3ec", "patch": "@@ -891,6 +891,9 @@ gen_highpart (mode, x)\n \t\t/ UNITS_PER_WORD);\n #endif\n       if (REGNO (x) < FIRST_PSEUDO_REGISTER\n+\t  /* integrate.c can't handle parts of a return value register. */\n+\t  && (! REG_FUNCTION_VALUE_P (x)\n+\t      || ! rtx_equal_function_value_matters)\n \t  /* We want to keep the stack, frame, and arg pointers special.  */\n \t  && REGNO (x) != FRAME_POINTER_REGNUM\n #if FRAME_POINTER_REGNUM != ARG_POINTER_REGNUM"}]}