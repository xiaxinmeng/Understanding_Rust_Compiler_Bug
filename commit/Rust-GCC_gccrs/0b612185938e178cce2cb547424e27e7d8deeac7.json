{"sha": "0b612185938e178cce2cb547424e27e7d8deeac7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI2MTIxODU5MzhlMTc4Y2NlMmNiNTQ3NDI0ZTI3ZTdkOGRlZWFjNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2004-04-01T15:50:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2004-04-01T15:50:11Z"}, "message": "re PR c++/14755 (miscompilation in bitfielded signed integers)\n\n\tPR c++/14755\n\t* fold-const.c (fold) <EQ_EXPR>: Properly compute newconst in\n\t\"bitfld++ == const\" to \"++bitfld == const + incr\" transformations.\n\n\t* gcc.c-torture/execute/20040331-1.c: New test.\n\t* gcc.dg/20040331-1.c: New test.\n\nFrom-SVN: r80294", "tree": {"sha": "1615e48fce0014662e719f1204572e9e274a295f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1615e48fce0014662e719f1204572e9e274a295f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b612185938e178cce2cb547424e27e7d8deeac7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b612185938e178cce2cb547424e27e7d8deeac7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b612185938e178cce2cb547424e27e7d8deeac7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b612185938e178cce2cb547424e27e7d8deeac7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a150de295117d1e8f76a01180541eff7d0eb380c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a150de295117d1e8f76a01180541eff7d0eb380c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a150de295117d1e8f76a01180541eff7d0eb380c"}], "stats": {"total": 68, "additions": 46, "deletions": 22}, "files": [{"sha": "d49190d45372d675be935ae6c3a794efc8db64ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b612185938e178cce2cb547424e27e7d8deeac7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b612185938e178cce2cb547424e27e7d8deeac7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b612185938e178cce2cb547424e27e7d8deeac7", "patch": "@@ -1,3 +1,9 @@\n+2004-04-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/14755\n+\t* fold-const.c (fold) <EQ_EXPR>: Properly compute newconst in\n+\t\"bitfld++ == const\" to \"++bitfld == const + incr\" transformations.\n+\n 2004-04-01  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* expr.c (get_inner_reference): Use DECL_UNSIGNED, not TREE_UNSIGNED."}, {"sha": "772e64e5d2ae6a1d9f2310df4070dc4edbc6925a", "filename": "gcc/fold-const.c", "status": "modified", "additions": 8, "deletions": 22, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b612185938e178cce2cb547424e27e7d8deeac7/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b612185938e178cce2cb547424e27e7d8deeac7/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=0b612185938e178cce2cb547424e27e7d8deeac7", "patch": "@@ -7338,12 +7338,11 @@ fold (tree expr)\n \t  /* If VAROP is a reference to a bitfield, we must mask\n \t     the constant by the width of the field.  */\n \t  if (TREE_CODE (TREE_OPERAND (varop, 0)) == COMPONENT_REF\n-\t      && DECL_BIT_FIELD(TREE_OPERAND (TREE_OPERAND (varop, 0), 1)))\n+\t      && DECL_BIT_FIELD (TREE_OPERAND (TREE_OPERAND (varop, 0), 1)))\n \t    {\n \t      tree fielddecl = TREE_OPERAND (TREE_OPERAND (varop, 0), 1);\n \t      int size = TREE_INT_CST_LOW (DECL_SIZE (fielddecl));\n-\t      tree folded_compare;\n-\t      tree mask = 0;\n+\t      tree folded_compare, shift;\n \n \t      /* First check whether the comparison would come out\n \t\t always the same.  If we don't do that we would\n@@ -7355,25 +7354,12 @@ fold (tree expr)\n \t\t  || integer_onep (folded_compare))\n \t\treturn omit_one_operand (type, folded_compare, varop);\n \n-\t      if (size < HOST_BITS_PER_WIDE_INT)\n-\t\t{\n-\t\t  unsigned HOST_WIDE_INT lo = ((unsigned HOST_WIDE_INT) 1\n-\t\t\t\t\t       << size) - 1;\n-\t\t  mask = build_int_2 (lo, 0);\n-\t\t}\n-\t      else if (size < 2 * HOST_BITS_PER_WIDE_INT)\n-\t\t{\n-\t\t  HOST_WIDE_INT hi = ((HOST_WIDE_INT) 1\n-\t\t\t\t      << (size - HOST_BITS_PER_WIDE_INT)) - 1;\n-\t\t  mask = build_int_2 (~0, hi);\n-\t\t}\n-\t\t   \n-\t      if (mask)\n-\t\t{\n-\t\t  mask = fold_convert (TREE_TYPE (varop), mask);\n-\t\t  newconst = fold (build2 (BIT_AND_EXPR, TREE_TYPE (varop),\n-\t\t\t\t\t   newconst, mask));\n-\t\t}\n+\t      shift = build_int_2 (TYPE_PRECISION (TREE_TYPE (varop)) - size,\n+\t\t\t\t   0);\n+\t      newconst = fold (build2 (LSHIFT_EXPR, TREE_TYPE (varop),\n+\t\t\t\t       newconst, shift));\n+\t      newconst = fold (build2 (RSHIFT_EXPR, TREE_TYPE (varop),\n+\t\t\t\t       newconst, shift));\n \t    }\n \n \t  return fold (build2 (code, type, varop, newconst));"}, {"sha": "af93d21eb559d90e8d7bf9a91f51a06936235d61", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b612185938e178cce2cb547424e27e7d8deeac7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b612185938e178cce2cb547424e27e7d8deeac7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0b612185938e178cce2cb547424e27e7d8deeac7", "patch": "@@ -1,3 +1,9 @@\n+2004-04-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/14755\n+\t* gcc.c-torture/execute/20040331-1.c: New test.\n+\t* gcc.dg/20040331-1.c: New test.\n+\n 2004-04-01  Paul Brook  <paul@codesourcery.com>\n \n \t* gcc.dg/arm-mmx-1.c: Add -mabi=iwmmxt to dg-options."}, {"sha": "67b3e3a2e0cea58baf2086bf6f9c85c5b68c524e", "filename": "gcc/testsuite/gcc.c-torture/execute/20040331-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b612185938e178cce2cb547424e27e7d8deeac7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040331-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b612185938e178cce2cb547424e27e7d8deeac7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040331-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040331-1.c?ref=0b612185938e178cce2cb547424e27e7d8deeac7", "patch": "@@ -0,0 +1,12 @@\n+/* PR c++/14755 */\n+extern void abort (void);\n+extern void exit (int);\n+\n+int\n+main (void)\n+{\n+  struct { int count: 31; } s = { 0 };\n+  while (s.count--)\n+    abort ();\n+  exit (0);\n+}"}, {"sha": "4cef3d3297aaf105bed6e01f378a65805533d2e1", "filename": "gcc/testsuite/gcc.dg/20040331-1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b612185938e178cce2cb547424e27e7d8deeac7/gcc%2Ftestsuite%2Fgcc.dg%2F20040331-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b612185938e178cce2cb547424e27e7d8deeac7/gcc%2Ftestsuite%2Fgcc.dg%2F20040331-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20040331-1.c?ref=0b612185938e178cce2cb547424e27e7d8deeac7", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fwrapv\" } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+int\n+main (void)\n+{\n+  struct { int count: 2; } s = { -2 };\n+  while (s.count-- != -2)\n+    abort ();\n+  exit (0);\n+}"}]}