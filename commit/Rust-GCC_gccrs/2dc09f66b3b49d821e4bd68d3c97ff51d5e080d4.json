{"sha": "2dc09f66b3b49d821e4bd68d3c97ff51d5e080d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRjMDlmNjZiM2I0OWQ4MjFlNGJkNjhkM2M5N2ZmNTFkNWUwODBkNA==", "commit": {"author": {"name": "Sam Tebbs", "email": "sam.tebbs@arm.com", "date": "2018-09-14T15:16:17Z"}, "committer": {"name": "Sam Tebbs", "email": "samtebbs@gcc.gnu.org", "date": "2018-09-14T15:16:17Z"}, "message": "[Aarch64] Added pattern to match zero extended bfxil\n\ngcc/\n2018-07-31  Sam Tebbs  <sam.tebbs@arm.com>\n\n\tPR target/85628\n\t* config/aarch64/aarch64.md (*aarch64_bfxilsi_uxtw): Define.\n\ngcc/testsuite\n2018-07-31  Sam Tebbs  <sam.tebbs@arm.com>\n\n\tPR target/85628\n\t* gcc.target/aarch64/combine_bfxil.c (combine_zero_extended_int, foo6):\n\tNew functions.\n\nFrom-SVN: r264315", "tree": {"sha": "0ffb94009540aca0b103cb1e71242d76924bd596", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ffb94009540aca0b103cb1e71242d76924bd596"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2dc09f66b3b49d821e4bd68d3c97ff51d5e080d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dc09f66b3b49d821e4bd68d3c97ff51d5e080d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dc09f66b3b49d821e4bd68d3c97ff51d5e080d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dc09f66b3b49d821e4bd68d3c97ff51d5e080d4/comments", "author": null, "committer": null, "parents": [{"sha": "d604907d646023dfbba8aa2f1f8ee89582d6f4f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d604907d646023dfbba8aa2f1f8ee89582d6f4f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d604907d646023dfbba8aa2f1f8ee89582d6f4f9"}], "stats": {"total": 59, "additions": 58, "deletions": 1}, "files": [{"sha": "68612fe4223daaf46af3b7de4856036fe61bcce5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dc09f66b3b49d821e4bd68d3c97ff51d5e080d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dc09f66b3b49d821e4bd68d3c97ff51d5e080d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2dc09f66b3b49d821e4bd68d3c97ff51d5e080d4", "patch": "@@ -1,3 +1,8 @@\n+2018-09-14  Sam Tebbs  <sam.tebbs@arm.com>\n+\n+\tPR target/85628\n+\t* config/aarch64/aarch64.md (*aarch64_bfxilsi_uxtw): Define.\n+\n 2018-09-14  Jason Merrill  <jason@redhat.com>\n \n \tFix --enable-gather-detailed-mem-stats."}, {"sha": "2c0dbab92aaf2aa97096d1f1438354a03b5f2149", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dc09f66b3b49d821e4bd68d3c97ff51d5e080d4/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dc09f66b3b49d821e4bd68d3c97ff51d5e080d4/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=2dc09f66b3b49d821e4bd68d3c97ff51d5e080d4", "patch": "@@ -5361,6 +5361,33 @@\n   [(set_attr \"type\" \"bfm\")]\n )\n \n+; Zero-extended version of above (aarch64_bfxil)\n+(define_insn \"*aarch64_bfxilsi_uxtw\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n+\t(zero_extend:DI (ior:SI (and:SI (match_operand:SI 1 \"register_operand\"\n+\t\t\t\t\t\"r,0\")\n+\t\t    (match_operand:SI 3 \"const_int_operand\" \"n, Ulc\"))\n+\t    (and:SI (match_operand:SI 2 \"register_operand\" \"0,r\")\n+\t\t    (match_operand:SI 4 \"const_int_operand\" \"Ulc, n\")))))]\n+  \"(INTVAL (operands[3]) == ~INTVAL (operands[4]))\n+  && (aarch64_high_bits_all_ones_p (INTVAL (operands[3]))\n+    || aarch64_high_bits_all_ones_p (INTVAL (operands[4])))\"\n+  {\n+    switch (which_alternative)\n+    {\n+      case 0:\n+\toperands[3] = GEN_INT (ctz_hwi (~INTVAL (operands[3])));\n+\treturn \"bfxil\\\\t%0, %1, 0, %3\";\n+      case 1:\n+\toperands[3] = GEN_INT (ctz_hwi (~INTVAL (operands[4])));\n+\treturn \"bfxil\\\\t%0, %2, 0, %3\";\n+      default:\n+\tgcc_unreachable ();\n+    }\n+  }\n+  [(set_attr \"type\" \"bfm\")]\n+)\n+\n ;; There are no canonicalisation rules for the position of the lshiftrt, ashift\n ;; operations within an IOR/AND RTX, therefore we have two patterns matching\n ;; each valid permutation."}, {"sha": "fcec319f3a02514cf35a7780e830161ad73b98a1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dc09f66b3b49d821e4bd68d3c97ff51d5e080d4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dc09f66b3b49d821e4bd68d3c97ff51d5e080d4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2dc09f66b3b49d821e4bd68d3c97ff51d5e080d4", "patch": "@@ -1,3 +1,9 @@\n+2018-09-14  Sam Tebbs  <sam.tebbs@arm.com>\n+\n+\tPR target/85628\n+\t* gcc.target/aarch64/combine_bfxil.c (combine_zero_extended_int, foo6):\n+\tNew functions.\n+\n 2018-09-14  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR tree-optimization/87259"}, {"sha": "98f6159fbda0978dd863f16d5d88dbff8c4b343f", "filename": "gcc/testsuite/gcc.target/aarch64/combine_bfxil.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dc09f66b3b49d821e4bd68d3c97ff51d5e080d4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcombine_bfxil.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dc09f66b3b49d821e4bd68d3c97ff51d5e080d4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcombine_bfxil.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcombine_bfxil.c?ref=2dc09f66b3b49d821e4bd68d3c97ff51d5e080d4", "patch": "@@ -3,6 +3,13 @@\n \n extern void abort (void);\n \n+unsigned long long\n+combine_zero_extended_int (unsigned int a, unsigned int b)\n+{\n+  /* { dg-final { scan-assembler-not \"uxtw\\\\t\" } } */\n+  return (a & 0xffff0000ll) | (b & 0x0000ffffll);\n+}\n+\n unsigned long long\n combine_balanced (unsigned long long a, unsigned long long b)\n {\n@@ -71,6 +78,13 @@ foo5 (unsigned int a, unsigned int b, unsigned int *c, unsigned int *d)\n   *d = combine_unbalanced_int (b, a);\n }\n \n+void\n+foo6 (unsigned int a, unsigned int b, unsigned long long *c, unsigned long long *d)\n+{\n+  *c = combine_zero_extended_int(a, b);\n+  *d = combine_zero_extended_int(b, a);\n+}\n+\n int\n main (void)\n {\n@@ -92,7 +106,12 @@ main (void)\n   foo5 (a2, b2, &c2, &d2);\n   if (c2 != 0x01234598) abort ();\n   if (d2 != 0xfedcba67) abort ();\n+\n+  unsigned long long c3, d3;\n+  foo6 (a2, b2, &c3, &d3);\n+  if (c3 != 0x0123ba98) abort ();\n+  if (d3 != 0xfedc4567) abort ();\n   return 0;\n }\n \n-/* { dg-final { scan-assembler-times \"bfxil\\\\t\" 10 } } */\n+/* { dg-final { scan-assembler-times \"bfxil\\\\t\" 13 } } */"}]}