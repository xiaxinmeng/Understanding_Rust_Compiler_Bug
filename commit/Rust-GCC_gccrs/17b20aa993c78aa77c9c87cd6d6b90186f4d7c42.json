{"sha": "17b20aa993c78aa77c9c87cd6d6b90186f4d7c42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdiMjBhYTk5M2M3OGFhNzdjOWM4N2NkNmQ2YjkwMTg2ZjRkN2M0Mg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-09-20T23:20:19Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-09-20T23:20:19Z"}, "message": "PR c++/87109 - wrong ctor with maybe-rvalue semantics.\n\n\t* call.c (build_user_type_conversion_1): Refine the maybe-rvalue\n\tcheck to only return if we're converting the return value to a base\n\tclass.\n\n\t* g++.dg/cpp0x/ref-qual19.C: Adjust the expected results.\n\t* g++.dg/cpp0x/ref-qual20.C: New test.\n\nFrom-SVN: r264452", "tree": {"sha": "87096e6587e4e5c1116736373a57567b9d624638", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87096e6587e4e5c1116736373a57567b9d624638"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17b20aa993c78aa77c9c87cd6d6b90186f4d7c42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17b20aa993c78aa77c9c87cd6d6b90186f4d7c42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17b20aa993c78aa77c9c87cd6d6b90186f4d7c42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17b20aa993c78aa77c9c87cd6d6b90186f4d7c42/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b7fb27b698da38fd13108ecc914613f85f66f9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b7fb27b698da38fd13108ecc914613f85f66f9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b7fb27b698da38fd13108ecc914613f85f66f9d"}], "stats": {"total": 99, "additions": 92, "deletions": 7}, "files": [{"sha": "b75d0c70589c31c1732042ded4937182b0643cf5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17b20aa993c78aa77c9c87cd6d6b90186f4d7c42/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17b20aa993c78aa77c9c87cd6d6b90186f4d7c42/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=17b20aa993c78aa77c9c87cd6d6b90186f4d7c42", "patch": "@@ -1,3 +1,10 @@\n+2018-09-20  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/87109 - wrong ctor with maybe-rvalue semantics.\n+\t* call.c (build_user_type_conversion_1): Refine the maybe-rvalue\n+\tcheck to only return if we're converting the return value to a base\n+\tclass.\n+\n 2018-09-20  Allan Sandfeld Jensen  <allan.jensen@qt.io>\n \n \t* g++spec.c (lang_specific_driver): Handle -r like -nostdlib."}, {"sha": "b2ca667c8b42ca6cf75101293a8293bb2ddc5e5f", "filename": "gcc/cp/call.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17b20aa993c78aa77c9c87cd6d6b90186f4d7c42/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17b20aa993c78aa77c9c87cd6d6b90186f4d7c42/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=17b20aa993c78aa77c9c87cd6d6b90186f4d7c42", "patch": "@@ -4034,10 +4034,12 @@ build_user_type_conversion_1 (tree totype, tree expr, int flags,\n     conv->bad_p = true;\n \n   /* We're performing the maybe-rvalue overload resolution and\n-     a conversion function is in play.  This isn't going to work\n-     because we would not end up with a suitable constructor.  */\n+     a conversion function is in play.  Reject converting the return\n+     value of the conversion function to a base class.  */\n   if ((flags & LOOKUP_PREFER_RVALUE) && !DECL_CONSTRUCTOR_P (cand->fn))\n-    return NULL;\n+    for (conversion *t = cand->second_conv; t; t = next_conversion (t))\n+      if (t->kind == ck_base)\n+\treturn NULL;\n \n   /* Remember that this was a list-initialization.  */\n   if (flags & LOOKUP_NO_NARROWING)"}, {"sha": "3b731944529bfbb518ce337125eda891d2f8d5f4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17b20aa993c78aa77c9c87cd6d6b90186f4d7c42/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17b20aa993c78aa77c9c87cd6d6b90186f4d7c42/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=17b20aa993c78aa77c9c87cd6d6b90186f4d7c42", "patch": "@@ -1,3 +1,9 @@\n+2018-09-20  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/87109 - wrong ctor with maybe-rvalue semantics.\n+\t* g++.dg/cpp0x/ref-qual19.C: Adjust the expected results.\n+\t* g++.dg/cpp0x/ref-qual20.C: New test.\n+\n 2018-09-20  Allan Sandfeld Jensen  <allan.jensen@qt.io>\n \n \t* g++.dg/ipa/pr64059.C: Removed now redundant -nostdlib."}, {"sha": "50f92977c49d2a44ecb61f0c0936c5c75c903166", "filename": "gcc/testsuite/g++.dg/cpp0x/ref-qual19.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17b20aa993c78aa77c9c87cd6d6b90186f4d7c42/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fref-qual19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17b20aa993c78aa77c9c87cd6d6b90186f4d7c42/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fref-qual19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fref-qual19.C?ref=17b20aa993c78aa77c9c87cd6d6b90186f4d7c42", "patch": "@@ -85,13 +85,13 @@ int\n main ()\n {\n   C c1 = f (A());\n-  if (c1.i != 1)\n+  if (c1.i != 2)\n     __builtin_abort ();\n   C c2 = f2 (A());\n   if (c2.i != 2)\n     __builtin_abort ();\n   C c3 = f3 ();\n-  if (c3.i != 1)\n+  if (c3.i != 2)\n     __builtin_abort ();\n   C c4 = f4 ();\n   if (c4.i != 2)\n@@ -100,13 +100,13 @@ main ()\n   if (c5.i != 2)\n     __builtin_abort ();\n   D c6 = f6 (B());\n-  if (c6.i != 3)\n+  if (c6.i != 4)\n     __builtin_abort ();\n   D c7 = f7 (B());\n   if (c7.i != 4)\n     __builtin_abort ();\n   D c8 = f8 ();\n-  if (c8.i != 3)\n+  if (c8.i != 4)\n     __builtin_abort ();\n   D c9 = f9 ();\n   if (c9.i != 4)"}, {"sha": "c8bd43643af64612d14e520af37f529dceed7e32", "filename": "gcc/testsuite/g++.dg/cpp0x/ref-qual20.C", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17b20aa993c78aa77c9c87cd6d6b90186f4d7c42/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fref-qual20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17b20aa993c78aa77c9c87cd6d6b90186f4d7c42/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fref-qual20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fref-qual20.C?ref=17b20aa993c78aa77c9c87cd6d6b90186f4d7c42", "patch": "@@ -0,0 +1,70 @@\n+// PR c++/87109\n+// { dg-do run { target c++11 } }\n+\n+#include <utility>\n+\n+struct Y {\n+  int y;\n+  Y(int y_) : y(y_) { }\n+};\n+struct X : public Y {\n+  int x;\n+  X(int x_, int y_) : x(x_), Y(y_) { }\n+};\n+\n+struct A {\n+  operator X() & { return { 0, 2 }; }\n+  operator X() && { return { 0, -1 }; }\n+};\n+\n+Y\n+f (A a)\n+{\n+  return a;\n+}\n+\n+Y\n+f2 (A a)\n+{\n+  return std::move (a);\n+}\n+\n+Y\n+f3 ()\n+{\n+  A a;\n+  return a;\n+}\n+\n+Y\n+f4 ()\n+{\n+  A a;\n+  return std::move (a);\n+}\n+\n+Y\n+f5 ()\n+{\n+  return A();\n+}\n+\n+int\n+main ()\n+{\n+  Y y1 = f (A());\n+  if (y1.y != 2)\n+    __builtin_abort ();\n+  Y y2 = f2 (A());\n+  if (y2.y != -1)\n+    __builtin_abort ();\n+  Y y3 = f3 ();\n+  if (y3.y != 2)\n+    __builtin_abort ();\n+  Y y4 = f4 ();\n+  if (y4.y != -1)\n+    __builtin_abort ();\n+  Y y5 = f5 ();\n+  if (y5.y != -1)\n+    __builtin_abort ();\n+}"}]}