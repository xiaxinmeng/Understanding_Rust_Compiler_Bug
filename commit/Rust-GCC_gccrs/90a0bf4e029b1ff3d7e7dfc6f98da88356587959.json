{"sha": "90a0bf4e029b1ff3d7e7dfc6f98da88356587959", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBhMGJmNGUwMjliMWZmM2Q3ZTdkZmM2Zjk4ZGE4ODM1NjU4Nzk1OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-03-07T19:46:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-03-07T19:46:11Z"}, "message": "re PR translation/79999 (possible typo in gimplify.c: depend(sink:))\n\n\tPR translation/79999\n\t* gimplify.c (gimplify_omp_ordered): Reword diagnostics to talk about\n\tdepend clause with source (or sink) modifier.\n\t* omp-expand.c (expand_omp_ordered_sink): Likewise.\n\n\t* c-c++-common/gomp/doacross-1.c: Adjust expected diagnostics.\n\t* c-c++-common/gomp/doacross-3.c: New test.\n\nFrom-SVN: r269468", "tree": {"sha": "02abd3b5296ff04e5f4777a2bd13cdb03d76c567", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02abd3b5296ff04e5f4777a2bd13cdb03d76c567"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90a0bf4e029b1ff3d7e7dfc6f98da88356587959", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90a0bf4e029b1ff3d7e7dfc6f98da88356587959", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90a0bf4e029b1ff3d7e7dfc6f98da88356587959", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90a0bf4e029b1ff3d7e7dfc6f98da88356587959/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "459d21c6cffb2c74d2644e21db372ba8a0c27eb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/459d21c6cffb2c74d2644e21db372ba8a0c27eb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/459d21c6cffb2c74d2644e21db372ba8a0c27eb6"}], "stats": {"total": 89, "additions": 77, "deletions": 12}, "files": [{"sha": "e2ece539fe471d34569d9ec03aafa47a6d862464", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a0bf4e029b1ff3d7e7dfc6f98da88356587959/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a0bf4e029b1ff3d7e7dfc6f98da88356587959/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90a0bf4e029b1ff3d7e7dfc6f98da88356587959", "patch": "@@ -1,5 +1,10 @@\n 2019-03-07  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR translation/79999\n+\t* gimplify.c (gimplify_omp_ordered): Reword diagnostics to talk about\n+\tdepend clause with source (or sink) modifier.\n+\t* omp-expand.c (expand_omp_ordered_sink): Likewise.\n+\n \tPR target/89602\n \t* config/i386/sse.md (avx512f_mov<ssescalarmodelower>_mask,\n \t*avx512f_load<mode>_mask, avx512f_store<mode>_mask): New define_insns."}, {"sha": "6d7a314719dec98f7da83f895c77cbb6358437e6", "filename": "gcc/gimplify.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a0bf4e029b1ff3d7e7dfc6f98da88356587959/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a0bf4e029b1ff3d7e7dfc6f98da88356587959/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=90a0bf4e029b1ff3d7e7dfc6f98da88356587959", "patch": "@@ -12145,8 +12145,8 @@ gimplify_omp_ordered (tree expr, gimple_seq body)\n \t    if (!fail && i != gimplify_omp_ctxp->loop_iter_var.length () / 2)\n \t      {\n \t\terror_at (OMP_CLAUSE_LOCATION (c),\n-\t\t\t  \"number of variables in %<depend(sink)%> \"\n-\t\t\t  \"clause does not match number of \"\n+\t\t\t  \"number of variables in %<depend%> clause with \"\n+\t\t\t  \"%<sink%> modifier does not match number of \"\n \t\t\t  \"iteration variables\");\n \t\tfailures++;\n \t      }\n@@ -12158,8 +12158,8 @@ gimplify_omp_ordered (tree expr, gimple_seq body)\n \t    if (source_c)\n \t      {\n \t\terror_at (OMP_CLAUSE_LOCATION (c),\n-\t\t\t  \"more than one %<depend(source)%> clause on an \"\n-\t\t\t  \"%<ordered%> construct\");\n+\t\t\t  \"more than one %<depend%> clause with %<source%> \"\n+\t\t\t  \"modifier on an %<ordered%> construct\");\n \t\tfailures++;\n \t      }\n \t    else\n@@ -12169,8 +12169,9 @@ gimplify_omp_ordered (tree expr, gimple_seq body)\n   if (source_c && sink_c)\n     {\n       error_at (OMP_CLAUSE_LOCATION (source_c),\n-\t\t\"%<depend(source)%> clause specified together with \"\n-\t\t\"%<depend(sink:)%> clauses on the same construct\");\n+\t\t\"%<depend%> clause with %<source%> modifier specified \"\n+\t\t\"together with %<depend%> clauses with %<sink%> modifier \"\n+\t\t\"on the same construct\");\n       failures++;\n     }\n "}, {"sha": "89a3a3232671954418ee5b2892891fb6ad2f0bb7", "filename": "gcc/omp-expand.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a0bf4e029b1ff3d7e7dfc6f98da88356587959/gcc%2Fomp-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a0bf4e029b1ff3d7e7dfc6f98da88356587959/gcc%2Fomp-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-expand.c?ref=90a0bf4e029b1ff3d7e7dfc6f98da88356587959", "patch": "@@ -2147,8 +2147,8 @@ expand_omp_ordered_sink (gimple_stmt_iterator *gsi, struct omp_for_data *fd,\n \t      forward = tree_int_cst_sgn (step) != -1;\n \t    }\n \t  if (forward ^ OMP_CLAUSE_DEPEND_SINK_NEGATIVE (deps))\n-\t    warning_at (loc, 0, \"%<depend(sink)%> clause waiting for \"\n-\t\t\t\t\"lexically later iteration\");\n+\t    warning_at (loc, 0, \"%<depend%> clause with %<sink%> modifier \"\n+\t\t\t\t\"waiting for lexically later iteration\");\n \t  break;\n \t}\n       deps = TREE_CHAIN (deps);\n@@ -2284,8 +2284,9 @@ expand_omp_ordered_sink (gimple_stmt_iterator *gsi, struct omp_for_data *fd,\n \t\t\t       build_int_cst (itype, 0));\n \t  if (integer_zerop (t) && !warned_step)\n \t    {\n-\t      warning_at (loc, 0, \"%<depend(sink)%> refers to iteration never \"\n-\t\t\t\t  \"in the iteration space\");\n+\t      warning_at (loc, 0, \"%<depend%> clause with %<sink%> modifier \"\n+\t\t\t\t  \"refers to iteration never in the iteration \"\n+\t\t\t\t  \"space\");\n \t      warned_step = true;\n \t    }\n \t  cond = fold_build2_loc (loc, BIT_AND_EXPR, boolean_type_node,"}, {"sha": "e2b22ba5436ed569af5972b9a4404eb849a64fb4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a0bf4e029b1ff3d7e7dfc6f98da88356587959/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a0bf4e029b1ff3d7e7dfc6f98da88356587959/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=90a0bf4e029b1ff3d7e7dfc6f98da88356587959", "patch": "@@ -1,5 +1,9 @@\n 2019-03-07  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR translation/79999\n+\t* c-c++-common/gomp/doacross-1.c: Adjust expected diagnostics.\n+\t* c-c++-common/gomp/doacross-3.c: New test.\n+\n \tPR target/89602\n \t* gcc.target/i386/avx512f-vmovss-1.c: New test.\n \t* gcc.target/i386/avx512f-vmovss-2.c: New test."}, {"sha": "eacaeaef80a467ddbcda3ddb00aae87c5279b0e3", "filename": "gcc/testsuite/c-c++-common/gomp/doacross-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a0bf4e029b1ff3d7e7dfc6f98da88356587959/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fdoacross-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a0bf4e029b1ff3d7e7dfc6f98da88356587959/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fdoacross-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fdoacross-1.c?ref=90a0bf4e029b1ff3d7e7dfc6f98da88356587959", "patch": "@@ -38,11 +38,11 @@ foo (void)\n   for (i = 0; i < 64; i++)\n     {\n       #pragma omp ordered depend (sink: i - 1) depend (sink: i - 2)\n-      #pragma omp ordered depend (source) depend (source) /* { dg-error \"more than one .depend.source.. clause on an\" } */\n+      #pragma omp ordered depend (source) depend (source) /* { dg-error \"more than one .depend. clause with .source. modifier on an .ordered. construct\" } */\n     }\n   #pragma omp for ordered (1)\n   for (i = 0; i < 64; i++)\n     {\n-      #pragma omp ordered depend (sink: i - 1) depend (source) depend (sink: i - 2) /* { dg-error \"clause specified together with\" } */\n+      #pragma omp ordered depend (sink: i - 1) depend (source) depend (sink: i - 2) /* { dg-error \".depend. clause with .source. modifier specified together with .depend. clauses with .sink. modifier on the same construct\" } */\n     }\n }"}, {"sha": "6d7517271f69258473f0d656f8063ffaf6a3124b", "filename": "gcc/testsuite/c-c++-common/gomp/doacross-3.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90a0bf4e029b1ff3d7e7dfc6f98da88356587959/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fdoacross-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90a0bf4e029b1ff3d7e7dfc6f98da88356587959/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fdoacross-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fdoacross-3.c?ref=90a0bf4e029b1ff3d7e7dfc6f98da88356587959", "patch": "@@ -0,0 +1,54 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fopenmp\" } */\n+\n+void\n+foo (void)\n+{\n+  int i, j;\n+  #pragma omp for ordered (1)\n+  for (i = 0; i < 64; i++)\n+    {\n+      #pragma omp ordered depend (sink: i + 1)\t/* { dg-warning \"'depend' clause with 'sink' modifier waiting for lexically later iteration\" } */\n+      #pragma omp ordered depend (source)\n+    }\n+  #pragma omp for ordered (1)\n+  for (i = 63; i >= 0; i--)\n+    {\n+      #pragma omp ordered depend (sink: i - 1)\t/* { dg-warning \"'depend' clause with 'sink' modifier waiting for lexically later iteration\" } */\n+      #pragma omp ordered depend (source)\n+    }\n+  #pragma omp for ordered (2) collapse (2)\n+  for (i = 0; i < 64; i++)\n+    for (j = 0; j < 64; j++)\n+      {\n+\t#pragma omp ordered depend (sink: i + 1, j - 2)\t/* { dg-warning \"'depend' clause with 'sink' modifier waiting for lexically later iteration\" } */\n+\t#pragma omp ordered depend (source)\n+      }\n+  #pragma omp for ordered (2) collapse (2)\n+  for (i = 63; i >= 0; --i)\n+    for (j = 0; j < 64; j++)\n+      {\n+\t#pragma omp ordered depend (sink: i - 2, j - 2)\t/* { dg-warning \"'depend' clause with 'sink' modifier waiting for lexically later iteration\" } */\n+\t#pragma omp ordered depend (source)\n+      }\n+  #pragma omp for ordered (2) collapse (2)\n+  for (i = 0; i < 64; i++)\n+    for (j = 0; j < 64; j++)\n+      {\n+\t#pragma omp ordered depend (sink: i - 1, j + 2)\n+\t#pragma omp ordered depend (source)\n+      }\n+  #pragma omp for ordered (2) collapse (2)\n+  for (i = 63; i >= 0; --i)\n+    for (j = 0; j < 64; j++)\n+      {\n+\t#pragma omp ordered depend (sink: i + 2, j + 2)\n+\t#pragma omp ordered depend (source)\n+      }\n+  #pragma omp for ordered (1)\n+  for (i = 0; i < 64; i += 2)\n+    {\n+      #pragma omp ordered depend (sink: i - 1)\t/* { dg-warning \"'depend' clause with 'sink' modifier refers to iteration never in the iteration space\" } */\n+      #pragma omp ordered depend (source)\n+    }\n+}"}]}