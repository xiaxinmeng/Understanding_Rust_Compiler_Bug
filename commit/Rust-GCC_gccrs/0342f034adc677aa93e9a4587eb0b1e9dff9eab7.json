{"sha": "0342f034adc677aa93e9a4587eb0b1e9dff9eab7", "node_id": "C_kwDOANBUbNoAKDAzNDJmMDM0YWRjNjc3YWE5M2U5YTQ1ODdlYjBiMWU5ZGZmOWVhYjc", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-08-18T00:16:43Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-08-18T00:16:43Z"}, "message": "Daily bump.", "tree": {"sha": "edbace84f625d5f6c224410b997f8a34b0f53c30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edbace84f625d5f6c224410b997f8a34b0f53c30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0342f034adc677aa93e9a4587eb0b1e9dff9eab7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0342f034adc677aa93e9a4587eb0b1e9dff9eab7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0342f034adc677aa93e9a4587eb0b1e9dff9eab7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0342f034adc677aa93e9a4587eb0b1e9dff9eab7/comments", "author": null, "committer": null, "parents": [{"sha": "c352361b5eec003d5f26feaf1ef58a0c55f659ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c352361b5eec003d5f26feaf1ef58a0c55f659ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c352361b5eec003d5f26feaf1ef58a0c55f659ad"}], "stats": {"total": 247, "additions": 246, "deletions": 1}, "files": [{"sha": "e193ffafa8d5ac4c4c1906611dd8def2d16ba4e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0342f034adc677aa93e9a4587eb0b1e9dff9eab7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0342f034adc677aa93e9a4587eb0b1e9dff9eab7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0342f034adc677aa93e9a4587eb0b1e9dff9eab7", "patch": "@@ -1,3 +1,101 @@\n+2022-08-17  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR target/106640\n+\t* config/i386/i386-features.cc\n+\t(timde_scalar_chain::compute_convert_gain): Replace incorrect use\n+\tof XINT with INTVAL (XEXP (src, 1)).\n+\n+2022-08-17  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* gimple-range-path.cc\n+\t(path_range_query::compute_ranges_in_block): Remove\n+\tset_root_oracle call.\n+\t(path_range_query::compute_ranges): Pass ranger oracle to\n+\treset_path.\n+\t* value-relation.cc (path_oracle::reset_path): Set root oracle.\n+\t* value-relation.h (path_oracle::reset_path): Add root oracle\n+\targument.\n+\n+2022-08-17  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/89780\n+\t* diagnostic-spec.cc (nowarn_spec_t::nowarn_spec_t): Handle\n+\tOPT_Wpessimizing_move and OPT_Wredundant_move.\n+\t* diagnostic-spec.h (nowarn_spec_t): Add NW_REDUNDANT enumerator.\n+\n+2022-08-17  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/46539\n+\t* common.opt (static-libquadmath): New option.\n+\t* gcc.cc (driver_handle_option): Always accept -static-libquadmath.\n+\t* config/darwin.h (LINK_SPEC): Handle -static-libquadmath.\n+\n+2022-08-17  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* lto-cgraph.cc (input_offload_tables): Improve requires diagnostic\n+\twhen filenames come out identically.\n+\n+2022-08-17  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR middle-end/106548\n+\t* omp-low.cc (lower_rec_input_clauses): Use build_outer_var_ref\n+\tfor 'simd' linear-step values that are variable.\n+\n+2022-08-17  Tobias Burnus  <tobias@codesourcery.com>\n+\t    Chung-Lin Tang  <cltang@codesourcery.com>\n+\n+\tPR c++/104493\n+\t* gimplify.cc (omp_notice_variable): Call omp_mappable_type\n+\tinstead of removed langhook.\n+\t* omp-general.h (omp_mappable_type): New prototype.\n+\t* omp-general.cc (omp_mappable_type):  New; moved from ...\n+\t* langhooks.cc (lhd_omp_mappable_type): ... here.\n+\t* langhooks-def.h (lhd_omp_mappable_type,\n+\tLANG_HOOKS_OMP_MAPPABLE_TYPE): Remove.\n+\t(LANG_HOOKS_FOR_TYPES_INITIALIZER): Remote the latter.\n+\t* langhooks.h (struct lang_hooks_for_types): Remove\n+\tomp_mappable_type.\n+\n+2022-08-17  Christophe Lyon  <christophe.lyon@arm.com>\n+\n+\t* config.gcc (arm): Define with_float to hard if target name ends\n+\twith 'hf'.\n+\n+2022-08-17  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-threadbackward.cc\n+\t(back_threader_profitability): Split profitable_path_p\n+\tinto possibly_profitable_path_p and itself, keep state\n+\tas new members.\n+\t(back_threader::m_profit): Remove.\n+\t(back_threader::find_paths): Likewise.\n+\t(back_threader::maybe_register_path): Take profitability\n+\tinstance as parameter.\n+\t(back_threader::find_paths_to_names): Likewise.  Use\n+\tpossibly_profitable_path_p and avoid the path range query\n+\twhen the path is currently too large.\n+\t(back_threader::find_paths): Fold into ...\n+\t(back_threader::maybe_thread_block): ... this.\n+\t(get_gimple_control_stmt): Remove.\n+\t(back_threader_profitability::possibly_profitable_path_p):\n+\tSplit out from profitable_path_p, do early profitability\n+\tchecks.\n+\t(back_threader_profitability::profitable_path_p): Do final\n+\tprofitability path after the taken edge has been determined.\n+\n+2022-08-17  Xi Ruoyao  <xry111@xry111.site>\n+\n+\t* config/loongarch/loongarch.md (fmax<mode>3): New RTL pattern.\n+\t(fmin<mode>3): Likewise.\n+\n+2022-08-17  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gimple-range-fold.cc (gimple_range_ssa_names): New.\n+\t* gimple-range-fold.h (gimple_range_ssa_names): New prototype.\n+\t* gimple-range-gori.cc (range_def_chain::get_def_chain): Move\n+\t  code to new routine.\n+\n 2022-08-16  Martin Liska  <mliska@suse.cz>\n \n \tPR target/106637"}, {"sha": "17147d2840a72401003a2accc8f51e61f231e071", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0342f034adc677aa93e9a4587eb0b1e9dff9eab7/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0342f034adc677aa93e9a4587eb0b1e9dff9eab7/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=0342f034adc677aa93e9a4587eb0b1e9dff9eab7", "patch": "@@ -1 +1 @@\n-20220817\n+20220818"}, {"sha": "a57d62f6a833a0cb205a42a026e7eca675e61100", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0342f034adc677aa93e9a4587eb0b1e9dff9eab7/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0342f034adc677aa93e9a4587eb0b1e9dff9eab7/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=0342f034adc677aa93e9a4587eb0b1e9dff9eab7", "patch": "@@ -1,3 +1,11 @@\n+2022-08-17  Tobias Burnus  <tobias@codesourcery.com>\n+\t    Chung-Lin Tang  <cltang@codesourcery.com>\n+\n+\tPR c++/104493\n+\t* c-decl.cc (c_decl_attributes, finish_decl): Call omp_mappable_type\n+\tinstead of removed langhook.\n+\t* c-typeck.cc (c_finish_omp_clauses): Likewise.\n+\n 2022-08-11  Marek Polacek  <polacek@redhat.com>\n \n \tPR middle-end/102633"}, {"sha": "63dda6ace6fe589d5613aec5e24100338124c5b1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0342f034adc677aa93e9a4587eb0b1e9dff9eab7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0342f034adc677aa93e9a4587eb0b1e9dff9eab7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0342f034adc677aa93e9a4587eb0b1e9dff9eab7", "patch": "@@ -1,3 +1,49 @@\n+2022-08-17  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/90428\n+\t* typeck.cc (can_do_rvo_p): Rename to ...\n+\t(can_elide_copy_prvalue_p): ... this.\n+\t(maybe_warn_pessimizing_move): Extend the\n+\t-Wredundant-move warning to warn about std::move on a\n+\tconst-qualified object.\n+\n+2022-08-17  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/89780\n+\t* pt.cc (tsubst_copy_and_build) <case CALL_EXPR>: Maybe suppress\n+\t-Wpessimizing-move.\n+\t* typeck.cc (maybe_warn_pessimizing_move): Don't issue warnings\n+\tif they are suppressed.\n+\t(check_return_expr): Disable -Wpessimizing-move when returning\n+\ta dependent expression.\n+\n+2022-08-17  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/106276\n+\t* call.cc (build_over_call): Call maybe_warn_pessimizing_move.\n+\t* cp-tree.h (maybe_warn_pessimizing_move): Declare.\n+\t* decl.cc (build_aggr_init_full_exprs): Call\n+\tmaybe_warn_pessimizing_move.\n+\t* typeck.cc (maybe_warn_pessimizing_move): Handle TREE_LIST and\n+\tCONSTRUCTOR.  Add a bool parameter and use it.  Adjust a diagnostic\n+\tmessage.\n+\t(check_return_expr): Adjust the call to maybe_warn_pessimizing_move.\n+\n+2022-08-17  Tobias Burnus  <tobias@codesourcery.com>\n+\t    Chung-Lin Tang  <cltang@codesourcery.com>\n+\n+\tPR c++/104493\n+\t* cp-objcp-common.h (LANG_HOOKS_OMP_MAPPABLE_TYPE): Remove.\n+\t* cp-tree.h (cp_omp_mappable_type, cp_omp_emit_unmappable_type_notes):\n+\tRemove.\n+\t* decl2.cc (cp_omp_mappable_type_1, cp_omp_mappable_type,\n+\tcp_omp_emit_unmappable_type_notes): Remove.\n+\t(cplus_decl_attributes): Call omp_mappable_type instead of\n+\tremoved langhook.\n+\t* decl.cc (cp_finish_decl): Likewise; call cxx_incomplete_type_inform\n+\tin lieu of cp_omp_emit_unmappable_type_notes.\n+\t* semantics.cc (finish_omp_clauses): Likewise.\n+\n 2022-08-16  Tom Honermann  <tom@honermann.net>\n \n \tPR c++/106423"}, {"sha": "678059ba3cfa4b87a1e074bbec5ca1b331fbfdd0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0342f034adc677aa93e9a4587eb0b1e9dff9eab7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0342f034adc677aa93e9a4587eb0b1e9dff9eab7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0342f034adc677aa93e9a4587eb0b1e9dff9eab7", "patch": "@@ -1,3 +1,19 @@\n+2022-08-17  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/46539\n+\t* lang.opt (static-libquadmath): New option.\n+\t* invoke.texi (-static-libquadmath): Document it.\n+\t* options.cc (gfc_handle_option): Error out if -static-libquadmath\n+\tis passed but we do not support it.\n+\n+2022-08-17  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/106566\n+\t* openmp.cc (gfc_match_omp_clauses): Fix setting linear-step value\n+\tto 1 when not specified.\n+\t(gfc_match_omp_declare_simd): Accept module procedures.\n+\n 2022-08-16  Martin Liska  <mliska@suse.cz>\n \n \t* gfortran.texi: Fix link destination to a valid URL."}, {"sha": "c7c5abb483908f1f9543a1c1b18054a8825fd3f4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0342f034adc677aa93e9a4587eb0b1e9dff9eab7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0342f034adc677aa93e9a4587eb0b1e9dff9eab7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0342f034adc677aa93e9a4587eb0b1e9dff9eab7", "patch": "@@ -1,3 +1,55 @@\n+2022-08-17  Maciej W. Rozycki  <macro@embecosm.com>\n+\n+\t* gcc.target/riscv/fmax-snan.c: Add `dg-require-effective-target\n+\thard_float'.\n+\t* gcc.target/riscv/fmaxf-snan.c: Likewise.\n+\t* gcc.target/riscv/fmin-snan.c: Likewise.\n+\t* gcc.target/riscv/fminf-snan.c: Likewise.\n+\n+2022-08-17  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/67906\n+\t* g++.dg/cpp0x/Wredundant-move11.C: New test.\n+\n+2022-08-17  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/90428\n+\t* g++.dg/cpp0x/Wredundant-move1.C: Adjust dg-warning.\n+\t* g++.dg/cpp0x/Wredundant-move9.C: Likewise.\n+\t* g++.dg/cpp0x/Wredundant-move10.C: New test.\n+\n+2022-08-17  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/89780\n+\t* g++.dg/cpp0x/Wpessimizing-move3.C: Remove dg-warning.\n+\t* g++.dg/cpp0x/Wredundant-move2.C: Likewise.\n+\t* g++.dg/cpp0x/Wpessimizing-move9.C: New file.\n+\n+2022-08-17  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/106276\n+\t* g++.dg/cpp0x/Wpessimizing-move7.C: Add dg-warning.\n+\t* g++.dg/cpp0x/Wpessimizing-move8.C: New test.\n+\n+2022-08-17  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/106566\n+\t* gfortran.dg/gomp/declare-simd-4.f90: New test.\n+\t* gfortran.dg/gomp/declare-simd-5.f90: New test.\n+\t* gfortran.dg/gomp/declare-simd-6.f90: New test.\n+\n+2022-08-17  Tobias Burnus  <tobias@codesourcery.com>\n+\t    Chung-Lin Tang  <cltang@codesourcery.com>\n+\n+\tPR c++/104493\n+\t* g++.dg/gomp/unmappable-1.C: Remove dg-error; remove dg-note no\n+\tlonger shown as TYPE_MAIN_DECL is NULL.\n+\t* c-c++-common/gomp/map-incomplete-type.c: New test.\n+\n+2022-08-17  Xi Ruoyao  <xry111@xry111.site>\n+\n+\t* gcc.target/loongarch/fmax-fmin.c: New test.\n+\n 2022-08-16  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/warn/Wstringop-overflow-4.C: Only xfail for C++98."}, {"sha": "e163cd6e80ad9e9831a1ca8d8826804f7b38ec56", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0342f034adc677aa93e9a4587eb0b1e9dff9eab7/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0342f034adc677aa93e9a4587eb0b1e9dff9eab7/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=0342f034adc677aa93e9a4587eb0b1e9dff9eab7", "patch": "@@ -1,3 +1,14 @@\n+2022-08-17  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/46539\n+\t* acinclude.m4 (LIBQUADSPEC): From $FC -static-libgfortran -###\n+\toutput determine -Bstatic/-Bdynamic, -bstatic/-bdynamic,\n+\t-aarchive_shared/-adefault linker support or Darwin remapping\n+\tof -lgfortran to libgfortran.a%s and use that around or instead\n+\tof -lquadmath in LIBQUADSPEC.\n+\t* configure: Regenerated.\n+\n 2022-08-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libfortran/106079"}, {"sha": "cc7b4dc40b4de3918b30b0663613a01dd8863a30", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0342f034adc677aa93e9a4587eb0b1e9dff9eab7/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0342f034adc677aa93e9a4587eb0b1e9dff9eab7/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=0342f034adc677aa93e9a4587eb0b1e9dff9eab7", "patch": "@@ -1,3 +1,13 @@\n+2022-08-17  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR middle-end/106548\n+\t* testsuite/libgomp.c/linear-2.c: New test.\n+\n+2022-08-17  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* splay-tree.h: Fix splay_* macro unsetting if\n+\tsplay_tree_prefix is defined.\n+\n 2022-07-29  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* testsuite/libgomp.c-c++-common/pr106449-2.c: New test."}, {"sha": "48cd1e8224881dacb926c165daf0c699422afaec", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0342f034adc677aa93e9a4587eb0b1e9dff9eab7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0342f034adc677aa93e9a4587eb0b1e9dff9eab7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0342f034adc677aa93e9a4587eb0b1e9dff9eab7", "patch": "@@ -1,3 +1,7 @@\n+2022-08-17  Keef Aragon  <keef.aragon@konscious.net>\n+\n+\t* libsupc++/eh_alloc.cc (pool::free): Inverse comparison.\n+\n 2022-08-08  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* include/debug/formatter.h (__singular_value_init): New _Iterator_state enum entry."}]}