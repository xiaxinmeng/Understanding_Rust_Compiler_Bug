{"sha": "e8face4c5909cdc9a03029677d0612a82d557199", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThmYWNlNGM1OTA5Y2RjOWEwMzAyOTY3N2QwNjEyYTgyZDU1NzE5OQ==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-06-10T21:48:32Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-06-10T21:48:32Z"}, "message": "* init.c, misc.c, trans.c, utils.c: Remove dead code.\n\nFrom-SVN: r67735", "tree": {"sha": "8478b1a1a17730fe919518390f0cd21930827389", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8478b1a1a17730fe919518390f0cd21930827389"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8face4c5909cdc9a03029677d0612a82d557199", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8face4c5909cdc9a03029677d0612a82d557199", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8face4c5909cdc9a03029677d0612a82d557199", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8face4c5909cdc9a03029677d0612a82d557199/comments", "author": null, "committer": null, "parents": [{"sha": "907129969df130b1dd0b1e1870126f9bad99e2ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/907129969df130b1dd0b1e1870126f9bad99e2ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/907129969df130b1dd0b1e1870126f9bad99e2ee"}], "stats": {"total": 44, "additions": 5, "deletions": 39}, "files": [{"sha": "e55fe83ce3f184f2a65ee1202472fac7ddb1b74d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8face4c5909cdc9a03029677d0612a82d557199/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8face4c5909cdc9a03029677d0612a82d557199/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e8face4c5909cdc9a03029677d0612a82d557199", "patch": "@@ -1,3 +1,7 @@\n+2003-06-10  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* init.c, misc.c, trans.c, utils.c: Remove dead code.\n+\n 2003-06-09  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* Makefile.in: Replace \"host_canonical\" with \"host\" for autoconf"}, {"sha": "a57409933a0e24d5008344c69b6ef41a339987f1", "filename": "gcc/ada/init.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8face4c5909cdc9a03029677d0612a82d557199/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8face4c5909cdc9a03029677d0612a82d557199/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=e8face4c5909cdc9a03029677d0612a82d557199", "patch": "@@ -1623,16 +1623,6 @@ __gnat_initialize ()\n \n   __gnat_init_float ();\n \n-#ifdef __mips_vxworks\n-#if 0\n-  /* For now remove this handler, since it is causing interferences with gdb */\n-\n-  /* Connect the overflow trap directly to the __gnat_int_handler routine\n-   as it is not converted to a signal by VxWorks. */\n-\n-  intConnect (INUM_TO_IVEC (IV_TRAP_VEC), &__gnat_int_handler, IV_TRAP_VEC);\n-#endif\n-#endif\n }\n \n /***************************************/"}, {"sha": "17cc27cee1b75248676396f3b275f9981129d20a", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8face4c5909cdc9a03029677d0612a82d557199/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8face4c5909cdc9a03029677d0612a82d557199/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=e8face4c5909cdc9a03029677d0612a82d557199", "patch": "@@ -586,21 +586,8 @@ static void\n gnat_adjust_rli (rli)\n      record_layout_info rli ATTRIBUTE_UNUSED;\n {\n-#if 0\n-  /* This code seems to have no actual effect; record_align should already\n+  /* This function has no actual effect; record_align should already\n      reflect the largest alignment desired by a field.  jason 2003-04-01  */\n-  unsigned int record_align = rli->unpadded_align;\n-  tree field;\n-\n-  /* If any fields have variable size, we need to force the record to be at\n-     least as aligned as the alignment of that type.  */\n-  for (field = TYPE_FIELDS (rli->t); field; field = TREE_CHAIN (field))\n-    if (TREE_CODE (DECL_SIZE_UNIT (field)) != INTEGER_CST)\n-      record_align = MAX (record_align, DECL_ALIGN (field));\n-\n-  if (TYPE_PACKED (rli->t))\n-    rli->record_align = record_align;\n-#endif\n }\n \n /* Make a TRANSFORM_EXPR to later expand GNAT_NODE into code.  */"}, {"sha": "f3881d28c3481f17ed4ceacc92283e0023cdb1c0", "filename": "gcc/ada/trans.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8face4c5909cdc9a03029677d0612a82d557199/gcc%2Fada%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8face4c5909cdc9a03029677d0612a82d557199/gcc%2Fada%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftrans.c?ref=e8face4c5909cdc9a03029677d0612a82d557199", "patch": "@@ -532,14 +532,6 @@ tree_transform (gnat_node)\n \t  gnu_result = UI_To_gnu (Corresponding_Integer_Value (gnat_node),\n \t\t\t\t  gnu_result_type);\n \t  if (TREE_CONSTANT_OVERFLOW (gnu_result)\n-#if 0\n-\t      || (TREE_CODE (TYPE_MIN_VALUE (gnu_result_type)) == INTEGER_CST\n-\t\t  && tree_int_cst_lt (gnu_result,\n-\t\t\t\t      TYPE_MIN_VALUE (gnu_result_type)))\n-\t      || (TREE_CODE (TYPE_MAX_VALUE (gnu_result_type)) == INTEGER_CST\n-\t\t  && tree_int_cst_lt (TYPE_MAX_VALUE (gnu_result_type),\n-\t\t\t\t      gnu_result))\n-#endif\n \t      )\n \t    gigi_abort (305);\n \t}"}, {"sha": "a88c9a3219b9571381d78bab665e6e78d75d3f83", "filename": "gcc/ada/utils.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8face4c5909cdc9a03029677d0612a82d557199/gcc%2Fada%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8face4c5909cdc9a03029677d0612a82d557199/gcc%2Fada%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils.c?ref=e8face4c5909cdc9a03029677d0612a82d557199", "patch": "@@ -1814,13 +1814,6 @@ end_subprog_body ()\n   if (function_nesting_depth > 1)\n     ggc_pop_context ();\n \n-#if 0\n-  /* If we're sure this function is defined in this file then mark it\n-     as such */\n-  if (TREE_ASM_WRITTEN (current_function_decl))\n-    mark_fn_defined_in_this_file (current_function_decl);\n-#endif\n-\n   /* Throw away any VAR_DECLs we made for OUT parameters; they must\n      not be seen when we call this function and will be in\n      unallocated memory anyway.  */"}]}