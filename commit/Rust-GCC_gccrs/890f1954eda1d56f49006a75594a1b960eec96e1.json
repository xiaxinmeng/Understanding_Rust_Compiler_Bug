{"sha": "890f1954eda1d56f49006a75594a1b960eec96e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkwZjE5NTRlZGExZDU2ZjQ5MDA2YTc1NTk0YTFiOTYwZWVjOTZlMQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-06-13T10:11:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-06-13T10:11:54Z"}, "message": "exp_attr.adb, [...]: Minor reformatting.\n\n2014-06-13  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_attr.adb, exp_ch9.adb, lib-writ.adb, g-comlin.adb: Minor\n\treformatting.\n\t* sem_attr.adb: Minor code reformatting and simplification.\n\t* checks.adb: Fix minor typo.\n\nFrom-SVN: r211622", "tree": {"sha": "81b6e316a68c75f6d31fc84a528bce6dc276b641", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81b6e316a68c75f6d31fc84a528bce6dc276b641"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/890f1954eda1d56f49006a75594a1b960eec96e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/890f1954eda1d56f49006a75594a1b960eec96e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/890f1954eda1d56f49006a75594a1b960eec96e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/890f1954eda1d56f49006a75594a1b960eec96e1/comments", "author": null, "committer": null, "parents": [{"sha": "4de100256aeb9ab563d16e3418e270f814a719e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4de100256aeb9ab563d16e3418e270f814a719e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4de100256aeb9ab563d16e3418e270f814a719e8"}], "stats": {"total": 208, "additions": 96, "deletions": 112}, "files": [{"sha": "b40632556c82d503daa44b59cf0999613851e3a9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890f1954eda1d56f49006a75594a1b960eec96e1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890f1954eda1d56f49006a75594a1b960eec96e1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=890f1954eda1d56f49006a75594a1b960eec96e1", "patch": "@@ -1,3 +1,10 @@\n+2014-06-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_attr.adb, exp_ch9.adb, lib-writ.adb, g-comlin.adb: Minor\n+\treformatting.\n+\t* sem_attr.adb: Minor code reformatting and simplification.\n+\t* checks.adb: Fix minor typo.\n+\n 2014-06-13  Emmanuel Briot  <briot@adacore.com>\n \n \t* g-comlin.adb (Get_Argument): fix expansion"}, {"sha": "315b0760f2947d8d6569f15ee99bdeda7a507926", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890f1954eda1d56f49006a75594a1b960eec96e1/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890f1954eda1d56f49006a75594a1b960eec96e1/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=890f1954eda1d56f49006a75594a1b960eec96e1", "patch": "@@ -762,7 +762,7 @@ package body Checks is\n          Analyze (First (Actions (N)), Suppress => All_Checks);\n \n          --  If the address clause generates an alignment check and we are\n-         --  in ZPF or some restricted run-time, add a warning to explain\n+         --  in ZFP or some restricted run-time, add a warning to explain\n          --  the propagation warning that is generated by the check.\n \n          if Nkind (First (Actions (N))) = N_Raise_Program_Error"}, {"sha": "daa6b16a8c4e5c83cfab9dad4520fa5eda0ee1d9", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890f1954eda1d56f49006a75594a1b960eec96e1/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890f1954eda1d56f49006a75594a1b960eec96e1/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=890f1954eda1d56f49006a75594a1b960eec96e1", "patch": "@@ -3976,9 +3976,7 @@ package body Exp_Attr is\n             --  'Old appears will be checked or disabled according to the\n             --  current policy in effect.\n \n-            if Nkind (Subp) = N_Pragma\n-              and then not Is_Checked (Subp)\n-            then\n+            if Nkind (Subp) = N_Pragma and then not Is_Checked (Subp) then\n                return;\n             end if;\n \n@@ -4183,10 +4181,9 @@ package body Exp_Attr is\n                Analyze (N);\n                return;\n \n-            --  For elementary types, we call the W_xxx routine directly.\n-            --  Note that the effect of Write and Output is identical for\n-            --  the case of an elementary type, since there are no\n-            --  discriminants or bounds.\n+            --  For elementary types, we call the W_xxx routine directly. Note\n+            --  that the effect of Write and Output is identical for the case\n+            --  of an elementary type (there are no discriminants or bounds).\n \n             elsif Is_Elementary_Type (U_Type) then\n "}, {"sha": "e1a4d0f49a53cf8dff13e9a80f9d45b8a925e325", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 53, "deletions": 64, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890f1954eda1d56f49006a75594a1b960eec96e1/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890f1954eda1d56f49006a75594a1b960eec96e1/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=890f1954eda1d56f49006a75594a1b960eec96e1", "patch": "@@ -291,10 +291,10 @@ package body Exp_Ch9 is\n      (N   : Node_Id;\n       Pid : Node_Id) return Node_Id;\n    --  This routine constructs the unprotected version of a protected\n-   --  subprogram body, which is contains all of the code in the\n-   --  original, unexpanded body. This is the version of the protected\n-   --  subprogram that is called from all protected operations on the same\n-   --  object, including the protected version of the same subprogram.\n+   --  subprogram body, which is contains all of the code in the original,\n+   --  unexpanded body. This is the version of the protected subprogram that is\n+   --  called from all protected operations on the same object, including the\n+   --  protected version of the same subprogram.\n \n    procedure Build_Wrapper_Bodies\n      (Loc : Source_Ptr;\n@@ -532,7 +532,7 @@ package body Exp_Ch9 is\n             else\n                B :=\n                  Make_Selected_Component (Sloc,\n-                   Prefix => New_Copy_Tree (Tsk),\n+                   Prefix        => New_Copy_Tree (Tsk),\n                    Selector_Name => New_Occurrence_Of (Entity (Bound), Sloc));\n \n                Analyze_And_Resolve (B, Typ);\n@@ -541,8 +541,8 @@ package body Exp_Ch9 is\n             return\n               Make_Attribute_Reference (Sloc,\n                 Attribute_Name => Name_Pos,\n-                Prefix => New_Occurrence_Of (Etype (Bound), Sloc),\n-                Expressions => New_List (B));\n+                Prefix         => New_Occurrence_Of (Etype (Bound), Sloc),\n+                Expressions    => New_List (B));\n          end Actual_Discriminant_Ref;\n \n       --  Start of processing for Actual_Family_Offset\n@@ -592,7 +592,6 @@ package body Exp_Ch9 is\n       --  Now add lengths of preceding entries and entry families\n \n       Prev := First_Entity (Ttyp);\n-\n       while Chars (Prev) /= Chars (Ent)\n         or else (Ekind (Prev) /= Ekind (Ent))\n         or else not Sem_Ch6.Type_Conformant (Ent, Prev)\n@@ -659,7 +658,7 @@ package body Exp_Ch9 is\n               Left_Opnd  => Expr,\n               Right_Opnd =>\n                 Make_Op_Add (Sloc,\n-                  Left_Opnd =>\n+                  Left_Opnd  =>\n                     Actual_Family_Offset (Hi, Lo),\n                   Right_Opnd =>\n                     Make_Integer_Literal (Sloc, 1)));\n@@ -769,11 +768,9 @@ package body Exp_Ch9 is\n \n       Decl :=\n         Make_Object_Declaration (Loc,\n-          Defining_Identifier =>\n-            Make_Defining_Identifier (Loc, Name_uObject),\n-          Object_Definition =>\n-            New_Occurrence_Of (Obj_Ptr, Loc),\n-          Expression =>\n+          Defining_Identifier => Make_Defining_Identifier (Loc, Name_uObject),\n+          Object_Definition   => New_Occurrence_Of (Obj_Ptr, Loc),\n+          Expression          =>\n             Unchecked_Convert_To (Obj_Ptr, Make_Identifier (Loc, Name_uO)));\n       Set_Debug_Info_Needed (Defining_Identifier (Decl));\n       Prepend_To (Decls, Decl);\n@@ -863,19 +860,20 @@ package body Exp_Ch9 is\n \n             Statements =>  New_List (\n               Make_Procedure_Call_Statement (Sloc (Stats),\n-                Name => New_Occurrence_Of (\n+                Name                   => New_Occurrence_Of (\n                   RTE (RE_Exceptional_Complete_Rendezvous), Sloc (Stats)),\n                 Parameter_Associations => New_List (\n                   Make_Function_Call (Sloc (Stats),\n-                    Name => New_Occurrence_Of (\n-                      RTE (RE_Get_GNAT_Exception), Sloc (Stats)))))))));\n+                    Name =>\n+                      New_Occurrence_Of\n+                        (RTE (RE_Get_GNAT_Exception), Sloc (Stats)))))))));\n \n       Set_Parent (New_S, Astat); -- temp parent for Analyze call\n       Analyze_Exception_Handlers (Exception_Handlers (New_S));\n       Expand_Exception_Handlers (New_S);\n \n-      --  Exceptional_Complete_Rendezvous must be called with abort\n-      --  still deferred, which is the case for a \"when all others\" handler.\n+      --  Exceptional_Complete_Rendezvous must be called with abort still\n+      --  deferred, which is the case for a \"when all others\" handler.\n \n       return New_S;\n    end Build_Accept_Body;\n@@ -886,8 +884,7 @@ package body Exp_Ch9 is\n \n    procedure Build_Activation_Chain_Entity (N : Node_Id) is\n       function Has_Activation_Chain (Stmt : Node_Id) return Boolean;\n-      --  Determine whether an extended return statement has an activation\n-      --  chain.\n+      --  Determine whether an extended return statement has activation chain\n \n       --------------------------\n       -- Has_Activation_Chain --\n@@ -1068,22 +1065,21 @@ package body Exp_Ch9 is\n       Set_Debug_Info_Needed (Def_Id);\n \n       return Make_Function_Specification (Loc,\n-        Defining_Unit_Name => Def_Id,\n+        Defining_Unit_Name       => Def_Id,\n         Parameter_Specifications => New_List (\n           Make_Parameter_Specification (Loc,\n             Defining_Identifier =>\n               Make_Defining_Identifier (Loc, Name_uO),\n-            Parameter_Type =>\n+            Parameter_Type      =>\n               New_Occurrence_Of (RTE (RE_Address), Loc)),\n \n           Make_Parameter_Specification (Loc,\n             Defining_Identifier =>\n               Make_Defining_Identifier (Loc, Name_uE),\n-            Parameter_Type =>\n+            Parameter_Type      =>\n               New_Occurrence_Of (RTE (RE_Protected_Entry_Index), Loc))),\n \n-        Result_Definition =>\n-          New_Occurrence_Of (Standard_Boolean, Loc));\n+        Result_Definition        => New_Occurrence_Of (Standard_Boolean, Loc));\n    end Build_Barrier_Function_Specification;\n \n    --------------------------\n@@ -1098,7 +1094,7 @@ package body Exp_Ch9 is\n    begin\n       return\n         Make_Function_Call (Loc,\n-          Name => New_Occurrence_Of (E, Loc),\n+          Name                   => New_Occurrence_Of (E, Loc),\n           Parameter_Associations => New_List (Concurrent_Ref (N)));\n    end Build_Call_With_Task;\n \n@@ -1121,7 +1117,7 @@ package body Exp_Ch9 is\n          return;\n       end if;\n \n-      --  Find the declaration that created the access type. It is either a\n+      --  Find the declaration that created the access type, which is either a\n       --  type declaration, or an object declaration with an access definition,\n       --  in which case the type is anonymous.\n \n@@ -13785,7 +13781,8 @@ package body Exp_Ch9 is\n \n             Append_To (L,\n               Make_Procedure_Call_Statement (Loc,\n-                Name => New_Occurrence_Of (RTE (Called_Subp), Loc),\n+                Name                   =>\n+                  New_Occurrence_Of (RTE (Called_Subp), Loc),\n                 Parameter_Associations => Args));\n          end;\n       end if;\n@@ -13846,10 +13843,13 @@ package body Exp_Ch9 is\n                          Unchecked_Convert_To\n                           (RTE (RE_System_Interrupt_Id), Expr),\n                          Make_Attribute_Reference (Loc,\n-                           Prefix => Make_Selected_Component (Loc,\n-                              Make_Identifier (Loc, Name_uInit),\n-                              Duplicate_Subexpr_No_Checks\n-                                (Expression (Handler))),\n+                           Prefix         =>\n+                             Make_Selected_Component (Loc,\n+                               Prefix        =>\n+                                 Make_Identifier (Loc, Name_uInit),\n+                               Selector_Name =>\n+                                 Duplicate_Subexpr_No_Checks\n+                                   (Expression (Handler))),\n                            Attribute_Name => Name_Access))));\n                   end;\n                end if;\n@@ -13873,16 +13873,17 @@ package body Exp_Ch9 is\n                  Make_Procedure_Call_Statement (Loc,\n                    Name =>\n                      New_Occurrence_Of\n-                        (RTE (RE_Install_Restricted_Handlers), Loc),\n+                       (RTE (RE_Install_Restricted_Handlers), Loc),\n                    Parameter_Associations => Args));\n \n             else\n                if not Uses_Lock_Free (Defining_Identifier (Pdec)) then\n+\n                   --  First, prepends the _object argument\n \n                   Prepend_To (Args,\n                     Make_Attribute_Reference (Loc,\n-                      Prefix =>\n+                      Prefix         =>\n                         Make_Selected_Component (Loc,\n                           Prefix        => Make_Identifier (Loc, Name_uInit),\n                           Selector_Name =>\n@@ -13894,7 +13895,8 @@ package body Exp_Ch9 is\n \n                Append_To (L,\n                  Make_Procedure_Call_Statement (Loc,\n-                   Name => New_Occurrence_Of (RTE (RE_Install_Handlers), Loc),\n+                   Name                   =>\n+                     New_Occurrence_Of (RTE (RE_Install_Handlers), Loc),\n                    Parameter_Associations => Args));\n             end if;\n          end;\n@@ -14048,8 +14050,7 @@ package body Exp_Ch9 is\n          then\n             Append_To (Args,\n               Make_Selected_Component (Loc,\n-                Prefix        =>\n-                  Make_Identifier (Loc, Name_uInit),\n+                Prefix        => Make_Identifier (Loc, Name_uInit),\n                 Selector_Name =>\n                   Make_Identifier (Loc, Name_uRelative_Deadline)));\n \n@@ -14150,8 +14151,7 @@ package body Exp_Ch9 is\n                   Subtype_Mark => New_Occurrence_Of (Subp_Ptr_Typ, Loc),\n                   Expression   =>\n                     Make_Attribute_Reference (Loc,\n-                      Prefix =>\n-                        New_Occurrence_Of (Body_Proc, Loc),\n+                      Prefix         => New_Occurrence_Of (Body_Proc, Loc),\n                       Attribute_Name => Name_Unrestricted_Access))));\n \n          --  For the .NET/JVM cases revert to the original code below ???\n@@ -14160,8 +14160,7 @@ package body Exp_Ch9 is\n             Append_To (Args,\n               Unchecked_Convert_To (RTE (RE_Task_Procedure_Access),\n                 Make_Attribute_Reference (Loc,\n-                  Prefix =>\n-                    New_Occurrence_Of (Body_Proc, Loc),\n+                  Prefix         => New_Occurrence_Of (Body_Proc, Loc),\n                   Attribute_Name => Name_Address)));\n          end if;\n       end;\n@@ -14235,7 +14234,7 @@ package body Exp_Ch9 is\n \n       return\n         Make_Procedure_Call_Statement (Loc,\n-          Name => Name,\n+          Name                   => Name,\n           Parameter_Associations => Args);\n    end Make_Task_Create_Call;\n \n@@ -14306,7 +14305,6 @@ package body Exp_Ch9 is\n       Actual := First (Actuals);\n       Formal := Defining_Identifier (First (Formals));\n       Params := New_List;\n-\n       while Present (Actual) loop\n          if Is_By_Copy_Type (Etype (Actual)) then\n             --  Generate:\n@@ -14316,11 +14314,9 @@ package body Exp_Ch9 is\n \n             Append_To (Decls,\n               Make_Object_Declaration (Loc,\n-                Aliased_Present =>\n-                  True,\n-                Defining_Identifier =>\n-                  Temp_Nam,\n-                Object_Definition =>\n+                Aliased_Present     => True,\n+                Defining_Identifier => Temp_Nam,\n+                Object_Definition   =>\n                   New_Occurrence_Of (Etype (Formal), Loc)));\n \n             if Ekind (Formal) /= E_Out_Parameter then\n@@ -14335,21 +14331,17 @@ package body Exp_Ch9 is\n \n                Append_To (Stmts,\n                  Make_Assignment_Statement (Loc,\n-                   Name =>\n-                     Temp_Asn,\n-                   Expression =>\n-                     New_Copy_Tree (Actual)));\n+                   Name       => Temp_Asn,\n+                   Expression => New_Copy_Tree (Actual)));\n             end if;\n \n             --  Generate:\n             --    Jnn'unchecked_access\n \n             Append_To (Params,\n               Make_Attribute_Reference (Loc,\n-                Attribute_Name =>\n-                  Name_Unchecked_Access,\n-                Prefix =>\n-                  New_Occurrence_Of (Temp_Nam, Loc)));\n+                Attribute_Name => Name_Unchecked_Access,\n+                Prefix         => New_Occurrence_Of (Temp_Nam, Loc)));\n \n             Has_Param := True;\n \n@@ -14382,12 +14374,9 @@ package body Exp_Ch9 is\n \n       Append_To (Decls,\n         Make_Object_Declaration (Loc,\n-          Defining_Identifier =>\n-            P,\n-          Object_Definition =>\n-            New_Occurrence_Of (Blk_Typ, Loc),\n-          Expression =>\n-            Expr));\n+          Defining_Identifier => P,\n+          Object_Definition   => New_Occurrence_Of (Blk_Typ, Loc),\n+          Expression          => Expr));\n \n       return P;\n    end Parameter_Block_Pack;\n@@ -14420,7 +14409,7 @@ package body Exp_Ch9 is\n \n             Asnmt :=\n               Make_Assignment_Statement (Loc,\n-                Name =>\n+                Name       =>\n                   New_Copy (Actual),\n                 Expression =>\n                   Make_Explicit_Dereference (Loc,"}, {"sha": "43592949a83c69b8bc71d8c55dd33d5351f12d38", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890f1954eda1d56f49006a75594a1b960eec96e1/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890f1954eda1d56f49006a75594a1b960eec96e1/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=890f1954eda1d56f49006a75594a1b960eec96e1", "patch": "@@ -402,6 +402,7 @@ package body GNAT.Command_Line is\n       end if;\n \n       if Parser.Current_Argument > Parser.Arg_Count then\n+\n          --  If this is the first time this function is called\n \n          if Parser.Current_Index = 1 then"}, {"sha": "cdddcf33c9004f93c71dbef6951ba16031b77391", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890f1954eda1d56f49006a75594a1b960eec96e1/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890f1954eda1d56f49006a75594a1b960eec96e1/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=890f1954eda1d56f49006a75594a1b960eec96e1", "patch": "@@ -1445,7 +1445,7 @@ package body Lib.Writ is\n                   Write_Info_Str (Name_Buffer (1 .. Name_Len - 2));\n                end if;\n \n-               --  If Source_Reference pragma used output information\n+               --  If Source_Reference pragma used, output information\n \n                if Num_SRef_Pragmas (Sind) > 0 then\n                   Write_Info_Char (' ');"}, {"sha": "ebbbdc48037766d969960a3c94879faf8e36c410", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 29, "deletions": 39, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890f1954eda1d56f49006a75594a1b960eec96e1/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890f1954eda1d56f49006a75594a1b960eec96e1/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=890f1954eda1d56f49006a75594a1b960eec96e1", "patch": "@@ -2409,20 +2409,14 @@ package body Sem_Attr is\n          end if;\n       end if;\n \n-      --  Ada 2005 (AI-345): Ensure that the compiler gives exactly the current\n-      --  output compiling in Ada 95 mode for the case of ambiguous prefixes.\n-\n-      --  Is this comment right??? What is \"the current output\"??? If this\n-      --  is only about Ada 95 mode, why no test for Ada 95 at this point???\n-\n       if Is_Overloaded (P)\n         and then Aname /= Name_Access\n         and then Aname /= Name_Address\n         and then Aname /= Name_Code_Address\n         and then Aname /= Name_Result\n         and then Aname /= Name_Unchecked_Access\n       then\n-         --  The prefix must be resolvble by itself, without reference to the\n+         --  The prefix must be resolvable by itself, without reference to the\n          --  attribute. One case that requires special handling is a prefix\n          --  that is a function name, where one interpretation may be a\n          --  parameterless call. Entry attributes are handled specially below.\n@@ -2433,44 +2427,40 @@ package body Sem_Attr is\n             Check_Parameterless_Call (P);\n          end if;\n \n-         if Ada_Version < Ada_2005 then\n-            if Is_Overloaded (P) then\n-\n-               --  Ada 2005 (AI-345): Since protected and task types have\n-               --  primitive entry wrappers, the attributes Count, Caller and\n-               --  AST_Entry require a context check\n+         if Is_Overloaded (P) then\n \n-               if Nam_In (Aname, Name_Count, Name_Caller, Name_AST_Entry) then\n-                  declare\n-                     Count : Natural := 0;\n-                     I     : Interp_Index;\n-                     It    : Interp;\n+            --  Ada 2005 (AI-345): Since protected and task types have\n+            --  primitive entry wrappers, the attributes Count, Caller and\n+            --  AST_Entry require a context check\n \n-                  begin\n-                     Get_First_Interp (P, I, It);\n-                     while Present (It.Nam) loop\n-                        if Comes_From_Source (It.Nam) then\n-                           Count := Count + 1;\n-                        else\n-                           Remove_Interp (I);\n-                        end if;\n-\n-                        Get_Next_Interp (I, It);\n-                     end loop;\n+            if Nam_In (Aname, Name_Count, Name_Caller, Name_AST_Entry) then\n+               declare\n+                  Count : Natural := 0;\n+                  I     : Interp_Index;\n+                  It    : Interp;\n \n-                     if Count > 1 then\n-                        Error_Attr (\"ambiguous prefix for % attribute\", P);\n+               begin\n+                  Get_First_Interp (P, I, It);\n+                  while Present (It.Nam) loop\n+                     if Comes_From_Source (It.Nam) then\n+                        Count := Count + 1;\n                      else\n-                        Set_Is_Overloaded (P, False);\n+                        Remove_Interp (I);\n                      end if;\n-                  end;\n-               else\n-                  Error_Attr (\"ambiguous prefix for % attribute\", P);\n-               end if;\n-            end if;\n \n-         elsif Is_Overloaded (P) then\n-            Error_Attr (\"ambiguous prefix for % attribute\", P);\n+                     Get_Next_Interp (I, It);\n+                  end loop;\n+\n+                  if Count > 1 then\n+                     Error_Attr (\"ambiguous prefix for % attribute\", P);\n+                  else\n+                     Set_Is_Overloaded (P, False);\n+                  end if;\n+               end;\n+\n+            else\n+               Error_Attr (\"ambiguous prefix for % attribute\", P);\n+            end if;\n          end if;\n       end if;\n "}]}