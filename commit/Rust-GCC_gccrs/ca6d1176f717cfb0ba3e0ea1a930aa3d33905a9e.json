{"sha": "ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E2ZDExNzZmNzE3Y2ZiMGJhM2UwZWExYTkzMGFhM2QzMzkwNWE5ZQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-07-02T10:15:09Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-07-02T10:15:09Z"}, "message": "configure.ac: Check for Sun symbol versioning.\n\n\t* configure.ac: Check for Sun symbol versioning.\n\tCheck for memmove.\n\t* configure: Regenerate.\n\t* config.h.in: Regenerate.\n\n\t* Makefile.am [LIBSSP_USE_SYMVER]: Protect version_arg,\n\tversion_dep with LIBSSP_USE_SYMVER_GNU.\n\t[LIBSSP_USE_SYMVER_SUN]: Handle Sun symbol versioning.\n\t* Makefile.in: Regenerate.\n\n\t* ssp.map: Reformat.\n\n\t* memmove-chk.c: Change guard to HAVE_MEMMOVE.\n\nFrom-SVN: r161699", "tree": {"sha": "68173ee2d5bd4b1b5fc1a277f153743209eb7dda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68173ee2d5bd4b1b5fc1a277f153743209eb7dda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "baf7c318bbcad3acee65f8400c34665b9345f09a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baf7c318bbcad3acee65f8400c34665b9345f09a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baf7c318bbcad3acee65f8400c34665b9345f09a"}], "stats": {"total": 196, "additions": 163, "deletions": 33}, "files": [{"sha": "e947735b7a6981c3f548df9585942f45b5ba1dab", "filename": "libssp/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e/libssp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e/libssp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2FChangeLog?ref=ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e", "patch": "@@ -1,3 +1,19 @@\n+2010-07-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac: Check for Sun symbol versioning.\n+\tCheck for memmove.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\n+\t* Makefile.am [LIBSSP_USE_SYMVER]: Protect version_arg,\n+\tversion_dep with LIBSSP_USE_SYMVER_GNU.\n+\t[LIBSSP_USE_SYMVER_SUN]: Handle Sun symbol versioning.\n+\t* Makefile.in: Regenerate.\n+\n+\t* ssp.map: Reformat.\n+\n+\t* memmove-chk.c: Change guard to HAVE_MEMMOVE.\n+\n 2010-05-04  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR other/43620"}, {"sha": "e25bd8458ce27df51427cdaa8c6cfe75da9341fa", "filename": "libssp/Makefile.am", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e/libssp%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e/libssp%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2FMakefile.am?ref=ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e", "patch": "@@ -1,6 +1,6 @@\n ## Makefile for the toplevel directory of the libssp library.\n ##\n-## Copyright (C) 2005\n+## Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010\n ## Free Software Foundation, Inc.\n ##\n \n@@ -12,8 +12,23 @@ MAINT_CHARSET = latin1\n gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n \n if LIBSSP_USE_SYMVER\n+if LIBSSP_USE_SYMVER_GNU\n version_arg = -Wl,--version-script=$(srcdir)/ssp.map\n version_dep = $(srcdir)/ssp.map\n+endif\n+if LIBSSP_USE_SYMVER_SUN\n+version_arg = -Wl,-M,ssp.map-sun\n+version_dep = ssp.map-sun\n+ssp.map-sun : $(srcdir)/ssp.map \\\n+\t\t$(top_srcdir)/../contrib/make_sunver.pl \\\n+\t\t$(libssp_la_OBJECTS) $(libssp_la_LIBADD)\n+\tperl $(top_srcdir)/../contrib/make_sunver.pl \\\n+\t  $(srcdir)/ssp.map \\\n+\t  $(libssp_la_OBJECTS:%.lo=.libs/%.o) \\\n+\t `echo $(libssp_la_LIBADD) | \\\n+\t    sed 's,/\\([^/.]*\\)\\.la,/.libs/\\1.a,g'` \\\n+\t > $@ || (rm -f $@ ; exit 1)\n+endif\n else\n version_arg =\n version_dep ="}, {"sha": "d9f952fd50c6df61fe019e2cafec11b9adda0858", "filename": "libssp/Makefile.in", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e/libssp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e/libssp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2FMakefile.in?ref=ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e", "patch": "@@ -250,9 +250,11 @@ MAINT_CHARSET = latin1\n # May be used by various substitution variables.\n gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n @LIBSSP_USE_SYMVER_FALSE@version_arg = \n-@LIBSSP_USE_SYMVER_TRUE@version_arg = -Wl,--version-script=$(srcdir)/ssp.map\n+@LIBSSP_USE_SYMVER_GNU_TRUE@@LIBSSP_USE_SYMVER_TRUE@version_arg = -Wl,--version-script=$(srcdir)/ssp.map\n+@LIBSSP_USE_SYMVER_SUN_TRUE@@LIBSSP_USE_SYMVER_TRUE@version_arg = -Wl,-M,ssp.map-sun\n @LIBSSP_USE_SYMVER_FALSE@version_dep = \n-@LIBSSP_USE_SYMVER_TRUE@version_dep = $(srcdir)/ssp.map\n+@LIBSSP_USE_SYMVER_GNU_TRUE@@LIBSSP_USE_SYMVER_TRUE@version_dep = $(srcdir)/ssp.map\n+@LIBSSP_USE_SYMVER_SUN_TRUE@@LIBSSP_USE_SYMVER_TRUE@version_dep = ssp.map-sun\n AM_CFLAGS = -Wall\n toolexeclib_LTLIBRARIES = libssp.la libssp_nonshared.la\n libsubincludedir = $(libdir)/gcc/$(target_noncanonical)/$(gcc_version)/include\n@@ -694,6 +696,15 @@ uninstall-am: uninstall-nobase_libsubincludeHEADERS \\\n \tuninstall-am uninstall-nobase_libsubincludeHEADERS \\\n \tuninstall-toolexeclibLTLIBRARIES\n \n+@LIBSSP_USE_SYMVER_SUN_TRUE@@LIBSSP_USE_SYMVER_TRUE@ssp.map-sun : $(srcdir)/ssp.map \\\n+@LIBSSP_USE_SYMVER_SUN_TRUE@@LIBSSP_USE_SYMVER_TRUE@\t\t$(top_srcdir)/../contrib/make_sunver.pl \\\n+@LIBSSP_USE_SYMVER_SUN_TRUE@@LIBSSP_USE_SYMVER_TRUE@\t\t$(libssp_la_OBJECTS) $(libssp_la_LIBADD)\n+@LIBSSP_USE_SYMVER_SUN_TRUE@@LIBSSP_USE_SYMVER_TRUE@\tperl $(top_srcdir)/../contrib/make_sunver.pl \\\n+@LIBSSP_USE_SYMVER_SUN_TRUE@@LIBSSP_USE_SYMVER_TRUE@\t  $(srcdir)/ssp.map \\\n+@LIBSSP_USE_SYMVER_SUN_TRUE@@LIBSSP_USE_SYMVER_TRUE@\t  $(libssp_la_OBJECTS:%.lo=.libs/%.o) \\\n+@LIBSSP_USE_SYMVER_SUN_TRUE@@LIBSSP_USE_SYMVER_TRUE@\t `echo $(libssp_la_LIBADD) | \\\n+@LIBSSP_USE_SYMVER_SUN_TRUE@@LIBSSP_USE_SYMVER_TRUE@\t    sed 's,/\\([^/.]*\\)\\.la,/.libs/\\1.a,g'` \\\n+@LIBSSP_USE_SYMVER_SUN_TRUE@@LIBSSP_USE_SYMVER_TRUE@\t > $@ || (rm -f $@ ; exit 1)\n \n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded."}, {"sha": "2815ce7c4d58c0330af68ba8d1f55afdf8717199", "filename": "libssp/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e/libssp%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e/libssp%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Fconfig.h.in?ref=ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e", "patch": "@@ -21,6 +21,9 @@\n /* Define to 1 if you have the <malloc.h> header file. */\n #undef HAVE_MALLOC_H\n \n+/* Define to 1 if you have the `memmove' function. */\n+#undef HAVE_MEMMOVE\n+\n /* Define to 1 if you have the <memory.h> header file. */\n #undef HAVE_MEMORY_H\n "}, {"sha": "7722c9541488e3a2ca42b3ee03b6400c60f2bf22", "filename": "libssp/configure", "status": "modified", "additions": 72, "deletions": 13, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e/libssp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e/libssp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Fconfigure?ref=ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e", "patch": "@@ -625,6 +625,10 @@ LIBTOOL\n ssp_have_usable_vsnprintf\n EGREP\n GREP\n+LIBSSP_USE_SYMVER_SUN_FALSE\n+LIBSSP_USE_SYMVER_SUN_TRUE\n+LIBSSP_USE_SYMVER_GNU_FALSE\n+LIBSSP_USE_SYMVER_GNU_TRUE\n LIBSSP_USE_SYMVER_FALSE\n LIBSSP_USE_SYMVER_TRUE\n CPP\n@@ -4093,18 +4097,18 @@ fi\n \n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether symbol versioning is supported\" >&5\n $as_echo_n \"checking whether symbol versioning is supported... \" >&6; }\n-cat > conftest.map <<EOF\n-FOO_1.0 {\n-  global: *foo*; bar; local: *;\n-};\n-EOF\n-save_LDFLAGS=\"$LDFLAGS\"\n-LDFLAGS=\"$LDFLAGS -fPIC -shared -Wl,--version-script,./conftest.map\"\n if test x$gcc_no_link = xyes; then\n   # If we cannot link, we cannot build shared libraries, so do not use\n   # symbol versioning.\n   ssp_use_symver=no\n else\n+  save_LDFLAGS=\"$LDFLAGS\"\n+  LDFLAGS=\"$LDFLAGS -fPIC -shared -Wl,--version-script,./conftest.map\"\n+  cat > conftest.map <<EOF\n+FOO_1.0 {\n+  global: *foo*; bar; local: *;\n+};\n+EOF\n   if test x$gcc_no_link = xyes; then\n   as_fn_error \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n fi\n@@ -4120,24 +4124,71 @@ main ()\n }\n _ACEOF\n if ac_fn_c_try_link \"$LINENO\"; then :\n-  ssp_use_symver=yes\n+  ssp_use_symver=gnu\n else\n   ssp_use_symver=no\n fi\n rm -f core conftest.err conftest.$ac_objext \\\n     conftest$ac_exeext conftest.$ac_ext\n+  if test x$ssp_use_symver = xno; then\n+    LDFLAGS=\"$save_LDFLAGS\"\n+    LDFLAGS=\"$LDFLAGS -fPIC -shared -Wl,-M,./conftest.map\"\n+    # Sun ld cannot handle wildcards and treats all entries as undefined.\n+    cat > conftest.map <<EOF\n+FOO_1.0 {\n+  global: foo; local: *;\n+};\n+EOF\n+    if test x$gcc_no_link = xyes; then\n+  as_fn_error \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n+fi\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+int foo;\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ssp_use_symver=sun\n+else\n+  ssp_use_symver=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+  fi\n+  LDFLAGS=\"$save_LDFLAGS\"\n fi\n-LDFLAGS=\"$save_LDFLAGS\"\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ssp_use_symver\" >&5\n $as_echo \"$ssp_use_symver\" >&6; }\n- if test \"x$ssp_use_symver\" = xyes; then\n+ if test \"x$ssp_use_symver\" != xno; then\n   LIBSSP_USE_SYMVER_TRUE=\n   LIBSSP_USE_SYMVER_FALSE='#'\n else\n   LIBSSP_USE_SYMVER_TRUE='#'\n   LIBSSP_USE_SYMVER_FALSE=\n fi\n \n+ if test \"x$ssp_use_symver\" = xgnu; then\n+  LIBSSP_USE_SYMVER_GNU_TRUE=\n+  LIBSSP_USE_SYMVER_GNU_FALSE='#'\n+else\n+  LIBSSP_USE_SYMVER_GNU_TRUE='#'\n+  LIBSSP_USE_SYMVER_GNU_FALSE=\n+fi\n+\n+ if test \"x$ssp_use_symver\" = xsun; then\n+  LIBSSP_USE_SYMVER_SUN_TRUE=\n+  LIBSSP_USE_SYMVER_SUN_FALSE='#'\n+else\n+  LIBSSP_USE_SYMVER_SUN_TRUE='#'\n+  LIBSSP_USE_SYMVER_SUN_FALSE=\n+fi\n+\n \n \n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for grep that handles long lines and -e\" >&5\n@@ -4423,7 +4474,7 @@ if test x$gcc_no_link = xyes; then\n   $as_echo \"#define HAVE_STRNCAT 1\" >>confdefs.h\n \n else\n-  for ac_func in mempcpy strncpy strncat\n+  for ac_func in memmove mempcpy strncpy strncat\n do :\n   as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\"\n@@ -10591,7 +10642,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10594 \"configure\"\n+#line 10645 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10697,7 +10748,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10700 \"configure\"\n+#line 10751 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11096,6 +11147,14 @@ if test -z \"${LIBSSP_USE_SYMVER_TRUE}\" && test -z \"${LIBSSP_USE_SYMVER_FALSE}\";\n   as_fn_error \"conditional \\\"LIBSSP_USE_SYMVER\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${LIBSSP_USE_SYMVER_GNU_TRUE}\" && test -z \"${LIBSSP_USE_SYMVER_GNU_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBSSP_USE_SYMVER_GNU\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n+if test -z \"${LIBSSP_USE_SYMVER_SUN_TRUE}\" && test -z \"${LIBSSP_USE_SYMVER_SUN_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBSSP_USE_SYMVER_SUN\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n \n : ${CONFIG_STATUS=./config.status}\n ac_write_fail=0"}, {"sha": "005e3bd2260cf7b2cebbdf2fa998d4396e920998", "filename": "libssp/configure.ac", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e/libssp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e/libssp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Fconfigure.ac?ref=ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e", "patch": "@@ -72,23 +72,36 @@ if test x$ssp_hidden = xyes; then\n fi\n \n AC_MSG_CHECKING([whether symbol versioning is supported])\n-cat > conftest.map <<EOF\n-FOO_1.0 {\n-  global: *foo*; bar; local: *;\n-};\n-EOF\n-save_LDFLAGS=\"$LDFLAGS\"\n-LDFLAGS=\"$LDFLAGS -fPIC -shared -Wl,--version-script,./conftest.map\"\n if test x$gcc_no_link = xyes; then\n   # If we cannot link, we cannot build shared libraries, so do not use\n   # symbol versioning.\n   ssp_use_symver=no\n else\n-  AC_TRY_LINK([int foo;],[],[ssp_use_symver=yes],[ssp_use_symver=no])\n+  save_LDFLAGS=\"$LDFLAGS\"\n+  LDFLAGS=\"$LDFLAGS -fPIC -shared -Wl,--version-script,./conftest.map\"\n+  cat > conftest.map <<EOF\n+FOO_1.0 {\n+  global: *foo*; bar; local: *;\n+};\n+EOF\n+  AC_TRY_LINK([int foo;],[],[ssp_use_symver=gnu],[ssp_use_symver=no])\n+  if test x$ssp_use_symver = xno; then\n+    LDFLAGS=\"$save_LDFLAGS\"\n+    LDFLAGS=\"$LDFLAGS -fPIC -shared -Wl,-M,./conftest.map\"\n+    # Sun ld cannot handle wildcards and treats all entries as undefined.\n+    cat > conftest.map <<EOF\n+FOO_1.0 {\n+  global: foo; local: *;\n+};\n+EOF\n+    AC_TRY_LINK([int foo;],[],[ssp_use_symver=sun],[ssp_use_symver=no])\n+  fi\n+  LDFLAGS=\"$save_LDFLAGS\"\n fi\n-LDFLAGS=\"$save_LDFLAGS\"\n AC_MSG_RESULT($ssp_use_symver)\n-AM_CONDITIONAL(LIBSSP_USE_SYMVER, [test \"x$ssp_use_symver\" = xyes])\n+AM_CONDITIONAL(LIBSSP_USE_SYMVER, [test \"x$ssp_use_symver\" != xno])\n+AM_CONDITIONAL(LIBSSP_USE_SYMVER_GNU, [test \"x$ssp_use_symver\" = xgnu])\n+AM_CONDITIONAL(LIBSSP_USE_SYMVER_SUN, [test \"x$ssp_use_symver\" = xsun])\n \n AC_CHECK_HEADERS(alloca.h malloc.h paths.h syslog.h string.h unistd.h fcntl.h stdio.h limits.h)\n \n@@ -98,7 +111,7 @@ if test x$gcc_no_link = xyes; then\n   AC_DEFINE(HAVE_STRNCPY)\n   AC_DEFINE(HAVE_STRNCAT)\n else\n-  AC_CHECK_FUNCS(mempcpy strncpy strncat)\n+  AC_CHECK_FUNCS(memmove mempcpy strncpy strncat)\n fi\n \n AC_MSG_CHECKING([whether vsnprintf is usable])"}, {"sha": "c28e1b59f2f7e17ffef6ec039f80e6cbb31673b2", "filename": "libssp/memmove-chk.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e/libssp%2Fmemmove-chk.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e/libssp%2Fmemmove-chk.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Fmemmove-chk.c?ref=ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e", "patch": "@@ -1,5 +1,5 @@\n /* Checking memmove.\n-   Copyright (C) 2005, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2009, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -40,7 +40,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n extern void __chk_fail (void) __attribute__((__noreturn__));\n \n-#ifdef HAVE_MEMPCPY\n+#ifdef HAVE_MEMMOVE\n void *\n __memmove_chk (void *dest, const void *src, size_t len, size_t slen)\n {"}, {"sha": "34de964e368420a755f8d47c7fde5e616470f6b6", "filename": "libssp/ssp.map", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e/libssp%2Fssp.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e/libssp%2Fssp.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libssp%2Fssp.map?ref=ca6d1176f717cfb0ba3e0ea1a930aa3d33905a9e", "patch": "@@ -1,9 +1,22 @@\n LIBSSP_1.0 {\n   global:\n-    __stack_chk_fail; __stack_chk_guard; __chk_fail;\n-    __gets_chk; __memcpy_chk; __memmove_chk; __mempcpy_chk; __memset_chk;\n-    __snprintf_chk; __sprintf_chk; __stpcpy_chk; __strcat_chk; __strcpy_chk;\n-    __strncat_chk; __strncpy_chk; __vsnprintf_chk; __vsprintf_chk;\n+    __stack_chk_fail;\n+    __stack_chk_guard;\n+    __chk_fail;\n+    __gets_chk;\n+    __memcpy_chk;\n+    __memmove_chk;\n+    __mempcpy_chk;\n+    __memset_chk;\n+    __snprintf_chk;\n+    __sprintf_chk;\n+    __stpcpy_chk;\n+    __strcat_chk;\n+    __strcpy_chk;\n+    __strncat_chk;\n+    __strncpy_chk;\n+    __vsnprintf_chk;\n+    __vsprintf_chk;\n   local:\n     *;\n };"}]}