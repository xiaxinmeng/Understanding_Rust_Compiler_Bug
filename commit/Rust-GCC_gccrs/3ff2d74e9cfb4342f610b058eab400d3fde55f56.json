{"sha": "3ff2d74e9cfb4342f610b058eab400d3fde55f56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZmMmQ3NGU5Y2ZiNDM0MmY2MTBiMDU4ZWFiNDAwZDNmZGU1NWY1Ng==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-08-29T07:07:51Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-08-29T07:07:51Z"}, "message": "Handle mix/max pointer reductions in parloops\n\n2015-08-29  Tom de Vries  <tom@codesourcery.com>\n\n\tPR tree-optimization/46193\n\t* omp-low.c (omp_reduction_init): Handle pointer type for min or max\n\tclause.\n\n\t* gcc.dg/autopar/pr46193.c: New test.\n\n\t* testsuite/libgomp.c/pr46193.c: New test.\n\nFrom-SVN: r227315", "tree": {"sha": "9bf08e641c221177e8d579382c0f807bde76c21f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bf08e641c221177e8d579382c0f807bde76c21f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ff2d74e9cfb4342f610b058eab400d3fde55f56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ff2d74e9cfb4342f610b058eab400d3fde55f56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ff2d74e9cfb4342f610b058eab400d3fde55f56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ff2d74e9cfb4342f610b058eab400d3fde55f56/comments", "author": null, "committer": null, "parents": [{"sha": "40e1e8d7b9092973e769e92a559e764c74c71cac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40e1e8d7b9092973e769e92a559e764c74c71cac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40e1e8d7b9092973e769e92a559e764c74c71cac"}], "stats": {"total": 133, "additions": 133, "deletions": 0}, "files": [{"sha": "492ca7d05f69587554381a24aef643fb5512c1d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff2d74e9cfb4342f610b058eab400d3fde55f56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff2d74e9cfb4342f610b058eab400d3fde55f56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ff2d74e9cfb4342f610b058eab400d3fde55f56", "patch": "@@ -1,3 +1,9 @@\n+2015-08-29  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/46193\n+\t* omp-low.c (omp_reduction_init): Handle pointer type for min or max\n+\tclause.\n+\n 2015-08-28  Jeff Law  <law@redhat.com>\n \n \tPR lto/66752"}, {"sha": "aa2a598238d0a19eae76f14e76121c3db8e06620", "filename": "gcc/omp-low.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff2d74e9cfb4342f610b058eab400d3fde55f56/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff2d74e9cfb4342f610b058eab400d3fde55f56/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=3ff2d74e9cfb4342f610b058eab400d3fde55f56", "patch": "@@ -3412,6 +3412,12 @@ omp_reduction_init (tree clause, tree type)\n \t    real_maxval (&min, 1, TYPE_MODE (type));\n \t  return build_real (type, min);\n \t}\n+      else if (POINTER_TYPE_P (type))\n+\t{\n+\t  wide_int min\n+\t    = wi::min_value (TYPE_PRECISION (type), TYPE_SIGN (type));\n+\t  return wide_int_to_tree (type, min);\n+\t}\n       else\n \t{\n \t  gcc_assert (INTEGRAL_TYPE_P (type));\n@@ -3428,6 +3434,12 @@ omp_reduction_init (tree clause, tree type)\n \t    real_maxval (&max, 0, TYPE_MODE (type));\n \t  return build_real (type, max);\n \t}\n+      else if (POINTER_TYPE_P (type))\n+\t{\n+\t  wide_int max\n+\t    = wi::max_value (TYPE_PRECISION (type), TYPE_SIGN (type));\n+\t  return wide_int_to_tree (type, max);\n+\t}\n       else\n \t{\n \t  gcc_assert (INTEGRAL_TYPE_P (type));"}, {"sha": "08e4083123867623bacc074a4c58e703a263465a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff2d74e9cfb4342f610b058eab400d3fde55f56/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff2d74e9cfb4342f610b058eab400d3fde55f56/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3ff2d74e9cfb4342f610b058eab400d3fde55f56", "patch": "@@ -1,3 +1,8 @@\n+2015-08-29  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/46193\n+\t* gcc.dg/autopar/pr46193.c: New test.\n+\n 2015-08-28  Nathan Sidwell  <nathan@acm.org>\n \n \t* gcc/testsuite/gcc.dg/compat/struct-layout-1_generate.c: Simply"}, {"sha": "544a5dabcec3306de7b8d05e469c442d26b4c775", "filename": "gcc/testsuite/gcc.dg/autopar/pr46193.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff2d74e9cfb4342f610b058eab400d3fde55f56/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr46193.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff2d74e9cfb4342f610b058eab400d3fde55f56/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr46193.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fautopar%2Fpr46193.c?ref=3ff2d74e9cfb4342f610b058eab400d3fde55f56", "patch": "@@ -0,0 +1,38 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=2 -fdump-tree-parloops-details\" } */\n+\n+extern void abort (void);\n+\n+char *\n+foo (int count, char **list)\n+{\n+  char *minaddr = list[0];\n+  int i;\n+\n+  for (i = 0; i < count; i++)\n+    {\n+      char *addr = list[i];\n+      if (addr < minaddr)\n+\tminaddr = addr;\n+    }\n+\n+  return minaddr;\n+}\n+\n+char *\n+foo2 (int count, char **list)\n+{\n+  char *maxaddr = list[0];\n+  int i;\n+\n+  for (i = 0; i < count; i++)\n+    {\n+      char *addr = list[i];\n+      if (addr > maxaddr)\n+\tmaxaddr = addr;\n+    }\n+\n+  return maxaddr;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"parallelizing inner loop\" 2 \"parloops\" } } */"}, {"sha": "71e1fbaae42178ad6713d5315faed90181f80423", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff2d74e9cfb4342f610b058eab400d3fde55f56/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff2d74e9cfb4342f610b058eab400d3fde55f56/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=3ff2d74e9cfb4342f610b058eab400d3fde55f56", "patch": "@@ -1,3 +1,8 @@\n+2015-08-29  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/46193\n+\t* testsuite/libgomp.c/pr46193.c: New test.\n+\n 2015-08-24  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tlibgomp/"}, {"sha": "1e27faf85009a96a3a86c788976c2299cd011165", "filename": "libgomp/testsuite/libgomp.c/pr46193.c", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff2d74e9cfb4342f610b058eab400d3fde55f56/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr46193.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff2d74e9cfb4342f610b058eab400d3fde55f56/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr46193.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr46193.c?ref=3ff2d74e9cfb4342f610b058eab400d3fde55f56", "patch": "@@ -0,0 +1,67 @@\n+/* { dg-do run } */\n+/* { dg-additional-options \"-ftree-parallelize-loops=2\" } */\n+\n+extern void abort (void);\n+\n+char *\n+foo (int count, char **list)\n+{\n+  char *minaddr = list[0];\n+  int i;\n+\n+  for (i = 0; i < count; i++)\n+    {\n+      char *addr = list[i];\n+      if (addr < minaddr)\n+\tminaddr = addr;\n+    }\n+\n+  return minaddr;\n+}\n+\n+char *\n+foo2 (int count, char **list)\n+{\n+  char *maxaddr = list[0];\n+  int i;\n+\n+  for (i = 0; i < count; i++)\n+    {\n+      char *addr = list[i];\n+      if (addr > maxaddr)\n+\tmaxaddr = addr;\n+    }\n+\n+  return maxaddr;\n+}\n+\n+#define N 5\n+\n+static void\n+init (char **list)\n+{\n+  int i;\n+  for (i = 0; i < N; ++i)\n+    list[i] = (char *)&list[i];\n+}\n+\n+int\n+main (void)\n+{\n+  char *list[N];\n+  char * res;\n+\n+  init (list);\n+\n+  res = foo (N, list);\n+\n+  if (res != (char *)&list[0])\n+    abort ();\n+\n+  res = foo2 (N, list);\n+\n+  if (res != (char *)&list[N-1])\n+    abort ();\n+\n+  return 0;\n+}"}]}