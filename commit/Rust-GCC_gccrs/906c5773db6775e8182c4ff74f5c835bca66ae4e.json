{"sha": "906c5773db6775e8182c4ff74f5c835bca66ae4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA2YzU3NzNkYjY3NzVlODE4MmM0ZmY3NGY1YzgzNWJjYTY2YWU0ZQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2008-07-02T15:38:44Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2008-07-02T15:38:44Z"}, "message": "20030222-1.x: New file.\n\n\t* gcc.c-torture/execute/20030222-1.x: New file.\n\t* gcc.dg/tree-ssa/ssa-fre-3.c: Disable test on SPU.\n\t* gcc.dg/lower-subreg-1.c: Likewise.\n\nFrom-SVN: r137360", "tree": {"sha": "bfbe169105ea00307c66ce38818cfba39e9a9f3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfbe169105ea00307c66ce38818cfba39e9a9f3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/906c5773db6775e8182c4ff74f5c835bca66ae4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/906c5773db6775e8182c4ff74f5c835bca66ae4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/906c5773db6775e8182c4ff74f5c835bca66ae4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/906c5773db6775e8182c4ff74f5c835bca66ae4e/comments", "author": null, "committer": null, "parents": [{"sha": "8f9ddf6acff067428b2312626c50caf9956978b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f9ddf6acff067428b2312626c50caf9956978b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f9ddf6acff067428b2312626c50caf9956978b1"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "8a51dc0900d1010073f0f6678e26bbfed1c5cb8b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/906c5773db6775e8182c4ff74f5c835bca66ae4e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/906c5773db6775e8182c4ff74f5c835bca66ae4e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=906c5773db6775e8182c4ff74f5c835bca66ae4e", "patch": "@@ -1,3 +1,9 @@\n+2008-07-02  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* gcc.c-torture/execute/20030222-1.x: New file.\n+\t* gcc.dg/tree-ssa/ssa-fre-3.c: Disable test on SPU.\n+\t* gcc.dg/lower-subreg-1.c: Likewise.\n+\n 2008-07-02  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \tSPU single-precision FP does not support subnormals:"}, {"sha": "e195563ddd063c8a765ff975c88c14626afb3a1c", "filename": "gcc/testsuite/gcc.c-torture/execute/20030222-1.x", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/906c5773db6775e8182c4ff74f5c835bca66ae4e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030222-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/906c5773db6775e8182c4ff74f5c835bca66ae4e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030222-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030222-1.x?ref=906c5773db6775e8182c4ff74f5c835bca66ae4e", "patch": "@@ -0,0 +1,6 @@\n+if [istarget \"spu-*-*\"] {\n+    # Using inline assembly to convert long long to int is not working quite\n+    # right # on the SPU.  An extra shift-left-4-byte is needed.\n+    return 1\n+}\n+return 0"}, {"sha": "bb35d21bb506f3e8486fedcedb2f089b7affb3a5", "filename": "gcc/testsuite/gcc.dg/lower-subreg-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/906c5773db6775e8182c4ff74f5c835bca66ae4e/gcc%2Ftestsuite%2Fgcc.dg%2Flower-subreg-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/906c5773db6775e8182c4ff74f5c835bca66ae4e/gcc%2Ftestsuite%2Fgcc.dg%2Flower-subreg-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flower-subreg-1.c?ref=906c5773db6775e8182c4ff74f5c835bca66ae4e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { { ! mips64 } && { ! ia64-*-* } } } } */\n+/* { dg-do compile { target { { { ! mips64 } && { ! ia64-*-* } } && { ! spu-*-* } } } } */\n /* { dg-options \"-O -fdump-rtl-subreg\" } */\n /* { dg-require-effective-target ilp32 } */\n "}, {"sha": "85e444886d05166fdd16c9cc7402afa12dfd353e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/906c5773db6775e8182c4ff74f5c835bca66ae4e/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/906c5773db6775e8182c4ff74f5c835bca66ae4e/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-3.c?ref=906c5773db6775e8182c4ff74f5c835bca66ae4e", "patch": "@@ -5,7 +5,7 @@\n \n    When the condition is true, we distribute \"(int) (a + b)\" as\n    \"(int) a + (int) b\", otherwise we keep the original.  */\n-/* { dg-do compile { target { ! mips64 } } } */\n+/* { dg-do compile { target { { ! mips64 } && { ! spu-*-* } } } } */\n /* { dg-options \"-O -fwrapv -fdump-tree-fre-details\" } */\n \n /* From PR14844.  */"}]}