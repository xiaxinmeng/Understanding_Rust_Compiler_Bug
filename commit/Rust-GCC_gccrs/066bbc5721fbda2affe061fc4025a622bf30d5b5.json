{"sha": "066bbc5721fbda2affe061fc4025a622bf30d5b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY2YmJjNTcyMWZiZGEyYWZmZTA2MWZjNDAyNWE2MjJiZjMwZDViNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-07-31T08:24:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-07-31T08:24:58Z"}, "message": "re PR sanitizer/81604 (Ubsan type reporting can be bogus in some cases)\n\n\tPR sanitizer/81604\n\t* ubsan.c (ubsan_type_descriptor): For UBSAN_PRINT_ARRAY don't\n\tchange type to the element type, instead add eltype variable and\n\tuse it where we are interested in the element type.\n\n\t* c-c++-common/ubsan/pr81604.c: New test.\n\nFrom-SVN: r250728", "tree": {"sha": "f6856056cea7ca4d38b1682f111a0f33dddb0a52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6856056cea7ca4d38b1682f111a0f33dddb0a52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/066bbc5721fbda2affe061fc4025a622bf30d5b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/066bbc5721fbda2affe061fc4025a622bf30d5b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/066bbc5721fbda2affe061fc4025a622bf30d5b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/066bbc5721fbda2affe061fc4025a622bf30d5b5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d1e5925e46184273f930aa45f1ec4f87752998b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d1e5925e46184273f930aa45f1ec4f87752998b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d1e5925e46184273f930aa45f1ec4f87752998b"}], "stats": {"total": 54, "additions": 48, "deletions": 6}, "files": [{"sha": "176847911b3660f522491ee4dffa27de9d0fbeee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/066bbc5721fbda2affe061fc4025a622bf30d5b5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/066bbc5721fbda2affe061fc4025a622bf30d5b5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=066bbc5721fbda2affe061fc4025a622bf30d5b5", "patch": "@@ -1,5 +1,10 @@\n 2017-07-31  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR sanitizer/81604\n+\t* ubsan.c (ubsan_type_descriptor): For UBSAN_PRINT_ARRAY don't\n+\tchange type to the element type, instead add eltype variable and\n+\tuse it where we are interested in the element type.\n+\n \tPR tree-optimization/81603\n \t* ipa-polymorphic-call.c\n \t(ipa_polymorphic_call_context::ipa_polymorphic_call_context): Perform"}, {"sha": "e84a715c22a05a361c93df102093f1d7218d273b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/066bbc5721fbda2affe061fc4025a622bf30d5b5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/066bbc5721fbda2affe061fc4025a622bf30d5b5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=066bbc5721fbda2affe061fc4025a622bf30d5b5", "patch": "@@ -1,3 +1,8 @@\n+2017-07-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/81604\n+\t* c-c++-common/ubsan/pr81604.c: New test.\n+\n 2017-07-30  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/79793"}, {"sha": "a06de76b0235851450dd024331cd3505b5e2bfa1", "filename": "gcc/testsuite/c-c++-common/ubsan/pr81604.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/066bbc5721fbda2affe061fc4025a622bf30d5b5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr81604.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/066bbc5721fbda2affe061fc4025a622bf30d5b5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr81604.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr81604.c?ref=066bbc5721fbda2affe061fc4025a622bf30d5b5", "patch": "@@ -0,0 +1,31 @@\n+/* PR sanitizer/81604 */\n+/* { dg-do run } */\n+/* { dg-options \"-fsanitize=bounds,signed-integer-overflow\" } */\n+\n+long a[10];\n+\n+__attribute__((noinline, noclone)) long *\n+foo (int i)\n+{\n+  return &a[i];\n+}\n+\n+__attribute__((noinline, noclone)) long\n+bar (long x, long y)\n+{\n+  return x * y;\n+}\n+\n+int\n+main ()\n+{\n+  volatile int i = -1;\n+  volatile long l = __LONG_MAX__;\n+  long *volatile p;\n+  p = foo (i);\n+  l = bar (l, l);\n+  return 0;\n+}\n+\n+/* { dg-output \"index -1 out of bounds for type 'long int \\\\\\[10\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: \\[0-9]+ \\\\* \\[0-9]+ cannot be represented in type 'long int'\" } */"}, {"sha": "2580a58b6ebe0257ba1ad58efb9b78a2d1df501f", "filename": "gcc/ubsan.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/066bbc5721fbda2affe061fc4025a622bf30d5b5/gcc%2Fubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/066bbc5721fbda2affe061fc4025a622bf30d5b5/gcc%2Fubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fubsan.c?ref=066bbc5721fbda2affe061fc4025a622bf30d5b5", "patch": "@@ -402,6 +402,7 @@ ubsan_type_descriptor (tree type, enum ubsan_print_style pstyle)\n     /* We weren't able to determine the type name.  */\n     tname = \"<unknown>\";\n \n+  tree eltype = type;\n   if (pstyle == UBSAN_PRINT_POINTER)\n     {\n       pp_printf (&pretty_name, \"'%s%s%s%s%s%s%s\",\n@@ -452,12 +453,12 @@ ubsan_type_descriptor (tree type, enum ubsan_print_style pstyle)\n       pp_quote (&pretty_name);\n \n       /* Save the tree with stripped types.  */\n-      type = t;\n+      eltype = t;\n     }\n   else\n     pp_printf (&pretty_name, \"'%s'\", tname);\n \n-  switch (TREE_CODE (type))\n+  switch (TREE_CODE (eltype))\n     {\n     case BOOLEAN_TYPE:\n     case ENUMERAL_TYPE:\n@@ -467,9 +468,9 @@ ubsan_type_descriptor (tree type, enum ubsan_print_style pstyle)\n     case REAL_TYPE:\n       /* FIXME: libubsan right now only supports float, double and\n \t long double type formats.  */\n-      if (TYPE_MODE (type) == TYPE_MODE (float_type_node)\n-\t  || TYPE_MODE (type) == TYPE_MODE (double_type_node)\n-\t  || TYPE_MODE (type) == TYPE_MODE (long_double_type_node))\n+      if (TYPE_MODE (eltype) == TYPE_MODE (float_type_node)\n+\t  || TYPE_MODE (eltype) == TYPE_MODE (double_type_node)\n+\t  || TYPE_MODE (eltype) == TYPE_MODE (long_double_type_node))\n \ttkind = 0x0001;\n       else\n \ttkind = 0xffff;\n@@ -478,7 +479,7 @@ ubsan_type_descriptor (tree type, enum ubsan_print_style pstyle)\n       tkind = 0xffff;\n       break;\n     }\n-  tinfo = get_ubsan_type_info_for_type (type);\n+  tinfo = get_ubsan_type_info_for_type (eltype);\n \n   /* Create a new VAR_DECL of type descriptor.  */\n   const char *tmp = pp_formatted_text (&pretty_name);"}]}