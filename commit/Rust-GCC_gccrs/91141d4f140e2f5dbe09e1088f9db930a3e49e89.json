{"sha": "91141d4f140e2f5dbe09e1088f9db930a3e49e89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTExNDFkNGYxNDBlMmY1ZGJlMDllMTA4OGY5ZGI5MzBhM2U0OWU4OQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-19T01:50:40Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-19T01:50:40Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1013", "tree": {"sha": "77ccaa4253a407c3dc69f6c63cc2b89f79e46324", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77ccaa4253a407c3dc69f6c63cc2b89f79e46324"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91141d4f140e2f5dbe09e1088f9db930a3e49e89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91141d4f140e2f5dbe09e1088f9db930a3e49e89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91141d4f140e2f5dbe09e1088f9db930a3e49e89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91141d4f140e2f5dbe09e1088f9db930a3e49e89/comments", "author": null, "committer": null, "parents": [{"sha": "c3f3d7e145df868a9c362cf0583948ec76bf6ac1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3f3d7e145df868a9c362cf0583948ec76bf6ac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3f3d7e145df868a9c362cf0583948ec76bf6ac1"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "ffaac52794e14c33bdae43e001ad0256f4b4541e", "filename": "gcc/config/svr3.h", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91141d4f140e2f5dbe09e1088f9db930a3e49e89/gcc%2Fconfig%2Fsvr3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91141d4f140e2f5dbe09e1088f9db930a3e49e89/gcc%2Fconfig%2Fsvr3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsvr3.h?ref=91141d4f140e2f5dbe09e1088f9db930a3e49e89", "patch": "@@ -216,13 +216,32 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.\n /* CTOR_LIST_BEGIN and CTOR_LIST_END are machine-dependent\n    because they push on the stack.  */\n \n-#define DO_GLOBAL_CTORS_BODY\t\t\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  func_ptr *__CTOR_LIST__ = __builtin_alloca (0), *p;\t\t\t\\\n-  for (p = __CTOR_LIST__; *p; )\t\t\t\t\t\t\\\n-    (*p++) ();\t\t\t\t\t\t\t\t\\\n+#ifdef STACK_GROWS_DOWNWARD\n+\n+/* Constructor list on stack is in reverse order.  Go to the end of the\n+   list and go backwards to call constructors in the right order.  */\n+#define DO_GLOBAL_CTORS_BODY\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\\\n+  func_ptr *p, *beg = alloca (0);\t\t\t\t\\\n+  for (p = beg; *p; p++)\t\t\t\t\t\\\n+    ;\t\t\t\t\t\t\t\t\\\n+  while (p != beg)\t\t\t\t\t\t\\\n+    (*--p) ();\t\t\t\t\t\t\t\\\n } while (0)\n \n+#else\n+\n+/* Constructor list on stack is in correct order.  Just call them.  */\n+#define DO_GLOBAL_CTORS_BODY\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\\\n+  func_ptr *p, *beg = alloca (0);\t\t\t\t\\\n+  for (p = beg; *p; )\t\t\t\t\t\t\\\n+    (*p++) ();\t\t\t\t\t\t\t\\\n+#endif\t\t\t\t\t\t\t\t\\\n+} while (0)\n+\n+#endif /* STACK_GROWS_DOWNWARD */\n+\n /* Add extra sections .init and .fini, in addition to .bss from att386.h. */\n \n #undef EXTRA_SECTIONS"}]}