{"sha": "9386cdeee67582bdef3590ec0f9a8b1ab7600e59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM4NmNkZWVlNjc1ODJiZGVmMzU5MGVjMGY5YThiMWFiNzYwMGU1OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-09-21T14:02:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-09-21T14:02:27Z"}, "message": "re PR debug/67664 (Duplicate AT_const_value attributes in some c++ cases.)\n\n2015-09-21  Richard Biener  <rguenther@suse.de>\n\n\tPR debug/67664\n\t* dwarf2out.c (add_location_or_const_value_attribute): Remove\n\tattribute parameter.  Early exit if either DW_AT_const_value\n\tor DW_AT_location are present already.\n\t(gen_variable_die): Adjust caller.\n\t(dwarf2out_late_global_decl): Likewise.\n\n\t* g++.dg/debug/dwarf2/pr67764.C: New testcase.\n\nFrom-SVN: r227972", "tree": {"sha": "3060190ad1b1018a00a514adf4aab582c10767f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3060190ad1b1018a00a514adf4aab582c10767f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9386cdeee67582bdef3590ec0f9a8b1ab7600e59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9386cdeee67582bdef3590ec0f9a8b1ab7600e59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9386cdeee67582bdef3590ec0f9a8b1ab7600e59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9386cdeee67582bdef3590ec0f9a8b1ab7600e59/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce89c02e8661d0461aa8e21e2159ecb67dfe1145", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce89c02e8661d0461aa8e21e2159ecb67dfe1145", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce89c02e8661d0461aa8e21e2159ecb67dfe1145"}], "stats": {"total": 49, "additions": 39, "deletions": 10}, "files": [{"sha": "d275898d85a4697a14d56ef01c185ff97fd516f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9386cdeee67582bdef3590ec0f9a8b1ab7600e59/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9386cdeee67582bdef3590ec0f9a8b1ab7600e59/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9386cdeee67582bdef3590ec0f9a8b1ab7600e59", "patch": "@@ -1,3 +1,12 @@\n+2015-09-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/67664\n+\t* dwarf2out.c (add_location_or_const_value_attribute): Remove\n+\tattribute parameter.  Early exit if either DW_AT_const_value\n+\tor DW_AT_location are present already.\n+\t(gen_variable_die): Adjust caller.\n+\t(dwarf2out_late_global_decl): Likewise.\n+\n 2015-09-21  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/67657"}, {"sha": "598ba536b54a735f6c107562e3903929483644cd", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9386cdeee67582bdef3590ec0f9a8b1ab7600e59/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9386cdeee67582bdef3590ec0f9a8b1ab7600e59/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=9386cdeee67582bdef3590ec0f9a8b1ab7600e59", "patch": "@@ -3253,8 +3253,7 @@ static void insert_int (HOST_WIDE_INT, unsigned, unsigned char *);\n static void insert_wide_int (const wide_int &, unsigned char *, int);\n static void insert_float (const_rtx, unsigned char *);\n static rtx rtl_for_decl_location (tree);\n-static bool add_location_or_const_value_attribute (dw_die_ref, tree, bool,\n-\t\t\t\t\t\t   enum dwarf_attribute);\n+static bool add_location_or_const_value_attribute (dw_die_ref, tree, bool);\n static bool tree_add_const_value_attribute (dw_die_ref, tree);\n static bool tree_add_const_value_attribute_for_decl (dw_die_ref, tree);\n static void add_name_attribute (dw_die_ref, const char *);\n@@ -16136,8 +16135,7 @@ fortran_common (tree decl, HOST_WIDE_INT *value)\n    since we will need to refer to them each time the function is inlined.  */\n \n static bool\n-add_location_or_const_value_attribute (dw_die_ref die, tree decl, bool cache_p,\n-\t\t\t\t       enum dwarf_attribute attr)\n+add_location_or_const_value_attribute (dw_die_ref die, tree decl, bool cache_p)\n {\n   rtx rtl;\n   dw_loc_list_ref list;\n@@ -16150,7 +16148,8 @@ add_location_or_const_value_attribute (dw_die_ref die, tree decl, bool cache_p,\n   if (TREE_CODE (decl) == ERROR_MARK)\n     return false;\n \n-  if (get_AT (die, attr))\n+  if (get_AT (die, DW_AT_location)\n+      || get_AT (die, DW_AT_const_value))\n     return true;\n \n   gcc_assert (TREE_CODE (decl) == VAR_DECL || TREE_CODE (decl) == PARM_DECL\n@@ -16216,7 +16215,7 @@ add_location_or_const_value_attribute (dw_die_ref die, tree decl, bool cache_p,\n     }\n   if (list)\n     {\n-      add_AT_location_description (die, attr, list);\n+      add_AT_location_description (die, DW_AT_location, list);\n       return true;\n     }\n   /* None of that worked, so it must not really have a location;\n@@ -18116,7 +18115,7 @@ gen_formal_parameter_die (tree node, tree origin, bool emit_name_p,\n         equate_decl_number_to_die (node, parm_die);\n       if (! DECL_ABSTRACT_P (node_or_origin))\n \tadd_location_or_const_value_attribute (parm_die, node_or_origin,\n-\t\t\t\t\t       node == NULL, DW_AT_location);\n+\t\t\t\t\t       node == NULL);\n \n       break;\n \n@@ -19662,7 +19661,7 @@ gen_variable_die (tree decl, tree origin, dw_die_ref context_die)\n \tadd_pubname (decl_or_origin, var_die);\n       else\n \tadd_location_or_const_value_attribute (var_die, decl_or_origin,\n-\t\t\t\t\t       decl == NULL, DW_AT_location);\n+\t\t\t\t\t       decl == NULL);\n     }\n   else\n     tree_add_const_value_attribute_for_decl (var_die, decl_or_origin);\n@@ -21639,8 +21638,7 @@ dwarf2out_late_global_decl (tree decl)\n     {\n       dw_die_ref die = lookup_decl_die (decl);\n       if (die)\n-\tadd_location_or_const_value_attribute (die, decl, false,\n-\t\t\t\t\t       DW_AT_location);\n+\tadd_location_or_const_value_attribute (die, decl, false);\n     }\n }\n "}, {"sha": "43c22605def9ee50c781be6c5ffb1cc986594f61", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9386cdeee67582bdef3590ec0f9a8b1ab7600e59/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9386cdeee67582bdef3590ec0f9a8b1ab7600e59/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9386cdeee67582bdef3590ec0f9a8b1ab7600e59", "patch": "@@ -1,3 +1,8 @@\n+2015-09-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/67664\n+\t* g++.dg/debug/dwarf2/pr67764.C: New testcase.\n+\n 2015-09-21  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/64345"}, {"sha": "f32ec3c0c12a441c5b0ed2a47031c953ceed455b", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/pr67764.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9386cdeee67582bdef3590ec0f9a8b1ab7600e59/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr67764.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9386cdeee67582bdef3590ec0f9a8b1ab7600e59/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr67764.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr67764.C?ref=9386cdeee67582bdef3590ec0f9a8b1ab7600e59", "patch": "@@ -0,0 +1,17 @@\n+// PR debug/67664\n+// { dg-do compile }\n+// { dg-options \"-gdwarf-2 -dA\" }\n+\n+struct T\n+{\n+  static const int a = 0;\n+};\n+\n+int main()\n+{\n+  T t;\n+  return t.a;\n+}\n+\n+// Once for the value and once for the abbrev\n+// { dg-final { scan-assembler-times \"DW_AT_const_value\" 2 } }"}]}