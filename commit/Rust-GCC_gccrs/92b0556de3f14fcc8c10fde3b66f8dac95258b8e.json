{"sha": "92b0556de3f14fcc8c10fde3b66f8dac95258b8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJiMDU1NmRlM2YxNGZjYzhjMTBmZGUzYjY2ZjhkYWM5NTI1OGI4ZQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-10T00:39:17Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-10T00:39:17Z"}, "message": "(reload) [SMALL_REGISTER_CLASSES]: Try, at least,\n\nto avoid 2-groups whose second register is explicitly used.\n\nFrom-SVN: r6047", "tree": {"sha": "81c8f235b942e9c25b7545b7ff497322e3bfea7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81c8f235b942e9c25b7545b7ff497322e3bfea7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92b0556de3f14fcc8c10fde3b66f8dac95258b8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92b0556de3f14fcc8c10fde3b66f8dac95258b8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92b0556de3f14fcc8c10fde3b66f8dac95258b8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92b0556de3f14fcc8c10fde3b66f8dac95258b8e/comments", "author": null, "committer": null, "parents": [{"sha": "43a674af6f5e38f72c8b90640415ca467981e8ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43a674af6f5e38f72c8b90640415ca467981e8ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43a674af6f5e38f72c8b90640415ca467981e8ba"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "542c9d70c053b7157e2c182b7cd0303316272a70", "filename": "gcc/reload1.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92b0556de3f14fcc8c10fde3b66f8dac95258b8e/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92b0556de3f14fcc8c10fde3b66f8dac95258b8e/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=92b0556de3f14fcc8c10fde3b66f8dac95258b8e", "patch": "@@ -1695,6 +1695,34 @@ reload (first, global, dumpfile)\n \t\t\t}\n \t\t    }\n \t\t  /* We can't complete a group, so start one.  */\n+#ifdef SMALL_REGISTER_CLASSES\n+\t\t  /* Look for a pair neither of which is explicitly used.  */\n+\t\t  if (i == FIRST_PSEUDO_REGISTER)\n+\t\t    for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n+\t\t      {\n+\t\t\tint k;\n+\t\t\tj = potential_reload_regs[i];\n+\t\t\t/* Verify that J+1 is a potential reload reg.  */\n+\t\t\tfor (k = 0; k < FIRST_PSEUDO_REGISTER; k++)\n+\t\t\t  if (potential_reload_regs[k] == j + 1)\n+\t\t\t    break;\n+\t\t\tif (j >= 0 && j + 1 < FIRST_PSEUDO_REGISTER\n+\t\t\t    && k < FIRST_PSEUDO_REGISTER\n+\t\t\t    && spill_reg_order[j] < 0 && spill_reg_order[j + 1] < 0\n+\t\t\t    && TEST_HARD_REG_BIT (reg_class_contents[class], j)\n+\t\t\t    && TEST_HARD_REG_BIT (reg_class_contents[class], j + 1)\n+\t\t\t    && HARD_REGNO_MODE_OK (j, group_mode[class])\n+\t\t\t    && ! TEST_HARD_REG_BIT (counted_for_nongroups,\n+\t\t\t\t\t\t    j + 1)\n+\t\t\t    && ! TEST_HARD_REG_BIT (bad_spill_regs, j + 1)\n+\t\t\t    /* Reject J at this stage\n+\t\t\t       if J+1 was explicitly used.  */\n+\t\t\t    && ! regs_explicitly_used[j + 1])\n+\t\t\t  break;\n+\t\t      }\n+#endif\n+\t\t  /* Now try any group at all\n+\t\t     whose registers are not in bad_spill_regs.  */\n \t\t  if (i == FIRST_PSEUDO_REGISTER)\n \t\t    for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n \t\t      {"}]}