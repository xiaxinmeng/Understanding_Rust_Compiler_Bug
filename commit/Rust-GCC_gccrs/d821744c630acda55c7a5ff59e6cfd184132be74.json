{"sha": "d821744c630acda55c7a5ff59e6cfd184132be74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgyMTc0NGM2MzBhY2RhNTVjN2E1ZmY1OWU2Y2ZkMTg0MTMyYmU3NA==", "commit": {"author": {"name": "Matthew Fortune", "email": "matthew.fortune@imgtec.com", "date": "2017-01-20T01:05:25Z"}, "committer": {"name": "Catherine Moore", "email": "clm@gcc.gnu.org", "date": "2017-01-20T01:05:25Z"}, "message": "config.gcc (supported_defaults): Add madd4.\n\ngcc/\n2017-01-19  Matthew Fortune  <matthew.fortune@imgtec.com>\n\t    Yunqiang Su  <yunqiang.su@imgtec.com>\n\n\t* config.gcc (supported_defaults): Add madd4.\n\t(with_madd4): Add validation.\n\t(all_defaults): Add madd4.\n\t* config/mips/mips.opt (mmadd4): New option.\n\t* gcc/config/mips/mips.h (OPTION_DEFAULT_SPECS): Add a default for\n\tmmadd4.\n\t(TARGET_CPU_CPP_BUILTINS): Add builtin_define for\n\t__mips_no_madd4.\n\t(ISA_HAS_UNFUSED_MADD4): Gate with mips_madd4.\n\t(ISA_HAS_FUSED_MADD4): Likewise.\n\t* gcc/doc/invoke.texi (-mmadd4): Document the new option.\n\t* gcc/doc/install.texi (--with-madd4): Document the new option.\n\ngcc/testsuite/\n2017-01-19  Matthew Fortune  <matthew.fortune@imgtec.com>\n\n\t* gcc.target/mips/madd4-1.c: New file.\n\t* gcc.target/mips/madd4-2.c: Likewise.\n\t* gcc.target/mips/mips.exp (mips_option_groups): Add ghost option\n\tHAS_MADD4.\n\t(mips_option_groups): Add -m[no-]madd4.\n\t(mips-dg-init): Detect default -mno-madd4.\n\t(mips-dg-options): Handle HAS_MADD4 arch upgrade/downgrade.\n\t* gcc.target/mips/mips-ps-type.c: Add -mmadd4 test option.\n\t* gcc.target/mips/mips-ps-type-2.c: Likewise.\n\t* gcc.target/mips/nmadd-1.c: Likewise.\n\t* gcc.target/mips/nmadd-2.c: Likewise.\n\t* gcc.target/mips/nmadd-3.c: Likewise.\n\nCo-Authored-By: Yunqiang Su <yunqiang.su@imgtec.com>\n\nFrom-SVN: r244676", "tree": {"sha": "734146850a4cf5d319974acd8dbbc768bdf7d714", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/734146850a4cf5d319974acd8dbbc768bdf7d714"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d821744c630acda55c7a5ff59e6cfd184132be74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d821744c630acda55c7a5ff59e6cfd184132be74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d821744c630acda55c7a5ff59e6cfd184132be74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d821744c630acda55c7a5ff59e6cfd184132be74/comments", "author": {"login": "mfortune", "id": 10220247, "node_id": "MDQ6VXNlcjEwMjIwMjQ3", "avatar_url": "https://avatars.githubusercontent.com/u/10220247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfortune", "html_url": "https://github.com/mfortune", "followers_url": "https://api.github.com/users/mfortune/followers", "following_url": "https://api.github.com/users/mfortune/following{/other_user}", "gists_url": "https://api.github.com/users/mfortune/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfortune/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfortune/subscriptions", "organizations_url": "https://api.github.com/users/mfortune/orgs", "repos_url": "https://api.github.com/users/mfortune/repos", "events_url": "https://api.github.com/users/mfortune/events{/privacy}", "received_events_url": "https://api.github.com/users/mfortune/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5b4ca3060a9cd95cb837542049e37400dad22b3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b4ca3060a9cd95cb837542049e37400dad22b3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b4ca3060a9cd95cb837542049e37400dad22b3b"}], "stats": {"total": 138, "additions": 126, "deletions": 12}, "files": [{"sha": "c52f0247556264024f32247d7b2ee12773b0571f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d821744c630acda55c7a5ff59e6cfd184132be74", "patch": "@@ -1,3 +1,19 @@\n+2017-01-19  Matthew Fortune  <matthew.fortune@imgtec.com>\n+\t    Yunqiang Su  <yunqiang.su@imgtec.com>\n+\n+\t* config.gcc (supported_defaults): Add madd4.\n+\t(with_madd4): Add validation.\n+\t(all_defaults): Add madd4.\n+\t* config/mips/mips.opt (mmadd4): New option.\n+\t* gcc/config/mips/mips.h (OPTION_DEFAULT_SPECS): Add a default for\n+\tmmadd4.\n+\t(TARGET_CPU_CPP_BUILTINS): Add builtin_define for\n+\t__mips_no_madd4.\n+\t(ISA_HAS_UNFUSED_MADD4): Gate with mips_madd4.\n+\t(ISA_HAS_FUSED_MADD4): Likewise.\n+\t* gcc/doc/invoke.texi (-mmadd4): Document the new option.\n+\t* gcc/doc/install.texi (--with-madd4): Document the new option.\n+\n 2017-01-19  Jiong Wang  <jiong.wang@arm.com>\n \n \t* config/aarch64/aarch64-builtins.c (enum aarch64_builtins): New"}, {"sha": "03b189497d86a4f217f87bbc46014fd08afd52e3", "filename": "gcc/config.gcc", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=d821744c630acda55c7a5ff59e6cfd184132be74", "patch": "@@ -3940,7 +3940,7 @@ case \"${target}\" in\n \t\t;;\n \n \tmips*-*-*)\n-\t\tsupported_defaults=\"abi arch arch_32 arch_64 float fpu nan fp_32 odd_spreg_32 tune tune_32 tune_64 divide llsc mips-plt synci lxc1-sxc1\"\n+\t\tsupported_defaults=\"abi arch arch_32 arch_64 float fpu nan fp_32 odd_spreg_32 tune tune_32 tune_64 divide llsc mips-plt synci lxc1-sxc1 madd4\"\n \n \t\tcase ${with_float} in\n \t\t\"\" | soft | hard)\n@@ -4078,6 +4078,21 @@ case \"${target}\" in\n \t\t\texit 1\n \t\t\t;;\n \t\tesac\n+\n+\t\tcase ${with_madd4} in\n+\t\tyes)\n+\t\t\twith_madd4=madd4\n+\t\t\t;;\n+\t\tno)\n+\t\t\twith_madd4=no-madd4\n+\t\t\t;;\n+\t\t\"\")\n+\t\t\t;;\n+\t\t*)\n+\t\t\techo \"Unknown madd4 type used in --with-madd4\" 1>&2\n+\t\t\texit 1\n+\t\t\t;;\n+\t\tesac\n \t\t;;\n \n \tnds32*-*-*)\n@@ -4511,7 +4526,7 @@ case ${target} in\n esac\n \n t=\n-all_defaults=\"abi cpu cpu_32 cpu_64 arch arch_32 arch_64 tune tune_32 tune_64 schedule float mode fpu nan fp_32 odd_spreg_32 divide llsc mips-plt synci tls lxc1-sxc1\"\n+all_defaults=\"abi cpu cpu_32 cpu_64 arch arch_32 arch_64 tune tune_32 tune_64 schedule float mode fpu nan fp_32 odd_spreg_32 divide llsc mips-plt synci tls lxc1-sxc1 madd4\"\n for option in $all_defaults\n do\n \teval \"val=\\$with_\"`echo $option | sed s/-/_/g`"}, {"sha": "23e1672b58627caf5dbe969340eb9e466b7c45f8", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=d821744c630acda55c7a5ff59e6cfd184132be74", "patch": "@@ -639,6 +639,8 @@ struct mips_cpu_info {\n \tbuiltin_define (\"__GCC_HAVE_BUILTIN_MIPS_CACHE\");\t\t\\\n       if (!ISA_HAS_LXC1_SXC1)\t\t\t\t\t\t\\\n \tbuiltin_define (\"__mips_no_lxc1_sxc1\");\t\t\t\t\\\n+      if (!ISA_HAS_UNFUSED_MADD4 && !ISA_HAS_FUSED_MADD4)\t\t\\\n+\tbuiltin_define (\"__mips_no_madd4\");\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   while (0)\n \n@@ -869,7 +871,8 @@ struct mips_cpu_info {\n   {\"llsc\", \"%{!mllsc:%{!mno-llsc:-m%(VALUE)}}\" }, \\\n   {\"mips-plt\", \"%{!mplt:%{!mno-plt:-m%(VALUE)}}\" }, \\\n   {\"synci\", \"%{!msynci:%{!mno-synci:-m%(VALUE)}}\" },\t\t\t\\\n-  {\"lxc1-sxc1\", \"%{!mlxc1-sxc1:%{!mno-lxc1-sxc1:-m%(VALUE)}}\" } \\\n+  {\"lxc1-sxc1\", \"%{!mlxc1-sxc1:%{!mno-lxc1-sxc1:-m%(VALUE)}}\" }, \\\n+  {\"madd4\", \"%{!mmadd4:%{!mno-madd4:-m%(VALUE)}}\" } \\\n \n /* A spec that infers the:\n    -mnan=2008 setting from a -mips argument,\n@@ -1066,11 +1069,14 @@ struct mips_cpu_info {\n \n /* ISA has 4 operand fused madd instructions of the form\n    'd = [+-] (a * b [+-] c)'.  */\n-#define ISA_HAS_FUSED_MADD4\t(TARGET_MIPS8000 || TARGET_LOONGSON_3A)\n+#define ISA_HAS_FUSED_MADD4\t(mips_madd4\t\t\t\t\\\n+\t\t\t\t && (TARGET_MIPS8000\t\t\t\\\n+\t\t\t\t     || TARGET_LOONGSON_3A))\n \n /* ISA has 4 operand unfused madd instructions of the form\n    'd = [+-] (a * b [+-] c)'.  */\n-#define ISA_HAS_UNFUSED_MADD4\t(ISA_HAS_FP4\t\t\t\t\\\n+#define ISA_HAS_UNFUSED_MADD4\t(mips_madd4\t\t\t\t\\\n+\t\t\t\t && ISA_HAS_FP4\t\t\t\t\\\n \t\t\t\t && !TARGET_MIPS8000\t\t\t\\\n \t\t\t\t && !TARGET_LOONGSON_3A)\n "}, {"sha": "7c4b607fa85009f12849faa13673d2b0f4b938b3", "filename": "gcc/config/mips/mips.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Fconfig%2Fmips%2Fmips.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Fconfig%2Fmips%2Fmips.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.opt?ref=d821744c630acda55c7a5ff59e6cfd184132be74", "patch": "@@ -392,6 +392,10 @@ mlxc1-sxc1\n Target Report Var(mips_lxc1_sxc1) Init(1)\n Use lwxc1/swxc1/ldxc1/sdxc1 instructions where applicable.\n \n+mmadd4\n+Target Report Var(mips_madd4) Init(1)\n+Use 4-operand madd.s/madd.d and related instructions where applicable.\n+\n mtune=\n Target RejectNegative Joined Var(mips_tune_option) ToLower Enum(mips_arch_opt_value)\n -mtune=PROCESSOR\tOptimize the output for PROCESSOR."}, {"sha": "cccf812fa736180c812b96806720527acba48bff", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=d821744c630acda55c7a5ff59e6cfd184132be74", "patch": "@@ -1394,6 +1394,20 @@ in @code{lwxc1} type instructions.  This assumption holds true in a\n pure 32-bit environment and can hold true in a 64-bit environment if\n the address space is accurately set to be 32-bit for o32 and n32.\n \n+@item --with-madd4\n+On MIPS targets, make @option{-mmadd4} the default when no\n+@option{-mno-madd4} option is passed.  This is the default.\n+\n+@item --without-madd4\n+On MIPS targets, make @option{-mno-madd4} the default when no\n+@option{-mmadd4} option is passed.  The @code{madd4} instruction\n+family can be problematic when targeting a combination of cores that\n+implement these instructions differently.  There are two known cores\n+that implement these as fused operations instead of unfused (where\n+unfused is normally expected).  Disabling these instructions is the\n+only way to ensure compatible code is generated; this will incur\n+a performance penalty.\n+\n @item --with-mips-plt\n On MIPS targets, make use of copy relocations and PLTs.\n These features are extensions to the traditional"}, {"sha": "a7b494b76e243b9876d040d31504ba0444c4faca", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=d821744c630acda55c7a5ff59e6cfd184132be74", "patch": "@@ -909,7 +909,7 @@ Objective-C and Objective-C++ Dialects}.\n -mcompact-branches=@var{policy} @gol\n -mfp-exceptions  -mno-fp-exceptions @gol\n -mvr4130-align  -mno-vr4130-align  -msynci  -mno-synci @gol\n--mlxc1-sxc1 -mno-lxc1-sxc1 @gol\n+-mlxc1-sxc1 -mno-lxc1-sxc1 -mmadd4 -mno-madd4 @gol\n -mrelax-pic-calls  -mno-relax-pic-calls  -mmcount-ra-address @gol\n -mframe-header-opt  -mno-frame-header-opt}\n \n@@ -19950,6 +19950,12 @@ This optimization is off by default at all optimization levels.\n When applicable, enable (disable) the generation of @code{lwxc1},\n @code{swxc1}, @code{ldxc1}, @code{sdxc1} instructions.  Enabled by default.\n \n+@item -mmadd4\n+@itemx -mno-madd4\n+@opindex mmadd4\n+When applicable, enable (disable) the generation of 4-operand @code{madd.s},\n+@code{madd.d} and related instructions.  Enabled by default.\n+\n @end table\n \n @node MMIX Options"}, {"sha": "65c9ac816c5f1615490725f7468c3b7fcf412179", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d821744c630acda55c7a5ff59e6cfd184132be74", "patch": "@@ -1,3 +1,18 @@\n+2017-01-19  Matthew Fortune  <matthew.fortune@imgtec.com>\n+\n+\t* gcc.target/mips/madd4-1.c: New file.\n+\t* gcc.target/mips/madd4-2.c: Likewise.\n+\t* gcc.target/mips/mips.exp (mips_option_groups): Add ghost option\n+\tHAS_MADD4.\n+\t(mips_option_groups): Add -m[no-]madd4.\n+\t(mips-dg-init): Detect default -mno-madd4.\n+\t(mips-dg-options): Handle HAS_MADD4 arch upgrade/downgrade.\n+\t* gcc.target/mips/mips-ps-type.c: Add -mmadd4 test option.\n+\t* gcc.target/mips/mips-ps-type-2.c: Likewise.\n+\t* gcc.target/mips/nmadd-1.c: Likewise.\n+\t* gcc.target/mips/nmadd-2.c: Likewise.\n+\t* gcc.target/mips/nmadd-3.c: Likewise.\n+\n 2017-01-19  Jiong Wang  <jiong.wang@arm.com>\n \n \t* gcc.target/aarch64/return_address_sign_1.c: New testcase for no"}, {"sha": "d0dee36f09103992deec201f5cf5f9c854f532cc", "filename": "gcc/testsuite/gcc.target/mips/madd4-1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd4-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd4-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd4-1.c?ref=d821744c630acda55c7a5ff59e6cfd184132be74", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-ffast-math -mno-madd4 (HAS_MADD4) -mhard-float\" } */\n+/* { dg-skip-if \"code quality test\" { *-*-* } { \"-O0\" } { \"\" } } */\n+/* { dg-final { scan-assembler-not \"\\tmadd.s\\t\" } } */\n+\n+#ifndef __mips_no_madd4\n+#error missing definition of __mips_no_madd4\n+#endif\n+\n+NOMIPS16 float\n+madd4 (float f, float g, float h)\n+{\n+  return (f * g) + h;\n+}"}, {"sha": "eb83023d33f3fa4e0c0b38860b5528b1c8fb4c1c", "filename": "gcc/testsuite/gcc.target/mips/madd4-2.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd4-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd4-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd4-2.c?ref=d821744c630acda55c7a5ff59e6cfd184132be74", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-ffast-math -mmadd4 (HAS_MADD4) -mhard-float\" } */\n+/* { dg-skip-if \"code quality test\" { *-*-* } { \"-O0\" } { \"\" } } */\n+/* { dg-final { scan-assembler \"\\tmadd.s\\t\" } } */\n+\n+#ifdef __mips_no_madd4\n+#error unexpected definition of __mips_no_madd4\n+#endif\n+\n+NOMIPS16 float\n+madd4 (float f, float g, float h)\n+{\n+  return (f * g) + h;\n+}"}, {"sha": "fecc35ba9e5481641e2f4d12e56ed4fda9f45da8", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-type-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-type-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-type-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-type-2.c?ref=d821744c630acda55c7a5ff59e6cfd184132be74", "patch": "@@ -1,7 +1,7 @@\n /* Test v2sf calculations.  The nmadd and nmsub patterns need\n    -ffinite-math-only.  */\n /* { dg-do compile } */\n-/* { dg-options \"(HAS_MADDPS) -mgp32 -mpaired-single -ffinite-math-only forbid_cpu=octeon.*\" } */\n+/* { dg-options \"(HAS_MADDPS) -mmadd4 -mgp32 -mpaired-single -ffinite-math-only forbid_cpu=octeon.*\" } */\n /* { dg-skip-if \"nmadd and nmsub need combine\" { *-*-* } { \"-O0\" } { \"\" } } */\n /* { dg-final { scan-assembler \"\\tcvt.ps.s\\t\" } } */\n /* { dg-final { scan-assembler \"\\tmov.ps\\t\" } } */"}, {"sha": "d74d4b527b9dff83eefa5c0d814f17e4ed7c4512", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-type.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-type.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-type.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-type.c?ref=d821744c630acda55c7a5ff59e6cfd184132be74", "patch": "@@ -1,7 +1,7 @@\n /* Test v2sf calculations.  The nmadd and nmsub patterns need\n    -ffinite-math-only.  */\n /* { dg-do compile } */ \n-/* { dg-options \"-mpaired-single -mgp64 -ffinite-math-only forbid_cpu=octeon.*\" } */\n+/* { dg-options \"-mpaired-single -mmadd4 -mgp64 -ffinite-math-only forbid_cpu=octeon.*\" } */\n /* { dg-skip-if \"nmadd and nmsub need combine\" { *-*-* } { \"-O0\" } { \"\" } } */\n /* { dg-final { scan-assembler \"\\tcvt.ps.s\\t\" } } */\n /* { dg-final { scan-assembler \"\\tmov.ps\\t\" } } */"}, {"sha": "78fbba077d880b372f7452186adc754fe9ca831d", "filename": "gcc/testsuite/gcc.target/mips/mips.exp", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp?ref=d821744c630acda55c7a5ff59e6cfd184132be74", "patch": "@@ -256,6 +256,7 @@ set mips_option_groups {\n     ldc \"HAS_LDC\"\n     movn \"HAS_MOVN\"\n     madd \"HAS_MADD\"\n+    madd4_ghost \"HAS_MADD4\"\n     maddps \"HAS_MADDPS\"\n     lsa \"(|!)HAS_LSA\"\n     lxc1 \"HAS_LXC1\"\n@@ -284,6 +285,7 @@ foreach option {\n     local-sdata\n     long-calls\n     lxc1-sxc1\n+    madd4\n     paired-single\n     plt\n     shared\n@@ -863,6 +865,12 @@ proc mips-dg-init {} {\n \t    \"-mlxc1-sxc1\"\n \t    #endif\n \n+\t    #ifdef __mips_no_madd4\n+\t    \"-mno-madd4\"\n+\t    #else\n+\t    \"-mmadd4\"\n+\t    #endif\n+\n \t    #ifdef __mips_synci\n \t    \"-msynci\",\n \t    #else\n@@ -1182,6 +1190,7 @@ proc mips-dg-options { args } {\n \t#\n \t} elseif { $isa < 4\n \t\t   && ([mips_have_test_option_p options \"HAS_LXC1\"]\n+\t\t       || [mips_have_test_option_p options \"HAS_MADD4\"]\n \t\t       || [mips_have_test_option_p options \"HAS_MOVN\"]) } {\n \t    mips_make_test_option options \"-mips4\"\n         # We need MIPS III or higher for:\n@@ -1224,8 +1233,9 @@ proc mips-dg-options { args } {\n \t\t       || [mips_have_test_option_p options \"-mfix-r10000\"]\n \t\t       || [mips_have_test_option_p options \"NOT_HAS_DMUL\"]\n \t\t       || [mips_have_test_option_p options \"HAS_LXC1\"]\n-\t\t       || [mips_have_test_option_p options \"HAS_MOVN\"]\n \t\t       || [mips_have_test_option_p options \"HAS_MADD\"]\n+\t\t       || [mips_have_test_option_p options \"HAS_MADD4\"]\n+\t\t       || [mips_have_test_option_p options \"HAS_MOVN\"]\n \t\t       || [mips_have_test_option_p options \"-mpaired-single\"]\n \t\t       || [mips_have_test_option_p options \"-mnan=legacy\"]\n \t\t       || [mips_have_test_option_p options \"-mabs=legacy\"]"}, {"sha": "746fbbbf778e58f98324489e4f51f300f08fcfcc", "filename": "gcc/testsuite/gcc.target/mips/nmadd-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-1.c?ref=d821744c630acda55c7a5ff59e6cfd184132be74", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-ffast-math isa=4 -mhard-float\" } */\n+/* { dg-options \"-ffast-math -mmadd4 isa=4 -mhard-float\" } */\n /* { dg-skip-if \"code quality test\" { *-*-* } { \"-O0\" } { \"\" } } */\n /* { dg-final { scan-assembler \"\\tnmadd.s\\t\" } } */\n /* { dg-final { scan-assembler \"\\tnmadd.d\\t\" } } */"}, {"sha": "4c8dd65d57d3daff11feae21fa9b72ec0694a066", "filename": "gcc/testsuite/gcc.target/mips/nmadd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-2.c?ref=d821744c630acda55c7a5ff59e6cfd184132be74", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-fno-fast-math -ffinite-math-only isa=4 -mhard-float\" } */\n+/* { dg-options \"-fno-fast-math -ffinite-math-only -mmadd4 isa=4 -mhard-float\" } */\n /* { dg-skip-if \"code quality test\" { *-*-* } { \"-O0\" } { \"\" } } */\n /* { dg-final { scan-assembler \"\\tnmadd.s\\t\" } } */\n /* { dg-final { scan-assembler \"\\tnmadd.d\\t\" } } */"}, {"sha": "b55de96c7a0b0b65bf00674744ee5f83316dfaaa", "filename": "gcc/testsuite/gcc.target/mips/nmadd-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d821744c630acda55c7a5ff59e6cfd184132be74/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-3.c?ref=d821744c630acda55c7a5ff59e6cfd184132be74", "patch": "@@ -1,7 +1,7 @@\n /* The same code as nmadd-2.c, but compiled with -fno-finite-math-only.\n    We can't use nmadd and nmsub in that case.  */\n /* { dg-do compile } */\n-/* { dg-options \"-fno-fast-math -fno-finite-math-only isa=4 -mhard-float\" } */\n+/* { dg-options \"-fno-fast-math -fno-finite-math-only -mmadd4 isa=4 -mhard-float\" } */\n /* { dg-final { scan-assembler-not \"\\tnmadd\" } } */\n /* { dg-final { scan-assembler-not \"\\tnmsub\" } } */\n "}]}