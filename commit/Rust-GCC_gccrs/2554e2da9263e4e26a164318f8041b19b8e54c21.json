{"sha": "2554e2da9263e4e26a164318f8041b19b8e54c21", "node_id": "C_kwDOANBUbNoAKDI1NTRlMmRhOTI2M2U0ZTI2YTE2NDMxOGY4MDQxYjE5YjhlNTRjMjE", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-12-18T00:16:23Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-12-18T00:16:23Z"}, "message": "Daily bump.", "tree": {"sha": "7f7a4403ded996b038967e3ef192429e68eae2f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f7a4403ded996b038967e3ef192429e68eae2f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2554e2da9263e4e26a164318f8041b19b8e54c21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2554e2da9263e4e26a164318f8041b19b8e54c21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2554e2da9263e4e26a164318f8041b19b8e54c21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2554e2da9263e4e26a164318f8041b19b8e54c21/comments", "author": null, "committer": null, "parents": [{"sha": "6afb8a68a9113897ccf39e40983e042ed90d7aed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6afb8a68a9113897ccf39e40983e042ed90d7aed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6afb8a68a9113897ccf39e40983e042ed90d7aed"}], "stats": {"total": 326, "additions": 325, "deletions": 1}, "files": [{"sha": "8ac5502d032216fc1298c60c25bcb81cf47dd338", "filename": "ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2554e2da9263e4e26a164318f8041b19b8e54c21/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2554e2da9263e4e26a164318f8041b19b8e54c21/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=2554e2da9263e4e26a164318f8041b19b8e54c21", "patch": "@@ -1,3 +1,14 @@\n+2021-12-17  Martin Liska  <mliska@suse.cz>\n+\n+\t* config.sub: Sync from master.\n+\n+2021-12-17  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2021-12-16  Matthias Seidel  <mseidel@apache.org>\n+\n+\t* config.sub: Fix typo.\n+\n 2021-12-16  Matthias Seidel  <mseidel@apache.org>\n \n \t* config.sub: Fix typo."}, {"sha": "4166e060922f529cc72b12418eaeed792c2126a1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 130, "deletions": 0, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2554e2da9263e4e26a164318f8041b19b8e54c21/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2554e2da9263e4e26a164318f8041b19b8e54c21/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2554e2da9263e4e26a164318f8041b19b8e54c21", "patch": "@@ -1,3 +1,133 @@\n+2021-12-17  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/103649\n+\t* attribs.c (handle_ignored_attributes_option): Create the fake\n+\tattribute with max_length == -2.\n+\t(attribute_ignored_p): New overloads.\n+\t* attribs.h (attribute_ignored_p): Declare them.\n+\t* tree-core.h (struct attribute_spec): Document that max_length\n+\tcan be -2.\n+\n+2021-12-17  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/103624\n+\t* config/rs6000/rs6000-builtins.def (__builtin_darn): Expand to\n+\tdarn_64_di.  Add {32bit} attribute.  Return long.\n+\t(__builtin_darn_32): Expand to darn_32_di.  Add {32bit} attribute.\n+\tReturn long.\n+\t(__builtin_darn_raw): Expand to darn_raw_di.  Add {32bit} attribute.\n+\tReturn long.\n+\t* config/rs6000/rs6000-call.c (rs6000_expand_builtin): Expand the darn\n+\tbuiltins to the _si variants for -m32.\n+\t* config/rs6000/rs6000.md (UNSPECV_DARN_32, UNSPECV_DARN_RAW): Delete.\n+\t(UNSPECV_DARN): Update comment.\n+\t(darn_32, darn_raw, darn): Delete.\n+\t(darn_32_<mode>, darn_64_<mode>, darn_raw_<mode> for GPR): New.\n+\t(@darn<mode> for GPR): New.\n+\n+2021-12-17  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000-overload.def (__builtin_vec_promote): Add second\n+\targument.\n+\n+2021-12-17  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/103744\n+\t* tree-vect-stmts.c (vectorizable_load): Handle multi-vector\n+\tSLP gather loads.\n+\n+2021-12-17  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/invoke.texi: Rename to -fstack-protector.\n+\n+2021-12-17  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/invoke.texi: Fix spelling issues.\n+\n+2021-12-17  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR tree-optimization/103741\n+\t* tree-vect-stmts.c (vectorizable_operation): Check for boolean.\n+\n+2021-12-17  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/darwin-driver.c (darwin_driver_init): Exit from the\n+\toption handling early if the command line is definitely enpty.\n+\t* config/darwin.h (SUBTARGET_DRIVER_SELF_SPECS): Remove\n+\tsetting for the default content of weak_reference_mismatches.\n+\n+2021-12-17  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/rs6000/darwin.h: Drop trailing _x from the\n+\tbuiltin_decls array name.\n+\n+2021-12-17  Haochen Jiang  <haochen.jiang@intel.com>\n+\n+\tPR target/100738\n+\t* config/i386/sse.md (*avx_cmp<mode>3_lt, *avx_cmp<mode>3_ltint):\n+\tRemove MEM_P restriction and add force_reg for operands[2].\n+\t(*avx_cmp<mode>3_ltint_not): Add new define_insn_and_split.\n+\n+2021-12-17  Siddhesh Poyarekar  <siddhesh@gotplt.org>\n+\n+\t* builtins.def (BUILT_IN_DYNAMIC_OBJECT_SIZE): New builtin.\n+\t* tree-object-size.h: Move object size type bits enum from\n+\ttree-object-size.c and add new value OST_DYNAMIC.\n+\t* builtins.c (expand_builtin, fold_builtin_2): Handle it.\n+\t(fold_builtin_object_size): Handle new builtin and adjust for\n+\tchange to compute_builtin_object_size.\n+\t* tree-object-size.c: Include builtins.h.\n+\t(compute_builtin_object_size): Adjust.\n+\t(early_object_sizes_execute_one,\n+\tdynamic_object_sizes_execute_one): New functions.\n+\t(object_sizes_execute): Rename insert_min_max_p argument to\n+\tearly.  Handle BUILT_IN_DYNAMIC_OBJECT_SIZE and call the new\n+\tfunctions.\n+\t* doc/extend.texi (__builtin_dynamic_object_size): Document new\n+\tbuiltin.\n+\n+2021-12-17  Siddhesh Poyarekar  <siddhesh@gotplt.org>\n+\n+\t* tree-object-size.h (compute_builtin_object_size): Return tree\n+\tinstead of HOST_WIDE_INT.\n+\t* builtins.c (fold_builtin_object_size): Adjust.\n+\t* gimple-fold.c (gimple_fold_builtin_strncat): Likewise.\n+\t* ubsan.c (instrument_object_size): Likewise.\n+\t* tree-object-size.c (object_size): New structure.\n+\t(object_sizes): Change type to vec<object_size>.\n+\t(initval): New function.\n+\t(unknown): Use it.\n+\t(size_unknown_p, size_initval, size_unknown): New functions.\n+\t(object_sizes_unknown_p): Use it.\n+\t(object_sizes_get): Return tree.\n+\t(object_sizes_initialize): Rename from object_sizes_set_force\n+\tand set VAL parameter type as tree.  Add new parameter WHOLEVAL.\n+\t(object_sizes_set): Set VAL parameter type as tree and adjust\n+\timplementation.  Add new parameter WHOLEVAL.\n+\t(size_for_offset): New function.\n+\t(decl_init_size): Adjust comment.\n+\t(addr_object_size): Change PSIZE parameter to tree and adjust\n+\timplementation.  Add new parameter PWHOLESIZE.\n+\t(alloc_object_size): Return tree.\n+\t(compute_builtin_object_size): Return tree in PSIZE.\n+\t(expr_object_size, call_object_size, unknown_object_size):\n+\tAdjust for object_sizes_set change.\n+\t(merge_object_sizes): Drop OFFSET parameter and adjust\n+\timplementation for tree change.\n+\t(plus_stmt_object_size): Call collect_object_sizes_for directly\n+\tinstead of merge_object_size and call size_for_offset to get net\n+\tsize.\n+\t(cond_expr_object_size, collect_object_sizes_for,\n+\tobject_sizes_execute): Adjust for change of type from\n+\tHOST_WIDE_INT to tree.\n+\t(check_for_plus_in_loops_1): Likewise and skip non-positive\n+\toffsets.\n+\n+2021-12-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/103681\n+\t* common.opt (fabi-version): Add v17.\n+\n 2021-12-16  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/103571"}, {"sha": "676dfbaa2560960e4c6b83237d27b5ef52933128", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2554e2da9263e4e26a164318f8041b19b8e54c21/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2554e2da9263e4e26a164318f8041b19b8e54c21/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=2554e2da9263e4e26a164318f8041b19b8e54c21", "patch": "@@ -1 +1 @@\n-20211217\n+20211218"}, {"sha": "da83507c8a71fea9ac810180fe12abe66890d377", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2554e2da9263e4e26a164318f8041b19b8e54c21/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2554e2da9263e4e26a164318f8041b19b8e54c21/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=2554e2da9263e4e26a164318f8041b19b8e54c21", "patch": "@@ -1,3 +1,8 @@\n+2021-12-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/103681\n+\t* c-opts.c (c_common_post_options): Update defaults.\n+\n 2021-12-16  Martin Liska  <mliska@suse.cz>\n \n \tPR target/103709"}, {"sha": "212d4c707f6d767bd03ae363eb6890c608f903bc", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2554e2da9263e4e26a164318f8041b19b8e54c21/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2554e2da9263e4e26a164318f8041b19b8e54c21/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=2554e2da9263e4e26a164318f8041b19b8e54c21", "patch": "@@ -1,3 +1,11 @@\n+2021-12-17  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/103649\n+\t* c-decl.c (c_warn_unused_attributes): Don't warn for\n+\tattribute_ignored_p.\n+\t* c-parser.c (c_parser_std_attribute): Skip parsing of the attribute\n+\targuments when the attribute is ignored.\n+\n 2021-12-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/103587"}, {"sha": "a668f9f5fe5e97bfff2a395a8fb26da4e78c0fa0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2554e2da9263e4e26a164318f8041b19b8e54c21/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2554e2da9263e4e26a164318f8041b19b8e54c21/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2554e2da9263e4e26a164318f8041b19b8e54c21", "patch": "@@ -1,3 +1,48 @@\n+2021-12-17  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/103649\n+\t* parser.c (cp_parser_declaration): Don't warn for attribute_ignored_p.\n+\t(cp_parser_std_attribute): Skip parsing of the attribute\n+\targuments when the attribute is ignored.\n+\n+2021-12-17  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/103749\n+\t* decl.c (lookup_and_check_tag): Give an error when a class was\n+\tdeclared as template but no template header has been provided.\n+\t* pt.c (do_class_deduction): Don't deduce CLASSTYPE_ERRONEOUS\n+\ttypes.\n+\n+2021-12-17  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/100127\n+\t* coroutines.cc (coro_rewrite_function_body): Handle initial\n+\tawait expressions that try to produce a reference value.\n+\n+2021-12-17  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/100772\n+\t* coroutines.cc (morph_fn_to_coro): Convert function parms\n+\tfrom reference before constructing any operator-new args\n+\tlist.\n+\n+2021-12-17  Jason Merrill  <jason@redhat.com>\n+\n+\t* constraint.cc (deduce_concept_introduction): Adjust comment.\n+\n+2021-12-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/103681\n+\t* cp-tree.h (struct lang_type): Add non_pod_aggregate.\n+\t(CLASSTYPE_NON_POD_AGGREGATE): New.\n+\t* class.c (check_field_decls): Set it.\n+\t(check_bases_and_members): Check it.\n+\t(check_non_pod_aggregate): New.\n+\t(enum eoc_mode): New.\n+\t(end_of_class): Always include non-empty fields.\n+\tAdd eoc_nv_or_dsize mode.\n+\t(include_empty_classes, layout_class_type): Adjust.\n+\n 2021-12-16  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/99980"}, {"sha": "f97d77d3cd2a5188da071b9d4f84732432260e97", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2554e2da9263e4e26a164318f8041b19b8e54c21/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2554e2da9263e4e26a164318f8041b19b8e54c21/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2554e2da9263e4e26a164318f8041b19b8e54c21", "patch": "@@ -1,3 +1,117 @@\n+2021-12-17  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/103649\n+\t* c-c++-common/Wno-attributes-6.c: New test.\n+\n+2021-12-17  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* gcc.target/powerpc/fold-vec-insert-float-p9.c\n+\n+2021-12-17  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* gcc.target/powerpc/pr97142.c: Add -mdejagnu-cpu=power7\n+\tto the dg-options.\n+\n+2021-12-17  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/103749\n+\t* g++.dg/template/redecl4.C: Adjust dg-error.\n+\t* g++.dg/diagnostic/redeclaration-2.C: New test.\n+\n+2021-12-17  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/103624\n+\t* gcc.target/powerpc/darn-0.c: Remove target clause.\n+\t* gcc.target/powerpc/darn-1.c: Remove target clause. Remove lp64\n+\trequirement.  Change return type to long.\n+\t* gcc.target/powerpc/darn-2.c: Ditto.\n+\t* gcc.target/powerpc/darn-3.c: Remove target clause.\n+\n+2021-12-17  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/100127\n+\t* g++.dg/coroutines/pr100127.C: New test.\n+\n+2021-12-17  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/100772\n+\t* g++.dg/coroutines/pr100772-a.C: New test.\n+\t* g++.dg/coroutines/pr100772-b.C: New test.\n+\n+2021-12-17  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/96517\n+\t* g++.dg/coroutines/pr96517.C: New test.\n+\n+2021-12-17  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* gcc.target/powerpc/pragma-optimize.c: Require ifunc support.\n+\n+2021-12-17  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/103744\n+\t* gcc.dg/vect/pr103744-1.c: New test.\n+\t* gcc.dg/vect/pr103744-2.c: Likewise.\n+\n+2021-12-17  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR tree-optimization/103741\n+\t* gcc.target/aarch64/pr103741.c: New test.\n+\n+2021-12-17  Haochen Jiang  <haochen.jiang@intel.com>\n+\n+\tPR target/100738\n+\t* g++.target/i386/avx512vl-pr100738-1.C: New test.\n+\n+2021-12-17  Siddhesh Poyarekar  <siddhesh@gotplt.org>\n+\n+\t* g++.dg/ext/builtin-dynamic-object-size1.C: New test.\n+\t* g++.dg/ext/builtin-dynamic-object-size2.C: Likewise.\n+\t* gcc.dg/builtin-dynamic-alloc-size.c: Likewise.\n+\t* gcc.dg/builtin-dynamic-object-size-1.c: Likewise.\n+\t* gcc.dg/builtin-dynamic-object-size-10.c: Likewise.\n+\t* gcc.dg/builtin-dynamic-object-size-11.c: Likewise.\n+\t* gcc.dg/builtin-dynamic-object-size-12.c: Likewise.\n+\t* gcc.dg/builtin-dynamic-object-size-13.c: Likewise.\n+\t* gcc.dg/builtin-dynamic-object-size-14.c: Likewise.\n+\t* gcc.dg/builtin-dynamic-object-size-15.c: Likewise.\n+\t* gcc.dg/builtin-dynamic-object-size-16.c: Likewise.\n+\t* gcc.dg/builtin-dynamic-object-size-17.c: Likewise.\n+\t* gcc.dg/builtin-dynamic-object-size-18.c: Likewise.\n+\t* gcc.dg/builtin-dynamic-object-size-19.c: Likewise.\n+\t* gcc.dg/builtin-dynamic-object-size-2.c: Likewise.\n+\t* gcc.dg/builtin-dynamic-object-size-3.c: Likewise.\n+\t* gcc.dg/builtin-dynamic-object-size-4.c: Likewise.\n+\t* gcc.dg/builtin-dynamic-object-size-5.c: Likewise.\n+\t* gcc.dg/builtin-dynamic-object-size-6.c: Likewise.\n+\t* gcc.dg/builtin-dynamic-object-size-7.c: Likewise.\n+\t* gcc.dg/builtin-dynamic-object-size-8.c: Likewise.\n+\t* gcc.dg/builtin-dynamic-object-size-9.c: Likewise.\n+\t* gcc.dg/builtin-object-size-16.c: Adjust to allow inclusion\n+\tfrom builtin-dynamic-object-size-16.c.\n+\t* gcc.dg/builtin-object-size-17.c: Likewise.\n+\n+2021-12-17  Siddhesh Poyarekar  <siddhesh@gotplt.org>\n+\n+\t* gcc.dg/builtin-object-size-1.c (test9): New test.\n+\t(main): Call it.\n+\t* gcc.dg/builtin-object-size-2.c (test8): New test.\n+\t(main): Call it.\n+\t* gcc.dg/builtin-object-size-3.c (test9): New test.\n+\t(main): Call it.\n+\t* gcc.dg/builtin-object-size-4.c (test8): New test.\n+\t(main): Call it.\n+\t* gcc.dg/builtin-object-size-5.c (test5, test6, test7): New\n+\ttests.\n+\n+2021-12-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/103681\n+\t* g++.dg/abi/macro0.C: Update value.\n+\t* g++.dg/abi/no_unique_address6.C: New test.\n+\t* g++.dg/abi/nsdmi-aggr1.C: New test.\n+\t* g++.dg/abi/nsdmi-aggr1a.C: New test.\n+\n 2021-12-16  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* gcc.dg/20021029-1.c: Build with -G0 for nios2."}, {"sha": "2c6c35e1cfa1f71ba580be1424ba89a1f27869bd", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2554e2da9263e4e26a164318f8041b19b8e54c21/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2554e2da9263e4e26a164318f8041b19b8e54c21/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=2554e2da9263e4e26a164318f8041b19b8e54c21", "patch": "@@ -1,3 +1,14 @@\n+2021-12-17  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config.host: Add shim declaration header to powerpc*-darwin builds.\n+\t* config/rs6000/t-darwin-ehs: Remove dependency on the powerpc end\n+\tfile.\n+\t* config/t-darwin-ehs: Add dependencies to the shared unwinder\n+\tobjects.\n+\t* config/t-slibgcc-darwin: Add extra_parts to the dependencies for\n+\tthe shared EH lib.  Add all-multi to the dependencies for the\n+\tlibgcc_s.1.dylib redirections.\n+\n 2021-12-13  Olivier Hainque  <hainque@adacore.com>\n \n \t* config.host (powerpc*-*-vxworks7*): Remove"}]}