{"sha": "3771486daa1e904ceae6f3e135b28e58af33849f", "node_id": "C_kwDOANBUbNoAKDM3NzE0ODZkYWExZTkwNGNlYWU2ZjNlMTM1YjI4ZTU4YWYzMzg0OWY", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-05-04T07:57:17Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-05-04T07:59:49Z"}, "message": "hwasan: support new dg-output format.\n\nSupports change in libsanitizer where it newly reports:\nREAD of size 4 at 0xffffffffc3d4 tags: 02/01(00) (ptr/mem) in thread T0\n\nSo the 'tags' contains now 3 entries compared to 2 entries.\n\ngcc/testsuite/ChangeLog:\n\n\t* c-c++-common/hwasan/alloca-outside-caught.c: Update dg-output.\n\t* c-c++-common/hwasan/heap-overflow.c: Likewise.\n\t* c-c++-common/hwasan/hwasan-thread-access-parent.c: Likewise.\n\t* c-c++-common/hwasan/large-aligned-1.c: Likewise.\n\t* c-c++-common/hwasan/stack-tagging-basic-1.c: Likewise.", "tree": {"sha": "41317e9bc0bc93a37cd6f7057d2a1a32ee322a34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41317e9bc0bc93a37cd6f7057d2a1a32ee322a34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3771486daa1e904ceae6f3e135b28e58af33849f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3771486daa1e904ceae6f3e135b28e58af33849f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3771486daa1e904ceae6f3e135b28e58af33849f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3771486daa1e904ceae6f3e135b28e58af33849f/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ba68f78c9d2510eb095f7d8a90c87cd5fd4183d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ba68f78c9d2510eb095f7d8a90c87cd5fd4183d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ba68f78c9d2510eb095f7d8a90c87cd5fd4183d"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "6f3825bee7c4462ab924c07164f3966dd7b34e6f", "filename": "gcc/testsuite/c-c++-common/hwasan/alloca-outside-caught.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3771486daa1e904ceae6f3e135b28e58af33849f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fhwasan%2Falloca-outside-caught.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3771486daa1e904ceae6f3e135b28e58af33849f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fhwasan%2Falloca-outside-caught.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fhwasan%2Falloca-outside-caught.c?ref=3771486daa1e904ceae6f3e135b28e58af33849f", "patch": "@@ -20,6 +20,6 @@ main ()\n }\n \n /* { dg-output \"HWAddressSanitizer: tag-mismatch on address 0x\\[0-9a-f\\]*.*\" } */\n-/* { dg-output \"READ of size 4 at 0x\\[0-9a-f\\]* tags: \\[\\[:xdigit:\\]\\]\\[\\[:xdigit:\\]\\]/00 \\\\(ptr/mem\\\\) in thread T0.*\" } */\n+/* { dg-output \"READ of size 4 at 0x\\[0-9a-f\\]* tags: \\[\\[:xdigit:\\]\\]\\[\\[:xdigit:\\]\\]/00.* \\\\(ptr/mem\\\\) in thread T0.*\" } */\n /* { dg-output \"Address 0x\\[0-9a-f\\]* is located in stack of thread T0.*\" } */\n /* { dg-output \"SUMMARY: HWAddressSanitizer: tag-mismatch \\[^\\n\\]*.*\" } */"}, {"sha": "bddb38c81f10628eaa934666978187484ba679ff", "filename": "gcc/testsuite/c-c++-common/hwasan/heap-overflow.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3771486daa1e904ceae6f3e135b28e58af33849f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fhwasan%2Fheap-overflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3771486daa1e904ceae6f3e135b28e58af33849f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fhwasan%2Fheap-overflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fhwasan%2Fheap-overflow.c?ref=3771486daa1e904ceae6f3e135b28e58af33849f", "patch": "@@ -23,7 +23,7 @@ int main(int argc, char **argv) {\n }\n \n /* { dg-output \"HWAddressSanitizer: tag-mismatch on address 0x\\[0-9a-f\\]*.*\" } */\n-/* { dg-output \"READ of size 1 at 0x\\[0-9a-f\\]* tags: \\[\\[:xdigit:\\]\\]\\[\\[:xdigit:\\]\\]/\\[\\[:xdigit:\\]\\]\\[\\[:xdigit:\\]\\] \\\\(ptr/mem\\\\) in thread T0.*\" } */\n+/* { dg-output \"READ of size 1 at 0x\\[0-9a-f\\]* tags: \\[\\[:xdigit:\\]\\]\\[\\[:xdigit:\\]\\]/\\[\\[:xdigit:\\]\\]\\[\\[:xdigit:\\]\\].* \\\\(ptr/mem\\\\) in thread T0.*\" } */\n /* { dg-output \"located 0 bytes to the right of 10-byte region.*\" } */\n /* { dg-output \"allocated here:.*\" } */\n /* { dg-output \"#1 0x\\[0-9a-f\\]+ +in _*main \\[^\\n\\r]*heap-overflow.c:18\" } */"}, {"sha": "eca27c8cd2c1520e061465c928affb7aeb02b0f3", "filename": "gcc/testsuite/c-c++-common/hwasan/hwasan-thread-access-parent.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3771486daa1e904ceae6f3e135b28e58af33849f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fhwasan%2Fhwasan-thread-access-parent.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3771486daa1e904ceae6f3e135b28e58af33849f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fhwasan%2Fhwasan-thread-access-parent.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fhwasan%2Fhwasan-thread-access-parent.c?ref=3771486daa1e904ceae6f3e135b28e58af33849f", "patch": "@@ -46,6 +46,6 @@ main (int argc, char **argv)\n }\n \n /* { dg-output \"HWAddressSanitizer: tag-mismatch on address 0x\\[0-9a-f\\]*.*\" } */\n-/* { dg-output \"READ of size 4 at 0x\\[0-9a-f\\]* tags: 00/\\[\\[:xdigit:\\]\\]\\[\\[:xdigit:\\]\\] \\\\(ptr/mem\\\\) in thread T1.*\" } */\n+/* { dg-output \"READ of size 4 at 0x\\[0-9a-f\\]* tags: 00/\\[\\[:xdigit:\\]\\]\\[\\[:xdigit:\\]\\].* \\\\(ptr/mem\\\\) in thread T1.*\" } */\n /* { dg-output \"Address 0x\\[0-9a-f\\]* is located in stack of thread T0.*\" } */\n /* { dg-output \"SUMMARY: HWAddressSanitizer: tag-mismatch \\[^\\n\\]*.*\" } */"}, {"sha": "6158ba4bdbcb1f8c7f8614cfadc46b51e2cb85b8", "filename": "gcc/testsuite/c-c++-common/hwasan/large-aligned-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3771486daa1e904ceae6f3e135b28e58af33849f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fhwasan%2Flarge-aligned-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3771486daa1e904ceae6f3e135b28e58af33849f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fhwasan%2Flarge-aligned-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fhwasan%2Flarge-aligned-1.c?ref=3771486daa1e904ceae6f3e135b28e58af33849f", "patch": "@@ -9,6 +9,6 @@\n /* { dg-output \"HWAddressSanitizer: tag-mismatch on address 0x\\[0-9a-f\\]*.*\" } */\n /* NOTE: This assumes the current tagging mechanism (one at a time from the\n    base and large aligned variables being handled first).  */\n-/* { dg-output \"READ of size 4 at 0x\\[0-9a-f\\]* tags: \\[\\[:xdigit:\\]\\]\\[\\[:xdigit:\\]\\]/\\[\\[:xdigit:\\]\\]\\[\\[:xdigit:\\]\\] \\\\(ptr/mem\\\\) in thread T0.*\" } */\n+/* { dg-output \"READ of size 4 at 0x\\[0-9a-f\\]* tags: \\[\\[:xdigit:\\]\\]\\[\\[:xdigit:\\]\\]/\\[\\[:xdigit:\\]\\]\\[\\[:xdigit:\\]\\].* \\\\(ptr/mem\\\\) in thread T0.*\" } */\n /* { dg-output \"Address 0x\\[0-9a-f\\]* is located in stack of thread T0.*\" } */\n /* { dg-output \"SUMMARY: HWAddressSanitizer: tag-mismatch \\[^\\n\\]*.*\" } */"}, {"sha": "c4e698e1b8bafe7ab34f123431f216d749a6b195", "filename": "gcc/testsuite/c-c++-common/hwasan/stack-tagging-basic-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3771486daa1e904ceae6f3e135b28e58af33849f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fhwasan%2Fstack-tagging-basic-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3771486daa1e904ceae6f3e135b28e58af33849f/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fhwasan%2Fstack-tagging-basic-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fhwasan%2Fstack-tagging-basic-1.c?ref=3771486daa1e904ceae6f3e135b28e58af33849f", "patch": "@@ -13,6 +13,6 @@\n #undef ARG\n \n /* { dg-output \"HWAddressSanitizer: tag-mismatch on address 0x\\[0-9a-f\\]*.*\" } */\n-/* { dg-output \"READ of size 4 at 0x\\[0-9a-f\\]* tags: \\[\\[:xdigit:\\]\\]\\[\\[:xdigit:\\]\\]/\\[\\[:xdigit:\\]\\]\\[\\[:xdigit:\\]\\] \\\\(ptr/mem\\\\) in thread T0.*\" } */\n+/* { dg-output \"READ of size 4 at 0x\\[0-9a-f\\]* tags: \\[\\[:xdigit:\\]\\]\\[\\[:xdigit:\\]\\]/\\[\\[:xdigit:\\]\\]\\[\\[:xdigit:\\]\\].* \\\\(ptr/mem\\\\) in thread T0.*\" } */\n /* { dg-output \"Address 0x\\[0-9a-f\\]* is located in stack of thread T0.*\" } */\n /* { dg-output \"SUMMARY: HWAddressSanitizer: tag-mismatch \\[^\\n\\]*.*\" } */"}]}