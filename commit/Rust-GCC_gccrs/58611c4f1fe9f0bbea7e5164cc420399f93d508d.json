{"sha": "58611c4f1fe9f0bbea7e5164cc420399f93d508d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg2MTFjNGYxZmU5ZjBiYmVhN2U1MTY0Y2M0MjAzOTlmOTNkNTA4ZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-10-13T15:31:29Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-10-13T15:31:29Z"}, "message": "sparc.h (SPARC_STACK_ALIGN): Implement using ROUND_UP macro and UNITS_PER_WORD * 2.\n\n\t* config/sparc/sparc.h (SPARC_STACK_ALIGN): Implement using\n\tROUND_UP macro and UNITS_PER_WORD * 2.\n\t* config/sparc/sparc.c (sparc_compute_frame_size):\n\tUse ROUND_UP and ROUND_DOWN macros where applicable.\n\t(function_arg_record_value, function_arg_record_value_1)\n\t(function_arg_record_value_1): Ditto.\n\t(emit_save_or_restore_regs): Use ROUND_DOWN to preserve offset\n\talignment to double-word.\n\t(sparc_gimplify_va_arg): Use ROUND_UP to calculate rsize.\n\t(sparc_emit_probe_stack_range): Use ROUND_DOWN to calculate\n\trounded_size.\n\nFrom-SVN: r228769", "tree": {"sha": "f090e62bb5b7f954d87a09addf882cd8f635a727", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f090e62bb5b7f954d87a09addf882cd8f635a727"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58611c4f1fe9f0bbea7e5164cc420399f93d508d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58611c4f1fe9f0bbea7e5164cc420399f93d508d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58611c4f1fe9f0bbea7e5164cc420399f93d508d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58611c4f1fe9f0bbea7e5164cc420399f93d508d/comments", "author": null, "committer": null, "parents": [{"sha": "63b8ef40c432b8045bc6d7665ff17baf50c2fcb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63b8ef40c432b8045bc6d7665ff17baf50c2fcb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63b8ef40c432b8045bc6d7665ff17baf50c2fcb8"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "57a2854f2fb7ecfe623fa8739827352de1d8b922", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58611c4f1fe9f0bbea7e5164cc420399f93d508d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58611c4f1fe9f0bbea7e5164cc420399f93d508d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58611c4f1fe9f0bbea7e5164cc420399f93d508d", "patch": "@@ -1,3 +1,17 @@\n+2015-10-12  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/sparc/sparc.h (SPARC_STACK_ALIGN): Implement using\n+\tROUND_UP macro and UNITS_PER_WORD * 2.\n+\t* config/sparc/sparc.c (sparc_compute_frame_size):\n+\tUse ROUND_UP and ROUND_DOWN macros where applicable.\n+\t(function_arg_record_value, function_arg_record_value_1)\n+\t(function_arg_record_value_1): Ditto.\n+\t(emit_save_or_restore_regs): Use ROUND_DOWN to preserve offset\n+\talignment to double-word.\n+\t(sparc_gimplify_va_arg): Use ROUND_UP to calculate rsize.\n+\t(sparc_emit_probe_stack_range): Use ROUND_DOWN to calculate\n+\trounded_size.\n+\n 2015-10-13  Tom de Vries  <tom@codesourcery.com>\n \n \t* tree-parloops.c (reduction_phi): Handle cases that gimple_uid is 0 or\n@@ -84,7 +98,7 @@\n \t* tree-ssa-threadbackward.c (get_gimple_control_stmt): New function.\n \t(fsm_find_control_stmt_paths): Change name of first argument to\n \tmore accurately relfect what it really is.  Handle simplification\n-\tof GIMPLE_COND after finding a thread path for NAME. \n+\tof GIMPLE_COND after finding a thread path for NAME.\n \t* tree-ssa-threadedge.c (simplify_control_stmt_condition): Allow\n \tnontrivial conditions to be handled by FSM threader.\n \t(thread_through_normal_block): Extract the name to looup via"}]}