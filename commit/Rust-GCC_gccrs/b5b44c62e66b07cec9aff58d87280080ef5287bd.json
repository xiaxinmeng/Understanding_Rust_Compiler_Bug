{"sha": "b5b44c62e66b07cec9aff58d87280080ef5287bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjViNDRjNjJlNjZiMDdjZWM5YWZmNThkODcyODAwODBlZjUyODdiZA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2015-12-10T17:12:38Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2015-12-10T17:12:38Z"}, "message": "testsuite/lib/multline.exp: show test name and line numbers\n\ngcc/testsuite/ChangeLog:\n\t* lib/multiline.exp (_multiline_expected_outputs): Update comment.\n\t(dg-end-multiline-output): Capture line numbers within\n\t_multiline_expected_outputs.\n\t(handle-multiline-outputs): Access global $testname_with_flags\n\tand add it as a prefix to pass/fail results.  Extract line numbers\n\tfrom $_multiline_expected_outputs and print them within pass/fail\n\tresults, replacing the printing of $index.  Consolidate the\n\tstring prefix shared between pass/fail into a new local ($title).\n\nFrom-SVN: r231530", "tree": {"sha": "a8010e6ddf8c052e2414c516fadb2a8374ca4a6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8010e6ddf8c052e2414c516fadb2a8374ca4a6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5b44c62e66b07cec9aff58d87280080ef5287bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5b44c62e66b07cec9aff58d87280080ef5287bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5b44c62e66b07cec9aff58d87280080ef5287bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5b44c62e66b07cec9aff58d87280080ef5287bd/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3daacdcd5f20d084294f2cc50f84e3e8769205f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3daacdcd5f20d084294f2cc50f84e3e8769205f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3daacdcd5f20d084294f2cc50f84e3e8769205f1"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "bc79f6fe7a6ff8bb29a6bd29e94f01580cc44ff1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b44c62e66b07cec9aff58d87280080ef5287bd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b44c62e66b07cec9aff58d87280080ef5287bd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b5b44c62e66b07cec9aff58d87280080ef5287bd", "patch": "@@ -1,3 +1,14 @@\n+2015-12-10  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* lib/multiline.exp (_multiline_expected_outputs): Update comment.\n+\t(dg-end-multiline-output): Capture line numbers within\n+\t_multiline_expected_outputs.\n+\t(handle-multiline-outputs): Access global $testname_with_flags\n+\tand add it as a prefix to pass/fail results.  Extract line numbers\n+\tfrom $_multiline_expected_outputs and print them within pass/fail\n+\tresults, replacing the printing of $index.  Consolidate the\n+\tstring prefix shared between pass/fail into a new local ($title).\n+\n 2015-12-10  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/68619"}, {"sha": "5367437cd769a9ba69b03869104fd863aba60364", "filename": "gcc/testsuite/lib/multiline.exp", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5b44c62e66b07cec9aff58d87280080ef5287bd/gcc%2Ftestsuite%2Flib%2Fmultiline.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5b44c62e66b07cec9aff58d87280080ef5287bd/gcc%2Ftestsuite%2Flib%2Fmultiline.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fmultiline.exp?ref=b5b44c62e66b07cec9aff58d87280080ef5287bd", "patch": "@@ -54,7 +54,9 @@\n # The line number of the last dg-begin-multiline-output directive.\n set _multiline_last_beginning_line -1\n \n-# A list of lists of strings.\n+# A list of\n+#   first-line-number, last-line-number, lines\n+# where each \"lines\" is a list of strings.\n set _multiline_expected_outputs []\n \n ############################################################################\n@@ -88,12 +90,15 @@ proc dg-end-multiline-output { args } {\n     # Load it and split it into lines\n \n     set lines [_get_lines $prog $_multiline_last_beginning_line $line]\n-    set _multiline_last_beginning_line -1\n \n     verbose \"lines: $lines\" 3\n+    # Create an entry of the form:  first-line, last-line, lines\n+    set entry [list $_multiline_last_beginning_line $line $lines]\n     global _multiline_expected_outputs\n-    lappend _multiline_expected_outputs $lines\n+    lappend _multiline_expected_outputs $entry\n     verbose \"within dg-end-multiline-output: _multiline_expected_outputs: $_multiline_expected_outputs\" 3\n+\n+    set _multiline_last_beginning_line -1\n }\n \n # Hook to be called by prune.exp's prune_gcc_output to\n@@ -107,22 +112,29 @@ proc dg-end-multiline-output { args } {\n \n proc handle-multiline-outputs { text } {\n     global _multiline_expected_outputs\n+    global testname_with_flags\n     set index 0\n-    foreach multiline $_multiline_expected_outputs {\n-\tverbose \"  multiline: $multiline\" 4\n+    foreach entry $_multiline_expected_outputs {\n+\tverbose \"  entry: $entry\" 3\n+\tset start_line [lindex $entry 0]\n+\tset end_line   [lindex $entry 1]\n+\tset multiline  [lindex $entry 2]\n+\tverbose \"  multiline: $multiline\" 3\n \tset rexp [_build_multiline_regex $multiline $index]\n \tverbose \"rexp: ${rexp}\" 4\n \t# Escape newlines in $rexp so that we can print them in\n \t# pass/fail results.\n \tset escaped_regex [string map {\"\\n\" \"\\\\n\"} $rexp]\n \tverbose \"escaped_regex: ${escaped_regex}\" 4\n \n+\tset title \"$testname_with_flags expected multiline pattern lines $start_line-$end_line\"\n+\n \t# Use \"regsub\" to attempt to prune the pattern from $text\n \tif {[regsub -line $rexp $text \"\" text]} {\n \t    # Success; the multiline pattern was pruned.\n-\t    pass \"expected multiline pattern $index was found: \\\"$escaped_regex\\\"\"\n+\t    pass \"$title was found: \\\"$escaped_regex\\\"\"\n \t} else {\n-\t    fail \"expected multiline pattern $index not found: \\\"$escaped_regex\\\"\"\n+\t    fail \"$title not found: \\\"$escaped_regex\\\"\"\n \t}\n \n \tset index [expr $index + 1]"}]}