{"sha": "523968bfbb7ea90fd33b50cef7df0bf8732385b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIzOTY4YmZiYjdlYTkwZmQzM2I1MGNlZjdkZjBiZjg3MzIzODViMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-07-07T12:06:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-07-07T12:06:57Z"}, "message": "tree-ssa-propagate.h (valid_gimple_call_p): Remove.\n\n2010-07-07  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-propagate.h (valid_gimple_call_p): Remove.\n\t* tree-ssa-propagate.c (valid_gimple_call_p): Make static.  Fix.\n\t* gimple.h (is_gimple_operand): Remove.\n\t* gimple.c (is_gimple_operand): Likewise.\n\t(walk_gimple_op): Fix wi->val_only setting for calls.\n\t* tree-cfg.c (verify_gimple_call): Fix argument validation.\n\t* tree-profile.c (tree_gen_ic_func_profiler): Do not create\n\tinvalid gimple calls.\n\nFrom-SVN: r161905", "tree": {"sha": "c58a9f0704189719510e62faa499e804da793b0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c58a9f0704189719510e62faa499e804da793b0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/523968bfbb7ea90fd33b50cef7df0bf8732385b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/523968bfbb7ea90fd33b50cef7df0bf8732385b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/523968bfbb7ea90fd33b50cef7df0bf8732385b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/523968bfbb7ea90fd33b50cef7df0bf8732385b0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b0d9e66374cae4f996a4a2f8f2a58b9f70819ad1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0d9e66374cae4f996a4a2f8f2a58b9f70819ad1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0d9e66374cae4f996a4a2f8f2a58b9f70819ad1"}], "stats": {"total": 85, "additions": 57, "deletions": 28}, "files": [{"sha": "94b0624623aaffd53b150821916c8e92b32ee26d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/523968bfbb7ea90fd33b50cef7df0bf8732385b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/523968bfbb7ea90fd33b50cef7df0bf8732385b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=523968bfbb7ea90fd33b50cef7df0bf8732385b0", "patch": "@@ -1,3 +1,14 @@\n+2010-07-07  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-propagate.h (valid_gimple_call_p): Remove.\n+\t* tree-ssa-propagate.c (valid_gimple_call_p): Make static.  Fix.\n+\t* gimple.h (is_gimple_operand): Remove.\n+\t* gimple.c (is_gimple_operand): Likewise.\n+\t(walk_gimple_op): Fix wi->val_only setting for calls.\n+\t* tree-cfg.c (verify_gimple_call): Fix argument validation.\n+\t* tree-profile.c (tree_gen_ic_func_profiler): Do not create\n+\tinvalid gimple calls.\n+\n 2010-07-06  Jan Hubicka  <jh@suse.cz>\n \n \t* lto-cgraph.c (output_cgraph): Output toplevel asms only into first"}, {"sha": "707d4e4b7c3576ecc66f48e04b326d9c02e3b401", "filename": "gcc/gimple.c", "status": "modified", "additions": 21, "deletions": 16, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/523968bfbb7ea90fd33b50cef7df0bf8732385b0/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/523968bfbb7ea90fd33b50cef7df0bf8732385b0/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=523968bfbb7ea90fd33b50cef7df0bf8732385b0", "patch": "@@ -1383,7 +1383,10 @@ walk_gimple_op (gimple stmt, walk_tree_fn callback_op,\n \n     case GIMPLE_CALL:\n       if (wi)\n-\twi->is_lhs = false;\n+\t{\n+\t  wi->is_lhs = false;\n+\t  wi->val_only = true;\n+\t}\n \n       ret = walk_tree (gimple_call_chain_ptr (stmt), callback_op, wi, pset);\n       if (ret)\n@@ -1395,21 +1398,32 @@ walk_gimple_op (gimple stmt, walk_tree_fn callback_op,\n \n       for (i = 0; i < gimple_call_num_args (stmt); i++)\n \t{\n+\t  if (wi)\n+\t    wi->val_only = is_gimple_reg_type (gimple_call_arg (stmt, i));\n \t  ret = walk_tree (gimple_call_arg_ptr (stmt, i), callback_op, wi,\n \t\t\t   pset);\n \t  if (ret)\n \t    return ret;\n \t}\n \n-      if (wi)\n-\twi->is_lhs = true;\n+      if (gimple_call_lhs (stmt))\n+\t{\n+\t  if (wi)\n+\t    {\n+\t      wi->is_lhs = true;\n+\t      wi->val_only = is_gimple_reg_type (gimple_call_lhs (stmt));\n+\t    }\n \n-      ret = walk_tree (gimple_call_lhs_ptr (stmt), callback_op, wi, pset);\n-      if (ret)\n-\treturn ret;\n+\t  ret = walk_tree (gimple_call_lhs_ptr (stmt), callback_op, wi, pset);\n+\t  if (ret)\n+\t    return ret;\n+\t}\n \n       if (wi)\n-\twi->is_lhs = false;\n+\t{\n+\t  wi->is_lhs = false;\n+\t  wi->val_only = true;\n+\t}\n       break;\n \n     case GIMPLE_CATCH:\n@@ -2538,15 +2552,6 @@ const unsigned char gimple_rhs_class_table[] = {\n \n /* Validation of GIMPLE expressions.  */\n \n-/* Return true if OP is an acceptable tree node to be used as a GIMPLE\n-   operand.  */\n-\n-bool\n-is_gimple_operand (const_tree op)\n-{\n-  return op && get_gimple_rhs_class (TREE_CODE (op)) == GIMPLE_SINGLE_RHS;\n-}\n-\n /* Returns true iff T is a valid RHS for an assignment to a renamed\n    user -- or front-end generated artificial -- variable.  */\n "}, {"sha": "ec7fc932d2828499c7b171522612e3b29ddc09f4", "filename": "gcc/gimple.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/523968bfbb7ea90fd33b50cef7df0bf8732385b0/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/523968bfbb7ea90fd33b50cef7df0bf8732385b0/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=523968bfbb7ea90fd33b50cef7df0bf8732385b0", "patch": "@@ -879,7 +879,6 @@ tree gimple_get_lhs (const_gimple);\n void gimple_set_lhs (gimple, tree);\n void gimple_replace_lhs (gimple, tree);\n gimple gimple_copy (gimple);\n-bool is_gimple_operand (const_tree);\n void gimple_set_modified (gimple, bool);\n void gimple_cond_get_ops_from_tree (tree, enum tree_code *, tree *, tree *);\n gimple gimple_build_cond_from_tree (tree, tree, tree);"}, {"sha": "e55a60bd0a29db1727aaad8d2c3dd63cb7e1c3a6", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/523968bfbb7ea90fd33b50cef7df0bf8732385b0/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/523968bfbb7ea90fd33b50cef7df0bf8732385b0/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=523968bfbb7ea90fd33b50cef7df0bf8732385b0", "patch": "@@ -3114,7 +3114,10 @@ verify_gimple_call (gimple stmt)\n   for (i = 0; i < gimple_call_num_args (stmt); ++i)\n     {\n       tree arg = gimple_call_arg (stmt, i);\n-      if (!is_gimple_operand (arg))\n+      if ((is_gimple_reg_type (TREE_TYPE (arg))\n+\t   && !is_gimple_val (arg))\n+\t  || (!is_gimple_reg_type (TREE_TYPE (arg))\n+\t      && !is_gimple_lvalue (arg)))\n \t{\n \t  error (\"invalid argument to gimple call\");\n \t  debug_generic_expr (arg);"}, {"sha": "a854c50f77e23b81fc0451a1682106a1fbc1ce14", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/523968bfbb7ea90fd33b50cef7df0bf8732385b0/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/523968bfbb7ea90fd33b50cef7df0bf8732385b0/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=523968bfbb7ea90fd33b50cef7df0bf8732385b0", "patch": "@@ -340,7 +340,7 @@ tree_gen_ic_func_profiler (void)\n   basic_block bb;\n   edge_iterator ei;\n   gimple stmt1, stmt2;\n-  tree tree_uid, cur_func;\n+  tree tree_uid, cur_func, counter_ptr, ptr_var;\n \n   if (cgraph_only_called_directly_p (c_node))\n     return;\n@@ -358,13 +358,16 @@ tree_gen_ic_func_profiler (void)\n \t\t\t\t\t   build_addr (current_function_decl,\n \t\t\t\t\t\t       current_function_decl),\n \t\t\t\t\t   true, NULL_TREE,\n-\t\t\t\t\t   true, GSI_SAME_STMT);\n+\t\t\t\t\t   true, GSI_NEW_STMT);\n+      counter_ptr = force_gimple_operand_gsi (&gsi, ic_gcov_type_ptr_var,\n+\t\t\t\t\t      true, NULL_TREE, false,\n+\t\t\t\t\t      GSI_NEW_STMT);\n+      ptr_var = force_gimple_operand_gsi (&gsi, ic_void_ptr_var,\n+\t\t\t\t\t  true, NULL_TREE, false,\n+\t\t\t\t\t  GSI_NEW_STMT);\n       tree_uid = build_int_cst (gcov_type_node, c_node->pid);\n       stmt1 = gimple_build_call (tree_indirect_call_profiler_fn, 4,\n-\t\t\t\t ic_gcov_type_ptr_var,\n-\t\t\t\t tree_uid,\n-\t\t\t\t cur_func,\n-\t\t\t\t ic_void_ptr_var);\n+\t\t\t\t counter_ptr, tree_uid, cur_func, ptr_var);\n       gsi_insert_after (&gsi, stmt1, GSI_NEW_STMT);\n       gcc_assert (EDGE_COUNT (bb->succs) == 1);\n       bb = split_edge (EDGE_I (bb->succs, 0));"}, {"sha": "6f50fc5453a80c4b039d6f2bfa29dbd243140295", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/523968bfbb7ea90fd33b50cef7df0bf8732385b0/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/523968bfbb7ea90fd33b50cef7df0bf8732385b0/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=523968bfbb7ea90fd33b50cef7df0bf8732385b0", "patch": "@@ -639,7 +639,7 @@ valid_gimple_rhs_p (tree expr)\n    as a single GIMPLE_CALL statement.  If the arguments require\n    further gimplification, return false.  */\n \n-bool\n+static bool\n valid_gimple_call_p (tree expr)\n {\n   unsigned i, nargs;\n@@ -649,8 +649,17 @@ valid_gimple_call_p (tree expr)\n \n   nargs = call_expr_nargs (expr);\n   for (i = 0; i < nargs; i++)\n-    if (! is_gimple_operand (CALL_EXPR_ARG (expr, i)))\n-      return false;\n+    {\n+      tree arg = CALL_EXPR_ARG (expr, i);\n+      if (is_gimple_reg_type (arg))\n+\t{\n+\t  if (!is_gimple_val (arg))\n+\t    return false;\n+\t}\n+      else\n+\tif (!is_gimple_lvalue (arg))\n+\t  return false;\n+    }\n \n   return true;\n }"}, {"sha": "c5bb9731c5ee54ba0f16a6a958b0383e1cecbcba", "filename": "gcc/tree-ssa-propagate.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/523968bfbb7ea90fd33b50cef7df0bf8732385b0/gcc%2Ftree-ssa-propagate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/523968bfbb7ea90fd33b50cef7df0bf8732385b0/gcc%2Ftree-ssa-propagate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.h?ref=523968bfbb7ea90fd33b50cef7df0bf8732385b0", "patch": "@@ -116,7 +116,6 @@ typedef bool (*ssa_prop_fold_stmt_fn) (gimple_stmt_iterator *gsi);\n /* In tree-ssa-propagate.c  */\n void ssa_propagate (ssa_prop_visit_stmt_fn, ssa_prop_visit_phi_fn);\n bool valid_gimple_rhs_p (tree);\n-bool valid_gimple_call_p (tree);\n void move_ssa_defining_stmt_for_defs (gimple, gimple);\n bool update_call_from_tree (gimple_stmt_iterator *, tree);\n bool stmt_makes_single_store (gimple);"}]}