{"sha": "8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNhMWVlNWRhMzVjOGQ4MWY5YWU1YzBiMjM2OWUwMWQ5NTViZmVkNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-03T10:52:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-03T10:52:31Z"}, "message": "[multiple changes]\n\n2013-01-03  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch7.adb, sem_ch10.adb, einfo.adb, einfo.ads, sem_ch12.adb,\n\trtsfind.adb, sem_elab.adb, sem_ch4.adb, sem_ch8.adb\n\t(Einfo.Is_Visible_Child_Unit, Einfo.Set_Is_Visible_Child_Unit):\n\tRename to Is_Visible_Lib_Unit, Set_Is_Visible_Lib_Unit, and\n\tupdate spec accordingly (now also applies to root library units).\n\t(Sem_Ch10.Analyze_Subunit.Analyze_Subunit_Context): Toggle above flag\n\ton root library units, not only child units.\n\t(Sem_Ch10.Install[_Limited]_Withed_Unit): Same.\n\t(Sem_Ch10.Remove_Unit_From_Visibility): Reset Is_Visible_Lib_Unit\n\teven for root library units.\n\t(Sem_Ch8.Find_Expanded_Name): A selected component form whose prefix is\n\tStandard is an expanded name for a root library unit.\n\n2013-01-03  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch3.adb: Minor reformatting.\n\n2013-01-03  Olivier Hainque  <hainque@adacore.com>\n\n\t* tracebak.c: Reinstate changes to support ppc-lynx178.\n\n2013-01-03  Ed Schonberg  <schonberg@adacore.com>\n\n\t* atree.ads: Minor reformatting and documentation enhancement.\n\nFrom-SVN: r194845", "tree": {"sha": "f3c3d8d086af3965e2a9c9812342b73df457703d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3c3d8d086af3965e2a9c9812342b73df457703d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/comments", "author": null, "committer": null, "parents": [{"sha": "0c6f926d31da7dfa75fb770646f91ac407478101", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c6f926d31da7dfa75fb770646f91ac407478101", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c6f926d31da7dfa75fb770646f91ac407478101"}], "stats": {"total": 186, "additions": 123, "deletions": 63}, "files": [{"sha": "ce761e1fd42e29d8d9739a6b1fd1d6906c56a4a0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5", "patch": "@@ -1,3 +1,30 @@\n+2013-01-03  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch7.adb, sem_ch10.adb, einfo.adb, einfo.ads, sem_ch12.adb,\n+\trtsfind.adb, sem_elab.adb, sem_ch4.adb, sem_ch8.adb\n+\t(Einfo.Is_Visible_Child_Unit, Einfo.Set_Is_Visible_Child_Unit):\n+\tRename to Is_Visible_Lib_Unit, Set_Is_Visible_Lib_Unit, and\n+\tupdate spec accordingly (now also applies to root library units).\n+\t(Sem_Ch10.Analyze_Subunit.Analyze_Subunit_Context): Toggle above flag\n+\ton root library units, not only child units.\n+\t(Sem_Ch10.Install[_Limited]_Withed_Unit): Same.\n+\t(Sem_Ch10.Remove_Unit_From_Visibility): Reset Is_Visible_Lib_Unit\n+\teven for root library units.\n+\t(Sem_Ch8.Find_Expanded_Name): A selected component form whose prefix is\n+\tStandard is an expanded name for a root library unit.\n+\n+2013-01-03  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch3.adb: Minor reformatting.\n+\n+2013-01-03  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* tracebak.c: Reinstate changes to support ppc-lynx178.\n+\n+2013-01-03  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* atree.ads: Minor reformatting and documentation enhancement.\n+\n 2013-01-03  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch3.adb (Expand_N_Object_Declaration): If the object has"}, {"sha": "2b295bae5c3ef414214273fb95596a2023d9ab7c", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5", "patch": "@@ -508,7 +508,9 @@ package Atree is\n    --  entities point correctly to their original parents. The effect is thus\n    --  to leave the tree completely unchanged in structure, except that the\n    --  entity ID values of the two entities are interchanged. Neither of the\n-   --  two entities may be list members.\n+   --  two entities may be list members. Note that entities appear on two\n+   --  semantic chains: Homonym and Next_Entity: the corresponding links must\n+   --  be adjusted by the caller, according to context.\n \n    function Extend_Node (Node : Node_Id) return Entity_Id;\n    --  This function returns a copy of its input node with an extension added."}, {"sha": "4f57731f8dd387a8dfc59c3531a8006aa9c33039", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5", "patch": "@@ -375,7 +375,7 @@ package body Einfo is\n    --    No_Return                       Flag113\n    --    Delay_Cleanups                  Flag114\n    --    Never_Set_In_Source             Flag115\n-   --    Is_Visible_Child_Unit           Flag116\n+   --    Is_Visible_Lib_Unit             Flag116\n    --    Is_Unchecked_Union              Flag117\n    --    Is_For_Access_Subtype           Flag118\n    --    Has_Convention_Pragma           Flag119\n@@ -2175,11 +2175,10 @@ package body Einfo is\n       return Flag127 (Id);\n    end Is_Valued_Procedure;\n \n-   function Is_Visible_Child_Unit (Id : E) return B is\n+   function Is_Visible_Lib_Unit (Id : E) return B is\n    begin\n-      pragma Assert (Is_Child_Unit (Id));\n       return Flag116 (Id);\n-   end Is_Visible_Child_Unit;\n+   end Is_Visible_Lib_Unit;\n \n    function Is_Visible_Formal (Id : E) return B is\n    begin\n@@ -4736,11 +4735,10 @@ package body Einfo is\n       Set_Flag127 (Id, V);\n    end Set_Is_Valued_Procedure;\n \n-   procedure Set_Is_Visible_Child_Unit (Id : E; V : B := True) is\n+   procedure Set_Is_Visible_Lib_Unit (Id : E; V : B := True) is\n    begin\n-      pragma Assert (Is_Child_Unit (Id));\n       Set_Flag116 (Id, V);\n-   end Set_Is_Visible_Child_Unit;\n+   end Set_Is_Visible_Lib_Unit;\n \n    procedure Set_Is_Visible_Formal (Id : E; V : B := True) is\n    begin\n@@ -7602,7 +7600,7 @@ package body Einfo is\n       W (\"Is_Unsigned_Type\",                Flag144 (Id));\n       W (\"Is_VMS_Exception\",                Flag133 (Id));\n       W (\"Is_Valued_Procedure\",             Flag127 (Id));\n-      W (\"Is_Visible_Child_Unit\",           Flag116 (Id));\n+      W (\"Is_Visible_Lib_Unit\",             Flag116 (Id));\n       W (\"Is_Visible_Formal\",               Flag206 (Id));\n       W (\"Is_Volatile\",                     Flag16  (Id));\n       W (\"Itype_Printed\",                   Flag202 (Id));"}, {"sha": "35400cf4442be424891d49611c00def477e5213d", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5", "patch": "@@ -2856,11 +2856,11 @@ package Einfo is\n --       Defined in procedure entities. Set if an Import_Valued_Procedure\n --       or Export_Valued_Procedure pragma applies to the procedure entity.\n \n---    Is_Visible_Child_Unit (Flag116)\n---       Defined in compilation units that are child units. Once compiled,\n---       child units remain chained to the entities in the parent unit, and\n---       a separate flag must be used to indicate whether the names are\n---       visible by selected notation, or not.\n+--    Is_Visible_Lib_Unit (Flag116)\n+--       Defined in all (root or child) library unit entities. Once compiled,\n+--       library units remain chained to the entities in the parent scope, and\n+--       a separate flag must be used to indicate whether the names are visible\n+--       by selected notation, or not.\n \n --    Is_Visible_Formal (Flag206)\n --       Defined in all entities. Set True for instances of the formals of a\n@@ -5310,7 +5310,7 @@ package Einfo is\n    --    Is_Private_Primitive                (Flag245)  (non-generic case only)\n    --    Is_Pure                             (Flag44)\n    --    Is_Thunk                            (Flag225)\n-   --    Is_Visible_Child_Unit               (Flag116)\n+   --    Is_Visible_Lib_Unit                 (Flag116)\n    --    Needs_No_Actuals                    (Flag22)\n    --    Requires_Overriding                 (Flag213)  (non-generic case only)\n    --    Return_Present                      (Flag54)\n@@ -5490,7 +5490,7 @@ package Einfo is\n    --    In_Use                              (Flag8)\n    --    Is_Instantiated                     (Flag126)\n    --    Is_Private_Descendant               (Flag53)\n-   --    Is_Visible_Child_Unit               (Flag116)\n+   --    Is_Visible_Lib_Unit                 (Flag116)\n    --    Renamed_In_Spec                     (Flag231)  (non-generic case only)\n    --    Static_Elaboration_Desired          (Flag77)   (non-generic case only)\n    --    Is_Wrapper_Package                  (synth)    (non-generic case only)\n@@ -5580,7 +5580,7 @@ package Einfo is\n    --    Is_Pure                             (Flag44)\n    --    Is_Thunk                            (Flag225)\n    --    Is_Valued_Procedure                 (Flag127)\n-   --    Is_Visible_Child_Unit               (Flag116)\n+   --    Is_Visible_Lib_Unit                 (Flag116)\n    --    Needs_No_Actuals                    (Flag22)\n    --    No_Return                           (Flag113)\n    --    Requires_Overriding                 (Flag213)  (non-generic case only)\n@@ -6310,7 +6310,7 @@ package Einfo is\n    function Is_Unsigned_Type                    (Id : E) return B;\n    function Is_VMS_Exception                    (Id : E) return B;\n    function Is_Valued_Procedure                 (Id : E) return B;\n-   function Is_Visible_Child_Unit               (Id : E) return B;\n+   function Is_Visible_Lib_Unit                 (Id : E) return B;\n    function Is_Visible_Formal                   (Id : E) return B;\n    function Is_Volatile                         (Id : E) return B;\n    function Itype_Printed                       (Id : E) return B;\n@@ -6908,7 +6908,7 @@ package Einfo is\n    procedure Set_Is_Unsigned_Type                (Id : E; V : B := True);\n    procedure Set_Is_VMS_Exception                (Id : E; V : B := True);\n    procedure Set_Is_Valued_Procedure             (Id : E; V : B := True);\n-   procedure Set_Is_Visible_Child_Unit           (Id : E; V : B := True);\n+   procedure Set_Is_Visible_Lib_Unit             (Id : E; V : B := True);\n    procedure Set_Is_Visible_Formal               (Id : E; V : B := True);\n    procedure Set_Is_Volatile                     (Id : E; V : B := True);\n    procedure Set_Itype_Printed                   (Id : E; V : B := True);\n@@ -7629,7 +7629,7 @@ package Einfo is\n    pragma Inline (Is_Unsigned_Type);\n    pragma Inline (Is_VMS_Exception);\n    pragma Inline (Is_Valued_Procedure);\n-   pragma Inline (Is_Visible_Child_Unit);\n+   pragma Inline (Is_Visible_Lib_Unit);\n    pragma Inline (Is_Visible_Formal);\n    pragma Inline (Itype_Printed);\n    pragma Inline (Kill_Elaboration_Checks);\n@@ -8035,7 +8035,7 @@ package Einfo is\n    pragma Inline (Set_Is_Unsigned_Type);\n    pragma Inline (Set_Is_VMS_Exception);\n    pragma Inline (Set_Is_Valued_Procedure);\n-   pragma Inline (Set_Is_Visible_Child_Unit);\n+   pragma Inline (Set_Is_Visible_Lib_Unit);\n    pragma Inline (Set_Is_Visible_Formal);\n    pragma Inline (Set_Is_Volatile);\n    pragma Inline (Set_Itype_Printed);"}, {"sha": "83d0c004854c021477ad95c16bd8b0b5d5309a76", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5", "patch": "@@ -5315,6 +5315,17 @@ package body Exp_Ch3 is\n                       Subtype_Mark        => New_Occurrence_Of (Typ, Loc),\n                       Name => Convert_Tag_To_Interface (Typ, Tag_Comp)));\n \n+                  --  If the original entity comes from source, then mark the\n+                  --  new entity as needing debug information, even though it's\n+                  --  defined by a generated renaming that does not come from\n+                  --  source, so that Materialize_Entity will be set on the\n+                  --  entity when Debug_Renaming_Declaration is called during\n+                  --  analysis.\n+\n+                  if Comes_From_Source (Def_Id) then\n+                     Set_Debug_Info_Needed (Defining_Identifier (N));\n+                  end if;\n+\n                   Analyze (N, Suppress => All_Checks);\n \n                   --  Replace internal identifier of rewritten node by the\n@@ -5328,7 +5339,7 @@ package body Exp_Ch3 is\n                   --  which may be a constant. Preserve entity chain because\n                   --  itypes may have been generated already, and the full\n                   --  chain must be preserved for final freezing. Finally,\n-                  --  Preserve Comes_From_Source setting, so that debugging\n+                  --  preserve Comes_From_Source setting, so that debugging\n                   --  and cross-referencing information is properly kept.\n \n                   declare\n@@ -5340,9 +5351,11 @@ package body Exp_Ch3 is\n                   begin\n                      Set_Next_Entity (New_Id, Next_Entity (Def_Id));\n                      Set_Next_Entity (Def_Id, Next_Temp);\n-                     Set_Chars (Defining_Identifier (N), Chars (Def_Id));\n+\n+                     Set_Chars   (Defining_Identifier (N), Chars   (Def_Id));\n                      Set_Homonym (Defining_Identifier (N), Homonym (Def_Id));\n-                     Set_Ekind (Defining_Identifier (N), Ekind (Def_Id));\n+                     Set_Ekind   (Defining_Identifier (N), Ekind   (Def_Id));\n+\n                      Set_Comes_From_Source (Def_Id, False);\n                      Exchange_Entities (Defining_Identifier (N), Def_Id);\n                      Set_Comes_From_Source (Def_Id, S_Flag);"}, {"sha": "ac662f8ddbe4ecfb811518a20dab970fec020322", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5", "patch": "@@ -1466,7 +1466,7 @@ package body Rtsfind is\n                end if;\n \n                Load_RTU (To_Load, Use_Setting => In_Use (Cunit_Entity (U)));\n-               Set_Is_Visible_Child_Unit (RT_Unit_Table (To_Load).Entity);\n+               Set_Is_Visible_Lib_Unit (RT_Unit_Table (To_Load).Entity);\n \n                --  Prevent creation of an implicit 'with' from (for example)\n                --  Ada.Wide_Text_IO.Integer_IO to Ada.Text_IO.Integer_IO,"}, {"sha": "0fd690a1d2a77342497d53894c94c34e418ffee6", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 24, "deletions": 23, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5", "patch": "@@ -2040,9 +2040,15 @@ package body Sem_Ch10 is\n                      end if;\n \n                      Unit_Name := Entity (Name (Item));\n-                     while Is_Child_Unit (Unit_Name) loop\n-                        Set_Is_Visible_Child_Unit (Unit_Name);\n+                     loop\n+                        Set_Is_Visible_Lib_Unit (Unit_Name);\n+                        exit when Scope (Unit_Name) = Standard_Standard;\n                         Unit_Name := Scope (Unit_Name);\n+\n+                        if No (Unit_Name) then\n+                           Check_Error_Detected;\n+                           return;\n+                        end if;\n                      end loop;\n \n                      if not Is_Immediately_Visible (Unit_Name) then\n@@ -2083,8 +2089,9 @@ package body Sem_Ch10 is\n               and then not Error_Posted (Item)\n             then\n                Unit_Name := Entity (Name (Item));\n-               while Is_Child_Unit (Unit_Name) loop\n-                  Set_Is_Visible_Child_Unit (Unit_Name, False);\n+               loop\n+                  Set_Is_Visible_Lib_Unit (Unit_Name, False);\n+                  exit when Scope (Unit_Name) = Standard_Standard;\n                   Unit_Name := Scope (Unit_Name);\n                end loop;\n \n@@ -2131,7 +2138,7 @@ package body Sem_Ch10 is\n          E := First_Entity (Current_Scope);\n          while Present (E) loop\n             if not Is_Child_Unit (E)\n-              or else Is_Visible_Child_Unit (E)\n+              or else Is_Visible_Lib_Unit (E)\n             then\n                Set_Is_Immediately_Visible (E);\n             end if;\n@@ -2296,11 +2303,9 @@ package body Sem_Ch10 is\n             C : Entity_Id;\n          begin\n             C := Current_Scope;\n-            while Present (C)\n-              and then Is_Child_Unit (C)\n-            loop\n+            while Present (C) and then C /= Standard_Standard loop\n                Set_Is_Immediately_Visible (C);\n-               Set_Is_Visible_Child_Unit (C);\n+               Set_Is_Visible_Lib_Unit (C);\n                C := Scope (C);\n             end loop;\n          end;\n@@ -4210,7 +4215,7 @@ package body Sem_Ch10 is\n                   end In_Context;\n \n                begin\n-                  Set_Is_Visible_Child_Unit (Id, In_Context);\n+                  Set_Is_Visible_Lib_Unit (Id, In_Context);\n                end;\n             end if;\n          end if;\n@@ -4788,7 +4793,7 @@ package body Sem_Ch10 is\n       if Analyzed (P_Unit)\n         and then\n           (Is_Immediately_Visible (P)\n-            or else (Is_Child_Package and then Is_Visible_Child_Unit (P)))\n+            or else (Is_Child_Package and then Is_Visible_Lib_Unit (P)))\n       then\n \n          --  The presence of both the limited and the analyzed nonlimited view\n@@ -4852,10 +4857,10 @@ package body Sem_Ch10 is\n             Set_Ekind (P, E_Package);\n             Set_Etype (P, Standard_Void_Type);\n             Set_Scope (P, Standard_Standard);\n+            Set_Is_Visible_Lib_Unit (P);\n \n             if Is_Child_Package then\n                Set_Is_Child_Unit (P);\n-               Set_Is_Visible_Child_Unit (P);\n                Set_Scope (P, Defining_Entity (Unit (Parent_Spec (P_Unit))));\n             end if;\n \n@@ -5101,7 +5106,7 @@ package body Sem_Ch10 is\n             Error_Msg_N\n               (\"instantiation depends on itself\", Name (With_Clause));\n \n-         elsif not Is_Visible_Child_Unit (Uname) then\n+         elsif not Is_Visible_Lib_Unit (Uname) then\n \n             --  Abandon processing in case of previous errors\n \n@@ -5110,7 +5115,7 @@ package body Sem_Ch10 is\n                return;\n             end if;\n \n-            Set_Is_Visible_Child_Unit (Uname);\n+            Set_Is_Visible_Lib_Unit (Uname);\n \n             --  If the child unit appears in the context of its parent, it is\n             --  immediately visible.\n@@ -5125,7 +5130,7 @@ package body Sem_Ch10 is\n                --  Set flag as well on the visible entity that denotes the\n                --  instance, which renames the current one.\n \n-               Set_Is_Visible_Child_Unit\n+               Set_Is_Visible_Lib_Unit\n                  (Related_Instance\n                    (Defining_Entity (Unit (Library_Unit (With_Clause)))));\n             end if;\n@@ -5141,6 +5146,7 @@ package body Sem_Ch10 is\n          end if;\n \n       elsif not Is_Immediately_Visible (Uname) then\n+         Set_Is_Visible_Lib_Unit (Uname);\n          if not Private_Present (With_Clause)\n            or else Private_With_OK\n          then\n@@ -5167,7 +5173,7 @@ package body Sem_Ch10 is\n       --  not apply the check to the Standard package itself.\n \n       if Is_Child_Unit (Uname)\n-        and then Is_Visible_Child_Unit (Uname)\n+        and then Is_Visible_Lib_Unit (Uname)\n         and then Ada_Version >= Ada_2005\n       then\n          declare\n@@ -5185,7 +5191,7 @@ package body Sem_Ch10 is\n                Decl2  := Unit_Declaration_Node (P2);\n \n                if Is_Child_Unit (U2)\n-                 and then Is_Visible_Child_Unit (U2)\n+                 and then Is_Visible_Lib_Unit (U2)\n                then\n                   if Is_Generic_Instance (P)\n                     and then Nkind (Decl1) = N_Package_Declaration\n@@ -6220,8 +6226,6 @@ package body Sem_Ch10 is\n    ---------------------------------\n \n    procedure Remove_Unit_From_Visibility (Unit_Name : Entity_Id) is\n-      P : constant Entity_Id := Scope (Unit_Name);\n-\n    begin\n       if Debug_Flag_I then\n          Write_Str (\"remove unit \");\n@@ -6230,10 +6234,7 @@ package body Sem_Ch10 is\n          Write_Eol;\n       end if;\n \n-      if P /= Standard_Standard then\n-         Set_Is_Visible_Child_Unit (Unit_Name, False);\n-      end if;\n-\n+      Set_Is_Visible_Lib_Unit        (Unit_Name, False);\n       Set_Is_Potentially_Use_Visible (Unit_Name, False);\n       Set_Is_Immediately_Visible     (Unit_Name, False);\n "}, {"sha": "040d6241ca3ef9f83da9a08530c25716adccaea5", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5", "patch": "@@ -5719,7 +5719,7 @@ package body Sem_Ch12 is\n                  and then Is_Child_Unit (E)\n                then\n                   if Is_Child_Unit (E)\n-                    and then not Is_Visible_Child_Unit (E)\n+                    and then not Is_Visible_Lib_Unit (E)\n                   then\n                      Error_Msg_NE\n                        (\"generic child unit& is not visible\", Gen_Id, E);"}, {"sha": "94427604fcc3e081e39ea92fce7680d63b992f57", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5", "patch": "@@ -1765,7 +1765,7 @@ package body Sem_Ch4 is\n                    (Is_Immediately_Visible (Scope (DT))\n                      or else\n                        (Is_Child_Unit (Scope (DT))\n-                          and then Is_Visible_Child_Unit (Scope (DT))))\n+                          and then Is_Visible_Lib_Unit (Scope (DT))))\n                then\n                   Set_Etype (N, Available_View (DT));\n \n@@ -6320,7 +6320,7 @@ package body Sem_Ch4 is\n           (Is_Immediately_Visible (Scope (Typ))\n             or else\n               (Is_Child_Unit (Scope (Typ))\n-                 and then Is_Visible_Child_Unit (Scope (Typ))))\n+                 and then Is_Visible_Lib_Unit (Scope (Typ))))\n       then\n          return Available_View (Typ);\n       else"}, {"sha": "dd1e1d4120e96f041a6dc53362b28f678624f413", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5", "patch": "@@ -2253,7 +2253,7 @@ package body Sem_Ch7 is\n \n                if Is_Child_Unit (Id) then\n                   Set_Is_Potentially_Use_Visible\n-                    (Id, Is_Visible_Child_Unit (Id));\n+                    (Id, Is_Visible_Lib_Unit (Id));\n                else\n                   Set_Is_Potentially_Use_Visible (Id);\n                end if;"}, {"sha": "0a046def1cf4d3408bef509566f6cc22d7dc7c5d", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5", "patch": "@@ -5143,8 +5143,8 @@ package body Sem_Ch8 is\n             end if;\n \n             if Is_New_Candidate then\n-               if Is_Child_Unit (Id) then\n-                  exit when Is_Visible_Child_Unit (Id)\n+               if Is_Child_Unit (Id) or else P_Name = Standard_Standard then\n+                  exit when Is_Visible_Lib_Unit (Id)\n                     or else Is_Immediately_Visible (Id);\n \n                else\n@@ -5334,7 +5334,7 @@ package body Sem_Ch8 is\n                     and then Is_Compilation_Unit (Homonym (P_Name))\n                     and then\n                      (Is_Immediately_Visible (Homonym (P_Name))\n-                        or else Is_Visible_Child_Unit (Homonym (P_Name)))\n+                        or else Is_Visible_Lib_Unit (Homonym (P_Name)))\n                   then\n                      declare\n                         H : constant Entity_Id := Homonym (P_Name);\n@@ -7685,7 +7685,7 @@ package body Sem_Ch8 is\n                if Is_Child_Unit (E) then\n                   if not From_With_Type (E) then\n                      Set_Is_Immediately_Visible (E,\n-                       Is_Visible_Child_Unit (E) or else In_Open_Scopes (E));\n+                       Is_Visible_Lib_Unit (E) or else In_Open_Scopes (E));\n \n                   else\n                      pragma Assert\n@@ -7718,7 +7718,7 @@ package body Sem_Ch8 is\n                while Present (E) loop\n                   if Is_Child_Unit (E) then\n                      Set_Is_Immediately_Visible (E,\n-                       Is_Visible_Child_Unit (E) or else In_Open_Scopes (E));\n+                       Is_Visible_Lib_Unit (E) or else In_Open_Scopes (E));\n                   end if;\n \n                   Next_Entity (E);\n@@ -8030,7 +8030,7 @@ package body Sem_Ch8 is\n \n          if not Is_Hidden (Id)\n            and then ((not Is_Child_Unit (Id))\n-                       or else Is_Visible_Child_Unit (Id))\n+                       or else Is_Visible_Lib_Unit (Id))\n          then\n             Set_Is_Potentially_Use_Visible (Id);\n \n@@ -8050,7 +8050,7 @@ package body Sem_Ch8 is\n \n       while Present (Id) loop\n          if Is_Child_Unit (Id)\n-           and then Is_Visible_Child_Unit (Id)\n+           and then Is_Visible_Lib_Unit (Id)\n          then\n             Set_Is_Potentially_Use_Visible (Id);\n          end if;"}, {"sha": "4c86ce353a49753d8096b0532a384ff67f1ee0ef", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5", "patch": "@@ -2551,7 +2551,7 @@ package body Sem_Elab is\n       --  visible, and we can set the elaboration flag.\n \n       if Is_Immediately_Visible (Scop)\n-        or else (Is_Child_Unit (Scop) and then Is_Visible_Child_Unit (Scop))\n+        or else (Is_Child_Unit (Scop) and then Is_Visible_Lib_Unit (Scop))\n       then\n          Activate_Elaborate_All_Desirable (Call, Scop);\n          Set_Suppress_Elaboration_Warnings (Scop, True);"}, {"sha": "123df59881d4e6430f3db3386daff847ffad966b", "filename": "gcc/ada/tracebak.c", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Ftracebak.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5/gcc%2Fada%2Ftracebak.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftracebak.c?ref=8ca1ee5da35c8d81f9ae5c0b2369e01d955bfed5", "patch": "@@ -35,6 +35,7 @@\n    PowerPC/AiX\n    PowerPC/Darwin\n    PowerPC/VxWorks\n+   PowerPC/LynxOS-178\n    SPARC/Solaris\n    i386/GNU/Linux\n    i386/Solaris\n@@ -287,9 +288,10 @@ __gnat_backtrace (void **array,\n #error Unhandled darwin architecture.\n #endif\n \n-/*------------------------ PPC AIX/Older Darwin -------------------------*/\n+/*---------------------- PPC AIX/PPC Lynx 178/Older Darwin ------------------*/\n #elif ((defined (_POWER) && defined (_AIX)) || \\\n-(defined (__ppc__) && defined (__APPLE__)))\n+       (defined (__powerpc__) && defined (__Lynx__) && !defined(__ELF__)) || \\\n+       (defined (__ppc__) && defined (__APPLE__)))\n \n #define USE_GENERIC_UNWINDER\n \n@@ -307,9 +309,26 @@ struct layout\n    should to feature a null backchain, AIX might expose a null return\n    address instead.  */\n \n+/* Then LynxOS-178 features yet another variation, with return_address\n+   == &<entrypoint>, with two possible entry points (one for the main\n+   process and one for threads). Beware that &bla returns the address\n+   of a descriptor when \"bla\" is a function.  Getting the code address\n+   requires an extra dereference.  */\n+\n+#if defined (__Lynx__)\n+extern void __start();  /* process entry point.  */\n+extern void __runnit(); /* thread entry point.  */\n+#define EXTRA_STOP_CONDITION(CURRENT)                 \\\n+  ((CURRENT)->return_address == *(void**)&__start     \\\n+   || (CURRENT)->return_address == *(void**)&__runnit)\n+#else\n+#define EXTRA_STOP_CONDITION(CURRENT) (0)\n+#endif\n+\n #define STOP_FRAME(CURRENT, TOP_STACK) \\\n   (((void *) (CURRENT) < (TOP_STACK)) \\\n-   || (CURRENT)->return_address == NULL)\n+   || (CURRENT)->return_address == NULL \\\n+   || EXTRA_STOP_CONDITION(CURRENT))\n \n /* The PPC ABI has an interesting specificity: the return address saved by a\n    function is located in it's caller's frame, and the save operation only"}]}