{"sha": "055ca34daa803f5353ced57d2d30041b93701c8c", "node_id": "C_kwDOANBUbNoAKDA1NWNhMzRkYWE4MDNmNTM1M2NlZDU3ZDJkMzAwNDFiOTM3MDFjOGM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-02-08T17:30:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-08T17:30:04Z"}, "message": "Merge #911\n\n911: Refactor to_string from header to impl file r=philberty a=philberty\n\nThis is part of the overal cleanup to move implementation into cc files from the headers.\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>", "tree": {"sha": "e8b74aaca151a63935fb56f863a6c1fa38e5028f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8b74aaca151a63935fb56f863a6c1fa38e5028f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/055ca34daa803f5353ced57d2d30041b93701c8c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiAqicCRBK7hj4Ov3rIwAAJUUIADSHcqpcZ2xs0jRVpo+EwMB1\ny6wt/hnPK7IfRysaCnRnK+PctcHBXA2jPbuhODfFftb0NOLClB7Iop4W0F3NdPeH\nMhmx4nRp7INXB4WVZb5T0D3G9nsCDYggINaMehEeTNcdTxEAfVdkTh5QNx1q1SmZ\nCSe13Q6mRAgI9MD3zCwEtrWVwMoVKigTdflpYDtBpunR57DeX3fpJsoEqNz6pKuo\nPSRf9q/RPXm/NhScOiDBfmZ2smvU2rTIfkKz6AmGZc6B/KNnhjc6BEMX6p6tLOU0\nuG+UyuAueMrTUx8Rcz60HEvEsO2jjJ6vesdTMAsk+nx1bgJIEce5dMLj5YHHnWs=\n=TQ6+\n-----END PGP SIGNATURE-----\n", "payload": "tree e8b74aaca151a63935fb56f863a6c1fa38e5028f\nparent 5619eea6f62bffe58eaaeb508f45a855fc3ce1f4\nparent b7cdd81dbc7fe6e309825c883f9ccdcf108d26de\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1644341404 +0000\ncommitter GitHub <noreply@github.com> 1644341404 +0000\n\nMerge #911\n\n911: Refactor to_string from header to impl file r=philberty a=philberty\n\nThis is part of the overal cleanup to move implementation into cc files from the headers.\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/055ca34daa803f5353ced57d2d30041b93701c8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/055ca34daa803f5353ced57d2d30041b93701c8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/055ca34daa803f5353ced57d2d30041b93701c8c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5619eea6f62bffe58eaaeb508f45a855fc3ce1f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5619eea6f62bffe58eaaeb508f45a855fc3ce1f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5619eea6f62bffe58eaaeb508f45a855fc3ce1f4"}, {"sha": "b7cdd81dbc7fe6e309825c883f9ccdcf108d26de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7cdd81dbc7fe6e309825c883f9ccdcf108d26de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7cdd81dbc7fe6e309825c883f9ccdcf108d26de"}], "stats": {"total": 156, "additions": 78, "deletions": 78}, "files": [{"sha": "1f62aa5092ad9c8e744bcba76ffdeab9eb492a15", "filename": "gcc/rust/typecheck/rust-tyty.cc", "status": "modified", "additions": 77, "deletions": 3, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/055ca34daa803f5353ced57d2d30041b93701c8c/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/055ca34daa803f5353ced57d2d30041b93701c8c/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc?ref=055ca34daa803f5353ced57d2d30041b93701c8c", "patch": "@@ -30,12 +30,86 @@\n #include \"rust-hir-trait-ref.h\"\n #include \"rust-hir-type-bounds.h\"\n \n-extern ::Backend *\n-rust_get_backend ();\n-\n namespace Rust {\n namespace TyTy {\n \n+std::string\n+TypeKindFormat::to_string (TypeKind kind)\n+{\n+  switch (kind)\n+    {\n+    case TypeKind::INFER:\n+      return \"Infer\";\n+\n+    case TypeKind::ADT:\n+      return \"ADT\";\n+\n+    case TypeKind::STR:\n+      return \"STR\";\n+\n+    case TypeKind::REF:\n+      return \"REF\";\n+\n+    case TypeKind::POINTER:\n+      return \"POINTER\";\n+\n+    case TypeKind::PARAM:\n+      return \"PARAM\";\n+\n+    case TypeKind::ARRAY:\n+      return \"ARRAY\";\n+\n+    case TypeKind::FNDEF:\n+      return \"FnDef\";\n+\n+    case TypeKind::FNPTR:\n+      return \"FnPtr\";\n+\n+    case TypeKind::TUPLE:\n+      return \"Tuple\";\n+\n+    case TypeKind::BOOL:\n+      return \"Bool\";\n+\n+    case TypeKind::CHAR:\n+      return \"Char\";\n+\n+    case TypeKind::INT:\n+      return \"Int\";\n+\n+    case TypeKind::UINT:\n+      return \"Uint\";\n+\n+    case TypeKind::FLOAT:\n+      return \"Float\";\n+\n+    case TypeKind::USIZE:\n+      return \"Usize\";\n+\n+    case TypeKind::ISIZE:\n+      return \"Isize\";\n+\n+    case TypeKind::NEVER:\n+      return \"Never\";\n+\n+    case TypeKind::PLACEHOLDER:\n+      return \"Placeholder\";\n+\n+    case TypeKind::PROJECTION:\n+      return \"Projection\";\n+\n+    case TypeKind::DYNAMIC:\n+      return \"Dynamic\";\n+\n+    case TypeKind::CLOSURE:\n+      return \"Closure\";\n+\n+    case TypeKind::ERROR:\n+      return \"ERROR\";\n+    }\n+  gcc_unreachable ();\n+}\n+\n bool\n BaseType::satisfies_bound (const TypeBoundPredicate &predicate) const\n {"}, {"sha": "1362a961f604d5b19e07aa01b9dc99646d18f35f", "filename": "gcc/rust/typecheck/rust-tyty.h", "status": "modified", "additions": 1, "deletions": 75, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/055ca34daa803f5353ced57d2d30041b93701c8c/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/055ca34daa803f5353ced57d2d30041b93701c8c/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.h?ref=055ca34daa803f5353ced57d2d30041b93701c8c", "patch": "@@ -69,81 +69,7 @@ enum TypeKind\n class TypeKindFormat\n {\n public:\n-  static std::string to_string (TypeKind kind)\n-  {\n-    switch (kind)\n-      {\n-      case TypeKind::INFER:\n-\treturn \"Infer\";\n-\n-      case TypeKind::ADT:\n-\treturn \"ADT\";\n-\n-      case TypeKind::STR:\n-\treturn \"STR\";\n-\n-      case TypeKind::REF:\n-\treturn \"REF\";\n-\n-      case TypeKind::POINTER:\n-\treturn \"POINTER\";\n-\n-      case TypeKind::PARAM:\n-\treturn \"PARAM\";\n-\n-      case TypeKind::ARRAY:\n-\treturn \"ARRAY\";\n-\n-      case TypeKind::FNDEF:\n-\treturn \"FnDef\";\n-\n-      case TypeKind::FNPTR:\n-\treturn \"FnPtr\";\n-\n-      case TypeKind::TUPLE:\n-\treturn \"Tuple\";\n-\n-      case TypeKind::BOOL:\n-\treturn \"Bool\";\n-\n-      case TypeKind::CHAR:\n-\treturn \"Char\";\n-\n-      case TypeKind::INT:\n-\treturn \"Int\";\n-\n-      case TypeKind::UINT:\n-\treturn \"Uint\";\n-\n-      case TypeKind::FLOAT:\n-\treturn \"Float\";\n-\n-      case TypeKind::USIZE:\n-\treturn \"Usize\";\n-\n-      case TypeKind::ISIZE:\n-\treturn \"Isize\";\n-\n-      case TypeKind::NEVER:\n-\treturn \"Never\";\n-\n-      case TypeKind::PLACEHOLDER:\n-\treturn \"Placeholder\";\n-\n-      case TypeKind::PROJECTION:\n-\treturn \"Projection\";\n-\n-      case TypeKind::DYNAMIC:\n-\treturn \"Dynamic\";\n-\n-      case TypeKind::CLOSURE:\n-\treturn \"Closure\";\n-\n-      case TypeKind::ERROR:\n-\treturn \"ERROR\";\n-      }\n-    gcc_unreachable ();\n-  }\n+  static std::string to_string (TypeKind kind);\n };\n \n class BaseType;"}]}