{"sha": "866000e7fb53a137db4e876dcd3f6b46195a6683", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY2MDAwZTdmYjUzYTEzN2RiNGU4NzZkY2QzZjZiNDYxOTVhNjY4Mw==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2019-07-03T08:15:39Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-03T08:15:39Z"}, "message": "[Ada] Minor editorial corrections and reformatting\n\n2019-07-03  Gary Dismukes  <dismukes@adacore.com>\n\ngcc/ada/\n\n\t* bindo-augmentors.adb, bindo-augmentors.ads,\n\tbindo-builders.ads, bindo-elaborators.adb, sem_ch12.adb,\n\tsem_ch13.adb, sem_spark.adb, sinfo.ads: Minor editorial\n\tcorrections and reformatting.\n\nFrom-SVN: r272979", "tree": {"sha": "e94ee49705a2fa9ac3694bcc63fb6f3d9655aec2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e94ee49705a2fa9ac3694bcc63fb6f3d9655aec2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/866000e7fb53a137db4e876dcd3f6b46195a6683", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/866000e7fb53a137db4e876dcd3f6b46195a6683", "html_url": "https://github.com/Rust-GCC/gccrs/commit/866000e7fb53a137db4e876dcd3f6b46195a6683", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/866000e7fb53a137db4e876dcd3f6b46195a6683/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e08a896b96792d73293db82d0dc3541c17e545ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e08a896b96792d73293db82d0dc3541c17e545ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e08a896b96792d73293db82d0dc3541c17e545ad"}], "stats": {"total": 63, "additions": 35, "deletions": 28}, "files": [{"sha": "d2566c8897f968bbeb8feb7fd56a67f0709c0a4e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/866000e7fb53a137db4e876dcd3f6b46195a6683/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/866000e7fb53a137db4e876dcd3f6b46195a6683/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=866000e7fb53a137db4e876dcd3f6b46195a6683", "patch": "@@ -1,3 +1,10 @@\n+2019-07-03  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* bindo-augmentors.adb, bindo-augmentors.ads,\n+\tbindo-builders.ads, bindo-elaborators.adb, sem_ch12.adb,\n+\tsem_ch13.adb, sem_spark.adb, sinfo.ads: Minor editorial\n+\tcorrections and reformatting.\n+\n 2019-07-03  Bob Duff  <duff@adacore.com>\n \n \t* sem_warn.adb (Check_Infinite_Loop_Warning): Avoid the warning"}, {"sha": "f97f0d0a4d883717fbfc0a8395424481b59b6101", "filename": "gcc/ada/bindo-augmentors.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/866000e7fb53a137db4e876dcd3f6b46195a6683/gcc%2Fada%2Fbindo-augmentors.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/866000e7fb53a137db4e876dcd3f6b46195a6683/gcc%2Fada%2Fbindo-augmentors.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-augmentors.adb?ref=866000e7fb53a137db4e876dcd3f6b46195a6683", "patch": "@@ -124,8 +124,8 @@ package body Bindo.Augmentors is\n       --    * Visit the neighbours of Curr_IGV_Id.\n       --\n       --  Flag Internal_Ctrl should be set when the DFS traversal visited an\n-      --  internal controlled invocation edge. Path denotes is the length of\n-      --  the path.\n+      --  internal controlled invocation edge. Path denotes the length of the\n+      --  path.\n \n       procedure Write_Statistics;\n       pragma Inline (Write_Statistics);\n@@ -277,7 +277,7 @@ package body Bindo.Augmentors is\n \n          Set_Is_Visited (Curr_IGV_Id);\n \n-         --  Update the statictics\n+         --  Update the statistics\n \n          Longest_Path  := Natural'Max (Longest_Path, New_Path);\n          Total_Visited := Total_Visited + 1;\n@@ -343,7 +343,7 @@ package body Bindo.Augmentors is\n \n       procedure Write_Statistics is\n       begin\n-         --  Nothing to do when switch -d_L (output library item graph) is no\n+         --  Nothing to do when switch -d_L (output library item graph) is not\n          --  in effect.\n \n          if not Debug_Flag_Underscore_LL then"}, {"sha": "de6317cca41c3f9a1a1fbed6e68a304dc05faeaf", "filename": "gcc/ada/bindo-augmentors.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/866000e7fb53a137db4e876dcd3f6b46195a6683/gcc%2Fada%2Fbindo-augmentors.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/866000e7fb53a137db4e876dcd3f6b46195a6683/gcc%2Fada%2Fbindo-augmentors.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-augmentors.ads?ref=866000e7fb53a137db4e876dcd3f6b46195a6683", "patch": "@@ -25,9 +25,9 @@\n \n --  For full architecture, see unit Bindo.\n \n---  The following unit contains facilities to enhance the library graph which\n---  reflects source dependencies between units with information obtained from\n---  the invocation graph which reflects all activations of tasks, calls, and\n+--  The following unit contains facilities to enhance the library graph, which\n+--  reflects source dependencies between units, with information obtained from\n+--  the invocation graph, which reflects all activations of tasks, calls, and\n --  instantiations within units.\n \n with Bindo.Graphs;"}, {"sha": "54c39e4820a8ff4b149caffe6c64fe2144ad6ea0", "filename": "gcc/ada/bindo-builders.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/866000e7fb53a137db4e876dcd3f6b46195a6683/gcc%2Fada%2Fbindo-builders.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/866000e7fb53a137db4e876dcd3f6b46195a6683/gcc%2Fada%2Fbindo-builders.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-builders.ads?ref=866000e7fb53a137db4e876dcd3f6b46195a6683", "patch": "@@ -43,10 +43,10 @@ package Bindo.Builders is\n    package Invocation_Graph_Builders is\n       function Build_Invocation_Graph\n         (Lib_G : Library_Graph) return Invocation_Graph;\n-      --  Return a new invocation graph which reflects the activations of\n+      --  Return a new invocation graph that reflects the activations of\n       --  tasks, calls, and instantiations in all units of the bind. Each\n       --  invocation graph vertex is linked with the corresponding vertex\n-      --  of library graph Lib_G which contains the body of the activated\n+      --  of library graph Lib_G, which contains the body of the activated\n       --  task, invoked subprogram, or instantiated generic.\n \n    end Invocation_Graph_Builders;\n@@ -57,7 +57,7 @@ package Bindo.Builders is\n \n    package Library_Graph_Builders is\n       function Build_Library_Graph return Library_Graph;\n-      --  Return a new library graph which reflects the dependencies between\n+      --  Return a new library graph that reflects the dependencies between\n       --  all units of the bind.\n \n    end Library_Graph_Builders;"}, {"sha": "b11598c855ec74da6213fcd049a3e13a783af348", "filename": "gcc/ada/bindo-elaborators.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/866000e7fb53a137db4e876dcd3f6b46195a6683/gcc%2Fada%2Fbindo-elaborators.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/866000e7fb53a137db4e876dcd3f6b46195a6683/gcc%2Fada%2Fbindo-elaborators.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-elaborators.adb?ref=866000e7fb53a137db4e876dcd3f6b46195a6683", "patch": "@@ -112,9 +112,9 @@ package body Bindo.Elaborators is\n          Indent : Indentation_Level);\n       pragma Inline (Add_Vertex);\n       --  Add vertex LGV_Id of library graph G to membership set Set. Msg is\n-      --  a message emitted for traching purposes. Step is the current step\n-      --  in the elaboration order. Indent is the desired indentation level\n-      --  for tracing.\n+      --  a message emitted for tracing purposes. Step is the current step in\n+      --  the elaboration order. Indent is the desired indentation level for\n+      --  tracing.\n \n       procedure Add_Vertex_If_Elaborable\n         (G      : Library_Graph;\n@@ -125,8 +125,8 @@ package body Bindo.Elaborators is\n          Indent : Indentation_Level);\n       pragma Inline (Add_Vertex_If_Elaborable);\n       --  Add vertex LGV_Id of library graph G to membership set Set if it can\n-      --  be elaborated. Msg is a message emitted for traching purposes. Step\n-      --  is the current step in the elaboration order. Indent is the desired\n+      --  be elaborated. Msg is a message emitted for tracing purposes. Step is\n+      --  the current step in the elaboration order. Indent is the desired\n       --  indentation level for tracing.\n \n       function Create_All_Candidates_Set\n@@ -153,7 +153,7 @@ package body Bindo.Elaborators is\n          Order              : in out Unit_Id_Table;\n          Step               : Elaboration_Order_Step);\n       pragma Inline (Elaborate_Component);\n-      --  Elaborate as many vertices as possible which appear in component\n+      --  Elaborate as many vertices as possible that appear in component\n       --  Comp of library graph G. All_Candidates is the set of all elaborable\n       --  vertices across the whole library graph. Remaining_Vertices is the\n       --  number of vertices that remain to be elaborated. Order denotes the\n@@ -679,14 +679,14 @@ package body Bindo.Elaborators is\n          Status        : out Elaboration_Order_Status)\n       is\n       begin\n-         --  Create, validate, and output the library graph which captures the\n+         --  Create, validate, and output the library graph that captures the\n          --  dependencies between library items.\n \n          Lib_Graph := Build_Library_Graph;\n          Validate_Library_Graph (Lib_Graph);\n          Write_Library_Graph    (Lib_Graph);\n \n-         --  Create, validate, output, and use the invocation graph which\n+         --  Create, validate, output, and use the invocation graph that\n          --  represents the flow of execusion only when requested by the\n          --  caller.\n \n@@ -707,7 +707,7 @@ package body Bindo.Elaborators is\n \n          --  Traverse the invocation graph starting from elaboration code in\n          --  order to discover transitions of the execution flow from a unit\n-         --  to a unit which result in extra edges within the library graph.\n+         --  to a unit that result in extra edges within the library graph.\n \n          Augment_Library_Graph (Inv_Graph, Lib_Graph);\n "}, {"sha": "42feab07ae3230ebb7e54186dcee263ab0c5961d", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/866000e7fb53a137db4e876dcd3f6b46195a6683/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/866000e7fb53a137db4e876dcd3f6b46195a6683/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=866000e7fb53a137db4e876dcd3f6b46195a6683", "patch": "@@ -6223,9 +6223,9 @@ package body Sem_Ch12 is\n       --  actual instance and those of the formal package.\n \n       function Is_Defaulted (Param : Entity_Id) return Boolean;\n-      --  If the formql package has partly box-initialized formals, skip\n-      --  conformace check for these formals. Previously the code assumed\n-      --  that boc initialization for a formal package applied to all its\n+      --  If the formal package has partly box-initialized formals, skip\n+      --  conformance check for these formals. Previously the code assumed\n+      --  that box initialization for a formal package applied to all its\n       --  formal parameters.\n \n       function Same_Instantiated_Constant (E1, E2 : Entity_Id) return Boolean;"}, {"sha": "2a4afb85cd1be9a053ac80e25724fdb07c142d6e", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/866000e7fb53a137db4e876dcd3f6b46195a6683/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/866000e7fb53a137db4e876dcd3f6b46195a6683/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=866000e7fb53a137db4e876dcd3f6b46195a6683", "patch": "@@ -4933,9 +4933,9 @@ package body Sem_Ch13 is\n       elsif Is_Object (Ent)\n         and then Present (Renamed_Object (Ent))\n       then\n-         --  Case of renamed object from source, this is an error\n-         --  unless the pbject is an aggregate and the renaming is\n-         --  created for an object declaration.\n+         --  In the case of a renamed object from source, this is an error\n+         --  unless the object is an aggregate and the renaming is created\n+         --  for an object declaration.\n \n          if Comes_From_Source (Renamed_Object (Ent))\n            and then Nkind (Renamed_Object (Ent)) /= N_Aggregate"}, {"sha": "ef82e603c01c35ba5451bc6920e5e86c95dc3ccc", "filename": "gcc/ada/sem_spark.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/866000e7fb53a137db4e876dcd3f6b46195a6683/gcc%2Fada%2Fsem_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/866000e7fb53a137db4e876dcd3f6b46195a6683/gcc%2Fada%2Fsem_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_spark.adb?ref=866000e7fb53a137db4e876dcd3f6b46195a6683", "patch": "@@ -671,7 +671,7 @@ package body Sem_SPARK is\n       Through_Traversal : Boolean := True) return Entity_Id;\n    pragma Precondition (Is_Path_Expression (Expr));\n    --  Return the root of the path expression Expr, or Empty for an allocator,\n-   --  NULL, or a function call. Through_Traversal is True if it should fo\n+   --  NULL, or a function call. Through_Traversal is True if it should follow\n    --  through calls to traversal functions.\n \n    generic"}, {"sha": "b1e57bfda3b82c44e1367c2f04fd7f06afdaecec", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/866000e7fb53a137db4e876dcd3f6b46195a6683/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/866000e7fb53a137db4e876dcd3f6b46195a6683/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=866000e7fb53a137db4e876dcd3f6b46195a6683", "patch": "@@ -3226,8 +3226,8 @@ package Sinfo is\n       --  in package Einfo.\n \n       --  Note: N_Defining_Character_Literal is an extended node whose fields\n-      --  are deliberate laid out to match the layout of fields in an ordinary\n-      --  N_Character_Literal node allowing for easy alteration of a character\n+      --  are deliberately laid out to match layout of fields in an ordinary\n+      --  N_Character_Literal node, allowing for easy alteration of a character\n       --  literal node into a defining character literal node. For details, see\n       --  Sinfo.CN.Change_Character_Literal_To_Defining_Character_Literal.\n "}]}