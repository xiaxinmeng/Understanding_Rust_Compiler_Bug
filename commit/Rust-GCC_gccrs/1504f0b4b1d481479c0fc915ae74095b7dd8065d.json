{"sha": "1504f0b4b1d481479c0fc915ae74095b7dd8065d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUwNGYwYjRiMWQ0ODE0NzljMGZjOTE1YWU3NDA5NWI3ZGQ4MDY1ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-03-19T10:05:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-03-19T10:05:10Z"}, "message": "re PR target/89506 (ICE: in decompose, at rtl.h:2266 with -Og -g)\n\n\tPR target/89506\n\t* config/arm/arm.md (cmpsi2_addneg): Swap the alternatives and use\n\tsubs for the first alternative except when operands[3] is 1.\n\nFrom-SVN: r269795", "tree": {"sha": "2f6cd10e18ab2a6b264fd7b133951aee006c8539", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f6cd10e18ab2a6b264fd7b133951aee006c8539"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1504f0b4b1d481479c0fc915ae74095b7dd8065d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1504f0b4b1d481479c0fc915ae74095b7dd8065d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1504f0b4b1d481479c0fc915ae74095b7dd8065d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1504f0b4b1d481479c0fc915ae74095b7dd8065d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cad3fc8c59c1fc94defff1d211f683bef2bc1f05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cad3fc8c59c1fc94defff1d211f683bef2bc1f05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cad3fc8c59c1fc94defff1d211f683bef2bc1f05"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "9327ed858db0400277b74b92f4d887f2a7ad7aad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1504f0b4b1d481479c0fc915ae74095b7dd8065d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1504f0b4b1d481479c0fc915ae74095b7dd8065d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1504f0b4b1d481479c0fc915ae74095b7dd8065d", "patch": "@@ -1,5 +1,9 @@\n 2019-03-19  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/89506\n+\t* config/arm/arm.md (cmpsi2_addneg): Swap the alternatives and use\n+\tsubs for the first alternative except when operands[3] is 1.\n+\n \tPR target/89752\n \t* gimplify.c (gimplify_asm_expr): For output argument with\n \tTREE_ADDRESSABLE type, clear allows_reg if it allows memory, otherwise"}, {"sha": "0aecd03891c2ff92b468cde84664343bc3fc6a13", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1504f0b4b1d481479c0fc915ae74095b7dd8065d/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1504f0b4b1d481479c0fc915ae74095b7dd8065d/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=1504f0b4b1d481479c0fc915ae74095b7dd8065d", "patch": "@@ -857,27 +857,27 @@\n    (set_attr \"type\" \"alus_sreg\")]\n )\n \n-;; This is the canonicalization of addsi3_compare0_for_combiner when the\n+;; This is the canonicalization of subsi3_compare when the\n ;; addend is a constant.\n (define_insn \"cmpsi2_addneg\"\n   [(set (reg:CC CC_REGNUM)\n \t(compare:CC\n \t (match_operand:SI 1 \"s_register_operand\" \"r,r\")\n-\t (match_operand:SI 2 \"arm_addimm_operand\" \"L,I\")))\n+\t (match_operand:SI 2 \"arm_addimm_operand\" \"I,L\")))\n    (set (match_operand:SI 0 \"s_register_operand\" \"=r,r\")\n \t(plus:SI (match_dup 1)\n-\t\t (match_operand:SI 3 \"arm_addimm_operand\" \"I,L\")))]\n+\t\t (match_operand:SI 3 \"arm_addimm_operand\" \"L,I\")))]\n   \"TARGET_32BIT\n    && (INTVAL (operands[2])\n        == trunc_int_for_mode (-INTVAL (operands[3]), SImode))\"\n {\n-  /* For 0 and INT_MIN it is essential that we use subs, as adds\n-     will result in different condition codes (like cmn rather than\n-     like cmp).  For other immediates, we should choose whatever\n-     will have smaller encoding.  */\n-  if (operands[2] == const0_rtx\n-      || INTVAL (operands[2]) == -HOST_WIDE_INT_C (0x80000000)\n-      || which_alternative == 1)\n+  /* For 0 and INT_MIN it is essential that we use subs, as adds will result\n+     in different condition codes (like cmn rather than like cmp), so that\n+     alternative comes first.  Both alternatives can match for any 0x??000000\n+     where except for 0 and INT_MIN it doesn't matter what we choose, and also\n+     for -1 and 1 with TARGET_THUMB2, in that case prefer instruction with #1\n+     as it is shorter.  */\n+  if (which_alternative == 0 && operands[3] != const1_rtx)\n     return \"subs%?\\\\t%0, %1, #%n3\";\n   else\n     return \"adds%?\\\\t%0, %1, %3\";"}]}