{"sha": "44c918b50af64d1c0f27067b2671e1a4f744841b", "node_id": "C_kwDOANBUbNoAKDQ0YzkxOGI1MGFmNjRkMWMwZjI3MDY3YjI2NzFlMWE0Zjc0NDg0MWI", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-03-05T10:24:30Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-03-05T17:23:44Z"}, "message": "RISC-V: Fix ICE for avl_single-86/avl_single-88/avl_single-90\n\nIf prop is demand of vsetvl instruction and reaching doesn't demand\nAVL. We don't backward propagate since vsetvl instruction has no\nside effects.\n\nFAIL: gcc.target/riscv/rvv/vsetvl/avl_single-86.c  -Og -g  (internal\ncompiler error: Segmentation fault)\nFAIL: gcc.target/riscv/rvv/vsetvl/avl_single-86.c  -Og -g  (test for\nexcess errors)\nFAIL: gcc.target/riscv/rvv/vsetvl/avl_single-88.c  -Og -g  (internal\ncompiler error: Segmentation fault)\nFAIL: gcc.target/riscv/rvv/vsetvl/avl_single-88.c  -Og -g  (test for\nexcess errors)\nFAIL: gcc.target/riscv/rvv/vsetvl/avl_single-90.c  -Og -g  (internal\ncompiler error: Segmentation fault)\nFAIL: gcc.target/riscv/rvv/vsetvl/avl_single-90.c  -Og -g  (test for\nexcess errors)\n\ngcc/ChangeLog:\n\n\t* config/riscv/riscv-vsetvl.cc (reg_available_p): Fix bug.\n\t(pass_vsetvl::backward_demand_fusion): Ditto.", "tree": {"sha": "6dfadc20179daf3092dd41049409621be627b8b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6dfadc20179daf3092dd41049409621be627b8b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44c918b50af64d1c0f27067b2671e1a4f744841b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44c918b50af64d1c0f27067b2671e1a4f744841b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44c918b50af64d1c0f27067b2671e1a4f744841b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44c918b50af64d1c0f27067b2671e1a4f744841b/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2554d90c6c2cf80559b918d387944da35fc6aa23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2554d90c6c2cf80559b918d387944da35fc6aa23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2554d90c6c2cf80559b918d387944da35fc6aa23"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "73f36a70331783d0b3cf26aee31a06cc3b76a4d6", "filename": "gcc/config/riscv/riscv-vsetvl.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44c918b50af64d1c0f27067b2671e1a4f744841b/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44c918b50af64d1c0f27067b2671e1a4f744841b/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-vsetvl.cc?ref=44c918b50af64d1c0f27067b2671e1a4f744841b", "patch": "@@ -1528,7 +1528,7 @@ static bool\n reg_available_p (const bb_info *bb, const vector_insn_info &info)\n {\n   if (!info.get_avl_source ())\n-    return true;\n+    return false;\n   insn_info *insn = info.get_avl_source ()->insn ();\n   if (insn->bb () == bb)\n     return before_p (insn, info.get_insn ());\n@@ -3040,6 +3040,12 @@ pass_vsetvl::backward_demand_fusion (void)\n \t    continue;\n \t  if (e->src->index == ENTRY_BLOCK_PTR_FOR_FN (cfun)->index)\n \t    continue;\n+\t  /* If prop is demand of vsetvl instruction and reaching doesn't demand\n+\t     AVL. We don't backward propagate since vsetvl instruction has no\n+\t     side effects.  */\n+\t  if (vsetvl_insn_p (prop.get_insn ()->rtl ())\n+\t      && propagate_avl_across_demands_p (prop, block_info.reaching_out))\n+\t    continue;\n \n \t  if (block_info.reaching_out.unknown_p ())\n \t    continue;"}]}