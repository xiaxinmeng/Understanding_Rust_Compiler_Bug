{"sha": "c7aee4a15c4b993b063a8a94d1b6e2825130ea72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdhZWU0YTE1YzRiOTkzYjA2M2E4YTk0ZDFiNmUyODI1MTMwZWE3Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-03-10T19:47:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-03-10T19:47:44Z"}, "message": "re PR tree-optimization/79981 (Forwprop not working for __atomic_compare_exchange_n)\n\n\tPR tree-optimization/79981\n\t* tree-vrp.c (extract_range_basic): Handle IMAGPART_EXPR of\n\tATOMIC_COMPARE_EXCHANGE ifn result.\n\t(stmt_interesting_for_vrp, vrp_visit_stmt): Handle\n\tIFN_ATOMIC_COMPARE_EXCHANGE.\n\nFrom-SVN: r246054", "tree": {"sha": "6c4021d9742adf491fdb3202d936b826a37cf289", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c4021d9742adf491fdb3202d936b826a37cf289"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7aee4a15c4b993b063a8a94d1b6e2825130ea72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7aee4a15c4b993b063a8a94d1b6e2825130ea72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7aee4a15c4b993b063a8a94d1b6e2825130ea72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7aee4a15c4b993b063a8a94d1b6e2825130ea72/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80dd631fceac3b9b8da712fa9e1c1a2f61002cb9"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "3342d777160a5628236c87f7997a79cfaeb96594", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7aee4a15c4b993b063a8a94d1b6e2825130ea72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7aee4a15c4b993b063a8a94d1b6e2825130ea72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7aee4a15c4b993b063a8a94d1b6e2825130ea72", "patch": "@@ -1,3 +1,11 @@\n+2017-03-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/79981\n+\t* tree-vrp.c (extract_range_basic): Handle IMAGPART_EXPR of\n+\tATOMIC_COMPARE_EXCHANGE ifn result.\n+\t(stmt_interesting_for_vrp, vrp_visit_stmt): Handle\n+\tIFN_ATOMIC_COMPARE_EXCHANGE.\n+\n 2017-03-10  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR driver/79875"}, {"sha": "2a4c764f68cd1e2d0eca2e165b5834080e54c5dd", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7aee4a15c4b993b063a8a94d1b6e2825130ea72/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7aee4a15c4b993b063a8a94d1b6e2825130ea72/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=c7aee4a15c4b993b063a8a94d1b6e2825130ea72", "patch": "@@ -4107,7 +4107,7 @@ extract_range_basic (value_range *vr, gimple *stmt)\n     }\n   /* Handle extraction of the two results (result of arithmetics and\n      a flag whether arithmetics overflowed) from {ADD,SUB,MUL}_OVERFLOW\n-     internal function.  */\n+     internal function.  Similarly from ATOMIC_COMPARE_EXCHANGE.  */\n   else if (is_gimple_assign (stmt)\n \t   && (gimple_assign_rhs_code (stmt) == REALPART_EXPR\n \t       || gimple_assign_rhs_code (stmt) == IMAGPART_EXPR)\n@@ -4132,6 +4132,16 @@ extract_range_basic (value_range *vr, gimple *stmt)\n \t\tcase IFN_MUL_OVERFLOW:\n \t\t  subcode = MULT_EXPR;\n \t\t  break;\n+\t\tcase IFN_ATOMIC_COMPARE_EXCHANGE:\n+\t\t  if (code == IMAGPART_EXPR)\n+\t\t    {\n+\t\t      /* This is the boolean return value whether compare and\n+\t\t\t exchange changed anything or not.  */\n+\t\t      set_value_range (vr, VR_RANGE, build_int_cst (type, 0),\n+\t\t\t\t       build_int_cst (type, 1), NULL);\n+\t\t      return;\n+\t\t    }\n+\t\t  break;\n \t\tdefault:\n \t\t  break;\n \t\t}\n@@ -7283,6 +7293,7 @@ stmt_interesting_for_vrp (gimple *stmt)\n \t  case IFN_ADD_OVERFLOW:\n \t  case IFN_SUB_OVERFLOW:\n \t  case IFN_MUL_OVERFLOW:\n+\t  case IFN_ATOMIC_COMPARE_EXCHANGE:\n \t    /* These internal calls return _Complex integer type,\n \t       but are interesting to VRP nevertheless.  */\n \t    if (lhs && TREE_CODE (lhs) == SSA_NAME)\n@@ -8308,6 +8319,7 @@ vrp_visit_stmt (gimple *stmt, edge *taken_edge_p, tree *output_p)\n       case IFN_ADD_OVERFLOW:\n       case IFN_SUB_OVERFLOW:\n       case IFN_MUL_OVERFLOW:\n+      case IFN_ATOMIC_COMPARE_EXCHANGE:\n \t/* These internal calls return _Complex integer type,\n \t   which VRP does not track, but the immediate uses\n \t   thereof might be interesting.  */"}]}