{"sha": "a0d007d67c85ecf4030bad8a6cf95f31bc6cb656", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBkMDA3ZDY3Yzg1ZWNmNDAzMGJhZDhhNmNmOTVmMzFiYzZjYjY1Ng==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2020-07-28T13:55:47Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2020-07-29T21:05:46Z"}, "message": "nvptx: Support floating point reciprocal instructions\n\nThe following patch addds support for PTX's rcp.rn.f32 and rcp.rn.f64\ninstructions.  Note that the \"rcp.rn\" forms of this instruction\ncalculate the fully IEEE compliant result for the reciprocal, unlike\nthe rcp.approx variants that just provide fast approximations.\n\nThis patch has been tested on nvptx-none hosted on x86_64-pc-linux-gnu\nwith \"make\" and \"make check\" with no new regressions.\n\n2020-07-12  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/ChangeLog:\n\n\t* config/nvptx/nvptx.md (recip<mode>2): New instruction.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/nvptx/recip-1.c: New test.", "tree": {"sha": "e2a8c72bf3c48befec45895c1a5dd57763c71cc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2a8c72bf3c48befec45895c1a5dd57763c71cc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0d007d67c85ecf4030bad8a6cf95f31bc6cb656", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0d007d67c85ecf4030bad8a6cf95f31bc6cb656", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0d007d67c85ecf4030bad8a6cf95f31bc6cb656", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0d007d67c85ecf4030bad8a6cf95f31bc6cb656/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f4a54ccb89c2fbd939f5385e359083e75e4d56f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f4a54ccb89c2fbd939f5385e359083e75e4d56f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f4a54ccb89c2fbd939f5385e359083e75e4d56f"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "746d6ec4124a9041bd205d9aaba6fd548a19e497", "filename": "gcc/config/nvptx/nvptx.md", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d007d67c85ecf4030bad8a6cf95f31bc6cb656/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d007d67c85ecf4030bad8a6cf95f31bc6cb656/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.md?ref=a0d007d67c85ecf4030bad8a6cf95f31bc6cb656", "patch": "@@ -879,6 +879,15 @@\n   \"\"\n   \"%.\\\\tfma%#%t0\\\\t%0, %1, %2, %3;\")\n \n+(define_insn \"*recip<mode>2\"\n+  [(set (match_operand:SDFM 0 \"nvptx_register_operand\" \"=R\")\n+\t(div:SDFM\n+\t  (match_operand:SDFM 2 \"const_double_operand\" \"F\")\n+\t  (match_operand:SDFM 1 \"nvptx_register_operand\" \"R\")))]\n+  \"CONST_DOUBLE_P (operands[2])\n+   && real_identical (CONST_DOUBLE_REAL_VALUE (operands[2]), &dconst1)\"\n+  \"%.\\\\trcp%#%t0\\\\t%0, %1;\")\n+\n (define_insn \"div<mode>3\"\n   [(set (match_operand:SDFM 0 \"nvptx_register_operand\" \"=R\")\n \t(div:SDFM (match_operand:SDFM 1 \"nvptx_register_operand\" \"R\")"}, {"sha": "18127876046f6464c6f7f560dac21151dbd8773a", "filename": "gcc/testsuite/gcc.target/nvptx/recip-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d007d67c85ecf4030bad8a6cf95f31bc6cb656/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Frecip-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d007d67c85ecf4030bad8a6cf95f31bc6cb656/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Frecip-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Frecip-1.c?ref=a0d007d67c85ecf4030bad8a6cf95f31bc6cb656", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O2 -save-temps\" } */\n+\n+double\n+foo (double x)\n+{\n+  return 1.0 / x;\n+}\n+\n+float\n+foof (float x)\n+{\n+  return 1.0f / x;\n+}\n+\n+/* { dg-final { scan-assembler-times \"rcp.rn.f64\" 1 } } */\n+/* { dg-final { scan-assembler-times \"rcp.rn.f32\" 1 } } */\n+"}]}