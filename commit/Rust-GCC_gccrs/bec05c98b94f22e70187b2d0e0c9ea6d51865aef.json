{"sha": "bec05c98b94f22e70187b2d0e0c9ea6d51865aef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVjMDVjOThiOTRmMjJlNzAxODdiMmQwZTBjOWVhNmQ1MTg2NWFlZg==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-05T00:16:20Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-05T00:16:20Z"}, "message": "Daily bump.", "tree": {"sha": "50fecd7dabb096a16dae307f3e79c6bcf44a434a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50fecd7dabb096a16dae307f3e79c6bcf44a434a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bec05c98b94f22e70187b2d0e0c9ea6d51865aef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bec05c98b94f22e70187b2d0e0c9ea6d51865aef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bec05c98b94f22e70187b2d0e0c9ea6d51865aef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bec05c98b94f22e70187b2d0e0c9ea6d51865aef/comments", "author": null, "committer": null, "parents": [{"sha": "f8eabd47ac5335ebab0d83ff61fb680a46888be8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8eabd47ac5335ebab0d83ff61fb680a46888be8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8eabd47ac5335ebab0d83ff61fb680a46888be8"}], "stats": {"total": 129, "additions": 128, "deletions": 1}, "files": [{"sha": "ea226ffea66b004b370cbe1b8d5082a31860ca50", "filename": "gcc/ChangeLog", "status": "modified", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec05c98b94f22e70187b2d0e0c9ea6d51865aef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec05c98b94f22e70187b2d0e0c9ea6d51865aef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bec05c98b94f22e70187b2d0e0c9ea6d51865aef", "patch": "@@ -1,3 +1,85 @@\n+2020-09-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/96698\n+\tPR tree-optimization/96920\n+\t* tree-vectorizer.h (loop_vec_info::reduc_latch_defs): Remove.\n+\t(loop_vec_info::reduc_latch_slp_defs): Likewise.\n+\t* tree-vect-stmts.c (vect_transform_stmt): Remove vectorized\n+\tcycle PHI latch code.\n+\t* tree-vect-loop.c (maybe_set_vectorized_backedge_value): New\n+\thelper to set vectorized cycle PHI latch values.\n+\t(vect_transform_loop): Walk over all PHIs again after\n+\tvectorizing them, calling maybe_set_vectorized_backedge_value.\n+\tCall maybe_set_vectorized_backedge_value for each vectorized\n+\tstmt.  Remove delayed update code.\n+\t* tree-vect-slp.c (vect_analyze_slp_instance): Initialize\n+\tSLP instance reduc_phis member.\n+\t(vect_schedule_slp): Set vectorized cycle PHI latch values.\n+\n+2020-09-04  Andrea Corallo  <andrea.corallo@arm.com>\n+\n+\t* tree-vect-loop.c (vect_estimate_min_profitable_iters): Remove\n+\tdead code as LOOP_VINFO_USING_PARTIAL_VECTORS_P (loop_vinfo) is\n+\talways verified.\n+\n+2020-09-04  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\tPR target/96769\n+\t* config/arm/thumb1.md: Move movsi splitter for\n+\tarm_disable_literal_pool after the other movsi splitters.\n+\n+2020-09-04  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* range-op.cc (range_operator::fold_range): Rename widest_irange\n+\tto int_range_max.\n+\t(operator_div::wi_fold): Same.\n+\t(operator_lshift::op1_range): Same.\n+\t(operator_rshift::op1_range): Same.\n+\t(operator_cast::fold_range): Same.\n+\t(operator_cast::op1_range): Same.\n+\t(operator_bitwise_and::remove_impossible_ranges): Same.\n+\t(operator_bitwise_and::op1_range): Same.\n+\t(operator_abs::op1_range): Same.\n+\t(range_cast): Same.\n+\t(widest_irange_tests): Same.\n+\t(range3_tests): Rename irange3 to int_range3.\n+\t(int_range_max_tests): Rename from widest_irange_tests.\n+\tRename widest_irange to int_range_max.\n+\t(operator_tests): Rename widest_irange to int_range_max.\n+\t(range_tests): Same.\n+\t* tree-vrp.c (find_case_label_range): Same.\n+\t* value-range.cc (irange::irange_intersect): Same.\n+\t(irange::invert): Same.\n+\t* value-range.h: Same.\n+\n+2020-09-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/96931\n+\t* tree-cfgcleanup.c (cleanup_call_ctrl_altering_flag): If\n+\tthere's a fallthru edge and no abnormal edge the call is\n+\tno longer control-altering.\n+\t(cleanup_control_flow_bb): Pass down the BB to\n+\tcleanup_call_ctrl_altering_flag.\n+\n+2020-09-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* lto-streamer.h (stream_input_location_now): Remove declaration.\n+\t* lto-streamer-in.c (stream_input_location_now): Remove.\n+\t(input_eh_region, input_struct_function_base): Use\n+\tstream_input_location instead of stream_input_location_now.\n+\n+2020-09-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* lto-streamer.h (struct output_block): Add reset_locus member.\n+\t* lto-streamer-out.c (clear_line_info): Set reset_locus to true.\n+\t(lto_output_location_1): If reset_locus, clear it and ensure\n+\tcurrent_{file,line,col} is different from xloc members.\n+\n+2020-09-04  David Faust  <david.faust@oracle.com>\n+\n+\t* config/bpf/bpf.h (ASM_SPEC): Pass -mxbpf to gas, if specified.\n+\t* config/bpf/bpf.c (bpf_output_call): Support indirect calls in xBPF.\n+\n 2020-09-03  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/96820"}, {"sha": "ed302f89446baa4642017250b853a09ca51e18a2", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec05c98b94f22e70187b2d0e0c9ea6d51865aef/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec05c98b94f22e70187b2d0e0c9ea6d51865aef/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=bec05c98b94f22e70187b2d0e0c9ea6d51865aef", "patch": "@@ -1 +1 @@\n-20200904\n+20200905"}, {"sha": "c3eb0370bff428fb9a6150d634426ad3d8817758", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec05c98b94f22e70187b2d0e0c9ea6d51865aef/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec05c98b94f22e70187b2d0e0c9ea6d51865aef/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bec05c98b94f22e70187b2d0e0c9ea6d51865aef", "patch": "@@ -1,3 +1,7 @@\n+2020-09-04  Jason Merrill  <jason@redhat.com>\n+\n+\t* expr.c (mark_use): Use iloc_sentinel.\n+\n 2020-09-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/96901"}, {"sha": "f4c39250a6b7f7b571e5757ed38419700ef2012a", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec05c98b94f22e70187b2d0e0c9ea6d51865aef/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec05c98b94f22e70187b2d0e0c9ea6d51865aef/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=bec05c98b94f22e70187b2d0e0c9ea6d51865aef", "patch": "@@ -1,3 +1,9 @@\n+2020-09-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/96924\n+\t* expr.cc (ExprVisitor::visit (CatAssignExp *)): Don't force\n+\ttemporaries needlessly.\n+\n 2020-09-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/96869"}, {"sha": "55694c535d68b74714107d04d10492b5b4737369", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bec05c98b94f22e70187b2d0e0c9ea6d51865aef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bec05c98b94f22e70187b2d0e0c9ea6d51865aef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bec05c98b94f22e70187b2d0e0c9ea6d51865aef", "patch": "@@ -1,3 +1,38 @@\n+2020-09-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/96924\n+\t* gdc.dg/simd13927b.d: Removed.\n+\t* gdc.dg/pr96924.d: New test.\n+\n+2020-09-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/96698\n+\tPR tree-optimization/96920\n+\t* gfortran.dg/vect/pr96920.f90: New testcase.\n+\t* gcc.dg/vect/pr96920.c: Likewise.\n+\n+2020-09-04  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\tPR target/96769\n+\t* gcc.target/arm/pure-code/pr96769.c: New test.\n+\n+2020-09-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/96931\n+\t* gcc.dg/pr96931.c: New testcase.\n+\n+2020-09-04  David Faust  <david.faust@oracle.com>\n+\n+\t* gcc.target/bpf/xbpf-indirect-call-1.c: New test.\n+\n+2020-09-04  Kewen Lin  <linkw@gcc.gnu.org>\n+\n+\t* gcc.target/powerpc/pr92398.p9+.c: Replace p9+ with has_arch_pwr9.\n+\t* gcc.target/powerpc/pr92398.p9-.c: Replace p9+ with has_arch_pwr9,\n+\tand replace p8 with has_arch_pwr8 && !has_arch_pwr9.\n+\t* lib/target-supports.exp (check_effective_target_p8): Remove.\n+\t(check_effective_target_p9+): Remove.\n+\n 2020-09-03  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/96820"}]}