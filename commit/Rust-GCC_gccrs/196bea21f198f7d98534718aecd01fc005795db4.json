{"sha": "196bea21f198f7d98534718aecd01fc005795db4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk2YmVhMjFmMTk4ZjdkOTg1MzQ3MThhZWNkMDFmYzAwNTc5NWRiNA==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@apple.com", "date": "2007-02-24T00:30:30Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2007-02-24T00:30:30Z"}, "message": "tlink.c (scan_linker_output): Parse linker messages from darwin9's linker better.\n\n\t* tlink.c (scan_linker_output): Parse linker messages from\n\tdarwin9's linker better.\n\nFrom-SVN: r122283", "tree": {"sha": "f3679841125cab5af3bdbc9139f3a661d05b6cd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3679841125cab5af3bdbc9139f3a661d05b6cd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/196bea21f198f7d98534718aecd01fc005795db4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/196bea21f198f7d98534718aecd01fc005795db4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/196bea21f198f7d98534718aecd01fc005795db4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/196bea21f198f7d98534718aecd01fc005795db4/comments", "author": null, "committer": null, "parents": [{"sha": "a2266ea92b5348fc2dc4455ebe286f07f464dd45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2266ea92b5348fc2dc4455ebe286f07f464dd45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2266ea92b5348fc2dc4455ebe286f07f464dd45"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "bdec047edf363d95767b213516fc1a1299cc1ebb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/196bea21f198f7d98534718aecd01fc005795db4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/196bea21f198f7d98534718aecd01fc005795db4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=196bea21f198f7d98534718aecd01fc005795db4", "patch": "@@ -1,3 +1,8 @@\n+2007-02-23  Mike Stump  <mrs@apple.com>\n+\n+\t* tlink.c (scan_linker_output): Parse linker messages from\n+\tdarwin9's linker better.\n+\n 2007-02-23  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR debug/29614"}, {"sha": "8e10eebbbaae7556d5405aec1adcaf2116c99a28", "filename": "gcc/tlink.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/196bea21f198f7d98534718aecd01fc005795db4/gcc%2Ftlink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/196bea21f198f7d98534718aecd01fc005795db4/gcc%2Ftlink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftlink.c?ref=196bea21f198f7d98534718aecd01fc005795db4", "patch": "@@ -607,12 +607,17 @@ scan_linker_output (const char *fname)\n {\n   FILE *stream = fopen (fname, \"r\");\n   char *line;\n+  int skip_next_line = 0;\n \n   while ((line = tfgets (stream)) != NULL)\n     {\n       char *p = line, *q;\n       symbol *sym;\n       int end;\n+      int ok = 0;\n+\n+      if (skip_next_line)\n+\tcontinue;\n \n       while (*p && ISSPACE ((unsigned char) *p))\n \t++p;\n@@ -654,6 +659,19 @@ scan_linker_output (const char *fname)\n \t  demangled *dem = 0;\n \t  q = 0;\n \n+\t  /* On darwin9, we look for \"foo\" referenced from:\\n.*\\n  */\n+\t  if (strcmp (oldq, \"referenced from:\") == 0)\n+\t    {\n+\t      /* We have to remember that we found a symbol to tweak.  */\n+\t      ok = 1;\n+\n+\t      /* We actually want to start from the first word on the line.  */\n+\t      oldq = p;\n+\n+\t      /* Since the format is multiline, we have to skip the next line.  */\n+\t      skip_next_line = 1;\n+\t    }\n+\n \t  /* First try `GNU style'.  */\n \t  p = strchr (oldq, '`');\n \t  if (p)\n@@ -681,7 +699,8 @@ scan_linker_output (const char *fname)\n \n \t  /* We need to check for certain error keywords here, or we would\n \t     mistakenly use GNU ld's \"In function `foo':\" message.  */\n-\t  if (q && (strstr (oldq, \"ndefined\")\n+\t  if (q && (ok\n+\t\t    || strstr (oldq, \"ndefined\")\n \t\t    || strstr (oldq, \"nresolved\")\n \t\t    || strstr (oldq, \"nsatisfied\")\n \t\t    || strstr (oldq, \"ultiple\")))"}]}