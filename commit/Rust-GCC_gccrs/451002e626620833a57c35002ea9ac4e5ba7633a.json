{"sha": "451002e626620833a57c35002ea9ac4e5ba7633a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDUxMDAyZTYyNjYyMDgzM2E1N2MzNTAwMmVhOWFjNGU1YmE3NjMzYQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-02-20T10:47:12Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-02-22T09:42:52Z"}, "message": "Fix ICE in tree_inlinable_function_p.\n\nAfter g:1a2a7096e5e20d736c6138179470b21aa5a74864 we forbid inlining\nfor a VLA types. What we miss is setting inline_forbidden_reason\nvariable.\n\nFixes:\n\n./xgcc -B. -O3 -c /home/marxin/Programming/gcc/gcc/testsuite/gcc.dg/pr99122-2.c -Winline\n\nduring GIMPLE pass: local-fnsummary\n/home/marxin/Programming/gcc/gcc/testsuite/gcc.dg/pr99122-2.c: In function \u2018foo\u2019:\n/home/marxin/Programming/gcc/gcc/testsuite/gcc.dg/pr99122-2.c:21:1: internal compiler error: Segmentation fault\n   21 | }\n      | ^\n0xe8b2ca crash_signal\n\t/home/marxin/Programming/gcc/gcc/toplev.c:327\n0x1a92733 pp_format(pretty_printer*, text_info*)\n\t/home/marxin/Programming/gcc/gcc/pretty-print.c:1096\n0x1a76b90 diagnostic_report_diagnostic(diagnostic_context*, diagnostic_info*)\n\t/home/marxin/Programming/gcc/gcc/diagnostic.c:1244\n0x1a79994 diagnostic_impl\n\t/home/marxin/Programming/gcc/gcc/diagnostic.c:1406\n0x1a79994 warning(int, char const*, ...)\n\t/home/marxin/Programming/gcc/gcc/diagnostic.c:1527\n0xf1bb16 tree_inlinable_function_p(tree_node*)\n\t/home/marxin/Programming/gcc/gcc/tree-inline.c:4123\n0xc3f1c5 compute_fn_summary(cgraph_node*, bool)\n\t/home/marxin/Programming/gcc/gcc/ipa-fnsummary.c:3110\n0xc3f937 compute_fn_summary_for_current\n\t/home/marxin/Programming/gcc/gcc/ipa-fnsummary.c:3160\n0xc3f937 execute\n\t/home/marxin/Programming/gcc/gcc/ipa-fnsummary.c:4768\n\ngcc/ChangeLog:\n\n\t* tree-inline.c (inline_forbidden_p): Set\n\tinline_forbidden_reason.", "tree": {"sha": "b5211a0af3341407fdbfe307114116a70ac80c43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5211a0af3341407fdbfe307114116a70ac80c43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/451002e626620833a57c35002ea9ac4e5ba7633a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/451002e626620833a57c35002ea9ac4e5ba7633a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/451002e626620833a57c35002ea9ac4e5ba7633a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/451002e626620833a57c35002ea9ac4e5ba7633a/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44841e1788c7c64f7d422768a80036a2a90c677f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44841e1788c7c64f7d422768a80036a2a90c677f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44841e1788c7c64f7d422768a80036a2a90c677f"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "1dcb31c02676d36fb3a6b074f1a00d20a5e13a94", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/451002e626620833a57c35002ea9ac4e5ba7633a/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/451002e626620833a57c35002ea9ac4e5ba7633a/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=451002e626620833a57c35002ea9ac4e5ba7633a", "patch": "@@ -4027,10 +4027,20 @@ inline_forbidden_p (tree fndecl)\n      the caller.  */\n   if (COMPLETE_TYPE_P (TREE_TYPE (TREE_TYPE (fndecl)))\n       && !poly_int_tree_p (TYPE_SIZE (TREE_TYPE (TREE_TYPE (fndecl)))))\n-    return true;\n+    {\n+      inline_forbidden_reason\n+\t= G_(\"function %q+F can never be inlined because \"\n+\t     \"it has a VLA return argument\");\n+      return true;\n+    }\n   for (tree parm = DECL_ARGUMENTS (fndecl); parm; parm = DECL_CHAIN (parm))\n     if (!poly_int_tree_p (DECL_SIZE (parm)))\n-      return true;\n+      {\n+\tinline_forbidden_reason\n+\t  = G_(\"function %q+F can never be inlined because \"\n+\t       \"it has a VLA argument\");\n+\treturn true;\n+      }\n \n   FOR_EACH_BB_FN (bb, fun)\n     {"}]}