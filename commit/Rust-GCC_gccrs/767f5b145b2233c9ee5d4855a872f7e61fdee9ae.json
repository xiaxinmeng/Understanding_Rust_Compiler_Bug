{"sha": "767f5b145b2233c9ee5d4855a872f7e61fdee9ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY3ZjViMTQ1YjIyMzNjOWVlNWQ0ODU1YTg3MmY3ZTYxZmRlZTlhZQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-06-19T23:45:30Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-06-19T23:45:30Z"}, "message": "except.c (jumpif_rtx): Put declaration and definition inside a suitable #ifdef.\n\n        * except.c (jumpif_rtx): Put declaration and definition\n        inside a suitable #ifdef.\n        (jumpifnot_rtx): Delete dead function.\n\nFrom-SVN: r20626", "tree": {"sha": "fd4eacb7cb57d92b7fb32769dd7a90abbad292a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd4eacb7cb57d92b7fb32769dd7a90abbad292a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/767f5b145b2233c9ee5d4855a872f7e61fdee9ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/767f5b145b2233c9ee5d4855a872f7e61fdee9ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/767f5b145b2233c9ee5d4855a872f7e61fdee9ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/767f5b145b2233c9ee5d4855a872f7e61fdee9ae/comments", "author": null, "committer": null, "parents": [{"sha": "5a77b5f30e8856b764d6ef357db04e8167419cb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a77b5f30e8856b764d6ef357db04e8167419cb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a77b5f30e8856b764d6ef357db04e8167419cb1"}], "stats": {"total": 20, "additions": 8, "deletions": 12}, "files": [{"sha": "91316319ee6de58f9caf1e3d1c955ef5679ab6e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/767f5b145b2233c9ee5d4855a872f7e61fdee9ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/767f5b145b2233c9ee5d4855a872f7e61fdee9ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=767f5b145b2233c9ee5d4855a872f7e61fdee9ae", "patch": "@@ -1,5 +1,9 @@\n Sat Jun 20 00:36:16 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* except.c (jumpif_rtx): Put declaration and definition\n+\tinside a suitable #ifdef.\n+\t(jumpifnot_rtx): Delete dead function.\n+\n \t* i386.h (output_int_conditional_move): Declare.\n \t(output_fp_conditional_move): Likewise.\n "}, {"sha": "63d6c82fc47ba8f930995c074025a14daa72a381", "filename": "gcc/except.c", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/767f5b145b2233c9ee5d4855a872f7e61fdee9ae/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/767f5b145b2233c9ee5d4855a872f7e61fdee9ae/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=767f5b145b2233c9ee5d4855a872f7e61fdee9ae", "patch": "@@ -503,8 +503,9 @@ static int can_throw\t\tPROTO((rtx));\n static rtx scan_region\t\tPROTO((rtx, int, int *));\n static void eh_regs\t\tPROTO((rtx *, rtx *, int));\n static void set_insn_eh_region\tPROTO((rtx *, int));\n+#ifdef DONT_USE_BUILTIN_SETJMP\n static void jumpif_rtx\t\tPROTO((rtx, rtx));\n-static void jumpifnot_rtx\tPROTO((rtx, rtx));\n+#endif\n \n \n rtx expand_builtin_return_addr\tPROTO((enum built_in_function, int, rtx));\n@@ -1052,6 +1053,7 @@ get_dynamic_cleanup_chain ()\n   return gen_rtx_MEM (Pmode, result);\n }\n \n+#ifdef DONT_USE_BUILTIN_SETJMP\n /* Generate code to evaluate X and jump to LABEL if the value is nonzero.\n    LABEL is an rtx of code CODE_LABEL, in this function.  */\n \n@@ -1062,17 +1064,7 @@ jumpif_rtx (x, label)\n {\n   jumpif (make_tree (type_for_mode (GET_MODE (x), 0), x), label);\n }\n-\n-/* Generate code to evaluate X and jump to LABEL if the value is zero.\n-   LABEL is an rtx of code CODE_LABEL, in this function.  */\n-\n-static void\n-jumpifnot_rtx (x, label)\n-     rtx x;\n-     rtx label;\n-{\n-  jumpifnot (make_tree (type_for_mode (GET_MODE (x), 0), x), label);\n-}\n+#endif\n \n /* Start a dynamic cleanup on the EH runtime dynamic cleanup stack.\n    We just need to create an element for the cleanup list, and push it"}]}