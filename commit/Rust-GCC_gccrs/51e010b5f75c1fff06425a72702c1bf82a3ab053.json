{"sha": "51e010b5f75c1fff06425a72702c1bf82a3ab053", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFlMDEwYjVmNzVjMWZmZjA2NDI1YTcyNzAyYzFiZjgyYTNhYjA1Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-21T08:17:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-21T08:17:27Z"}, "message": "powerpc: Fix ICE with fp conditional move (PR target/93073)\n\nThe following testcase ICEs, because for TFmode the particular subtraction\npattern (*subtf3) is not enabled with the given options.  Using\nexpand_simple_binop instead of emitting the subtraction by hand just moves\nthe ICE one insn later, NEG of ABS is not then recognized, etc., but\nultimately the problem is that when rs6000_emit_cmove is called for floating\npoint operand mode (and earlier condition ensures that in that case\ncompare_mode is also floating point), the expander makes sure the\noperand mode is SFDF, but for the comparison mode nothing checks it, yet\nthere is just one *fsel* pattern with 2 separate SFDF iterators.\n\nThe following patch fixes it by giving up if compare_mode is not SFmode or\nDFmode.\n\n2020-01-21  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/93073\n\t* config/rs6000/rs6000.c (rs6000_emit_cmove): If using fsel, punt for\n\tcompare_mode other than SFmode or DFmode.\n\n\t* gcc.target/powerpc/pr93073.c: New test.", "tree": {"sha": "f38a85230ecad134b073df790ac3f24ea6b8a7dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f38a85230ecad134b073df790ac3f24ea6b8a7dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51e010b5f75c1fff06425a72702c1bf82a3ab053", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51e010b5f75c1fff06425a72702c1bf82a3ab053", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51e010b5f75c1fff06425a72702c1bf82a3ab053", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51e010b5f75c1fff06425a72702c1bf82a3ab053/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d593fd672e5a01610d750c754213ea6c3e71ef1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d593fd672e5a01610d750c754213ea6c3e71ef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d593fd672e5a01610d750c754213ea6c3e71ef1"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "4f38f24317f0f9e9c7728c56748f9b8438de5041", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e010b5f75c1fff06425a72702c1bf82a3ab053/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e010b5f75c1fff06425a72702c1bf82a3ab053/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51e010b5f75c1fff06425a72702c1bf82a3ab053", "patch": "@@ -1,3 +1,9 @@\n+2020-01-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/93073\n+\t* config/rs6000/rs6000.c (rs6000_emit_cmove): If using fsel, punt for\n+\tcompare_mode other than SFmode or DFmode.\n+\n 2020-01-21  Kito Cheng  <kito.cheng@sifive.com>\n \n \tPR target/93304"}, {"sha": "9405816fa5daf9691e691187779cf2a3515c2ace", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e010b5f75c1fff06425a72702c1bf82a3ab053/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e010b5f75c1fff06425a72702c1bf82a3ab053/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=51e010b5f75c1fff06425a72702c1bf82a3ab053", "patch": "@@ -14978,6 +14978,11 @@ rs6000_emit_cmove (rtx dest, rtx op, rtx true_cond, rtx false_cond)\n \n   /* At this point we know we can use fsel.  */\n \n+  /* Don't allow compare_mode other than SFmode or DFmode, for others there\n+     is no fsel instruction.  */\n+  if (compare_mode != SFmode && compare_mode != DFmode)\n+    return 0;\n+\n   /* Reduce the comparison to a comparison against zero.  */\n   if (! is_against_zero)\n     {"}, {"sha": "b5945f4cd1cac19e185322351ee2d8afa91a0367", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e010b5f75c1fff06425a72702c1bf82a3ab053/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e010b5f75c1fff06425a72702c1bf82a3ab053/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51e010b5f75c1fff06425a72702c1bf82a3ab053", "patch": "@@ -1,3 +1,8 @@\n+2020-01-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/93073\n+\t* gcc.target/powerpc/pr93073.c: New test.\n+\n 2020-01-20  Bin Cheng  <bin.cheng@linux.alibaba.com>\n \n \t* g++.dg/coroutines/co-return-warning-1.C: New test."}, {"sha": "6a0a4731148d48e78a05f8355d629f7d2a312b08", "filename": "gcc/testsuite/gcc.target/powerpc/pr93073.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e010b5f75c1fff06425a72702c1bf82a3ab053/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr93073.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e010b5f75c1fff06425a72702c1bf82a3ab053/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr93073.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr93073.c?ref=51e010b5f75c1fff06425a72702c1bf82a3ab053", "patch": "@@ -0,0 +1,16 @@\n+/* PR target/93073 */\n+/* { dg-do compile { target powerpc_vsx_ok } } */\n+/* { dg-options \"-mvsx -O1 -ffinite-math-only -fno-trapping-math\" } */\n+\n+void bar (void);\n+\n+void\n+foo (long double x, double y, double z)\n+{\n+  for (;;)\n+    {\n+      double a = x > 0.0 ? y : z;\n+      if (a == 0.0)\n+\tbar ();\n+    }\n+}"}]}