{"sha": "090037799cc3bc47500e77ed0b767b8d21bec1aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkwMDM3Nzk5Y2MzYmM0NzUwMGU3N2VkMGI3NjdiOGQyMWJlYzFhYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-09-29T13:53:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-09-29T13:53:59Z"}, "message": "string.c (find_option): Change 3rd argument to const st_option *.\n\n\t* runtime/string.c (find_option): Change 3rd argument to\n\tconst st_option *.\n\t* libgfortran.h (find_option): Likewise.\n\t* runtime/environ.c (rounding, precision, signal_choices): Constify.\n\t(init_choice, show_choice): Change 2nd argument to const choice *.\n\t* io/open.c (access_opt, action_opt, blank_opt, delim_opt, form_opt,\n\tposition_opt, status_opt, pad_opt): Constify.\n\t* io/transfer.c (advance_opt): Likewise.\n\t* io/inquire.c (undefined): Likewise.\n\t* io/close.c (status_opt): Likewise.\n\t* io/format.c (posint_required, period_required, nonneg_required,\n\tunexpected_element, unexpected_end, bad_string, bad_hollerith,\n\treversion_error): Likewise.\n\t* io/unix.c (yes, no, unknown): Change from const char *\n\tinto const char [].\n\nFrom-SVN: r104773", "tree": {"sha": "6e3201f8c8d3d502dd57d16041c0f18d17a276f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e3201f8c8d3d502dd57d16041c0f18d17a276f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/090037799cc3bc47500e77ed0b767b8d21bec1aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/090037799cc3bc47500e77ed0b767b8d21bec1aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/090037799cc3bc47500e77ed0b767b8d21bec1aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/090037799cc3bc47500e77ed0b767b8d21bec1aa/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ebd8d9ac1a51af9a1a65f1db575fd2499835074", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ebd8d9ac1a51af9a1a65f1db575fd2499835074", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ebd8d9ac1a51af9a1a65f1db575fd2499835074"}], "stats": {"total": 58, "additions": 38, "deletions": 20}, "files": [{"sha": "fa76b5ef03976c69dcd5328e3666efd0516e50ed", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=090037799cc3bc47500e77ed0b767b8d21bec1aa", "patch": "@@ -1,3 +1,21 @@\n+2005-09-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* runtime/string.c (find_option): Change 3rd argument to\n+\tconst st_option *.\n+\t* libgfortran.h (find_option): Likewise.\n+\t* runtime/environ.c (rounding, precision, signal_choices): Constify.\n+\t(init_choice, show_choice): Change 2nd argument to const choice *.\n+\t* io/open.c (access_opt, action_opt, blank_opt, delim_opt, form_opt,\n+\tposition_opt, status_opt, pad_opt): Constify.\n+\t* io/transfer.c (advance_opt): Likewise.\n+\t* io/inquire.c (undefined): Likewise.\n+\t* io/close.c (status_opt): Likewise.\n+\t* io/format.c (posint_required, period_required, nonneg_required,\n+\tunexpected_element, unexpected_end, bad_string, bad_hollerith,\n+\treversion_error): Likewise.\n+\t* io/unix.c (yes, no, unknown): Change from const char *\n+\tinto const char [].\n+\n 2005-09-27  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR target/23552"}, {"sha": "dcb18095004cf3dafb274ca2153d2c97c222c36e", "filename": "libgfortran/io/close.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2Fio%2Fclose.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2Fio%2Fclose.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fclose.c?ref=090037799cc3bc47500e77ed0b767b8d21bec1aa", "patch": "@@ -36,7 +36,7 @@ typedef enum\n { CLOSE_DELETE, CLOSE_KEEP, CLOSE_UNSPECIFIED }\n close_status;\n \n-static st_option status_opt[] = {\n+static const st_option status_opt[] = {\n   {\"keep\", CLOSE_KEEP},\n   {\"delete\", CLOSE_DELETE},\n   {NULL, 0}"}, {"sha": "e714e3bc2ad6b865693233728d60291d817e8016", "filename": "libgfortran/io/format.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2Fio%2Fformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2Fio%2Fformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fformat.c?ref=090037799cc3bc47500e77ed0b767b8d21bec1aa", "patch": "@@ -61,7 +61,7 @@ static fnode colon_node = { FMT_COLON, 0, NULL, NULL, {{ 0, 0, 0 }}, 0,\n \n /* Error messages */\n \n-static char posint_required[] = \"Positive width required in format\",\n+static const char posint_required[] = \"Positive width required in format\",\n   period_required[] = \"Period required in format\",\n   nonneg_required[] = \"Nonnegative width required in format\",\n   unexpected_element[] = \"Unexpected element in format\","}, {"sha": "56f466e3d0aa0546a103dbcbd2b0a92103b34af3", "filename": "libgfortran/io/inquire.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2Fio%2Finquire.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2Fio%2Finquire.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Finquire.c?ref=090037799cc3bc47500e77ed0b767b8d21bec1aa", "patch": "@@ -35,7 +35,7 @@ Boston, MA 02110-1301, USA.  */\n #include \"io.h\"\n \n \n-static char undefined[] = \"UNDEFINED\";\n+static const char undefined[] = \"UNDEFINED\";\n \n \n /* inquire_via_unit()-- Inquiry via unit number.  The unit might not exist. */"}, {"sha": "82d5a355e0d19d5546565856a042123c27a670c7", "filename": "libgfortran/io/open.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2Fio%2Fopen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2Fio%2Fopen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fopen.c?ref=090037799cc3bc47500e77ed0b767b8d21bec1aa", "patch": "@@ -36,51 +36,51 @@ Boston, MA 02110-1301, USA.  */\n #include \"io.h\"\n \n \n-static st_option access_opt[] = {\n+static const st_option access_opt[] = {\n   {\"sequential\", ACCESS_SEQUENTIAL},\n   {\"direct\", ACCESS_DIRECT},\n   {NULL, 0}\n };\n \n-static st_option action_opt[] =\n+static const st_option action_opt[] =\n {\n   { \"read\", ACTION_READ},\n   { \"write\", ACTION_WRITE},\n   { \"readwrite\", ACTION_READWRITE},\n   { NULL, 0}\n };\n \n-static st_option blank_opt[] =\n+static const st_option blank_opt[] =\n {\n   { \"null\", BLANK_NULL},\n   { \"zero\", BLANK_ZERO},\n   { NULL, 0}\n };\n \n-static st_option delim_opt[] =\n+static const st_option delim_opt[] =\n {\n   { \"none\", DELIM_NONE},\n   { \"apostrophe\", DELIM_APOSTROPHE},\n   { \"quote\", DELIM_QUOTE},\n   { NULL, 0}\n };\n \n-static st_option form_opt[] =\n+static const st_option form_opt[] =\n {\n   { \"formatted\", FORM_FORMATTED},\n   { \"unformatted\", FORM_UNFORMATTED},\n   { NULL, 0}\n };\n \n-static st_option position_opt[] =\n+static const st_option position_opt[] =\n {\n   { \"asis\", POSITION_ASIS},\n   { \"rewind\", POSITION_REWIND},\n   { \"append\", POSITION_APPEND},\n   { NULL, 0}\n };\n \n-static st_option status_opt[] =\n+static const st_option status_opt[] =\n {\n   { \"unknown\", STATUS_UNKNOWN},\n   { \"old\", STATUS_OLD},\n@@ -90,7 +90,7 @@ static st_option status_opt[] =\n   { NULL, 0}\n };\n \n-static st_option pad_opt[] =\n+static const st_option pad_opt[] =\n {\n   { \"yes\", PAD_YES},\n   { \"no\", PAD_NO},"}, {"sha": "06c5a98106ec008244dd83d1495c75b226c71f18", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=090037799cc3bc47500e77ed0b767b8d21bec1aa", "patch": "@@ -97,7 +97,7 @@ static char *line_buffer = NULL;\n \n static unit_advance advance_status;\n \n-static st_option advance_opt[] = {\n+static const st_option advance_opt[] = {\n   {\"yes\", ADVANCE_YES},\n   {\"no\", ADVANCE_NO},\n   {NULL, 0}"}, {"sha": "4966726f830ee72b419e8ccb4c6a54558dbe5723", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=090037799cc3bc47500e77ed0b767b8d21bec1aa", "patch": "@@ -1197,7 +1197,7 @@ file_exists (void)\n \n \n \n-static const char *yes = \"YES\", *no = \"NO\", *unknown = \"UNKNOWN\";\n+static const char yes[] = \"YES\", no[] = \"NO\", unknown[] = \"UNKNOWN\";\n \n /* inquire_sequential()-- Given a fortran string, determine if the\n  * file is suitable for sequential access.  Returns a C-style"}, {"sha": "ba8261de4e4d79cc67bbe20191738b567ee5797b", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=090037799cc3bc47500e77ed0b767b8d21bec1aa", "patch": "@@ -478,7 +478,7 @@ internal_proto(show_variables);\n \n /* string.c */\n \n-extern int find_option (const char *, int, st_option *, const char *);\n+extern int find_option (const char *, int, const st_option *, const char *);\n internal_proto(find_option);\n \n extern int fstrlen (const char *, int);"}, {"sha": "e86f2ce5b5c9defa9641ac3186610d4ebc007c45", "filename": "libgfortran/runtime/environ.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2Fruntime%2Fenviron.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2Fruntime%2Fenviron.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fenviron.c?ref=090037799cc3bc47500e77ed0b767b8d21bec1aa", "patch": "@@ -356,23 +356,23 @@ choice;\n enum\n { FP_ROUND_NEAREST, FP_ROUND_UP, FP_ROUND_DOWN, FP_ROUND_ZERO };\n \n-static choice rounding[] = {\n+static const choice rounding[] = {\n   {\"NEAREST\", FP_ROUND_NEAREST},\n   {\"UP\", FP_ROUND_UP},\n   {\"DOWN\", FP_ROUND_DOWN},\n   {\"ZERO\", FP_ROUND_ZERO},\n   {NULL, 0}\n };\n \n-static choice precision[] =\n+static const choice precision[] =\n {\n   { \"24\", 1},\n   { \"53\", 2},\n   { \"64\", 0},\n   { NULL, 0}\n };\n \n-static choice signal_choices[] =\n+static const choice signal_choices[] =\n {\n   { \"IGNORE\", 1},\n   { \"ABORT\", 0},\n@@ -381,7 +381,7 @@ static choice signal_choices[] =\n \n \n static void\n-init_choice (variable * v, choice * c)\n+init_choice (variable * v, const choice * c)\n {\n   char *p;\n \n@@ -408,7 +408,7 @@ init_choice (variable * v, choice * c)\n \n \n static void\n-show_choice (variable * v, choice * c)\n+show_choice (variable * v, const choice * c)\n {\n   st_printf (\"%s  \", var_source (v));\n "}, {"sha": "d7963b7498bf42e329d2258f99fc9130f6ffbc58", "filename": "libgfortran/runtime/string.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2Fruntime%2Fstring.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/090037799cc3bc47500e77ed0b767b8d21bec1aa/libgfortran%2Fruntime%2Fstring.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fstring.c?ref=090037799cc3bc47500e77ed0b767b8d21bec1aa", "patch": "@@ -104,7 +104,7 @@ cf_strcpy (char *dest, int dest_len, const char *src)\n    if no default is provided.  */\n \n int\n-find_option (const char *s1, int s1_len, st_option * opts,\n+find_option (const char *s1, int s1_len, const st_option * opts,\n \t     const char *error_message)\n {\n   for (; opts->name; opts++)"}]}