{"sha": "9811059c69ab2ba37915915055d59ac58bf10419", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgxMTA1OWM2OWFiMmJhMzc5MTU5MTUwNTVkNTlhYzU4YmYxMDQxOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-06-08T18:19:47Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-06-08T18:19:47Z"}, "message": "(TARGET_DEFAULT): Use MASK_* macros instead of explicit constants in\ndefinitions or conditionals.\n\nFrom-SVN: r12245", "tree": {"sha": "3765b0c3345b9333de5f01de3773548e7849f548", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3765b0c3345b9333de5f01de3773548e7849f548"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9811059c69ab2ba37915915055d59ac58bf10419", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9811059c69ab2ba37915915055d59ac58bf10419", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9811059c69ab2ba37915915055d59ac58bf10419", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9811059c69ab2ba37915915055d59ac58bf10419/comments", "author": null, "committer": null, "parents": [{"sha": "eb5ce910419ea79722f9e5ea88331a8051c8fac4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb5ce910419ea79722f9e5ea88331a8051c8fac4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb5ce910419ea79722f9e5ea88331a8051c8fac4"}], "stats": {"total": 193, "additions": 85, "deletions": 108}, "files": [{"sha": "0dbcd5b6a8f360fac5304ba42b603bd02b66e00f", "filename": "gcc/config/m68k/a-ux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fa-ux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fa-ux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fa-ux.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -22,7 +22,7 @@ Boston, MA 02111-1307, USA.  */\n /* Execution environment */\n \n #undef TARGET_DEFAULT\n-#define TARGET_DEFAULT 7\t/* 68020, 68881 */\n+#define TARGET_DEFAULT (MASK_BITFIELD|MASK_68881|MASK_68020)\t/* 68020, 68881 */\n \n #define CPP_PREDEFINES \"-Dunix -Dm68k -DAUX -DmacII \\\n -Asystem(unix) -Asystem(AUX) -Acpu(m68k) -Amachine(m68k) -Amachine(macII)\""}, {"sha": "5903a12d5a65286bce9937692da4dbd87e16a943", "filename": "gcc/config/m68k/altos3068.h", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Faltos3068.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Faltos3068.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Faltos3068.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -1,8 +1,6 @@\n /* Definitions of target machine for GNU compiler.  Altos 3068 68020 version.\n-   Copyright (C) 1988, 1989, 1993 Free Software Foundation, Inc.\n-\n-Written by Jyrki Kuoppala <jkp@cs.hut.fi>\n-Last modified: Mon Mar  6 22:47:58 1989\n+   Copyright (C) 1988, 1989, 1993, 1996 Free Software Foundation, Inc.\n+   Contributed by Jyrki Kuoppala <jkp@cs.hut.fi>\n \n This file is part of GNU CC.\n \n@@ -28,7 +26,7 @@ Boston, MA 02111-1307, USA.  */\n /* 5 is without 68881.  Change to 7 if you have 68881 */\n \n #ifndef TARGET_DEFAULT\n-#define TARGET_DEFAULT 5\n+#define TARGET_DEFAULT (MASK_BITFIELD|MASK_68020)\n \n /* Don't try using XFmode.  */\n #undef LONG_DOUBLE_TYPE_SIZE\n@@ -40,7 +38,7 @@ Boston, MA 02111-1307, USA.  */\n    This will control the use of inline 68881 insns in certain macros.\n    Also inform the program which CPU this is for.  */\n \n-#if TARGET_DEFAULT & 02\n+#if TARGET_DEFAULT & MASK_68881\n \n /* -m68881 is the default */\n #define CPP_SPEC \\"}, {"sha": "caaaeff43130625a92dae6dcc5d9d259821e2f2a", "filename": "gcc/config/m68k/apollo68.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fapollo68.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fapollo68.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fapollo68.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Apollo 680X0 version.\n-   Copyright (C) 1989,1992 Free Software Foundation, Inc.\n+   Copyright (C) 1989,1992, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -27,7 +27,7 @@ Boston, MA 02111-1307, USA.  */\n /* See m68k.h.  7 means 68020 with 68881.  */\n \n #ifndef TARGET_DEFAULT\n-#define TARGET_DEFAULT 7\n+#define TARGET_DEFAULT (MASK_BITFIELD|MASK_68881|MASK_68020)\n #endif\n \n /* Target switches for the Apollo is the same as in m68k.h, except\n@@ -54,7 +54,7 @@ Boston, MA 02111-1307, USA.  */\n    This will control the use of inline 68881 insns in certain macros.\n    Also inform the program which CPU this is for.  */\n \n-#if TARGET_DEFAULT & 02\n+#if TARGET_DEFAULT & MASK_68881\n \n /* -m68881 is the default */\n #define CPP_SPEC \\\n@@ -100,7 +100,7 @@ Boston, MA 02111-1307, USA.  */\n    Note that includes knowledge of the default specs for gcc, ie. no\n    args translates to the same effect as -m68881 */\n \n-#if TARGET_DEFAULT & 2\n+#if TARGET_DEFAULT & MASK_68881\n /* -m68881 is the default */\n #define STARTFILE_SPEC\t\t\t\t\t\\\n   \"%{pg:gcrt0.o%s}%{!pg:%{p:mcrt0.o%s}%{!p:crt0.o%s}}\""}, {"sha": "17410c80740c15e44bd50ef9ecf700791c4e4552", "filename": "gcc/config/m68k/ccur-GAS.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fccur-GAS.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fccur-GAS.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fccur-GAS.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -40,7 +40,7 @@ Boston, MA 02111-1307, USA.  */\n #define SPACE_AFTER_L_OPTION\n #define SWITCHES_NEED_SPACES \"oL\"\n \n-#define TARGET_DEFAULT 0407 /* See m68k.h.  7 means 68020 with 68881.  */\n+#define TARGET_DEFAULT (MASK_68040|MASK_BITFIELD|MASK_68881|MASK_68020) /* See m68k.h.  7 means 68020 with 68881.  */\n \n #include \"m68k/m68k.h\"\n "}, {"sha": "14f0606b8aad0c7faea302197b7cb218e7b483cb", "filename": "gcc/config/m68k/dpx2.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fdpx2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fdpx2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fdpx2.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.  \n    Bull DPX/2 200 and 300 systems (m68k, SysVr3).\n-   Copyright (C) 1987, 1993, 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1993, 1994, 1995, 1996 Free Software Foundation, Inc.\n    Contributed by Frederic Pierresteguy (F.Pierresteguy@frcl.bull.fr).\n \n This file is part of GNU CC.\n@@ -36,7 +36,7 @@ Boston, MA 02111-1307, USA.  */\n  * but this will get us going.  \n  */\n #ifndef TARGET_DEFAULT\n-#define TARGET_DEFAULT 7\n+#define TARGET_DEFAULT (MASK_BITFIELD|MASK_68881|MASK_68020)\n #endif\n \n #define OBJECT_FORMAT_COFF\n@@ -79,7 +79,7 @@ Boston, MA 02111-1307, USA.  */\n  * bitfield instructions do not seem to work a clean way.\n  */\n #undef TARGET_DEFAULT\n-#define TARGET_DEFAULT 3\n+#define TARGET_DEFAULT (MASK_68881|MASK_68020)\n \n /* The native assembler doesn't support fmovecr.  */\n #define NO_ASM_FMOVECR"}, {"sha": "f61e2f2edbb815e81a904184eaf6be55cd2434b9", "filename": "gcc/config/m68k/hp320.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fhp320.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fhp320.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fhp320.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  HP-UX 68000/68020 version.\n-   Copyright (C) 1987, 1988, 1993, 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 88, 93, 94, 95, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -65,7 +65,7 @@ Boston, MA 02111-1307, USA.  */\n /* See m68k.h.  7 means 68020 with 68881.  */\n \n #ifndef TARGET_DEFAULT\n-#define\tTARGET_DEFAULT 7\n+#define\tTARGET_DEFAULT (MASK_BITFIELD|MASK_68881|MASK_68020)\n #endif\n \n /* Define __HAVE_68881__ in preprocessor, unless -msoft-float is specified.\n@@ -77,7 +77,7 @@ Boston, MA 02111-1307, USA.  */\n \n #define NO_DOT_IN_LABEL\n \n-#if TARGET_DEFAULT & 02  /* -m68881 is the default */\n+#if TARGET_DEFAULT & MASK_68881  /* -m68881 is the default */\n \n /* These definitions differ from those used for GAS by defining __HPUX_ASM__.\n    This is needed because some programs, particularly GDB, need to\n@@ -98,7 +98,7 @@ Boston, MA 02111-1307, USA.  */\n \n #else /* not HPUX_ASM */\n \n-#if TARGET_DEFAULT & 02  /* -m68881 is the default */\n+#if TARGET_DEFAULT & MASK_68881  /* -m68881 is the default */\n \n #define CPP_SPEC \\\n \"%{!msoft-float:-D__HAVE_68881__ }\\"}, {"sha": "34405f88350af35d5f3136f5201061dda8d20c3c", "filename": "gcc/config/m68k/hp3bsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fhp3bsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fhp3bsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fhp3bsd.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -2,7 +2,7 @@\n \n /* See m68k.h.  7 means 68020 with 68881.  */\n \n-#define TARGET_DEFAULT 7\n+#define TARGET_DEFAULT (MASK_BITFIELD|MASK_68881|MASK_68020)\n \n /* Define __HAVE_68881__ in preprocessor, unless -msoft-float is specified.\n    This will control the use of inline 68881 insns in certain macros.  */"}, {"sha": "a3b652ffe357add0a0389a9bb2ba473bcbb54873", "filename": "gcc/config/m68k/hp3bsd44.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fhp3bsd44.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fhp3bsd44.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fhp3bsd44.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -2,7 +2,7 @@\n \n /* See m68k.h.  7 means 68020 with 68881.  */\n \n-#define TARGET_DEFAULT 7\n+#define TARGET_DEFAULT (MASK_BITFIELD|MASK_68881|MASK_68020)\n \n /* Define __HAVE_68881__ in preprocessor, unless -msoft-float is specified.\n    This will control the use of inline 68881 insns in certain macros.  */"}, {"sha": "fbded9e8bdb1047e26f3d0aee3375ae191a19ec2", "filename": "gcc/config/m68k/isi-nfp.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fisi-nfp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fisi-nfp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fisi-nfp.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -1,6 +1,6 @@\n /* Define target machine as an ISI 68000/68020 with no 68881.  */\n \n-#define TARGET_DEFAULT 5\n+#define TARGET_DEFAULT (MASK_BITFIELD|MASK_68020)\n \n #include \"m68k/isi.h\"\n "}, {"sha": "a458cf9e080bf81b844b935ad9d45853de5e8221", "filename": "gcc/config/m68k/isi.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fisi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fisi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fisi.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.  ISI 68000/68020 version.\n    Intended only for use with GAS, and not ISI's assembler, which is buggy\n-   Copyright (C) 1988 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -23,10 +23,10 @@ Boston, MA 02111-1307, USA.  */\n \n /* See m68k.h.  7 means 68020 with 68881. */\n #ifndef TARGET_DEFAULT\n-#define TARGET_DEFAULT 7\n+#define TARGET_DEFAULT (MASK_BITFIELD|MASK_68881|MASK_68020)\n #endif\n \n-#if TARGET_DEFAULT & 2\n+#if TARGET_DEFAULT & MASK_68881\n /* Define __HAVE_68881__ in preprocessor, unless -msoft-float is specified.\n    This will control the use of inline 68881 insns in certain macros.  */\n "}, {"sha": "b21e76bf6a9fb62834006ae7b8d37cbd7c41cb12", "filename": "gcc/config/m68k/linux-aout.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Flinux-aout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Flinux-aout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux-aout.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Motorola m68k running Linux\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -22,15 +22,15 @@ Boston, MA 02111-1307, USA.  */\n #include <linux-aout.h>\n \n /* 68020 with 68881 */\n-#define TARGET_DEFAULT 7\n+#define TARGET_DEFAULT (MASK_BITFIELD|MASK_68881|MASK_68020)\n \n #define DBX_DEBUGGING_INFO\n \n #define CPP_PREDEFINES \\\n   \"-Dunix -Dmc68000 -Dmc68020 -Dlinux -Asystem(unix) -Asystem(posix) -Acpu(m68k) -Amachine(m68k)\"\n \n #undef CPP_SPEC\n-#if TARGET_DEFAULT & 2\n+#if TARGET_DEFAULT & MASK_68881\n #define CPP_SPEC \\\n   \"%{!msoft-float:-D__HAVE_68881__} %{posix:-D_POSIX_SOURCE}\"\n #else"}, {"sha": "5a53db14ba9a5bcad5ae6a0f0fd7e0e719d7df18", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -29,7 +29,7 @@ Boston, MA 02111-1307, USA.  */\n #define TARGET_VERSION fprintf (stderr, \" (68k Linux/ELF)\");\n \n /* 68020 with 68881 */\n-#define TARGET_DEFAULT 7\n+#define TARGET_DEFAULT (MASK_BITFIELD|MASK_68881|MASK_68020)\n \n /* for 68k machines this only needs to be TRUE for the 68000 */\n \n@@ -104,7 +104,7 @@ Boston, MA 02111-1307, USA.  */\n   \"-D__ELF__ -Dunix -Dmc68000 -Dmc68020 -Dlinux -Asystem(unix) -Asystem(posix) -Acpu(m68k) -Amachine(m68k)\"\n \n #undef CPP_SPEC\n-#if TARGET_DEFAULT & 2\n+#if TARGET_DEFAULT & MASK_68881\n #define CPP_SPEC \\\n   \"%{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{!msoft-float:-D__HAVE_68881__} %{posix:-D_POSIX_SOURCE}\"\n #else"}, {"sha": "ac3afac938e3d0c02ee51c0944d4f233ef5b260f", "filename": "gcc/config/m68k/lynx-ng.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Flynx-ng.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Flynx-ng.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flynx-ng.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Motorola 680x0 running LynxOS, using Lynx's old as and ld.\n-   Copyright (C) 1993, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -25,7 +25,7 @@ Boston, MA 02111-1307, USA.  */\n /* See m68k.h.  7 means 68020 with 68881.  */\n \n #ifndef TARGET_DEFAULT\n-#define TARGET_DEFAULT 7\n+#define TARGET_DEFAULT (MASK_BITFIELD|MASK_68881|MASK_68020)\n #endif\n \n /* Names to predefine in the preprocessor for this target machine.  */"}, {"sha": "8c54b8bc13f35f18b68c20d27e2fa1e96f3cb96c", "filename": "gcc/config/m68k/lynx.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flynx.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Motorola 680x0 running LynxOS.\n-   Copyright (C) 1993, 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1994, 1995, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -35,7 +35,7 @@ Boston, MA 02111-1307, USA.  */\n /* See m68k.h.  7 means 68020 with 68881.  */\n \n #ifndef TARGET_DEFAULT\n-#define TARGET_DEFAULT 7\n+#define TARGET_DEFAULT (MASK_BITFIELD|MASK_68881|MASK_68020)\n #endif\n \n /* Names to predefine in the preprocessor for this target machine.  */"}, {"sha": "c93a16349bdb6d059626c36fdd423cbf130f793d", "filename": "gcc/config/m68k/m68k-none.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fm68k-none.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fm68k-none.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k-none.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -180,15 +180,15 @@ Unrecognized value in TARGET_CPU_DEFAULT.\n    The default is m68k 99.9% of the time anyway.  */\n \n #if TARGET_CPU_DEFAULT == M68K_CPU_m68k || TARGET_CPU_DEFAULT == M68K_CPU_m68020\n-#if TARGET_DEFAULT & 2\n+#if TARGET_DEFAULT & MASK_68881\n #define MULTILIB_DEFAULTS { \"m68020\", \"m68881\" }\n #else\n #define MULTILIB_DEFAULTS { \"m68020\", \"msoft-float\" }\n #endif\n #endif\n \n #if TARGET_CPU_DEFAULT == M68K_CPU_m68000 || TARGET_CPU_DEFAULT == M68K_CPU_m68302\n-#if TARGET_DEFAULT & 2\n+#if TARGET_DEFAULT & MASK_68881\n #define MULTILIB_DEFAULTS { \"m68000\", \"m68881\" }\n #else\n #define MULTILIB_DEFAULTS { \"m68000\", \"msoft-float\" }"}, {"sha": "8e5b843397ef9e8fcb3753684b45c6fe2ffeb3da", "filename": "gcc/config/m68k/m68k-psos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fm68k-psos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fm68k-psos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k-psos.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -34,7 +34,7 @@ Boston, MA 02111-1307, USA.  */\n    the floating-point support package. */\n \n #undef TARGET_DEFAULT\n-#define TARGET_DEFAULT 01007\n+#define TARGET_DEFAULT (MASK_68040_ONLY|MASK_BITFIELD|MASK_68881|MASK_68020)\n \n /* Options passed to CPP, GAS, CC1 and CC1PLUS. We override\n    m68k-none.h for consistency with TARGET_DEFAULT. */"}, {"sha": "a40d919990d2317b8b52e217ac85169a3b4500eb", "filename": "gcc/config/m68k/m68kv4.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fm68kv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fm68kv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kv4.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -36,7 +36,7 @@ Boston, MA 02111-1307, USA.  */\n /* See m68k.h.  7 means 68020 with 68881.  */\n \n #ifndef TARGET_DEFAULT\n-#define\tTARGET_DEFAULT (5 /*68020*/ + 2 /*68881*/)\n+#define\tTARGET_DEFAULT (MASK_BITFIELD|MASK_68881|MASK_68020)\n #endif\n \n /* When using an SGS assembler, modify the name of the artificial label which\n@@ -84,7 +84,7 @@ while (0)\n    If a 68881 is not the default, gcc will only define __HAVE_68881__ if\n    -m68881 is specified. */\n \n-#if TARGET_DEFAULT & 2\n+#if TARGET_DEFAULT & MASK_68881\n #define CPP_SPEC \"%{!msoft-float:-D__HAVE_68881__}\"\n #else\n #define CPP_SPEC \"%{m68881:-D__HAVE_68881__}\""}, {"sha": "8d830a9e3fd8285a454faf603f1b8f17d9918221", "filename": "gcc/config/m68k/mot3300.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fmot3300.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -40,7 +40,7 @@ Boston, MA 02111-1307, USA.  */\n /* See m68k.h.  0407 means 68020-68040.  */\n \n #ifndef TARGET_DEFAULT\n-#define\tTARGET_DEFAULT 0407\n+#define\tTARGET_DEFAULT (MASK_68040|MASK_BITFIELD|MASK_68881|MASK_68020)\n #endif\n \n /* -m[c]6800 requires special flag to the assembler.  */\n@@ -793,7 +793,7 @@ do {(CUM).offset = 0;\\\n    tell g++.c about that.  */\n #define ALT_LIBM\t\"-lm881\"\n \n-#if (TARGET_DEFAULT & 2)      /* The default configuration has a 6888[12] FPU. */\n+#if (TARGET_DEFAULT & MASK_68881)      /* The default configuration has a 6888[12] FPU. */\n #define MATH_LIBRARY\t\"-lm881\"\n #endif\n "}, {"sha": "0dbf380c76df353b108a19a78fffdf6f4eb27b3c", "filename": "gcc/config/m68k/netbsd.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnetbsd.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -4,10 +4,7 @@\n \n #include <netbsd.h>\n \n-\n-/* See m68k.h.  7 means 68020 with 68881.  */\n-\n-#define TARGET_DEFAULT 7\n+#define TARGET_DEFAULT (MASK_BITFIELD|MASK_68881|MASK_68020)\n \n /* Define __HAVE_68881__ in preprocessor, unless -msoft-float is specified.\n    This will control the use of inline 68881 insns in certain macros.  */"}, {"sha": "de665da9aeb7a347f30e7efefd64ba9101555703", "filename": "gcc/config/m68k/news.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fnews.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fnews.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnews.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  SONY NEWS-OS 4 version.\n-   Copyright (C) 1987, 1989, 1993, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1989, 1993, 1994, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -31,7 +31,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* See m68k.h.  7 means 68020 with 68881.  */\n \n-#define TARGET_DEFAULT 7\n+#define TARGET_DEFAULT (MASK_BITFIELD|MASK_68881|MASK_68020)\n \n /* Define __HAVE_68881__ in preprocessor, unless -msoft-float is specified.\n    This will control the use of inline 68881 insns in certain macros.  */"}, {"sha": "23f7ff133037cb7447ff57ec9af44b083e8645f2", "filename": "gcc/config/m68k/next.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fnext.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fnext.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnext.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -25,7 +25,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* See m68k.h.  0407 means 68040 (or 68030 or 68020, with 68881/2).  */\n \n-#define TARGET_DEFAULT 0407\n+#define TARGET_DEFAULT (MASK_68040|MASK_BITFIELD|MASK_68881|MASK_68020)\n \n /* Boundary (in *bits*) on which stack pointer should be aligned.  */\n "}, {"sha": "d73cda9706552643711977976a6e5caf95368309", "filename": "gcc/config/m68k/pbb.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fpbb.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fpbb.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fpbb.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -1,8 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n-\n    Citicorp/TTI Unicom PBB version (using GAS with a %-register prefix)\n-\n-   Copyright (C) 1987, 1988, 1990 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1990, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -29,7 +27,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* See m68k.h.  5 means 68020 without 68881.  */\n \n-#define TARGET_DEFAULT 5\n+#define TARGET_DEFAULT (MASK_BITFIELD|MASK_68020)\n \n /* Don't try using XFmode.  */\n #undef LONG_DOUBLE_TYPE_SIZE"}, {"sha": "3ca99fdb5bcf35e4e3d84d3b7edd380bdb92c59a", "filename": "gcc/config/m68k/plexus.h", "status": "modified", "additions": 16, "deletions": 25, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fplexus.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fplexus.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fplexus.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -1,26 +1,7 @@\n-/* Definitions of target machine for GNU compiler.\n-   Copyright (C) 1990, 1994 Free Software Foundation, Inc.\n-\n-   Written by Randy Welch\n-   Send bug reports, questions and improvements to any of the following\n-   addresses:\n-\n-   randy@kcin.uucp\n-   randy@tss.com\n-   rwelch@netcom.com\n-   plx-info@wpg.com        Plexus users mailing list\n-\n-   For 680X0 based Plexus Computers running SYSVR2\n-\n-   The Plexus port of gcc requires you to use gas ( either 1.3X with COFF \n-   patches or 2.X ),  If you use gas 2.X you have to use binutils-2.X.\n-      \n-   With using gas-2.X the Plexus gcc port is now capable of generating\n-   output suitable for use by gdb-4.X ( send mail to above address for\n-   info on getting gdb patches or other GNU items for the Plexus )\n-\n-   This is configured for label output default by gas as LXXX instead of\n-   plexus cc/as combination requires .LXXX\n+/* Definitions of target machine for GNU compiler, for 680X0 based Plexus\n+   Computers running SYSVR2\n+   Copyright (C) 1990, 1994, 1996 Free Software Foundation, Inc.\n+   Contributed by Randy Welch (rwelch@netcom.com).\n \n This file is part of GNU CC.\n \n@@ -40,12 +21,22 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n \n+/* The Plexus port of gcc requires you to use gas ( either 1.3X with COFF \n+   patches or 2.X ),  If you use gas 2.X you have to use binutils-2.X.\n+      \n+   With using gas-2.X the Plexus gcc port is now capable of generating\n+   output suitable for use by gdb-4.X ( send mail to above address for\n+   info on getting gdb patches or other GNU items for the Plexus )\n+\n+   This is configured for label output default by gas as LXXX instead of\n+   plexus cc/as combination requires .LXXX  */\n+\n #include \"m68k/m68k.h\"\n \n /* Define __HAVE_68881 in preprocessor only if -m68881 is specified.\n    This will control the use of inline 68881 insns in certain macros. */\n \n-#define TARGET_DEFAULT 5                      /* set to 5 if on a '020 box */\n+#define TARGET_DEFAULT (MASK_BITFIELD|MASK_68020)\n \n /* Don't try using XFmode.  */\n #undef LONG_DOUBLE_TYPE_SIZE\n@@ -54,7 +45,7 @@ Boston, MA 02111-1307, USA.  */\n #define CPP_SPEC \"%{m68881:-D__HAVE_68881__}\"\n #define CPP_PREDEFINES \"-Dm68 -Dunix -Dplexus -Asystem(unix)  -Acpu(m68k) -Amachine(m68k)\"\n \n-#if TARGET_DEFAULT & 01\n+#if TARGET_DEFAULT & MASK_68020\n #define ASM_SPEC\\\n \"%{m68000:-mc68000}%{mc68000:-mc68000}%{!mc68000:%{!m68000:-mc68020}}\"\n #undef STRICT_ALIGNMENT"}, {"sha": "6f1ae7a7a6cb54931f4f545206b46a1995ac5cda", "filename": "gcc/config/m68k/sun2o4.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fsun2o4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fsun2o4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsun2o4.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Sun 2 running Sunos 4.\n-   Copyright (C) 1987, 1988, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1993, 1996 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -35,7 +35,7 @@ Boston, MA 02111-1307, USA.  */\n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 16\n \n-#if TARGET_DEFAULT & 0200\n+#if TARGET_DEFAULT & MASK_SKY\n \n /* -msky is the default */\n #define CPP_SPEC \\\n@@ -58,7 +58,7 @@ Boston, MA 02111-1307, USA.  */\n \n #undef STARTFILE_SPEC\n \n-#if TARGET_DEFAULT & 0200\n+#if TARGET_DEFAULT & MASK_SKY\n /* -msky is the default */\n #define STARTFILE_SPEC\t\t\t\t\t\\\n   \"%{pg:gcrt0.o%s}%{!pg:%{p:mcrt0.o%s}%{!p:crt0.o%s}}\t\\\n@@ -78,7 +78,7 @@ Boston, MA 02111-1307, USA.  */\n \n #undef LIB_SPEC\n \n-#if TARGET_DEFAULT & 0200\n+#if TARGET_DEFAULT & MASK_SKY\n /* -msky is the default */\n #define LIB_SPEC \"%{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p} \\\n %{a:/usr/lib/bb_link.o -lc} %{g:-lg} \\"}, {"sha": "13e927ede4d025dd1bd6930823b6c50cd7168c5d", "filename": "gcc/config/m68k/sun3.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fsun3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fsun3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsun3.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -31,15 +31,15 @@ Boston, MA 02111-1307, USA.  */\n /* See m68k.h.  7 means 68020 with 68881.  */\n \n #ifndef TARGET_DEFAULT\n-#define TARGET_DEFAULT 7\n+#define TARGET_DEFAULT (MASK_BITFIELD|MASK_68881|MASK_68020)\n #endif\n \n /* Define __HAVE_FPA__ or __HAVE_68881__ in preprocessor,\n    according to the -m flags.\n    This will control the use of inline 68881 insns in certain macros.\n    Also inform the program which CPU this is for.  */\n \n-#if TARGET_DEFAULT & 02\n+#if TARGET_DEFAULT & MASK_68881\n \n /* -m68881 is the default */\n #define CPP_SPEC \\\n@@ -98,15 +98,15 @@ Boston, MA 02111-1307, USA.  */\n    I'm not sure what would happen below if people gave contradictory\n    arguments (eg. -msoft-float -mfpa) */\n \n-#if TARGET_DEFAULT & 0100\n+#if TARGET_DEFAULT & MASK_FPA\n /* -mfpa is the default */\n #define STARTFILE_SPEC\t\t\t\t\t\\\n   \"%{pg:gcrt0.o%s}%{!pg:%{p:mcrt0.o%s}%{!p:crt0.o%s}}\t\\\n    %{m68881:Mcrt1.o%s}\t\t\t\t\t\\\n    %{msoft-float:Fcrt1.o%s}\t\t\t\t\\\n    %{!m68881:%{!msoft-float:Wcrt1.o%s}}\"\n #else\n-#if TARGET_DEFAULT & 2\n+#if TARGET_DEFAULT & MASK_68881\n /* -m68881 is the default */\n #define STARTFILE_SPEC\t\t\t\t\t\\\n   \"%{pg:gcrt0.o%s}%{!pg:%{p:mcrt0.o%s}%{!p:crt0.o%s}}\t\\\n@@ -127,14 +127,14 @@ Boston, MA 02111-1307, USA.  */\n    Control choice of libm.a (if user says -lm)\n    based on fp arith default and options.  */\n \n-#if TARGET_DEFAULT & 0100\n+#if TARGET_DEFAULT & MASK_FPA\n /* -mfpa is the default */\n #define LIB_SPEC \"%{g:-lg} %{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p} \\\n %{g:-lg} \\\n %{msoft-float:-L/usr/lib/fsoft}%{m68881:-L/usr/lib/f68881}\\\n %{!msoft_float:%{!m68881:-L/usr/lib/ffpa}}\"\n #else\n-#if TARGET_DEFAULT & 2\n+#if TARGET_DEFAULT & MASK_68881\n /* -m68881 is the default */\n #define LIB_SPEC \"%{g:-lg} %{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p} \\\n %{g:-lg} \\"}, {"sha": "32f5f657dc0ecd6a4898d504a054296b36f5631c", "filename": "gcc/config/m68k/sun3n.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fsun3n.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Fsun3n.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsun3n.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -1,6 +1,6 @@\n /* Define target machine as a Sun 3 with no 68881.  */\n \n-#define TARGET_DEFAULT 5\n+#define TARGET_DEFAULT (MASK_BITFIELD|MASK_68020)\n \n #include \"m68k/sun3.h\"\n "}, {"sha": "30cc9c1a2f3dddbc5a83d829f1647da35b3867cd", "filename": "gcc/config/m68k/tower.h", "status": "modified", "additions": 13, "deletions": 20, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Ftower.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9811059c69ab2ba37915915055d59ac58bf10419/gcc%2Fconfig%2Fm68k%2Ftower.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ftower.h?ref=9811059c69ab2ba37915915055d59ac58bf10419", "patch": "@@ -1,21 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n-   Copyright (C) 1990, 1994 Free Software Foundation, Inc.\n-\n-   Written by Robert Andersson, International Systems, Oslo, Norway.\n-   Please send bug reports, questions and improvements to ra@intsys.no.\n-\n-   For NCR Tower 32/4x0 and 32/6x0 running System V Release 3.\n-   I don't have access to 200/700/800/850 machines, so I don't know if it\n-   works on those as well.  It shouldn't be far from it however.\n-   The hardware floating point support is completely untested, as I do\n-   not have access to a machine with a 6888x FPU in it.\n-   It does not work on the System V Release 2 based OS releases.  Making it\n-   work will not be easy, due to the silly way in which stack expansion is\n-   implemented in the OS.\n-\n-   This file is included in tower-as.h.\n-   Do *NOT* include this file directly.\n-\n+   Copyright (C) 1990, 1994, 1996 Free Software Foundation, Inc.\n+   Contributed by Robert Andersson, International Systems, Oslo, ra@intsys.no.\n \n This file is part of GNU CC.\n \n@@ -34,13 +19,21 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+/* For NCR Tower 32/4x0 and 32/6x0 running System V Release 3.  I don't have\n+   access to 200/700/800/850 machines, so I don't know if it works on those\n+   as well.  It shouldn't be far from it however.  The hardware floating point\n+   support is completely untested, as I do not have access to a machine with\n+   a 6888x FPU in it.  It does not work on the System V Release 2 based OS\n+   releases.  Making it work will not be easy, due to the silly way in which\n+   stack expansion is implemented in the OS.\n \n-#include \"m68k/m68k.h\"\n+   This file is included in tower-as.h.\n+   Do *NOT* include this file directly.  */\n \n \n-/* See m68k.h.  5 means 68020 with no 68881.  */\n+#include \"m68k/m68k.h\"\n \n-#define TARGET_DEFAULT 5\n+#define TARGET_DEFAULT (MASK_BITFIELD|MASK_68020)\n \n /* Don't try using XFmode.  */\n #undef LONG_DOUBLE_TYPE_SIZE"}]}