{"sha": "0c1342dfade9b202cb4b896bf8ce0646dd1d06b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMxMzQyZGZhZGU5YjIwMmNiNGI4OTZiZjhjZTA2NDZkZDFkMDZiOA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2018-12-12T09:25:13Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2018-12-12T09:25:13Z"}, "message": "rs6000 - add missed hunk\n\nThis add the hunk\n\t(macho_call_template): Remove.\n\nmissed from r267049\n\nFrom-SVN: r267050", "tree": {"sha": "4b586323a4dda2239b08c6e6c1345f2f60994725", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b586323a4dda2239b08c6e6c1345f2f60994725"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c1342dfade9b202cb4b896bf8ce0646dd1d06b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c1342dfade9b202cb4b896bf8ce0646dd1d06b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c1342dfade9b202cb4b896bf8ce0646dd1d06b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c1342dfade9b202cb4b896bf8ce0646dd1d06b8/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be611c9c5a544b08cfd3ff5d45b04a127d4d055f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be611c9c5a544b08cfd3ff5d45b04a127d4d055f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be611c9c5a544b08cfd3ff5d45b04a127d4d055f"}], "stats": {"total": 43, "additions": 0, "deletions": 43}, "files": [{"sha": "f774e2d0bf758e2c7eac6b9299d531c56c756814", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c1342dfade9b202cb4b896bf8ce0646dd1d06b8/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c1342dfade9b202cb4b896bf8ce0646dd1d06b8/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=0c1342dfade9b202cb4b896bf8ce0646dd1d06b8", "patch": "@@ -33208,49 +33208,6 @@ get_prev_label (tree function_name)\n   return NULL_TREE;\n }\n \n-/* INSN is either a function call or a millicode call.  It may have an\n-   unconditional jump in its delay slot.\n-\n-   CALL_DEST is the routine we are calling.  */\n-\n-char *\n-macho_call_template (rtx_insn *insn, rtx *operands, int dest_operand_number,\n-\t\t     int cookie_operand_number)\n-{\n-  static char buf[256];\n-  if (darwin_emit_branch_islands\n-      && GET_CODE (operands[dest_operand_number]) == SYMBOL_REF\n-      && (INTVAL (operands[cookie_operand_number]) & CALL_LONG))\n-    {\n-      tree labelname;\n-      tree funname = get_identifier (XSTR (operands[dest_operand_number], 0));\n-\n-      if (no_previous_def (funname))\n-\t{\n-\t  rtx label_rtx = gen_label_rtx ();\n-\t  char *label_buf, temp_buf[256];\n-\t  ASM_GENERATE_INTERNAL_LABEL (temp_buf, \"L\",\n-\t\t\t\t       CODE_LABEL_NUMBER (label_rtx));\n-\t  label_buf = temp_buf[0] == '*' ? temp_buf + 1 : temp_buf;\n-\t  labelname = get_identifier (label_buf);\n-\t  add_compiler_branch_island (labelname, funname, insn_line (insn));\n-\t}\n-      else\n-\tlabelname = get_prev_label (funname);\n-\n-      /* \"jbsr foo, L42\" is Mach-O for \"Link as 'bl foo' if a 'bl'\n-\t instruction will reach 'foo', otherwise link as 'bl L42'\".\n-\t \"L42\" should be a 'branch island', that will do a far jump to\n-\t 'foo'.  Branch islands are generated in\n-\t macho_branch_islands().  */\n-      sprintf (buf, \"jbsr %%z%d,%.246s\",\n-\t       dest_operand_number, IDENTIFIER_POINTER (labelname));\n-    }\n-  else\n-    sprintf (buf, \"bl %%z%d\", dest_operand_number);\n-  return buf;\n-}\n-\n /* Generate PIC and indirect symbol stubs.  */\n \n void"}]}