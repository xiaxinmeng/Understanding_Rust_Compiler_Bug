{"sha": "8eb75619495a2d9049975bd8e56fcb3a184fabd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGViNzU2MTk0OTVhMmQ5MDQ5OTc1YmQ4ZTU2ZmNiM2ExODRmYWJkMQ==", "commit": {"author": {"name": "Ayal Zaks", "email": "zaks@il.ibm.com", "date": "2007-09-23T11:58:19Z"}, "committer": {"name": "Revital Eres", "email": "revitale@gcc.gnu.org", "date": "2007-09-23T11:58:19Z"}, "message": "Minor cosmetic change \n\nCo-Authored-By: Revital Eres <eres@il.ibm.com>\n\nFrom-SVN: r128689", "tree": {"sha": "08f98d68ea009867b325d7e00480daaab248a7db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08f98d68ea009867b325d7e00480daaab248a7db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8eb75619495a2d9049975bd8e56fcb3a184fabd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eb75619495a2d9049975bd8e56fcb3a184fabd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eb75619495a2d9049975bd8e56fcb3a184fabd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eb75619495a2d9049975bd8e56fcb3a184fabd1/comments", "author": null, "committer": null, "parents": [{"sha": "97aaae90c4644cc9794b0a0db0662e7ba709d3ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97aaae90c4644cc9794b0a0db0662e7ba709d3ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97aaae90c4644cc9794b0a0db0662e7ba709d3ff"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "1e3e595fd2372896edd70d7efdc3bb530c59c134", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb75619495a2d9049975bd8e56fcb3a184fabd1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb75619495a2d9049975bd8e56fcb3a184fabd1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8eb75619495a2d9049975bd8e56fcb3a184fabd1", "patch": "@@ -1,3 +1,9 @@\n+2007-09-23  Ayal Zaks  <zaks@il.ibm.com>\n+\t    Revital Eres  <eres@il.ibm.com>\n+\n+\t* modulo-sched.c (doloop_register_get): Rewrite the loop which\n+\tchecks whether the count_reg is found outside the control part.\n+\n 2007-09-23  Jakub Jelinek  <jakub@redhat.com>\n \n \t* expr.c (expand_expr_real_1) <case CALL_EXPR>: Use get_callee_fndecl"}, {"sha": "a17986ce544a0c35cdc465efa1ccabc5e7ce30b8", "filename": "gcc/modulo-sched.c", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb75619495a2d9049975bd8e56fcb3a184fabd1/gcc%2Fmodulo-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb75619495a2d9049975bd8e56fcb3a184fabd1/gcc%2Fmodulo-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmodulo-sched.c?ref=8eb75619495a2d9049975bd8e56fcb3a184fabd1", "patch": "@@ -286,8 +286,7 @@ static rtx\n doloop_register_get (rtx head ATTRIBUTE_UNUSED, rtx tail ATTRIBUTE_UNUSED)\n {\n #ifdef HAVE_doloop_end\n-  rtx reg, condition, insn;\n-  bool found = false;\n+  rtx reg, condition, insn, first_insn_not_to_check;\n \n   if (!JUMP_P (tail))\n     return NULL_RTX;\n@@ -309,25 +308,23 @@ doloop_register_get (rtx head ATTRIBUTE_UNUSED, rtx tail ATTRIBUTE_UNUSED)\n      until the decrement.  We assume the control part consists of\n      either a single (parallel) branch-on-count or a (non-parallel)\n      branch immediately preceded by a single (decrement) insn.  */\n-  for (insn = head; insn != PREV_INSN (tail); insn = NEXT_INSN (insn))\n-    if ((found = reg_mentioned_p (reg, insn)) == true)\n-      break;\n-  if (found)\n-    {\n-      if (dump_file)\n-        fprintf (dump_file, \"SMS count_reg found outside control\\n\");\n+  first_insn_not_to_check = (GET_CODE (PATTERN (tail)) == PARALLEL ? tail\n+                             : PREV_INSN (tail));\n \n-      return NULL_RTX;\n-    }\n-  /* One last check in case the do-loop pattern is parallel.  */\n-  if (GET_CODE (PATTERN (tail)) == PARALLEL)\n-    if (reg_mentioned_p (reg, PREV_INSN (tail)))\n+  for (insn = head; insn != first_insn_not_to_check; insn = NEXT_INSN (insn))\n+    if (reg_mentioned_p (reg, insn))\n       {\n         if (dump_file)\n-          fprintf (dump_file, \"SMS count_reg found outside control\\n\");\n+        {\n+          fprintf (dump_file, \"SMS count_reg found \");\n+          print_rtl_single (dump_file, reg);\n+          fprintf (dump_file, \" outside control in insn:\\n\");\n+          print_rtl_single (dump_file, insn);\n+        }\n \n         return NULL_RTX;\n       }\n+\n   return reg;\n #else\n   return NULL_RTX;"}]}