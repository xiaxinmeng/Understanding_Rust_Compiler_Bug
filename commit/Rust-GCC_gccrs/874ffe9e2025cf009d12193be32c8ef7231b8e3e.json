{"sha": "874ffe9e2025cf009d12193be32c8ef7231b8e3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc0ZmZlOWUyMDI1Y2YwMDlkMTIxOTNiZTMyYzhlZjcyMzFiOGUzZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-08-09T08:08:44Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-08-09T08:08:44Z"}, "message": "Fix typos in params.def.\n\n2018-08-09  Martin Liska  <mliska@suse.cz>\n\n\t* params.def (PARAM_ALIGN_LOOP_ITERATIONS): Remove double dots\n        at the end of a line, make first letter capital and end up\n        a sentence with a dot.\n\t(PARAM_LOOP_INTERCHANGE_STRIDE_RATIO): Likewise.\n\t(PARAM_LOOP_BLOCK_TILE_SIZE): Likewise.\n\t(PARAM_GRAPHITE_MAX_NB_SCOP_PARAMS): Likewise.\n\t(PARAM_GRAPHITE_MAX_ARRAYS_PER_SCOP): Likewise.\n\t(PARAM_MAX_ISL_OPERATIONS): Likewise.\n\t(PARAM_GRAPHITE_ALLOW_CODEGEN_ERRORS): Likewise.\n\t(PARAM_PROFILE_FUNC_INTERNAL_ID): Likewise.\n\t(PARAM_INDIR_CALL_TOPN_PROFILE): Likewise.\n\t(PARAM_SLP_MAX_INSNS_IN_BB): Likewise.\n\t(PARAM_IPA_CP_EVAL_THRESHOLD): Likewise.\n\t(PARAM_IPA_CP_RECURSION_PENALTY): Likewise.\n\t(PARAM_IPA_CP_SINGLE_CALL_PENALTY): Likewise.\n\t(PARAM_IPA_CP_LOOP_HINT_BONUS): Likewise.\n\t(PARAM_IPA_CP_ARRAY_INDEX_HINT_BONUS): Likewise.\n\t(PARAM_TREE_REASSOC_WIDTH): Likewise.\n\t(PARAM_HSA_GEN_DEBUG_STORES): Likewise.\n\t(PARAM_MAX_SPECULATIVE_DEVIRT_MAYDEFS): Likewise.\n\t(PARAM_MAX_VRP_SWITCH_ASSERTIONS): Likewise.\n\nFrom-SVN: r263442", "tree": {"sha": "20d85feabadd5f7dec43e03f0fce5ed88c2bfa5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20d85feabadd5f7dec43e03f0fce5ed88c2bfa5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/874ffe9e2025cf009d12193be32c8ef7231b8e3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874ffe9e2025cf009d12193be32c8ef7231b8e3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/874ffe9e2025cf009d12193be32c8ef7231b8e3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874ffe9e2025cf009d12193be32c8ef7231b8e3e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b06c9a6da753ceb79b0eb6cc8c265e14fcd20d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b06c9a6da753ceb79b0eb6cc8c265e14fcd20d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b06c9a6da753ceb79b0eb6cc8c265e14fcd20d3"}], "stats": {"total": 76, "additions": 50, "deletions": 26}, "files": [{"sha": "1ece1333a1f199f357253e08e008b457c80508bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874ffe9e2025cf009d12193be32c8ef7231b8e3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874ffe9e2025cf009d12193be32c8ef7231b8e3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=874ffe9e2025cf009d12193be32c8ef7231b8e3e", "patch": "@@ -1,3 +1,27 @@\n+2018-08-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* params.def (PARAM_ALIGN_LOOP_ITERATIONS): Remove double dots\n+        at the end of a line, make first letter capital and end up\n+        a sentence with a dot.\n+\t(PARAM_LOOP_INTERCHANGE_STRIDE_RATIO): Likewise.\n+\t(PARAM_LOOP_BLOCK_TILE_SIZE): Likewise.\n+\t(PARAM_GRAPHITE_MAX_NB_SCOP_PARAMS): Likewise.\n+\t(PARAM_GRAPHITE_MAX_ARRAYS_PER_SCOP): Likewise.\n+\t(PARAM_MAX_ISL_OPERATIONS): Likewise.\n+\t(PARAM_GRAPHITE_ALLOW_CODEGEN_ERRORS): Likewise.\n+\t(PARAM_PROFILE_FUNC_INTERNAL_ID): Likewise.\n+\t(PARAM_INDIR_CALL_TOPN_PROFILE): Likewise.\n+\t(PARAM_SLP_MAX_INSNS_IN_BB): Likewise.\n+\t(PARAM_IPA_CP_EVAL_THRESHOLD): Likewise.\n+\t(PARAM_IPA_CP_RECURSION_PENALTY): Likewise.\n+\t(PARAM_IPA_CP_SINGLE_CALL_PENALTY): Likewise.\n+\t(PARAM_IPA_CP_LOOP_HINT_BONUS): Likewise.\n+\t(PARAM_IPA_CP_ARRAY_INDEX_HINT_BONUS): Likewise.\n+\t(PARAM_TREE_REASSOC_WIDTH): Likewise.\n+\t(PARAM_HSA_GEN_DEBUG_STORES): Likewise.\n+\t(PARAM_MAX_SPECULATIVE_DEVIRT_MAYDEFS): Likewise.\n+\t(PARAM_MAX_VRP_SWITCH_ASSERTIONS): Likewise.\n+\n 2018-08-09  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \tPR target/84332"}, {"sha": "a09785d4e07918a26ffdab2bd1507ce2f2c6db11", "filename": "gcc/params.def", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874ffe9e2025cf009d12193be32c8ef7231b8e3e/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874ffe9e2025cf009d12193be32c8ef7231b8e3e/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=874ffe9e2025cf009d12193be32c8ef7231b8e3e", "patch": "@@ -415,8 +415,8 @@ DEFPARAM (PARAM_ALIGN_THRESHOLD,\n \n DEFPARAM (PARAM_ALIGN_LOOP_ITERATIONS,\n \t  \"align-loop-iterations\",\n-\t  \"Loops iterating at least selected number of iterations will get loop alignment..\",\n-\t  4, 0, 0)\n+\t  \"Loops iterating at least selected number of iterations will get \"\n+\t  \"loop alignment.\", 4, 0, 0)\n \n /* For guessed profiles, the loops having unknown number of iterations\n    are predicted to iterate relatively few (10) times at average.\n@@ -828,7 +828,7 @@ DEFPARAM (PARAM_LOOP_INTERCHANGE_MAX_NUM_STMTS,\n \n DEFPARAM (PARAM_LOOP_INTERCHANGE_STRIDE_RATIO,\n \t  \"loop-interchange-stride-ratio\",\n-\t  \"The minimum stride ratio for loop interchange to be profitable\",\n+\t  \"The minimum stride ratio for loop interchange to be profitable.\",\n \t  2, 0, 0)\n \n /* Whether we should use canonical types rather than deep \"structural\"\n@@ -906,32 +906,32 @@ DEFPARAM (PARAM_SWITCH_CONVERSION_BRANCH_RATIO,\n \n DEFPARAM (PARAM_LOOP_BLOCK_TILE_SIZE,\n \t  \"loop-block-tile-size\",\n-\t  \"size of tiles for loop blocking.\",\n+\t  \"Size of tiles for loop blocking.\",\n \t  51, 0, 0)\n \n /* Maximal number of parameters that we allow in a SCoP.  */\n \n DEFPARAM (PARAM_GRAPHITE_MAX_NB_SCOP_PARAMS,\n \t  \"graphite-max-nb-scop-params\",\n-\t  \"maximum number of parameters in a SCoP.\",\n+\t  \"Maximum number of parameters in a SCoP.\",\n \t  10, 0, 0)\n \n /* Maximal number of array references in a scop.  */\n \n DEFPARAM (PARAM_GRAPHITE_MAX_ARRAYS_PER_SCOP,\n \t  \"graphite-max-arrays-per-scop\",\n-\t  \"maximum number of arrays per scop.\",\n+\t  \"Maximum number of arrays per scop.\",\n \t  100, 0, 0)\n \n DEFPARAM (PARAM_MAX_ISL_OPERATIONS,\n \t  \"max-isl-operations\",\n-\t  \"maximum number of isl operations, 0 means unlimited\",\n+\t  \"Maximum number of isl operations, 0 means unlimited.\",\n \t  350000, 0, 0)\n \n /* For testsuite purposes allow to check for codegen error handling.  */\n DEFPARAM (PARAM_GRAPHITE_ALLOW_CODEGEN_ERRORS,\n \t  \"graphite-allow-codegen-errors\",\n-\t  \"whether codegen errors should be ICEs when -fchecking.\",\n+\t  \"Whether codegen errors should be ICEs when -fchecking.\",\n \t  0, 0, 1)\n \n /* Avoid data dependence analysis on very large loops.  */\n@@ -951,23 +951,23 @@ DEFPARAM (PARAM_LOOP_INVARIANT_MAX_BBS_IN_LOOP,\n    to look up for profile data. Otherwise, use a more stable\n    external id based on assembler name and source location. */\n DEFPARAM (PARAM_PROFILE_FUNC_INTERNAL_ID,\n-         \"profile-func-internal-id\",\n-         \"use internal function id in profile lookup.\",\n-          0, 0, 1)\n+\t  \"profile-func-internal-id\",\n+\t  \"Use internal function id in profile lookup.\",\n+\t  0, 0, 1)\n \n /* When the parameter is 1, track the most frequent N target\n    addresses in indirect-call profile. This disables\n    indirect_call_profiler_v2 which tracks single target.  */\n DEFPARAM (PARAM_INDIR_CALL_TOPN_PROFILE,\n-         \"indir-call-topn-profile\",\n-         \"track topn target addresses in indirect-call profile.\",\n-          0, 0, 1)\n+\t  \"indir-call-topn-profile\",\n+\t  \"Track top N target addresses in indirect-call profile.\",\n+\t  0, 0, 1)\n \n /* Avoid SLP vectorization of large basic blocks.  */\n DEFPARAM (PARAM_SLP_MAX_INSNS_IN_BB,\n-          \"slp-max-insns-in-bb\",\n-          \"Maximum number of instructions in basic block to be considered for SLP vectorization.\",\n-          1000, 0, 0)\n+\t  \"slp-max-insns-in-bb\",\n+\t  \"Maximum number of instructions in basic block to be considered for \"\n+\t  \"SLP vectorization.\", 1000, 0, 0)\n \n DEFPARAM (PARAM_MIN_INSN_TO_PREFETCH_RATIO,\n \t  \"min-insn-to-prefetch-ratio\",\n@@ -1053,19 +1053,19 @@ DEFPARAM (PARAM_IPA_CP_VALUE_LIST_SIZE,\n DEFPARAM (PARAM_IPA_CP_EVAL_THRESHOLD,\n \t  \"ipa-cp-eval-threshold\",\n \t  \"Threshold ipa-cp opportunity evaluation that is still considered \"\n-\t  \"beneficial to clone..\",\n+\t  \"beneficial to clone.\",\n \t  500, 0, 0)\n \n DEFPARAM (PARAM_IPA_CP_RECURSION_PENALTY,\n \t  \"ipa-cp-recursion-penalty\",\n \t  \"Percentage penalty the recursive functions will receive when they \"\n-\t  \"are evaluated for cloning..\",\n+\t  \"are evaluated for cloning.\",\n \t  40, 0, 100)\n \n DEFPARAM (PARAM_IPA_CP_SINGLE_CALL_PENALTY,\n \t  \"ipa-cp-single-call-penalty\",\n \t  \"Percentage penalty functions containing a single call to another \"\n-\t  \"function will receive when they are evaluated for cloning..\",\n+\t  \"function will receive when they are evaluated for cloning.\",\n \t  15, 0, 100)\n \n DEFPARAM (PARAM_IPA_MAX_AGG_ITEMS,\n@@ -1077,13 +1077,13 @@ DEFPARAM (PARAM_IPA_MAX_AGG_ITEMS,\n DEFPARAM (PARAM_IPA_CP_LOOP_HINT_BONUS,\n \t  \"ipa-cp-loop-hint-bonus\",\n \t  \"Compile-time bonus IPA-CP assigns to candidates which make loop \"\n-\t  \"bounds or strides known..\",\n+\t  \"bounds or strides known.\",\n \t  64, 0, 0)\n \n DEFPARAM (PARAM_IPA_CP_ARRAY_INDEX_HINT_BONUS,\n \t  \"ipa-cp-array-index-hint-bonus\",\n \t  \"Compile-time bonus IPA-CP assigns to candidates which make an array \"\n-\t  \"index known..\",\n+\t  \"index known.\",\n \t  48, 0, 0)\n \n DEFPARAM (PARAM_IPA_MAX_AA_STEPS,\n@@ -1143,7 +1143,7 @@ DEFPARAM (PARAM_ALLOW_STORE_DATA_RACES,\n DEFPARAM (PARAM_TREE_REASSOC_WIDTH,\n \t  \"tree-reassoc-width\",\n \t  \"Set the maximum number of instructions executed in parallel in \"\n-\t  \"reassociated tree. If 0, use the target dependent heuristic..\",\n+\t  \"reassociated tree.  If 0, use the target dependent heuristic.\",\n \t  0, 0, 0)\n \n DEFPARAM (PARAM_MAX_TAIL_MERGE_COMPARISONS,\n@@ -1320,18 +1320,18 @@ DEFPARAM (PARAM_MAX_RTL_IF_CONVERSION_UNPREDICTABLE_COST,\n \n DEFPARAM (PARAM_HSA_GEN_DEBUG_STORES,\n \t  \"hsa-gen-debug-stores\",\n-\t  \"Level of hsa debug stores verbosity\",\n+\t  \"Level of hsa debug stores verbosity.\",\n \t  0, 0, 1)\n \n DEFPARAM (PARAM_MAX_SPECULATIVE_DEVIRT_MAYDEFS,\n \t  \"max-speculative-devirt-maydefs\",\n \t  \"Maximum number of may-defs visited when devirtualizing \"\n-\t  \"speculatively\", 50, 0, 0)\n+\t  \"speculatively.\", 50, 0, 0)\n \n DEFPARAM (PARAM_MAX_VRP_SWITCH_ASSERTIONS,\n \t  \"max-vrp-switch-assertions\",\n \t  \"Maximum number of assertions to add along the default \"\n-\t  \"edge of a switch statement during VRP\",\n+\t  \"edge of a switch statement during VRP.\",\n \t  10, 0, 0)\n \n DEFPARAM (PARAM_VECT_EPILOGUES_NOMASK,"}]}