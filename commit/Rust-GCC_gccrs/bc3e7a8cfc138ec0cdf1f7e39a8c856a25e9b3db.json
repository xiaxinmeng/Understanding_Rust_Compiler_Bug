{"sha": "bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmMzZTdhOGNmYzEzOGVjMGNkZjFmN2UzOWE4Yzg1NmEyNWU5YjNkYg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-11-19T12:30:17Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-11-19T12:30:17Z"}, "message": "re PR fortran/34079 (Bind(C): Character argument/return value problems)\n\n2007-11-19  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34079\n        * decl.c (gfc_match_entry): Support BIND(C).\n        (gfc_match_subroutine): Fix comment typo.\n\n2007-11-19  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34079\n        * gfortran.dg/bind_c_usage_10_c.c: New.\n        * gfortran.dg/bind_c_usage_10.f03: New.\n\nFrom-SVN: r130288", "tree": {"sha": "b493494cb6083dff17304745ece59d339bfbb68b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b493494cb6083dff17304745ece59d339bfbb68b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4aba7b1186118f8c928047df88a23bfec8d18806", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4aba7b1186118f8c928047df88a23bfec8d18806", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4aba7b1186118f8c928047df88a23bfec8d18806"}], "stats": {"total": 197, "additions": 188, "deletions": 9}, "files": [{"sha": "dbd2c15feac986073dd90ad36d899209f1774aea", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db", "patch": "@@ -1,3 +1,9 @@\n+2007-11-19  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34079\n+\t* decl.c (gfc_match_entry): Support BIND(C).\n+\t(gfc_match_subroutine): Fix comment typo.\n+\n 2007-11-18  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/33317"}, {"sha": "78b05c4af1e475e7f486261a720accb343e77c82", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 55, "deletions": 9, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db", "patch": "@@ -4315,6 +4315,8 @@ gfc_match_entry (void)\n   gfc_entry_list *el;\n   locus old_loc;\n   bool module_procedure;\n+  char peek_char;\n+  match is_bind_c;\n \n   m = gfc_match_name (name);\n   if (m != MATCH_YES)\n@@ -4398,6 +4400,26 @@ gfc_match_entry (void)\n \n   proc = gfc_current_block ();\n \n+  /* Make sure that it isn't already declared as BIND(C).  If it is, it\n+     must have been marked BIND(C) with a BIND(C) attribute and that is\n+     not allowed for procedures.  */\n+  if (entry->attr.is_bind_c == 1)\n+    {\n+      entry->attr.is_bind_c = 0;\n+      if (entry->old_symbol != NULL)\n+        gfc_error_now (\"BIND(C) attribute at %L can only be used for \"\n+                       \"variables or common blocks\",\n+                       &(entry->old_symbol->declared_at));\n+      else\n+        gfc_error_now (\"BIND(C) attribute at %L can only be used for \"\n+                       \"variables or common blocks\", &gfc_current_locus);\n+    }\n+  \n+  /* Check what next non-whitespace character is so we can tell if there\n+     is the required parens if we have a BIND(C).  */\n+  gfc_gobble_whitespace ();\n+  peek_char = gfc_peek_char ();\n+\n   if (state == COMP_SUBROUTINE)\n     {\n       /* An entry in a subroutine.  */\n@@ -4408,6 +4430,21 @@ gfc_match_entry (void)\n       if (m != MATCH_YES)\n \treturn MATCH_ERROR;\n \n+      is_bind_c = gfc_match_bind_c (entry);\n+      if (is_bind_c == MATCH_ERROR)\n+\treturn MATCH_ERROR;\n+      if (is_bind_c == MATCH_YES)\n+\t{\n+\t  if (peek_char != '(')\n+\t    {\n+\t      gfc_error (\"Missing required parentheses before BIND(C) at %C\");\n+\t      return MATCH_ERROR;\n+\t    }\n+\t    if (gfc_add_is_bind_c (&(entry->attr), entry->name, &(entry->declared_at), 1)\n+\t\t== FAILURE)\n+\t      return MATCH_ERROR;\n+\t}\n+\n       if (gfc_add_entry (&entry->attr, entry->name, NULL) == FAILURE\n \t  || gfc_add_subroutine (&entry->attr, entry->name, NULL) == FAILURE)\n \treturn MATCH_ERROR;\n@@ -4452,19 +4489,28 @@ gfc_match_entry (void)\n \t}\n       else\n \t{\n-\t  m = match_result (proc, &result);\n+\t  m = gfc_match_suffix (entry, &result);\n \t  if (m == MATCH_NO)\n \t    gfc_syntax_error (ST_ENTRY);\n \t  if (m != MATCH_YES)\n \t    return MATCH_ERROR;\n \n-\t  if (gfc_add_result (&result->attr, result->name, NULL) == FAILURE\n-\t      || gfc_add_entry (&entry->attr, result->name, NULL) == FAILURE\n-\t      || gfc_add_function (&entry->attr, result->name, NULL)\n-\t\t == FAILURE)\n-\t    return MATCH_ERROR;\n-\n-\t  entry->result = result;\n+          if (result)\n+\t    {\n+\t      if (gfc_add_result (&result->attr, result->name, NULL) == FAILURE\n+\t\t  || gfc_add_entry (&entry->attr, result->name, NULL) == FAILURE\n+\t\t  || gfc_add_function (&entry->attr, result->name, NULL)\n+\t\t  == FAILURE)\n+\t        return MATCH_ERROR;\n+\t      entry->result = result;\n+\t    }\n+\t  else\n+\t    {\n+\t      if (gfc_add_entry (&entry->attr, entry->name, NULL) == FAILURE\n+\t\t  || gfc_add_function (&entry->attr, entry->name, NULL) == FAILURE)\n+\t\treturn MATCH_ERROR;\n+\t      entry->result = entry;\n+\t    }\n \t}\n     }\n \n@@ -4523,7 +4569,7 @@ gfc_match_subroutine (void)\n   gfc_new_block = sym;\n \n   /* Check what next non-whitespace character is so we can tell if there\n-     where the required parens if we have a BIND(C).  */\n+     is the required parens if we have a BIND(C).  */\n   gfc_gobble_whitespace ();\n   peek_char = gfc_peek_char ();\n   "}, {"sha": "ae0adfb5671bc61702e3755078a64280c9591e77", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db", "patch": "@@ -1,3 +1,9 @@\n+2007-11-19  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34079\n+\t* gfortran.dg/bind_c_usage_10_c.c: New.\n+\t* gfortran.dg/bind_c_usage_10.f03: New.\n+\n 2007-11-19  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.dg/pr33007.c: Expect new warning."}, {"sha": "c6f2b79c1faa52b37e95c437ca10dd2387b6a0e9", "filename": "gcc/testsuite/gfortran.dg/bind_c_usage_10.f03", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_10.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_10.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_10.f03?ref=bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db", "patch": "@@ -0,0 +1,73 @@\n+! { dg-do run }\n+! { dg-additional-sources bind_c_usage_10_c.c }\n+!\n+! PR fortran/34079\n+!\n+! Check BIND(C) for ENTRY\n+!\n+module mod\n+ use iso_c_binding\n+ implicit none\n+contains\n+  subroutine sub1(j) bind(c, name=\"mySub1\")\n+    integer(c_int) :: j\n+    real(c_float)  :: x\n+    j = 5\n+    return\n+   entry sub1ent(x)\n+     x = 55.0\n+  end subroutine sub1\n+  subroutine sub2(j)\n+    integer(c_int) :: j\n+    real(c_float)  :: x\n+    j = 6\n+    return\n+   entry sub2ent(x) bind(c, name=\"mySubEnt2\")\n+    x = 66.0\n+  end subroutine sub2\n+  subroutine sub3(j) bind(c, name=\"mySub3\")\n+    integer(c_int) :: j\n+    real(c_float)  :: x\n+    j = 7\n+    return\n+   entry sub3ent(x) bind(c, name=\"mySubEnt3\")\n+     x = 77.0\n+  end subroutine sub3\n+  subroutine sub4(j)\n+    integer(c_int) :: j\n+    real(c_float)  :: x\n+    j = 8\n+    return\n+   entry sub4ent(x) bind(c)\n+     x = 88.0\n+  end subroutine sub4\n+\n+  integer(c_int) function func1() bind(c, name=\"myFunc1\")\n+    real(c_float) :: func1ent\n+    func1 = -5\n+    return\n+   entry func1ent()\n+    func1ent = -55.0\n+  end function func1\n+  integer(c_int) function func2()\n+    real(c_float) :: func2ent\n+    func2 = -6\n+    return\n+   entry func2ent() bind(c, name=\"myFuncEnt2\")\n+    func2ent = -66.0\n+  end function func2\n+  integer(c_int) function func3() bind(c, name=\"myFunc3\")\n+    real(c_float) :: func3ent\n+    func3 = -7\n+    return\n+   entry func3ent() bind(c, name=\"myFuncEnt3\")\n+    func3ent = -77.0\n+  end function func3\n+  integer(c_int) function func4()\n+    real(c_float) :: func4ent\n+    func4 = -8\n+    return\n+   entry func4ent() bind(c)\n+    func4ent = -88.0\n+  end function func4\n+end module mod"}, {"sha": "91871c770face4518a1b705f550d8dd79aa33be9", "filename": "gcc/testsuite/gfortran.dg/bind_c_usage_10_c.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_10_c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_10_c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_10_c.c?ref=bc3e7a8cfc138ec0cdf1f7e39a8c856a25e9b3db", "patch": "@@ -0,0 +1,48 @@\n+/* Check BIND(C) for ENTRY\n+   PR fortran/34079\n+   To be linked with bind_c_usage_10.c\n+*/\n+\n+void mySub1(int *);\n+void mySub3(int *);\n+void mySubEnt2(float *);\n+void mySubEnt3(float *);\n+void sub4ent(float *);\n+\n+int myFunc1(void);\n+int myFunc3(void);\n+float myFuncEnt2(void);\n+float myFuncEnt3(void);\n+float func4ent(void);\n+\n+extern void abort(void);\n+\n+int main()\n+{\n+  int i = -1;\n+  float r = -3.0f;\n+\n+  mySub1(&i);\n+  if(i != 5) abort();\n+  mySub3(&i);\n+  if(i != 7) abort();\n+  mySubEnt2(&r);\n+  if(r != 66.0f) abort();\n+  mySubEnt3(&r);\n+  if(r != 77.0f) abort();\n+  sub4ent(&r);\n+  if(r != 88.0f) abort();\n+\n+  i = myFunc1();\n+  if(i != -5) abort();\n+  i = myFunc3();\n+  if(i != -7) abort();\n+  r = myFuncEnt2();\n+  if(r != -66.0f) abort();\n+  r = myFuncEnt3();\n+  if(r != -77.0f) abort();\n+  r = func4ent();\n+  if(r != -88.0f) abort();\n+\n+  return 0;\n+}"}]}