{"sha": "e851aa1703c3d911720d8f9bee68a521abe588f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg1MWFhMTcwM2MzZDkxMTcyMGQ4ZjliZWU2OGE1MjFhYmU1ODhmNw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-04-22T21:54:35Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-04-22T21:54:35Z"}, "message": "libstdc++: Update (and revert) value of __cpp_lib_array_constexpr\n\nThis macro should have been updated to 201811 when the last C++20\nchanges were implemented. However those changes are not enabled for\nC++17 mode, so the macro should only have the new value in C++20 mode.\n\nThis change ensures that the macro is defined to 201603 for C++17 and\n201811 for C++20.\n\n\t* include/bits/stl_iterator.h (__cpp_lib_array_constexpr): Define\n\tdifferent values for C++17 and C++20, to indicate different feature\n\tsets. Update value for C++20 to indicate P1032R1 support.\n\t* include/std/version (__cpp_lib_array_constexpr): Likewise.\n\t* testsuite/23_containers/array/comparison_operators/constexpr.cc:\n\tCheck feature test macro.\n\t* testsuite/23_containers/array/element_access/constexpr_c++17.cc:\n\tNew test.\n\t* testsuite/23_containers/array/requirements/constexpr_fill.cc: Check\n\tfeature test macro.\n\t* testsuite/23_containers/array/requirements/constexpr_iter.cc: Test\n\tin C++17 mode and check feature test macro.", "tree": {"sha": "ca8a93040ac4990df88400f9debd850b4ed2bec4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca8a93040ac4990df88400f9debd850b4ed2bec4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e851aa1703c3d911720d8f9bee68a521abe588f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e851aa1703c3d911720d8f9bee68a521abe588f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e851aa1703c3d911720d8f9bee68a521abe588f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e851aa1703c3d911720d8f9bee68a521abe588f7/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2025db692e9ed1192f831bc122413a226987515c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2025db692e9ed1192f831bc122413a226987515c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2025db692e9ed1192f831bc122413a226987515c"}], "stats": {"total": 104, "additions": 99, "deletions": 5}, "files": [{"sha": "cce254968fb4636a5a67591928fc9c60a68ebd2d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e851aa1703c3d911720d8f9bee68a521abe588f7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e851aa1703c3d911720d8f9bee68a521abe588f7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e851aa1703c3d911720d8f9bee68a521abe588f7", "patch": "@@ -1,5 +1,18 @@\n 2020-04-22  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/stl_iterator.h (__cpp_lib_array_constexpr): Define\n+\tdifferent values for C++17 and C++20, to indicate different feature\n+\tsets. Update value for C++20 to indicate P1032R1 support.\n+\t* include/std/version (__cpp_lib_array_constexpr): Likewise.\n+\t* testsuite/23_containers/array/comparison_operators/constexpr.cc:\n+\tCheck feature test macro.\n+\t* testsuite/23_containers/array/element_access/constexpr_c++17.cc:\n+\tNew test.\n+\t* testsuite/23_containers/array/requirements/constexpr_fill.cc: Check\n+\tfeature test macro.\n+\t* testsuite/23_containers/array/requirements/constexpr_iter.cc: Test\n+\tin C++17 mode and check feature test macro.\n+\n \t* include/std/utility (__cpp_lib_constexpr_algorithms): Do not define\n \there.\n \t* testsuite/20_util/exchange/constexpr.cc: Do not expect macro to be"}, {"sha": "d7e85b84041d00e1642b98f00a326c09e366bad0", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e851aa1703c3d911720d8f9bee68a521abe588f7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e851aa1703c3d911720d8f9bee68a521abe588f7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=e851aa1703c3d911720d8f9bee68a521abe588f7", "patch": "@@ -69,8 +69,10 @@\n # include <type_traits>\n #endif\n \n-#if __cplusplus > 201402L\n-# define __cpp_lib_array_constexpr 201803\n+#if __cplusplus > 201703L\n+# define __cpp_lib_array_constexpr 201811L\n+#elif __cplusplus == 201703L\n+# define __cpp_lib_array_constexpr 201603L\n #endif\n \n #if __cplusplus > 201703L"}, {"sha": "57a05259d98780a2c1f4168baf744e00f804c6ed", "filename": "libstdc++-v3/include/std/version", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e851aa1703c3d911720d8f9bee68a521abe588f7/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e851aa1703c3d911720d8f9bee68a521abe588f7/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion?ref=e851aa1703c3d911720d8f9bee68a521abe588f7", "patch": "@@ -120,7 +120,7 @@\n #if _GLIBCXX_HOSTED\n #define __cpp_lib_any 201606L\n #define __cpp_lib_apply 201603\n-#define __cpp_lib_array_constexpr 201803\n+#define __cpp_lib_array_constexpr 201603L\n #define __cpp_lib_as_const 201510\n #define __cpp_lib_boyer_moore_searcher 201603\n #define __cpp_lib_chrono 201611\n@@ -184,6 +184,8 @@\n #define __cpp_lib_unwrap_ref 201811L\n \n #if _GLIBCXX_HOSTED\n+#undef __cpp_lib_array_constexpr\n+#define __cpp_lib_array_constexpr 201811L\n #define __cpp_lib_assume_aligned 201811L\n #define __cpp_lib_bind_front 201907L\n #define __cpp_lib_integer_comparison_functions 202002L"}, {"sha": "0f3a4159dea4e6451891aeb3bbd3a5ba3ebf1b30", "filename": "libstdc++-v3/testsuite/23_containers/array/comparison_operators/constexpr.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e851aa1703c3d911720d8f9bee68a521abe588f7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e851aa1703c3d911720d8f9bee68a521abe588f7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Fcomparison_operators%2Fconstexpr.cc?ref=e851aa1703c3d911720d8f9bee68a521abe588f7", "patch": "@@ -20,6 +20,12 @@\n \n #include <array>\n \n+#ifndef __cpp_lib_array_constexpr\n+# error \"Feature test macro for array constexpr is missing in <array>\"\n+#elif __cpp_lib_array_constexpr < 201806L\n+# error \"Feature test macro for array constexpr has wrong value in <array>\"\n+#endif\n+\n constexpr std::array<int, 3> a1{{1, 2, 3}};\n constexpr std::array<int, 3> a2{{4, 5, 6}};\n constexpr std::array<int, 3> a3{{1, 2, 4}};"}, {"sha": "56d1cf256be951aa6278c8ddd6385da95585888a", "filename": "libstdc++-v3/testsuite/23_containers/array/element_access/constexpr_c++17.cc", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e851aa1703c3d911720d8f9bee68a521abe588f7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Fconstexpr_c%2B%2B17.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e851aa1703c3d911720d8f9bee68a521abe588f7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Fconstexpr_c%2B%2B17.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Felement_access%2Fconstexpr_c%2B%2B17.cc?ref=e851aa1703c3d911720d8f9bee68a521abe588f7", "patch": "@@ -0,0 +1,57 @@\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++17 } }\n+\n+// Copyright (C) 2011-2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <array>\n+\n+#ifndef __cpp_lib_array_constexpr\n+# error \"Feature test macro for array constexpr is missing in <array>\"\n+#elif __cpp_lib_array_constexpr < 201603L\n+# error \"Feature test macro for array constexpr has wrong value in <array>\"\n+#elif __cpp_lib_array_constexpr > 201603L && __cplusplus == 201703\n+# error \"Feature test macro for array constexpr has wrong value for C++17\"\n+#endif\n+\n+constexpr std::size_t test01()\n+{\n+  // array\n+  typedef std::array<std::size_t, 6> array_type;\n+  array_type a = { { 0, 55, 66, 99, 4115, 2 } };\n+  auto v1  = a[1];\n+  auto v2  = a.at(2);\n+  auto v3  = a.front();\n+  auto v4  = a.back();\n+  return v1 + v2 + v3 + v4;\n+}\n+\n+static_assert( test01() == (55 + 66 + 0 + 2) );\n+\n+constexpr std::size_t test02()\n+{\n+  // array\n+  typedef std::array<std::size_t, 6> array_type;\n+  const array_type a = { { 0, 55, 66, 99, 4115, 2 } };\n+  auto v1  = a[1];\n+  auto v2  = a.at(2);\n+  auto v3  = a.front();\n+  auto v4  = a.back();\n+  return v1 + v2 + v3 + v4;\n+}\n+\n+static_assert( test02() == (55 + 66 + 0 + 2) );"}, {"sha": "bb6963465376a0a6c859d05766852d32b39ce544", "filename": "libstdc++-v3/testsuite/23_containers/array/requirements/constexpr_fill.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e851aa1703c3d911720d8f9bee68a521abe588f7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fconstexpr_fill.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e851aa1703c3d911720d8f9bee68a521abe588f7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fconstexpr_fill.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fconstexpr_fill.cc?ref=e851aa1703c3d911720d8f9bee68a521abe588f7", "patch": "@@ -20,6 +20,12 @@\n \n #include <array>\n \n+#ifndef __cpp_lib_array_constexpr\n+# error \"Feature test macro for array constexpr is missing in <array>\"\n+#elif __cpp_lib_array_constexpr < 201811L\n+# error \"Feature test macro for array constexpr has wrong value in <array>\"\n+#endif\n+\n constexpr bool\n test_array()\n {"}, {"sha": "a119937f7738b2ccfb1fcf27da4b67d5d04952d0", "filename": "libstdc++-v3/testsuite/23_containers/array/requirements/constexpr_iter.cc", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e851aa1703c3d911720d8f9bee68a521abe588f7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fconstexpr_iter.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e851aa1703c3d911720d8f9bee68a521abe588f7/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fconstexpr_iter.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fconstexpr_iter.cc?ref=e851aa1703c3d911720d8f9bee68a521abe588f7", "patch": "@@ -1,5 +1,5 @@\n-// { dg-options \"-std=gnu++2a\" }\n-// { dg-do compile { target c++2a } }\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++17 } }\n //\n // Copyright (C) 2019-2020 Free Software Foundation, Inc.\n //\n@@ -20,6 +20,14 @@\n \n #include <array>\n \n+#ifndef __cpp_lib_array_constexpr\n+# error \"Feature test macro for array constexpr is missing in <array>\"\n+#elif __cpp_lib_array_constexpr < 201603L\n+# error \"Feature test macro for array constexpr has wrong value in <array>\"\n+#elif __cpp_lib_array_constexpr > 201603L && __cplusplus == 201703\n+# error \"Feature test macro for array constexpr has wrong value for C++17\"\n+#endif\n+\n constexpr int\n test()\n {"}]}