{"sha": "bd3a5d17b02b640e0c8240fb9d5f5643e73ead3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQzYTVkMTdiMDJiNjQwZTBjODI0MGZiOWQ1ZjU2NDNlNzNlYWQzZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-07-22T18:10:32Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-07-22T18:10:32Z"}, "message": "ChangeLog: Fix whitespace.\n\n\t* ChangeLog: Fix whitespace.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r162422", "tree": {"sha": "cbcde89766a080c013619124283c0df442c16f50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbcde89766a080c013619124283c0df442c16f50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd3a5d17b02b640e0c8240fb9d5f5643e73ead3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd3a5d17b02b640e0c8240fb9d5f5643e73ead3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd3a5d17b02b640e0c8240fb9d5f5643e73ead3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd3a5d17b02b640e0c8240fb9d5f5643e73ead3e/comments", "author": null, "committer": null, "parents": [{"sha": "35ea1c5ac88fc328743f3cd370bfe1d834fc51be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35ea1c5ac88fc328743f3cd370bfe1d834fc51be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35ea1c5ac88fc328743f3cd370bfe1d834fc51be"}], "stats": {"total": 70, "additions": 35, "deletions": 35}, "files": [{"sha": "1d52a085af8ddc0f58f89e604bb21962489527e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd3a5d17b02b640e0c8240fb9d5f5643e73ead3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd3a5d17b02b640e0c8240fb9d5f5643e73ead3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd3a5d17b02b640e0c8240fb9d5f5643e73ead3e", "patch": "@@ -6,8 +6,8 @@\n \n 2010-07-22  Bernd Schmidt  <bernds@codesourcery.com>\n \n-\t* ira-build.c (ira_create_object): New arg SUBWORD; all callers changed.\n-\tInitialize OBJECT_SUBWORD.\n+\t* ira-build.c (ira_create_object): New arg SUBWORD; all callers\n+\tchanged.  Initialize OBJECT_SUBWORD.\n \t(ira_create_allocno): Clear ALLOCNO_NUM_OBJECTS.\n \t(ira_create_allocno_objects): Renamed from ira_create_allocno_object;\n \tall callers changed.\n@@ -61,8 +61,8 @@\n \t(build_object_conflicts): Renamed from build_allocno_conflicts.  All\n \tcallers changed.  Iterate over allocno subobjects.\n \t* ira-emit.c (modify_move_list): Iterate over allocno subobjects.\n-\t* ira-int.h (struct ira_allocno): New member. num_objects.  Rename object\n-\tto objects and change it into an array.\n+\t* ira-int.h (struct ira_allocno): New member: num_objects.\n+\tRename object to objects and change it into an array.\n \t(ALLOCNO_OBJECT): Add new argument N.\n \t(ALLOCNO_NUM_OBJECTS, OBJECT_SUBWORD): New macros.\n \t(ira_create_allocno_objects): Renamed from ira_create_allocno_object.\n@@ -71,12 +71,13 @@\n \t(ira_allocno_object_iterator): New.\n \t(ira_allocno_object_iter_init, ira_allocno_object_iter_cond): New.\n \t(FOR_EACH_ALLOCNO_OBJECT): New macro.\n-\t* ira-lives.c (objects_live): Renamed from allocnos_live; all uses changed.\n+\t* ira-lives.c (objects_live): Renamed from allocnos_live; all\n+\tuses changed.\n \t(allocnos_processed): New sparseset.\n-\t(make_object_born): Renamed from make_allocno_born; take an ira_object_t\n-\targument.  All callers changed.\n-\t(make_object_dead): Renamed from make_allocno_dead; take an ira_object t\n-\targument.  All callers changed.\n+\t(make_object_born): Renamed from make_allocno_born; take an\n+\tira_object_t argument.  All callers changed.\n+\t(make_object_dead): Renamed from make_allocno_dead; take an\n+\tira_object_t argument.  All callers changed.\n \t(update_allocno_pressure_excess_length): Take an ira_obejct_t argument.\n \tAll callers changed.\n \t(mark_pseudo_regno_live): Iterate over allocno subobjects.\n@@ -159,7 +160,7 @@\n 2010-07-22  Iain Sandoe  <iains@gcc.gnu.org>\n \n \t* calls.c (load_register_parameters): Move check for zero\n-\tsized items so that only the call to \n+\tsized items so that only the call to\n \tmem_overlaps_already_clobbered_arg_p () is protected.\n \n 2010-07-22  Jan Hubicka  <jh@suse.cz>\n@@ -326,8 +327,7 @@\n \t* gimple.h (gimple_types_compatible_p): Declare.\n \t* gimple.c (gimple_queue_type_fixup): Remove.\n \t(gimple_fixup_complete_and_incomplete_subtype_p): Likewise.\n-\t(gimple_compatible_complete_and_incomplete_type_p): New\n-\tfunction.\n+\t(gimple_compatible_complete_and_incomplete_type_p): New function.\n \t(gimple_types_compatible_p): Adjust.\n \t(gimple_register_type): Remove type fixup code.\n \t(print_gimple_types_stats): Adjust.\n@@ -367,7 +367,8 @@\n 2010-07-19  Xinliang David Li  <davidxl@google.com>\n \n \tPR testsuite/44932\n-\t* tree-ssa-uninit.c (collect_phi_def_edges): Fix bug collecting def edges.\n+\t* tree-ssa-uninit.c (collect_phi_def_edges): Fix bug collecting\n+\tdef edges.\n \t(find_uninit_use): Add dump.\n \t(is_use_properly_guarded): Ditto.\n \t(warn_uninitialized_phi): Ditto.\n@@ -402,8 +403,8 @@\n 2010-07-19  Bingfeng Mei  <bmei@broadcom.com>\n \n \t* ddg.c (create_ddg): Exclude nodes of debug_insn in counting nodes\n-        of a loop.\n-        * loop-doloop.c (doloop_condition_get): Skip possible debug_insn.\n+\tof a loop.\n+\t* loop-doloop.c (doloop_condition_get): Skip possible debug_insn.\n \n 2010-07-19  Iain Sandoe  <iains@gcc.gnu.org>\n \n@@ -418,17 +419,16 @@\n \t* config/rs6000/darwin.h: Define darwin_emit_branch_islands.\n \tRemove out of date comment.\n \t* config/rs6000/rs6000.c (print_operand): Adjust symbol.\n-\tDARWIN_LINKER_GENERATES_ISLANDS: Remove.\n-\tDARWIN_GENERATE_ISLANDS: Ditto.\n+\t(DARWIN_LINKER_GENERATES_ISLANDS): Remove.\n+\t(DARWIN_GENERATE_ISLANDS): Ditto.\n \t(output_call):  Do not emit branch islands unless\n \tdarwin_emit_branch_islands is set.\n \t* config/darwin.c: Declare darwin_emit_branch_islands.\n \t(machopic_indirect_data_reference): Do not emit unless\n \tdarwin_emit_branch_islands is set.\n \t(darwin_override_options): Set darwin_emit_branch_islands\n \twhere it is needed.\n-\t* config/darwin9.h\n-\tDARWIN_LINKER_GENERATES_ISLANDS: Remove.\n+\t* config/darwin9.h (DARWIN_LINKER_GENERATES_ISLANDS): Remove.\n \n 2010-07-19  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n@@ -561,9 +561,9 @@\n \n 2010-07-15  Jan Hubicka  <jh@suse.cz>\n \n-\t* lto-symtab.c (lto_symtab_resolve_symbols): Remove hack handling comdats\n-\tfor broken gold.\n-\t(lto_sy\tmtab_merge_decls_1): Set used_from_object_file correctly. \n+\t* lto-symtab.c (lto_symtab_resolve_symbols): Remove hack handling\n+\tcomdats for broken gold.\n+\t(lto_sy\tmtab_merge_decls_1): Set used_from_object_file correctly.\n \n 2010-07-15  Nathan Froyd  <froydnj@codesourcery.com>\n \n@@ -661,8 +661,8 @@\n \n \t* cgraph.c: Include lto-streamer.h\n \t(change_decl_assembler_name): Work when assembler name hash is at place.\n-\t(cgraph_make_decl_local): When localizing COMDAT symbol at WPA stage, be\n-\tsure to rename it to avoid name clash.\n+\t(cgraph_make_decl_local): When localizing COMDAT symbol at WPA stage,\n+\tbe sure to rename it to avoid name clash.\n \t* ipa.c (cgraph_externally_visible_p, function_and_variable_visibility):\n \tLocalize hidden symbols only when locally defined.\n \n@@ -1376,7 +1376,7 @@\n 2010-07-12  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* Makefile.in (target-globals.o): Depend on $(RTL_H).\n-\t* rtl.h: (target_rtl): New structure.\n+\t* rtl.h (target_rtl): New structure.\n \t(default_target_rtl): Declare.\n \t(this_target_rtl): Declare as a variable or define as a macro.\n \t(global_rtl, pic_offset_table_rtx, return_address_pointer_rtx):\n@@ -3429,7 +3429,7 @@\n \t(get_asm_expr_operands): Pass opf_not_non_addressable.\n \t(get_expr_operands): Handle opf_[not_]non_addressable.\n \tHandle MEM_REF.  Remove INDIRECT_REF handling.\n-\t* tree-vrp.c: (check_array_ref): Handle MEM_REF.\n+\t* tree-vrp.c (check_array_ref): Handle MEM_REF.\n \t(search_for_addr_array): Likewise.\n \t(check_array_bounds): Likewise.\n \t(vrp_stmt_computes_nonzero): Adjust for MEM_REF.\n@@ -4243,7 +4243,7 @@\n \t* targhooks.h (default_register_move_cost): Declare function.\n \t* defaults.h (REGISTER_MOVE_COST): Delete.\n \t* ira-int.h (ira_register_move_cost): Update comment.\n-\t* ira.c: (ira_register_move_cost): Update comment.\n+\t* ira.c (ira_register_move_cost): Update comment.\n \t* reload.h (register_move_cost): Declare.\n \t* reginfo.c (register_move_cost): New function.\n \t(move_cost): Update comment.\n@@ -4757,10 +4757,10 @@\n \n 2010-06-23  Basile Starynkevitch  <basile@starynkevitch.net>\n \n-\t* coretypes.h: (gimple_seq_node_d, gimple_seq_node)\n+\t* coretypes.h (gimple_seq_node_d, gimple_seq_node)\n \t(const_gimple_seq_node): Removed typedefs.\n \n-\t* gimple.h: (gimple_seq_node_d, gimple_seq_node)\n+\t* gimple.h (gimple_seq_node_d, gimple_seq_node)\n \t(const_gimple_seq_node): Added typedefs moved from coretypes.h.\n \n 2010-06-23  H.J. Lu  <hongjiu.lu@intel.com>\n@@ -7449,7 +7449,7 @@\n \t* reginfo.c (memory_move_cost): New function.\n \t(memory_move_secondary_cost): Change type of 'in' argument to bool.\n \t* ira.h (ira_memory_move_cost): Update comment.\n-\t* ira.c: (ira_memory_move_cost): Update comment.\n+\t* ira.c (ira_memory_move_cost): Update comment.\n \t(setup_class_subset_and_memory_move_costs): Replace MEMORY_MOVE_COST\n \twith memory_move_cost.\n \t* postreload.c (reload_cse_simplify_set): (Ditto.).\n@@ -8229,7 +8229,7 @@\n \t* sel-sched.c: Include emit-rtl.h.\n \t* sel-sched-ir.c: Include emit-rtl.h.\n \t* ira-build.c: Include emit-rtl.h.\n-\t* emit-rtl.c: (first_insn, last_insn): Remove defines.\n+\t* emit-rtl.c (first_insn, last_insn): Remove defines.\n \t(get_insns, set_first_insn, get_last_insn, set_last_insn, get_max_uid):\n \tMove to emit-rtl.h.\n \t(set_new_first_and_last_insn, get_last_insn_anywhere,"}, {"sha": "0e6e6f98b51d8bb8829adced2a22444537faa442", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd3a5d17b02b640e0c8240fb9d5f5643e73ead3e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd3a5d17b02b640e0c8240fb9d5f5643e73ead3e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bd3a5d17b02b640e0c8240fb9d5f5643e73ead3e", "patch": "@@ -299,7 +299,7 @@\n \n \t* lib/plugin-support.exp (plugin-test-execute):\n \tAdd ${gcc_objdir}/intl to includes.\n-\t\n+\n 2010-07-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/44942\n@@ -352,7 +352,7 @@\n 2010-07-15  Magnus Granberg  <zorry@gentoo.org>\n \t    Kevin F. Quinn  <kevquinn@gentoo.org>\n \n-        * gcc.dg/Wtrampolines.c: New.\n+\t* gcc.dg/Wtrampolines.c: New.\n \n 2010-07-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n@@ -399,9 +399,9 @@\n \n \tPR objc/44488\n \t* lib/objc-torture.exp (objc-set-runtime-options): Base runtime list\n-\ton the target.  Make sure that we can assemble the emitted asm when \n+\ton the target.  Make sure that we can assemble the emitted asm when\n \tthe test type is 'compile'.\n-\t\n+\n 2010-07-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/36960"}]}