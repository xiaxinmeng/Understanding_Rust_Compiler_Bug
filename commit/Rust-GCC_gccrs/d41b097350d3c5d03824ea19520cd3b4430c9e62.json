{"sha": "d41b097350d3c5d03824ea19520cd3b4430c9e62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQxYjA5NzM1MGQzYzVkMDM4MjRlYTE5NTIwY2QzYjQ0MzBjOWU2Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-15T21:43:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-15T21:43:46Z"}, "message": "match.pd: Optimize X / bool_range_Y to X [PR96094]\n\nWhen the divisor is bool or has [0, 1] range, as division by\n0 is UB, the only remaining option in valid programs is division by 1,\nso we can optimize X / bool_range_Y into X.\n\n2020-12-15  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/96094\n\t* match.pd (X / bool_range_Y -> X): New simplification.\n\n\t* gcc.dg/tree-ssa/pr96094.c: New test.", "tree": {"sha": "e0b58803d667032af0289c111ccca2f7b02166bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0b58803d667032af0289c111ccca2f7b02166bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d41b097350d3c5d03824ea19520cd3b4430c9e62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d41b097350d3c5d03824ea19520cd3b4430c9e62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d41b097350d3c5d03824ea19520cd3b4430c9e62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d41b097350d3c5d03824ea19520cd3b4430c9e62/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36c9a3fe3f3c200ad3937d00d339b7269cf07adb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36c9a3fe3f3c200ad3937d00d339b7269cf07adb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36c9a3fe3f3c200ad3937d00d339b7269cf07adb"}], "stats": {"total": 47, "additions": 43, "deletions": 4}, "files": [{"sha": "c7ee57d4bc20302942b808345565fb09cde38213", "filename": "gcc/match.pd", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d41b097350d3c5d03824ea19520cd3b4430c9e62/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d41b097350d3c5d03824ea19520cd3b4430c9e62/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=d41b097350d3c5d03824ea19520cd3b4430c9e62", "patch": "@@ -348,11 +348,16 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n   /* But not for 0 / 0 so that we can get the proper warnings and errors.  */\n   (if (!integer_zerop (@1))\n    @0))\n-  /* X / -1 is -X.  */\n+ /* X / -1 is -X.  */\n  (simplify\n-   (div @0 integer_minus_onep@1)\n-   (if (!TYPE_UNSIGNED (type))\n-    (negate @0)))\n+  (div @0 integer_minus_onep@1)\n+  (if (!TYPE_UNSIGNED (type))\n+   (negate @0)))\n+ /* X / bool_range_Y is X.  */ \n+ (simplify\n+  (div @0 SSA_NAME@1)\n+  (if (INTEGRAL_TYPE_P (type) && ssa_name_has_boolean_range (@1))\n+   @0))\n  /* X / X is one.  */\n  (simplify\n   (div @0 @0)"}, {"sha": "fe9163dda3e4bf5f5857a19a47cc3c2303247313", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr96094.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d41b097350d3c5d03824ea19520cd3b4430c9e62/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96094.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d41b097350d3c5d03824ea19520cd3b4430c9e62/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96094.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr96094.c?ref=d41b097350d3c5d03824ea19520cd3b4430c9e62", "patch": "@@ -0,0 +1,34 @@\n+/* PR tree-optimization/96094 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-times \"return 34;\" 2 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"return y_\\[0-9]*\\\\\\(D\\\\\\);\" 2 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"return \\[^\\n\\r;]*;\" 4 \"optimized\" } } */\n+\n+int\n+foo (int x)\n+{\n+  if (x >= 2U)\n+    return 34;\n+  return 34 / x;\n+}\n+\n+int\n+bar (int x, int y)\n+{\n+  if (x >= 2U)\n+    return y;\n+  return y / x;\n+}\n+\n+int\n+baz (_Bool x)\n+{\n+  return 34 / x;\n+}\n+\n+int\n+qux (_Bool x, int y)\n+{\n+  return y / x;\n+}"}]}