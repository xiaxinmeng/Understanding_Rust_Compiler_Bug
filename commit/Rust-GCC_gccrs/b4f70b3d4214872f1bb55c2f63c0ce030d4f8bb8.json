{"sha": "b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRmNzBiM2Q0MjE0ODcyZjFiYjU1YzJmNjNjMGNlMDMwZDRmOGJiOA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "1999-06-03T07:16:15Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "1999-06-03T07:16:15Z"}, "message": "semantics.c (begin_class_definition): Update the struct's location here ...\n\n\t* semantics.c (begin_class_definition): Update the struct's\n\tlocation here ...\n\t* class.c (finish_struct): ... rather than here.\n\t* decl.c (make_typename_type): Don't rely on uninitialized\n\tvariable.\n\nFrom-SVN: r27326", "tree": {"sha": "dcd1510ff4351574ab43d808d4b1fa7949f61077", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcd1510ff4351574ab43d808d4b1fa7949f61077"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8a8c36562fddd1dcaf5ebc8dee47d7cb20bc7a88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a8c36562fddd1dcaf5ebc8dee47d7cb20bc7a88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a8c36562fddd1dcaf5ebc8dee47d7cb20bc7a88"}], "stats": {"total": 52, "additions": 24, "deletions": 28}, "files": [{"sha": "49ea8bc609eac9aa352514d2607d776e8076c8bf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8", "patch": "@@ -1,3 +1,12 @@\n+1999-06-03  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* semantics.c (begin_class_definition): Update the struct's\n+\tlocation here ...\n+\t* class.c (finish_struct): ... rather than here.\n+\n+\t* decl.c (make_typename_type): Don't rely on uninitialized\n+\tvariable.\n+\n 1999-05-31  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (ALL_CFLAGS): Add '-W -Wall'."}, {"sha": "4fe5353edb6272816a12aa369775f987bafa92c6", "filename": "gcc/cp/class.c", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8", "patch": "@@ -4173,23 +4173,6 @@ finish_struct (t, attributes, warn_anon)\n      tree t, attributes;\n      int warn_anon;\n {\n-  tree name = TYPE_NAME (t);\n-\n-  if (TREE_CODE (name) == TYPE_DECL)\n-    {\n-      extern int lineno;\n-\t  \n-      DECL_SOURCE_FILE (name) = input_filename;\n-      /* For TYPE_DECL that are not typedefs (those marked with a line\n-\t number of zero, we don't want to mark them as real typedefs.\n-\t If this fails one needs to make sure real typedefs have a\n-\t previous line number, even if it is wrong, that way the below\n-\t will fill in the right line number.  (mrs) */\n-      if (DECL_SOURCE_LINE (name))\n-\tDECL_SOURCE_LINE (name) = lineno;\n-      name = DECL_NAME (name);\n-    }\n-\n   /* Append the fields we need for constructing signature tables.  */\n   if (IS_SIGNATURE (t))\n     append_signature_fields (t);"}, {"sha": "ac9933c819ae9858add858205cf228b5a3250b4a", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8", "patch": "@@ -5516,7 +5516,6 @@ tree\n make_typename_type (context, name)\n      tree context, name;\n {\n-  tree t;\n   tree fullname;\n \n   if (TREE_CODE_CLASS (TREE_CODE (name)) == 't')\n@@ -5576,22 +5575,23 @@ make_typename_type (context, name)\n \t}\n       else\n \t{\n-\t  if (IS_AGGR_TYPE (context))\n-\t    t = lookup_field (context, name, 0, 1);\n-\t  else\n+          tree t;\n+          \n+\t  if (!IS_AGGR_TYPE (context))\n \t    {\n \t      cp_error (\"no type named `%#T' in `%#T'\", name, context);\n \t      return error_mark_node;\n \t    }\n \n+\t  t = lookup_field (context, name, 0, 1);\n \t  if (t)\n \t    return TREE_TYPE (t);\n \t}\n     }\n \n   /* If the CONTEXT is not a template type, then either the field is\n      there now or its never going to be.  */\n-  if (!uses_template_parms (context) && !t)\n+  if (!uses_template_parms (context))\n     {\n       cp_error (\"no type named `%#T' in `%#T'\", name, context);\n       return error_mark_node;"}, {"sha": "37fb9da07d21ab075d6b83368eaac22d37359bfd", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8", "patch": "@@ -1297,6 +1297,10 @@ begin_class_definition (t)\n   else if (TYPE_SIZE (t))\n     duplicate_tag_error (t);\n \n+  /* Update the location of the decl.  */\n+  DECL_SOURCE_FILE (TYPE_NAME (t)) = input_filename;\n+  DECL_SOURCE_LINE (TYPE_NAME (t)) = lineno;\n+  \n   if (TYPE_BEING_DEFINED (t))\n     {\n       t = make_lang_type (TREE_CODE (t));"}, {"sha": "99a7791628761266d2aeca45294c49960e390598", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash5.C?ref=b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8", "patch": "@@ -1,9 +1,9 @@\n // Build don't link:\n \n template <class T, int i>\n-struct K {\n+struct K {  // ERROR - forward declaration\n \tvoid f();\n-};  // ERROR - forward declaration\n+};\n \n template <class T>\n void"}, {"sha": "6dab744b357ee66c6ade1e99ad81a66b8728cebc", "filename": "gcc/testsuite/g++.old-deja/g++.pt/t05.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft05.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft05.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft05.C?ref=b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8", "patch": "@@ -1,9 +1,9 @@\n // Build don't link: \n \n-template <class A> class B {   \n+template <class A> class B {    // ERROR - candidates\n   A a;                          \n  public:\n   B(A&aa);\t\t\t// ERROR - near match\n   ~B();\n-};  // ERROR - candidates\n+};\n static B<int> b_int (3);\t// ERROR - no matching function"}, {"sha": "ff7bc5c6c7eb8052864cfb5387d20797a267dcd9", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb109.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb109.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb109.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb109.C?ref=b4f70b3d4214872f1bb55c2f63c0ce030d4f8bb8", "patch": "@@ -17,7 +17,7 @@ inline istream& operator>>(istream& is, Empty& ) { return is;}\n \n template<class VertexType, class EdgeType>\n class Graph\n-{ \n+{  // ERROR - candidates\n   public:\n     // public type interface\n     typedef map<int, EdgeType > Successor;\n@@ -32,7 +32,7 @@ class Graph\n     bool directed;\n     GraphType C;          // container\n     ostream* pOut;\n-}; // ERROR - candidates\n+};\n \n // all graph-methods delet\n template<class VertexType, class EdgeType>"}]}