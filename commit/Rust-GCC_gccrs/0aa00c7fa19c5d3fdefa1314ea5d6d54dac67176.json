{"sha": "0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFhMDBjN2ZhMTljNWQzZmRlZmExMzE0ZWE1ZDZkNTRkYWM2NzE3Ng==", "commit": {"author": {"name": "Toon Moene", "email": "toon@moene.indiv.nluug.nl", "date": "2002-02-01T22:43:03Z"}, "committer": {"name": "Toon Moene", "email": "toon@gcc.gnu.org", "date": "2002-02-01T22:43:03Z"}, "message": "bad.def: Remove non-historical reference to version 0.6.\n\n2002-02-01  Toon Moene  <toon@moene.indiv.nluug.nl>\n\n\t* bad.def: Remove non-historical reference to version 0.6.\n\t* bugs.texi: Ditto.\n\t* com.c: Ditto.\n\t* ffe.texi: Ditto.\n\t* proj.h: Ditto.\n\t* g77.texi: Ditto.\n\nFrom-SVN: r49413", "tree": {"sha": "1989b641ecbf47d0ba80a6b11ff0cd116ac2b627", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1989b641ecbf47d0ba80a6b11ff0cd116ac2b627"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176/comments", "author": null, "committer": null, "parents": [{"sha": "3968de80f82b32336d76808d57ac4148ee191347", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3968de80f82b32336d76808d57ac4148ee191347", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3968de80f82b32336d76808d57ac4148ee191347"}], "stats": {"total": 83, "additions": 14, "deletions": 69}, "files": [{"sha": "9df082b8bfad64dc0d9c88a6563a1f04b1c35bf2", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176", "patch": "@@ -1,3 +1,12 @@\n+2002-02-01  Toon Moene  <toon@moene.indiv.nluug.nl>\n+\n+\t* bad.def: Remove non-historical reference to version 0.6.\n+\t* bugs.texi: Ditto.\n+\t* com.c: Ditto.\n+\t* ffe.texi: Ditto.\n+\t* proj.h: Ditto.\n+\t* g77.texi: Ditto.\n+\n 2002-01-31  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* g77spec.c (lang_specific_driver): Follow GNU Coding Standards"}, {"sha": "98ac1c6d7a5dab3a2555cdeb24f36bbb8230310b", "filename": "gcc/f/bad.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176/gcc%2Ff%2Fbad.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176/gcc%2Ff%2Fbad.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbad.def?ref=0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176", "patch": "@@ -660,7 +660,7 @@ FFEBAD_MSG (FFEBAD_QUAD_UNSUPPORTED, FATAL,\n LONG(\"Quadruple-precision floating-point unsupported -- treating constant at %0 as double-precision\")\n SHORT(\"Quadruple-precision floating-point unsupported\"))\n FFEBAD_MSG (FFEBAD_TOO_BIG_INIT, WARN,\n-LONG(\"Initialization of large (%B-unit) aggregate area `%A' at %0 currently very slow and takes lots of memory during g77 compile -- to be improved in 0.6\")\n+LONG(\"Initialization of large (%B-unit) aggregate area `%A' at %0 slow and takes lots of memory during g77 compile\")\n SHORT(\"This could take a while (initializing `%A' at %0)...\"))\n FFEBAD_MSG (FFEBAD_BLOCKDATA_STMT, FATAL,\n \"Statement at %0 invalid in BLOCK DATA program unit at %1\")"}, {"sha": "200ee400f9acae7e0343238b7853cb757f3b77c3", "filename": "gcc/f/bugs.texi", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176/gcc%2Ff%2Fbugs.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176/gcc%2Ff%2Fbugs.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbugs.texi?ref=0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176", "patch": "@@ -120,8 +120,6 @@ configuration that it no longer makes regarding variables (types).\n Included with this item is the fact that @code{g77} doesn't recognize\n that, on IEEE-754/854-compliant systems, @samp{0./0.} should produce a NaN\n and no warning instead of the value @samp{0.} and a warning.\n-This is to be fixed in version 0.6, when @code{g77} will use the\n-@code{gcc} back end's constant-handling mechanisms to replace its own.\n \n @cindex compiler speed\n @cindex speed, of compiler\n@@ -138,7 +136,6 @@ areas having any initialized elements.\n For example, @samp{REAL A(1000000)} followed by @samp{DATA A(1)/1/}\n takes up way too much time and space, including\n the size of the generated assembler file.\n-This is to be mitigated somewhat in version 0.6.\n \n Version 0.5.18 improves cases like this---specifically,\n cases of @emph{sparse} initialization that leave large, contiguous\n@@ -232,8 +229,6 @@ working together properly sooner.\n such as the Digital Semiconductor (``DEC'') Alpha.\n \n This problem is largely resolved as of version 0.5.23.\n-Version 0.6 should solve most or all remaining problems\n-(such as cross-compiling involving 64-bit machines).\n \n @cindex padding\n @cindex structures"}, {"sha": "f20b584bc48ddc0f08c0ef657f08fbf3411d982d", "filename": "gcc/f/com.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176", "patch": "@@ -11823,8 +11823,7 @@ ffecom_init_0 ()\n       warning (\"and pointers are %d bits wide, but g77 doesn't yet work\",\n \t  (int) TREE_INT_CST_LOW (TYPE_SIZE (TREE_TYPE (null_pointer_node))));\n       warning (\"properly unless they all are 32 bits wide\");\n-      warning (\"Please keep this in mind before you report bugs.  g77 should\");\n-      warning (\"support non-32-bit machines better as of version 0.6\");\n+      warning (\"Please keep this in mind before you report bugs.\");\n     }\n #endif\n "}, {"sha": "b6fbac9ad74e438cf82b0bb2800f010e756f11a3", "filename": "gcc/f/ffe.texi", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176/gcc%2Ff%2Fffe.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176/gcc%2Ff%2Fffe.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fffe.texi?ref=0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176", "patch": "@@ -11,10 +11,6 @@\n \n This chapter describes some aspects of the design and implementation\n of the @code{g77} front end.\n-Much of the information below applies not to current\n-releases of @code{g77},\n-but to the 0.6 rewrite being designed and implemented\n-as of late May, 1999.\n \n To find about things that are ``To Be Determined'' or ``To Be Done'',\n search for the string TBD.\n@@ -589,11 +585,6 @@ Preserving case seems necessary to provide more direct access\n to facilities outside of @code{g77}, such as to C or Pascal code.\n \n Names of intrinsics will probably be matchable in any case,\n-However, there probably won't be any option to require\n-a particular mixed-case appearance of intrinsics\n-(as there was for @code{g77} prior to version 0.6),\n-because that's painful to maintain,\n-and probably nobody uses it.\n \n (How @samp{external SiN; r = sin(x)} would be handled is TBD.\n I think old @code{g77} might already handle that pretty elegantly,"}, {"sha": "4dcc883d079ea95329bd1fd7141a28c104967e56", "filename": "gcc/f/g77.texi", "status": "modified", "additions": 2, "deletions": 51, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176/gcc%2Ff%2Fg77.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176/gcc%2Ff%2Fg77.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77.texi?ref=0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176", "patch": "@@ -359,8 +359,7 @@ for @code{INTEGER*1}, @code{INTEGER*2}, and\n @code{LOGICAL*1}.\n This inspired Craig to add further support,\n even though the resulting support\n-would still be incomplete, because version 0.6 is still\n-a ways off.\n+would still be incomplete.\n \n @item\n David Ronis (@email{ronis@@onsager.chem.mcgill.ca}) inspired\n@@ -425,10 +424,6 @@ Email @email{gnu@@gnu.org} for information on funding the FSF.\n \n Another important way to support work on GNU Fortran is to volunteer\n to help out.\n-Work is needed on documentation, testing, porting\n-to various machines, and in some cases, coding (although major\n-changes planned for version 0.6 make it difficult to add manpower to this\n-area).\n \n Email @email{@value{email-general}} to volunteer for this work.\n \n@@ -3561,10 +3556,7 @@ implementation choices made for the compiler, since those choices\n are explicitly left to the implementation by the published Fortran\n standards.\n GNU Fortran currently tries to be somewhat like a few popular compilers\n-(@command{f2c}, Digital (``DEC'') Fortran, and so on), though a cleaner default\n-definition along with more\n-flexibility offered by command-line options is likely to be offered\n-in version 0.6.\n+(@command{f2c}, Digital (``DEC'') Fortran, and so on).\n \n This section describes how @command{g77} interprets source lines.\n \n@@ -3605,20 +3597,6 @@ than (currently) noting whether a tab was found on a line and using this\n information to decide how to interpret the length of the line and continued\n constants.\n \n-Note that this default behavior probably will change for version 0.6,\n-when it will presumably be available via a command-line option.\n-The default as of version 0.6 is planned to be a ``pure visual''\n-model, where tabs are immediately\n-converted to spaces and otherwise have no effect, so the way a typical\n-user sees source lines produces a consistent result no matter how the\n-spacing in those source lines is actually implemented via tabs, spaces,\n-and trailing tabs/spaces before newline.\n-Command-line options are likely to be added to specify whether all or\n-just-tabbed lines are to be extended to 132 or full input-line length,\n-and perhaps even an option will be added to specify the truncated-line\n-behavior to which some Digital compilers default (and which affects\n-the way continued character/Hollerith constants are interpreted).\n-\n @node Short Lines\n @subsection Short Lines\n @cindex short source lines\n@@ -8879,8 +8857,6 @@ to fund a comprehensive project to create GNU Fortran 95.\n @cindex statements, PARAMETER\n \n @command{g77} doesn't allow intrinsics in @code{PARAMETER} statements.\n-This feature is considered to be absolutely vital, even though it\n-is not standard-conforming, and is scheduled for version 0.6.\n \n Related to this, @command{g77} doesn't allow non-integral\n exponentiation in @code{PARAMETER} statements, such as\n@@ -8984,8 +8960,6 @@ alleviate this problem).\n \n @command{g77} doesn't fully support @code{INTEGER*2}, @code{LOGICAL*1},\n and similar.\n-Version 0.6 will provide full support for this very\n-popular set of features.\n In the meantime, version 0.5.18 provides rudimentary support\n for them.\n \n@@ -9004,7 +8978,6 @@ support (using F90 syntax) as well, and, for most\n machines will result in automatic support of @code{INTEGER*1},\n @code{INTEGER*2}, @code{INTEGER*8}, maybe even @code{REAL*16},\n and so on.\n-This is scheduled for version 0.6.\n \n @node Array Bounds Expressions\n @subsection Array Bounds Expressions\n@@ -9615,8 +9588,6 @@ item pointed to won't be modified\n \n Probably the best solution for now, but not quite trivial\n to implement in the general case.\n-Worth considering after @command{g77} 0.6 is considered\n-pretty solid.\n @end itemize\n \n @node Gracefully Handle Sensible Bad Code\n@@ -10467,24 +10438,6 @@ useful warnings).\n \n @emph{Note:} Currently, the text of the line and a pointer to the column\n is printed in most @command{g77} diagnostics.\n-Probably, as of version 0.6, @command{g77} will\n-no longer print the text of the source line, instead printing\n-the column number following the file name and line number in\n-a form that GNU Emacs recognizes.\n-This change is expected to speed up and reduce the memory usage\n-of the @command{g77} compiler.\n-@c\n-@c Say this when it is true -- hopefully 0.6, maybe 0.7 or later.  --burley\n-@c\n-@c GNU Fortran always tries to compile your program if possible; it never\n-@c gratuitously rejects a program whose meaning is clear merely because\n-@c (for instance) it fails to conform to a standard.  In some cases,\n-@c however, the Fortran standard specifies that certain extensions are\n-@c forbidden, and a diagnostic @emph{must} be issued by a conforming\n-@c compiler.  The @option{-pedantic} option tells GNU Fortran to issue warnings\n-@c in such cases; @option{-pedantic-errors} says to make them errors instead.\n-@c This does not mean that @emph{all} non-ANSI constructs get warnings\n-@c or errors.\n \n @xref{Warning Options,,Options to Request or Suppress Warnings}, for\n more detail on these and related command-line options.\n@@ -11551,8 +11504,6 @@ libraries are installed) after building.\n @section Internals Documentation\n \n Better info on how @command{g77} works and how to port it is needed.\n-Much of this should be done only after the redesign planned for\n-0.6 is complete.\n \n @xref{Front End}, which contains some information\n on @command{g77} internals."}, {"sha": "a1e10c4e61a557aabf8e383bbdc4ec84a9bf1595", "filename": "gcc/f/proj.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176/gcc%2Ff%2Fproj.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176/gcc%2Ff%2Fproj.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fproj.h?ref=0aa00c7fa19c5d3fdefa1314ea5d6d54dac67176", "patch": "@@ -32,7 +32,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n \n #if (GCC_VERSION < 2000)\n- #error \"You have to use gcc 2.x to build g77 (might be fixed in g77-0.6).\"\n+ #error \"You have to use gcc 2.x to build g77.\"\n #endif\n \n /* Include files everyone gets.  <assert.h> is needed for assert().  */"}]}