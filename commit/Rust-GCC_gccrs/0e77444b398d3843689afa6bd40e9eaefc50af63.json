{"sha": "0e77444b398d3843689afa6bd40e9eaefc50af63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU3NzQ0NGIzOThkMzg0MzY4OWFmYTZiZDQwZTllYWVmYzUwYWY2Mw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-05T03:49:06Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-05T03:49:06Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1440", "tree": {"sha": "2d457538c2863974b66f5f9e2ff7c01971eb7e87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d457538c2863974b66f5f9e2ff7c01971eb7e87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e77444b398d3843689afa6bd40e9eaefc50af63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e77444b398d3843689afa6bd40e9eaefc50af63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e77444b398d3843689afa6bd40e9eaefc50af63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e77444b398d3843689afa6bd40e9eaefc50af63/comments", "author": null, "committer": null, "parents": [{"sha": "cc9a4c0e2d68447b4360f3b419b00d17fd6028f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc9a4c0e2d68447b4360f3b419b00d17fd6028f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc9a4c0e2d68447b4360f3b419b00d17fd6028f5"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "4eea2c9c949dfb41245e4384bfd4aa0dc8eac86e", "filename": "gcc/tree.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e77444b398d3843689afa6bd40e9eaefc50af63/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e77444b398d3843689afa6bd40e9eaefc50af63/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=0e77444b398d3843689afa6bd40e9eaefc50af63", "patch": "@@ -214,6 +214,9 @@ static tree hash_table[MAX_HASH_TABLE];\t/* id hash buckets */\n /* 0 while creating built-in identifiers.  */\n static int do_identifier_warnings;\n \n+/* Unique id for next decl created.  */\n+static int next_decl_uid;\n+\n extern char *mode_name[];\n \n void gcc_obstack_init ();\n@@ -856,6 +859,7 @@ make_node (code)\n \tDECL_ALIGN (t) = 1;\n       DECL_SOURCE_LINE (t) = lineno;\n       DECL_SOURCE_FILE (t) = (input_filename) ? input_filename : \"<built-in>\";\n+      DECL_UID (t) = next_decl_uid++;\n       break;\n \n     case 't':"}, {"sha": "b50cc1c6d72c65a331272e6ae745d130ba812ef6", "filename": "gcc/tree.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e77444b398d3843689afa6bd40e9eaefc50af63/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e77444b398d3843689afa6bd40e9eaefc50af63/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=0e77444b398d3843689afa6bd40e9eaefc50af63", "patch": "@@ -708,6 +708,9 @@ struct tree_type\n    writing debugging information about vfield and vbase decls for C++.  */\n #define DECL_FCONTEXT(NODE) ((NODE)->decl.vindex)\n \n+/* Every ..._DECL node gets a unique number.  */\n+#define DECL_UID(NODE) ((NODE)->decl.uid)\n+\n /* Nonzero in a VAR_DECL or PARM_DECL means this decl was made by inlining;\n    suppress any warnings about shadowing some other variable.  */\n #define DECL_FROM_INLINE(NODE) ((NODE)->decl.from_inline_flag)\n@@ -777,6 +780,7 @@ struct tree_decl\n   char *filename;\n   int linenum;\n   union tree_node *size;\n+  unsigned int uid;\n #ifdef ONLY_INT_FIELDS\n   int mode : 8;\n #else\n@@ -856,6 +860,7 @@ extern char *oballoc ();\n extern char *permalloc ();\n extern char *savealloc ();\n extern char *xmalloc ();\n+extern char *xrealloc ();\n extern void free ();\n \n /* Lowest level primitive for allocating a node.\n@@ -971,6 +976,7 @@ extern tree non_lvalue ();\n \n extern tree convert ();\n extern tree size_in_bytes ();\n+extern int int_size_in_bytes ();\n extern tree size_binop ();\n extern tree size_int ();\n extern tree round_up ();"}]}