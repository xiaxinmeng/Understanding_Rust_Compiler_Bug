{"sha": "5db3787171aacab1d1ced94208645a210c5cd515", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRiMzc4NzE3MWFhY2FiMWQxY2VkOTQyMDg2NDVhMjEwYzVjZDUxNQ==", "commit": {"author": {"name": "Kugan Vivekanandarajah", "email": "kuganv@linaro.org", "date": "2014-06-17T00:00:59Z"}, "committer": {"name": "Kugan Vivekanandarajah", "email": "kugan@gcc.gnu.org", "date": "2014-06-17T00:00:59Z"}, "message": "arm.c (arm_atomic_assign_expand_fenv): call default_atomic_assign_expand_fenv for !TARGET_HARD_FLOAT.\n\ngcc/\n2014-06-17  Kugan Vivekanandarajah  <kuganv@linaro.org>\n\n\t* config/arm/arm.c (arm_atomic_assign_expand_fenv): call\n\tdefault_atomic_assign_expand_fenv for !TARGET_HARD_FLOAT.\n\t(arm_init_builtins) : Initialize builtins __builtins_arm_set_fpscr and\n\t__builtins_arm_get_fpscr only when TARGET_HARD_FLOAT.\n\t* config/arm/vfp.md (set_fpscr): Make pattern conditional on\n\tTARGET_HARD_FLOAT.\n\t(get_fpscr) : Likewise.\n\nFrom-SVN: r211717", "tree": {"sha": "b427eed409910248e39292776c04cfd301bf9fd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b427eed409910248e39292776c04cfd301bf9fd3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5db3787171aacab1d1ced94208645a210c5cd515", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db3787171aacab1d1ced94208645a210c5cd515", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5db3787171aacab1d1ced94208645a210c5cd515", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db3787171aacab1d1ced94208645a210c5cd515/comments", "author": null, "committer": null, "parents": [{"sha": "ba38538fd68b2542277ea236a06b9f418e6d77bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba38538fd68b2542277ea236a06b9f418e6d77bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba38538fd68b2542277ea236a06b9f418e6d77bd"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "676621e85cf0347719e5ca68d90479d3b8837dc5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db3787171aacab1d1ced94208645a210c5cd515/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db3787171aacab1d1ced94208645a210c5cd515/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5db3787171aacab1d1ced94208645a210c5cd515", "patch": "@@ -1,3 +1,13 @@\n+2014-06-17  Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\t* config/arm/arm.c (arm_atomic_assign_expand_fenv): call\n+\tdefault_atomic_assign_expand_fenv for !TARGET_HARD_FLOAT.\n+\t(arm_init_builtins) : Initialize builtins __builtins_arm_set_fpscr and\n+\t__builtins_arm_get_fpscr only when TARGET_HARD_FLOAT.\n+\t* config/arm/vfp.md (set_fpscr): Make pattern conditional on\n+\tTARGET_HARD_FLOAT.\n+\t(get_fpscr) : Likewise.\n+\n 2014-06-16  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/61325"}, {"sha": "85d2114826c8c57c12192a4167d89766e608ad6b", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db3787171aacab1d1ced94208645a210c5cd515/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db3787171aacab1d1ced94208645a210c5cd515/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=5db3787171aacab1d1ced94208645a210c5cd515", "patch": "@@ -24762,7 +24762,7 @@ arm_init_builtins (void)\n   if (TARGET_CRC32)\n     arm_init_crc32_builtins ();\n \n-  if (TARGET_VFP)\n+  if (TARGET_VFP && TARGET_HARD_FLOAT)\n     {\n       tree ftype_set_fpscr\n \t= build_function_type_list (void_type_node, unsigned_type_node, NULL);\n@@ -31454,8 +31454,8 @@ arm_atomic_assign_expand_fenv (tree *hold, tree *clear, tree *update)\n   tree new_fenv_var, reload_fenv, restore_fnenv;\n   tree update_call, atomic_feraiseexcept, hold_fnclex;\n \n-  if (!TARGET_VFP)\n-    return;\n+  if (!TARGET_VFP || !TARGET_HARD_FLOAT)\n+    return default_atomic_assign_expand_fenv (hold, clear, update);\n \n   /* Generate the equivalent of :\n        unsigned int fenv_var;"}, {"sha": "9962bd3ba9786a64bfabbafa89f2071626bf4c1a", "filename": "gcc/config/arm/vfp.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db3787171aacab1d1ced94208645a210c5cd515/gcc%2Fconfig%2Farm%2Fvfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db3787171aacab1d1ced94208645a210c5cd515/gcc%2Fconfig%2Farm%2Fvfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp.md?ref=5db3787171aacab1d1ced94208645a210c5cd515", "patch": "@@ -1325,15 +1325,15 @@\n ;; Write Floating-point Status and Control Register.\n (define_insn \"set_fpscr\"\n   [(unspec_volatile [(match_operand:SI 0 \"register_operand\" \"r\")] VUNSPEC_SET_FPSCR)]\n-  \"TARGET_VFP\"\n+  \"TARGET_VFP && TARGET_HARD_FLOAT\"\n   \"mcr\\\\tp10, 7, %0, cr1, cr0, 0\\\\t @SET_FPSCR\"\n   [(set_attr \"type\" \"mrs\")])\n \n ;; Read Floating-point Status and Control Register.\n (define_insn \"get_fpscr\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n         (unspec_volatile:SI [(const_int 0)] VUNSPEC_GET_FPSCR))]\n-  \"TARGET_VFP\"\n+  \"TARGET_VFP && TARGET_HARD_FLOAT\"\n   \"mrc\\\\tp10, 7, %0, cr1, cr0, 0\\\\t @GET_FPSCR\"\n   [(set_attr \"type\" \"mrs\")])\n "}]}