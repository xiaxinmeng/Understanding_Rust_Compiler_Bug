{"sha": "8cb3ee3785019dc4b2566360816f0b83aeea4e2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNiM2VlMzc4NTAxOWRjNGIyNTY2MzYwODE2ZjBiODNhZWVhNGUyZQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-03-19T10:44:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-03-19T10:44:52Z"}, "message": "re PR tree-optimization/35609 (\"is used uninitialized in this function\" should be may warning)\n\n2008-03-19  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/35609\n\t* tree-ssa.c (always_executed): New global flag.\n\t(warn_uninitialized_var): If !always_executed warn with \"maybe\"\n\tinstead of \"is\".\n\t(execute_early_warn_uninitialized): Compute post-dominators.\n\tInitialize always_executed before processing each basic block.\n\n\t* gcc.dg/testsuite/uninit-15.c: New testcase.\n\t* gcc.dg/testsuite/uninit-16.c: Likewise.\n\nFrom-SVN: r133341", "tree": {"sha": "c2091432f1378f837c2a13f54a2dd45d2c6b2193", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2091432f1378f837c2a13f54a2dd45d2c6b2193"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cb3ee3785019dc4b2566360816f0b83aeea4e2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cb3ee3785019dc4b2566360816f0b83aeea4e2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cb3ee3785019dc4b2566360816f0b83aeea4e2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cb3ee3785019dc4b2566360816f0b83aeea4e2e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "21c2d075c06a1b858bd12831dff8ff2786d394fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21c2d075c06a1b858bd12831dff8ff2786d394fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21c2d075c06a1b858bd12831dff8ff2786d394fd"}], "stats": {"total": 90, "additions": 81, "deletions": 9}, "files": [{"sha": "0dc711d43f04b22f4d3b4fa6ca7974fc0491f042", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cb3ee3785019dc4b2566360816f0b83aeea4e2e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cb3ee3785019dc4b2566360816f0b83aeea4e2e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8cb3ee3785019dc4b2566360816f0b83aeea4e2e", "patch": "@@ -1,3 +1,12 @@\n+2008-03-19  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/35609\n+\t* tree-ssa.c (always_executed): New global flag.\n+\t(warn_uninitialized_var): If !always_executed warn with \"maybe\"\n+\tinstead of \"is\".\n+\t(execute_early_warn_uninitialized): Compute post-dominators.\n+\tInitialize always_executed before processing each basic block.\n+\n 2008-03-18  Mikulas Patocka  <mikulas@artax.karlin.mff.cuni.cz>\n \n \tPR target/35504"}, {"sha": "2aacfe4a48078cfd3962c9a0f579ba3604a0525a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cb3ee3785019dc4b2566360816f0b83aeea4e2e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cb3ee3785019dc4b2566360816f0b83aeea4e2e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8cb3ee3785019dc4b2566360816f0b83aeea4e2e", "patch": "@@ -1,3 +1,9 @@\n+2008-03-19  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/35609\n+\t* gcc.dg/testsuite/uninit-15.c: New testcase.\n+\t* gcc.dg/testsuite/uninit-16.c: Likewise.\n+\n 2008-03-18  Mikulas Patocka  <mikulas@artax.karlin.mff.cuni.cz>\n \n \tPR target/35504"}, {"sha": "dee7a3b211c9e0fb29248934db72fbe60cf9ff61", "filename": "gcc/testsuite/gcc.dg/uninit-15.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cb3ee3785019dc4b2566360816f0b83aeea4e2e/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cb3ee3785019dc4b2566360816f0b83aeea4e2e/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-15.c?ref=8cb3ee3785019dc4b2566360816f0b83aeea4e2e", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -Wuninitialized\" } */\n+\n+inline int foo (int i)\n+{\n+    if (i) return 1; /* { dg-warning \"is used uninitialized\" } */\n+    return 0;\n+}\n+\n+void baz();\n+\n+void bar()\n+{\n+    int j;           /* { dg-message \"was declared here\" } */\n+    for (; foo(j); ++j)\n+        baz();\n+}"}, {"sha": "aefb5e5f7d2d811d12f564736ee7cb44c3a7090e", "filename": "gcc/testsuite/gcc.dg/uninit-16.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cb3ee3785019dc4b2566360816f0b83aeea4e2e/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cb3ee3785019dc4b2566360816f0b83aeea4e2e/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-16.c?ref=8cb3ee3785019dc4b2566360816f0b83aeea4e2e", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wuninitialized\" } */\n+\n+int foo, bar;\n+\n+void decode_reloc(int reloc, int *is_alt)\n+{\n+  if (reloc >= 20)\n+      *is_alt = 1;\n+  else if (reloc >= 10)\n+      *is_alt = 0;\n+}\n+\n+void testfunc()\n+{\n+  int alt_reloc;\n+\n+  decode_reloc(foo, &alt_reloc);\n+\n+  if (alt_reloc) /* { dg-warning \"may be used uninitialized\" } */\n+    bar = 42;\n+}"}, {"sha": "5a67aa8273e80dd53aaa5ceaae4ac46ffe2b7193", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 27, "deletions": 9, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cb3ee3785019dc4b2566360816f0b83aeea4e2e/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cb3ee3785019dc4b2566360816f0b83aeea4e2e/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=8cb3ee3785019dc4b2566360816f0b83aeea4e2e", "patch": "@@ -1416,21 +1416,32 @@ warn_uninit (tree t, const char *gmsgid, void *data)\n \n   TREE_NO_WARNING (var) = 1;\n }\n-   \n+\n+struct walk_data {\n+  tree stmt;\n+  bool always_executed;\n+};\n+\n /* Called via walk_tree, look for SSA_NAMEs that have empty definitions\n    and warn about them.  */\n \n static tree\n-warn_uninitialized_var (tree *tp, int *walk_subtrees, void *data)\n+warn_uninitialized_var (tree *tp, int *walk_subtrees, void *data_)\n {\n+  struct walk_data *data = (struct walk_data *)data_;\n   tree t = *tp;\n \n   switch (TREE_CODE (t))\n     {\n     case SSA_NAME:\n       /* We only do data flow with SSA_NAMEs, so that's all we\n \t can warn about.  */\n-      warn_uninit (t, \"%H%qD is used uninitialized in this function\", data);\n+      if (data->always_executed)\n+        warn_uninit (t, \"%H%qD is used uninitialized in this function\",\n+\t\t     data->stmt);\n+      else\n+        warn_uninit (t, \"%H%qD may be used uninitialized in this function\",\n+\t\t     data->stmt);\n       *walk_subtrees = 0;\n       break;\n \n@@ -1478,14 +1489,21 @@ execute_early_warn_uninitialized (void)\n {\n   block_stmt_iterator bsi;\n   basic_block bb;\n+  struct walk_data data;\n+\n+  calculate_dominance_info (CDI_POST_DOMINATORS);\n \n   FOR_EACH_BB (bb)\n-    for (bsi = bsi_start (bb); !bsi_end_p (bsi); bsi_next (&bsi))\n-      {\n-\ttree context = bsi_stmt (bsi);\n-\twalk_tree (bsi_stmt_ptr (bsi), warn_uninitialized_var,\n-\t\t   context, NULL);\n-      }\n+    {\n+      data.always_executed = dominated_by_p (CDI_POST_DOMINATORS,\n+\t\t\t\t\t     single_succ (ENTRY_BLOCK_PTR), bb);\n+      for (bsi = bsi_start (bb); !bsi_end_p (bsi); bsi_next (&bsi))\n+        {\n+\t  data.stmt = bsi_stmt (bsi);\n+\t  walk_tree (bsi_stmt_ptr (bsi), warn_uninitialized_var,\n+\t\t     &data, NULL);\n+        }\n+    }\n   return 0;\n }\n "}]}