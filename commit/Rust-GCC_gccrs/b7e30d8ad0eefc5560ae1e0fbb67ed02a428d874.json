{"sha": "b7e30d8ad0eefc5560ae1e0fbb67ed02a428d874", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdlMzBkOGFkMGVlZmM1NTYwYWUxZTBmYmI2N2VkMDJhNDI4ZDg3NA==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2002-01-03T09:41:00Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2002-01-03T09:41:00Z"}, "message": "cppfiles.c (_cpp_pop_file_buffer): Change return type to bool and return true if...\n\n\t* cppfiles.c (_cpp_pop_file_buffer): Change return type to bool\n\tand return true if _cpp_push_next_buffer pushed a new include\n\tfile.\n\t* cpplib.c (_cpp_pop_buffer): Only call obstack_free if\n\t_cpp_pop_file_buffer did not push a new file.\n\t* cpphash.h (_cpp_pop_file_buffer): Update declaration.\n\nFrom-SVN: r48507", "tree": {"sha": "cbc23e02d49a928631fef7e5b64be1beb9789c5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbc23e02d49a928631fef7e5b64be1beb9789c5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7e30d8ad0eefc5560ae1e0fbb67ed02a428d874", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7e30d8ad0eefc5560ae1e0fbb67ed02a428d874", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7e30d8ad0eefc5560ae1e0fbb67ed02a428d874", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7e30d8ad0eefc5560ae1e0fbb67ed02a428d874/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ff81832f59cff40ccee928693238c92c0347a50e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff81832f59cff40ccee928693238c92c0347a50e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff81832f59cff40ccee928693238c92c0347a50e"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "c65fd8662ce4c4471ba5b5fc4e950af38927c42f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e30d8ad0eefc5560ae1e0fbb67ed02a428d874/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e30d8ad0eefc5560ae1e0fbb67ed02a428d874/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b7e30d8ad0eefc5560ae1e0fbb67ed02a428d874", "patch": "@@ -1,3 +1,12 @@\n+2002-01-03  Andreas Schwab  <schwab@suse.de>\n+\n+\t* cppfiles.c (_cpp_pop_file_buffer): Change return type to bool\n+\tand return true if _cpp_push_next_buffer pushed a new include\n+\tfile.\n+\t* cpplib.c (_cpp_pop_buffer): Only call obstack_free if\n+\t_cpp_pop_file_buffer did not push a new file.\n+\t* cpphash.h (_cpp_pop_file_buffer): Update declaration.\n+\n 2002-01-02  Eric Christopher  <echristo@redhat.com>\n \n \t* final.c (final_scan_insn): Change 0 -> NULL_RTX in"}, {"sha": "11fc32567035821334ad9d9aade5e04a32953978", "filename": "gcc/cppfiles.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e30d8ad0eefc5560ae1e0fbb67ed02a428d874/gcc%2Fcppfiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e30d8ad0eefc5560ae1e0fbb67ed02a428d874/gcc%2Fcppfiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppfiles.c?ref=b7e30d8ad0eefc5560ae1e0fbb67ed02a428d874", "patch": "@@ -748,11 +748,13 @@ _cpp_read_file (pfile, fname)\n \n /* Do appropriate cleanup when a file buffer is popped off the input\n    stack.  Push the next -include file, if any remain.  */\n-void\n+bool\n _cpp_pop_file_buffer (pfile, inc)\n      cpp_reader *pfile;\n      struct include_file *inc;\n {\n+  bool pushed = false;\n+\n   /* Record the inclusion-preventing macro, which could be NULL\n      meaning no controlling macro.  */\n   if (pfile->mi_valid && inc->cmacro == NULL)\n@@ -772,8 +774,10 @@ _cpp_pop_file_buffer (pfile, inc)\n \n       /* Finally, push the next -included file, if any.  */\n       if (!pfile->buffer->prev)\n-\t_cpp_push_next_buffer (pfile);\n+\tpushed = _cpp_push_next_buffer (pfile);\n     }\n+\n+  return pushed;\n }\n \n /* Returns the first place in the include chain to start searching for"}, {"sha": "703908fc1393e540e4dadfc4ac0d16fb3fcdbb03", "filename": "gcc/cpphash.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e30d8ad0eefc5560ae1e0fbb67ed02a428d874/gcc%2Fcpphash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e30d8ad0eefc5560ae1e0fbb67ed02a428d874/gcc%2Fcpphash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.h?ref=b7e30d8ad0eefc5560ae1e0fbb67ed02a428d874", "patch": "@@ -390,7 +390,7 @@ extern int _cpp_compare_file_date       PARAMS ((cpp_reader *,\n extern void _cpp_report_missing_guards\tPARAMS ((cpp_reader *));\n extern void _cpp_init_includes\t\tPARAMS ((cpp_reader *));\n extern void _cpp_cleanup_includes\tPARAMS ((cpp_reader *));\n-extern void _cpp_pop_file_buffer\tPARAMS ((cpp_reader *,\n+extern bool _cpp_pop_file_buffer\tPARAMS ((cpp_reader *,\n \t\t\t\t\t\t struct include_file *));\n \n /* In cppexp.c */"}, {"sha": "3746d98410edfe203249b215fbcc8b37bea69889", "filename": "gcc/cpplib.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e30d8ad0eefc5560ae1e0fbb67ed02a428d874/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e30d8ad0eefc5560ae1e0fbb67ed02a428d874/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=b7e30d8ad0eefc5560ae1e0fbb67ed02a428d874", "patch": "@@ -1805,6 +1805,7 @@ _cpp_pop_buffer (pfile)\n {\n   cpp_buffer *buffer = pfile->buffer;\n   struct if_stack *ifs;\n+  bool pushed = false;\n \n   /* Walk back up the conditional stack till we reach its level at\n      entry to this file, issuing error messages.  */\n@@ -1819,9 +1820,10 @@ _cpp_pop_buffer (pfile)\n   pfile->buffer = buffer->prev;\n \n   if (buffer->inc)\n-    _cpp_pop_file_buffer (pfile, buffer->inc);\n+    pushed = _cpp_pop_file_buffer (pfile, buffer->inc);\n \n-  obstack_free (&pfile->buffer_ob, buffer);\n+  if (!pushed)\n+    obstack_free (&pfile->buffer_ob, buffer);\n }\n \n void"}]}