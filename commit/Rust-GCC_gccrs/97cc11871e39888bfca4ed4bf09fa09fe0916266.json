{"sha": "97cc11871e39888bfca4ed4bf09fa09fe0916266", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdjYzExODcxZTM5ODg4YmZjYTRlZDRiZjA5ZmEwOWZlMDkxNjI2Ng==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2019-11-15T18:39:35Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2019-11-15T18:39:35Z"}, "message": "Support C2x [[maybe_unused]] attribute.\n\nThis patch adds support for the C2x [[maybe_unused]] attribute, using\nthe same handler as for GNU __attribute__ ((unused)).\n\nAs with other such attribute support, I think turning certain warnings\ninto pedwarns for usage in cases where that is a constraint violation\ncan be addressed later as a bug fix, as can the C2x constraint for\nvarious standard attributes that they do not appear more than once\ninside a single [[]].\n\nHowever, the warnings that appear in c2x-attr-maybe_unused-1.c (that\nthe attribute is ignored on member declarations) need to remain as\nwarnings not pedwarns, since C2x does permit the attribute there.  (Or\nthey could be silenced, on the basis that GCC doesn't have warnings\nfor unused struct and union members so it's completely harmless that\nit's ignoring an attribute that might do something useful with another\ncompiler that does have such warnings.)\n\nBootstrapped with no regressions on x86_64-pc-linux-gnu.\n\ngcc/c:\n\t* c-decl.c (std_attribute_table): Add maybe_unused.\n\ngcc/testsuite:\n\t* gcc.dg/c2x-attr-maybe_unused-1.c,\n\tgcc.dg/c2x-attr-maybe_unused-2.c,\n\tgcc.dg/c2x-attr-maybe_unused-3.c: New tests.\n\nFrom-SVN: r278310", "tree": {"sha": "c0b8023fcc02ba1d811307c9478303e4dd99badc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0b8023fcc02ba1d811307c9478303e4dd99badc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97cc11871e39888bfca4ed4bf09fa09fe0916266", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97cc11871e39888bfca4ed4bf09fa09fe0916266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97cc11871e39888bfca4ed4bf09fa09fe0916266", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97cc11871e39888bfca4ed4bf09fa09fe0916266/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a91eb2341f6a0ae5700e0f09ccb8b561f35cb0f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a91eb2341f6a0ae5700e0f09ccb8b561f35cb0f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a91eb2341f6a0ae5700e0f09ccb8b561f35cb0f8"}], "stats": {"total": 79, "additions": 79, "deletions": 0}, "files": [{"sha": "75a44e289278f34a425367036bc080351ccf25f7", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97cc11871e39888bfca4ed4bf09fa09fe0916266/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97cc11871e39888bfca4ed4bf09fa09fe0916266/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=97cc11871e39888bfca4ed4bf09fa09fe0916266", "patch": "@@ -1,3 +1,7 @@\n+2019-11-15  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-decl.c (std_attribute_table): Add maybe_unused.\n+\n 2019-11-15  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-decl.c (std_attribute_table): Add fallthrough."}, {"sha": "cb6169c464245096617a0a7349818706bd28ad23", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97cc11871e39888bfca4ed4bf09fa09fe0916266/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97cc11871e39888bfca4ed4bf09fa09fe0916266/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=97cc11871e39888bfca4ed4bf09fa09fe0916266", "patch": "@@ -4345,6 +4345,8 @@ const struct attribute_spec std_attribute_table[] =\n     handle_deprecated_attribute, NULL },\n   { \"fallthrough\", 0, 0, false, false, false, false,\n     handle_fallthrough_attribute, NULL },\n+  { \"maybe_unused\", 0, 0, false, false, false, false,\n+    handle_unused_attribute, NULL },\n   { NULL, 0, 0, false, false, false, false, NULL, NULL }\n };\n "}, {"sha": "8473e7a219e9c601b890f38a53a56d1f9a61e0da", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97cc11871e39888bfca4ed4bf09fa09fe0916266/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97cc11871e39888bfca4ed4bf09fa09fe0916266/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=97cc11871e39888bfca4ed4bf09fa09fe0916266", "patch": "@@ -1,3 +1,9 @@\n+2019-11-15  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/c2x-attr-maybe_unused-1.c,\n+\tgcc.dg/c2x-attr-maybe_unused-2.c,\n+\tgcc.dg/c2x-attr-maybe_unused-3.c: New tests.\n+\n 2019-11-15  Matthew Malcomson  <matthew.malcomson@arm.com>\n \n \t* gcc.dg/rtl/aarch64/rtl-handle-column-numbers.c: New test."}, {"sha": "221ebdd19b86b89912a50bde255f950674248ea6", "filename": "gcc/testsuite/gcc.dg/c2x-attr-maybe_unused-1.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97cc11871e39888bfca4ed4bf09fa09fe0916266/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-maybe_unused-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97cc11871e39888bfca4ed4bf09fa09fe0916266/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-maybe_unused-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-maybe_unused-1.c?ref=97cc11871e39888bfca4ed4bf09fa09fe0916266", "patch": "@@ -0,0 +1,31 @@\n+/* Test C2x maybe_unused attribute: valid uses.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c2x -pedantic-errors -Wall -Wextra -Wunused\" } */\n+\n+[[maybe_unused]] static void f1 (void) {}\n+\n+[[__maybe_unused__]] const int c1 = 1;\n+static int c2 [[maybe_unused]] = 2;\n+\n+int\n+g ([[maybe_unused]] int x, int y)\n+{\n+  [[maybe_unused]] typedef float F;\n+  [[maybe_unused]] int a;\n+  int b [[__maybe_unused__]];\n+  int c [[maybe_unused]];\n+  c = y;\n+  return y;\n+}\n+\n+struct [[maybe_unused]] s { double d; };\n+\n+struct s2 { [[__maybe_unused__]] int a; int b [[maybe_unused]]; } x; /* { dg-warning \"attribute ignored\" } */\n+\n+enum e { E1 [[maybe_unused]] };\n+\n+union [[maybe_unused]] u { int x; };\n+\n+enum [[maybe_unused]] eu { E2 };\n+\n+union u2 { [[maybe_unused]] int a; int b [[maybe_unused]]; } y; /* { dg-warning \"attribute ignored\" } */"}, {"sha": "9b5055bad480ef3fb2a2d2e30d19d39b1384d90c", "filename": "gcc/testsuite/gcc.dg/c2x-attr-maybe_unused-2.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97cc11871e39888bfca4ed4bf09fa09fe0916266/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-maybe_unused-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97cc11871e39888bfca4ed4bf09fa09fe0916266/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-maybe_unused-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-maybe_unused-2.c?ref=97cc11871e39888bfca4ed4bf09fa09fe0916266", "patch": "@@ -0,0 +1,25 @@\n+/* Test C2x maybe_unused attribute: invalid contexts.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c2x -pedantic-errors\" } */\n+\n+/* This attribute is not valid in most cases on types other than their\n+   definitions, or on statements, or as an attribute-declaration.  */\n+\n+[[maybe_unused]]; /* { dg-warning \"ignored\" } */\n+\n+int [[maybe_unused]] var; /* { dg-warning \"ignored\" } */\n+/* { dg-message \"that appertains to a type-specifier\" \"appertains\" { target *-*-* } .-1 } */\n+\n+int array_with_dep_type[2] [[maybe_unused]]; /* { dg-warning \"ignored\" } */\n+/* { dg-message \"that appertains to a type-specifier\" \"appertains\" { target *-*-* } .-1 } */\n+\n+void fn_with_dep_type () [[maybe_unused]]; /* { dg-warning \"ignored\" } */\n+/* { dg-message \"that appertains to a type-specifier\" \"appertains\" { target *-*-* } .-1 } */\n+\n+void\n+f (void)\n+{\n+  int a;\n+  [[maybe_unused]]; /* { dg-warning \"ignored\" } */\n+  [[maybe_unused]] a = 1; /* { dg-warning \"ignored\" } */\n+}"}, {"sha": "4d4da0867c26c120c40d13d2ddb55448cd7f6122", "filename": "gcc/testsuite/gcc.dg/c2x-attr-maybe_unused-3.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97cc11871e39888bfca4ed4bf09fa09fe0916266/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-maybe_unused-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97cc11871e39888bfca4ed4bf09fa09fe0916266/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-maybe_unused-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-maybe_unused-3.c?ref=97cc11871e39888bfca4ed4bf09fa09fe0916266", "patch": "@@ -0,0 +1,11 @@\n+/* Test C2x maybe_unused attribute: invalid syntax.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c2x -pedantic-errors\" } */\n+\n+[[maybe_unused()]] int a; /* { dg-error \"does not take any arguments\" } */\n+\n+[[maybe_unused(0)]] int b; /* { dg-error \"does not take any arguments|expected\" } */\n+\n+[[maybe_unused(\"\", 123)]] int c; /* { dg-error \"does not take any arguments|expected\" } */\n+\n+[[maybe_unused(\"\")]] int d; /* { dg-error \"does not take any arguments|expected\" } */"}]}