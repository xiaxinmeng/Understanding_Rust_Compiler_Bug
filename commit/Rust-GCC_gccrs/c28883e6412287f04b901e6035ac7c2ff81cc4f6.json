{"sha": "c28883e6412287f04b901e6035ac7c2ff81cc4f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI4ODgzZTY0MTIyODdmMDRiOTAxZTYwMzVhYzdjMmZmODFjYzRmNg==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2010-09-14T07:26:54Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2010-09-14T07:26:54Z"}, "message": "re PR target/44749 (mep-elf fails to build)\n\nPR target/44749\n* config/mep/mep-protos.h (mep_save_register_info,\nmep_reinit_regs, mep_init_regs): Declare.\n\n* config/mep/mep.c: Move all target definitions to the end of the\nfile to avoid the need for duplicate declarations.\n(mep_save_register_info, mep_reinit_regs, mep_init_regs): New.\n(mep_reorg_erepeat): Remove unused variables.\n(mep_expand_builtin): Likewise.\n\n* config/mep/mep-pragma.c: Don't include rtl.h.\n(INVALID_REGNUM): New.\n(mep_pragma_coprocessor_which): Call mep-specific rtl-layer bridge\nfunctions.\n(mep_pragma_coprocessor_subclass): Rename \"class\" to \"rclass\".\nAvoid enum/integer math.\n\nFrom-SVN: r164268", "tree": {"sha": "a88645b0e868f78751fe7ce60585d9b0f8631518", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a88645b0e868f78751fe7ce60585d9b0f8631518"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c28883e6412287f04b901e6035ac7c2ff81cc4f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c28883e6412287f04b901e6035ac7c2ff81cc4f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c28883e6412287f04b901e6035ac7c2ff81cc4f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c28883e6412287f04b901e6035ac7c2ff81cc4f6/comments", "author": null, "committer": null, "parents": [{"sha": "927b02e5f88b8eb684ddb057dca8e723ceb227a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/927b02e5f88b8eb684ddb057dca8e723ceb227a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/927b02e5f88b8eb684ddb057dca8e723ceb227a9"}], "stats": {"total": 252, "additions": 159, "deletions": 93}, "files": [{"sha": "8a42db2adebdd2564d72e2fb038e11c8b01c5a67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c28883e6412287f04b901e6035ac7c2ff81cc4f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c28883e6412287f04b901e6035ac7c2ff81cc4f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c28883e6412287f04b901e6035ac7c2ff81cc4f6", "patch": "@@ -1,3 +1,22 @@\n+2010-09-14  DJ Delorie  <dj@redhat.com>\n+\n+\tPR target/44749\n+\t* config/mep/mep-protos.h (mep_save_register_info,\n+\tmep_reinit_regs, mep_init_regs): Declare.\n+\n+\t* config/mep/mep.c: Move all target definitions to the end of the\n+\tfile to avoid the need for duplicate declarations.\n+\t(mep_save_register_info, mep_reinit_regs, mep_init_regs): New.\n+\t(mep_reorg_erepeat): Remove unused variables.\n+\t(mep_expand_builtin): Likewise.\n+\n+\t* config/mep/mep-pragma.c: Don't include rtl.h.\n+\t(INVALID_REGNUM): New.\n+\t(mep_pragma_coprocessor_which): Call mep-specific rtl-layer bridge\n+\tfunctions.\n+\t(mep_pragma_coprocessor_subclass): Rename \"class\" to \"rclass\".\n+\tAvoid enum/integer math.\n+\n 2010-09-13  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR target/44749"}, {"sha": "1c9651a0699859fe1b2b541c8edad5108cbfad9c", "filename": "gcc/config/mep/mep-pragma.c", "status": "modified", "additions": 29, "deletions": 8, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c28883e6412287f04b901e6035ac7c2ff81cc4f6/gcc%2Fconfig%2Fmep%2Fmep-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c28883e6412287f04b901e6035ac7c2ff81cc4f6/gcc%2Fconfig%2Fmep%2Fmep-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep-pragma.c?ref=c28883e6412287f04b901e6035ac7c2ff81cc4f6", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"diagnostic-core.h\"\n #include \"toplev.h\"\n #include \"c-family/c-pragma.h\"\n@@ -39,6 +38,14 @@ along with GCC; see the file COPYING3.  If not see\n \n enum cw_which { CW_AVAILABLE, CW_CALL_SAVED };\n \n+/* This is normally provided by rtl.h but we can't include that file\n+   here.  It's safe to copy the definition here because we're only\n+   using it internally; the value isn't passed to functions outside\n+   this file.  */\n+#ifndef INVALID_REGNUM\n+#define INVALID_REGNUM                    (~(unsigned int) 0)\n+#endif\n+\n static enum cpp_ttype\n mep_pragma_lex (tree *valp)\n {\n@@ -201,8 +208,8 @@ mep_pragma_coprocessor_which (enum cw_which cw_which)\n     }\n \n   /* Fix up register class hierarchy.  */\n-  save_register_info ();\n-  reinit_regs ();\n+  mep_save_register_info ();\n+  mep_reinit_regs ();\n \n   if (cfun == 0)\n     {\n@@ -263,20 +270,34 @@ mep_pragma_coprocessor_subclass (void)\n   enum cpp_ttype type;\n   HARD_REG_SET set;\n   int class_letter;\n-  enum reg_class class;\n+  enum reg_class rclass;\n \n   type = mep_pragma_lex (&val);\n   if (type != CPP_CHAR)\n     goto syntax_error;\n   class_letter = tree_low_cst (val, 1);\n   if (class_letter >= 'A' && class_letter <= 'D')\n-    class = class_letter - 'A' + USER0_REGS;\n+    switch (class_letter)\n+      {\n+      case 'A':\n+\trclass = USER0_REGS;\n+\tbreak;\n+      case 'B':\n+\trclass = USER1_REGS;\n+\tbreak;\n+      case 'C':\n+\trclass = USER2_REGS;\n+\tbreak;\n+      case 'D':\n+\trclass = USER3_REGS;\n+\tbreak;\n+      }\n   else\n     {\n       error (\"#pragma GCC coprocessor subclass letter must be in [ABCD]\");\n       return;\n     }\n-  if (reg_class_size[class] > 0)\n+  if (reg_class_size[rclass] > 0)\n     {\n       error (\"#pragma GCC coprocessor subclass '%c' already defined\",\n \t     class_letter);\n@@ -291,8 +312,8 @@ mep_pragma_coprocessor_subclass (void)\n     return;\n \n   /* Fix up register class hierarchy.  */\n-  COPY_HARD_REG_SET (reg_class_contents[class], set);\n-  init_regs ();\n+  COPY_HARD_REG_SET (reg_class_contents[rclass], set);\n+  mep_init_regs ();\n   return;\n \n  syntax_error:"}, {"sha": "ed8facd23fb495379ce650b6f45d8c233c6e59d4", "filename": "gcc/config/mep/mep-protos.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c28883e6412287f04b901e6035ac7c2ff81cc4f6/gcc%2Fconfig%2Fmep%2Fmep-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c28883e6412287f04b901e6035ac7c2ff81cc4f6/gcc%2Fconfig%2Fmep%2Fmep-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep-protos.h?ref=c28883e6412287f04b901e6035ac7c2ff81cc4f6", "patch": "@@ -108,6 +108,14 @@ extern bool mep_have_copro_copro_moves_p;\n extern bool mep_cannot_change_mode_class (enum machine_mode, enum machine_mode,\n \t\t\t\t\t  enum reg_class);\n \n+/* These are called from mep-pragmas (front end) and then call into\n+   the RTL layer to re-initialize the register tables once we're done\n+   changing them via pragmas.  */\n+extern void mep_save_register_info (void);\n+extern void mep_reinit_regs (void);\n+extern void mep_init_regs (void);\n+\n+\n extern int cgen_h_uint_6a1_immediate (rtx, enum machine_mode);\n extern int cgen_h_uint_7a1_immediate (rtx, enum machine_mode);\n extern int cgen_h_uint_8a1_immediate (rtx, enum machine_mode);"}, {"sha": "7fdb5382d6523862011a96743e6f48c59697dda8", "filename": "gcc/config/mep/mep.c", "status": "modified", "additions": 103, "deletions": 85, "changes": 188, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c28883e6412287f04b901e6035ac7c2ff81cc4f6/gcc%2Fconfig%2Fmep%2Fmep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c28883e6412287f04b901e6035ac7c2ff81cc4f6/gcc%2Fconfig%2Fmep%2Fmep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.c?ref=c28883e6412287f04b901e6035ac7c2ff81cc4f6", "patch": "@@ -122,8 +122,6 @@ struct GTY(()) machine_function\n #define MEP_CONTROL_REG(x) \\\n   (GET_CODE (x) == REG && ANY_CONTROL_REGNO_P (REGNO (x)))\n \n-static const struct attribute_spec mep_attribute_table[11];\n-\n static GTY(()) section * based_section;\n static GTY(()) section * tinybss_section;\n static GTY(()) section * far_section;\n@@ -231,83 +229,6 @@ static tree mep_gimplify_va_arg_expr (tree, tree, gimple_seq *, gimple_seq *);\n static bool mep_can_eliminate (const int, const int);\n static void mep_trampoline_init (rtx, tree, rtx);\n \f\n-/* Initialize the GCC target structure.  */\n-\n-#undef  TARGET_ASM_FUNCTION_PROLOGUE\n-#define TARGET_ASM_FUNCTION_PROLOGUE\tmep_start_function\n-#undef  TARGET_ATTRIBUTE_TABLE\n-#define TARGET_ATTRIBUTE_TABLE\t\tmep_attribute_table\n-#undef  TARGET_COMP_TYPE_ATTRIBUTES\n-#define TARGET_COMP_TYPE_ATTRIBUTES\tmep_comp_type_attributes\n-#undef  TARGET_INSERT_ATTRIBUTES\n-#define TARGET_INSERT_ATTRIBUTES\tmep_insert_attributes\n-#undef  TARGET_FUNCTION_ATTRIBUTE_INLINABLE_P\n-#define TARGET_FUNCTION_ATTRIBUTE_INLINABLE_P\tmep_function_attribute_inlinable_p\n-#undef  TARGET_CAN_INLINE_P\n-#define TARGET_CAN_INLINE_P\t\tmep_can_inline_p\n-#undef  TARGET_SECTION_TYPE_FLAGS\n-#define TARGET_SECTION_TYPE_FLAGS\tmep_section_type_flags\n-#undef  TARGET_ASM_NAMED_SECTION\n-#define TARGET_ASM_NAMED_SECTION\tmep_asm_named_section\n-#undef  TARGET_INIT_BUILTINS\n-#define TARGET_INIT_BUILTINS\t\tmep_init_builtins\n-#undef  TARGET_EXPAND_BUILTIN\n-#define TARGET_EXPAND_BUILTIN\t\tmep_expand_builtin\n-#undef  TARGET_SCHED_ADJUST_COST\n-#define TARGET_SCHED_ADJUST_COST\tmep_adjust_cost\n-#undef  TARGET_SCHED_ISSUE_RATE\n-#define TARGET_SCHED_ISSUE_RATE\t\tmep_issue_rate\n-#undef  TARGET_SCHED_REORDER\n-#define TARGET_SCHED_REORDER\t\tmep_sched_reorder\n-#undef  TARGET_STRIP_NAME_ENCODING\n-#define TARGET_STRIP_NAME_ENCODING\tmep_strip_name_encoding\n-#undef  TARGET_ASM_SELECT_SECTION\n-#define TARGET_ASM_SELECT_SECTION\tmep_select_section\n-#undef  TARGET_ASM_UNIQUE_SECTION\n-#define TARGET_ASM_UNIQUE_SECTION\tmep_unique_section\n-#undef  TARGET_ENCODE_SECTION_INFO\n-#define TARGET_ENCODE_SECTION_INFO\tmep_encode_section_info\n-#undef  TARGET_FUNCTION_OK_FOR_SIBCALL\n-#define TARGET_FUNCTION_OK_FOR_SIBCALL\tmep_function_ok_for_sibcall\n-#undef  TARGET_RTX_COSTS\n-#define TARGET_RTX_COSTS\t\tmep_rtx_cost\n-#undef  TARGET_ADDRESS_COST\n-#define TARGET_ADDRESS_COST \t\tmep_address_cost\n-#undef  TARGET_MACHINE_DEPENDENT_REORG\n-#define TARGET_MACHINE_DEPENDENT_REORG  mep_reorg\n-#undef  TARGET_SETUP_INCOMING_VARARGS\n-#define TARGET_SETUP_INCOMING_VARARGS\tmep_setup_incoming_varargs\n-#undef  TARGET_PASS_BY_REFERENCE\n-#define TARGET_PASS_BY_REFERENCE        mep_pass_by_reference\n-#undef  TARGET_VECTOR_MODE_SUPPORTED_P\n-#define TARGET_VECTOR_MODE_SUPPORTED_P\tmep_vector_mode_supported_p\n-#undef  TARGET_HANDLE_OPTION\n-#define TARGET_HANDLE_OPTION            mep_handle_option\n-#undef  TARGET_DEFAULT_TARGET_FLAGS\n-#define TARGET_DEFAULT_TARGET_FLAGS\tTARGET_DEFAULT\n-#undef  TARGET_ALLOCATE_INITIAL_VALUE\n-#define TARGET_ALLOCATE_INITIAL_VALUE   mep_allocate_initial_value\n-#undef  TARGET_ASM_INIT_SECTIONS\n-#define TARGET_ASM_INIT_SECTIONS \tmep_asm_init_sections\n-#undef  TARGET_RETURN_IN_MEMORY\n-#define TARGET_RETURN_IN_MEMORY\t\tmep_return_in_memory\n-#undef  TARGET_NARROW_VOLATILE_BITFIELD\n-#define TARGET_NARROW_VOLATILE_BITFIELD mep_narrow_volatile_bitfield\n-#undef\tTARGET_EXPAND_BUILTIN_SAVEREGS\n-#define\tTARGET_EXPAND_BUILTIN_SAVEREGS\tmep_expand_builtin_saveregs\n-#undef  TARGET_BUILD_BUILTIN_VA_LIST\n-#define TARGET_BUILD_BUILTIN_VA_LIST\tmep_build_builtin_va_list\n-#undef  TARGET_EXPAND_BUILTIN_VA_START\n-#define TARGET_EXPAND_BUILTIN_VA_START\tmep_expand_va_start\n-#undef\tTARGET_GIMPLIFY_VA_ARG_EXPR\n-#define\tTARGET_GIMPLIFY_VA_ARG_EXPR\tmep_gimplify_va_arg_expr\n-#undef  TARGET_CAN_ELIMINATE\n-#define TARGET_CAN_ELIMINATE            mep_can_eliminate\n-#undef  TARGET_TRAMPOLINE_INIT\n-#define TARGET_TRAMPOLINE_INIT\t\tmep_trampoline_init\n-\n-struct gcc_target targetm = TARGET_INITIALIZER;\n-\f\n #define WANT_GCC_DEFINITIONS\n #include \"mep-intrin.h\"\n #undef WANT_GCC_DEFINITIONS\n@@ -4302,6 +4223,30 @@ mep_file_cleanups (void)\n   if (pragma_htab)\n     htab_traverse (pragma_htab, note_unused_pragma_disinterrupt, NULL);\n }\n+\n+/* These three functions provide a bridge between the pramgas that\n+   affect register classes, and the functions that maintain them.  We\n+   can't call those functions directly as pragma handling is part of\n+   the front end and doesn't have direct access to them.  */\n+\n+void\n+mep_save_register_info (void)\n+{\n+  save_register_info ();\n+}\n+\n+void\n+mep_reinit_regs (void)\n+{\n+  reinit_regs ();\n+}\n+\n+void\n+mep_init_regs (void)\n+{\n+  init_regs ();\n+}\n+\n      \n \n static int\n@@ -5629,7 +5574,7 @@ mep_invert_branch (rtx insn, rtx after)\n static void\n mep_reorg_erepeat (rtx insns)\n {\n-  rtx insn, prev, label_before, l, x;\n+  rtx insn, prev, l, x;\n   int count;\n \n   for (insn = insns; insn; insn = NEXT_INSN (insn))\n@@ -5644,7 +5589,6 @@ mep_reorg_erepeat (rtx insns)\n \t    print_rtl_single (dump_file, insn);\n \t  }\n \tcount = simplejump_p (insn) ? 0 : 1;\n-\tlabel_before = 0;\n \tfor (prev = PREV_INSN (insn); prev; prev = PREV_INSN (prev))\n \t  {\n \t    if (GET_CODE (prev) == CALL_INSN\n@@ -5733,8 +5677,6 @@ mep_reorg_erepeat (rtx insns)\n \t    if (INSN_P (prev))\n \t      {\n \t\tcount ++;\n-\t\tif (count == 2)\n-\t\t  label_before = prev;\n \t      }\n \t  }\n       }\n@@ -6332,7 +6274,6 @@ mep_expand_builtin (tree exp, rtx target ATTRIBUTE_UNUSED,\n   const struct cgen_insn *cgen_insn;\n   const struct insn_data_d *idata;\n   unsigned int first_arg = 0;\n-  tree return_type = void_type_node;\n   unsigned int builtin_n_args;\n \n   fndecl = TREE_OPERAND (CALL_EXPR_FN (exp), 0);\n@@ -6354,7 +6295,7 @@ mep_expand_builtin (tree exp, rtx target ATTRIBUTE_UNUSED,\n       if (cgen_insn->cret_p > 1)\n \tbuiltin_n_args ++;\n       first_arg = 1;\n-      return_type = mep_cgen_regnum_to_type (cgen_insn->regnums[0].type);\n+      mep_cgen_regnum_to_type (cgen_insn->regnums[0].type);\n       builtin_n_args --;\n     }\n \n@@ -7415,5 +7356,82 @@ mep_asm_init_sections (void)\n \t\t\t   \"\\t.section .ftext,\\\"ax\\\"\\n\\t.core\");\n \n }\n+\f\n+/* Initialize the GCC target structure.  */\n+\n+#undef  TARGET_ASM_FUNCTION_PROLOGUE\n+#define TARGET_ASM_FUNCTION_PROLOGUE\tmep_start_function\n+#undef  TARGET_ATTRIBUTE_TABLE\n+#define TARGET_ATTRIBUTE_TABLE\t\tmep_attribute_table\n+#undef  TARGET_COMP_TYPE_ATTRIBUTES\n+#define TARGET_COMP_TYPE_ATTRIBUTES\tmep_comp_type_attributes\n+#undef  TARGET_INSERT_ATTRIBUTES\n+#define TARGET_INSERT_ATTRIBUTES\tmep_insert_attributes\n+#undef  TARGET_FUNCTION_ATTRIBUTE_INLINABLE_P\n+#define TARGET_FUNCTION_ATTRIBUTE_INLINABLE_P\tmep_function_attribute_inlinable_p\n+#undef  TARGET_CAN_INLINE_P\n+#define TARGET_CAN_INLINE_P\t\tmep_can_inline_p\n+#undef  TARGET_SECTION_TYPE_FLAGS\n+#define TARGET_SECTION_TYPE_FLAGS\tmep_section_type_flags\n+#undef  TARGET_ASM_NAMED_SECTION\n+#define TARGET_ASM_NAMED_SECTION\tmep_asm_named_section\n+#undef  TARGET_INIT_BUILTINS\n+#define TARGET_INIT_BUILTINS\t\tmep_init_builtins\n+#undef  TARGET_EXPAND_BUILTIN\n+#define TARGET_EXPAND_BUILTIN\t\tmep_expand_builtin\n+#undef  TARGET_SCHED_ADJUST_COST\n+#define TARGET_SCHED_ADJUST_COST\tmep_adjust_cost\n+#undef  TARGET_SCHED_ISSUE_RATE\n+#define TARGET_SCHED_ISSUE_RATE\t\tmep_issue_rate\n+#undef  TARGET_SCHED_REORDER\n+#define TARGET_SCHED_REORDER\t\tmep_sched_reorder\n+#undef  TARGET_STRIP_NAME_ENCODING\n+#define TARGET_STRIP_NAME_ENCODING\tmep_strip_name_encoding\n+#undef  TARGET_ASM_SELECT_SECTION\n+#define TARGET_ASM_SELECT_SECTION\tmep_select_section\n+#undef  TARGET_ASM_UNIQUE_SECTION\n+#define TARGET_ASM_UNIQUE_SECTION\tmep_unique_section\n+#undef  TARGET_ENCODE_SECTION_INFO\n+#define TARGET_ENCODE_SECTION_INFO\tmep_encode_section_info\n+#undef  TARGET_FUNCTION_OK_FOR_SIBCALL\n+#define TARGET_FUNCTION_OK_FOR_SIBCALL\tmep_function_ok_for_sibcall\n+#undef  TARGET_RTX_COSTS\n+#define TARGET_RTX_COSTS\t\tmep_rtx_cost\n+#undef  TARGET_ADDRESS_COST\n+#define TARGET_ADDRESS_COST \t\tmep_address_cost\n+#undef  TARGET_MACHINE_DEPENDENT_REORG\n+#define TARGET_MACHINE_DEPENDENT_REORG  mep_reorg\n+#undef  TARGET_SETUP_INCOMING_VARARGS\n+#define TARGET_SETUP_INCOMING_VARARGS\tmep_setup_incoming_varargs\n+#undef  TARGET_PASS_BY_REFERENCE\n+#define TARGET_PASS_BY_REFERENCE        mep_pass_by_reference\n+#undef  TARGET_VECTOR_MODE_SUPPORTED_P\n+#define TARGET_VECTOR_MODE_SUPPORTED_P\tmep_vector_mode_supported_p\n+#undef  TARGET_HANDLE_OPTION\n+#define TARGET_HANDLE_OPTION            mep_handle_option\n+#undef  TARGET_DEFAULT_TARGET_FLAGS\n+#define TARGET_DEFAULT_TARGET_FLAGS\tTARGET_DEFAULT\n+#undef  TARGET_ALLOCATE_INITIAL_VALUE\n+#define TARGET_ALLOCATE_INITIAL_VALUE   mep_allocate_initial_value\n+#undef  TARGET_ASM_INIT_SECTIONS\n+#define TARGET_ASM_INIT_SECTIONS \tmep_asm_init_sections\n+#undef  TARGET_RETURN_IN_MEMORY\n+#define TARGET_RETURN_IN_MEMORY\t\tmep_return_in_memory\n+#undef  TARGET_NARROW_VOLATILE_BITFIELD\n+#define TARGET_NARROW_VOLATILE_BITFIELD mep_narrow_volatile_bitfield\n+#undef\tTARGET_EXPAND_BUILTIN_SAVEREGS\n+#define\tTARGET_EXPAND_BUILTIN_SAVEREGS\tmep_expand_builtin_saveregs\n+#undef  TARGET_BUILD_BUILTIN_VA_LIST\n+#define TARGET_BUILD_BUILTIN_VA_LIST\tmep_build_builtin_va_list\n+#undef  TARGET_EXPAND_BUILTIN_VA_START\n+#define TARGET_EXPAND_BUILTIN_VA_START\tmep_expand_va_start\n+#undef\tTARGET_GIMPLIFY_VA_ARG_EXPR\n+#define\tTARGET_GIMPLIFY_VA_ARG_EXPR\tmep_gimplify_va_arg_expr\n+#undef  TARGET_CAN_ELIMINATE\n+#define TARGET_CAN_ELIMINATE            mep_can_eliminate\n+#undef  TARGET_TRAMPOLINE_INIT\n+#define TARGET_TRAMPOLINE_INIT\t\tmep_trampoline_init\n+\n+struct gcc_target targetm = TARGET_INITIALIZER;\n \n #include \"gt-mep.h\""}]}