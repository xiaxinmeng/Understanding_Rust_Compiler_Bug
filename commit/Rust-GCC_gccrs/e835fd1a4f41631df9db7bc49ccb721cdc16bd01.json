{"sha": "e835fd1a4f41631df9db7bc49ccb721cdc16bd01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgzNWZkMWE0ZjQxNjMxZGY5ZGI3YmM0OWNjYjcyMWNkYzE2YmQwMQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@geoffk.org", "date": "2008-11-27T23:37:51Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2008-11-27T23:37:51Z"}, "message": "* mkindex.pl: New.\n\nFrom-SVN: r142251", "tree": {"sha": "ce4c49396cce935920e8cd0fcbec833b8646c2ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce4c49396cce935920e8cd0fcbec833b8646c2ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e835fd1a4f41631df9db7bc49ccb721cdc16bd01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e835fd1a4f41631df9db7bc49ccb721cdc16bd01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e835fd1a4f41631df9db7bc49ccb721cdc16bd01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e835fd1a4f41631df9db7bc49ccb721cdc16bd01/comments", "author": {"login": "geoffk02", "id": 34037634, "node_id": "MDQ6VXNlcjM0MDM3NjM0", "avatar_url": "https://avatars.githubusercontent.com/u/34037634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk02", "html_url": "https://github.com/geoffk02", "followers_url": "https://api.github.com/users/geoffk02/followers", "following_url": "https://api.github.com/users/geoffk02/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk02/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk02/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk02/subscriptions", "organizations_url": "https://api.github.com/users/geoffk02/orgs", "repos_url": "https://api.github.com/users/geoffk02/repos", "events_url": "https://api.github.com/users/geoffk02/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk02/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2ddc34ba077d7c0eff279688c236ba4eaaa79538", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ddc34ba077d7c0eff279688c236ba4eaaa79538", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ddc34ba077d7c0eff279688c236ba4eaaa79538"}], "stats": {"total": 111, "additions": 111, "deletions": 0}, "files": [{"sha": "2b4939b5b00e0b56975f0e4c39e54584fd764b18", "filename": "contrib/regression/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e835fd1a4f41631df9db7bc49ccb721cdc16bd01/contrib%2Fregression%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e835fd1a4f41631df9db7bc49ccb721cdc16bd01/contrib%2Fregression%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fregression%2FChangeLog?ref=e835fd1a4f41631df9db7bc49ccb721cdc16bd01", "patch": "@@ -1,3 +1,7 @@\n+2008-11-27  Geoff Keating  <geoffk@geoffk.org>\n+\n+\t* mkindex.pl: New.\n+\n 2007-12-24  Geoff Keating  <geoffk@geoffk.org>\n \n \t* objs-gcc.sh: Revert previous change."}, {"sha": "46e11069f09e1d77547e27b697628b65830c5312", "filename": "contrib/regression/mkindex.pl", "status": "added", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e835fd1a4f41631df9db7bc49ccb721cdc16bd01/contrib%2Fregression%2Fmkindex.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e835fd1a4f41631df9db7bc49ccb721cdc16bd01/contrib%2Fregression%2Fmkindex.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fregression%2Fmkindex.pl?ref=e835fd1a4f41631df9db7bc49ccb721cdc16bd01", "patch": "@@ -0,0 +1,107 @@\n+#!/usr/bin/perl\n+\n+# Copy log files from a GCC build for HTTP access.\n+# Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+# \n+# This program is free software: you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation, either version 3 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# INPUT:\n+# mkindex.pl <srcdir> <destdir> <branchname>\n+\n+# This script copies log files from a GCC build directory, compresses\n+# and indexes them for web browser access.  It's aimed at having an\n+# easy-to-access collection of files for analyzing regressions without\n+# needing to run the build yourself.  Binary files (.o, executables)\n+# are intentionally not included since usually if they are needed it's\n+# better to just run a build, and because they take up a lot of space.\n+\n+# 'srcdir' is the root directory of a GCC build (was $objdir in the build).\n+# 'destdir' will be erased and replaced with the log files, and should be an\n+#   absolute path.\n+# 'branchname' is used only to produce the title of the index page,\n+#   which will be named 'index.html'.\n+\n+use warnings;\n+use strict;\n+use File::Path qw(mkpath rmtree);\n+use File::Find qw(find);\n+\n+if ($#ARGV != 2) {\n+    print \"usage: $0 <srcdir> <destdir> <branchname>\\n\";\n+    exit 1;\n+}\n+\n+my ($srcdir, $destdir, $branchname) = @ARGV;\n+die \"destdir is not absolute\" unless ($destdir =~ m,^/,);\n+\n+# Erase the destination.\n+rmtree $destdir;\n+mkdir $destdir or die \"${destdir}: $!\";\n+\n+# Copy and compress the files into the destination, and keep a list in @files.\n+my @files = ();\n+sub my_wanted {\n+    # Copy all files ending with .log or .sum.\n+    if (/\\.(log|sum)$/ && -f) {\n+\n+\tdie unless (substr ($File::Find::dir,0,(length $srcdir)) eq $srcdir);\n+\tmy $dir = substr $File::Find::dir,(length $srcdir);\n+\t$dir = substr $dir,1 unless ($dir eq '');\n+\tmy $name = $_;\n+\t$name = $dir . '/' . $_ if ($dir ne '');\n+\n+\tmkpath $destdir . '/' . $dir;\n+\t# Compress the files.  Use .gzip instead of .gz for the\n+\t# extension to avoid (broken) browser workarounds for broken\n+\t# web servers.\n+\tsystem (\"gzip -c -q -9 $_ > $destdir/${name}.gzip\") == 0 or exit 2;\n+\n+\t# Write the (compressed) size consistently in Kbytes.\n+\tmy $size = -s $destdir .'/' . $name . '.gzip';\n+\tmy $printable_size = (sprintf \"%.0fK\",$size / 1024);\n+\n+\tpush @files,[$name.'.gzip',$name,$printable_size];\n+    }\n+}\n+find ({wanted => \\&my_wanted}, $srcdir);\n+\n+# Sort the list of files for the index.\n+@files = sort {$a->[1] cmp $b->[1]} @files;\n+\n+# Create the index.\n+open INDEX,'>',$destdir . '/index.html' or die \"${destdir}/index.html: $!\";\n+# Use strict XHTML 1.0, and set charset to UTF-8.\n+print INDEX <<EOF or die \"writing index: $!\";\n+<!DOCTYPE html\n+     PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n+     \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n+<head>\n+ <title>Log files for $branchname</title>\n+ <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\" />\n+</head>\n+<body>\n+<h1>Log files for $branchname</h1>\n+<table><tr><th>Name</th><th align='right'>Size</th></tr>\n+EOF\n+# The index will have two columns, filename (without .gzip) and\n+# compressed size.\n+foreach my $f (@files) {\n+    printf INDEX \"<tr><td><a href=\\\"%s\\\">%s</a></td><td align=\\'right\\'>%s</td></tr>\\n\",\n+\t$f->[0], $f->[1], $f->[2] or die \"writing index: $!\";\n+}\n+\n+print INDEX \"</table></body></html>\\n\" or die \"writing index: $!\";\n+close INDEX or die \"writing index: $!\";\n+exit 0;"}]}