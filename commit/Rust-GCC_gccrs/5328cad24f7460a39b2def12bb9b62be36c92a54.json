{"sha": "5328cad24f7460a39b2def12bb9b62be36c92a54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMyOGNhZDI0Zjc0NjBhMzliMmRlZjEyYmI5YjYyYmUzNmM5MmE1NA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-06-04T17:21:51Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-06-04T17:22:39Z"}, "message": "PR c/100783 - ICE on -Wnonnull and erroneous type\n\ngcc/c-family/ChangeLog:\n\n\tPR c/100783\n\t* c-attribs.c (positional_argument): Bail on erroneous types.\n\ngcc/c/ChangeLog:\n\n\tPR c/100783\n\t* c-objc-common.c (print_type): Handle erroneous types.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c/100783\n\t* gcc.dg/nonnull-6.c: New test.", "tree": {"sha": "eea3fc47111af29ca1c9c87cfa106d41e5e7dd4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eea3fc47111af29ca1c9c87cfa106d41e5e7dd4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5328cad24f7460a39b2def12bb9b62be36c92a54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5328cad24f7460a39b2def12bb9b62be36c92a54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5328cad24f7460a39b2def12bb9b62be36c92a54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5328cad24f7460a39b2def12bb9b62be36c92a54/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb6e6d5faa3f817435b6f203226fa5969d7a7264", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb6e6d5faa3f817435b6f203226fa5969d7a7264", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb6e6d5faa3f817435b6f203226fa5969d7a7264"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "42026a811dd2e4469ed9811c75711347613d02d3", "filename": "gcc/c-family/c-attribs.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5328cad24f7460a39b2def12bb9b62be36c92a54/gcc%2Fc-family%2Fc-attribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5328cad24f7460a39b2def12bb9b62be36c92a54/gcc%2Fc-family%2Fc-attribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-attribs.c?ref=5328cad24f7460a39b2def12bb9b62be36c92a54", "patch": "@@ -698,6 +698,9 @@ positional_argument (const_tree fntype, const_tree atname, tree pos,\n \n   if (tree argtype = type_argument_type (fntype, ipos))\n     {\n+      if (argtype == error_mark_node)\n+\treturn NULL_TREE;\n+\n       if (flags & POSARG_ELLIPSIS)\n \t{\n \t  if (argno < 1)"}, {"sha": "b945de15ab84edcda3bb60b8cfd9033b4c9cd8d8", "filename": "gcc/c/c-objc-common.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5328cad24f7460a39b2def12bb9b62be36c92a54/gcc%2Fc%2Fc-objc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5328cad24f7460a39b2def12bb9b62be36c92a54/gcc%2Fc%2Fc-objc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-objc-common.c?ref=5328cad24f7460a39b2def12bb9b62be36c92a54", "patch": "@@ -185,6 +185,12 @@ get_aka_type (tree type)\n static void\n print_type (c_pretty_printer *cpp, tree t, bool *quoted)\n {\n+  if (t == error_mark_node)\n+    {\n+      pp_string (cpp, _(\"{erroneous}\"));\n+      return;\n+    }\n+\n   gcc_assert (TYPE_P (t));\n   struct obstack *ob = pp_buffer (cpp)->obstack;\n   char *p = (char *) obstack_base (ob);"}, {"sha": "8f368702e0e37d010a06e26b3d21597daa10a222", "filename": "gcc/testsuite/gcc.dg/nonnull-6.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5328cad24f7460a39b2def12bb9b62be36c92a54/gcc%2Ftestsuite%2Fgcc.dg%2Fnonnull-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5328cad24f7460a39b2def12bb9b62be36c92a54/gcc%2Ftestsuite%2Fgcc.dg%2Fnonnull-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnonnull-6.c?ref=5328cad24f7460a39b2def12bb9b62be36c92a54", "patch": "@@ -0,0 +1,15 @@\n+/* PR c/100783 - ICE on -Wnonnull and erroneous type\n+   { dg-do compile }\n+   { dg-options \"-Wall\" } */\n+\n+__attribute__((nonnull (1))) void\n+f1 (char[][n]);                         // { dg-error \"undeclared\" }\n+\n+__attribute__((nonnull (2))) void\n+f2 (int n, char[n][m]);                 // { dg-error \"undeclared\" }\n+\n+__attribute__((nonnull (1))) void\n+f3 (char[*][n]);                        // { dg-error \"undeclared\" }\n+\n+__attribute__((nonnull (1))) void\n+f4 (char[f1]);                          // { dg-error \"size\" }"}]}