{"sha": "d78ba51841e429173f7a9eaa20006c04ceced29c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc4YmE1MTg0MWU0MjkxNzNmN2E5ZWFhMjAwMDZjMDRjZWNlZDI5Yw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-05-17T21:33:13Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-05-17T21:33:13Z"}, "message": "rs6000: Add \"enabled\" attribute\n\nThis adds the \"enabled\" attribute to the rs6000 backend.  It uses the\n(new) \"isa\" attribute to automatically select which instruction\nalternatives should be enabled.\n\nFor now it allows isa strings of \"p5\", \"p6\", \"p7\", meaning the\ninstructions introduced on that CPU, not requiring vectors; and \"p7v\",\n\"p8v\", \"p9v\" for the same, but with vectors.\n\nThese are currently mapped to TARGET_POPCNTB, TARGET_CMPB,\nTARGET_POPCNTD, TARGET_VSX, TARGET_P8_VECTOR, and TARGET_P9_VECTOR;\nthat will change to something a bit saner later.\n\n\n\t* config/rs6000/rs6000.md (isa): New attribute.\n\t(enabled): New attribute.\n\nFrom-SVN: r271360", "tree": {"sha": "391d537b4417edfbcaf811ecad861dd5f25213d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/391d537b4417edfbcaf811ecad861dd5f25213d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d78ba51841e429173f7a9eaa20006c04ceced29c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d78ba51841e429173f7a9eaa20006c04ceced29c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d78ba51841e429173f7a9eaa20006c04ceced29c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d78ba51841e429173f7a9eaa20006c04ceced29c/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b5777c6c7059b6b8e372e567a74bdccb59a02c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b5777c6c7059b6b8e372e567a74bdccb59a02c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b5777c6c7059b6b8e372e567a74bdccb59a02c3"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "988a86040a2171c011eebdff0ab46420ace59c22", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78ba51841e429173f7a9eaa20006c04ceced29c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78ba51841e429173f7a9eaa20006c04ceced29c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d78ba51841e429173f7a9eaa20006c04ceced29c", "patch": "@@ -1,3 +1,8 @@\n+2019-05-17  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (isa): New attribute.\n+\t(enabled): New attribute.\n+\n 2019-05-17  Max Filippov  <jcmvbkbc@gmail.com>\n \n \t* config/aarch64/aarch64.c (aarch64_output_mi_thunk): Call"}, {"sha": "0906ccb0167a9d4f450a77c24932f9c1143c0e8b", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78ba51841e429173f7a9eaa20006c04ceced29c/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78ba51841e429173f7a9eaa20006c04ceced29c/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=d78ba51841e429173f7a9eaa20006c04ceced29c", "patch": "@@ -265,6 +265,39 @@\n    rs64a,mpccore,cell,ppca2,titan\"\n   (const (symbol_ref \"(enum attr_cpu) rs6000_tune\")))\n \n+;; The ISA we implement.\n+(define_attr \"isa\" \"any,p5,p6,p7,p7v,p8v,p9v\" (const_string \"any\"))\n+\n+;; Is this alternative enabled for the current CPU/ISA/etc.?\n+(define_attr \"enabled\" \"\"\n+  (cond\n+    [(eq_attr \"isa\" \"any\")\n+     (const_int 1)\n+\n+     (and (eq_attr \"isa\" \"p5\")\n+\t  (match_test \"TARGET_POPCNTB\"))\n+     (const_int 1)\n+\n+     (and (eq_attr \"isa\" \"p6\")\n+\t  (match_test \"TARGET_CMPB\"))\n+     (const_int 1)\n+\n+     (and (eq_attr \"isa\" \"p7\")\n+\t  (match_test \"TARGET_POPCNTD\"))\n+     (const_int 1)\n+\n+     (and (eq_attr \"isa\" \"p7v\")\n+\t  (match_test \"TARGET_VSX\"))\n+     (const_int 1)\n+\n+     (and (eq_attr \"isa\" \"p8v\")\n+\t  (match_test \"TARGET_P8_VECTOR\"))\n+     (const_int 1)\n+\n+     (and (eq_attr \"isa\" \"p9v\")\n+\t  (match_test \"TARGET_P9_VECTOR\"))\n+     (const_int 1)\n+    ] (const_int 0)))\n \n ;; If this instruction is microcoded on the CELL processor\n ; The default for load extended, the recorded instructions and rotate/shifts by a variable is always microcoded"}]}