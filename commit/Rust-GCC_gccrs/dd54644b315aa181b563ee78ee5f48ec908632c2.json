{"sha": "dd54644b315aa181b563ee78ee5f48ec908632c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ1NDY0NGIzMTVhYTE4MWI1NjNlZTc4ZWU1ZjQ4ZWM5MDg2MzJjMg==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2011-08-30T13:50:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-30T13:50:19Z"}, "message": "sem_ch3.adb (Check_Abstract_Overriding): Code cleanup...\n\n2011-08-30  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch3.adb (Check_Abstract_Overriding): Code cleanup: replace code\n\twhich emits an error by a call to a new routine which report the error.\n\t* exp_ch9.adb (Build_Wrapper_Spec): Build the wrapper even if the\n\tentity does not cover an existing interface.\n\t* errout.ads, errout.adb (Error_Msg_PT): New routine. Used to factorize\n\tcode.\n\t* sem_ch6.adb (Check_Conformance): Add specific error for wrappers of\n\tprotected procedures or entries whose mode is not conformant.\n\t(Check_Synchronized_Overriding): Code cleanup: replace code which emits\n\tan error by a call to a new routine which report the error.\n\nFrom-SVN: r178306", "tree": {"sha": "f5211562a4c22f3f636def27c991a070a3000821", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5211562a4c22f3f636def27c991a070a3000821"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd54644b315aa181b563ee78ee5f48ec908632c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd54644b315aa181b563ee78ee5f48ec908632c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd54644b315aa181b563ee78ee5f48ec908632c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd54644b315aa181b563ee78ee5f48ec908632c2/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d3ba478e3fda2b515d0dcdbdc936b65192b6f99d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3ba478e3fda2b515d0dcdbdc936b65192b6f99d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3ba478e3fda2b515d0dcdbdc936b65192b6f99d"}], "stats": {"total": 109, "additions": 89, "deletions": 20}, "files": [{"sha": "91367c8d9e29c8ce5945ec0700c0808405dd4d17", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd54644b315aa181b563ee78ee5f48ec908632c2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd54644b315aa181b563ee78ee5f48ec908632c2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=dd54644b315aa181b563ee78ee5f48ec908632c2", "patch": "@@ -1,3 +1,16 @@\n+2011-08-30  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch3.adb (Check_Abstract_Overriding): Code cleanup: replace code\n+\twhich emits an error by a call to a new routine which report the error.\n+\t* exp_ch9.adb (Build_Wrapper_Spec): Build the wrapper even if the\n+\tentity does not cover an existing interface.\n+\t* errout.ads, errout.adb (Error_Msg_PT): New routine. Used to factorize\n+\tcode.\n+\t* sem_ch6.adb (Check_Conformance): Add specific error for wrappers of\n+\tprotected procedures or entries whose mode is not conformant.\n+\t(Check_Synchronized_Overriding): Code cleanup: replace code which emits\n+\tan error by a call to a new routine which report the error.\n+\n 2011-08-30  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat_rm.texi: Minor change."}, {"sha": "ac880eca235942b08d13e269542d18cc370ede45", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd54644b315aa181b563ee78ee5f48ec908632c2/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd54644b315aa181b563ee78ee5f48ec908632c2/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=dd54644b315aa181b563ee78ee5f48ec908632c2", "patch": "@@ -617,6 +617,23 @@ package body Errout is\n       Configurable_Run_Time_Violations := Configurable_Run_Time_Violations + 1;\n    end Error_Msg_CRT;\n \n+   ------------------\n+   -- Error_Msg_PT --\n+   ------------------\n+\n+   procedure Error_Msg_PT (Typ : Node_Id; Subp : Node_Id) is\n+   begin\n+      --  Error message below needs rewording (remember comma in -gnatj\n+      --  mode) ???\n+\n+      Error_Msg_NE\n+        (\"first formal of & must be of mode `OUT`, `IN OUT` or \" &\n+         \"access-to-variable\", Typ, Subp);\n+      Error_Msg_N\n+        (\"\\in order to be overridden by protected procedure or entry \" &\n+         \"(RM 9.4(11.9/2))\", Typ);\n+   end Error_Msg_PT;\n+\n    -----------------\n    -- Error_Msg_F --\n    -----------------"}, {"sha": "7005cc1109291cea12551668a1ad6800ecc14252", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd54644b315aa181b563ee78ee5f48ec908632c2/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd54644b315aa181b563ee78ee5f48ec908632c2/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=dd54644b315aa181b563ee78ee5f48ec908632c2", "patch": "@@ -801,6 +801,10 @@ package Errout is\n    --  run-time mode or no run-time mode (as appropriate). In the former case,\n    --  the name of the library is output if available.\n \n+   procedure Error_Msg_PT (Typ : Node_Id; Subp : Node_Id);\n+   --  Posts an error on the protected type declaration Typ indicating wrong\n+   --  mode of the first formal of protected type primitive Subp.\n+\n    procedure dmsg (Id : Error_Msg_Id) renames Erroutc.dmsg;\n    --  Debugging routine to dump an error message\n "}, {"sha": "b30254df3507be9f80c5f16390b450e1548baad5", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 32, "deletions": 4, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd54644b315aa181b563ee78ee5f48ec908632c2/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd54644b315aa181b563ee78ee5f48ec908632c2/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=dd54644b315aa181b563ee78ee5f48ec908632c2", "patch": "@@ -2263,14 +2263,42 @@ package body Exp_Ch9 is\n          end loop Search;\n       end if;\n \n-      --  If the subprogram to be wrapped is not overriding anything or is not\n-      --  a primitive declared between two views, do not produce anything. This\n-      --  avoids spurious errors involving overriding.\n+      --  Ada 2012 (AI05-0090-1): If no interface primitive is covered by\n+      --  this subprogram and this is not a primitive declared between two\n+      --  views then force the generation of a wrapper. As an optimization,\n+      --  previous versions of the frontend avoid generating the wrapper;\n+      --  however, the wrapper facilitates locating and reporting an error\n+      --  when a duplicate declaration is found later. See example in\n+      --  AI05-0090-1.\n \n       if No (First_Param)\n         and then not Is_Private_Primitive_Subprogram (Subp_Id)\n       then\n-         return Empty;\n+         if Is_Task_Type\n+              (Corresponding_Concurrent_Type (Obj_Typ))\n+         then\n+            First_Param :=\n+              Make_Parameter_Specification (Loc,\n+                Defining_Identifier =>\n+                  Make_Defining_Identifier (Loc,\n+                    Chars => Name_uO),\n+                In_Present     => True,\n+                Out_Present    => False,\n+                Parameter_Type => New_Reference_To (Obj_Typ, Loc));\n+\n+         --  For entries and procedures of protected types the mode of\n+         --  the controlling argument must be in-out.\n+\n+         else\n+            First_Param :=\n+              Make_Parameter_Specification (Loc,\n+                Defining_Identifier =>\n+                  Make_Defining_Identifier (Loc,\n+                    Chars => Name_uO),\n+                In_Present     => True,\n+                Out_Present    => (Ekind (Subp_Id) /= E_Function),\n+                Parameter_Type => New_Reference_To (Obj_Typ, Loc));\n+         end if;\n       end if;\n \n       declare"}, {"sha": "67aff229e293f9ce8a7acbac03a9f189720585f9", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd54644b315aa181b563ee78ee5f48ec908632c2/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd54644b315aa181b563ee78ee5f48ec908632c2/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=dd54644b315aa181b563ee78ee5f48ec908632c2", "patch": "@@ -9162,22 +9162,14 @@ package body Sem_Ch3 is\n                   --  The controlling formal of Subp must be of mode \"out\",\n                   --  \"in out\" or an access-to-variable to be overridden.\n \n-                  --  Error message below needs rewording (remember comma\n-                  --  in -gnatj mode) ???\n-\n                   if Ekind (First_Formal (Subp)) = E_In_Parameter\n                     and then Ekind (Subp) /= E_Function\n                   then\n                      if not Is_Predefined_Dispatching_Operation (Subp)\n                        and then Is_Protected_Type\n                                   (Corresponding_Concurrent_Type (T))\n                      then\n-                        Error_Msg_NE\n-                          (\"first formal of & must be of mode `OUT`, \" &\n-                           \"`IN OUT` or access-to-variable\", T, Subp);\n-                        Error_Msg_N\n-                          (\"\\in order to be overridden by protected procedure \"\n-                           & \"or entry (RM 9.4(11.9/2))\", T);\n+                        Error_Msg_PT (T, Subp);\n                      end if;\n \n                   --  Some other kind of overriding failure"}, {"sha": "174a7dfd009867929be477fbb2d7804e6199081b", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd54644b315aa181b563ee78ee5f48ec908632c2/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd54644b315aa181b563ee78ee5f48ec908632c2/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=dd54644b315aa181b563ee78ee5f48ec908632c2", "patch": "@@ -4226,7 +4226,26 @@ package body Sem_Ch6 is\n \n          if Ctype >= Mode_Conformant then\n             if Parameter_Mode (Old_Formal) /= Parameter_Mode (New_Formal) then\n-               Conformance_Error (\"\\mode of & does not match!\", New_Formal);\n+               if not Ekind_In (New_Id, E_Function, E_Procedure)\n+                 or else not Is_Primitive_Wrapper (New_Id)\n+               then\n+                  Conformance_Error (\"\\mode of & does not match!\", New_Formal);\n+               else\n+                  declare\n+                     T : constant  Entity_Id :=\n+                           Find_Dispatching_Type (New_Id);\n+                  begin\n+                     if Is_Protected_Type\n+                          (Corresponding_Concurrent_Type (T))\n+                     then\n+                        Error_Msg_PT (T, New_Id);\n+                     else\n+                        Conformance_Error\n+                          (\"\\mode of & does not match!\", New_Formal);\n+                     end if;\n+                  end;\n+               end if;\n+\n                return;\n \n             --  Part of mode conformance for access types is having the same\n@@ -7971,6 +7990,7 @@ package body Sem_Ch6 is\n             --  to retrieve the corresponding concurrent type.\n \n             elsif Is_Concurrent_Record_Type (Typ)\n+              and then not Is_Class_Wide_Type (Typ)\n               and then Present (Corresponding_Concurrent_Type (Typ))\n             then\n                Typ := Corresponding_Concurrent_Type (Typ);\n@@ -8102,12 +8122,7 @@ package body Sem_Ch6 is\n                       or else Is_Synchronized_Interface (Iface_Typ)\n                       or else Is_Task_Interface (Iface_Typ))\n                then\n-                  Error_Msg_NE\n-                    (\"first formal of & must be of mode `OUT`, `IN OUT`\"\n-                      & \" or access-to-variable\", Typ, Candidate);\n-                  Error_Msg_N\n-                    (\"\\in order to be overridden by protected procedure or \"\n-                      & \"entry (RM 9.4(11.9/2))\", Typ);\n+                  Error_Msg_PT (Parent (Typ), Candidate);\n                end if;\n             end if;\n "}]}