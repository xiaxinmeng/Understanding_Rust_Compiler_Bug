{"sha": "872c1a56e3a08f9e4bb7032b38b0883e8cd7700a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODcyYzFhNTZlM2EwOGY5ZTRiYjcwMzJiMzhiMDg4M2U4Y2Q3NzAwYQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-08-03T07:57:21Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-08-03T07:57:21Z"}, "message": "ChangeLog: add problematic commit 2e96b5f14e4025691b57d2301d71aa6092ed44bc.\n\ngcc/ChangeLog:\n\n\t* ChangeLog: Add manually.\n\nlibgomp/ChangeLog:\n\n\t* ChangeLog: Add manually.\n\ngcc/testsuite/ChangeLog:\n\n\t* ChangeLog: Add manually.", "tree": {"sha": "875f5f81cda4442991ff9a4dba73e5eaea8978e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/875f5f81cda4442991ff9a4dba73e5eaea8978e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/872c1a56e3a08f9e4bb7032b38b0883e8cd7700a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/872c1a56e3a08f9e4bb7032b38b0883e8cd7700a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/872c1a56e3a08f9e4bb7032b38b0883e8cd7700a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/872c1a56e3a08f9e4bb7032b38b0883e8cd7700a/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d17ca1bc74109e5cc4ef34890b6293c4bcb1d6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d17ca1bc74109e5cc4ef34890b6293c4bcb1d6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d17ca1bc74109e5cc4ef34890b6293c4bcb1d6a"}], "stats": {"total": 89, "additions": 89, "deletions": 0}, "files": [{"sha": "87b0e274a24fc05406af076180db79ac25e7c14f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/872c1a56e3a08f9e4bb7032b38b0883e8cd7700a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/872c1a56e3a08f9e4bb7032b38b0883e8cd7700a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=872c1a56e3a08f9e4bb7032b38b0883e8cd7700a", "patch": "@@ -347,6 +347,37 @@\n \t* tree-parloops.c (create_parallel_loop): Adjust.\n \t* tree-pass.h (make_pass_oacc_loop_designation): New.\n \n+2021-07-29  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* flag-types.h (enum threader_mode): New.\n+\t* params.opt: Add entry for --param=threader-mode.\n+\t* tree-ssa-threadbackward.c (THREADER_ITERATIVE_MODE): New.\n+\t(class back_threader): New.\n+\t(back_threader::back_threader): New.\n+\t(back_threader::~back_threader): New.\n+\t(back_threader::maybe_register_path): New.\n+\t(back_threader::find_taken_edge): New.\n+\t(back_threader::find_taken_edge_switch): New.\n+\t(back_threader::find_taken_edge_cond): New.\n+\t(back_threader::resolve_def): New.\n+\t(back_threader::resolve_phi): New.\n+\t(back_threader::find_paths_to_names): New.\n+\t(back_threader::find_paths): New.\n+\t(dump_path): New.\n+\t(debug): New.\n+\t(thread_jumps::find_jump_threads_backwards): Call ranger threader.\n+\t(thread_jumps::find_jump_threads_backwards_with_ranger): New.\n+\t(pass_thread_jumps::execute): Abstract out code...\n+\t(try_thread_blocks): ...here.\n+\t* tree-ssa-threadedge.c (jump_threader::thread_outgoing_edges):\n+\tAbstract out threading candidate code to...\n+\t(single_succ_to_potentially_threadable_block): ...here.\n+\t* tree-ssa-threadedge.h (single_succ_to_potentially_threadable_block):\n+\tNew.\n+\t* tree-ssa-threadupdate.c (register_jump_thread): Return boolean.\n+\t* tree-ssa-threadupdate.h (class jump_thread_path_registry):\n+\tReturn bool from register_jump_thread.\n+\n 2021-07-29  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* target.def: in0 and in1 do not need to be registers."}, {"sha": "380643426e3e958f33bf4eeea2e671e0c3818b91", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/872c1a56e3a08f9e4bb7032b38b0883e8cd7700a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/872c1a56e3a08f9e4bb7032b38b0883e8cd7700a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=872c1a56e3a08f9e4bb7032b38b0883e8cd7700a", "patch": "@@ -348,6 +348,58 @@\n \tconditions.\n \t* gcc.target/powerpc/pr81348.c: Likewise.\n \n+2021-07-29  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* g++.dg/debug/dwarf2/deallocator.C: Adjust for threader.\n+\t* gcc.c-torture/compile/pr83510.c: Same.\n+\t* gcc.dg/analyzer/pr94851-2.c: Same.\n+\t* gcc.dg/loop-unswitch-2.c: Same.\n+\t* gcc.dg/old-style-asm-1.c: Same.\n+\t* gcc.dg/pr68317.c: Same.\n+\t* gcc.dg/pr97567-2.c: Same.\n+\t* gcc.dg/predict-9.c: Same.\n+\t* gcc.dg/shrink-wrap-loop.c: Same.\n+\t* gcc.dg/sibcall-1.c: Same.\n+\t* gcc.dg/tree-ssa/builtin-sprintf-3.c: Same.\n+\t* gcc.dg/tree-ssa/pr21001.c: Same.\n+\t* gcc.dg/tree-ssa/pr21294.c: Same.\n+\t* gcc.dg/tree-ssa/pr21417.c: Same.\n+\t* gcc.dg/tree-ssa/pr21458-2.c: Same.\n+\t* gcc.dg/tree-ssa/pr21563.c: Same.\n+\t* gcc.dg/tree-ssa/pr49039.c: Same.\n+\t* gcc.dg/tree-ssa/pr61839_1.c: Same.\n+\t* gcc.dg/tree-ssa/pr61839_3.c: Same.\n+\t* gcc.dg/tree-ssa/pr77445-2.c: Same.\n+\t* gcc.dg/tree-ssa/split-path-4.c: Same.\n+\t* gcc.dg/tree-ssa/ssa-dom-thread-11.c: Same.\n+\t* gcc.dg/tree-ssa/ssa-dom-thread-12.c: Same.\n+\t* gcc.dg/tree-ssa/ssa-dom-thread-14.c: Same.\n+\t* gcc.dg/tree-ssa/ssa-dom-thread-18.c: Same.\n+\t* gcc.dg/tree-ssa/ssa-dom-thread-6.c: Same.\n+\t* gcc.dg/tree-ssa/ssa-dom-thread-7.c: Same.\n+\t* gcc.dg/tree-ssa/ssa-fre-48.c: Same.\n+\t* gcc.dg/tree-ssa/ssa-thread-11.c: Same.\n+\t* gcc.dg/tree-ssa/ssa-thread-12.c: Same.\n+\t* gcc.dg/tree-ssa/ssa-thread-14.c: Same.\n+\t* gcc.dg/tree-ssa/vrp02.c: Same.\n+\t* gcc.dg/tree-ssa/vrp03.c: Same.\n+\t* gcc.dg/tree-ssa/vrp05.c: Same.\n+\t* gcc.dg/tree-ssa/vrp06.c: Same.\n+\t* gcc.dg/tree-ssa/vrp07.c: Same.\n+\t* gcc.dg/tree-ssa/vrp09.c: Same.\n+\t* gcc.dg/tree-ssa/vrp19.c: Same.\n+\t* gcc.dg/tree-ssa/vrp20.c: Same.\n+\t* gcc.dg/tree-ssa/vrp33.c: Same.\n+\t* gcc.dg/uninit-pred-9_b.c: Same.\n+\t* gcc.dg/uninit-pr61112.c: Same.\n+\t* gcc.dg/vect/bb-slp-16.c: Same.\n+\t* gcc.target/i386/avx2-vect-aggressive.c: Same.\n+\t* gcc.dg/tree-ssa/ranger-threader-1.c: New test.\n+\t* gcc.dg/tree-ssa/ranger-threader-2.c: New test.\n+\t* gcc.dg/tree-ssa/ranger-threader-3.c: New test.\n+\t* gcc.dg/tree-ssa/ranger-threader-4.c: New test.\n+\t* gcc.dg/tree-ssa/ranger-threader-5.c: New test.\n+\n 2021-07-29  Richard Biener  <rguenther@suse.de>\n \n \tPR c/101512"}, {"sha": "3cf5ef4c951b6883a87edf93bd011bd5f50e55e8", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/872c1a56e3a08f9e4bb7032b38b0883e8cd7700a/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/872c1a56e3a08f9e4bb7032b38b0883e8cd7700a/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=872c1a56e3a08f9e4bb7032b38b0883e8cd7700a", "patch": "@@ -30,6 +30,12 @@\n \tLikewise.\n \t* testsuite/libgomp.oacc-fortran/routine-nohost-1.f90: Likewise.\n \n+2021-07-29  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* testsuite/libgomp.graphite/force-parallel-4.c: Adjust for\n+\tthreader.\n+\t* testsuite/libgomp.graphite/force-parallel-8.c: Same.\n+\n 2021-07-27  Ulrich Drepper  <drepper@gmail.com>\n \n \t* env.c (wait_policy, stacksize): New static variables,"}]}