{"sha": "f4becba81532699a3d4681460fb0107791901a58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRiZWNiYTgxNTMyNjk5YTNkNDY4MTQ2MGZiMDEwNzc5MTkwMWE1OA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2010-11-08T19:02:35Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2010-11-08T19:02:35Z"}, "message": "Fix PR 46378 and PR 45585\n\nFrom-SVN: r166448", "tree": {"sha": "d3629a4484e52668a76669cedc55462f9bb04f45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3629a4484e52668a76669cedc55462f9bb04f45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4becba81532699a3d4681460fb0107791901a58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4becba81532699a3d4681460fb0107791901a58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4becba81532699a3d4681460fb0107791901a58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4becba81532699a3d4681460fb0107791901a58/comments", "author": null, "committer": null, "parents": [{"sha": "5c5e8419ff673baff17839b5f5db91bfe1e1244f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c5e8419ff673baff17839b5f5db91bfe1e1244f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c5e8419ff673baff17839b5f5db91bfe1e1244f"}], "stats": {"total": 39, "additions": 30, "deletions": 9}, "files": [{"sha": "9dafa80cd3b268a9c0506217196f1634a121d36b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4becba81532699a3d4681460fb0107791901a58/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4becba81532699a3d4681460fb0107791901a58/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4becba81532699a3d4681460fb0107791901a58", "patch": "@@ -1,3 +1,17 @@\n+2010-11-08  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/46378\n+\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Don't\n+\tturn on ISA 2.04 rounding instructions for power5.\n+\n+\t* config/rs6000/rs6000.md (friz): Friz is an ISA 2.04 instruciton,\n+\tnot ISA 2.02.\n+\n+\tPR target/45585\n+\t* config/rs6000/darwin.md (movdi_low): Allow DImode values to be\n+\tin FPR registers.\n+\t(movdi_low_st): Ditto.\n+\n 2010-11-08  Joern Rennecke  <amylaar@spamcop.net>\n \t    Richard Henderson <rth@redhat.com>\n "}, {"sha": "a61240a1f48b142039ca973939537aea9257d108", "filename": "gcc/config/rs6000/darwin.md", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4becba81532699a3d4681460fb0107791901a58/gcc%2Fconfig%2Frs6000%2Fdarwin.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4becba81532699a3d4681460fb0107791901a58/gcc%2Fconfig%2Frs6000%2Fdarwin.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.md?ref=f4becba81532699a3d4681460fb0107791901a58", "patch": "@@ -141,11 +141,13 @@ You should have received a copy of the GNU General Public License\n \n ;; 64-bit MachO load/store support\n (define_insn \"movdi_low\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n-        (mem:DI (lo_sum:DI (match_operand:DI 1 \"gpc_reg_operand\" \"b\")\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,*!d\")\n+        (mem:DI (lo_sum:DI (match_operand:DI 1 \"gpc_reg_operand\" \"b,b\")\n                            (match_operand 2 \"\" \"\"))))]\n   \"TARGET_MACHO && TARGET_64BIT\"\n-  \"{l|ld} %0,lo16(%2)(%1)\"\n+  \"@\n+   {l|ld} %0,lo16(%2)(%1)\n+   lfd %0,lo16(%2)(%1)\"\n   [(set_attr \"type\" \"load\")\n    (set_attr \"length\" \"4\")])\n \n@@ -159,11 +161,13 @@ You should have received a copy of the GNU General Public License\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"movdi_low_st\"\n-  [(set (mem:DI (lo_sum:DI (match_operand:DI 1 \"gpc_reg_operand\" \"b\")\n+  [(set (mem:DI (lo_sum:DI (match_operand:DI 1 \"gpc_reg_operand\" \"b,b\")\n                            (match_operand 2 \"\" \"\")))\n-\t(match_operand:DI 0 \"gpc_reg_operand\" \"r\"))]\n+\t(match_operand:DI 0 \"gpc_reg_operand\" \"r,*!d\"))]\n   \"TARGET_MACHO && TARGET_64BIT\"\n-  \"{st|std} %0,lo16(%2)(%1)\"\n+  \"@\n+   {st|std} %0,lo16(%2)(%1)\n+   stfd %0,lo16(%2)(%1)\"\n   [(set_attr \"type\" \"store\")\n    (set_attr \"length\" \"4\")])\n "}, {"sha": "eadc1222c447d66699bb144c62300c23b1d88d1d", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4becba81532699a3d4681460fb0107791901a58/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4becba81532699a3d4681460fb0107791901a58/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=f4becba81532699a3d4681460fb0107791901a58", "patch": "@@ -2577,7 +2577,8 @@ rs6000_option_override_internal (const char *default_cpu)\n   /* Masks for instructions set at various powerpc ISAs.  */\n   enum {\n     ISA_2_1_MASKS = MASK_MFCRF,\n-    ISA_2_2_MASKS = (ISA_2_1_MASKS | MASK_POPCNTB | MASK_FPRND),\n+    ISA_2_2_MASKS = (ISA_2_1_MASKS | MASK_POPCNTB),\n+    ISA_2_4_MASKS = (ISA_2_2_MASKS | MASK_FPRND),\n \n     /* For ISA 2.05, do not add MFPGPR, since it isn't in ISA 2.06, and don't\n        add ALTIVEC, since in general it isn't a win on power6.  In ISA 2.04,\n@@ -2746,7 +2747,9 @@ rs6000_option_override_internal (const char *default_cpu)\n     target_flags |= (ISA_2_5_MASKS_SERVER & ~target_flags_explicit);\n   else if (TARGET_CMPB)\n     target_flags |= (ISA_2_5_MASKS_EMBEDDED & ~target_flags_explicit);\n-  else if (TARGET_POPCNTB || TARGET_FPRND)\n+  else if (TARGET_FPRND)\n+    target_flags |= (ISA_2_4_MASKS & ~target_flags_explicit);\n+  else if (TARGET_POPCNTB)\n     target_flags |= (ISA_2_2_MASKS & ~target_flags_explicit);\n   else if (TARGET_ALTIVEC)\n     target_flags |= (MASK_PPC_GFXOPT & ~target_flags_explicit);"}, {"sha": "37f5ad227b49fa03b6f1798884b88184fca9556c", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4becba81532699a3d4681460fb0107791901a58/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4becba81532699a3d4681460fb0107791901a58/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=f4becba81532699a3d4681460fb0107791901a58", "patch": "@@ -7149,7 +7149,7 @@\n (define_insn \"*friz\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d\")\n \t(float:DF (fix:DI (match_operand:DF 1 \"gpc_reg_operand\" \"d\"))))]\n-  \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT && TARGET_POPCNTB\n+  \"TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT && TARGET_FPRND\n    && !VECTOR_UNIT_VSX_P (DFmode) && flag_unsafe_math_optimizations\n    && !flag_trapping_math && TARGET_FRIZ\"\n   \"friz %0,%1\""}]}