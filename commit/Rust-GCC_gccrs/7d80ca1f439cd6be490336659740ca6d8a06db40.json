{"sha": "7d80ca1f439cd6be490336659740ca6d8a06db40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q4MGNhMWY0MzljZDZiZTQ5MDMzNjY1OTc0MGNhNmQ4YTA2ZGI0MA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-05-15T13:49:19Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-05-15T13:49:19Z"}, "message": "cgraphunit.c (thunk_adjust): Use make_rename_temp.\n\n2012-05-15  Richard Guenther  <rguenther@suse.de>\n\n\t* cgraphunit.c (thunk_adjust): Use make_rename_temp.\n\t(assemble_thunk): Likewise.  Manually rename and register\n\tfunction arguments.\n\nFrom-SVN: r187538", "tree": {"sha": "c093e56313be83068c01e5a47494d6005b846145", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c093e56313be83068c01e5a47494d6005b846145"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d80ca1f439cd6be490336659740ca6d8a06db40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d80ca1f439cd6be490336659740ca6d8a06db40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d80ca1f439cd6be490336659740ca6d8a06db40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d80ca1f439cd6be490336659740ca6d8a06db40/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c1f1d428facaaa17c3ce21cfef418948e3c52fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c1f1d428facaaa17c3ce21cfef418948e3c52fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c1f1d428facaaa17c3ce21cfef418948e3c52fa"}], "stats": {"total": 47, "additions": 24, "deletions": 23}, "files": [{"sha": "0854c1859f85dbc4444f0929ef19c670dc6e4543", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d80ca1f439cd6be490336659740ca6d8a06db40/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d80ca1f439cd6be490336659740ca6d8a06db40/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d80ca1f439cd6be490336659740ca6d8a06db40", "patch": "@@ -1,3 +1,9 @@\n+2012-05-15  Richard Guenther  <rguenther@suse.de>\n+\n+\t* cgraphunit.c (thunk_adjust): Use make_rename_temp.\n+\t(assemble_thunk): Likewise.  Manually rename and register\n+\tfunction arguments.\n+\n 2012-05-15  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/53355"}, {"sha": "c21ddb84c2f00d244c3d32a70b8d5836ab923db7", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 18, "deletions": 23, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d80ca1f439cd6be490336659740ca6d8a06db40/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d80ca1f439cd6be490336659740ca6d8a06db40/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=7d80ca1f439cd6be490336659740ca6d8a06db40", "patch": "@@ -1264,25 +1264,21 @@ thunk_adjust (gimple_stmt_iterator * bsi,\n \t}\n \n       vtabletmp =\n-\tcreate_tmp_var (build_pointer_type\n-\t\t\t(build_pointer_type (vtable_entry_type)), \"vptr\");\n+\tmake_rename_temp (build_pointer_type\n+\t\t\t  (build_pointer_type (vtable_entry_type)), \"vptr\");\n \n       /* The vptr is always at offset zero in the object.  */\n       stmt = gimple_build_assign (vtabletmp,\n \t\t\t\t  build1 (NOP_EXPR, TREE_TYPE (vtabletmp),\n \t\t\t\t\t  ptr));\n       gsi_insert_after (bsi, stmt, GSI_NEW_STMT);\n-      mark_symbols_for_renaming (stmt);\n-      find_referenced_vars_in (stmt);\n \n       /* Form the vtable address.  */\n-      vtabletmp2 = create_tmp_var (TREE_TYPE (TREE_TYPE (vtabletmp)),\n-\t\t\t\t   \"vtableaddr\");\n+      vtabletmp2 = make_rename_temp (TREE_TYPE (TREE_TYPE (vtabletmp)),\n+\t\t\t\t     \"vtableaddr\");\n       stmt = gimple_build_assign (vtabletmp2,\n \t\t\t\t  build_simple_mem_ref (vtabletmp));\n       gsi_insert_after (bsi, stmt, GSI_NEW_STMT);\n-      mark_symbols_for_renaming (stmt);\n-      find_referenced_vars_in (stmt);\n \n       /* Find the entry with the vcall offset.  */\n       stmt = gimple_build_assign (vtabletmp2,\n@@ -1292,13 +1288,11 @@ thunk_adjust (gimple_stmt_iterator * bsi,\n       gsi_insert_after (bsi, stmt, GSI_NEW_STMT);\n \n       /* Get the offset itself.  */\n-      vtabletmp3 = create_tmp_var (TREE_TYPE (TREE_TYPE (vtabletmp2)),\n-\t\t\t\t   \"vcalloffset\");\n+      vtabletmp3 = make_rename_temp (TREE_TYPE (TREE_TYPE (vtabletmp2)),\n+\t\t\t\t     \"vcalloffset\");\n       stmt = gimple_build_assign (vtabletmp3,\n \t\t\t\t  build_simple_mem_ref (vtabletmp2));\n       gsi_insert_after (bsi, stmt, GSI_NEW_STMT);\n-      mark_symbols_for_renaming (stmt);\n-      find_referenced_vars_in (stmt);\n \n       /* Adjust the `this' pointer.  */\n       ptr = fold_build_pointer_plus_loc (input_location, ptr, vtabletmp3);\n@@ -1316,21 +1310,17 @@ thunk_adjust (gimple_stmt_iterator * bsi,\n         ptrtmp = ptr;\n       else\n         {\n-          ptrtmp = create_tmp_var (TREE_TYPE (ptr), \"ptr\");\n+          ptrtmp = make_rename_temp (TREE_TYPE (ptr), \"ptr\");\n           stmt = gimple_build_assign (ptrtmp, ptr);\n \t  gsi_insert_after (bsi, stmt, GSI_NEW_STMT);\n-\t  mark_symbols_for_renaming (stmt);\n-\t  find_referenced_vars_in (stmt);\n \t}\n       ptr = fold_build_pointer_plus_hwi_loc (input_location,\n \t\t\t\t\t     ptrtmp, fixed_offset);\n     }\n \n   /* Emit the statement and gimplify the adjustment expression.  */\n-  ret = create_tmp_var (TREE_TYPE (ptr), \"adjusted_this\");\n+  ret = make_rename_temp (TREE_TYPE (ptr), \"adjusted_this\");\n   stmt = gimple_build_assign (ret, ptr);\n-  mark_symbols_for_renaming (stmt);\n-  find_referenced_vars_in (stmt);\n   gsi_insert_after (bsi, stmt, GSI_NEW_STMT);\n \n   return ret;\n@@ -1434,7 +1424,7 @@ assemble_thunk (struct cgraph_node *node)\n \t      BLOCK_VARS (DECL_INITIAL (current_function_decl)) = restmp;\n \t    }\n \t  else\n-            restmp = create_tmp_var_raw (restype, \"retval\");\n+            restmp = make_rename_temp (restype, \"retval\");\n \t}\n \n       for (arg = a; arg; arg = DECL_CHAIN (arg))\n@@ -1447,17 +1437,22 @@ assemble_thunk (struct cgraph_node *node)\n \t\t\t\t      virtual_offset));\n       else\n         VEC_quick_push (tree, vargs, a);\n+      add_referenced_var (a);\n+      if (is_gimple_reg (a))\n+\tmark_sym_for_renaming (a);\n       for (i = 1, arg = DECL_CHAIN (a); i < nargs; i++, arg = DECL_CHAIN (arg))\n-        VEC_quick_push (tree, vargs, arg);\n+\t{\n+\t  add_referenced_var (arg);\n+\t  if (is_gimple_reg (arg))\n+\t    mark_sym_for_renaming (arg);\n+\t  VEC_quick_push (tree, vargs, arg);\n+\t}\n       call = gimple_build_call_vec (build_fold_addr_expr_loc (0, alias), vargs);\n       VEC_free (tree, heap, vargs);\n       gimple_call_set_from_thunk (call, true);\n       if (restmp)\n         gimple_call_set_lhs (call, restmp);\n       gsi_insert_after (&bsi, call, GSI_NEW_STMT);\n-      mark_symbols_for_renaming (call);\n-      find_referenced_vars_in (call);\n-      update_stmt (call);\n \n       if (restmp && !this_adjusting)\n         {"}]}