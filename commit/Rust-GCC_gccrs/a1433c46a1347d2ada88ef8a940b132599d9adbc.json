{"sha": "a1433c46a1347d2ada88ef8a940b132599d9adbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE0MzNjNDZhMTM0N2QyYWRhODhlZjhhOTQwYjEzMjU5OWQ5YWRiYw==", "commit": {"author": {"name": "Bryce McKinlay", "email": "mckinlay@redhat.com", "date": "2004-07-05T23:18:14Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2004-07-05T23:18:14Z"}, "message": "VMClassLoader.java (init): Check classpath entry before passing to URL constructor.\n\n2004-07-05  Bryce McKinlay  <mckinlay@redhat.com>\n\n\t* gnu/gcj/runtime/VMClassLoader.java (init): Check classpath entry\n\tbefore passing to URL constructor. Rethrow any MalformedURLException\n\tas a RuntimeException. Catch MalformedURLException specifically, not\n\tall exceptions.\n\nFrom-SVN: r84138", "tree": {"sha": "1635a074c2ad50cd8bfb54b911d602de0d8e2c89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1635a074c2ad50cd8bfb54b911d602de0d8e2c89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1433c46a1347d2ada88ef8a940b132599d9adbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1433c46a1347d2ada88ef8a940b132599d9adbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1433c46a1347d2ada88ef8a940b132599d9adbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1433c46a1347d2ada88ef8a940b132599d9adbc/comments", "author": null, "committer": null, "parents": [{"sha": "a86f03720b3e13269d3e1f1853df4239ef0ffef1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a86f03720b3e13269d3e1f1853df4239ef0ffef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a86f03720b3e13269d3e1f1853df4239ef0ffef1"}], "stats": {"total": 45, "additions": 26, "deletions": 19}, "files": [{"sha": "4cff650aac7e473c9f4534d18cd6cacf14d70674", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1433c46a1347d2ada88ef8a940b132599d9adbc/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1433c46a1347d2ada88ef8a940b132599d9adbc/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a1433c46a1347d2ada88ef8a940b132599d9adbc", "patch": "@@ -1,3 +1,10 @@\n+2004-07-05  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\t* gnu/gcj/runtime/VMClassLoader.java (init): Check classpath entry\n+\tbefore passing to URL constructor. Rethrow any MalformedURLException\n+\tas a RuntimeException. Catch MalformedURLException specifically, not\n+\tall exceptions.\n+\t\n 2004-07-05  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* java/util/Locale.java (readObject): Intern strings read from object"}, {"sha": "1fc7081bb784dea875d45d0def53063ffcbb5ce3", "filename": "libjava/gnu/gcj/runtime/VMClassLoader.java", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1433c46a1347d2ada88ef8a940b132599d9adbc/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1433c46a1347d2ada88ef8a940b132599d9adbc/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java?ref=a1433c46a1347d2ada88ef8a940b132599d9adbc", "patch": "@@ -47,58 +47,58 @@ private void init()\n \tString e = st.nextToken ();\n \ttry\n \t  {\n-\t    if (!e.endsWith (File.separator) && new File (e).isDirectory ())\n+\t    File path = new File(e);\n+\t    // Ignore invalid paths.\n+\t    if (!path.exists())\n+\t      continue;\n+\t    if (!e.endsWith (File.separator) && path.isDirectory ())\n \t      addURL(new URL(\"file\", \"\", -1, e + File.separator));\n \t    else\n \t      addURL(new URL(\"file\", \"\", -1, e));\n \t  } \n \tcatch (java.net.MalformedURLException x)\n \t  {\n-\t    /* Ignore this path element */\n+\t    // This should never happen.\n+\t    throw new RuntimeException(x);\n \t  }\n       }\n \n     // Add the contents of the extensions directories.  \n     st = new StringTokenizer (System.getProperty (\"java.ext.dirs\"),\n \t\t\t      System.getProperty (\"path.separator\", \":\"));\n-    while (st.hasMoreElements ())\n+\n+    try\n       {\n-\tString dirname = st.nextToken ();\n-\ttry\n+\twhile (st.hasMoreElements ())\n \t  {\n+\t    String dirname = st.nextToken ();\n \t    File dir = new File (dirname);\n             if (dir.exists ())\n             {\n               if (! dirname.endsWith (File.separator))\n-                  dirname = dirname + File.separator;\n+        \t  dirname = dirname + File.separator;\n               String files[] \n-                = dir.list (new FilenameFilter ()\n+        \t= dir.list (new FilenameFilter ()\n                             { \n                               public boolean accept (File dir, String name)\n                               {\n-                                return (name.endsWith (\".jar\") \n-                                        || name.endsWith (\".zip\"));\n+                        \treturn (name.endsWith (\".jar\") \n+                                \t|| name.endsWith (\".zip\"));\n                               }\n                             });\n               for (int i = files.length - 1; i >= 0; i--)\n-                addURL(new URL(\"file\", \"\", -1, dirname + files[i]));\n+        \taddURL(new URL(\"file\", \"\", -1, dirname + files[i]));\n             }\n \t  }\n-\tcatch (Exception x)\n-\t  {\n-\t    // Just ignore any badness.  \n-\t  }\n-      }\n \n-    // Add core:/ to the end of the java.class.path so any resources\n-    // compiled into this executable may be found.\n-    try\n-      {\n+\t// Add core:/ to the end of the java.class.path so any resources\n+\t// compiled into this executable may be found.\n \taddURL(new URL(\"core\", \"\", -1, \"/\"));\n       }\n     catch (java.net.MalformedURLException x)\n       {\n \t// This should never happen.\n+\tthrow new RuntimeException(x);\n       }\n   }\n "}]}