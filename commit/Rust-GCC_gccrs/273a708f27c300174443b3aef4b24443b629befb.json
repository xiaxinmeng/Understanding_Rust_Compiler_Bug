{"sha": "273a708f27c300174443b3aef4b24443b629befb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjczYTcwOGYyN2MzMDAxNzQ0NDNiM2FlZjRiMjQ0NDNiNjI5YmVmYg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-09-17T07:35:07Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-09-17T07:35:07Z"}, "message": "cp-tree.h (poplevel_class): Declare.\n\n\t* cp-tree.h (poplevel_class): Declare.\n\t* class.c (popclass): Use poplevel_class, not poplevel.\n\t* decl.c (poplevel_class): Don't make it static.  Don't return a\n\tvalue.\n\t(poplevel): Don't call poplevel_class; abort in a class\n\tbinding level is seen.\n\t* semantics.c (finish_translation_unit): Use pop_everything.\n\t* parse.y (member_init): Allow errors.\n\t(pending_inline): Call finish_function.\n\t* parse.c: Regenerated.\n\t* Makefile.in (CONFLICTS): Adjust.\n\nFrom-SVN: r29472", "tree": {"sha": "ed30051510ea90ac9a12144e7e97259bb832efa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed30051510ea90ac9a12144e7e97259bb832efa6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/273a708f27c300174443b3aef4b24443b629befb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/273a708f27c300174443b3aef4b24443b629befb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/273a708f27c300174443b3aef4b24443b629befb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/273a708f27c300174443b3aef4b24443b629befb/comments", "author": null, "committer": null, "parents": [{"sha": "7c39cdd458fb36d1c0ba5fa32d4dd2444ad7505b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c39cdd458fb36d1c0ba5fa32d4dd2444ad7505b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c39cdd458fb36d1c0ba5fa32d4dd2444ad7505b"}], "stats": {"total": 8488, "additions": 4244, "deletions": 4244}, "files": [{"sha": "f3e45d0fed314371317cb2dc464c4335c3db2827", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273a708f27c300174443b3aef4b24443b629befb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273a708f27c300174443b3aef4b24443b629befb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=273a708f27c300174443b3aef4b24443b629befb", "patch": "@@ -1,3 +1,17 @@\n+1999-09-17  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* cp-tree.h (poplevel_class): Declare.\n+\t* class.c (popclass): Use poplevel_class, not poplevel.\n+\t* decl.c (poplevel_class): Don't make it static.  Don't return a\n+\tvalue.\n+\t(poplevel): Don't call poplevel_class; abort in a class\n+\tbinding level is seen.\n+\t* semantics.c (finish_translation_unit): Use pop_everything.\n+\t* parse.y (member_init): Allow errors.\n+\t(pending_inline): Call finish_function.\n+\t* parse.c: Regenerated.\n+\t* Makefile.in (CONFLICTS): Adjust.\n+\n 1999-09-17  Gabriel Dos Reis  <gdr@codesourcery.com>\n \t\n \t* error.c: Reduce code duplication."}, {"sha": "9ca789b89141feec32edbef18cbd6cd51e330ac4", "filename": "gcc/cp/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273a708f27c300174443b3aef4b24443b629befb/gcc%2Fcp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273a708f27c300174443b3aef4b24443b629befb/gcc%2Fcp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMakefile.in?ref=273a708f27c300174443b3aef4b24443b629befb", "patch": "@@ -213,7 +213,7 @@ parse.o : $(PARSE_C) $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h lex.h \\\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(BIG_SWITCHFLAG) \\\n   `echo $(PARSE_C) | sed 's,^\\./,,'`\n \n-CONFLICTS = expect 30 shift/reduce conflicts and 42 reduce/reduce conflicts.\n+CONFLICTS = expect 31 shift/reduce conflicts and 42 reduce/reduce conflicts.\n $(PARSE_H) : $(PARSE_C)\n $(PARSE_C) : $(srcdir)/parse.y\n \t@echo $(CONFLICTS)"}, {"sha": "a1437cb382c97dcba92fc8566b97b5c287088096", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273a708f27c300174443b3aef4b24443b629befb/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273a708f27c300174443b3aef4b24443b629befb/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=273a708f27c300174443b3aef4b24443b629befb", "patch": "@@ -4573,7 +4573,7 @@ invalidate_class_lookup_cache ()\n void\n popclass ()\n {\n-  poplevel (1, 0, 0);\n+  poplevel_class ();\n   /* Since poplevel_class does the popping of class decls nowadays,\n      this really only frees the obstack used for these decls.  */\n   pop_class_decls ();"}, {"sha": "5ae16e707de191a7567dc07e42ac828b6dacdf70", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273a708f27c300174443b3aef4b24443b629befb/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273a708f27c300174443b3aef4b24443b629befb/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=273a708f27c300174443b3aef4b24443b629befb", "patch": "@@ -3120,6 +3120,7 @@ extern void insert_block\t\t\tPROTO((tree));\n extern void add_block_current_level\t\tPROTO((tree));\n extern void set_block\t\t\t\tPROTO((tree));\n extern void pushlevel_class\t\t\tPROTO((void));\n+extern void poplevel_class                      PROTO((void));\n extern void print_binding_stack\t\t\tPROTO((void));\n extern void print_binding_level\t\t\tPROTO((struct binding_level *));\n extern void push_namespace\t\t\tPROTO((tree));"}, {"sha": "7047f342211e62dc39c80a34bffb70ef8f46457f", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273a708f27c300174443b3aef4b24443b629befb/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273a708f27c300174443b3aef4b24443b629befb/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=273a708f27c300174443b3aef4b24443b629befb", "patch": "@@ -158,7 +158,6 @@ static tree record_builtin_java_type PROTO((const char *, int));\n static const char *tag_name PROTO((enum tag_types code));\n static void find_class_binding_level PROTO((void));\n static struct binding_level *innermost_nonclass_level PROTO((void));\n-static tree poplevel_class PROTO((void));\n static void warn_about_implicit_typename_lookup PROTO((tree, tree));\n static int walk_namespaces_r PROTO((tree, walk_namespaces_fn, void *));\n static int walk_globals_r PROTO((tree, void *));\n@@ -1201,8 +1200,8 @@ poplevel (keep, reverse, functionbody)\n   int block_previously_created;\n   int leaving_for_scope;\n \n-  if (current_binding_level->parm_flag == 2)\n-    return poplevel_class ();\n+  my_friendly_assert (current_binding_level->parm_flag != 2,\n+\t\t      19990916);\n \n   my_friendly_assert (!current_binding_level->class_shadowed,\n \t\t      19990414);\n@@ -1576,7 +1575,7 @@ pushlevel_class ()\n \n /* ...and a poplevel for class declarations.  */\n \n-static tree\n+void\n poplevel_class ()\n {\n   register struct binding_level *level = class_binding_level;\n@@ -1652,8 +1651,6 @@ poplevel_class ()\n #endif /* defined(DEBUG_CP_BINDING_LEVELS) */\n \n   pop_binding_level ();\n-\n-  return NULL_TREE;\n }\n \n /* We are entering the scope of a class.  Clear IDENTIFIER_CLASS_VALUE"}, {"sha": "5d9d00bfd535556bddfe175c0cdb79ee7f2102bf", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 4217, "deletions": 4229, "changes": 8446, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273a708f27c300174443b3aef4b24443b629befb/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273a708f27c300174443b3aef4b24443b629befb/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=273a708f27c300174443b3aef4b24443b629befb"}, {"sha": "6d622882d8755f39763c014cac29bab8e98a3b32", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273a708f27c300174443b3aef4b24443b629befb/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273a708f27c300174443b3aef4b24443b629befb/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=273a708f27c300174443b3aef4b24443b629befb", "patch": "@@ -854,6 +854,7 @@ member_init:\n \t| typename_sub LEFT_RIGHT\n \t\t{ expand_member_init (current_class_ref, TYPE_MAIN_DECL ($1),\n \t\t\t\t      void_type_node); }\n+        | error\n \t;\n \n identifier:\n@@ -2081,8 +2082,8 @@ pending_inline:\n                   process_next_inline ($1);\n \t\t}\n \t| fn.defpen maybe_return_init error\n-\t\t{ free_after_compilation (current_function);\n-\t\t  current_function = NULL;\n+\t\t{ \n+\t\t  finish_function (lineno, 2); \n \t\t  process_next_inline ($1); }\n \t;\n "}, {"sha": "96f6dcc5c0433f92c75487c97b148ce5fe73f3ef", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273a708f27c300174443b3aef4b24443b629befb/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273a708f27c300174443b3aef4b24443b629befb/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=273a708f27c300174443b3aef4b24443b629befb", "patch": "@@ -1542,8 +1542,7 @@ finish_translation_unit ()\n {\n   /* In case there were missing closebraces,\n      get us back to the global binding level.  */\n-  while (! toplevel_bindings_p ())\n-    poplevel (0, 0, 0);\n+  pop_everything ();\n   while (current_namespace != global_namespace)\n     pop_namespace ();\n   finish_file ();"}, {"sha": "8197c9364e6880dc39cc01f916b4f2045f4e7452", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash9.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273a708f27c300174443b3aef4b24443b629befb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273a708f27c300174443b3aef4b24443b629befb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash9.C?ref=273a708f27c300174443b3aef4b24443b629befb", "patch": "@@ -15,10 +15,10 @@ protected:\n \n SimQuery::SimQuery():scaling(A) {}// ERROR - .*\n \n-SimQuery::~SimQuery() {}// ERROR - \n+SimQuery::~SimQuery() {}\n \n int SimQuery::SetMeshFile(char name[])\n-{// ERROR - \n+{\n   mesh = new C;// ERROR - .*\n   return 0; // needed to avoid warning of reaching end of non-void fn\n }"}, {"sha": "d6f1d0cf84e32d81b9bd864e4b867cfb536c405a", "filename": "gcc/testsuite/g++.old-deja/g++.oliva/ctor1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273a708f27c300174443b3aef4b24443b629befb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fctor1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273a708f27c300174443b3aef4b24443b629befb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fctor1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fctor1.C?ref=273a708f27c300174443b3aef4b24443b629befb", "patch": "@@ -15,5 +15,5 @@ struct B {\n \n struct C {\n   // The error message below says it is within A::B::m()!\n-  void n() {} // gets bogus error - XFAIL *-*-*\n+  void n() {}\n };"}]}