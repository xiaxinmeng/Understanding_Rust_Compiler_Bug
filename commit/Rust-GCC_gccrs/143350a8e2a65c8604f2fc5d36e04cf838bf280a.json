{"sha": "143350a8e2a65c8604f2fc5d36e04cf838bf280a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQzMzUwYThlMmE2NWM4NjA0ZjJmYzVkMzZlMDRjZjgzOGJmMjgwYQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2008-05-22T21:55:43Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2008-05-22T21:55:43Z"}, "message": "re PR libfortran/36302 (cshift and eoshift missing some kind=16 functions)\n\n2008-05-22  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR libgfortran/36302\n\t* gfortran.map (GFORTRAN_1.1): Add _gfortran_eoshift0_16,\n\t_gfortran_eoshift0_16_char, _gfortran_eoshift2_16,\n\t_gfortran_eoshift2_16_char,_gfortran_cshift0_16,\n\t_gfortran_cshift0_16_char.  Sort alphabetically.\n\t* intrinsics/eoshift0.c:  Add function for kind=16 integer.\n\t* intrinsics/eoshift2.c:  Likewise.\n\t* intrinsics/cshift0.c:  Likewise.\n\n2008-05-22  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR libgfortran/36302\n\t* gfortran.dg/cshift_large_1.f90:  New test.\n\t* gfortran.dg/eoshift_large_1.f90:  New test.\n\nFrom-SVN: r135777", "tree": {"sha": "7266a2b95724af3a9bf3d77816e0fb5e4737445a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7266a2b95724af3a9bf3d77816e0fb5e4737445a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/143350a8e2a65c8604f2fc5d36e04cf838bf280a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/143350a8e2a65c8604f2fc5d36e04cf838bf280a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/143350a8e2a65c8604f2fc5d36e04cf838bf280a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/143350a8e2a65c8604f2fc5d36e04cf838bf280a/comments", "author": null, "committer": null, "parents": [{"sha": "42b18a21e239e5f2f4382e7cdeb94ded1cafc116", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42b18a21e239e5f2f4382e7cdeb94ded1cafc116", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42b18a21e239e5f2f4382e7cdeb94ded1cafc116"}], "stats": {"total": 212, "additions": 198, "deletions": 14}, "files": [{"sha": "af0260cff6f7eafb45b91d5b540ec3439aa61565", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143350a8e2a65c8604f2fc5d36e04cf838bf280a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143350a8e2a65c8604f2fc5d36e04cf838bf280a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=143350a8e2a65c8604f2fc5d36e04cf838bf280a", "patch": "@@ -1,3 +1,9 @@\n+2008-05-22  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libgfortran/36302\n+\t* gfortran.dg/cshift_large_1.f90:  New test.\n+\t* gfortran.dg/eoshift_large_1.f90:  New test.\n+\n 2008-05-22  Rafael Espindola  <espindola@google.com>\n \n \t* gcc.c-torture/compile/20080522-1.c: New testcase."}, {"sha": "e9d064e2186830bd791797a87cf323038f65a7e8", "filename": "gcc/testsuite/gfortran.dg/cshift_large_1.f90", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143350a8e2a65c8604f2fc5d36e04cf838bf280a/gcc%2Ftestsuite%2Fgfortran.dg%2Fcshift_large_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143350a8e2a65c8604f2fc5d36e04cf838bf280a/gcc%2Ftestsuite%2Fgfortran.dg%2Fcshift_large_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcshift_large_1.f90?ref=143350a8e2a65c8604f2fc5d36e04cf838bf280a", "patch": "@@ -0,0 +1,46 @@\n+! { dg-do run }\n+! { dg-require-effective-target fortran_large_int }\n+! Program to test the cshift intrinsic for kind=16 integers\n+program intrinsic_cshift\n+   integer, parameter :: k=16\n+   integer(kind=k), dimension(3_k, 3_k) :: a\n+   integer(kind=k), dimension(3_k, 3_k, 2_k) :: b\n+\n+   ! Scalar shift\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   a = cshift (a, 1_k, 1_k)\n+   if (any (a .ne. reshape ((/2_k, 3_k, 1_k, 5_k, 6_k, 4_k, 8_k, 9_k, 7_k/), (/3_k, 3_k/)))) &\n+      call abort\n+\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   a = cshift (a, -2_k, dim = 2_k)\n+   if (any (a .ne. reshape ((/4_k, 5_k, 6_k, 7_k, 8_k, 9_k, 1_k, 2_k, 3_k/), (/3_k, 3_k/)))) &\n+      call abort\n+\n+   ! Array shift\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   a = cshift (a, (/1_k, 0_k, -1_k/))\n+   if (any (a .ne. reshape ((/2_k, 3_k, 1_k, 4_k, 5_k, 6_k, 9_k, 7_k, 8_k/), (/3_k, 3_k/)))) &\n+      call abort\n+\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   a = cshift (a, (/2_k, -2_k, 0_k/), dim = 2_k)\n+   if (any (a .ne. reshape ((/7_k, 5_k, 3_k, 1_k, 8_k, 6_k, 4_k, 2_k, 9_k/), (/3_k, 3_k/)))) &\n+      call abort\n+\n+   ! Test arrays > rank 2\n+   b = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k, 11_k, 12_k, 13_k, 14_k, 15_k, 16_k, 17_k,&\n+         18_k, 19_k/), (/3_k, 3_k, 2_k/))\n+   b = cshift (b, 1_k)\n+   if (any (b .ne. reshape ((/2_k, 3_k, 1_k, 5_k, 6_k, 4_k, 8_k, 9_k, 7_k, 12_k, 13_k, 11_k, 15_k,&\n+     16_k, 14_k, 18_k, 19_k, 17_k/), (/3_k, 3_k, 2_k/)))) &\n+      call abort\n+\n+   b = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k, 11_k, 12_k, 13_k, 14_k, 15_k, 16_k, 17_k,&\n+         18_k, 19_k/), (/3_k, 3_k, 2_k/))\n+   b = cshift (b, reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/)), 3_k)\n+   if (any (b .ne. reshape ((/11_k, 2_k, 13_k, 4_k, 15_k, 6_k, 17_k, 8_k, 19_k, 1_k, 12_k, 3_k,&\n+     14_k, 5_k, 16_k, 7_k, 18_k, 9_k/), (/3_k, 3_k, 2_k/)))) &\n+      call abort\n+\n+end program"}, {"sha": "02938f9cb7980ac3f529a19788bf9e12e9d4e36b", "filename": "gcc/testsuite/gfortran.dg/eoshift_large_1.f90", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143350a8e2a65c8604f2fc5d36e04cf838bf280a/gcc%2Ftestsuite%2Fgfortran.dg%2Feoshift_large_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143350a8e2a65c8604f2fc5d36e04cf838bf280a/gcc%2Ftestsuite%2Fgfortran.dg%2Feoshift_large_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Feoshift_large_1.f90?ref=143350a8e2a65c8604f2fc5d36e04cf838bf280a", "patch": "@@ -0,0 +1,106 @@\n+! { dg-do run }\n+! { dg-require-effective-target fortran_large_int }\n+! Program to test the eoshift intrinsic for kind=16_k integers\n+! \n+program intrinsic_eoshift\n+  integer, parameter :: k=16\n+  integer(kind=k), dimension(3_k, 3_k) :: a\n+   integer(kind=k), dimension(3_k, 3_k, 2_k) :: b\n+   integer(kind=k), dimension(3_k) :: bo, sh\n+\n+   ! Scalar shift and scalar bound.\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   a = eoshift (a, 1_k, 99_k, 1_k)\n+   if (any (a .ne. reshape ((/2_k, 3_k, 99_k, 5_k, 6_k, 99_k, 8_k, 9_k, 99_k/), (/3_k, 3_k/)))) &\n+      call abort\n+\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   a = eoshift (a, 9999_k, 99_k, 1_k)\n+   if (any (a .ne. 99_k)) call abort\n+\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   a = eoshift (a, -2_k, dim = 2_k)\n+   if (any (a .ne. reshape ((/0_k, 0_k, 0_k, 0_k, 0_k, 0_k, 1_k, 2_k, 3_k/), (/3_k, 3_k/)))) &\n+      call abort\n+\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   a = eoshift (a, -9999_k, 99_k, 1_k)\n+   if (any (a .ne. 99_k)) call abort\n+\n+   ! Array shift and scalar bound.\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   a = eoshift (a, (/1_k, 0_k, -1_k/), 99_k, 1_k)\n+   if (any (a .ne. reshape ((/2_k, 3_k, 99_k, 4_k, 5_k, 6_k, 99_k, 7_k, 8_k/), (/3_k, 3_k/)))) &\n+      call abort\n+\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   a = eoshift (a, (/9999_k, 0_k, -9999_k/), 99_k, 1_k)\n+   if (any (a .ne. reshape ((/99_k, 99_k, 99_k, 4_k, 5_k, 6_k, 99_k, 99_k, 99_k/), (/3_k, 3_k/)))) &\n+      call abort\n+\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   a = eoshift (a, (/2_k, -2_k, 0_k/), dim = 2_k)\n+   if (any (a .ne. reshape ((/7_k, 0_k, 3_k, 0_k, 0_k, 6_k, 0_k, 2_k, 9_k/), (/3_k, 3_k/)))) &\n+      call abort\n+\n+   ! Scalar shift and array bound.\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   a = eoshift (a, 1_k, (/99_k, -1_k, 42_k/), 1_k)\n+   if (any (a .ne. reshape ((/2_k, 3_k, 99_k, 5_k, 6_k, -1_k, 8_k, 9_k, 42_k/), (/3_k, 3_k/)))) &\n+      call abort\n+\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   a = eoshift (a, 9999_k, (/99_k, -1_k, 42_k/), 1_k)\n+   if (any (a .ne. reshape ((/99_k, 99_k, 99_k, -1_k, -1_k, -1_k, 42_k, 42_k, 42_k/), &\n+\t(/3_k, 3_k/)))) call abort\n+\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   a = eoshift (a, -9999_k, (/99_k, -1_k, 42_k/), 1_k)\n+   if (any (a .ne. reshape ((/99_k, 99_k, 99_k, -1_k, -1_k, -1_k, 42_k, 42_k, 42_k/), &\n+\t(/3_k, 3_k/)))) call abort\n+\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   a = eoshift (a, -2_k, (/99_k, -1_k, 42_k/), 2_k)\n+   if (any (a .ne. reshape ((/99_k, -1_k, 42_k, 99_k, -1_k, 42_k, 1_k, 2_k, 3_k/), (/3_k, 3_k/)))) &\n+      call abort\n+\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   bo = (/99_k, -1_k, 42_k/)\n+   a = eoshift (a, -2_k, bo, 2_k)\n+   if (any (a .ne. reshape ((/99_k, -1_k, 42_k, 99_k, -1_k, 42_k, 1_k, 2_k, 3_k/), (/3_k, 3_k/)))) &\n+      call abort\n+\n+   ! Array shift and array bound.\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   a = eoshift (a, (/1_k, 0_k, -1_k/), (/99_k, -1_k, 42_k/), 1_k)\n+   if (any (a .ne. reshape ((/2_k, 3_k, 99_k, 4_k, 5_k, 6_k, 42_k, 7_k, 8_k/), (/3_k, 3_k/)))) &\n+      call abort\n+\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   a = eoshift (a, (/2_k, -2_k, 0_k/), (/99_k, -1_k, 42_k/), 2_k)\n+   if (any (a .ne. reshape ((/7_k, -1_k, 3_k, 99_k, -1_k, 6_k, 99_k, 2_k, 9_k/), (/3_k, 3_k/)))) &\n+      call abort\n+\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   sh = (/ 3_k, -1_k, -3_k /)\n+   bo = (/-999_k, -99_k, -9_k /)\n+   a = eoshift(a, shift=sh, boundary=bo)\n+   if (any (a .ne. reshape ((/ -999_k, -999_k, -999_k, -99_k, 4_k, 5_k, -9_k, -9_k, -9_k /), &\n+        shape(a)))) call abort\n+\n+   a = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   a = eoshift (a, (/9999_k, -9999_k, 0_k/), (/99_k, -1_k, 42_k/), 2_k)\n+   if (any (a .ne. reshape ((/99_k, -1_k, 3_k, 99_k, -1_k, 6_k, 99_k, -1_k, 9_k/), (/3_k, 3_k/)))) &\n+      call abort\n+\n+   ! Test arrays > rank 2\n+   b(:, :, 1_k) = reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   b(:, :, 2_k) = 10_k + reshape ((/1_k, 2_k, 3_k, 4_k, 5_k, 6_k, 7_k, 8_k, 9_k/), (/3_k, 3_k/))\n+   b = eoshift (b, 1_k, 99_k, 1_k)\n+   if (any (b(:, :, 1_k) .ne. reshape ((/2_k, 3_k, 99_k, 5_k, 6_k, 99_k, 8_k, 9_k, 99_k/), (/3_k, 3_k/)))) &\n+      call abort\n+   if (any (b(:, :, 2_k) .ne. reshape ((/12_k, 13_k, 99_k, 15_k, 16_k, 99_k, 18_k, 19_k, 99_k/), (/3_k, 3_k/)))) &\n+      call abort\n+\n+   ! TODO: Test array sections\n+end program"}, {"sha": "81820965ca6a1259f98c9c0ee9c213464444984e", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143350a8e2a65c8604f2fc5d36e04cf838bf280a/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143350a8e2a65c8604f2fc5d36e04cf838bf280a/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=143350a8e2a65c8604f2fc5d36e04cf838bf280a", "patch": "@@ -1,3 +1,14 @@\n+2008-05-22  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libgfortran/36302\n+\t* gfortran.map (GFORTRAN_1.1): Add _gfortran_eoshift0_16,\n+\t_gfortran_eoshift0_16_char, _gfortran_eoshift2_16,\n+\t_gfortran_eoshift2_16_char,_gfortran_cshift0_16,\n+\t_gfortran_cshift0_16_char.  Sort alphabetically.\n+\t* intrinsics/eoshift0.c:  Add function for kind=16 integer.\n+\t* intrinsics/eoshift2.c:  Likewise.\n+\t* intrinsics/cshift0.c:  Likewise.\n+\n 2008-05-18  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \t* m4/in_pack.m4 (internal_pack_'rtype_code`):  Destination"}, {"sha": "b61ce87990ed08669e0fcf220985cbb9c0657e90", "filename": "libgfortran/gfortran.map", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143350a8e2a65c8604f2fc5d36e04cf838bf280a/libgfortran%2Fgfortran.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143350a8e2a65c8604f2fc5d36e04cf838bf280a/libgfortran%2Fgfortran.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgfortran.map?ref=143350a8e2a65c8604f2fc5d36e04cf838bf280a", "patch": "@@ -1033,31 +1033,37 @@ GFORTRAN_1.0 {\n \n GFORTRAN_1.1 {\n   global:\n-    _gfortran_erfc_scaled_r4;\n-    _gfortran_erfc_scaled_r8;\n-    _gfortran_erfc_scaled_r10;\n-    _gfortran_erfc_scaled_r16;\n-    _gfortran_selected_char_kind;\n-    _gfortran_st_wait;\n     _gfortran_adjustl_char4;\n     _gfortran_adjustr_char4;\n     _gfortran_compare_string_char4;\n     _gfortran_concat_string_char4;\n+    _gfortran_convert_char1_to_char4;\n+    _gfortran_convert_char4_to_char1;\n+    _gfortran_cshift0_16;\n+    _gfortran_cshift0_16_char;\n+    _gfortran_eoshift0_16;\n+    _gfortran_eoshift0_16_char;\n+    _gfortran_eoshift2_16;\n+    _gfortran_eoshift2_16_char;\n+    _gfortran_erfc_scaled_r10;\n+    _gfortran_erfc_scaled_r16;\n+    _gfortran_erfc_scaled_r4;\n+    _gfortran_erfc_scaled_r8;\n+    _gfortran_pack_char4;\n+    _gfortran_pack_s_char4;\n+    _gfortran_reshape_char4;\n+    _gfortran_select_string_char4;\n+    _gfortran_selected_char_kind;\n+    _gfortran_spread_char4;\n+    _gfortran_spread_char4_scalar;\n+    _gfortran_st_wait;\n     _gfortran_string_index_char4;\n     _gfortran_string_len_trim_char4;\n     _gfortran_string_minmax_char4;\n     _gfortran_string_scan_char4;\n     _gfortran_string_trim_char4;\n     _gfortran_string_verify_char4;\n-    _gfortran_select_string_char4;\n-    _gfortran_convert_char1_to_char4;\n-    _gfortran_convert_char4_to_char1;\n     _gfortran_transpose_char4;\n-    _gfortran_spread_char4;\n-    _gfortran_spread_char4_scalar;\n-    _gfortran_reshape_char4;\n-    _gfortran_pack_char4;\n-    _gfortran_pack_s_char4;\n     _gfortran_unpack0_char4;\n     _gfortran_unpack1_char4;\n } GFORTRAN_1.0; "}, {"sha": "71574658dda97bf72407711fdd8ba837ba6e17c6", "filename": "libgfortran/intrinsics/cshift0.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143350a8e2a65c8604f2fc5d36e04cf838bf280a/libgfortran%2Fintrinsics%2Fcshift0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143350a8e2a65c8604f2fc5d36e04cf838bf280a/libgfortran%2Fintrinsics%2Fcshift0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fcshift0.c?ref=143350a8e2a65c8604f2fc5d36e04cf838bf280a", "patch": "@@ -340,3 +340,6 @@ DEFINE_CSHIFT (1);\n DEFINE_CSHIFT (2);\n DEFINE_CSHIFT (4);\n DEFINE_CSHIFT (8);\n+#ifdef HAVE_GFC_INTEGER_16\n+DEFINE_CSHIFT (16);\n+#endif"}, {"sha": "c75199c4a2f134c0221e02dc4e40bd07c3d93b14", "filename": "libgfortran/intrinsics/eoshift0.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143350a8e2a65c8604f2fc5d36e04cf838bf280a/libgfortran%2Fintrinsics%2Feoshift0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143350a8e2a65c8604f2fc5d36e04cf838bf280a/libgfortran%2Fintrinsics%2Feoshift0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Feoshift0.c?ref=143350a8e2a65c8604f2fc5d36e04cf838bf280a", "patch": "@@ -251,3 +251,6 @@ DEFINE_EOSHIFT (1);\n DEFINE_EOSHIFT (2);\n DEFINE_EOSHIFT (4);\n DEFINE_EOSHIFT (8);\n+#ifdef HAVE_GFC_INTEGER_16\n+DEFINE_EOSHIFT (16);\n+#endif"}, {"sha": "f74cb01fec85643e1f04295c34524db50126c945", "filename": "libgfortran/intrinsics/eoshift2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143350a8e2a65c8604f2fc5d36e04cf838bf280a/libgfortran%2Fintrinsics%2Feoshift2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143350a8e2a65c8604f2fc5d36e04cf838bf280a/libgfortran%2Fintrinsics%2Feoshift2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Feoshift2.c?ref=143350a8e2a65c8604f2fc5d36e04cf838bf280a", "patch": "@@ -272,3 +272,6 @@ DEFINE_EOSHIFT (1);\n DEFINE_EOSHIFT (2);\n DEFINE_EOSHIFT (4);\n DEFINE_EOSHIFT (8);\n+#ifdef HAVE_GFC_INTEGER_16\n+DEFINE_EOSHIFT (16);\n+#endif"}]}