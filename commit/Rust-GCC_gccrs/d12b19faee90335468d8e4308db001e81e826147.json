{"sha": "d12b19faee90335468d8e4308db001e81e826147", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEyYjE5ZmFlZTkwMzM1NDY4ZDhlNDMwOGRiMDAxZTgxZTgyNjE0Nw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-14T13:47:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-14T13:47:38Z"}, "message": "[multiple changes]\n\n2013-10-14  Robert Dewar  <dewar@adacore.com>\n\n\t* freeze.adb (Freeze_Record): Don't give warning about packed\n\tand foreign convention.\n\n2013-10-14  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_aux.adb, sem_aux.ads (Package_Specification): New function, to\n\treplace the less efficient idiom Specification.\n\t(Unit_Declaration_Node (Pack_Id)), which handles library units and\n\tchild units.\n\t* sem_ch3.adb, sem_ch10.adb, sem_prag.adb, sem_ch12.adb, sem_ch6.adb,\n\texp_disp.adb, sem_cat.adb, exp_dist.adb: Use Package_Specification.\n\n2013-10-14  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_attr.adb (Expand_Update_Attribute): Update the call to\n\tProcess_Range_Update.\n\t(Process_Range_Update): Add new formal parameter Typ and associated\n\tcomment on usage. Add local constant Index_Typ. Add a type conversion\n\tas part of the indexed component to ensure that the loop variable\n\tcorresponds to the index type.\n\nFrom-SVN: r203556", "tree": {"sha": "1ca40180287ecbdcef7a458af617060301c7fb60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ca40180287ecbdcef7a458af617060301c7fb60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d12b19faee90335468d8e4308db001e81e826147", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d12b19faee90335468d8e4308db001e81e826147", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d12b19faee90335468d8e4308db001e81e826147", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d12b19faee90335468d8e4308db001e81e826147/comments", "author": null, "committer": null, "parents": [{"sha": "515490e00039e88a5f165d282dd88642eba80983", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/515490e00039e88a5f165d282dd88642eba80983", "html_url": "https://github.com/Rust-GCC/gccrs/commit/515490e00039e88a5f165d282dd88642eba80983"}], "stats": {"total": 123, "additions": 85, "deletions": 38}, "files": [{"sha": "bd160a807e32c2af558dfef019d0a11ccde4e0a8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d12b19faee90335468d8e4308db001e81e826147", "patch": "@@ -1,3 +1,26 @@\n+2013-10-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* freeze.adb (Freeze_Record): Don't give warning about packed\n+\tand foreign convention.\n+\n+2013-10-14  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_aux.adb, sem_aux.ads (Package_Specification): New function, to\n+\treplace the less efficient idiom Specification.\n+\t(Unit_Declaration_Node (Pack_Id)), which handles library units and\n+\tchild units.\n+\t* sem_ch3.adb, sem_ch10.adb, sem_prag.adb, sem_ch12.adb, sem_ch6.adb,\n+\texp_disp.adb, sem_cat.adb, exp_dist.adb: Use Package_Specification.\n+\n+2013-10-14  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_attr.adb (Expand_Update_Attribute): Update the call to\n+\tProcess_Range_Update.\n+\t(Process_Range_Update): Add new formal parameter Typ and associated\n+\tcomment on usage. Add local constant Index_Typ. Add a type conversion\n+\tas part of the indexed component to ensure that the loop variable\n+\tcorresponds to the index type.\n+\n 2013-10-14  Tristan Gingold  <gingold@adacore.com>\n \n \t* a-exexpr-gcc.adb: Adjust comment."}, {"sha": "e039fadfda0c7ec91c06b8fba62f2594e79ebb7c", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=d12b19faee90335468d8e4308db001e81e826147", "patch": "@@ -6609,12 +6609,14 @@ package body Exp_Attr is\n       procedure Process_Range_Update\n         (Temp : Entity_Id;\n          Comp : Node_Id;\n-         Expr : Node_Id);\n+         Expr : Node_Id;\n+         Typ  : Entity_Id);\n       --  Generate the statements necessary to update a slice of the prefix.\n       --  The code is inserted before the attribute N. Temp denotes the entity\n       --  of the anonymous object created to reflect the changes in values.\n       --  Comp is range of the slice to be updated. Expr is an expression\n-      --  yielding the new value of Comp.\n+      --  yielding the new value of Comp. Typ is the type of the prefix of\n+      --  attribute Update.\n \n       -----------------------------------------\n       -- Process_Component_Or_Element_Update --\n@@ -6688,10 +6690,12 @@ package body Exp_Attr is\n       procedure Process_Range_Update\n         (Temp : Entity_Id;\n          Comp : Node_Id;\n-         Expr : Node_Id)\n+         Expr : Node_Id;\n+         Typ  : Entity_Id)\n       is\n-         Loc   : constant Source_Ptr := Sloc (Comp);\n-         Index : Entity_Id;\n+         Index_Typ : constant Entity_Id  := Etype (First_Index (Typ));\n+         Loc       : constant Source_Ptr := Sloc (Comp);\n+         Index     : Entity_Id;\n \n       begin\n          --  A range update appears as\n@@ -6703,7 +6707,7 @@ package body Exp_Attr is\n          --  value of Expr:\n \n          --    for Index in Low .. High loop\n-         --       Temp (Index) := Expr;\n+         --       Temp (<Index_Typ> (Index)) := Expr;\n          --    end loop;\n \n          Index := Make_Temporary (Loc, 'I');\n@@ -6722,18 +6726,19 @@ package body Exp_Attr is\n                  Name       =>\n                    Make_Indexed_Component (Loc,\n                      Prefix      => New_Reference_To (Temp, Loc),\n-                     Expressions => New_List (New_Reference_To (Index, Loc))),\n+                     Expressions => New_List (\n+                       Convert_To (Index_Typ, New_Reference_To (Index, Loc)))),\n                  Expression => Relocate_Node (Expr))),\n \n              End_Label        => Empty));\n       end Process_Range_Update;\n \n       --  Local variables\n \n-      Aggr  : constant Node_Id := First (Expressions (N));\n+      Aggr  : constant Node_Id    := First (Expressions (N));\n       Loc   : constant Source_Ptr := Sloc (N);\n-      Pref  : constant Node_Id := Prefix (N);\n-      Typ   : constant Entity_Id := Etype (Pref);\n+      Pref  : constant Node_Id    := Prefix (N);\n+      Typ   : constant Entity_Id  := Etype (Pref);\n       Assoc : Node_Id;\n       Comp  : Node_Id;\n       Expr  : Node_Id;\n@@ -6763,7 +6768,7 @@ package body Exp_Attr is\n          Expr := Expression (Assoc);\n          while Present (Comp) loop\n             if Nkind (Comp) = N_Range then\n-               Process_Range_Update (Temp, Comp, Expr);\n+               Process_Range_Update (Temp, Comp, Expr, Typ);\n             else\n                Process_Component_Or_Element_Update (Temp, Comp, Expr, Typ);\n             end if;"}, {"sha": "c2cbc25c20c07741de21e4bfa0716944091334bb", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=d12b19faee90335468d8e4308db001e81e826147", "patch": "@@ -7645,7 +7645,7 @@ package body Exp_Disp is\n       end if;\n \n       return List_Containing (Parent (Typ)) =\n-        Visible_Declarations (Specification (Unit_Declaration_Node (Scop)));\n+        Visible_Declarations (Package_Specification (Scop));\n    end Original_View_In_Visible_Part;\n \n    ------------------\n@@ -8446,8 +8446,7 @@ package body Exp_Disp is\n            and then In_Private_Part (Current_Scope)\n            and then\n              List_Containing (Parent (Prim)) =\n-               Private_Declarations\n-                (Specification (Unit_Declaration_Node (Current_Scope)))\n+               Private_Declarations (Package_Specification (Current_Scope))\n            and then Original_View_In_Visible_Part (Typ)\n          then\n             --  We exclude Input and Output stream operations because"}, {"sha": "d03644cae5c26e6b876fc881df27db775901c0ee", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=d12b19faee90335468d8e4308db001e81e826147", "patch": "@@ -2874,8 +2874,7 @@ package body Exp_Dist is\n \n          if RCI_Locator = Empty then\n             RCI_Locator_Decl :=\n-              RCI_Package_Locator\n-                (Loc, Specification (Unit_Declaration_Node (RCI_Package)));\n+              RCI_Package_Locator (Loc, Package_Specification (RCI_Package));\n             Prepend_To (Current_Sem_Unit_Declarations, RCI_Locator_Decl);\n             Analyze (RCI_Locator_Decl);\n             RCI_Locator := Defining_Unit_Name (RCI_Locator_Decl);"}, {"sha": "d07944ae05f6a8bb986bbefbdaa25fc0377166d6", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=d12b19faee90335468d8e4308db001e81e826147", "patch": "@@ -2741,6 +2741,11 @@ package body Freeze is\n \n                   if Has_Foreign_Convention (Etype (Comp))\n                     and then Has_Pragma_Pack (Rec)\n+\n+                    --  Don't warn for aliased components, since override\n+                    --  cannot happen in that case.\n+\n+                    and then not Is_Aliased (Comp)\n                   then\n                      declare\n                         CN : constant Name_Id :="}, {"sha": "5a4c4384320183c8628e48118de4471d30e9d6b5", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=d12b19faee90335468d8e4308db001e81e826147", "patch": "@@ -1151,6 +1151,27 @@ package body Sem_Aux is\n                   and then Has_Discriminants (Typ));\n    end Object_Type_Has_Constrained_Partial_View;\n \n+   ---------------------------\n+   -- Package_Specification --\n+   ---------------------------\n+\n+   function Package_Specification (Pack_Id : Entity_Id) return Node_Id is\n+      N : Node_Id;\n+\n+   begin\n+      N := Parent (Pack_Id);\n+\n+      while Nkind (N) /= N_Package_Specification loop\n+         N := Parent (N);\n+\n+         if No (N) then\n+            raise Program_Error;\n+         end if;\n+      end loop;\n+\n+      return N;\n+   end Package_Specification;\n+\n    ---------------\n    -- Tree_Read --\n    ---------------"}, {"sha": "d493059c42f39027ce23b732c0d7d12be0f9a497", "filename": "gcc/ada/sem_aux.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fsem_aux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fsem_aux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.ads?ref=d12b19faee90335468d8e4308db001e81e826147", "patch": "@@ -348,4 +348,8 @@ package Sem_Aux is\n    --  it returns the subprogram, task or protected body node for it. The unit\n    --  may be a child unit with any number of ancestors.\n \n+   function Package_Specification (Pack_Id : Entity_Id) return Node_Id;\n+   --  Given an entity for a package or generic package, return corresponding\n+   --  package specification. Simplifies handling of child units, and better\n+   --  than the old idiom: Specification (Unit_Declaration_Node (Pack_Id).\n end Sem_Aux;"}, {"sha": "79201c4edf081dc5b6e0f225b6722bf039c2c37d", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=d12b19faee90335468d8e4308db001e81e826147", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -561,8 +561,7 @@ package body Sem_Cat is\n         and then Is_Package_Or_Generic_Package (Unit_Entity)\n         and then Unit_Kind /= N_Package_Body\n         and then List_Containing (N) =\n-                   Visible_Declarations\n-                     (Specification (Unit_Declaration_Node (Unit_Entity)))\n+                   Visible_Declarations (Package_Specification (Unit_Entity))\n         and then not In_Package_Body (Unit_Entity)\n         and then not In_Instance;\n "}, {"sha": "1c9fd26bbb9e917a9e73eb13247faff9a00522d1", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=d12b19faee90335468d8e4308db001e81e826147", "patch": "@@ -4028,7 +4028,7 @@ package body Sem_Ch10 is\n          Is_Private_Descendant (P_Name)\n            or else Private_Present (Parent (Lib_Unit)));\n \n-      P_Spec := Specification (Unit_Declaration_Node (P_Name));\n+      P_Spec := Package_Specification (P_Name);\n       Push_Scope (P_Name);\n \n       --  Save current visibility of unit"}, {"sha": "2ae6418baf7268935875cd97375f78135c8edd9c", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=d12b19faee90335468d8e4308db001e81e826147", "patch": "@@ -5664,8 +5664,7 @@ package body Sem_Ch12 is\n                            (Related_Instance (Instance))));\n                else\n                   Gen_Id :=\n-                    Generic_Parent\n-                      (Specification (Unit_Declaration_Node (Instance)));\n+                    Generic_Parent (Package_Specification (Instance));\n                end if;\n \n                Parent_Scope := Scope (Gen_Id);\n@@ -8365,7 +8364,7 @@ package body Sem_Ch12 is\n       --  of its generic parent.\n \n       if Is_Generic_Instance (Par) then\n-         Gen   := Generic_Parent (Specification (Unit_Declaration_Node (Par)));\n+         Gen   := Generic_Parent (Package_Specification (Par));\n          Gen_E := First_Entity (Gen);\n       end if;\n \n@@ -8449,8 +8448,7 @@ package body Sem_Ch12 is\n       ------------------\n \n       procedure Install_Spec (Par : Entity_Id) is\n-         Spec : constant Node_Id :=\n-                  Specification (Unit_Declaration_Node (Par));\n+         Spec : constant Node_Id := Package_Specification (Par);\n \n       begin\n          --  If this parent of the child instance is a top-level unit,\n@@ -8519,8 +8517,7 @@ package body Sem_Ch12 is\n \n       First_Par := Inst_Par;\n \n-      Gen_Par :=\n-        Generic_Parent (Specification (Unit_Declaration_Node (Inst_Par)));\n+      Gen_Par := Generic_Parent (Package_Specification (Inst_Par));\n \n       First_Gen := Gen_Par;\n \n@@ -8538,9 +8535,7 @@ package body Sem_Ch12 is\n                Inst_Par := Renamed_Entity (Inst_Par);\n             end if;\n \n-            Gen_Par :=\n-              Generic_Parent\n-                (Specification (Unit_Declaration_Node (Inst_Par)));\n+            Gen_Par := Generic_Parent (Package_Specification (Inst_Par));\n \n             if Present (Gen_Par) then\n                Prepend_Elmt (Inst_Par, Ancestors);\n@@ -9009,7 +9004,7 @@ package body Sem_Ch12 is\n          end if;\n \n          if Nkind (Parent (Actual_Pack)) = N_Defining_Program_Unit_Name then\n-            Parent_Spec := Specification (Unit_Declaration_Node (Actual_Pack));\n+            Parent_Spec := Package_Specification (Actual_Pack);\n          else\n             Parent_Spec := Parent (Actual_Pack);\n          end if;\n@@ -12571,8 +12566,7 @@ package body Sem_Ch12 is\n             elsif S = Current_Scope and then Is_Generic_Instance (S) then\n                declare\n                   Par : constant Entity_Id :=\n-                          Generic_Parent\n-                            (Specification (Unit_Declaration_Node (S)));\n+                          Generic_Parent (Package_Specification (S));\n                begin\n                   if Present (Par)\n                     and then P = Scope (Par)"}, {"sha": "8074775dfd067949a2eb7d3d4edc9795277ffb8e", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=d12b19faee90335468d8e4308db001e81e826147", "patch": "@@ -10919,8 +10919,7 @@ package body Sem_Ch3 is\n          elsif Ekind (Current_Scope) = E_Package\n            and then\n              List_Containing (Parent (Prev)) /=\n-               Visible_Declarations\n-                 (Specification (Unit_Declaration_Node (Current_Scope)))\n+               Visible_Declarations (Package_Specification (Current_Scope))\n          then\n             Error_Msg_N\n               (\"deferred constant must be declared in visible part\","}, {"sha": "fec9ef5cea20d51b6a2b8981507b34d8b1fe6fcb", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=d12b19faee90335468d8e4308db001e81e826147", "patch": "@@ -10318,8 +10318,7 @@ package body Sem_Ch6 is\n            and then In_Private_Part (Current_Scope)\n          then\n             Priv_Decls :=\n-              Private_Declarations\n-                (Specification (Unit_Declaration_Node (Current_Scope)));\n+              Private_Declarations (Package_Specification (Current_Scope));\n \n             return In_Package_Body (Current_Scope)\n               or else"}, {"sha": "f8ee02dd173b733baefa6b3b6a17bfb1ce7cb69f", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12b19faee90335468d8e4308db001e81e826147/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=d12b19faee90335468d8e4308db001e81e826147", "patch": "@@ -21725,7 +21725,7 @@ package body Sem_Prag is\n \n          --  Local variables\n \n-         Pack_Spec : constant Node_Id := Parent (Spec_Id);\n+         Pack_Spec : constant Node_Id := Package_Specification (Spec_Id);\n \n       --  Start of processing for Collect_Hidden_States\n "}]}