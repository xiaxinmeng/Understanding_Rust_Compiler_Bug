{"sha": "1e6648076498a4644aabbfe3ec74b3b2a5b67772", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU2NjQ4MDc2NDk4YTQ2NDRhYWJiZmUzZWM3NGIzYjJhNWI2Nzc3Mg==", "commit": {"author": {"name": "Geng Qi", "email": "gengqi@linux.alibaba.com", "date": "2021-05-18T03:16:14Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2021-05-19T14:39:50Z"}, "message": "RISC-V: Properly parse the letter 'p' in '-march'.\n\ngcc/ChangeLog:\n\t* common/config/riscv/riscv-common.c\n\t(riscv_subset_list::parsing_subset_version): Properly parse the letter\n\t'p' in '-march'.\n\t(riscv_subset_list::parse_std_ext,\n\t riscv_subset_list::parse_multiletter_ext): To handle errors generated\n\tin riscv_subset_list::parsing_subset_version.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.target/riscv/arch-12.c: New.\n\t* gcc.target/riscv/attribute-19.c: New.", "tree": {"sha": "adb60c9607cae7c1b5c8c5b651a0e5224244beb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adb60c9607cae7c1b5c8c5b651a0e5224244beb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e6648076498a4644aabbfe3ec74b3b2a5b67772", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e6648076498a4644aabbfe3ec74b3b2a5b67772", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e6648076498a4644aabbfe3ec74b3b2a5b67772", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e6648076498a4644aabbfe3ec74b3b2a5b67772/comments", "author": {"login": "Geng-Qi-alibaba", "id": 74535016, "node_id": "MDQ6VXNlcjc0NTM1MDE2", "avatar_url": "https://avatars.githubusercontent.com/u/74535016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Geng-Qi-alibaba", "html_url": "https://github.com/Geng-Qi-alibaba", "followers_url": "https://api.github.com/users/Geng-Qi-alibaba/followers", "following_url": "https://api.github.com/users/Geng-Qi-alibaba/following{/other_user}", "gists_url": "https://api.github.com/users/Geng-Qi-alibaba/gists{/gist_id}", "starred_url": "https://api.github.com/users/Geng-Qi-alibaba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Geng-Qi-alibaba/subscriptions", "organizations_url": "https://api.github.com/users/Geng-Qi-alibaba/orgs", "repos_url": "https://api.github.com/users/Geng-Qi-alibaba/repos", "events_url": "https://api.github.com/users/Geng-Qi-alibaba/events{/privacy}", "received_events_url": "https://api.github.com/users/Geng-Qi-alibaba/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45364338209929542b14b805796f40b71a0fa960", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45364338209929542b14b805796f40b71a0fa960", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45364338209929542b14b805796f40b71a0fa960"}], "stats": {"total": 76, "additions": 43, "deletions": 33}, "files": [{"sha": "10868fd417dc752c4cb5385c6cfad23614dc9bd2", "filename": "gcc/common/config/riscv/riscv-common.c", "status": "modified", "additions": 35, "deletions": 33, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6648076498a4644aabbfe3ec74b3b2a5b67772/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6648076498a4644aabbfe3ec74b3b2a5b67772/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.c?ref=1e6648076498a4644aabbfe3ec74b3b2a5b67772", "patch": "@@ -518,40 +518,39 @@ riscv_subset_list::parsing_subset_version (const char *ext,\n   unsigned version = 0;\n   unsigned major = 0;\n   unsigned minor = 0;\n-  char np;\n   *explicit_version_p = false;\n \n-  for (; *p; ++p)\n-    {\n-      if (*p == 'p')\n-\t{\n-\t  np = *(p + 1);\n-\n-\t  if (!ISDIGIT (np))\n-\t    {\n-\t      /* Might be beginning of `p` extension.  */\n-\t      if (std_ext_p)\n-\t\t{\n-\t\t  get_default_version (ext, major_version, minor_version);\n-\t\t  return p;\n-\t\t}\n-\t      else\n-\t\t{\n-\t\t  error_at (m_loc, \"%<-march=%s%>: Expect number \"\n-\t\t\t    \"after %<%dp%>.\", m_arch, version);\n-\t\t  return NULL;\n-\t\t}\n-\t    }\n-\n-\t  major = version;\n-\t  major_p = false;\n-\t  version = 0;\n-\t}\n-      else if (ISDIGIT (*p))\n-\tversion = (version * 10) + (*p - '0');\n-      else\n-\tbreak;\n-    }\n+  /* If we got `p`, that means we are still parsing standard extension.  */\n+  gcc_assert (std_ext_p || *p != 'p');\n+\n+  if (*p != 'p') {\n+    for (; *p; ++p)\n+      {\n+\tif (*p == 'p')\n+\t  {\n+\t    if (!ISDIGIT (*(p+1)))\n+\t      {\n+\t\terror_at (m_loc, \"%<-march=%s%>: Expect number \"\n+\t\t\t  \"after %<%dp%>.\", m_arch, version);\n+\t\treturn NULL;\n+\t      }\n+\t    if (!major_p)\n+\t      {\n+\t\terror_at (m_loc, \"%<-march=%s%>: For %<%s%dp%dp?%>, version \"\n+\t\t\t  \"number with more than 2 level is not supported.\",\n+\t\t\t  m_arch, ext, major, version);\n+\t\treturn NULL;\n+\t      }\n+\t    major = version;\n+\t    major_p = false;\n+\t    version = 0;\n+\t  }\n+\telse if (ISDIGIT (*p))\n+\t  version = (version * 10) + (*p - '0');\n+\telse\n+\t  break;\n+      }\n+  }\n \n   if (major_p)\n     major = version;\n@@ -643,7 +642,7 @@ riscv_subset_list::parse_std_ext (const char *p)\n       return NULL;\n     }\n \n-  while (*p)\n+  while (p != NULL && *p)\n     {\n       char subset[2] = {0, 0};\n \n@@ -771,6 +770,9 @@ riscv_subset_list::parse_multiletter_ext (const char *p,\n \t\t\t\t  /* std_ext_p= */ false, &explicit_version_p);\n       free (ext);\n \n+      if (end_of_version == NULL)\n+\treturn NULL;\n+\n       *q = '\\0';\n \n       if (strlen (subset) == 1)"}, {"sha": "29e16c30815a523f9d2f5954d1cb388d8987231c", "filename": "gcc/testsuite/gcc.target/riscv/arch-12.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6648076498a4644aabbfe3ec74b3b2a5b67772/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6648076498a4644aabbfe3ec74b3b2a5b67772/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-12.c?ref=1e6648076498a4644aabbfe3ec74b3b2a5b67772", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=rv64im1p2p3 -mabi=lp64\" } */\n+int foo() {}\n+/* { dg-error \"'-march=rv64im1p2p3': For 'm1p2p\\\\?', version number with more than 2 level is not supported.\" \"\" { target *-*-* } 0 } */"}, {"sha": "18f68d985612f5fd64fe75e75325d36ee42ccbf4", "filename": "gcc/testsuite/gcc.target/riscv/attribute-19.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6648076498a4644aabbfe3ec74b3b2a5b67772/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fattribute-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6648076498a4644aabbfe3ec74b3b2a5b67772/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fattribute-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fattribute-19.c?ref=1e6648076498a4644aabbfe3ec74b3b2a5b67772", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mriscv-attribute -march=rv64imp0p9 -mabi=lp64\" } */\n+int foo() {}\n+/* { dg-final { scan-assembler \".attribute arch, \\\"rv64i2p0_m2p0_p0p9\\\"\" } } */"}]}