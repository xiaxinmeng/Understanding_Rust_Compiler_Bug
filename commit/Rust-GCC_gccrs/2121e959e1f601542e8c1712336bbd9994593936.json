{"sha": "2121e959e1f601542e8c1712336bbd9994593936", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEyMWU5NTllMWY2MDE1NDJlOGMxNzEyMzM2YmJkOTk5NDU5MzkzNg==", "commit": {"author": {"name": "Pedro Alves", "email": "palves@redhat.com", "date": "2016-10-14T15:24:58Z"}, "committer": {"name": "Pedro Alves", "email": "palves@gcc.gnu.org", "date": "2016-10-14T15:24:58Z"}, "message": "Move OVERRIDE/FINAL from gcc/coretypes.h to include/ansidecl.h\n\nSo that GDB and other projects that share the top level can use them.\n\nBootstrapped with all default languages + jit on x86-64 Fedora 23.\n\ngcc/ChangeLog:\n2016-10-14  Pedro Alves  <palves@redhat.com>\n\n\t* coretypes.h (OVERRIDE, FINAL): Delete, moved to\n\tinclude/ansidecl.h.\n\ninclude/ChangeLog:\n2016-10-14  Pedro Alves  <palves@redhat.com>\n\n\t* ansidecl.h (GCC_FINAL): Delete.\n\t(OVERRIDE, FINAL): New, moved from gcc/coretypes.h.\n\nFrom-SVN: r241166", "tree": {"sha": "874da203b18e4cdb9000c7d3e3fdd49744028ce3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/874da203b18e4cdb9000c7d3e3fdd49744028ce3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2121e959e1f601542e8c1712336bbd9994593936", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2121e959e1f601542e8c1712336bbd9994593936", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2121e959e1f601542e8c1712336bbd9994593936", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2121e959e1f601542e8c1712336bbd9994593936/comments", "author": {"login": "palves", "id": 1202913, "node_id": "MDQ6VXNlcjEyMDI5MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palves", "html_url": "https://github.com/palves", "followers_url": "https://api.github.com/users/palves/followers", "following_url": "https://api.github.com/users/palves/following{/other_user}", "gists_url": "https://api.github.com/users/palves/gists{/gist_id}", "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palves/subscriptions", "organizations_url": "https://api.github.com/users/palves/orgs", "repos_url": "https://api.github.com/users/palves/repos", "events_url": "https://api.github.com/users/palves/events{/privacy}", "received_events_url": "https://api.github.com/users/palves/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "df17106f1ed4982791025e4b84a46543b26771d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df17106f1ed4982791025e4b84a46543b26771d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df17106f1ed4982791025e4b84a46543b26771d0"}], "stats": {"total": 63, "additions": 32, "deletions": 31}, "files": [{"sha": "6638830bf8097a563691f7cccf9681040bb9b3b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2121e959e1f601542e8c1712336bbd9994593936/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2121e959e1f601542e8c1712336bbd9994593936/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2121e959e1f601542e8c1712336bbd9994593936", "patch": "@@ -1,3 +1,8 @@\n+2016-10-14  Pedro Alves  <palves@redhat.com>\n+\n+\t* coretypes.h (OVERRIDE, FINAL): Delete, moved to\n+\tinclude/ansidecl.h.\n+\n 2016-10-14  Catherine Moore  <clm@codesourcery.com>\n \n \t* gcc/config/mips/mips.c (mips_prepare_pch_save): Initialize"}, {"sha": "869f858d4a13b9f95f72b536ee0ee23b5a7d4522", "filename": "gcc/coretypes.h", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2121e959e1f601542e8c1712336bbd9994593936/gcc%2Fcoretypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2121e959e1f601542e8c1712336bbd9994593936/gcc%2Fcoretypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoretypes.h?ref=2121e959e1f601542e8c1712336bbd9994593936", "patch": "@@ -339,31 +339,6 @@ typedef void (*gt_pointer_operator) (void *, void *);\n typedef unsigned char uchar;\n #endif\n \n-/* C++11 adds the ability to add \"override\" after an implementation of a\n-   virtual function in a subclass, to:\n-     (A) document that this is an override of a virtual function\n-     (B) allow the compiler to issue a warning if it isn't (e.g. a mismatch\n-         of the type signature).\n-\n-   Similarly, it allows us to add a \"final\" to indicate that no subclass\n-   may subsequently override the vfunc.\n-\n-   Provide OVERRIDE and FINAL as macros, allowing us to get these benefits\n-   when compiling with C++11 support, but without requiring C++11.\n-\n-   For gcc, use \"-std=c++11\" to enable C++11 support; gcc 6 onwards enables\n-   this by default (actually GNU++14).  */\n-\n-#if __cplusplus >= 201103\n-/* C++11 claims to be available: use it: */\n-#define OVERRIDE override\n-#define FINAL final\n-#else\n-/* No C++11 support; leave the macros empty: */\n-#define OVERRIDE\n-#define FINAL\n-#endif\n-\n /* Most host source files will require the following headers.  */\n #if !defined (GENERATOR_FILE) && !defined (USED_FOR_TARGET)\n #include \"machmode.h\""}, {"sha": "18bc5ff8d96ea2e8cbc97e02ff08f0ccb912f342", "filename": "include/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2121e959e1f601542e8c1712336bbd9994593936/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2121e959e1f601542e8c1712336bbd9994593936/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=2121e959e1f601542e8c1712336bbd9994593936", "patch": "@@ -1,3 +1,8 @@\n+2016-10-14  Pedro Alves  <palves@redhat.com>\n+\n+\t* ansidecl.h (GCC_FINAL): Delete.\n+\t(OVERRIDE, FINAL): New, moved from gcc/coretypes.h.\n+\n 2016-08-15  Jakub Jelinek  <jakub@redhat.com>\n \n \t* dwarf2.def (DW_AT_string_length_bit_size,"}, {"sha": "ee934216f073b9551be068f95867a81c417d0c19", "filename": "include/ansidecl.h", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2121e959e1f601542e8c1712336bbd9994593936/include%2Fansidecl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2121e959e1f601542e8c1712336bbd9994593936/include%2Fansidecl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fansidecl.h?ref=2121e959e1f601542e8c1712336bbd9994593936", "patch": "@@ -313,13 +313,29 @@ So instead we use the macro below and test it against specific values.  */\n #define ENUM_BITFIELD(TYPE) unsigned int\n #endif\n \n-    /* This is used to mark a class or virtual function as final.  */\n-#if __cplusplus >= 201103L\n-#define GCC_FINAL final\n-#elif GCC_VERSION >= 4007\n-#define GCC_FINAL __final\n+/* C++11 adds the ability to add \"override\" after an implementation of a\n+   virtual function in a subclass, to:\n+     (A) document that this is an override of a virtual function\n+     (B) allow the compiler to issue a warning if it isn't (e.g. a mismatch\n+         of the type signature).\n+\n+   Similarly, it allows us to add a \"final\" to indicate that no subclass\n+   may subsequently override the vfunc.\n+\n+   Provide OVERRIDE and FINAL as macros, allowing us to get these benefits\n+   when compiling with C++11 support, but without requiring C++11.\n+\n+   For gcc, use \"-std=c++11\" to enable C++11 support; gcc 6 onwards enables\n+   this by default (actually GNU++14).  */\n+\n+#if __cplusplus >= 201103\n+/* C++11 claims to be available: use it: */\n+#define OVERRIDE override\n+#define FINAL final\n #else\n-#define GCC_FINAL\n+/* No C++11 support; leave the macros empty: */\n+#define OVERRIDE\n+#define FINAL\n #endif\n \n #ifdef __cplusplus"}]}