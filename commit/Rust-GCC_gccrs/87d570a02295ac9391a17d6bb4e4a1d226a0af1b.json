{"sha": "87d570a02295ac9391a17d6bb4e4a1d226a0af1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdkNTcwYTAyMjk1YWM5MzkxYTE3ZDZiYjRlNGExZDIyNmEwYWYxYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-12-13T07:58:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-12-13T07:58:42Z"}, "message": "re PR target/88461 (AVX512: gcc should keep value in kN registers if possible)\n\n\tPR target/88461\n\t* config/i386/i386.md (*zero_extendsidi2, zero_extend<mode>di2,\n\t*zero_extend<mode>si2, *zero_extendqihi2): Add =*k, *km alternatives.\n\nFrom-SVN: r267076", "tree": {"sha": "46d93425a7a4c94d71a8eda5fd33a3e7b68f76a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46d93425a7a4c94d71a8eda5fd33a3e7b68f76a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87d570a02295ac9391a17d6bb4e4a1d226a0af1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87d570a02295ac9391a17d6bb4e4a1d226a0af1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87d570a02295ac9391a17d6bb4e4a1d226a0af1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87d570a02295ac9391a17d6bb4e4a1d226a0af1b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "401069dab8cadc29e34f968bbf360ef93c340ce6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/401069dab8cadc29e34f968bbf360ef93c340ce6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/401069dab8cadc29e34f968bbf360ef93c340ce6"}], "stats": {"total": 49, "additions": 30, "deletions": 19}, "files": [{"sha": "4e96dd061cab4493a70a02f0a3fa18c9fb29c6cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d570a02295ac9391a17d6bb4e4a1d226a0af1b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d570a02295ac9391a17d6bb4e4a1d226a0af1b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87d570a02295ac9391a17d6bb4e4a1d226a0af1b", "patch": "@@ -1,3 +1,9 @@\n+2018-12-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/88461\n+\t* config/i386/i386.md (*zero_extendsidi2, zero_extend<mode>di2,\n+\t*zero_extend<mode>si2, *zero_extendqihi2): Add =*k, *km alternatives.\n+\n 2018-12-12  Tom de Vries  <tdevries@suse.de>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "a220346a06871959c76e079c7e1e6d289c5c4718", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 24, "deletions": 19, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87d570a02295ac9391a17d6bb4e4a1d226a0af1b/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87d570a02295ac9391a17d6bb4e4a1d226a0af1b/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=87d570a02295ac9391a17d6bb4e4a1d226a0af1b", "patch": "@@ -3751,10 +3751,10 @@\n \n (define_insn \"*zero_extendsidi2\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n-\t\t\"=r,?r,?o,r   ,o,?*y,?!*y,$r,$v,$x,*x,*v,*r\")\n+\t\t\"=r,?r,?o,r   ,o,?*y,?!*y,$r,$v,$x,*x,*v,*r,*k\")\n \t(zero_extend:DI\n \t (match_operand:SI 1 \"x86_64_zext_operand\"\n-\t        \"0 ,rm,r ,rmWz,0,r  ,m   ,v ,r ,m ,*x,*v,*k\")))]\n+\t        \"0 ,rm,r ,rmWz,0,r  ,m   ,v ,r ,m ,*x,*v,*k,*km\")))]\n   \"\"\n {\n   switch (get_attr_type (insn))\n@@ -3806,6 +3806,8 @@\n \t      (const_string \"avx512f\")\n \t    (eq_attr \"alternative\" \"12\")\n \t      (const_string \"x64_avx512bw\")\n+\t    (eq_attr \"alternative\" \"13\")\n+\t      (const_string \"avx512bw\")\n \t   ]\n \t   (const_string \"*\")))\n    (set (attr \"type\")\n@@ -3819,7 +3821,7 @@\n \t\t(const_string \"multi\"))\n \t    (eq_attr \"alternative\" \"8,9,10,11\")\n \t      (const_string \"ssemov\")\n-\t    (eq_attr \"alternative\" \"12\")\n+\t    (eq_attr \"alternative\" \"12,13\")\n \t      (const_string \"mskmov\")\n \t   ]\n \t   (const_string \"imovx\")))\n@@ -3881,16 +3883,17 @@\n   [(QI \"avx512dq\") (HI \"avx512f\") (SI \"avx512bw\") (DI \"avx512bw\")])\n \n (define_insn \"zero_extend<mode>di2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r,*r\")\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r,*r,*k\")\n \t(zero_extend:DI\n-\t (match_operand:SWI12 1 \"nonimmediate_operand\" \"<r>m,*k\")))]\n+\t (match_operand:SWI12 1 \"nonimmediate_operand\" \"<r>m,*k,*km\")))]\n   \"TARGET_64BIT\"\n   \"@\n    movz{<imodesuffix>l|x}\\t{%1, %k0|%k0, %1}\n+   kmov<mskmodesuffix>\\t{%1, %k0|%k0, %1}\n    kmov<mskmodesuffix>\\t{%1, %k0|%k0, %1}\"\n-  [(set_attr \"isa\" \"*,<kmov_isa>\")\n-   (set_attr \"type\" \"imovx,mskmov\")\n-   (set_attr \"mode\" \"SI,<MODE>\")])\n+  [(set_attr \"isa\" \"*,<kmov_isa>,<kmov_isa>\")\n+   (set_attr \"type\" \"imovx,mskmov,mskmov\")\n+   (set_attr \"mode\" \"SI,<MODE>,<MODE>\")])\n \n (define_expand \"zero_extend<mode>si2\"\n   [(set (match_operand:SI 0 \"register_operand\")\n@@ -3933,16 +3936,17 @@\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"*zero_extend<mode>si2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r,*r\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r,*r,*k\")\n \t(zero_extend:SI\n-\t  (match_operand:SWI12 1 \"nonimmediate_operand\" \"<r>m,*k\")))]\n+\t  (match_operand:SWI12 1 \"nonimmediate_operand\" \"<r>m,*k,*km\")))]\n   \"!(TARGET_ZERO_EXTEND_WITH_AND && optimize_function_for_speed_p (cfun))\"\n   \"@\n    movz{<imodesuffix>l|x}\\t{%1, %0|%0, %1}\n+   kmov<mskmodesuffix>\\t{%1, %0|%0, %1}\n    kmov<mskmodesuffix>\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"isa\" \"*,<kmov_isa>\")\n-   (set_attr \"type\" \"imovx,mskmov\")\n-   (set_attr \"mode\" \"SI,<MODE>\")])\n+  [(set_attr \"isa\" \"*,<kmov_isa>,<kmov_isa>\")\n+   (set_attr \"type\" \"imovx,mskmov,mskmov\")\n+   (set_attr \"mode\" \"SI,<MODE>,<MODE>\")])\n \n (define_expand \"zero_extendqihi2\"\n   [(set (match_operand:HI 0 \"register_operand\")\n@@ -3985,15 +3989,16 @@\n \n ; zero extend to SImode to avoid partial register stalls\n (define_insn \"*zero_extendqihi2\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=r,*r\")\n-\t(zero_extend:HI (match_operand:QI 1 \"nonimmediate_operand\" \"qm,*k\")))]\n+  [(set (match_operand:HI 0 \"register_operand\" \"=r,*r,*k\")\n+\t(zero_extend:HI (match_operand:QI 1 \"nonimmediate_operand\" \"qm,*k,*km\")))]\n   \"!(TARGET_ZERO_EXTEND_WITH_AND && optimize_function_for_speed_p (cfun))\"\n   \"@\n    movz{bl|x}\\t{%1, %k0|%k0, %1}\n-   kmovb\\t{%1, %k0|%k0, %1}\"\n-  [(set_attr \"isa\" \"*,avx512dq\")\n-   (set_attr \"type\" \"imovx,mskmov\")\n-   (set_attr \"mode\" \"SI,QI\")])\n+   kmovb\\t{%1, %k0|%k0, %1}\n+   kmovb\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"isa\" \"*,avx512dq,avx512dq\")\n+   (set_attr \"type\" \"imovx,mskmov,mskmov\")\n+   (set_attr \"mode\" \"SI,QI,QI\")])\n \n (define_insn_and_split \"*zext<mode>_doubleword_and\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=&<r>\")"}]}