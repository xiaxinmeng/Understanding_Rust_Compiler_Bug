{"sha": "c97f3a7dc230dab0877d0c27b84eb06132cf7bf8", "node_id": "C_kwDOANBUbNoAKGM5N2YzYTdkYzIzMGRhYjA4NzdkMGMyN2I4NGViMDYxMzJjZjdiZjg", "commit": {"author": {"name": "Doug Rupp", "email": "rupp@adacore.com", "date": "2022-04-14T17:59:37Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-06-01T08:43:16Z"}, "message": "[Ada] arm-qnx-7.1: unwind goes wrong after regs restore\n\nThe usual increment of the pc to pc+2 for ARM is needed.\n\ngcc/ada/\n\n\t* init.c (QNX): __gnat_adjust_context_for_raise: New\n\timplementation for arm-qnx.", "tree": {"sha": "12de08f6e77110e19a5258c91835690b82428ccd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12de08f6e77110e19a5258c91835690b82428ccd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c97f3a7dc230dab0877d0c27b84eb06132cf7bf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c97f3a7dc230dab0877d0c27b84eb06132cf7bf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c97f3a7dc230dab0877d0c27b84eb06132cf7bf8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c97f3a7dc230dab0877d0c27b84eb06132cf7bf8/comments", "author": {"login": "Cementitious", "id": 115579865, "node_id": "U_kgDOBuOb2Q", "avatar_url": "https://avatars.githubusercontent.com/u/115579865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cementitious", "html_url": "https://github.com/Cementitious", "followers_url": "https://api.github.com/users/Cementitious/followers", "following_url": "https://api.github.com/users/Cementitious/following{/other_user}", "gists_url": "https://api.github.com/users/Cementitious/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cementitious/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cementitious/subscriptions", "organizations_url": "https://api.github.com/users/Cementitious/orgs", "repos_url": "https://api.github.com/users/Cementitious/repos", "events_url": "https://api.github.com/users/Cementitious/events{/privacy}", "received_events_url": "https://api.github.com/users/Cementitious/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3949a2e785eb387d7e25d5ab06f4662d643d8fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3949a2e785eb387d7e25d5ab06f4662d643d8fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3949a2e785eb387d7e25d5ab06f4662d643d8fc"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "7322a54a4da3503db9a0dedf09f3b132afd17341", "filename": "gcc/ada/init.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c97f3a7dc230dab0877d0c27b84eb06132cf7bf8/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c97f3a7dc230dab0877d0c27b84eb06132cf7bf8/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=c97f3a7dc230dab0877d0c27b84eb06132cf7bf8", "patch": "@@ -2560,6 +2560,29 @@ __gnat_install_handler (void)\n #include <errno.h>\n #include \"sigtramp.h\"\n \n+#if defined (__ARMEL__) && !defined (__aarch64__)\n+\n+/* ARM-QNX case with arm unwinding exceptions */\n+#define HAVE_GNAT_ADJUST_CONTEXT_FOR_RAISE\n+\n+#include <ucontext.h>\n+#include <arm/cpu.h>\n+#include <stdint.h>\n+\n+void\n+__gnat_adjust_context_for_raise (int signo ATTRIBUTE_UNUSED,\n+\t\t\t\t void *sc ATTRIBUTE_UNUSED)\n+{\n+  /* In case of ARM exceptions, the registers context have the PC pointing\n+     to the instruction that raised the signal.  However the unwinder expects\n+     the instruction to be in the range [PC+2,PC+3].  */\n+  uintptr_t *pc_addr;\n+  mcontext_t *mcontext = &((ucontext_t *) sc)->uc_mcontext;\n+  pc_addr = (uintptr_t *)&mcontext->cpu.gpr [ARM_REG_PC];\n+  *pc_addr += 2;\n+}\n+#endif /* ARMEL */\n+\n void\n __gnat_map_signal (int sig,\n \t\t   siginfo_t *si ATTRIBUTE_UNUSED,\n@@ -2597,6 +2620,13 @@ __gnat_map_signal (int sig,\n static void\n __gnat_error_handler (int sig, siginfo_t *si, void *ucontext)\n {\n+#ifdef HAVE_GNAT_ADJUST_CONTEXT_FOR_RAISE\n+  /* We need to sometimes to adjust the PC in case of signals so that it\n+     doesn't reference the exception that actually raised the signal but the\n+     instruction before it.  */\n+  __gnat_adjust_context_for_raise (sig, ucontext);\n+#endif\n+\n   __gnat_sigtramp (sig, (void *) si, (void *) ucontext,\n \t\t   (__sigtramphandler_t *)&__gnat_map_signal);\n }"}]}