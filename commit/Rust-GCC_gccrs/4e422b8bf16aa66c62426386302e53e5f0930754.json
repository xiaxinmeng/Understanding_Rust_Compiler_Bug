{"sha": "4e422b8bf16aa66c62426386302e53e5f0930754", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU0MjJiOGJmMTZhYTY2YzYyNDI2Mzg2MzAyZTUzZTVmMDkzMDc1NA==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2005-07-06T16:49:57Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2005-07-06T16:49:57Z"}, "message": "Fix PR tree-optimization/22319 Fix PR tree-optimization/22140 Fix PR tree-optimization/22310\n\n2005-07-06  Daniel Berlin  <dberlin@dberlin.org>\n\n\tFix PR tree-optimization/22319\n\tFix PR tree-optimization/22140\n\tFix PR tree-optimization/22310\n\n\t* tree-ssa-structalias.c (do_structure_copy): Give up earlier on\n\tvariable sized types.\n\tUse correct type for intermediate structure on *a = *b structure\n\tcopies.\n\nFrom-SVN: r101658", "tree": {"sha": "27e909652b64fc9008a0ea204c49da7692c67efa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27e909652b64fc9008a0ea204c49da7692c67efa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e422b8bf16aa66c62426386302e53e5f0930754", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e422b8bf16aa66c62426386302e53e5f0930754", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e422b8bf16aa66c62426386302e53e5f0930754", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e422b8bf16aa66c62426386302e53e5f0930754/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "af72a49b3046faa5fce5f759224f389e47f25b28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af72a49b3046faa5fce5f759224f389e47f25b28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af72a49b3046faa5fce5f759224f389e47f25b28"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "c6c968b3141e8359b67c13ed61a04a824d4e20f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e422b8bf16aa66c62426386302e53e5f0930754/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e422b8bf16aa66c62426386302e53e5f0930754/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e422b8bf16aa66c62426386302e53e5f0930754", "patch": "@@ -1,3 +1,14 @@\n+2005-07-06  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\tFix PR tree-optimization/22319\n+\tFix PR tree-optimization/22140\n+\tFix PR tree-optimization/22310\n+\n+\t* tree-ssa-structalias.c (do_structure_copy): Give up earlier on\n+\tvariable sized types.\n+\tUse correct type for intermediate structure on *a = *b structure\n+\tcopies.\n+\t\t\n 2005-07-06  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/rs6000/rs6000.h (RS6000_VARARGS_AREA, RS6000_VARARGS_SIZE):"}, {"sha": "efa22380e05fbb92c876e2564038960e7604c490", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e422b8bf16aa66c62426386302e53e5f0930754/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e422b8bf16aa66c62426386302e53e5f0930754/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=4e422b8bf16aa66c62426386302e53e5f0930754", "patch": "@@ -2396,18 +2396,39 @@ do_structure_copy (tree lhsop, tree rhsop)\n     }\n   else\n     {\n+      tree rhstype = TREE_TYPE (rhsop);\n+      tree lhstype = TREE_TYPE (lhsop);\n+      tree rhstypesize = TYPE_SIZE (rhstype);\n+      tree lhstypesize = TYPE_SIZE (lhstype);\n+\n+      /* If we have a variably sized types on the rhs or lhs, and a deref\n+\t constraint, add the constraint, lhsconstraint = &ANYTHING.\n+\t This is conservatively correct because either the lhs is an unknown\n+\t sized var (if the constraint is SCALAR), or the lhs is a DEREF\n+\t constraint, and every variable it can point to must be unknown sized\n+\t anyway, so we don't need to worry about fields at all.  */\n+      if ((rhs.type == DEREF && TREE_CODE (rhstypesize) != INTEGER_CST)\n+\t  || (lhs.type == DEREF && TREE_CODE (lhstypesize) != INTEGER_CST))\n+\t{\n+\t  rhs.var = anything_id;\n+\t  rhs.type = ADDRESSOF;\n+\t  rhs.offset = 0;\n+\t  process_constraint (new_constraint (lhs, rhs));\n+\t  return;\n+\t}\n+\n       /* The size only really matters insofar as we don't set more or less of\n \t the variable.  If we hit an unknown size var, the size should be the\n \t whole darn thing.  */\n       if (get_varinfo (rhs.var)->is_unknown_size_var)\n \trhssize = ~0;\n       else\n-\trhssize = TREE_INT_CST_LOW (TYPE_SIZE (TREE_TYPE (rhsop)));\n+\trhssize = TREE_INT_CST_LOW (rhstypesize);\n \n       if (get_varinfo (lhs.var)->is_unknown_size_var)\n \tlhssize = ~0;\n       else\n-\tlhssize = TREE_INT_CST_LOW (TYPE_SIZE (TREE_TYPE (lhsop)));\n+\tlhssize = TREE_INT_CST_LOW (lhstypesize);\n \n   \n       if (rhs.type == SCALAR && lhs.type == SCALAR)  \n@@ -2418,9 +2439,7 @@ do_structure_copy (tree lhsop, tree rhsop)\n \tdo_lhs_deref_structure_copy (lhs, rhs, MIN (lhssize, rhssize));\n       else\n \t{\n-\t  tree rhsdecl = get_varinfo (rhs.var)->decl;\n-\t  tree pointertype = TREE_TYPE (rhsdecl);\n-\t  tree pointedtotype = TREE_TYPE (pointertype);\n+\t  tree pointedtotype = lhstype;\n \t  tree tmpvar;  \n \n \t  gcc_assert (rhs.type == DEREF && lhs.type == DEREF);"}]}