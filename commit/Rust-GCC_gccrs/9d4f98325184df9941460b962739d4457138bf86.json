{"sha": "9d4f98325184df9941460b962739d4457138bf86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ0Zjk4MzI1MTg0ZGY5OTQxNDYwYjk2MjczOWQ0NDU3MTM4YmY4Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-18T12:53:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-18T12:53:35Z"}, "message": "[multiple changes]\n\n2016-04-18  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem_res.adb (Resolve_Entry_Call): reset\n\tIs_Overloaded flag after resolving calls to overloaded protected\n\toperations.\n\t* exp_spark.adb (Expand_SPARK): call\n\tQualify_Entity_Names for tasking nodes, i.e. protected types,\n\ttask types and entries.\n\t* exp_ch4.adb (Expand_N_If_Expression): Refine previous change\n\tin case of an unconstrained type.\n\n2016-04-18  Yannick Moy  <moy@adacore.com>\n\n\t* sem_eval.adb, sem_eval.ads (Check_Non_Static_Context): Add\n\tcomment to document usage of subprogram in GNATprove.\n\nFrom-SVN: r235145", "tree": {"sha": "92f48a51d69ae1a71dfb84023c9ce0ae5c94e875", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92f48a51d69ae1a71dfb84023c9ce0ae5c94e875"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d4f98325184df9941460b962739d4457138bf86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d4f98325184df9941460b962739d4457138bf86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d4f98325184df9941460b962739d4457138bf86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d4f98325184df9941460b962739d4457138bf86/comments", "author": null, "committer": null, "parents": [{"sha": "a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a65dcb0d6ebb2f0d5c7570f6477baedeb81464c1"}], "stats": {"total": 58, "additions": 52, "deletions": 6}, "files": [{"sha": "47029de63f0675969b30776c369403fe7efd8e55", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d4f98325184df9941460b962739d4457138bf86/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d4f98325184df9941460b962739d4457138bf86/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9d4f98325184df9941460b962739d4457138bf86", "patch": "@@ -1,3 +1,19 @@\n+2016-04-18  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Entry_Call): reset\n+\tIs_Overloaded flag after resolving calls to overloaded protected\n+\toperations.\n+\t* exp_spark.adb (Expand_SPARK): call\n+\tQualify_Entity_Names for tasking nodes, i.e. protected types,\n+\ttask types and entries.\n+\t* exp_ch4.adb (Expand_N_If_Expression): Refine previous change\n+\tin case of an unconstrained type.\n+\n+2016-04-18  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_eval.adb, sem_eval.ads (Check_Non_Static_Context): Add\n+\tcomment to document usage of subprogram in GNATprove.\n+\n 2016-04-18  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_prag.adb (Analyze_Pragma, case Test_Case): Improve error"}, {"sha": "2832d615c76588ce801be4a9eea4b8bbe562d13d", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d4f98325184df9941460b962739d4457138bf86/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d4f98325184df9941460b962739d4457138bf86/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=9d4f98325184df9941460b962739d4457138bf86", "patch": "@@ -5450,8 +5450,10 @@ package body Exp_Ch4 is\n \n          --  We now wrap the actions into the appropriate expression\n \n-         if Minimize_Expression_With_Actions then\n-\n+         if Minimize_Expression_With_Actions\n+           and then (Is_Elementary_Type (Underlying_Type (Typ))\n+                      or else Is_Constrained (Underlying_Type (Typ)))\n+         then\n             --  If we can't use N_Expression_With_Actions nodes, then we insert\n             --  the following sequence of actions (using Insert_Actions):\n "}, {"sha": "bd86d18c7ff5871257bcc8697aef9384760aa214", "filename": "gcc/ada/exp_spark.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d4f98325184df9941460b962739d4457138bf86/gcc%2Fada%2Fexp_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d4f98325184df9941460b962739d4457138bf86/gcc%2Fada%2Fexp_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_spark.adb?ref=9d4f98325184df9941460b962739d4457138bf86", "patch": "@@ -62,10 +62,13 @@ package body Exp_SPARK is\n          --  user interaction. The verification back-end already takes care\n          --  of qualifying names when needed.\n \n-         when N_Block_Statement     |\n-              N_Package_Body        |\n-              N_Package_Declaration |\n-              N_Subprogram_Body     =>\n+         when N_Block_Statement            |\n+              N_Entry_Declaration          |\n+              N_Package_Body               |\n+              N_Package_Declaration        |\n+              N_Protected_Type_Declaration |\n+              N_Subprogram_Body            |\n+              N_Task_Type_Declaration      =>\n             Qualify_Entity_Names (N);\n \n          when N_Expanded_Name |"}, {"sha": "620c1663e0393d67fa870fb3125d83b0e4bcf9c8", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d4f98325184df9941460b962739d4457138bf86/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d4f98325184df9941460b962739d4457138bf86/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=9d4f98325184df9941460b962739d4457138bf86", "patch": "@@ -467,6 +467,14 @@ package body Sem_Eval is\n       --  non-static contexts, then ACVC test C490001 fails on Sparc/Solaris\n       --  and SGI/Irix.\n \n+      --  This conversion is always done by GNATprove on real literals in\n+      --  non-static expressions, by calling Check_Non_Static_Context from\n+      --  gnat2why, as GNATprove cannot do the conversion later contrary\n+      --  to gigi. The frontend computes the information about which\n+      --  expressions are static, which is used by gnat2why to call\n+      --  Check_Non_Static_Context on exactly those real literals that are\n+      --  not sub-expressions of static expressions.\n+\n       if Nkind (N) = N_Real_Literal\n         and then not Is_Machine_Number (N)\n         and then not Is_Generic_Type (Etype (N))"}, {"sha": "b689b80011db530488f6a928263a2f75ea8483d9", "filename": "gcc/ada/sem_eval.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d4f98325184df9941460b962739d4457138bf86/gcc%2Fada%2Fsem_eval.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d4f98325184df9941460b962739d4457138bf86/gcc%2Fada%2Fsem_eval.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.ads?ref=9d4f98325184df9941460b962739d4457138bf86", "patch": "@@ -159,6 +159,11 @@ package Sem_Eval is\n    --  customer for this procedure is Sem_Attr (because Eval_Attribute is\n    --  there). There is also one special case arising from ranges (see body of\n    --  Resolve_Range).\n+   --\n+   --  Note: this procedure is also called by GNATprove on real literals\n+   --  that are not sub-expressions of static expressions, to convert them to\n+   --  machine numbers, as GNATprove cannot perform this conversion contrary\n+   --  to gigi.\n \n    procedure Check_String_Literal_Length (N : Node_Id; Ttype : Entity_Id);\n    --  N is either a string literal, or a constraint error node. In the latter"}, {"sha": "1dfa862b3df79bf79178838054a0f3b8a7cc7319", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d4f98325184df9941460b962739d4457138bf86/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d4f98325184df9941460b962739d4457138bf86/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=9d4f98325184df9941460b962739d4457138bf86", "patch": "@@ -7654,6 +7654,18 @@ package body Sem_Res is\n          Normalize_Actuals (N, Nam, False, Norm_OK);\n          pragma Assert (Norm_OK);\n          Set_Etype (N, Etype (Nam));\n+\n+         --  Reset the Is_Overloaded flag, since resolution is now completed\n+\n+         if Nkind (Entry_Name) = N_Selected_Component then\n+            --  Simple entry call\n+            Set_Is_Overloaded (Selector_Name (Entry_Name), False);\n+\n+         else pragma Assert (Nkind (Entry_Name) = N_Indexed_Component);\n+            --  Call to member of entry family\n+            Set_Is_Overloaded (Selector_Name (Prefix (Entry_Name)), False);\n+\n+         end if;\n       end if;\n \n       Resolve_Actuals (N, Nam);"}]}