{"sha": "9e524a7f5a5a7abd7aaf3891ea4eca6f0f84fd36", "node_id": "C_kwDOANBUbNoAKDllNTI0YTdmNWE1YTdhYmQ3YWFmMzg5MWVhNGVjYTZmMGY4NGZkMzY", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-02-17T14:48:46Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-02-18T08:08:07Z"}, "message": "closure-arg: Add location info on arg name", "tree": {"sha": "2750acaf6188d124a3f4364022e1b587e2dd07bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2750acaf6188d124a3f4364022e1b587e2dd07bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e524a7f5a5a7abd7aaf3891ea4eca6f0f84fd36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e524a7f5a5a7abd7aaf3891ea4eca6f0f84fd36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e524a7f5a5a7abd7aaf3891ea4eca6f0f84fd36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e524a7f5a5a7abd7aaf3891ea4eca6f0f84fd36/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63538444fbce73fff2948e3357939b520f59afb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63538444fbce73fff2948e3357939b520f59afb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63538444fbce73fff2948e3357939b520f59afb8"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "7336db225d40398a807168250b523109820820c6", "filename": "gcc/rust/ast/rust-expr.h", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e524a7f5a5a7abd7aaf3891ea4eca6f0f84fd36/gcc%2Frust%2Fast%2Frust-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e524a7f5a5a7abd7aaf3891ea4eca6f0f84fd36/gcc%2Frust%2Fast%2Frust-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-expr.h?ref=9e524a7f5a5a7abd7aaf3891ea4eca6f0f84fd36", "patch": "@@ -2134,8 +2134,7 @@ struct ClosureParam\n \n   // bool has_type_given;\n   std::unique_ptr<Type> type;\n-\n-  // TODO: should this store location data?\n+  Location locus;\n \n public:\n   // Returns whether the type of the parameter has been given.\n@@ -2144,11 +2143,12 @@ struct ClosureParam\n   bool has_outer_attrs () const { return !outer_attrs.empty (); }\n \n   // Constructor for closure parameter\n-  ClosureParam (std::unique_ptr<Pattern> param_pattern,\n+  ClosureParam (std::unique_ptr<Pattern> param_pattern, Location locus,\n \t\tstd::unique_ptr<Type> param_type = nullptr,\n \t\tstd::vector<Attribute> outer_attrs = {})\n     : outer_attrs (std::move (outer_attrs)),\n-      pattern (std::move (param_pattern)), type (std::move (param_type))\n+      pattern (std::move (param_pattern)), type (std::move (param_type)),\n+      locus (locus)\n   {}\n \n   // Copy constructor required due to cloning as a result of unique_ptrs\n@@ -2189,7 +2189,10 @@ struct ClosureParam\n   bool is_error () const { return pattern == nullptr; }\n \n   // Creates an error state closure parameter.\n-  static ClosureParam create_error () { return ClosureParam (nullptr); }\n+  static ClosureParam create_error ()\n+  {\n+    return ClosureParam (nullptr, Location ());\n+  }\n \n   std::string as_string () const;\n "}, {"sha": "6498f3cbb77279e90bf084dcb0c56446792b57d5", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e524a7f5a5a7abd7aaf3891ea4eca6f0f84fd36/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e524a7f5a5a7abd7aaf3891ea4eca6f0f84fd36/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=9e524a7f5a5a7abd7aaf3891ea4eca6f0f84fd36", "patch": "@@ -8895,8 +8895,8 @@ Parser<ManagedTokenSource>::parse_closure_param ()\n \t}\n     }\n \n-  return AST::ClosureParam (std::move (pattern), std::move (type),\n-\t\t\t    std::move (outer_attrs));\n+  return AST::ClosureParam (std::move (pattern), pattern->get_locus (),\n+\t\t\t    std::move (type), std::move (outer_attrs));\n }\n \n // Parses a grouped or tuple expression (disambiguates)."}]}