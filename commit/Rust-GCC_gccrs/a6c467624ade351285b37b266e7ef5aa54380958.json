{"sha": "a6c467624ade351285b37b266e7ef5aa54380958", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZjNDY3NjI0YWRlMzUxMjg1YjM3YjI2NmU3ZWY1YWE1NDM4MDk1OA==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@redhat.com", "date": "2011-04-12T18:52:41Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2011-04-12T18:52:41Z"}, "message": "ChangeLog gcc/\n\n2011-04-12  Kai Tietz  <ktietz@redhat.com>\n\n\t* config/i386/mingw32.h (TARGET_SUBTARGET_DEFAULT): Add\n\tMASK_MS_BITFIELD_LAYOUT bit.\n\nChangeLog gcc/testsuite\n\n2011-04-12  Kai Tietz  <ktietz@redhat.com>\n\n\t* g++.dg/ext/bitfield2.C: Add for i?86/x86_64-*-mingw*\n\ttargets the additional -mno-ms-bitfields and\n\t-Wno-packed-bitfield-compat options.\n\t* g++.dg/ext/bitfield3.C: Likewise.\n\t* g++.dg/ext/bitfield4.C: Likewise.\n\t* g++.dg/ext/bitfield5.C: Likewise.\n\t* gcc.dg/bitfld-15.c: Likewise.\n\t* gcc.dg/bitfld-16.c: Likewise.\n\t* gcc.dg/bitfld-17.c: Likewise.\n\t* gcc.dg/bitfld-18.c: Likewise.\n\nFrom-SVN: r172336", "tree": {"sha": "b7deea4e3b391c7a3ee95e4f221e323fa7edd11b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7deea4e3b391c7a3ee95e4f221e323fa7edd11b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6c467624ade351285b37b266e7ef5aa54380958", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c467624ade351285b37b266e7ef5aa54380958", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6c467624ade351285b37b266e7ef5aa54380958", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c467624ade351285b37b266e7ef5aa54380958/comments", "author": null, "committer": null, "parents": [{"sha": "d94faf0d7dbe407d9a667d188158e8dce7d38d81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d94faf0d7dbe407d9a667d188158e8dce7d38d81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d94faf0d7dbe407d9a667d188158e8dce7d38d81"}], "stats": {"total": 41, "additions": 37, "deletions": 4}, "files": [{"sha": "94d54ac74d5b4396b27fed069309c55313bd4042", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6c467624ade351285b37b266e7ef5aa54380958", "patch": "@@ -1,3 +1,8 @@\n+2011-04-12  Kai Tietz  <ktietz@redhat.com>\n+\n+\t* config/i386/mingw32.h (TARGET_SUBTARGET_DEFAULT): Add\n+\tMASK_MS_BITFIELD_LAYOUT bit.\n+\n 2011-04-12  Jakub Jelinek  <jakub@redhat.com>\n \n \t* combine.c (update_cfg_for_uncondjump): Instead of testing at_end"}, {"sha": "3c8eee6143a2e6f5fa189e440fe78ef52f2df3e6", "filename": "gcc/config/i386/mingw32.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Fconfig%2Fi386%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Fconfig%2Fi386%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw32.h?ref=a6c467624ade351285b37b266e7ef5aa54380958", "patch": "@@ -22,6 +22,17 @@ along with GCC; see the file COPYING3.  If not see\n #undef DEFAULT_ABI\n #define DEFAULT_ABI MS_ABI\n \n+/* By default, target has a 80387, uses IEEE compatible arithmetic,\n+   returns float values in the 387 and needs stack probes.\n+   We also align doubles to 64-bits for MSVC default compatibility.\n+   Additionally we enable MS_BITFIELD_LAYOUT by default.  */\n+\n+#undef TARGET_SUBTARGET_DEFAULT\n+#define TARGET_SUBTARGET_DEFAULT \\\n+\t(MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS \\\n+\t | MASK_STACK_PROBE | MASK_ALIGN_DOUBLE \\\n+\t | MASK_MS_BITFIELD_LAYOUT)\n+\n /* See i386/crtdll.h for an alternative definition. _INTEGRAL_MAX_BITS\n    is for compatibility with native compiler.  */\n #define EXTRA_OS_CPP_BUILTINS()\t\t\t\t\t\\"}, {"sha": "61ff1c6971d9ec5d18c51aa71107493be6016b4b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a6c467624ade351285b37b266e7ef5aa54380958", "patch": "@@ -1,3 +1,16 @@\n+2011-04-12  Kai Tietz  <ktietz@redhat.com>\n+\n+\t* g++.dg/ext/bitfield2.C: Add for i?86/x86_64-*-mingw*\n+\ttargets the additional -mno-ms-bitfields and\n+\t-Wno-packed-bitfield-compat options.\n+\t* g++.dg/ext/bitfield3.C: Likewise.\n+\t* g++.dg/ext/bitfield4.C: Likewise.\n+\t* g++.dg/ext/bitfield5.C: Likewise.\n+\t* gcc.dg/bitfld-15.c: Likewise.\n+\t* gcc.dg/bitfld-16.c: Likewise.\n+\t* gcc.dg/bitfld-17.c: Likewise.\n+\t* gcc.dg/bitfld-18.c: Likewise.\n+\n 2011-04-12  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* gcc.target/arm/neon-vld3-1.c: New test."}, {"sha": "c288cec7c3307e8017ab57d8bf15cf579a4a40f0", "filename": "gcc/testsuite/g++.dg/ext/bitfield2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield2.C?ref=a6c467624ade351285b37b266e7ef5aa54380958", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* Remove pedantic.  Allow the GCC extension to use char for bitfields.  */\n /* { dg-options \"\" } */\n-/* { dg-options \"-mno-ms-bitfields\" { target i?86-*-netware } } */\n+/* { dg-options \"-Wno-packed-bitfield-compat -mno-ms-bitfields\" { target { i?86-*-netware i?86-*-mingw* x86_64-*-mingw* } } } */\n \n struct t /* { dg-message \"note: offset of packed bit-field 't::b' has changed in GCC 4.4\" \"\" { target pcc_bitfield_type_matters } } */\n {"}, {"sha": "f9fb78cceeeb37f49fd6f89fc1c80728e2dc2642", "filename": "gcc/testsuite/g++.dg/ext/bitfield3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield3.C?ref=a6c467624ade351285b37b266e7ef5aa54380958", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-Wno-packed-bitfield-compat\" } */\n-/* { dg-options \"-Wno-packed-bitfield-compat -mno-ms-bitfields\" { target i?86-*-netware } } */\n+/* { dg-options \"-Wno-packed-bitfield-compat -mno-ms-bitfields\" { target { i?86-*-netware i?86-*-mingw* x86_64-*-mingw* } } } */\n \n struct t\n {"}, {"sha": "8562686d6eb99cdec59e95d8235e25b3b4e5298f", "filename": "gcc/testsuite/g++.dg/ext/bitfield4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield4.C?ref=a6c467624ade351285b37b266e7ef5aa54380958", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"\" } */\n-/* { dg-options \"-mno-ms-bitfields\" { target i?86-*-netware } } */\n+/* { dg-options \"-Wno-packed-bitfield-compat -mno-ms-bitfields\" { target { i?86-*-netware i?86-*-mingw* x86_64-*-mingw* } } } */\n \n struct t /* { dg-message \"note: offset of packed bit-field 't::b' has changed in GCC 4.4\" \"\" { target pcc_bitfield_type_matters } } */\n {"}, {"sha": "1d862d769750ce252fa87f95908dcf1f199b6126", "filename": "gcc/testsuite/g++.dg/ext/bitfield5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbitfield5.C?ref=a6c467624ade351285b37b266e7ef5aa54380958", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-Wno-packed-bitfield-compat\" } */\n-/* { dg-options \"-Wno-packed-bitfield-compat -mno-ms-bitfields\" { target i?86-*-netware } } */\n+/* { dg-options \"-Wno-packed-bitfield-compat -mno-ms-bitfields\" { target { i?86-*-netware i?86-*-mingw* x86_64-*-mingw* } } } */\n \n struct t\n {"}, {"sha": "03f43f2de8c30d587330554f3464a657630703d7", "filename": "gcc/testsuite/gcc.dg/bitfld-15.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-15.c?ref=a6c467624ade351285b37b266e7ef5aa54380958", "patch": "@@ -2,6 +2,7 @@\n /* Remove pedantic.  Allow the GCC extension to use char for bitfields.  */\n /* { dg-options \"\" } */\n /* { dg-options \"-mno-ms-bitfields\" { target i?86-*-netware } } */\n+/* { dg-options \"-mno-ms-bitfields -Wno-packed-bitfield-compat\" { target { i?86-*-mingw* x86_64-*-mingw* } } } */\n \n struct t\n {"}, {"sha": "5ed30f7439280f72fb13c4e34baf298a653515bb", "filename": "gcc/testsuite/gcc.dg/bitfld-16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-16.c?ref=a6c467624ade351285b37b266e7ef5aa54380958", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-Wno-packed-bitfield-compat\" } */\n /* { dg-options \"-Wno-packed-bitfield-compat -mno-ms-bitfields\" { target i?86-*-netware } } */\n+/* { dg-options \"-Wno-packed-bitfield-compat -mno-ms-bitfields\" { target { i?86-*-mingw* x86_64-*-mingw* } } } */\n \n struct t\n {"}, {"sha": "9512f5fdf2afe698912f50a7a6aa88f4156db421", "filename": "gcc/testsuite/gcc.dg/bitfld-17.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-17.c?ref=a6c467624ade351285b37b266e7ef5aa54380958", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"\" } */\n /* { dg-options \"-mno-ms-bitfields\" { target i?86-*-netware } } */\n+/* { dg-options \"-mno-ms-bitfields -Wno-packed-bitfield-compat\" { target { i?86-*-mingw* x86_64-*-mingw* } } } */\n \n struct t\n {"}, {"sha": "067d9ae3851b2912d2deee4bd76be067be9b4a63", "filename": "gcc/testsuite/gcc.dg/bitfld-18.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c467624ade351285b37b266e7ef5aa54380958/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-18.c?ref=a6c467624ade351285b37b266e7ef5aa54380958", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-Wno-packed-bitfield-compat\" } */\n /* { dg-options \"-Wno-packed-bitfield-compat -mno-ms-bitfields\" { target i?86-*-netware } } */\n+/* { dg-options \"-Wno-packed-bitfield-compat -mno-ms-bitfields\" { target { i?86-*-mingw* x86_64-*-mingw* } } } */\n \n struct t\n {"}]}