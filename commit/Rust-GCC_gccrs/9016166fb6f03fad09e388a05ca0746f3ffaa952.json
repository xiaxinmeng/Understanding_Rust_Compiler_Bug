{"sha": "9016166fb6f03fad09e388a05ca0746f3ffaa952", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAxNjE2NmZiNmYwM2ZhZDA5ZTM4OGEwNWNhMDc0NmYzZmZhYTk1Mg==", "commit": {"author": {"name": "Tobias Grosser", "email": "grosser@fim.uni-passau.de", "date": "2009-11-30T22:07:18Z"}, "committer": {"name": "Tobias Grosser", "email": "grosser@gcc.gnu.org", "date": "2009-11-30T22:07:18Z"}, "message": "Simplify translate_clast_* methods\n\n2009-11-23  Tobias Grosser  <grosser@fim.uni-passau.de>\n\n\t* graphite-clast-to-gimple.c (translate_clast_user,\n\ttranslate_clast_for, translate_clast_guard): Simplify and move common\n\telements to translate_clast().\n\t(translate_clast): Simplify and get common elements.\n\nFrom-SVN: r154847", "tree": {"sha": "fcb0fcc55c9ea44bd1f6cbd8e058caa9d74d9af5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcb0fcc55c9ea44bd1f6cbd8e058caa9d74d9af5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9016166fb6f03fad09e388a05ca0746f3ffaa952", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9016166fb6f03fad09e388a05ca0746f3ffaa952", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9016166fb6f03fad09e388a05ca0746f3ffaa952", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9016166fb6f03fad09e388a05ca0746f3ffaa952/comments", "author": {"login": "tobiasgrosser", "id": 521960, "node_id": "MDQ6VXNlcjUyMTk2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/521960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobiasgrosser", "html_url": "https://github.com/tobiasgrosser", "followers_url": "https://api.github.com/users/tobiasgrosser/followers", "following_url": "https://api.github.com/users/tobiasgrosser/following{/other_user}", "gists_url": "https://api.github.com/users/tobiasgrosser/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobiasgrosser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobiasgrosser/subscriptions", "organizations_url": "https://api.github.com/users/tobiasgrosser/orgs", "repos_url": "https://api.github.com/users/tobiasgrosser/repos", "events_url": "https://api.github.com/users/tobiasgrosser/events{/privacy}", "received_events_url": "https://api.github.com/users/tobiasgrosser/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cdc90f92a5e0702a60b7e114205a29b8e7d9d4cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdc90f92a5e0702a60b7e114205a29b8e7d9d4cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdc90f92a5e0702a60b7e114205a29b8e7d9d4cd"}], "stats": {"total": 131, "additions": 61, "deletions": 70}, "files": [{"sha": "49c11b23a39c9a3b61960311dbffa00666dfde1f", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9016166fb6f03fad09e388a05ca0746f3ffaa952/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9016166fb6f03fad09e388a05ca0746f3ffaa952/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=9016166fb6f03fad09e388a05ca0746f3ffaa952", "patch": "@@ -1,3 +1,10 @@\n+2009-11-23  Tobias Grosser  <grosser@fim.uni-passau.de>\n+\n+\t* graphite-clast-to-gimple.c (translate_clast_user,\n+\ttranslate_clast_for, translate_clast_guard): Simplify and move common\n+\telements to translate_clast().\n+\t(translate_clast): Simplify and get common elements.\n+\n 2009-11-23  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n \t* graphite-clast-to-gimple.c (translate_clast_user,"}, {"sha": "f708c76256ed94b10dc3fdccf35b482fd6b49f28", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 54, "deletions": 70, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9016166fb6f03fad09e388a05ca0746f3ffaa952/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9016166fb6f03fad09e388a05ca0746f3ffaa952/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=9016166fb6f03fad09e388a05ca0746f3ffaa952", "patch": "@@ -733,33 +733,27 @@ translate_clast (sese, loop_p, struct clast_stmt *, edge, htab_t,\n    - PARAMS_INDEX connects the cloog parameters with the gimple parameters in\n      the sese region.  */\n static edge\n-translate_clast_user (sese region, struct loop *context_loop,\n-\t\t      struct clast_stmt *stmt, edge next_e,\n+translate_clast_user (sese region, struct clast_user_stmt *stmt, edge next_e,\n \t\t      htab_t rename_map, VEC (tree, heap) **newivs,\n-\t\t      htab_t newivs_index, htab_t bb_pbb_mapping, int level,\n+\t\t      htab_t newivs_index, htab_t bb_pbb_mapping,\n \t\t      htab_t params_index)\n {\n   gimple_bb_p gbb;\n   basic_block new_bb;\n-  CloogStatement *cs = ((struct clast_user_stmt*) stmt)->statement;\n-  poly_bb_p pbb = (poly_bb_p) cloog_statement_usr (cs);\n+  poly_bb_p pbb = (poly_bb_p) cloog_statement_usr (stmt->statement);\n   gbb = PBB_BLACK_BOX (pbb);\n \n   if (GBB_BB (gbb) == ENTRY_BLOCK_PTR)\n     return next_e;\n \n-  build_iv_mapping (rename_map, region, *newivs, newivs_index,\n-\t\t    (struct clast_user_stmt*) stmt, params_index);\n+  build_iv_mapping (rename_map, region, *newivs, newivs_index, stmt,\n+\t\t    params_index);\n   next_e = copy_bb_and_scalar_dependences (GBB_BB (gbb), region,\n \t\t\t\t\t   next_e, rename_map);\n   new_bb = next_e->src;\n   mark_bb_with_pbb (pbb, new_bb, bb_pbb_mapping);\n-  recompute_all_dominators ();\n   update_ssa (TODO_update_ssa);\n-  graphite_verify ();\n-  return translate_clast (region, context_loop, stmt->next, next_e,\n-\t\t\t  rename_map, newivs, newivs_index,\n-\t\t\t  bb_pbb_mapping, level, params_index);\n+  return next_e;\n }\n \n /* Translates a clast for statement STMT to gimple.\n@@ -773,16 +767,14 @@ translate_clast_user (sese region, struct loop *context_loop,\n    - PARAMS_INDEX connects the cloog parameters with the gimple parameters in\n      the sese region.  */\n static edge\n-translate_clast_for (sese region, loop_p context_loop, struct clast_stmt *stmt,\n+translate_clast_for (sese region, loop_p context_loop, struct clast_for *stmt,\n \t\t     edge next_e, htab_t rename_map, VEC (tree, heap) **newivs,\n \t\t     htab_t newivs_index, htab_t bb_pbb_mapping, int level,\n \t\t     htab_t params_index)\n {\n-  struct clast_for *stmtfor = (struct clast_for *)stmt;\n-  struct loop *loop\n-    = graphite_create_new_loop (region, next_e, stmtfor,\n-\t\t\t\tcontext_loop, newivs, newivs_index,\n-\t\t\t\tparams_index);\n+  struct loop *loop = graphite_create_new_loop (region, next_e, stmt,\n+\t\t\t\t\t\tcontext_loop, newivs,\n+\t\t\t\t\t\tnewivs_index, params_index);\n   edge last_e = single_exit (loop);\n   edge to_body = single_succ_edge (loop->header);\n   basic_block after = to_body->dest;\n@@ -791,10 +783,9 @@ translate_clast_for (sese region, loop_p context_loop, struct clast_stmt *stmt,\n   last_e = single_succ_edge (split_edge (last_e));\n \n   /* Translate the body of the loop.  */\n-  next_e = translate_clast\n-    (region, loop, ((struct clast_for *) stmt)->body,\n-     single_succ_edge (loop->header), rename_map, newivs,\n-     newivs_index, bb_pbb_mapping, level + 1, params_index);\n+  next_e = translate_clast (region, loop, stmt->body, to_body, rename_map,\n+\t\t\t    newivs, newivs_index, bb_pbb_mapping, level + 1,\n+\t\t\t    params_index);\n   redirect_edge_succ_nodup (next_e, after);\n   set_immediate_dominator (CDI_DOMINATORS, next_e->dest, next_e->src);\n \n@@ -807,11 +798,7 @@ translate_clast_for (sese region, loop_p context_loop, struct clast_stmt *stmt,\n \t\t\t\tget_scattering_level (level)))\n     loop->can_be_parallel = true;\n \n-  recompute_all_dominators ();\n-  graphite_verify ();\n-  return translate_clast (region, context_loop, stmt->next, last_e,\n-\t\t\t  rename_map, newivs, newivs_index,\n-\t\t\t  bb_pbb_mapping, level, params_index);\n+  return last_e;\n }\n \n /* Translates a clast guard statement STMT to gimple.\n@@ -826,36 +813,33 @@ translate_clast_for (sese region, loop_p context_loop, struct clast_stmt *stmt,\n      the sese region.  */\n static edge\n translate_clast_guard (sese region, loop_p context_loop,\n-\t\t       struct clast_stmt *stmt, edge next_e, htab_t rename_map,\n-\t\t       VEC (tree, heap) **newivs, htab_t newivs_index,\n-\t\t       htab_t bb_pbb_mapping, int level, htab_t params_index)\n+\t\t       struct clast_guard *stmt, edge next_e,\n+\t\t       htab_t rename_map, VEC (tree, heap) **newivs,\n+\t\t       htab_t newivs_index, htab_t bb_pbb_mapping, int level,\n+\t\t       htab_t params_index)\n {\n-  edge last_e = graphite_create_new_guard (region, next_e,\n-\t\t\t\t\t   ((struct clast_guard *) stmt),\n-\t\t\t\t\t   *newivs, newivs_index,\n-\t\t\t\t\t   params_index);\n+  edge last_e = graphite_create_new_guard (region, next_e, stmt, *newivs,\n+\t\t\t\t\t   newivs_index, params_index);\n+\n   edge true_e = get_true_edge_from_guard_bb (next_e->dest);\n   edge false_e = get_false_edge_from_guard_bb (next_e->dest);\n   edge exit_true_e = single_succ_edge (true_e->dest);\n   edge exit_false_e = single_succ_edge (false_e->dest);\n+\n   htab_t before_guard = htab_create (10, rename_map_elt_info,\n \t\t\t\t     eq_rename_map_elts, free);\n-\n   htab_traverse (rename_map, copy_renames, before_guard);\n-  next_e = translate_clast (region, context_loop,\n-\t\t\t    ((struct clast_guard *) stmt)->then,\n-\t\t\t    true_e, rename_map, newivs, newivs_index,\n-\t\t\t    bb_pbb_mapping, level, params_index);\n+\n+  next_e = translate_clast (region, context_loop, stmt->then, true_e,\n+\t\t\t    rename_map, newivs, newivs_index, bb_pbb_mapping,\n+\t\t\t    level, params_index);\n+\n   insert_guard_phis (last_e->src, exit_true_e, exit_false_e,\n \t\t     before_guard, rename_map);\n \n   htab_delete (before_guard);\n-  recompute_all_dominators ();\n-  graphite_verify ();\n \n-  return translate_clast (region, context_loop, stmt->next, last_e,\n-\t\t\t  rename_map, newivs, newivs_index,\n-\t\t\t  bb_pbb_mapping, level, params_index);\n+  return last_e;\n }\n \n /* Translates a CLAST statement STMT to GCC representation in the\n@@ -876,39 +860,39 @@ translate_clast (sese region, loop_p context_loop, struct clast_stmt *stmt,\n     return next_e;\n \n   if (CLAST_STMT_IS_A (stmt, stmt_root))\n-    return translate_clast (region, context_loop, stmt->next, next_e,\n-\t\t\t    rename_map, newivs, newivs_index,\n-\t\t\t    bb_pbb_mapping, level, params_index);\n+    ; /* Do nothing.  */\n \n-  if (CLAST_STMT_IS_A (stmt, stmt_user))\n-    return translate_clast_user (region, context_loop, stmt, next_e,\n-\t\t\t\t rename_map, newivs, newivs_index,\n-\t\t\t\t bb_pbb_mapping, level, params_index);\n-\n-  if (CLAST_STMT_IS_A (stmt, stmt_for))\n-    return translate_clast_for (region, context_loop, stmt, next_e,\n-\t\t\t\trename_map, newivs, newivs_index,\n-\t\t\t\tbb_pbb_mapping, level, params_index);\n+  else if (CLAST_STMT_IS_A (stmt, stmt_user))\n+    next_e = translate_clast_user (region, (struct clast_user_stmt *) stmt,\n+\t\t\t\t   next_e, rename_map, newivs, newivs_index,\n+\t\t\t\t   bb_pbb_mapping, params_index);\n \n-  if (CLAST_STMT_IS_A (stmt, stmt_guard))\n-    return translate_clast_guard (region, context_loop, stmt, next_e,\n+  else if (CLAST_STMT_IS_A (stmt, stmt_for))\n+    next_e = translate_clast_for (region, context_loop,\n+\t\t\t\t  (struct clast_for *) stmt, next_e,\n \t\t\t\t  rename_map, newivs, newivs_index,\n \t\t\t\t  bb_pbb_mapping, level, params_index);\n \n-  if (CLAST_STMT_IS_A (stmt, stmt_block))\n-    {\n-      next_e = translate_clast (region, context_loop,\n-\t\t\t\t((struct clast_block *) stmt)->body,\n-\t\t\t\tnext_e, rename_map, newivs, newivs_index,\n-\t\t\t\tbb_pbb_mapping, level, params_index);\n-      recompute_all_dominators ();\n-      graphite_verify ();\n-      return translate_clast (region, context_loop, stmt->next, next_e,\n-\t\t\t      rename_map, newivs, newivs_index,\n+  else if (CLAST_STMT_IS_A (stmt, stmt_guard))\n+    next_e = translate_clast_guard (region, context_loop,\n+\t\t\t\t    (struct clast_guard *) stmt, next_e,\n+\t\t\t\t    rename_map, newivs, newivs_index,\n+\t\t\t\t    bb_pbb_mapping, level, params_index);\n+\n+  else if (CLAST_STMT_IS_A (stmt, stmt_block))\n+    next_e = translate_clast (region, context_loop,\n+\t\t\t      ((struct clast_block *) stmt)->body,\n+\t\t\t      next_e, rename_map, newivs, newivs_index,\n \t\t\t      bb_pbb_mapping, level, params_index);\n-    }\n+  else\n+    gcc_unreachable();\n \n-  gcc_unreachable ();\n+  recompute_all_dominators ();\n+  graphite_verify ();\n+\n+  return translate_clast (region, context_loop, stmt->next, next_e,\n+\t\t\t  rename_map, newivs, newivs_index,\n+\t\t\t  bb_pbb_mapping, level, params_index);\n }\n \n /* Returns the first cloog name used in EXPR.  */"}]}