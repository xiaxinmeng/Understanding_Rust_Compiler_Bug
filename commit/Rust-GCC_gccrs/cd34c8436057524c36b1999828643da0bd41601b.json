{"sha": "cd34c8436057524c36b1999828643da0bd41601b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QzNGM4NDM2MDU3NTI0YzM2YjE5OTk4Mjg2NDNkYTBiZDQxNjAxYg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-02-24T04:30:34Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-02-24T04:30:34Z"}, "message": "Avoid infinite loop in field_reference.\n\nFrom-SVN: r170457", "tree": {"sha": "dea5d961e05999b43cf8c2f3a02eb91f44091a60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dea5d961e05999b43cf8c2f3a02eb91f44091a60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd34c8436057524c36b1999828643da0bd41601b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd34c8436057524c36b1999828643da0bd41601b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd34c8436057524c36b1999828643da0bd41601b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd34c8436057524c36b1999828643da0bd41601b/comments", "author": null, "committer": null, "parents": [{"sha": "acabc10c983db7b55fda3b02f7c0a9d779e0245a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acabc10c983db7b55fda3b02f7c0a9d779e0245a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acabc10c983db7b55fda3b02f7c0a9d779e0245a"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "806226f6f424253d19adba22981925c25c7501b8", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd34c8436057524c36b1999828643da0bd41601b/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd34c8436057524c36b1999828643da0bd41601b/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=cd34c8436057524c36b1999828643da0bd41601b", "patch": "@@ -3583,7 +3583,8 @@ Struct_type::field_reference(Expression* struct_expr, const std::string& name,\n \t\t\t     source_location location) const\n {\n   unsigned int depth;\n-  return this->field_reference_depth(struct_expr, name, location, &depth);\n+  return this->field_reference_depth(struct_expr, name, location, NULL,\n+\t\t\t\t     &depth);\n }\n \n // Return an expression for a field, along with the depth at which it\n@@ -3593,6 +3594,7 @@ Field_reference_expression*\n Struct_type::field_reference_depth(Expression* struct_expr,\n \t\t\t\t   const std::string& name,\n \t\t\t\t   source_location location,\n+\t\t\t\t   Saw_named_type* saw,\n \t\t\t\t   unsigned int* depth) const\n {\n   const Struct_field_list* fields = this->fields_;\n@@ -3628,13 +3630,41 @@ Struct_type::field_reference_depth(Expression* struct_expr,\n       if (st == NULL)\n \tcontinue;\n \n+      Saw_named_type* hold_saw = saw;\n+      Saw_named_type saw_here;\n+      Named_type* nt = pf->type()->named_type();\n+      if (nt == NULL)\n+\tnt = pf->type()->deref()->named_type();\n+      if (nt != NULL)\n+\t{\n+\t  Saw_named_type* q;\n+\t  for (q = saw; q != NULL; q = q->next)\n+\t    {\n+\t      if (q->nt == nt)\n+\t\t{\n+\t\t  // If this is an error, it will be reported\n+\t\t  // elsewhere.\n+\t\t  break;\n+\t\t}\n+\t    }\n+\t  if (q != NULL)\n+\t    continue;\n+\t  saw_here.next = saw;\n+\t  saw_here.nt = nt;\n+\t  saw = &saw_here;\n+\t}\n+\n       // Look for a reference using a NULL struct expression.  If we\n       // find one, fill in the struct expression with a reference to\n       // this field.\n       unsigned int subdepth;\n       Field_reference_expression* sub = st->field_reference_depth(NULL, name,\n \t\t\t\t\t\t\t\t  location,\n+\t\t\t\t\t\t\t\t  saw,\n \t\t\t\t\t\t\t\t  &subdepth);\n+\n+      saw = hold_saw;\n+\n       if (sub == NULL)\n \tcontinue;\n "}, {"sha": "b0dbefed4558260e7b2d2d53cff590006a4447cc", "filename": "gcc/go/gofrontend/types.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd34c8436057524c36b1999828643da0bd41601b/gcc%2Fgo%2Fgofrontend%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd34c8436057524c36b1999828643da0bd41601b/gcc%2Fgo%2Fgofrontend%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.h?ref=cd34c8436057524c36b1999828643da0bd41601b", "patch": "@@ -1980,9 +1980,17 @@ class Struct_type : public Type\n   do_export(Export*) const;\n \n  private:\n+  // Used to avoid infinite loops in field_reference_depth.\n+  struct Saw_named_type\n+  {\n+    Saw_named_type* next;\n+    Named_type* nt;\n+  };\n+\n   Field_reference_expression*\n   field_reference_depth(Expression* struct_expr, const std::string& name,\n-\t\t\tsource_location, unsigned int* depth) const;\n+\t\t\tsource_location, Saw_named_type*,\n+\t\t\tunsigned int* depth) const;\n \n   static Type*\n   make_struct_type_descriptor_type();"}]}