{"sha": "28ba38e39f1fd80713c0c4bb2d5d9cd8b0d4ad0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhiYTM4ZTM5ZjFmZDgwNzEzYzBjNGJiMmQ1ZDljZDhiMGQ0YWQwZA==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2004-02-14T11:29:01Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2004-02-14T11:29:01Z"}, "message": "re PR c++/13635 (ICE in register_specialization for specific order of template specialization)\n\n\tPR c++/13635\n\t* pt.c (push_template_decl_real): Make sure DECL_TI_ARGS of DECL\n\thas full set of arguments.\n\n\t* g++.dg/template/spec11.C: New test.\n\nFrom-SVN: r77796", "tree": {"sha": "1f8bed12df7b3e50d11c112b02186ce940df7966", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f8bed12df7b3e50d11c112b02186ce940df7966"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28ba38e39f1fd80713c0c4bb2d5d9cd8b0d4ad0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28ba38e39f1fd80713c0c4bb2d5d9cd8b0d4ad0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28ba38e39f1fd80713c0c4bb2d5d9cd8b0d4ad0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28ba38e39f1fd80713c0c4bb2d5d9cd8b0d4ad0d/comments", "author": null, "committer": null, "parents": [{"sha": "32bb574bf52ca7e673a4eabf3ab37a50550316cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32bb574bf52ca7e673a4eabf3ab37a50550316cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32bb574bf52ca7e673a4eabf3ab37a50550316cb"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "9117cdf6cd6b43de624f1603697eaa04b1f75209", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28ba38e39f1fd80713c0c4bb2d5d9cd8b0d4ad0d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28ba38e39f1fd80713c0c4bb2d5d9cd8b0d4ad0d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=28ba38e39f1fd80713c0c4bb2d5d9cd8b0d4ad0d", "patch": "@@ -1,3 +1,9 @@\n+2004-02-14  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/13635\n+\t* pt.c (push_template_decl_real): Make sure DECL_TI_ARGS of DECL\n+\thas full set of arguments.\n+\n 2004-02-13  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n \n \tPR c++/13927"}, {"sha": "779347b0f53b6249d71e4cee62bf536e7e8303e7", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28ba38e39f1fd80713c0c4bb2d5d9cd8b0d4ad0d/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28ba38e39f1fd80713c0c4bb2d5d9cd8b0d4ad0d/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=28ba38e39f1fd80713c0c4bb2d5d9cd8b0d4ad0d", "patch": "@@ -1035,7 +1035,7 @@ register_specialization (tree spec, tree tmpl, tree args)\n        the default argument expression is not substituted for in an\n        instantiation unless and until it is actually needed.  */\n     return spec;\n-    \n+\n   /* There should be as many levels of arguments as there are\n      levels of parameters.  */\n   my_friendly_assert (TMPL_ARGS_DEPTH (args) \n@@ -3001,6 +3001,13 @@ push_template_decl_real (tree decl, int is_friend)\n \t}\n     }\n \n+  /* The DECL_TI_ARGS of DECL contains full set of arguments refering\n+     back to its most general template.  If TMPL is a specialization,\n+     ARGS may only have the innermost set of arguments.  Add the missing\n+     argument levels if necessary.  */\n+  if (DECL_TEMPLATE_INFO (tmpl))\n+    args = add_outermost_template_args (DECL_TI_ARGS (tmpl), args);\n+\n   info = tree_cons (tmpl, args, NULL_TREE);\n \n   if (DECL_IMPLICIT_TYPEDEF_P (decl))"}, {"sha": "e0ff48e75c21cb9c69bc57a24ec146a4c524f72f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28ba38e39f1fd80713c0c4bb2d5d9cd8b0d4ad0d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28ba38e39f1fd80713c0c4bb2d5d9cd8b0d4ad0d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=28ba38e39f1fd80713c0c4bb2d5d9cd8b0d4ad0d", "patch": "@@ -1,3 +1,8 @@\n+2004-02-14  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/13635\n+\t* g++.dg/template/spec11.C: New test.\n+\n 2004-02-13  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n \n \tPR c++/13927"}, {"sha": "36d93a94ee11b10fecaba061dbe11f2886f24803", "filename": "gcc/testsuite/g++.dg/template/spec11.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28ba38e39f1fd80713c0c4bb2d5d9cd8b0d4ad0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28ba38e39f1fd80713c0c4bb2d5d9cd8b0d4ad0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec11.C?ref=28ba38e39f1fd80713c0c4bb2d5d9cd8b0d4ad0d", "patch": "@@ -0,0 +1,20 @@\n+// { dg-do compile }\n+\n+// Origin: jhbrown@bluefinrobotics.com\n+\n+// PR c++/13635: ICE explicit specialization of member function template\n+\n+template <class foo>\n+class bar {\n+public:\n+        template <class baz>\n+        int func(baz *x);\n+};\n+\n+template <>\n+template <class baz>\n+int bar<double>::func(baz *x) { return 5;}\n+\n+template <>\n+template <>\n+int bar<double>::func(int *x) { return 5;}"}]}