{"sha": "0e1dd874f84a29af7ee2fd8dd04766bc777035cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUxZGQ4NzRmODRhMjlhZjdlZTJmZDhkZDA0NzY2YmM3NzcwMzVjZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2012-06-04T19:27:12Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-06-04T19:27:12Z"}, "message": "re PR c++/53524 (Bogus enum comparison warning)\n\n2012-06-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/53524\n\t* doc/invoke.texi (Wenum-compare): Update documentation.\n\n/cp\n2012-06-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/53524\n\t* call.c (build_conditional_expr_1): Use OPT_Wenum_compare\n\tto control enumeral mismatch in conditional expression too.\n\n/testsuite\n2012-06-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/53524\n\t* g++.dg/warn/Wenum-compare-no-2: New.\n\nFrom-SVN: r188204", "tree": {"sha": "7e8dc933f459f29ca33c70ed073b12da8be9ba66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e8dc933f459f29ca33c70ed073b12da8be9ba66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e1dd874f84a29af7ee2fd8dd04766bc777035cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e1dd874f84a29af7ee2fd8dd04766bc777035cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e1dd874f84a29af7ee2fd8dd04766bc777035cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e1dd874f84a29af7ee2fd8dd04766bc777035cf/comments", "author": null, "committer": null, "parents": [{"sha": "7ca643e17ea01be20f1bfd91091ff658ff23bc3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ca643e17ea01be20f1bfd91091ff658ff23bc3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ca643e17ea01be20f1bfd91091ff658ff23bc3d"}], "stats": {"total": 56, "additions": 52, "deletions": 4}, "files": [{"sha": "54db10a1e44bfe4f091ab460d7ec853c63b2b291", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e1dd874f84a29af7ee2fd8dd04766bc777035cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e1dd874f84a29af7ee2fd8dd04766bc777035cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e1dd874f84a29af7ee2fd8dd04766bc777035cf", "patch": "@@ -1,3 +1,8 @@\n+2012-06-04  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/53524\n+\t* doc/invoke.texi (Wenum-compare): Update documentation.\n+\n 2012-06-04  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR preprocessor/53463"}, {"sha": "f473e2ce15977c5c18e6b3769a2f7841a512089e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e1dd874f84a29af7ee2fd8dd04766bc777035cf/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e1dd874f84a29af7ee2fd8dd04766bc777035cf/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0e1dd874f84a29af7ee2fd8dd04766bc777035cf", "patch": "@@ -1,3 +1,9 @@\n+2012-06-04  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/53524\n+\t* call.c (build_conditional_expr_1): Use OPT_Wenum_compare\n+\tto control enumeral mismatch in conditional expression too.\n+\n 2012-06-04  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* semantics.c: Do not include output.h."}, {"sha": "ad31f6a1c8743c0c7daaadef4826cba520b2946d", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e1dd874f84a29af7ee2fd8dd04766bc777035cf/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e1dd874f84a29af7ee2fd8dd04766bc777035cf/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=0e1dd874f84a29af7ee2fd8dd04766bc777035cf", "patch": "@@ -4696,7 +4696,7 @@ build_conditional_expr_1 (tree arg1, tree arg2, tree arg3,\n \t  && TREE_CODE (arg3_type) == ENUMERAL_TYPE)\n         {\n           if (complain & tf_warning)\n-            warning (0, \n+            warning (OPT_Wenum_compare, \n                      \"enumeral mismatch in conditional expression: %qT vs %qT\",\n                      arg2_type, arg3_type);\n         }"}, {"sha": "40c0838466e73c05c873cff62b07898cf9d33d0f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e1dd874f84a29af7ee2fd8dd04766bc777035cf/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e1dd874f84a29af7ee2fd8dd04766bc777035cf/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=0e1dd874f84a29af7ee2fd8dd04766bc777035cf", "patch": "@@ -4297,9 +4297,10 @@ while} statement.  This warning is also enabled by @option{-Wextra}.\n @item -Wenum-compare\n @opindex Wenum-compare\n @opindex Wno-enum-compare\n-Warn about a comparison between values of different enumerated types. In C++\n-this warning is enabled by default.  In C this warning is enabled by\n-@option{-Wall}.\n+Warn about a comparison between values of different enumerated types.\n+In C++ enumeral mismatches in conditional expressions are also\n+diagnosed and the warning is enabled by default.  In C this warning is \n+enabled by @option{-Wall}.\n \n @item -Wjump-misses-init @r{(C, Objective-C only)}\n @opindex Wjump-misses-init"}, {"sha": "c2d248052a1ebe80f43c31286bd534590be80e1a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e1dd874f84a29af7ee2fd8dd04766bc777035cf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e1dd874f84a29af7ee2fd8dd04766bc777035cf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0e1dd874f84a29af7ee2fd8dd04766bc777035cf", "patch": "@@ -1,3 +1,8 @@\n+2012-06-04  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/53524\n+\t* g++.dg/warn/Wenum-compare-no-2: New.\n+\n 2012-06-04  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR preprocessor/53463"}, {"sha": "fa7dda88a3ebb5c0cf5d7c717b94c911eb04fb0e", "filename": "gcc/testsuite/g++.dg/warn/Wenum-compare-no-2.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e1dd874f84a29af7ee2fd8dd04766bc777035cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWenum-compare-no-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e1dd874f84a29af7ee2fd8dd04766bc777035cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWenum-compare-no-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWenum-compare-no-2.C?ref=0e1dd874f84a29af7ee2fd8dd04766bc777035cf", "patch": "@@ -0,0 +1,31 @@\n+// PR c++/53524\n+// { dg-options \"-Wno-enum-compare\" }\n+\n+template < typename > struct PointerLikeTypeTraits {\n+  enum { NumLowBitsAvailable };\n+};\n+\n+class CodeGenInstruction;\n+class CodeGenInstAlias;\n+\n+template < typename T>\n+struct PointerIntPair {\n+  enum { IntShift = T::NumLowBitsAvailable };\n+};\n+\n+template < typename PT1, typename PT2 > struct PointerUnionUIntTraits {\n+  enum {\n+    PT1BitsAv = PointerLikeTypeTraits < PT1 >::NumLowBitsAvailable,\n+    PT2BitsAv = PointerLikeTypeTraits < PT2 >::NumLowBitsAvailable,\n+    NumLowBitsAvailable = 0 ? PT1BitsAv : PT2BitsAv\n+  };\n+};\n+\n+template < typename PT1, typename PT2 > class PointerUnion {\n+  typedef PointerIntPair < PointerUnionUIntTraits < PT1, PT2 > > ValTy;\n+  ValTy Val;\n+};\n+\n+struct ClassInfo {\n+  PointerUnion < CodeGenInstruction *, CodeGenInstAlias * > DefRec;\n+};"}]}