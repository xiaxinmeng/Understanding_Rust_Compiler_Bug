{"sha": "276e95ca1593bd1c467a219c55670d637cec8e46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc2ZTk1Y2ExNTkzYmQxYzQ2N2EyMTljNTU2NzBkNjM3Y2VjOGU0Ng==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2008-04-10T21:44:46Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2008-04-10T21:44:46Z"}, "message": "gnat_ugn.texi: Fix typos.\n\ngcc/ada/\n\n\t* gnat_ugn.texi: Fix typos.\n\t* raise-gcc.c, repinfo.adb, repinfo.ads, restrict.adb,\n\trestrict.ads, rtsfind.adb, rtsfind.ads, s-arit64.ads,\n\ts-asthan-vms-alpha.adb, s-auxdec.ads, s-casuti.ads,\n\ts-fatflt.ads, s-fatgen.adb, s-fatlfl.ads,\n\ts-fatllf.ads, s-fatsfl.ads, s-filofl.ads,\n\ts-finimp.adb, s-finroo.ads, s-fishfl.ads,\n\ts-fvadfl.ads, s-fvaffl.ads, s-fvagfl.ads,\n\ts-hibaen.ads, s-htable.ads, s-imgcha.adb,\n\ts-imgenu.ads, s-imgint.adb, s-imgrea.adb,\n\ts-inmaop-dummy.adb, s-inmaop.ads, s-interr-vms.adb,\n\ts-interr-vxworks.adb, s-interr.adb, s-interr.ads,\n\ts-intman-vxworks.ads, s-intman.ads, s-mastop-irix.adb,\n\ts-os_lib.adb, s-os_lib.ads, s-osinte-aix.ads,\n\ts-osinte-darwin.ads, s-osinte-freebsd.ads,\n\ts-osinte-hpux.ads, s-osinte-lynxos-3.adb,\n\ts-osinte-lynxos-3.ads, s-osinte-lynxos.ads,\n\ts-osinte-rtems.ads, s-osinte-solaris-posix.ads,\n\ts-osprim-mingw.adb, s-osprim-vms.adb, s-parame-ae653.ads,\n\ts-parame-hpux.ads, s-parame-vms-alpha.ads,\n\ts-parame-vms-ia64.ads, s-parame-vms-restrict.ads,\n\ts-parame-vxworks.ads, s-parame.ads, s-parint.adb,\n\ts-parint.ads, s-poosiz.adb, s-proinf-irix-athread.ads,\n\ts-proinf.ads, s-regexp.adb, s-regpat.adb, s-regpat.ads,\n\ts-rident.ads: Fix comment typos.\n\nFrom-SVN: r134177", "tree": {"sha": "a62c0204745bb07651b744e6bb87566858340a60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a62c0204745bb07651b744e6bb87566858340a60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/276e95ca1593bd1c467a219c55670d637cec8e46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/276e95ca1593bd1c467a219c55670d637cec8e46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/276e95ca1593bd1c467a219c55670d637cec8e46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/276e95ca1593bd1c467a219c55670d637cec8e46/comments", "author": null, "committer": null, "parents": [{"sha": "2893f753057ad4e703efad9766713d961b652e28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2893f753057ad4e703efad9766713d961b652e28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2893f753057ad4e703efad9766713d961b652e28"}], "stats": {"total": 338, "additions": 183, "deletions": 155}, "files": [{"sha": "67060228c28684c707e98de5da5bbe8a4391828d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -1,3 +1,31 @@\n+2008-04-10  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* gnat_ugn.texi: Fix typos.\n+\t* raise-gcc.c, repinfo.adb, repinfo.ads, restrict.adb,\n+\trestrict.ads, rtsfind.adb, rtsfind.ads, s-arit64.ads,\n+\ts-asthan-vms-alpha.adb, s-auxdec.ads, s-casuti.ads,\n+\ts-fatflt.ads, s-fatgen.adb, s-fatlfl.ads,\n+\ts-fatllf.ads, s-fatsfl.ads, s-filofl.ads,\n+\ts-finimp.adb, s-finroo.ads, s-fishfl.ads,\n+\ts-fvadfl.ads, s-fvaffl.ads, s-fvagfl.ads,\n+\ts-hibaen.ads, s-htable.ads, s-imgcha.adb,\n+\ts-imgenu.ads, s-imgint.adb, s-imgrea.adb,\n+\ts-inmaop-dummy.adb, s-inmaop.ads, s-interr-vms.adb,\n+\ts-interr-vxworks.adb, s-interr.adb, s-interr.ads,\n+\ts-intman-vxworks.ads, s-intman.ads, s-mastop-irix.adb,\n+\ts-os_lib.adb, s-os_lib.ads, s-osinte-aix.ads,\n+\ts-osinte-darwin.ads, s-osinte-freebsd.ads,\n+\ts-osinte-hpux.ads, s-osinte-lynxos-3.adb,\n+\ts-osinte-lynxos-3.ads, s-osinte-lynxos.ads,\n+\ts-osinte-rtems.ads, s-osinte-solaris-posix.ads,\n+\ts-osprim-mingw.adb, s-osprim-vms.adb, s-parame-ae653.ads,\n+\ts-parame-hpux.ads, s-parame-vms-alpha.ads,\n+\ts-parame-vms-ia64.ads, s-parame-vms-restrict.ads,\n+\ts-parame-vxworks.ads, s-parame.ads, s-parint.adb,\n+\ts-parint.ads, s-poosiz.adb, s-proinf-irix-athread.ads,\n+\ts-proinf.ads, s-regexp.adb, s-regpat.adb, s-regpat.ads,\n+\ts-rident.ads: Fix comment typos.\n+\n 2008-04-09  Samuel Tardieu  <sam@rfc1149.net>\n \n \tPR ada/28305"}, {"sha": "6654f5d16fe9ff4bdbfc4d1bf632e2beecb64156", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -22352,10 +22352,10 @@ same location as the @file{.gcno} files.  The following executions\n will update those files, so that a cumulative result of the covered\n portions of the program is generated.\n \n-Finaly, you need to call the @code{gcov} tool. The different options of\n+Finally, you need to call the @code{gcov} tool. The different options of\n @code{gcov} are available in the GCC User's Guide, section 'Invoking gcov'.\n \n-This will create anotated source files with a @file{.gcov} extension:\n+This will create annotated source files with a @file{.gcov} extension:\n @file{my_main.adb} file will be analysed in @file{my_main.adb.gcov}.\n \n @node Gnat specifics\n@@ -22390,7 +22390,7 @@ most often, and are therefore the most time-consuming.\n \n @code{gprof} is the standard GNU profiling tool; it has been enhanced to\n better handle Ada programs and multitasking.\n-It is currently supported on the following platoforms\n+It is currently supported on the following platforms\n @itemize @bullet\n @item\n linux x86/x86_64"}, {"sha": "bb25ea631d1722cb01139eb08337988d916b3252", "filename": "gcc/ada/raise-gcc.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fraise-gcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fraise-gcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fraise-gcc.c?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -362,7 +362,7 @@ db_phases (int phases)\n    context stack and not the actual call chain.\n \n    The ACTION and TTYPES tables remain unchanged, which allows to search them\n-   during the propagation phase to determine wether or not the propagated\n+   during the propagation phase to determine whether or not the propagated\n    exception is handled somewhere. When it is, we only \"jump\" up once directly\n    to the context where the handler will be found. Besides, this allows \"break\n    exception unhandled\" to work also\n@@ -811,7 +811,7 @@ get_call_site_action_for (_Unwind_Context *uw_context,\n \n /* With CHOICE an exception choice representing an \"exception - when\"\n    argument, and PROPAGATED_EXCEPTION a pointer to the currently propagated\n-   occurrence, return true iif the latter matches the former, that is, if\n+   occurrence, return true if the latter matches the former, that is, if\n    PROPAGATED_EXCEPTION is caught by the handling code controlled by CHOICE.\n    This takes care of the special Non_Ada_Error case on VMS.  */\n \n@@ -1135,7 +1135,7 @@ PERSONALITY_FUNCTION (version_arg_t version_arg,\n   /* If we are going to install a cleanup context, decrement the cleanup\n      count.  This is required in a FORCED_UNWINDing phase (for an unhandled\n      exception), as this is used from the forced unwinding handler in\n-     Ada.Exceptions.Exception_Propagation to decide wether unwinding should\n+     Ada.Exceptions.Exception_Propagation to decide whether unwinding should\n      proceed further or Unhandled_Exception_Terminate should be called.  */\n   if (action.kind == cleanup)\n     Adjust_N_Cleanups_For (gnat_exception, -1);"}, {"sha": "6764994e4f338a3a18a5f7f396117fcbcb67ef52", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -1095,7 +1095,7 @@ package body Repinfo is\n       --  Bit_And_Expr, for which there is no direct support in uintp. Uint\n       --  values out of the Int range are expected to be seen in such\n       --  expressions only with overflowing byte sizes around, introducing\n-      --  inherent unreliabilties in computations anyway.\n+      --  inherent unreliabilities in computations anyway.\n \n       -------\n       -- B --"}, {"sha": "39d037a15d9c2c3af3e8a8d7ad99ba6e25539976", "filename": "gcc/ada/repinfo.ads", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Frepinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Frepinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -88,7 +88,7 @@ package Repinfo is\n    --    which contains the Size (more accurately the Object_SIze) value\n    --    for the type or subtype.\n \n-   --    For E_Component and E_Distriminant entities, the Esize (size\n+   --    For E_Component and E_Discriminant entities, the Esize (size\n    --    of component) and Component_Bit_Offset fields. Note that gigi\n    --    does not (yet ???) back annotate Normalized_Position/First_Bit.\n \n@@ -156,12 +156,12 @@ package Repinfo is\n    Truth_Or_Expr    : constant TCode := 19; -- Boolean or               2\n    Truth_Xor_Expr   : constant TCode := 20; -- Boolean xor              2\n    Truth_Not_Expr   : constant TCode := 21; -- Boolean not              1\n-   Lt_Expr          : constant TCode := 22; -- comparision <            2\n-   Le_Expr          : constant TCode := 23; -- comparision <=           2\n-   Gt_Expr          : constant TCode := 24; -- comparision >            2\n-   Ge_Expr          : constant TCode := 25; -- comparision >=           2\n-   Eq_Expr          : constant TCode := 26; -- comparision =            2\n-   Ne_Expr          : constant TCode := 27; -- comparision /=           2\n+   Lt_Expr          : constant TCode := 22; -- comparison <             2\n+   Le_Expr          : constant TCode := 23; -- comparison <=            2\n+   Gt_Expr          : constant TCode := 24; -- comparison >             2\n+   Ge_Expr          : constant TCode := 25; -- comparison >=            2\n+   Eq_Expr          : constant TCode := 26; -- comparison =             2\n+   Ne_Expr          : constant TCode := 27; -- comparison /=            2\n    Bit_And_Expr     : constant TCode := 28; -- Binary and               2\n \n    --  The following entry is used to represent a discriminant value in\n@@ -188,7 +188,7 @@ package Repinfo is\n    --  => Discrim_Val, Op1 => discriminant_number).\n \n    function Create_Discrim_Ref (Discr : Entity_Id) return Node_Ref;\n-   --  Creates a refrerence to the discriminant whose entity is Discr\n+   --  Creates a reference to the discriminant whose entity is Discr\n \n    --------------------------------------------------------\n    -- Front-End Interface for Dynamic Size/Offset Values --\n@@ -223,7 +223,7 @@ package Repinfo is\n \n    --  In the case of components, if the location of the component is static,\n    --  then all four fields (Component_Bit_Offset, Normalized_Position, Esize,\n-   --  and Normalized_First_Bit) are set to appropraite values. In the case of\n+   --  and Normalized_First_Bit) are set to appropriate values. In the case of\n    --  a non-static component location, Component_Bit_Offset is not used and\n    --  is left set to Unknown. Normalized_Position and Normalized_First_Bit\n    --  are set appropriately.\n@@ -258,7 +258,7 @@ package Repinfo is\n    --  Create_Dynamic_SO_Ref. The approach is that the front end makes\n    --  the necessary Create_Dynamic_SO_Ref calls to associate the node\n    --  and entity id values and the back end makes Get_Dynamic_SO_Ref\n-   --  calls to retrive them.\n+   --  calls to retrieve them.\n \n    --------------------\n    -- ASIS_Interface --"}, {"sha": "5049c5b1be49fac7bc3071d94d39d0bd1473722b", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -172,9 +172,9 @@ package body Restrict is\n                   end if;\n                end loop;\n \n-               --  If not predefied unit, then one special check still remains.\n-               --  GNAT.Current_Exception is not allowed if we have restriction\n-               --  No_Exception_Propagation active.\n+               --  If not predefined unit, then one special check still\n+               --  remains. GNAT.Current_Exception is not allowed if we have\n+               --  restriction No_Exception_Propagation active.\n \n             else\n                if Name_Buffer (1 .. 8) = \"g-curexc\" then"}, {"sha": "9dacefb300565f368a7f06b0ed71884a876c66c7", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -37,7 +37,7 @@ package Restrict is\n    --  This variable records restrictions found in any units in the main\n    --  extended unit, and in the case of restrictions checked for partition\n    --  consistency, restrictions found in any with'ed units, parent specs\n-   --  etc, since we may as well check as much as we can at compile time.\n+   --  etc., since we may as well check as much as we can at compile time.\n    --  These variables should not be referenced directly by clients. Instead\n    --  use Check_Restrictions to record a violation of a restriction, and\n    --  Restriction_Active to test if a given restriction is active.\n@@ -270,7 +270,7 @@ package Restrict is\n    function Restricted_Profile return Boolean;\n    --  Tests if set of restrictions corresponding to Profile (Restricted) is\n    --  currently in effect (set by pragma Profile, or by an appropriate set\n-   --  of individual Restrictions pragms). Returns True only if all the\n+   --  of individual Restrictions pragmas). Returns True only if all the\n    --  required restrictions are set.\n \n    procedure Set_Profile_Restrictions"}, {"sha": "650e2eaad3f0dbd8799bc5bbe6edbbfffbc85213", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -100,9 +100,9 @@ package body Rtsfind is\n    --  for the same entity can be satisfied immediately.\n \n    --  NOTE: In order to avoid conflicts between record components and subprgs\n-   --        that have the same name (ie. subprogram External_Tag and component\n-   --        External_Tag of package Ada.Tags) this table is not used with\n-   --        Record_Components.\n+   --        that have the same name (i.e. subprogram External_Tag and\n+   --        component External_Tag of package Ada.Tags) this table is not used\n+   --        with Record_Components.\n \n    RE_Table : array (RE_Id) of Entity_Id;\n \n@@ -145,7 +145,7 @@ package body Rtsfind is\n    --  value in RTU_Id.\n \n    procedure Load_Fail (S : String; U_Id : RTU_Id; Id : RE_Id);\n-   --  Internal procedure called if we can't sucessfully locate or process a\n+   --  Internal procedure called if we can't successfully locate or process a\n    --  run-time unit. The parameters give information about the error message\n    --  to be given. S is a reason for failing to compile the file and U_Id is\n    --  the unit id. RE_Id is the RE_Id originally passed to RTE. The message in\n@@ -1214,7 +1214,7 @@ package body Rtsfind is\n       --  If we didn't find the entity we want, something is wrong. The\n       --  appropriate action will be taken by Check_CRT when we exit.\n \n-      --  Cenerate a with-clause if the current unit is part of the extended\n+      --  Generate a with-clause if the current unit is part of the extended\n       --  main code unit, and if we have not already added the with. The clause\n       --  is added to the appropriate unit (the current one). We do not need to\n       --  generate it for a call issued from RTE_Component_Available."}, {"sha": "ef61b8fd0e51d911884968bfee45b28556139634", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -501,7 +501,7 @@ package Rtsfind is\n      RE_Detach_Handler,                  -- Ada.Interrupts\n      RE_Reference,                       -- Ada.Interrupts\n \n-     RE_Names,                           -- Ada.Interupts.Names\n+     RE_Names,                           -- Ada.Interrupts.Names\n \n      RE_Root_Stream_Type,                -- Ada.Streams\n      RE_Stream_Element,                  -- Ada.Streams\n@@ -2788,7 +2788,7 @@ package Rtsfind is\n    --  run-time library, but allows only a subset of entities to be\n    --  accessed. If any other entity is accessed, then it is treated\n    --  as a configurable run-time violation, and the exception\n-   --  RE_Not_Availble is raised.\n+   --  RE_Not_Available is raised.\n \n    --  The following array defines the set of units that contain entities\n    --  that can be referenced in No_Run_Time mode. For each of these units,"}, {"sha": "b414949b12726613051653aa6cf2219aca61937f", "filename": "gcc/ada/s-arit64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-arit64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-arit64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-arit64.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -63,7 +63,7 @@ package System.Arith_64 is\n    --  or if the quotient does not fit in 64-bits. Round indicates if\n    --  the result should be rounded. If Round is False, then Q, R are\n    --  the normal quotient and remainder from a truncating division.\n-   --  If Round is True, then Q is the rounded quotient. the remainder\n+   --  If Round is True, then Q is the rounded quotient. The remainder\n    --  R is not affected by the setting of the Round flag.\n \n    procedure Double_Divide"}, {"sha": "9775f54bcd4ad2ca5ffa7f9052363b1da0d1dbde", "filename": "gcc/ada/s-asthan-vms-alpha.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-asthan-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-asthan-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-asthan-vms-alpha.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -149,7 +149,7 @@ package body System.AST_Handling is\n \n    --  Note: When we say it works fine, there is one delicate point, which\n    --  is that the code for the AST procedure itself requires the original\n-   --  descriptor address.  We handle this by saving the orignal descriptor\n+   --  descriptor address.  We handle this by saving the original descriptor\n    --  address in this structure and restoring in Process_AST.\n \n    type AST_Handler_Data is record\n@@ -237,7 +237,7 @@ package body System.AST_Handling is\n    --  number of AST instances that can be stored in the buffer. Since\n    --  these entries are immediately serviced by the high priority server\n    --  task that does the actual entry queuing, it is very unusual to have\n-   --  any significant number of entries simulaneously queued.\n+   --  any significant number of entries simultaneously queued.\n \n    AST_Service_Queue : array (AST_Service_Queue_Index) of AST_Instance;\n    pragma Volatile_Components (AST_Service_Queue);"}, {"sha": "c507a7e7546c4921a6714903457974aed50a1952", "filename": "gcc/ada/s-auxdec.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-auxdec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-auxdec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-auxdec.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -48,7 +48,7 @@ package System.Aux_DEC is\n    --  name Short_Address is used for the short address form. To avoid\n    --  difficulties (in regression tests and elsewhere) with units that\n    --  reference Short_Address, it is provided for other targets as a\n-   --  synonum for the normal Address type, and, as in the case where\n+   --  synonym for the normal Address type, and, as in the case where\n    --  the lengths are different, Address and Short_Address can be\n    --  freely inter-converted.\n "}, {"sha": "6831942d3fb1d693f66d7f3de45bd7c5af9d69ab", "filename": "gcc/ada/s-casuti.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-casuti.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-casuti.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-casuti.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -53,7 +53,7 @@ package System.Case_Util is\n    --  returns the input argument unchanged.\n \n    procedure To_Upper (A : in out String);\n-   --  Folds all characters of string A to upper csae\n+   --  Folds all characters of string A to upper case\n \n    function To_Lower (A : Character) return Character;\n    --  Converts A to lower case if it is an upper case letter, otherwise"}, {"sha": "a12907919488af52889fe7e97cec40862078834c", "filename": "gcc/ada/s-fatflt.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-fatflt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-fatflt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatflt.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -39,7 +39,7 @@ with System.Fat_Gen;\n package System.Fat_Flt is\n    pragma Pure;\n \n-   --  Note the only entity from this package that is acccessed by Rtsfind\n+   --  Note the only entity from this package that is accessed by Rtsfind\n    --  is the name of the package instantiation. Entities within this package\n    --  (i.e. the individual floating-point attribute routines) are accessed\n    --  by name using selected notation."}, {"sha": "f690177a59fd8438ac3bf25722ac91a6fa5560a9", "filename": "gcc/ada/s-fatgen.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-fatgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-fatgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatgen.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -54,7 +54,7 @@ package body System.Fat_Gen is\n    Invrad : constant T := 1.0 / Rad;\n \n    subtype Expbits is Integer range 0 .. 6;\n-   --  2 ** (2 ** 7) might overflow.  how big can radix-16 exponents get?\n+   --  2 ** (2 ** 7) might overflow.  How big can radix-16 exponents get?\n \n    Log_Power : constant array (Expbits) of Integer := (1, 2, 4, 8, 16, 32, 64);\n \n@@ -569,7 +569,7 @@ package body System.Fat_Gen is\n          return X;\n       end if;\n \n-      --  Nonzero x. essentially, just multiply repeatedly by Rad ** (+-2**n)\n+      --  Nonzero x essentially, just multiply repeatedly by Rad ** (+-2**n)\n \n       declare\n          Y  : T  := X;\n@@ -660,7 +660,7 @@ package body System.Fat_Gen is\n          --  since the exponent is going to be reduced.\n \n          --  Note that X_Frac has the same sign as X, so if X_Frac is -0.5,\n-         --  then we know that we have a ngeative number (and hence a\n+         --  then we know that we have a negative number (and hence a\n          --  negative power of 2).\n \n          if X_Frac = -0.5 then\n@@ -809,14 +809,14 @@ package body System.Fat_Gen is\n       --  entire floating-point value. Do not take into account excessive\n       --  padding, as occurs on IA-64 where 80 bits floats get padded to 128\n       --  bits. In general, the exponent field cannot be larger than 15 bits,\n-      --  even for 128-bit floating-poin t types, so the final format size\n+      --  even for 128-bit floating-point types, so the final format size\n       --  won't be larger than T'Mantissa + 16.\n \n       type Float_Rep is\n          array (Rep_Index range 0 .. Rep_Index (Rep_Words - 1)) of Float_Word;\n \n       pragma Suppress_Initialization (Float_Rep);\n-      --  This pragma supresses the generation of an initialization procedure\n+      --  This pragma suppresses the generation of an initialization procedure\n       --  for type Float_Rep when operating in Initialize/Normalize_Scalars\n       --  mode. This is not just a matter of efficiency, but of functionality,\n       --  since Valid has a pragma Inline_Always, which is not permitted if\n@@ -873,8 +873,8 @@ package body System.Fat_Gen is\n    begin\n       if T'Denorm then\n \n-         --  All denormalized numbers are valid, so only invalid numbers are\n-         --  overflows and NaN's, both with exponent = Emax + 1.\n+         --  All denormalized numbers are valid, so the only invalid numbers\n+         --  are overflows and NaNs, both with exponent = Emax + 1.\n \n          return E /= IEEE_Emax + 1;\n "}, {"sha": "b4c5c510af84a7781613c03b076838df4e440473", "filename": "gcc/ada/s-fatlfl.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-fatlfl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-fatlfl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatlfl.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -39,7 +39,7 @@ with System.Fat_Gen;\n package System.Fat_LFlt is\n    pragma Pure;\n \n-   --  Note the only entity from this package that is acccessed by Rtsfind\n+   --  Note the only entity from this package that is accessed by Rtsfind\n    --  is the name of the package instantiation. Entities within this package\n    --  (i.e. the individual floating-point attribute routines) are accessed\n    --  by name using selected notation."}, {"sha": "6869d8e7e85e76b8e48fbc2935216a58265fd63f", "filename": "gcc/ada/s-fatllf.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-fatllf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-fatllf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatllf.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -39,7 +39,7 @@ with System.Fat_Gen;\n package System.Fat_LLF is\n    pragma Pure;\n \n-   --  Note the only entity from this package that is acccessed by Rtsfind\n+   --  Note the only entity from this package that is accessed by Rtsfind\n    --  is the name of the package instantiation. Entities within this package\n    --  (i.e. the individual floating-point attribute routines) are accessed\n    --  by name using selected notation."}, {"sha": "8539723bf0438660d4725c32b118a19a7a09e977", "filename": "gcc/ada/s-fatsfl.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-fatsfl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-fatsfl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatsfl.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -39,7 +39,7 @@ with System.Fat_Gen;\n package System.Fat_SFlt is\n    pragma Pure;\n \n-   --  Note the only entity from this package that is acccessed by Rtsfind\n+   --  Note the only entity from this package that is accessed by Rtsfind\n    --  is the name of the package instantiation. Entities within this package\n    --  (i.e. the individual floating-point attribute routines) are accessed\n    --  by name using selected notation."}, {"sha": "b185890bf1ed3cca760ac4ac1ada8fd06c592237", "filename": "gcc/ada/s-filofl.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-filofl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-filofl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-filofl.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -32,7 +32,7 @@\n ------------------------------------------------------------------------------\n \n --  This package contains an instantiation of the floating-point attribute\n---  runtime routines for IEEE long float. This is used on VMS targest where\n+--  runtime routines for IEEE long float. This is used on VMS targets where\n --  we can't just use Long_Float, since this may have been mapped to Vax_Float\n --  using a Float_Representation configuration pragma.\n \n@@ -44,7 +44,7 @@ package System.Fat_IEEE_Long_Float is\n    type Fat_IEEE_Long is digits 15;\n    pragma Float_Representation (IEEE_Float, Fat_IEEE_Long);\n \n-   --  Note the only entity from this package that is acccessed by Rtsfind\n+   --  Note the only entity from this package that is accessed by Rtsfind\n    --  is the name of the package instantiation. Entities within this package\n    --  (i.e. the individual floating-point attribute routines) are accessed\n    --  by name using selected notation."}, {"sha": "2d6defb3e6b1b6eca9674b0433b56a878b97d4e7", "filename": "gcc/ada/s-finimp.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-finimp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-finimp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finimp.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -100,7 +100,7 @@ package body System.Finalization_Implementation is\n       --  Subtract the offset to the pointer\n \n       procedure Reverse_Adjust (P : Finalizable_Ptr);\n-      --  Ajust the components in the reverse order in which they are stored\n+      --  Adjust the components in the reverse order in which they are stored\n       --  on the finalization list. (Adjust and Finalization are not done in\n       --  the same order)\n \n@@ -139,7 +139,7 @@ package body System.Finalization_Implementation is\n \n       First_Comp := Object.F;\n       Object.F := null;               --  nothing adjusted yet.\n-      Ptr_Adjust (First_Comp);        --  set addresss of first component.\n+      Ptr_Adjust (First_Comp);        --  set address of first component.\n       Reverse_Adjust (First_Comp);\n \n       --  Then Adjust the controller itself\n@@ -412,7 +412,7 @@ package body System.Finalization_Implementation is\n       --  At this stage, we know that the controller is part of the\n       --  ancestor corresponding to the tag \"The_Tag\" and that its parent\n       --  is variable sized. We assume that the _controller is the first\n-      --  compoment right after the parent.\n+      --  component right after the parent.\n \n       --  ??? note that it may not be true if there are new discriminants\n "}, {"sha": "0f4b7d189bf393c4973ef3faa6b2bfb58def9466", "filename": "gcc/ada/s-finroo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-finroo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-finroo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finroo.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -61,7 +61,7 @@ package System.Finalization_Root is\n    procedure Finalize   (Object : in out Root_Controlled);\n    procedure Adjust     (Object : in out Root_Controlled);\n \n-   --  Stream-oriented attibutes for Root_Controlled. These must be empty so\n+   --  Stream-oriented attributes for Root_Controlled. These must be empty so\n    --  as to not copy the finalization chain pointers. They are declared in\n    --  a nested package so that they do not create primitive operations of\n    --  Root_Controlled. Otherwise this would add unwanted primitives to (the"}, {"sha": "0b0839fc998cb22d3a6423df1002c43f246403ae", "filename": "gcc/ada/s-fishfl.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-fishfl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-fishfl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fishfl.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -32,7 +32,7 @@\n ------------------------------------------------------------------------------\n \n --  This package contains an instantiation of the floating-point attribute\n---  runtime routines for IEEE short float. This is used on VMS targest where\n+--  runtime routines for IEEE short float. This is used on VMS targets where\n --  we can't just use Float, since this may have been mapped to Vax_Float\n --  using a Float_Representation configuration pragma.\n \n@@ -44,7 +44,7 @@ package System.Fat_IEEE_Short_Float is\n    type Fat_IEEE_Short is digits 6;\n    pragma Float_Representation (IEEE_Float, Fat_IEEE_Short);\n \n-   --  Note the only entity from this package that is acccessed by Rtsfind\n+   --  Note the only entity from this package that is accessed by Rtsfind\n    --  is the name of the package instantiation. Entities within this package\n    --  (i.e. the individual floating-point attribute routines) are accessed\n    --  by name using selected notation."}, {"sha": "76c3a0b47363ba2e3326149a9340cfcf0d58f733", "filename": "gcc/ada/s-fvadfl.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-fvadfl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-fvadfl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fvadfl.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -41,12 +41,12 @@ package System.Fat_VAX_D_Float is\n \n    pragma Warnings (Off);\n    --  This unit is normally used only for VMS, but we compile it for other\n-   --  targest for the convenience of testing vms code using -gnatdm.\n+   --  targets for the convenience of testing vms code using -gnatdm.\n \n    type Fat_VAX_D is digits 9;\n    pragma Float_Representation (VAX_Float, Fat_VAX_D);\n \n-   --  Note the only entity from this package that is acccessed by Rtsfind\n+   --  Note the only entity from this package that is accessed by Rtsfind\n    --  is the name of the package instantiation. Entities within this package\n    --  (i.e. the individual floating-point attribute routines) are accessed\n    --  by name using selected notation."}, {"sha": "729391cb5df26712369c10152b299c5892b140a7", "filename": "gcc/ada/s-fvaffl.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-fvaffl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-fvaffl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fvaffl.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -41,12 +41,12 @@ package System.Fat_VAX_F_Float is\n \n    pragma Warnings (Off);\n    --  This unit is normally used only for VMS, but we compile it for other\n-   --  targest for the convenience of testing vms code using -gnatdm.\n+   --  targets for the convenience of testing vms code using -gnatdm.\n \n    type Fat_VAX_F is digits 6;\n    pragma Float_Representation (VAX_Float, Fat_VAX_F);\n \n-   --  Note the only entity from this package that is acccessed by Rtsfind\n+   --  Note the only entity from this package that is accessed by Rtsfind\n    --  is the name of the package instantiation. Entities within this package\n    --  (i.e. the individual floating-point attribute routines) are accessed\n    --  by name using selected notation."}, {"sha": "bbce6ef973193c77cde86a65bf3d49ffef2e0242", "filename": "gcc/ada/s-fvagfl.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-fvagfl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-fvagfl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fvagfl.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -41,12 +41,12 @@ package System.Fat_VAX_G_Float is\n \n    pragma Warnings (Off);\n    --  This unit is normally used only for VMS, but we compile it for other\n-   --  targest for the convenience of testing vms code using -gnatdm.\n+   --  targets for the convenience of testing vms code using -gnatdm.\n \n    type Fat_VAX_G is digits 15;\n    pragma Float_Representation (VAX_Float, Fat_VAX_G);\n \n-   --  Note the only entity from this package that is acccessed by Rtsfind\n+   --  Note the only entity from this package that is accessed by Rtsfind\n    --  is the name of the package instantiation. Entities within this package\n    --  (i.e. the individual floating-point attribute routines) are accessed\n    --  by name using selected notation."}, {"sha": "d7ae2325106f657614ae8da59994f4b1b0ed3fe9", "filename": "gcc/ada/s-hibaen.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-hibaen.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-hibaen.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-hibaen.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -73,7 +73,7 @@ package System.HIE_Back_End is\n    --  This entity controls whether the front end allows generation of\n    --  long shift instructions, i.e. shifts that operate on 64-bit values.\n    --  Such shifts are required for the implementation of fixed-point\n-   --  types longer than 32 bits. This can safetly be set as High_Integrity\n+   --  types longer than 32 bits. This can safely be set as High_Integrity\n    --  on 64-bit machines that provide this operation at the hardware level,\n    --  but on some 32-bit machines a run time call is required. If there\n    --  is a certifiable version available of the relevant run-time routines,"}, {"sha": "d7bcbef5f38477c7820698466f49d63c0ee913bb", "filename": "gcc/ada/s-htable.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-htable.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-htable.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-htable.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -183,7 +183,7 @@ package System.HTable is\n       function Get_Next return Elmt_Ptr;\n       --  Returns a non-specified element that has not been returned by the\n       --  same function since the last call to Get_First or Null_Ptr if\n-      --  there is no such element or Get_First has bever been called. If\n+      --  there is no such element or Get_First has never been called. If\n       --  there is no call to 'Set' in between Get_Next calls, all the\n       --  elements of the HTable will be traversed.\n "}, {"sha": "3d9bbe9b86b912b553eec5f8f504047740028667", "filename": "gcc/ada/s-imgcha.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-imgcha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-imgcha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgcha.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -159,7 +159,7 @@ package body System.Img_Char is\n             end;\n          end if;\n \n-      --  Normal characters yield the character enlosed in quotes (RM 3.5(32))\n+      --  Normal characters yield the character enclosed in quotes (RM 3.5(32))\n \n       else\n          S (1) := ''';"}, {"sha": "9dc66e686348513a92c1d315bfdc61bb525c61d1", "filename": "gcc/ada/s-imgenu.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-imgenu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-imgenu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgenu.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -39,8 +39,8 @@\n --  Note: this is an obsolete package, replaced by System.Img_Enum_New, which\n --  provides procedures instead of functions for these enumeration image calls.\n --  The reason we maintain this package is that when bootstrapping with old\n---  compilers, the old compiler will search for this unit, expectinng to find\n---  these functions. The new commpiler will search for procedures in the new\n+--  compilers, the old compiler will search for this unit, expecting to find\n+--  these functions. The new compiler will search for procedures in the new\n --  version of the unit.\n \n pragma Warnings (Off);"}, {"sha": "a6c31489e69f0e1beaf5ec97a1c36829e96adfed", "filename": "gcc/ada/s-imgint.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-imgint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-imgint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgint.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -65,7 +65,7 @@ package body System.Img_Int is\n          end if;\n       end Set_Digits;\n \n-   --  Start of processinng for Image_Integer\n+   --  Start of processing for Image_Integer\n \n    begin\n       P := 1;"}, {"sha": "bbcf225a1dd4c02657ed21f06c7accb1e437ac58", "filename": "gcc/ada/s-imgrea.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-imgrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-imgrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgrea.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -87,7 +87,7 @@ package body System.Img_Real is\n       pragma Assert (S'First = 1);\n \n    begin\n-      --  Decide wether a blank should be prepended before the call to\n+      --  Decide whether a blank should be prepended before the call to\n       --  Set_Image_Real. We generate a blank for positive values, and\n       --  also for positive zeroes. For negative zeroes, we generate a\n       --  space only if Signed_Zeroes is True (the RM only permits the"}, {"sha": "4c7f77c63ae191900e420e43c704b61703e80a2b", "filename": "gcc/ada/s-inmaop-dummy.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-inmaop-dummy.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-inmaop-dummy.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-inmaop-dummy.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -134,9 +134,9 @@ package body System.Interrupt_Management.Operations is\n       null;\n    end Empty_Interrupt_Mask;\n \n-   -----------------------\n-   -- Add_To_Sigal_Mask --\n-   -----------------------\n+   ---------------------------\n+   -- Add_To_Interrupt_Mask --\n+   ---------------------------\n \n    procedure Add_To_Interrupt_Mask\n      (Mask      : access Interrupt_Mask;"}, {"sha": "2e9674d22df8e7213dc734fe0ed1d264f4c65c27", "filename": "gcc/ada/s-inmaop.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-inmaop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-inmaop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-inmaop.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -96,7 +96,7 @@ package System.Interrupt_Management.Operations is\n \n    procedure Copy_Interrupt_Mask (X : out Interrupt_Mask; Y : Interrupt_Mask);\n    pragma Inline (Copy_Interrupt_Mask);\n-   --  Assigment needed for limited private type Interrupt_Mask\n+   --  Assignment needed for limited private type Interrupt_Mask\n \n    procedure Interrupt_Self_Process (Interrupt : Interrupt_ID);\n    pragma Inline (Interrupt_Self_Process);"}, {"sha": "83e814160d418a5ffe5b42d42c6a38f152e81719", "filename": "gcc/ada/s-interr-vms.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-interr-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-interr-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr-vms.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -222,7 +222,7 @@ package body System.Interrupts is\n    begin\n       --  This routine registers the Handler as usable for Dynamic\n       --  Interrupt Handler. Routines attaching and detaching Handler\n-      --  dynamically should first consult if the Handler is rgistered.\n+      --  dynamically should first consult if the Handler is registered.\n       --  A Program Error should be raised if it is not registered.\n \n       --  The pragma Interrupt_Handler can only appear in the library\n@@ -372,7 +372,7 @@ package body System.Interrupts is\n \n    --  Calling this procedure with New_Handler = null and Static = True\n    --  means we want to detach the current handler regardless of the\n-   --  previous handler's binding status (ie. do not care if it is a\n+   --  previous handler's binding status (i.e. do not care if it is a\n    --  dynamic or static handler).\n \n    --  This option is needed so that during the finalization of a PO, we\n@@ -398,7 +398,7 @@ package body System.Interrupts is\n \n    --  Calling this procedure with New_Handler = null and Static = True means\n    --  we want to detach the current handler regardless of the previous\n-   --  handler's binding status (ie. do not care if it is dynamic or static\n+   --  handler's binding status (i.e. do not care if it is dynamic or static\n    --  handler).\n \n    --  This option is needed so that during the finalization of a PO, we can\n@@ -630,7 +630,7 @@ package body System.Interrupts is\n               \"dynamic Handler\";\n          end if;\n \n-         --  The interrupt should no longer be ingnored if it was ever ignored\n+         --  The interrupt should no longer be ignored if it was ever ignored\n \n          Ignored (Interrupt) := False;\n \n@@ -715,7 +715,7 @@ package body System.Interrupts is\n \n       System.Tasking.Utilities.Make_Independent;\n \n-      --  Environmen task gets its own interrupt mask, saves it,\n+      --  Environment task gets its own interrupt mask, saves it,\n       --  and then masks all interrupts except the Keep_Unmasked set.\n \n       --  During rendezvous, the Interrupt_Manager receives the old\n@@ -741,17 +741,17 @@ package body System.Interrupts is\n \n       --  This sigwaiting is needed so that we make sure a Server_Task is\n       --  out of its own sigwait state. This extra synchronization is\n-      --  necessary to prevent following senarios.\n+      --  necessary to prevent following scenarios.\n \n       --   1) Interrupt_Manager sends an Abort_Task_Interrupt to the\n       --      Server_Task then changes its own interrupt mask (OS level).\n       --      If an interrupt (corresponding to the Server_Task) arrives\n-      --      in the nean time we have the Interrupt_Manager umnasked and\n+      --      in the mean time we have the Interrupt_Manager unmasked and\n       --      the Server_Task waiting on sigwait.\n \n       --   2) For unbinding handler, we install a default action in the\n       --      Interrupt_Manager. POSIX.1c states that the result of using\n-      --      \"sigwait\" and \"sigaction\" simaltaneously on the same interrupt\n+      --      \"sigwait\" and \"sigaction\" simultaneously on the same interrupt\n       --      is undefined. Therefore, we need to be informed from the\n       --      Server_Task of the fact that the Server_Task is out of its\n       --      sigwait stage.\n@@ -806,7 +806,7 @@ package body System.Interrupts is\n                     \"A binding for this interrupt is already present\";\n                end if;\n \n-               --  The interrupt should no longer be ingnored if\n+               --  The interrupt should no longer be ignored if\n                --  it was ever ignored.\n \n                Ignored (Interrupt) := False;\n@@ -938,7 +938,7 @@ package body System.Interrupts is\n          --  (Abort_Task_Interrupt) from the Interrupt_Manager for unbinding\n          --  a Procedure Handler or an Entry. Or it could be a wake up\n          --  from status change (Unblocked -> Blocked). If that is not\n-         --  the case, we should exceute the attached Procedure or Entry.\n+         --  the case, we should execute the attached Procedure or Entry.\n \n          if Single_Lock then\n             POP.Lock_RTS;"}, {"sha": "98254e617be587548dae1870fe4485f9e39c15f9", "filename": "gcc/ada/s-interr-vxworks.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-interr-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-interr-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr-vxworks.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -232,7 +232,7 @@ package body System.Interrupts is\n \n    --  Calling this procedure with New_Handler = null and Static = True\n    --  means we want to detach the current handler regardless of the\n-   --  previous handler's binding status (ie. do not care if it is a\n+   --  previous handler's binding status (i.e. do not care if it is a\n    --  dynamic or static handler).\n \n    --  This option is needed so that during the finalization of a PO, we\n@@ -342,7 +342,7 @@ package body System.Interrupts is\n \n    --  Calling this procedure with New_Handler = null and Static = True\n    --  means we want to detach the current handler regardless of the\n-   --  previous handler's binding status (ie. do not care if it is a\n+   --  previous handler's binding status (i.e. do not care if it is a\n    --  dynamic or static handler).\n \n    --  This option is needed so that during the finalization of a PO, we\n@@ -616,7 +616,7 @@ package body System.Interrupts is\n \n    --  Each Interrupt_Server_Task has an associated binary semaphore\n    --  on which it pends once it's been started.  This routine determines\n-   --  The appropriate semaphore and and issues a semGive call, waking\n+   --  The appropriate semaphore and issues a semGive call, waking\n    --  the server task.  When a handler is unbound,\n    --  System.Interrupts.Unbind_Handler issues a semFlush, and the\n    --  server task deletes its semaphore and terminates."}, {"sha": "44411125493f2b362f1fb9a761e4c9b10fc43c44", "filename": "gcc/ada/s-interr.adb", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-interr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-interr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -44,7 +44,7 @@\n --  Note : Direct calls to sigaction, sigprocmask, pthread_sigsetmask or any\n --  other low-level interface that changes the interrupt action or\n --  interrupt mask needs a careful thought.\n---  One may acheive the effect of system calls first masking RTS blocked\n+--  One may achieve the effect of system calls first masking RTS blocked\n --  (by calling Block_Interrupt) for the interrupt under consideration.\n --  This will make all the tasks in RTS blocked for the Interrupt.\n \n@@ -224,7 +224,7 @@ package body System.Interrupts is\n \n    --  Calling this procedure with New_Handler = null and Static = True means\n    --  we want to detach the current handler regardless of the previous\n-   --  handler's binding status (ie. do not care if it is a dynamic or static\n+   --  handler's binding status (i.e. do not care if it is a dynamic or static\n    --  handler).\n \n    --  This option is needed so that during the finalization of a PO, we can\n@@ -342,7 +342,7 @@ package body System.Interrupts is\n \n    --  Calling this procedure with New_Handler = null and Static = True means\n    --  we want to detach the current handler regardless of the previous\n-   --  handler's binding status (ie. do not care if it is a dynamic or static\n+   --  handler's binding status (i.e. do not care if it is a dynamic or static\n    --  handler).\n \n    --  This option is needed so that during the finalization of a PO, we can\n@@ -705,7 +705,7 @@ package body System.Interrupts is\n          if not Blocked (Interrupt) then\n \n             --  Mask this task for the given Interrupt so that all tasks\n-            --  are masked for the Interrupt and the actuall delivery of the\n+            --  are masked for the Interrupt and the actual delivery of the\n             --  Interrupt will be caught using \"sigwait\" by the\n             --  corresponding Server_Task.\n \n@@ -867,7 +867,7 @@ package body System.Interrupts is\n               \"dynamic Handler\";\n          end if;\n \n-         --  The interrupt should no longer be ingnored if\n+         --  The interrupt should no longer be ignored if\n          --  it was ever ignored.\n \n          Ignored (Interrupt) := False;\n@@ -958,17 +958,17 @@ package body System.Interrupts is\n \n       --  This sigwaiting is needed so that we make sure a Server_Task is\n       --  out of its own sigwait state. This extra synchronization is\n-      --  necessary to prevent following senarios.\n+      --  necessary to prevent following scenarios.\n \n       --   1) Interrupt_Manager sends an Abort_Task_Interrupt to the\n       --      Server_Task then changes its own interrupt mask (OS level).\n       --      If an interrupt (corresponding to the Server_Task) arrives\n-      --      in the nean time we have the Interrupt_Manager umnasked and\n+      --      in the mean time we have the Interrupt_Manager unmasked and\n       --      the Server_Task waiting on sigwait.\n \n       --   2) For unbinding handler, we install a default action in the\n       --      Interrupt_Manager. POSIX.1c states that the result of using\n-      --      \"sigwait\" and \"sigaction\" simaltaneously on the same interrupt\n+      --      \"sigwait\" and \"sigaction\" simultaneously on the same interrupt\n       --      is undefined. Therefore, we need to be informed from the\n       --      Server_Task of the fact that the Server_Task is out of its\n       --      sigwait stage.\n@@ -1029,7 +1029,7 @@ package body System.Interrupts is\n                        \"A binding for this interrupt is already present\";\n                   end if;\n \n-                  --  The interrupt should no longer be ingnored if\n+                  --  The interrupt should no longer be ignored if\n                   --  it was ever ignored.\n \n                   Ignored (Interrupt) := False;\n@@ -1067,7 +1067,7 @@ package body System.Interrupts is\n                      if not Is_Reserved (J) then\n                         if User_Entry (J).T = T then\n \n-                           --  The interrupt should no longer be ingnored if\n+                           --  The interrupt should no longer be ignored if\n                            --  it was ever ignored.\n \n                            Ignored (J) := False;\n@@ -1301,7 +1301,7 @@ package body System.Interrupts is\n             --  (Abort_Task_Interrupt) from the Interrupt_Manager for unbinding\n             --  a Procedure Handler or an Entry. Or it could be a wake up\n             --  from status change (Unblocked -> Blocked). If that is not\n-            --  the case, we should exceute the attached Procedure or Entry.\n+            --  the case, we should execute the attached Procedure or Entry.\n \n             Self_ID.Common.State := Interrupt_Server_Blocked_On_Event_Flag;\n             POP.Unlock (Self_ID);"}, {"sha": "4254b30c0cf83ebe03cecb553def58a4ee7e46da", "filename": "gcc/ada/s-interr.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-interr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-interr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -150,7 +150,7 @@ package System.Interrupts is\n    --  Comment needed ???\n \n    procedure Ignore_Interrupt (Interrupt : Interrupt_ID);\n-   --  Set the sigacion for the interrupt to SIG_IGN\n+   --  Set the sigaction for the interrupt to SIG_IGN\n \n    procedure Unignore_Interrupt (Interrupt : Interrupt_ID);\n    --  Comment needed ???\n@@ -162,7 +162,7 @@ package System.Interrupts is\n    --  other low-level interface that changes the signal action or signal mask\n    --  needs a careful thought.\n \n-   --  One may acheive the effect of system calls first making RTS blocked (by\n+   --  One may achieve the effect of system calls first making RTS blocked (by\n    --  calling Block_Interrupt) for the signal under consideration. This will\n    --  make all the tasks in RTS blocked for the Interrupt.\n \n@@ -188,7 +188,7 @@ package System.Interrupts is\n \n    --  (2) Attach_Handler pragmas are used, and possibly Interrupt_Handler\n    --  pragma. We need to attach the handlers to the given interrupts when the\n-   --  objet is elaborated. This should be done by constructing an array of\n+   --  object is elaborated. This should be done by constructing an array of\n    --  pairs (interrupt, handler) from the pragmas and calling Install_Handlers\n    --  with it (types to be used are New_Handler_Item and New_Handler_Array).\n    --  On finalization, we need to restore the handlers that were installed"}, {"sha": "03937811ec4c8cc5f159cc14915a779c46b613cc", "filename": "gcc/ada/s-intman-vxworks.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-intman-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-intman-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-vxworks.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -45,7 +45,7 @@\n --  Interrupt_ID is used to derive the type in Ada.Interrupts, and\n --  adding more operations to that type would be illegal according\n --  to the Ada Reference Manual. This is the reason why the signals\n---  sets are implemeneted using visible arrays rather than functions.\n+--  sets are implemented using visible arrays rather than functions.\n \n with System.OS_Interface;\n "}, {"sha": "fb91662bda121c3a74f042bb2b9cf23fa8ee5c05", "filename": "gcc/ada/s-intman.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-intman.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-intman.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -42,7 +42,7 @@\n --  Interrupt_ID into the visible part of this package. The type Interrupt_ID\n --  is used to derive the type in Ada.Interrupts, and adding more operations\n --  to that type would be illegal according to the Ada Reference Manual. This\n---  is the reason why the signals sets are implemeneted using visible arrays\n+--  is the reason why the signals sets are implemented using visible arrays\n --  rather than functions.\n \n with System.OS_Interface;"}, {"sha": "a5b04e0811737e0ac43aee885f52f5150ed6a055", "filename": "gcc/ada/s-mastop-irix.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-mastop-irix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-mastop-irix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-mastop-irix.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -45,7 +45,7 @@ package body System.Machine_State_Operations is\n \n    use System.Storage_Elements;\n \n-   --  The exc_unwind function in libexc operats on a Sigcontext\n+   --  The exc_unwind function in libexc operates on a Sigcontext\n \n    --  Type sigcontext_t is defined in /usr/include/sys/signal.h.\n    --  We define an equivalent Ada type here. From the comments in\n@@ -115,7 +115,7 @@ package body System.Machine_State_Operations is\n    o32n : constant Natural := Boolean'Pos (o32);\n    n32n : constant Natural := Boolean'Pos (n32);\n    --  Flags to indicate which ABI is in effect for this compilation. For the\n-   --  purposes of this unit, the n32 and n64 ABI's are identical.\n+   --  purposes of this unit, the n32 and n64 ABIs are identical.\n \n    LSC : constant Character := Character'Val (o32n * Character'Pos ('w') +\n                                               n32n * Character'Pos ('d'));"}, {"sha": "ff65720d6e4c97904e00f1b138d60db6acbf4d18", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -293,7 +293,7 @@ package body System.OS_Lib is\n       --  Internal exception raised to signal error in copy\n \n       function Build_Path (Dir : String; File : String) return String;\n-      --  Returns pathname Dir catenated with File adding the directory\n+      --  Returns pathname Dir concatenated with File adding the directory\n       --  separator only if needed.\n \n       procedure Copy (From, To : File_Descriptor);\n@@ -1833,7 +1833,7 @@ package body System.OS_Lib is\n \n       --  First, convert VMS file spec to Unix file spec.\n       --  If Name is not in VMS syntax, then this is equivalent\n-      --  to put Name at the begining of Path_Buffer.\n+      --  to put Name at the beginning of Path_Buffer.\n \n       VMS_Conversion : begin\n          The_Name (1 .. Name'Length) := Name;"}, {"sha": "8c319c845e1fc322cb435ae176cad666e68d6d90", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -65,7 +65,7 @@ package System.OS_Lib is\n    -----------------------\n \n    --  These are reexported from package Strings (which was introduced to\n-   --  avoid different packages declarting different types unnecessarily).\n+   --  avoid different packages declaring different types unnecessarily).\n    --  See package System.Strings for details.\n \n    subtype String_Access is Strings.String_Access;\n@@ -875,7 +875,7 @@ private\n    --  bootstrap path problems. To be changed later ???\n \n    Invalid_Time : constant OS_Time := -1;\n-   --  This value should match the return valud by __gnat_file_time_*\n+   --  This value should match the return value from __gnat_file_time_*\n \n    pragma Inline (\"<\");\n    pragma Inline (\">\");"}, {"sha": "b5de4f28ba9c04c7cdb56aa2125120e85c0308c5", "filename": "gcc/ada/s-osinte-aix.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osinte-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osinte-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-aix.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -132,7 +132,7 @@ package System.OS_Interface is\n    SIGCPUFAIL  : constant := 59; -- Predictive De-configuration of Processors\n    SIGKAP      : constant := 60; -- keep alive poll from native keyboard\n    SIGGRANT    : constant := SIGKAP; -- monitor mode granted\n-   SIGRETRACT  : constant := 61; -- monitor mode should be relinguished\n+   SIGRETRACT  : constant := 61; -- monitor mode should be relinquished\n    SIGSOUND    : constant := 62; -- sound control has completed\n    SIGSAK      : constant := 63; -- secure attention key\n \n@@ -311,7 +311,7 @@ package System.OS_Interface is\n    --  No alternate signal stack is used on this platform\n \n    Stack_Base_Available : constant Boolean := False;\n-   --  Indicates wether the stack base is available on this target\n+   --  Indicates whether the stack base is available on this target\n \n    function Get_Stack_Base (thread : pthread_t) return Address;\n    pragma Inline (Get_Stack_Base);"}, {"sha": "d53e2c43dcabb9ec575f356288c3d7dd7959c4bf", "filename": "gcc/ada/s-osinte-darwin.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osinte-darwin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osinte-darwin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-darwin.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -175,7 +175,7 @@ package System.OS_Interface is\n    ----------\n \n    Time_Slice_Supported : constant Boolean := True;\n-   --  Indicates wether time slicing is supported\n+   --  Indicates whether time slicing is supported\n \n    type timespec is private;\n \n@@ -284,9 +284,9 @@ package System.OS_Interface is\n    --  No alternate signal stack is used on this platform\n \n    Stack_Base_Available : constant Boolean := False;\n-   --  Indicates wether the stack base is available on this target. This allows\n-   --  us to share s-osinte.adb between all the FSU run time. Note that this\n-   --  value can only be true if pthread_t has a complete definition that\n+   --  Indicates whether the stack base is available on this target. This\n+   --  allows us to share s-osinte.adb between all the FSU run time. Note that\n+   --  this value can only be true if pthread_t has a complete definition that\n    --  corresponds exactly to the C header files.\n \n    function Get_Stack_Base (thread : pthread_t) return System.Address;"}, {"sha": "51f498397f9528f3e89dd0f3c5e6f4f05da7fbaf", "filename": "gcc/ada/s-osinte-freebsd.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osinte-freebsd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osinte-freebsd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-freebsd.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -195,7 +195,7 @@ package System.OS_Interface is\n    ----------\n \n    Time_Slice_Supported : constant Boolean := True;\n-   --  Indicates wether time slicing is supported (i.e SCHED_RR is supported)\n+   --  Indicates whether time slicing is supported (i.e SCHED_RR is supported)\n \n    type timespec is private;\n \n@@ -313,9 +313,9 @@ package System.OS_Interface is\n    --  No alternate signal stack is used on this platform\n \n    Stack_Base_Available : constant Boolean := False;\n-   --  Indicates wether the stack base is available on this target. This allows\n-   --  us to share s-osinte.adb between all the FSU run time. Note that this\n-   --  value can only be true if pthread_t has a complete definition that\n+   --  Indicates whether the stack base is available on this target. This\n+   --  allows us to share s-osinte.adb between all the FSU run time. Note that\n+   --  this value can only be true if pthread_t has a complete definition that\n    --  corresponds exactly to the C header files.\n \n    function Get_Stack_Base (thread : pthread_t) return Address;"}, {"sha": "0fc5ef1db54ed9c1ca6637a635cdfd1b44d42330", "filename": "gcc/ada/s-osinte-hpux.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osinte-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osinte-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-hpux.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -177,7 +177,7 @@ package System.OS_Interface is\n    ----------\n \n    Time_Slice_Supported : constant Boolean := True;\n-   --  Indicates wether time slicing is supported\n+   --  Indicates whether time slicing is supported\n \n    type timespec is private;\n \n@@ -299,7 +299,7 @@ package System.OS_Interface is\n    --  This must be in keeping with init.c:__gnat_alternate_stack\n \n    Stack_Base_Available : constant Boolean := False;\n-   --  Indicates wether the stack base is available on this target\n+   --  Indicates whether the stack base is available on this target\n \n    function Get_Stack_Base (thread : pthread_t) return Address;\n    pragma Inline (Get_Stack_Base);"}, {"sha": "09cbfca99b7a57120c970c7321225e0fc939d5b9", "filename": "gcc/ada/s-osinte-lynxos-3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osinte-lynxos-3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osinte-lynxos-3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-lynxos-3.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -138,7 +138,7 @@ package body System.OS_Interface is\n    --------------------------\n \n    --  For all the following functions, LynxOS threads has the POSIX Draft 4\n-   --  begavior; it sets errno but the standard Posix requires it to be\n+   --  behavior; it sets errno but the standard Posix requires it to be\n    --  returned.\n \n    function pthread_mutexattr_init"}, {"sha": "8098a8fbe881fba80147f96d65b2a7b7cd296b6a", "filename": "gcc/ada/s-osinte-lynxos-3.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osinte-lynxos-3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osinte-lynxos-3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-lynxos-3.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -175,7 +175,7 @@ package System.OS_Interface is\n    ----------\n \n    Time_Slice_Supported : constant Boolean := True;\n-   --  Indicates wether time slicing is supported\n+   --  Indicates whether time slicing is supported\n \n    type timespec is private;\n \n@@ -271,7 +271,7 @@ package System.OS_Interface is\n    --  No alternate signal stack is used on this platform\n \n    Stack_Base_Available : constant Boolean := False;\n-   --  Indicates wether the stack base is available on this target\n+   --  Indicates whether the stack base is available on this target\n \n    function Get_Stack_Base (thread : pthread_t) return Address;\n    pragma Inline (Get_Stack_Base);\n@@ -383,7 +383,7 @@ package System.OS_Interface is\n       mutex   : access pthread_mutex_t;\n       reltime : access timespec) return int;\n    pragma Inline (pthread_cond_timedwait);\n-   --  LynxOS has a nonstandard pthrad_cond_timedwait\n+   --  LynxOS has a nonstandard pthread_cond_timedwait\n \n    Relative_Timed_Wait : constant Boolean := True;\n    --  pthread_cond_timedwait requires a relative delay time"}, {"sha": "dd30d2421760b4cb28c42db7118a3048e3643619", "filename": "gcc/ada/s-osinte-lynxos.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osinte-lynxos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osinte-lynxos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-lynxos.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -87,7 +87,7 @@ package System.OS_Interface is\n    --\n    --\n    --  The lowest numbered signal is 1, but 0 is a valid argument to some\n-   --  library functions, eg. kill(2). However, 0 is not just another\n+   --  library functions, e.g. kill(2). However, 0 is not just another\n    --  signal: For instance 'I in Signal' and similar should be used with\n    --  caution.\n "}, {"sha": "f28e14d30831b29feadcb09faeee9e3a687b3e4b", "filename": "gcc/ada/s-osinte-rtems.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osinte-rtems.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osinte-rtems.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-rtems.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -159,7 +159,7 @@ package System.OS_Interface is\n    ----------\n \n    Time_Slice_Supported : constant Boolean := True;\n-   --  Indicates wether time slicing is supported (i.e SCHED_RR is supported)\n+   --  Indicates whether time slicing is supported (i.e SCHED_RR is supported)\n \n    type timespec is private;\n \n@@ -250,7 +250,7 @@ package System.OS_Interface is\n    -----------\n \n    Stack_Base_Available : constant Boolean := False;\n-   --  Indicates wether the stack base is available on this target.\n+   --  Indicates whether the stack base is available on this target.\n    --  This allows us to share s-osinte.adb between all the FSU/RTEMS\n    --  run time.\n    --  Note that this value can only be true if pthread_t has a complete"}, {"sha": "ae318060ccd235db4d35804dda2cb81d281b69d2", "filename": "gcc/ada/s-osinte-solaris-posix.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osinte-solaris-posix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osinte-solaris-posix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-solaris-posix.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -185,7 +185,7 @@ package System.OS_Interface is\n    ----------\n \n    Time_Slice_Supported : constant Boolean := True;\n-   --  Indicates wether time slicing is supported\n+   --  Indicates whether time slicing is supported\n \n    type timespec is private;\n "}, {"sha": "d9712858c395080e4aec3fb1c2640ead8d9ac9a4", "filename": "gcc/ada/s-osprim-mingw.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osprim-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osprim-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-mingw.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -130,10 +130,10 @@ package body System.OS_Primitives is\n         Duration (Long_Long_Float (Current_Ticks - BTA.all) /\n                   Long_Long_Float (TFA.all));\n \n-      --  If we have a shift of more than Max_Shift seconds we resynchonize the\n-      --  Clock. This is probably due to a manual Clock adjustment, an DST\n-      --  adjustment or an NTP synchronisation. And we want to adjust the time\n-      --  for this system (non-monotonic) clock.\n+      --  If we have a shift of more than Max_Shift seconds we resynchronize\n+      --  the Clock. This is probably due to a manual Clock adjustment, an\n+      --  DST adjustment or an NTP synchronisation. And we want to adjust the\n+      --  time for this system (non-monotonic) clock.\n \n       if abs (Elap_Secs_Sys - Elap_Secs_Tick) > Max_Shift then\n          Get_Base_Time;"}, {"sha": "93138414571f7fb71a0d6e5a53241e82d6e82bec", "filename": "gcc/ada/s-osprim-vms.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osprim-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-osprim-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-vms.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -71,7 +71,7 @@ package body System.OS_Primitives is\n    --  pidadr = address of process id to be woken up\n    --  prcnam = name of process to be woken up\n    --  daytim = time to wake up\n-   --  reptim = repitition interval of wakeup calls\n+   --  reptim = repetition interval of wakeup calls\n    --\n \n    procedure Sys_Schdwk"}, {"sha": "5d4fd4caed82562a06b18b4471f2aeb76d6be41b", "filename": "gcc/ada/s-parame-ae653.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-parame-ae653.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-parame-ae653.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-ae653.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -125,7 +125,7 @@ package System.Parameters is\n \n    --      The system releases all storage on program termination only,\n    --      but not other garbage collection occurs, so finalization calls\n-   --      are ommitted only for outer level onjects can be omitted if\n+   --      are omitted only for outer level objects can be omitted if\n    --      pragma Finalize_Storage_Only is used.\n \n    --    Garbage_Collected = True"}, {"sha": "865ed763f44d21435fcb7939e59c3aceec31959e", "filename": "gcc/ada/s-parame-hpux.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-parame-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-parame-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-hpux.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -123,7 +123,7 @@ package System.Parameters is\n \n    --      The system releases all storage on program termination only,\n    --      but not other garbage collection occurs, so finalization calls\n-   --      are ommitted only for outer level onjects can be omitted if\n+   --      are omitted only for outer level objects can be omitted if\n    --      pragma Finalize_Storage_Only is used.\n \n    --    Garbage_Collected = True"}, {"sha": "b9119bc00d7a041d52eff443d04128db15ba7b21", "filename": "gcc/ada/s-parame-vms-alpha.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-parame-vms-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-parame-vms-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vms-alpha.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -123,7 +123,7 @@ package System.Parameters is\n \n    --      The system releases all storage on program termination only,\n    --      but not other garbage collection occurs, so finalization calls\n-   --      are ommitted only for outer level onjects can be omitted if\n+   --      are omitted only for outer level objects can be omitted if\n    --      pragma Finalize_Storage_Only is used.\n \n    --    Garbage_Collected = True"}, {"sha": "4273df9dd95001d37c9e63e660f3aef40b8f33bc", "filename": "gcc/ada/s-parame-vms-ia64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-parame-vms-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-parame-vms-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vms-ia64.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -123,7 +123,7 @@ package System.Parameters is\n \n    --      The system releases all storage on program termination only,\n    --      but not other garbage collection occurs, so finalization calls\n-   --      are ommitted only for outer level onjects can be omitted if\n+   --      are omitted only for outer level objects can be omitted if\n    --      pragma Finalize_Storage_Only is used.\n \n    --    Garbage_Collected = True"}, {"sha": "a0404edaac2681273dbd71a5ee2f822159a16a15", "filename": "gcc/ada/s-parame-vms-restrict.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-parame-vms-restrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-parame-vms-restrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vms-restrict.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -123,7 +123,7 @@ package System.Parameters is\n \n    --      The system releases all storage on program termination only,\n    --      but not other garbage collection occurs, so finalization calls\n-   --      are ommitted only for outer level onjects can be omitted if\n+   --      are omitted only for outer level objects can be omitted if\n    --      pragma Finalize_Storage_Only is used.\n \n    --    Garbage_Collected = True"}, {"sha": "bc0ee16ca60bd25d74d512930f0691cb75d69465", "filename": "gcc/ada/s-parame-vxworks.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-parame-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-parame-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vxworks.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -125,7 +125,7 @@ package System.Parameters is\n \n    --      The system releases all storage on program termination only,\n    --      but not other garbage collection occurs, so finalization calls\n-   --      are ommitted only for outer level onjects can be omitted if\n+   --      are omitted only for outer level objects can be omitted if\n    --      pragma Finalize_Storage_Only is used.\n \n    --    Garbage_Collected = True"}, {"sha": "a94b22296bc91a8b923e7db831a881c17c46ef85", "filename": "gcc/ada/s-parame.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-parame.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-parame.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -123,7 +123,7 @@ package System.Parameters is\n \n    --      The system releases all storage on program termination only,\n    --      but not other garbage collection occurs, so finalization calls\n-   --      are ommitted only for outer level onjects can be omitted if\n+   --      are omitted only for outer level objects can be omitted if\n    --      pragma Finalize_Storage_Only is used.\n \n    --    Garbage_Collected = True"}, {"sha": "94b08326c25bc002786ee4863de591a229523d7a", "filename": "gcc/ada/s-parint.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-parint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-parint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parint.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -34,7 +34,7 @@\n \n package body System.Partition_Interface is\n \n-   pragma Warnings (Off); -- supress warnings for unreferenced formals\n+   pragma Warnings (Off); -- suppress warnings for unreferenced formals\n \n    M : constant := 7;\n "}, {"sha": "9191c0731b65544a8cdd1e30d801f57c51f64ea9", "filename": "gcc/ada/s-parint.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-parint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-parint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parint.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -94,7 +94,7 @@ package System.Partition_Interface is\n    pragma No_Strict_Aliasing (RAS_Proxy_Type_Access);\n    --  This type is used by the expansion to implement distributed objects.\n    --  Do not change its definition or its layout without updating\n-   --  Exp_Dist.Build_Remote_Supbrogram_Proxy_Type.\n+   --  Exp_Dist.Build_Remote_Subprogram_Proxy_Type.\n \n    --  The Request_Access type is used for communication between the PCS\n    --  and the RPC receiver generated by the compiler: it contains all the"}, {"sha": "5d7318da3eb545400d17d5a2ac3a764e1b0967c5", "filename": "gcc/ada/s-poosiz.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-poosiz.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-poosiz.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-poosiz.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -59,7 +59,7 @@ package body System.Pool_Size is\n \n       --  Embedded pool that manages allocation of variable-size data\n \n-      --  This pool is used as soon as the Elmt_sizS of the pool object is 0\n+      --  This pool is used as soon as the Elmt_Size of the pool object is 0\n \n       --  Allocation is done on the first chunk long enough for the request.\n       --  Deallocation just puts the freed chunk at the beginning of the list.\n@@ -261,7 +261,7 @@ package body System.Pool_Size is\n             raise Storage_Error;\n          end if;\n \n-         --  When the chunk is bigger than what is needed, take appropraite\n+         --  When the chunk is bigger than what is needed, take appropriate\n          --  amount and build a new shrinked chunk with the remainder.\n \n          if Size (Pool, Chunk) - Align_Size  > Minimum_Size then"}, {"sha": "aa266ac924d495e6f27e62b35f0928f30dd04876", "filename": "gcc/ada/s-proinf-irix-athread.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-proinf-irix-athread.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-proinf-irix-athread.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-proinf-irix-athread.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -56,7 +56,7 @@ package System.Program_Info is\n \n    function Default_Task_Stack return Integer;\n    --  The default stack size for each created thread. This default value can\n-   --  be overriden on a per-task basis by the language-defined Storage_Size\n+   --  be overridden on a per-task basis by the language-defined Storage_Size\n    --  pragma.\n \n    function Stack_Guard_Pages return Integer;"}, {"sha": "f5133d66ad1d70f878cd9bb28f73424519e461c5", "filename": "gcc/ada/s-proinf.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-proinf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-proinf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-proinf.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -39,7 +39,7 @@ package System.Program_Info is\n \n    function Default_Task_Stack return Integer;\n    --  The default stack size for each created thread.  This default value\n-   --  can be overriden on a per-task basis by the language-defined\n+   --  can be overridden on a per-task basis by the language-defined\n    --  Storage_Size pragma.\n \n end System.Program_Info;"}, {"sha": "2dae7b2910375a2cc5c3962f6398b96280fcf95f", "filename": "gcc/ada/s-regexp.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-regexp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-regexp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-regexp.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -140,7 +140,7 @@ package body System.Regexp is\n          Num_States  : out State_Index;\n          Start_State : out State_Index;\n          End_State   : out State_Index);\n-      --  Creates the first version of the regexp (this is a non determinist\n+      --  Creates the first version of the regexp (this is a non deterministic\n       --  finite state machine, which is unadapted for a fast pattern\n       --  matching algorithm). We use a recursive algorithm to process the\n       --  parenthesis sub-expressions.\n@@ -1137,7 +1137,7 @@ package body System.Regexp is\n             end loop;\n          end Closure;\n \n-      --  Start of procesing for Create_Secondary_Table\n+      --  Start of processing for Create_Secondary_Table\n \n       begin\n          --  Create a new state"}, {"sha": "68d915f8ad0f5417d2ec58262dec9237c6b79880", "filename": "gcc/ada/s-regpat.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-regpat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-regpat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-regpat.adb?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -136,10 +136,10 @@ package body System.Regpat is\n       --  Matches after or before a word\n \n       BOL,        -- no        Match \"\" at beginning of line\n-      MBOL,       -- no        Same, assuming mutiline (match after \\n)\n+      MBOL,       -- no        Same, assuming multiline (match after \\n)\n       SBOL,       -- no        Same, assuming single line (don't match at \\n)\n       EOL,        -- no        Match \"\" at end of line\n-      MEOL,       -- no        Same, assuming mutiline (match before \\n)\n+      MEOL,       -- no        Same, assuming multiline (match before \\n)\n       SEOL,       -- no        Same, assuming single line (don't match at \\n)\n \n       BOUND,      -- no        Match \"\" at any word boundary\n@@ -386,7 +386,7 @@ package body System.Regpat is\n       function  Emit_Node (Op : Opcode) return Pointer;\n       --  If code-generation is enabled, Emit_Node outputs the\n       --  opcode Op and reserves space for a pointer to the next node.\n-      --  Return value is the location of new opcode, ie old Emit_Ptr.\n+      --  Return value is the location of new opcode, i.e. old Emit_Ptr.\n \n       procedure Emit_Natural (IP : Pointer; N : Natural);\n       --  Split N on two characters at position IP\n@@ -449,7 +449,7 @@ package body System.Regpat is\n       --  Link_Tail sets the next-pointer at the end of a node chain\n \n       procedure Link_Operand_Tail (P, Val : Pointer);\n-      --  Link_Tail on operand of first argument; nop if operandless\n+      --  Link_Tail on operand of first argument; noop if operand-less\n \n       function  Next_Instruction (P : Pointer) return Pointer;\n       --  Dig the \"next\" pointer out of a node\n@@ -460,7 +460,7 @@ package body System.Regpat is\n \n       function Is_Curly_Operator (IP : Natural) return Boolean;\n       --  Return True if IP is looking at a '{' that is the beginning\n-      --  of a curly operator, ie it matches {\\d+,?\\d*}\n+      --  of a curly operator, i.e. it matches {\\d+,?\\d*}\n \n       function Is_Mult (IP : Natural) return Boolean;\n       --  Return True if C is a regexp multiplier: '+', '*' or '?'\n@@ -484,8 +484,8 @@ package body System.Regpat is\n       --  Parse_Literal encodes a string of characters to be matched exactly\n \n       function Parse_Posix_Character_Class return Std_Class;\n-      --  Parse a posic character class, like [:alpha:] or [:^alpha:].\n-      --  The called is suppoed to absorbe the opening [.\n+      --  Parse a posix character class, like [:alpha:] or [:^alpha:].\n+      --  The caller is supposed to absorb the opening [.\n \n       pragma Inline (Is_Mult);\n       pragma Inline (Emit_Natural);"}, {"sha": "077518dd903cad16634151262f3110b0e6e479db", "filename": "gcc/ada/s-regpat.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-regpat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-regpat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-regpat.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -414,7 +414,7 @@ package System.Regpat is\n    --  approach, in addition to the improved efficiency, is that the same\n    --  Pattern_Matcher variable can be used to hold the compiled code for\n    --  several different regular expressions by setting a size that is large\n-   --  enough to accomodate all possibilities.\n+   --  enough to accommodate all possibilities.\n    --\n    --  In this version of the procedure call, the actual required code size is\n    --  returned. Also if Matcher.Size is zero on entry, then the resulting code"}, {"sha": "c28ba3c5a92f8788698265d6a13b70e706ae53cd", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e95ca1593bd1c467a219c55670d637cec8e46/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=276e95ca1593bd1c467a219c55670d637cec8e46", "patch": "@@ -191,7 +191,7 @@ package System.Rident is\n    --  Boolean restrictions that are not checked for partition consistency\n    --  and that thus apply only to the current unit. Note that for these\n    --  restrictions, the compiler does not apply restrictions found in\n-   --  with'ed units, parent specs etc to the main unit.\n+   --  with'ed units, parent specs etc. to the main unit.\n \n    subtype All_Parameter_Restrictions is\n      Restriction_Id range\n@@ -305,7 +305,7 @@ package System.Rident is\n    ----------------------------------\n \n    type Profile_Name is (Ravenscar, Restricted);\n-   --  Names of recognized pfofiles\n+   --  Names of recognized profiles\n \n    type Profile_Data is record\n       Set : Restriction_Flags;"}]}