{"sha": "5faebb89f57ead4ac4ddfb88c2e9037cac2724ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZhZWJiODlmNTdlYWQ0YWM0ZGRmYjg4YzJlOTAzN2NhYzI3MjRiYQ==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2015-07-14T19:19:35Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2015-07-14T19:19:35Z"}, "message": "nios2.c (TEMP_REG_NUM): Move define up in file.\n\n2015-07-14  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* config/nios2/nios2.c (TEMP_REG_NUM): Move define up in file.\n\t(nios2_emit_stack_limit_check): Add size parameter.  Handle\n\t-fstack-limit-symbol as well as -fstack-limit-register.\n\t(nios2_expand_prologue): Emit only a single stack limit check,\n\teven if multiple stack adjustments are required.\n\t(nios2_option_override): Diagnose unsupported combination of -fpic\n\tand -stack-limit-symbol.\n\n\tgcc/testsuite/\n\t* gcc.target/nios2/nios2-stack-check-1.c: Adjust patterns.\n\t* gcc.target/nios2/nios2-stack-check-2.c: Likewise.\n\t* gcc.target/nios2/nios2-stack-check-3.c: New test case.\n\nFrom-SVN: r225787", "tree": {"sha": "5aecba06e5a4ed8867879ef469cb66b9d4e515c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5aecba06e5a4ed8867879ef469cb66b9d4e515c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5faebb89f57ead4ac4ddfb88c2e9037cac2724ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5faebb89f57ead4ac4ddfb88c2e9037cac2724ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5faebb89f57ead4ac4ddfb88c2e9037cac2724ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5faebb89f57ead4ac4ddfb88c2e9037cac2724ba/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4c1cb4da7ae9916e3dae516f360d6a438e5af5e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c1cb4da7ae9916e3dae516f360d6a438e5af5e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c1cb4da7ae9916e3dae516f360d6a438e5af5e5"}], "stats": {"total": 97, "additions": 77, "deletions": 20}, "files": [{"sha": "79e5ba01c7a56d744f57101950dd49cd5b12102e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5faebb89f57ead4ac4ddfb88c2e9037cac2724ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5faebb89f57ead4ac4ddfb88c2e9037cac2724ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5faebb89f57ead4ac4ddfb88c2e9037cac2724ba", "patch": "@@ -1,3 +1,13 @@\n+2015-07-14  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* config/nios2/nios2.c (TEMP_REG_NUM): Move define up in file.\n+\t(nios2_emit_stack_limit_check): Add size parameter.  Handle\n+\t-fstack-limit-symbol as well as -fstack-limit-register.\n+\t(nios2_expand_prologue): Emit only a single stack limit check,\n+\teven if multiple stack adjustments are required.\n+\t(nios2_option_override): Diagnose unsupported combination of -fpic\n+\tand -stack-limit-symbol.\n+\n 2015-07-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* Makefile.in (top_srcdir): New."}, {"sha": "a0fb435f5a1f6536e26f633060b520aa2d91bc36", "filename": "gcc/config/nios2/nios2.c", "status": "modified", "additions": 44, "deletions": 16, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5faebb89f57ead4ac4ddfb88c2e9037cac2724ba/gcc%2Fconfig%2Fnios2%2Fnios2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5faebb89f57ead4ac4ddfb88c2e9037cac2724ba/gcc%2Fconfig%2Fnios2%2Fnios2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2.c?ref=5faebb89f57ead4ac4ddfb88c2e9037cac2724ba", "patch": "@@ -456,20 +456,47 @@ restore_reg (int regno, unsigned offset)\n   RTX_FRAME_RELATED_P (insn) = 1;\n }\n \n-/* Emit conditional trap for checking stack limit.  */\n+/* Temp regno used inside prologue/epilogue.  */\n+#define TEMP_REG_NUM 8\n+\n+/* Emit conditional trap for checking stack limit.  SIZE is the number of\n+   additional bytes required.  \n+\n+   GDB prologue analysis depends on this generating a direct comparison\n+   to the SP register, so the adjustment to add SIZE needs to be done on\n+   the other operand to the comparison.  Use TEMP_REG_NUM as a temporary,\n+   if necessary.  */\n static void\n-nios2_emit_stack_limit_check (void)\n+nios2_emit_stack_limit_check (int size)\n {\n-  if (REG_P (stack_limit_rtx))\n-    emit_insn (gen_ctrapsi4 (gen_rtx_LTU (VOIDmode, stack_pointer_rtx,\n-\t\t\t\t\t  stack_limit_rtx),\n-\t\t\t     stack_pointer_rtx, stack_limit_rtx, GEN_INT (3)));\n+  rtx sum;\n+\n+  if (GET_CODE (stack_limit_rtx) == SYMBOL_REF)\n+    {\n+      /* This generates a %hiadj/%lo pair with the constant size\n+\t add handled by the relocations.  */\n+      sum = gen_rtx_REG (Pmode, TEMP_REG_NUM);\n+      emit_move_insn (sum, plus_constant (Pmode, stack_limit_rtx, size));\n+    }\n+  else if (!REG_P (stack_limit_rtx))\n+    sorry (\"Unknown form for stack limit expression\");\n+  else if (size == 0)\n+    sum = stack_limit_rtx;\n+  else if (SMALL_INT (size))\n+    {\n+      sum = gen_rtx_REG (Pmode, TEMP_REG_NUM);\n+      emit_move_insn (sum, plus_constant (Pmode, stack_limit_rtx, size));\n+    }\n   else\n-    sorry (\"only register based stack limit is supported\");\n-}\n+    {\n+      sum = gen_rtx_REG (Pmode, TEMP_REG_NUM);\n+      emit_move_insn (sum, gen_int_mode (size, Pmode));\n+      emit_insn (gen_add2_insn (sum, stack_limit_rtx));\n+    }\n \n-/* Temp regno used inside prologue/epilogue.  */\n-#define TEMP_REG_NUM 8\n+  emit_insn (gen_ctrapsi4 (gen_rtx_LTU (VOIDmode, stack_pointer_rtx, sum),\n+\t\t\t   stack_pointer_rtx, sum, GEN_INT (3)));\n+}\n \n static rtx_insn *\n nios2_emit_add_constant (rtx reg, HOST_WIDE_INT immed)\n@@ -511,6 +538,8 @@ nios2_expand_prologue (void)\n       RTX_FRAME_RELATED_P (insn) = 1;\n       save_regs_base = 0;\n       sp_offset = -cfun->machine->save_regs_offset;\n+      if (crtl->limit_stack)\n+\tnios2_emit_stack_limit_check (cfun->machine->save_regs_offset);\n     }\n   else if (total_frame_size)\n     {\n@@ -520,13 +549,12 @@ nios2_expand_prologue (void)\n       RTX_FRAME_RELATED_P (insn) = 1;\n       save_regs_base = cfun->machine->save_regs_offset;\n       sp_offset = 0;\n+      if (crtl->limit_stack)\n+\tnios2_emit_stack_limit_check (0);\n     }\n   else\n     save_regs_base = sp_offset = 0;\n \n-  if (crtl->limit_stack)\n-    nios2_emit_stack_limit_check ();\n-\n   save_offset = save_regs_base + cfun->machine->save_reg_size;\n \n   for (regno = LAST_GP_REG; regno > 0; regno--)\n@@ -561,9 +589,6 @@ nios2_expand_prologue (void)\n \t  add_reg_note (insn, REG_FRAME_RELATED_EXPR, sp_adjust);\n \t}\n       RTX_FRAME_RELATED_P (insn) = 1;\n-\n-      if (crtl->limit_stack)\n-\tnios2_emit_stack_limit_check ();\n     }\n \n   /* Load the PIC register if needed.  */\n@@ -1029,6 +1054,9 @@ nios2_option_override (void)\n   /* Check for unsupported options.  */\n   if (flag_pic && !TARGET_LINUX_ABI)\n     sorry (\"position-independent code requires the Linux ABI\");\n+  if (flag_pic && stack_limit_rtx\n+      && GET_CODE (stack_limit_rtx) == SYMBOL_REF)\n+    sorry (\"PIC support for -fstack-limit-symbol\");\n \n   /* Function to allocate machine-dependent function status.  */\n   init_machine_status = &nios2_init_machine_status;"}, {"sha": "6284431035a161373bf5171a619006db4e89b831", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5faebb89f57ead4ac4ddfb88c2e9037cac2724ba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5faebb89f57ead4ac4ddfb88c2e9037cac2724ba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5faebb89f57ead4ac4ddfb88c2e9037cac2724ba", "patch": "@@ -1,3 +1,9 @@\n+2015-07-14  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* gcc.target/nios2/nios2-stack-check-1.c: Adjust patterns.\n+\t* gcc.target/nios2/nios2-stack-check-2.c: Likewise.\n+\t* gcc.target/nios2/nios2-stack-check-3.c: New test case.\n+\n 2015-07-14  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.dg/template/crash81.C: Adjust for error + inform change."}, {"sha": "730c8126efbc56a6564efef30104711eee161914", "filename": "gcc/testsuite/gcc.target/nios2/nios2-stack-check-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5faebb89f57ead4ac4ddfb88c2e9037cac2724ba/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fnios2-stack-check-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5faebb89f57ead4ac4ddfb88c2e9037cac2724ba/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fnios2-stack-check-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fnios2-stack-check-1.c?ref=5faebb89f57ead4ac4ddfb88c2e9037cac2724ba", "patch": "@@ -1,7 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-fstack-limit-register=et\" } */\n-/* { dg-final { scan-assembler \"bgeu\\\\tsp, et\" } } */\n-/* { dg-final { scan-assembler \"trap\\\\t3\" } } */\n+/* { dg-final { scan-assembler \"bgeu\\\\tsp, \" } } */\n+/* { dg-final { scan-assembler \"trap\\\\t3|trap.n\\\\t3\" } } */\n+\n /* check stack checking */\n void test()\n {"}, {"sha": "a7aa677eb6631d6a4e4f95587509d4c020d8f8ef", "filename": "gcc/testsuite/gcc.target/nios2/nios2-stack-check-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5faebb89f57ead4ac4ddfb88c2e9037cac2724ba/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fnios2-stack-check-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5faebb89f57ead4ac4ddfb88c2e9037cac2724ba/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fnios2-stack-check-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fnios2-stack-check-2.c?ref=5faebb89f57ead4ac4ddfb88c2e9037cac2724ba", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \" \" } */\n-/* { dg-final { scan-assembler-not \"bgeu\\\\tsp, et\" } } */\n-/* { dg-final { scan-assembler-not \"break\\\\t3\" } } */\n+/* { dg-final { scan-assembler-not \"trap\\\\t3|trap.n\\\\t3\" } } */\n+\n /* check stack checking */\n void test()\n {"}, {"sha": "33cf522df19ad55f59ef0dceb33e4ff04b1c158b", "filename": "gcc/testsuite/gcc.target/nios2/nios2-stack-check-3.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5faebb89f57ead4ac4ddfb88c2e9037cac2724ba/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fnios2-stack-check-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5faebb89f57ead4ac4ddfb88c2e9037cac2724ba/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fnios2-stack-check-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnios2%2Fnios2-stack-check-3.c?ref=5faebb89f57ead4ac4ddfb88c2e9037cac2724ba", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fstack-limit-symbol=__stackend -fno-pic\" } */\n+/* { dg-final { scan-assembler \"movhi\\\\t.*, %hiadj\\\\(__stackend.*\\\\)\" } } */\n+/* { dg-final { scan-assembler \"addi\\\\t.*, .*, %lo\\\\(__stackend.*\\\\)\" } } */\n+/* { dg-final { scan-assembler \"bgeu\\\\tsp, \" } } */\n+/* { dg-final { scan-assembler \"trap\\\\t3|trap.n\\\\t3\" } } */\n+\n+/* check stack checking */\n+void test()\n+{\n+  int a, b, c;\n+}"}]}