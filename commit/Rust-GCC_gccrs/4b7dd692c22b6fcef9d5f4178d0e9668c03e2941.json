{"sha": "4b7dd692c22b6fcef9d5f4178d0e9668c03e2941", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI3ZGQ2OTJjMjJiNmZjZWY5ZDVmNDE3OGQwZTk2NjhjMDNlMjk0MQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-11-05T15:31:07Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-11-05T15:31:07Z"}, "message": "re PR fortran/41556 ([OOP] Errors in applying operator/assignment to an abstract type)\n\n2009-11-05  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/41556\n\t* interface.c (matching_typebound_op,gfc_extend_assign): Handle CLASS\n\tvariables.\n\n2009-11-05  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/41556\n\t* gfortran.dg/class_12.f03: New test.\n\nFrom-SVN: r153946", "tree": {"sha": "02287a8f3acb6b68ce238799e00e9fa3d9058b60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02287a8f3acb6b68ce238799e00e9fa3d9058b60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b7dd692c22b6fcef9d5f4178d0e9668c03e2941", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b7dd692c22b6fcef9d5f4178d0e9668c03e2941", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b7dd692c22b6fcef9d5f4178d0e9668c03e2941", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b7dd692c22b6fcef9d5f4178d0e9668c03e2941/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ddf0258515492f285e8bda0c4bb8c2219979d7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ddf0258515492f285e8bda0c4bb8c2219979d7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ddf0258515492f285e8bda0c4bb8c2219979d7a"}], "stats": {"total": 65, "additions": 62, "deletions": 3}, "files": [{"sha": "3a1aa638ec36b4f2713e46b16adeedf3ab5c7fdb", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b7dd692c22b6fcef9d5f4178d0e9668c03e2941/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b7dd692c22b6fcef9d5f4178d0e9668c03e2941/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4b7dd692c22b6fcef9d5f4178d0e9668c03e2941", "patch": "@@ -1,3 +1,9 @@\n+2009-11-05  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/41556\n+\t* interface.c (matching_typebound_op,gfc_extend_assign): Handle CLASS\n+\tvariables.\n+\n 2009-11-05  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/41556"}, {"sha": "866a81ca1d850ecf721a999d6aa73707bacf4073", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b7dd692c22b6fcef9d5f4178d0e9668c03e2941/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b7dd692c22b6fcef9d5f4178d0e9668c03e2941/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=4b7dd692c22b6fcef9d5f4178d0e9668c03e2941", "patch": "@@ -2574,13 +2574,16 @@ matching_typebound_op (gfc_expr** tb_base,\n   gfc_actual_arglist* base;\n \n   for (base = args; base; base = base->next)\n-    if (base->expr->ts.type == BT_DERIVED)\n+    if (base->expr->ts.type == BT_DERIVED || base->expr->ts.type == BT_CLASS)\n       {\n \tgfc_typebound_proc* tb;\n \tgfc_symbol* derived;\n \tgfc_try result;\n \n-\tderived = base->expr->ts.u.derived;\n+\tif (base->expr->ts.type == BT_CLASS)\n+\t  derived = base->expr->ts.u.derived->components->ts.u.derived;\n+\telse\n+\t  derived = base->expr->ts.u.derived;\n \n \tif (op == INTRINSIC_USER)\n \t  {\n@@ -2837,7 +2840,7 @@ gfc_extend_assign (gfc_code *c, gfc_namespace *ns)\n   rhs = c->expr2;\n \n   /* Don't allow an intrinsic assignment to be replaced.  */\n-  if (lhs->ts.type != BT_DERIVED\n+  if (lhs->ts.type != BT_DERIVED && lhs->ts.type != BT_CLASS\n       && (rhs->rank == 0 || rhs->rank == lhs->rank)\n       && (lhs->ts.type == rhs->ts.type\n \t  || (gfc_numeric_ts (&lhs->ts) && gfc_numeric_ts (&rhs->ts))))"}, {"sha": "5246897dabf1a8675555773610784868b7b694fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b7dd692c22b6fcef9d5f4178d0e9668c03e2941/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b7dd692c22b6fcef9d5f4178d0e9668c03e2941/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4b7dd692c22b6fcef9d5f4178d0e9668c03e2941", "patch": "@@ -1,3 +1,8 @@\n+2009-11-05  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/41556\n+\t* gfortran.dg/class_12.f03: New test.\n+\n 2009-11-05  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.target/i386/i386.exp (check_effective_target_xop): Fix typo"}, {"sha": "56c68a577872d9f0de173437fc8f745d5f3160e2", "filename": "gcc/testsuite/gfortran.dg/class_12.f03", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b7dd692c22b6fcef9d5f4178d0e9668c03e2941/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_12.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b7dd692c22b6fcef9d5f4178d0e9668c03e2941/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_12.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_12.f03?ref=4b7dd692c22b6fcef9d5f4178d0e9668c03e2941", "patch": "@@ -0,0 +1,45 @@\n+! { dg-do compile }\n+!\n+! PR 41556: [OOP] Errors in applying operator/assignment to an abstract type\n+!\n+! Contributed by Damian Rouson <damian@rouson.net>\n+\n+module abstract_algebra\n+  implicit none \n+  private      \n+  public :: rescale\n+  public :: object\n+\n+  type ,abstract :: object\n+  contains\n+    procedure(assign_interface) ,deferred :: assign   \n+    procedure(product_interface) ,deferred :: product\n+    generic  :: assignment(=) => assign\n+    generic  :: operator(*) => product\n+  end type \n+\n+  abstract interface\n+    function product_interface(lhs,rhs) result(product)\n+      import :: object\n+      class(object) ,intent(in)  :: lhs\n+      class(object) ,allocatable :: product\n+      real          ,intent(in)  :: rhs\n+    end function \n+    subroutine assign_interface(lhs,rhs) \n+      import :: object \n+      class(object) ,intent(inout) :: lhs\n+      class(object) ,intent(in)    :: rhs\n+    end subroutine \n+  end interface\n+\n+contains\n+\n+  subroutine rescale(operand,scale)    \n+    class(object)    :: operand\n+    real ,intent(in) :: scale\n+    operand = operand*scale\n+    operand = operand%product(scale)\n+  end subroutine \n+end module\n+\n+! { dg-final { cleanup-modules \"abstract_algebra\" } }"}]}