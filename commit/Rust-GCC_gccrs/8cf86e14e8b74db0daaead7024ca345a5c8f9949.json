{"sha": "8cf86e14e8b74db0daaead7024ca345a5c8f9949", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNmODZlMTRlOGI3NGRiMGRhYWVhZDcwMjRjYTM0NWE1YzhmOTk0OQ==", "commit": {"author": {"name": "Hongtao Liu", "email": "hongtao.liu@intel.com", "date": "2019-12-09T11:20:13Z"}, "committer": {"name": "Hongtao Liu", "email": "liuhongt@gcc.gnu.org", "date": "2019-12-09T11:20:13Z"}, "message": "Use OPTION_MASK_ISA2_$target_[SET,UNSET, ] to indicate those for\nx_ix86_isa_flags2.\n\n2019-12-09  Hongtao Liu  <hongtao.liu@intel.com>\n\n    * gcc/common/config/i386/i386-common.c\n    (OPTION_MASK_ISA_AVX5124FMAPS_SET): Rename to\n    OPTION_MASK_ISA2_AVX5124FMAPS_SET.\n    (OPTION_MASK_ISA_AVX5124VNNIW_SET, OPTION_MASK_ISA_AVX512BF16_SET,\n    OPTION_MASK_ISA_AVX512VP2INTERSECT_SET,\n    OPTION_MASK_ISA_PCONFIG_SET, OPTION_MASK_ISA_WBNOINVD_SET,\n    OPTION_MASK_ISA_SGX_SET, OPTION_MASK_ISA_CX16_SET,\n    OPTION_MASK_ISA_MOVBE_SET, OPTION_MASK_ISA_PTWRITE_SET,\n    OPTION_MASK_ISA_MWAITX_SET, OPTION_MASK_ISA_CLZERO_SET,\n    OPTION_MASK_ISA_RDPID_SET, OPTION_MASK_ISA_VAES_SET,\n    OPTION_MASK_ISA_MOVDIR64B_SET, OPTION_MASK_ISA_WAITPKG_SET,\n    OPTION_MASK_ISA_CLDEMOTE_SET, OPTION_MASK_ISA_ENQCMD_SET,\n    OPTION_MASK_ISA_AVX5124FMAPS_UNSET,\n    OPTION_MASK_ISA_AVX5124VNNIW_UNSET,\n    OPTION_MASK_ISA_AVX512BF16_UNSET,\n    OPTION_MASK_ISA_AVX512VP2INTERSECT_UNSET,\n    OPTION_MASK_ISA_PCONFIG_UNSET, OPTION_MASK_ISA_WBNOINVD_UNSET,\n    OPTION_MASK_ISA_SGX_UNSET, OPTION_MASK_ISA_CX16_UNSET,\n    OPTION_MASK_ISA_MOVBE_UNSET, OPTION_MASK_ISA_PTWRITE_UNSET,\n    OPTION_MASK_ISA_MWAITX_UNSET, OPTION_MASK_ISA_CLZERO_UNSET,\n    OPTION_MASK_ISA_RDPID_UNSET, OPTION_MASK_ISA_VAES_UNSET,\n    OPTION_MASK_ISA_MOVDIR64B_UNSET, OPTION_MASK_ISA_WAITPKG_UNSET,\n    OPTION_MASK_ISA_CLDEMOTE_UNSET, OPTION_MASK_ISA_ENQCMD_UNSET,\n    OPTION_MASK_ISA_AVX5124FMAPS, OPTION_MASK_ISA_AVX5124VNNIW,\n    OPTION_MASK_ISA_AVX512BF16, OPTION_MASK_ISA_AVX512VP2INTERSECT,\n    OPTION_MASK_ISA_PCONFIG, OPTION_MASK_ISA_WBNOINVD,\n    OPTION_MASK_ISA_SGX, OPTION_MASK_ISA_CX16, OPTION_MASK_ISA_MOVBE,\n    OPTION_MASK_ISA_PTWRITE, OPTION_MASK_ISA_MWAITX,\n    OPTION_MASK_ISA_CLZERO, OPTION_MASK_ISA_RDPID,\n    OPTION_MASK_ISA_VAES, OPTION_MASK_ISA_MOVDIR64B,\n    OPTION_MASK_ISA_WAITPKG, OPTION_MASK_ISA_CLDEMOTE,\n    OPTION_MASK_ISA_ENQCMD): Ditto.\n    * gcc/config/i386/i386-builtin.def\n    (OPTION_MASK_ISA_AVX5124FMAPS, OPTION_MASK_ISA_AVX5124VNNIW,\n    OPTION_MASK_ISA_AVX512BF16, OPTION_MASK_ISA_AVX512VP2INTERSECT,\n    OPTION_MASK_ISA_WBNOINVD, OPTION_MASK_ISA_PTWRITE,\n    OPTION_MASK_ISA_RDPID, OPTION_MASK_ISA_VAES,\n    OPTION_MASK_ISA_MOVDIR64B, OPTION_MASK_ISA_ENQCMD): Ditto.\n    * gcc/config/i386/i386-builtins.c (OPTION_MASK_ISA_MWAITX,\n    OPTION_MASK_ISA_CLZERO, OPTION_MASK_ISA_WAITPKG,\n    OPTION_MASK_ISA_CLDEMOTE, OPTION_MASK_ISA_WBNOINVD): Ditto.\n    * gcc/config/i386/i386-c.c\n    (OPTION_MASK_ISA_AVX5124FMAPS, OPTION_MASK_ISA_AVX5124VNNIW,\n    OPTION_MASK_ISA_AVX512BF16, OPTION_MASK_ISA_AVX512VP2INTERSECT,\n    OPTION_MASK_ISA_PCONFIG, OPTION_MASK_ISA_WBNOINVD,\n    OPTION_MASK_ISA_SGX, OPTION_MASK_ISA_CX16, OPTION_MASK_ISA_MOVBE,\n    OPTION_MASK_ISA_PTWRITE, OPTION_MASK_ISA_MWAITX,\n    OPTION_MASK_ISA_CLZERO, OPTION_MASK_ISA_RDPID,\n    OPTION_MASK_ISA_VAES, OPTION_MASK_ISA_MOVDIR64B,\n    OPTION_MASK_ISA_WAITPKG, OPTION_MASK_ISA_CLDEMOTE,\n    OPTION_MASK_ISA_ENQCMD): Ditto.\n    * gcc/config/i386/i386-option.c: Ditto\n    * gcc/config/i386/i386.opt: Ditto..\n    * gcc/config/i386/i386.h: (TARGET_ISA_AVX5124FMAPS,\n    TARGET_ISA_AVX5124VNNIW,  TARGET_ISA_AVX512BF16,\n    TARGET_ISA_AVX512VP2INTERSECT, TARGET_ISA_PCONFIG,\n    TARGET_ISA_WBNOINVD, TARGET_ISA_SGX, TARGET_ISA_CX16,\n    TARGET_ISA_MOVBE, TARGET_ISA_PTWRITE, TARGET_ISA_MWAITX,\n    TARGET_ISA_CLZERO, TARGET_ISA_RDPID, TARGET_ISA_VAES,\n    TARGET_ISA_MOVDIR64B, TARGET_ISA_WAITPKG, TARGET_ISA_CLDEMOTE)\n    TARGET_ISA_ENQCMD): Ditto.\n\nFrom-SVN: r279116", "tree": {"sha": "93a136731117c58c010a60c13a7bdeacba332f80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93a136731117c58c010a60c13a7bdeacba332f80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cf86e14e8b74db0daaead7024ca345a5c8f9949", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cf86e14e8b74db0daaead7024ca345a5c8f9949", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cf86e14e8b74db0daaead7024ca345a5c8f9949", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cf86e14e8b74db0daaead7024ca345a5c8f9949/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e3126e5f649c8eebe07fc517d86f10d6867b7eec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3126e5f649c8eebe07fc517d86f10d6867b7eec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3126e5f649c8eebe07fc517d86f10d6867b7eec"}], "stats": {"total": 680, "additions": 372, "deletions": 308}, "files": [{"sha": "58ffe7629e3bbf6ba184c2452150fe0486f5815d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cf86e14e8b74db0daaead7024ca345a5c8f9949/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cf86e14e8b74db0daaead7024ca345a5c8f9949/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8cf86e14e8b74db0daaead7024ca345a5c8f9949", "patch": "@@ -1,3 +1,67 @@\n+2019-12-09  Hongtao Liu  <hongtao.liu@intel.com>\n+\n+    * gcc/common/config/i386/i386-common.c\n+    (OPTION_MASK_ISA_AVX5124FMAPS_SET): Rename to\n+    OPTION_MASK_ISA2_AVX5124FMAPS_SET.\n+    (OPTION_MASK_ISA_AVX5124VNNIW_SET, OPTION_MASK_ISA_AVX512BF16_SET,\n+    OPTION_MASK_ISA_AVX512VP2INTERSECT_SET,\n+    OPTION_MASK_ISA_PCONFIG_SET, OPTION_MASK_ISA_WBNOINVD_SET,\n+    OPTION_MASK_ISA_SGX_SET, OPTION_MASK_ISA_CX16_SET,\n+    OPTION_MASK_ISA_MOVBE_SET, OPTION_MASK_ISA_PTWRITE_SET,\n+    OPTION_MASK_ISA_MWAITX_SET, OPTION_MASK_ISA_CLZERO_SET,\n+    OPTION_MASK_ISA_RDPID_SET, OPTION_MASK_ISA_VAES_SET,\n+    OPTION_MASK_ISA_MOVDIR64B_SET, OPTION_MASK_ISA_WAITPKG_SET,\n+    OPTION_MASK_ISA_CLDEMOTE_SET, OPTION_MASK_ISA_ENQCMD_SET,\n+    OPTION_MASK_ISA_AVX5124FMAPS_UNSET,\n+    OPTION_MASK_ISA_AVX5124VNNIW_UNSET,\n+    OPTION_MASK_ISA_AVX512BF16_UNSET,\n+    OPTION_MASK_ISA_AVX512VP2INTERSECT_UNSET,\n+    OPTION_MASK_ISA_PCONFIG_UNSET, OPTION_MASK_ISA_WBNOINVD_UNSET,\n+    OPTION_MASK_ISA_SGX_UNSET, OPTION_MASK_ISA_CX16_UNSET,\n+    OPTION_MASK_ISA_MOVBE_UNSET, OPTION_MASK_ISA_PTWRITE_UNSET,\n+    OPTION_MASK_ISA_MWAITX_UNSET, OPTION_MASK_ISA_CLZERO_UNSET,\n+    OPTION_MASK_ISA_RDPID_UNSET, OPTION_MASK_ISA_VAES_UNSET,\n+    OPTION_MASK_ISA_MOVDIR64B_UNSET, OPTION_MASK_ISA_WAITPKG_UNSET,\n+    OPTION_MASK_ISA_CLDEMOTE_UNSET, OPTION_MASK_ISA_ENQCMD_UNSET,\n+    OPTION_MASK_ISA_AVX5124FMAPS, OPTION_MASK_ISA_AVX5124VNNIW,\n+    OPTION_MASK_ISA_AVX512BF16, OPTION_MASK_ISA_AVX512VP2INTERSECT,\n+    OPTION_MASK_ISA_PCONFIG, OPTION_MASK_ISA_WBNOINVD,\n+    OPTION_MASK_ISA_SGX, OPTION_MASK_ISA_CX16, OPTION_MASK_ISA_MOVBE,\n+    OPTION_MASK_ISA_PTWRITE, OPTION_MASK_ISA_MWAITX,\n+    OPTION_MASK_ISA_CLZERO, OPTION_MASK_ISA_RDPID,\n+    OPTION_MASK_ISA_VAES, OPTION_MASK_ISA_MOVDIR64B,\n+    OPTION_MASK_ISA_WAITPKG, OPTION_MASK_ISA_CLDEMOTE,\n+    OPTION_MASK_ISA_ENQCMD): Ditto.\n+    * gcc/config/i386/i386-builtin.def\n+    (OPTION_MASK_ISA_AVX5124FMAPS, OPTION_MASK_ISA_AVX5124VNNIW,\n+    OPTION_MASK_ISA_AVX512BF16, OPTION_MASK_ISA_AVX512VP2INTERSECT,\n+    OPTION_MASK_ISA_WBNOINVD, OPTION_MASK_ISA_PTWRITE,\n+    OPTION_MASK_ISA_RDPID, OPTION_MASK_ISA_VAES,\n+    OPTION_MASK_ISA_MOVDIR64B, OPTION_MASK_ISA_ENQCMD): Ditto.\n+    * gcc/config/i386/i386-builtins.c (OPTION_MASK_ISA_MWAITX,\n+    OPTION_MASK_ISA_CLZERO, OPTION_MASK_ISA_WAITPKG,\n+    OPTION_MASK_ISA_CLDEMOTE, OPTION_MASK_ISA_WBNOINVD): Ditto.\n+    * gcc/config/i386/i386-c.c\n+    (OPTION_MASK_ISA_AVX5124FMAPS, OPTION_MASK_ISA_AVX5124VNNIW,\n+    OPTION_MASK_ISA_AVX512BF16, OPTION_MASK_ISA_AVX512VP2INTERSECT,\n+    OPTION_MASK_ISA_PCONFIG, OPTION_MASK_ISA_WBNOINVD,\n+    OPTION_MASK_ISA_SGX, OPTION_MASK_ISA_CX16, OPTION_MASK_ISA_MOVBE,\n+    OPTION_MASK_ISA_PTWRITE, OPTION_MASK_ISA_MWAITX,\n+    OPTION_MASK_ISA_CLZERO, OPTION_MASK_ISA_RDPID,\n+    OPTION_MASK_ISA_VAES, OPTION_MASK_ISA_MOVDIR64B,\n+    OPTION_MASK_ISA_WAITPKG, OPTION_MASK_ISA_CLDEMOTE,\n+    OPTION_MASK_ISA_ENQCMD): Ditto.\n+    * gcc/config/i386/i386-option.c: Ditto\n+    * gcc/config/i386/i386.opt: Ditto..\n+    * gcc/config/i386/i386.h: (TARGET_ISA_AVX5124FMAPS,\n+    TARGET_ISA_AVX5124VNNIW,  TARGET_ISA_AVX512BF16,\n+    TARGET_ISA_AVX512VP2INTERSECT, TARGET_ISA_PCONFIG,\n+    TARGET_ISA_WBNOINVD, TARGET_ISA_SGX, TARGET_ISA_CX16,\n+    TARGET_ISA_MOVBE, TARGET_ISA_PTWRITE, TARGET_ISA_MWAITX,\n+    TARGET_ISA_CLZERO, TARGET_ISA_RDPID, TARGET_ISA_VAES,\n+    TARGET_ISA_MOVDIR64B, TARGET_ISA_WAITPKG, TARGET_ISA_CLDEMOTE)\n+    TARGET_ISA_ENQCMD): Ditto.\n+\n 2019-12-09  Sudakshina Das  <sudi.das@arm.com>\n \t    Richard Sandiford  <richard.sandiford@arm.com>\n "}, {"sha": "d3e861b91d4c7300e1e8b025f31c44a319301add", "filename": "gcc/common/config/i386/i386-common.c", "status": "modified", "additions": 113, "deletions": 113, "changes": 226, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cf86e14e8b74db0daaead7024ca345a5c8f9949/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cf86e14e8b74db0daaead7024ca345a5c8f9949/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c?ref=8cf86e14e8b74db0daaead7024ca345a5c8f9949", "patch": "@@ -78,8 +78,8 @@ along with GCC; see the file COPYING3.  If not see\n   (OPTION_MASK_ISA_AVX512IFMA | OPTION_MASK_ISA_AVX512F_SET)\n #define OPTION_MASK_ISA_AVX512VBMI_SET \\\n   (OPTION_MASK_ISA_AVX512VBMI | OPTION_MASK_ISA_AVX512BW_SET)\n-#define OPTION_MASK_ISA_AVX5124FMAPS_SET OPTION_MASK_ISA_AVX5124FMAPS\n-#define OPTION_MASK_ISA_AVX5124VNNIW_SET OPTION_MASK_ISA_AVX5124VNNIW\n+#define OPTION_MASK_ISA2_AVX5124FMAPS_SET OPTION_MASK_ISA2_AVX5124FMAPS\n+#define OPTION_MASK_ISA2_AVX5124VNNIW_SET OPTION_MASK_ISA2_AVX5124VNNIW\n #define OPTION_MASK_ISA_AVX512VBMI2_SET \\\n   (OPTION_MASK_ISA_AVX512VBMI2 | OPTION_MASK_ISA_AVX512F_SET)\n #define OPTION_MASK_ISA_AVX512VNNI_SET \\\n@@ -88,7 +88,7 @@ along with GCC; see the file COPYING3.  If not see\n   (OPTION_MASK_ISA_AVX512VPOPCNTDQ | OPTION_MASK_ISA_AVX512F_SET)\n #define OPTION_MASK_ISA_AVX512BITALG_SET \\\n   (OPTION_MASK_ISA_AVX512BITALG | OPTION_MASK_ISA_AVX512F_SET)\n-#define OPTION_MASK_ISA_AVX512BF16_SET OPTION_MASK_ISA_AVX512BF16\n+#define OPTION_MASK_ISA2_AVX512BF16_SET OPTION_MASK_ISA2_AVX512BF16\n #define OPTION_MASK_ISA_RTM_SET OPTION_MASK_ISA_RTM\n #define OPTION_MASK_ISA_PRFCHW_SET OPTION_MASK_ISA_PRFCHW\n #define OPTION_MASK_ISA_RDSEED_SET OPTION_MASK_ISA_RDSEED\n@@ -100,7 +100,7 @@ along with GCC; see the file COPYING3.  If not see\n #define OPTION_MASK_ISA_XSAVEC_SET \\\n   (OPTION_MASK_ISA_XSAVEC | OPTION_MASK_ISA_XSAVE_SET)\n #define OPTION_MASK_ISA_CLWB_SET OPTION_MASK_ISA_CLWB\n-#define OPTION_MASK_ISA_AVX512VP2INTERSECT_SET OPTION_MASK_ISA_AVX512VP2INTERSECT\n+#define OPTION_MASK_ISA2_AVX512VP2INTERSECT_SET OPTION_MASK_ISA2_AVX512VP2INTERSECT\n \n /* SSE4 includes both SSE4.1 and SSE4.2. -msse4 should be the same\n    as -msse4.2.  */\n@@ -127,37 +127,37 @@ along with GCC; see the file COPYING3.  If not see\n #define OPTION_MASK_ISA_ABM_SET \\\n   (OPTION_MASK_ISA_ABM | OPTION_MASK_ISA_POPCNT)\n \n-#define OPTION_MASK_ISA_PCONFIG_SET OPTION_MASK_ISA_PCONFIG\n-#define OPTION_MASK_ISA_WBNOINVD_SET OPTION_MASK_ISA_WBNOINVD\n-#define OPTION_MASK_ISA_SGX_SET OPTION_MASK_ISA_SGX\n+#define OPTION_MASK_ISA2_PCONFIG_SET OPTION_MASK_ISA2_PCONFIG\n+#define OPTION_MASK_ISA2_WBNOINVD_SET OPTION_MASK_ISA2_WBNOINVD\n+#define OPTION_MASK_ISA2_SGX_SET OPTION_MASK_ISA2_SGX\n #define OPTION_MASK_ISA_BMI_SET OPTION_MASK_ISA_BMI\n #define OPTION_MASK_ISA_BMI2_SET OPTION_MASK_ISA_BMI2\n #define OPTION_MASK_ISA_LZCNT_SET OPTION_MASK_ISA_LZCNT\n #define OPTION_MASK_ISA_TBM_SET OPTION_MASK_ISA_TBM\n #define OPTION_MASK_ISA_POPCNT_SET OPTION_MASK_ISA_POPCNT\n-#define OPTION_MASK_ISA_CX16_SET OPTION_MASK_ISA_CX16\n+#define OPTION_MASK_ISA2_CX16_SET OPTION_MASK_ISA2_CX16\n #define OPTION_MASK_ISA_SAHF_SET OPTION_MASK_ISA_SAHF\n-#define OPTION_MASK_ISA_MOVBE_SET OPTION_MASK_ISA_MOVBE\n+#define OPTION_MASK_ISA2_MOVBE_SET OPTION_MASK_ISA2_MOVBE\n #define OPTION_MASK_ISA_CRC32_SET OPTION_MASK_ISA_CRC32\n \n #define OPTION_MASK_ISA_FSGSBASE_SET OPTION_MASK_ISA_FSGSBASE\n #define OPTION_MASK_ISA_RDRND_SET OPTION_MASK_ISA_RDRND\n-#define OPTION_MASK_ISA_PTWRITE_SET OPTION_MASK_ISA_PTWRITE\n+#define OPTION_MASK_ISA2_PTWRITE_SET OPTION_MASK_ISA2_PTWRITE\n #define OPTION_MASK_ISA_F16C_SET \\\n   (OPTION_MASK_ISA_F16C | OPTION_MASK_ISA_AVX_SET)\n-#define OPTION_MASK_ISA_MWAITX_SET OPTION_MASK_ISA_MWAITX\n-#define OPTION_MASK_ISA_CLZERO_SET OPTION_MASK_ISA_CLZERO\n+#define OPTION_MASK_ISA2_MWAITX_SET OPTION_MASK_ISA2_MWAITX\n+#define OPTION_MASK_ISA2_CLZERO_SET OPTION_MASK_ISA2_CLZERO\n #define OPTION_MASK_ISA_PKU_SET OPTION_MASK_ISA_PKU\n-#define OPTION_MASK_ISA_RDPID_SET OPTION_MASK_ISA_RDPID\n+#define OPTION_MASK_ISA2_RDPID_SET OPTION_MASK_ISA2_RDPID\n #define OPTION_MASK_ISA_GFNI_SET OPTION_MASK_ISA_GFNI\n #define OPTION_MASK_ISA_SHSTK_SET OPTION_MASK_ISA_SHSTK\n-#define OPTION_MASK_ISA_VAES_SET OPTION_MASK_ISA_VAES\n+#define OPTION_MASK_ISA2_VAES_SET OPTION_MASK_ISA2_VAES\n #define OPTION_MASK_ISA_VPCLMULQDQ_SET OPTION_MASK_ISA_VPCLMULQDQ\n #define OPTION_MASK_ISA_MOVDIRI_SET OPTION_MASK_ISA_MOVDIRI\n-#define OPTION_MASK_ISA_MOVDIR64B_SET OPTION_MASK_ISA_MOVDIR64B\n-#define OPTION_MASK_ISA_WAITPKG_SET OPTION_MASK_ISA_WAITPKG\n-#define OPTION_MASK_ISA_CLDEMOTE_SET OPTION_MASK_ISA_CLDEMOTE\n-#define OPTION_MASK_ISA_ENQCMD_SET OPTION_MASK_ISA_ENQCMD\n+#define OPTION_MASK_ISA2_MOVDIR64B_SET OPTION_MASK_ISA2_MOVDIR64B\n+#define OPTION_MASK_ISA2_WAITPKG_SET OPTION_MASK_ISA2_WAITPKG\n+#define OPTION_MASK_ISA2_CLDEMOTE_SET OPTION_MASK_ISA2_CLDEMOTE\n+#define OPTION_MASK_ISA2_ENQCMD_SET OPTION_MASK_ISA2_ENQCMD\n \n /* Define a set of ISAs which aren't available when a given ISA is\n    disabled.  MMX and SSE ISAs are handled separately.  */\n@@ -212,13 +212,13 @@ along with GCC; see the file COPYING3.  If not see\n #define OPTION_MASK_ISA_AVX512VL_UNSET OPTION_MASK_ISA_AVX512VL\n #define OPTION_MASK_ISA_AVX512IFMA_UNSET OPTION_MASK_ISA_AVX512IFMA\n #define OPTION_MASK_ISA_AVX512VBMI_UNSET OPTION_MASK_ISA_AVX512VBMI\n-#define OPTION_MASK_ISA_AVX5124FMAPS_UNSET OPTION_MASK_ISA_AVX5124FMAPS\n-#define OPTION_MASK_ISA_AVX5124VNNIW_UNSET OPTION_MASK_ISA_AVX5124VNNIW\n+#define OPTION_MASK_ISA2_AVX5124FMAPS_UNSET OPTION_MASK_ISA2_AVX5124FMAPS\n+#define OPTION_MASK_ISA2_AVX5124VNNIW_UNSET OPTION_MASK_ISA2_AVX5124VNNIW\n #define OPTION_MASK_ISA_AVX512VBMI2_UNSET OPTION_MASK_ISA_AVX512VBMI2\n #define OPTION_MASK_ISA_AVX512VNNI_UNSET OPTION_MASK_ISA_AVX512VNNI\n #define OPTION_MASK_ISA_AVX512VPOPCNTDQ_UNSET OPTION_MASK_ISA_AVX512VPOPCNTDQ\n #define OPTION_MASK_ISA_AVX512BITALG_UNSET OPTION_MASK_ISA_AVX512BITALG\n-#define OPTION_MASK_ISA_AVX512BF16_UNSET OPTION_MASK_ISA_AVX512BF16\n+#define OPTION_MASK_ISA2_AVX512BF16_UNSET OPTION_MASK_ISA2_AVX512BF16\n #define OPTION_MASK_ISA_RTM_UNSET OPTION_MASK_ISA_RTM\n #define OPTION_MASK_ISA_PRFCHW_UNSET OPTION_MASK_ISA_PRFCHW\n #define OPTION_MASK_ISA_RDSEED_UNSET OPTION_MASK_ISA_RDSEED\n@@ -228,20 +228,20 @@ along with GCC; see the file COPYING3.  If not see\n #define OPTION_MASK_ISA_XSAVEC_UNSET OPTION_MASK_ISA_XSAVEC\n #define OPTION_MASK_ISA_XSAVES_UNSET OPTION_MASK_ISA_XSAVES\n #define OPTION_MASK_ISA_CLWB_UNSET OPTION_MASK_ISA_CLWB\n-#define OPTION_MASK_ISA_MWAITX_UNSET OPTION_MASK_ISA_MWAITX\n-#define OPTION_MASK_ISA_CLZERO_UNSET OPTION_MASK_ISA_CLZERO\n+#define OPTION_MASK_ISA2_MWAITX_UNSET OPTION_MASK_ISA2_MWAITX\n+#define OPTION_MASK_ISA2_CLZERO_UNSET OPTION_MASK_ISA2_CLZERO\n #define OPTION_MASK_ISA_PKU_UNSET OPTION_MASK_ISA_PKU\n-#define OPTION_MASK_ISA_RDPID_UNSET OPTION_MASK_ISA_RDPID\n+#define OPTION_MASK_ISA2_RDPID_UNSET OPTION_MASK_ISA2_RDPID\n #define OPTION_MASK_ISA_GFNI_UNSET OPTION_MASK_ISA_GFNI\n #define OPTION_MASK_ISA_SHSTK_UNSET OPTION_MASK_ISA_SHSTK\n-#define OPTION_MASK_ISA_VAES_UNSET OPTION_MASK_ISA_VAES\n+#define OPTION_MASK_ISA2_VAES_UNSET OPTION_MASK_ISA2_VAES\n #define OPTION_MASK_ISA_VPCLMULQDQ_UNSET OPTION_MASK_ISA_VPCLMULQDQ\n #define OPTION_MASK_ISA_MOVDIRI_UNSET OPTION_MASK_ISA_MOVDIRI\n-#define OPTION_MASK_ISA_MOVDIR64B_UNSET OPTION_MASK_ISA_MOVDIR64B\n-#define OPTION_MASK_ISA_WAITPKG_UNSET OPTION_MASK_ISA_WAITPKG\n-#define OPTION_MASK_ISA_CLDEMOTE_UNSET OPTION_MASK_ISA_CLDEMOTE\n-#define OPTION_MASK_ISA_ENQCMD_UNSET OPTION_MASK_ISA_ENQCMD\n-#define OPTION_MASK_ISA_AVX512VP2INTERSECT_UNSET OPTION_MASK_ISA_AVX512VP2INTERSECT\n+#define OPTION_MASK_ISA2_MOVDIR64B_UNSET OPTION_MASK_ISA2_MOVDIR64B\n+#define OPTION_MASK_ISA2_WAITPKG_UNSET OPTION_MASK_ISA2_WAITPKG\n+#define OPTION_MASK_ISA2_CLDEMOTE_UNSET OPTION_MASK_ISA2_CLDEMOTE\n+#define OPTION_MASK_ISA2_ENQCMD_UNSET OPTION_MASK_ISA2_ENQCMD\n+#define OPTION_MASK_ISA2_AVX512VP2INTERSECT_UNSET OPTION_MASK_ISA2_AVX512VP2INTERSECT\n \n /* SSE4 includes both SSE4.1 and SSE4.2.  -mno-sse4 should the same\n    as -mno-sse4.1. */\n@@ -259,37 +259,37 @@ along with GCC; see the file COPYING3.  If not see\n #define OPTION_MASK_ISA_SHA_UNSET OPTION_MASK_ISA_SHA\n #define OPTION_MASK_ISA_PCLMUL_UNSET OPTION_MASK_ISA_PCLMUL\n #define OPTION_MASK_ISA_ABM_UNSET OPTION_MASK_ISA_ABM\n-#define OPTION_MASK_ISA_PCONFIG_UNSET OPTION_MASK_ISA_PCONFIG\n-#define OPTION_MASK_ISA_WBNOINVD_UNSET OPTION_MASK_ISA_WBNOINVD\n-#define OPTION_MASK_ISA_SGX_UNSET OPTION_MASK_ISA_SGX\n+#define OPTION_MASK_ISA2_PCONFIG_UNSET OPTION_MASK_ISA2_PCONFIG\n+#define OPTION_MASK_ISA2_WBNOINVD_UNSET OPTION_MASK_ISA2_WBNOINVD\n+#define OPTION_MASK_ISA2_SGX_UNSET OPTION_MASK_ISA2_SGX\n #define OPTION_MASK_ISA_BMI_UNSET OPTION_MASK_ISA_BMI\n #define OPTION_MASK_ISA_BMI2_UNSET OPTION_MASK_ISA_BMI2\n #define OPTION_MASK_ISA_LZCNT_UNSET OPTION_MASK_ISA_LZCNT\n #define OPTION_MASK_ISA_TBM_UNSET OPTION_MASK_ISA_TBM\n #define OPTION_MASK_ISA_POPCNT_UNSET OPTION_MASK_ISA_POPCNT\n-#define OPTION_MASK_ISA_CX16_UNSET OPTION_MASK_ISA_CX16\n+#define OPTION_MASK_ISA2_CX16_UNSET OPTION_MASK_ISA2_CX16\n #define OPTION_MASK_ISA_SAHF_UNSET OPTION_MASK_ISA_SAHF\n-#define OPTION_MASK_ISA_MOVBE_UNSET OPTION_MASK_ISA_MOVBE\n+#define OPTION_MASK_ISA2_MOVBE_UNSET OPTION_MASK_ISA2_MOVBE\n #define OPTION_MASK_ISA_CRC32_UNSET OPTION_MASK_ISA_CRC32\n \n #define OPTION_MASK_ISA_FSGSBASE_UNSET OPTION_MASK_ISA_FSGSBASE\n #define OPTION_MASK_ISA_RDRND_UNSET OPTION_MASK_ISA_RDRND\n-#define OPTION_MASK_ISA_PTWRITE_UNSET OPTION_MASK_ISA_PTWRITE\n+#define OPTION_MASK_ISA2_PTWRITE_UNSET OPTION_MASK_ISA2_PTWRITE\n #define OPTION_MASK_ISA_F16C_UNSET OPTION_MASK_ISA_F16C\n \n #define OPTION_MASK_ISA_GENERAL_REGS_ONLY_UNSET \\\n   (OPTION_MASK_ISA_MMX_UNSET \\\n    | OPTION_MASK_ISA_SSE_UNSET)\n \n #define OPTION_MASK_ISA2_AVX512F_UNSET \\\n-  (OPTION_MASK_ISA_AVX512BF16_UNSET \\\n-   | OPTION_MASK_ISA_AVX5124FMAPS_UNSET \\\n-   | OPTION_MASK_ISA_AVX5124VNNIW_UNSET \\\n-   | OPTION_MASK_ISA_AVX512VP2INTERSECT_UNSET)\n+  (OPTION_MASK_ISA2_AVX512BF16_UNSET \\\n+   | OPTION_MASK_ISA2_AVX5124FMAPS_UNSET \\\n+   | OPTION_MASK_ISA2_AVX5124VNNIW_UNSET \\\n+   | OPTION_MASK_ISA2_AVX512VP2INTERSECT_UNSET)\n #define OPTION_MASK_ISA2_GENERAL_REGS_ONLY_UNSET \\\n   (OPTION_MASK_ISA2_AVX512F_UNSET)\n \n-#define OPTION_MASK_ISA2_AVX512BW_UNSET OPTION_MASK_ISA_AVX512BF16_UNSET\n+#define OPTION_MASK_ISA2_AVX512BW_UNSET OPTION_MASK_ISA2_AVX512BF16_UNSET\n \n /* Set 1 << value as value of -malign-FLAG option.  */\n \n@@ -550,13 +550,13 @@ ix86_handle_option (struct gcc_options *opts,\n     case OPT_mrdpid:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_RDPID_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_RDPID_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_RDPID_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_RDPID_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_RDPID_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_RDPID_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA2_RDPID_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_RDPID_UNSET;\n \t}\n       return true;\n \n@@ -589,13 +589,13 @@ ix86_handle_option (struct gcc_options *opts,\n     case OPT_mvaes:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_VAES_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_VAES_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_VAES_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_VAES_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_VAES_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_VAES_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA2_VAES_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_VAES_UNSET;\n \t}\n       return true;\n \n@@ -628,82 +628,82 @@ ix86_handle_option (struct gcc_options *opts,\n     case OPT_mmovdir64b:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_MOVDIR64B_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_MOVDIR64B_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_MOVDIR64B_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_MOVDIR64B_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_MOVDIR64B_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_MOVDIR64B_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA2_MOVDIR64B_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_MOVDIR64B_UNSET;\n \t}\n \treturn true;\n \n     case OPT_mcldemote:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_CLDEMOTE_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_CLDEMOTE_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_CLDEMOTE_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_CLDEMOTE_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_CLDEMOTE_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_CLDEMOTE_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA2_CLDEMOTE_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_CLDEMOTE_UNSET;\n \t}\n       return true;\n \n     case OPT_mwaitpkg:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_WAITPKG_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_WAITPKG_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_WAITPKG_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_WAITPKG_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_WAITPKG_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_WAITPKG_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA2_WAITPKG_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_WAITPKG_UNSET;\n \t}\n       return true;\n \n     case OPT_menqcmd:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_ENQCMD_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_ENQCMD_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_ENQCMD_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_ENQCMD_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_ENQCMD_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_ENQCMD_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA2_ENQCMD_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_ENQCMD_UNSET;\n \t}\n       return true;\n \n     case OPT_mavx5124fmaps:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_AVX5124FMAPS_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_AVX5124FMAPS_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_AVX5124FMAPS_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_AVX5124FMAPS_SET;\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512F_SET;\n \t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX512F_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_AVX5124FMAPS_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_AVX5124FMAPS_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA2_AVX5124FMAPS_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_AVX5124FMAPS_UNSET;\n \t}\n       return true;\n \n     case OPT_mavx5124vnniw:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_AVX5124VNNIW_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_AVX5124VNNIW_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_AVX5124VNNIW_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_AVX5124VNNIW_SET;\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512F_SET;\n \t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX512F_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_AVX5124VNNIW_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_AVX5124VNNIW_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA2_AVX5124VNNIW_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_AVX5124VNNIW_UNSET;\n \t}\n       return true;\n \n@@ -765,54 +765,54 @@ ix86_handle_option (struct gcc_options *opts,\n     case OPT_mavx512bf16:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_AVX512BF16_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_AVX512BF16_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_AVX512BF16_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_AVX512BF16_SET;\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512BW_SET;\n \t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX512BW_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_AVX512BF16_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_AVX512BF16_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA2_AVX512BF16_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_AVX512BF16_UNSET;\n \t}\n       return true;\n \n     case OPT_msgx:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_SGX_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_SGX_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_SGX_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_SGX_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_SGX_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_SGX_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA2_SGX_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_SGX_UNSET;\n \t}\n       return true;\n \n     case OPT_mpconfig:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_PCONFIG_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_PCONFIG_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_PCONFIG_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_PCONFIG_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_PCONFIG_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_PCONFIG_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA2_PCONFIG_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_PCONFIG_UNSET;\n \t}\n       return true;\n \n     case OPT_mwbnoinvd:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_WBNOINVD_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_WBNOINVD_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_WBNOINVD_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_WBNOINVD_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_WBNOINVD_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_WBNOINVD_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA2_WBNOINVD_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_WBNOINVD_UNSET;\n \t}\n       return true;\n \n@@ -886,17 +886,17 @@ ix86_handle_option (struct gcc_options *opts,\n     case OPT_mavx512vp2intersect:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_AVX512VP2INTERSECT_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_AVX512VP2INTERSECT_SET;\n \t  opts->x_ix86_isa_flags2_explicit |=\n-\t    OPTION_MASK_ISA_AVX512VP2INTERSECT_SET;\n+\t    OPTION_MASK_ISA2_AVX512VP2INTERSECT_SET;\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512F_SET;\n \t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX512F_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_AVX512VP2INTERSECT_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA2_AVX512VP2INTERSECT_UNSET;\n \t  opts->x_ix86_isa_flags2_explicit |=\n-\t    OPTION_MASK_ISA_AVX512VP2INTERSECT_UNSET;\n+\t    OPTION_MASK_ISA2_AVX512VP2INTERSECT_UNSET;\n \t}\n       return true;\n \n@@ -1084,26 +1084,26 @@ ix86_handle_option (struct gcc_options *opts,\n     case OPT_mcx16:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_CX16_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_CX16_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_CX16_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_CX16_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_CX16_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_CX16_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA2_CX16_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_CX16_UNSET;\n \t}\n       return true;\n \n     case OPT_mmovbe:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_MOVBE_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_MOVBE_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_MOVBE_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_MOVBE_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_MOVBE_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_MOVBE_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA2_MOVBE_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_MOVBE_UNSET;\n \t}\n       return true;\n \n@@ -1188,13 +1188,13 @@ ix86_handle_option (struct gcc_options *opts,\n     case OPT_mptwrite:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_PTWRITE_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_PTWRITE_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_PTWRITE_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_PTWRITE_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_PTWRITE_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_PTWRITE_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA2_PTWRITE_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_PTWRITE_UNSET;\n \t}\n       return true;\n \n@@ -1357,26 +1357,26 @@ ix86_handle_option (struct gcc_options *opts,\n     case OPT_mmwaitx:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_MWAITX_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_MWAITX_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_MWAITX_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_MWAITX_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_MWAITX_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_MWAITX_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA2_MWAITX_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_MWAITX_UNSET;\n \t}\n       return true;\n \n     case OPT_mclzero:\n       if (value)\n \t{\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_CLZERO_SET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_CLZERO_SET;\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_CLZERO_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_CLZERO_SET;\n \t}\n       else\n \t{\n-\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_CLZERO_UNSET;\n-\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_CLZERO_UNSET;\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA2_CLZERO_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA2_CLZERO_UNSET;\n \t}\n       return true;\n "}, {"sha": "a6500f9d9b597516b8708072b591566bd549be36", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 64, "deletions": 64, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cf86e14e8b74db0daaead7024ca345a5c8f9949/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cf86e14e8b74db0daaead7024ca345a5c8f9949/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=8cf86e14e8b74db0daaead7024ca345a5c8f9949", "patch": "@@ -289,12 +289,12 @@ BDESC (OPTION_MASK_ISA_AVX512BW, 0, CODE_FOR_avx512bw_storev32hi_mask, \"__builti\n BDESC (OPTION_MASK_ISA_AVX512BW, 0, CODE_FOR_avx512bw_storev64qi_mask, \"__builtin_ia32_storedquqi512_mask\", IX86_BUILTIN_STOREDQUQI512_MASK, UNKNOWN, (int) VOID_FTYPE_PCHAR_V64QI_UDI)\n \n /* AVX512VP2INTERSECT */\n-BDESC (0, OPTION_MASK_ISA_AVX512VP2INTERSECT, CODE_FOR_nothing, \"__builtin_ia32_2intersectd512\", IX86_BUILTIN_2INTERSECTD512, UNKNOWN, (int) VOID_FTYPE_PUHI_PUHI_V16SI_V16SI)\n-BDESC (0, OPTION_MASK_ISA_AVX512VP2INTERSECT, CODE_FOR_nothing, \"__builtin_ia32_2intersectq512\", IX86_BUILTIN_2INTERSECTQ512, UNKNOWN, (int) VOID_FTYPE_PUQI_PUQI_V8DI_V8DI)\n-BDESC (0, OPTION_MASK_ISA_AVX512VP2INTERSECT, CODE_FOR_nothing, \"__builtin_ia32_2intersectd256\", IX86_BUILTIN_2INTERSECTD256, UNKNOWN, (int) VOID_FTYPE_PUQI_PUQI_V8SI_V8SI)\n-BDESC (0, OPTION_MASK_ISA_AVX512VP2INTERSECT, CODE_FOR_nothing, \"__builtin_ia32_2intersectq256\", IX86_BUILTIN_2INTERSECTQ256, UNKNOWN, (int) VOID_FTYPE_PUQI_PUQI_V4DI_V4DI)\n-BDESC (0, OPTION_MASK_ISA_AVX512VP2INTERSECT, CODE_FOR_nothing, \"__builtin_ia32_2intersectd128\", IX86_BUILTIN_2INTERSECTD128, UNKNOWN, (int) VOID_FTYPE_PUQI_PUQI_V4SI_V4SI)\n-BDESC (0, OPTION_MASK_ISA_AVX512VP2INTERSECT, CODE_FOR_nothing, \"__builtin_ia32_2intersectq128\", IX86_BUILTIN_2INTERSECTQ128, UNKNOWN, (int) VOID_FTYPE_PUQI_PUQI_V2DI_V2DI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512VP2INTERSECT, CODE_FOR_nothing, \"__builtin_ia32_2intersectd512\", IX86_BUILTIN_2INTERSECTD512, UNKNOWN, (int) VOID_FTYPE_PUHI_PUHI_V16SI_V16SI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512VP2INTERSECT, CODE_FOR_nothing, \"__builtin_ia32_2intersectq512\", IX86_BUILTIN_2INTERSECTQ512, UNKNOWN, (int) VOID_FTYPE_PUQI_PUQI_V8DI_V8DI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512VP2INTERSECT, CODE_FOR_nothing, \"__builtin_ia32_2intersectd256\", IX86_BUILTIN_2INTERSECTD256, UNKNOWN, (int) VOID_FTYPE_PUQI_PUQI_V8SI_V8SI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512VP2INTERSECT, CODE_FOR_nothing, \"__builtin_ia32_2intersectq256\", IX86_BUILTIN_2INTERSECTQ256, UNKNOWN, (int) VOID_FTYPE_PUQI_PUQI_V4DI_V4DI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512VP2INTERSECT, CODE_FOR_nothing, \"__builtin_ia32_2intersectd128\", IX86_BUILTIN_2INTERSECTD128, UNKNOWN, (int) VOID_FTYPE_PUQI_PUQI_V4SI_V4SI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512VP2INTERSECT, CODE_FOR_nothing, \"__builtin_ia32_2intersectq128\", IX86_BUILTIN_2INTERSECTQ128, UNKNOWN, (int) VOID_FTYPE_PUQI_PUQI_V2DI_V2DI)\n \n /* AVX512VL */\n BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512vl_loadv16hi_mask, \"__builtin_ia32_loaddquhi256_mask\", IX86_BUILTIN_LOADDQUHI256_MASK, UNKNOWN, (int) V16HI_FTYPE_PCSHORT_V16HI_UHI)\n@@ -435,16 +435,16 @@ BDESC (OPTION_MASK_ISA_MOVDIRI, 0, CODE_FOR_movdirisi, \"__builtin_ia32_directsto\n BDESC (OPTION_MASK_ISA_MOVDIRI | OPTION_MASK_ISA_64BIT, 0, CODE_FOR_movdiridi, \"__builtin_ia32_directstoreu_u64\", IX86_BUILTIN_MOVDIRIDI64, UNKNOWN, (int) VOID_FTYPE_PULONGLONG_ULONGLONG)\n \n /* MASK2.  */\n-BDESC (0, OPTION_MASK_ISA_WBNOINVD, CODE_FOR_wbnoinvd, \"__builtin_ia32_wbnoinvd\", IX86_BUILTIN_WBNOINVD, UNKNOWN, (int) VOID_FTYPE_VOID)\n-BDESC (0, OPTION_MASK_ISA_MOVDIR64B, CODE_FOR_nothing, \"__builtin_ia32_movdir64b\", IX86_BUILTIN_MOVDIR64B, UNKNOWN, (int) VOID_FTYPE_PVOID_PCVOID)\n+BDESC (0, OPTION_MASK_ISA2_WBNOINVD, CODE_FOR_wbnoinvd, \"__builtin_ia32_wbnoinvd\", IX86_BUILTIN_WBNOINVD, UNKNOWN, (int) VOID_FTYPE_VOID)\n+BDESC (0, OPTION_MASK_ISA2_MOVDIR64B, CODE_FOR_nothing, \"__builtin_ia32_movdir64b\", IX86_BUILTIN_MOVDIR64B, UNKNOWN, (int) VOID_FTYPE_PVOID_PCVOID)\n \n /* PTWRITE.  */\n-BDESC (0, OPTION_MASK_ISA_PTWRITE, CODE_FOR_ptwritesi, \"__builtin_ia32_ptwrite32\", IX86_BUILTIN_PTWRITE32, UNKNOWN, (int) VOID_FTYPE_UNSIGNED)\n-BDESC (OPTION_MASK_ISA_64BIT, OPTION_MASK_ISA_PTWRITE, CODE_FOR_ptwritedi, \"__builtin_ia32_ptwrite64\", IX86_BUILTIN_PTWRITE64, UNKNOWN, (int) VOID_FTYPE_UINT64)\n+BDESC (0, OPTION_MASK_ISA2_PTWRITE, CODE_FOR_ptwritesi, \"__builtin_ia32_ptwrite32\", IX86_BUILTIN_PTWRITE32, UNKNOWN, (int) VOID_FTYPE_UNSIGNED)\n+BDESC (OPTION_MASK_ISA_64BIT, OPTION_MASK_ISA2_PTWRITE, CODE_FOR_ptwritedi, \"__builtin_ia32_ptwrite64\", IX86_BUILTIN_PTWRITE64, UNKNOWN, (int) VOID_FTYPE_UINT64)\n \n /* ENQCMD */\n-BDESC (0, OPTION_MASK_ISA_ENQCMD, CODE_FOR_nothing, \"__builtin_ia32_enqcmd\", IX86_BUILTIN_ENQCMD, UNKNOWN, (int) INT_FTYPE_PVOID_PCVOID)\n-BDESC (0, OPTION_MASK_ISA_ENQCMD, CODE_FOR_nothing, \"__builtin_ia32_enqcmds\", IX86_BUILTIN_ENQCMDS, UNKNOWN, (int) INT_FTYPE_PVOID_PCVOID)\n+BDESC (0, OPTION_MASK_ISA2_ENQCMD, CODE_FOR_nothing, \"__builtin_ia32_enqcmd\", IX86_BUILTIN_ENQCMD, UNKNOWN, (int) INT_FTYPE_PVOID_PCVOID)\n+BDESC (0, OPTION_MASK_ISA2_ENQCMD, CODE_FOR_nothing, \"__builtin_ia32_enqcmds\", IX86_BUILTIN_ENQCMDS, UNKNOWN, (int) INT_FTYPE_PVOID_PCVOID)\n \n BDESC_END (SPECIAL_ARGS, ARGS)\n \n@@ -2685,64 +2685,64 @@ BDESC (OPTION_MASK_ISA_AVX512BITALG | OPTION_MASK_ISA_AVX512VL | OPTION_MASK_ISA\n BDESC (OPTION_MASK_ISA_AVX512BITALG | OPTION_MASK_ISA_AVX512VL, 0, CODE_FOR_avx512vl_vpshufbitqmbv16qi_mask, \"__builtin_ia32_vpshufbitqmb128_mask\", IX86_BUILTIN_VPSHUFBITQMB128_MASK, UNKNOWN, (int) UHI_FTYPE_V16QI_V16QI_UHI)\n \n /* AVX512_4FMAPS and AVX512_4VNNIW builtins with variable number of arguments. Defined in additional ix86_isa_flags2.  */\n-BDESC (0, OPTION_MASK_ISA_AVX5124FMAPS, CODE_FOR_avx5124fmaddps_4fmaddps_mask, \"__builtin_ia32_4fmaddps_mask\", IX86_BUILTIN_4FMAPS_MASK, UNKNOWN, (int) V16SF_FTYPE_V16SF_V16SF_V16SF_V16SF_V16SF_PCV4SF_V16SF_UHI)\n-BDESC (0, OPTION_MASK_ISA_AVX5124FMAPS, CODE_FOR_avx5124fmaddps_4fmaddps, \"__builtin_ia32_4fmaddps\", IX86_BUILTIN_4FMAPS, UNKNOWN, (int) V16SF_FTYPE_V16SF_V16SF_V16SF_V16SF_V16SF_PCV4SF)\n-BDESC (0, OPTION_MASK_ISA_AVX5124FMAPS, CODE_FOR_avx5124fmaddps_4fmaddss, \"__builtin_ia32_4fmaddss\", IX86_BUILTIN_4FMASS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_V4SF_V4SF_V4SF_PCV4SF)\n-BDESC (0, OPTION_MASK_ISA_AVX5124FMAPS, CODE_FOR_avx5124fmaddps_4fmaddss_mask, \"__builtin_ia32_4fmaddss_mask\", IX86_BUILTIN_4FMASS_MASK, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_V4SF_V4SF_V4SF_PCV4SF_V4SF_UQI)\n-BDESC (0, OPTION_MASK_ISA_AVX5124FMAPS, CODE_FOR_avx5124fmaddps_4fnmaddps_mask, \"__builtin_ia32_4fnmaddps_mask\", IX86_BUILTIN_4FNMAPS_MASK, UNKNOWN, (int) V16SF_FTYPE_V16SF_V16SF_V16SF_V16SF_V16SF_PCV4SF_V16SF_UHI)\n-BDESC (0, OPTION_MASK_ISA_AVX5124FMAPS, CODE_FOR_avx5124fmaddps_4fnmaddps, \"__builtin_ia32_4fnmaddps\", IX86_BUILTIN_4FNMAPS, UNKNOWN, (int) V16SF_FTYPE_V16SF_V16SF_V16SF_V16SF_V16SF_PCV4SF)\n-BDESC (0, OPTION_MASK_ISA_AVX5124FMAPS, CODE_FOR_avx5124fmaddps_4fnmaddss, \"__builtin_ia32_4fnmaddss\", IX86_BUILTIN_4FNMASS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_V4SF_V4SF_V4SF_PCV4SF)\n-BDESC (0, OPTION_MASK_ISA_AVX5124FMAPS, CODE_FOR_avx5124fmaddps_4fnmaddss_mask, \"__builtin_ia32_4fnmaddss_mask\", IX86_BUILTIN_4FNMASS_MASK, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_V4SF_V4SF_V4SF_PCV4SF_V4SF_UQI)\n-BDESC (0, OPTION_MASK_ISA_AVX5124VNNIW, CODE_FOR_avx5124vnniw_vp4dpwssd, \"__builtin_ia32_vp4dpwssd\", IX86_BUILTIN_4DPWSSD, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_V16SI_V16SI_PCV4SI)\n-BDESC (0, OPTION_MASK_ISA_AVX5124VNNIW, CODE_FOR_avx5124vnniw_vp4dpwssd_mask, \"__builtin_ia32_vp4dpwssd_mask\", IX86_BUILTIN_4DPWSSD_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_V16SI_V16SI_PCV4SI_V16SI_UHI)\n-BDESC (0, OPTION_MASK_ISA_AVX5124VNNIW, CODE_FOR_avx5124vnniw_vp4dpwssds, \"__builtin_ia32_vp4dpwssds\", IX86_BUILTIN_4DPWSSDS, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_V16SI_V16SI_PCV4SI)\n-BDESC (0, OPTION_MASK_ISA_AVX5124VNNIW, CODE_FOR_avx5124vnniw_vp4dpwssds_mask, \"__builtin_ia32_vp4dpwssds_mask\", IX86_BUILTIN_4DPWSSDS_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_V16SI_V16SI_PCV4SI_V16SI_UHI)\n+BDESC (0, OPTION_MASK_ISA2_AVX5124FMAPS, CODE_FOR_avx5124fmaddps_4fmaddps_mask, \"__builtin_ia32_4fmaddps_mask\", IX86_BUILTIN_4FMAPS_MASK, UNKNOWN, (int) V16SF_FTYPE_V16SF_V16SF_V16SF_V16SF_V16SF_PCV4SF_V16SF_UHI)\n+BDESC (0, OPTION_MASK_ISA2_AVX5124FMAPS, CODE_FOR_avx5124fmaddps_4fmaddps, \"__builtin_ia32_4fmaddps\", IX86_BUILTIN_4FMAPS, UNKNOWN, (int) V16SF_FTYPE_V16SF_V16SF_V16SF_V16SF_V16SF_PCV4SF)\n+BDESC (0, OPTION_MASK_ISA2_AVX5124FMAPS, CODE_FOR_avx5124fmaddps_4fmaddss, \"__builtin_ia32_4fmaddss\", IX86_BUILTIN_4FMASS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_V4SF_V4SF_V4SF_PCV4SF)\n+BDESC (0, OPTION_MASK_ISA2_AVX5124FMAPS, CODE_FOR_avx5124fmaddps_4fmaddss_mask, \"__builtin_ia32_4fmaddss_mask\", IX86_BUILTIN_4FMASS_MASK, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_V4SF_V4SF_V4SF_PCV4SF_V4SF_UQI)\n+BDESC (0, OPTION_MASK_ISA2_AVX5124FMAPS, CODE_FOR_avx5124fmaddps_4fnmaddps_mask, \"__builtin_ia32_4fnmaddps_mask\", IX86_BUILTIN_4FNMAPS_MASK, UNKNOWN, (int) V16SF_FTYPE_V16SF_V16SF_V16SF_V16SF_V16SF_PCV4SF_V16SF_UHI)\n+BDESC (0, OPTION_MASK_ISA2_AVX5124FMAPS, CODE_FOR_avx5124fmaddps_4fnmaddps, \"__builtin_ia32_4fnmaddps\", IX86_BUILTIN_4FNMAPS, UNKNOWN, (int) V16SF_FTYPE_V16SF_V16SF_V16SF_V16SF_V16SF_PCV4SF)\n+BDESC (0, OPTION_MASK_ISA2_AVX5124FMAPS, CODE_FOR_avx5124fmaddps_4fnmaddss, \"__builtin_ia32_4fnmaddss\", IX86_BUILTIN_4FNMASS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_V4SF_V4SF_V4SF_PCV4SF)\n+BDESC (0, OPTION_MASK_ISA2_AVX5124FMAPS, CODE_FOR_avx5124fmaddps_4fnmaddss_mask, \"__builtin_ia32_4fnmaddss_mask\", IX86_BUILTIN_4FNMASS_MASK, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_V4SF_V4SF_V4SF_PCV4SF_V4SF_UQI)\n+BDESC (0, OPTION_MASK_ISA2_AVX5124VNNIW, CODE_FOR_avx5124vnniw_vp4dpwssd, \"__builtin_ia32_vp4dpwssd\", IX86_BUILTIN_4DPWSSD, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_V16SI_V16SI_PCV4SI)\n+BDESC (0, OPTION_MASK_ISA2_AVX5124VNNIW, CODE_FOR_avx5124vnniw_vp4dpwssd_mask, \"__builtin_ia32_vp4dpwssd_mask\", IX86_BUILTIN_4DPWSSD_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_V16SI_V16SI_PCV4SI_V16SI_UHI)\n+BDESC (0, OPTION_MASK_ISA2_AVX5124VNNIW, CODE_FOR_avx5124vnniw_vp4dpwssds, \"__builtin_ia32_vp4dpwssds\", IX86_BUILTIN_4DPWSSDS, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_V16SI_V16SI_PCV4SI)\n+BDESC (0, OPTION_MASK_ISA2_AVX5124VNNIW, CODE_FOR_avx5124vnniw_vp4dpwssds_mask, \"__builtin_ia32_vp4dpwssds_mask\", IX86_BUILTIN_4DPWSSDS_MASK, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_V16SI_V16SI_PCV4SI_V16SI_UHI)\n \n /* RDPID.  */\n-BDESC (0, OPTION_MASK_ISA_RDPID, CODE_FOR_rdpid, \"__builtin_ia32_rdpid\", IX86_BUILTIN_RDPID, UNKNOWN, (int) UNSIGNED_FTYPE_VOID)\n+BDESC (0, OPTION_MASK_ISA2_RDPID, CODE_FOR_rdpid, \"__builtin_ia32_rdpid\", IX86_BUILTIN_RDPID, UNKNOWN, (int) UNSIGNED_FTYPE_VOID)\n \n /* VAES.  */\n-BDESC (0, OPTION_MASK_ISA_VAES, CODE_FOR_vaesdec_v16qi, \"__builtin_ia32_vaesdec_v16qi\", IX86_BUILTIN_VAESDEC16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n-BDESC (0, OPTION_MASK_ISA_VAES, CODE_FOR_vaesdec_v32qi, \"__builtin_ia32_vaesdec_v32qi\", IX86_BUILTIN_VAESDEC32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)\n-BDESC (0, OPTION_MASK_ISA_VAES, CODE_FOR_vaesdec_v64qi, \"__builtin_ia32_vaesdec_v64qi\", IX86_BUILTIN_VAESDEC64, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI)\n-BDESC (0, OPTION_MASK_ISA_VAES, CODE_FOR_vaesdeclast_v16qi, \"__builtin_ia32_vaesdeclast_v16qi\", IX86_BUILTIN_VAESDECLAST16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n-BDESC (0, OPTION_MASK_ISA_VAES, CODE_FOR_vaesdeclast_v32qi, \"__builtin_ia32_vaesdeclast_v32qi\", IX86_BUILTIN_VAESDECLAST32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)\n-BDESC (0, OPTION_MASK_ISA_VAES, CODE_FOR_vaesdeclast_v64qi, \"__builtin_ia32_vaesdeclast_v64qi\", IX86_BUILTIN_VAESDECLAST64, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI)\n-BDESC (0, OPTION_MASK_ISA_VAES, CODE_FOR_vaesenc_v16qi, \"__builtin_ia32_vaesenc_v16qi\", IX86_BUILTIN_VAESENC16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n-BDESC (0, OPTION_MASK_ISA_VAES, CODE_FOR_vaesenc_v32qi, \"__builtin_ia32_vaesenc_v32qi\", IX86_BUILTIN_VAESENC32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)\n-BDESC (0, OPTION_MASK_ISA_VAES, CODE_FOR_vaesenc_v64qi, \"__builtin_ia32_vaesenc_v64qi\", IX86_BUILTIN_VAESENC64, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI)\n-BDESC (0, OPTION_MASK_ISA_VAES, CODE_FOR_vaesenclast_v16qi, \"__builtin_ia32_vaesenclast_v16qi\", IX86_BUILTIN_VAESENCLAST16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n-BDESC (0, OPTION_MASK_ISA_VAES, CODE_FOR_vaesenclast_v32qi, \"__builtin_ia32_vaesenclast_v32qi\", IX86_BUILTIN_VAESENCLAST32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)\n-BDESC (0, OPTION_MASK_ISA_VAES, CODE_FOR_vaesenclast_v64qi, \"__builtin_ia32_vaesenclast_v64qi\", IX86_BUILTIN_VAESENCLAST64, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI)\n+BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdec_v16qi, \"__builtin_ia32_vaesdec_v16qi\", IX86_BUILTIN_VAESDEC16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n+BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdec_v32qi, \"__builtin_ia32_vaesdec_v32qi\", IX86_BUILTIN_VAESDEC32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)\n+BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdec_v64qi, \"__builtin_ia32_vaesdec_v64qi\", IX86_BUILTIN_VAESDEC64, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI)\n+BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdeclast_v16qi, \"__builtin_ia32_vaesdeclast_v16qi\", IX86_BUILTIN_VAESDECLAST16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n+BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdeclast_v32qi, \"__builtin_ia32_vaesdeclast_v32qi\", IX86_BUILTIN_VAESDECLAST32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)\n+BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesdeclast_v64qi, \"__builtin_ia32_vaesdeclast_v64qi\", IX86_BUILTIN_VAESDECLAST64, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI)\n+BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenc_v16qi, \"__builtin_ia32_vaesenc_v16qi\", IX86_BUILTIN_VAESENC16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n+BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenc_v32qi, \"__builtin_ia32_vaesenc_v32qi\", IX86_BUILTIN_VAESENC32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)\n+BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenc_v64qi, \"__builtin_ia32_vaesenc_v64qi\", IX86_BUILTIN_VAESENC64, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI)\n+BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenclast_v16qi, \"__builtin_ia32_vaesenclast_v16qi\", IX86_BUILTIN_VAESENCLAST16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n+BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenclast_v32qi, \"__builtin_ia32_vaesenclast_v32qi\", IX86_BUILTIN_VAESENCLAST32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)\n+BDESC (0, OPTION_MASK_ISA2_VAES, CODE_FOR_vaesenclast_v64qi, \"__builtin_ia32_vaesenclast_v64qi\", IX86_BUILTIN_VAESENCLAST64, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI)\n \n /* BF16 */\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v32hi, \"__builtin_ia32_cvtne2ps2bf16_v32hi\", IX86_BUILTIN_CVTNE2PS2HI16_V32HI, UNKNOWN, (int) V32HI_FTYPE_V16SF_V16SF)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v32hi_mask, \"__builtin_ia32_cvtne2ps2bf16_v32hi_mask\", IX86_BUILTIN_CVTNE2PS2HI16_V32HI_MASK, UNKNOWN, (int) V32HI_FTYPE_V16SF_V16SF_V32HI_USI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v32hi_maskz, \"__builtin_ia32_cvtne2ps2bf16_v32hi_maskz\", IX86_BUILTIN_CVTNE2PS2HI16_V32HI_MASKZ, UNKNOWN, (int) V32HI_FTYPE_V16SF_V16SF_USI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v16hi, \"__builtin_ia32_cvtne2ps2bf16_v16hi\", IX86_BUILTIN_CVTNE2PS2HI16_V16HI, UNKNOWN, (int) V16HI_FTYPE_V8SF_V8SF)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v16hi_mask, \"__builtin_ia32_cvtne2ps2bf16_v16hi_mask\", IX86_BUILTIN_CVTNE2PS2HI16_V16HI_MASK, UNKNOWN, (int) V16HI_FTYPE_V8SF_V8SF_V16HI_UHI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v16hi_maskz, \"__builtin_ia32_cvtne2ps2bf16_v16hi_maskz\", IX86_BUILTIN_CVTNE2PS2HI16_V16HI_MASKZ, UNKNOWN, (int) V16HI_FTYPE_V8SF_V8SF_UHI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v8hi, \"__builtin_ia32_cvtne2ps2bf16_v8hi\", IX86_BUILTIN_CVTNE2PS2HI16_V8HI, UNKNOWN, (int) V8HI_FTYPE_V4SF_V4SF)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v8hi_mask, \"__builtin_ia32_cvtne2ps2bf16_v8hi_mask\", IX86_BUILTIN_CVTNE2PS2HI16_V8HI_MASK, UNKNOWN, (int) V8HI_FTYPE_V4SF_V4SF_V8HI_UQI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v8hi_maskz, \"__builtin_ia32_cvtne2ps2bf16_v8hi_maskz\", IX86_BUILTIN_CVTNE2PS2HI16_V8HI_MASKZ, UNKNOWN, (int) V8HI_FTYPE_V4SF_V4SF_UQI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v16sf, \"__builtin_ia32_cvtneps2bf16_v16sf\", IX86_BUILTIN_CVTNEPS2HI16_V16SF, UNKNOWN, (int) V16HI_FTYPE_V16SF)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v16sf_mask, \"__builtin_ia32_cvtneps2bf16_v16sf_mask\", IX86_BUILTIN_CVTNEPS2HI16_V16SF_MASK, UNKNOWN, (int) V16HI_FTYPE_V16SF_V16HI_UHI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v16sf_maskz, \"__builtin_ia32_cvtneps2bf16_v16sf_maskz\", IX86_BUILTIN_CVTNE2PS2HI16_V16SF_MASKZ, UNKNOWN, (int) V16HI_FTYPE_V16SF_UHI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v8sf, \"__builtin_ia32_cvtneps2bf16_v8sf\", IX86_BUILTIN_CVTNEPS2HI16_V8SF, UNKNOWN, (int) V8HI_FTYPE_V8SF)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v8sf_mask, \"__builtin_ia32_cvtneps2bf16_v8sf_mask\", IX86_BUILTIN_CVTNEPS2HI16_V8SF_MASK, UNKNOWN, (int) V8HI_FTYPE_V8SF_V8HI_UQI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v8sf_maskz, \"__builtin_ia32_cvtneps2bf16_v8sf_maskz\", IX86_BUILTIN_CVTNE2PS2HI16_V8SF_MASKZ, UNKNOWN, (int) V8HI_FTYPE_V8SF_UQI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v4sf, \"__builtin_ia32_cvtneps2bf16_v4sf\", IX86_BUILTIN_CVTNEPS2HI16_V4SF, UNKNOWN, (int) V8HI_FTYPE_V4SF)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v4sf_mask, \"__builtin_ia32_cvtneps2bf16_v4sf_mask\", IX86_BUILTIN_CVTNEPS2HI16_V4SF_MASK, UNKNOWN, (int) V8HI_FTYPE_V4SF_V8HI_UQI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v4sf_maskz, \"__builtin_ia32_cvtneps2bf16_v4sf_maskz\", IX86_BUILTIN_CVTNE2PS2HI16_V4SF_MASKZ, UNKNOWN, (int) V8HI_FTYPE_V4SF_UQI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v16sf, \"__builtin_ia32_dpbf16ps_v16sf\", IX86_BUILTIN_DPHI16PS_V16SF, UNKNOWN, (int) V16SF_FTYPE_V16SF_V32HI_V32HI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v16sf_mask, \"__builtin_ia32_dpbf16ps_v16sf_mask\", IX86_BUILTIN_DPHI16PS_V16SF_MASK, UNKNOWN, (int) V16SF_FTYPE_V16SF_V32HI_V32HI_UHI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v16sf_maskz, \"__builtin_ia32_dpbf16ps_v16sf_maskz\", IX86_BUILTIN_DPHI16PS_V16SF_MASKZ, UNKNOWN, (int) V16SF_FTYPE_V16SF_V32HI_V32HI_UHI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v8sf, \"__builtin_ia32_dpbf16ps_v8sf\", IX86_BUILTIN_DPHI16PS_V8SF, UNKNOWN, (int) V8SF_FTYPE_V8SF_V16HI_V16HI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v8sf_mask, \"__builtin_ia32_dpbf16ps_v8sf_mask\", IX86_BUILTIN_DPHI16PS_V8SF_MASK, UNKNOWN, (int) V8SF_FTYPE_V8SF_V16HI_V16HI_UQI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v8sf_maskz, \"__builtin_ia32_dpbf16ps_v8sf_maskz\", IX86_BUILTIN_DPHI16PS_V8SF_MASKZ, UNKNOWN, (int) V8SF_FTYPE_V8SF_V16HI_V16HI_UQI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v4sf, \"__builtin_ia32_dpbf16ps_v4sf\", IX86_BUILTIN_DPHI16PS_V4SF, UNKNOWN, (int) V4SF_FTYPE_V4SF_V8HI_V8HI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v4sf_mask, \"__builtin_ia32_dpbf16ps_v4sf_mask\", IX86_BUILTIN_DPHI16PS_V4SF_MASK, UNKNOWN, (int) V4SF_FTYPE_V4SF_V8HI_V8HI_UQI)\n-BDESC (0, OPTION_MASK_ISA_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v4sf_maskz, \"__builtin_ia32_dpbf16ps_v4sf_maskz\", IX86_BUILTIN_DPHI16PS_V4SF_MASKZ, UNKNOWN, (int) V4SF_FTYPE_V4SF_V8HI_V8HI_UQI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v32hi, \"__builtin_ia32_cvtne2ps2bf16_v32hi\", IX86_BUILTIN_CVTNE2PS2HI16_V32HI, UNKNOWN, (int) V32HI_FTYPE_V16SF_V16SF)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v32hi_mask, \"__builtin_ia32_cvtne2ps2bf16_v32hi_mask\", IX86_BUILTIN_CVTNE2PS2HI16_V32HI_MASK, UNKNOWN, (int) V32HI_FTYPE_V16SF_V16SF_V32HI_USI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v32hi_maskz, \"__builtin_ia32_cvtne2ps2bf16_v32hi_maskz\", IX86_BUILTIN_CVTNE2PS2HI16_V32HI_MASKZ, UNKNOWN, (int) V32HI_FTYPE_V16SF_V16SF_USI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v16hi, \"__builtin_ia32_cvtne2ps2bf16_v16hi\", IX86_BUILTIN_CVTNE2PS2HI16_V16HI, UNKNOWN, (int) V16HI_FTYPE_V8SF_V8SF)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v16hi_mask, \"__builtin_ia32_cvtne2ps2bf16_v16hi_mask\", IX86_BUILTIN_CVTNE2PS2HI16_V16HI_MASK, UNKNOWN, (int) V16HI_FTYPE_V8SF_V8SF_V16HI_UHI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v16hi_maskz, \"__builtin_ia32_cvtne2ps2bf16_v16hi_maskz\", IX86_BUILTIN_CVTNE2PS2HI16_V16HI_MASKZ, UNKNOWN, (int) V16HI_FTYPE_V8SF_V8SF_UHI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v8hi, \"__builtin_ia32_cvtne2ps2bf16_v8hi\", IX86_BUILTIN_CVTNE2PS2HI16_V8HI, UNKNOWN, (int) V8HI_FTYPE_V4SF_V4SF)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v8hi_mask, \"__builtin_ia32_cvtne2ps2bf16_v8hi_mask\", IX86_BUILTIN_CVTNE2PS2HI16_V8HI_MASK, UNKNOWN, (int) V8HI_FTYPE_V4SF_V4SF_V8HI_UQI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtne2ps2bf16_v8hi_maskz, \"__builtin_ia32_cvtne2ps2bf16_v8hi_maskz\", IX86_BUILTIN_CVTNE2PS2HI16_V8HI_MASKZ, UNKNOWN, (int) V8HI_FTYPE_V4SF_V4SF_UQI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v16sf, \"__builtin_ia32_cvtneps2bf16_v16sf\", IX86_BUILTIN_CVTNEPS2HI16_V16SF, UNKNOWN, (int) V16HI_FTYPE_V16SF)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v16sf_mask, \"__builtin_ia32_cvtneps2bf16_v16sf_mask\", IX86_BUILTIN_CVTNEPS2HI16_V16SF_MASK, UNKNOWN, (int) V16HI_FTYPE_V16SF_V16HI_UHI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v16sf_maskz, \"__builtin_ia32_cvtneps2bf16_v16sf_maskz\", IX86_BUILTIN_CVTNE2PS2HI16_V16SF_MASKZ, UNKNOWN, (int) V16HI_FTYPE_V16SF_UHI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v8sf, \"__builtin_ia32_cvtneps2bf16_v8sf\", IX86_BUILTIN_CVTNEPS2HI16_V8SF, UNKNOWN, (int) V8HI_FTYPE_V8SF)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v8sf_mask, \"__builtin_ia32_cvtneps2bf16_v8sf_mask\", IX86_BUILTIN_CVTNEPS2HI16_V8SF_MASK, UNKNOWN, (int) V8HI_FTYPE_V8SF_V8HI_UQI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v8sf_maskz, \"__builtin_ia32_cvtneps2bf16_v8sf_maskz\", IX86_BUILTIN_CVTNE2PS2HI16_V8SF_MASKZ, UNKNOWN, (int) V8HI_FTYPE_V8SF_UQI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v4sf, \"__builtin_ia32_cvtneps2bf16_v4sf\", IX86_BUILTIN_CVTNEPS2HI16_V4SF, UNKNOWN, (int) V8HI_FTYPE_V4SF)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v4sf_mask, \"__builtin_ia32_cvtneps2bf16_v4sf_mask\", IX86_BUILTIN_CVTNEPS2HI16_V4SF_MASK, UNKNOWN, (int) V8HI_FTYPE_V4SF_V8HI_UQI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_cvtneps2bf16_v4sf_maskz, \"__builtin_ia32_cvtneps2bf16_v4sf_maskz\", IX86_BUILTIN_CVTNE2PS2HI16_V4SF_MASKZ, UNKNOWN, (int) V8HI_FTYPE_V4SF_UQI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v16sf, \"__builtin_ia32_dpbf16ps_v16sf\", IX86_BUILTIN_DPHI16PS_V16SF, UNKNOWN, (int) V16SF_FTYPE_V16SF_V32HI_V32HI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v16sf_mask, \"__builtin_ia32_dpbf16ps_v16sf_mask\", IX86_BUILTIN_DPHI16PS_V16SF_MASK, UNKNOWN, (int) V16SF_FTYPE_V16SF_V32HI_V32HI_UHI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v16sf_maskz, \"__builtin_ia32_dpbf16ps_v16sf_maskz\", IX86_BUILTIN_DPHI16PS_V16SF_MASKZ, UNKNOWN, (int) V16SF_FTYPE_V16SF_V32HI_V32HI_UHI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v8sf, \"__builtin_ia32_dpbf16ps_v8sf\", IX86_BUILTIN_DPHI16PS_V8SF, UNKNOWN, (int) V8SF_FTYPE_V8SF_V16HI_V16HI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v8sf_mask, \"__builtin_ia32_dpbf16ps_v8sf_mask\", IX86_BUILTIN_DPHI16PS_V8SF_MASK, UNKNOWN, (int) V8SF_FTYPE_V8SF_V16HI_V16HI_UQI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v8sf_maskz, \"__builtin_ia32_dpbf16ps_v8sf_maskz\", IX86_BUILTIN_DPHI16PS_V8SF_MASKZ, UNKNOWN, (int) V8SF_FTYPE_V8SF_V16HI_V16HI_UQI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v4sf, \"__builtin_ia32_dpbf16ps_v4sf\", IX86_BUILTIN_DPHI16PS_V4SF, UNKNOWN, (int) V4SF_FTYPE_V4SF_V8HI_V8HI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v4sf_mask, \"__builtin_ia32_dpbf16ps_v4sf_mask\", IX86_BUILTIN_DPHI16PS_V4SF_MASK, UNKNOWN, (int) V4SF_FTYPE_V4SF_V8HI_V8HI_UQI)\n+BDESC (0, OPTION_MASK_ISA2_AVX512BF16, CODE_FOR_avx512f_dpbf16ps_v4sf_maskz, \"__builtin_ia32_dpbf16ps_v4sf_maskz\", IX86_BUILTIN_DPHI16PS_V4SF_MASKZ, UNKNOWN, (int) V4SF_FTYPE_V4SF_V8HI_V8HI_UQI)\n \n /* Builtins with rounding support.  */\n BDESC_END (ARGS, ROUND_ARGS)"}, {"sha": "4646d044086ada9bbcf5e71ea3a5c44866c0933f", "filename": "gcc/config/i386/i386-builtins.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cf86e14e8b74db0daaead7024ca345a5c8f9949/gcc%2Fconfig%2Fi386%2Fi386-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cf86e14e8b74db0daaead7024ca345a5c8f9949/gcc%2Fconfig%2Fi386%2Fi386-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtins.c?ref=8cf86e14e8b74db0daaead7024ca345a5c8f9949", "patch": "@@ -1169,25 +1169,25 @@ ix86_init_mmx_sse_builtins (void)\n \t       VOID_FTYPE_PCVOID, IX86_BUILTIN_CLWB);\n \n   /* MONITORX and MWAITX.  */\n-  def_builtin (0, OPTION_MASK_ISA_MWAITX, \"__builtin_ia32_monitorx\",\n+  def_builtin (0, OPTION_MASK_ISA2_MWAITX, \"__builtin_ia32_monitorx\",\n \t\tVOID_FTYPE_PCVOID_UNSIGNED_UNSIGNED, IX86_BUILTIN_MONITORX);\n-  def_builtin (0, OPTION_MASK_ISA_MWAITX, \"__builtin_ia32_mwaitx\",\n+  def_builtin (0, OPTION_MASK_ISA2_MWAITX, \"__builtin_ia32_mwaitx\",\n \t\tVOID_FTYPE_UNSIGNED_UNSIGNED_UNSIGNED, IX86_BUILTIN_MWAITX);\n \n   /* CLZERO.  */\n-  def_builtin (0, OPTION_MASK_ISA_CLZERO, \"__builtin_ia32_clzero\",\n+  def_builtin (0, OPTION_MASK_ISA2_CLZERO, \"__builtin_ia32_clzero\",\n \t\tVOID_FTYPE_PCVOID, IX86_BUILTIN_CLZERO);\n \n   /* WAITPKG.  */\n-  def_builtin (0, OPTION_MASK_ISA_WAITPKG, \"__builtin_ia32_umonitor\",\n+  def_builtin (0, OPTION_MASK_ISA2_WAITPKG, \"__builtin_ia32_umonitor\",\n \t       VOID_FTYPE_PVOID, IX86_BUILTIN_UMONITOR);\n-  def_builtin (0, OPTION_MASK_ISA_WAITPKG, \"__builtin_ia32_umwait\",\n+  def_builtin (0, OPTION_MASK_ISA2_WAITPKG, \"__builtin_ia32_umwait\",\n \t       UINT8_FTYPE_UNSIGNED_UINT64, IX86_BUILTIN_UMWAIT);\n-  def_builtin (0, OPTION_MASK_ISA_WAITPKG, \"__builtin_ia32_tpause\",\n+  def_builtin (0, OPTION_MASK_ISA2_WAITPKG, \"__builtin_ia32_tpause\",\n \t       UINT8_FTYPE_UNSIGNED_UINT64, IX86_BUILTIN_TPAUSE);\n \n   /* CLDEMOTE.  */\n-  def_builtin (0, OPTION_MASK_ISA_CLDEMOTE, \"__builtin_ia32_cldemote\",\n+  def_builtin (0, OPTION_MASK_ISA2_CLDEMOTE, \"__builtin_ia32_cldemote\",\n \t       VOID_FTYPE_PCVOID, IX86_BUILTIN_CLDEMOTE);\n \n   /* Add FMA4 multi-arg argument instructions */"}, {"sha": "35590ec299237e9b1a688211254e3359170c062f", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cf86e14e8b74db0daaead7024ca345a5c8f9949/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cf86e14e8b74db0daaead7024ca345a5c8f9949/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=8cf86e14e8b74db0daaead7024ca345a5c8f9949", "patch": "@@ -415,9 +415,9 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n       ;\n     }\n \n-  if (isa_flag2 & OPTION_MASK_ISA_WBNOINVD)\n+  if (isa_flag2 & OPTION_MASK_ISA2_WBNOINVD)\n     def_or_undef (parse_in, \"__WBNOINVD__\");\n-  if (isa_flag2 & OPTION_MASK_ISA_AVX512VP2INTERSECT)\n+  if (isa_flag2 & OPTION_MASK_ISA2_AVX512VP2INTERSECT)\n     def_or_undef (parse_in, \"__AVX512VP2INTERSECT__\");\n   if (isa_flag & OPTION_MASK_ISA_MMX)\n     def_or_undef (parse_in, \"__MMX__\");\n@@ -465,17 +465,17 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     def_or_undef (parse_in, \"__AVX512VBMI__\");\n   if (isa_flag & OPTION_MASK_ISA_AVX512IFMA)\n     def_or_undef (parse_in, \"__AVX512IFMA__\");\n-  if (isa_flag2 & OPTION_MASK_ISA_AVX5124VNNIW)\n+  if (isa_flag2 & OPTION_MASK_ISA2_AVX5124VNNIW)\n     def_or_undef (parse_in, \"__AVX5124VNNIW__\");\n   if (isa_flag & OPTION_MASK_ISA_AVX512VBMI2)\n     def_or_undef (parse_in, \"__AVX512VBMI2__\");\n   if (isa_flag & OPTION_MASK_ISA_AVX512VNNI)\n     def_or_undef (parse_in, \"__AVX512VNNI__\");\n-  if (isa_flag2 & OPTION_MASK_ISA_PCONFIG)\n+  if (isa_flag2 & OPTION_MASK_ISA2_PCONFIG)\n     def_or_undef (parse_in, \"__PCONFIG__\");\n-  if (isa_flag2 & OPTION_MASK_ISA_SGX)\n+  if (isa_flag2 & OPTION_MASK_ISA2_SGX)\n     def_or_undef (parse_in, \"__SGX__\");\n-  if (isa_flag2 & OPTION_MASK_ISA_AVX5124FMAPS)\n+  if (isa_flag2 & OPTION_MASK_ISA2_AVX5124FMAPS)\n     def_or_undef (parse_in, \"__AVX5124FMAPS__\");\n   if (isa_flag & OPTION_MASK_ISA_AVX512BITALG)\n     def_or_undef (parse_in, \"__AVX512BITALG__\");\n@@ -531,43 +531,43 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     def_or_undef (parse_in, \"__SSE2_MATH__\");\n   if (isa_flag & OPTION_MASK_ISA_CLFLUSHOPT)\n     def_or_undef (parse_in, \"__CLFLUSHOPT__\");\n-  if (isa_flag2 & OPTION_MASK_ISA_CLZERO)\n+  if (isa_flag2 & OPTION_MASK_ISA2_CLZERO)\n     def_or_undef (parse_in, \"__CLZERO__\");\n   if (isa_flag & OPTION_MASK_ISA_XSAVEC)\n     def_or_undef (parse_in, \"__XSAVEC__\");\n   if (isa_flag & OPTION_MASK_ISA_XSAVES)\n     def_or_undef (parse_in, \"__XSAVES__\");\n   if (isa_flag & OPTION_MASK_ISA_CLWB)\n     def_or_undef (parse_in, \"__CLWB__\");\n-  if (isa_flag2 & OPTION_MASK_ISA_MWAITX)\n+  if (isa_flag2 & OPTION_MASK_ISA2_MWAITX)\n     def_or_undef (parse_in, \"__MWAITX__\");\n   if (isa_flag & OPTION_MASK_ISA_PKU)\n     def_or_undef (parse_in, \"__PKU__\");\n-  if (isa_flag2 & OPTION_MASK_ISA_RDPID)\n+  if (isa_flag2 & OPTION_MASK_ISA2_RDPID)\n     def_or_undef (parse_in, \"__RDPID__\");\n   if (isa_flag & OPTION_MASK_ISA_GFNI)\n     def_or_undef (parse_in, \"__GFNI__\");\n   if ((isa_flag & OPTION_MASK_ISA_SHSTK))\n     def_or_undef (parse_in, \"__SHSTK__\");\n-  if (isa_flag2 & OPTION_MASK_ISA_VAES)\n+  if (isa_flag2 & OPTION_MASK_ISA2_VAES)\n     def_or_undef (parse_in, \"__VAES__\");\n   if (isa_flag & OPTION_MASK_ISA_VPCLMULQDQ)\n     def_or_undef (parse_in, \"__VPCLMULQDQ__\");\n   if (isa_flag & OPTION_MASK_ISA_MOVDIRI)\n     def_or_undef (parse_in, \"__MOVDIRI__\");\n-  if (isa_flag2 & OPTION_MASK_ISA_MOVDIR64B)\n+  if (isa_flag2 & OPTION_MASK_ISA2_MOVDIR64B)\n     def_or_undef (parse_in, \"__MOVDIR64B__\");\n-  if (isa_flag2 & OPTION_MASK_ISA_WAITPKG)\n+  if (isa_flag2 & OPTION_MASK_ISA2_WAITPKG)\n     def_or_undef (parse_in, \"__WAITPKG__\");\n-  if (isa_flag2 & OPTION_MASK_ISA_CLDEMOTE)\n+  if (isa_flag2 & OPTION_MASK_ISA2_CLDEMOTE)\n     def_or_undef (parse_in, \"__CLDEMOTE__\");\n-  if (isa_flag2 & OPTION_MASK_ISA_PTWRITE)\n+  if (isa_flag2 & OPTION_MASK_ISA2_PTWRITE)\n     def_or_undef (parse_in, \"__PTWRITE__\");\n-  if (isa_flag2 & OPTION_MASK_ISA_AVX512BF16)\n+  if (isa_flag2 & OPTION_MASK_ISA2_AVX512BF16)\n     def_or_undef (parse_in, \"__AVX512BF16__\");\n   if (TARGET_MMX_WITH_SSE)\n     def_or_undef (parse_in, \"__MMX_WITH_SSE__\");\n-  if (isa_flag2 & OPTION_MASK_ISA_ENQCMD)\n+  if (isa_flag2 & OPTION_MASK_ISA2_ENQCMD)\n     def_or_undef (parse_in, \"__ENQCMD__\");\n   if (TARGET_IAMCU)\n     {"}, {"sha": "be33821174bcf350b33c58ece9ccffa9db88d770", "filename": "gcc/config/i386/i386-options.c", "status": "modified", "additions": 51, "deletions": 51, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cf86e14e8b74db0daaead7024ca345a5c8f9949/gcc%2Fconfig%2Fi386%2Fi386-options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cf86e14e8b74db0daaead7024ca345a5c8f9949/gcc%2Fconfig%2Fi386%2Fi386-options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-options.c?ref=8cf86e14e8b74db0daaead7024ca345a5c8f9949", "patch": "@@ -187,25 +187,25 @@ struct ix86_target_opts\n    ISAs come first.  Target string will be displayed in the same order.  */\n static struct ix86_target_opts isa2_opts[] =\n {\n-  { \"-mcx16\",\t\tOPTION_MASK_ISA_CX16 },\n-  { \"-mvaes\",\t\tOPTION_MASK_ISA_VAES },\n-  { \"-mrdpid\",\t\tOPTION_MASK_ISA_RDPID },\n-  { \"-mpconfig\",\tOPTION_MASK_ISA_PCONFIG },\n-  { \"-mwbnoinvd\",\tOPTION_MASK_ISA_WBNOINVD },\n-  { \"-mavx512vp2intersect\", OPTION_MASK_ISA_AVX512VP2INTERSECT },\n-  { \"-msgx\",\t\tOPTION_MASK_ISA_SGX },\n-  { \"-mavx5124vnniw\",\tOPTION_MASK_ISA_AVX5124VNNIW },\n-  { \"-mavx5124fmaps\",\tOPTION_MASK_ISA_AVX5124FMAPS },\n-  { \"-mhle\",\t\tOPTION_MASK_ISA_HLE },\n-  { \"-mmovbe\",\t\tOPTION_MASK_ISA_MOVBE },\n-  { \"-mclzero\",\t\tOPTION_MASK_ISA_CLZERO },\n-  { \"-mmwaitx\",\t\tOPTION_MASK_ISA_MWAITX },\n-  { \"-mmovdir64b\",\tOPTION_MASK_ISA_MOVDIR64B },\n-  { \"-mwaitpkg\",\tOPTION_MASK_ISA_WAITPKG },\n-  { \"-mcldemote\",\tOPTION_MASK_ISA_CLDEMOTE },\n-  { \"-mptwrite\",\tOPTION_MASK_ISA_PTWRITE },\n-  { \"-mavx512bf16\",\tOPTION_MASK_ISA_AVX512BF16 },\n-  { \"-menqcmd\",\t\tOPTION_MASK_ISA_ENQCMD }\n+  { \"-mcx16\",\t\tOPTION_MASK_ISA2_CX16 },\n+  { \"-mvaes\",\t\tOPTION_MASK_ISA2_VAES },\n+  { \"-mrdpid\",\t\tOPTION_MASK_ISA2_RDPID },\n+  { \"-mpconfig\",\tOPTION_MASK_ISA2_PCONFIG },\n+  { \"-mwbnoinvd\",\tOPTION_MASK_ISA2_WBNOINVD },\n+  { \"-mavx512vp2intersect\", OPTION_MASK_ISA2_AVX512VP2INTERSECT },\n+  { \"-msgx\",\t\tOPTION_MASK_ISA2_SGX },\n+  { \"-mavx5124vnniw\",\tOPTION_MASK_ISA2_AVX5124VNNIW },\n+  { \"-mavx5124fmaps\",\tOPTION_MASK_ISA2_AVX5124FMAPS },\n+  { \"-mhle\",\t\tOPTION_MASK_ISA2_HLE },\n+  { \"-mmovbe\",\t\tOPTION_MASK_ISA2_MOVBE },\n+  { \"-mclzero\",\t\tOPTION_MASK_ISA2_CLZERO },\n+  { \"-mmwaitx\",\t\tOPTION_MASK_ISA2_MWAITX },\n+  { \"-mmovdir64b\",\tOPTION_MASK_ISA2_MOVDIR64B },\n+  { \"-mwaitpkg\",\tOPTION_MASK_ISA2_WAITPKG },\n+  { \"-mcldemote\",\tOPTION_MASK_ISA2_CLDEMOTE },\n+  { \"-mptwrite\",\tOPTION_MASK_ISA2_PTWRITE },\n+  { \"-mavx512bf16\",\tOPTION_MASK_ISA2_AVX512BF16 },\n+  { \"-menqcmd\",\t\tOPTION_MASK_ISA2_ENQCMD }\n };\n static struct ix86_target_opts isa_opts[] =\n {\n@@ -2030,8 +2030,8 @@ ix86_option_override_internal (bool main_args_p,\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_BMI2))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_BMI2;\n \tif (((processor_alias_table[i].flags & PTA_CX16) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_CX16))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_CX16;\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_CX16))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_CX16;\n \tif (((processor_alias_table[i].flags & (PTA_POPCNT | PTA_ABM)) != 0)\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_POPCNT))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_POPCNT;\n@@ -2040,8 +2040,8 @@ ix86_option_override_internal (bool main_args_p,\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_SAHF))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_SAHF;\n \tif (((processor_alias_table[i].flags & PTA_MOVBE) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_MOVBE))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_MOVBE;\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_MOVBE))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_MOVBE;\n \tif (((processor_alias_table[i].flags & PTA_AES) != 0)\n \t    && !(ix86_isa_flags_explicit & OPTION_MASK_ISA_AES))\n \t  ix86_isa_flags |= OPTION_MASK_ISA_AES;\n@@ -2064,8 +2064,8 @@ ix86_option_override_internal (bool main_args_p,\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_RTM))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_RTM;\n \tif (((processor_alias_table[i].flags & PTA_HLE) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_HLE))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_HLE;\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_HLE))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_HLE;\n \tif (((processor_alias_table[i].flags & PTA_PRFCHW) != 0)\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_PRFCHW))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_PRFCHW;\n@@ -2106,8 +2106,8 @@ ix86_option_override_internal (bool main_args_p,\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_CLFLUSHOPT))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_CLFLUSHOPT;\n \tif (((processor_alias_table[i].flags & PTA_CLZERO) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_CLZERO))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_CLZERO;\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_CLZERO))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_CLZERO;\n \tif (((processor_alias_table[i].flags & PTA_XSAVEC) != 0)\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_XSAVEC))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_XSAVEC;\n@@ -2149,55 +2149,55 @@ ix86_option_override_internal (bool main_args_p,\n \n \tif (((processor_alias_table[i].flags & PTA_AVX512VP2INTERSECT) != 0)\n \t    && !(opts->x_ix86_isa_flags2_explicit\n-\t\t & OPTION_MASK_ISA_AVX512VP2INTERSECT))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_AVX512VP2INTERSECT;\n+\t\t & OPTION_MASK_ISA2_AVX512VP2INTERSECT))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_AVX512VP2INTERSECT;\n \tif (((processor_alias_table[i].flags & PTA_AVX5124VNNIW) != 0)\n \t    && !(opts->x_ix86_isa_flags2_explicit\n-\t\t & OPTION_MASK_ISA_AVX5124VNNIW))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_AVX5124VNNIW;\n+\t\t & OPTION_MASK_ISA2_AVX5124VNNIW))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_AVX5124VNNIW;\n \tif (((processor_alias_table[i].flags & PTA_AVX5124FMAPS) != 0)\n \t    && !(opts->x_ix86_isa_flags2_explicit\n-\t\t & OPTION_MASK_ISA_AVX5124FMAPS))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_AVX5124FMAPS;\n+\t\t & OPTION_MASK_ISA2_AVX5124FMAPS))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_AVX5124FMAPS;\n \tif (((processor_alias_table[i].flags & PTA_AVX512VPOPCNTDQ) != 0)\n \t    && !(opts->x_ix86_isa_flags_explicit\n \t\t & OPTION_MASK_ISA_AVX512VPOPCNTDQ))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512VPOPCNTDQ;\n \tif (((processor_alias_table[i].flags & PTA_AVX512BF16) != 0)\n \t    && !(opts->x_ix86_isa_flags2_explicit\n-\t\t & OPTION_MASK_ISA_AVX512BF16))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_AVX512BF16;\n+\t\t & OPTION_MASK_ISA2_AVX512BF16))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_AVX512BF16;\n         if (((processor_alias_table[i].flags & PTA_MOVDIRI) != 0)\n             && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_MOVDIRI))\n           opts->x_ix86_isa_flags |= OPTION_MASK_ISA_MOVDIRI;\n         if (((processor_alias_table[i].flags & PTA_MOVDIR64B) != 0)\n-            && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_MOVDIR64B))\n-          opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_MOVDIR64B;\n+            && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_MOVDIR64B))\n+          opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_MOVDIR64B;\n \tif (((processor_alias_table[i].flags & PTA_SGX) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_SGX))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_SGX;\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_SGX))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_SGX;\n \tif (((processor_alias_table[i].flags & PTA_VAES) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_VAES))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_VAES;\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_VAES))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_VAES;\n \tif (((processor_alias_table[i].flags & PTA_RDPID) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_RDPID))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_RDPID;\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_RDPID))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_RDPID;\n \tif (((processor_alias_table[i].flags & PTA_PCONFIG) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_PCONFIG))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_PCONFIG;\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_PCONFIG))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_PCONFIG;\n \tif (((processor_alias_table[i].flags & PTA_WBNOINVD) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_WBNOINVD))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_WBNOINVD;\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_WBNOINVD))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_WBNOINVD;\n \tif (((processor_alias_table[i].flags & PTA_PTWRITE) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_PTWRITE))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_PTWRITE;\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_PTWRITE))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_PTWRITE;\n \n \tif ((processor_alias_table[i].flags\n \t   & (PTA_PREFETCH_SSE | PTA_SSE)) != 0)\n \t  x86_prefetch_sse = true;\n \tif (((processor_alias_table[i].flags & PTA_MWAITX) != 0)\n-\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_MWAITX))\n-\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_MWAITX;\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA2_MWAITX))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA2_MWAITX;\n \tif (((processor_alias_table[i].flags & PTA_PKU) != 0)\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_PKU))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_PKU;"}, {"sha": "2542cb317835afa4992298614e11c2df0d33725b", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cf86e14e8b74db0daaead7024ca345a5c8f9949/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cf86e14e8b74db0daaead7024ca345a5c8f9949/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=8cf86e14e8b74db0daaead7024ca345a5c8f9949", "patch": "@@ -81,10 +81,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_AVX512VBMI_P(x)\tTARGET_ISA_AVX512VBMI_P(x)\n #define TARGET_AVX512IFMA\tTARGET_ISA_AVX512IFMA\n #define TARGET_AVX512IFMA_P(x)\tTARGET_ISA_AVX512IFMA_P(x)\n-#define TARGET_AVX5124FMAPS\tTARGET_ISA_AVX5124FMAPS\n-#define TARGET_AVX5124FMAPS_P(x) TARGET_ISA_AVX5124FMAPS_P(x)\n-#define TARGET_AVX5124VNNIW\tTARGET_ISA_AVX5124VNNIW\n-#define TARGET_AVX5124VNNIW_P(x) TARGET_ISA_AVX5124VNNIW_P(x)\n+#define TARGET_AVX5124FMAPS\tTARGET_ISA2_AVX5124FMAPS\n+#define TARGET_AVX5124FMAPS_P(x) TARGET_ISA2_AVX5124FMAPS_P(x)\n+#define TARGET_AVX5124VNNIW\tTARGET_ISA2_AVX5124VNNIW\n+#define TARGET_AVX5124VNNIW_P(x) TARGET_ISA2_AVX5124VNNIW_P(x)\n #define TARGET_AVX512VBMI2\tTARGET_ISA_AVX512VBMI2\n #define TARGET_AVX512VBMI2_P(x) TARGET_ISA_AVX512VBMI2_P(x)\n #define TARGET_AVX512VPOPCNTDQ\tTARGET_ISA_AVX512VPOPCNTDQ\n@@ -93,8 +93,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_AVX512VNNI_P(x) TARGET_ISA_AVX512VNNI_P(x)\n #define TARGET_AVX512BITALG\tTARGET_ISA_AVX512BITALG\n #define TARGET_AVX512BITALG_P(x) TARGET_ISA_AVX512BITALG_P(x)\n-#define TARGET_AVX512VP2INTERSECT\tTARGET_ISA_AVX512VP2INTERSECT\n-#define TARGET_AVX512VP2INTERSECT_P(x) TARGET_ISA_AVX512VP2INTERSECT_P(x)\n+#define TARGET_AVX512VP2INTERSECT\tTARGET_ISA2_AVX512VP2INTERSECT\n+#define TARGET_AVX512VP2INTERSECT_P(x) TARGET_ISA2_AVX512VP2INTERSECT_P(x)\n #define TARGET_FMA\tTARGET_ISA_FMA\n #define TARGET_FMA_P(x)\tTARGET_ISA_FMA_P(x)\n #define TARGET_SSE4A\tTARGET_ISA_SSE4A\n@@ -107,18 +107,18 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_LWP_P(x)\tTARGET_ISA_LWP_P(x)\n #define TARGET_ABM\tTARGET_ISA_ABM\n #define TARGET_ABM_P(x)\tTARGET_ISA_ABM_P(x)\n-#define TARGET_PCONFIG\tTARGET_ISA_PCONFIG\n-#define TARGET_PCONFIG_P(x)\tTARGET_ISA_PCONFIG_P(x)\n-#define TARGET_WBNOINVD\tTARGET_ISA_WBNOINVD\n-#define TARGET_WBNOINVD_P(x)\tTARGET_ISA_WBNOINVD_P(x)\n-#define TARGET_SGX\tTARGET_ISA_SGX\n-#define TARGET_SGX_P(x)\tTARGET_ISA_SGX_P(x)\n-#define TARGET_RDPID\tTARGET_ISA_RDPID\n-#define TARGET_RDPID_P(x)\tTARGET_ISA_RDPID_P(x)\n+#define TARGET_PCONFIG\tTARGET_ISA2_PCONFIG\n+#define TARGET_PCONFIG_P(x)\tTARGET_ISA2_PCONFIG_P(x)\n+#define TARGET_WBNOINVD\tTARGET_ISA2_WBNOINVD\n+#define TARGET_WBNOINVD_P(x)\tTARGET_ISA2_WBNOINVD_P(x)\n+#define TARGET_SGX\tTARGET_ISA2_SGX\n+#define TARGET_SGX_P(x)\tTARGET_ISA2_SGX_P(x)\n+#define TARGET_RDPID\tTARGET_ISA2_RDPID\n+#define TARGET_RDPID_P(x)\tTARGET_ISA2_RDPID_P(x)\n #define TARGET_GFNI\tTARGET_ISA_GFNI\n #define TARGET_GFNI_P(x)\tTARGET_ISA_GFNI_P(x)\n-#define TARGET_VAES\tTARGET_ISA_VAES\n-#define TARGET_VAES_P(x)\tTARGET_ISA_VAES_P(x)\n+#define TARGET_VAES\tTARGET_ISA2_VAES\n+#define TARGET_VAES_P(x)\tTARGET_ISA2_VAES_P(x)\n #define TARGET_VPCLMULQDQ\tTARGET_ISA_VPCLMULQDQ\n #define TARGET_VPCLMULQDQ_P(x)\tTARGET_ISA_VPCLMULQDQ_P(x)\n #define TARGET_BMI\tTARGET_ISA_BMI\n@@ -133,8 +133,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_POPCNT_P(x)\tTARGET_ISA_POPCNT_P(x)\n #define TARGET_SAHF\tTARGET_ISA_SAHF\n #define TARGET_SAHF_P(x)\tTARGET_ISA_SAHF_P(x)\n-#define TARGET_MOVBE\tTARGET_ISA_MOVBE\n-#define TARGET_MOVBE_P(x)\tTARGET_ISA_MOVBE_P(x)\n+#define TARGET_MOVBE\tTARGET_ISA2_MOVBE\n+#define TARGET_MOVBE_P(x)\tTARGET_ISA2_MOVBE_P(x)\n #define TARGET_CRC32\tTARGET_ISA_CRC32\n #define TARGET_CRC32_P(x)\tTARGET_ISA_CRC32_P(x)\n #define TARGET_AES\tTARGET_ISA_AES\n@@ -143,16 +143,16 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_SHA_P(x)\tTARGET_ISA_SHA_P(x)\n #define TARGET_CLFLUSHOPT\tTARGET_ISA_CLFLUSHOPT\n #define TARGET_CLFLUSHOPT_P(x)\tTARGET_ISA_CLFLUSHOPT_P(x)\n-#define TARGET_CLZERO\tTARGET_ISA_CLZERO\n-#define TARGET_CLZERO_P(x)\tTARGET_ISA_CLZERO_P(x)\n+#define TARGET_CLZERO\tTARGET_ISA2_CLZERO\n+#define TARGET_CLZERO_P(x)\tTARGET_ISA2_CLZERO_P(x)\n #define TARGET_XSAVEC\tTARGET_ISA_XSAVEC\n #define TARGET_XSAVEC_P(x)\tTARGET_ISA_XSAVEC_P(x)\n #define TARGET_XSAVES\tTARGET_ISA_XSAVES\n #define TARGET_XSAVES_P(x)\tTARGET_ISA_XSAVES_P(x)\n #define TARGET_PCLMUL\tTARGET_ISA_PCLMUL\n #define TARGET_PCLMUL_P(x)\tTARGET_ISA_PCLMUL_P(x)\n-#define TARGET_CMPXCHG16B\tTARGET_ISA_CX16\n-#define TARGET_CMPXCHG16B_P(x)\tTARGET_ISA_CX16_P(x)\n+#define TARGET_CMPXCHG16B\tTARGET_ISA2_CX16\n+#define TARGET_CMPXCHG16B_P(x)\tTARGET_ISA2_CX16_P(x)\n #define TARGET_FSGSBASE\tTARGET_ISA_FSGSBASE\n #define TARGET_FSGSBASE_P(x)\tTARGET_ISA_FSGSBASE_P(x)\n #define TARGET_RDRND\tTARGET_ISA_RDRND\n@@ -161,8 +161,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_F16C_P(x)\tTARGET_ISA_F16C_P(x)\n #define TARGET_RTM\tTARGET_ISA_RTM\n #define TARGET_RTM_P(x)\tTARGET_ISA_RTM_P(x)\n-#define TARGET_HLE\tTARGET_ISA_HLE\n-#define TARGET_HLE_P(x)\tTARGET_ISA_HLE_P(x)\n+#define TARGET_HLE\tTARGET_ISA2_HLE\n+#define TARGET_HLE_P(x)\tTARGET_ISA2_HLE_P(x)\n #define TARGET_RDSEED\tTARGET_ISA_RDSEED\n #define TARGET_RDSEED_P(x)\tTARGET_ISA_RDSEED_P(x)\n #define TARGET_PRFCHW\tTARGET_ISA_PRFCHW\n@@ -179,26 +179,26 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_PREFETCHWT1_P(x)\tTARGET_ISA_PREFETCHWT1_P(x)\n #define TARGET_CLWB\tTARGET_ISA_CLWB\n #define TARGET_CLWB_P(x)\tTARGET_ISA_CLWB_P(x)\n-#define TARGET_MWAITX\tTARGET_ISA_MWAITX\n-#define TARGET_MWAITX_P(x)\tTARGET_ISA_MWAITX_P(x)\n+#define TARGET_MWAITX\tTARGET_ISA2_MWAITX\n+#define TARGET_MWAITX_P(x)\tTARGET_ISA2_MWAITX_P(x)\n #define TARGET_PKU\tTARGET_ISA_PKU\n #define TARGET_PKU_P(x)\tTARGET_ISA_PKU_P(x)\n #define TARGET_SHSTK\tTARGET_ISA_SHSTK\n #define TARGET_SHSTK_P(x)\tTARGET_ISA_SHSTK_P(x)\n #define TARGET_MOVDIRI\tTARGET_ISA_MOVDIRI\n #define TARGET_MOVDIRI_P(x) TARGET_ISA_MOVDIRI_P(x)\n-#define TARGET_MOVDIR64B\tTARGET_ISA_MOVDIR64B\n-#define TARGET_MOVDIR64B_P(x) TARGET_ISA_MOVDIR64B_P(x)\n-#define TARGET_WAITPKG\tTARGET_ISA_WAITPKG\n-#define TARGET_WAITPKG_P(x)\tTARGET_ISA_WAITPKG_P(x)\n-#define TARGET_CLDEMOTE\tTARGET_ISA_CLDEMOTE\n-#define TARGET_CLDEMOTE_P(x) TARGET_ISA_CLDEMOTE_P(x)\n-#define TARGET_PTWRITE\tTARGET_ISA_PTWRITE\n-#define TARGET_PTWRITE_P(x)\tTARGET_ISA_PTWRITE_P(x)\n-#define TARGET_AVX512BF16\tTARGET_ISA_AVX512BF16\n-#define TARGET_AVX512BF16_P(x)\tTARGET_ISA_AVX512BF16_P(x)\n-#define TARGET_ENQCMD\tTARGET_ISA_ENQCMD\n-#define TARGET_ENQCMD_P(x) TARGET_ISA_ENQCMD_P(x)\n+#define TARGET_MOVDIR64B\tTARGET_ISA2_MOVDIR64B\n+#define TARGET_MOVDIR64B_P(x) TARGET_ISA2_MOVDIR64B_P(x)\n+#define TARGET_WAITPKG\tTARGET_ISA2_WAITPKG\n+#define TARGET_WAITPKG_P(x)\tTARGET_ISA2_WAITPKG_P(x)\n+#define TARGET_CLDEMOTE\tTARGET_ISA2_CLDEMOTE\n+#define TARGET_CLDEMOTE_P(x) TARGET_ISA2_CLDEMOTE_P(x)\n+#define TARGET_PTWRITE\tTARGET_ISA2_PTWRITE\n+#define TARGET_PTWRITE_P(x)\tTARGET_ISA2_PTWRITE_P(x)\n+#define TARGET_AVX512BF16\tTARGET_ISA2_AVX512BF16\n+#define TARGET_AVX512BF16_P(x)\tTARGET_ISA2_AVX512BF16_P(x)\n+#define TARGET_ENQCMD\tTARGET_ISA2_ENQCMD\n+#define TARGET_ENQCMD_P(x) TARGET_ISA2_ENQCMD_P(x)\n \n #define TARGET_LP64\tTARGET_ABI_64\n #define TARGET_LP64_P(x)\tTARGET_ABI_64_P(x)"}, {"sha": "c47b639b3193e5b8d6a2fb025c33b426d97f981a", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cf86e14e8b74db0daaead7024ca345a5c8f9949/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cf86e14e8b74db0daaead7024ca345a5c8f9949/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=8cf86e14e8b74db0daaead7024ca345a5c8f9949", "patch": "@@ -725,11 +725,11 @@ Target Report Mask(ISA_AVX512VBMI) Var(ix86_isa_flags) Save\n Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512VBMI built-in functions and code generation.\n \n mavx5124fmaps\n-Target Report Mask(ISA_AVX5124FMAPS) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA2_AVX5124FMAPS) Var(ix86_isa_flags2) Save\n Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, AVX512F and AVX5124FMAPS built-in functions and code generation.\n \n mavx5124vnniw\n-Target Report Mask(ISA_AVX5124VNNIW) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA2_AVX5124VNNIW) Var(ix86_isa_flags2) Save\n Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, AVX512F and AVX5124VNNIW built-in functions and code generation.\n \n mavx512vpopcntdq\n@@ -749,7 +749,7 @@ Target Report Mask(ISA_AVX512BITALG) Var(ix86_isa_flags) Save\n Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, AVX512F and AVX512BITALG built-in functions and code generation.\n \n mavx512vp2intersect\n-Target Report Mask(ISA_AVX512VP2INTERSECT) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA2_AVX512VP2INTERSECT) Var(ix86_isa_flags2) Save\n Support AVX512VP2INTERSECT built-in functions and code generation.\n \n mfma\n@@ -781,31 +781,31 @@ Target Report Mask(ISA_POPCNT) Var(ix86_isa_flags) Save\n Support code generation of popcnt instruction.\n \n mpconfig\n-Target Report Mask(ISA_PCONFIG) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA2_PCONFIG) Var(ix86_isa_flags2) Save\n Support PCONFIG built-in functions and code generation.\n \n mwbnoinvd\n-Target Report Mask(ISA_WBNOINVD) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA2_WBNOINVD) Var(ix86_isa_flags2) Save\n Support WBNOINVD built-in functions and code generation.\n \n mptwrite\n-Target Report Mask(ISA_PTWRITE) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA2_PTWRITE) Var(ix86_isa_flags2) Save\n Support PTWRITE built-in functions and code generation.\n \n msgx\n-Target Report Mask(ISA_SGX) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA2_SGX) Var(ix86_isa_flags2) Save\n Support SGX built-in functions and code generation.\n \n mrdpid\n-Target Report Mask(ISA_RDPID) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA2_RDPID) Var(ix86_isa_flags2) Save\n Support RDPID built-in functions and code generation.\n \n mgfni\n Target Report Mask(ISA_GFNI) Var(ix86_isa_flags) Save\n Support GFNI built-in functions and code generation.\n \n mvaes\n-Target Report Mask(ISA_VAES) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA2_VAES) Var(ix86_isa_flags2) Save\n Support VAES built-in functions and code generation.\n \n mvpclmulqdq\n@@ -825,7 +825,7 @@ Target Report Mask(ISA_LZCNT) Var(ix86_isa_flags) Save\n Support LZCNT built-in function and code generation.\n \n mhle\n-Target Report Mask(ISA_HLE) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA2_HLE) Var(ix86_isa_flags2) Save\n Support Hardware Lock Elision prefixes.\n \n mrdseed\n@@ -876,15 +876,15 @@ Target Report Mask(ISA_TBM) Var(ix86_isa_flags) Save\n Support TBM built-in functions and code generation.\n \n mcx16\n-Target Report Mask(ISA_CX16) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA2_CX16) Var(ix86_isa_flags2) Save\n Support code generation of cmpxchg16b instruction.\n \n msahf\n Target Report Mask(ISA_SAHF) Var(ix86_isa_flags) Save\n Support code generation of sahf instruction in 64bit x86-64 code.\n \n mmovbe\n-Target Report Mask(ISA_MOVBE) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA2_MOVBE) Var(ix86_isa_flags2) Save\n Support code generation of movbe instruction.\n \n mcrc32\n@@ -969,11 +969,11 @@ Target WarnRemoved\n Removed in GCC 9.  This switch has no effect.\n \n mmwaitx\n-Target Report Mask(ISA_MWAITX) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA2_MWAITX) Var(ix86_isa_flags2) Save\n Support MWAITX and MONITORX built-in functions and code generation.\n \n mclzero\n-Target Report Mask(ISA_CLZERO) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA2_CLZERO) Var(ix86_isa_flags2) Save\n Support CLZERO built-in functions and code generation.\n \n mpku\n@@ -1071,15 +1071,15 @@ Target Report Mask(ISA_MOVDIRI) Var(ix86_isa_flags) Save\n Support MOVDIRI built-in functions and code generation.\n \n mmovdir64b\n-Target Report Mask(ISA_MOVDIR64B) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA2_MOVDIR64B) Var(ix86_isa_flags2) Save\n Support MOVDIR64B built-in functions and code generation.\n \n mwaitpkg\n-Target Report Mask(ISA_WAITPKG) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA2_WAITPKG) Var(ix86_isa_flags2) Save\n Support WAITPKG built-in functions and code generation.\n \n mcldemote\n-Target Report Mask(ISA_CLDEMOTE) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA2_CLDEMOTE) Var(ix86_isa_flags2) Save\n Support CLDEMOTE built-in functions and code generation.\n \n minstrument-return=\n@@ -1104,10 +1104,10 @@ Target Report Var(ix86_flag_record_return) Init(0)\n Generate a __return_loc section pointing to all return instrumentation code.\n \n mavx512bf16\n-Target Report Mask(ISA_AVX512BF16) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA2_AVX512BF16) Var(ix86_isa_flags2) Save\n Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, AVX512F and\n AVX512BF16 built-in functions and code generation.\n \n menqcmd\n-Target Report Mask(ISA_ENQCMD) Var(ix86_isa_flags2) Save\n+Target Report Mask(ISA2_ENQCMD) Var(ix86_isa_flags2) Save\n Support ENQCMD built-in functions and code generation."}]}