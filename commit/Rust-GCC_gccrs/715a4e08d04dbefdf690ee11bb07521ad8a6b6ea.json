{"sha": "715a4e08d04dbefdf690ee11bb07521ad8a6b6ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE1YTRlMDhkMDRkYmVmZGY2OTBlZTExYmIwNzUyMWFkOGE2YjZlYQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2010-02-19T23:38:20Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2010-02-19T23:38:20Z"}, "message": "re PR middle-end/42344 (ICE in rs6000.md with ipa-sra for 252.eon)\n\n\tPR middle-end/42344\n\t* cgraph.h (cgraph_make_decl_local): Declare.\n\t* cgraph.c (cgraph_make_decl_local): New function.\n\t(cgraph_make_node_local): Use it.\n\t* cgraphunit.c (cgraph_function_versioning): Likewise.\n\t* ipa.c (function_and_variable_visibility): Likewise.\n\nFrom-SVN: r156914", "tree": {"sha": "4156f0a5645b211f5f05d7ffb8bef1344cef32d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4156f0a5645b211f5f05d7ffb8bef1344cef32d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/715a4e08d04dbefdf690ee11bb07521ad8a6b6ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/715a4e08d04dbefdf690ee11bb07521ad8a6b6ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/715a4e08d04dbefdf690ee11bb07521ad8a6b6ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/715a4e08d04dbefdf690ee11bb07521ad8a6b6ea/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ad3b056c2757bf130f4b88c85d734137768a6410", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad3b056c2757bf130f4b88c85d734137768a6410", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad3b056c2757bf130f4b88c85d734137768a6410"}], "stats": {"total": 76, "additions": 54, "deletions": 22}, "files": [{"sha": "93969c12cd2ffa68a1d4c0f8ca16a8a0e705029b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/715a4e08d04dbefdf690ee11bb07521ad8a6b6ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/715a4e08d04dbefdf690ee11bb07521ad8a6b6ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=715a4e08d04dbefdf690ee11bb07521ad8a6b6ea", "patch": "@@ -1,3 +1,12 @@\n+2010-02-20  Alan Modra  <amodra@gmail.com>\n+\n+\tPR middle-end/42344\n+\t* cgraph.h (cgraph_make_decl_local): Declare.\n+\t* cgraph.c (cgraph_make_decl_local): New function.\n+\t(cgraph_make_node_local): Use it.\n+\t* cgraphunit.c (cgraph_function_versioning): Likewise.\n+\t* ipa.c (function_and_variable_visibility): Likewise.\n+\n 2010-02-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/43121"}, {"sha": "0e02bae140263f602ac325a6968c5eb9a0d710c7", "filename": "gcc/cgraph.c", "status": "modified", "additions": 41, "deletions": 12, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/715a4e08d04dbefdf690ee11bb07521ad8a6b6ea/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/715a4e08d04dbefdf690ee11bb07521ad8a6b6ea/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=715a4e08d04dbefdf690ee11bb07521ad8a6b6ea", "patch": "@@ -86,6 +86,7 @@ The callgraph:\n #include \"value-prof.h\"\n #include \"except.h\"\n #include \"diagnostic.h\"\n+#include \"rtl.h\"\n \n static void cgraph_node_remove_callers (struct cgraph_node *node);\n static inline void cgraph_edge_remove_caller (struct cgraph_edge *e);\n@@ -2190,6 +2191,42 @@ cgraph_node_can_be_local_p (struct cgraph_node *node)\n \t      || !node->local.externally_visible));\n }\n \n+/* Make DECL local.  FIXME: We shouldn't need to mess with rtl this early,\n+   but other code such as notice_global_symbol generates rtl.  */\n+void\n+cgraph_make_decl_local (tree decl)\n+{\n+  rtx rtl, symbol;\n+\n+  if (TREE_CODE (decl) == VAR_DECL)\n+    DECL_COMMON (decl) = 0;\n+  else if (TREE_CODE (decl) == FUNCTION_DECL)\n+    {\n+      DECL_COMDAT (decl) = 0;\n+      DECL_COMDAT_GROUP (decl) = 0;\n+      DECL_WEAK (decl) = 0;\n+      DECL_EXTERNAL (decl) = 0;\n+    }\n+  else\n+    gcc_unreachable ();\n+  TREE_PUBLIC (decl) = 0;\n+  if (!DECL_RTL_SET_P (decl))\n+    return;\n+\n+  /* Update rtl flags.  */\n+  make_decl_rtl (decl);\n+\n+  rtl = DECL_RTL (decl);\n+  if (!MEM_P (rtl))\n+    return;\n+\n+  symbol = XEXP (rtl, 0);\n+  if (GET_CODE (symbol) != SYMBOL_REF)\n+    return;\n+\n+  SYMBOL_REF_WEAK (symbol) = DECL_WEAK (decl);\n+}\n+\n /* Bring NODE local.  */\n void\n cgraph_make_node_local (struct cgraph_node *node)\n@@ -2198,19 +2235,11 @@ cgraph_make_node_local (struct cgraph_node *node)\n   if (DECL_COMDAT (node->decl) || DECL_EXTERNAL (node->decl))\n     {\n       struct cgraph_node *alias;\n-      DECL_COMDAT (node->decl) = 0;\n-      DECL_COMDAT_GROUP (node->decl) = 0;\n-      TREE_PUBLIC (node->decl) = 0;\n-      DECL_WEAK (node->decl) = 0;\n-      DECL_EXTERNAL (node->decl) = 0;\n+      cgraph_make_decl_local (node->decl);\n+\n       for (alias = node->same_body; alias; alias = alias->next)\n-\t{\n-\t  DECL_COMDAT (alias->decl) = 0;\n-\t  DECL_COMDAT_GROUP (alias->decl) = 0;\n-\t  TREE_PUBLIC (alias->decl) = 0;\n-\t  DECL_WEAK (alias->decl) = 0;\n-\t  DECL_EXTERNAL (alias->decl) = 0;\n-\t}\n+\tcgraph_make_decl_local (alias->decl);\n+\n       node->local.externally_visible = false;\n       node->local.local = true;\n       gcc_assert (cgraph_function_body_availability (node) == AVAIL_LOCAL);"}, {"sha": "802b28038d9eb2023194a658435ac68495b2ae02", "filename": "gcc/cgraph.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/715a4e08d04dbefdf690ee11bb07521ad8a6b6ea/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/715a4e08d04dbefdf690ee11bb07521ad8a6b6ea/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=715a4e08d04dbefdf690ee11bb07521ad8a6b6ea", "patch": "@@ -565,6 +565,7 @@ void dump_varpool_node (FILE *, struct varpool_node *);\n void varpool_finalize_decl (tree);\n bool decide_is_variable_needed (struct varpool_node *, tree);\n enum availability cgraph_variable_initializer_availability (struct varpool_node *);\n+void cgraph_make_decl_local (tree);\n void cgraph_make_node_local (struct cgraph_node *);\n bool cgraph_node_can_be_local_p (struct cgraph_node *);\n "}, {"sha": "399912bfbd562126448e3e38133eb10a28e5a6be", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/715a4e08d04dbefdf690ee11bb07521ad8a6b6ea/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/715a4e08d04dbefdf690ee11bb07521ad8a6b6ea/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=715a4e08d04dbefdf690ee11bb07521ad8a6b6ea", "patch": "@@ -2110,11 +2110,7 @@ cgraph_function_versioning (struct cgraph_node *old_version_node,\n      that is not weak also.\n      ??? We cannot use COMDAT linkage because there is no\n      ABI support for this.  */\n-  DECL_EXTERNAL (new_version_node->decl) = 0;\n-  DECL_COMDAT_GROUP (new_version_node->decl) = NULL_TREE;\n-  TREE_PUBLIC (new_version_node->decl) = 0;\n-  DECL_COMDAT (new_version_node->decl) = 0;\n-  DECL_WEAK (new_version_node->decl) = 0;\n+  cgraph_make_decl_local (new_version_node->decl);\n   DECL_VIRTUAL_P (new_version_node->decl) = 0;\n   new_version_node->local.externally_visible = 0;\n   new_version_node->local.local = 1;"}, {"sha": "63de1d99d44feec5afc35e3078f2730357e4613a", "filename": "gcc/ipa.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/715a4e08d04dbefdf690ee11bb07521ad8a6b6ea/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/715a4e08d04dbefdf690ee11bb07521ad8a6b6ea/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=715a4e08d04dbefdf690ee11bb07521ad8a6b6ea", "patch": "@@ -400,9 +400,7 @@ function_and_variable_visibility (bool whole_program)\n \t  && !DECL_EXTERNAL (node->decl))\n \t{\n \t  gcc_assert (whole_program || !TREE_PUBLIC (node->decl));\n-\t  TREE_PUBLIC (node->decl) = 0;\n-\t  DECL_COMDAT (node->decl) = 0;\n-\t  DECL_WEAK (node->decl) = 0;\n+\t  cgraph_make_decl_local (node->decl);\n \t}\n       node->local.local = (cgraph_only_called_directly_p (node)\n \t\t\t   && node->analyzed\n@@ -431,8 +429,7 @@ function_and_variable_visibility (bool whole_program)\n       if (!vnode->externally_visible)\n \t{\n \t  gcc_assert (whole_program || !TREE_PUBLIC (vnode->decl));\n-\t  TREE_PUBLIC (vnode->decl) = 0;\n-\t  DECL_COMMON (vnode->decl) = 0;\n+\t  cgraph_make_decl_local (vnode->decl);\n \t}\n      gcc_assert (TREE_STATIC (vnode->decl));\n     }"}]}