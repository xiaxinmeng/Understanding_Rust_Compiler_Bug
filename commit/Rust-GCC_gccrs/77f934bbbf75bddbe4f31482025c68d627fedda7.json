{"sha": "77f934bbbf75bddbe4f31482025c68d627fedda7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdmOTM0YmJiZjc1YmRkYmU0ZjMxNDgyMDI1YzY4ZDYyN2ZlZGRhNw==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-04-13T10:58:19Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-04-13T10:58:19Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r732", "tree": {"sha": "2d76bfd6162561702e92e4852a638d3bbc4f389a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d76bfd6162561702e92e4852a638d3bbc4f389a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77f934bbbf75bddbe4f31482025c68d627fedda7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77f934bbbf75bddbe4f31482025c68d627fedda7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77f934bbbf75bddbe4f31482025c68d627fedda7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77f934bbbf75bddbe4f31482025c68d627fedda7/comments", "author": null, "committer": null, "parents": [{"sha": "4af3895e739fefe2d158ab1c632d7d860abd4705", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4af3895e739fefe2d158ab1c632d7d860abd4705", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4af3895e739fefe2d158ab1c632d7d860abd4705"}], "stats": {"total": 36, "additions": 21, "deletions": 15}, "files": [{"sha": "4890d8871b685acb7b8d0c8f3b4e67055b76fec2", "filename": "gcc/c-decl.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f934bbbf75bddbe4f31482025c68d627fedda7/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f934bbbf75bddbe4f31482025c68d627fedda7/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=77f934bbbf75bddbe4f31482025c68d627fedda7", "patch": "@@ -2552,8 +2552,9 @@ init_decl_processing ()\n   /* In an ANSI C program, it is okay to supply built-in meanings\n      for these functions, since applications cannot validly use them\n      with any other meaning.\n-     However, a traditional C program can do so.  */\n-  if (!flag_traditional)\n+     However, a traditional C program can do so.\n+     Also, honor the -fno-builtin option.  */\n+  if (!flag_traditional && !flag_no_builtin)\n     {\n       builtin_function (\"abs\", int_ftype_int, BUILT_IN_ABS, 0);\n       builtin_function (\"fabs\", double_ftype_double, BUILT_IN_FABS, 0);\n@@ -4431,15 +4432,15 @@ finish_struct (t, fieldlist)\n \n   /* Install struct as DECL_CONTEXT of each field decl.\n      Also process specified field sizes.\n-     Set DECL_FRAME_SIZE to the specified size, or 0 if none specified.\n+     Set DECL_FIELD_SIZE to the specified size, or 0 if none specified.\n      The specified size is found in the DECL_INITIAL.\n      Store 0 there, except for \": 0\" fields (so we can find them\n      and delete them, below).  */\n \n   for (x = fieldlist; x; x = TREE_CHAIN (x))\n     {\n       DECL_CONTEXT (x) = t;\n-      DECL_FRAME_SIZE (x) = 0;\n+      DECL_FIELD_SIZE (x) = 0;\n \n       /* If any field is const, the structure type is pseudo-const.  */\n       if (TREE_READONLY (x))\n@@ -4514,7 +4515,7 @@ finish_struct (t, fieldlist)\n \t{\n \t  register int width = TREE_INT_CST_LOW (DECL_INITIAL (x));\n \n-\t  DECL_FRAME_SIZE (x) = width;\n+\t  DECL_FIELD_SIZE (x) = width;\n \t  DECL_BIT_FIELD (x) = 1;\n \t  DECL_INITIAL (x) = NULL;\n "}, {"sha": "943024c74d41986be1ccad9eb7eba6ee7d3426aa", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f934bbbf75bddbe4f31482025c68d627fedda7/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f934bbbf75bddbe4f31482025c68d627fedda7/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=77f934bbbf75bddbe4f31482025c68d627fedda7", "patch": "@@ -1282,7 +1282,7 @@ objc_copy_list (list, head)\n \t I create the situation it expects...s.naroff (7/23/89).\n \t */\n       if (DECL_BIT_FIELD (tail) && DECL_INITIAL (tail) == 0)\n-\tDECL_INITIAL (tail) = build_int_2 (DECL_FRAME_SIZE (tail), 0);\n+\tDECL_INITIAL (tail) = build_int_2 (DECL_FIELD_SIZE (tail), 0);\n \n       newlist = chainon (newlist, tail);\n       list = TREE_CHAIN (list);\n@@ -3866,7 +3866,7 @@ encode_field_decl (field_decl, str, format)\n      int format;\n {\n   if (DECL_BIT_FIELD (field_decl))\n-    encode_bitfield (DECL_FRAME_SIZE (field_decl), str, format);\n+    encode_bitfield (DECL_FIELD_SIZE (field_decl), str, format);\n   else\n     encode_type (TREE_TYPE (field_decl), str, format);\n }"}, {"sha": "dc62a6d58521060468fe45982dd72d3e6e41662a", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f934bbbf75bddbe4f31482025c68d627fedda7/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f934bbbf75bddbe4f31482025c68d627fedda7/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=77f934bbbf75bddbe4f31482025c68d627fedda7", "patch": "@@ -150,7 +150,7 @@ layout_decl (decl, known_align)\n {\n   register tree type = TREE_TYPE (decl);\n   register enum tree_code code = TREE_CODE (decl);\n-  int spec_size = DECL_FRAME_SIZE (decl);\n+  int spec_size = DECL_FIELD_SIZE (decl);\n \n   if (code == CONST_DECL)\n     return;"}, {"sha": "f4970863aeb6c0dc6d7c2da3791e035b805b995b", "filename": "gcc/tree.h", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f934bbbf75bddbe4f31482025c68d627fedda7/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f934bbbf75bddbe4f31482025c68d627fedda7/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=77f934bbbf75bddbe4f31482025c68d627fedda7", "patch": "@@ -673,9 +673,9 @@ struct tree_type\n #define DECL_RTL(NODE) ((NODE)->decl.rtl)\n /* For PARM_DECL, holds an RTL for the stack slot or register\n    where the data was actually passed.  */\n-#define DECL_INCOMING_RTL(NODE) ((NODE)->decl.saved_insns)\n+#define DECL_INCOMING_RTL(NODE) ((NODE)->decl.saved_insns.r)\n /* For FUNCTION_DECL, if it is inline, holds the saved insn chain.  */\n-#define DECL_SAVED_INSNS(NODE) ((NODE)->decl.saved_insns)\n+#define DECL_SAVED_INSNS(NODE) ((NODE)->decl.saved_insns.r)\n /* For FUNCTION_DECL for built-in function.  */\n #define DECL_FUNCTION_CODE(NODE) \\\n  ((enum built_in_function) (NODE)->decl.frame_size)\n@@ -684,6 +684,8 @@ struct tree_type\n /* For FUNCTION_DECL, if it is inline,\n    holds the size of the stack frame, as an integer.  */\n #define DECL_FRAME_SIZE(NODE) ((NODE)->decl.frame_size)\n+/* For a FIELD_DECL, holds the size of the member as an integer.  */\n+#define DECL_FIELD_SIZE(NODE) ((NODE)->decl.saved_insns.i)\n \n /* The DECL_VINDEX is used for FUNCTION_DECLS in two different ways.\n    Before the struct containing the FUNCTION_DECL is laid out,\n@@ -801,12 +803,15 @@ struct tree_decl\n   struct rtx_def *rtl;\t/* acts as link to register transfer language\n \t\t\t\t   (rtl) info */\n   /* For a FUNCTION_DECL, if inline, this is the size of frame needed.\n-     If built-in, this is the code for which built-in function.\n-     For any other kind of decl, this is the alignment.  */\n+     If built-in, this is the code for which built-in function.  */\n   int frame_size;\n-  struct rtx_def *saved_insns;\t/* For FUNCTION_DECLs: points to insn that\n-\t\t\t\t   constitutes its definition on the\n-\t\t\t\t   permanent obstack.  */\n+  /* For FUNCTION_DECLs: points to insn that constitutes its definition\n+     on the permanent obstack.  For any other kind of decl, this is the\n+     alignment.  */\n+  union {\n+    struct rtx_def *r;\n+    int i;\n+  } saved_insns;\n   union tree_node *vindex;\n   /* Points to a structure whose details depend on the language in use.  */\n   struct lang_decl *lang_specific;"}]}