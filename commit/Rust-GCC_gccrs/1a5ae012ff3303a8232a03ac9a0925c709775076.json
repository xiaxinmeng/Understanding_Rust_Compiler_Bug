{"sha": "1a5ae012ff3303a8232a03ac9a0925c709775076", "node_id": "C_kwDOANBUbNoAKDFhNWFlMDEyZmYzMzAzYTgyMzJhMDNhYzlhMDkyNWM3MDk3NzUwNzY", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2022-04-28T16:23:16Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2022-04-28T16:25:22Z"}, "message": "Document changes to CONVERT for -mabi-ieeelongdouble for POWER.\n\ngcc/fortran/ChangeLog:\n\n\t* gfortran.texi: Mention r16_ieee and r16_ibm.\n\t* invoke.texi: Likewise.", "tree": {"sha": "eb00457885ac843dd37e985863740256809a12b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb00457885ac843dd37e985863740256809a12b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a5ae012ff3303a8232a03ac9a0925c709775076", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a5ae012ff3303a8232a03ac9a0925c709775076", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a5ae012ff3303a8232a03ac9a0925c709775076", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a5ae012ff3303a8232a03ac9a0925c709775076/comments", "author": null, "committer": null, "parents": [{"sha": "d993c6dea7c664aa26ee04210c471cfcb4e7d0e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d993c6dea7c664aa26ee04210c471cfcb4e7d0e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d993c6dea7c664aa26ee04210c471cfcb4e7d0e0"}], "stats": {"total": 48, "additions": 39, "deletions": 9}, "files": [{"sha": "6f622fb98987a0b63422915e98ed1edc215c2a9d", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5ae012ff3303a8232a03ac9a0925c709775076/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5ae012ff3303a8232a03ac9a0925c709775076/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=1a5ae012ff3303a8232a03ac9a0925c709775076", "patch": "@@ -589,7 +589,7 @@ Malformed environment variables are silently ignored.\n * GFORTRAN_SHOW_LOCUS::  Show location for runtime errors\n * GFORTRAN_OPTIONAL_PLUS:: Print leading + where permitted\n * GFORTRAN_LIST_SEPARATOR::  Separator for list output\n-* GFORTRAN_CONVERT_UNIT::  Set endianness for unformatted I/O\n+* GFORTRAN_CONVERT_UNIT::  Set conversion for unformatted I/O\n * GFORTRAN_ERROR_BACKTRACE:: Show backtrace on run-time errors\n * GFORTRAN_FORMATTED_BUFFER_SIZE:: Buffer size for formatted files\n * GFORTRAN_UNFORMATTED_BUFFER_SIZE:: Buffer size for unformatted files\n@@ -686,11 +686,12 @@ when @command{a.out} is the compiled Fortran program that you want to run.\n Default is a single space.\n \n @node GFORTRAN_CONVERT_UNIT\n-@section @env{GFORTRAN_CONVERT_UNIT}---Set endianness for unformatted I/O\n+@section @env{GFORTRAN_CONVERT_UNIT}---Set conversion for unformatted I/O\n \n By setting the @env{GFORTRAN_CONVERT_UNIT} variable, it is possible\n to change the representation of data for unformatted files.\n-The syntax for the @env{GFORTRAN_CONVERT_UNIT} variable is:\n+The syntax for the @env{GFORTRAN_CONVERT_UNIT} variable for\n+most systems is:\n @smallexample\n GFORTRAN_CONVERT_UNIT: mode | mode ';' exception | exception ;\n mode: 'native' | 'swap' | 'big_endian' | 'little_endian' ;\n@@ -711,14 +712,24 @@ the modes are the same as for the @code{CONVERT} specifier:\n for unformatted files.\n @item @code{BIG_ENDIAN} Use the big-endian format for unformatted files.\n @end itemize\n+For POWER systems which support @option{-mabi=ieeelongdouble},\n+there are additional options, which can be combined with the\n+others with commas. Those are\n+@itemize @w{}\n+@item @code{R16_IEEE} Use IEEE 128-bit format for @code{REAL(KIND=16)}.\n+@item @code{R16_IBM} Use IBM @code{long double} format for\n+@code{REAL(KIND=16)}.\n+@end itemize\n A missing mode for an exception is taken to mean @code{BIG_ENDIAN}.\n Examples of values for @env{GFORTRAN_CONVERT_UNIT} are:\n @itemize @w{}\n-@item @code{'big_endian'}  Do all unformatted I/O in big_endian mode.\n+@item @code{'big_endian'}  Do all unformatted I/O in big_endian mod.e\n @item @code{'little_endian;native:10-20,25'}  Do all unformatted I/O\n in little_endian mode, except for units 10 to 20 and 25, which are in\n native format.\n @item @code{'10-20'}  Units 10 to 20 are big-endian, the rest is native.\n+@item @code{'big_endian,r16_ibm'} Do all unformatted I/O in big-endian\n+mode and use IBM long double for output of @code{REAL(KIND=16)} values.\n @end itemize\n \n Setting the environment variables should be done on the command\n@@ -1736,7 +1747,7 @@ the @code{CONVERT} specifier on the @code{OPEN} statement.\n @xref{GFORTRAN_CONVERT_UNIT}, for an alternative way of specifying\n the data format via an environment variable.\n \n-Valid values for @code{CONVERT} are:\n+Valid values for @code{CONVERT} on most systems are:\n @itemize @w{}\n @item @code{CONVERT='NATIVE'} Use the native format.  This is the default.\n @item @code{CONVERT='SWAP'} Swap between little- and big-endian.\n@@ -1745,6 +1756,15 @@ for unformatted files.\n @item @code{CONVERT='BIG_ENDIAN'} Use the big-endian representation for\n unformatted files.\n @end itemize\n+On POWER systems which support @option{-mabi=ieeelongdouble},\n+there are additional options, which can be combined with the others\n+with commas. Those are\n+@itemize @w{}\n+@item @code{CONVERT='R16_IEEE'} Use IEEE 128-bit format for\n+@code{REAL(KIND=16)}.\n+@item @code{CONVERT='R16_IBM'} Use IBM @code{long double} format for\n+real@code{REAL(KIND=16)}.\n+@end itemize\n \n Using the option could look like this:\n @smallexample"}, {"sha": "c0932f6cd703e0101fc614510acd855f2e38efef", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a5ae012ff3303a8232a03ac9a0925c709775076/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a5ae012ff3303a8232a03ac9a0925c709775076/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=1a5ae012ff3303a8232a03ac9a0925c709775076", "patch": "@@ -1435,10 +1435,20 @@ These options affect the runtime behavior of programs compiled with GNU Fortran.\n @item -fconvert=@var{conversion}\n @opindex @code{fconvert=}@var{conversion}\n Specify the representation of data for unformatted files.  Valid\n-values for conversion are: @samp{native}, the default; @samp{swap},\n-swap between big- and little-endian; @samp{big-endian}, use big-endian\n-representation for unformatted files; @samp{little-endian}, use little-endian\n-representation for unformatted files.\n+values for conversion on most systems are: @samp{native}, the default;\n+@samp{swap}, swap between big- and little-endian; @samp{big-endian}, use\n+big-endian representation for unformatted files; @samp{little-endian}, use\n+little-endian representation for unformatted files.\n+\n+On POWER systems which suppport @option{-mabi=ieeelongdouble},\n+there are additional options, which can be combined with others with\n+commas.  Those are\n+@itemize @w{}\n+@item @option{-fconvert=r16_ieee} Use IEEE 128-bit format for\n+@code{REAL(KIND=16)}.\n+@item @option{-fconvert=r16_ibm} Use IBM long double format for\n+@code{REAL(KIND=16)}.\n+@end itemize\n \n @emph{This option has an effect only when used in the main program.\n The @code{CONVERT} specifier and the GFORTRAN_CONVERT_UNIT environment"}]}