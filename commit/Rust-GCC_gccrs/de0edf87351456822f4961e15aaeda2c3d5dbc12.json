{"sha": "de0edf87351456822f4961e15aaeda2c3d5dbc12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUwZWRmODczNTE0NTY4MjJmNDk2MWUxNWFhZWRhMmMzZDVkYmMxMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-10-18T08:40:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-10-18T08:40:54Z"}, "message": "re PR tree-optimization/87087 (Optimization hangs up and consumes over 15Gb of memory)\n\n2018-10-18  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/87087\n\tRevert\n\t2018-02-07  Richard Biener  <rguenther@suse.de>\n\n        PR tree-optimization/84204\n        * tree-chrec.c (chrec_fold_plus_1): Remove size limiting in\n        this place.\n\n\t* gcc.dg/torture/pr87087.c: New testcase.\n\t* gcc.dg/graphite/pr84204.c: XFAIL.\n\t* gcc.dg/graphite/pr85935.c: Likewise.\n\nFrom-SVN: r265261", "tree": {"sha": "2ae67bff1bcb8773f1c602f05e66383bac0ffded", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ae67bff1bcb8773f1c602f05e66383bac0ffded"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de0edf87351456822f4961e15aaeda2c3d5dbc12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de0edf87351456822f4961e15aaeda2c3d5dbc12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de0edf87351456822f4961e15aaeda2c3d5dbc12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de0edf87351456822f4961e15aaeda2c3d5dbc12/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "294973a49751a7fc2d6a7a9f2749ce851a368c04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/294973a49751a7fc2d6a7a9f2749ce851a368c04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/294973a49751a7fc2d6a7a9f2749ce851a368c04"}], "stats": {"total": 56, "additions": 53, "deletions": 3}, "files": [{"sha": "1177676472777f0117020bc302282b32ea08f4b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0edf87351456822f4961e15aaeda2c3d5dbc12/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0edf87351456822f4961e15aaeda2c3d5dbc12/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de0edf87351456822f4961e15aaeda2c3d5dbc12", "patch": "@@ -1,3 +1,13 @@\n+2018-10-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/87087\n+\tRevert\n+\t2018-02-07  Richard Biener  <rguenther@suse.de>\n+\n+        PR tree-optimization/84204\n+        * tree-chrec.c (chrec_fold_plus_1): Remove size limiting in\n+        this place.\n+\n 2018-10-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/87537"}, {"sha": "9cf4cbc40195ef2fa9bd24ffd2f6fb2dbbd84e77", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0edf87351456822f4961e15aaeda2c3d5dbc12/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0edf87351456822f4961e15aaeda2c3d5dbc12/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=de0edf87351456822f4961e15aaeda2c3d5dbc12", "patch": "@@ -1,3 +1,10 @@\n+2018-10-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/87087\n+\t* gcc.dg/torture/pr87087.c: New testcase.\n+\t* gcc.dg/graphite/pr84204.c: XFAIL.\n+\t* gcc.dg/graphite/pr85935.c: Likewise.\n+\n 2018-10-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/87537"}, {"sha": "9e2d39ed5cc67ae0db61738fa0181bca96775254", "filename": "gcc/testsuite/gcc.dg/graphite/pr84204.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0edf87351456822f4961e15aaeda2c3d5dbc12/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr84204.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0edf87351456822f4961e15aaeda2c3d5dbc12/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr84204.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr84204.c?ref=de0edf87351456822f4961e15aaeda2c3d5dbc12", "patch": "@@ -1,5 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O -floop-parallelize-all -fno-tree-loop-im --param scev-max-expr-size=3\" } */\n+/* The fix for PR84204 was reverted.  */\n+/* { dg-additional-options \"--param graphite-allow-codegen-errors=1\" } */\n \n int oc;\n "}, {"sha": "4c05f546dc4ef868dbeb85175cab59150a9d04c3", "filename": "gcc/testsuite/gcc.dg/graphite/pr85935.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0edf87351456822f4961e15aaeda2c3d5dbc12/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr85935.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0edf87351456822f4961e15aaeda2c3d5dbc12/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr85935.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr85935.c?ref=de0edf87351456822f4961e15aaeda2c3d5dbc12", "patch": "@@ -1,5 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O -floop-parallelize-all -fno-tree-loop-im --param scev-max-expr-size=3\" } */\n+/* The fix for PR84204 was reverted.  */\n+/* { dg-additional-options \"--param graphite-allow-codegen-errors=1\" } */\n \n typedef int dq;\n "}, {"sha": "2a076209c7ef1fa2a4b77afea9b4e671688f92ba", "filename": "gcc/testsuite/gcc.dg/torture/pr87087.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0edf87351456822f4961e15aaeda2c3d5dbc12/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87087.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0edf87351456822f4961e15aaeda2c3d5dbc12/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87087.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87087.c?ref=de0edf87351456822f4961e15aaeda2c3d5dbc12", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target int32plus } */\n+\n+int b;\n+int d;\n+void e()\n+{\n+  unsigned f;\n+  unsigned g;\n+  int h;\n+  long i = 901380;\n+  for (;;) {\n+      d = 0;\n+      for (; d; d++) {\n+\t  h = 143366620;\n+\t  f = 0;\n+\t  for (; f < 15; f += 3) {\n+\t      g = 0;\n+\t      for (; g < 9; g++)\n+\t\tb = h = i - (h << 5) + h;\n+\t  }\n+      }\n+      i = 0;\n+  }\n+}"}, {"sha": "a218327d772c56b51a25b61c4ee4199af4b34ada", "filename": "gcc/tree-chrec.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0edf87351456822f4961e15aaeda2c3d5dbc12/gcc%2Ftree-chrec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0edf87351456822f4961e15aaeda2c3d5dbc12/gcc%2Ftree-chrec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.c?ref=de0edf87351456822f4961e15aaeda2c3d5dbc12", "patch": "@@ -328,10 +328,12 @@ chrec_fold_plus_1 (enum tree_code code, tree type,\n \n \tdefault:\n \t  {\n-\t    if (tree_contains_chrecs (op0, NULL)\n-\t\t|| tree_contains_chrecs (op1, NULL))\n+\t    int size = 0;\n+\t    if ((tree_contains_chrecs (op0, &size)\n+\t\t || tree_contains_chrecs (op1, &size))\n+\t\t&& size < PARAM_VALUE (PARAM_SCEV_MAX_EXPR_SIZE))\n \t      return build2 (code, type, op0, op1);\n-\t    else\n+\t    else if (size < PARAM_VALUE (PARAM_SCEV_MAX_EXPR_SIZE))\n \t      {\n \t\tif (code == POINTER_PLUS_EXPR)\n \t\t  return fold_build_pointer_plus (fold_convert (type, op0),\n@@ -341,6 +343,8 @@ chrec_fold_plus_1 (enum tree_code code, tree type,\n \t\t\t\t      fold_convert (type, op0),\n \t\t\t\t      fold_convert (type, op1));\n \t      }\n+\t    else\n+\t      return chrec_dont_know;\n \t  }\n \t}\n     }"}]}