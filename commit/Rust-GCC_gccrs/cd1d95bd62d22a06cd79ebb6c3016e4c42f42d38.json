{"sha": "cd1d95bd62d22a06cd79ebb6c3016e4c42f42d38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QxZDk1YmQ2MmQyMmEwNmNkNzllYmI2YzMwMTZlNGM0MmY0MmQzOA==", "commit": {"author": {"name": "Doug Evans", "email": "dje@google.com", "date": "2012-11-29T21:23:22Z"}, "committer": {"name": "Doug Evans", "email": "devans@gcc.gnu.org", "date": "2012-11-29T21:23:22Z"}, "message": "validate_failures.py: Rename variable manifest_name to manifest_path everywhere.\n\n\t* testsuite-management/validate_failures.py: Rename variable\n\tmanifest_name to manifest_path everywhere.\n\nFrom-SVN: r193965", "tree": {"sha": "2882599c73bb8fa289621b3797b42fb6d9ddf5a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2882599c73bb8fa289621b3797b42fb6d9ddf5a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd1d95bd62d22a06cd79ebb6c3016e4c42f42d38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd1d95bd62d22a06cd79ebb6c3016e4c42f42d38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd1d95bd62d22a06cd79ebb6c3016e4c42f42d38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd1d95bd62d22a06cd79ebb6c3016e4c42f42d38/comments", "author": null, "committer": null, "parents": [{"sha": "bc7d0e9006266cf3e0963e7311cf3ba9db56e3d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc7d0e9006266cf3e0963e7311cf3ba9db56e3d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc7d0e9006266cf3e0963e7311cf3ba9db56e3d5"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "386fd81c6a5de0e15c72260635beea190d579117", "filename": "contrib/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1d95bd62d22a06cd79ebb6c3016e4c42f42d38/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1d95bd62d22a06cd79ebb6c3016e4c42f42d38/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=cd1d95bd62d22a06cd79ebb6c3016e4c42f42d38", "patch": "@@ -1,5 +1,8 @@\n 2012-11-29  Doug Evans  <dje@google.com>\n \n+\t* testsuite-management/validate_failures.py: Rename variable\n+\tmanifest_name to manifest_path everywhere.\n+\n \t* testsuite-management/validate_failures.py (CompareBuilds): Pass\n \toptions.results to GetSumFiles for clean build.\n "}, {"sha": "d9eb7319e38af1e6498396cf40c0f6b12e4ea6a9", "filename": "contrib/testsuite-management/validate_failures.py", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1d95bd62d22a06cd79ebb6c3016e4c42f42d38/contrib%2Ftestsuite-management%2Fvalidate_failures.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1d95bd62d22a06cd79ebb6c3016e4c42f42d38/contrib%2Ftestsuite-management%2Fvalidate_failures.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ftestsuite-management%2Fvalidate_failures.py?ref=cd1d95bd62d22a06cd79ebb6c3016e4c42f42d38", "patch": "@@ -220,16 +220,16 @@ def ParseSummary(sum_fname):\n   return result_set\n \n \n-def GetManifest(manifest_name):\n+def GetManifest(manifest_path):\n   \"\"\"Build a set of expected failures from the manifest file.\n \n   Each entry in the manifest file should have the format understood\n   by the TestResult constructor.\n \n   If no manifest file exists for this target, it returns an empty set.\n   \"\"\"\n-  if os.path.exists(manifest_name):\n-    return ParseSummary(manifest_name)\n+  if os.path.exists(manifest_path):\n+    return ParseManifest(manifest_path)\n   else:\n     return set()\n \n@@ -334,14 +334,14 @@ def CheckExpectedResults(options):\n     (srcdir, target, valid_build) = GetBuildData(options)\n     if not valid_build:\n       return False\n-    manifest_name = _MANIFEST_PATH_PATTERN % (srcdir, target)\n+    manifest_path = _MANIFEST_PATH_PATTERN % (srcdir, target)\n   else:\n-    manifest_name = options.manifest\n-    if not os.path.exists(manifest_name):\n-      Error('Manifest file %s does not exist.' % manifest_name)\n+    manifest_path = options.manifest\n+    if not os.path.exists(manifest_path):\n+      Error('Manifest file %s does not exist.' % manifest_path)\n \n-  print 'Manifest:         %s' % manifest_name\n-  manifest = GetManifest(manifest_name)\n+  print 'Manifest:         %s' % manifest_path\n+  manifest = GetManifest(manifest_path)\n   sum_files = GetSumFiles(options.results, options.build_dir)\n   actual = GetResults(sum_files)\n \n@@ -357,14 +357,14 @@ def ProduceManifest(options):\n   if not valid_build:\n     return False\n \n-  manifest_name = _MANIFEST_PATH_PATTERN % (srcdir, target)\n-  if os.path.exists(manifest_name) and not options.force:\n+  manifest_path = _MANIFEST_PATH_PATTERN % (srcdir, target)\n+  if os.path.exists(manifest_path) and not options.force:\n     Error('Manifest file %s already exists.\\nUse --force to overwrite.' %\n-          manifest_name)\n+          manifest_path)\n \n   sum_files = GetSumFiles(options.results, options.build_dir)\n   actual = GetResults(sum_files)\n-  manifest_file = open(manifest_name, 'w')\n+  manifest_file = open(manifest_path, 'w')\n   for result in sorted(actual):\n     print result\n     manifest_file.write('%s\\n' % result)"}]}