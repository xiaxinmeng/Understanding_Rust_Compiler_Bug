{"sha": "c2722ef63b29f3ed9f0536e26cf756f902dee97f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI3MjJlZjYzYjI5ZjNlZDlmMDUzNmUyNmNmNzU2ZjkwMmRlZTk3Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-29T23:04:49Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-29T23:04:49Z"}, "message": "(expand_expr, case COMPONENT_REF): Don't try to directly load a complex.\n\nFrom-SVN: r12867", "tree": {"sha": "1f226abf87841585cd723db81d8e0bb2e8057550", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f226abf87841585cd723db81d8e0bb2e8057550"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2722ef63b29f3ed9f0536e26cf756f902dee97f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2722ef63b29f3ed9f0536e26cf756f902dee97f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2722ef63b29f3ed9f0536e26cf756f902dee97f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2722ef63b29f3ed9f0536e26cf756f902dee97f/comments", "author": null, "committer": null, "parents": [{"sha": "28eb1cb8c354240671f8651f7ff7e1cf7356e6e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28eb1cb8c354240671f8651f7ff7e1cf7356e6e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28eb1cb8c354240671f8651f7ff7e1cf7356e6e3"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "c065e76e7b985ee2220edcf0eae7469077403ee4", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2722ef63b29f3ed9f0536e26cf756f902dee97f/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2722ef63b29f3ed9f0536e26cf756f902dee97f/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=c2722ef63b29f3ed9f0536e26cf756f902dee97f", "patch": "@@ -5518,7 +5518,9 @@ expand_expr (exp, target, tmode, modifier)\n \t    || GET_CODE (op0) == REG || GET_CODE (op0) == SUBREG\n \t    || (modifier != EXPAND_CONST_ADDRESS\n \t\t&& modifier != EXPAND_INITIALIZER\n-\t\t&& ((mode1 != BLKmode && ! direct_load[(int) mode1])\n+\t\t&& ((mode1 != BLKmode && ! direct_load[(int) mode1]\n+\t\t     && GET_MODE_CLASS (mode) != MODE_COMPLEX_INT\n+\t\t     && GET_MODE_CLASS (mode) != MODE_COMPLEX_FLOAT)\n \t\t    /* If the field isn't aligned enough to fetch as a memref,\n \t\t       fetch it as a bit field.  */\n \t\t    || (SLOW_UNALIGNED_ACCESS"}]}