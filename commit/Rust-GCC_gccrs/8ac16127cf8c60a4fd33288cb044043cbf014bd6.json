{"sha": "8ac16127cf8c60a4fd33288cb044043cbf014bd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFjMTYxMjdjZjhjNjBhNGZkMzMyODhjYjA0NDA0M2NiZjAxNGJkNg==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2013-01-03T20:06:49Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2013-01-03T20:06:49Z"}, "message": "re PR bootstrap/50167 (gmp memory functions are extern \"C\" (graphite))\n\n2013-01-03  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR bootstrap/50167\ngcc/\n\t* graphite-interchange.c (pdr_stride_in_loop): Use gmp_fprintf.\n\t* graphite-poly.c (debug_gmp_value): Likewise.\n\n\tPR bootstrap/50177\nlibcpp/\n\t* line-map.c (get_combined_adhoc_loc): Cast from extern \"C\" type.\n\t(new_linemap): Likewise.\n\t(linemap_enter_macro): Likewise.\n\nFrom-SVN: r194868", "tree": {"sha": "8333424ab8e4eaff4241a11934358310633c59e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8333424ab8e4eaff4241a11934358310633c59e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ac16127cf8c60a4fd33288cb044043cbf014bd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ac16127cf8c60a4fd33288cb044043cbf014bd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ac16127cf8c60a4fd33288cb044043cbf014bd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ac16127cf8c60a4fd33288cb044043cbf014bd6/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ffa6d5dfbfd38f61a92c5dc7ff18074f893da1c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa6d5dfbfd38f61a92c5dc7ff18074f893da1c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffa6d5dfbfd38f61a92c5dc7ff18074f893da1c4"}], "stats": {"total": 49, "additions": 28, "deletions": 21}, "files": [{"sha": "80bfc2f86b678620a46d70d90773e5663242dd0b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ac16127cf8c60a4fd33288cb044043cbf014bd6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ac16127cf8c60a4fd33288cb044043cbf014bd6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ac16127cf8c60a4fd33288cb044043cbf014bd6", "patch": "@@ -1,3 +1,9 @@\n+2013-01-03  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR bootstrap/50167\n+\t* graphite-interchange.c (pdr_stride_in_loop): Use gmp_fprintf.\n+\t* graphite-poly.c (debug_gmp_value): Likewise.\n+\n 2013-01-03  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/55712"}, {"sha": "4b9762777bc921643ced9afc5e9ddd4d733a1622", "filename": "gcc/graphite-interchange.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ac16127cf8c60a4fd33288cb044043cbf014bd6/gcc%2Fgraphite-interchange.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ac16127cf8c60a4fd33288cb044043cbf014bd6/gcc%2Fgraphite-interchange.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-interchange.c?ref=8ac16127cf8c60a4fd33288cb044043cbf014bd6", "patch": "@@ -240,15 +240,8 @@ pdr_stride_in_loop (mpz_t stride, graphite_dim_t depth, poly_dr_p pdr)\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n-      char *str;\n-      void (*gmp_free) (void *, size_t);\n-\n-      fprintf (dump_file, \"\\nStride in BB_%d, DR_%d, depth %d:\",\n-\t       pbb_index (pbb), PDR_ID (pdr), (int) depth);\n-      str = mpz_get_str (0, 10, stride);\n-      fprintf (dump_file, \"  %s \", str);\n-      mp_get_memory_functions (NULL, NULL, &gmp_free);\n-      (*gmp_free) (str, strlen (str) + 1);\n+      gmp_fprintf (dump_file, \"\\nStride in BB_%d, DR_%d, depth %d:  %Zd \",\n+\t\t   pbb_index (pbb), PDR_ID (pdr), (int) depth, stride);\n     }\n }\n "}, {"sha": "066238748843d29105801e02c327ac8d57dfa6d6", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ac16127cf8c60a4fd33288cb044043cbf014bd6/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ac16127cf8c60a4fd33288cb044043cbf014bd6/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=8ac16127cf8c60a4fd33288cb044043cbf014bd6", "patch": "@@ -55,12 +55,7 @@ along with GCC; see the file COPYING3.  If not see\n DEBUG_FUNCTION void\n debug_gmp_value (mpz_t val)\n {\n-  char *str = mpz_get_str (0, 10, val);\n-  void (*gmp_free) (void *, size_t);\n-\n-  fprintf (stderr, \"%s\", str);\n-  mp_get_memory_functions (NULL, NULL, &gmp_free);\n-  (*gmp_free) (str, strlen (str) + 1);\n+  gmp_fprintf (stderr, \"%Zd\", val);\n }\n \n /* Return the maximal loop depth in SCOP.  */"}, {"sha": "332efa3ab9d9ca170d9f17af94e6fceafbd00f6f", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ac16127cf8c60a4fd33288cb044043cbf014bd6/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ac16127cf8c60a4fd33288cb044043cbf014bd6/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=8ac16127cf8c60a4fd33288cb044043cbf014bd6", "patch": "@@ -1,3 +1,10 @@\n+2013-01-03  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR bootstrap/50177\n+\t* line-map.c (get_combined_adhoc_loc): Cast from extern \"C\" type.\n+\t(new_linemap): Likewise.\n+\t(linemap_enter_macro): Likewise.\n+\n 2012-12-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/55380"}, {"sha": "49b94871baaf0c34d7c4693cf90098d4c0e41a7a", "filename": "libcpp/line-map.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ac16127cf8c60a4fd33288cb044043cbf014bd6/libcpp%2Fline-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ac16127cf8c60a4fd33288cb044043cbf014bd6/libcpp%2Fline-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fline-map.c?ref=8ac16127cf8c60a4fd33288cb044043cbf014bd6", "patch": "@@ -122,8 +122,10 @@ get_combined_adhoc_loc (struct line_maps *set,\n \t{\n \t  char *orig_data = (char *) set->location_adhoc_data_map.data;\n \t  long long offset;\n-\t  line_map_realloc reallocator\n-\t      = set->reallocator ? set->reallocator : xrealloc;\n+\t  /* Cast away extern \"C\" from the type of xrealloc.  */\n+\t  line_map_realloc reallocator = (set->reallocator\n+\t\t\t\t\t  ? set->reallocator\n+\t\t\t\t\t  : (line_map_realloc) xrealloc);\n \n \t  if (set->location_adhoc_data_map.allocated == 0)\n \t    set->location_adhoc_data_map.allocated = 128;\n@@ -217,8 +219,10 @@ new_linemap (struct line_maps *set,\n       /* We ran out of allocated line maps. Let's allocate more.  */\n       unsigned alloc_size;\n \n-      line_map_realloc reallocator\n-\t= set->reallocator ? set->reallocator : xrealloc;\n+      /* Cast away extern \"C\" from the type of xrealloc.  */\n+      line_map_realloc reallocator = (set->reallocator\n+\t\t\t\t      ? set->reallocator\n+\t\t\t\t      : (line_map_realloc) xrealloc);\n       line_map_round_alloc_size_func round_alloc_size =\n \tset->round_alloc_size;\n \n@@ -430,8 +434,10 @@ linemap_enter_macro (struct line_maps *set, struct cpp_hashnode *macro_node,\n {\n   struct line_map *map;\n   source_location start_location;\n-  line_map_realloc reallocator\n-    = set->reallocator ? set->reallocator : xrealloc;\n+  /* Cast away extern \"C\" from the type of xrealloc.  */\n+  line_map_realloc reallocator = (set->reallocator\n+\t\t\t\t  ? set->reallocator\n+\t\t\t\t  : (line_map_realloc) xrealloc);\n \n   start_location = LINEMAPS_MACRO_LOWEST_LOCATION (set) - num_tokens;\n "}]}