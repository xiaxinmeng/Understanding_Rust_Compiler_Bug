{"sha": "06d481d044ca7126f9d298ad9a4074fafde47ee8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZkNDgxZDA0NGNhNzEyNmY5ZDI5OGFkOWE0MDc0ZmFmZGU0N2VlOA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-01-28T09:25:30Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-01-28T09:25:30Z"}, "message": "Fix 2 typos in documentation of libstdc++.\n\n\tPR libstdc++/93478\n\t* include/std/atomic: Fix typo.\n\t* include/std/optional: Likewise.", "tree": {"sha": "e700fc8789b28baaef7dc46866e9a21c8cbba4a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e700fc8789b28baaef7dc46866e9a21c8cbba4a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06d481d044ca7126f9d298ad9a4074fafde47ee8", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl4v/goACgkQTcGC3A+n\nN4WQTggAmPfPPX0Vq0KVBvbplSu61SV+EOnuZ/ZASO3dbGB86n2g2Ef4wny7+o29\nauE6vMo9c+t8JVPFU8R/1FJIzASm6xaP004TCBRHIL8a8iND/EqeRYFUNcHLWC9p\nrEegRz/DCNpNEcM931wANjT9ETKGLAmCTcfdk1FfZMKgx6zYKBOdIo+Nqgp+Ml35\nxphAW7JwagkeP+xwY0bkZLZaddBuqP9+GYKXVrxvETbgNg2F++Vdoz09MnyvjJ+w\nOChzWnug3zxb8/1BL2SCdB5epf62sCKh0LBfxRS4UeIeODquK97FenBbKKBqlsXA\n1hlrk6rCjKfIH38f3Pzz+PSGEORV4w==\n=+pQf\n-----END PGP SIGNATURE-----", "payload": "tree e700fc8789b28baaef7dc46866e9a21c8cbba4a2\nparent bff948aa337807260344c83ac9079d6386410094\nauthor Martin Liska <mliska@suse.cz> 1580203530 +0100\ncommitter Martin Liska <mliska@suse.cz> 1580203530 +0100\n\nFix 2 typos in documentation of libstdc++.\n\n\tPR libstdc++/93478\n\t* include/std/atomic: Fix typo.\n\t* include/std/optional: Likewise.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06d481d044ca7126f9d298ad9a4074fafde47ee8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06d481d044ca7126f9d298ad9a4074fafde47ee8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06d481d044ca7126f9d298ad9a4074fafde47ee8/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bff948aa337807260344c83ac9079d6386410094", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bff948aa337807260344c83ac9079d6386410094", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bff948aa337807260344c83ac9079d6386410094"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "03061e6633336d2a66a169dd7fa0562ccfcf0d55", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06d481d044ca7126f9d298ad9a4074fafde47ee8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06d481d044ca7126f9d298ad9a4074fafde47ee8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=06d481d044ca7126f9d298ad9a4074fafde47ee8", "patch": "@@ -1,3 +1,9 @@\n+2020-01-28  Martin Liska  <mliska@suse.cz>\n+\n+\tPR libstdc++/93478\n+\t* include/std/atomic: Fix typo.\n+\t* include/std/optional: Likewise.\n+\n 2020-01-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* configure: Regenerate."}, {"sha": "40f23bdfc962887423475a9c79f30343475affa6", "filename": "libstdc++-v3/include/std/atomic", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06d481d044ca7126f9d298ad9a4074fafde47ee8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06d481d044ca7126f9d298ad9a4074fafde47ee8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic?ref=06d481d044ca7126f9d298ad9a4074fafde47ee8", "patch": "@@ -174,7 +174,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  @brief Generic atomic type, primary class template.\n    *\n-   *  @tparam _Tp  Type to be made atomic, must be trivally copyable.\n+   *  @tparam _Tp  Type to be made atomic, must be trivially copyable.\n    */\n   template<typename _Tp>\n     struct atomic"}, {"sha": "b920a1453bad5ed6016e87fd1e3431c1ebd1aa65", "filename": "libstdc++-v3/include/std/optional", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06d481d044ca7126f9d298ad9a4074fafde47ee8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06d481d044ca7126f9d298ad9a4074fafde47ee8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional?ref=06d481d044ca7126f9d298ad9a4074fafde47ee8", "patch": "@@ -453,7 +453,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     * Such a separate base class template is necessary in order to\n     * conditionally make copy/move constructors trivial.\n     *\n-    * When the contained value is trivally copy/move constructible,\n+    * When the contained value is trivially copy/move constructible,\n     * the copy/move constructors of _Optional_base will invoke the\n     * trivial copy/move constructor of _Optional_payload. Otherwise,\n     * they will invoke _Optional_payload(bool, const _Optional_payload&)"}]}