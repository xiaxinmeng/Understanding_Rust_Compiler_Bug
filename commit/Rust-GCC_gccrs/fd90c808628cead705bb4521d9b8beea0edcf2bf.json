{"sha": "fd90c808628cead705bb4521d9b8beea0edcf2bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ5MGM4MDg2MjhjZWFkNzA1YmI0NTIxZDliOGJlZWEwZWRjZjJiZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-07-22T13:57:04Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-22T13:57:04Z"}, "message": "[Ada] Fix missing Constraint_Error for Enum_Val attribute\n\nThis fixes an old issue involving the Enum_Val attribute: it does not\nalways raise a Constraint_Error exception when the specified value is\nnot valid for the enumeration type (instead a modulo computation is\napplied to the value).\n\n2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* exp_attr.adb (Expand_N_Attribute_Reference)\n\t<Attribute_Enum_Val>: Set No_Truncation on the\n\tN_Unchecked_Type_Conversion built around the argument passed to\n\tthe attribute.\n\ngcc/testsuite/\n\n\t* gnat.dg/enum_val1.adb: New testcase.\n\nFrom-SVN: r273676", "tree": {"sha": "f8e4700d32a319c8b8d65fa46b4b2173abe99297", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8e4700d32a319c8b8d65fa46b4b2173abe99297"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd90c808628cead705bb4521d9b8beea0edcf2bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd90c808628cead705bb4521d9b8beea0edcf2bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd90c808628cead705bb4521d9b8beea0edcf2bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd90c808628cead705bb4521d9b8beea0edcf2bf/comments", "author": null, "committer": null, "parents": [{"sha": "7ddc639b7717278075ab1989568d1769ccc040e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ddc639b7717278075ab1989568d1769ccc040e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ddc639b7717278075ab1989568d1769ccc040e1"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "85a0a268b2259272f95ef3d80759c48d2d682095", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd90c808628cead705bb4521d9b8beea0edcf2bf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd90c808628cead705bb4521d9b8beea0edcf2bf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fd90c808628cead705bb4521d9b8beea0edcf2bf", "patch": "@@ -1,3 +1,10 @@\n+2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_attr.adb (Expand_N_Attribute_Reference)\n+\t<Attribute_Enum_Val>: Set No_Truncation on the\n+\tN_Unchecked_Type_Conversion built around the argument passed to\n+\tthe attribute.\n+\n 2019-07-22  Nicolas Roche  <roche@adacore.com>\n \n \t* libgnat/s-valrea.adb (Scan_Real): Ignore non significative"}, {"sha": "2748c519b42f74d7ffa39927707db131c04e86e8", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd90c808628cead705bb4521d9b8beea0edcf2bf/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd90c808628cead705bb4521d9b8beea0edcf2bf/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=fd90c808628cead705bb4521d9b8beea0edcf2bf", "patch": "@@ -3282,6 +3282,13 @@ package body Exp_Attr is\n \n          Expr := Unchecked_Convert_To (Ptyp, First (Exprs));\n \n+         --  Ensure that the expression is not truncated since the \"bad\" bits\n+         --  are desired.\n+\n+         if Nkind (Expr) = N_Unchecked_Type_Conversion then\n+            Set_No_Truncation (Expr);\n+         end if;\n+\n          Insert_Action (N,\n            Make_Raise_Constraint_Error (Loc,\n              Condition =>"}, {"sha": "da0bf2a89188fe43d88187260fbeadea4087c3ee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd90c808628cead705bb4521d9b8beea0edcf2bf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd90c808628cead705bb4521d9b8beea0edcf2bf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fd90c808628cead705bb4521d9b8beea0edcf2bf", "patch": "@@ -1,3 +1,7 @@\n+2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/enum_val1.adb: New testcase.\n+\n 2019-07-22  Nicolas Roche  <roche@adacore.com>\n \n \t* gnat.dg/float_value1.adb: New testcase."}, {"sha": "4550c11097cce078bf97886f8ebbe7351d347f9e", "filename": "gcc/testsuite/gnat.dg/enum_val1.adb", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd90c808628cead705bb4521d9b8beea0edcf2bf/gcc%2Ftestsuite%2Fgnat.dg%2Fenum_val1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd90c808628cead705bb4521d9b8beea0edcf2bf/gcc%2Ftestsuite%2Fgnat.dg%2Fenum_val1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fenum_val1.adb?ref=fd90c808628cead705bb4521d9b8beea0edcf2bf", "patch": "@@ -0,0 +1,22 @@\n+with Ada.Text_IO; use Ada.Text_IO;\n+\n+procedure Enum_Val1 is\n+   type Enum is (Two, Four);\n+   for Enum use (2, 4);\n+\n+   Count : Natural := 0;\n+\n+begin\n+   for I in 10 .. 11 loop\n+      begin\n+         Put (Integer'Image (I) & \": \");\n+         Put_Line (Enum'Image (Enum'Enum_Val (I)));\n+      exception\n+         when Constraint_Error =>\n+            Count := Count + 1;\n+      end;\n+   end loop;\n+   if Count /= 2 then\n+      raise Program_Error;\n+   end if;\n+end;"}]}