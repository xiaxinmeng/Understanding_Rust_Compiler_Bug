{"sha": "690943fcd4d667a4de8614a565bc13a66816c94a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkwOTQzZmNkNGQ2NjdhNGRlODYxNGE1NjViYzEzYTY2ODE2Yzk0YQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-08-29T13:42:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T13:42:00Z"}, "message": "a-cdlili.adb, [...]: Minor reformatting.\n\n2011-08-29  Robert Dewar  <dewar@adacore.com>\n\n\t* a-cdlili.adb, a-cdlili.ads, a-coinve.adb, a-coinve.ads,\n\tsem_util.adb, sem_util.ads, a-cohama.adb, a-cohama.ads, a-coorse.adb,\n\ta-coorse.ads, aspects.ads, sem_ch8.adb: Minor reformatting.\n\nFrom-SVN: r178232", "tree": {"sha": "f20f4df300d64f5600c1039d02d785c133bb1250", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f20f4df300d64f5600c1039d02d785c133bb1250"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/690943fcd4d667a4de8614a565bc13a66816c94a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/690943fcd4d667a4de8614a565bc13a66816c94a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/690943fcd4d667a4de8614a565bc13a66816c94a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/690943fcd4d667a4de8614a565bc13a66816c94a/comments", "author": null, "committer": null, "parents": [{"sha": "ff15f019e014d1d41e4a78d289f4f61873d62bd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff15f019e014d1d41e4a78d289f4f61873d62bd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff15f019e014d1d41e4a78d289f4f61873d62bd8"}], "stats": {"total": 247, "additions": 137, "deletions": 110}, "files": [{"sha": "1a078d5f2f4dbb3b10be58fe23ff3d090c913ebf", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=690943fcd4d667a4de8614a565bc13a66816c94a", "patch": "@@ -1,3 +1,9 @@\n+2011-08-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-cdlili.adb, a-cdlili.ads, a-coinve.adb, a-coinve.ads,\n+\tsem_util.adb, sem_util.ads, a-cohama.adb, a-cohama.ads, a-coorse.adb,\n+\ta-coorse.ads, aspects.ads, sem_ch8.adb: Minor reformatting.\n+\n 2011-08-29  Thomas Quinot  <quinot@adacore.com>\n \n \t* system-freebsd-x86_64.ads (Backend_Overflow_Checks): Set true True."}, {"sha": "4682ffbea500977cdad3def33602ee61827f43aa", "filename": "gcc/ada/a-cdlili.adb", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fa-cdlili.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fa-cdlili.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cdlili.adb?ref=690943fcd4d667a4de8614a565bc13a66816c94a", "patch": "@@ -38,12 +38,16 @@ package body Ada.Containers.Doubly_Linked_Lists is\n         Node      : Node_Access;\n    end record;\n \n-   overriding function First    (Object : Iterator) return Cursor;\n-   overriding function Last     (Object : Iterator) return Cursor;\n-   overriding function Next     (Object : Iterator; Position : Cursor)\n-     return Cursor;\n-   overriding function Previous (Object : Iterator; Position : Cursor)\n-     return Cursor;\n+   overriding function First (Object : Iterator) return Cursor;\n+   overriding function Last  (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n \n    -----------------------\n    -- Local Subprograms --\n@@ -918,6 +922,7 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n       declare\n          Next_Node : constant Node_Access := Position.Node.Next;\n+\n       begin\n          if Next_Node = null then\n             return No_Element;\n@@ -927,11 +932,13 @@ package body Ada.Containers.Doubly_Linked_Lists is\n       end;\n    end Next;\n \n-   function Next (Object : Iterator; Position : Cursor) return Cursor is\n+   function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor\n+   is\n    begin\n       if Position.Node = Object.Container.Last then\n          return No_Element;\n-\n       else\n          return (Object.Container, Position.Node.Next);\n       end if;\n@@ -969,6 +976,7 @@ package body Ada.Containers.Doubly_Linked_Lists is\n \n       declare\n          Prev_Node : constant Node_Access := Position.Node.Prev;\n+\n       begin\n          if Prev_Node = null then\n             return No_Element;\n@@ -978,11 +986,13 @@ package body Ada.Containers.Doubly_Linked_Lists is\n       end;\n    end Previous;\n \n-   function Previous (Object : Iterator; Position : Cursor) return Cursor is\n+   function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor\n+   is\n    begin\n       if Position.Node = Position.Container.First then\n          return No_Element;\n-\n       else\n          return (Object.Container, Position.Node.Prev);\n       end if;"}, {"sha": "f7accff0a277cfa8e09af9c56f2615c31e61ff3b", "filename": "gcc/ada/a-cdlili.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fa-cdlili.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fa-cdlili.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cdlili.ads?ref=690943fcd4d667a4de8614a565bc13a66816c94a", "patch": "@@ -32,7 +32,8 @@\n ------------------------------------------------------------------------------\n \n private with Ada.Finalization;\n-with Ada.Streams; use Ada.Streams;\n+\n+with Ada.Streams;              use Ada.Streams;\n with Ada.Iterator_Interfaces;\n \n generic"}, {"sha": "c06ba9e35e462d1744c80f7880421508cfc729ab", "filename": "gcc/ada/a-cohama.adb", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fa-cohama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fa-cohama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohama.adb?ref=690943fcd4d667a4de8614a565bc13a66816c94a", "patch": "@@ -39,13 +39,15 @@ package body Ada.Containers.Hashed_Maps is\n \n    type Iterator is new\n      Map_Iterator_Interfaces.Forward_Iterator with record\n-      Container : Map_Access;\n-      Node      : Node_Access;\n-   end record;\n+        Container : Map_Access;\n+        Node      : Node_Access;\n+     end record;\n \n    overriding function First (Object : Iterator) return Cursor;\n-   overriding function Next  (Object : Iterator; Position : Cursor)\n-     return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n \n    -----------------------\n    -- Local Subprograms --\n@@ -599,8 +601,8 @@ package body Ada.Containers.Hashed_Maps is\n       B := B - 1;\n    end Iterate;\n \n-   function Iterate (Container : Map)\n-      return Map_Iterator_Interfaces.Forward_Iterator'class\n+   function Iterate\n+     (Container : Map) return Map_Iterator_Interfaces.Forward_Iterator'class\n    is\n       Node : constant Node_Access := HT_Ops.First (Container.HT);\n       It   : constant Iterator := (Container'Unrestricted_Access, Node);\n@@ -680,11 +682,13 @@ package body Ada.Containers.Hashed_Maps is\n       Position := Next (Position);\n    end Next;\n \n-   function Next (Object : Iterator; Position : Cursor) return Cursor is\n+   function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor\n+   is\n    begin\n       if Position.Node = null then\n          return No_Element;\n-\n       else\n          return (Object.Container, Next (Position).Node);\n       end if;"}, {"sha": "d0bd3fdbbf2b65ece954c0b87eae20a05bc11672", "filename": "gcc/ada/a-cohama.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fa-cohama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fa-cohama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohama.ads?ref=690943fcd4d667a4de8614a565bc13a66816c94a", "patch": "@@ -32,8 +32,9 @@\n ------------------------------------------------------------------------------\n \n private with Ada.Containers.Hash_Tables;\n-with Ada.Streams; use Ada.Streams;\n private with Ada.Finalization;\n+\n+with Ada.Streams;             use Ada.Streams;\n with Ada.Iterator_Interfaces;\n \n generic"}, {"sha": "d66b9ec563b0f290bba51ca6eed1c0eac3916369", "filename": "gcc/ada/a-coinve.adb", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fa-coinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fa-coinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinve.adb?ref=690943fcd4d667a4de8614a565bc13a66816c94a", "patch": "@@ -46,11 +46,16 @@ package body Ada.Containers.Indefinite_Vectors is\n    end record;\n \n    overriding function First (Object : Iterator) return Cursor;\n-   overriding function Last  (Object : Iterator) return Cursor;\n-   overriding function Next  (Object : Iterator; Position : Cursor)\n-     return Cursor;\n-   overriding function Previous (Object : Iterator; Position : Cursor)\n-     return Cursor;\n+\n+   overriding function Last (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n \n    ---------\n    -- \"&\" --\n@@ -2433,7 +2438,9 @@ package body Ada.Containers.Indefinite_Vectors is\n       return It;\n    end Iterate;\n \n-   function Iterate (Container : Vector; Start : Cursor)\n+   function Iterate\n+     (Container : Vector;\n+      Start     : Cursor)\n       return Vector_Iterator_Interfaces.Reversible_Iterator'class\n    is\n       It : constant Iterator :=\n@@ -2584,10 +2591,6 @@ package body Ada.Containers.Indefinite_Vectors is\n       end if;\n    end Next;\n \n-   ----------\n-   -- Next --\n-   ----------\n-\n    procedure Next (Position : in out Cursor) is\n    begin\n       if Position.Container = null then"}, {"sha": "2380b4253097097d5d29dcfd9cfe98bda2802dd4", "filename": "gcc/ada/a-coinve.ads", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fa-coinve.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fa-coinve.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinve.ads?ref=690943fcd4d667a4de8614a565bc13a66816c94a", "patch": "@@ -32,7 +32,8 @@\n ------------------------------------------------------------------------------\n \n private with Ada.Finalization;\n-with Ada.Streams; use Ada.Streams;\n+\n+with Ada.Streams;             use Ada.Streams;\n with Ada.Iterator_Interfaces;\n \n generic\n@@ -344,7 +345,9 @@ package Ada.Containers.Indefinite_Vectors is\n    function Iterate (Container : Vector)\n       return Vector_Iterator_Interfaces.Reversible_Iterator'class;\n \n-   function Iterate (Container : Vector; Start : Cursor)\n+   function Iterate\n+     (Container : Vector;\n+      Start     : Cursor)\n       return Vector_Iterator_Interfaces.Reversible_Iterator'class;\n \n    procedure Reverse_Iterate\n@@ -398,10 +401,10 @@ private\n    end record;\n \n    type Constant_Reference_Type\n-      (Element : not null access constant Element_Type) is null record;\n+     (Element : not null access constant Element_Type) is null record;\n \n    type Reference_Type\n-      (Element : not null access Element_Type) is null record;\n+     (Element : not null access Element_Type) is null record;\n \n    overriding procedure Adjust (Container : in out Vector);\n "}, {"sha": "b7d9d45dc03b97429ff73bd897033a298ad6b3d9", "filename": "gcc/ada/a-coorse.adb", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fa-coorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fa-coorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorse.adb?ref=690943fcd4d667a4de8614a565bc13a66816c94a", "patch": "@@ -42,16 +42,21 @@ package body Ada.Containers.Ordered_Sets is\n \n    type Iterator is new\n      Ordered_Set_Iterator_Interfaces.Reversible_Iterator with record\n-      Container : access constant Set;\n-      Node      : Node_Access;\n-   end record;\n+        Container : access constant Set;\n+        Node      : Node_Access;\n+     end record;\n \n    overriding function First (Object : Iterator) return Cursor;\n-   overriding function Last  (Object : Iterator) return Cursor;\n-   overriding function Next  (Object : Iterator; Position : Cursor)\n-     return Cursor;\n-   overriding function Previous (Object : Iterator; Position : Cursor)\n-     return Cursor;\n+\n+   overriding function Last (Object : Iterator) return Cursor;\n+\n+   overriding function Next\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n+\n+   overriding function Previous\n+     (Object   : Iterator;\n+      Position : Cursor) return Cursor;\n \n    ------------------------------\n    -- Access to Fields of Node --\n@@ -1248,9 +1253,7 @@ package body Ada.Containers.Ordered_Sets is\n       Position := Next (Position);\n    end Next;\n \n-   function Next  (Object : Iterator; Position : Cursor)\n-   return Cursor\n-   is\n+   function Next (Object : Iterator; Position : Cursor) return Cursor is\n       pragma Unreferenced (Object);\n    begin\n       return Next (Position);\n@@ -1305,13 +1308,12 @@ package body Ada.Containers.Ordered_Sets is\n       Position := Previous (Position);\n    end Previous;\n \n-   overriding function Previous (Object : Iterator; Position : Cursor)\n-   return Cursor\n-   is\n+   function Previous (Object : Iterator; Position : Cursor) return Cursor is\n       pragma Unreferenced (Object);\n    begin\n       return Previous (Position);\n    end Previous;\n+\n    -------------------\n    -- Query_Element --\n    -------------------"}, {"sha": "8dc0eda123ddc6adc6f737fb68e1e095115e5d9b", "filename": "gcc/ada/a-coorse.ads", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fa-coorse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fa-coorse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorse.ads?ref=690943fcd4d667a4de8614a565bc13a66816c94a", "patch": "@@ -33,7 +33,8 @@\n \n private with Ada.Containers.Red_Black_Trees;\n private with Ada.Finalization;\n-with Ada.Streams; use Ada.Streams;\n+\n+with Ada.Streams;             use Ada.Streams;\n with Ada.Iterator_Interfaces;\n \n generic\n@@ -254,10 +255,13 @@ package Ada.Containers.Ordered_Sets is\n      (Container : Set;\n       Process   : not null access procedure (Position : Cursor));\n \n-   function Iterate (Container : Set)\n+   function Iterate\n+     (Container : Set)\n       return Ordered_Set_Iterator_Interfaces.Reversible_Iterator'class;\n \n-   function Iterate (Container : Set; Start : Cursor)\n+   function Iterate\n+     (Container : Set;\n+      Start     : Cursor)\n       return Ordered_Set_Iterator_Interfaces.Reversible_Iterator'class;\n \n    generic"}, {"sha": "ecf74ba4d204a9e2f13a0568e3ea48132d562bca", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=690943fcd4d667a4de8614a565bc13a66816c94a", "patch": "@@ -360,7 +360,7 @@ package Aspects is\n    --  empty list or No_List.\n \n    function Find_Aspect (Ent : Entity_Id; A : Aspect_Id) return Node_Id;\n-   --  Find value of a given aspect from aspect list of entity.\n+   --  Find value of a given aspect from aspect list of entity\n \n    procedure Move_Aspects (From : Node_Id; To : Node_Id);\n    --  Moves aspects from 'From' node to 'To' node. Has_Aspects (To) must be"}, {"sha": "47632f304c97f725c12344b4f55e1dc0a9c015d7", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=690943fcd4d667a4de8614a565bc13a66816c94a", "patch": "@@ -5141,7 +5141,7 @@ package body Sem_Ch8 is\n                            Next_Entity (Id);\n                         end loop;\n \n-                        --  If not found,  standard error message\n+                        --  If not found, standard error message\n \n                         Error_Msg_NE (\"& not declared in&\", N, Selector);\n "}, {"sha": "adbe0ce820a7b0b2c81849a8cdad741abcea0967", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 42, "deletions": 51, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=690943fcd4d667a4de8614a565bc13a66816c94a", "patch": "@@ -990,17 +990,14 @@ package body Sem_Util is\n       Disc : Entity_Id)\n    is\n       Loc : constant Source_Ptr := Sloc (Expr);\n-\n    begin\n       Set_Is_Overloaded (Expr, False);\n       Rewrite (Expr,\n         Make_Explicit_Dereference (Loc,\n           Prefix =>\n             Make_Selected_Component (Loc,\n-              Prefix => Relocate_Node (Expr),\n-              Selector_Name =>\n-            New_Occurrence_Of (Disc, Loc))));\n-\n+              Prefix        => Relocate_Node (Expr),\n+              Selector_Name => New_Occurrence_Of (Disc, Loc))));\n       Set_Etype (Prefix (Expr), Etype (Disc));\n       Set_Etype (Expr, Designated_Type (Etype (Disc)));\n    end Build_Explicit_Dereference;\n@@ -7178,9 +7175,7 @@ package body Sem_Util is\n       Iface       : Entity_Id;\n \n    begin\n-      if not Is_Tagged_Type (Typ)\n-        or else not Is_Derived_Type (Typ)\n-      then\n+      if not Is_Tagged_Type (Typ) or else not Is_Derived_Type (Typ) then\n          return False;\n \n       else\n@@ -7202,45 +7197,7 @@ package body Sem_Util is\n \n          return False;\n       end if;\n-\n    end Is_Iterator;\n-\n-   ----------------------------\n-   -- Is_Reversible_Iterator --\n-   ----------------------------\n-\n-   function Is_Reversible_Iterator (Typ : Entity_Id) return Boolean is\n-      Ifaces_List : Elist_Id;\n-      Iface_Elmt  : Elmt_Id;\n-      Iface       : Entity_Id;\n-\n-   begin\n-      if not Is_Tagged_Type (Typ)\n-        or else not Is_Derived_Type (Typ)\n-      then\n-         return False;\n-      else\n-\n-         Collect_Interfaces (Typ, Ifaces_List);\n-\n-         Iface_Elmt := First_Elmt (Ifaces_List);\n-         while Present (Iface_Elmt) loop\n-            Iface := Node (Iface_Elmt);\n-            if Chars (Iface) = Name_Reversible_Iterator\n-              and then\n-                Is_Predefined_File_Name\n-                  (Unit_File_Name (Get_Source_Unit (Iface)))\n-            then\n-               return True;\n-            end if;\n-\n-            Next_Elmt (Iface_Elmt);\n-         end loop;\n-\n-      end if;\n-      return False;\n-   end Is_Reversible_Iterator;\n-\n    ------------\n    -- Is_LHS --\n    ------------\n@@ -7466,15 +7423,15 @@ package body Sem_Util is\n       --  original node is a conversion, then Is_Variable will not be true\n       --  but we still want to allow the conversion if it converts a variable).\n \n-      --  In Ada2012, the explicit dereference may be a rewritten call\n-      --  to a Reference function.\n-\n       elsif Original_Node (AV) /= AV then\n+\n+         --  In Ada2012, the explicit dereference may be a rewritten call to a\n+         --  Reference function.\n+\n          if Ada_Version >= Ada_2012\n            and then Nkind (Original_Node (AV)) = N_Function_Call\n            and then\n-             Has_Implicit_Dereference\n-               (Etype (Name (Original_Node (AV))))\n+             Has_Implicit_Dereference (Etype (Name (Original_Node (AV))))\n          then\n             return True;\n \n@@ -7884,6 +7841,40 @@ package body Sem_Util is\n       return False;\n    end Is_Renamed_Entry;\n \n+   ----------------------------\n+   -- Is_Reversible_Iterator --\n+   ----------------------------\n+\n+   function Is_Reversible_Iterator (Typ : Entity_Id) return Boolean is\n+      Ifaces_List : Elist_Id;\n+      Iface_Elmt  : Elmt_Id;\n+      Iface       : Entity_Id;\n+\n+   begin\n+      if not Is_Tagged_Type (Typ) or else not Is_Derived_Type (Typ) then\n+         return False;\n+\n+      else\n+         Collect_Interfaces (Typ, Ifaces_List);\n+\n+         Iface_Elmt := First_Elmt (Ifaces_List);\n+         while Present (Iface_Elmt) loop\n+            Iface := Node (Iface_Elmt);\n+            if Chars (Iface) = Name_Reversible_Iterator\n+              and then\n+                Is_Predefined_File_Name\n+                  (Unit_File_Name (Get_Source_Unit (Iface)))\n+            then\n+               return True;\n+            end if;\n+\n+            Next_Elmt (Iface_Elmt);\n+         end loop;\n+      end if;\n+\n+      return False;\n+   end Is_Reversible_Iterator;\n+\n    ----------------------\n    -- Is_Selector_Name --\n    ----------------------"}, {"sha": "e9b4f4392c814809a4163da4f143ea0073f54fbb", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690943fcd4d667a4de8614a565bc13a66816c94a/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=690943fcd4d667a4de8614a565bc13a66816c94a", "patch": "@@ -804,17 +804,15 @@ package Sem_Util is\n    --  by a derived type declaration.\n \n    function Is_Inherited_Operation_For_Type\n-     (E : Entity_Id; Typ : Entity_Id) return Boolean;\n+     (E   : Entity_Id;\n+      Typ : Entity_Id) return Boolean;\n    --  E is a subprogram. Return True is E is an implicit operation inherited\n    --  by the derived type declaration for type Typ.\n \n    function Is_Iterator (Typ : Entity_Id) return Boolean;\n-   --  AI05-0139-2 : check whether Typ is derived from the predefined interface\n+   --  AI05-0139-2: Check whether Typ is derived from the predefined interface\n    --  Ada.Iterator_Interfaces.Forward_Iterator.\n \n-   function Is_Reversible_Iterator (Typ : Entity_Id) return Boolean;\n-   --  Ditto for Ada.Iterator_Interfaces.Reversible_Iterator.\n-\n    function Is_LHS (N : Node_Id) return Boolean;\n    --  Returns True iff N is used as Name in an assignment statement\n \n@@ -882,6 +880,10 @@ package Sem_Util is\n    function Is_Renamed_Entry (Proc_Nam : Entity_Id) return Boolean;\n    --  Return True if Proc_Nam is a procedure renaming of an entry\n \n+   function Is_Reversible_Iterator (Typ : Entity_Id) return Boolean;\n+   --  AI05-0139-2: Check whether Typ is derived from the predefined interface\n+   --  Ada.Iterator_Interfaces.Reversible_Iterator.\n+\n    function Is_Selector_Name (N : Node_Id) return Boolean;\n    --  Given an N_Identifier node N, determines if it is a Selector_Name.\n    --  As described in Sinfo, Selector_Names are special because they"}]}