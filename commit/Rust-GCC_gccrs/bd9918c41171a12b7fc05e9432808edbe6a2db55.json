{"sha": "bd9918c41171a12b7fc05e9432808edbe6a2db55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ5OTE4YzQxMTcxYTEyYjdmYzA1ZTk0MzI4MDhlZGJlNmEyZGI1NQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2018-04-30T11:47:04Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2018-04-30T11:47:04Z"}, "message": "[patch] allow '-' for stdout dump\n\nhttps://gcc.gnu.org/ml/gcc-patches/2018-04/msg01303.html\n\t* dumpfile.c (dump_open): Allow '-' for stdout.\n\t* doc/invoke.texi (Developer Options): Document dump filename\n\tdetermination early.  Document stdin/stdout selection.\n\nCo-Authored-By: Sandra Loosemore <sandra@codesourcery.com>\n\nFrom-SVN: r259760", "tree": {"sha": "bbe81a739c007828382a36d8df1193bad166d65a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbe81a739c007828382a36d8df1193bad166d65a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd9918c41171a12b7fc05e9432808edbe6a2db55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd9918c41171a12b7fc05e9432808edbe6a2db55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd9918c41171a12b7fc05e9432808edbe6a2db55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd9918c41171a12b7fc05e9432808edbe6a2db55/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e693ebce815cd4d29cb0e438e61a692624423628", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e693ebce815cd4d29cb0e438e61a692624423628", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e693ebce815cd4d29cb0e438e61a692624423628"}], "stats": {"total": 68, "additions": 31, "deletions": 37}, "files": [{"sha": "532d49ea3333489a2c2aa75f6e13d9eb1a764af7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9918c41171a12b7fc05e9432808edbe6a2db55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9918c41171a12b7fc05e9432808edbe6a2db55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd9918c41171a12b7fc05e9432808edbe6a2db55", "patch": "@@ -1,3 +1,10 @@\n+2018-04-30  Nathan Sidwell  <nathan@acm.org>\n+\t    Sandra Loosemore <sandra@codesourcery.com>\n+\n+\t* dumpfile.c (dump_open): Allow '-' for stdout.\n+\t* doc/invoke.texi (Developer Options): Document dump filename\n+\tdetermination early.  Document stdin/stdout selection.\n+\n 2018-04-30 Andrew Sadek  <andrew.sadek.se@gmail.com>\n \n \tMicroblaze Target: PIC data text relative"}, {"sha": "e953b21b10c9af5bff563534e620e814312f43de", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 22, "deletions": 36, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9918c41171a12b7fc05e9432808edbe6a2db55/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9918c41171a12b7fc05e9432808edbe6a2db55/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=bd9918c41171a12b7fc05e9432808edbe6a2db55", "patch": "@@ -13358,6 +13358,26 @@ configuration, such as where it searches for libraries.  You should\n rarely need to use any of these options for ordinary compilation and\n linking tasks.\n \n+Many developer options that cause GCC to dump output to a file take an\n+optional @samp{=@var{filename}} suffix. You can specify @samp{stdout}\n+or @samp{-} to dump to standard output, and @samp{stderr} for standard\n+error.\n+\n+If @samp{=@var{filename}} is omitted, a default dump file name is\n+constructed by concatenating the base dump file name, a pass number,\n+phase letter, and pass name.  The base dump file name is the name of\n+output file produced by the compiler if explicitly specified and not\n+an executable; otherwise it is the source file name.\n+The pass number is determined by the order passes are registered with\n+the compiler's pass manager. \n+This is generally the same as the order of execution, but passes\n+registered by plugins, target-specific passes, or passes that are\n+otherwise registered late are numbered higher than the pass named\n+@samp{final}, even if they are executed earlier.  The phase letter is\n+one of @samp{i} (inter-procedural analysis), @samp{l}\n+(language-specific), @samp{r} (RTL), or @samp{t} (tree). \n+The files are created in the directory of the output file. \n+\n @table @gcctabopt\n \n @item -d@var{letters}\n@@ -13367,20 +13387,7 @@ linking tasks.\n @opindex fdump-rtl-@var{pass}\n Says to make debugging dumps during compilation at times specified by\n @var{letters}.  This is used for debugging the RTL-based passes of the\n-compiler.  The file names for most of the dumps are made by appending\n-a pass number and a word to the @var{dumpname}, and the files are\n-created in the directory of the output file.  In case of\n-@option{=@var{filename}} option, the dump is output on the given file\n-instead of the pass numbered dump files.  Note that the pass number is\n-assigned as passes are registered into the pass manager.  Most passes\n-are registered in the order that they will execute and for these passes\n-the number corresponds to the pass execution order.  However, passes\n-registered by plugins, passes specific to compilation targets, or\n-passes that are otherwise registered after all the other passes are\n-numbered higher than a pass named \"final\", even if they are executed\n-earlier.  @var{dumpname} is generated from the name of the output\n-file if explicitly specified and not an executable, otherwise it is\n-the basename of the source file.  \n+compiler.\n \n Some @option{-d@var{letters}} switches have different meaning when\n @option{-E} is used for preprocessing.  @xref{Preprocessor Options},\n@@ -13768,11 +13775,7 @@ counters for each function compiled.\n @opindex fdump-tree-all\n @opindex fdump-tree\n Control the dumping at various stages of processing the intermediate\n-language tree to a file.  The file name is generated by appending a\n-switch-specific suffix to the source file name, and the file is\n-created in the same directory as the output file. In case of\n-@option{=@var{filename}} option, the dump is output on the given file\n-instead of the auto named dump files.  If the @samp{-@var{options}}\n+language tree to a file.  If the @samp{-@var{options}}\n form is used, @var{options} is a list of @samp{-} separated options\n which control the details of the dump.  Not all options are applicable\n to all dumps; those that are not meaningful are ignored.  The\n@@ -13839,26 +13842,9 @@ passes).\n @item note\n Enable other detailed optimization information (only available in\n certain passes).\n-@item =@var{filename}\n-Instead of an auto named dump file, output into the given file\n-name. The file names @file{stdout} and @file{stderr} are treated\n-specially and are considered already open standard streams. For\n-example,\n-\n-@smallexample\n-gcc -O2 -ftree-vectorize -fdump-tree-vect-blocks=foo.dump\n-     -fdump-tree-pre=/dev/stderr file.c\n-@end smallexample\n-\n-outputs vectorizer dump into @file{foo.dump}, while the PRE dump is\n-output on to @file{stderr}. If two conflicting dump filenames are\n-given for the same pass, then the latter option overrides the earlier\n-one.\n-\n @item all\n Turn on all options, except @option{raw}, @option{slim}, @option{verbose}\n and @option{lineno}.\n-\n @item optall\n Turn on all optimization options, i.e., @option{optimized},\n @option{missed}, and @option{note}."}, {"sha": "0f16d4f044f30e46710fc385ff70c905312f4bda", "filename": "gcc/dumpfile.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9918c41171a12b7fc05e9432808edbe6a2db55/gcc%2Fdumpfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9918c41171a12b7fc05e9432808edbe6a2db55/gcc%2Fdumpfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.c?ref=bd9918c41171a12b7fc05e9432808edbe6a2db55", "patch": "@@ -323,7 +323,8 @@ dump_open (const char *filename, bool trunc)\n   if (strcmp (\"stderr\", filename) == 0)\n     return stderr;\n \n-  if (strcmp (\"stdout\", filename) == 0)\n+  if (strcmp (\"stdout\", filename) == 0\n+      || strcmp (\"-\", filename) == 0)\n     return stdout;\n \n   FILE *stream = fopen (filename, trunc ? \"w\" : \"a\");"}]}