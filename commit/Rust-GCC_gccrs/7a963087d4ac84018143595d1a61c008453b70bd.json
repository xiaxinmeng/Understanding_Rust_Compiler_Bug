{"sha": "7a963087d4ac84018143595d1a61c008453b70bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E5NjMwODdkNGFjODQwMTgxNDM1OTVkMWE2MWMwMDg0NTNiNzBiZA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2010-09-09T09:57:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-09T09:57:00Z"}, "message": "sem_ch13.adb, [...]: Minor reformatting.\n\n2010-09-09  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch13.adb, sem_ch6.adb, exp_ch3.adb: Minor reformatting.\n\n2010-09-09  Robert Dewar  <dewar@adacore.com>\n\n\t* einfo.adb (Is_Aggregate_Type): New function.\n\t* einfo.ads (Aggregate_Kind): New enumeration subtype\n\t(Is_Aggregate_Type): New function.\n\t* sem_type.adb (Is_Array_Class_Record_Type): Removed, replaced by\n\tIs_Aggregate_Typea.\n\n2010-09-09  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch11.adb, frontend.adb, sem_attr.adb, sem_ch10.adb, sem_ch3.adb,\n\tsem_ch4.adb, sem_ch9.adb, sem_res.adb: Use Restriction_Check_Needed\n\twhere appropriate.\n\t* restrict.ads, restrict.adb: Ditto.\n\t(Restriction_Check_Needed): New function\n\nFrom-SVN: r164061", "tree": {"sha": "3d96305a5fd5eb104053e32acb56c0321908d12f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d96305a5fd5eb104053e32acb56c0321908d12f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a963087d4ac84018143595d1a61c008453b70bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a963087d4ac84018143595d1a61c008453b70bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a963087d4ac84018143595d1a61c008453b70bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a963087d4ac84018143595d1a61c008453b70bd/comments", "author": null, "committer": null, "parents": [{"sha": "61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61bcf5ca33e9ea22001c1283a9ea0df5bcae2ecc"}], "stats": {"total": 193, "additions": 112, "deletions": 81}, "files": [{"sha": "e7c9e7de6894f416deef1d337d5dd74758f3319f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7a963087d4ac84018143595d1a61c008453b70bd", "patch": "@@ -1,3 +1,23 @@\n+2010-09-09  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch13.adb, sem_ch6.adb, exp_ch3.adb: Minor reformatting.\n+\n+2010-09-09  Robert Dewar  <dewar@adacore.com>\n+\n+\t* einfo.adb (Is_Aggregate_Type): New function.\n+\t* einfo.ads (Aggregate_Kind): New enumeration subtype\n+\t(Is_Aggregate_Type): New function.\n+\t* sem_type.adb (Is_Array_Class_Record_Type): Removed, replaced by\n+\tIs_Aggregate_Typea.\n+\n+2010-09-09  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch11.adb, frontend.adb, sem_attr.adb, sem_ch10.adb, sem_ch3.adb,\n+\tsem_ch4.adb, sem_ch9.adb, sem_res.adb: Use Restriction_Check_Needed\n+\twhere appropriate.\n+\t* restrict.ads, restrict.adb: Ditto.\n+\t(Restriction_Check_Needed): New function\n+\n 2010-09-09  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch9.ads (Find_Master_Scope): New function, extracted from"}, {"sha": "15bf858dc62bc2881c816af1ac5b9d07dbbc09bb", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=7a963087d4ac84018143595d1a61c008453b70bd", "patch": "@@ -2731,6 +2731,11 @@ package body Einfo is\n       return Ekind (Id) in Access_Subprogram_Kind;\n    end Is_Access_Subprogram_Type;\n \n+   function Is_Aggregate_Type                   (Id : E) return B is\n+   begin\n+      return Ekind (Id) in Aggregate_Kind;\n+   end Is_Aggregate_Type;\n+\n    function Is_Array_Type                       (Id : E) return B is\n    begin\n       return Ekind (Id) in Array_Kind;"}, {"sha": "3c12bba9935ebbee91eb3849a044b40b41217262", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=7a963087d4ac84018143595d1a61c008453b70bd", "patch": "@@ -4209,6 +4209,17 @@ package Einfo is\n       E_Access_Protected_Subprogram_Type ..\n       E_Anonymous_Access_Protected_Subprogram_Type;\n \n+   subtype Aggregate_Kind              is Entity_Kind range\n+       E_Array_Type ..\n+   --  E_Array_Subtype\n+   --  E_String_Type\n+   --  E_String_Subtype\n+   --  E_String_Literal_Subtype\n+   --  E_Class_Wide_Type\n+   --  E_Class_Wide_Subtype\n+   --  E_Record_Type\n+       E_Record_Subtype;\n+\n    subtype Array_Kind                  is Entity_Kind range\n        E_Array_Type ..\n    --  E_Array_Subtype\n@@ -6115,6 +6126,7 @@ package Einfo is\n    function Is_Access_Type                      (Id : E) return B;\n    function Is_Access_Protected_Subprogram_Type (Id : E) return B;\n    function Is_Access_Subprogram_Type           (Id : E) return B;\n+   function Is_Aggregate_Type                   (Id : E) return B;\n    function Is_Array_Type                       (Id : E) return B;\n    function Is_Assignable                       (Id : E) return B;\n    function Is_Class_Wide_Type                  (Id : E) return B;\n@@ -7125,6 +7137,7 @@ package Einfo is\n    pragma Inline (Is_Access_Type);\n    pragma Inline (Is_Access_Protected_Subprogram_Type);\n    pragma Inline (Is_Access_Subprogram_Type);\n+   pragma Inline (Is_Aggregate_Type);\n    pragma Inline (Is_Aliased);\n    pragma Inline (Is_Array_Type);\n    pragma Inline (Is_Assignable);"}, {"sha": "2efee394a1753e11fc860383f1be288ec2b97462", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=7a963087d4ac84018143595d1a61c008453b70bd", "patch": "@@ -2006,7 +2006,7 @@ package body Exp_Ch11 is\n \n    procedure Warn_If_No_Propagation (N : Node_Id) is\n    begin\n-      if Restriction_Active (No_Exception_Propagation)\n+      if Restriction_Check_Required (No_Exception_Propagation)\n         and then Warn_On_Non_Local_Exception\n       then\n          Warn_No_Exception_Propagation_Active (N);"}, {"sha": "b11170cb6071537c29a2ae4c938c220daa582075", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=7a963087d4ac84018143595d1a61c008453b70bd", "patch": "@@ -142,9 +142,9 @@ package body Exp_Ch3 is\n    --  are active) can lead to very large blocks that GCC3 handles poorly.\n \n    procedure Build_Untagged_Equality (Typ : Entity_Id);\n-   --  AI05-0123: equality on untagged records composes. This procedure\n-   --  build the equality routine for an untagged record that has components\n-   --  of a record type that have user-defined primitive equality operations.\n+   --  AI05-0123: Equality on untagged records composes. This procedure\n+   --  builds the equality routine for an untagged record that has components\n+   --  of a record type that has user-defined primitive equality operations.\n    --  The resulting operation is a TSS subprogram.\n \n    procedure Build_Variant_Record_Equality (Typ  : Entity_Id);\n@@ -3766,9 +3766,9 @@ package body Exp_Ch3 is\n       Eq_Op    : Entity_Id;\n \n       function User_Defined_Eq (T : Entity_Id) return Entity_Id;\n-      --  Check whether the type T has a user-defined primitive\n-      --  equality. If true for a component of Typ, we have to\n-      --  build the primitive equality for it.\n+      --  Check whether the type T has a user-defined primitive equality. If so\n+      --  return it, else return Empty. If true for a component of Typ, we have\n+      --  to build the primitive equality for it.\n \n       ---------------------\n       -- User_Defined_Eq --\n@@ -3807,7 +3807,7 @@ package body Exp_Ch3 is\n \n    begin\n       --  If a record component has a primitive equality operation, we must\n-      --  builde the corresponding one for the current type.\n+      --  build the corresponding one for the current type.\n \n       Build_Eq := False;\n       Comp := First_Component (Typ);\n@@ -3828,7 +3828,11 @@ package body Exp_Ch3 is\n       Eq_Op := Empty;\n       while Present (Prim) loop\n          if Chars (Node (Prim)) = Name_Op_Eq\n-           and then Comes_From_Source (Node (Prim))\n+              and then Comes_From_Source (Node (Prim))\n+\n+         --  Don't we also need to check formal types and return type as in\n+         --  User_Defined_Eq above???\n+\n          then\n             Eq_Op := Node (Prim);\n             Build_Eq := False;\n@@ -3839,10 +3843,10 @@ package body Exp_Ch3 is\n       end loop;\n \n       --  If the type is derived, inherit the operation, if present, from the\n-      --  parent type. It may have been declared after the type derivation.\n-      --  If the parent type itself is derived, it may have inherited an\n-      --  operation that has itself been overridden, so update its alias\n-      --  and related flags. Ditto for inequality.\n+      --  parent type. It may have been declared after the type derivation. If\n+      --  the parent type itself is derived, it may have inherited an operation\n+      --  that has itself been overridden, so update its alias and related\n+      --  flags. Ditto for inequality.\n \n       if No (Eq_Op) and then Is_Derived_Type (Typ) then\n          Prim := First_Elmt (Collect_Primitive_Operations (Etype (Typ)));\n@@ -3877,13 +3881,12 @@ package body Exp_Ch3 is\n          end loop;\n       end if;\n \n-      --  If not inherited and not user-defined, build body as for a type\n-      --  with tagged components.\n+      --  If not inherited and not user-defined, build body as for a type with\n+      --  tagged components.\n \n       if Build_Eq then\n          Decl :=\n-           Make_Eq_Body\n-             (Typ, Make_TSS_Name (Typ, TSS_Composite_Equality));\n+           Make_Eq_Body (Typ, Make_TSS_Name (Typ, TSS_Composite_Equality));\n          Op := Defining_Entity (Decl);\n          Set_TSS (Typ, Op);\n          Set_Is_Pure (Op);\n@@ -7824,8 +7827,8 @@ package body Exp_Ch3 is\n             Comps := Component_List (Typ_Def);\n          end if;\n \n-         Variant_Case := Present (Comps)\n-           and then Present (Variant_Part (Comps));\n+         Variant_Case :=\n+           Present (Comps) and then Present (Variant_Part (Comps));\n       end if;\n \n       if Variant_Case then"}, {"sha": "bea0bdc396ef6f48740b2ab1d48cda9a6c44e140", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=7a963087d4ac84018143595d1a61c008453b70bd", "patch": "@@ -290,7 +290,7 @@ begin\n    --  explicit switch turning off Warn_On_Non_Local_Exception, then turn on\n    --  this warning by default if we have encountered an exception handler.\n \n-   if Restriction_Active (No_Exception_Propagation)\n+   if Restriction_Check_Required (No_Exception_Propagation)\n      and then not No_Warn_On_Non_Local_Exception\n      and then Exception_Handler_Encountered\n    then"}, {"sha": "c08130a7f61f8c1672f74125eee896358f35a580", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=7a963087d4ac84018143595d1a61c008453b70bd", "patch": "@@ -144,8 +144,8 @@ package body Restrict is\n    --  Start of processing for Check_Obsolescent_2005_Entity\n \n    begin\n-      if Ada_Version >= Ada_2005\n-        and then Restriction_Active (No_Obsolescent_Features)\n+      if Restriction_Check_Required (No_Obsolescent_Features)\n+        and then Ada_Version >= Ada_2005\n         and then Chars_Is (Scope (E),                 \"handling\")\n         and then Chars_Is (Scope (Scope (E)),         \"characters\")\n         and then Chars_Is (Scope (Scope (Scope (E))), \"ada\")\n@@ -298,8 +298,8 @@ package body Restrict is\n    --  Start of processing for Check_Restriction\n \n    begin\n-      --  In CodePeer mode, we do not want to check for any restriction, or\n-      --  set additional restrictions than those already set in gnat1drv.adb\n+      --  In CodePeer mode, we do not want to check for any restriction, or set\n+      --  additional restrictions other than those already set in gnat1drv.adb\n       --  so that we have consistency between each compilation.\n \n       if CodePeer_Mode then\n@@ -403,7 +403,7 @@ package body Restrict is\n \n    procedure Check_Wide_Character_Restriction (E : Entity_Id; N : Node_Id) is\n    begin\n-      if Restriction_Active (No_Wide_Characters)\n+      if Restriction_Check_Required (No_Wide_Characters)\n         and then Comes_From_Source (N)\n       then\n          declare\n@@ -586,6 +586,15 @@ package body Restrict is\n       return Restrictions.Set (R) and then not Restriction_Warnings (R);\n    end Restriction_Active;\n \n+   --------------------------------\n+   -- Restriction_Check_Required --\n+   --------------------------------\n+\n+   function Restriction_Check_Required (R : All_Restrictions) return Boolean is\n+   begin\n+      return Restrictions.Set (R);\n+   end Restriction_Check_Required;\n+\n    ---------------------\n    -- Restriction_Msg --\n    ---------------------"}, {"sha": "50d5427895c969bb854a9729354292738b3d1fee", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=7a963087d4ac84018143595d1a61c008453b70bd", "patch": "@@ -292,7 +292,19 @@ package Restrict is\n    --  used where the compiled code depends on whether the restriction is\n    --  active. Always use Check_Restriction to record a violation. Note that\n    --  this returns False if we only have a Restriction_Warnings set, since\n-   --  restriction warnings should never affect generated code.\n+   --  restriction warnings should never affect generated code. If you want\n+   --  to know if a call to Check_Restriction is needed then use the function\n+   --  Restriction_Check_Required instead.\n+\n+   function Restriction_Check_Required (R : All_Restrictions) return Boolean;\n+   pragma Inline (Restriction_Check_Required);\n+   --  Determines if either a Restriction_Warnings or Restrictions pragma has\n+   --  been given for the specified restriction. If true, then a subsequent\n+   --  call to Check_Restriction is required if the restriction is violated.\n+   --  This must not be used to guard code generation that depends on whether\n+   --  a restriction is active (see Restriction_Active above). Typically it\n+   --  is used to avoid complex code to determine if a restriction is violated,\n+   --  executing this code only if needed.\n \n    function Restricted_Profile return Boolean;\n    --  Tests if set of restrictions corresponding to Profile (Restricted) is"}, {"sha": "c9f49950f52e4292932b593a788b14474ac91801", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=7a963087d4ac84018143595d1a61c008453b70bd", "patch": "@@ -2549,7 +2549,7 @@ package body Sem_Attr is\n          --  2005. Note that we can't test Is_Tagged_Type here on P_Type, since\n          --  this flag gets set by Find_Type in this situation.\n \n-         if Restriction_Active (No_Obsolescent_Features)\n+         if Restriction_Check_Required (No_Obsolescent_Features)\n            and then Ada_Version >= Ada_2005\n            and then Ekind (P_Type) = E_Incomplete_Type\n          then"}, {"sha": "7623b8231eaf88bcfa5fc6a1429319e88dac5ab8", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=7a963087d4ac84018143595d1a61c008453b70bd", "patch": "@@ -2325,7 +2325,7 @@ package body Sem_Ch10 is\n       --  Note: this is not quite right if the user defines one of these units\n       --  himself, but that's a marginal case, and fixing it is hard ???\n \n-      if Restriction_Active (No_Obsolescent_Features) then\n+      if Restriction_Check_Required (No_Obsolescent_Features) then\n          declare\n             F : constant File_Name_Type :=\n                   Unit_File_Name (Get_Source_Unit (U));"}, {"sha": "9d322f5dc42405be57e1c182bf0df6a43a595bbc", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=7a963087d4ac84018143595d1a61c008453b70bd", "patch": "@@ -2360,8 +2360,8 @@ package body Sem_Ch13 is\n       function Make_Null_Procedure_Specs (Tag_Typ : Entity_Id) return List_Id;\n       --  Ada 2005 (AI-251): Makes specs for null procedures associated with\n       --  null procedures inherited from interface types that have not been\n-      --  overridden. Only one null procedure will be created for a given\n-      --  set of inherited null procedures with homographic profiles.\n+      --  overridden. Only one null procedure will be created for a given set\n+      --  of inherited null procedures with homographic profiles.\n \n       -------------------------------\n       -- Make_Null_Procedure_Specs --\n@@ -2419,8 +2419,8 @@ package body Sem_Ch13 is\n                      --  of the interface type)\n \n                      if Is_Controlling_Formal (Formal) then\n-                        if Nkind (Parameter_Type (Parent (Formal)))\n-                          = N_Identifier\n+                        if Nkind (Parameter_Type (Parent (Formal))) =\n+                                                              N_Identifier\n                         then\n                            Set_Parameter_Type (New_Param_Spec,\n                              New_Occurrence_Of (Tag_Typ, Loc));"}, {"sha": "545403a6de82ab88edbc5e456b5d9db63c626c86", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=7a963087d4ac84018143595d1a61c008453b70bd", "patch": "@@ -2779,7 +2779,7 @@ package body Sem_Ch3 is\n       --  Has_Stream just for efficiency reasons. There is no point in\n       --  spending time on a Has_Stream check if the restriction is not set.\n \n-      if Restrictions.Set (No_Streams) then\n+      if Restriction_Check_Required (No_Streams) then\n          if Has_Stream (T) then\n             Check_Restriction (No_Streams, N);\n          end if;\n@@ -13659,7 +13659,7 @@ package body Sem_Ch3 is\n \n             --  Check violation of No_Wide_Characters\n \n-            if Restriction_Active (No_Wide_Characters) then\n+            if Restriction_Check_Required (No_Wide_Characters) then\n                Get_Name_String (Chars (L));\n \n                if Name_Len >= 3 and then Name_Buffer (1 .. 2) = \"QW\" then"}, {"sha": "b7f9af73784e7c0daf2b4d7a3f5b14aaa1d87b4f", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=7a963087d4ac84018143595d1a61c008453b70bd", "patch": "@@ -617,7 +617,7 @@ package body Sem_Ch4 is\n       --  Has_Stream just for efficiency reasons. There is no point in\n       --  spending time on a Has_Stream check if the restriction is not set.\n \n-      if Restrictions.Set (No_Streams) then\n+      if Restriction_Check_Required (No_Streams) then\n          if Has_Stream (Designated_Type (Acc_Type)) then\n             Check_Restriction (No_Streams, N);\n          end if;"}, {"sha": "c456bbe0fa89fb8ec5de6f5493b7f78ca917cad4", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=7a963087d4ac84018143595d1a61c008453b70bd", "patch": "@@ -4037,9 +4037,7 @@ package body Sem_Ch6 is\n                   Error_Msg_Name_2 := Get_Convention_Name (Convention (Op));\n                   Error_Msg_Sloc   := Sloc (Op);\n \n-                  if Comes_From_Source (Op)\n-                    or else No (Alias (Op))\n-                  then\n+                  if Comes_From_Source (Op) or else No (Alias (Op)) then\n                      if not Is_Overriding_Operation (Op) then\n                         Error_Msg_N (\"\\\\primitive % defined #\", Typ);\n                      else"}, {"sha": "792a9dad4c528c1a985c6552ee0ba97294cbf409", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 7, "deletions": 15, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=7a963087d4ac84018143595d1a61c008453b70bd", "patch": "@@ -1182,9 +1182,9 @@ package body Sem_Ch9 is\n       --  and the No_Local_Protected_Objects restriction applies, issue a\n       --  warning that objects of the type will violate the restriction.\n \n-      if not Is_Library_Level_Entity (T)\n+      if Restriction_Check_Required (No_Local_Protected_Objects)\n+        and then not Is_Library_Level_Entity (T)\n         and then Comes_From_Source (T)\n-        and then Restrictions.Set (No_Local_Protected_Objects)\n       then\n          Error_Msg_Sloc := Restrictions_Loc (No_Local_Protected_Objects);\n \n@@ -1995,9 +1995,9 @@ package body Sem_Ch9 is\n       --  No_Task_Hierarchy restriction applies, issue a warning that objects\n       --  of the type will violate the restriction.\n \n-      if not Is_Library_Level_Entity (T)\n+      if Restriction_Check_Required (No_Task_Hierarchy)\n+        and then not Is_Library_Level_Entity (T)\n         and then Comes_From_Source (T)\n-        and then Restrictions.Set (No_Task_Hierarchy)\n       then\n          Error_Msg_Sloc := Restrictions_Loc (No_Task_Hierarchy);\n \n@@ -2193,18 +2193,10 @@ package body Sem_Ch9 is\n                   --  Entry family with non-static bounds\n \n                   else\n-                     --  If restriction is set, then this is an error\n+                     --  Record an unknown count restriction, and if the\n+                     --  restriction is active, post a message or warning.\n \n-                     if Restrictions.Set (R) then\n-                        Error_Msg_N\n-                          (\"static subtype required by Restriction pragma\",\n-                           DSD);\n-\n-                     --  Otherwise we record an unknown count restriction\n-\n-                     else\n-                        Check_Restriction (R, D);\n-                     end if;\n+                     Check_Restriction (R, D);\n                   end if;\n                end;\n             end if;"}, {"sha": "78e3811c1cea98cf45c2e21645f7cb617be98ddf", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=7a963087d4ac84018143595d1a61c008453b70bd", "patch": "@@ -4759,7 +4759,7 @@ package body Sem_Res is\n          --  violated if either operand can be negative for mod, or for rem\n          --  if both operands can be negative.\n \n-         if Restrictions.Set (No_Implicit_Conditionals)\n+         if Restriction_Check_Required (No_Implicit_Conditionals)\n            and then Nkind_In (N, N_Op_Rem, N_Op_Mod)\n          then\n             declare"}, {"sha": "0ae28259da4b5b5ba8cfcc2d4d8b6481d34bf297", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 6, "deletions": 27, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a963087d4ac84018143595d1a61c008453b70bd/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=7a963087d4ac84018143595d1a61c008453b70bd", "patch": "@@ -184,18 +184,6 @@ package body Sem_Type is\n    --  Interp_Has_Abstract_Op. Determine whether an overloaded node has an\n    --  abstract interpretation which yields type Typ.\n \n-   function Is_Array_Class_Record_Type (E : Entity_Id) return Boolean;\n-   --  This function tests if entity E is in Array_Kind, or Class_Wide_Kind,\n-   --  or is E_Record_Type or E_Record_Subtype, and returns True for these\n-   --  cases, and False for all others. Note that other record entity kinds\n-   --  such as E_Record_Type_With_Private return False.\n-   --\n-   --  This is a bit of an odd category, maybe it is wrong or a better name\n-   --  could be found for the class of entities being tested. The history\n-   --  is that this used to be done with an explicit range test for the range\n-   --  E_Array_Type .. E_Record_Subtype, which was itself suspicious and is\n-   --  now prohibited by the -gnatyE style check ???\n-\n    procedure New_Interps (N : Node_Id);\n    --  Initialize collection of interpretations for the given node, which is\n    --  either an overloaded entity, or an operation whose arguments have\n@@ -912,7 +900,7 @@ package body Sem_Type is\n       --  An aggregate is compatible with an array or record type\n \n       elsif T2 = Any_Composite\n-        and then Is_Array_Class_Record_Type (T1)\n+        and then Is_Aggregate_Type (T1)\n       then\n          return True;\n \n@@ -2632,25 +2620,16 @@ package body Sem_Type is\n                else\n                   Par := Etype (Par);\n                end if;\n+\n+            --  For all other cases return False, not an Ancestor\n+\n             else\n                return False;\n             end if;\n          end loop;\n       end if;\n    end Is_Ancestor;\n \n-   --------------------------------\n-   -- Is_Array_Class_Record_Type --\n-   --------------------------------\n-\n-   function Is_Array_Class_Record_Type (E : Entity_Id) return Boolean is\n-   begin\n-      return Is_Array_Type (E)\n-        or else Is_Class_Wide_Type (E)\n-        or else Ekind (E) = E_Record_Type\n-        or else Ekind (E) = E_Record_Subtype;\n-   end Is_Array_Class_Record_Type;\n-\n    ---------------------------\n    -- Is_Invisible_Operator --\n    ---------------------------\n@@ -3069,12 +3048,12 @@ package body Sem_Type is\n          return T1;\n \n       elsif T2 = Any_Composite\n-        and then Is_Array_Class_Record_Type (T1)\n+        and then Is_Aggregate_Type (T1)\n       then\n          return T1;\n \n       elsif T1 = Any_Composite\n-        and then Is_Array_Class_Record_Type (T2)\n+        and then Is_Aggregate_Type (T2)\n       then\n          return T2;\n "}]}