{"sha": "a4c772e26dabdf8e2bf2d26d0d7f8e60d97f3f4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRjNzcyZTI2ZGFiZGY4ZTJiZjJkMjZkMGQ3ZjhlNjBkOTdmM2Y0ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2019-12-03T08:23:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-12-03T08:23:06Z"}, "message": "re PR target/92744 (error: insn does not satisfy its constraints since r278439)\n\n\tPR target/92744\n\t* config/i386/i386.md (peephole2 for *swap<mode>): Use\n\tgeneral_reg_operand predicates instead of register_operand.\n\n\t* g++.dg/dfp/pr92744.C: New test.\n\nFrom-SVN: r278924", "tree": {"sha": "7b5c9a00a4ce8f44b5844bb9b865a99b65b47c7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b5c9a00a4ce8f44b5844bb9b865a99b65b47c7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4c772e26dabdf8e2bf2d26d0d7f8e60d97f3f4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4c772e26dabdf8e2bf2d26d0d7f8e60d97f3f4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4c772e26dabdf8e2bf2d26d0d7f8e60d97f3f4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4c772e26dabdf8e2bf2d26d0d7f8e60d97f3f4e/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6fcb7ebb377f27c7f38780f95998ad7a148b7f5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fcb7ebb377f27c7f38780f95998ad7a148b7f5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fcb7ebb377f27c7f38780f95998ad7a148b7f5b"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "a89c4352aa324af6219749669b6fbbf87dc36df1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4c772e26dabdf8e2bf2d26d0d7f8e60d97f3f4e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4c772e26dabdf8e2bf2d26d0d7f8e60d97f3f4e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4c772e26dabdf8e2bf2d26d0d7f8e60d97f3f4e", "patch": "@@ -1,3 +1,10 @@\n+2019-12-03  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/92744\n+\t* config/i386/i386.md (peephole2 for *swap<mode>): Use\n+\tgeneral_reg_operand predicates instead of register_operand.\n+\n 2019-12-03  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/92645"}, {"sha": "2d43992724fa222fc1a3b20462633d7074364765", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4c772e26dabdf8e2bf2d26d0d7f8e60d97f3f4e/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4c772e26dabdf8e2bf2d26d0d7f8e60d97f3f4e/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=a4c772e26dabdf8e2bf2d26d0d7f8e60d97f3f4e", "patch": "@@ -2788,10 +2788,10 @@\n    (set_attr \"bdver1_decode\" \"double\")])\n \n (define_peephole2\n-  [(set (match_operand:SWI 0 \"register_operand\")\n-\t(match_operand:SWI 1 \"register_operand\"))\n+  [(set (match_operand:SWI 0 \"general_reg_operand\")\n+\t(match_operand:SWI 1 \"general_reg_operand\"))\n    (set (match_dup 1)\n-\t(match_operand:SWI 2 \"register_operand\"))\n+\t(match_operand:SWI 2 \"general_reg_operand\"))\n    (set (match_dup 2) (match_dup 0))]\n   \"peep2_reg_dead_p (3, operands[0])\n    && optimize_insn_for_size_p ()\""}, {"sha": "2d8c350d57574f297a9167b084b79525901766e8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4c772e26dabdf8e2bf2d26d0d7f8e60d97f3f4e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4c772e26dabdf8e2bf2d26d0d7f8e60d97f3f4e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a4c772e26dabdf8e2bf2d26d0d7f8e60d97f3f4e", "patch": "@@ -1,5 +1,8 @@\n 2019-12-03  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/92744\n+\t* g++.dg/dfp/pr92744.C: New test.\n+\n \tPR c++/92732\n \t* g++.dg/cpp2a/bitfield3.C: Don't expect narrowing conversion\n \twarnings."}, {"sha": "5026e8d7db5df1acc45360dd48b9f467258762b1", "filename": "gcc/testsuite/g++.dg/dfp/pr92744.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4c772e26dabdf8e2bf2d26d0d7f8e60d97f3f4e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdfp%2Fpr92744.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4c772e26dabdf8e2bf2d26d0d7f8e60d97f3f4e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdfp%2Fpr92744.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdfp%2Fpr92744.C?ref=a4c772e26dabdf8e2bf2d26d0d7f8e60d97f3f4e", "patch": "@@ -0,0 +1,20 @@\n+// PR target/92744\n+// { dg-do compile }\n+// { dg-options \"-Os -fno-tree-ccp\" }\n+\n+typedef float T __attribute__((mode(SD)));\n+struct A { T a; };\n+void foo ();\n+\n+bool\n+operator!= (A x, A y)\n+{\n+  return x.a != y.a;\n+}\n+\n+void\n+bar (A x, A y)\n+{\n+  if (x != y)\n+    foo ();\n+}"}]}