{"sha": "03fc0e389fae2576a7f217fb0afb7cb0f18689f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNmYzBlMzg5ZmFlMjU3NmE3ZjIxN2ZiMGFmYjdjYjBmMTg2ODlmOA==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-12-03T15:04:46Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2020-12-03T17:25:05Z"}, "message": "We cannot lookup types to ensure they are known as AST::Type differs\nto how struct AST Types. We need to move to HIR to avoid this issue via\nname resolution.", "tree": {"sha": "05527a5b3f6ac0024d2df452b84c2633a82f9792", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05527a5b3f6ac0024d2df452b84c2633a82f9792"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03fc0e389fae2576a7f217fb0afb7cb0f18689f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03fc0e389fae2576a7f217fb0afb7cb0f18689f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03fc0e389fae2576a7f217fb0afb7cb0f18689f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03fc0e389fae2576a7f217fb0afb7cb0f18689f8/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0394164f3db67a5b7631e30f66d280771017b225", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0394164f3db67a5b7631e30f66d280771017b225", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0394164f3db67a5b7631e30f66d280771017b225"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "8558847ae64f1f4deb498099a4273144cf17319e", "filename": "gcc/rust/analysis/rust-type-resolution.cc", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03fc0e389fae2576a7f217fb0afb7cb0f18689f8/gcc%2Frust%2Fanalysis%2Frust-type-resolution.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03fc0e389fae2576a7f217fb0afb7cb0f18689f8/gcc%2Frust%2Fanalysis%2Frust-type-resolution.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fanalysis%2Frust-type-resolution.cc?ref=03fc0e389fae2576a7f217fb0afb7cb0f18689f8", "patch": "@@ -1181,13 +1181,13 @@ TypeResolution::visit (AST::LetStmt &stmt)\n       auto typeString = typeComparisonBuffer.back ();\n       typeComparisonBuffer.pop_back ();\n \n-      AST::Type *val = NULL;\n-      if (!scope.LookupType (typeString, &val))\n-\t{\n-\t  rust_error_at (stmt.locus, \"LetStmt has unknown type: %s\",\n-\t\t\t stmt.type->as_string ().c_str ());\n-\t  return;\n-\t}\n+      // AST::Type *val = NULL;\n+      // if (!scope.LookupType (typeString, &val))\n+      //   {\n+      //     rust_error_at (stmt.locus, \"LetStmt has unknown type: %s\",\n+      //   \t\t stmt.type->as_string ().c_str ());\n+      //     return;\n+      //   }\n     }\n   else if (inferedType != nullptr)\n     {\n@@ -1201,13 +1201,13 @@ TypeResolution::visit (AST::LetStmt &stmt)\n       auto typeString = typeComparisonBuffer.back ();\n       typeComparisonBuffer.pop_back ();\n \n-      AST::Type *val = NULL;\n-      if (!scope.LookupType (typeString, &val))\n-\t{\n-\t  rust_error_at (stmt.locus, \"Inferred unknown type: %s\",\n-\t\t\t inferedType->as_string ().c_str ());\n-\t  return;\n-\t}\n+      // AST::Type *val = NULL;\n+      // if (!scope.LookupType (typeString, &val))\n+      //   {\n+      //     rust_error_at (stmt.locus, \"Inferred unknown type: %s\",\n+      //   \t\t inferedType->as_string ().c_str ());\n+      //     return;\n+      //   }\n     }\n   else\n     {"}]}