{"sha": "e87924ab48d86b6bf33ae6f33a6e4a0941fca970", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg3OTI0YWI0OGQ4NmI2YmYzM2FlNmYzM2E2ZTRhMDk0MWZjYTk3MA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2012-10-11T17:52:36Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2012-10-11T17:52:36Z"}, "message": "re PR fortran/54784 ([OOP] wrong code in polymorphic allocation with SOURCE)\n\n2012-10-11  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/54784\n\t* trans-stmt.c (gfc_trans_allocate): Correctly determine the reference\n\tto the _data component for polymorphic allocation with SOURCE.\n\n2012-10-11  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/54784\n\t* gfortran.dg/class_allocate_13.f90: New.\n\nFrom-SVN: r192374", "tree": {"sha": "4bb45a2915d953234dbef2ea935ebf4ab60b699b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bb45a2915d953234dbef2ea935ebf4ab60b699b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e87924ab48d86b6bf33ae6f33a6e4a0941fca970", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e87924ab48d86b6bf33ae6f33a6e4a0941fca970", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e87924ab48d86b6bf33ae6f33a6e4a0941fca970", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e87924ab48d86b6bf33ae6f33a6e4a0941fca970/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1dc74f2bf02aa753939071fbd6d82f8db157e66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1dc74f2bf02aa753939071fbd6d82f8db157e66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1dc74f2bf02aa753939071fbd6d82f8db157e66"}], "stats": {"total": 54, "additions": 49, "deletions": 5}, "files": [{"sha": "a3d282b15a88a3c84d157206917ea6503795c2f5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e87924ab48d86b6bf33ae6f33a6e4a0941fca970/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e87924ab48d86b6bf33ae6f33a6e4a0941fca970/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e87924ab48d86b6bf33ae6f33a6e4a0941fca970", "patch": "@@ -1,3 +1,9 @@\n+2012-10-11  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54784\n+\t* trans-stmt.c (gfc_trans_allocate): Correctly determine the reference\n+\tto the _data component for polymorphic allocation with SOURCE.\n+\n 2012-10-06  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/54832"}, {"sha": "bfcb6869baa2d8f303bec858e5ef8f98629fe05c", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e87924ab48d86b6bf33ae6f33a6e4a0941fca970/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e87924ab48d86b6bf33ae6f33a6e4a0941fca970/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=e87924ab48d86b6bf33ae6f33a6e4a0941fca970", "patch": "@@ -5130,7 +5130,7 @@ gfc_trans_allocate (gfc_code * code)\n \t      gfc_actual_arglist *actual;\n \t      gfc_expr *ppc;\n \t      gfc_code *ppc_code;\n-\t      gfc_ref *dataref;\n+\t      gfc_ref *ref, *dataref;\n \n \t      /* Do a polymorphic deep copy.  */\n \t      actual = gfc_get_actual_arglist ();\n@@ -5142,13 +5142,15 @@ gfc_trans_allocate (gfc_code * code)\n \t      actual->next->expr->ts.type = BT_CLASS;\n \t      gfc_add_data_component (actual->next->expr);\n \n-\t      dataref = actual->next->expr->ref;\n+\t      dataref = NULL;\n \t      /* Make sure we go up through the reference chain to\n \t\t the _data reference, where the arrayspec is found.  */\n-\t      while (dataref->next && dataref->next->type != REF_ARRAY)\n-\t\tdataref = dataref->next;\n+\t      for (ref = actual->next->expr->ref; ref; ref = ref->next)\n+\t\tif (ref->type == REF_COMPONENT\n+\t\t    && strcmp (ref->u.c.component->name, \"_data\") == 0)\n+\t\t  dataref = ref;\n \n-\t      if (dataref->u.c.component->as)\n+\t      if (dataref && dataref->u.c.component->as)\n \t\t{\n \t\t  int dim;\n \t\t  gfc_expr *temp;"}, {"sha": "ff44d480c9815be0ae25ca1939b48754d6e4fd9e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e87924ab48d86b6bf33ae6f33a6e4a0941fca970/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e87924ab48d86b6bf33ae6f33a6e4a0941fca970/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e87924ab48d86b6bf33ae6f33a6e4a0941fca970", "patch": "@@ -1,3 +1,8 @@\n+2012-10-11  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/54784\n+\t* gfortran.dg/class_allocate_13.f90: New.\n+\n 2012-10-11  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/ext/visibility/pragma-override1.C: Fix target markup."}, {"sha": "64f37dc59b50fe35d53d047e082e0df20aa8e8d9", "filename": "gcc/testsuite/gfortran.dg/class_allocate_13.f90", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e87924ab48d86b6bf33ae6f33a6e4a0941fca970/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_allocate_13.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e87924ab48d86b6bf33ae6f33a6e4a0941fca970/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_allocate_13.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_allocate_13.f90?ref=e87924ab48d86b6bf33ae6f33a6e4a0941fca970", "patch": "@@ -0,0 +1,31 @@\n+! { dg-do run }\n+!\n+! PR 54784: [4.7/4.8 Regression] [OOP] wrong code in polymorphic allocation with SOURCE\n+!\n+! Contributed by Jeremy Kozdon <jkozdon@gmail.com>\n+\n+program bug\n+  implicit none\n+\n+  type :: block\n+    real, allocatable :: fields\n+  end type\n+\n+  type :: list\n+    class(block),allocatable :: B\n+  end type\n+\n+  type :: domain\n+    type(list),dimension(2) :: L\n+  end type\n+\n+  type(domain) :: d\n+  type(block) :: b1\n+\n+  allocate(b1%fields,source=5.)\n+  \n+  allocate(d%L(2)%B,source=b1)           ! wrong code\n+  \n+  if (d%L(2)%B%fields/=5.) call abort()\n+\n+end program"}]}