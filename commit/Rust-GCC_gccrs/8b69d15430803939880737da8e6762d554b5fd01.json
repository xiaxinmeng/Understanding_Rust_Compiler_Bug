{"sha": "8b69d15430803939880737da8e6762d554b5fd01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI2OWQxNTQzMDgwMzkzOTg4MDczN2RhOGU2NzYyZDU1NGI1ZmQwMQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-03-15T19:33:21Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-03-15T19:33:21Z"}, "message": "(adjust_priority): Comment unreachable code.\n\n(memrefs_conflict_p): Add comment about Fortran aliasing.\n\nFrom-SVN: r3740", "tree": {"sha": "d56b7f5449b9b059e349788a46821b663becf524", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d56b7f5449b9b059e349788a46821b663becf524"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b69d15430803939880737da8e6762d554b5fd01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b69d15430803939880737da8e6762d554b5fd01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b69d15430803939880737da8e6762d554b5fd01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b69d15430803939880737da8e6762d554b5fd01/comments", "author": null, "committer": null, "parents": [{"sha": "45c45e79fc5661a448f0ff3d40ab1c2a6ca44563", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45c45e79fc5661a448f0ff3d40ab1c2a6ca44563", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45c45e79fc5661a448f0ff3d40ab1c2a6ca44563"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "cd844cb381789377f1334c4cf4ede3b45d0573fa", "filename": "gcc/sched.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b69d15430803939880737da8e6762d554b5fd01/gcc%2Fsched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b69d15430803939880737da8e6762d554b5fd01/gcc%2Fsched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched.c?ref=8b69d15430803939880737da8e6762d554b5fd01", "patch": "@@ -514,6 +514,9 @@ find_symbolic_term (x)\n    Nice to notice that varying addresses cannot conflict with fp if no\n    local variables had their addresses taken, but that's too hard now.  */\n \n+/* ??? In Fortran, references to a array parameter can never conflict with\n+   another array parameter.  */\n+\n static int\n memrefs_conflict_p (xsize, x, ysize, y, c)\n      rtx x, y;\n@@ -2306,6 +2309,8 @@ adjust_priority (prev)\n       rtx note;\n       int n_deaths = 0;\n \n+      /* ??? This code has no effect, because REG_DEAD notes are removed\n+\t before we ever get here.  */\n       for (note = REG_NOTES (prev); note; note = XEXP (note, 1))\n \tif (REG_NOTE_KIND (note) == REG_DEAD)\n \t  n_deaths += 1;"}]}