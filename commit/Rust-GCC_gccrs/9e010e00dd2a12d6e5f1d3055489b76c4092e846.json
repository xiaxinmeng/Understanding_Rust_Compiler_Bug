{"sha": "9e010e00dd2a12d6e5f1d3055489b76c4092e846", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUwMTBlMDBkZDJhMTJkNmU1ZjFkMzA1NTQ4OWI3NmM0MDkyZTg0Ng==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-13T12:47:43Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-13T12:47:43Z"}, "message": "Initial revision\n\nFrom-SVN: r9372", "tree": {"sha": "13370070467c58017b2ac7dcfef309e29491c124", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13370070467c58017b2ac7dcfef309e29491c124"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e010e00dd2a12d6e5f1d3055489b76c4092e846", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e010e00dd2a12d6e5f1d3055489b76c4092e846", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e010e00dd2a12d6e5f1d3055489b76c4092e846", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e010e00dd2a12d6e5f1d3055489b76c4092e846/comments", "author": null, "committer": null, "parents": [{"sha": "55e70146bda8fbfe3a4fa5176268a834fda6bb39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55e70146bda8fbfe3a4fa5176268a834fda6bb39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55e70146bda8fbfe3a4fa5176268a834fda6bb39"}], "stats": {"total": 217, "additions": 217, "deletions": 0}, "files": [{"sha": "c91bffc39844ac6ded11b4ac988c61642c16b94a", "filename": "gcc/config/alpha/config-nt.sed", "status": "added", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e010e00dd2a12d6e5f1d3055489b76c4092e846/gcc%2Fconfig%2Falpha%2Fconfig-nt.sed", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e010e00dd2a12d6e5f1d3055489b76c4092e846/gcc%2Fconfig%2Falpha%2Fconfig-nt.sed", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fconfig-nt.sed?ref=9e010e00dd2a12d6e5f1d3055489b76c4092e846", "patch": "@@ -0,0 +1,114 @@\n+/^Makefile/,/^\trm -f config.run/d\n+s/rm -f/del/\n+s/|| cp/|| copy/\n+/^config.status/,/\tfi/d\n+s/config.status//g\n+s/\\/dev\\/null/NUL/g\n+s/$(srcdir)\\/c-parse/c-parse/g\n+s/$(srcdir)\\/c-gperf/c-gperf/g\n+/^multilib.h/ s/multilib/not-multilib/\n+/^target=/ c\\\n+target=winnt3.5\n+/^xmake_file=/ d\n+/^tmake_file=/ d\n+/^version=/ c\\\n+version=2.6.3\n+s/CC = cc/CC = cl/\n+s/^SHELL =.*/SHELL =/\n+s/CFLAGS = -g/CFLAGS =/\n+s/:\\$/: \\$/g\n+s/<\\ *\\$(srcdir)\\//< $(srcdir)\\\\/g\n+s/^\t\\$(srcdir)\\/move-if-change/\tcopy/\n+s/^USE_/# USE_/\n+s/`echo \\$(srcdir)\\///g\n+s/ | sed 's,\\^\\\\\\.\\/,,'`//g\n+s/^\tcd \\$(srcdir)[ \t]*;/\t/\n+/^stamp-attrtab/,/copy/ {\n+  /\\\\/d\n+  /fi/d\n+  /copy/ i\\\n+\\\t  genattrtab md > tmp-attrtab.c\n+}\n+/^enquire[ \t]*:/ s/\\$(GCC_PARTS)//g\n+/^enquire.o[ \t]*:/ s/\\$(GCC_PASSES)//g\n+/^GCC_FOR_TARGET =/ c\\\n+GCC_FOR_TARGET = gcc\n+s/; *@true//\n+/^OBJS.*stamp-objlist/ s?`cat ../stamp-objlist`?@../stamp-objlist?\n+s/^\\(SUBDIR_OBSTACK *=\\).*$/\\1 ..\\/obstack.o/\n+s/^\\(SUBDIR_USE_ALLOCA *=\\).*$/\\1/\n+s/^\\(SUBDIR_MALLOC *=\\).*$/\\1/\n+/####target/ i\\\n+STMP_FIXPROTO = \\\n+OTHER_FIXINCLUDES_DIRS=/MSTOOLS/h \\\n+RANLIB = : \\\n+RANLIB_TEST = false \\\n+OLDCC = cl \\\n+MAKE = make \\\n+SYMLINK = copy \\\n+INSTALL = $(srcdir)/install.sh -c \\\n+exeext = .exe \\\n+objext = .obj \\\n+oldobjext = .obj \\\n+\\\n+CC = cl \\\n+CFLAGS = -Dalpha -DWIN32 -D_WIN32 -DWINNT -D_ALPHA_ \\\\\\\n+ -DALMOST_STDC \\\n+CLIB =  oldnames.lib libc.lib kernel32.lib \\\n+LDFLAGS = -subsystem:console -entry:mainCRTStartup \\\\\\\n+ -stack:1000000,1000000 \\\n+\\\n+EXTRA_PROGRAMS=ld.exe \\\n+\\\n+ld.obj: $(srcdir)/config/winnt/ld.c \\\n+\\\t$(CC) $(CFLAGS) \\\\\\\n+\\ \t-I. -I$(srcdir) -I$(srcdir)/config -c $(srcdir)/config/winnt/ld.c \\\n+\\\n+ld.exe: ld.obj \\\n+\tlink32 -out:ld.exe ld.obj $(LDFLAGS) $(CLIB)\n+s/^C c:/Cc:/\n+s/\\${OBJS}/\\$(OBJS)/g\n+s/\\${SYSTEM_HEADER_DIR}/\\$(SYSTEM_HEADER_DIR)/g\n+s/\\${HOST_CC}/\\$(HOST_CC)/g\n+s/ \\${srcdir}\\// /g\n+s/\\${mainversion}/\\$(mainversion)/g\n+s/\\ $(srcdir)\\/move-if-change$//\n+s/\\$(srcdir)\\/move-if-change/copy/g\n+/^# USE_HOST_OBSTACK/ i\\\n+USE_HOST_OBSTACK=obstack.obj\n+/^# USE_ALLOCA/ i\\\n+USE_ALLOCA=alloca.obj\n+/^# USE_HOST_ALLOCA/ i\\\n+USE_HOST_ALLOCA=alloca.obj\n+s/^ALLOCA =/ALLOCA = alloca.obj/\n+s/^ALLOCA_FINISH = true/ALLOCA_FINISH =/\n+s/\t\\.\\//\t/\n+s/^bi-\\([a-z]*\\) *:/bi-\\1.exe :/\n+s/ bi-\\([a-z]*\\)$/ bi-\\1.exe/\n+s/ bi-\\([a-z]*\\) / bi-\\1.exe /g\n+s/^gen\\([a-z]*\\) *:/gen\\1.exe :/\n+s/ gen\\([a-z]*\\)$/ gen\\1.exe/\n+s/ gen\\([a-z]*\\) / gen\\1.exe /g\n+s/genmultilib.exe/genmultilib/g\n+s/^cccp *:/cccp.exe :/\n+s/cccp$/cccp.exe/\n+s/cccp /cccp.exe /\n+s/^cpp *:/cpp.exe :/\n+s/cpp$/cpp.exe/\n+s/cpp /cpp.exe /\n+s/^cc1 *:/cc1.exe :/\n+s/cc1$/cc1.exe/\n+s/cc1 /cc1.exe /\n+s/^cc1obj *:/cc1obj.exe :/\n+s/cc1obj$/cc1obj.exe/\n+s/cc1obj /cc1obj.exe /\n+s/^xgcc *:/xgcc.exe :/\n+s/xgcc$/xgcc.exe/\n+s/xgcc /xgcc.exe /\n+s/\\.o *:/.obj :/\n+s/\\.o$/.obj/\n+s/\\.o /.obj /g\n+s/-rm -f cpp.exe/del cpp.exe/\n+s/\\$(CC) \\$(ALL_CFLAGS) \\$(LDFLAGS) -o /link32 $(LDFLAGS) -out:/\n+s/\\$(HOST_CC) \\$(HOST_CFLAGS) \\$(HOST_LDFLAGS) -o /link32 $(HOST_LDFLAGS) -out:/\n+s/^\\\f//"}, {"sha": "fff5648d40d9a45b20acb14cf5f6c5f60658f4fc", "filename": "gcc/config/alpha/win-nt.h", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e010e00dd2a12d6e5f1d3055489b76c4092e846/gcc%2Fconfig%2Falpha%2Fwin-nt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e010e00dd2a12d6e5f1d3055489b76c4092e846/gcc%2Fconfig%2Falpha%2Fwin-nt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fwin-nt.h?ref=9e010e00dd2a12d6e5f1d3055489b76c4092e846", "patch": "@@ -0,0 +1,71 @@\n+/* Definitions of target machine for GNU compiler, for DEC Alpha\n+   running Windows/NT.\n+   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+/* Say this is Windows/NT for the other config files.  */\n+#define WINDOWS_NT 1\n+\n+#include \"alpha/alpha.h\"\n+\n+/* Names to predefine in the preprocessor for this target machine.  */\n+\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \"-DWIN32 -D_WIN32\\\n+  -DWINNT -D__STDC__=0 -DALMOST_STDC\\\n+  -D_ALPHA_ -D__alpha -D__alpha__ -D_LONGLONG -Asystem(winnt) -Acpu(alpha)\\\n+  -Amachine(alpha)\"\n+\n+#undef ASM_SPEC\n+#undef ASM_FINAL_SPEC\n+#define ASM_SPEC \"-nopp -nologo\"\n+\n+/* Pointer is 32 bits but the hardware has 64-bit addresses, sign extended. */\n+#undef POINTER_SIZE\n+#define POINTER_SIZE 32\n+#define POINTERS_EXTEND_UNSIGNED 0\n+\n+/* \"long\" is 32 bits.  */\n+#undef LONG_TYPE_SIZE\n+#define LONG_TYPE_SIZE 32\n+\n+/* We can't do any debugging.  */\n+#undef SDB_DEBUGGING_INFO\n+#undef DBX_DEBUGGING_INFO\n+#undef MIPS_DEBUGGING_INFO\n+\n+#include \"winnt/winnt.h\"\n+\n+#undef ASM_FILE_START\n+#define ASM_FILE_START(FILE)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  alpha_write_verstamp (FILE);\t\t\t\t\t\\\n+  fprintf (FILE, \"\\t.set noreorder\\n\");\t\t\t\t\\\n+  fprintf (FILE, \"\\t.set volatile\\n\");                          \\\n+  fprintf (FILE, \"\\t.set noat\\n\");\t\t\t\t\\\n+  fprintf (FILE, \"\\t.globl\\t__fltused\\n\");\t\t\t\\\n+  ASM_OUTPUT_SOURCE_FILENAME (FILE, main_input_filename);\t\\\n+}\n+\n+#undef LIB_SPEC\n+#define LIB_SPEC \"%{mwindows:-subsystem:windows -entry:WinMainCRTStartup \\\n+  USER32.LIB GDI32.LIB COMDLG32.LIB WINSPOOL.LIB} \\\n+ %{!mwindows:-subsystem:console -entry:mainCRTStartup} \\\n+ %{mcrtmt:LIBCMT.LIB KERNEL32.LIB} %{!mcrtmt:LIBC.LIB KERNEL32.LIB} \\\n+ %{v}\""}, {"sha": "51277a7ce6f451146518f886f03b313f84e234ee", "filename": "gcc/config/alpha/xm-winnt.h", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e010e00dd2a12d6e5f1d3055489b76c4092e846/gcc%2Fconfig%2Falpha%2Fxm-winnt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e010e00dd2a12d6e5f1d3055489b76c4092e846/gcc%2Fconfig%2Falpha%2Fxm-winnt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fxm-winnt.h?ref=9e010e00dd2a12d6e5f1d3055489b76c4092e846", "patch": "@@ -0,0 +1,32 @@\n+/* Configuration for GNU compiler for an Alpha running Windows NT 3.x.\n+   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Contributed by Douglas B. Rupp (drupp@cs.washington.edu)\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#include \"winnt/xm-winnt.h\"\n+#include \"alpha/xm-alpha.h\"\n+\n+#undef HOST_BITS_PER_LONG\n+#define\tHOST_BITS_PER_LONG\t32\n+\n+#define access _access\n+#define close _close\n+#define mktemp _mktemp\n+#define open _open\n+#define read _read\n+#define write _write"}]}