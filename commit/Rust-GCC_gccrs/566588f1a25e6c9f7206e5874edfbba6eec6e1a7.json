{"sha": "566588f1a25e6c9f7206e5874edfbba6eec6e1a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY2NTg4ZjFhMjVlNmM5ZjcyMDZlNTg3NGVkZmJiYTZlZWM2ZTFhNw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2018-01-17T01:39:05Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-01-17T01:39:05Z"}, "message": "elf.c (codes): Fix size to be 288.\n\n\t* elf.c (codes) [GENERATE_FIXED_HUFFMAN_TABLE]: Fix size to be\n\t288.\n\t(main) [GENERATE_FIXED_HUFFMAN_TABLE]: Pass 288 to\n\telf_zlib_inflate_table.  Generate elf_zlib_default_dist_table.\n\t(elf_zlib_default_table): Update.\n\t(elf_zlib_default_dist_table): New static array.\n\t(elf_zlib_inflate): Use elf_zlib_default_dist_table for dist table\n\tfor block type 1.\n\t* ztest.c (struct zlib_test): Add uncompressed_len.\n\t(tests): Initialize uncompressed_len field.  Add new test case.\n\t(test_samples): Use uncompressed_len field.\n\nFrom-SVN: r256776", "tree": {"sha": "8e386b399e8c90b938f78800e4277e092ca54989", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e386b399e8c90b938f78800e4277e092ca54989"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/566588f1a25e6c9f7206e5874edfbba6eec6e1a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/566588f1a25e6c9f7206e5874edfbba6eec6e1a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/566588f1a25e6c9f7206e5874edfbba6eec6e1a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/566588f1a25e6c9f7206e5874edfbba6eec6e1a7/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "060619250dc83e38c9129babac5c243914056da5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/060619250dc83e38c9129babac5c243914056da5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/060619250dc83e38c9129babac5c243914056da5"}], "stats": {"total": 211, "additions": 174, "deletions": 37}, "files": [{"sha": "955ff8d47abbaef0f865d9b8511f82e02f32bd97", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566588f1a25e6c9f7206e5874edfbba6eec6e1a7/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566588f1a25e6c9f7206e5874edfbba6eec6e1a7/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=566588f1a25e6c9f7206e5874edfbba6eec6e1a7", "patch": "@@ -1,3 +1,17 @@\n+2018-01-16  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* elf.c (codes) [GENERATE_FIXED_HUFFMAN_TABLE]: Fix size to be\n+\t288.\n+\t(main) [GENERATE_FIXED_HUFFMAN_TABLE]: Pass 288 to\n+\telf_zlib_inflate_table.  Generate elf_zlib_default_dist_table.\n+\t(elf_zlib_default_table): Update.\n+\t(elf_zlib_default_dist_table): New static array.\n+\t(elf_zlib_inflate): Use elf_zlib_default_dist_table for dist table\n+\tfor block type 1.\n+\t* ztest.c (struct zlib_test): Add uncompressed_len.\n+\t(tests): Initialize uncompressed_len field.  Add new test case.\n+\t(test_samples): Use uncompressed_len field.\n+\n 2018-01-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "4be100ec3daf0f412ee34d77519291f082b681f6", "filename": "libbacktrace/elf.c", "status": "modified", "additions": 96, "deletions": 36, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566588f1a25e6c9f7206e5874edfbba6eec6e1a7/libbacktrace%2Felf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566588f1a25e6c9f7206e5874edfbba6eec6e1a7/libbacktrace%2Felf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Felf.c?ref=566588f1a25e6c9f7206e5874edfbba6eec6e1a7", "patch": "@@ -1461,7 +1461,7 @@ elf_zlib_inflate_table (unsigned char *codes, size_t codes_len,\n #include <stdio.h>\n \n static uint16_t table[ZDEBUG_TABLE_SIZE];\n-static unsigned char codes[287];\n+static unsigned char codes[288];\n \n int\n main ()\n@@ -1476,7 +1476,7 @@ main ()\n     codes[i] = 7;\n   for (i = 280; i <= 287; ++i)\n     codes[i] = 8;\n-  if (!elf_zlib_inflate_table (&codes[0], 287, &table[0], &table[0]))\n+  if (!elf_zlib_inflate_table (&codes[0], 288, &table[0], &table[0]))\n     {\n       fprintf (stderr, \"elf_zlib_inflate_table failed\\n\");\n       exit (EXIT_FAILURE);\n@@ -1495,48 +1495,72 @@ main ()\n       printf (\"\\n\");\n     }\n   printf (\"};\\n\");\n+  printf (\"\\n\");\n+\n+  for (i = 0; i < 32; ++i)\n+    codes[i] = 5;\n+  if (!elf_zlib_inflate_table (&codes[0], 32, &table[0], &table[0]))\n+    {\n+      fprintf (stderr, \"elf_zlib_inflate_table failed\\n\");\n+      exit (EXIT_FAILURE);\n+    }\n+\n+  printf (\"static const uint16_t elf_zlib_default_dist_table[%#zx] =\\n\",\n+\t  final_next_secondary + 0x100);\n+  printf (\"{\\n\");\n+  for (i = 0; i < final_next_secondary + 0x100; i += 8)\n+    {\n+      size_t j;\n+\n+      printf (\" \");\n+      for (j = i; j < final_next_secondary + 0x100 && j < i + 8; ++j)\n+\tprintf (\" %#x,\", table[j]);\n+      printf (\"\\n\");\n+    }\n+  printf (\"};\\n\");\n+\n   return 0;\n }\n \n #endif\n \n-/* The fixed table generated by the #ifdef'ed out main function\n+/* The fixed tables generated by the #ifdef'ed out main function\n    above.  */\n \n static const uint16_t elf_zlib_default_table[0x170] =\n {\n-  0xd00, 0xe50, 0xe10, 0xf18, 0xd10, 0xe70, 0xe30, 0x1232,\n-  0xd08, 0xe60, 0xe20, 0x1212, 0xe00, 0xe80, 0xe40, 0x1252,\n-  0xd04, 0xe58, 0xe18, 0x1202, 0xd14, 0xe78, 0xe38, 0x1242,\n-  0xd0c, 0xe68, 0xe28, 0x1222, 0xe08, 0xe88, 0xe48, 0x1262,\n-  0xd02, 0xe54, 0xe14, 0xf1c, 0xd12, 0xe74, 0xe34, 0x123a,\n-  0xd0a, 0xe64, 0xe24, 0x121a, 0xe04, 0xe84, 0xe44, 0x125a,\n-  0xd06, 0xe5c, 0xe1c, 0x120a, 0xd16, 0xe7c, 0xe3c, 0x124a,\n-  0xd0e, 0xe6c, 0xe2c, 0x122a, 0xe0c, 0xe8c, 0xe4c, 0x126a,\n-  0xd01, 0xe52, 0xe12, 0xf1a, 0xd11, 0xe72, 0xe32, 0x1236,\n-  0xd09, 0xe62, 0xe22, 0x1216, 0xe02, 0xe82, 0xe42, 0x1256,\n-  0xd05, 0xe5a, 0xe1a, 0x1206, 0xd15, 0xe7a, 0xe3a, 0x1246,\n-  0xd0d, 0xe6a, 0xe2a, 0x1226, 0xe0a, 0xe8a, 0xe4a, 0x1266,\n-  0xd03, 0xe56, 0xe16, 0xf1e, 0xd13, 0xe76, 0xe36, 0x123e,\n-  0xd0b, 0xe66, 0xe26, 0x121e, 0xe06, 0xe86, 0xe46, 0x125e,\n-  0xd07, 0xe5e, 0xe1e, 0x120e, 0xd17, 0xe7e, 0xe3e, 0x124e,\n-  0xd0f, 0xe6e, 0xe2e, 0x122e, 0xe0e, 0xe8e, 0xe4e, 0x126e,\n-  0xd00, 0xe51, 0xe11, 0xf19, 0xd10, 0xe71, 0xe31, 0x1234,\n-  0xd08, 0xe61, 0xe21, 0x1214, 0xe01, 0xe81, 0xe41, 0x1254,\n-  0xd04, 0xe59, 0xe19, 0x1204, 0xd14, 0xe79, 0xe39, 0x1244,\n-  0xd0c, 0xe69, 0xe29, 0x1224, 0xe09, 0xe89, 0xe49, 0x1264,\n-  0xd02, 0xe55, 0xe15, 0xf1d, 0xd12, 0xe75, 0xe35, 0x123c,\n-  0xd0a, 0xe65, 0xe25, 0x121c, 0xe05, 0xe85, 0xe45, 0x125c,\n-  0xd06, 0xe5d, 0xe1d, 0x120c, 0xd16, 0xe7d, 0xe3d, 0x124c,\n-  0xd0e, 0xe6d, 0xe2d, 0x122c, 0xe0d, 0xe8d, 0xe4d, 0x126c,\n-  0xd01, 0xe53, 0xe13, 0xf1b, 0xd11, 0xe73, 0xe33, 0x1238,\n-  0xd09, 0xe63, 0xe23, 0x1218, 0xe03, 0xe83, 0xe43, 0x1258,\n-  0xd05, 0xe5b, 0xe1b, 0x1208, 0xd15, 0xe7b, 0xe3b, 0x1248,\n-  0xd0d, 0xe6b, 0xe2b, 0x1228, 0xe0b, 0xe8b, 0xe4b, 0x1268,\n-  0xd03, 0xe57, 0xe17, 0x1200, 0xd13, 0xe77, 0xe37, 0x1240,\n-  0xd0b, 0xe67, 0xe27, 0x1220, 0xe07, 0xe87, 0xe47, 0x1260,\n-  0xd07, 0xe5f, 0xe1f, 0x1210, 0xd17, 0xe7f, 0xe3f, 0x1250,\n-  0xd0f, 0xe6f, 0xe2f, 0x1230, 0xe0f, 0xe8f, 0xe4f, 0,\n+  0xd00, 0xe50, 0xe10, 0xf18, 0xd10, 0xe70, 0xe30, 0x1230,\n+  0xd08, 0xe60, 0xe20, 0x1210, 0xe00, 0xe80, 0xe40, 0x1250,\n+  0xd04, 0xe58, 0xe18, 0x1200, 0xd14, 0xe78, 0xe38, 0x1240,\n+  0xd0c, 0xe68, 0xe28, 0x1220, 0xe08, 0xe88, 0xe48, 0x1260,\n+  0xd02, 0xe54, 0xe14, 0xf1c, 0xd12, 0xe74, 0xe34, 0x1238,\n+  0xd0a, 0xe64, 0xe24, 0x1218, 0xe04, 0xe84, 0xe44, 0x1258,\n+  0xd06, 0xe5c, 0xe1c, 0x1208, 0xd16, 0xe7c, 0xe3c, 0x1248,\n+  0xd0e, 0xe6c, 0xe2c, 0x1228, 0xe0c, 0xe8c, 0xe4c, 0x1268,\n+  0xd01, 0xe52, 0xe12, 0xf1a, 0xd11, 0xe72, 0xe32, 0x1234,\n+  0xd09, 0xe62, 0xe22, 0x1214, 0xe02, 0xe82, 0xe42, 0x1254,\n+  0xd05, 0xe5a, 0xe1a, 0x1204, 0xd15, 0xe7a, 0xe3a, 0x1244,\n+  0xd0d, 0xe6a, 0xe2a, 0x1224, 0xe0a, 0xe8a, 0xe4a, 0x1264,\n+  0xd03, 0xe56, 0xe16, 0xf1e, 0xd13, 0xe76, 0xe36, 0x123c,\n+  0xd0b, 0xe66, 0xe26, 0x121c, 0xe06, 0xe86, 0xe46, 0x125c,\n+  0xd07, 0xe5e, 0xe1e, 0x120c, 0xd17, 0xe7e, 0xe3e, 0x124c,\n+  0xd0f, 0xe6e, 0xe2e, 0x122c, 0xe0e, 0xe8e, 0xe4e, 0x126c,\n+  0xd00, 0xe51, 0xe11, 0xf19, 0xd10, 0xe71, 0xe31, 0x1232,\n+  0xd08, 0xe61, 0xe21, 0x1212, 0xe01, 0xe81, 0xe41, 0x1252,\n+  0xd04, 0xe59, 0xe19, 0x1202, 0xd14, 0xe79, 0xe39, 0x1242,\n+  0xd0c, 0xe69, 0xe29, 0x1222, 0xe09, 0xe89, 0xe49, 0x1262,\n+  0xd02, 0xe55, 0xe15, 0xf1d, 0xd12, 0xe75, 0xe35, 0x123a,\n+  0xd0a, 0xe65, 0xe25, 0x121a, 0xe05, 0xe85, 0xe45, 0x125a,\n+  0xd06, 0xe5d, 0xe1d, 0x120a, 0xd16, 0xe7d, 0xe3d, 0x124a,\n+  0xd0e, 0xe6d, 0xe2d, 0x122a, 0xe0d, 0xe8d, 0xe4d, 0x126a,\n+  0xd01, 0xe53, 0xe13, 0xf1b, 0xd11, 0xe73, 0xe33, 0x1236,\n+  0xd09, 0xe63, 0xe23, 0x1216, 0xe03, 0xe83, 0xe43, 0x1256,\n+  0xd05, 0xe5b, 0xe1b, 0x1206, 0xd15, 0xe7b, 0xe3b, 0x1246,\n+  0xd0d, 0xe6b, 0xe2b, 0x1226, 0xe0b, 0xe8b, 0xe4b, 0x1266,\n+  0xd03, 0xe57, 0xe17, 0xf1f, 0xd13, 0xe77, 0xe37, 0x123e,\n+  0xd0b, 0xe67, 0xe27, 0x121e, 0xe07, 0xe87, 0xe47, 0x125e,\n+  0xd07, 0xe5f, 0xe1f, 0x120e, 0xd17, 0xe7f, 0xe3f, 0x124e,\n+  0xd0f, 0xe6f, 0xe2f, 0x122e, 0xe0f, 0xe8f, 0xe4f, 0x126e,\n   0x290, 0x291, 0x292, 0x293, 0x294, 0x295, 0x296, 0x297,\n   0x298, 0x299, 0x29a, 0x29b, 0x29c, 0x29d, 0x29e, 0x29f,\n   0x2a0, 0x2a1, 0x2a2, 0x2a3, 0x2a4, 0x2a5, 0x2a6, 0x2a7,\n@@ -1553,6 +1577,42 @@ static const uint16_t elf_zlib_default_table[0x170] =\n   0x2f8, 0x2f9, 0x2fa, 0x2fb, 0x2fc, 0x2fd, 0x2fe, 0x2ff,\n };\n \n+static const uint16_t elf_zlib_default_dist_table[0x100] =\n+{\n+  0x800, 0x810, 0x808, 0x818, 0x804, 0x814, 0x80c, 0x81c,\n+  0x802, 0x812, 0x80a, 0x81a, 0x806, 0x816, 0x80e, 0x81e,\n+  0x801, 0x811, 0x809, 0x819, 0x805, 0x815, 0x80d, 0x81d,\n+  0x803, 0x813, 0x80b, 0x81b, 0x807, 0x817, 0x80f, 0x81f,\n+  0x800, 0x810, 0x808, 0x818, 0x804, 0x814, 0x80c, 0x81c,\n+  0x802, 0x812, 0x80a, 0x81a, 0x806, 0x816, 0x80e, 0x81e,\n+  0x801, 0x811, 0x809, 0x819, 0x805, 0x815, 0x80d, 0x81d,\n+  0x803, 0x813, 0x80b, 0x81b, 0x807, 0x817, 0x80f, 0x81f,\n+  0x800, 0x810, 0x808, 0x818, 0x804, 0x814, 0x80c, 0x81c,\n+  0x802, 0x812, 0x80a, 0x81a, 0x806, 0x816, 0x80e, 0x81e,\n+  0x801, 0x811, 0x809, 0x819, 0x805, 0x815, 0x80d, 0x81d,\n+  0x803, 0x813, 0x80b, 0x81b, 0x807, 0x817, 0x80f, 0x81f,\n+  0x800, 0x810, 0x808, 0x818, 0x804, 0x814, 0x80c, 0x81c,\n+  0x802, 0x812, 0x80a, 0x81a, 0x806, 0x816, 0x80e, 0x81e,\n+  0x801, 0x811, 0x809, 0x819, 0x805, 0x815, 0x80d, 0x81d,\n+  0x803, 0x813, 0x80b, 0x81b, 0x807, 0x817, 0x80f, 0x81f,\n+  0x800, 0x810, 0x808, 0x818, 0x804, 0x814, 0x80c, 0x81c,\n+  0x802, 0x812, 0x80a, 0x81a, 0x806, 0x816, 0x80e, 0x81e,\n+  0x801, 0x811, 0x809, 0x819, 0x805, 0x815, 0x80d, 0x81d,\n+  0x803, 0x813, 0x80b, 0x81b, 0x807, 0x817, 0x80f, 0x81f,\n+  0x800, 0x810, 0x808, 0x818, 0x804, 0x814, 0x80c, 0x81c,\n+  0x802, 0x812, 0x80a, 0x81a, 0x806, 0x816, 0x80e, 0x81e,\n+  0x801, 0x811, 0x809, 0x819, 0x805, 0x815, 0x80d, 0x81d,\n+  0x803, 0x813, 0x80b, 0x81b, 0x807, 0x817, 0x80f, 0x81f,\n+  0x800, 0x810, 0x808, 0x818, 0x804, 0x814, 0x80c, 0x81c,\n+  0x802, 0x812, 0x80a, 0x81a, 0x806, 0x816, 0x80e, 0x81e,\n+  0x801, 0x811, 0x809, 0x819, 0x805, 0x815, 0x80d, 0x81d,\n+  0x803, 0x813, 0x80b, 0x81b, 0x807, 0x817, 0x80f, 0x81f,\n+  0x800, 0x810, 0x808, 0x818, 0x804, 0x814, 0x80c, 0x81c,\n+  0x802, 0x812, 0x80a, 0x81a, 0x806, 0x816, 0x80e, 0x81e,\n+  0x801, 0x811, 0x809, 0x819, 0x805, 0x815, 0x80d, 0x81d,\n+  0x803, 0x813, 0x80b, 0x81b, 0x807, 0x817, 0x80f, 0x81f,\n+};\n+\n /* Inflate a zlib stream from PIN/SIN to POUT/SOUT.  Return 1 on\n    success, 0 on some error parsing the stream.  */\n \n@@ -1701,7 +1761,7 @@ elf_zlib_inflate (const unsigned char *pin, size_t sin, uint16_t *zdebug_table,\n \t  if (type == 1)\n \t    {\n \t      tlit = elf_zlib_default_table;\n-\t      tdist = elf_zlib_default_table;\n+\t      tdist = elf_zlib_default_dist_table;\n \t    }\n \t  else\n \t    {"}, {"sha": "9cd712a1e0b03d1b85daab287a128b88234aeb32", "filename": "libbacktrace/ztest.c", "status": "modified", "additions": 64, "deletions": 1, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/566588f1a25e6c9f7206e5874edfbba6eec6e1a7/libbacktrace%2Fztest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/566588f1a25e6c9f7206e5874edfbba6eec6e1a7/libbacktrace%2Fztest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fztest.c?ref=566588f1a25e6c9f7206e5874edfbba6eec6e1a7", "patch": "@@ -81,6 +81,7 @@ struct zlib_test\n {\n   const char *name;\n   const char *uncompressed;\n+  size_t uncompressed_len;\n   const char *compressed;\n   size_t compressed_len;\n };\n@@ -102,23 +103,83 @@ static const struct zlib_test tests[] =\n   {\n     \"empty\",\n     \"\",\n+    0,\n     \"\\x78\\x9c\\x03\\x00\\x00\\x00\\x00\\x01\",\n     8,\n   },\n   {\n     \"hello\",\n     \"hello, world\\n\",\n+    0,\n     (\"\\x78\\x9c\\xca\\x48\\xcd\\xc9\\xc9\\xd7\\x51\\x28\\xcf\"\n      \"\\x2f\\xca\\x49\\xe1\\x02\\x04\\x00\\x00\\xff\\xff\\x21\\xe7\\x04\\x93\"),\n     25,\n   },\n   {\n     \"goodbye\",\n     \"goodbye, world\",\n+    0,\n     (\"\\x78\\x9c\\x4b\\xcf\\xcf\\x4f\\x49\\xaa\"\n      \"\\x4c\\xd5\\x51\\x28\\xcf\\x2f\\xca\\x49\"\n      \"\\x01\\x00\\x28\\xa5\\x05\\x5e\"),\n     22,\n+  },\n+  {\n+    \"ranges\",\n+    (\"\\xcc\\x11\\x00\\x00\\x00\\x00\\x00\\x00\\xd5\\x13\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x1c\\x14\\x00\\x00\\x00\\x00\\x00\\x00\\x72\\x14\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x9d\\x14\\x00\\x00\\x00\\x00\\x00\\x00\\xd5\\x14\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\xfb\\x12\\x00\\x00\\x00\\x00\\x00\\x00\\x09\\x13\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x0c\\x13\\x00\\x00\\x00\\x00\\x00\\x00\\xcb\\x13\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x29\\x14\\x00\\x00\\x00\\x00\\x00\\x00\\x4e\\x14\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x9d\\x14\\x00\\x00\\x00\\x00\\x00\\x00\\xd5\\x14\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\xfb\\x12\\x00\\x00\\x00\\x00\\x00\\x00\\x09\\x13\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x67\\x13\\x00\\x00\\x00\\x00\\x00\\x00\\xcb\\x13\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x9d\\x14\\x00\\x00\\x00\\x00\\x00\\x00\\xd5\\x14\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x5f\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x6c\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x7d\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x7e\\x0c\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x38\\x0f\\x00\\x00\\x00\\x00\\x00\\x00\\x5c\\x0f\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x83\\x0c\\x00\\x00\\x00\\x00\\x00\\x00\\xfa\\x0c\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\xfd\\x0d\\x00\\x00\\x00\\x00\\x00\\x00\\xef\\x0e\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x14\\x0f\\x00\\x00\\x00\\x00\\x00\\x00\\x38\\x0f\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x9f\\x0f\\x00\\x00\\x00\\x00\\x00\\x00\\xac\\x0f\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\xdb\\x0f\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\x0f\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\xfd\\x0d\\x00\\x00\\x00\\x00\\x00\\x00\\xd8\\x0e\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x9f\\x0f\\x00\\x00\\x00\\x00\\x00\\x00\\xac\\x0f\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\xdb\\x0f\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\x0f\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\xfa\\x0c\\x00\\x00\\x00\\x00\\x00\\x00\\xea\\x0d\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\xef\\x0e\\x00\\x00\\x00\\x00\\x00\\x00\\x14\\x0f\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x5c\\x0f\\x00\\x00\\x00\\x00\\x00\\x00\\x9f\\x0f\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\xac\\x0f\\x00\\x00\\x00\\x00\\x00\\x00\\xdb\\x0f\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\xff\\x0f\\x00\\x00\\x00\\x00\\x00\\x00\\x2c\\x10\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x60\\x11\\x00\\x00\\x00\\x00\\x00\\x00\\xd1\\x16\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x40\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x2c\\x10\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x7a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xb6\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x9f\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\xa7\\x01\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x7a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xa9\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x9f\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\xa7\\x01\\x00\\x00\\x00\\x00\\x00\\x00\"\n+     \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"),\n+    672,\n+    (\"\\x78\\x9c\\x3b\\x23\\xc8\\x00\\x06\\x57\\x85\\x21\\xb4\\x8c\\x08\\x84\\x2e\\x82\"\n+     \"\\xd2\\x73\\xa1\\xf4\\x55\\x28\\x8d\\x0e\\x7e\\x0b\\x41\\x68\\x4e\\xa8\\x7e\\x1e\"\n+     \"\\x28\\x7d\\x1a\\x4a\\x6b\\x42\\xf5\\xf9\\x91\\x69\\x5e\\x3a\\x9a\\x79\\x84\\xf4\"\n+     \"\\xc7\\x73\\x43\\xe8\\x1c\\x28\\x5d\\x0b\\xa5\\xeb\\x78\\x20\\xb4\\x05\\x3f\\x84\"\n+     \"\\x8e\\xe1\\xc7\\xae\\xbf\\x19\\xaa\\xee\\x17\\x94\\xfe\\xcb\\x0b\\xa1\\xdf\\xf3\"\n+     \"\\x41\\x68\\x11\\x7e\\x54\\x73\\xe6\\x43\\xe9\\x35\\x50\\xfa\\x36\\x94\\xfe\\x8f\"\n+     \"\\xc3\\x7c\\x98\\x79\\x37\\xf8\\xc8\\xd3\\x0f\\x73\\xd7\\x2b\\x1c\\xee\\x8a\\x21\"\n+     \"\\xd2\\x5d\\x3a\\x02\\xd8\\xcd\\x4f\\x80\\xa6\\x87\\x8b\\x62\\x10\\xda\\x81\\x1b\"\n+     \"\\xbf\\xfa\\x2a\\x28\\xbd\\x0d\\x4a\\xcf\\x67\\x84\\xd0\\xcb\\x19\\xf1\\xab\\x5f\"\n+     \"\\x49\\xa4\\x7a\\x00\\x48\\x97\\x29\\xd4\"),\n+    152,\n   }\n };\n \n@@ -139,7 +200,9 @@ test_samples (struct backtrace_state *state)\n \n       p = malloc (12 + tests[i].compressed_len);\n       memcpy (p, \"ZLIB\", 4);\n-      v = strlen (tests[i].uncompressed);\n+      v = tests[i].uncompressed_len;\n+      if (v == 0)\n+\tv = strlen (tests[i].uncompressed);\n       for (j = 0; j < 8; ++j)\n \tp[j + 4] = (v >> ((7 - j) * 8)) & 0xff;\n       memcpy (p + 12, tests[i].compressed, tests[i].compressed_len);"}]}