{"sha": "c43ade800481f77c8fcd70c6d795b0adee045810", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQzYWRlODAwNDgxZjc3YzhmY2Q3MGM2ZDc5NWIwYWRlZTA0NTgxMA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-02-11T13:33:47Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-02-11T13:33:47Z"}, "message": "Handle noreturn function thunk creation.\n\n\tPR ipa/64813\n\t* cgraphunit.c (cgraph_node::expand_thunk): Do not create\n\ta return value for call to a function that is noreturn.\n\nFrom-SVN: r220616", "tree": {"sha": "81e26b69e9721be6b9ce0cea3e83f9f11043cfb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81e26b69e9721be6b9ce0cea3e83f9f11043cfb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c43ade800481f77c8fcd70c6d795b0adee045810", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c43ade800481f77c8fcd70c6d795b0adee045810", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c43ade800481f77c8fcd70c6d795b0adee045810", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c43ade800481f77c8fcd70c6d795b0adee045810/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ece70d335d7d88dc3524708b854518b997e6cf80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ece70d335d7d88dc3524708b854518b997e6cf80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ece70d335d7d88dc3524708b854518b997e6cf80"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "eab5cdba8f869f07debe9d7eed7dce176cdfb1a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43ade800481f77c8fcd70c6d795b0adee045810/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43ade800481f77c8fcd70c6d795b0adee045810/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c43ade800481f77c8fcd70c6d795b0adee045810", "patch": "@@ -1,3 +1,9 @@\n+2015-02-11  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/64813\n+\t* cgraphunit.c (cgraph_node::expand_thunk): Do not create\n+\ta return value for call to a function that is noreturn.\n+\n 2015-02-11  Richard Biener  <rguenther@suse.de>\n \n \tPR lto/65015"}, {"sha": "f2c40d43d71fd4c3fd8d8338cfa937aa3c251e2e", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43ade800481f77c8fcd70c6d795b0adee045810/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43ade800481f77c8fcd70c6d795b0adee045810/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=c43ade800481f77c8fcd70c6d795b0adee045810", "patch": "@@ -1580,6 +1580,7 @@ cgraph_node::expand_thunk (bool output_asm_thunks, bool force_gimple_thunk)\n \n       gcall *call;\n       greturn *ret;\n+      bool alias_is_noreturn = TREE_THIS_VOLATILE (alias);\n \n       if (in_lto_p)\n \tget_untransformed_body ();\n@@ -1616,7 +1617,7 @@ cgraph_node::expand_thunk (bool output_asm_thunks, bool force_gimple_thunk)\n       bsi = gsi_start_bb (bb);\n \n       /* Build call to the function being thunked.  */\n-      if (!VOID_TYPE_P (restype))\n+      if (!VOID_TYPE_P (restype) && !alias_is_noreturn)\n \t{\n \t  if (DECL_BY_REFERENCE (resdecl))\n \t    {\n@@ -1675,14 +1676,14 @@ cgraph_node::expand_thunk (bool output_asm_thunks, bool force_gimple_thunk)\n       callees->call_stmt = call;\n       gimple_call_set_from_thunk (call, true);\n       gimple_call_set_with_bounds (call, instrumentation_clone);\n-      if (restmp)\n+      if (restmp && !alias_is_noreturn)\n \t{\n           gimple_call_set_lhs (call, restmp);\n \t  gcc_assert (useless_type_conversion_p (TREE_TYPE (restmp),\n \t\t\t\t\t\t TREE_TYPE (TREE_TYPE (alias))));\n \t}\n       gsi_insert_after (&bsi, call, GSI_NEW_STMT);\n-      if (!(gimple_call_flags (call) & ECF_NORETURN))\n+      if (!alias_is_noreturn)\n \t{\n \t  if (restmp && !this_adjusting\n \t      && (fixed_offset || virtual_offset))"}]}