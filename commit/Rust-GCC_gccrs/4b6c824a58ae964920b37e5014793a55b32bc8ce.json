{"sha": "4b6c824a58ae964920b37e5014793a55b32bc8ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI2YzgyNGE1OGFlOTY0OTIwYjM3ZTUwMTQ3OTNhNTViMzJiYzhjZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-02-19T19:11:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-02-19T19:11:58Z"}, "message": "re PR c++/69851 (ICE:  in assign_temp, at function.c:961)\n\n\tPR c++/69851\n\t* expr.c (store_field): Don't use bit-field path if exp is\n\tCOMPONENT_REF with TREE_ADDRESSABLE type, where TYPE_SIZE is\n\tdifferent from bitsize, but DECL_SIZE of FIELD_DECL is bitsize\n\tand the assignment can be performed by bitwise copy.  Formatting\n\tfix.\n\n\t* g++.dg/torture/pr69851.C: New test.\n\nFrom-SVN: r233566", "tree": {"sha": "ad095f6a8fb1989c26f70257401d09f011e05436", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad095f6a8fb1989c26f70257401d09f011e05436"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b6c824a58ae964920b37e5014793a55b32bc8ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b6c824a58ae964920b37e5014793a55b32bc8ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b6c824a58ae964920b37e5014793a55b32bc8ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b6c824a58ae964920b37e5014793a55b32bc8ce/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "15fca21a3e563ae90a5cc4ae00c36cc0c8e3f6f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15fca21a3e563ae90a5cc4ae00c36cc0c8e3f6f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15fca21a3e563ae90a5cc4ae00c36cc0c8e3f6f9"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "c39390c3eab5a9068ac56d8e86362c1d2b438d6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6c824a58ae964920b37e5014793a55b32bc8ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6c824a58ae964920b37e5014793a55b32bc8ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b6c824a58ae964920b37e5014793a55b32bc8ce", "patch": "@@ -1,5 +1,12 @@\n 2016-02-19  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/69851\n+\t* expr.c (store_field): Don't use bit-field path if exp is\n+\tCOMPONENT_REF with TREE_ADDRESSABLE type, where TYPE_SIZE is\n+\tdifferent from bitsize, but DECL_SIZE of FIELD_DECL is bitsize\n+\tand the assignment can be performed by bitwise copy.  Formatting\n+\tfix.\n+\n \tPR middle-end/69838\n \t* lra.c (lra_process_new_insns): If non-call exceptions are enabled,\n \tcall copy_reg_eh_region_note_forward on before and/or after sequences"}, {"sha": "4ad76e10e27d1266adbc96e9dc71e70448de0751", "filename": "gcc/expr.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6c824a58ae964920b37e5014793a55b32bc8ce/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6c824a58ae964920b37e5014793a55b32bc8ce/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=4b6c824a58ae964920b37e5014793a55b32bc8ce", "patch": "@@ -6643,14 +6643,27 @@ store_field (rtx target, HOST_WIDE_INT bitsize, HOST_WIDE_INT bitpos,\n \t  /* Except for initialization of full bytes from a CONSTRUCTOR, which\n \t     we will handle specially below.  */\n \t  && !(TREE_CODE (exp) == CONSTRUCTOR\n-\t       && bitsize % BITS_PER_UNIT == 0))\n+\t       && bitsize % BITS_PER_UNIT == 0)\n+\t  /* And except for bitwise copying of TREE_ADDRESSABLE types,\n+\t     where the FIELD_DECL has the right bitsize, but TREE_TYPE (exp)\n+\t     includes some extra padding.  store_expr / expand_expr will in\n+\t     that case call get_inner_reference that will have the bitsize\n+\t     we check here and thus the block move will not clobber the\n+\t     padding that shouldn't be clobbered.  */\n+\t  && (!TREE_ADDRESSABLE (TREE_TYPE (exp))\n+\t      || TREE_CODE (exp) != COMPONENT_REF\n+\t      || TREE_CODE (DECL_SIZE (TREE_OPERAND (exp, 1))) != INTEGER_CST\n+\t      || (bitsize % BITS_PER_UNIT != 0)\n+\t      || (bitpos % BITS_PER_UNIT != 0)\n+\t      || (compare_tree_int (DECL_SIZE (TREE_OPERAND (exp, 1)), bitsize)\n+\t\t  != 0)))\n       /* If we are expanding a MEM_REF of a non-BLKmode non-addressable\n          decl we must use bitfield operations.  */\n       || (bitsize >= 0\n \t  && TREE_CODE (exp) == MEM_REF\n \t  && TREE_CODE (TREE_OPERAND (exp, 0)) == ADDR_EXPR\n \t  && DECL_P (TREE_OPERAND (TREE_OPERAND (exp, 0), 0))\n-\t  && !TREE_ADDRESSABLE (TREE_OPERAND (TREE_OPERAND (exp, 0),0 ))\n+\t  && !TREE_ADDRESSABLE (TREE_OPERAND (TREE_OPERAND (exp, 0), 0))\n \t  && DECL_MODE (TREE_OPERAND (TREE_OPERAND (exp, 0), 0)) != BLKmode))\n     {\n       rtx temp;"}, {"sha": "f753e7bdec8283e8245c0596044b2f365d461f84", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6c824a58ae964920b37e5014793a55b32bc8ce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6c824a58ae964920b37e5014793a55b32bc8ce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4b6c824a58ae964920b37e5014793a55b32bc8ce", "patch": "@@ -1,3 +1,8 @@\n+2016-02-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/69851\n+\t* g++.dg/torture/pr69851.C: New test.\n+\n 2016-02-19  Martin Sebor  <msebor@redhat.com>\n \n \tPR testsuite/69573"}, {"sha": "17dbfa66b62d21b195fda5f372142eb060f3509e", "filename": "gcc/testsuite/g++.dg/torture/pr69851.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6c824a58ae964920b37e5014793a55b32bc8ce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr69851.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6c824a58ae964920b37e5014793a55b32bc8ce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr69851.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr69851.C?ref=4b6c824a58ae964920b37e5014793a55b32bc8ce", "patch": "@@ -0,0 +1,24 @@\n+// PR c++/69851\n+// { dg-do compile }\n+// { dg-options \"-std=c++11\" }\n+\n+template <typename T>\n+struct A { T a; };\n+template <unsigned long, typename...>\n+struct B;\n+template <unsigned long N, typename T, typename... U>\n+struct B<N, T, U...> : B<1, U...>, A<T>\n+{\n+  B (B &) = default;\n+  B (B &&x) : B(x) {}\n+};\n+template <unsigned long N, typename T>\n+struct B<N, T> {};\n+struct C { C (C &); };\n+struct D {};\n+\n+void\n+foo (B<0, C, D, int, int> a)\n+{\n+  B<0, C, D, int, int> b (a);\n+}"}]}