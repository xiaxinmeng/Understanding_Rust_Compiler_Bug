{"sha": "9a63e81decd44e0dbd794dc9dee22ee34302858a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE2M2U4MWRlY2Q0NGUwZGJkNzk0ZGM5ZGVlMjJlZTM0MzAyODU4YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-13T19:46:38Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-13T19:46:38Z"}, "message": "(clear_struct_flag): Add void return type defn.\n\n(count_subs_rtx): Add int return type and add definition.\n(simplify_test_exp): Delete debugging junk.\n(do_nothing): Delete.\n\nFrom-SVN: r4128", "tree": {"sha": "b650c583edcd57c63f4c745b733f74f2272a9688", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b650c583edcd57c63f4c745b733f74f2272a9688"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a63e81decd44e0dbd794dc9dee22ee34302858a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a63e81decd44e0dbd794dc9dee22ee34302858a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a63e81decd44e0dbd794dc9dee22ee34302858a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a63e81decd44e0dbd794dc9dee22ee34302858a/comments", "author": null, "committer": null, "parents": [{"sha": "d938afd3a4f31c6bf04aa329b8ef1053349c5f61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d938afd3a4f31c6bf04aa329b8ef1053349c5f61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d938afd3a4f31c6bf04aa329b8ef1053349c5f61"}], "stats": {"total": 17, "additions": 4, "deletions": 13}, "files": [{"sha": "02df1af75fc1bb5f5d53adb19cb3053cd100285c", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a63e81decd44e0dbd794dc9dee22ee34302858a/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a63e81decd44e0dbd794dc9dee22ee34302858a/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=9a63e81decd44e0dbd794dc9dee22ee34302858a", "patch": "@@ -394,6 +394,8 @@ static int increment_current_value PROTO((struct dimension *, int));\n static rtx test_for_current_value PROTO((struct dimension *, int));\n static rtx simplify_with_current_value PROTO((rtx, struct dimension *, int));\n static rtx simplify_with_current_value_aux PROTO((rtx));\n+static void clear_struct_flag PROTO((rtx));\n+static int count_sub_rtxs    PROTO((rtx, int));\n static void remove_insn_ent  PROTO((struct attr_value *, struct insn_ent *));\n static void insert_insn_ent  PROTO((struct attr_value *, struct insn_ent *));\n static rtx insert_right_side\tPROTO((enum rtx_code, rtx, rtx, int, int));\n@@ -2981,16 +2983,6 @@ simplify_test_exp (exp, insn_code, insn_index)\n   rtx newexp = exp;\n   char *spacer = (char *) obstack_finish (rtl_obstack);\n \n-  static rtx loser = 0;\n-  static int count = 0;\n-  static stopcount = 0;\n-\n-  if (exp == loser)\n-    do_nothing ();\n-  count++;\n-  if (count == stopcount)\n-    do_nothing ();\n-\n   /* Don't re-simplify something we already simplified.  */\n   if (RTX_UNCHANGING_P (exp) || MEM_IN_STRUCT_P (exp))\n     return exp;\n@@ -3261,9 +3253,6 @@ simplify_test_exp (exp, insn_code, insn_index)\n \n   return newexp;\n }\n-\n-do_nothing ()\n-{}\n \f\n /* Optimize the attribute lists by seeing if we can determine conditional\n    values from the known values of other attributes.  This will save subroutine\n@@ -3833,6 +3822,7 @@ simplify_with_current_value_aux (exp)\n \f\n /* Clear the MEM_IN_STRUCT_P flag in EXP and its subexpressions.  */\n \n+static void\n clear_struct_flag (x)\n      rtx x;\n {\n@@ -3886,6 +3876,7 @@ clear_struct_flag (x)\n /* Return the number of RTX objects making up the expression X.\n    But if we count more more than MAX objects, stop counting.  */\n \n+static int\n count_sub_rtxs (x, max)\n      rtx x;\n      int max;"}]}