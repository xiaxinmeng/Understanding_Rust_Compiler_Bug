{"sha": "d4175ef48ba562f6fb8098b6fa000f3d77e11e1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQxNzVlZjQ4YmE1NjJmNmZiODA5OGI2ZmEwMDBmM2Q3N2UxMWUxYg==", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2020-05-11T11:51:13Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-07T09:26:55Z"}, "message": "[Ada] Ensure No_Specification_Of_Aspect forbids pragmas and repr. clauses\n\ngcc/ada/\n\n\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause): Add call\n\tto Check_Restriction_No_Specification_Of_Aspect.\n\t* sem_prag.adb (Analyze_Pragma): Likewise.\n\t* restrict.ads (Check_Restriction_No_Specification_Of_Aspect):\n\tMention possible new node kinds in documentation.\n\t* restrict.adb (Check_Restriction_No_Specification_Of_Aspect):\n\tRetrieve aspect id from different fields if given node is an\n\tN_Pragma or an N_Attribute_Definition_Clause.", "tree": {"sha": "c2d4d1476bf72c6c8897fcb3884925e1dcde0eb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2d4d1476bf72c6c8897fcb3884925e1dcde0eb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4175ef48ba562f6fb8098b6fa000f3d77e11e1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4175ef48ba562f6fb8098b6fa000f3d77e11e1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4175ef48ba562f6fb8098b6fa000f3d77e11e1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4175ef48ba562f6fb8098b6fa000f3d77e11e1b/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58e07eaae447b73763ae390a13a613a6b70679ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58e07eaae447b73763ae390a13a613a6b70679ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58e07eaae447b73763ae390a13a613a6b70679ce"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "08788d1de9e6096abb99f19360e73b113a02a34f", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4175ef48ba562f6fb8098b6fa000f3d77e11e1b/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4175ef48ba562f6fb8098b6fa000f3d77e11e1b/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=d4175ef48ba562f6fb8098b6fa000f3d77e11e1b", "patch": "@@ -626,7 +626,14 @@ package body Restrict is\n          return;\n       end if;\n \n-      Id := Identifier (N);\n+      if Nkind (N) = N_Pragma then\n+         Id := Pragma_Identifier (N);\n+      elsif Nkind (N) = N_Attribute_Definition_Clause then\n+         Id := N;\n+      else\n+         Id := Identifier (N);\n+      end if;\n+\n       A_Id := Get_Aspect_Id (Chars (Id));\n       pragma Assert (A_Id /= No_Aspect);\n "}, {"sha": "a638401139970ce6b014b7d122f6b143bc8fe42b", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4175ef48ba562f6fb8098b6fa000f3d77e11e1b/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4175ef48ba562f6fb8098b6fa000f3d77e11e1b/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=d4175ef48ba562f6fb8098b6fa000f3d77e11e1b", "patch": "@@ -283,9 +283,10 @@ package Restrict is\n    --  the node to which an error will be attached if necessary.\n \n    procedure Check_Restriction_No_Specification_Of_Aspect (N : Node_Id);\n-   --  N is the node id for an N_Aspect_Specification. An error message\n-   --  (warning) will be issued if a restriction (warning) was previously set\n-   --  for this aspect using Set_No_Specification_Of_Aspect.\n+   --  N is the node id for an N_Aspect_Specification, an N_Pragma, or an\n+   --  N_Attribute_Definition_Clause. An error message (warning) will be issued\n+   --  if a restriction (warning) was previously set for this aspect using\n+   --  Set_No_Specification_Of_Aspect.\n \n    procedure Check_Restriction_No_Use_Of_Attribute (N : Node_Id);\n    --  N denotes an attribute definition clause or an attribute reference. An"}, {"sha": "f854711a0a5a0674d66924d9985816437b7a66db", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4175ef48ba562f6fb8098b6fa000f3d77e11e1b/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4175ef48ba562f6fb8098b6fa000f3d77e11e1b/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=d4175ef48ba562f6fb8098b6fa000f3d77e11e1b", "patch": "@@ -5643,6 +5643,13 @@ package body Sem_Ch13 is\n \n       Check_Restriction_No_Use_Of_Attribute (N);\n \n+      if Get_Aspect_Id (Chars (N)) /= No_Aspect then\n+         --  6.1/3 No_Specification_of_Aspect: Identifies an aspect for which\n+         --    no aspect_specification, attribute_definition_clause, or pragma\n+         --    is given.\n+         Check_Restriction_No_Specification_Of_Aspect (N);\n+      end if;\n+\n       --  Ignore some selected attributes in CodePeer mode since they are not\n       --  relevant in this context.\n "}, {"sha": "95a117373ad4616c50b1f504023bb0d52696cbfb", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4175ef48ba562f6fb8098b6fa000f3d77e11e1b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4175ef48ba562f6fb8098b6fa000f3d77e11e1b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=d4175ef48ba562f6fb8098b6fa000f3d77e11e1b", "patch": "@@ -11477,6 +11477,13 @@ package body Sem_Prag is\n \n       Check_Restriction_No_Use_Of_Pragma (N);\n \n+      if Get_Aspect_Id (Chars (Pragma_Identifier (N))) /= No_Aspect then\n+         --  6.1/3 No_Specification_of_Aspect: Identifies an aspect for which\n+         --    no aspect_specification, attribute_definition_clause, or pragma\n+         --    is given.\n+         Check_Restriction_No_Specification_Of_Aspect (N);\n+      end if;\n+\n       --  Ignore pragma if Ignore_Pragma applies. Also ignore pragma\n       --  Default_Scalar_Storage_Order if the -gnatI switch was given.\n "}]}