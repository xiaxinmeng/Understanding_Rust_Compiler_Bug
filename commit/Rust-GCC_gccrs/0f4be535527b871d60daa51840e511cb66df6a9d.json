{"sha": "0f4be535527b871d60daa51840e511cb66df6a9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY0YmU1MzU1MjdiODcxZDYwZGFhNTE4NDBlNTExY2I2NmRmNmE5ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-12-05T11:02:24Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-12-05T11:02:24Z"}, "message": "[multiple changes]\n\n2012-12-05  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_dist.adb: Minor reformatting.\n\n2012-12-05  Tristan Gingold  <gingold@adacore.com>\n\n\t* Make-generated.in: Remove the VMS host specific part, as VMS\n\tcompilers aren't built anymore on VMS.\n\n2012-12-05  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem.adb, errout.ads, atree.adb, atree.ads (Check_Error_Detected):\n\tOnly return quietly if a serious error of configurable run time\n\tviolation has been found.\n\n2012-12-05  Yannick Moy  <moy@adacore.com>\n\n\t* sem_res.adb (Resolve_Type_Conversion): In Alfa_Mode, do not apply\n\tconversion checks.\n\nFrom-SVN: r194205", "tree": {"sha": "58acd4c116ae1b2b68b9482f60b3681d1ea78517", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58acd4c116ae1b2b68b9482f60b3681d1ea78517"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f4be535527b871d60daa51840e511cb66df6a9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f4be535527b871d60daa51840e511cb66df6a9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f4be535527b871d60daa51840e511cb66df6a9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f4be535527b871d60daa51840e511cb66df6a9d/comments", "author": null, "committer": null, "parents": [{"sha": "a53c56136d37b424f4f6b89e903763b82c33cfb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a53c56136d37b424f4f6b89e903763b82c33cfb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a53c56136d37b424f4f6b89e903763b82c33cfb9"}], "stats": {"total": 79, "additions": 52, "deletions": 27}, "files": [{"sha": "365039f0bf31b913be418b7bb2e01fe540dd2c44", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f4be535527b871d60daa51840e511cb66df6a9d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f4be535527b871d60daa51840e511cb66df6a9d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0f4be535527b871d60daa51840e511cb66df6a9d", "patch": "@@ -1,3 +1,23 @@\n+2012-12-05  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_dist.adb: Minor reformatting.\n+\n+2012-12-05  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* Make-generated.in: Remove the VMS host specific part, as VMS\n+\tcompilers aren't built anymore on VMS.\n+\n+2012-12-05  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem.adb, errout.ads, atree.adb, atree.ads (Check_Error_Detected):\n+\tOnly return quietly if a serious error of configurable run time\n+\tviolation has been found.\n+\n+2012-12-05  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Type_Conversion): In Alfa_Mode, do not apply\n+\tconversion checks.\n+\n 2012-12-05  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch5.adb (Expand_N_Assignment_Statement): Handle properly"}, {"sha": "1ddd0b54c33a28e7e1d257fe54304d6c80ef2c3e", "filename": "gcc/ada/Make-generated.in", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f4be535527b871d60daa51840e511cb66df6a9d/gcc%2Fada%2FMake-generated.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f4be535527b871d60daa51840e511cb66df6a9d/gcc%2Fada%2FMake-generated.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-generated.in?ref=0f4be535527b871d60daa51840e511cb66df6a9d", "patch": "@@ -66,24 +66,23 @@ $(ADA_GEN_SUBDIR)/stamp-nmake: $(ADA_GEN_SUBDIR)/sinfo.ads $(ADA_GEN_SUBDIR)/nma\n \t$(MOVE_IF_CHANGE) $(ADA_GEN_SUBDIR)/bldtools/nmake/nmake.adb $(ADA_GEN_SUBDIR)/nmake.adb\n \ttouch $(ADA_GEN_SUBDIR)/stamp-nmake\n \n-ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(subst -, ,$(host)))),)\n-OSCONS_CPP=../../../$(DECC) -E /comment=as_is -DNATIVE \\\n-             -DTARGET='\"\"$(target)\"\"' s-oscons-tmplt.c\n-\n-OSCONS_EXTRACT=../../../$(DECC) -DNATIVE \\\n-                 -DTARGET='\"\"$(target)\"\"' s-oscons-tmplt.c ; \\\n-  ld -o s-oscons-tmplt.exe s-oscons-tmplt.obj; \\\n-  ./s-oscons-tmplt.exe > s-oscons-tmplt.s\n-\n-else\n # GCC_FOR_TARGET has paths relative to the gcc directory, so we need to adjust\n # for running it from $(ADA_GEN_SUBDIR)/bldtools/oscons\n OSCONS_CC=`echo \"$(GCC_FOR_TARGET)\" \\\n   | sed -e 's^\\./xgcc^../../../xgcc^' -e 's^-B./^-B../../../^'`\n OSCONS_CPP=$(OSCONS_CC) $(GNATLIBCFLAGS) -E -C \\\n   -DTARGET=\\\"$(target)\\\" s-oscons-tmplt.c > s-oscons-tmplt.i\n OSCONS_EXTRACT=$(OSCONS_CC) -S s-oscons-tmplt.i\n-endif\n+\n+# Note: if you need to build with a non-GNU compiler, you could adapt the\n+# following definitions (written for VMS DEC-C)\n+#OSCONS_CPP=../../../$(DECC) -E /comment=as_is -DNATIVE \\\n+#             -DTARGET='\"\"$(target)\"\"' s-oscons-tmplt.c\n+#\n+#OSCONS_EXTRACT=../../../$(DECC) -DNATIVE \\\n+#                 -DTARGET='\"\"$(target)\"\"' s-oscons-tmplt.c ; \\\n+#  ld -o s-oscons-tmplt.exe s-oscons-tmplt.obj; \\\n+#  ./s-oscons-tmplt.exe > s-oscons-tmplt.s\n \n $(ADA_GEN_SUBDIR)/s-oscons.ads : $(ADA_GEN_SUBDIR)/s-oscons-tmplt.c $(ADA_GEN_SUBDIR)/gsocket.h $(ADA_GEN_SUBDIR)/xoscons.adb $(ADA_GEN_SUBDIR)/xutil.ads $(ADA_GEN_SUBDIR)/xutil.adb\n \t-$(MKDIR) $(ADA_GEN_SUBDIR)/bldtools/oscons"}, {"sha": "a5c80dc8e365f979cf7f9103e3b6beefd20735c8", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f4be535527b871d60daa51840e511cb66df6a9d/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f4be535527b871d60daa51840e511cb66df6a9d/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=0f4be535527b871d60daa51840e511cb66df6a9d", "patch": "@@ -567,9 +567,12 @@ package body Atree is\n    procedure Check_Error_Detected is\n    begin\n       --  An anomaly has been detected which is assumed to be a consequence of\n-      --  a previous error. Raise an exception if no error found previously.\n+      --  a previous serious error or configurable run time violation. Raise\n+      --  an exception if no such error has been detected.\n \n-      if Total_Errors_Detected = 0 then\n+      if Serious_Errors_Detected = 0\n+        and then Configurable_Run_Time_Violations = 0\n+      then\n          raise Program_Error;\n       end if;\n    end Check_Error_Detected;"}, {"sha": "ac27b3fbae3b8983e2f3aa0b90b35d964589c5cf", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f4be535527b871d60daa51840e511cb66df6a9d/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f4be535527b871d60daa51840e511cb66df6a9d/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=0f4be535527b871d60daa51840e511cb66df6a9d", "patch": "@@ -302,12 +302,20 @@ package Atree is\n    --  Number of warnings detected. Initialized to zero at the start of\n    --  compilation. Initialized for -gnatVa use, see comment above.\n \n+   Configurable_Run_Time_Violations : Nat := 0;\n+   --  Count of configurable run time violations so far. This is used to\n+   --  suppress certain cascaded error messages when we know that we may not\n+   --  have fully expanded some items, due to high integrity violations (i.e.\n+   --  the use of constructs not permitted by the library in use, or improper\n+   --  constructs in No_Run_Time mode).\n+\n    procedure Check_Error_Detected;\n    --  When an anomaly is found in the tree, many semantic routines silently\n    --  bail out, assuming that the anomaly was caused by a previously detected\n-   --  error. This routine should be called in these cases, and will raise an\n-   --  exception if no error has been detected. This ensure that the anomaly\n-   --  is never allowed to go unnoticed.\n+   --  serious error (or configurable run time violation). This routine should\n+   --  be called in these cases, and will raise an exception if no such error\n+   --  has been detected. This ensure that the anomaly is never allowed to go\n+   --  unnoticed.\n \n    -------------------------------\n    -- Default Setting of Fields --"}, {"sha": "0f746d989cc5778a72da8d9bcfee7f55314cbe97", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f4be535527b871d60daa51840e511cb66df6a9d/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f4be535527b871d60daa51840e511cb66df6a9d/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=0f4be535527b871d60daa51840e511cb66df6a9d", "patch": "@@ -39,13 +39,6 @@ with System;\n \n package Errout is\n \n-   Configurable_Run_Time_Violations : Nat := 0;\n-   --  Count of configurable run time violations so far. This is used to\n-   --  suppress certain cascaded error messages when we know that we may not\n-   --  have fully expanded some items, due to high integrity violations (i.e.\n-   --  the use of constructs not permitted by the library in use, or improper\n-   --  constructs in No_Run_Time mode).\n-\n    Current_Error_Source_File : Source_File_Index\n      renames Err_Vars.Current_Error_Source_File;\n    --  Id of current messages. Used to post file name when unit changes. This"}, {"sha": "92aa42700570361c259bc35861c33237bd72b260", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f4be535527b871d60daa51840e511cb66df6a9d/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f4be535527b871d60daa51840e511cb66df6a9d/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=0f4be535527b871d60daa51840e511cb66df6a9d", "patch": "@@ -10077,7 +10077,7 @@ package body Exp_Dist is\n                --  Integer types (walk back to the base type)\n \n                elsif U_Type = RTE (RE_Integer_8) then\n-                     Lib_RE := RE_TC_I8;\n+                  Lib_RE := RE_TC_I8;\n \n                elsif U_Type = RTE (RE_Integer_16) then\n                   Lib_RE := RE_TC_I16;\n@@ -10188,7 +10188,7 @@ package body Exp_Dist is\n             --  Make a return statement that calls TC_Build with the given\n             --  typecode kind, and the constructed parameters list.\n \n-            procedure Return_Alias_TypeCode (Base_TypeCode  : Node_Id);\n+            procedure Return_Alias_TypeCode (Base_TypeCode : Node_Id);\n             --  Return a typecode that is a TC_Alias for the given typecode\n \n             --------------------------\n@@ -10258,7 +10258,7 @@ package body Exp_Dist is\n             ---------------------------\n \n             procedure Return_Alias_TypeCode\n-              (Base_TypeCode  : Node_Id)\n+              (Base_TypeCode : Node_Id)\n             is\n             begin\n                Add_TypeCode_Parameter (Base_TypeCode, Parameters);"}, {"sha": "95b694287049b65fb5f332481796d02aeaa55375", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f4be535527b871d60daa51840e511cb66df6a9d/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f4be535527b871d60daa51840e511cb66df6a9d/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=0f4be535527b871d60daa51840e511cb66df6a9d", "patch": "@@ -27,7 +27,6 @@ with Atree;    use Atree;\n with Debug;    use Debug;\n with Debug_A;  use Debug_A;\n with Elists;   use Elists;\n-with Errout;   use Errout;\n with Expander; use Expander;\n with Fname;    use Fname;\n with Lib;      use Lib;"}, {"sha": "dd07b3062e9bfae95533e050ae56a6536c131c29", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f4be535527b871d60daa51840e511cb66df6a9d/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f4be535527b871d60daa51840e511cb66df6a9d/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=0f4be535527b871d60daa51840e511cb66df6a9d", "patch": "@@ -9552,11 +9552,14 @@ package body Sem_Res is\n       --  Skip these type conversion checks if universal fixed operands\n       --  operands involved, since range checks are handled separately for\n       --  these cases (in the appropriate Expand routines in unit Exp_Fixd).\n+      --  Also skip type conversion checks in formal verification mode, as the\n+      --  formal verification backend deals directly with these checks.\n \n       if Nkind (N) = N_Type_Conversion\n         and then not Is_Generic_Type (Root_Type (Target_Typ))\n         and then Target_Typ  /= Universal_Fixed\n         and then Operand_Typ /= Universal_Fixed\n+        and then not Alfa_Mode\n       then\n          Apply_Type_Conversion_Checks (N);\n       end if;"}]}