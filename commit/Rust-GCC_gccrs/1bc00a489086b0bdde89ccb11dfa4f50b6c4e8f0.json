{"sha": "1bc00a489086b0bdde89ccb11dfa4f50b6c4e8f0", "node_id": "C_kwDOANBUbNoAKDFiYzAwYTQ4OTA4NmIwYmRkZTg5Y2NiMTFkZmE0ZjUwYjZjNGU4ZjA", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-01-26T13:56:01Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-01-26T15:25:10Z"}, "message": "IPA mod-ref: fix usage of --param names in dump messages.\n\ngcc/ChangeLog:\n\n\t* ipa-modref-tree.cc (modref_access_node::update):\n\tRemove \"--param param=foo\" with \"--param foo\".\n\t(modref_access_node::insert): Likewise.\n\t(modref_access_node::insert_kill): Likewise.\n\t* ipa-modref-tree.h (struct modref_ref_node): Likewise.\n\t(struct modref_base_node): Likewise.\n\t(struct modref_tree): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/tree-ssa/modref-7.c: Update scanned patterns.\n\t* gcc.dg/tree-ssa/modref-8.c: Likewise.", "tree": {"sha": "db479ae1d28e644306d07c76ab44ea493a9f897f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db479ae1d28e644306d07c76ab44ea493a9f897f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bc00a489086b0bdde89ccb11dfa4f50b6c4e8f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bc00a489086b0bdde89ccb11dfa4f50b6c4e8f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bc00a489086b0bdde89ccb11dfa4f50b6c4e8f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bc00a489086b0bdde89ccb11dfa4f50b6c4e8f0/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bcf835e0a4e3334e1c60f314ae6917ba648bdde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bcf835e0a4e3334e1c60f314ae6917ba648bdde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bcf835e0a4e3334e1c60f314ae6917ba648bdde"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "828994f353674c6a5f4613a71c794d3797a0944f", "filename": "gcc/ipa-modref-tree.cc", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc00a489086b0bdde89ccb11dfa4f50b6c4e8f0/gcc%2Fipa-modref-tree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc00a489086b0bdde89ccb11dfa4f50b6c4e8f0/gcc%2Fipa-modref-tree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-modref-tree.cc?ref=1bc00a489086b0bdde89ccb11dfa4f50b6c4e8f0", "patch": "@@ -130,8 +130,7 @@ modref_access_node::update (poly_int64 parm_offset1,\n   else\n     {\n       if (dump_file)\n-\tfprintf (dump_file,\n-\t\t \"--param param=modref-max-adjustments limit reached:\");\n+\tfprintf (dump_file, \"--param modref-max-adjustments limit reached:\");\n       if (!known_eq (parm_offset, parm_offset1))\n \t{\n \t  if (dump_file)\n@@ -594,11 +593,11 @@ modref_access_node::insert (vec <modref_access_node, va_gc> *&accesses,\n \treturn -1;\n       if (dump_file && best2 >= 0)\n \tfprintf (dump_file,\n-\t\t \"--param param=modref-max-accesses limit reached;\"\n+\t\t \"--param modref-max-accesses limit reached;\"\n \t\t \" merging %i and %i\\n\", best1, best2);\n       else if (dump_file)\n \tfprintf (dump_file,\n-\t\t \"--param param=modref-max-accesses limit reached;\"\n+\t\t \"--param modref-max-accesses limit reached;\"\n \t\t \" merging with %i\\n\", best1);\n       modref_access_node::try_merge_with (accesses, best1);\n       if (best2 >= 0)\n@@ -825,8 +824,7 @@ modref_access_node::insert_kill (vec<modref_access_node> &kills,\n       if ((int)kills.length () >= param_modref_max_accesses)\n \t{\n \t  if (dump_file)\n-\t    fprintf (dump_file,\n-\t\t     \"--param param=modref-max-accesses limit reached:\");\n+\t    fprintf (dump_file, \"--param modref-max-accesses limit reached:\");\n \t  return false;\n \t}\n       a.adjustments = 0;"}, {"sha": "fdaa9612e9a2dc869a326a5839a8f9f4de266021", "filename": "gcc/ipa-modref-tree.h", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc00a489086b0bdde89ccb11dfa4f50b6c4e8f0/gcc%2Fipa-modref-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc00a489086b0bdde89ccb11dfa4f50b6c4e8f0/gcc%2Fipa-modref-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-modref-tree.h?ref=1bc00a489086b0bdde89ccb11dfa4f50b6c4e8f0", "patch": "@@ -197,8 +197,7 @@ struct GTY((user)) modref_ref_node\n       {\n \tif (dump_file)\n \t  fprintf (dump_file,\n-\t\t   \"--param param=modref-max-accesses limit reached;\"\n-\t\t   \" collapsing\\n\");\n+\t\t   \"--param modref-max-accesses limit reached; collapsing\\n\");\n \tcollapse ();\n       }\n     return ret != 0;\n@@ -252,7 +251,7 @@ struct GTY((user)) modref_base_node\n     if (ref && refs && refs->length () >= max_refs)\n       {\n \tif (dump_file)\n-\t  fprintf (dump_file, \"--param param=modref-max-refs limit reached;\"\n+\t  fprintf (dump_file, \"--param modref-max-refs limit reached;\"\n \t\t   \" using 0\\n\");\n \tref = 0;\n \tref_node = search (ref);\n@@ -344,12 +343,12 @@ struct GTY((user)) modref_tree\n \tif (base_node)\n \t  {\n \t    if (dump_file)\n-\t      fprintf (dump_file, \"--param param=modref-max-bases\"\n+\t      fprintf (dump_file, \"--param modref-max-bases\"\n \t\t       \" limit reached; using ref\\n\");\n \t    return base_node;\n \t  }\n \tif (dump_file)\n-\t  fprintf (dump_file, \"--param param=modref-max-bases\"\n+\t  fprintf (dump_file, \"--param modref-max-bases\"\n \t\t   \" limit reached; using 0\\n\");\n \tbase = 0;\n \tbase_node = search (base);"}, {"sha": "b55d7066b222b9161026f3a0c9ac309c223937fc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/modref-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc00a489086b0bdde89ccb11dfa4f50b6c4e8f0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fmodref-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc00a489086b0bdde89ccb11dfa4f50b6c4e8f0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fmodref-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fmodref-7.c?ref=1bc00a489086b0bdde89ccb11dfa4f50b6c4e8f0", "patch": "@@ -10,4 +10,4 @@ int test(struct a *a, int p)\n   a->array[0] = 1;\n }\n /* All three accesses combine to one bigger access.  */\n-/* { dg-final { scan-tree-dump-not \"param=modref-max-accesses\" \"modref1\" } } */\n+/* { dg-final { scan-tree-dump-not \"--param modref-max-accesses\" \"modref1\" } } */"}, {"sha": "c51590ff0ba1903d228c5ce5d2a2e8f1c2cb5dd9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/modref-8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bc00a489086b0bdde89ccb11dfa4f50b6c4e8f0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fmodref-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bc00a489086b0bdde89ccb11dfa4f50b6c4e8f0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fmodref-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fmodref-8.c?ref=1bc00a489086b0bdde89ccb11dfa4f50b6c4e8f0", "patch": "@@ -17,8 +17,8 @@ recurse (char *p, int n)\n \tif (n)\n \t  recurse (p+1,n-1);\n }\n-/* { dg-final { scan-tree-dump-not \"param=modref-max-accesses\" \"modref1\" } } */\n-/* { dg-final { scan-tree-dump \"param=modref-max-adjustments\" \"modref1\" } } */\n+/* { dg-final { scan-tree-dump-not \"--param modref-max-accesses\" \"modref1\" } } */\n+/* { dg-final { scan-tree-dump \"--param modref-max-adjustments\" \"modref1\" } } */\n /* In set all accesses should merge together.  */\n /* { dg-final { scan-tree-dump \"access: Parm 0 param offset:0 offset:0 size:8 max_size:40\" \"modref1\" } } */\n /* In recurse we should cap the recrusion after 8 attempts and set max_size to -1.  */"}]}