{"sha": "4ff685a8705e8ee55fa86e75afb769ffb0975aea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZmNjg1YTg3MDVlOGVlNTVmYTg2ZTc1YWZiNzY5ZmZiMDk3NWFlYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-24T22:11:35Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-24T22:11:35Z"}, "message": "c++: Avoid -Wreturn-type warning if a template fn calls noreturn template fn [PR94742]\n\nfinish_call_expr already has code to set current_function_returns_abnormally\nif a template calls a noreturn function, but on the following testcase it\ndoesn't call a FUNCTION_DECL, but TEMPLATE_DECL instead, in which case\nwe didn't check noreturn at all and just assumed it could return.\n\n2020-04-25  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/94742\n\t* semantics.c (finish_call_expr): When looking if all overloads\n\tare noreturn, use STRIP_TEMPLATE to look through TEMPLATE_DECLs.\n\n\t* g++.dg/warn/Wreturn-type-12.C: New test.", "tree": {"sha": "f30cb664d202ea08360b3706cbca5a5b5853bc3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f30cb664d202ea08360b3706cbca5a5b5853bc3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ff685a8705e8ee55fa86e75afb769ffb0975aea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ff685a8705e8ee55fa86e75afb769ffb0975aea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ff685a8705e8ee55fa86e75afb769ffb0975aea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ff685a8705e8ee55fa86e75afb769ffb0975aea/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf39dccf9284d2fd9f9aa7050760adea110c8d88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf39dccf9284d2fd9f9aa7050760adea110c8d88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf39dccf9284d2fd9f9aa7050760adea110c8d88"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "5b9ff5a694cde14679a13ee735341fe1e934304b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff685a8705e8ee55fa86e75afb769ffb0975aea/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff685a8705e8ee55fa86e75afb769ffb0975aea/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4ff685a8705e8ee55fa86e75afb769ffb0975aea", "patch": "@@ -1,3 +1,9 @@\n+2020-04-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/94742\n+\t* semantics.c (finish_call_expr): When looking if all overloads\n+\tare noreturn, use STRIP_TEMPLATE to look through TEMPLATE_DECLs.\n+\n 2020-04-24  Martin Liska  <mliska@suse.cz>\n \n \t* coroutines.cc: Fix compilation error for release checking"}, {"sha": "64a7b76d43783788be3b2ffb8e96962fd83cf1e4", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff685a8705e8ee55fa86e75afb769ffb0975aea/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff685a8705e8ee55fa86e75afb769ffb0975aea/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=4ff685a8705e8ee55fa86e75afb769ffb0975aea", "patch": "@@ -2508,7 +2508,7 @@ finish_call_expr (tree fn, vec<tree, va_gc> **args, bool disallow_virtual,\n \t      bool abnormal = true;\n \t      for (lkp_iterator iter (fn); abnormal && iter; ++iter)\n \t\t{\n-\t\t  tree fndecl = *iter;\n+\t\t  tree fndecl = STRIP_TEMPLATE (*iter);\n \t\t  if (TREE_CODE (fndecl) != FUNCTION_DECL\n \t\t      || !TREE_THIS_VOLATILE (fndecl))\n \t\t    abnormal = false;"}, {"sha": "b9be66865cda9ff54f9667a6bb35a7cbf0c16296", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff685a8705e8ee55fa86e75afb769ffb0975aea/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff685a8705e8ee55fa86e75afb769ffb0975aea/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4ff685a8705e8ee55fa86e75afb769ffb0975aea", "patch": "@@ -1,5 +1,8 @@\n 2020-04-25  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/94742\n+\t* g++.dg/warn/Wreturn-type-12.C: New test.\n+\n \tPR tree-optimization/94734\n \tPR tree-optimization/89430\n \t* gcc.dg/tree-ssa/pr89430-1.c: Add xfail."}, {"sha": "b35d3faafb05c5a0c8857b663d659e067c278a5a", "filename": "gcc/testsuite/g++.dg/warn/Wreturn-type-12.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff685a8705e8ee55fa86e75afb769ffb0975aea/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWreturn-type-12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff685a8705e8ee55fa86e75afb769ffb0975aea/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWreturn-type-12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWreturn-type-12.C?ref=4ff685a8705e8ee55fa86e75afb769ffb0975aea", "patch": "@@ -0,0 +1,23 @@\n+// PR c++/94742\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-Wreturn-type\" }\n+\n+template <class T>\n+[[noreturn]] void\n+foo (T const &t, char const *)\n+{\n+  throw T (t);\n+}\n+\n+template <class U>\n+int\n+bar ()\n+{\n+  foo (42, __FUNCTION__);\n+}\t// { dg-bogus \"no return statement in function returning non-void\" }\n+\n+int\n+main ()\n+{\n+  bar<long>();\n+}"}]}