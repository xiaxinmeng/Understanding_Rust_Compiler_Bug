{"sha": "ccc8282babb2336eab6457a0541a884348c7bafb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NjODI4MmJhYmIyMzM2ZWFiNjQ1N2EwNTQxYTg4NDM0OGM3YmFmYg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2015-11-04T20:48:05Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-11-04T20:48:05Z"}, "message": "nvptx.c (nvptx_goacc_validate_dims): Add checking.\n\n\tgcc/\n\t* config/nvptx/nvptx.c (nvptx_goacc_validate_dims): Add checking.\n\n\tlibgomp/\n\t* testsuite/libgomp.oacc-fortran/reduction-1.f90: Fix dimensions\n\tand reduction copy.\n\t* testsuite/libgomp.oacc-fortran/reduction-2.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/reduction-3.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/reduction-4.f90: Likewise.\n\t* testsuite/libgomp.oacc-fortran/reduction-6.f90: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/par-reduction-1.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/reduction-3.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/collapse-2.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/par-reduction-2.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/reduction-4.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/reduction-initial-1.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/reduction-1.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/reduction-5.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/reduction-2.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/parallel-dims.c: New.\n\nFrom-SVN: r229780", "tree": {"sha": "de1b37438999069c57346d089b4b0fe252206895", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de1b37438999069c57346d089b4b0fe252206895"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccc8282babb2336eab6457a0541a884348c7bafb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccc8282babb2336eab6457a0541a884348c7bafb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccc8282babb2336eab6457a0541a884348c7bafb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccc8282babb2336eab6457a0541a884348c7bafb/comments", "author": null, "committer": null, "parents": [{"sha": "a3afde42598578a00cd15c98e70c14f704bc39ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3afde42598578a00cd15c98e70c14f704bc39ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3afde42598578a00cd15c98e70c14f704bc39ae"}], "stats": {"total": 175, "additions": 116, "deletions": 59}, "files": [{"sha": "2a2eec2e38b0947bf563f76b7d21213b08219f21", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc8282babb2336eab6457a0541a884348c7bafb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc8282babb2336eab6457a0541a884348c7bafb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ccc8282babb2336eab6457a0541a884348c7bafb", "patch": "@@ -1,3 +1,7 @@\n+2015-11-04  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* config/nvptx/nvptx.c (nvptx_goacc_validate_dims): Add checking.\n+\n 2015-11-04  Nathan Sidwell  <nathan@codesourcery.com>\n \t    Cesar Philippidis  <cesar@codesourcery.com>\n "}, {"sha": "dafb6954690931ee05b43ca42fdb1166ce8d382b", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc8282babb2336eab6457a0541a884348c7bafb/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc8282babb2336eab6457a0541a884348c7bafb/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=ccc8282babb2336eab6457a0541a884348c7bafb", "patch": "@@ -3472,8 +3472,29 @@ nvptx_goacc_validate_dims (tree ARG_UNUSED (decl), int *ARG_UNUSED (dims),\n {\n   bool changed = false;\n \n-  /* TODO: Leave dimensions unaltered.  Reductions need\n-     porting before filtering dimensions makes sense.  */\n+  /* The vector size must be 32, unless this is a SEQ routine.  */\n+  if (fn_level <= GOMP_DIM_VECTOR\n+      && dims[GOMP_DIM_VECTOR] != PTX_VECTOR_LENGTH)\n+    {\n+      if (dims[GOMP_DIM_VECTOR] >= 0 && fn_level < 0)\n+\twarning_at (DECL_SOURCE_LOCATION (decl), 0,\n+\t\t    dims[GOMP_DIM_VECTOR]\n+\t\t    ? \"using vector_length (%d), ignoring %d\"\n+\t\t    : \"using vector_length (%d), ignoring runtime setting\",\n+\t\t    PTX_VECTOR_LENGTH, dims[GOMP_DIM_VECTOR]);\n+      dims[GOMP_DIM_VECTOR] = PTX_VECTOR_LENGTH;\n+      changed = true;\n+    }\n+\n+  /* Check the num workers is not too large.  */\n+  if (dims[GOMP_DIM_WORKER] > PTX_WORKER_LENGTH)\n+    {\n+      warning_at (DECL_SOURCE_LOCATION (decl), 0,\n+\t\t  \"using num_workers (%d), ignoring %d\",\n+\t\t  PTX_WORKER_LENGTH, dims[GOMP_DIM_WORKER]);\n+      dims[GOMP_DIM_WORKER] = PTX_WORKER_LENGTH;\n+      changed = true;\n+    }\n \n   return changed;\n }"}, {"sha": "46680f183dce614691ec104ad613a96242d7e899", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=ccc8282babb2336eab6457a0541a884348c7bafb", "patch": "@@ -1,3 +1,22 @@\n+2015-11-04  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-fortran/reduction-1.f90: Fix dimensions\n+\tand reduction copy.\n+\t* testsuite/libgomp.oacc-fortran/reduction-2.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/reduction-3.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/reduction-4.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/reduction-6.f90: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/par-reduction-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/reduction-3.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/collapse-2.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/par-reduction-2.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/reduction-4.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/reduction-initial-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/reduction-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/reduction-5.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/reduction-2.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/parallel-dims.c: New.\n+\n 2015-11-04  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* libgomp.oacc-c-c++-common/loop-red-g-1.c: New."}, {"sha": "8c56adac0cf8aead9abb9ab423877511f55d48ec", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/collapse-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fcollapse-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fcollapse-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fcollapse-2.c?ref=ccc8282babb2336eab6457a0541a884348c7bafb", "patch": "@@ -8,7 +8,7 @@ main (void)\n   int i, j, k, l = 0, f = 0, x = 0;\n   int m1 = 4, m2 = -5, m3 = 17;\n \n-  #pragma acc parallel\n+#pragma acc parallel copy(l)\n   #pragma acc loop collapse(3) reduction(+:l)\n     for (i = -2; i < m1; i++)\n       for (j = m2; j < -2; j++)"}, {"sha": "dceac39cf158efb40fedbb97d66bbc4a06f9ca82", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/par-reduction-1.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpar-reduction-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpar-reduction-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpar-reduction-1.c?ref=ccc8282babb2336eab6457a0541a884348c7bafb", "patch": "@@ -10,8 +10,7 @@ main (int argc, char *argv[])\n #else\n # define GANGS 256\n #endif\n-  #pragma acc parallel num_gangs(GANGS) num_workers(1) vector_length(1) \\\n-\t\t       copy(res2)\n+  #pragma acc parallel num_gangs(GANGS) copy(res2)\n   {\n     #pragma acc atomic\n     res2 += 5;\n@@ -28,8 +27,7 @@ main (int argc, char *argv[])\n #else\n # define GANGS 8\n #endif\n-  #pragma acc parallel num_gangs(GANGS) num_workers(1) vector_length(1) \\\n-\t\t       copy(res2)\n+  #pragma acc parallel num_gangs(GANGS) copy(res2)\n   {\n     #pragma acc atomic\n     res2 *= 5;"}, {"sha": "bd5715c675cdbdf686b2c77b5a066f9f720fdc3e", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/par-reduction-2.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpar-reduction-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpar-reduction-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpar-reduction-2.c?ref=ccc8282babb2336eab6457a0541a884348c7bafb", "patch": "@@ -11,8 +11,7 @@ main (int argc, char *argv[])\n #else\n # define GANGS 256\n #endif\n-  #pragma acc parallel num_gangs(GANGS) num_workers(1) vector_length(1) \\\n-\t\t       copy(res2) async(1)\n+  #pragma acc parallel num_gangs(GANGS) copy(res2) async(1)\n   {\n     #pragma acc atomic\n     res2 += 5;\n@@ -31,8 +30,7 @@ main (int argc, char *argv[])\n #else\n # define GANGS 8\n #endif\n-  #pragma acc parallel num_gangs(GANGS) num_workers(1) vector_length(1) \\\n-\t\t       copy(res2) async(1)\n+  #pragma acc parallel num_gangs(GANGS) copy(res2) async(1)\n   {\n     #pragma acc atomic\n     res2 *= 5;"}, {"sha": "39357ce357b6cfc489bd9433da1c3c9d6bdd988e", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/parallel-dims.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fparallel-dims.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fparallel-dims.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fparallel-dims.c?ref=ccc8282babb2336eab6457a0541a884348c7bafb", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do run { target openacc_nvidia_accel_selected } } */\n+\n+/* Worker and vector size checks.  Picked an outrageously large\n+   value. */\n+\n+int main ()\n+{\n+#pragma acc parallel num_workers (2<<20) /* { dg-error \"using num_workers\" } */\n+  {\n+  }\n+\n+#pragma acc parallel vector_length (2<<20) /* { dg-error \"using vector_length\" } */\n+  {\n+  }\n+\n+  return 0;\n+}"}, {"sha": "e55793136f3249e53859d76146735463e1b757b2", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/reduction-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-1.c?ref=ccc8282babb2336eab6457a0541a884348c7bafb", "patch": "@@ -13,7 +13,7 @@\n   {\t\t\t\t\t\t\\\n     type res, vres;\t\t\t\t\\\n     res = (init);\t\t\t\t\\\n-DO_PRAGMA (acc parallel vector_length (vl))\\\n+    DO_PRAGMA (acc parallel vector_length (vl) copy(res))\t\\\n DO_PRAGMA (acc loop reduction (op:res))\\\n     for (i = 0; i < n; i++)\t\t\t\\\n       res = res op (b);\t\t\t\t\\\n@@ -63,7 +63,7 @@ test_reductions_bool (void)\n   {\t\t\t\t\t\t\t\\\n     type res, vres;\t\t\t\t\t\\\n     res = (init);\t\t\t\t\t\\\n-DO_PRAGMA (acc parallel vector_length (vl))\\\n+DO_PRAGMA (acc parallel vector_length (vl) copy(res))\\\n DO_PRAGMA (acc loop reduction (op:res))\\\n     for (i = 0; i < n; i++)\t\t\t\t\\\n       res = op (res, (b));\t\t\t\t\\"}, {"sha": "e4454126b395f4d274e6b38d0ba4bafead103bcd", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/reduction-2.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-2.c?ref=ccc8282babb2336eab6457a0541a884348c7bafb", "patch": "@@ -23,7 +23,7 @@ main(void)\n   vresult = 0;\n \n   /* '+' reductions.  */\n-#pragma acc parallel vector_length (vl)\n+#pragma acc parallel vector_length (vl) copy(result)\n #pragma acc loop reduction (+:result)\n   for (i = 0; i < n; i++)\n     result += array[i];\n@@ -39,7 +39,7 @@ main(void)\n   vresult = 0;\n \n   /* '*' reductions.  */\n-#pragma acc parallel vector_length (vl)\n+#pragma acc parallel vector_length (vl) copy(result)\n #pragma acc loop reduction (*:result)\n   for (i = 0; i < n; i++)\n     result *= array[i];\n@@ -91,7 +91,7 @@ main(void)\n   lvresult = false;\n \n   /* '&&' reductions.  */\n-#pragma acc parallel vector_length (vl)\n+#pragma acc parallel vector_length (vl) copy(lresult)\n #pragma acc loop reduction (&&:lresult)\n   for (i = 0; i < n; i++)\n     lresult = lresult && (result > array[i]);\n@@ -110,7 +110,7 @@ main(void)\n   lvresult = false;\n \n   /* '||' reductions.  */\n-#pragma acc parallel vector_length (vl)\n+#pragma acc parallel vector_length (vl) copy(lresult)\n #pragma acc loop reduction (||:lresult)\n   for (i = 0; i < n; i++)\n     lresult = lresult || (result > array[i]);"}, {"sha": "e831dd603e1297cbc35653c43e59ac1a6d94b8b9", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/reduction-3.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-3.c?ref=ccc8282babb2336eab6457a0541a884348c7bafb", "patch": "@@ -23,7 +23,7 @@ main(void)\n   vresult = 0;\n \n   /* '+' reductions.  */\n-#pragma acc parallel vector_length (vl)\n+#pragma acc parallel vector_length (vl) copy(result)\n #pragma acc loop reduction (+:result)\n   for (i = 0; i < n; i++)\n     result += array[i];\n@@ -39,7 +39,7 @@ main(void)\n   vresult = 0;\n \n   /* '*' reductions.  */\n-#pragma acc parallel vector_length (vl)\n+#pragma acc parallel vector_length (vl) copy(result)\n #pragma acc loop reduction (*:result)\n   for (i = 0; i < n; i++)\n     result *= array[i];\n@@ -91,7 +91,7 @@ main(void)\n   lvresult = false;\n \n   /* '&&' reductions.  */\n-#pragma acc parallel vector_length (vl)\n+#pragma acc parallel vector_length (vl) copy(lresult)\n #pragma acc loop reduction (&&:lresult)\n   for (i = 0; i < n; i++)\n     lresult = lresult && (result > array[i]);\n@@ -110,7 +110,7 @@ main(void)\n   lvresult = false;\n \n   /* '||' reductions.  */\n-#pragma acc parallel vector_length (vl)\n+#pragma acc parallel vector_length (vl) copy(lresult)\n #pragma acc loop reduction (||:lresult)\n   for (i = 0; i < n; i++)\n     lresult = lresult || (result > array[i]);"}, {"sha": "a89a96de736efae43bf9e02429e84b775a0de603", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/reduction-4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-4.c?ref=ccc8282babb2336eab6457a0541a884348c7bafb", "patch": "@@ -24,7 +24,7 @@ main(void)\n   vresult = 0;\n \n   /* '+' reductions.  */\n-#pragma acc parallel vector_length (vl)\n+#pragma acc parallel vector_length (vl) copy(result)\n #pragma acc loop reduction (+:result)\n   for (i = 0; i < n; i++)\n     result += array[i];\n@@ -94,7 +94,7 @@ main(void)\n   lvresult = false;\n \n   /* '&&' reductions.  */\n-#pragma acc parallel vector_length (vl)\n+#pragma acc parallel vector_length (vl) copy(lresult)\n #pragma acc loop reduction (&&:lresult)\n   for (i = 0; i < n; i++)\n     lresult = lresult && (creal(result) > creal(array[i]));\n@@ -113,7 +113,7 @@ main(void)\n   lvresult = false;\n \n   /* '||' reductions.  */\n-#pragma acc parallel vector_length (vl)\n+#pragma acc parallel vector_length (vl) copy(lresult)\n #pragma acc loop reduction (||:lresult)\n   for (i = 0; i < n; i++)\n     lresult = lresult || (creal(result) > creal(array[i]));"}, {"sha": "efe87027bbfe14e352ee350503fc44c930cc919d", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/reduction-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-5.c?ref=ccc8282babb2336eab6457a0541a884348c7bafb", "patch": "@@ -8,7 +8,7 @@ main (void)\n   int n = 100;\n   int i;\n \n-#pragma acc parallel vector_length (32)\n+#pragma acc parallel vector_length (32) copy(s1,s2)\n #pragma acc loop reduction (+:s1, s2)\n   for (i = 0; i < n; i++)\n     {"}, {"sha": "9991db07013bfb554e1beac14b109565fc12e71e", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/reduction-initial-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-initial-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-initial-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-initial-1.c?ref=ccc8282babb2336eab6457a0541a884348c7bafb", "patch": "@@ -4,13 +4,13 @@ int\n main(void)\n {\n #define I 5\n-#define N 11\n+#define N 32\n #define A 8\n \n   int a = A;\n   int s = I;\n \n-#pragma acc parallel vector_length(N)\n+#pragma acc parallel vector_length(N) copy(s)\n   {\n     int i;\n #pragma acc loop reduction(+:s)"}, {"sha": "db0a52d6a49ae1fbd788caf198860b58552e4e3e", "filename": "libgomp/testsuite/libgomp.oacc-fortran/reduction-1.f90", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-1.f90?ref=ccc8282babb2336eab6457a0541a884348c7bafb", "patch": "@@ -5,7 +5,7 @@\n program reduction_1\n   implicit none\n \n-  integer, parameter    :: n = 10, vl = 2\n+  integer, parameter    :: n = 10, vl = 32\n   integer               :: i, vresult, result\n   logical               :: lresult, lvresult\n   integer, dimension (n) :: array\n@@ -19,7 +19,7 @@ program reduction_1\n \n   ! '+' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(result)\n   !$acc loop reduction(+:result)\n   do i = 1, n\n      result = result + array(i)\n@@ -38,7 +38,7 @@ program reduction_1\n \n   ! '*' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(result)\n   !$acc loop reduction(*:result)\n   do i = 1, n\n      result = result * array(i)\n@@ -57,7 +57,7 @@ program reduction_1\n \n   ! 'max' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(result)\n   !$acc loop reduction(max:result)\n   do i = 1, n\n      result = max (result, array(i))\n@@ -76,7 +76,7 @@ program reduction_1\n \n   ! 'min' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(result)\n   !$acc loop reduction(min:result)\n   do i = 1, n\n      result = min (result, array(i))\n@@ -95,7 +95,7 @@ program reduction_1\n \n   ! 'iand' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(result)\n   !$acc loop reduction(iand:result)\n   do i = 1, n\n      result = iand (result, array(i))\n@@ -114,7 +114,7 @@ program reduction_1\n \n   ! 'ior' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(result)\n   !$acc loop reduction(ior:result)\n   do i = 1, n\n      result = ior (result, array(i))\n@@ -133,7 +133,7 @@ program reduction_1\n \n   ! 'ieor' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(result)\n   !$acc loop reduction(ieor:result)\n   do i = 1, n\n      result = ieor (result, array(i))\n@@ -152,7 +152,7 @@ program reduction_1\n \n   ! '.and.' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(lresult)\n   !$acc loop reduction(.and.:lresult)\n   do i = 1, n\n      lresult = lresult .and. (array(i) .ge. 5)\n@@ -171,7 +171,7 @@ program reduction_1\n \n   ! '.or.' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(lresult)\n   !$acc loop reduction(.or.:lresult)\n   do i = 1, n\n      lresult = lresult .or. (array(i) .ge. 5)\n@@ -190,7 +190,7 @@ program reduction_1\n \n   ! '.eqv.' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(lresult)\n   !$acc loop reduction(.eqv.:lresult)\n   do i = 1, n\n      lresult = lresult .eqv. (array(i) .ge. 5)\n@@ -209,7 +209,7 @@ program reduction_1\n \n   ! '.neqv.' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(lresult)\n   !$acc loop reduction(.neqv.:lresult)\n   do i = 1, n\n      lresult = lresult .neqv. (array(i) .ge. 5)"}, {"sha": "3d99668581fdbc2638cbdaca39fc1ead0d373d80", "filename": "libgomp/testsuite/libgomp.oacc-fortran/reduction-2.f90", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-2.f90?ref=ccc8282babb2336eab6457a0541a884348c7bafb", "patch": "@@ -5,7 +5,7 @@\n program reduction_2\n   implicit none\n \n-  integer, parameter    :: n = 10, vl = 2\n+  integer, parameter    :: n = 10, vl = 32\n   integer               :: i\n   real, parameter       :: e = .001\n   real                  :: vresult, result\n@@ -21,7 +21,7 @@ program reduction_2\n \n   ! '+' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(result)\n   !$acc loop reduction(+:result)\n   do i = 1, n\n      result = result + array(i)\n@@ -40,7 +40,7 @@ program reduction_2\n \n   ! '*' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(result)\n   !$acc loop reduction(*:result)\n   do i = 1, n\n      result = result * array(i)\n@@ -59,7 +59,7 @@ program reduction_2\n \n   ! 'max' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(result)\n   !$acc loop reduction(max:result)\n   do i = 1, n\n      result = max (result, array(i))\n@@ -78,7 +78,7 @@ program reduction_2\n \n   ! 'min' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(result)\n   !$acc loop reduction(min:result)\n   do i = 1, n\n      result = min (result, array(i))\n@@ -97,7 +97,7 @@ program reduction_2\n \n   ! '.and.' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(lresult)\n   !$acc loop reduction(.and.:lresult)\n   do i = 1, n\n      lresult = lresult .and. (array(i) .ge. 5)\n@@ -116,7 +116,7 @@ program reduction_2\n \n   ! '.or.' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(lresult)\n   !$acc loop reduction(.or.:lresult)\n   do i = 1, n\n      lresult = lresult .or. (array(i) .ge. 5)\n@@ -135,7 +135,7 @@ program reduction_2\n \n   ! '.eqv.' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(lresult)\n   !$acc loop reduction(.eqv.:lresult)\n   do i = 1, n\n      lresult = lresult .eqv. (array(i) .ge. 5)\n@@ -154,7 +154,7 @@ program reduction_2\n \n   ! '.neqv.' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(lresult)\n   !$acc loop reduction(.neqv.:lresult)\n   do i = 1, n\n      lresult = lresult .neqv. (array(i) .ge. 5)"}, {"sha": "d0b590e64964737ba4b270779397c34bb660de3b", "filename": "libgomp/testsuite/libgomp.oacc-fortran/reduction-3.f90", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-3.f90?ref=ccc8282babb2336eab6457a0541a884348c7bafb", "patch": "@@ -5,7 +5,7 @@\n program reduction_3\n   implicit none\n \n-  integer, parameter    :: n = 10, vl = 2\n+  integer, parameter    :: n = 10, vl = 32\n   integer               :: i\n   double precision, parameter :: e = .001\n   double precision      :: vresult, result\n@@ -21,7 +21,7 @@ program reduction_3\n \n   ! '+' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(result)\n   !$acc loop reduction(+:result)\n   do i = 1, n\n      result = result + array(i)\n@@ -40,7 +40,7 @@ program reduction_3\n \n   ! '*' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(result)\n   !$acc loop reduction(*:result)\n   do i = 1, n\n      result = result * array(i)\n@@ -59,7 +59,7 @@ program reduction_3\n \n   ! 'max' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(result)\n   !$acc loop reduction(max:result)\n   do i = 1, n\n      result = max (result, array(i))\n@@ -78,7 +78,7 @@ program reduction_3\n \n   ! 'min' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(result)\n   !$acc loop reduction(min:result)\n   do i = 1, n\n      result = min (result, array(i))\n@@ -97,7 +97,7 @@ program reduction_3\n \n   ! '.and.' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(lresult)\n   !$acc loop reduction(.and.:lresult)\n   do i = 1, n\n      lresult = lresult .and. (array(i) .ge. 5)\n@@ -116,7 +116,7 @@ program reduction_3\n \n   ! '.or.' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(lresult)\n   !$acc loop reduction(.or.:lresult)\n   do i = 1, n\n      lresult = lresult .or. (array(i) .ge. 5)\n@@ -135,7 +135,7 @@ program reduction_3\n \n   ! '.eqv.' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(lresult)\n   !$acc loop reduction(.eqv.:lresult)\n   do i = 1, n\n      lresult = lresult .eqv. (array(i) .ge. 5)\n@@ -154,7 +154,7 @@ program reduction_3\n \n   ! '.neqv.' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(lresult)\n   !$acc loop reduction(.neqv.:lresult)\n   do i = 1, n\n      lresult = lresult .neqv. (array(i) .ge. 5)"}, {"sha": "8c99fdb32bffc8f505b10a9893514084c7e163f0", "filename": "libgomp/testsuite/libgomp.oacc-fortran/reduction-4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-4.f90?ref=ccc8282babb2336eab6457a0541a884348c7bafb", "patch": "@@ -19,7 +19,7 @@ program reduction_4\n \n   ! '+' reductions\n \n-  !$acc parallel vector_length(vl) num_gangs(1)\n+  !$acc parallel vector_length(vl) num_gangs(1) copy(result)\n   !$acc loop reduction(+:result)\n   do i = 1, n\n      result = result + array(i)"}, {"sha": "2ff6f5fd17d65de839c75eaadd4386f166300507", "filename": "libgomp/testsuite/libgomp.oacc-fortran/reduction-6.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccc8282babb2336eab6457a0541a884348c7bafb/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Freduction-6.f90?ref=ccc8282babb2336eab6457a0541a884348c7bafb", "patch": "@@ -11,7 +11,7 @@ program reduction\n   vs1 = 0\n   vs2 = 0\n \n-  !$acc parallel vector_length (32)\n+  !$acc parallel vector_length (32) copy(s1, s2)\n   !$acc loop reduction(+:s1, s2)\n   do i = 1, n\n      s1 = s1 + 1"}]}