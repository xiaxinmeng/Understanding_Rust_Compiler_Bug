{"sha": "f65a7138c4a7858f606aeaa17c6f7b6abd42d928", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY1YTcxMzhjNGE3ODU4ZjYwNmFlYWExN2M2ZjdiNmFiZDQyZDkyOA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-02-01T00:41:14Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-02-01T00:41:14Z"}, "message": "configure.in (getlogin,getgid,getuid, [...]): Check.\n\n\t* libU77/configure.in (getlogin,getgid,getuid, kill,link,ttyname):\n\tCheck.\n\t* libU77/config.h.in (HAVE_GETLOGIN, HAVE_GETGID, HAVE_GETUID,\n\tHAVE_KILL, HAVE_LINK, HAVE_TTYNAME): New defs.\n\t* libU77/getlog_.c: Conditionalize for target platform. Set errno\n\tto ENOSYS if target libc doesn't have the function.\n\t* libU77/getgid_.c: Likewise.\n\t* libU77/getuid_.c: Likewise.\n\t* libU77/kill_.c: Likewise.\n\t* libU77/link_.c: Likewise.\n\t* libU77/ttynam_.c: Likewise.\n\nFrom-SVN: r17562", "tree": {"sha": "c1f20d4a3e28293a70240f7ae4de53463848de52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1f20d4a3e28293a70240f7ae4de53463848de52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f65a7138c4a7858f606aeaa17c6f7b6abd42d928", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f65a7138c4a7858f606aeaa17c6f7b6abd42d928", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f65a7138c4a7858f606aeaa17c6f7b6abd42d928", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f65a7138c4a7858f606aeaa17c6f7b6abd42d928/comments", "author": null, "committer": null, "parents": [{"sha": "eed90b2cecf58c4d2fdcb0362db193099fbcbf18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eed90b2cecf58c4d2fdcb0362db193099fbcbf18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eed90b2cecf58c4d2fdcb0362db193099fbcbf18"}], "stats": {"total": 77, "additions": 60, "deletions": 17}, "files": [{"sha": "bb101710d0c72cc49af53b7a7e81beb4a5954b46", "filename": "gcc/f/runtime/libU77/Makefile.in", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65a7138c4a7858f606aeaa17c6f7b6abd42d928/gcc%2Ff%2Fruntime%2FlibU77%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65a7138c4a7858f606aeaa17c6f7b6abd42d928/gcc%2Ff%2Fruntime%2FlibU77%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibU77%2FMakefile.in?ref=f65a7138c4a7858f606aeaa17c6f7b6abd42d928", "patch": "@@ -25,30 +25,19 @@ VPATH = @srcdir@\n \n #### Start of system configuration section. ####\n \n-# The _FOR_TARGET things are appropriate for a cross-make, passed by the\n-# superior makefile\n-GCC_FOR_TARGET = @CC@\n-CC = $(GCC_FOR_TARGET)\n-CFLAGS = @CFLAGS@ $(GCC_FLAGS)\n CPPFLAGS = @CPPFLAGS@\n DEFS = @DEFS@\n-CGFLAGS = #-g0\n # f2c.h should already be installed in xgcc's include directory but add that\n # to -I anyhow in case not using xgcc.  fio.h is in libI77.  We need config.h\n # from `.'.\n-ALL_CFLAGS = -I. -I$(srcdir) -I$(srcdir)/../libI77 -I../../../include $(CPPFLAGS) $(DEFS) $(CFLAGS)\n-AR = @AR@\n-AR_FLAGS = rc\n-RANLIB = @RANLIB@\n-RANLIB_TEST = @RANLIB_TEST@\n+ALL_CFLAGS = -I. -I$(srcdir) -I$(srcdir)/../libI77 -I.. $(CPPFLAGS) $(DEFS) $(CFLAGS)\n CROSS = @CROSS@\n-G77DIR = ../../../\n \n .SUFFIXES:\n .SUFFIXES: .c .o\n \n .c.o:\n-\t$(CC) -c -DSkip_f2c_Undefs $(ALL_CFLAGS) $(CGFLAGS) $<\n+\t$(CC) -c -DSkip_f2c_Undefs $(ALL_CFLAGS) $<\n \n OBJS =  VersionU.o gerror_.o perror_.o ierrno_.o itime_.o time_.o \\\n \tunlink_.o fnum_.o getpid_.o getuid_.o getgid_.o kill_.o rand_.o \\\n@@ -71,7 +60,7 @@ SRCS =  Version.c gerror_.c perror_.c ierrno_.c itime_.c time_.c \\\n \tumask_.c sys_clock_.c date_.c second_.c flush1_.c mclock_.c \\\n \talarm_.c\n \n-F2C_H = ../../../include/f2c.h\n+F2C_H = ../f2c.h\n \n all: $(OBJS)\n \n@@ -93,7 +82,7 @@ distclean realclean maintainer-clean: clean\n $(OBJS): $(F2C_H) config.h\n \n check:\n-\t-$(G77DIR)g77 --driver=$(G77DIR)/xgcc -B$(G77DIR) -g $(srcdir)/u77-test.f $(lib) && ./a.out\n+\t-$(G77DIR)g77 -B$(G77DIR) -g $(srcdir)/u77-test.f $(lib) && ./a.out\n \trm -f a.out\n \n access_.o: access_.c"}, {"sha": "c967b25f21d8cef35ac9822682480a705f260b4c", "filename": "gcc/f/runtime/libU77/config.h.in", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65a7138c4a7858f606aeaa17c6f7b6abd42d928/gcc%2Ff%2Fruntime%2FlibU77%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65a7138c4a7858f606aeaa17c6f7b6abd42d928/gcc%2Ff%2Fruntime%2FlibU77%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibU77%2Fconfig.h.in?ref=f65a7138c4a7858f606aeaa17c6f7b6abd42d928", "patch": "@@ -84,3 +84,20 @@\n /* Define if you have the times function.  */\n #undef HAVE_TIMES\n \n+/* Define if you have the getlogin function.  */\n+#undef HAVE_GETLOGIN\n+\n+/* Define if you have the getgid function.  */\n+#undef HAVE_GETGID\n+\n+/* Define if you have the getuid function.  */\n+#undef HAVE_GETUID\n+\n+/* Define if you have the kill function.  */\n+#undef HAVE_KILL\n+\n+/* Define if you have the link function.  */\n+#undef HAVE_LINK\n+\n+/* Define if you have the ttyname function.  */\n+#undef HAVE_TTYNAME"}, {"sha": "6caf4e31a399389ddbadc51a68ec0bac02231e63", "filename": "gcc/f/runtime/libU77/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65a7138c4a7858f606aeaa17c6f7b6abd42d928/gcc%2Ff%2Fruntime%2FlibU77%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65a7138c4a7858f606aeaa17c6f7b6abd42d928/gcc%2Ff%2Fruntime%2FlibU77%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibU77%2Fconfigure.in?ref=f65a7138c4a7858f606aeaa17c6f7b6abd42d928", "patch": "@@ -98,7 +98,7 @@ AC_STRUCT_TM\n dnl Checks for library functions.\n \n AC_CHECK_FUNCS(symlink getcwd getwd lstat gethostname strerror clock \\\n-  getrusage times alarm)\n+  getrusage times alarm getlogin getgid getuid kill link ttyname)\n test $ac_cv_func_symlink = yes && MAYBES=\"$MAYBES symlnk_.o\"\n test $ac_cv_func_lstat = yes && MAYBES=\"$MAYBES lstat_.o\"\n test $ac_cv_func_gethostname = yes && MAYBES=\"$MAYBES hostnm_.o\""}, {"sha": "b489bacc6ed20518e6aa186837399eae824f4f9a", "filename": "gcc/f/runtime/libU77/getgid_.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65a7138c4a7858f606aeaa17c6f7b6abd42d928/gcc%2Ff%2Fruntime%2FlibU77%2Fgetgid_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65a7138c4a7858f606aeaa17c6f7b6abd42d928/gcc%2Ff%2Fruntime%2FlibU77%2Fgetgid_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibU77%2Fgetgid_.c?ref=f65a7138c4a7858f606aeaa17c6f7b6abd42d928", "patch": "@@ -23,6 +23,7 @@ Boston, MA 02111-1307, USA.  */\n #include <unistd.h>\n #endif\n #include <sys/types.h>\n+#include <errno.h>\t\t/* for ENOSYS */\n #include \"f2c.h\"\n \n #ifdef KR_headers\n@@ -31,5 +32,10 @@ integer G77_getgid_0 ()\n integer G77_getgid_0 (void)\n #endif\n {\n+#if defined (HAVE_GETGID)\n   return getgid ();\n+#else\n+  errno = ENOSYS;\n+  return -1;\n+#endif\n }"}, {"sha": "82cb564a67a418be60474114b69a5e19b7bd84d1", "filename": "gcc/f/runtime/libU77/getlog_.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65a7138c4a7858f606aeaa17c6f7b6abd42d928/gcc%2Ff%2Fruntime%2FlibU77%2Fgetlog_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65a7138c4a7858f606aeaa17c6f7b6abd42d928/gcc%2Ff%2Fruntime%2FlibU77%2Fgetlog_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibU77%2Fgetlog_.c?ref=f65a7138c4a7858f606aeaa17c6f7b6abd42d928", "patch": "@@ -34,6 +34,7 @@ Boston, MA 02111-1307, USA.  */\n #else\n #  include <strings.h>\n #endif\n+#include <errno.h>\t\t/* for ENOSYS */\n #include \"f2c.h\"\n \n /* getlogin not in svr1-3 */\n@@ -51,13 +52,20 @@ extern void s_copy(register char *a, register char *b, ftnlen la, ftnlen lb);\n {\n   size_t i;\n   char *p;\n+  int status;\n \n+#if defined (HAVE_GETLOGIN)\n   p = getlogin ();\n   if (p != NULL) {\n     i = strlen (p);\n     s_copy (str, p, Lstr, i);\n   } else {\n     s_copy (str, \" \", Lstr, 1);\n   }\n-  return 0;\n+  status = 0;\n+#else\n+  errno = ENOSYS;\n+  status = -1;\n+#endif\n+  return status;\n }"}, {"sha": "408ff0ab60047040b03daaec62b6ff9f3014c287", "filename": "gcc/f/runtime/libU77/getuid_.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65a7138c4a7858f606aeaa17c6f7b6abd42d928/gcc%2Ff%2Fruntime%2FlibU77%2Fgetuid_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65a7138c4a7858f606aeaa17c6f7b6abd42d928/gcc%2Ff%2Fruntime%2FlibU77%2Fgetuid_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibU77%2Fgetuid_.c?ref=f65a7138c4a7858f606aeaa17c6f7b6abd42d928", "patch": "@@ -23,6 +23,7 @@ Boston, MA 02111-1307, USA.  */\n #include <unistd.h>\n #endif\n #include <sys/types.h>\n+#include <errno.h>\t\t/* for ENOSYS */\n #include \"f2c.h\"\n \n #ifdef KR_headers\n@@ -31,5 +32,10 @@ integer G77_getuid_0 ()\n integer G77_getuid_0 (void)\n #endif\n {\n+#if defined (HAVE_GETUID)\n   return getuid ();\n+#else\n+  errno = ENOSYS;\n+  return -1;\n+#endif\n }"}, {"sha": "99197bd02e7b94f43abe491a78fea9800458eb43", "filename": "gcc/f/runtime/libU77/kill_.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65a7138c4a7858f606aeaa17c6f7b6abd42d928/gcc%2Ff%2Fruntime%2FlibU77%2Fkill_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65a7138c4a7858f606aeaa17c6f7b6abd42d928/gcc%2Ff%2Fruntime%2FlibU77%2Fkill_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibU77%2Fkill_.c?ref=f65a7138c4a7858f606aeaa17c6f7b6abd42d928", "patch": "@@ -33,5 +33,10 @@ integer G77_kill_0 (pid, signum)\n integer G77_kill_0 (const integer *pid, const integer *signum)\n #endif\n {\n+#if defined (HAVE_KILL)\n   return kill ((pid_t) *pid, *signum) ? errno : 0;\n+#else\n+  errno = ENOSYS;\n+  return -1;\n+#endif\n }"}, {"sha": "003fac8ffe28030b134408ec82299bd72fa183a2", "filename": "gcc/f/runtime/libU77/link_.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65a7138c4a7858f606aeaa17c6f7b6abd42d928/gcc%2Ff%2Fruntime%2FlibU77%2Flink_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65a7138c4a7858f606aeaa17c6f7b6abd42d928/gcc%2Ff%2Fruntime%2FlibU77%2Flink_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibU77%2Flink_.c?ref=f65a7138c4a7858f606aeaa17c6f7b6abd42d928", "patch": "@@ -31,6 +31,7 @@ Boston, MA 02111-1307, USA.  */\n #if HAVE_SYS_PARAM_H\n #  include <sys/param.h>\n #endif\n+#include <errno.h>\t\t/* for ENOSYS */\n #include \"f2c.h\"\n \n #ifdef KR_headers\n@@ -44,6 +45,7 @@ void g_char(const char *a, ftnlen alen, char *b);\n integer G77_link_0 (const char *path1, const char *path2, const ftnlen Lpath1, const ftnlen Lpath2)\n #endif\n {\n+#if defined (HAVE_LINK)\n   char *buff1, *buff2;\n   char *bp, *blast;\n   int i;\n@@ -57,4 +59,8 @@ integer G77_link_0 (const char *path1, const char *path2, const ftnlen Lpath1, c\n   i = link (buff1, buff2);\n   free (buff1); free (buff2);\n   return i ? errno : 0;\n+#else /* ! HAVE_LINK */\n+  errno = ENOSYS;\n+  return -1;\n+#endif\n }"}, {"sha": "cb1d1e9a35cdf373f9c2fdc1d487050990f38da4", "filename": "gcc/f/runtime/libU77/ttynam_.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65a7138c4a7858f606aeaa17c6f7b6abd42d928/gcc%2Ff%2Fruntime%2FlibU77%2Fttynam_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65a7138c4a7858f606aeaa17c6f7b6abd42d928/gcc%2Ff%2Fruntime%2FlibU77%2Fttynam_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibU77%2Fttynam_.c?ref=f65a7138c4a7858f606aeaa17c6f7b6abd42d928", "patch": "@@ -32,6 +32,7 @@ Boston, MA 02111-1307, USA.  */\n #else\n #  include <strings.h>\n #endif\n+#include <errno.h>\t\t/* for ENOSYS */\n #include \"f2c.h\"\n \n #ifdef KR_headers\n@@ -45,6 +46,7 @@ extern void s_copy(register char *a, register char *b, ftnlen la, ftnlen lb);\n /* Character */ void G77_ttynam_0 (char *ret_val, ftnlen ret_val_len, integer *lunit)\n #endif\n {\n+#if defined (HAVE_TTYNAME)\n   size_t i;\n   char *p;\n \n@@ -55,4 +57,8 @@ extern void s_copy(register char *a, register char *b, ftnlen la, ftnlen lb);\n   } else {\n     s_copy (ret_val, \" \", ret_val_len, 1);\n   }\n+#else\n+  errno = ENOSYS;\n+  return -1;\n+#endif\n }"}]}