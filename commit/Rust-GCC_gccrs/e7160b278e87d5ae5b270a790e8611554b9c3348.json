{"sha": "e7160b278e87d5ae5b270a790e8611554b9c3348", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcxNjBiMjc4ZTg3ZDVhZTViMjcwYTc5MGU4NjExNTU0YjljMzM0OA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2012-08-08T19:42:58Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2012-08-08T19:42:58Z"}, "message": "simplify-rtx.c (simplify_binary_operation_1): Do not simplify IOR to a constant if one operand has side effects.\n\n\t* simplify-rtx.c (simplify_binary_operation_1): Do not simplify\n\tIOR to a constant if one operand has side effects.\n\ntestsuite:\n\t* gcc.c-torture/execute/20120808-1.c: New test.\n\nFrom-SVN: r190237", "tree": {"sha": "f82056df4dc04830c81662f47e83708d553a056f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f82056df4dc04830c81662f47e83708d553a056f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7160b278e87d5ae5b270a790e8611554b9c3348", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7160b278e87d5ae5b270a790e8611554b9c3348", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7160b278e87d5ae5b270a790e8611554b9c3348", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7160b278e87d5ae5b270a790e8611554b9c3348/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "215770ada8310953eb90e2369b796263dcf5f770", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/215770ada8310953eb90e2369b796263dcf5f770", "html_url": "https://github.com/Rust-GCC/gccrs/commit/215770ada8310953eb90e2369b796263dcf5f770"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "e8554ecc1a228a14b1621e77987db209d71f7746", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7160b278e87d5ae5b270a790e8611554b9c3348/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7160b278e87d5ae5b270a790e8611554b9c3348/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7160b278e87d5ae5b270a790e8611554b9c3348", "patch": "@@ -1,3 +1,8 @@\n+2012-08-08  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* simplify-rtx.c (simplify_binary_operation_1): Do not simplify\n+\tIOR to a constant if one operand has side effects.\n+\n 2012-08-08  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* builtins.c (expand_builtin_atomic_compare_exchange): Pass old"}, {"sha": "f56a5edef8f5f8d0322e39bf60a80f1739ca4b5e", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7160b278e87d5ae5b270a790e8611554b9c3348/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7160b278e87d5ae5b270a790e8611554b9c3348/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=e7160b278e87d5ae5b270a790e8611554b9c3348", "patch": "@@ -2420,7 +2420,9 @@ simplify_binary_operation_1 (enum rtx_code code, enum machine_mode mode,\n     case IOR:\n       if (trueop1 == CONST0_RTX (mode))\n \treturn op0;\n-      if (INTEGRAL_MODE_P (mode) && trueop1 == CONSTM1_RTX (mode))\n+      if (INTEGRAL_MODE_P (mode)\n+\t  && trueop1 == CONSTM1_RTX (mode)\n+\t  && !side_effects_p (op0))\n \treturn op1;\n       if (rtx_equal_p (trueop0, trueop1) && ! side_effects_p (op0))\n \treturn op0;\n@@ -2434,7 +2436,8 @@ simplify_binary_operation_1 (enum rtx_code code, enum machine_mode mode,\n       /* (ior A C) is C if all bits of A that might be nonzero are on in C.  */\n       if (CONST_INT_P (op1)\n \t  && HWI_COMPUTABLE_MODE_P (mode)\n-\t  && (nonzero_bits (op0, mode) & ~UINTVAL (op1)) == 0)\n+\t  && (nonzero_bits (op0, mode) & ~UINTVAL (op1)) == 0\n+\t  && !side_effects_p (op0))\n \treturn op1;\n \n       /* Canonicalize (X & C1) | C2.  */"}, {"sha": "2465d80ef5d869cb9a9441dca5c49f8325477d3f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7160b278e87d5ae5b270a790e8611554b9c3348/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7160b278e87d5ae5b270a790e8611554b9c3348/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e7160b278e87d5ae5b270a790e8611554b9c3348", "patch": "@@ -1,3 +1,7 @@\n+2012-08-08  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.c-torture/execute/20120808-1.c: New test.\n+\n 2012-08-08  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR rtl-optimization/54157"}, {"sha": "3cbab2ba8437a75dedc4b00821c818b4404e0bdd", "filename": "gcc/testsuite/gcc.c-torture/execute/20120808-1.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7160b278e87d5ae5b270a790e8611554b9c3348/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20120808-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7160b278e87d5ae5b270a790e8611554b9c3348/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20120808-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20120808-1.c?ref=e7160b278e87d5ae5b270a790e8611554b9c3348", "patch": "@@ -0,0 +1,37 @@\n+extern void exit (int);\n+extern void abort (void);\n+\n+volatile int i;\n+unsigned char *volatile cp;\n+unsigned char d[32] = { 0 };\n+\n+int\n+main (void)\n+{\n+  unsigned char c[32] = { 0 };\n+  unsigned char *p = d + i;\n+  int j;\n+  for (j = 0; j < 30; j++)\n+    {\n+      int x = 0xff;\n+      int y = *++p;\n+      switch (j)\n+\t{\n+\tcase 1: x ^= 2; break;\n+\tcase 2: x ^= 4; break;\n+\tcase 25: x ^= 1; break;\n+\tdefault: break;\n+\t}\n+      c[j] = y | x;\n+      cp = p;\n+    }\n+  if (c[0] != 0xff\n+      || c[1] != 0xfd\n+      || c[2] != 0xfb\n+      || c[3] != 0xff\n+      || c[4] != 0xff\n+      || c[25] != 0xfe\n+      || cp != d + 30)\n+    abort ();\n+  exit (0);\n+}"}]}