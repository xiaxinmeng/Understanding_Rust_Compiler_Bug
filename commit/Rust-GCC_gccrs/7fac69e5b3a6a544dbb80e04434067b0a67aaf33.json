{"sha": "7fac69e5b3a6a544dbb80e04434067b0a67aaf33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZhYzY5ZTViM2E2YTU0NGRiYjgwZTA0NDM0MDY3YjBhNjdhYWYzMw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2005-04-01T10:44:59Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2005-04-01T10:44:59Z"}, "message": "arm.md (minmax_arithsi): Reject all eliminable registers, not just the frame and argument pointers.\n\n\t* arm.md (minmax_arithsi): Reject all eliminable registers, not just\n\tthe frame and argument pointers.\n\t(strqi_preinc, strqi_predec, loadqi_preinc, loadqi_predec): Likewise.\n\t(loadqisi_preinc, loadqisi_predec, strsi_preinc): Likewise.\n\t(strsi_predec, loadsi_preinc, loadsi_predec): Likewise.\n\t(strqi_shiftpreinc, strqi_shiftpredec, loadqi_shiftpreinc): Likewise.\n\t(loadqi_shiftpredec, strsi_shiftpreinc, strsi_shiftpredec): Likewise.\n\t(loadsi_shiftpreinc, loadsi_shiftpredec): Likewise.\n\nFrom-SVN: r97380", "tree": {"sha": "ebc7b416926c82f45178ca778275e788a8a74306", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebc7b416926c82f45178ca778275e788a8a74306"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fac69e5b3a6a544dbb80e04434067b0a67aaf33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fac69e5b3a6a544dbb80e04434067b0a67aaf33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fac69e5b3a6a544dbb80e04434067b0a67aaf33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fac69e5b3a6a544dbb80e04434067b0a67aaf33/comments", "author": null, "committer": null, "parents": [{"sha": "a34d33361e9fd3e7d6c1eae05484b4ee381b0caa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a34d33361e9fd3e7d6c1eae05484b4ee381b0caa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a34d33361e9fd3e7d6c1eae05484b4ee381b0caa"}], "stats": {"total": 134, "additions": 66, "deletions": 68}, "files": [{"sha": "06f562dcf30df71cb23d9ba6bfce3a7682821644", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fac69e5b3a6a544dbb80e04434067b0a67aaf33/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fac69e5b3a6a544dbb80e04434067b0a67aaf33/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7fac69e5b3a6a544dbb80e04434067b0a67aaf33", "patch": "@@ -1,3 +1,14 @@\n+2005-04-01  Richard Earnshaw  <richard.earnshaw@arm.com>\n+\n+\t* arm.md (minmax_arithsi): Reject all eliminable registers, not just\n+\tthe frame and argument pointers.\n+\t(strqi_preinc, strqi_predec, loadqi_preinc, loadqi_predec): Likewise.\n+\t(loadqisi_preinc, loadqisi_predec, strsi_preinc): Likewise.\n+\t(strsi_predec, loadsi_preinc, loadsi_predec): Likewise.\n+\t(strqi_shiftpreinc, strqi_shiftpredec, loadqi_shiftpreinc): Likewise.\n+\t(loadqi_shiftpredec, strsi_shiftpreinc, strsi_shiftpredec): Likewise.\n+\t(loadsi_shiftpreinc, loadsi_shiftpredec): Likewise.\n+\n 2005-04-01  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \t* config/i386/cygming.h (SUBTARGET_ATTRIBUTE_TABLE): Define,"}, {"sha": "f86ce20299c6c89f088bd6789fbdf36e19cc8ef7", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 55, "deletions": 68, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fac69e5b3a6a544dbb80e04434067b0a67aaf33/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fac69e5b3a6a544dbb80e04434067b0a67aaf33/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=7fac69e5b3a6a544dbb80e04434067b0a67aaf33", "patch": "@@ -2550,10 +2550,7 @@\n \t    (match_operand:SI 3 \"arm_rhs_operand\" \"rI,rI\")])\n \t  (match_operand:SI 1 \"s_register_operand\" \"0,?r\")]))\n    (clobber (reg:CC CC_REGNUM))]\n-  \"TARGET_ARM\n-   && (GET_CODE (operands[1]) != REG\n-       || (REGNO(operands[1]) != FRAME_POINTER_REGNUM\n-           && REGNO(operands[1]) != ARG_POINTER_REGNUM))\"\n+  \"TARGET_ARM && !arm_eliminable_register (operands[1])\"\n   \"*\n   {\n     enum rtx_code code = GET_CODE (operands[4]);\n@@ -9330,10 +9327,9 @@\n    (set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(plus:SI (match_dup 1) (match_dup 2)))]\n   \"TARGET_ARM\n-   && REGNO (operands[0]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[1]) != FRAME_POINTER_REGNUM\n-   && (GET_CODE (operands[2]) != REG\n-       || REGNO (operands[2]) != FRAME_POINTER_REGNUM)\"\n+   && !arm_eliminable_register (operands[0])\n+   && !arm_eliminable_register (operands[1])\n+   && !arm_eliminable_register (operands[2])\"\n   \"str%?b\\\\t%3, [%0, %2]!\"\n   [(set_attr \"type\" \"store1\")\n    (set_attr \"predicable\" \"yes\")]\n@@ -9346,10 +9342,9 @@\n    (set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(minus:SI (match_dup 1) (match_dup 2)))]\n   \"TARGET_ARM\n-   && REGNO (operands[0]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[1]) != FRAME_POINTER_REGNUM\n-   && (GET_CODE (operands[2]) != REG\n-       || REGNO (operands[2]) != FRAME_POINTER_REGNUM)\"\n+   && !arm_eliminable_register (operands[0])\n+   && !arm_eliminable_register (operands[1])\n+   && !arm_eliminable_register (operands[2])\"\n   \"str%?b\\\\t%3, [%0, -%2]!\"\n   [(set_attr \"type\" \"store1\")\n    (set_attr \"predicable\" \"yes\")]\n@@ -9362,10 +9357,9 @@\n    (set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(plus:SI (match_dup 1) (match_dup 2)))]\n   \"TARGET_ARM\n-   && REGNO (operands[0]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[1]) != FRAME_POINTER_REGNUM\n-   && (GET_CODE (operands[2]) != REG\n-       || REGNO (operands[2]) != FRAME_POINTER_REGNUM)\"\n+   && !arm_eliminable_register (operands[0])\n+   && !arm_eliminable_register (operands[1])\n+   && !arm_eliminable_register (operands[2])\"\n   \"ldr%?b\\\\t%3, [%0, %2]!\"\n   [(set_attr \"type\" \"load_byte\")\n    (set_attr \"predicable\" \"yes\")]\n@@ -9378,10 +9372,9 @@\n    (set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(minus:SI (match_dup 1) (match_dup 2)))]\n   \"TARGET_ARM\n-   && REGNO (operands[0]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[1]) != FRAME_POINTER_REGNUM\n-   && (GET_CODE (operands[2]) != REG\n-       || REGNO (operands[2]) != FRAME_POINTER_REGNUM)\"\n+   && !arm_eliminable_register (operands[0])\n+   && !arm_eliminable_register (operands[1])\n+   && !arm_eliminable_register (operands[2])\"\n   \"ldr%?b\\\\t%3, [%0, -%2]!\"\n   [(set_attr \"type\" \"load_byte\")\n    (set_attr \"predicable\" \"yes\")]\n@@ -9395,10 +9388,9 @@\n    (set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(plus:SI (match_dup 1) (match_dup 2)))]\n   \"TARGET_ARM\n-   && REGNO (operands[0]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[1]) != FRAME_POINTER_REGNUM\n-   && (GET_CODE (operands[2]) != REG\n-       || REGNO (operands[2]) != FRAME_POINTER_REGNUM)\"\n+   && !arm_eliminable_register (operands[0])\n+   && !arm_eliminable_register (operands[1])\n+   && !arm_eliminable_register (operands[2])\"\n   \"ldr%?b\\\\t%3, [%0, %2]!\\\\t%@ z_extendqisi\"\n   [(set_attr \"type\" \"load_byte\")\n    (set_attr \"predicable\" \"yes\")]\n@@ -9412,10 +9404,9 @@\n    (set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(minus:SI (match_dup 1) (match_dup 2)))]\n   \"TARGET_ARM\n-   && REGNO (operands[0]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[1]) != FRAME_POINTER_REGNUM\n-   && (GET_CODE (operands[2]) != REG\n-       || REGNO (operands[2]) != FRAME_POINTER_REGNUM)\"\n+   && !arm_eliminable_register (operands[0])\n+   && !arm_eliminable_register (operands[1])\n+   && !arm_eliminable_register (operands[2])\"\n   \"ldr%?b\\\\t%3, [%0, -%2]!\\\\t%@ z_extendqisi\"\n   [(set_attr \"type\" \"load_byte\")\n    (set_attr \"predicable\" \"yes\")]\n@@ -9428,10 +9419,9 @@\n    (set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(plus:SI (match_dup 1) (match_dup 2)))]\n   \"TARGET_ARM\n-   && REGNO (operands[0]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[1]) != FRAME_POINTER_REGNUM\n-   && (GET_CODE (operands[2]) != REG\n-       || REGNO (operands[2]) != FRAME_POINTER_REGNUM)\"\n+   && !arm_eliminable_register (operands[0])\n+   && !arm_eliminable_register (operands[1])\n+   && !arm_eliminable_register (operands[2])\"\n   \"str%?\\\\t%3, [%0, %2]!\"\n   [(set_attr \"type\" \"store1\")\n    (set_attr \"predicable\" \"yes\")]\n@@ -9444,10 +9434,9 @@\n    (set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(minus:SI (match_dup 1) (match_dup 2)))]\n   \"TARGET_ARM\n-   && REGNO (operands[0]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[1]) != FRAME_POINTER_REGNUM\n-   && (GET_CODE (operands[2]) != REG\n-       || REGNO (operands[2]) != FRAME_POINTER_REGNUM)\"\n+   && !arm_eliminable_register (operands[0])\n+   && !arm_eliminable_register (operands[1])\n+   && !arm_eliminable_register (operands[2])\"\n   \"str%?\\\\t%3, [%0, -%2]!\"\n   [(set_attr \"type\" \"store1\")\n    (set_attr \"predicable\" \"yes\")]\n@@ -9460,10 +9449,9 @@\n    (set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(plus:SI (match_dup 1) (match_dup 2)))]\n   \"TARGET_ARM\n-   && REGNO (operands[0]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[1]) != FRAME_POINTER_REGNUM\n-   && (GET_CODE (operands[2]) != REG\n-       || REGNO (operands[2]) != FRAME_POINTER_REGNUM)\"\n+   && !arm_eliminable_register (operands[0])\n+   && !arm_eliminable_register (operands[1])\n+   && !arm_eliminable_register (operands[2])\"\n   \"ldr%?\\\\t%3, [%0, %2]!\"\n   [(set_attr \"type\" \"load1\")\n    (set_attr \"predicable\" \"yes\")]\n@@ -9476,10 +9464,9 @@\n    (set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(minus:SI (match_dup 1) (match_dup 2)))]\n   \"TARGET_ARM\n-   && REGNO (operands[0]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[1]) != FRAME_POINTER_REGNUM\n-   && (GET_CODE (operands[2]) != REG\n-       || REGNO (operands[2]) != FRAME_POINTER_REGNUM)\"\n+   && !arm_eliminable_register (operands[0])\n+   && !arm_eliminable_register (operands[1])\n+   && !arm_eliminable_register (operands[2])\"\n   \"ldr%?\\\\t%3, [%0, -%2]!\"\n   [(set_attr \"type\" \"load1\")\n    (set_attr \"predicable\" \"yes\")]\n@@ -9495,9 +9482,9 @@\n \t(plus:SI (match_op_dup 2 [(match_dup 3)\t(match_dup 4)])\n \t\t (match_dup 1)))]\n   \"TARGET_ARM\n-   && REGNO (operands[0]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[1]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[3]) != FRAME_POINTER_REGNUM\"\n+   && !arm_eliminable_register (operands[0])\n+   && !arm_eliminable_register (operands[1])\n+   && !arm_eliminable_register (operands[3])\"\n   \"str%?b\\\\t%5, [%0, %3%S2]!\"\n   [(set_attr \"type\" \"store1\")\n    (set_attr \"predicable\" \"yes\")]\n@@ -9513,9 +9500,9 @@\n \t(minus:SI (match_dup 1) (match_op_dup 2 [(match_dup 3)\n \t\t\t\t\t\t (match_dup 4)])))]\n   \"TARGET_ARM\n-   && REGNO (operands[0]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[1]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[3]) != FRAME_POINTER_REGNUM\"\n+   && !arm_eliminable_register (operands[0])\n+   && !arm_eliminable_register (operands[1])\n+   && !arm_eliminable_register (operands[3])\"\n   \"str%?b\\\\t%5, [%0, -%3%S2]!\"\n   [(set_attr \"type\" \"store1\")\n    (set_attr \"predicable\" \"yes\")]\n@@ -9531,9 +9518,9 @@\n \t(plus:SI (match_op_dup 2 [(match_dup 3)\t(match_dup 4)])\n \t\t (match_dup 1)))]\n   \"TARGET_ARM\n-   && REGNO (operands[0]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[1]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[3]) != FRAME_POINTER_REGNUM\"\n+   && !arm_eliminable_register (operands[0])\n+   && !arm_eliminable_register (operands[1])\n+   && !arm_eliminable_register (operands[3])\"\n   \"ldr%?b\\\\t%5, [%0, %3%S2]!\"\n   [(set_attr \"type\" \"load_byte\")\n    (set_attr \"predicable\" \"yes\")]\n@@ -9549,9 +9536,9 @@\n \t(minus:SI (match_dup 1) (match_op_dup 2 [(match_dup 3)\n \t\t\t\t\t\t (match_dup 4)])))]\n   \"TARGET_ARM\n-   && REGNO (operands[0]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[1]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[3]) != FRAME_POINTER_REGNUM\"\n+   && !arm_eliminable_register (operands[0])\n+   && !arm_eliminable_register (operands[1])\n+   && !arm_eliminable_register (operands[3])\"\n   \"ldr%?b\\\\t%5, [%0, -%3%S2]!\"\n   [(set_attr \"type\" \"load_byte\")\n    (set_attr \"predicable\" \"yes\")]\n@@ -9567,9 +9554,9 @@\n \t(plus:SI (match_op_dup 2 [(match_dup 3)\t(match_dup 4)])\n \t\t (match_dup 1)))]\n   \"TARGET_ARM\n-   && REGNO (operands[0]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[1]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[3]) != FRAME_POINTER_REGNUM\"\n+   && !arm_eliminable_register (operands[0])\n+   && !arm_eliminable_register (operands[1])\n+   && !arm_eliminable_register (operands[3])\"\n   \"str%?\\\\t%5, [%0, %3%S2]!\"\n   [(set_attr \"type\" \"store1\")\n    (set_attr \"predicable\" \"yes\")]\n@@ -9585,9 +9572,9 @@\n \t(minus:SI (match_dup 1) (match_op_dup 2 [(match_dup 3)\n \t\t\t\t\t\t (match_dup 4)])))]\n   \"TARGET_ARM\n-   && REGNO (operands[0]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[1]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[3]) != FRAME_POINTER_REGNUM\"\n+   && !arm_eliminable_register (operands[0])\n+   && !arm_eliminable_register (operands[1])\n+   && !arm_eliminable_register (operands[3])\"\n   \"str%?\\\\t%5, [%0, -%3%S2]!\"\n   [(set_attr \"type\" \"store1\")\n    (set_attr \"predicable\" \"yes\")]\n@@ -9603,9 +9590,9 @@\n \t(plus:SI (match_op_dup 2 [(match_dup 3) (match_dup 4)])\n \t\t (match_dup 1)))]\n   \"TARGET_ARM\n-   && REGNO (operands[0]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[1]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[3]) != FRAME_POINTER_REGNUM\"\n+   && !arm_eliminable_register (operands[0])\n+   && !arm_eliminable_register (operands[1])\n+   && !arm_eliminable_register (operands[3])\"\n   \"ldr%?\\\\t%5, [%0, %3%S2]!\"\n   [(set_attr \"type\" \"load1\")\n    (set_attr \"predicable\" \"yes\")]\n@@ -9621,9 +9608,9 @@\n \t(minus:SI (match_dup 1) (match_op_dup 2 [(match_dup 3)\n \t\t\t\t\t\t (match_dup 4)])))]\n   \"TARGET_ARM\n-   && REGNO (operands[0]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[1]) != FRAME_POINTER_REGNUM\n-   && REGNO (operands[3]) != FRAME_POINTER_REGNUM\"\n+   && !arm_eliminable_register (operands[0])\n+   && !arm_eliminable_register (operands[1])\n+   && !arm_eliminable_register (operands[3])\"\n   \"ldr%?\\\\t%5, [%0, -%3%S2]!\"\n   [(set_attr \"type\" \"load1\")\n    (set_attr \"predicable\" \"yes\")])"}]}