{"sha": "63cdb7a08d7f80b32ba7704b72136fff7ae9f995", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNjZGI3YTA4ZDdmODBiMzJiYTc3MDRiNzIxMzZmZmY3YWU5Zjk5NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-09-13T19:19:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-09-13T19:19:33Z"}, "message": "re PR tree-optimization/77454 (IMM ERROR w/ -O2 and above)\n\n\tPR tree-optimization/77454\n\t* tree-ssa-dom.c (optimize_stmt): Set modified flag on stmt after\n\tchanging GIMPLE_COND.  Move update_stmt_if_modified call after this.\n\tFormatting fix.\n\n\t* gcc.dg/pr77454.c: New test.\n\nFrom-SVN: r240120", "tree": {"sha": "ed4e689b86d691d06100c95deb62bd8d2b78c60c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed4e689b86d691d06100c95deb62bd8d2b78c60c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63cdb7a08d7f80b32ba7704b72136fff7ae9f995", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63cdb7a08d7f80b32ba7704b72136fff7ae9f995", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63cdb7a08d7f80b32ba7704b72136fff7ae9f995", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63cdb7a08d7f80b32ba7704b72136fff7ae9f995/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea8661cd4794f3b31ea3a4410e9aa5de3df1e3aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea8661cd4794f3b31ea3a4410e9aa5de3df1e3aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea8661cd4794f3b31ea3a4410e9aa5de3df1e3aa"}], "stats": {"total": 49, "additions": 45, "deletions": 4}, "files": [{"sha": "82034a9a8b73ef7237683c41d5dee0c04d2ebe39", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63cdb7a08d7f80b32ba7704b72136fff7ae9f995/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63cdb7a08d7f80b32ba7704b72136fff7ae9f995/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=63cdb7a08d7f80b32ba7704b72136fff7ae9f995", "patch": "@@ -1,3 +1,10 @@\n+2016-09-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/77454\n+\t* tree-ssa-dom.c (optimize_stmt): Set modified flag on stmt after\n+\tchanging GIMPLE_COND.  Move update_stmt_if_modified call after this.\n+\tFormatting fix.\n+\n 2016-09-13  Tamar Christina  <tamar.christina@arm.com>\n \n \t* config/aarch64/aarch64-builtins.c "}, {"sha": "a89273701919c91514a714fc4002b6f30775e94c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63cdb7a08d7f80b32ba7704b72136fff7ae9f995/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63cdb7a08d7f80b32ba7704b72136fff7ae9f995/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=63cdb7a08d7f80b32ba7704b72136fff7ae9f995", "patch": "@@ -1,5 +1,8 @@\n 2016-09-13  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/77454\n+\t* gcc.dg/pr77454.c: New test.\n+\n \tPR c++/77553\n \t* g++.dg/cpp1y/constexpr-77553.C: New test.\n "}, {"sha": "1bb41c2b17628c67fa477a40f072064d9d46e5a0", "filename": "gcc/testsuite/gcc.dg/pr77454.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63cdb7a08d7f80b32ba7704b72136fff7ae9f995/gcc%2Ftestsuite%2Fgcc.dg%2Fpr77454.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63cdb7a08d7f80b32ba7704b72136fff7ae9f995/gcc%2Ftestsuite%2Fgcc.dg%2Fpr77454.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr77454.c?ref=63cdb7a08d7f80b32ba7704b72136fff7ae9f995", "patch": "@@ -0,0 +1,28 @@\n+/* PR tree-optimization/77454 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+void\n+foo (unsigned char x, char y)\n+{\n+  while (x != 0)\n+    {\n+      unsigned char *a = &x;\n+      int b;\n+\n+      if (y != 0)\n+\ta = (unsigned char *) &y;\n+      else if (y + 1 != 0)\n+\ta = (unsigned char *) &y;\n+      for (x = 0; x < 1; ++x)\n+\tb = 0;\n+      for (y = 0; y < 3; ++y)\n+\t{\n+\t  y = !!y;\n+\t  if (y != 0)\n+\t    x = y;\n+\t}\n+      if ((b != 0 ? -1 : *a) < (y = b))\n+\tb = 1;\n+    }\n+}"}, {"sha": "b007388f3eacd07a9d660e0c23a47828fa91bc7a", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63cdb7a08d7f80b32ba7704b72136fff7ae9f995/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63cdb7a08d7f80b32ba7704b72136fff7ae9f995/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=63cdb7a08d7f80b32ba7704b72136fff7ae9f995", "patch": "@@ -1923,12 +1923,11 @@ optimize_stmt (basic_block bb, gimple_stmt_iterator si,\n     {\n       tree val = NULL;\n \n-      update_stmt_if_modified (stmt);\n-\n       if (gimple_code (stmt) == GIMPLE_COND)\n         val = fold_binary_loc (gimple_location (stmt),\n-\t\t\t   gimple_cond_code (stmt), boolean_type_node,\n-                           gimple_cond_lhs (stmt),  gimple_cond_rhs (stmt));\n+\t\t\t       gimple_cond_code (stmt), boolean_type_node,\n+\t\t\t       gimple_cond_lhs (stmt),\n+\t\t\t       gimple_cond_rhs (stmt));\n       else if (gswitch *swtch_stmt = dyn_cast <gswitch *> (stmt))\n \tval = gimple_switch_index (swtch_stmt);\n \n@@ -1946,13 +1945,17 @@ optimize_stmt (basic_block bb, gimple_stmt_iterator si,\n \t\t    gimple_cond_make_true (as_a <gcond *> (stmt));\n \t\t  else\n \t\t    gcc_unreachable ();\n+\n+\t\t  gimple_set_modified (stmt, true);\n \t\t}\n \n \t      /* Further simplifications may be possible.  */\n \t      cfg_altered = true;\n \t    }\n \t}\n \n+      update_stmt_if_modified (stmt);\n+\n       /* If we simplified a statement in such a way as to be shown that it\n \t cannot trap, update the eh information and the cfg to match.  */\n       if (maybe_clean_or_replace_eh_stmt (old_stmt, stmt))"}]}