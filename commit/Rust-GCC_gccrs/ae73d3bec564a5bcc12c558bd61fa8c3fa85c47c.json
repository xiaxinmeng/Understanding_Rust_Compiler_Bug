{"sha": "ae73d3bec564a5bcc12c558bd61fa8c3fa85c47c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU3M2QzYmVjNTY0YTViY2MxMmM1NThiZDYxZmE4YzNmYTg1YzQ3Yw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-06-06T23:12:26Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-06-06T23:12:26Z"}, "message": "(emit_group_load, emit_group_store, use_group_regs): New\ndeclarations.\n\nFrom-SVN: r12190", "tree": {"sha": "c5f91ca19096ca8ce790efbb85d98e78f8aa9826", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5f91ca19096ca8ce790efbb85d98e78f8aa9826"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae73d3bec564a5bcc12c558bd61fa8c3fa85c47c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae73d3bec564a5bcc12c558bd61fa8c3fa85c47c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae73d3bec564a5bcc12c558bd61fa8c3fa85c47c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae73d3bec564a5bcc12c558bd61fa8c3fa85c47c/comments", "author": null, "committer": null, "parents": [{"sha": "fffa9c1d2e774bb163859c10b9b491ed918bca99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fffa9c1d2e774bb163859c10b9b491ed918bca99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fffa9c1d2e774bb163859c10b9b491ed918bca99"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "6a07929d01af5a408d09e6eb57c26ba339a23de7", "filename": "gcc/expr.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae73d3bec564a5bcc12c558bd61fa8c3fa85c47c/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae73d3bec564a5bcc12c558bd61fa8c3fa85c47c/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=ae73d3bec564a5bcc12c558bd61fa8c3fa85c47c", "patch": "@@ -620,11 +620,20 @@ extern void move_block_to_reg PROTO((int, rtx, int, enum machine_mode));\n    The number of registers to be filled is NREGS.  */\n extern void move_block_from_reg PROTO((int, rtx, int, int));\n \n+/* Load a BLKmode value into non-consecutive registers represented by a\n+   PARALLEL.  */\n+extern void emit_group_load PROTO((rtx, rtx));\n+/* Store a BLKmode value from non-consecutive registers represented by a\n+   PARALLEL.  */\n+extern void emit_group_store PROTO((rtx, rtx));\n+\n /* Mark REG as holding a parameter for the next CALL_INSN.  */\n extern void use_reg PROTO((rtx*, rtx));\n /* Mark NREGS consecutive regs, starting at REGNO, as holding parameters\n    for the next CALL_INSN.  */\n extern void use_regs PROTO((rtx*, int, int));\n+/* Mark a PARALLEL as holding a parameter for the next CALL_INSN.  */\n+extern void use_group_regs PROTO((rtx*, rtx));\n \n /* Write zeros through the storage of OBJECT.\n    If OBJECT has BLKmode, SIZE is its length in bytes and ALIGN is its"}]}