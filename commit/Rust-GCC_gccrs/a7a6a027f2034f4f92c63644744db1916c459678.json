{"sha": "a7a6a027f2034f4f92c63644744db1916c459678", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdhNmEwMjdmMjAzNGY0ZjkyYzYzNjQ0NzQ0ZGIxOTE2YzQ1OTY3OA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2013-08-22T11:49:46Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2013-08-22T11:49:46Z"}, "message": "re PR fortran/58185 ([OOP] ICE when selector in SELECT TYPE is non-polymorphic)\n\n2013-08-22  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/58185\n\t* match.c (copy_ts_from_selector_to_associate): Only build class\n\tcontainer for polymorphic selector. Some cleanup.\n\n\n2013-08-22  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/58185\n\t* gfortran.dg/select_type_34.f90: New.\n\nFrom-SVN: r201919", "tree": {"sha": "65f45bd5de66a632493d64ddad8b595ea9a715ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65f45bd5de66a632493d64ddad8b595ea9a715ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7a6a027f2034f4f92c63644744db1916c459678", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7a6a027f2034f4f92c63644744db1916c459678", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7a6a027f2034f4f92c63644744db1916c459678", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7a6a027f2034f4f92c63644744db1916c459678/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da6ca2b5ee8cf03215697da17fd7f1a4f21bf2ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da6ca2b5ee8cf03215697da17fd7f1a4f21bf2ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da6ca2b5ee8cf03215697da17fd7f1a4f21bf2ba"}], "stats": {"total": 63, "additions": 32, "deletions": 31}, "files": [{"sha": "7bf80995d1d9e2eae048f924ab5fe75bf6ae1dfe", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a6a027f2034f4f92c63644744db1916c459678/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a6a027f2034f4f92c63644744db1916c459678/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a7a6a027f2034f4f92c63644744db1916c459678", "patch": "@@ -1,3 +1,9 @@\n+2013-08-22  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/58185\n+\t* match.c (copy_ts_from_selector_to_associate): Only build class\n+\tcontainer for polymorphic selector. Some cleanup.\n+\n 2013-08-20  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/53655"}, {"sha": "71e3862189a92b4175ec24a93d255748ec795922", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 11, "deletions": 31, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a6a027f2034f4f92c63644744db1916c459678/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a6a027f2034f4f92c63644744db1916c459678/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=a7a6a027f2034f4f92c63644744db1916c459678", "patch": "@@ -5093,7 +5093,6 @@ copy_ts_from_selector_to_associate (gfc_expr *associate, gfc_expr *selector)\n {\n   gfc_ref *ref;\n   gfc_symbol *assoc_sym;\n-  int i;\n \n   assoc_sym = associate->symtree->n.sym;\n \n@@ -5104,17 +5103,16 @@ copy_ts_from_selector_to_associate (gfc_expr *associate, gfc_expr *selector)\n   while (ref && ref->next)\n     ref = ref->next;\n \n-  if (selector->ts.type == BT_CLASS\n-\t&& CLASS_DATA (selector)->as\n-\t&& ref && ref->type == REF_ARRAY)\n+  if (selector->ts.type == BT_CLASS && CLASS_DATA (selector)->as\n+      && ref && ref->type == REF_ARRAY)\n     {\n       /* Ensure that the array reference type is set.  We cannot use\n \t gfc_resolve_expr at this point, so the usable parts of\n \t resolve.c(resolve_array_ref) are employed to do it.  */\n       if (ref->u.ar.type == AR_UNKNOWN)\n \t{\n \t  ref->u.ar.type = AR_ELEMENT;\n-\t  for (i = 0; i < ref->u.ar.dimen + ref->u.ar.codimen; i++)\n+\t  for (int i = 0; i < ref->u.ar.dimen + ref->u.ar.codimen; i++)\n \t    if (ref->u.ar.dimen_type[i] == DIMEN_RANGE\n \t\t|| ref->u.ar.dimen_type[i] == DIMEN_VECTOR\n \t\t|| (ref->u.ar.dimen_type[i] == DIMEN_UNKNOWN\n@@ -5133,37 +5131,19 @@ copy_ts_from_selector_to_associate (gfc_expr *associate, gfc_expr *selector)\n \tselector->rank = 0;\n     }\n \n-  if (selector->ts.type != BT_CLASS)\n+  if (selector->rank)\n     {\n-      /* The correct class container has to be available.  */\n-      if (selector->rank)\n-\t{\n-\t  assoc_sym->attr.dimension = 1;\n-\t  assoc_sym->as = gfc_get_array_spec ();\n-\t  assoc_sym->as->rank = selector->rank;\n-\t  assoc_sym->as->type = AS_DEFERRED;\n-\t}\n-      else\n-\tassoc_sym->as = NULL;\n-\n-      assoc_sym->ts.type = BT_CLASS;\n-      assoc_sym->ts.u.derived = selector->ts.u.derived;\n-      assoc_sym->attr.pointer = 1;\n-      gfc_build_class_symbol (&assoc_sym->ts, &assoc_sym->attr,\n-\t\t\t      &assoc_sym->as, false);\n+      assoc_sym->attr.dimension = 1;\n+      assoc_sym->as = gfc_get_array_spec ();\n+      assoc_sym->as->rank = selector->rank;\n+      assoc_sym->as->type = AS_DEFERRED;\n     }\n   else\n+    assoc_sym->as = NULL;\n+\n+  if (selector->ts.type == BT_CLASS)\n     {\n       /* The correct class container has to be available.  */\n-      if (selector->rank)\n-\t{\n-\t  assoc_sym->attr.dimension = 1;\n-\t  assoc_sym->as = gfc_get_array_spec ();\n-\t  assoc_sym->as->rank = selector->rank;\n-\t  assoc_sym->as->type = AS_DEFERRED;\n-\t}\n-      else\n-\tassoc_sym->as = NULL;\n       assoc_sym->ts.type = BT_CLASS;\n       assoc_sym->ts.u.derived = CLASS_DATA (selector)->ts.u.derived;\n       assoc_sym->attr.pointer = 1;"}, {"sha": "c8786257da42fcf7486a1dce68276e6478aa3497", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a6a027f2034f4f92c63644744db1916c459678/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a6a027f2034f4f92c63644744db1916c459678/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a7a6a027f2034f4f92c63644744db1916c459678", "patch": "@@ -1,3 +1,8 @@\n+2013-08-22  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/58185\n+\t* gfortran.dg/select_type_34.f90: New.\n+\n 2013-08-21  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/56130"}, {"sha": "e75a7abd56e10c01e0f4bdc1cc03c4b9a827434f", "filename": "gcc/testsuite/gfortran.dg/select_type_34.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a6a027f2034f4f92c63644744db1916c459678/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_34.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a6a027f2034f4f92c63644744db1916c459678/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_34.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_34.f90?ref=a7a6a027f2034f4f92c63644744db1916c459678", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+!\n+! PR 58185: [4.8/4.9 Regression] [OOP] ICE when selector in SELECT TYPE is non-polymorphic\n+!\n+! Contributed by John <jwmwalrus@gmail.com>\n+\n+  integer :: array\n+  select type (a => array)   ! { dg-error \"Selector shall be polymorphic\" }\n+  end select\n+end"}]}