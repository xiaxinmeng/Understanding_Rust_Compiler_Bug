{"sha": "a95ec51797e17c3967fdfa17eee1c9c03b904414", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk1ZWM1MTc5N2UxN2MzOTY3ZmRmYTE3ZWVlMWM5YzAzYjkwNDQxNA==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2013-12-18T07:45:29Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2013-12-18T07:45:29Z"}, "message": "sse.md (avx512f_cmp<mode>3): Extend to support masking.\n\n        * config/i386/sse.md (avx512f_cmp<mode>3): Extend to support masking.\n        (avx512f_ucmp<mode>3): Ditto.\n        (avx512f_eq<mode>3): Ditto.\n        (avx512f_gt<mode>3): Ditto.\n        (avx512f_testm<mode>3): Ditto.\n        (avx512f_testnm<mode>3): Ditto.\n        * config/i386/subst.md (SUBST_S): New.\n        (mask_scalar_merge_name): Ditto.\n        (mask_scalar_merge_operand3): Ditto.\n        (mask_scalar_merge_operand4): Ditto.\n        (mask_scalar_merge): Ditto.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\nCo-Authored-By: Sergey Lega <sergey.s.lega@intel.com>\n\nFrom-SVN: r206080", "tree": {"sha": "e67c0688439986dfce75228a7de07fa05fa48920", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e67c0688439986dfce75228a7de07fa05fa48920"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a95ec51797e17c3967fdfa17eee1c9c03b904414", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a95ec51797e17c3967fdfa17eee1c9c03b904414", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a95ec51797e17c3967fdfa17eee1c9c03b904414", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a95ec51797e17c3967fdfa17eee1c9c03b904414/comments", "author": null, "committer": null, "parents": [{"sha": "82b8950fc1ad6c7970b9b0c9c530cfa73559179d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82b8950fc1ad6c7970b9b0c9c530cfa73559179d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82b8950fc1ad6c7970b9b0c9c530cfa73559179d"}], "stats": {"total": 64, "additions": 51, "deletions": 13}, "files": [{"sha": "8830abc53d3ec7d73f5dcd97a1d9a6b000c77651", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95ec51797e17c3967fdfa17eee1c9c03b904414/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95ec51797e17c3967fdfa17eee1c9c03b904414/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a95ec51797e17c3967fdfa17eee1c9c03b904414", "patch": "@@ -1,3 +1,25 @@\n+2013-11-13  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Sergey Lega  <sergey.s.lega@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md (avx512f_cmp<mode>3): Extend to support masking.\n+\t(avx512f_ucmp<mode>3): Ditto.\n+\t(avx512f_eq<mode>3): Ditto.\n+\t(avx512f_gt<mode>3): Ditto.\n+\t(avx512f_testm<mode>3): Ditto.\n+\t(avx512f_testnm<mode>3): Ditto.\n+\t* config/i386/subst.md (SUBST_S): New.\n+\t(mask_scalar_merge_name): Ditto.\n+\t(mask_scalar_merge_operand3): Ditto.\n+\t(mask_scalar_merge_operand4): Ditto.\n+\t(mask_scalar_merge): Ditto.\n+\n 2013-12-17  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR middle-end/35535"}, {"sha": "46842d295519b1383aeff66fe2ac1d0be66b487a", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95ec51797e17c3967fdfa17eee1c9c03b904414/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95ec51797e17c3967fdfa17eee1c9c03b904414/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=a95ec51797e17c3967fdfa17eee1c9c03b904414", "patch": "@@ -2099,29 +2099,29 @@\n   [(V16SF \"const_0_to_31_operand\") (V8DF \"const_0_to_31_operand\")\n   (V16SI \"const_0_to_7_operand\") (V8DI \"const_0_to_7_operand\")])\n \n-(define_insn \"avx512f_cmp<mode>3\"\n+(define_insn \"avx512f_cmp<mode>3<mask_scalar_merge_name>\"\n   [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=k\")\n \t(unspec:<avx512fmaskmode>\n \t  [(match_operand:VI48F_512 1 \"register_operand\" \"v\")\n \t   (match_operand:VI48F_512 2 \"nonimmediate_operand\" \"vm\")\n \t   (match_operand:SI 3 \"<cmp_imm_predicate>\" \"n\")]\n \t  UNSPEC_PCMP))]\n   \"TARGET_AVX512F\"\n-  \"v<sseintprefix>cmp<ssemodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  \"v<sseintprefix>cmp<ssemodesuffix>\\t{%3, %2, %1, %0<mask_scalar_merge_operand4>|%0<mask_scalar_merge_operand4>, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssecmp\")\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"avx512f_ucmp<mode>3\"\n+(define_insn \"avx512f_ucmp<mode>3<mask_scalar_merge_name>\"\n   [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=k\")\n \t(unspec:<avx512fmaskmode>\n \t  [(match_operand:VI48_512 1 \"register_operand\" \"v\")\n \t   (match_operand:VI48_512 2 \"nonimmediate_operand\" \"vm\")\n \t   (match_operand:SI 3 \"const_0_to_7_operand\" \"n\")]\n \t  UNSPEC_UNSIGNED_PCMP))]\n   \"TARGET_AVX512F\"\n-  \"vpcmpu<ssemodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  \"vpcmpu<ssemodesuffix>\\t{%3, %2, %1, %0<mask_scalar_merge_operand4>|%0<mask_scalar_merge_operand4>, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssecmp\")\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"prefix\" \"evex\")\n@@ -8360,7 +8360,7 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_expand \"avx512f_eq<mode>3\"\n+(define_expand \"avx512f_eq<mode>3<mask_scalar_merge_name>\"\n   [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\")\n \t(unspec:<avx512fmaskmode>\n \t  [(match_operand:VI48_512 1 \"register_operand\")\n@@ -8369,14 +8369,14 @@\n   \"TARGET_AVX512F\"\n   \"ix86_fixup_binary_operands_no_copy (EQ, <MODE>mode, operands);\")\n \n-(define_insn \"avx512f_eq<mode>3_1\"\n+(define_insn \"avx512f_eq<mode>3<mask_scalar_merge_name>_1\"\n   [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=k\")\n \t(unspec:<avx512fmaskmode>\n \t  [(match_operand:VI48_512 1 \"register_operand\" \"%v\")\n \t   (match_operand:VI48_512 2 \"nonimmediate_operand\" \"vm\")]\n \t  UNSPEC_MASKED_EQ))]\n   \"TARGET_AVX512F && ix86_binary_operator_ok (EQ, <MODE>mode, operands)\"\n-  \"vpcmpeq<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  \"vpcmpeq<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\"\n   [(set_attr \"type\" \"ssecmp\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"evex\")\n@@ -8456,13 +8456,13 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"avx512f_gt<mode>3\"\n+(define_insn \"avx512f_gt<mode>3<mask_scalar_merge_name>\"\n   [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=k\")\n \t(unspec:<avx512fmaskmode>\n \t  [(match_operand:VI48_512 1 \"register_operand\" \"v\")\n \t   (match_operand:VI48_512 2 \"nonimmediate_operand\" \"vm\")] UNSPEC_MASKED_GT))]\n   \"TARGET_AVX512F\"\n-  \"vpcmpgt<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  \"vpcmpgt<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\"\n   [(set_attr \"type\" \"ssecmp\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"evex\")\n@@ -8856,25 +8856,25 @@\n \t      ]\n \t      (const_string \"<sseinsnmode>\")))])\n \n-(define_insn \"avx512f_testm<mode>3\"\n+(define_insn \"avx512f_testm<mode>3<mask_scalar_merge_name>\"\n   [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=k\")\n \t(unspec:<avx512fmaskmode>\n \t [(match_operand:VI48_512 1 \"register_operand\" \"v\")\n \t  (match_operand:VI48_512 2 \"nonimmediate_operand\" \"vm\")]\n \t UNSPEC_TESTM))]\n   \"TARGET_AVX512F\"\n-  \"vptestm<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  \"vptestm<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\"\n   [(set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\"  \"<sseinsnmode>\")])\n \n-(define_insn \"avx512f_testnm<mode>3\"\n+(define_insn \"avx512f_testnm<mode>3<mask_scalar_merge_name>\"\n   [(set (match_operand:<avx512fmaskmode> 0 \"register_operand\" \"=k\")\n \t(unspec:<avx512fmaskmode>\n \t [(match_operand:VI48_512 1 \"register_operand\" \"v\")\n \t  (match_operand:VI48_512 2 \"nonimmediate_operand\" \"vm\")]\n \t UNSPEC_TESTNM))]\n   \"TARGET_AVX512CD\"\n-  \"%vptestnm<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  \"%vptestnm<ssemodesuffix>\\t{%2, %1, %0<mask_scalar_merge_operand3>|%0<mask_scalar_merge_operand3>, %1, %2}\"\n   [(set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\"  \"<sseinsnmode>\")])\n "}, {"sha": "0fdef6d77cc8e216ffb931d0a176816c538cfef7", "filename": "gcc/config/i386/subst.md", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a95ec51797e17c3967fdfa17eee1c9c03b904414/gcc%2Fconfig%2Fi386%2Fsubst.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a95ec51797e17c3967fdfa17eee1c9c03b904414/gcc%2Fconfig%2Fi386%2Fsubst.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsubst.md?ref=a95ec51797e17c3967fdfa17eee1c9c03b904414", "patch": "@@ -27,6 +27,9 @@\n    V16SF V8SF  V4SF\n    V8DF  V4DF  V2DF])\n \n+(define_mode_iterator SUBST_S\n+  [QI HI SI DI])\n+\n (define_subst_attr \"mask_name\" \"mask\" \"\" \"_mask\")\n (define_subst_attr \"mask_applied\" \"mask\" \"false\" \"true\")\n (define_subst_attr \"mask_operand2\" \"mask\" \"\" \"%{%3%}%N2\")\n@@ -54,3 +57,16 @@\n \t  (match_dup 1)\n \t  (match_operand:SUBST_V 2 \"vector_move_operand\" \"0C\")\n \t  (match_operand:<avx512fmaskmode> 3 \"register_operand\" \"k\")))])\n+\n+(define_subst_attr \"mask_scalar_merge_name\" \"mask_scalar_merge\" \"\" \"_mask\")\n+(define_subst_attr \"mask_scalar_merge_operand3\" \"mask_scalar_merge\" \"\" \"%{%3%}\")\n+(define_subst_attr \"mask_scalar_merge_operand4\" \"mask_scalar_merge\" \"\" \"%{%4%}\")\n+\n+(define_subst \"mask_scalar_merge\"\n+  [(set (match_operand:SUBST_S 0)\n+        (match_operand:SUBST_S 1))]\n+  \"TARGET_AVX512F\"\n+  [(set (match_dup 0)\n+        (and:SUBST_S\n+\t  (match_dup 1)\n+\t  (match_operand:SUBST_S 3 \"register_operand\" \"k\")))])"}]}