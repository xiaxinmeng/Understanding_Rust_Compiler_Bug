{"sha": "630287af48fcf25759f9e96d0ef39db90b5fa3af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjMwMjg3YWY0OGZjZjI1NzU5ZjllOTZkMGVmMzlkYjkwYjVmYTNhZg==", "commit": {"author": {"name": "Ranjit Mathew", "email": "rmathew@hotmail.com", "date": "2003-03-10T19:39:18Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2003-03-10T19:39:18Z"}, "message": "jcf-io.c (caching_stat): Account for both DIR_SEPARATOR and DIR_SEPARATOR_2 for a target.\n\n2003-03-10  Ranjit Mathew  <rmathew@hotmail.com>\n\n        * jcf-io.c (caching_stat): Account for both DIR_SEPARATOR\n        and DIR_SEPARATOR_2 for a target.\n        Correct minor typos.\n\n        * jcf-write.c (make_class_file_name): Take both DIR_SEPARATOR\n        and DIR_SEPARATOR_2 for a target into account.\n\nFrom-SVN: r64110", "tree": {"sha": "fa4274affbe4493621a42186068b16c1747c9778", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa4274affbe4493621a42186068b16c1747c9778"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/630287af48fcf25759f9e96d0ef39db90b5fa3af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/630287af48fcf25759f9e96d0ef39db90b5fa3af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/630287af48fcf25759f9e96d0ef39db90b5fa3af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/630287af48fcf25759f9e96d0ef39db90b5fa3af/comments", "author": null, "committer": null, "parents": [{"sha": "5c2424217a35eee7fa8bf1e8456b2143af632e53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c2424217a35eee7fa8bf1e8456b2143af632e53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c2424217a35eee7fa8bf1e8456b2143af632e53"}], "stats": {"total": 57, "additions": 47, "deletions": 10}, "files": [{"sha": "1f8537fec5e3a7b773e162cd7edbe9753cc9edf7", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/630287af48fcf25759f9e96d0ef39db90b5fa3af/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/630287af48fcf25759f9e96d0ef39db90b5fa3af/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=630287af48fcf25759f9e96d0ef39db90b5fa3af", "patch": "@@ -1,3 +1,12 @@\n+2003-03-10  Ranjit Mathew  <rmathew@hotmail.com>\n+\n+\t* jcf-io.c (caching_stat): Account for both DIR_SEPARATOR\n+\tand DIR_SEPARATOR_2 for a target.\n+\tCorrect minor typos.\n+\n+\t* jcf-write.c (make_class_file_name): Take both DIR_SEPARATOR\n+\tand DIR_SEPARATOR_2 for a target into account.\n+\n 2003-03-08  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* lang.c (java_init): Update prototype, move code to java_post_options."}, {"sha": "cb56c096e2de85352bcc04d0114105499c096071", "filename": "gcc/java/jcf-io.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/630287af48fcf25759f9e96d0ef39db90b5fa3af/gcc%2Fjava%2Fjcf-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/630287af48fcf25759f9e96d0ef39db90b5fa3af/gcc%2Fjava%2Fjcf-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-io.c?ref=630287af48fcf25759f9e96d0ef39db90b5fa3af", "patch": "@@ -336,6 +336,7 @@ caching_stat (char *filename, struct stat *buf)\n {\n #if JCF_USE_SCANDIR\n   char *sep;\n+  char origsep;\n   char *base;\n   memoized_dirlist_entry *dent;\n   void **slot;\n@@ -349,15 +350,20 @@ caching_stat (char *filename, struct stat *buf)\n \n   /* Get the name of the directory.  */\n   sep = strrchr (filename, DIR_SEPARATOR);\n+#ifdef DIR_SEPARATOR_2\n+  if (! sep)\n+    sep = strrchr (filename, DIR_SEPARATOR_2);\n+#endif\n   if (sep)\n     {\n+      origsep = *sep;\n       *sep = '\\0';\n       base = sep + 1;\n     }\n   else\n     base = filename;\n \n-  /* Obtain the entry for this directory form the hash table.  */\n+  /* Obtain the entry for this directory from the hash table.  */\n   slot = htab_find_slot (memoized_dirlists, filename, INSERT);\n   if (!*slot)\n     {\n@@ -380,7 +386,7 @@ caching_stat (char *filename, struct stat *buf)\n \n   /* Put the separator back.  */\n   if (sep)\n-    *sep = DIR_SEPARATOR;\n+    *sep = origsep;\n \n   /* If the file is not in the list, there is no need to stat it; it\n      does not exist.  */"}, {"sha": "d9fc650825984a14df423f3a528f9060690888ca", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 30, "deletions": 8, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/630287af48fcf25759f9e96d0ef39db90b5fa3af/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/630287af48fcf25759f9e96d0ef39db90b5fa3af/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=630287af48fcf25759f9e96d0ef39db90b5fa3af", "patch": "@@ -3263,6 +3263,7 @@ make_class_file_name (tree clas)\n   const char *dname, *cname, *slash;\n   char *r;\n   struct stat sb;\n+  char sep;\n \n   cname = IDENTIFIER_POINTER (identifier_subst (DECL_NAME (TYPE_NAME (clas)),\n \t\t\t\t\t\t\"\", '.', DIR_SEPARATOR,\n@@ -3274,24 +3275,45 @@ make_class_file_name (tree clas)\n       char *t;\n       dname = DECL_SOURCE_FILE (TYPE_NAME (clas));\n       slash = strrchr (dname, DIR_SEPARATOR);\n+#ifdef DIR_SEPARATOR_2\n       if (! slash)\n-\t{\n-\t  dname = \".\";\n-\t  slash = dname + 1;\n-\t}\n+        slash = strrchr (dname, DIR_SEPARATOR_2);\n+#endif\n+      if (! slash)\n+        {\n+          dname = \".\";\n+          slash = dname + 1;\n+          sep = DIR_SEPARATOR;\n+        }\n+      else\n+        sep = *slash;\n+\n       t = strrchr (cname, DIR_SEPARATOR);\n       if (t)\n \tcname = t + 1;\n     }\n   else\n     {\n+      char *s;\n+\n       dname = jcf_write_base_directory;\n+\n+      s = strrchr (dname, DIR_SEPARATOR);\n+#ifdef DIR_SEPARATOR_2\n+      if (! s)\n+        s = strrchr (dname, DIR_SEPARATOR_2);\n+#endif\n+      if (s)\n+        sep = *s;\n+      else\n+        sep = DIR_SEPARATOR;\n+\n       slash = dname + strlen (dname);\n     }\n \n   r = xmalloc (slash - dname + strlen (cname) + 2);\n   strncpy (r, dname, slash - dname);\n-  r[slash - dname] = DIR_SEPARATOR;\n+  r[slash - dname] = sep;\n   strcpy (&r[slash - dname + 1], cname);\n \n   /* We try to make new directories when we need them.  We only do\n@@ -3303,7 +3325,7 @@ make_class_file_name (tree clas)\n   dname = r + (slash - dname) + 1;\n   while (1)\n     {\n-      char *s = strchr (dname, DIR_SEPARATOR);\n+      char *s = strchr (dname, sep);\n       if (s == NULL)\n \tbreak;\n       *s = '\\0';\n@@ -3312,9 +3334,9 @@ make_class_file_name (tree clas)\n \t  && mkdir (r, 0755) == -1)\n \tfatal_io_error (\"can't create directory %s\", r);\n \n-      *s = DIR_SEPARATOR;\n+      *s = sep;\n       /* Skip consecutive separators.  */\n-      for (dname = s + 1; *dname && *dname == DIR_SEPARATOR; ++dname)\n+      for (dname = s + 1; *dname && *dname == sep; ++dname)\n \t;\n     }\n "}]}