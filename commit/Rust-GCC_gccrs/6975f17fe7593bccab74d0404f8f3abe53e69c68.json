{"sha": "6975f17fe7593bccab74d0404f8f3abe53e69c68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk3NWYxN2ZlNzU5M2JjY2FiNzRkMDQwNGY4ZjNhYmU1M2U2OWM2OA==", "commit": {"author": {"name": "Wim Lewis", "email": "wiml@hhhh.org", "date": "2009-06-16T17:55:39Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2009-06-16T17:55:39Z"}, "message": "ffi.c: Avoid clobbering cr3 and cr4, which are supposed to be callee-saved.\n\n2009-06-16  Wim Lewis  <wiml@hhhh.org>\n\n\t* src/powerpc/ffi.c: Avoid clobbering cr3 and cr4, which are\n\tsupposed to be callee-saved.\n\t* src/powerpc/sysv.S (small_struct_return_value): Fix overrun of\n\treturn buffer for odd-size structs.\n\nFrom-SVN: r148543", "tree": {"sha": "d45c3919a861936258fab6cda27c873f7c0a187d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d45c3919a861936258fab6cda27c873f7c0a187d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6975f17fe7593bccab74d0404f8f3abe53e69c68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6975f17fe7593bccab74d0404f8f3abe53e69c68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6975f17fe7593bccab74d0404f8f3abe53e69c68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6975f17fe7593bccab74d0404f8f3abe53e69c68/comments", "author": {"login": "wiml", "id": 156891, "node_id": "MDQ6VXNlcjE1Njg5MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/156891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wiml", "html_url": "https://github.com/wiml", "followers_url": "https://api.github.com/users/wiml/followers", "following_url": "https://api.github.com/users/wiml/following{/other_user}", "gists_url": "https://api.github.com/users/wiml/gists{/gist_id}", "starred_url": "https://api.github.com/users/wiml/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wiml/subscriptions", "organizations_url": "https://api.github.com/users/wiml/orgs", "repos_url": "https://api.github.com/users/wiml/repos", "events_url": "https://api.github.com/users/wiml/events{/privacy}", "received_events_url": "https://api.github.com/users/wiml/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7bbcc28642a8821ad5a5281ac914d49184a8af21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bbcc28642a8821ad5a5281ac914d49184a8af21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bbcc28642a8821ad5a5281ac914d49184a8af21"}], "stats": {"total": 55, "additions": 26, "deletions": 29}, "files": [{"sha": "b08b72720cce1ecf4fa3a6fded37269292a9b49b", "filename": "libffi/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6975f17fe7593bccab74d0404f8f3abe53e69c68/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6975f17fe7593bccab74d0404f8f3abe53e69c68/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=6975f17fe7593bccab74d0404f8f3abe53e69c68", "patch": "@@ -1,3 +1,10 @@\n+2009-06-16  Wim Lewis  <wiml@hhhh.org>\n+\n+\t* src/powerpc/ffi.c: Avoid clobbering cr3 and cr4, which are\n+\tsupposed to be callee-saved.\n+\t* src/powerpc/sysv.S (small_struct_return_value): Fix overrun of\n+\treturn buffer for odd-size structs.\n+\n 2009-06-16  Andreas Tobler  <a.tobler@schweiz.org>\n \n \tPR libffi/40444"}, {"sha": "fbbfbe2e2ea9cd78680ae022f7243ea842ea44a9", "filename": "libffi/src/powerpc/ffi.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6975f17fe7593bccab74d0404f8f3abe53e69c68/libffi%2Fsrc%2Fpowerpc%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6975f17fe7593bccab74d0404f8f3abe53e69c68/libffi%2Fsrc%2Fpowerpc%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fffi.c?ref=6975f17fe7593bccab74d0404f8f3abe53e69c68", "patch": "@@ -43,11 +43,12 @@ enum {\n   FLAG_RETURNS_64BITS   = 1 << (31-28),\n \n   FLAG_RETURNS_128BITS  = 1 << (31-27), /* cr6  */\n-\n-  FLAG_SYSV_SMST_R4     = 1 << (31-16), /* cr4, use r4 for FFI_SYSV 8 byte\n+  FLAG_SYSV_SMST_R4     = 1 << (31-26), /* use r4 for FFI_SYSV 8 byte\n \t\t\t\t\t   structs.  */\n-  FLAG_SYSV_SMST_R3     = 1 << (31-15), /* cr3, use r3 for FFI_SYSV 4 byte\n+  FLAG_SYSV_SMST_R3     = 1 << (31-25), /* use r3 for FFI_SYSV 4 byte\n \t\t\t\t\t   structs.  */\n+  /* Bits (31-24) through (31-19) store shift value for SMST */\n+\n   FLAG_ARG_NEEDS_COPY   = 1 << (31- 7),\n   FLAG_FP_ARGUMENTS     = 1 << (31- 6), /* cr1.eq; specified by ABI */\n   FLAG_4_GPR_ARGUMENTS  = 1 << (31- 5),\n@@ -685,14 +686,14 @@ ffi_prep_cif_machdep (ffi_cif *cif)\n \t      if (size <= 4)\n \t\t{\n \t\t  flags |= FLAG_SYSV_SMST_R3;\n-\t\t  flags |= 8 * (4 - size) << 4;\n+\t\t  flags |= 8 * (4 - size) << 8;\n \t\t  break;\n \t\t}\n \t      /* These structs are returned in r3 and r4. See above.   */\n \t      if  (size <= 8)\n \t\t{\n-\t\t  flags |= FLAG_SYSV_SMST_R4;\n-\t\t  flags |= 8 * (8 - size) << 4;\n+\t\t  flags |= FLAG_SYSV_SMST_R3 | FLAG_SYSV_SMST_R4;\n+\t\t  flags |= 8 * (8 - size) << 8;\n \t\t  break;\n \t\t}\n \t    }"}, {"sha": "96ea22b0b40521b5a7a808f86248c749b4214f19", "filename": "libffi/src/powerpc/sysv.S", "status": "modified", "additions": 12, "deletions": 23, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6975f17fe7593bccab74d0404f8f3abe53e69c68/libffi%2Fsrc%2Fpowerpc%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6975f17fe7593bccab74d0404f8f3abe53e69c68/libffi%2Fsrc%2Fpowerpc%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fsysv.S?ref=6975f17fe7593bccab74d0404f8f3abe53e69c68", "patch": "@@ -136,29 +136,18 @@ L(float_return_value):\n \tb\tL(done_return_value)\n \n L(small_struct_return_value):\n-\tmtcrf\t0x10,%r31\t/* cr3  */\n-\tbt-\t15,L(smst_one_register)\n-\tmtcrf\t0x08,%r31\t/* cr4  */\n-\tbt-\t16,L(smst_two_register)\n-\tb       L(done_return_value)\n-\n-L(smst_one_register):\n-\trlwinm  %r5,%r31,5+23,32-5,31 /* Extract the value to shift.  */\n-\tslw\t%r3,%r3,%r5\n-\tstw\t%r3,0(%r30)\n-\tb\tL(done_return_value)\n-L(smst_two_register):\n-\trlwinm  %r5,%r31,5+23,32-5,31 /* Extract the value to shift.  */\n-\tcmpwi\t%r5,0\n-\tsubfic\t%r9,%r5,32\n-\tslw\t%r29,%r3,%r5\n-\tsrw\t%r9,%r4,%r9\n-\tbeq-\tL(smst_8byte)\n-\tor\t%r3,%r9,%r29\n-\tslw\t%r4,%r4,%r5\n-L(smst_8byte):\n-\tstw\t%r3,0(%r30)\n-\tstw\t%r4,4(%r30)\n+\textrwi\t%r6,%r31,2,19         /* number of bytes padding = shift/8 */\n+\tmtcrf\t0x02,%r31\t      /* copy flags to cr[24:27] (cr6) */\n+\textrwi\t%r5,%r31,5,19         /* r5 <- number of bits of padding */\n+\tsubfic  %r6,%r6,4             /* r6 <- number of useful bytes in r3 */\n+\tbf-\t25,L(done_return_value) /* struct in r3 ? if not, done. */\n+/* smst_one_register: */\n+\tslw\t%r3,%r3,%r5           /* Left-justify value in r3 */\n+\tmtxer\t%r6                   /* move byte count to XER ... */\n+\tstswx\t%r3,0,%r30            /* ... and store that many bytes */\n+\tbf+\t26,L(done_return_value)  /* struct in r3:r4 ? */\n+\tadd\t%r6,%r6,%r30          /* adjust pointer */\n+\tstswi\t%r4,%r6,4             /* store last four bytes */\n \tb\tL(done_return_value)\n \n .LFE1:"}]}