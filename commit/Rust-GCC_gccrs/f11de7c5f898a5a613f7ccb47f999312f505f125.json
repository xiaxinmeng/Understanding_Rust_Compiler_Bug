{"sha": "f11de7c5f898a5a613f7ccb47f999312f505f125", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjExZGU3YzVmODk4YTVhNjEzZjdjY2I0N2Y5OTkzMTJmNTA1ZjEyNQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-05-20T20:05:40Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-05-20T20:05:40Z"}, "message": "re PR fortran/48858 (Incorrect error for same binding label on two generic interface specifics)\n\n2013-05-20  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/48858\n        * decl.c (add_global_entry): Use nonbinding name\n        only for F2003 or if no binding label exists.\n        (gfc_match_entry): Update calls.\n        * parse.c (gfc_global_used): Improve error message.\n        (add_global_procedure): Use nonbinding name\n        only for F2003 or if no binding label exists.\n        (gfc_parse_file): Update call.\n        * resolve.c (resolve_global_procedure): Use binding\n        name when available.\n        * trans-decl.c (gfc_get_extern_function_decl): Ditto.\n\n2013-05-20  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/48858\n        * gfortran.dg/binding_label_tests_17.f90: New.\n        * gfortran.dg/binding_label_tests_18.f90: New.\n        * gfortran.dg/binding_label_tests_19.f90: New.\n        * gfortran.dg/binding_label_tests_20.f90: New.\n        * gfortran.dg/binding_label_tests_21.f90: New.\n        * gfortran.dg/binding_label_tests_22.f90: New.\n        * gfortran.dg/binding_label_tests_23.f90: New.\n\nFrom-SVN: r199119", "tree": {"sha": "39687a43e4fe7d4930831b3a86e693cd333c6c40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39687a43e4fe7d4930831b3a86e693cd333c6c40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f11de7c5f898a5a613f7ccb47f999312f505f125", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f11de7c5f898a5a613f7ccb47f999312f505f125", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f11de7c5f898a5a613f7ccb47f999312f505f125", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f11de7c5f898a5a613f7ccb47f999312f505f125/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "878cdb7b38f5487d0ab7933377174a552b5f7d80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/878cdb7b38f5487d0ab7933377174a552b5f7d80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/878cdb7b38f5487d0ab7933377174a552b5f7d80"}], "stats": {"total": 239, "additions": 202, "deletions": 37}, "files": [{"sha": "08b4602dd86a08d824a22f75b46741821bd5fd04", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f11de7c5f898a5a613f7ccb47f999312f505f125", "patch": "@@ -1,3 +1,17 @@\n+2013-05-20  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/48858\n+\t* decl.c (add_global_entry): Use nonbinding name\n+\tonly for F2003 or if no binding label exists.\n+\t(gfc_match_entry): Update calls.\n+\t* parse.c (gfc_global_used): Improve error message.\n+\t(add_global_procedure): Use nonbinding name\n+\tonly for F2003 or if no binding label exists.\n+\t(gfc_parse_file): Update call.\n+\t* resolve.c (resolve_global_procedure): Use binding\n+\tname when available.\n+\t* trans-decl.c (gfc_get_extern_function_decl): Ditto.\n+\n 2013-05-20  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/48858"}, {"sha": "cb449a2f7a67feafaa0fa8b5a7a0ebeaf9b70849", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 51, "deletions": 20, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=f11de7c5f898a5a613f7ccb47f999312f505f125", "patch": "@@ -5354,27 +5354,56 @@ gfc_match_function_decl (void)\n    to return false upon finding an existing global entry.  */\n \n static bool\n-add_global_entry (const char *name, int sub)\n+add_global_entry (const char *name, const char *binding_label, bool sub)\n {\n   gfc_gsymbol *s;\n   enum gfc_symbol_type type;\n \n-  s = gfc_get_gsymbol(name);\n   type = sub ? GSYM_SUBROUTINE : GSYM_FUNCTION;\n \n-  if (s->defined\n-      || (s->type != GSYM_UNKNOWN\n-\t  && s->type != type))\n-    gfc_global_used(s, NULL);\n-  else\n+  /* Only in Fortran 2003: For procedures with a binding label also the Fortran\n+     name is a global identifier.  */\n+  if (!binding_label || gfc_notification_std (GFC_STD_F2008))\n     {\n-      s->type = type;\n-      s->where = gfc_current_locus;\n-      s->defined = 1;\n-      s->ns = gfc_current_ns;\n-      return true;\n+      s = gfc_get_gsymbol (name);\n+\n+      if (s->defined || (s->type != GSYM_UNKNOWN && s->type != type))\n+\t{\n+\t  gfc_global_used(s, NULL);\n+\t  return false;\n+\t}\n+      else\n+\t{\n+\t  s->type = type;\n+\t  s->where = gfc_current_locus;\n+\t  s->defined = 1;\n+\t  s->ns = gfc_current_ns;\n+\t}\n     }\n-  return false;\n+\n+  /* Don't add the symbol multiple times.  */\n+  if (binding_label\n+      && (!gfc_notification_std (GFC_STD_F2008)\n+\t  || strcmp (name, binding_label) != 0))\n+    {\n+      s = gfc_get_gsymbol (binding_label);\n+\n+      if (s->defined || (s->type != GSYM_UNKNOWN && s->type != type))\n+\t{\n+\t  gfc_global_used(s, NULL);\n+\t  return false;\n+\t}\n+      else\n+\t{\n+\t  s->type = type;\n+\t  s->binding_label = binding_label;\n+\t  s->where = gfc_current_locus;\n+\t  s->defined = 1;\n+\t  s->ns = gfc_current_ns;\n+\t}\n+    }\n+\n+  return true;\n }\n \n \n@@ -5502,10 +5531,6 @@ gfc_match_entry (void)\n \n   if (state == COMP_SUBROUTINE)\n     {\n-      /* An entry in a subroutine.  */\n-      if (!gfc_current_ns->parent && !add_global_entry (name, 1))\n-\treturn MATCH_ERROR;\n-\n       m = gfc_match_formal_arglist (entry, 0, 1);\n       if (m != MATCH_YES)\n \treturn MATCH_ERROR;\n@@ -5527,6 +5552,11 @@ gfc_match_entry (void)\n \t      return MATCH_ERROR;\n \t}\n \n+      if (!gfc_current_ns->parent\n+\t  && !add_global_entry (name, entry->binding_label, true))\n+\treturn MATCH_ERROR;\n+\n+      /* An entry in a subroutine.  */\n       if (!gfc_add_entry (&entry->attr, entry->name, NULL)\n \t  || !gfc_add_subroutine (&entry->attr, entry->name, NULL))\n \treturn MATCH_ERROR;\n@@ -5542,9 +5572,6 @@ gfc_match_entry (void)\n \t    ENTRY f() RESULT (r)\n \t can't be written as\n \t    ENTRY f RESULT (r).  */\n-      if (!gfc_current_ns->parent && !add_global_entry (name, 0))\n-\treturn MATCH_ERROR;\n-\n       old_loc = gfc_current_locus;\n       if (gfc_match_eos () == MATCH_YES)\n \t{\n@@ -5593,6 +5620,10 @@ gfc_match_entry (void)\n \t      entry->result = entry;\n \t    }\n \t}\n+\n+      if (!gfc_current_ns->parent\n+\t  && !add_global_entry (name, entry->binding_label, false))\n+\treturn MATCH_ERROR;\n     }\n \n   if (gfc_match_eos () != MATCH_YES)"}, {"sha": "ba1730a8f1844934bacf9b43864568261a1de21f", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 45, "deletions": 15, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=f11de7c5f898a5a613f7ccb47f999312f505f125", "patch": "@@ -4232,8 +4232,12 @@ gfc_global_used (gfc_gsymbol *sym, locus *where)\n       name = NULL;\n     }\n \n-  gfc_error(\"Global name '%s' at %L is already being used as a %s at %L\",\n-\t      sym->name, where, name, &sym->where);\n+  if (sym->binding_label)\n+    gfc_error (\"Global binding name '%s' at %L is already being used as a %s \"\n+\t       \"at %L\", sym->binding_label, where, name, &sym->where);\n+  else\n+    gfc_error (\"Global name '%s' at %L is already being used as a %s at %L\",\n+\t       sym->name, where, name, &sym->where);\n }\n \n \n@@ -4342,22 +4346,48 @@ parse_module (void)\n /* Add a procedure name to the global symbol table.  */\n \n static void\n-add_global_procedure (int sub)\n+add_global_procedure (bool sub)\n {\n   gfc_gsymbol *s;\n \n-  s = gfc_get_gsymbol(gfc_new_block->name);\n+  /* Only in Fortran 2003: For procedures with a binding label also the Fortran\n+     name is a global identifier.  */\n+  if (!gfc_new_block->binding_label || gfc_notification_std (GFC_STD_F2008))\n+    {\n+      s = gfc_get_gsymbol (gfc_new_block->name);\n \n-  if (s->defined\n-      || (s->type != GSYM_UNKNOWN\n-\t  && s->type != (sub ? GSYM_SUBROUTINE : GSYM_FUNCTION)))\n-    gfc_global_used(s, NULL);\n-  else\n+      if (s->defined\n+\t  || (s->type != GSYM_UNKNOWN\n+\t      && s->type != (sub ? GSYM_SUBROUTINE : GSYM_FUNCTION)))\n+\tgfc_global_used(s, NULL);\n+      else\n+\t{\n+\t  s->type = sub ? GSYM_SUBROUTINE : GSYM_FUNCTION;\n+\t  s->where = gfc_current_locus;\n+\t  s->defined = 1;\n+\t  s->ns = gfc_current_ns;\n+\t}\n+    }\n+\n+  /* Don't add the symbol multiple times.  */\n+  if (gfc_new_block->binding_label\n+      && (!gfc_notification_std (GFC_STD_F2008)\n+          || strcmp (gfc_new_block->name, gfc_new_block->binding_label) != 0))\n     {\n-      s->type = sub ? GSYM_SUBROUTINE : GSYM_FUNCTION;\n-      s->where = gfc_current_locus;\n-      s->defined = 1;\n-      s->ns = gfc_current_ns;\n+      s = gfc_get_gsymbol (gfc_new_block->binding_label);\n+\n+      if (s->defined\n+\t  || (s->type != GSYM_UNKNOWN\n+\t      && s->type != (sub ? GSYM_SUBROUTINE : GSYM_FUNCTION)))\n+\tgfc_global_used(s, NULL);\n+      else\n+\t{\n+\t  s->type = sub ? GSYM_SUBROUTINE : GSYM_FUNCTION;\n+\t  s->binding_label = gfc_new_block->binding_label;\n+\t  s->where = gfc_current_locus;\n+\t  s->defined = 1;\n+\t  s->ns = gfc_current_ns;\n+\t}\n     }\n }\n \n@@ -4556,15 +4586,15 @@ gfc_parse_file (void)\n       break;\n \n     case ST_SUBROUTINE:\n-      add_global_procedure (1);\n+      add_global_procedure (true);\n       push_state (&s, COMP_SUBROUTINE, gfc_new_block);\n       accept_statement (st);\n       parse_progunit (ST_NONE);\n       goto prog_units;\n       break;\n \n     case ST_FUNCTION:\n-      add_global_procedure (0);\n+      add_global_procedure (false);\n       push_state (&s, COMP_FUNCTION, gfc_new_block);\n       accept_statement (st);\n       parse_progunit (ST_NONE);"}, {"sha": "f3607b417742f7718a2cf37ffe4540a89c69331a", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=f11de7c5f898a5a613f7ccb47f999312f505f125", "patch": "@@ -2333,7 +2333,7 @@ resolve_global_procedure (gfc_symbol *sym, locus *where,\n \n   type = sub ? GSYM_SUBROUTINE : GSYM_FUNCTION;\n \n-  gsym = gfc_get_gsymbol (sym->name);\n+  gsym = gfc_get_gsymbol (sym->binding_label ? sym->binding_label : sym->name);\n \n   if ((gsym->type != GSYM_UNKNOWN && gsym->type != type))\n     gfc_global_used (gsym, where);"}, {"sha": "795057b9928ef46f6ee6dd050cad3eeb90ac8534", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=f11de7c5f898a5a613f7ccb47f999312f505f125", "patch": "@@ -1643,7 +1643,8 @@ gfc_get_extern_function_decl (gfc_symbol * sym)\n \n   /* See if this is an external procedure from the same file.  If so,\n      return the backend_decl.  */\n-  gsym =  gfc_find_gsymbol (gfc_gsym_root, sym->name);\n+  gsym =  gfc_find_gsymbol (gfc_gsym_root, sym->binding_label\n+\t\t\t\t\t   ? sym->binding_label : sym->name);\n \n   if ((!sym->attr.use_assoc || sym->attr.if_source != IFSRC_DECL)\n       && !sym->backend_decl"}, {"sha": "d6b531c5709a1aa5d8c1890fc3c3cf70c41ce9dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f11de7c5f898a5a613f7ccb47f999312f505f125", "patch": "@@ -1,3 +1,14 @@\n+2013-05-20  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/48858\n+\t* gfortran.dg/binding_label_tests_17.f90: New.\n+\t* gfortran.dg/binding_label_tests_18.f90: New.\n+\t* gfortran.dg/binding_label_tests_19.f90: New.\n+\t* gfortran.dg/binding_label_tests_20.f90: New.\n+\t* gfortran.dg/binding_label_tests_21.f90: New.\n+\t* gfortran.dg/binding_label_tests_22.f90: New.\n+\t* gfortran.dg/binding_label_tests_23.f90: New.\n+\n 2013-05-20  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/48858"}, {"sha": "4243ffbdb1ea045165839bc33340f521d49485fb", "filename": "gcc/testsuite/gfortran.dg/binding_label_tests_17.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_17.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_17.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_17.f90?ref=f11de7c5f898a5a613f7ccb47f999312f505f125", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+!\n+! PR fortran/48858\n+!\n+subroutine foo() bind(C, name=\"bar\") ! { dg-error \"Global binding name 'bar' at .1. is already being used as a SUBROUTINE at .2.\" }\n+end subroutine foo\n+\n+subroutine sub() bind(C, name=\"bar\") ! { dg-error \"Global binding name 'bar' at .1. is already being used as a SUBROUTINE at .2.\" }\n+end subroutine sub\n+"}, {"sha": "548d367e3d2593b897e0731fd8e7ac3540ba7609", "filename": "gcc/testsuite/gfortran.dg/binding_label_tests_18.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_18.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_18.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_18.f90?ref=f11de7c5f898a5a613f7ccb47f999312f505f125", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+!\n+! PR fortran/48858\n+!\n+subroutine foo() ! { dg-error \"Global name 'foo' at .1. is already being used as a SUBROUTINE at .2.\" }\n+end subroutine foo\n+\n+subroutine foo() ! { dg-error \"Global name 'foo' at .1. is already being used as a SUBROUTINE at .2.\" }\n+end subroutine foo\n+"}, {"sha": "a6f63e685882b7d141924ed266e597098cb3084c", "filename": "gcc/testsuite/gfortran.dg/binding_label_tests_19.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_19.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_19.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_19.f90?ref=f11de7c5f898a5a613f7ccb47f999312f505f125", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+!\n+! PR fortran/48858\n+!\n+subroutine foo() bind(C,name=\"bar\")\n+end subroutine foo\n+\n+subroutine foo() bind(C,name=\"sub\")\n+end subroutine foo\n+"}, {"sha": "2b0da4316978dd4865ae6ccf1e8de1bed327d043", "filename": "gcc/testsuite/gfortran.dg/binding_label_tests_20.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_20.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_20.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_20.f90?ref=f11de7c5f898a5a613f7ccb47f999312f505f125", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f2003\" }\n+!\n+! PR fortran/48858\n+!\n+subroutine foo() bind(C,name=\"bar\") ! { dg-error \"Global name 'foo' at .1. is already being used as a SUBROUTINE at .2.\" }\n+end subroutine foo\n+\n+subroutine foo() bind(C,name=\"sub\") ! { dg-error \"Global name 'foo' at .1. is already being used as a SUBROUTINE at .2.\" }\n+end subroutine foo\n+"}, {"sha": "0519d0f1d2de1743b1049e76406b372e75ad178d", "filename": "gcc/testsuite/gfortran.dg/binding_label_tests_21.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_21.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_21.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_21.f90?ref=f11de7c5f898a5a613f7ccb47f999312f505f125", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+!\n+! PR fortran/48858\n+!\n+subroutine foo() bind(C, name=\"bar\") ! { dg-error \"Global binding name 'bar' at .1. is already being used as a SUBROUTINE at .2.\" }\n+entry sub() bind(C, name=\"bar\") ! { dg-error \"Global binding name 'bar' at .1. is already being used as a SUBROUTINE at .2.\" }\n+end subroutine foo\n+"}, {"sha": "b136754d5931d931468b75450ae46ae66306157d", "filename": "gcc/testsuite/gfortran.dg/binding_label_tests_22.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_22.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_22.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_22.f90?ref=f11de7c5f898a5a613f7ccb47f999312f505f125", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+!\n+! PR fortran/48858\n+!\n+subroutine foo() ! { dg-error \"Global name 'foo' at .1. is already being used as a SUBROUTINE at .2.\" }\n+entry foo() ! { dg-error \"Global name 'foo' at .1. is already being used as a SUBROUTINE at .2.\" }\n+end subroutine foo\n+"}, {"sha": "ba9e61550f4d589d1a02f544c6cb4c0f18189fb7", "filename": "gcc/testsuite/gfortran.dg/binding_label_tests_23.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_23.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f11de7c5f898a5a613f7ccb47f999312f505f125/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_23.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_23.f90?ref=f11de7c5f898a5a613f7ccb47f999312f505f125", "patch": "@@ -0,0 +1,21 @@\n+! { dg-do run }\n+!\n+! PR fortran/48858\n+!\n+integer function foo(x)\n+  integer :: x\n+  call abort()\n+  foo = 99\n+end function foo\n+\n+integer function other() bind(C, name=\"bar\")\n+  other = 42\n+end function other\n+\n+program test\n+  interface\n+    integer function foo() bind(C, name=\"bar\")\n+    end function foo\n+  end interface\n+  if (foo() /= 42) call abort()  ! Ensure that the binding name is all what counts\n+end program test"}]}