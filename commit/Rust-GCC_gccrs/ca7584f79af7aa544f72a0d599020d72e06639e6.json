{"sha": "ca7584f79af7aa544f72a0d599020d72e06639e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E3NTg0Zjc5YWY3YWE1NDRmNzJhMGQ1OTkwMjBkNzJlMDY2MzllNg==", "commit": {"author": {"name": "Pat Haugen", "email": "pthaugen@us.ibm.com", "date": "2018-05-17T16:19:16Z"}, "committer": {"name": "Pat Haugen", "email": "pthaugen@gcc.gnu.org", "date": "2018-05-17T16:19:16Z"}, "message": "re PR tree-optimization/85698 (CPU2017 525.x264_r fails starting with r257581)\n\n\tPR target/85698\n\t* config/rs6000/rs6000.c (rs6000_output_move_128bit): Check dest operand.\n\n\t* gcc.target/powerpc/pr85698.c: New test.\n\n\nCo-Authored-By: Segher Boessenkool <segher@kernel.crashing.org>\n\nFrom-SVN: r260329", "tree": {"sha": "c9c95a2a01690edb1ff371eecc449bb024204926", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9c95a2a01690edb1ff371eecc449bb024204926"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca7584f79af7aa544f72a0d599020d72e06639e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca7584f79af7aa544f72a0d599020d72e06639e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca7584f79af7aa544f72a0d599020d72e06639e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca7584f79af7aa544f72a0d599020d72e06639e6/comments", "author": null, "committer": null, "parents": [{"sha": "079638f924714afcadca5e44fdd9248ef00ff434", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/079638f924714afcadca5e44fdd9248ef00ff434", "html_url": "https://github.com/Rust-GCC/gccrs/commit/079638f924714afcadca5e44fdd9248ef00ff434"}], "stats": {"total": 93, "additions": 92, "deletions": 1}, "files": [{"sha": "2ec4a568346866434de2e1dfdba589c725cb20b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca7584f79af7aa544f72a0d599020d72e06639e6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca7584f79af7aa544f72a0d599020d72e06639e6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca7584f79af7aa544f72a0d599020d72e06639e6", "patch": "@@ -1,3 +1,10 @@\n+2018-05-17  Pat Haugen  <pthaugen@us.ibm.com>\n+\t    Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/85698\n+\t* config/rs6000/rs6000.c (rs6000_output_move_128bit): Check dest\n+\toperand.\n+\n 2018-05-17  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-dse.c (dse_classify_store): Fix iterator increment"}, {"sha": "877d6bae5ad72deff074833e90794ea65d9ce500", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca7584f79af7aa544f72a0d599020d72e06639e6/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca7584f79af7aa544f72a0d599020d72e06639e6/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=ca7584f79af7aa544f72a0d599020d72e06639e6", "patch": "@@ -20234,7 +20234,7 @@ rs6000_output_move_128bit (rtx operands[])\n \t}\n \n       else if (TARGET_ALTIVEC && src_vmx_p\n-\t       && altivec_indexed_or_indirect_operand (src, mode))\n+\t       && altivec_indexed_or_indirect_operand (dest, mode))\n \treturn \"stvx %1,%y0\";\n \n       else if (TARGET_VSX && src_vsx_p)"}, {"sha": "2dd034016c05d3f1d6aaf458b9094740a7820818", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca7584f79af7aa544f72a0d599020d72e06639e6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca7584f79af7aa544f72a0d599020d72e06639e6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ca7584f79af7aa544f72a0d599020d72e06639e6", "patch": "@@ -1,3 +1,8 @@\n+2018-05-17  Pat Haugen  <pthaugen@us.ibm.com>\n+\n+\tPR target/85698\n+\t* gcc.target/powerpc/pr85698.c: New test.\n+\n 2018-05-17  Richard Biener  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/ssa-fre-63.c: New testcase."}, {"sha": "294a5665b3263b8728b892f066bcaf67c02c1943", "filename": "gcc/testsuite/gcc.target/powerpc/pr85698.c", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca7584f79af7aa544f72a0d599020d72e06639e6/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr85698.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca7584f79af7aa544f72a0d599020d72e06639e6/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr85698.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr85698.c?ref=ca7584f79af7aa544f72a0d599020d72e06639e6", "patch": "@@ -0,0 +1,79 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target vsx_hw } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power7\" } } */\n+/* { dg-options \"-O3 -mcpu=power7\" } */\n+\n+/* PR85698: Incorrect code generated on LE due to use of stxvw4x. */\n+\n+typedef unsigned char uint8_t;\n+typedef short int16_t;\n+extern void abort (void);\n+extern int memcmp(const void *, const void *, __SIZE_TYPE__);\n+\n+uint8_t expected[128] =\n+{14, 0, 4, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\n+ 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 28, 35, 33, 35, 36, 37, 38, 39, 40,\n+ 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n+ 60, 61, 62, 63, 66, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,\n+ 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 96,\n+ 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113,\n+ 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127};\n+\n+static uint8_t x264_clip_uint8( int x )\n+{\n+  return x&(~255) ? (-x)>>31 : x;\n+}\n+void add4x4_idct( uint8_t *p_dst, int16_t dct[16])\n+{\n+  int16_t d[16];\n+  int16_t tmp[16];\n+  int i, y, x;\n+  for( i = 0; i < 4; i++ )\n+    {\n+      int s02 =  dct[0*4+i]     +  dct[2*4+i];\n+      int d02 =  dct[0*4+i]     -  dct[2*4+i];\n+      int s13 =  dct[1*4+i]     + (dct[3*4+i]>>1);\n+      int d13 = (dct[1*4+i]>>1) -  dct[3*4+i];\n+      tmp[i*4+0] = s02 + s13;\n+      tmp[i*4+1] = d02 + d13;\n+      tmp[i*4+2] = d02 - d13;\n+      tmp[i*4+3] = s02 - s13;\n+    }\n+  for( i = 0; i < 4; i++ )\n+    {\n+      int s02 =  tmp[0*4+i]     +  tmp[2*4+i];\n+      int d02 =  tmp[0*4+i]     -  tmp[2*4+i];\n+      int s13 =  tmp[1*4+i]     + (tmp[3*4+i]>>1);\n+      int d13 = (tmp[1*4+i]>>1) -  tmp[3*4+i];\n+      d[0*4+i] = ( s02 + s13 + 32 ) >> 6;\n+      d[1*4+i] = ( d02 + d13 + 32 ) >> 6;\n+      d[2*4+i] = ( d02 - d13 + 32 ) >> 6;\n+      d[3*4+i] = ( s02 - s13 + 32 ) >> 6;\n+    }\n+  for( y = 0; y < 4; y++ )\n+    {\n+      for( x = 0; x < 4; x++ )\n+        p_dst[x] = x264_clip_uint8( p_dst[x] + d[y*4+x] );\n+      p_dst += 32;\n+    }\n+}\n+\n+int main()\n+{\n+  uint8_t dst[128];\n+  int16_t dct[16];\n+  int i;\n+\n+  for (i = 0; i < 16; i++)\n+    dct[i] = i*10 + i;\n+  for (i = 0; i < 128; i++)\n+    dst[i] = i;\n+\n+  add4x4_idct(dst, dct);\n+\n+  if (memcmp (dst, expected, 128))\n+    abort();\n+\n+ return 0;\n+}\n+"}]}