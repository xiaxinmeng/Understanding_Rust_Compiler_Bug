{"sha": "c8b1fbc12a6a7249f93a985c697c8e0edeb2a6d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhiMWZiYzEyYTZhNzI0OWY5M2E5ODVjNjk3YzhlMGVkZWIyYTZkNQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2017-03-24T14:22:01Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2017-03-24T14:22:01Z"}, "message": "re PR c++/80119 (-Wmaybe-uninitialized wrongly flags the body of a short-circuited if-clause)\n\n\tPR c++/80119\n\t* cp-gimplify.c (cp_fold): Strip CLEANUP_POINT_EXPR if the expression\n\tdoesn't have side effects.\n\n\t* g++.dg/warn/Wuninitialized-9.C: New test.\n\nFrom-SVN: r246461", "tree": {"sha": "6caa8c557ab5e1f209071118cf27e555e03ae7df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6caa8c557ab5e1f209071118cf27e555e03ae7df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8b1fbc12a6a7249f93a985c697c8e0edeb2a6d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8b1fbc12a6a7249f93a985c697c8e0edeb2a6d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8b1fbc12a6a7249f93a985c697c8e0edeb2a6d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8b1fbc12a6a7249f93a985c697c8e0edeb2a6d5/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4d5ab5d0979227a780fb74a2961205e0458d91e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4d5ab5d0979227a780fb74a2961205e0458d91e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4d5ab5d0979227a780fb74a2961205e0458d91e"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "f8e711b160a47cefc53f6713ee70f782c27925f1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8b1fbc12a6a7249f93a985c697c8e0edeb2a6d5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8b1fbc12a6a7249f93a985c697c8e0edeb2a6d5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c8b1fbc12a6a7249f93a985c697c8e0edeb2a6d5", "patch": "@@ -1,3 +1,9 @@\n+2017-03-24  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/80119\n+\t* cp-gimplify.c (cp_fold): Strip CLEANUP_POINT_EXPR if the expression\n+\tdoesn't have side effects.\n+\n 2017-03-23  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/80150 - ICE with overloaded variadic deduction."}, {"sha": "354ae1af852699f4ad35a62abb64f174e2df9ed3", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8b1fbc12a6a7249f93a985c697c8e0edeb2a6d5/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8b1fbc12a6a7249f93a985c697c8e0edeb2a6d5/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=c8b1fbc12a6a7249f93a985c697c8e0edeb2a6d5", "patch": "@@ -2056,6 +2056,14 @@ cp_fold (tree x)\n   code = TREE_CODE (x);\n   switch (code)\n     {\n+    case CLEANUP_POINT_EXPR:\n+      /* Strip CLEANUP_POINT_EXPR if the expression doesn't have side\n+\t effects.  */\n+      r = cp_fold_rvalue (TREE_OPERAND (x, 0));\n+      if (!TREE_SIDE_EFFECTS (r))\n+\tx = r;\n+      break;\n+\n     case SIZEOF_EXPR:\n       x = fold_sizeof_expr (x);\n       break;"}, {"sha": "c0f03ad28dd8c0fae896c841bcbd892785fe2b3c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8b1fbc12a6a7249f93a985c697c8e0edeb2a6d5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8b1fbc12a6a7249f93a985c697c8e0edeb2a6d5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c8b1fbc12a6a7249f93a985c697c8e0edeb2a6d5", "patch": "@@ -1,3 +1,8 @@\n+2017-03-24  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/80119\n+\t* g++.dg/warn/Wuninitialized-9.C: New test.\n+\n 2017-03-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* gcc.target/s390/target-attribute/tattr-3.c: Adjust error message"}, {"sha": "3432b4f337fd53a87380e77324460c9466802ab5", "filename": "gcc/testsuite/g++.dg/warn/Wuninitialized-9.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8b1fbc12a6a7249f93a985c697c8e0edeb2a6d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8b1fbc12a6a7249f93a985c697c8e0edeb2a6d5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWuninitialized-9.C?ref=c8b1fbc12a6a7249f93a985c697c8e0edeb2a6d5", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/80119\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-Wuninitialized\" }\n+\n+#include <type_traits>\n+\n+template <bool b>\n+void failing_function(std::integral_constant<bool, b>)\n+{\n+   int i;\n+   if (b && (i = 4)) {\n+      ++i; // { dg-bogus \"may be used uninitialized\" }\n+   }\n+}\n+\n+int main (void)\n+{\n+   failing_function(std::false_type());\n+}"}]}