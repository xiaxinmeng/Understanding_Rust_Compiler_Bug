{"sha": "5a5925ee30a8f8b43d045726aa7b2a82c6a6af61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE1OTI1ZWUzMGE4ZjhiNDNkMDQ1NzI2YWE3YjJhODJjNmE2YWY2MQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-05-24T13:06:21Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-24T13:06:21Z"}, "message": "[Ada] Infinite loop in the compiler when warning on redundant constructs\n\nThis patch fixes an infinite loop in the compiler when warnings on redundant\nconstructs are enabled (-gnatwr) and the constructs are use_type clauses\nthat appear (redundantly) in a parent unit and a child unit.\n\nThe following command:\n\n   gcc -c -gnatwr root-child.ads\n\nmust yield:\n\n   root-child.ads:2:01: warning: \"Pack.Typ\" is already use-visible through\n   previous use_type_clause at root.ads:2\n\nThe following must compile quietly:\n\n   gcc -c -gnatwr root-child-grand.ads\n\n----\npackage Pack is\n  type Typ is new Integer;\nend Pack;\n----\nwith Pack;\nuse type Pack.Typ;\npackage Root is\n  Thing1 : Pack.Typ;\nend Root;\n----\nwith pack;\nuse type pack.typ;\npackage Root.Child is\n  Thing2 : Pack.Typ := Root.Thing1 * 3;\nend;\n----\nwith Pack;\nuse type Pack.Typ;\npackage Root.Child.Grand is\n  Thing3 : Pack.Typ := Thing1 + Thing2;\nend;\n\n2018-05-24  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch8.adb (Analyze_Use_Type): Do not assign the Prev_Use_Clause\n\tlink to a use_type clause if this would cause an infinite loop in the\n\tmachinery that detects redundant use clauses. This may happen when the\n\tredundant clauses appear in the context of a child unit and the context\n\tof its parent.\n\nFrom-SVN: r260663", "tree": {"sha": "3c3ed10b6f2e11f6b552dc77ea3e78407c8b6750", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c3ed10b6f2e11f6b552dc77ea3e78407c8b6750"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a5925ee30a8f8b43d045726aa7b2a82c6a6af61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a5925ee30a8f8b43d045726aa7b2a82c6a6af61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a5925ee30a8f8b43d045726aa7b2a82c6a6af61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a5925ee30a8f8b43d045726aa7b2a82c6a6af61/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e15bbd5fb974c6cc8760bee1c640c01d6c9a8b68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e15bbd5fb974c6cc8760bee1c640c01d6c9a8b68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e15bbd5fb974c6cc8760bee1c640c01d6c9a8b68"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "8f7e51df49dddf784fec8413e607792867b758e5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a5925ee30a8f8b43d045726aa7b2a82c6a6af61/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a5925ee30a8f8b43d045726aa7b2a82c6a6af61/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5a5925ee30a8f8b43d045726aa7b2a82c6a6af61", "patch": "@@ -1,3 +1,11 @@\n+2018-05-24  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Analyze_Use_Type): Do not assign the Prev_Use_Clause\n+\tlink to a use_type clause if this would cause an infinite loop in the\n+\tmachinery that detects redundant use clauses. This may happen when the\n+\tredundant clauses appear in the context of a child unit and the context\n+\tof its parent.\n+\n 2018-05-24  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* sinfo.ads: Fix grammar in comment."}, {"sha": "8f8b03a3237345abe09fb854a2d47a1bc0ba1e96", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a5925ee30a8f8b43d045726aa7b2a82c6a6af61/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a5925ee30a8f8b43d045726aa7b2a82c6a6af61/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=5a5925ee30a8f8b43d045726aa7b2a82c6a6af61", "patch": "@@ -3916,10 +3916,14 @@ package body Sem_Ch8 is\n       --  manipulation of the scope stack so we much guard against those cases\n       --  here, otherwise, we must add the new use_type_clause to the previous\n       --  use_type_clause chain in order to mark redundant use_type_clauses as\n-      --  used.\n+      --  used. When the redundant use-type clauses appear in a parent unit and\n+      --  a child unit we must prevent a circularity in the chain that would\n+      --  otherwise result from the separate steps of analysis and installation\n+      --  of the parent context.\n \n       if Present (Current_Use_Clause (E))\n         and then Current_Use_Clause (E) /= N\n+        and then Prev_Use_Clause (Current_Use_Clause (E)) /= N\n         and then No (Prev_Use_Clause (N))\n       then\n          Set_Prev_Use_Clause (N, Current_Use_Clause (E));"}]}