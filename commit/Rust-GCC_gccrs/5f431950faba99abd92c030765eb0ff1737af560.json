{"sha": "5f431950faba99abd92c030765eb0ff1737af560", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY0MzE5NTBmYWJhOTlhYmQ5MmMwMzA3NjVlYjBmZjE3MzdhZjU2MA==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2010-03-26T09:20:58Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2010-03-26T09:20:58Z"}, "message": "re PR c++/43327 (ICE in unifiy.c)\n\nFix for PR c++/43327\n\ngcc/cp/ChangeLog:\n\tPR c++/43327\n\t* pt.c (add_to_template_args): Support NULL ARGS;\n\t(most_specialized_class): call coerce_template_parms on\n\ttemplate arguments passed to get_class_bindings. Use\n\tadd_to_template_args.\n\t(unify): Handle VAR_DECLs.\n\ngcc/testsuite/ChangeLog:\n\tPR c++/43327\n\t* g++.dg/other/crash-10.C: New test.\n\t* g++.dg/other/crash-11.C: New test.\n\nFrom-SVN: r157745", "tree": {"sha": "083889b7e50727048b12a8abcf96790a35275305", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/083889b7e50727048b12a8abcf96790a35275305"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f431950faba99abd92c030765eb0ff1737af560", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f431950faba99abd92c030765eb0ff1737af560", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f431950faba99abd92c030765eb0ff1737af560", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f431950faba99abd92c030765eb0ff1737af560/comments", "author": null, "committer": null, "parents": [{"sha": "3910807d3957df6a4bc06c30d67dbca12bc671ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3910807d3957df6a4bc06c30d67dbca12bc671ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3910807d3957df6a4bc06c30d67dbca12bc671ae"}], "stats": {"total": 88, "additions": 88, "deletions": 0}, "files": [{"sha": "81e97724d56d81dd6c9d015ce2259ec4b63c0672", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f431950faba99abd92c030765eb0ff1737af560/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f431950faba99abd92c030765eb0ff1737af560/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5f431950faba99abd92c030765eb0ff1737af560", "patch": "@@ -1,3 +1,12 @@\n+2010-03-26  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/43327\n+\t* pt.c (add_to_template_args): Support NULL ARGS;\n+\t(most_specialized_class): call coerce_template_parms on\n+\ttemplate arguments passed to get_class_bindings. Use\n+\tadd_to_template_args.\n+\t(unify): Handle VAR_DECLs.\n+\n 2010-03-26  Dodji Seketeli  <dodji@redhat.com>\n \n \t* cp-tree.h (get_template_parms_at_level): Change unsigned parm"}, {"sha": "3bd45f7ea3787f46a285dbc75140812fc5354cca", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f431950faba99abd92c030765eb0ff1737af560/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f431950faba99abd92c030765eb0ff1737af560/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=5f431950faba99abd92c030765eb0ff1737af560", "patch": "@@ -493,6 +493,9 @@ add_to_template_args (tree args, tree extra_args)\n   int i;\n   int j;\n \n+  if (args == NULL_TREE)\n+    return extra_args;\n+\n   extra_depth = TMPL_ARGS_DEPTH (extra_args);\n   new_args = make_tree_vec (TMPL_ARGS_DEPTH (args) + extra_depth);\n \n@@ -15055,6 +15058,13 @@ unify (tree tparms, tree targs, tree parm, tree arg, int strict)\n       /* Matched cases are handled by the ARG == PARM test above.  */\n       return 1;\n \n+    case VAR_DECL:\n+      /* A non-type template parameter that is a variable should be a\n+\t an integral constant, in which case, it whould have been\n+\t folded into its (constant) value. So we should not be getting\n+\t a variable here.  */\n+      gcc_unreachable ();\n+\n     case TYPE_ARGUMENT_PACK:\n     case NONTYPE_ARGUMENT_PACK:\n       {\n@@ -15937,6 +15947,18 @@ most_specialized_class (tree type, tree tmpl)\n \n \t  --processing_template_decl;\n \t}\n+\n+      partial_spec_args =\n+\t  coerce_template_parms (DECL_INNERMOST_TEMPLATE_PARMS (tmpl),\n+\t\t\t\t add_to_template_args (outer_args,\n+\t\t\t\t\t\t       partial_spec_args),\n+\t\t\t\t tmpl, tf_none,\n+\t\t\t\t /*require_all_args=*/true,\n+\t\t\t\t /*use_default_args=*/true);\n+\n+      if (partial_spec_args == error_mark_node)\n+\treturn error_mark_node;\n+\n       spec_args = get_class_bindings (parms,\n \t\t\t\t      partial_spec_args,\n \t\t\t\t      args);"}, {"sha": "5edd5900b4a29c833f6f9d9480b3be02e9a8fdd2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f431950faba99abd92c030765eb0ff1737af560/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f431950faba99abd92c030765eb0ff1737af560/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5f431950faba99abd92c030765eb0ff1737af560", "patch": "@@ -1,3 +1,9 @@\n+2010-03-26  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/43327\n+\t* g++.dg/other/crash-10.C: New test.\n+\t* g++.dg/other/crash-11.C: New test.\n+\n 2010-03-25  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/43517"}, {"sha": "6dcd79149e1508a3520ac0d678d41eab699095f5", "filename": "gcc/testsuite/g++.dg/other/crash-10.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f431950faba99abd92c030765eb0ff1737af560/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcrash-10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f431950faba99abd92c030765eb0ff1737af560/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcrash-10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcrash-10.C?ref=5f431950faba99abd92c030765eb0ff1737af560", "patch": "@@ -0,0 +1,24 @@\n+// Origin: PR c++/43327\n+// { dg-do compile }\n+\n+template <typename _T>\n+struct A\n+{\n+  template <int _N, int _M> struct B;\n+\n+  template <int _N>\n+  struct B<_N, _T::m>\n+  {\n+     static void f();\n+  };\n+};\n+\n+struct C\n+{\n+  static const int m = 4;\n+};\n+\n+void m()\n+{\n+  A<C>::B<1, 4>::f();\n+}"}, {"sha": "29ee231bee960dd2b6707f73c6134732ea7557d8", "filename": "gcc/testsuite/g++.dg/other/crash-11.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f431950faba99abd92c030765eb0ff1737af560/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcrash-11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f431950faba99abd92c030765eb0ff1737af560/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcrash-11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcrash-11.C?ref=5f431950faba99abd92c030765eb0ff1737af560", "patch": "@@ -0,0 +1,27 @@\n+// Origin: PR c++/43327\n+// { dg-do compile }\n+\n+template <typename _T>\n+struct A\n+{\n+  template <int _N, int _M> struct B;\n+\n+  template <int _N>\n+  struct B<_N, _T::m>\n+  {\n+     static void f();\n+  };\n+};\n+\n+struct C\n+{\n+  static int m;\n+};\n+\n+void m()\n+{\n+  A<C>::B<1, 4>::f(); // { dg-error \"incomplete type|not a valid\" }\n+}\n+\n+int C::m = 4;\n+"}]}