{"sha": "788d3075c55a723d1c266938c3ae66aeee70afb4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg4ZDMwNzVjNTVhNzIzZDFjMjY2OTM4YzNhZTY2YWVlZTcwYWZiNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-05-08T12:24:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-05-08T12:24:22Z"}, "message": "re PR tree-optimization/40062 (high memory usage and compile time in SCEV cprop with -O3)\n\n2009-05-08  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/40062\n\t* tree-scalar-evolution.c (follow_ssa_edge_in_condition_phi):\n\tAvoid exponential behavior.\n\nFrom-SVN: r147283", "tree": {"sha": "aabbf2fc3c6814aff869e013b040c9d31041d85e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aabbf2fc3c6814aff869e013b040c9d31041d85e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/788d3075c55a723d1c266938c3ae66aeee70afb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/788d3075c55a723d1c266938c3ae66aeee70afb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/788d3075c55a723d1c266938c3ae66aeee70afb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/788d3075c55a723d1c266938c3ae66aeee70afb4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "00952e9784e41f1ee7a1e4384904a5fd42f610a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00952e9784e41f1ee7a1e4384904a5fd42f610a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00952e9784e41f1ee7a1e4384904a5fd42f610a6"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "49e06100f50956e9a884035c92e697e84700e6e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/788d3075c55a723d1c266938c3ae66aeee70afb4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/788d3075c55a723d1c266938c3ae66aeee70afb4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=788d3075c55a723d1c266938c3ae66aeee70afb4", "patch": "@@ -1,3 +1,9 @@\n+2009-05-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/40062\n+\t* tree-scalar-evolution.c (follow_ssa_edge_in_condition_phi):\n+\tAvoid exponential behavior.\n+\n 2009-05-08  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR rtl-optimization/33928"}, {"sha": "b3990c6bfe15fb80ef39f0e7671dbaafe0f27939", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/788d3075c55a723d1c266938c3ae66aeee70afb4/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/788d3075c55a723d1c266938c3ae66aeee70afb4/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=788d3075c55a723d1c266938c3ae66aeee70afb4", "patch": "@@ -1319,22 +1319,20 @@ follow_ssa_edge_in_condition_phi (struct loop *loop,\n \n   *evolution_of_loop = evolution_of_branch;\n \n-  /* If the phi node is just a copy, do not increase the limit.  */\n   n = gimple_phi_num_args (condition_phi);\n-  if (n > 1)\n-    limit++;\n-\n   for (i = 1; i < n; i++)\n     {\n       /* Quickly give up when the evolution of one of the branches is\n \t not known.  */\n       if (*evolution_of_loop == chrec_dont_know)\n \treturn t_true;\n \n+      /* Increase the limit by the PHI argument number to avoid exponential\n+\t time and memory complexity.  */\n       res = follow_ssa_edge_in_condition_phi_branch (i, loop, condition_phi,\n \t\t\t\t\t\t     halting_phi,\n \t\t\t\t\t\t     &evolution_of_branch,\n-\t\t\t\t\t\t     init, limit);\n+\t\t\t\t\t\t     init, limit + i);\n       if (res == t_false || res == t_dont_know)\n \treturn res;\n "}]}