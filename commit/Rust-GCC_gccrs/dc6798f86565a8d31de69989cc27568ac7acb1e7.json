{"sha": "dc6798f86565a8d31de69989cc27568ac7acb1e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM2Nzk4Zjg2NTY1YThkMzFkZTY5OTg5Y2MyNzU2OGFjN2FjYjFlNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-01-12T17:02:08Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-01-12T17:02:08Z"}, "message": "locale_facets.h (struct __numpunct_cache): Add members _M_truename_len and _M_falsename_len...\n\n2004-01-12  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/locale_facets.h (struct __numpunct_cache):\n\tAdd members _M_truename_len and _M_falsename_len, caching\n\tthe lengths of _M_truename and _M_falsename.\n\t(__numpunct_cache<>::_M_cache): Assign the latter.\n\t* include/bits/locale_facets.tcc (num_get::do_get(bool&),\n\tnum_put::do_put(bool)): Use the new members, thus avoiding\n\tcomputing string lengths again and again.\n\t* config/locale/generic/numeric_members.cc\n\t(numpunct<>::_M_initialize_numpunct): Assign the new members.\n\t* config/locale/gnu/numeric_members.cc\n\t(numpunct<>::_M_initialize_numpunct): Likewise.\n\nFrom-SVN: r75735", "tree": {"sha": "b10bbc00ff5a3a832933b613202d82eed4ed43dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b10bbc00ff5a3a832933b613202d82eed4ed43dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc6798f86565a8d31de69989cc27568ac7acb1e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc6798f86565a8d31de69989cc27568ac7acb1e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc6798f86565a8d31de69989cc27568ac7acb1e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc6798f86565a8d31de69989cc27568ac7acb1e7/comments", "author": null, "committer": null, "parents": [{"sha": "59774bb04716747d20b0df50d13e3ab062afeb95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59774bb04716747d20b0df50d13e3ab062afeb95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59774bb04716747d20b0df50d13e3ab062afeb95"}], "stats": {"total": 61, "additions": 41, "deletions": 20}, "files": [{"sha": "0929ea8e4fc931d0a6bbfe429414018f9e6b893b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6798f86565a8d31de69989cc27568ac7acb1e7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6798f86565a8d31de69989cc27568ac7acb1e7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=dc6798f86565a8d31de69989cc27568ac7acb1e7", "patch": "@@ -1,3 +1,17 @@\n+2004-01-12  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/locale_facets.h (struct __numpunct_cache):\n+\tAdd members _M_truename_len and _M_falsename_len, caching\n+\tthe lengths of _M_truename and _M_falsename.\n+\t(__numpunct_cache<>::_M_cache): Assign the latter.\n+\t* include/bits/locale_facets.tcc (num_get::do_get(bool&),\n+\tnum_put::do_put(bool)): Use the new members, thus avoiding\n+\tcomputing string lengths again and again.\n+\t* config/locale/generic/numeric_members.cc\n+\t(numpunct<>::_M_initialize_numpunct): Assign the new members.\n+\t* config/locale/gnu/numeric_members.cc\n+\t(numpunct<>::_M_initialize_numpunct): Likewise.\n+\n 2004-01-12  Mark Mitchell  <mark@codesourcery.com>\n \n \t* testsuite/testsuite_hooks.h (__gnu_test::try_mkfifo): Declare it."}, {"sha": "72760aee0d0192198c6c85aadd07bada1197d93e", "filename": "libstdc++-v3/config/locale/generic/numeric_members.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6798f86565a8d31de69989cc27568ac7acb1e7/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fnumeric_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6798f86565a8d31de69989cc27568ac7acb1e7/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fnumeric_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fnumeric_members.cc?ref=dc6798f86565a8d31de69989cc27568ac7acb1e7", "patch": "@@ -58,7 +58,9 @@ namespace std\n \t_M_data->_M_atoms_in[__i] = __num_base::_S_atoms_in[__i];\n \n       _M_data->_M_truename = \"true\";\n-      _M_data->_M_falsename = \"false\";      \n+      _M_data->_M_truename_len = strlen(_M_data->_M_truename);\n+      _M_data->_M_falsename = \"false\";\n+      _M_data->_M_falsename_len = strlen(_M_data->_M_falsename);\n     }\n \n   template<> \n@@ -95,7 +97,9 @@ namespace std\n \t}\n       \n       _M_data->_M_truename = L\"true\";\n+      _M_data->_M_truename_len = wcslen(_M_data->_M_truename);\n       _M_data->_M_falsename = L\"false\";\n+      _M_data->_M_falsename_len = wcslen(_M_data->_M_falsename);\n     }\n \n   template<> "}, {"sha": "b830456af2ed177909a21912cd3b9516e91b43f8", "filename": "libstdc++-v3/config/locale/gnu/numeric_members.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6798f86565a8d31de69989cc27568ac7acb1e7/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fnumeric_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6798f86565a8d31de69989cc27568ac7acb1e7/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fnumeric_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fnumeric_members.cc?ref=dc6798f86565a8d31de69989cc27568ac7acb1e7", "patch": "@@ -75,8 +75,10 @@ namespace std\n       // NB: There is no way to extact this info from posix locales.\n       // _M_truename = __nl_langinfo_l(YESSTR, __cloc);\n       _M_data->_M_truename = \"true\";\n+      _M_data->_M_truename_len = strlen(_M_data->_M_truename);\n       // _M_falsename = __nl_langinfo_l(NOSTR, __cloc);\n       _M_data->_M_falsename = \"false\";\n+      _M_data->_M_falsename_len = strlen(_M_data->_M_falsename);\n     }\n  \n   template<> \n@@ -138,8 +140,10 @@ namespace std\n       // NB: There is no way to extact this info from posix locales.\n       // _M_truename = __nl_langinfo_l(YESSTR, __cloc);\n       _M_data->_M_truename = L\"true\";\n+      _M_data->_M_truename_len = wcslen(_M_data->_M_truename);\n       // _M_falsename = __nl_langinfo_l(NOSTR, __cloc);\n       _M_data->_M_falsename = L\"false\";\n+      _M_data->_M_falsename_len = wcslen(_M_data->_M_falsename);\n     }\n \n   template<> "}, {"sha": "493d3a4e0fc4d82140c7bb8c82d4fd71f921be84", "filename": "libstdc++-v3/include/bits/locale_facets.h", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6798f86565a8d31de69989cc27568ac7acb1e7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6798f86565a8d31de69989cc27568ac7acb1e7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h?ref=dc6798f86565a8d31de69989cc27568ac7acb1e7", "patch": "@@ -1605,6 +1605,8 @@ namespace std\n       bool\t\t\t\t_M_use_grouping;\n       const _CharT* \t\t\t_M_truename;\n       const _CharT*\t\t\t_M_falsename;\n+      size_t                            _M_truename_len;\n+      size_t                            _M_falsename_len;     \n       _CharT \t\t\t\t_M_decimal_point;\n       _CharT \t\t\t\t_M_thousands_sep;\n       \n@@ -1624,8 +1626,9 @@ namespace std\n \n       __numpunct_cache(size_t __refs = 0) : facet(__refs), \n       _M_grouping(NULL), _M_use_grouping(false), _M_truename(NULL), \n-      _M_falsename(NULL), _M_decimal_point(_CharT()), \n-      _M_thousands_sep(_CharT()), _M_allocated(false)\n+      _M_falsename(NULL),  _M_truename_len(0), _M_falsename_len(0),\n+      _M_decimal_point(_CharT()), _M_thousands_sep(_CharT()),\n+      _M_allocated(false)\n       { } \n \n       ~__numpunct_cache();\n@@ -1649,17 +1652,14 @@ namespace std\n       _M_grouping = __grouping;\n       _M_use_grouping = __len && __np.grouping()[0] != 0;\n \n-      typedef basic_string<_CharT> __string_type;\n-      typename __string_type::size_type __lentf = __np.truename().size();\n-      _CharT* __truename = new _CharT[__lentf + 1];\n-      __np.truename().copy(__truename, __lentf);\n-      __truename[__lentf] = _CharT();\n+      _M_truename_len = __np.truename().size();\n+      _CharT* __truename = new _CharT[_M_truename_len];\n+      __np.truename().copy(__truename, _M_truename_len);\n       _M_truename = __truename;\n-      \n-      __lentf = __np.falsename().size();\n-      _CharT* __falsename = new _CharT[__lentf + 1];\n-      __np.falsename().copy(__falsename, __lentf);\n-      __falsename[__lentf] = _CharT();\n+\n+      _M_falsename_len = __np.falsename().size();\n+      _CharT* __falsename = new _CharT[_M_falsename_len];\n+      __np.falsename().copy(__falsename, _M_falsename_len);\n       _M_falsename = __falsename;\n           \n       _M_decimal_point = __np.decimal_point();"}, {"sha": "879b9e3a8eb5adbe6d013e524f9f3a970de28382", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6798f86565a8d31de69989cc27568ac7acb1e7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6798f86565a8d31de69989cc27568ac7acb1e7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=dc6798f86565a8d31de69989cc27568ac7acb1e7", "patch": "@@ -529,32 +529,30 @@ namespace std\n \t  __use_cache<__cache_type> __uc;\n \t  const locale& __loc = __io._M_getloc();\n \t  const __cache_type* __lc = __uc(__loc);\n-\t  const size_t __tn = __traits_type::length(__lc->_M_truename);\n-\t  const size_t __fn = __traits_type::length(__lc->_M_falsename);\n \n \t  bool __testf = true;\n \t  bool __testt = true;\n \t  size_t __n;\n           for (__n = 0; __beg != __end; ++__n, ++__beg)\n             {\n \t      if (__testf)\n-\t\tif (__n < __fn)\n+\t\tif (__n < __lc->_M_falsename_len)\n \t\t  __testf = __traits_type::eq(*__beg, __lc->_M_falsename[__n]);\n \t\telse\n \t\t  break;\n \n \t      if (__testt)\n-\t\tif (__n < __tn)\n+\t\tif (__n < __lc->_M_truename_len)\n \t\t  __testt = __traits_type::eq(*__beg, __lc->_M_truename[__n]);\n \t\telse\n \t\t  break;\n \n \t      if (!__testf && !__testt)\n \t\tbreak;      \n             }\n-\t  if (__testf && __n == __fn)\n+\t  if (__testf && __n == __lc->_M_falsename_len)\n \t    __v = 0;\n-\t  else if (__testt && __n == __tn)\n+\t  else if (__testt && __n == __lc->_M_truename_len)\n \t    __v = 1;\n \t  else\n \t    __err |= ios_base::failbit;\n@@ -1048,7 +1046,8 @@ namespace std\n \n \t  const _CharT* __name = __v ? __lc->_M_truename \n \t                             : __lc->_M_falsename;\n-\t  int __len = char_traits<_CharT>::length(__name);\n+\t  int __len = __v ? __lc->_M_truename_len\n+\t                  : __lc->_M_falsename_len;\n \n \t  const streamsize __w = __io.width();\n \t  if (__w > static_cast<streamsize>(__len))"}]}