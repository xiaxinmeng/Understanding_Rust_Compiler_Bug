{"sha": "1329e60058313cd746059791d96a9d6be78f0be2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTMyOWU2MDA1ODMxM2NkNzQ2MDU5NzkxZDk2YTlkNmJlNzhmMGJlMg==", "commit": {"author": {"name": "Douglas B Rupp", "email": "rupp@gnat.com", "date": "2002-04-12T19:47:45Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2002-04-12T19:47:45Z"}, "message": "i386-interix.h (EH_FRAME_IN_DATA_SECTION): Define.\n\n\t* config/i386/i386-interix.h (EH_FRAME_IN_DATA_SECTION): Define.\n\t(TARGET_ASM_NAMED_SECTION, RETURN_IN_MEMORY) Define.\n\t(DEFAULT_PCC_STRUCT_RETURN): Define as 0.\n\t* config/i386/t-interix (USER_H): Remove.\n\nFrom-SVN: r52237", "tree": {"sha": "a905f7a78f91acab78a89554e6ab6dee47475959", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a905f7a78f91acab78a89554e6ab6dee47475959"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1329e60058313cd746059791d96a9d6be78f0be2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1329e60058313cd746059791d96a9d6be78f0be2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1329e60058313cd746059791d96a9d6be78f0be2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1329e60058313cd746059791d96a9d6be78f0be2/comments", "author": null, "committer": null, "parents": [{"sha": "b963aad8ed40cbb3742ef333617e6c727353f64e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b963aad8ed40cbb3742ef333617e6c727353f64e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b963aad8ed40cbb3742ef333617e6c727353f64e"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "f4d6018cb0149371960ed624f1579dde16b19317", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1329e60058313cd746059791d96a9d6be78f0be2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1329e60058313cd746059791d96a9d6be78f0be2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1329e60058313cd746059791d96a9d6be78f0be2", "patch": "@@ -1,3 +1,10 @@\n+2002-04-12  Douglas B Rupp  <rupp@gnat.com>\n+\n+\t* config/i386/i386-interix.h (EH_FRAME_IN_DATA_SECTION): Define.\n+\t(TARGET_ASM_NAMED_SECTION, RETURN_IN_MEMORY) Define.\n+\t(DEFAULT_PCC_STRUCT_RETURN): Define as 0.\n+\t* config/i386/t-interix (USER_H): Remove.\n+\n 2002-04-12  DJ Delorie  <dj@redhat.com>\n \n \t* integrate.c (compare_blocks): Make comparisons safe for when"}, {"sha": "2b703f3beda3aa761061af5310112422a9764589", "filename": "gcc/config/i386/i386-interix.h", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1329e60058313cd746059791d96a9d6be78f0be2/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1329e60058313cd746059791d96a9d6be78f0be2/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-interix.h?ref=1329e60058313cd746059791d96a9d6be78f0be2", "patch": "@@ -232,6 +232,7 @@ Boston, MA 02111-1307, USA.  */\n #undef LD_INIT_SWITCH\n #undef LD_FINI_SWITCH\n \n+#define EH_FRAME_IN_DATA_SECTION\n \n /* Note that there appears to be two different ways to support const\n    sections at the moment.  You can either #define the symbol\n@@ -405,14 +406,22 @@ extern void i386_pe_unique_section ();\n #define UNIQUE_SECTION(DECL,RELOC) i386_pe_unique_section (DECL, RELOC)\n \n #define SUPPORTS_ONE_ONLY 1\n+#endif /* 0 */\n \n /* Switch into a generic section.  */\n #define TARGET_ASM_NAMED_SECTION  default_pe_asm_named_section\n-#endif /* 0 */\n \n /* DWARF2 Unwinding doesn't work with exception handling yet.  */\n #define DWARF2_UNWIND_INFO 0\n \n /* Don't assume anything about the header files.  */\n #define NO_IMPLICIT_EXTERN_C\n \n+/* MSVC returns structs of up to 8 bytes via registers. */\n+\n+#define DEFAULT_PCC_STRUCT_RETURN 0\n+\n+#undef RETURN_IN_MEMORY\n+#define RETURN_IN_MEMORY(TYPE) \\\n+  (TYPE_MODE (TYPE) == BLKmode || \\\n+     (AGGREGATE_TYPE_P (TYPE) && int_size_in_bytes(TYPE) > 8 ))"}, {"sha": "adcf593b956bab7199aa8d9a569d4b33adb01ed9", "filename": "gcc/config/i386/t-interix", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1329e60058313cd746059791d96a9d6be78f0be2/gcc%2Fconfig%2Fi386%2Ft-interix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1329e60058313cd746059791d96a9d6be78f0be2/gcc%2Fconfig%2Fi386%2Ft-interix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-interix?ref=1329e60058313cd746059791d96a9d6be78f0be2", "patch": "@@ -4,5 +4,3 @@ LIB1ASMFUNCS = _chkstk\n interix.o: $(srcdir)/config/i386/interix.c\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/i386/interix.c\n \n-# System headers will track gcc's needs.\n-USER_H="}]}