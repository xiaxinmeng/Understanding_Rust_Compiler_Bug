{"sha": "662f340b8118ce91205c91d73729a5f2f7684f80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYyZjM0MGI4MTE4Y2U5MTIwNWM5MWQ3MzcyOWE1ZjJmNzY4NGY4MA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2000-11-10T00:01:29Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-11-10T00:01:29Z"}, "message": "sequence-pt-1.c: Cast from pointer to integer via size_t instead of int.\n\n        * gcc.dg/sequence-pt-1.c: Cast from pointer to integer\n        via size_t instead of int.\n\nFrom-SVN: r37351", "tree": {"sha": "dc5837abb254565e2f3bac87ff0b7c7725c14d95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc5837abb254565e2f3bac87ff0b7c7725c14d95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/662f340b8118ce91205c91d73729a5f2f7684f80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/662f340b8118ce91205c91d73729a5f2f7684f80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/662f340b8118ce91205c91d73729a5f2f7684f80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/662f340b8118ce91205c91d73729a5f2f7684f80/comments", "author": null, "committer": null, "parents": [{"sha": "377b6fce5d16e6da32875290837b02a6af5a5348", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/377b6fce5d16e6da32875290837b02a6af5a5348", "html_url": "https://github.com/Rust-GCC/gccrs/commit/377b6fce5d16e6da32875290837b02a6af5a5348"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "6553d1e0c7590206e42fca4135d3b458cbaabace", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662f340b8118ce91205c91d73729a5f2f7684f80/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662f340b8118ce91205c91d73729a5f2f7684f80/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=662f340b8118ce91205c91d73729a5f2f7684f80", "patch": "@@ -1,5 +1,8 @@\n 2000-11-09  Richard Henderson  <rth@redhat.com>\n \n+\t* gcc.dg/sequence-pt-1.c: Cast from pointer to integer\n+\tvia size_t instead of int.\n+\n \t* gcc.c-torture/execute/string-opt-1.c: Make stub functions static.\n \t* gcc.c-torture/execute/string-opt-2.c: Likewise.\n \t* gcc.c-torture/execute/string-opt-3.c: Likewise."}, {"sha": "ad4f789435c23597e7011600de4437d223691984", "filename": "gcc/testsuite/gcc.dg/sequence-pt-1.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662f340b8118ce91205c91d73729a5f2f7684f80/gcc%2Ftestsuite%2Fgcc.dg%2Fsequence-pt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662f340b8118ce91205c91d73729a5f2f7684f80/gcc%2Ftestsuite%2Fgcc.dg%2Fsequence-pt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsequence-pt-1.c?ref=662f340b8118ce91205c91d73729a5f2f7684f80", "patch": "@@ -15,6 +15,8 @@ extern int fnb (int, int);\n extern int fnc (int *);\n extern int sprintf (char *, const char *, ...);\n \n+typedef __SIZE_TYPE__ size_t;\n+\n void\n foo (int a, int b, int n, int p, int *ptr, struct s *sptr,\n      int *ap, int *bp, int **cp, char *ans)\n@@ -30,9 +32,9 @@ foo (int a, int b, int n, int p, int *ptr, struct s *sptr,\n   ap[++n] = bp[--n]; /* { dg-warning \"undefined\" \"sequence point warning\" } */\n   cp[n][n] = cp[n][n]++; /* { dg-warning \"undefined\" \"sequence point warning\" { xfail *-*-* } } */\n   cp[n][p] = cp[n][n++]; /* { dg-warning \"undefined\" \"sequence point warning\" } */\n-  *ptr++ = (int)ptr++; /* { dg-warning \"undefined\" \"sequence point warning\" } */\n+  *ptr++ = (size_t)ptr++; /* { dg-warning \"undefined\" \"sequence point warning\" } */\n   sptr->a = sptr->a++; /* { dg-warning \"undefined\" \"sequence point warning\" { xfail *-*-* } } */\n-  sptr->a = (int)(sptr++); /* { dg-warning \"undefined\" \"sequence point warning\" } */\n+  sptr->a = (size_t)(sptr++); /* { dg-warning \"undefined\" \"sequence point warning\" } */\n   *ptr++ = fn (*ptr); /* { dg-warning \"undefined\" \"sequence point warning\" } */\n   a = b = a++; /* { dg-warning \"undefined\" \"sequence point warning\" } */\n   b = a = --b; /* { dg-warning \"undefined\" \"sequence point warning\" } */"}]}