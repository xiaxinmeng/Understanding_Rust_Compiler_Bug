{"sha": "6252e35cf5cea9a30a57ceffbc7a9f3160900a45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI1MmUzNWNmNWNlYTlhMzBhNTdjZWZmYmM3YTlmMzE2MDkwMGE0NQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-04-28T23:11:14Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-05-03T16:27:30Z"}, "message": "c++: Remove GCC12 FIXME for DR1312\n\nThis patch removes a FIXME I left for myself for GCC 12, along with\nadjusting the relevant test.\n\ngcc/cp/ChangeLog:\n\n\tDR 1312\n\t* constexpr.c (cxx_eval_constant_expression): Don't check\n\tinteger_zerop.\n\ngcc/testsuite/ChangeLog:\n\n\tDR 1312\n\t* g++.dg/cpp0x/constexpr-cast2.C: Remove XFAILs.", "tree": {"sha": "982cd8da2dcd4128ef2cf78dac60bd52b6bf0126", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/982cd8da2dcd4128ef2cf78dac60bd52b6bf0126"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6252e35cf5cea9a30a57ceffbc7a9f3160900a45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6252e35cf5cea9a30a57ceffbc7a9f3160900a45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6252e35cf5cea9a30a57ceffbc7a9f3160900a45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6252e35cf5cea9a30a57ceffbc7a9f3160900a45/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0871fe27c24481d3ab5e9b4f40ac2e6629e2dc99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0871fe27c24481d3ab5e9b4f40ac2e6629e2dc99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0871fe27c24481d3ab5e9b4f40ac2e6629e2dc99"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "9cb761d7cd3a5a094e058af81646e6e0f5ba3515", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6252e35cf5cea9a30a57ceffbc7a9f3160900a45/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6252e35cf5cea9a30a57ceffbc7a9f3160900a45/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=6252e35cf5cea9a30a57ceffbc7a9f3160900a45", "patch": "@@ -6745,8 +6745,7 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n \t/* [expr.const]: a conversion from type cv void* to a pointer-to-object\n \t   type cannot be part of a core constant expression as a resolution to\n \t   DR 1312.  */\n-\tif (integer_zerop (op) /* FIXME: Remove in GCC 12.  */\n-\t    && TYPE_PTROB_P (type)\n+\tif (TYPE_PTROB_P (type)\n \t    && TYPE_PTR_P (TREE_TYPE (op))\n \t    && VOID_TYPE_P (TREE_TYPE (TREE_TYPE (op)))\n \t    /* Inside a call to std::construct_at or to"}, {"sha": "b79e8a90131bb5bd5726e65304a10c8d5d1c12ed", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-cast2.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6252e35cf5cea9a30a57ceffbc7a9f3160900a45/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-cast2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6252e35cf5cea9a30a57ceffbc7a9f3160900a45/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-cast2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-cast2.C?ref=6252e35cf5cea9a30a57ceffbc7a9f3160900a45", "patch": "@@ -6,11 +6,11 @@ static int i;\n constexpr void *vp0 = nullptr;\n constexpr void *vpi = &i;\n constexpr int *p1 = (int *) vp0; // { dg-error \"cast from .void\\\\*. is not allowed\" }\n-constexpr int *p2 = (int *) vpi; // { dg-error \"cast from .void\\\\*. is not allowed\" \"integer_zerop\" { xfail *-*-* } }\n+constexpr int *p2 = (int *) vpi; // { dg-error \"cast from .void\\\\*. is not allowed\" }\n constexpr int *p3 = static_cast<int *>(vp0); // { dg-error \"cast from .void\\\\*. is not allowed\" }\n-constexpr int *p4 = static_cast<int *>(vpi); // { dg-error \"cast from .void\\\\*. is not allowed\" \"integer_zerop\" { xfail *-*-* } }\n+constexpr int *p4 = static_cast<int *>(vpi); // { dg-error \"cast from .void\\\\*. is not allowed\" }\n constexpr void *p5 = vp0;\n constexpr void *p6 = vpi;\n \n constexpr int *pi = &i;\n-constexpr bool b = ((int *)(void *) pi == pi); // { dg-error \"cast from .void\\\\*. is not allowed\" \"integer_zerop\" { xfail *-*-* } }\n+constexpr bool b = ((int *)(void *) pi == pi); // { dg-error \"cast from .void\\\\*. is not allowed\" }"}]}