{"sha": "7b2b3f29e59c06c3c75c62f5e9148b186d8fca07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IyYjNmMjllNTljMDZjM2M3NWM2MmY1ZTkxNDhiMTg2ZDhmY2EwNw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-06-06T03:08:21Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-06-06T03:08:21Z"}, "message": "c-semantics.c (genrtl_scope_stmt): Write out nested inline functions here, instead of ...\n\n\t* c-semantics.c (genrtl_scope_stmt): Write out nested inline\n\tfunctions here, instead of ...\n\t* c-decl.c (c_expand_body): ... here.\n\nFrom-SVN: r42930", "tree": {"sha": "0b8a183489dc0531743dd25e38c68e69337e0836", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b8a183489dc0531743dd25e38c68e69337e0836"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b2b3f29e59c06c3c75c62f5e9148b186d8fca07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b2b3f29e59c06c3c75c62f5e9148b186d8fca07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b2b3f29e59c06c3c75c62f5e9148b186d8fca07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b2b3f29e59c06c3c75c62f5e9148b186d8fca07/comments", "author": null, "committer": null, "parents": [{"sha": "9166f7a36ad696ddce1faecbed02a271587261dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9166f7a36ad696ddce1faecbed02a271587261dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9166f7a36ad696ddce1faecbed02a271587261dd"}], "stats": {"total": 59, "additions": 43, "deletions": 16}, "files": [{"sha": "77cf39501c42ea32cf8be4124b61b64804d3fce1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b2b3f29e59c06c3c75c62f5e9148b186d8fca07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b2b3f29e59c06c3c75c62f5e9148b186d8fca07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b2b3f29e59c06c3c75c62f5e9148b186d8fca07", "patch": "@@ -1,3 +1,9 @@\n+2001-06-05  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* c-semantics.c (genrtl_scope_stmt): Write out nested inline\n+\tfunctions here, instead of ...\n+\t* c-decl.c (c_expand_body): ... here.\n+\n 2001-06-05  David O'Brien  <obrien@FreeBSD.org>\n \n \t* config.gcc, config/sparc/bsd.h:  Do not directly include"}, {"sha": "378b53e355f63eaf642b9396daf2703001651218", "filename": "gcc/c-decl.c", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b2b3f29e59c06c3c75c62f5e9148b186d8fca07/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b2b3f29e59c06c3c75c62f5e9148b186d8fca07/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=7b2b3f29e59c06c3c75c62f5e9148b186d8fca07", "patch": "@@ -6931,19 +6931,8 @@ c_expand_body (fndecl, nested_p)\n     }\n \n   if (nested_p)\n-    {\n-      /* Return to the enclosing function.  */\n-      pop_function_context ();\n-      /* If the nested function was inline, write it out if that is\n-\t necessary.  */\n-      if (!TREE_ASM_WRITTEN (fndecl) && TREE_ADDRESSABLE (fndecl))\n-\t{\n-\t  push_function_context ();\n-\t  output_inline_function (fndecl);\n-\t  pop_function_context ();\n-\t}\n-    }\n-\n+    /* Return to the enclosing function.  */\n+    pop_function_context ();\n }\n \f\n /* Check the declarations given in a for-loop for satisfying the C99"}, {"sha": "63b4b14fad52e35e0453d54be2c664367295f07d", "filename": "gcc/c-semantics.c", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b2b3f29e59c06c3c75c62f5e9148b186d8fca07/gcc%2Fc-semantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b2b3f29e59c06c3c75c62f5e9148b186d8fca07/gcc%2Fc-semantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-semantics.c?ref=7b2b3f29e59c06c3c75c62f5e9148b186d8fca07", "patch": "@@ -561,11 +561,12 @@ void\n genrtl_scope_stmt (t)\n      tree t;\n {\n+  tree block = SCOPE_STMT_BLOCK (t);\n+\n   if (!SCOPE_NO_CLEANUPS_P (t))\n     {\n       if (SCOPE_BEGIN_P (t))\n-\texpand_start_bindings_and_block (2 * SCOPE_NULLIFIED_P (t),\n-\t\t\t\t\t SCOPE_STMT_BLOCK (t));\n+\texpand_start_bindings_and_block (2 * SCOPE_NULLIFIED_P (t), block);\n       else if (SCOPE_END_P (t))\n \texpand_end_bindings (NULL_TREE, !SCOPE_NULLIFIED_P (t), 0);\n     }\n@@ -575,7 +576,27 @@ genrtl_scope_stmt (t)\n \t\t\t    (SCOPE_BEGIN_P (t) \n \t\t\t     ? NOTE_INSN_BLOCK_BEG\n \t\t\t     : NOTE_INSN_BLOCK_END));\n-      NOTE_BLOCK (note) = SCOPE_STMT_BLOCK (t);\n+      NOTE_BLOCK (note) = block;\n+    }\n+\n+  /* If we're at the end of a scope that contains inlined nested\n+     functions, we have to decide whether or not to write them out.  */\n+  if (block && SCOPE_END_P (t))\n+    {\n+      tree fn;\n+\n+      for (fn = BLOCK_VARS (block); fn; fn = TREE_CHAIN (fn))\n+\t{\n+\t  if (TREE_CODE (fn) == FUNCTION_DECL \n+\t      && DECL_CONTEXT (fn) == current_function_decl\n+\t      && !TREE_ASM_WRITTEN (fn)\n+\t      && TREE_ADDRESSABLE (fn))\n+\t    {\n+\t      push_function_context ();\n+\t      output_inline_function (fn);\n+\t      pop_function_context ();\n+\t    }\n+\t}\n     }\n }\n "}, {"sha": "4bf230ba54ac27cc6e24f61ab6fb734b2ba58e24", "filename": "gcc/testsuite/gcc.c-torture/execute/20010605-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b2b3f29e59c06c3c75c62f5e9148b186d8fca07/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010605-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b2b3f29e59c06c3c75c62f5e9148b186d8fca07/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010605-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010605-1.c?ref=7b2b3f29e59c06c3c75c62f5e9148b186d8fca07", "patch": "@@ -0,0 +1,11 @@\n+int main ()\n+{\n+  int v = 42;\n+\n+  static inline int fff (int x)\n+    {\n+      return x*10;\n+    }\n+\n+  return (fff (v) != 420);\n+}"}]}