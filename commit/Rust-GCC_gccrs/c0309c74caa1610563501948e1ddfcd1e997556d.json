{"sha": "c0309c74caa1610563501948e1ddfcd1e997556d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzAzMDljNzRjYWExNjEwNTYzNTAxOTQ4ZTFkZGZjZDFlOTk3NTU2ZA==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2005-05-30T22:16:08Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2005-05-30T22:16:08Z"}, "message": "gfortran.h (GFC_STD_LEGACY): New \"standard\" macro.\n\n\n\t* gfortran.h (GFC_STD_LEGACY): New \"standard\" macro.  Reindent.\n\t* options.c (gfc_init_options): By default, allow legacy extensions\n\tbut warn about them.\n\t(gfc_post_options): Make -pedantic warn about legacy extensions\n\teven with -std=legacy.\n\t(gfc_handle_option): Make -std=gnu follow the default behaviour\n\tof warning about legacy extensions, but allowing them. Make the\n\tnew -std=legacy accept everything and warn about nothing.\n\t* lang.opt (std=legacy): New F95 command line option.\n\t* invoke.texi: Document both -std=f2003 and -std=legacy.\n\t* gfortran.texi: Explain the two types of extensions and document\n\thow they are affected by the various -std= command line options.\n\nFrom-SVN: r100377", "tree": {"sha": "becb120b72d22a9e2b88e2936d6e3da4b6a7cec4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/becb120b72d22a9e2b88e2936d6e3da4b6a7cec4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0309c74caa1610563501948e1ddfcd1e997556d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0309c74caa1610563501948e1ddfcd1e997556d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0309c74caa1610563501948e1ddfcd1e997556d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0309c74caa1610563501948e1ddfcd1e997556d/comments", "author": null, "committer": null, "parents": [{"sha": "d5c405cc717dc39fb20b9dc013400f4da9a143e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5c405cc717dc39fb20b9dc013400f4da9a143e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5c405cc717dc39fb20b9dc013400f4da9a143e4"}], "stats": {"total": 63, "additions": 51, "deletions": 12}, "files": [{"sha": "d2253328760c3716b16851c0997976dd3c1929c1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0309c74caa1610563501948e1ddfcd1e997556d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0309c74caa1610563501948e1ddfcd1e997556d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c0309c74caa1610563501948e1ddfcd1e997556d", "patch": "@@ -1,3 +1,18 @@\n+2005-05-30  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* gfortran.h (GFC_STD_LEGACY): New \"standard\" macro.  Reindent.\n+\t* options.c (gfc_init_options): By default, allow legacy extensions\n+\tbut warn about them.\n+\t(gfc_post_options): Make -pedantic warn about legacy extensions\n+\teven with -std=legacy.\n+\t(gfc_handle_option): Make -std=gnu follow the default behaviour\n+\tof warning about legacy extensions, but allowing them. Make the\n+\tnew -std=legacy accept everything and warn about nothing.\n+\t* lang.opt (std=legacy): New F95 command line option.\n+\t* invoke.texi: Document both -std=f2003 and -std=legacy.\n+\t* gfortran.texi: Explain the two types of extensions and document\n+\thow they are affected by the various -std= command line options.\n+\n 2005-05-30  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* trans-expr.c: Remove trailing ^M."}, {"sha": "69a56e188ac6e0a9f49c7767aa28f4a27096a642", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0309c74caa1610563501948e1ddfcd1e997556d/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0309c74caa1610563501948e1ddfcd1e997556d/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=c0309c74caa1610563501948e1ddfcd1e997556d", "patch": "@@ -92,13 +92,14 @@ mstring;\n \n \n /* Flags to specify which standard/extension contains a feature.  */\n-#define GFC_STD_GNU                (1<<5)    /* GNU Fortran extension.  */\n-#define GFC_STD_F2003             (1<<4)    /* New in F2003.  */\n+#define GFC_STD_LEGACY\t\t(1<<6) /* Backward compatibility.  */\n+#define GFC_STD_GNU\t\t(1<<5)    /* GNU Fortran extension.  */\n+#define GFC_STD_F2003\t\t(1<<4)    /* New in F2003.  */\n /* Note that no features were obsoleted nor deleted in F2003.  */\n-#define GFC_STD_F95                 (1<<3)    /* New in F95.  */\n-#define GFC_STD_F95_DEL         (1<<2)    /* Deleted in F95.  */\n-#define GFC_STD_F95_OBS        (1<<1)    /* Obsoleted in F95.  */\n-#define GFC_STD_F77                 (1<<0)    /* Up to and including F77.  */\n+#define GFC_STD_F95\t\t(1<<3)    /* New in F95.  */\n+#define GFC_STD_F95_DEL\t\t(1<<2)    /* Deleted in F95.  */\n+#define GFC_STD_F95_OBS\t\t(1<<1)    /* Obsoleted in F95.  */\n+#define GFC_STD_F77\t\t(1<<0)    /* Up to and including F77.  */\n \n /*************************** Enums *****************************/\n "}, {"sha": "7ea59096a62d5c4bbfc027410cb7b2a1eaff98de", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0309c74caa1610563501948e1ddfcd1e997556d/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0309c74caa1610563501948e1ddfcd1e997556d/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=c0309c74caa1610563501948e1ddfcd1e997556d", "patch": "@@ -618,7 +618,14 @@ Variable for swapping Endianness during unformatted write.\n \n @command{gfortran} implements a number of extensions over standard\n Fortran. This chapter contains information on their syntax and\n-meaning.\n+meaning.  There are currently two categories of @command{gfortran}\n+extensions, those that provide functionality beyond that provided\n+by any standard, and those that are supported by @command{gfortran}\n+purely for backward compatibility with legacy compilers.  By default,\n+@option{-std=gnu} allows the compiler to accept both types of\n+extensions, but to warn about the use of the latter.  Specifying\n+either @option{-std=f95} or @option{-std=f2003} disables both types\n+of extensions, and @option{-std=legacy} allows both without warning.\n \n @menu\n * Old-style kind specifications::"}, {"sha": "098882ecbe3923e7609a77a61614b4c15872ed62", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0309c74caa1610563501948e1ddfcd1e997556d/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0309c74caa1610563501948e1ddfcd1e997556d/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=c0309c74caa1610563501948e1ddfcd1e997556d", "patch": "@@ -248,7 +248,7 @@ Specify that no implicit typing is allowed, unless overridden by explicit\n @cindex option, -std=@var{std}\n @item -std=@var{std}\n Conform to the specified standard.  Allowed values for @var{std} are\n-@samp{gnu} and @samp{f95}.\n+@samp{gnu}, @samp{f95}, @samp{f2003} and @samp{legacy}.\n \n @end table\n "}, {"sha": "6798b6d4f14f541f5ece9f66768d3debe314ad54", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0309c74caa1610563501948e1ddfcd1e997556d/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0309c74caa1610563501948e1ddfcd1e997556d/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=c0309c74caa1610563501948e1ddfcd1e997556d", "patch": "@@ -161,4 +161,8 @@ std=gnu\n F95\n Conform nothing in particular.\n \n+std=legacy\n+F95\n+Accept extensions to support legacy code.\n+\n ; This comment is to ensure we retain the blank line above."}, {"sha": "347f7068b96031cd14fd3057e36ea2020c1d9911", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0309c74caa1610563501948e1ddfcd1e997556d/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0309c74caa1610563501948e1ddfcd1e997556d/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=c0309c74caa1610563501948e1ddfcd1e997556d", "patch": "@@ -77,9 +77,10 @@ gfc_init_options (unsigned int argc ATTRIBUTE_UNUSED,\n   flag_errno_math = 0;\n \n   gfc_option.allow_std = GFC_STD_F95_OBS | GFC_STD_F95_DEL\n-    | GFC_STD_F2003 | GFC_STD_F95 | GFC_STD_F77 | GFC_STD_GNU;\n+    | GFC_STD_F2003 | GFC_STD_F95 | GFC_STD_F77 | GFC_STD_GNU\n+    | GFC_STD_LEGACY;\n   gfc_option.warn_std = GFC_STD_F95_OBS | GFC_STD_F95_DEL\n-    | GFC_STD_F2003;\n+    | GFC_STD_F2003 | GFC_STD_LEGACY;\n \n   gfc_option.warn_nonstd_intrinsics = 0;\n \n@@ -113,6 +114,9 @@ gfc_post_options (const char **pfilename)\n   /* If -pedantic, warn about the use of GNU extensions.  */\n   if (pedantic && (gfc_option.allow_std & GFC_STD_GNU) != 0)\n     gfc_option.warn_std |= GFC_STD_GNU;\n+  /* -std=legacy -pedantic is effectively -std=gnu.  */\n+  if (pedantic && (gfc_option.allow_std & GFC_STD_LEGACY) != 0)\n+    gfc_option.warn_std |= GFC_STD_F95_OBS | GFC_STD_F95_DEL | GFC_STD_LEGACY;\n \n   /* If the user didn't explicitly specify -f(no)-second-underscore we\n      use it if we're trying to be compatible with f2c, and not\n@@ -333,8 +337,16 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n     case OPT_std_gnu:\n       gfc_option.allow_std = GFC_STD_F95_OBS | GFC_STD_F95_DEL\n \t| GFC_STD_F77 | GFC_STD_F95 | GFC_STD_F2003\n-\t| GFC_STD_GNU;\n-      gfc_option.warn_std = GFC_STD_F95_OBS | GFC_STD_F95_DEL;\n+\t| GFC_STD_GNU | GFC_STD_LEGACY;\n+      gfc_option.warn_std = GFC_STD_F95_OBS | GFC_STD_F95_DEL\n+\t| GFC_STD_LEGACY;\n+      break;\n+\n+    case OPT_std_legacy:\n+      gfc_option.allow_std = GFC_STD_F95_OBS | GFC_STD_F95_DEL\n+\t| GFC_STD_F77 | GFC_STD_F95 | GFC_STD_F2003\n+\t| GFC_STD_GNU | GFC_STD_LEGACY;\n+      gfc_option.warn_std = 0;\n       break;\n \n     case OPT_Wnonstd_intrinsics:"}]}