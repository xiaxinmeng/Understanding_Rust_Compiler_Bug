{"sha": "66cc6273bad0c51db5e499dec2352a6bb7b4a952", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZjYzYyNzNiYWQwYzUxZGI1ZTQ5OWRlYzIzNTJhNmJiN2I0YTk1Mg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-06-26T10:13:49Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-06-26T10:13:49Z"}, "message": "match.pd ((x | y) & ~(x & y) -> x ^ y, (x | y) & (~x ^ y) -> x & y): New patterns.\n\n\t* match.pd ((x | y) & ~(x & y) -> x ^ y,\n\t(x | y) & (~x ^ y) -> x & y): New patterns.\n\n\t* gcc.dg/fold-and-1.c: New test.\n\t* gcc.dg/fold-and-2.c: New test.\n\nFrom-SVN: r225001", "tree": {"sha": "6d9fcb7f7e6678089e1bc411453302549aa0833c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d9fcb7f7e6678089e1bc411453302549aa0833c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66cc6273bad0c51db5e499dec2352a6bb7b4a952", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66cc6273bad0c51db5e499dec2352a6bb7b4a952", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66cc6273bad0c51db5e499dec2352a6bb7b4a952", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66cc6273bad0c51db5e499dec2352a6bb7b4a952/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9d8895c9342d2c46d7d7e9b0437879db9d60cf7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d8895c9342d2c46d7d7e9b0437879db9d60cf7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d8895c9342d2c46d7d7e9b0437879db9d60cf7c"}], "stats": {"total": 160, "additions": 160, "deletions": 0}, "files": [{"sha": "f47ea92978f73104c2c215fbab2708885e564192", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66cc6273bad0c51db5e499dec2352a6bb7b4a952/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66cc6273bad0c51db5e499dec2352a6bb7b4a952/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66cc6273bad0c51db5e499dec2352a6bb7b4a952", "patch": "@@ -1,3 +1,8 @@\n+2015-06-26  Marek Polacek  <polacek@redhat.com>\n+\n+\t* match.pd ((x | y) & ~(x & y) -> x ^ y,\n+\t(x | y) & (~x ^ y) -> x & y): New patterns.\n+\n 2015-06-26  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* rtl.h (emit): Add an optional boolean parameter to control"}, {"sha": "91dfddb9645636314f0cb31211e3be8c27ed7459", "filename": "gcc/match.pd", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66cc6273bad0c51db5e499dec2352a6bb7b4a952/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66cc6273bad0c51db5e499dec2352a6bb7b4a952/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=66cc6273bad0c51db5e499dec2352a6bb7b4a952", "patch": "@@ -367,6 +367,16 @@ along with GCC; see the file COPYING3.  If not see\n  (minus (bit_ior @0 @1) (bit_and @0 @1))\n  (bit_xor @0 @1))\n \n+/* (x | y) & ~(x & y) -> x ^ y */\n+(simplify\n+ (bit_and:c (bit_ior @0 @1) (bit_not (bit_and @0 @1)))\n+ (bit_xor @0 @1))\n+\n+/* (x | y) & (~x ^ y) -> x & y */\n+(simplify\n+ (bit_and:c (bit_ior:c @0 @1) (bit_xor:c @1 (bit_not @0)))\n+ (bit_and @0 @1))\n+\n (simplify\n  (abs (negate @0))\n  (abs @0))"}, {"sha": "ddf2a9fa8e6795d9ca05e271898eb2d044263857", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66cc6273bad0c51db5e499dec2352a6bb7b4a952/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66cc6273bad0c51db5e499dec2352a6bb7b4a952/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=66cc6273bad0c51db5e499dec2352a6bb7b4a952", "patch": "@@ -1,3 +1,8 @@\n+2015-06-26  Marek Polacek  <polacek@redhat.com>\n+\n+\t* gcc.dg/fold-and-1.c: New test.\n+\t* gcc.dg/fold-and-2.c: New test.\n+\n 2015-06-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/warn11.adb: Add missing dg directive."}, {"sha": "d555bb4b2d5263fbab350938e2d1e2637b53dbfb", "filename": "gcc/testsuite/gcc.dg/fold-and-1.c", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66cc6273bad0c51db5e499dec2352a6bb7b4a952/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-and-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66cc6273bad0c51db5e499dec2352a6bb7b4a952/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-and-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-and-1.c?ref=66cc6273bad0c51db5e499dec2352a6bb7b4a952", "patch": "@@ -0,0 +1,70 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-cddce1\" } */\n+\n+int\n+fn1 (int x, int y)\n+{\n+  int tem1 = x | y;\n+  int tem2 = ~(x & y);\n+  return tem1 & tem2;\n+}\n+\n+int\n+fn2 (int x, int y)\n+{\n+  int tem1 = y | x;\n+  int tem2 = ~(x & y);\n+  return tem1 & tem2;\n+}\n+\n+int\n+fn3 (int x, int y)\n+{\n+  int tem1 = x | y;\n+  int tem2 = ~(y & x);\n+  return tem1 & tem2;\n+}\n+\n+int\n+fn4 (int x, int y)\n+{\n+  int tem1 = y | x;\n+  int tem2 = ~(y & x);\n+  return tem1 & tem2;\n+}\n+\n+int\n+fn5 (int x, int y)\n+{\n+  int tem1 = ~(x & y);\n+  int tem2 = x | y;\n+  return tem1 & tem2;\n+}\n+\n+int\n+fn6 (int x, int y)\n+{\n+  int tem1 = ~(x & y);\n+  int tem2 = y | x;\n+  return tem1 & tem2;\n+}\n+\n+int\n+fn7 (int x, int y)\n+{\n+  int tem1 = ~(y & x);\n+  int tem2 = x | y;\n+  return tem1 & tem2;\n+}\n+\n+int\n+fn8 (int x, int y)\n+{\n+  int tem1 = ~(y & x);\n+  int tem2 = y | x;\n+  return tem1 & tem2;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \" \\\\| \" \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump-not \" \\\\& \" \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump-not \"~\" \"cddce1\" } } */"}, {"sha": "3df2a0ba59aa92636fe8f4325ae22c25ab14a20a", "filename": "gcc/testsuite/gcc.dg/fold-and-2.c", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66cc6273bad0c51db5e499dec2352a6bb7b4a952/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-and-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66cc6273bad0c51db5e499dec2352a6bb7b4a952/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-and-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-and-2.c?ref=66cc6273bad0c51db5e499dec2352a6bb7b4a952", "patch": "@@ -0,0 +1,70 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-cddce1\" } */\n+\n+int\n+fn1 (int x, int y)\n+{\n+  int tem1 = x | y;\n+  int tem2 = ~x ^ y;\n+  return tem1 & tem2;\n+}\n+\n+int\n+fn2 (int x, int y)\n+{\n+  int tem1 = y | x;\n+  int tem2 = ~x ^ y;\n+  return tem1 & tem2;\n+}\n+\n+int\n+fn3 (int x, int y)\n+{\n+  int tem1 = x | y;\n+  int tem2 = y ^ ~x;\n+  return tem1 & tem2;\n+}\n+\n+int\n+fn4 (int x, int y)\n+{\n+  int tem1 = y | x;\n+  int tem2 = y ^ ~x;\n+  return tem1 & tem2;\n+}\n+\n+int\n+fn5 (int x, int y)\n+{\n+  int tem1 = ~x ^ y;\n+  int tem2 = x | y;\n+  return tem1 & tem2;\n+}\n+\n+int\n+fn6 (int x, int y)\n+{\n+  int tem1 = ~x ^ y;\n+  int tem2 = y | x;\n+  return tem1 & tem2;\n+}\n+\n+int\n+fn7 (int x, int y)\n+{\n+  int tem1 = y ^ ~x;\n+  int tem2 = x | y;\n+  return tem1 & tem2;\n+}\n+\n+int\n+fn8 (int x, int y)\n+{\n+  int tem1 = y ^ ~x;\n+  int tem2 = y | x;\n+  return tem1 & tem2;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \" \\\\| \" \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump-not \" \\\\^ \" \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump-not \"~\" \"cddce1\" } } */"}]}