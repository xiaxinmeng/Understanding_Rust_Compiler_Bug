{"sha": "c3898ccd985d6b16504c0d3da21f21769fb1fce5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM4OThjY2Q5ODVkNmIxNjUwNGMwZDNkYTIxZjIxNzY5ZmIxZmNlNQ==", "commit": {"author": {"name": "Steve Chamberlain", "email": "sac@gnu.org", "date": "1994-09-09T23:43:17Z"}, "committer": {"name": "Steve Chamberlain", "email": "sac@gnu.org", "date": "1994-09-09T23:43:17Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r8064", "tree": {"sha": "17b4f4f54e143f5281da9becfa078b9f332fc8fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17b4f4f54e143f5281da9becfa078b9f332fc8fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3898ccd985d6b16504c0d3da21f21769fb1fce5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3898ccd985d6b16504c0d3da21f21769fb1fce5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3898ccd985d6b16504c0d3da21f21769fb1fce5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3898ccd985d6b16504c0d3da21f21769fb1fce5/comments", "author": null, "committer": null, "parents": [{"sha": "a1dba937e509b9c0ed2872354df9af4e9675285e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1dba937e509b9c0ed2872354df9af4e9675285e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1dba937e509b9c0ed2872354df9af4e9675285e"}], "stats": {"total": 51, "additions": 44, "deletions": 7}, "files": [{"sha": "dcb845d8203f1678c475ee5824e077c8becbfafb", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3898ccd985d6b16504c0d3da21f21769fb1fce5/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3898ccd985d6b16504c0d3da21f21769fb1fce5/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=c3898ccd985d6b16504c0d3da21f21769fb1fce5", "patch": "@@ -693,7 +693,7 @@ prepare_move_operands (operands, mode)\n       /* copy the source to a register */\n       operands[1] = copy_to_mode_reg (mode, operands[1]);\n     }\n-  if ((mode == DImode || mode == SImode || mode == HImode || mode == QImode)\n+  if ((mode == SImode || mode == HImode || mode == QImode)\n       && GET_CODE (operands[1]) == CONST_INT)\n     {\n       return synth_constant (operands, mode);\n@@ -2512,3 +2512,14 @@ sh_function_arg_partial_nregs (CUM, MODE, TYPE, NAMED)\n     }\n   return 0;\n }\n+\n+/* Turn this on to recognise shift insns which aren't supported in the\n+   hardware.  This will allow the combiner to notice more patterns,\n+   but the down side is that the asm outputter will have to emit\n+   several instructions for each shift which isn't possible in the\n+   hardware, this makes scheduling perform badly .*/ \n+\n+int fake_shift()\n+{\n+  return 0;\n+}"}, {"sha": "3ad663bb9640cd3ad1b9cf9de9dc37a5bb8b8a0d", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3898ccd985d6b16504c0d3da21f21769fb1fce5/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3898ccd985d6b16504c0d3da21f21769fb1fce5/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=c3898ccd985d6b16504c0d3da21f21769fb1fce5", "patch": "@@ -634,7 +634,7 @@\n \t(ashift:SI (match_operand:SI 1 \"arith_reg_operand\" \"0\")\n \t\t   (match_operand:SI 2 \"immediate_operand\" \"n\")))\n    (clobber (reg:SI 18))]\n-  \"\"\n+  \"fake_shift()\"\n   \"*return output_shift(\\\"shll\\\", operands[0], operands[2], ASHIFT);\"\n   [(set_attr \"length\" \"12\")\n    (set_attr \"in_delay_slot\" \"no\")\n@@ -727,7 +727,7 @@\n \t(lshiftrt:SI (match_operand:SI 1 \"arith_reg_operand\" \"0\")\n \t\t     (match_operand:SI 2 \"immediate_operand\" \"n\")))\n    (clobber (reg:SI 18))]\n-  \"\"\n+  \"fake_shift()\"\n   \"* return output_shift (\\\"shlr\\\", operands[0], operands[2], LSHIFTRT);\"\n   [(set_attr \"length\" \"12\")\n    (set_attr \"in_delay_slot\" \"no\")"}, {"sha": "30f7c60672c089f5a6f675ff788a065a8c074373", "filename": "gcc/config/sh/t-sh", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3898ccd985d6b16504c0d3da21f21769fb1fce5/gcc%2Fconfig%2Fsh%2Ft-sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3898ccd985d6b16504c0d3da21f21769fb1fce5/gcc%2Fconfig%2Fsh%2Ft-sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-sh?ref=c3898ccd985d6b16504c0d3da21f21769fb1fce5", "patch": "@@ -1,6 +1,32 @@\n-LIBGCC1 = libgcc1.null\n-CROSS_LIBGCC1 = libgcc1.null\n-T_CFLAGS = -DDONT_HAVE_STDIO -DDONT_HAVE_SETJMP  -Dinhibit_libc \n-LIBGCC2_CFLAGS=-g -O5 $(GCC_CFLAGS) \n+CROSS_LIBGCC1 = libgcc1-asm.a\n+LIB1ASMSRC = sh/lib1funcs.asm\n+LIB1ASMFUNCS = _ashiftrt _movstr _mulsi3 _sdivsi3 _udivsi3 \n+\n+LIBGCC2_CFLAGS=-g -O5 $(GCC_CFLAGS)\n+\n+# CYGNUS LOCAL sh\n+LANGUAGES=c c++ proto\n+\n+# CYGNUS LOCAL sh\n+# These are really part of libgcc1, but this will cause them to be\n+# built correctly, so... [taken from t-ose68k]\n+\n+LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c ashlsi3.c ashrsi3.c lshrsi3.c\n+\n+ashlsi3.c: $(srcdir)/config/sh/ashlsi3.c\n+\tcp $(srcdir)/config/sh/ashlsi3.c ashlsi3.c\n+\n+ashrsi3.c: $(srcdir)/config/sh/ashrsi3.c\n+\tcp $(srcdir)/config/sh/ashrsi3.c ashrsi3.c\n+\n+lshrsi3.c: $(srcdir)/config/sh/lshrsi3.c\n+\tcp $(srcdir)/config/sh/lshrsi3.c lshrsi3.c\n+\n+dp-bit.c: $(srcdir)/config/fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c > dp-bit.c\n+\n+fp-bit.c: $(srcdir)/config/fp-bit.c\n+\techo '#define FLOAT' > fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n \n "}]}