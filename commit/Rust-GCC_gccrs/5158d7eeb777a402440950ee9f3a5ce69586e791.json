{"sha": "5158d7eeb777a402440950ee9f3a5ce69586e791", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE1OGQ3ZWViNzc3YTQwMjQ0MDk1MGVlOWYzYTVjZTY5NTg2ZTc5MQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-05-03T11:02:26Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-05-03T11:02:26Z"}, "message": "dump.c (cp_dump_tree, [...]): New case.\n\n\t* dump.c (cp_dump_tree, USING_STMT case): New case.\n\t* tree.c (cp_statement_code_p): Add USING_STMT.\n\t* decl2.c (do_using_directive): Add the using directive statement.\n\n\t* tree.c (walk_tree): Reformat an if block.\n\nFrom-SVN: r41783", "tree": {"sha": "3af1413c9396f239f12eefc0b036c81205755a9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3af1413c9396f239f12eefc0b036c81205755a9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5158d7eeb777a402440950ee9f3a5ce69586e791", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5158d7eeb777a402440950ee9f3a5ce69586e791", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5158d7eeb777a402440950ee9f3a5ce69586e791", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5158d7eeb777a402440950ee9f3a5ce69586e791/comments", "author": null, "committer": null, "parents": [{"sha": "05de394bf942c4d6d88b0881ebd61386247a3d5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05de394bf942c4d6d88b0881ebd61386247a3d5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05de394bf942c4d6d88b0881ebd61386247a3d5d"}], "stats": {"total": 39, "additions": 29, "deletions": 10}, "files": [{"sha": "e98d1abc98e9efadcdacf61643ad6f2efe111c5c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5158d7eeb777a402440950ee9f3a5ce69586e791/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5158d7eeb777a402440950ee9f3a5ce69586e791/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5158d7eeb777a402440950ee9f3a5ce69586e791", "patch": "@@ -1,3 +1,11 @@\n+2001-05-03  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* dump.c (cp_dump_tree, USING_STMT case): New case.\n+\t* tree.c (cp_statement_code_p): Add USING_STMT.\n+\t* decl2.c (do_using_directive): Add the using directive statement.\n+\n+\t* tree.c (walk_tree): Reformat an if block.\n+\n 2001-05-02  Mark Mitchell  <mark@codesourcery.com>\n \n \t* decl.c (compute_array_index_type): Don't try to do anything with"}, {"sha": "768fd5ffd8faba18c6de460b8b970151e27a7a63", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5158d7eeb777a402440950ee9f3a5ce69586e791/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5158d7eeb777a402440950ee9f3a5ce69586e791/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=5158d7eeb777a402440950ee9f3a5ce69586e791", "patch": "@@ -5204,6 +5204,8 @@ do_using_directive (namespace)\n {\n   if (namespace == fake_std_node)\n     return;\n+  if (building_stmt_tree ())\n+    add_stmt (build_stmt (USING_STMT, namespace));\n   \n   /* using namespace A::B::C; */\n   if (TREE_CODE (namespace) == SCOPE_REF)"}, {"sha": "3f0a11803c378c0b71f30bc085c5f363c7d6dbb3", "filename": "gcc/cp/dump.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5158d7eeb777a402440950ee9f3a5ce69586e791/gcc%2Fcp%2Fdump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5158d7eeb777a402440950ee9f3a5ce69586e791/gcc%2Fcp%2Fdump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdump.c?ref=5158d7eeb777a402440950ee9f3a5ce69586e791", "patch": "@@ -252,6 +252,12 @@ cp_dump_tree (di, t)\n       dump_next_stmt (di, t);\n       break;\n \n+    case USING_STMT:\n+      dump_stmt (di, t);\n+      dump_child (\"nmsp\", USING_STMT_NAMESPACE (t));\n+      dump_next_stmt (di, t);\n+      break;\n+      \n     default:\n       break;\n     }"}, {"sha": "5de2b5d10e81a209948428de809f7eeccf28666c", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5158d7eeb777a402440950ee9f3a5ce69586e791/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5158d7eeb777a402440950ee9f3a5ce69586e791/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=5158d7eeb777a402440950ee9f3a5ce69586e791", "patch": "@@ -1038,6 +1038,7 @@ cp_statement_code_p (code)\n     case TRY_BLOCK:\n     case HANDLER:\n     case EH_SPEC_BLOCK:\n+    case USING_STMT:\n       return 1;\n \n     default:\n@@ -1188,16 +1189,18 @@ walk_tree (tp, func, data, htab)\n   if (!*tp)\n     return NULL_TREE;\n \n-  if (htab) {\n-    void **slot;\n-    /* Don't walk the same tree twice, if the user has requested that we\n-       avoid doing so. */\n-    if (htab_find (htab, *tp))\n-      return NULL_TREE;\n-    /* If we haven't already seen this node, add it to the table. */\n-    slot = htab_find_slot (htab, *tp, INSERT);\n-    *slot = *tp;\n-  }\n+  if (htab)\n+    {\n+      void **slot;\n+      \n+      /* Don't walk the same tree twice, if the user has requested\n+         that we avoid doing so. */\n+      if (htab_find (htab, *tp))\n+\treturn NULL_TREE;\n+      /* If we haven't already seen this node, add it to the table. */\n+      slot = htab_find_slot (htab, *tp, INSERT);\n+      *slot = *tp;\n+    }\n \n   /* Call the function.  */\n   walk_subtrees = 1;"}]}