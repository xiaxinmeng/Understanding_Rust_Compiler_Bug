{"sha": "ebcaaa2152486039f548259cc008ba5b3243d393", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJjYWFhMjE1MjQ4NjAzOWY1NDgyNTljYzAwOGJhNWIzMjQzZDM5Mw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2005-01-31T06:04:07Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2005-01-31T06:04:07Z"}, "message": "re PR middle-end/19697 (gcc.c-torture/execute/ieee/mzero6.c:24: error: unrecognizable insn)\n\n\n\tPR middle-end/19697\n\t* config/pa/pa.md (anddi3, iordi3): On HPPA64, disallow an integer\n\tconstant as the second operand and a register as the third.\n\nFrom-SVN: r94468", "tree": {"sha": "4090cccce5fd6a27421275731e160d27d4ff7136", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4090cccce5fd6a27421275731e160d27d4ff7136"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebcaaa2152486039f548259cc008ba5b3243d393", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebcaaa2152486039f548259cc008ba5b3243d393", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebcaaa2152486039f548259cc008ba5b3243d393", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebcaaa2152486039f548259cc008ba5b3243d393/comments", "author": null, "committer": null, "parents": [{"sha": "6cc37e7e24bb91d009d0a0c9ae9f37dd3c329d74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cc37e7e24bb91d009d0a0c9ae9f37dd3c329d74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cc37e7e24bb91d009d0a0c9ae9f37dd3c329d74"}], "stats": {"total": 44, "additions": 14, "deletions": 30}, "files": [{"sha": "79a2feb986eb38e672a761d6a9e74e0e6f961bf2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebcaaa2152486039f548259cc008ba5b3243d393/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebcaaa2152486039f548259cc008ba5b3243d393/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ebcaaa2152486039f548259cc008ba5b3243d393", "patch": "@@ -1,3 +1,9 @@\n+2005-01-30  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR middle-end/19697\n+\t* config/pa/pa.md (anddi3, iordi3): On HPPA64, disallow an integer\n+\tconstant as the second operand and a register as the third.\n+\n 2005-01-31  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \tPR target/19704"}, {"sha": "9a434a6095f8062cc6b225445b032468a6553759", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 8, "deletions": 30, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebcaaa2152486039f548259cc008ba5b3243d393/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebcaaa2152486039f548259cc008ba5b3243d393/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=ebcaaa2152486039f548259cc008ba5b3243d393", "patch": "@@ -5441,25 +5441,14 @@\n \n (define_expand \"anddi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t(and:DI (match_operand:DI 1 \"and_operand\" \"\")\n+\t(and:DI (match_operand:DI 1 \"register_operand\" \"\")\n \t\t(match_operand:DI 2 \"and_operand\" \"\")))]\n   \"\"\n   \"\n {\n-  if (TARGET_64BIT)\n-    {\n-      /* One operand must be a register operand.  */\n-      if (!register_operand (operands[1], DImode)\n-\t  && !register_operand (operands[2], DImode))\n-\tFAIL;\n-    }\n-  else\n-    {\n-      /* Both operands must be register operands.  */\n-      if (!register_operand (operands[1], DImode)\n-\t  || !register_operand (operands[2], DImode))\n-\tFAIL;\n-    }\n+  /* Both operands must be register operands.  */\n+  if (!TARGET_64BIT && !register_operand (operands[2], DImode))\n+    FAIL;\n }\")\n \n (define_insn \"\"\n@@ -5520,25 +5509,14 @@\n \n (define_expand \"iordi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t(ior:DI (match_operand:DI 1 \"ior_operand\" \"\")\n+\t(ior:DI (match_operand:DI 1 \"register_operand\" \"\")\n \t\t(match_operand:DI 2 \"ior_operand\" \"\")))]\n   \"\"\n   \"\n {\n-  if (TARGET_64BIT)\n-    {\n-      /* One operand must be a register operand.  */\n-      if (!register_operand (operands[1], DImode)\n-\t  && !register_operand (operands[2], DImode))\n-\tFAIL;\n-    }\n-  else\n-    {\n-      /* Both operands must be register operands.  */\n-      if (!register_operand (operands[1], DImode)\n-\t  || !register_operand (operands[2], DImode))\n-\tFAIL;\n-    }\n+  /* Both operands must be register operands.  */\n+  if (!TARGET_64BIT && !register_operand (operands[2], DImode))\n+    FAIL;\n }\")\n \n (define_insn \"\""}]}