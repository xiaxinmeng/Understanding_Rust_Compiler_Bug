{"sha": "677cb11df0d67bb9590eefd61aebd8851872e2ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc3Y2IxMWRmMGQ2N2JiOTU5MGVlZmQ2MWFlYmQ4ODUxODcyZTJhZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2016-01-16T11:03:18Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2016-01-16T11:03:18Z"}, "message": "Optimise hash_table::empty\n\nCalling redirect_edge_var_map_empty after each pass was slowing things\ndown because hash_table::empty () cleared all slots even if the hash\ntable was already empty.\n\nTested on x86_64-linux-gnu, where it gives a 1% compile time improvement\nfor fold-const.ii at -O and -O2.\n\ngcc/\n\t* hash-table.h (hash_table::empty): Turn into an inline wrapper\n\tthat checks whether the table is already empty.  Rename the\n\toriginal implementation to...\n\t(hash_table::empty_slot): ...this new private function.\n\nFrom-SVN: r232467", "tree": {"sha": "735d4ab3ae87c19e68d98349fe4ca7d2e98347e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/735d4ab3ae87c19e68d98349fe4ca7d2e98347e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/677cb11df0d67bb9590eefd61aebd8851872e2ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/677cb11df0d67bb9590eefd61aebd8851872e2ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/677cb11df0d67bb9590eefd61aebd8851872e2ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/677cb11df0d67bb9590eefd61aebd8851872e2ae/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b62df3bfc5a32eadd99a274186a23427a6369d5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b62df3bfc5a32eadd99a274186a23427a6369d5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b62df3bfc5a32eadd99a274186a23427a6369d5b"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "227acf96c273957f5a99fd8e56ab911f257be74c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/677cb11df0d67bb9590eefd61aebd8851872e2ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/677cb11df0d67bb9590eefd61aebd8851872e2ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=677cb11df0d67bb9590eefd61aebd8851872e2ae", "patch": "@@ -1,3 +1,10 @@\n+2016-01-16  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* hash-table.h (hash_table::empty): Turn into an inline wrapper\n+\tthat checks whether the table is already empty.  Rename the\n+\toriginal implementation to...\n+\t(hash_table::empty_slot): ...this new private function.\n+\n 2016-01-15  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR diagnostic/68899"}, {"sha": "e925e1e12d6e805faf9aff3e3445dc5e401731db", "filename": "gcc/hash-table.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/677cb11df0d67bb9590eefd61aebd8851872e2ae/gcc%2Fhash-table.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/677cb11df0d67bb9590eefd61aebd8851872e2ae/gcc%2Fhash-table.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-table.h?ref=677cb11df0d67bb9590eefd61aebd8851872e2ae", "patch": "@@ -390,8 +390,8 @@ class hash_table\n   /* Return the current number of elements in this hash table. */\n   size_t elements_with_deleted () const { return m_n_elements; }\n \n-  /* This function clears all entries in the given hash table.  */\n-  void empty ();\n+  /* This function clears all entries in this hash table.  */\n+  void empty () { if (elements ()) empty_slow (); }\n \n   /* This function clears a specified SLOT in a hash table.  It is\n      useful when you've already done the lookup and don't want to do it\n@@ -499,6 +499,8 @@ class hash_table\n \n   template<typename T> friend void gt_cleare_cache (hash_table<T> *);\n \n+  void empty_slow ();\n+\n   value_type *alloc_entries (size_t n CXX_MEM_STAT_INFO) const;\n   value_type *find_empty_slot_for_expand (hashval_t);\n   void expand ();\n@@ -755,9 +757,11 @@ hash_table<Descriptor, Allocator>::expand ()\n     ggc_free (oentries);\n }\n \n+/* Implements empty() in cases where it isn't a no-op.  */\n+\n template<typename Descriptor, template<typename Type> class Allocator>\n void\n-hash_table<Descriptor, Allocator>::empty ()\n+hash_table<Descriptor, Allocator>::empty_slow ()\n {\n   size_t size = m_size;\n   value_type *entries = m_entries;"}]}