{"sha": "072c87d17058df5073c7cb7e9e46809b7c5c0515", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDcyYzg3ZDE3MDU4ZGY1MDczYzdjYjdlOWU0NjgwOWI3YzVjMDUxNQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2009-09-25T20:49:08Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2009-09-25T20:49:08Z"}, "message": "re PR middle-end/41469 (-fexceptions ICE in expand_gimple_stmt_1, at cfgexpand.c:1947)\n\n        PR middle-end/41469\n        * tree-eh.c (lower_resx): Resolve RESX with no source region to\n        __builtin_trap.\n        (gate_lower_resx): New.\n        (gate_lower_eh_dispatch): Rename from gate_lower_ehcontrol.\n\nFrom-SVN: r152185", "tree": {"sha": "dfe8ca0c39b739d86e6c80e55f635db2121a5c56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfe8ca0c39b739d86e6c80e55f635db2121a5c56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/072c87d17058df5073c7cb7e9e46809b7c5c0515", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/072c87d17058df5073c7cb7e9e46809b7c5c0515", "html_url": "https://github.com/Rust-GCC/gccrs/commit/072c87d17058df5073c7cb7e9e46809b7c5c0515", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/072c87d17058df5073c7cb7e9e46809b7c5c0515/comments", "author": null, "committer": null, "parents": [{"sha": "f1a036e46fa3ae4831604357a78b4f57af5133da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a036e46fa3ae4831604357a78b4f57af5133da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1a036e46fa3ae4831604357a78b4f57af5133da"}], "stats": {"total": 56, "additions": 50, "deletions": 6}, "files": [{"sha": "7e7367faa9d6e620afa8c427a132cfdf27b8f79f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/072c87d17058df5073c7cb7e9e46809b7c5c0515/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/072c87d17058df5073c7cb7e9e46809b7c5c0515/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=072c87d17058df5073c7cb7e9e46809b7c5c0515", "patch": "@@ -1,3 +1,11 @@\n+2009-09-25  Richard Henderson  <rth@redhat.com>\n+\n+\tPR middle-end/41469\n+\t* tree-eh.c (lower_resx): Resolve RESX with no source region to\n+\t__builtin_trap.\n+\t(gate_lower_resx): New.\n+\t(gate_lower_eh_dispatch): Rename from gate_lower_ehcontrol.\n+\n 2009-09-25  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/v850/v850.h (FUNCTION_VALUE): Remove."}, {"sha": "7813cb3d66d1894427e1542d618c3d6a7d597f31", "filename": "gcc/testsuite/gcc.c-torture/compile/pr41469.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/072c87d17058df5073c7cb7e9e46809b7c5c0515/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr41469.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/072c87d17058df5073c7cb7e9e46809b7c5c0515/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr41469.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr41469.c?ref=072c87d17058df5073c7cb7e9e46809b7c5c0515", "patch": "@@ -0,0 +1,12 @@\n+void\n+af (void *a)\n+{\n+}\n+void\n+bf (void)\n+{\n+  int i = 1;\n+  char v[i];\n+  af (v);\n+}\n+"}, {"sha": "70c009d6bb2b7ecf58cdd7cbc88a2ad6126b75ad", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 30, "deletions": 6, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/072c87d17058df5073c7cb7e9e46809b7c5c0515/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/072c87d17058df5073c7cb7e9e46809b7c5c0515/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=072c87d17058df5073c7cb7e9e46809b7c5c0515", "patch": "@@ -2849,10 +2849,26 @@ lower_resx (basic_block bb, gimple stmt, struct pointer_map_t *mnt_map)\n     dst_r = NULL;\n \n   src_r = get_eh_region_from_number (gimple_resx_region (stmt));\n-  src_nr = build_int_cst (NULL, src_r->index);\n   gsi = gsi_last_bb (bb);\n \n-  if (dst_r)\n+  if (src_r == NULL)\n+    {\n+      /* We can wind up with no source region when pass_cleanup_eh shows\n+\t that there are no entries into an eh region and deletes it, but\n+\t then the block that contains the resx isn't removed.  This can\n+\t happen without optimization when the switch statement created by\n+\t lower_try_finally_switch isn't simplified to remove the eh case.\n+\n+\t Resolve this by expanding the resx node to an abort.  */\n+\n+      fn = implicit_built_in_decls[BUILT_IN_TRAP];\n+      x = gimple_build_call (fn, 0);\n+      gsi_insert_before (&gsi, x, GSI_SAME_STMT);\n+\n+      while (EDGE_COUNT (bb->succs) > 0)\n+\tremove_edge (EDGE_SUCC (bb, 0));\n+    }\n+  else if (dst_r)\n     {\n       /* When we have a destination region, we resolve this by copying\n \t the excptr and filter values into place, and changing the edge\n@@ -2903,6 +2919,7 @@ lower_resx (basic_block bb, gimple stmt, struct pointer_map_t *mnt_map)\n \t  tree dst_nr = build_int_cst (NULL, dst_r->index);\n \n \t  fn = implicit_built_in_decls[BUILT_IN_EH_COPY_VALUES];\n+\t  src_nr = build_int_cst (NULL, src_r->index);\n \t  x = gimple_build_call (fn, 2, dst_nr, src_nr);\n \t  gsi_insert_before (&gsi, x, GSI_SAME_STMT);\n \n@@ -2948,6 +2965,7 @@ lower_resx (basic_block bb, gimple stmt, struct pointer_map_t *mnt_map)\n \n \tcase 0:\n \t  fn = implicit_built_in_decls[BUILT_IN_EH_POINTER];\n+\t  src_nr = build_int_cst (NULL, src_r->index);\n \t  x = gimple_build_call (fn, 1, src_nr);\n \t  var = create_tmp_var (ptr_type_node, NULL);\n \t  var = make_ssa_name (var, x);\n@@ -3000,17 +3018,17 @@ execute_lower_resx (void)\n }\n \n static bool\n-gate_lower_ehcontrol (void)\n+gate_lower_resx (void)\n {\n-  return cfun->eh->region_tree != NULL;\n+  return flag_exceptions != 0;\n }\n \n struct gimple_opt_pass pass_lower_resx =\n {\n  {\n   GIMPLE_PASS,\n   \"resx\",\t\t\t\t/* name */\n-  gate_lower_ehcontrol,\t\t\t/* gate */\n+  gate_lower_resx,\t\t\t/* gate */\n   execute_lower_resx,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n@@ -3175,12 +3193,18 @@ execute_lower_eh_dispatch (void)\n   return any_rewritten ? TODO_update_ssa_only_virtuals : 0;\n }\n \n+static bool\n+gate_lower_eh_dispatch (void)\n+{\n+  return cfun->eh->region_tree != NULL;\n+}\n+\n struct gimple_opt_pass pass_lower_eh_dispatch =\n {\n  {\n   GIMPLE_PASS,\n   \"ehdisp\",\t\t\t\t/* name */\n-  gate_lower_ehcontrol,\t\t\t/* gate */\n+  gate_lower_eh_dispatch,\t\t/* gate */\n   execute_lower_eh_dispatch,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */"}]}