{"sha": "54f76845c5bec7392c5ba95a4a1a9df38b980715", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRmNzY4NDVjNWJlYzczOTJjNWJhOTVhNGExYTlkZjM4Yjk4MDcxNQ==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@albatross.co.nz", "date": "1999-12-24T01:08:34Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "1999-12-24T01:08:34Z"}, "message": "linux_threads.c: Don't block SIGINT, SIGQUIT, SIGTERM in the NO_SIGNALS case.\n\n1999-12-22  Bryce McKinlay  <bryce@albatross.co.nz>\n\n        * linux_threads.c: Don't block SIGINT, SIGQUIT, SIGTERM in the\n        NO_SIGNALS case.\n\nFrom-SVN: r31083", "tree": {"sha": "6266c2f2f127c1ae587f061144542fbea3ecdc9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6266c2f2f127c1ae587f061144542fbea3ecdc9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54f76845c5bec7392c5ba95a4a1a9df38b980715", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54f76845c5bec7392c5ba95a4a1a9df38b980715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54f76845c5bec7392c5ba95a4a1a9df38b980715", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54f76845c5bec7392c5ba95a4a1a9df38b980715/comments", "author": null, "committer": null, "parents": [{"sha": "43cbc9430d557a3219ff833751c38132f831036e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43cbc9430d557a3219ff833751c38132f831036e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43cbc9430d557a3219ff833751c38132f831036e"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "5e39dd057788f29476129391fcd43e5bf77f3302", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f76845c5bec7392c5ba95a4a1a9df38b980715/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f76845c5bec7392c5ba95a4a1a9df38b980715/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=54f76845c5bec7392c5ba95a4a1a9df38b980715", "patch": "@@ -1,3 +1,8 @@\n+1999-12-22  Bryce McKinlay  <bryce@albatross.co.nz>\n+\n+\t* linux_threads.c: Don't block SIGINT, SIGQUIT, SIGTERM in the\n+\tNO_SIGNALS case.\n+\n 1999-12-19  Jeff Sturm  <jsturm@sigma6.com>\n \n         * gcconfig.h: Define DATASTART for Alpha Linux."}, {"sha": "4d98062d11c985f4e856e10cd41a9b6a902e2072", "filename": "boehm-gc/linux_threads.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f76845c5bec7392c5ba95a4a1a9df38b980715/boehm-gc%2Flinux_threads.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f76845c5bec7392c5ba95a4a1a9df38b980715/boehm-gc%2Flinux_threads.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Flinux_threads.c?ref=54f76845c5bec7392c5ba95a4a1a9df38b980715", "patch": "@@ -173,6 +173,11 @@ void GC_suspend_handler(int sig)\n     /* is no race.\t\t\t\t\t\t*/\n     if (sigfillset(&mask) != 0) ABORT(\"sigfillset() failed\");\n     if (sigdelset(&mask, SIG_RESTART) != 0) ABORT(\"sigdelset() failed\");\n+#ifdef NO_SIGNALS\n+    if (sigdelset(&mask, SIGINT) != 0) ABORT(\"sigdelset() failed\");\n+    if (sigdelset(&mask, SIGQUIT) != 0) ABORT(\"sigdelset() failed\");\n+    if (sigdelset(&mask, SIGTERM) != 0) ABORT(\"sigdelset() failed\");\n+#endif\n     do {\n \t    me->signal = 0;\n \t    sigsuspend(&mask);             /* Wait for signal */\n@@ -433,6 +438,21 @@ void GC_thr_init()\n     if (sigfillset(&act.sa_mask) != 0) {\n     \tABORT(\"sigfillset() failed\");\n     }\n+\n+#ifdef NO_SIGNALS\n+    if (sigdelset(&act.sa_mask, SIGINT) != 0) {\n+       ABORT(\"sigdelset() failed\");\n+    }\n+\n+    if (sigdelset(&act.sa_mask, SIGQUIT) != 0) {\n+       ABORT(\"sigdelset() failed\");\n+    }\n+\n+    if (sigdelset(&act.sa_mask, SIGTERM) != 0) {\n+       ABORT(\"sigdelset() failed\");\n+    }\n+#endif\n+\n     /* SIG_RESTART is unmasked by the handler when necessary. \t*/\n     act.sa_handler = GC_suspend_handler;\n     if (sigaction(SIG_SUSPEND, &act, NULL) != 0) {"}]}