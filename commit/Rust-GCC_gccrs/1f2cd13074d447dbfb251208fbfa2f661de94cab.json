{"sha": "1f2cd13074d447dbfb251208fbfa2f661de94cab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYyY2QxMzA3NGQ0NDdkYmZiMjUxMjA4ZmJmYTJmNjYxZGU5NGNhYg==", "commit": {"author": {"name": "Kelley Cook", "email": "kelleycook@wideopenwest.com", "date": "2003-06-13T23:18:50Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2003-06-13T23:18:50Z"}, "message": "bsd.h: Remove ASM_FILE_START.\n\n* config/i386/bsd.h: Remove ASM_FILE_START.\n* config/i386/djgpp.h: Likewise.\n* config/i386/gas.h (ASM_FILE_START): Output .file before .intel_syntax.\n\n* config/i386/djgpp.h: Move included unix.h, bsd.h, gas.h to ...\n* config.gcc (i[34567]86-pc-msdosdjgpp): ... here.\n\nFrom-SVN: r67919", "tree": {"sha": "d8549ded808bebd2db4066871f25247696e814ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8549ded808bebd2db4066871f25247696e814ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f2cd13074d447dbfb251208fbfa2f661de94cab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f2cd13074d447dbfb251208fbfa2f661de94cab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f2cd13074d447dbfb251208fbfa2f661de94cab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f2cd13074d447dbfb251208fbfa2f661de94cab/comments", "author": null, "committer": null, "parents": [{"sha": "880efc46cd21c302dd8e267bceebf2e1b554d2ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/880efc46cd21c302dd8e267bceebf2e1b554d2ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/880efc46cd21c302dd8e267bceebf2e1b554d2ed"}], "stats": {"total": 33, "additions": 10, "deletions": 23}, "files": [{"sha": "b117b9d8684a3c3b33f1fa38d2a3043be07dcef9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f2cd13074d447dbfb251208fbfa2f661de94cab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f2cd13074d447dbfb251208fbfa2f661de94cab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f2cd13074d447dbfb251208fbfa2f661de94cab", "patch": "@@ -1,3 +1,12 @@\n+2003-06-13  Kelley Cook  <kelleycook@wideopenwest.com>\n+\n+\t* config/i386/bsd.h: Remove ASM_FILE_START.\n+\t* config/i386/djgpp.h: Likewise.\n+\t* config/i386/gas.h (ASM_FILE_START): Output .file before .intel_syntax. \n+\n+\t* config/i386/djgpp.h: Move included unix.h, bsd.h, gas.h to ...\n+\t* config.gcc (i[34567]86-pc-msdosdjgpp): ... here.\n+\n 2003-06-13  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR bootstrap/10835"}, {"sha": "41cb667755251a1b71d01e26fed3c810f84cc96e", "filename": "gcc/config/i386/bsd.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f2cd13074d447dbfb251208fbfa2f661de94cab/gcc%2Fconfig%2Fi386%2Fbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f2cd13074d447dbfb251208fbfa2f661de94cab/gcc%2Fconfig%2Fi386%2Fbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbsd.h?ref=1f2cd13074d447dbfb251208fbfa2f661de94cab", "patch": "@@ -36,13 +36,6 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_LONG \"\\t.long\\t\"\n #define ASM_QUAD \"\\t.quad\\t\"  /* Should not be used for 32bit compilation.  */\n \n-/* Output at beginning of assembler file.\n-   ??? I am skeptical of this -- RMS.  */\n-\n-#define ASM_FILE_START(FILE) \\\n-  do {\toutput_file_directive (FILE, main_input_filename);\t\\\n-  } while (0)\n-\n /* This was suggested, but it shouldn't be right for DBX output. -- RMS\n    #define ASM_OUTPUT_SOURCE_FILENAME(FILE, NAME) */\n "}, {"sha": "d2fcd6fce42104aa2fd90ba5fed461b0fb13b06a", "filename": "gcc/config/i386/djgpp.h", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f2cd13074d447dbfb251208fbfa2f661de94cab/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f2cd13074d447dbfb251208fbfa2f661de94cab/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdjgpp.h?ref=1f2cd13074d447dbfb251208fbfa2f661de94cab", "patch": "@@ -30,10 +30,6 @@ Boston, MA 02111-1307, USA.  */\n /* Enable parsing of #pragma pack(push,<n>) and #pragma pack(pop).  */\n #define HANDLE_PRAGMA_PACK_PUSH_POP 1\n \n-#include \"i386/unix.h\"\n-#include \"i386/bsd.h\"\n-#include \"i386/gas.h\"\n-\n /* If defined, a C expression whose value is a string containing the\n    assembler operation to identify the following data as\n    uninitialized global data.  If not defined, and neither\n@@ -130,17 +126,6 @@ Boston, MA 02111-1307, USA.  */\n /* Switch into a generic section.  */\n #define TARGET_ASM_NAMED_SECTION  default_coff_asm_named_section\n \n-/* Output at beginning of assembler file.  */\n-/* The .file command should always begin the output.  */\n-\n-#undef ASM_FILE_START\n-#define ASM_FILE_START(FILE)\t\t\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-\tif (ix86_asm_dialect == ASM_INTEL)\t\t\t\t\\\n-\t  fputs (\"\\t.intel_syntax\\n\", FILE);\t\t\t\t\\\n-\toutput_file_directive (FILE, main_input_filename);\t\t\\\n-  } while (0)\n-\n /* This is how to output an assembler line\n    that says to advance the location counter\n    to a multiple of 2**LOG bytes.  */"}, {"sha": "6dec86e08a43e6c0a47dec0d3b790287e40e31e0", "filename": "gcc/config/i386/gas.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f2cd13074d447dbfb251208fbfa2f661de94cab/gcc%2Fconfig%2Fi386%2Fgas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f2cd13074d447dbfb251208fbfa2f661de94cab/gcc%2Fconfig%2Fi386%2Fgas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgas.h?ref=1f2cd13074d447dbfb251208fbfa2f661de94cab", "patch": "@@ -126,7 +126,7 @@ Boston, MA 02111-1307, USA.  */\n #undef ASM_FILE_START\n #define ASM_FILE_START(FILE)\t\t\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n+        output_file_directive (FILE, main_input_filename);\t\t\\\n \tif (ix86_asm_dialect == ASM_INTEL)\t\t\t\t\\\n \t  fputs (\"\\t.intel_syntax\\n\", FILE);\t\t\t\t\\\n-        output_file_directive (FILE, main_input_filename);\t\t\\\n   } while (0)"}]}