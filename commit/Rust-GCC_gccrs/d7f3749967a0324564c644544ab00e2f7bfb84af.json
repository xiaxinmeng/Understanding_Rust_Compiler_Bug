{"sha": "d7f3749967a0324564c644544ab00e2f7bfb84af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdmMzc0OTk2N2EwMzI0NTY0YzY0NDU0NGFiMDBlMmY3YmZiODRhZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-08-05T14:16:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-08-05T14:16:51Z"}, "message": "re PR tree-optimization/67121 (wrong code at -O3 on x86_64-linux-gnu)\n\n2015-08-05  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/67121\n\t* tree-if-conv.c (combine_blocks): Clear range-info produced\n\tby stmts no longer executed conditionally.\n\n\t* gcc.dg/torture/pr67121.c: New testcase.\n\nFrom-SVN: r226630", "tree": {"sha": "027bb3c25e6b6492fffec670c48fdbb7c9fa1f20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/027bb3c25e6b6492fffec670c48fdbb7c9fa1f20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7f3749967a0324564c644544ab00e2f7bfb84af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f3749967a0324564c644544ab00e2f7bfb84af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7f3749967a0324564c644544ab00e2f7bfb84af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f3749967a0324564c644544ab00e2f7bfb84af/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b4bd32c169b461afd39a37318141f1c14af5e662", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4bd32c169b461afd39a37318141f1c14af5e662", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4bd32c169b461afd39a37318141f1c14af5e662"}], "stats": {"total": 61, "additions": 59, "deletions": 2}, "files": [{"sha": "bca92e28dc4c251a43dcbcfe8bb4d6e6eeafecca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f3749967a0324564c644544ab00e2f7bfb84af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f3749967a0324564c644544ab00e2f7bfb84af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7f3749967a0324564c644544ab00e2f7bfb84af", "patch": "@@ -1,3 +1,9 @@\n+2015-08-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/67121\n+\t* tree-if-conv.c (combine_blocks): Clear range-info produced\n+\tby stmts no longer executed conditionally.\n+\n 2015-08-05  Nick Clifton  <nickc@redhat.com>\n \n \t* config/rl78/rl78.c (rl78_force_nonfar_3): Remove optimization"}, {"sha": "5ca71c95c0d8c3d15e4807cf8be7f300c402fbb7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f3749967a0324564c644544ab00e2f7bfb84af/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f3749967a0324564c644544ab00e2f7bfb84af/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d7f3749967a0324564c644544ab00e2f7bfb84af", "patch": "@@ -1,3 +1,8 @@\n+2015-08-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/67121\n+\t* gcc.dg/torture/pr67121.c: New testcase.\n+\n 2015-08-05  Nick Clifton  <nickc@redhat.com>\n \n \t* gcc.target/rl78: New directory."}, {"sha": "2b609ee83160221dbd0b86a5a343dd1cf3a9bcae", "filename": "gcc/testsuite/gcc.dg/torture/pr67121.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f3749967a0324564c644544ab00e2f7bfb84af/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67121.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f3749967a0324564c644544ab00e2f7bfb84af/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67121.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67121.c?ref=d7f3749967a0324564c644544ab00e2f7bfb84af", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do run } */\n+\n+int a[6], b, c = 226, d, e, f;\n+signed char g;\n+\n+void\n+fn1 (int p1)\n+{\n+  b = a[p1];\n+}\n+\n+int\n+main ()\n+{\n+  a[0] = 1;\n+  for (f = 0; f < 9; f++)\n+    {\n+      signed char h = c;\n+      int i = 1;\n+      g = h < 0 ? h : h >> i;\n+      e = g;\n+      for (d = 1; d; d = 0)\n+\t;\n+    }\n+  fn1 (g >> 8 & 1);\n+\n+  if (b != 0) \n+    __builtin_abort (); \n+\n+  return 0;\n+}"}, {"sha": "291e6020b25b4576e52be91d976fee255063a67a", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f3749967a0324564c644544ab00e2f7bfb84af/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f3749967a0324564c644544ab00e2f7bfb84af/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=d7f3749967a0324564c644544ab00e2f7bfb84af", "patch": "@@ -2199,9 +2199,11 @@ combine_blocks (struct loop *loop, bool any_mask_load_store)\n   /* Merge basic blocks: first remove all the edges in the loop,\n      except for those from the exit block.  */\n   exit_bb = NULL;\n+  bool *predicated = XNEWVEC (bool, orig_loop_num_nodes);\n   for (i = 0; i < orig_loop_num_nodes; i++)\n     {\n       bb = ifc_bbs[i];\n+      predicated[i] = !is_true_predicate (bb_predicate (bb));\n       free_bb_predicate (bb);\n       if (bb_with_exit_edge_p (loop, bb))\n \t{\n@@ -2259,9 +2261,21 @@ combine_blocks (struct loop *loop, bool any_mask_load_store)\n       if (bb == exit_bb || bb == loop->latch)\n \tcontinue;\n \n-      /* Make stmts member of loop->header.  */\n+      /* Make stmts member of loop->header and clear range info from all stmts\n+\t in BB which is now no longer executed conditional on a predicate we\n+\t could have derived it from.  */\n       for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n-\tgimple_set_bb (gsi_stmt (gsi), merge_target_bb);\n+\t{\n+\t  gimple stmt = gsi_stmt (gsi);\n+\t  gimple_set_bb (stmt, merge_target_bb);\n+\t  if (predicated[i])\n+\t    {\n+\t      ssa_op_iter i;\n+\t      tree op;\n+\t      FOR_EACH_SSA_TREE_OPERAND (op, stmt, i, SSA_OP_DEF)\n+\t\treset_flow_sensitive_info (op);\n+\t    }\n+\t}\n \n       /* Update stmt list.  */\n       last = gsi_last_bb (merge_target_bb);\n@@ -2281,6 +2295,7 @@ combine_blocks (struct loop *loop, bool any_mask_load_store)\n \n   free (ifc_bbs);\n   ifc_bbs = NULL;\n+  free (predicated);\n }\n \n /* Version LOOP before if-converting it; the original loop"}]}