{"sha": "e259a3f2ca40d51e7d7c1ccb2a09ec06ca52d320", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI1OWEzZjJjYTQwZDUxZTdkN2MxY2NiMmEwOWVjMDZjYTUyZDMyMA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-01-31T17:30:28Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-01-31T17:30:28Z"}, "message": "runtime: Block signals when creating a new thread.\n\nFrom-SVN: r195619", "tree": {"sha": "174429a76d5ac9c87abb2dd2e798fa9d5049fe51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/174429a76d5ac9c87abb2dd2e798fa9d5049fe51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e259a3f2ca40d51e7d7c1ccb2a09ec06ca52d320", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e259a3f2ca40d51e7d7c1ccb2a09ec06ca52d320", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e259a3f2ca40d51e7d7c1ccb2a09ec06ca52d320", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e259a3f2ca40d51e7d7c1ccb2a09ec06ca52d320/comments", "author": null, "committer": null, "parents": [{"sha": "3b35cd045fa64576748bec13214631de1a9d8e07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b35cd045fa64576748bec13214631de1a9d8e07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b35cd045fa64576748bec13214631de1a9d8e07"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "b59f4acf0dc10b18b6699cf6e860da8a86196509", "filename": "libgo/runtime/proc.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e259a3f2ca40d51e7d7c1ccb2a09ec06ca52d320/libgo%2Fruntime%2Fproc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e259a3f2ca40d51e7d7c1ccb2a09ec06ca52d320/libgo%2Fruntime%2Fproc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fproc.c?ref=e259a3f2ca40d51e7d7c1ccb2a09ec06ca52d320", "patch": "@@ -3,6 +3,7 @@\n // license that can be found in the LICENSE file.\n \n #include <limits.h>\n+#include <signal.h>\n #include <stdlib.h>\n #include <pthread.h>\n #include <unistd.h>\n@@ -1217,6 +1218,9 @@ runtime_newm(void)\n \tpthread_attr_t attr;\n \tpthread_t tid;\n \tsize_t stacksize;\n+\tsigset_t clear;\n+\tsigset_t old;\n+\tint ret;\n \n #if 0\n \tstatic const Type *mtype;  // The Go type M\n@@ -1249,7 +1253,15 @@ runtime_newm(void)\n \tif(pthread_attr_setstacksize(&attr, stacksize) != 0)\n \t\truntime_throw(\"pthread_attr_setstacksize\");\n \n-\tif(pthread_create(&tid, &attr, runtime_mstart, mp) != 0)\n+\t// Block signals during pthread_create so that the new thread\n+\t// starts with signals disabled.  It will enable them in minit.\n+\tsigfillset(&clear);\n+\tsigemptyset(&old);\n+\tsigprocmask(SIG_BLOCK, &clear, &old);\n+\tret = pthread_create(&tid, &attr, runtime_mstart, mp);\n+\tsigprocmask(SIG_SETMASK, &old, nil);\n+\n+\tif (ret != 0)\n \t\truntime_throw(\"pthread_create\");\n \n \treturn mp;"}]}