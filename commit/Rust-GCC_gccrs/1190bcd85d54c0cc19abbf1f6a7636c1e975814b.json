{"sha": "1190bcd85d54c0cc19abbf1f6a7636c1e975814b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE5MGJjZDg1ZDU0YzBjYzE5YWJiZjFmNmE3NjM2YzFlOTc1ODE0Yg==", "commit": {"author": {"name": "Brad Spencer", "email": "spencer@infointeractive.com", "date": "2004-07-01T02:21:51Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2004-07-01T02:21:51Z"}, "message": "mt_allocator.h: Handle allocations at static initialization that happen before _S_options is...\n\n\n2004-06-30  Brad Spencer  <spencer@infointeractive.com>\n\n\t* include/ext/mt_allocator.h: Handle allocations at static\n\tinitialization that happen before _S_options is (automatically)\n\tconstructed; set _S_init even if _M_force_new is true.\n\nFrom-SVN: r83949", "tree": {"sha": "991cf077a1b58dd4459724aade2ab988d4f9d694", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/991cf077a1b58dd4459724aade2ab988d4f9d694"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1190bcd85d54c0cc19abbf1f6a7636c1e975814b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1190bcd85d54c0cc19abbf1f6a7636c1e975814b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1190bcd85d54c0cc19abbf1f6a7636c1e975814b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1190bcd85d54c0cc19abbf1f6a7636c1e975814b/comments", "author": null, "committer": null, "parents": [{"sha": "4025c040c5d5676e50b8a46d8c3820feb7f55fd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4025c040c5d5676e50b8a46d8c3820feb7f55fd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4025c040c5d5676e50b8a46d8c3820feb7f55fd8"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "4f19d105255d8a00e895e3a9172cdaa665a5efd4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1190bcd85d54c0cc19abbf1f6a7636c1e975814b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1190bcd85d54c0cc19abbf1f6a7636c1e975814b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1190bcd85d54c0cc19abbf1f6a7636c1e975814b", "patch": "@@ -1,3 +1,9 @@\n+2004-06-30  Brad Spencer  <spencer@infointeractive.com>\n+\n+\t* include/ext/mt_allocator.h: Handle allocations at static\n+\tinitialization that happen before _S_options is (automatically)\n+\tconstructed; set _S_init even if _M_force_new is true.\n+\t\n 2004-06-30  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* config/linker-map.gnu: Revert new exports."}, {"sha": "f0ee2ebd26db053de63f9731e316e689f34752cf", "filename": "libstdc++-v3/include/ext/mt_allocator.h", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1190bcd85d54c0cc19abbf1f6a7636c1e975814b/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1190bcd85d54c0cc19abbf1f6a7636c1e975814b/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h?ref=1190bcd85d54c0cc19abbf1f6a7636c1e975814b", "patch": "@@ -488,8 +488,25 @@ namespace __gnu_cxx\n     __mt_alloc<_Tp>::\n     _S_initialize()\n     {\n-      if (_S_options._M_force_new)\n-\treturn;\n+      // This method is called on the first allocation (when _S_init is still\n+      // false) to create the bins.\n+      \n+      // Ensure that the static initialization of _S_options has\n+      // happened.  This depends on (a) _M_align == 0 being an invalid\n+      // value that is only present at startup, and (b) the real\n+      // static initialization that happens later not actually\n+      // changing anything.\n+      if (_S_options._M_align == 0) \n+        new (&_S_options) _Tune;\n+  \n+      // _M_force_new must not change after the first allocate(),\n+      // which in turn calls this method, so if it's false, it's false\n+      // forever and we don't need to return here ever again.\n+      if (_S_options._M_force_new) \n+\t{\n+\t  _S_init = true;\n+\t  return;\n+\t}\n \n       // Calculate the number of bins required based on _M_max_bytes.\n       // _S_bin_size is statically-initialized to one."}]}