{"sha": "c3297561714960b9ab81ae28213b8f18f8ed6085", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMyOTc1NjE3MTQ5NjBiOWFiODFhZTI4MjEzYjhmMThmOGVkNjA4NQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2003-01-26T09:06:36Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2003-01-26T09:06:36Z"}, "message": "calls.c (emit_library_call_value_1): Handle return values in a PARALLEL.\n\n* calls.c (emit_library_call_value_1): Handle return values\nin a PARALLEL.\n\nFrom-SVN: r61826", "tree": {"sha": "05229dbe977068726b1fe2d56cd11dea707cc8ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05229dbe977068726b1fe2d56cd11dea707cc8ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3297561714960b9ab81ae28213b8f18f8ed6085", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3297561714960b9ab81ae28213b8f18f8ed6085", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3297561714960b9ab81ae28213b8f18f8ed6085", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3297561714960b9ab81ae28213b8f18f8ed6085/comments", "author": null, "committer": null, "parents": [{"sha": "187515f56ae5f7e672771ee07b5a6f9b387739ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/187515f56ae5f7e672771ee07b5a6f9b387739ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/187515f56ae5f7e672771ee07b5a6f9b387739ab"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "ef9354b5bc51aa2007023ee470a1597e7aa4da6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3297561714960b9ab81ae28213b8f18f8ed6085/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3297561714960b9ab81ae28213b8f18f8ed6085/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3297561714960b9ab81ae28213b8f18f8ed6085", "patch": "@@ -1,5 +1,8 @@\n 2003-01-26  Alexandre Oliva  <aoliva@redhat.com>\n \n+\t* calls.c (emit_library_call_value_1): Handle return values\n+\tin a PARALLEL.\n+\n \t* rtl.c (get_mode_alignment): Moved to...\n \t* stor-layout.c: ... here.\n "}, {"sha": "d6f68cdf76770f6056fe9c259b289d4677f08062", "filename": "gcc/calls.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3297561714960b9ab81ae28213b8f18f8ed6085/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3297561714960b9ab81ae28213b8f18f8ed6085/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=c3297561714960b9ab81ae28213b8f18f8ed6085", "patch": "@@ -4080,7 +4080,7 @@ emit_library_call_value_1 (retval, orgfun, value, fn_type, outmode, nargs, p)\n     {\n       rtx insns;\n \n-      if (valreg == 0 || GET_CODE (valreg) == PARALLEL)\n+      if (valreg == 0)\n \t{\n \t  insns = get_insns ();\n \t  end_sequence ();\n@@ -4089,9 +4089,18 @@ emit_library_call_value_1 (retval, orgfun, value, fn_type, outmode, nargs, p)\n       else\n \t{\n \t  rtx note = 0;\n-\t  rtx temp = gen_reg_rtx (GET_MODE (valreg));\n+\t  rtx temp;\n \t  int i;\n \n+\t  if (GET_CODE (valreg) == PARALLEL)\n+\t    {\n+\t      temp = gen_reg_rtx (outmode);\n+\t      emit_group_store (temp, valreg, outmode);\n+\t      valreg = temp;\n+\t    }\n+\n+\t  temp = gen_reg_rtx (GET_MODE (valreg));\n+\n \t  /* Construct an \"equal form\" for the value which mentions all the\n \t     arguments in order as well as the function name.  */\n \t  for (i = 0; i < nargs; i++)\n@@ -4125,6 +4134,12 @@ emit_library_call_value_1 (retval, orgfun, value, fn_type, outmode, nargs, p)\n \t  if (value != mem_value)\n \t    emit_move_insn (value, mem_value);\n \t}\n+      else if (GET_CODE (valreg) == PARALLEL)\n+\t{\n+\t  if (value == 0)\n+\t    value = gen_reg_rtx (outmode);\n+\t  emit_group_store (value, valreg, outmode);\n+\t}\n       else if (value != 0)\n \temit_move_insn (value, valreg);\n       else"}]}