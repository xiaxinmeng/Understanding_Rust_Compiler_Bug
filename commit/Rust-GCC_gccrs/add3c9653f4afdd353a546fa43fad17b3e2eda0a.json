{"sha": "add3c9653f4afdd353a546fa43fad17b3e2eda0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRkM2M5NjUzZjRhZmRkMzUzYTU0NmZhNDNmYWQxN2IzZTJlZGEwYQ==", "commit": {"author": {"name": "Ian Bolton", "email": "ian.bolton@arm.com", "date": "2013-05-02T12:52:22Z"}, "committer": {"name": "Ian Bolton", "email": "ibolton@gcc.gnu.org", "date": "2013-05-02T12:52:22Z"}, "message": "AArch64 Support for BICS in the backend\n\nFrom-SVN: r198526", "tree": {"sha": "6e2fdc073b06185251b5ec30312fd8598589fd6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e2fdc073b06185251b5ec30312fd8598589fd6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/add3c9653f4afdd353a546fa43fad17b3e2eda0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/add3c9653f4afdd353a546fa43fad17b3e2eda0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/add3c9653f4afdd353a546fa43fad17b3e2eda0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/add3c9653f4afdd353a546fa43fad17b3e2eda0a/comments", "author": null, "committer": null, "parents": [{"sha": "fdd43ac4f7880ceb96b0bb3884ae800ad393deba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdd43ac4f7880ceb96b0bb3884ae800ad393deba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdd43ac4f7880ceb96b0bb3884ae800ad393deba"}], "stats": {"total": 297, "additions": 297, "deletions": 0}, "files": [{"sha": "f1692c63a334ac4e21d74812b3e25a77157152ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add3c9653f4afdd353a546fa43fad17b3e2eda0a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add3c9653f4afdd353a546fa43fad17b3e2eda0a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=add3c9653f4afdd353a546fa43fad17b3e2eda0a", "patch": "@@ -1,3 +1,11 @@\n+2013-05-02  Ian Bolton  <ian.bolton@arm.com>\n+\n+\t* config/aarch64/aarch64.md (*and_one_cmpl<mode>3_compare0):\n+\tNew pattern.\n+\t(*and_one_cmplsi3_compare0_uxtw): Likewise.\n+\t(*and_one_cmpl_<SHIFT:optab><mode>3_compare0): Likewise.\n+\t(*and_one_cmpl_<SHIFT:optab>si3_compare0_uxtw): Likewise.\n+\n 2013-05-02  Richard Biener  <rguenther@suse.de>\n \n \t* tree-scalar-evolution.c (scev_info_hasher): Remove."}, {"sha": "50acdaaf699ead9c61e2b14e1b77d2ae56b86810", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add3c9653f4afdd353a546fa43fad17b3e2eda0a/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add3c9653f4afdd353a546fa43fad17b3e2eda0a/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=add3c9653f4afdd353a546fa43fad17b3e2eda0a", "patch": "@@ -2746,6 +2746,35 @@\n   [(set_attr \"v8type\" \"logic\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+(define_insn \"*and_one_cmpl<mode>3_compare0\"\n+  [(set (reg:CC_NZ CC_REGNUM)\n+\t(compare:CC_NZ\n+\t (and:GPI (not:GPI\n+\t\t   (match_operand:GPI 1 \"register_operand\" \"r\"))\n+\t\t  (match_operand:GPI 2 \"register_operand\" \"r\"))\n+\t (const_int 0)))\n+   (set (match_operand:GPI 0 \"register_operand\" \"=r\")\n+\t(and:GPI (not:GPI (match_dup 1)) (match_dup 2)))]\n+  \"\"\n+  \"bics\\\\t%<w>0, %<w>2, %<w>1\"\n+  [(set_attr \"v8type\" \"logics\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+;; zero_extend version of above\n+(define_insn \"*and_one_cmplsi3_compare0_uxtw\"\n+  [(set (reg:CC_NZ CC_REGNUM)\n+\t(compare:CC_NZ\n+\t (and:SI (not:SI\n+\t\t  (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t\t (match_operand:SI 2 \"register_operand\" \"r\"))\n+\t (const_int 0)))\n+   (set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(zero_extend:DI (and:SI (not:SI (match_dup 1)) (match_dup 2))))]\n+  \"\"\n+  \"bics\\\\t%w0, %w2, %w1\"\n+  [(set_attr \"v8type\" \"logics\")\n+   (set_attr \"mode\" \"SI\")])\n+\n (define_insn \"*<LOGICAL:optab>_one_cmpl_<SHIFT:optab><mode>3\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=r\")\n \t(LOGICAL:GPI (not:GPI\n@@ -2758,6 +2787,43 @@\n   [(set_attr \"v8type\" \"logic_shift\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+(define_insn \"*and_one_cmpl_<SHIFT:optab><mode>3_compare0\"\n+  [(set (reg:CC_NZ CC_REGNUM)\n+\t(compare:CC_NZ\n+\t (and:GPI (not:GPI\n+\t\t   (SHIFT:GPI\n+\t\t    (match_operand:GPI 1 \"register_operand\" \"r\")\n+\t\t    (match_operand:QI 2 \"aarch64_shift_imm_<mode>\" \"n\")))\n+\t\t  (match_operand:GPI 3 \"register_operand\" \"r\"))\n+\t (const_int 0)))\n+   (set (match_operand:GPI 0 \"register_operand\" \"=r\")\n+\t(and:GPI (not:GPI\n+\t\t  (SHIFT:GPI\n+\t\t   (match_dup 1) (match_dup 2))) (match_dup 3)))]\n+  \"\"\n+  \"bics\\\\t%<w>0, %<w>3, %<w>1, <SHIFT:shift> %2\"\n+  [(set_attr \"v8type\" \"logics_shift\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n+;; zero_extend version of above\n+(define_insn \"*and_one_cmpl_<SHIFT:optab>si3_compare0_uxtw\"\n+  [(set (reg:CC_NZ CC_REGNUM)\n+\t(compare:CC_NZ\n+\t (and:SI (not:SI\n+\t\t  (SHIFT:SI\n+\t\t   (match_operand:SI 1 \"register_operand\" \"r\")\n+\t\t   (match_operand:QI 2 \"aarch64_shift_imm_si\" \"n\")))\n+\t\t (match_operand:SI 3 \"register_operand\" \"r\"))\n+\t (const_int 0)))\n+   (set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(zero_extend:DI (and:SI\n+\t\t\t (not:SI\n+\t\t\t  (SHIFT:SI (match_dup 1) (match_dup 2))) (match_dup 3))))]\n+  \"\"\n+  \"bics\\\\t%w0, %w3, %w1, <SHIFT:shift> %2\"\n+  [(set_attr \"v8type\" \"logics_shift\")\n+   (set_attr \"mode\" \"SI\")])\n+\n (define_insn \"clz<mode>2\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=r\")\n \t(clz:GPI (match_operand:GPI 1 \"register_operand\" \"r\")))]"}, {"sha": "4c7a5b353a5107e1096d17bbe99f64aca883aa9d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add3c9653f4afdd353a546fa43fad17b3e2eda0a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add3c9653f4afdd353a546fa43fad17b3e2eda0a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=add3c9653f4afdd353a546fa43fad17b3e2eda0a", "patch": "@@ -1,3 +1,8 @@\n+2013-05-02  Ian Bolton  <ian.bolton@arm.com>\n+\n+\t* gcc.target/aarch64/bics_1.c: New test.\n+\t* gcc.target/aarch64/bics_2.c: Likewise.\n+\n 2013-05-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/57131"}, {"sha": "d62ea9a6532880a3a63a4130dff92a2ab2246aff", "filename": "gcc/testsuite/gcc.target/aarch64/bics_1.c", "status": "added", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add3c9653f4afdd353a546fa43fad17b3e2eda0a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbics_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add3c9653f4afdd353a546fa43fad17b3e2eda0a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbics_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbics_1.c?ref=add3c9653f4afdd353a546fa43fad17b3e2eda0a", "patch": "@@ -0,0 +1,107 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 --save-temps -fno-inline\" } */\n+\n+extern void abort (void);\n+\n+int\n+bics_si_test1 (int a, int b, int c)\n+{\n+  int d = a & ~b;\n+\n+  /* { dg-final { scan-assembler-times \"bics\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+\" 2 } } */\n+  if (d == 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+int\n+bics_si_test2 (int a, int b, int c)\n+{\n+  int d = a & ~(b << 3);\n+\n+  /* { dg-final { scan-assembler \"bics\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+, lsl 3\" } } */\n+  if (d == 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+typedef long long s64;\n+\n+s64\n+bics_di_test1 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a & ~b;\n+\n+  /* { dg-final { scan-assembler-times \"bics\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+\" 2 } } */\n+  if (d == 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+s64\n+bics_di_test2 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a & ~(b << 3);\n+\n+  /* { dg-final { scan-assembler \"bics\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+, lsl 3\" } } */\n+  if (d == 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+int\n+main ()\n+{\n+  int x;\n+  s64 y;\n+\n+  x = bics_si_test1 (29, ~4, 5);\n+  if (x != ((29 & 4) + ~4 + 5))\n+    abort ();\n+\n+  x = bics_si_test1 (5, ~2, 20);\n+  if (x != 25)\n+    abort ();\n+\n+  x = bics_si_test2 (35, ~4, 5);\n+  if (x != ((35 & ~(~4 << 3)) + ~4 + 5))\n+    abort ();\n+\n+  x = bics_si_test2 (96, ~2, 20);\n+  if (x != 116)\n+    abort ();\n+\n+  y = bics_di_test1 (0x130000029ll,\n+                     ~0x320000004ll,\n+                     0x505050505ll);\n+\n+  if (y != ((0x130000029ll & 0x320000004ll) + ~0x320000004ll + 0x505050505ll))\n+    abort ();\n+\n+  y = bics_di_test1 (0x5000500050005ll,\n+                     ~0x2111211121112ll,\n+                     0x0000000002020ll);\n+  if (y != 0x5000500052025ll)\n+    abort ();\n+\n+  y = bics_di_test2 (0x130000029ll,\n+                     ~0x064000008ll,\n+                     0x505050505ll);\n+  if (y != ((0x130000029ll & ~(~0x064000008ll << 3))\n+\t    + ~0x064000008ll + 0x505050505ll))\n+    abort ();\n+\n+  y = bics_di_test2 (0x130002900ll,\n+                     ~0x088000008ll,\n+                     0x505050505ll);\n+  if (y != (0x130002900ll + 0x505050505ll))\n+    abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "e33c748ff6b3614ab4b6398024c3a43b2738a248", "filename": "gcc/testsuite/gcc.target/aarch64/bics_2.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add3c9653f4afdd353a546fa43fad17b3e2eda0a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbics_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add3c9653f4afdd353a546fa43fad17b3e2eda0a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbics_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbics_2.c?ref=add3c9653f4afdd353a546fa43fad17b3e2eda0a", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 --save-temps -fno-inline\" } */\n+\n+extern void abort (void);\n+\n+int\n+bics_si_test1 (int a, int b, int c)\n+{\n+  int d = a & ~b;\n+\n+  /* { dg-final { scan-assembler-not \"bics\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+\" } } */\n+  /* { dg-final { scan-assembler-times \"bic\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+\" 2 } } */\n+  if (d <= 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+int\n+bics_si_test2 (int a, int b, int c)\n+{\n+  int d = a & ~(b << 3);\n+\n+  /* { dg-final { scan-assembler-not \"bics\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+, lsl 3\" } } */\n+  /* { dg-final { scan-assembler \"bic\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+, lsl 3\" } } */\n+  if (d <= 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+typedef long long s64;\n+\n+s64\n+bics_di_test1 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a & ~b;\n+\n+  /* { dg-final { scan-assembler-not \"bics\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+\" } } */\n+  /* { dg-final { scan-assembler-times \"bic\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+\" 2 } } */\n+  if (d <= 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+s64\n+bics_di_test2 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a & ~(b << 3);\n+\n+  /* { dg-final { scan-assembler-not \"bics\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+, lsl 3\" } } */\n+  /* { dg-final { scan-assembler \"bic\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+, lsl 3\" } } */\n+  if (d <= 0)\n+    return a + c;\n+  else\n+    return b + d + c;\n+}\n+\n+int\n+main ()\n+{\n+  int x;\n+  s64 y;\n+\n+  x = bics_si_test1 (29, ~4, 5);\n+  if (x != ((29 & 4) + ~4 + 5))\n+    abort ();\n+\n+  x = bics_si_test1 (5, ~2, 20);\n+  if (x != 25)\n+    abort ();\n+\n+  x = bics_si_test2 (35, ~4, 5);\n+  if (x != ((35 & ~(~4 << 3)) + ~4 + 5))\n+    abort ();\n+\n+  x = bics_si_test2 (96, ~2, 20);\n+  if (x != 116)\n+    abort ();\n+\n+  y = bics_di_test1 (0x130000029ll,\n+                     ~0x320000004ll,\n+                     0x505050505ll);\n+\n+  if (y != ((0x130000029ll & 0x320000004ll) + ~0x320000004ll + 0x505050505ll))\n+    abort ();\n+\n+  y = bics_di_test1 (0x5000500050005ll,\n+                     ~0x2111211121112ll,\n+                     0x0000000002020ll);\n+  if (y != 0x5000500052025ll)\n+    abort ();\n+\n+  y = bics_di_test2 (0x130000029ll,\n+                     ~0x064000008ll,\n+                     0x505050505ll);\n+  if (y != ((0x130000029ll & ~(~0x064000008ll << 3))\n+\t    + ~0x064000008ll + 0x505050505ll))\n+    abort ();\n+\n+  y = bics_di_test2 (0x130002900ll,\n+                     ~0x088000008ll,\n+                     0x505050505ll);\n+  if (y != (0x130002900ll + 0x505050505ll))\n+    abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-saved-temps } } */"}]}