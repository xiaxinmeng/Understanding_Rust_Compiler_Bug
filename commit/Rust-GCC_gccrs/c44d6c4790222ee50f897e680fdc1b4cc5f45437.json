{"sha": "c44d6c4790222ee50f897e680fdc1b4cc5f45437", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ0ZDZjNDc5MDIyMmVlNTBmODk3ZTY4MGZkYzFiNGNjNWY0NTQzNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-10-01T21:34:02Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-10-01T21:34:02Z"}, "message": "i386.md (*ashl<mode>3_mask): New insn_and_split pattern.\n\n\t* config/i386/i386.md (*ashl<mode>3_mask): New insn_and_split pattern.\n\t(*<shiftrt_insn><mode>3_mask): Ditto.\n\t(*<rotate_insn><mode>3_mask): Ditto.\n\ntestsuite/ChangeLog:\n\n\t* gcc.target/i386/shift_mask.c: New test.\n\nFrom-SVN: r164895", "tree": {"sha": "0046f1f62ef7d973d2aa00976e0d3df1536d6ac1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0046f1f62ef7d973d2aa00976e0d3df1536d6ac1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c44d6c4790222ee50f897e680fdc1b4cc5f45437", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c44d6c4790222ee50f897e680fdc1b4cc5f45437", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c44d6c4790222ee50f897e680fdc1b4cc5f45437", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c44d6c4790222ee50f897e680fdc1b4cc5f45437/comments", "author": null, "committer": null, "parents": [{"sha": "cdb388c24a3f806575c3124c3c47b8515a6678bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdb388c24a3f806575c3124c3c47b8515a6678bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdb388c24a3f806575c3124c3c47b8515a6678bf"}], "stats": {"total": 240, "additions": 168, "deletions": 72}, "files": [{"sha": "b7c2e646b5a328fa61e2ff662d295e0de412dd49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 30, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c44d6c4790222ee50f897e680fdc1b4cc5f45437/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c44d6c4790222ee50f897e680fdc1b4cc5f45437/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c44d6c4790222ee50f897e680fdc1b4cc5f45437", "patch": "@@ -1,3 +1,9 @@\n+2010-10-01  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*ashl<mode>3_mask): New insn_and_split pattern.\n+\t(*<shiftrt_insn><mode>3_mask): Ditto.\n+\t(*<rotate_insn><mode>3_mask): Ditto.\n+\n 2010-10-01  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR tree-optimization/44716\n@@ -7,8 +13,7 @@\n 2010-10-01  Nick Clifton  <nickc@redhat.com>\n \n \t* common.opt: Add -fcombine-stack-adjustments.\n-\t* opts.c (decode_options): Enable -fcombine-stack-adjustments at\n-\t-O1.\n+\t* opts.c (decode_options): Enable -fcombine-stack-adjustments at -O1.\n \t* combine-stack-adj.c (gate_handle_stack_adjustments): Check\n \tflag_combine_stack_adjustments.\n \t* doc/invoke.texi: Document the new option.\n@@ -286,8 +291,9 @@\n \n 2010-09-30  Sebastian Pop  <sebastian.pop@amd.com>\n \n-\t* graphite-clast-to-gimple.c (max_signed_precision_type): Remove the call\n-\tto lang_hooks.types.type_for_size.  Call build_nonstandard_integer_type.\n+\t* graphite-clast-to-gimple.c (max_signed_precision_type): Remove\n+\tthe call to lang_hooks.types.type_for_size.  Call\n+\tbuild_nonstandard_integer_type.\n \n 2010-09-30  Riyadh Baghdadi <baghdadi.mr@gmail.com>\n \n@@ -304,8 +310,8 @@\n \t(print_pdr_access_layout): Updated to support OpenScop format.\n \t(print_pdr): Same.\n \t(openscop_print_pbb_domain): New.\n-\t(print_pbb_body): Added a parameter to allow indicating that pbb_body is\n-\tnot provided.\n+\t(print_pbb_body): Added a parameter to allow indicating that pbb_body\n+\tis not provided.\n \t(print_pbb): Updated to call the new print_pbb_body.\n \t(openscop_print_scop_context): New.\n \t(print_scop_header): New.\n@@ -351,8 +357,7 @@\n \t* Makefile.in (build/gen%$(build_exeext)): Move rule after all\n \tspecial-casing for generators and turn into ...\n \t((genprog:%=build/gen%$(build_exeext))): ... this static pattern\n-\trule, for better error messages in case of toplevel dependency\n-\terrors.\n+\trule, for better error messages in case of toplevel dependency errors.\n \t(genprog): Add hooks, rename to ...\n \t(genprogerr): ... this, and let genprog also contain check,\n \tchecksum, condmd.\n@@ -361,16 +366,15 @@\n \t(build/genhooks$(build_exeext)): Remove now-unneeded dependency.\n \n 2010-09-30  Jonathan Wakely  <jwakely.gcc@gmail.com>\n-            Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* doc/install.texi: Suggest using LD_LIBRARY_PATH to find libs\n \tfor GMP, MPFR and MPC.\n \n 2010-09-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config/sparc/sparc.opt (mimpure-text): Move ...\n-\t* config/sol2.opt: ... here.\n-\tCorrect description.\n+\t* config/sol2.opt: ... here.  Correct description.\n \t* config.gcc (*-*-solaris2*): Add sol2.opt to extra_options.\n \t* doc/invoke.texi (Option Summary, SPARC Options): Move\n \t-mimpure-text, -mno-impure-text, -threads, -pthreads, -pthread ...\n@@ -460,8 +464,7 @@\n \t* opts.c (common_handle_option, lang_handle_option,\n \ttarget_handle_option): Take gcc_options parameter.  Assert that it\n \tis &global_options.\n-\t(read_cmdline_options): Pass &global_options to\n-\tread_cmdline_option.\n+\t(read_cmdline_options): Pass &global_options to read_cmdline_option.\n \t(print_filtered_help): Use option_flag_var.  Pass &global_options\n \tto option_enabled.\n \t(common_handle_option): Use option_flag_var.\n@@ -494,8 +497,7 @@\n \n \t* c-parser.c (c_lex_one_token): When finding a CPP_AT_NAME\n \tObjective-C token, map RID_CLASS to RID_AT_CLASS and similar.\n-\t(c_parser_external_declaration): Use RID_AT_CLASS\n-\tinstead of RID_CLASS.\n+\t(c_parser_external_declaration): Use RID_AT_CLASS instead of RID_CLASS.\n \t(c_parser_objc_class_declaration): Same change.\n \t(c_parser_objc_try_catch_statement): Use RID_AT_TRY instead of\n \tRID_TRY and RID_AT_CATCH instead of RID_CATCH.\n@@ -531,8 +533,7 @@\n 2010-09-29  Bernd Schmidt  <bernds@codesourcery.com>\n \n \tPR target/40457\n-\t* postreload.c (move2add_use_add2_insn): Use full_costs for\n-\tcomparison.\n+\t* postreload.c (move2add_use_add2_insn): Use full_costs for comparison.\n \t(move2add_use_add3_insn): Likewise.\n \t(reload_cse_move2add): Likewise.\n \t* rtlanal.c (get_full_rtx_cost): New function.\n@@ -553,8 +554,7 @@\n \n 2010-09-29  Jack Howarth <howarth@bromo.med.uc.edu>\n \n-\t* varasm.c (assemble_alias): Add error message for\n-\tunsupported ifunc.\n+\t* varasm.c (assemble_alias): Add error message for unsupported ifunc.\n \n 2010-09-29  Mike Stump  <mikestump@comcast.net>\n \n@@ -589,8 +589,7 @@\n 2010-09-29  Joseph Myers  <joseph@codesourcery.com>\n \n \t* optc-gen.awk: Generate global_options initializer instead of\n-\tindividual variables.  Add x_ prefix to names of structure\n-\tmembers.\n+\tindividual variables.  Add x_ prefix to names of structure members.\n \t* opth-gen.awk: Generate gcc_options structure.  Add x_ prefix to\n \tnames of structure members.\n \t* doc/tm.texi.in (HARD_FRAME_POINTER_IS_FRAME_POINTER,\n@@ -599,8 +598,7 @@\n \t* alias.c: Use HARD_FRAME_POINTER_IS_FRAME_POINTER\n \t* builtins.c: Use HARD_FRAME_POINTER_IS_ARG_POINTER.\n \t* c-parser.c (disable_extension_diagnostics,\n-\trestore_extension_diagnostics): Update names of cpp_options\n-\tmembers.\n+\trestore_extension_diagnostics): Update names of cpp_options members.\n \t* combine.c: Use HARD_FRAME_POINTER_IS_FRAME_POINTER\n \t* common.opt (fcompare-debug-second): Don't use Var.\n \t* config/alpha/alpha.h (target_flags): Remove.\n@@ -658,8 +656,8 @@\n 2010-09-29  Hariharan Sandanagobalane <hariharan@picochip.com>\n \n \t* config/picochip/picochip.c (picochip_output_internal_label):\n-\t  This function can now be called for debug CFI labels, which can come in\n-\t  the middle of a vliw instruction. Postpone until end of vliw.\n+\tThis function can now be called for debug CFI labels, which can come\n+\tin the middle of a vliw instruction.  Postpone until end of vliw.\n \n 2010-09-29  Richard Guenther  <rguenther@suse.de>\n \n@@ -771,7 +769,7 @@\n \t(TARGET_UNWIND_INFO): Remove.\n \n \t* config/pa/pa.c (pa_option_override): Use targetm.except_unwind_info.\n-\t\n+\n 2010-09-28  Iain Sandoe  <iains@gcc.gnu.org>\n \n \t* c-parser.c (c_parser_objc_class_definition): Adjust prototype.\n@@ -788,13 +786,12 @@\n \t* toplev.h (save_decoded_options, save_decoded_options_count):\n \tNew global variables.\n \t* toplev.c (save_decoded_options, save_decoded_options_count):\n-\texport variables.\n+\tExport variables.\n \n 2010-09-28  Ian Lance Taylor  <iant@google.com>\n \n \t* config/i386/i386.c (ix86_supports_split_stack): Test\n-\tHAVE_GAS_CFI_PERSONALITY_DIRECTIVE rather than\n-\tdwarf2out_do_cfi_asm.\n+\tHAVE_GAS_CFI_PERSONALITY_DIRECTIVE rather than dwarf2out_do_cfi_asm.\n \n 2010-09-28  Ian Lance Taylor  <iant@google.com>\n \n@@ -987,7 +984,7 @@\n \tRadar 4229905\n \t* c-typeck.c (build_conditional_expr): Call objc_have_common_type when\n \tlooking for objective-c common pointer types.\n-\t\n+\n \t2005-06-22  Ziemowit Laski  <zlaski@apple.com>\n \n \tRadar 4154928"}, {"sha": "87bcd27537e5c5b2063048597fa18e9f7abf3eef", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c44d6c4790222ee50f897e680fdc1b4cc5f45437/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c44d6c4790222ee50f897e680fdc1b4cc5f45437/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=c44d6c4790222ee50f897e680fdc1b4cc5f45437", "patch": "@@ -9151,6 +9151,29 @@\n   DONE;\n })\n \n+;; Avoid useless masking of count operand.\n+\n+(define_insn_and_split \"*ashl<mode>3_mask\"\n+  [(set (match_operand:SWI48 0 \"nonimmediate_operand\" \"=rm\")\n+\t(ashift:SWI48\n+\t  (match_operand:SWI48 1 \"nonimmediate_operand\" \"0\")\n+\t  (subreg:QI\n+\t    (and:SI\n+\t      (match_operand:SI 2 \"register_operand\" \"c\")\n+\t      (match_operand:SI 3 \"const_int_operand\" \"n\")) 0)))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"ix86_binary_operator_ok (ASHIFT, <MODE>mode, operands)\n+   && (INTVAL (operands[3]) & (GET_MODE_BITSIZE (<MODE>mode)-1))\n+      == GET_MODE_BITSIZE (<MODE>mode)-1\"\n+  \"#\"\n+  \"&& 1\"\n+  [(parallel [(set (match_dup 0)\n+\t\t   (ashift:SWI48 (match_dup 1) (match_dup 2)))\n+\t      (clobber (reg:CC FLAGS_REG))])]\n+  \"operands[2] = simplify_gen_subreg (QImode, operands[2], SImode, 0);\"\n+  [(set_attr \"type\" \"ishift\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n (define_insn \"*ashl<mode>3_1\"\n   [(set (match_operand:SWI48 0 \"nonimmediate_operand\" \"=rm,r\")\n \t(ashift:SWI48 (match_operand:SWI48 1 \"nonimmediate_operand\" \"0,l\")\n@@ -9690,6 +9713,29 @@\n   \"\"\n   \"ix86_expand_binary_operator (<CODE>, <MODE>mode, operands); DONE;\")\n \n+;; Avoid useless masking of count operand.\n+\n+(define_insn_and_split \"*<shiftrt_insn><mode>3_mask\"\n+  [(set (match_operand:SWI48 0 \"nonimmediate_operand\" \"=rm\")\n+\t(any_shiftrt:SWI48\n+\t  (match_operand:SWI48 1 \"nonimmediate_operand\" \"0\")\n+\t  (subreg:QI\n+\t    (and:SI\n+\t      (match_operand:SI 2 \"register_operand\" \"c\")\n+\t      (match_operand:SI 3 \"const_int_operand\" \"n\")) 0)))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\n+   && (INTVAL (operands[3]) & (GET_MODE_BITSIZE (<MODE>mode)-1))\n+      == GET_MODE_BITSIZE (<MODE>mode)-1\"\n+  \"#\"\n+  \"&& 1\"\n+  [(parallel [(set (match_dup 0)\n+\t\t   (any_shiftrt:SWI48 (match_dup 1) (match_dup 2)))\n+\t      (clobber (reg:CC FLAGS_REG))])]\n+  \"operands[2] = simplify_gen_subreg (QImode, operands[2], SImode, 0);\"\n+  [(set_attr \"type\" \"ishift\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n (define_insn_and_split \"*<shiftrt_insn><mode>3_doubleword\"\n   [(set (match_operand:DWI 0 \"register_operand\" \"=r\")\n \t(any_shiftrt:DWI (match_operand:DWI 1 \"register_operand\" \"0\")\n@@ -10042,6 +10088,29 @@\n   \"\"\n   \"ix86_expand_binary_operator (<CODE>, <MODE>mode, operands); DONE;\")\n \n+;; Avoid useless masking of count operand.\n+\n+(define_insn_and_split \"*<rotate_insn><mode>3_mask\"\n+  [(set (match_operand:SWI48 0 \"nonimmediate_operand\" \"=rm\")\n+\t(any_rotate:SWI48\n+\t  (match_operand:SWI48 1 \"nonimmediate_operand\" \"0\")\n+\t  (subreg:QI\n+\t    (and:SI\n+\t      (match_operand:SI 2 \"register_operand\" \"c\")\n+\t      (match_operand:SI 3 \"const_int_operand\" \"n\")) 0)))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\n+   && (INTVAL (operands[3]) & (GET_MODE_BITSIZE (<MODE>mode)-1))\n+      == GET_MODE_BITSIZE (<MODE>mode)-1\"\n+  \"#\"\n+  \"&& 1\"\n+  [(parallel [(set (match_dup 0)\n+\t\t   (any_rotate:SWI48 (match_dup 1) (match_dup 2)))\n+\t      (clobber (reg:CC FLAGS_REG))])]\n+  \"operands[2] = simplify_gen_subreg (QImode, operands[2], SImode, 0);\"\n+  [(set_attr \"type\" \"rotate\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n ;; Implement rotation using two double-precision\n ;; shift instructions and a scratch register.\n "}, {"sha": "1abe4097f366a81a2860d051e330a54d4afdade7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 41, "deletions": 42, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c44d6c4790222ee50f897e680fdc1b4cc5f45437/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c44d6c4790222ee50f897e680fdc1b4cc5f45437/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c44d6c4790222ee50f897e680fdc1b4cc5f45437", "patch": "@@ -1,3 +1,7 @@\n+2010-10-01  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/shift_mask.c: New test.\n+\n 2010-10-01  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/45854\n@@ -7,7 +11,7 @@\n \n \t* gcc.c-torture/execute/cmpsf-1.c: Rename FLOAT_{MIN,MAX} to\n \t__FLT_{MIN,MAX}__.\n-\t\n+\n 2010-09-30  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/45758\n@@ -206,8 +210,8 @@\n \tMerge from 'apple/trunk' branch on FSF servers (test method-20.m\n \tfrom the branch renamed to method-20b.m to avoid clashes).\n \n-\t2005-08-23  Stuart Hastings <stuart@apple.com>\n-\t            Ziemowit Laski  <zlaski@apple.com>\n+\t2005-08-23  Stuart Hastings  <stuart@apple.com>\n+\t\t    Ziemowit Laski  <zlaski@apple.com>\n \n \tRadar 4209854\n \t* obj-c++.dg/method-23.mm: New.\n@@ -263,8 +267,7 @@\n 2010-09-27  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tPR objc/45763\n-\t* objc.dg/encode-1.m: Execute the test with the GNU runtime as\n-\twell.\n+\t* objc.dg/encode-1.m: Execute the test with the GNU runtime as well.\n \n 2010-09-27  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n@@ -279,28 +282,25 @@\n \tChangelogs are below.\n \n \t* objc.dg/encode-6.m: Execute the test only with the GNU runtime.\n-\t* objc.dg/encode-6-next.m: New file (from encode-6.m in the\n-\tbranch).\n-\t* objc.dg/encode-7-next.m: New file (from encode-7.m in the\n-\tbranch).\n+\t* objc.dg/encode-6-next.m: New file (from encode-6.m in the branch).\n+\t* objc.dg/encode-7-next.m: New file (from encode-7.m in the branch).\n \t* objc.dg/encode-7-next-64bit.m: New file (from encode-7-64bit.m\n-\tin the branch).\t\n+\tin the branch).\n \t* objc.dg/proto-qual-1.m: Test the 3.3 ABI on NeXT (from\n \tproto-qual-1.m in the branch) and the normal ABI on GNU.\n \t* objc.dg/threedotthree-abi-1.m: New file (from the branch).  Run\n \tthe test only with the NeXT runtime.\n \t* obj-c++/encode-1.mm: Execute the test only with the GNU runtime.\n-\t* obj-c++/encode-1-next.mm: New file (from encode-1.mm in the\n-\tbranch).\n+\t* obj-c++/encode-1-next.mm: New file (from encode-1.mm in the branch).\n \t* obj-c++.dg/threedotthree-abi-1.mm: New file (from the branch).\n \tRun the test only with the NeXT runtime.\n-\t\n+\n \t2006-03-30 Fariborz Jahanian <fjahanian@apple.com>\n \n \tRadar 4492973\n \t* objc.dg/encode-7-64bit.m: New.\n \t* objc.dg/encode-7.m: Skip if -m64.\n-\t\n+\n \t2005-10-19  Fariborz Jahanian <fjahanian@apple.com>\n \n \tRadar 4301047\n@@ -319,12 +319,12 @@\n \n \tMerge from 'apple/trunk' branch on FSF servers.  Renamed\n \tconst-str-12.m to constr-str-12b.m to avoid conflicts.\n-\t\n+\n \t2005-12-15  Fariborz Jahanian <fjahanian@apple.com>\n \n \tRadar 4229905\n \t* obj-c++.dg/warn5.mm: New\n-\t\n+\n \t2005-06-22  Ziemowit Laski  <zlaski@apple.com>\n \n \tRadar 4154928\n@@ -363,7 +363,7 @@\n \n 2010-09-24  Steven G. Kargl  < kargl@gcc.gnu.org>\n \n-\t* testsuite/gfortran.dg/operator_c1202.f90: New test.\n+\t* gfortran.dg/operator_c1202.f90: New test.\n \n 2010-09-24  Jan Hubicka  <jh@suse.cz>\n \n@@ -427,7 +427,6 @@\n \tPR fortran/45744\n \t* gfortran.dg/dependency_36.f90:  New test.\n \n->>>>>>> .r164755\n 2010-09-23  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/pad-1.c: Remove -S from dg-options.\n@@ -514,7 +513,7 @@\n 2010-09-22  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n \n \t* lib/scanasm.exp(dg-function-on-line): Permit .fnstart to appear in\n-        the regexp pattern between the expected label and location string.\n+\tthe regexp pattern between the expected label and location string.\n \n 2010-09-22  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n \n@@ -901,8 +900,8 @@\n 2010-09-10  Jack Howarth <howarth@bromo.med.uc.edu>\n \n \tPR target/42070\n-\t* gcc/testsuite/lib/profopt.exp: Prune warnings on execname2 compile.\n-\t* gcc/testsuite/lib/prune.exp: Prune \"can't add line info\" warnings.\n+\t* lib/profopt.exp: Prune warnings on execname2 compile.\n+\t* lib/prune.exp: Prune \"can't add line info\" warnings.\n \n 2010-09-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n@@ -1026,10 +1025,10 @@\n \t* gcc.dg/attr-ifunc-3.c: New.\n \t* gcc.dg/attr-ifunc-4.c: New.\n \t* gcc.dg/attr-ifunc-5.c: New.\n-\t* testsuite/g++.dg/ext/attr-ifunc-1.C: New.\n-\t* testsuite/g++.dg/ext/attr-ifunc-2.C: New.\n-\t* testsuite/g++.dg/ext/attr-ifunc-3.C: New.\n-\t* testsuite/g++.dg/ext/attr-ifunc-4.C: New.\n+\t* g++.dg/ext/attr-ifunc-1.C: New.\n+\t* g++.dg/ext/attr-ifunc-2.C: New.\n+\t* g++.dg/ext/attr-ifunc-3.C: New.\n+\t* g++.dg/ext/attr-ifunc-4.C: New.\n \n 2010-09-09  Vladimir Makarov  <vmakarov@redhat.com>\n \n@@ -1129,7 +1128,7 @@\n \tPR target/42313\n \tPR target/44651\n \t* gcc.target/i386/builtin-unreachable.c: Don't skip on darwin.\n-\t* gcc/testsuite/gcc.dg/stack-usage-1.c: Use default on i386/Darwin.\n+\t* gcc.dg/stack-usage-1.c: Use default on i386/Darwin.\n \n 2010-09-07  Mikael Morin  <mikael@gcc.gnu.org>\n \n@@ -1580,13 +1579,13 @@\n 2010-08-27  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/33197\n-\t* gcc/testsuite/gfortran.dg/norm2_1.f90: New.\n-\t* gcc/testsuite/gfortran.dg/norm2_2.f90: New.\n-\t* gcc/testsuite/gfortran.dg/norm2_3.f90: New.\n-\t* gcc/testsuite/gfortran.dg/norm2_4.f90: New.\n-\t* gcc/testsuite/gfortran.dg/parity_1.f90: New.\n-\t* gcc/testsuite/gfortran.dg/parity_2.f90: New.\n-\t* gcc/testsuite/gfortran.dg/parity_3.f90: New.\n+\t* gfortran.dg/norm2_1.f90: New.\n+\t* gfortran.dg/norm2_2.f90: New.\n+\t* gfortran.dg/norm2_3.f90: New.\n+\t* gfortran.dg/norm2_4.f90: New.\n+\t* gfortran.dg/parity_1.f90: New.\n+\t* gfortran.dg/parity_2.f90: New.\n+\t* gfortran.dg/parity_3.f90: New.\n \n 2010-08-27  Janus Weil  <janus@gcc.gnu.org>\n \n@@ -2387,7 +2386,7 @@\n 2010-07-30  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \tPR c++/45112\n-\t* testsuite/g++.dg/pr45112.C: New test.\n+\t* g++.dg/pr45112.C: New test.\n \n 2010-07-30  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -2881,7 +2880,7 @@\n 2010-07-22  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/44891\n-\t* testsuite/gcc.c-torture/compile/pr44891.c: New test.\n+\t* gcc.c-torture/compile/pr44891.c: New test.\n \n 2010-07-22  Richard Guenther  <rguenther@suse.de>\n \n@@ -4222,7 +4221,7 @@\n \n 2010-06-28  Martin Jambor  <mjambor@suse.cz>\n \n-\t* testsuite/gcc.dg/ipa/ipa-sra-6.c: New test.\n+\t* gcc.dg/ipa/ipa-sra-6.c: New test.\n \n 2010-06-28  Jan Hubicka  <jh@suse.cz>\n \n@@ -4340,7 +4339,7 @@\n \n 2010-06-25  Jan Hubicka  <jh@suse.cz>\n \n-\t* testsuite/gcc.dg/tree-ssa/ipa-split-1.c\n+\t* gcc.dg/tree-ssa/ipa-split-1.c\n \n 2010-06-25  Martin Jambor  <mjambor@suse.cz>\n \n@@ -4775,11 +4774,11 @@\n \n 2010-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n-\t* testsuite/gfortran.dg/mvbits_9.f90: New test.\n-\t* testsuite/gfortran.dg/ibset_1.f90: Ditto.\n-\t* testsuite/gfortran.dg/ibits_1.f90: Ditto.\n-\t* testsuite/gfortran.dg/btest_1.f90: Ditto.\n-\t* testsuite/gfortran.dg/ibclr_1.f90: Ditto.\n+\t* gfortran.dg/mvbits_9.f90: New test.\n+\t* gfortran.dg/ibset_1.f90: Ditto.\n+\t* gfortran.dg/ibits_1.f90: Ditto.\n+\t* gfortran.dg/btest_1.f90: Ditto.\n+\t* gfortran.dg/ibclr_1.f90: Ditto.\n \n 2010-06-09  Jason Merrill  <jason@redhat.com>\n "}, {"sha": "29c84bd1dffe741bf7bcc30c31d416d348d4c710", "filename": "gcc/testsuite/gcc.target/i386/shift_mask.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c44d6c4790222ee50f897e680fdc1b4cc5f45437/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fshift_mask.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c44d6c4790222ee50f897e680fdc1b4cc5f45437/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fshift_mask.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fshift_mask.c?ref=c44d6c4790222ee50f897e680fdc1b4cc5f45437", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int test_sal (int a, int c)\n+{\n+  return a << (c & 0x1f);\n+}\n+\n+int test_sar (int a, int c)\n+{\n+  return a >> (c & 0x1f);\n+}\n+\n+unsigned int test_shr (unsigned int a, int c)\n+{\n+  return a >> (c & 0x1f);\n+}\n+\n+unsigned int test_rol (unsigned int a, int c)\n+{\n+  int z = c & 0x1f;\n+  return (a << z) | (a >> (32 - z));\n+}\n+\n+unsigned int test_ror (unsigned int a, int c)\n+{\n+  int z = c & 0x1f;\n+  return (a >> z) | (a << (32 - z));\n+}\n+\n+/* { dg-final { scan-assembler-not \"and\" } } */"}]}