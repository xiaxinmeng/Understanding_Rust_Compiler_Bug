{"sha": "c5a6fc4557d005e18da25fbc5c9d44bf36a12289", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVhNmZjNDU1N2QwMDVlMThkYTI1ZmJjNWM5ZDQ0YmYzNmExMjI4OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-07-17T06:19:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-07-17T06:19:07Z"}, "message": "pt.c (tsubst, [...]): Fix getting complete args for a member template specialization.\n\n\t* pt.c (tsubst, case FUNCTION_DECL): Fix getting complete args for\n\ta member template specialization.\n\t* tree.c (ovl_member): Use decls_match to compare functions.\n\t* decl.c (decls_match): Check the context of a function.\n\nFrom-SVN: r21248", "tree": {"sha": "d05a1b05b8bf1555b61a5826d0c874dd2ba44bb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d05a1b05b8bf1555b61a5826d0c874dd2ba44bb7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5a6fc4557d005e18da25fbc5c9d44bf36a12289", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5a6fc4557d005e18da25fbc5c9d44bf36a12289", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5a6fc4557d005e18da25fbc5c9d44bf36a12289", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5a6fc4557d005e18da25fbc5c9d44bf36a12289/comments", "author": null, "committer": null, "parents": [{"sha": "f022f9bcfc83be98e0c6618354a0fc3f9b4df0de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f022f9bcfc83be98e0c6618354a0fc3f9b4df0de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f022f9bcfc83be98e0c6618354a0fc3f9b4df0de"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "d58646e644259735ab964ea4974a8a52530b47dd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a6fc4557d005e18da25fbc5c9d44bf36a12289/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a6fc4557d005e18da25fbc5c9d44bf36a12289/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c5a6fc4557d005e18da25fbc5c9d44bf36a12289", "patch": "@@ -1,5 +1,11 @@\n 1998-07-17  Jason Merrill  <jason@yorick.cygnus.com>\n \n+\t* pt.c (tsubst, case FUNCTION_DECL): Fix getting complete args for\n+\ta member template specialization.\n+\n+\t* tree.c (ovl_member): Use decls_match to compare functions.\n+\t* decl.c (decls_match): Check the context of a function.\n+\n \t* parse.y (primary): Use notype_unqualified_id instead of IDENTIFIER\n \tin Koenig lookup support rules.\n \t* semantics.c (finish_call_expr): Handle the new cases."}, {"sha": "274e875fbeb106cd31faee0902aed078177c061e", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a6fc4557d005e18da25fbc5c9d44bf36a12289/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a6fc4557d005e18da25fbc5c9d44bf36a12289/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=c5a6fc4557d005e18da25fbc5c9d44bf36a12289", "patch": "@@ -2464,6 +2464,11 @@ decls_match (newdecl, olddecl)\n       tree p1 = TYPE_ARG_TYPES (f1);\n       tree p2 = TYPE_ARG_TYPES (f2);\n \n+      if (DECL_REAL_CONTEXT (newdecl) != DECL_REAL_CONTEXT (olddecl)\n+\t  && ! (DECL_LANGUAGE (newdecl) == lang_c\n+\t\t&& DECL_LANGUAGE (olddecl) == lang_c))\n+\treturn 0;\n+\n       /* When we parse a static member function definition,\n \t we put together a FUNCTION_DECL which thinks its type\n \t is METHOD_TYPE.  Change that to FUNCTION_TYPE, and"}, {"sha": "e982c92822e35220f8cf003a4c196b0ed9e41363", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a6fc4557d005e18da25fbc5c9d44bf36a12289/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a6fc4557d005e18da25fbc5c9d44bf36a12289/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=c5a6fc4557d005e18da25fbc5c9d44bf36a12289", "patch": "@@ -4642,7 +4642,10 @@ tsubst (t, args, in_decl)\n \t    tmpl = DECL_TI_TEMPLATE (t);\n \n \t    /* Start by getting the innermost args.  */\n-\t    argvec = tsubst (DECL_TI_ARGS (t), args, in_decl);\n+\t    if (DECL_TEMPLATE_SPECIALIZATION (tmpl))\n+\t      argvec = args;\n+\t    else\n+\t      argvec = tsubst (DECL_TI_ARGS (t), args, in_decl);\n \n \t    if (DECL_TEMPLATE_INFO (tmpl))\n \t      argvec = complete_template_args (tmpl, argvec, 0);\n@@ -5728,11 +5731,11 @@ instantiate_template (tmpl, targ_ptr)\n \n   my_friendly_assert (TREE_CODE (tmpl) == TEMPLATE_DECL, 283);\n \n-  /* FIXME this won't work with member templates; we only have one level\n-     of args here.  */\n+  /* Check to see if we already have this specialization.  This does work\n+     for member template specializations; the list is set up from the\n+     tsubst TEMPLATE_DECL case when the containing class is instantiated.  */\n   if (DECL_FUNCTION_TEMPLATE_P (tmpl))\n     {\n-      /* Check to see if we already have this specialization.  */\n       tree spec = retrieve_specialization (tmpl, targ_ptr);\n       \n       if (spec != NULL_TREE)"}, {"sha": "2a5ad2b6d59a6c532df45098fefe9c0a50764089", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a6fc4557d005e18da25fbc5c9d44bf36a12289/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a6fc4557d005e18da25fbc5c9d44bf36a12289/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=c5a6fc4557d005e18da25fbc5c9d44bf36a12289", "patch": "@@ -1412,7 +1412,7 @@ ovl_member (fn, ovl)\n   if (!ovl || TREE_CODE (ovl) != OVERLOAD)\n     return 0;\n   for (; ovl; ovl = OVL_CHAIN (ovl))\n-    if (OVL_FUNCTION (ovl) == fn)\n+    if (decls_match (OVL_FUNCTION (ovl), fn))\n       return 1;\n   return 0;\n }"}]}