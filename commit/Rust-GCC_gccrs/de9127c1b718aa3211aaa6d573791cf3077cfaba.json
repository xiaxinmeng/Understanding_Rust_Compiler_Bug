{"sha": "de9127c1b718aa3211aaa6d573791cf3077cfaba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU5MTI3YzFiNzE4YWEzMjExYWFhNmQ1NzM3OTFjZjMwNzdjZmFiYQ==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "2000-02-07T21:40:18Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-02-07T21:40:18Z"}, "message": "instinit2.out: New file.\n\n\t* libjava.lang/instinit2.out: New file.\n\t* libjava.lang/instinit2.java: New file.\n\t* libjava.lang/instinit.out: New file.\n\t* libjava.lang/instinit.java: New file.\n\t* libjava.lang/anonarray2.out: New file.\n\t* libjava.lang/anonarray2.java: New file.\n\t* libjava.lang/anonarray.out: New file.\n\t* libjava.lang/anonarray.java: New file.\n\t* libjava.lang/nested_with_ctor.out: New file.\n\t* libjava.lang/nested_with_ctor.java: New file.\n\t* libjava.lang/anfi.out: New file.\n\t* libjava.lang/anfi.java: New file.\n\t* libjava.lang/stub.out: New file.\n\t* libjava.lang/stub.java: New file.\n\nFrom-SVN: r31841", "tree": {"sha": "d1562734258b08da4404122775e9377f33d5c697", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1562734258b08da4404122775e9377f33d5c697"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de9127c1b718aa3211aaa6d573791cf3077cfaba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de9127c1b718aa3211aaa6d573791cf3077cfaba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de9127c1b718aa3211aaa6d573791cf3077cfaba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de9127c1b718aa3211aaa6d573791cf3077cfaba/comments", "author": null, "committer": null, "parents": [{"sha": "f81f5a9db62671829304ae4acf4864327f5dfa1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f81f5a9db62671829304ae4acf4864327f5dfa1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f81f5a9db62671829304ae4acf4864327f5dfa1b"}], "stats": {"total": 330, "additions": 330, "deletions": 0}, "files": [{"sha": "31c5f4fbf0fbab4993c052871fb2fdd8c0bb6259", "filename": "libjava/testsuite/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FChangeLog?ref=de9127c1b718aa3211aaa6d573791cf3077cfaba", "patch": "@@ -1,3 +1,20 @@\n+2000-02-07  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* libjava.lang/instinit2.out: New file.\n+\t* libjava.lang/instinit2.java: New file.\n+\t* libjava.lang/instinit.out: New file.\n+\t* libjava.lang/instinit.java: New file.\n+\t* libjava.lang/anonarray2.out: New file.\n+\t* libjava.lang/anonarray2.java: New file.\n+\t* libjava.lang/anonarray.out: New file.\n+\t* libjava.lang/anonarray.java: New file.\n+\t* libjava.lang/nested_with_ctor.out: New file.\n+\t* libjava.lang/nested_with_ctor.java: New file.\n+\t* libjava.lang/anfi.out: New file.\n+\t* libjava.lang/anfi.java: New file.\n+\t* libjava.lang/stub.out: New file.\n+\t* libjava.lang/stub.java: New file.\n+\n 2000-01-30  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* libjava.lang/final_inner.java: New file."}, {"sha": "d9e7de752862ee46053189fb7be0f58ac301202c", "filename": "libjava/testsuite/libjava.lang/anfi.java", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fanfi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fanfi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2Fanfi.java?ref=de9127c1b718aa3211aaa6d573791cf3077cfaba", "patch": "@@ -0,0 +1,33 @@\n+// Class anfi\n+// Generated on Sat Jan 29 16:06:33 PST 2000\n+// Anonymous with access to outer context locals\n+\n+class anfi {\n+\n+    itf foo (final String s, final int i) {\n+        return new itf () {\n+            String buff = s+\" \"+i;\n+            public void setString (String s) { buff = s+\" \"+i; }\n+            public String getString () { return buff; }\n+        };\n+    }\n+\n+    void test () {\n+        itf x = foo (\"Hello\", 123);\n+        System.out.println (x.getString ());\n+        x.setString (\"Frinkahedron\");\n+        System.out.println (x.getString ());\n+    }\n+\n+    public static void main (String[] arg)\n+    {\n+        System.out.println (\"Testing class `anfi'...\");\n+        new anfi().test();\n+    }\n+}\n+\n+interface itf {\n+    void setString (String s);\n+    String getString();\n+    String buff = null;\n+}"}, {"sha": "52ac97cf9926c7c5b435a75fc1dcf7c2f1fb641e", "filename": "libjava/testsuite/libjava.lang/anfi.out", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fanfi.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fanfi.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2Fanfi.out?ref=de9127c1b718aa3211aaa6d573791cf3077cfaba", "patch": "@@ -0,0 +1,3 @@\n+Testing class `anfi'...\n+Hello 123\n+Frinkahedron 123"}, {"sha": "8239c51f9329c5a686e5c7ad7450ca337568b944", "filename": "libjava/testsuite/libjava.lang/anonarray.java", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fanonarray.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fanonarray.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2Fanonarray.java?ref=de9127c1b718aa3211aaa6d573791cf3077cfaba", "patch": "@@ -0,0 +1,22 @@\n+// Class anonarray\n+// Generated on Tue Feb  1 16:11:29 PST 2000\n+// Simple anonymous array, of primitive types.\n+\n+class anonarray {\n+\n+  static void foo (int [][] x) {\n+      for (int i = 0; i < x.length; i++)\n+          {\n+              for (int j = 0; j < x[i].length; j++)\n+                  System.out.print (x[i][j]);\n+              System.out.println();\n+          }\n+  }\n+  \n+  public static void main (String[] arg)\n+  {  \n+      foo (new int[][] {{2,3},{5,7}});\n+      System.out.println ((new int [][] {{11,13},{17,19}}).length);\n+      System.out.println ((new int [][] {{23,29},{31,37}})[0][1]);\n+  }\n+}"}, {"sha": "4ad3f56ef2f4d684c69f39909486bff277172196", "filename": "libjava/testsuite/libjava.lang/anonarray.out", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fanonarray.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fanonarray.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2Fanonarray.out?ref=de9127c1b718aa3211aaa6d573791cf3077cfaba", "patch": "@@ -0,0 +1,4 @@\n+23\n+57\n+2\n+29"}, {"sha": "46df5e71130de1e5c977858e834ff9e518947a94", "filename": "libjava/testsuite/libjava.lang/anonarray2.java", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fanonarray2.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fanonarray2.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2Fanonarray2.java?ref=de9127c1b718aa3211aaa6d573791cf3077cfaba", "patch": "@@ -0,0 +1,22 @@\n+// Class anonarray2\n+// Generated on Tue Feb  1 21:14:06 PST 2000\n+// Anonymous array, with a non primitive type.\n+\n+class anonarray2 {\n+\n+  static void foo (String [][] x) {\n+      for (int i = 0; i < x.length; i++)\n+          {\n+              for (int j = 0; j < x[i].length; j++)\n+                  System.out.print (x[i][j]);\n+              System.out.println();\n+          }\n+  }\n+\n+  public static void main (String[] arg)\n+  {\n+      foo (new String[][] {{\"2\",\"3\"},{\"5\",\"7\"}});\n+      System.out.println ((new String [][] {{\"11\",\"13\"},{\"17\",\"19\"}}).length);\n+      System.out.println ((new String [][] {{\"23\",\"29\"},{\"31\",\"37\"}})[0][1]);\n+  }\n+}"}, {"sha": "4ad3f56ef2f4d684c69f39909486bff277172196", "filename": "libjava/testsuite/libjava.lang/anonarray2.out", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fanonarray2.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fanonarray2.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2Fanonarray2.out?ref=de9127c1b718aa3211aaa6d573791cf3077cfaba", "patch": "@@ -0,0 +1,4 @@\n+23\n+57\n+2\n+29"}, {"sha": "9a02b6699bc0c6cccf4009bf867f33295ab35a8d", "filename": "libjava/testsuite/libjava.lang/instinit.java", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Finstinit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Finstinit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2Finstinit.java?ref=de9127c1b718aa3211aaa6d573791cf3077cfaba", "patch": "@@ -0,0 +1,22 @@\n+// Class instinit\n+// Generated on Wed Feb  2 12:31:16 PST 2000\n+// Simple instance initializer test case.\n+\n+class instinit extends foo {\n+\n+    String buffer = \"No Oink! Oink!\";\n+\n+    /* Instance initializer */\n+    {\n+        System.out.println (\"Oinking...\");\n+    }\n+    {\n+        buffer = \"Oink! Oink!\";\n+    }\n+  \n+    public static void main (String[] arg)\n+    {\n+        System.out.println (\"Testing class `instinit'...\");\n+        System.out.println (new instinit ().buffer);\n+    }\n+}"}, {"sha": "503af0fd62693d84ff0c20e0dd38065621ce880b", "filename": "libjava/testsuite/libjava.lang/instinit.out", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Finstinit.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Finstinit.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2Finstinit.out?ref=de9127c1b718aa3211aaa6d573791cf3077cfaba", "patch": "@@ -0,0 +1,4 @@\n+Testing class `instinit'...\n+Plain old boring foo\n+Oinking...\n+Oink! Oink!"}, {"sha": "4acb157fa640335fa9509ada21e958e0479b66e1", "filename": "libjava/testsuite/libjava.lang/instinit2.java", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Finstinit2.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Finstinit2.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2Finstinit2.java?ref=de9127c1b718aa3211aaa6d573791cf3077cfaba", "patch": "@@ -0,0 +1,31 @@\n+// Class ii2\n+// Generated on Wed Feb  2 17:52:49 PST 2000\n+// The instance initializer throws a checked exception. This is OK\n+// since the constructors declares it in its `throws' clause -- at\n+// least that's what the specs are saying.\n+\n+class ii2 {\n+\n+    String buffer = \"Oink Oink!\";\n+\n+    {\n+        System.out.println (\"Checking the oink...\");\n+        if (buffer != null)\n+            throw new Exception (\"It just oinked\");\n+    }\n+\n+    ii2 () throws Exception\n+    {\n+        System.out.println (\"Ctor\");\n+    }\n+\n+    public static void main (String[] arg)\n+    {\n+        System.out.println (\"Testing class `ii2'...\");\n+        try {\n+            System.out.println (new ii2 ().buffer);\n+        } catch (Exception e) {\n+            System.out.println (e.toString());\n+        }\n+    }\n+} "}, {"sha": "01efac10d7e39735daaacd40f1d8f5e688bc42af", "filename": "libjava/testsuite/libjava.lang/instinit2.out", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Finstinit2.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Finstinit2.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2Finstinit2.out?ref=de9127c1b718aa3211aaa6d573791cf3077cfaba", "patch": "@@ -0,0 +1,4 @@\n+Testing class `instinit2'...\n+Ctor\n+Checking the oink...\n+java.lang.Exception: It just oinked"}, {"sha": "4560dc3993ff1ff81db5ec0721454d8ceee5528b", "filename": "libjava/testsuite/libjava.lang/nested_with_ctor.java", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fnested_with_ctor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fnested_with_ctor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2Fnested_with_ctor.java?ref=de9127c1b718aa3211aaa6d573791cf3077cfaba", "patch": "@@ -0,0 +1,27 @@\n+// Class nested_with_ctor\n+// Generated on Mon Jan 31 18:31:47 PST 2000\n+// The nested class contains explicit constructors. Their argument\n+// lists should be augmented with the alias initializer values when\n+// the ctors are seen declared (as opposed to generated.)\n+\n+class nested_with_ctor {\n+  \n+  void fct(final String s, final int i)\n+  {\n+      class nested {\n+          String buffer = s+i;\n+          String getString () { return buffer; }\n+          nested (int i) { buffer = \"(int)\"+i; }\n+          nested () {}\n+      }\n+      nested x = new nested ();\n+      System.out.println (x.getString ());\n+      nested y = new nested (123);\n+      System.out.println (y.getString ());\n+  }\n+  public static void main (String[] arg)\n+  {\n+    System.out.println (\"Testing class `nested_with_ctor'...\");\n+    new nested_with_ctor ().fct (\"Yikes!\", 321);\n+  }\n+}"}, {"sha": "d130f1f88939edeb771e497485cc21324cae4beb", "filename": "libjava/testsuite/libjava.lang/nested_with_ctor.out", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fnested_with_ctor.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fnested_with_ctor.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2Fnested_with_ctor.out?ref=de9127c1b718aa3211aaa6d573791cf3077cfaba", "patch": "@@ -0,0 +1,3 @@\n+Testing class `nested_with_ctor'...\n+Yikes!321\n+(int)123"}, {"sha": "dfda004b3b10a87a5182c180dbad8489d5609ee1", "filename": "libjava/testsuite/libjava.lang/stub.java", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fstub.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fstub.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2Fstub.java?ref=de9127c1b718aa3211aaa6d573791cf3077cfaba", "patch": "@@ -0,0 +1,101 @@\n+// Class stub\n+// Generated on Fri Feb  4 20:23:47 PST 2000\n+// A somewhat thorough test of function invocator generated stubs.\n+\n+class stub {\n+\n+    String ok;\n+\n+    void OK () {System.out.println (ok);}\n+    void OK (int i) {System.out.println (ok+\" \"+i);}\n+    static void testOK () {System.out.println (\"OK\");}\n+    static void testOK (int i) {System.out.println (\"OK \"+i); }\n+\n+    // STATIC   PRIVATE         R_VALUE         ARGS\n+    // No       No              No              No\n+                                void    t1      () {OK();}\n+    // Yes      No              No              No\n+       static                   void    t2      () {testOK();}\n+    // No       Yes             No              No\n+                private         void    t3      () {OK();}\n+    // Yes      Yes             No              No\n+       static   private         void    t4      () {testOK();}\n+    // No       No              Yes             No\n+                                int     t5      () {return 5;}\n+    // Yes      No              Yes             No\n+       static                   int     t6      () {return 6;}\n+    // No       Yes             Yes             No\n+                private         int     t7      () {return 7;}\n+    // Yes      Yes             Yes             No\n+       static   private         int     t8      () {return 8;}\n+\n+    // No       No              No              Yes\n+                                void    t9      (int i) {OK(i);}\n+    // Yes      No              No              Yes\n+       static                   void    t10     (int i) {testOK(i);}\n+    // No       Yes             No              Yes\n+                private         void    t11     (int i) {OK(i);}\n+    // Yes      Yes             No              Yes\n+       static   private         void    t12     (int i) {testOK(i);}\n+    // No       No              Yes             Yes\n+                                int     t13     (int i) {return i*2;}\n+    // Yes      No              Yes             Yes\n+       static                   int     t14     (int i) {return i*3;}\n+    // No       Yes             Yes             Yes\n+                private         int     t15     (int i) {return i*4;}\n+    // Yes      Yes             Yes             Yes\n+       static   private         int     t16     (int i) {return i*5;}\n+\n+    void foo ()\n+    {\n+        this.new bar ().test ();\n+    }\n+    class bar {\n+        void test () {\n+            ok = \"OK\";\n+            t1 ();\n+            t2 ();\n+            t3 ();\n+            t4 ();\n+            System.out.println (t5());\n+            System.out.println (t6());\n+            System.out.println (t7());\n+            System.out.println (t8());\n+            t9 (9);\n+            t10 (10);\n+            t11 (11);\n+            t12 (12);\n+            System.out.println (t13(13));\n+            System.out.println (t14(14));\n+            System.out.println (t15(15));\n+            System.out.println (t16(16));\n+            this.new baz ().test ();\n+        }\n+        class baz {\n+            void test () {\n+                ok = \"OKOK\";\n+                t1 ();\n+                t2 ();\n+                t3 ();\n+                t4 ();\n+                System.out.println (t5());\n+                System.out.println (t6());\n+                System.out.println (t7());\n+                System.out.println (t8());\n+                t9 (9);\n+                t10 (10);\n+                t11 (11);\n+                t12 (12);\n+                System.out.println (t13(13));\n+                System.out.println (t14(14));\n+                System.out.println (t15(15));\n+                System.out.println (t16(16));\n+            }\n+        }\n+    }\n+    public static void main (String[] arg)\n+    {   \n+        System.out.println (\"Testing class `stub'...\");\n+        new stub ().foo ();\n+    }\n+}"}, {"sha": "90937c6da95f211f0e69a0c6ed2482a326ce07bd", "filename": "libjava/testsuite/libjava.lang/stub.out", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fstub.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de9127c1b718aa3211aaa6d573791cf3077cfaba/libjava%2Ftestsuite%2Flibjava.lang%2Fstub.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2Fstub.out?ref=de9127c1b718aa3211aaa6d573791cf3077cfaba", "patch": "@@ -0,0 +1,33 @@\n+Testing class `stub'...\n+OK\n+OK\n+OK\n+OK\n+5\n+6\n+7\n+8\n+OK 9\n+OK 10\n+OK 11\n+OK 12\n+26\n+42\n+60\n+80\n+OKOK\n+OK\n+OKOK\n+OK\n+5\n+6\n+7\n+8\n+OKOK 9\n+OK 10\n+OKOK 11\n+OK 12\n+26\n+42\n+60\n+80"}]}