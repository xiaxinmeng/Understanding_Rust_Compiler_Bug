{"sha": "626e0599af96df36ac6b847349a33948d7bb3f7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI2ZTA1OTlhZjk2ZGYzNmFjNmI4NDczNDlhMzM5NDhkN2JiM2Y3ZQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2009-05-27T20:32:30Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2009-05-27T20:32:30Z"}, "message": "re PR libstdc++/40273 ([C++0x] Invalid conversion to bool is reported)\n\n2009-05-27  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/40273\n\t* include/tr1_impl/functional: Add explicit cast.\n\t* testsuite/20_util/function/requirements/\n\texplicit_instantiation.cc: New.\n\t* testsuite/20_util/function/null_pointer_comparisons.cc: New.\n\nFrom-SVN: r147930", "tree": {"sha": "d99980c516af84be2d033dd11a9de54c70f5c509", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d99980c516af84be2d033dd11a9de54c70f5c509"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/626e0599af96df36ac6b847349a33948d7bb3f7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/626e0599af96df36ac6b847349a33948d7bb3f7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/626e0599af96df36ac6b847349a33948d7bb3f7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/626e0599af96df36ac6b847349a33948d7bb3f7e/comments", "author": null, "committer": null, "parents": [{"sha": "667e6f892412bcd32deb79ebfb8d41e211e9cbed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/667e6f892412bcd32deb79ebfb8d41e211e9cbed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/667e6f892412bcd32deb79ebfb8d41e211e9cbed"}], "stats": {"total": 90, "additions": 84, "deletions": 6}, "files": [{"sha": "1f7be0f251b9b51b71ce3d00718f8410891e267d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/626e0599af96df36ac6b847349a33948d7bb3f7e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/626e0599af96df36ac6b847349a33948d7bb3f7e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=626e0599af96df36ac6b847349a33948d7bb3f7e", "patch": "@@ -1,5 +1,13 @@\n+2009-05-27  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/40273\n+\t* include/tr1_impl/functional: Add explicit cast.\n+\t* testsuite/20_util/function/requirements/\n+\texplicit_instantiation.cc: New.\n+\t* testsuite/20_util/function/null_pointer_comparisons.cc: New.\n+\n 2009-05-24  Eelis van der Weegen  <eelis@eelis.net>\n-\t\n+\n \t* libsupc++/initializer_list (initializer_list): Add missing typedefs.\n \n 2009-05-21  Benjamin Kosnik  <bkoz@redhat.com>"}, {"sha": "584a403de487f09ad335d7bdb41ed03393411671", "filename": "libstdc++-v3/include/tr1_impl/functional", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/626e0599af96df36ac6b847349a33948d7bb3f7e/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/626e0599af96df36ac6b847349a33948d7bb3f7e/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ffunctional?ref=626e0599af96df36ac6b847349a33948d7bb3f7e", "patch": "@@ -1557,7 +1557,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n \ttemplate<typename _Signature>\n \t  static bool\n \t  _M_not_empty_function(const function<_Signature>& __f)\n-\t  { return __f; }\n+          { return static_cast<bool>(__f); }\n \n \ttemplate<typename _Tp>\n \t  static bool\n@@ -2095,13 +2095,13 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n   template<typename _Signature>\n     inline bool\n     operator==(const function<_Signature>& __f, _M_clear_type*)\n-    { return !__f; }\n+    { return !static_cast<bool>(__f); }\n \n   /// @overload\n   template<typename _Signature>\n     inline bool\n     operator==(_M_clear_type*, const function<_Signature>& __f)\n-    { return !__f; }\n+    { return !static_cast<bool>(__f); }\n \n   /**\n    *  @brief Compares a polymorphic function object wrapper against 0\n@@ -2113,13 +2113,13 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n   template<typename _Signature>\n     inline bool\n     operator!=(const function<_Signature>& __f, _M_clear_type*)\n-    { return __f; }\n+    { return static_cast<bool>(__f); }\n \n   /// @overload\n   template<typename _Signature>\n     inline bool\n     operator!=(_M_clear_type*, const function<_Signature>& __f)\n-    { return __f; }\n+    { return static_cast<bool>(__f); }\n \n   // [3.7.2.8] specialized algorithms\n "}, {"sha": "7f446d7d60a3cd7978cc45472b25f2aaf4fd35f2", "filename": "libstdc++-v3/testsuite/20_util/function/null_pointer_comparisons.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/626e0599af96df36ac6b847349a33948d7bb3f7e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fnull_pointer_comparisons.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/626e0599af96df36ac6b847349a33948d7bb3f7e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fnull_pointer_comparisons.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Fnull_pointer_comparisons.cc?ref=626e0599af96df36ac6b847349a33948d7bb3f7e", "patch": "@@ -0,0 +1,44 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <functional>\n+\n+// libstdc++/40273\n+int main() \n+{\n+  std::function<void* ()> f = 0;\n+  if (f != 0) \n+    {\n+    }\n+\n+  if (0 != f) \n+    {\n+    }\n+\n+  if (f == 0) \n+    {\n+    }\n+\n+  if (0 == f) \n+    {\n+    }\n+  return 0;\n+}\n+"}, {"sha": "dbd8be6303a81249b47142fedbf32c658f456864", "filename": "libstdc++-v3/testsuite/20_util/function/requirements/explicit_instantiation.cc", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/626e0599af96df36ac6b847349a33948d7bb3f7e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/626e0599af96df36ac6b847349a33948d7bb3f7e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2Frequirements%2Fexplicit_instantiation.cc?ref=626e0599af96df36ac6b847349a33948d7bb3f7e", "patch": "@@ -0,0 +1,26 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <functional>\n+\n+namespace std\n+{\n+  template class function<void* ()>;\n+}"}]}