{"sha": "52dd32242018d531d0a974f6b4b61df28d491ab3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJkZDMyMjQyMDE4ZDUzMWQwYTk3NGY2YjRiNjFkZjI4ZDQ5MWFiMw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2003-04-22T19:58:57Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2003-04-22T19:58:57Z"}, "message": "vsnprintf.c (vsnprintf): Don't pad string with extra nulls.\n\n\t* vsnprintf.c (vsnprintf): Don't pad string with extra nulls.\n\t(main): Test that we don't write too much data.\n\nFrom-SVN: r65955", "tree": {"sha": "24d4e0bc836479f84500f21dc6743355e5a85e4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24d4e0bc836479f84500f21dc6743355e5a85e4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52dd32242018d531d0a974f6b4b61df28d491ab3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52dd32242018d531d0a974f6b4b61df28d491ab3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52dd32242018d531d0a974f6b4b61df28d491ab3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52dd32242018d531d0a974f6b4b61df28d491ab3/comments", "author": null, "committer": null, "parents": [{"sha": "b78f9414c6db8d7c9c0ed3466a2a75bc1a7d215c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b78f9414c6db8d7c9c0ed3466a2a75bc1a7d215c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b78f9414c6db8d7c9c0ed3466a2a75bc1a7d215c"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "ae5a7c5499be819e7c7d53df2fb70976788d79a8", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dd32242018d531d0a974f6b4b61df28d491ab3/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dd32242018d531d0a974f6b4b61df28d491ab3/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=52dd32242018d531d0a974f6b4b61df28d491ab3", "patch": "@@ -1,3 +1,8 @@\n+2003-04-22  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* vsnprintf.c (vsnprintf): Don't pad string with extra nulls.\n+\t(main): Test that we don't write too much data.\n+\n 2003-04-16  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* configure.in (funcs, AC_CHECK_FUNCS): Add snprintf and"}, {"sha": "fd3dd18a91c638f697c4e22458b146106cde61f3", "filename": "libiberty/vsnprintf.c", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52dd32242018d531d0a974f6b4b61df28d491ab3/libiberty%2Fvsnprintf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52dd32242018d531d0a974f6b4b61df28d491ab3/libiberty%2Fvsnprintf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fvsnprintf.c?ref=52dd32242018d531d0a974f6b4b61df28d491ab3", "patch": "@@ -78,9 +78,13 @@ vsnprintf (s, n, format, ap)\n   result = strlen (buf);\n   if (n > 0)\n     {\n-      strncpy (s, buf, n);\n-      if (n - 1 < (size_t) result)\n-\ts[n - 1] = 0;\n+      if ((long) n > result)\n+\tmemcpy (s, buf, result+1);\n+      else\n+        {\n+\t  memcpy (s, buf, n-1);\n+\t  s[n - 1] = 0;\n+\t}\n     }\n   free (buf);\n   return result;\n@@ -114,35 +118,35 @@ main ()\n   \n   CLEAR (buf);\n   status = checkit (buf, 10, \"%s:%d\", \"foobar\", 9);\n-  VERIFY (status==8 && strcmp (buf, \"foobar:9\") == 0);\n+  VERIFY (status==8 && memcmp (buf, \"foobar:9\\0XXXXX\\0\", 15) == 0);\n \n   CLEAR (buf);\n   status = checkit (buf, 9, \"%s:%d\", \"foobar\", 9);\n-  VERIFY (status==8 && strcmp (buf, \"foobar:9\") == 0);\n+  VERIFY (status==8 && memcmp (buf, \"foobar:9\\0XXXXX\\0\", 15) == 0);\n \n   CLEAR (buf);\n   status = checkit (buf, 8, \"%s:%d\", \"foobar\", 9);\n-  VERIFY (status==8 && strcmp (buf, \"foobar:\") == 0);\n+  VERIFY (status==8 && memcmp (buf, \"foobar:\\0XXXXXX\\0\", 15) == 0);\n \n   CLEAR (buf);\n   status = checkit (buf, 7, \"%s:%d\", \"foobar\", 9);\n-  VERIFY (status==8 && strcmp (buf, \"foobar\") == 0);\n+  VERIFY (status==8 && memcmp (buf, \"foobar\\0XXXXXXX\\0\", 15) == 0);\n \n   CLEAR (buf);\n   status = checkit (buf, 6, \"%s:%d\", \"foobar\", 9);\n-  VERIFY (status==8 && strcmp (buf, \"fooba\") == 0);\n+  VERIFY (status==8 && memcmp (buf, \"fooba\\0XXXXXXXX\\0\", 15) == 0);\n \n   CLEAR (buf);\n   status = checkit (buf, 2, \"%s:%d\", \"foobar\", 9);\n-  VERIFY (status==8 && strcmp (buf, \"f\") == 0);\n+  VERIFY (status==8 && memcmp (buf, \"f\\0XXXXXXXXXXXX\\0\", 15) == 0);\n \n   CLEAR (buf);\n   status = checkit (buf, 1, \"%s:%d\", \"foobar\", 9);\n-  VERIFY (status==8 && strcmp (buf, \"\") == 0);\n+  VERIFY (status==8 && memcmp (buf, \"\\0XXXXXXXXXXXXX\\0\", 15) == 0);\n \n   CLEAR (buf);\n   status = checkit (buf, 0, \"%s:%d\", \"foobar\", 9);\n-  VERIFY (status==8 && strcmp (buf, \"XXXXXXXXXXXXXX\") == 0);\n+  VERIFY (status==8 && memcmp (buf, \"XXXXXXXXXXXXXX\\0\", 15) == 0);\n \n   return 0;\n }"}]}