{"sha": "f5c8ac96dc90c77efcc6edf6b89de6d9bfc0f775", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVjOGFjOTZkYzkwYzc3ZWZjYzZlZGY2Yjg5ZGU2ZDliZmMwZjc3NQ==", "commit": {"author": {"name": "Clinton Popetz", "email": "cpopetz@cygnus.com", "date": "2000-01-14T21:21:57Z"}, "committer": {"name": "Clinton Popetz", "email": "cpopetz@gcc.gnu.org", "date": "2000-01-14T21:21:57Z"}, "message": "mips.c (mips_va_arg): Fix fprv for the 32 bit eabi...\n\n\t* config/mips/mips.c (mips_va_arg): Fix fprv for the 32 bit\n\teabi, and make sure queued POSTINCREMENT rtl is emitted at\n\tthe right point.\n\nFrom-SVN: r31422", "tree": {"sha": "8cc1b1f6061ef44d3539d265751b54f731e06517", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cc1b1f6061ef44d3539d265751b54f731e06517"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5c8ac96dc90c77efcc6edf6b89de6d9bfc0f775", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5c8ac96dc90c77efcc6edf6b89de6d9bfc0f775", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5c8ac96dc90c77efcc6edf6b89de6d9bfc0f775", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5c8ac96dc90c77efcc6edf6b89de6d9bfc0f775/comments", "author": null, "committer": null, "parents": [{"sha": "5e4f624424df8c5a8a6a6a7a7f9b0709d4f1213e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e4f624424df8c5a8a6a6a7a7f9b0709d4f1213e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e4f624424df8c5a8a6a6a7a7f9b0709d4f1213e"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "76fdf3f1dea4a6c76dccb12331d83bc5945401da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c8ac96dc90c77efcc6edf6b89de6d9bfc0f775/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c8ac96dc90c77efcc6edf6b89de6d9bfc0f775/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5c8ac96dc90c77efcc6edf6b89de6d9bfc0f775", "patch": "@@ -1,8 +1,14 @@\n+2000-01-14  Clinton Popetz  <cpopetz@cygnus.com>\n+\n+\t* config/mips/mips.c (mips_va_arg): Fix fprv for the 32 bit \n+\teabi, and make sure queued POSTINCREMENT rtl is emitted at \n+\tthe right point.\n+\n 2000-01-14  Clinton Popetz  <cpopetz@cygnus.com>\n \n \t* builtins.c (PAD_VARARGS_DOWN): Define. \n \t(std_expand_builtin_va_arg): Use the above macro.\n-\t* config/mips/mips.c (PAD_VARARGS_DOWN): Define.\n+\t* config/mips/mips.h (PAD_VARARGS_DOWN): Define.\n \t* tm.texi (Register Arguments): Document the above macro.\n \t\n 2000-01-14  Nick Clifton  <nickc@cygnus.com>"}, {"sha": "b6d7559d45cdff236f94da8269ab023daa28159d", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c8ac96dc90c77efcc6edf6b89de6d9bfc0f775/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c8ac96dc90c77efcc6edf6b89de6d9bfc0f775/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=f5c8ac96dc90c77efcc6edf6b89de6d9bfc0f775", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  MIPS version.\n-   Copyright (C) 1989, 90-98, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 90-98, 1999, 2000 Free Software Foundation, Inc.\n    Contributed by A. Lichnewsky (lich@inria.inria.fr).\n    Changed by Michael Meissner\t(meissner@osf.org).\n    64 bit r4000 support by Ian Lance Taylor (ian@cygnus.com) and\n@@ -1438,6 +1438,11 @@ do {\t\t\t\t\t\t\t\\\n \t|| TREE_CODE (TYPE) == UNION_TYPE\t\t\t\t\\\n \t|| TREE_CODE (TYPE) == RECORD_TYPE)) ? BITS_PER_WORD : (ALIGN))\n \n+\n+/* Force right-alignment for small varargs in 32 bit little_endian mode */\n+\n+#define PAD_VARARGS_DOWN (TARGET_64BIT ? BYTES_BIG_ENDIAN : !BYTES_BIG_ENDIAN)\n+\n /* Define this macro if an argument declared as `char' or `short' in a\n    prototype should actually be passed as an `int'.  In addition to\n    avoiding errors in certain cases of mismatch, it also makes for"}]}