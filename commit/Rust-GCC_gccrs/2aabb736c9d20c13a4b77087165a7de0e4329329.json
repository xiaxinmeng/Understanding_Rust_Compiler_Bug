{"sha": "2aabb736c9d20c13a4b77087165a7de0e4329329", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFhYmI3MzZjOWQyMGMxM2E0Yjc3MDg3MTY1YTdkZTBlNDMyOTMyOQ==", "commit": {"author": {"name": "Klaus Kaempf", "email": "kkaempf@progis.de", "date": "1998-02-02T09:37:18Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-02-02T09:37:18Z"}, "message": "makefile.vms: Remove bytecode references.\n\n        * makefile.vms: Remove bytecode references.\n        Create genrtl files.\n\nFrom-SVN: r17593", "tree": {"sha": "17bc11c16d14cbac1fdf153ed911d85753d8453f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17bc11c16d14cbac1fdf153ed911d85753d8453f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2aabb736c9d20c13a4b77087165a7de0e4329329", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aabb736c9d20c13a4b77087165a7de0e4329329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aabb736c9d20c13a4b77087165a7de0e4329329", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aabb736c9d20c13a4b77087165a7de0e4329329/comments", "author": null, "committer": null, "parents": [{"sha": "4693911f103424f3811a25d20ce83e1e537fa87c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4693911f103424f3811a25d20ce83e1e537fa87c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4693911f103424f3811a25d20ce83e1e537fa87c"}], "stats": {"total": 60, "additions": 22, "deletions": 38}, "files": [{"sha": "be801947492349f1c21fa7d940c588a8351dec16", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aabb736c9d20c13a4b77087165a7de0e4329329/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aabb736c9d20c13a4b77087165a7de0e4329329/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2aabb736c9d20c13a4b77087165a7de0e4329329", "patch": "@@ -1,3 +1,8 @@\n+Mon Feb  2 10:38:41 1998  Klaus Kaempf  <kkaempf@progis.de>\n+\n+\t* makefile.vms: Remove bytecode references.\n+\tCreate genrtl files.\n+\n Mon Feb  2 02:08:04 1998  Michael P. Hayes  <michaelh@ongaonga.chch.cri.nz>\n \n \t* jump.c (jump_optimize): Allow conditional loading of floating point"}, {"sha": "7f0b7ae309ff8831b46e3f281e76ae1d5b77fec7", "filename": "gcc/makefile.vms", "status": "modified", "additions": 17, "deletions": 38, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aabb736c9d20c13a4b77087165a7de0e4329329/gcc%2Fmakefile.vms", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aabb736c9d20c13a4b77087165a7de0e4329329/gcc%2Fmakefile.vms", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmakefile.vms?ref=2aabb736c9d20c13a4b77087165a7de0e4329329", "patch": "@@ -27,7 +27,7 @@ LFLAGS=/map/full\n #LFLAGS=\n else\n ifeq ($(ARCH),ALPHA)\n-CFLAGS=/float=ieee/noopt/debug/define=(\"HAVE_CONFIG_H=1\",\"USE_COLLECT2\" $(HAIFA))\\\n+CFLAGS=/names=as_is/float=ieee/noopt/debug/define=(\"HAVE_CONFIG_H=1\",\"USE_COLLECT2\" $(HAIFA))\\\n /warning=disable=(missingreturn,implicitfunc,ptrmismatch,undefescap,longextern,duptypespec)\n else\n CFLAGS=/noopt/debug/define=(\"HAVE_CONFIG_H=1\",\"USE_COLLECT2\" $(HAIFA))\n@@ -58,13 +58,12 @@ else\n SCHED=haifa-sched\n endif\n \n-BIOBJS=[]bi-parser.obj,bi-lexer.obj,bi-reverse.obj\n GENOBJS=[]rtl.obj,obstack.obj\n \n INDEPOBJS= []toplev.obj,version.obj,tree.obj,print-tree.obj,stor-layout.obj,\\\n fold-const.obj,function.obj,stmt.obj,except.obj,expr.obj,calls.obj,expmed.obj,\\\n explow.obj,optabs.obj,varasm.obj,rtl.obj,print-rtl.obj,rtlanal.obj,\\\n-emit-rtl.obj,real.obj,regmove.obj,dbxout.obj,sdbout.obj,dwarfout.obj,\\\n+emit-rtl.obj,genrtl.obj,real.obj,regmove.obj,dbxout.obj,sdbout.obj,dwarfout.obj,\\\n dwarf2out.obj,xcoffout.obj,bitmap.obj,alias.obj,\\\n integrate.obj,jump.obj,cse.obj,loop.obj,unroll.obj,flow.obj,stupid.obj,\\\n combine.obj,regclass.obj,local-alloc.obj,global.obj,reload.obj,\\\n@@ -76,7 +75,7 @@ aux-output.obj,getpwd.obj,convert.obj\n \n CC1OBJS=[]c-parse.obj,c-lang.obj,c-lex.obj,c-pragma.obj,c-decl.obj,\\\n c-typeck.obj,c-convert.obj,c-aux-info.obj,c-common.obj,c-iterate.obj,\\\n-bc-emit.obj,bc-optab.obj,obstack.obj\n+obstack.obj\n \n OBJCOBJS=\n \n@@ -93,12 +92,11 @@ CC1PLUSOBJS=[.cp]call.obj,[.cp]decl2.obj,\\\n [.cp]sig.obj,[.cp]typeck2.obj,[.cp]repo.obj,\\\n [.cp]input.obj,\\\n []obstack.obj,\\\n-[]bc-emit.obj,[]bc-optab.obj,\\\n []c-common.obj,[]c-pragma.obj\n \n CCCPOBJS=[]cccp.obj,cexp.obj,version.obj,prefix.obj\n \n-ALLOCA=,[]alloca.obj,vms_abort.obj\n+ALLOCA=,[]alloca.obj\n \n LIBIBERTY = [-.libiberty]libiberty.olb\n \n@@ -111,7 +109,6 @@ CXX_LIB2FUNCS = [.cp]tinfo.obj,[.cp]tinfo2.obj,\\\n .cc.obj:\n \t$(CC)/plus/CPP=\"-nostdinc++\" $(CFLAGS) $(CINCL_CP) $</obj=$@\n \n-BC_INCLUDES=bc-arity.h bc-opcode.h bc-opname.h\n INSN_INCLUDES=insn-attr.h insn-codes.h insn-config.h insn-flags.h\n \n #\n@@ -157,24 +154,6 @@ libgcc2.olb:\n libgccplus.olb: $(CXX_LIB2FUNCS)\n \tlib/create libgccplus $(CXX_LIB2FUNCS)\n \n-bi-arity.exe: bi-arity.obj,$(BIOBJS)$(ALLOCA)\n-\t$(LINK) $(LFLAGS)/exe=$@ $^$(LIBS)\n-\n-bc-arity.h: bi-arity.exe bytecode.def\n-\tmcr $(PWD)bi-arity.exe < bytecode.def > $@\n-\n-bi-opcode.exe: bi-opcode.obj,$(BIOBJS)$(ALLOCA)\n-\t$(LINK) $(LFLAGS)/exe=$@ $^$(LIBS)\n-\n-bc-opcode.h: bi-opcode.exe bytecode.def\n-\tmcr $(PWD)bi-opcode.exe < bytecode.def > $@\n-\n-bi-opname.exe: bi-opname.obj,$(BIOBJS)$(ALLOCA)\n-\t$(LINK) $(LFLAGS)/exe=$@ $^$(LIBS)\n-\n-bc-opname.h: bi-opname.exe bytecode.def\n-\tmcr $(PWD)bi-opname.exe < bytecode.def > $@\n-\n genattr.exe: genattr.obj,$(GENOBJS)$(ALLOCA)\n \t$(LINK) $(LFLAGS)/exe=$@ $^$(LIBS)\n \n@@ -241,28 +220,32 @@ genattrtab.exe: genattrtab.obj,rtlanal.obj,$(GENOBJS)$(ALLOCA)\n insn-attrtab.c: genattrtab.exe $(MDFILE)\n \tmcr $(PWD)genattrtab.exe $(MDFILE) > $@\n \n+gengenrtl.exe: gengenrtl.obj,obstack.obj,$(ALLOCA)\n+\t$(LINK) $(LFLAGS)/exe=$@ $^$(LIBS)\n+\n+genrtl.h genrtl.c: gengenrtl.exe\n+\tmcr $(PWD)gengenrtl.exe\tgenrtl.h genrtl.c\n+\n cccp.obj: cccp.c config.h\n aux-output.obj: aux-output.c insn-attr.h insn-flags.h insn-config.h\n-bc-emit.obj: bc-emit.c bc-arity.h bc-opcode.h\n-bc-optab.obj: bc-optab.c bc-opcode.h\n-bi-parser.obj: bi-parser.c bi-parser.y\n caller-save.obj: caller-save.c insn-config.h\n calls.obj: calls.c insn-flags.h\n combine.obj: combine.c insn-attr.h insn-flags.h insn-codes.h insn-config.h\n cse.obj: cse.c insn-config.h\n c-decl.obj: c-decl.c expr.h integrate.h insn-codes.h insn-config.h\n+c-lex.obj: c-lex.c genrtl.h\n c-typeck.obj: c-typeck.c\n dbxout.obj: dbxout.c insn-config.h\n dwarfout.obj: dwarfout.c insn-config.h\n dwarf2out.obj: dwarf2out.c insn-config.h\n-emit-rtl.obj: emit-rtl.c bc-opcode.h bc-opname.h insn-config.h\n+emit-rtl.obj: emit-rtl.c insn-config.h\n except.obj: except.c insn-flags.h insn-codes.h insn-config.h\n explow.obj: explow.c insn-flags.h insn-codes.h insn-config.h\n expmed.obj: expmed.c insn-flags.h insn-codes.h insn-config.h\n-expr.obj: expr.c bc-opcode.h insn-flags.h insn-config.h\n+expr.obj: expr.c insn-flags.h insn-config.h\n final.obj: final.c tm.h insn-attr.h insn-flags.h insn-codes.h insn-config.h\n flow.obj: flow.c insn-config.h\n-function.obj: bc-opcode.h function.c insn-flags.h insn-codes.h insn-config.h insn-codes.h insn-config.h\n+function.obj: function.c insn-flags.h insn-codes.h insn-config.h insn-codes.h insn-config.h\n genattrtab.obj: genattrtab.c insn-config.h\n genextract.obj: genextract.c insn-config.h\n global.obj: global.c insn-config.h\n@@ -281,10 +264,10 @@ reload1.obj: reload1.c insn-flags.h insn-codes.h insn-config.h\n reorg.obj: reorg.c insn-attr.h insn-flags.h insn-config.h\n sched.obj: sched.c insn-attr.h insn-config.h\n haifa-sched.obj: haifa-sched.c insn-attr.h insn-config.h\n-stmt.obj: stmt.c bc-opcode.h insn-flags.h insn-codes.h insn-config.h\n+stmt.obj: stmt.c insn-flags.h insn-codes.h insn-config.h\n stor-layout.obj: stor-layout.c\n stupid.obj: stupid.c\n-toplev.obj: toplev.c bc-opcode.h insn-attr.h insn-config.h\n+toplev.obj: toplev.c insn-attr.h insn-config.h\n unroll.obj: unroll.c insn-config.h\n \n insn-attrtab.obj: insn-attrtab.c insn-attr.h insn-config.h\n@@ -299,8 +282,6 @@ toplev.obj: toplev.c tm.h\n \n cexp.c: cexp.y\n \t$(BISON) $(BISON_FLAGS)/output=$@ $<\n-bi-parser.c: bi-parser.y\n-\t$(BISON) $(BISON_FLAGS)/output=$@ $<\n c-parse.c: c-parse.y\n \t$(BISON) $(BISON_FLAGS)/output=$@ $<\n [.cp]parse.c: [.cp]parse.y\n@@ -362,9 +343,6 @@ clean:\n \t$(RM) *.sched;\n \t$(RM) *.sched2;\n \t$(RM) *.map;\n-\t$(RM) bi-arity.exe;,bc-arity.h;\n-\t$(RM) bi-opcode.exe;,bc-opcode.h;\n-\t$(RM) bi-opname.exe;,bc-opname.h;\n \t$(RM) genattr.exe;,insn-attr.h;\n \t$(RM) genflags.exe;,insn-flags.h;\n \t$(RM) gencodes.exe;,insn-codes.h;\n@@ -376,6 +354,7 @@ clean:\n \t$(RM) genoutput.exe;,insn-output.c;\n \t$(RM) genemit.exe;,insn-emit.c;\n \t$(RM) genattrtab.exe;,insn-attrtab.c;\n+\t$(RM) gengenrtl.exe;,genrtl.c;,genrtl.h;\n \t$(RM) cc1.exe;\n \t$(RM) cpp.exe;\n \t$(RM) cc1plus.exe;"}]}