{"sha": "549fa5843dd13df696920b030f54eed1dcfbfe73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ5ZmE1ODQzZGQxM2RmNjk2OTIwYjAzMGY1NGVlZDFkY2ZiZmU3Mw==", "commit": {"author": {"name": "Julia Koval", "email": "julia.koval@intel.com", "date": "2017-12-15T05:04:33Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2017-12-15T05:04:33Z"}, "message": "Enable VAES support [5/5]\n\ngcc/\n\t* config/i386/i386-builtin.def (__builtin_ia32_vaesenclast_v16qi,\n\t__builtin_ia32_vaesenclast_v32qi, __builtin_ia32_vaesenclast_v64qi): New.\n\t* config/i386/sse.md (vaesenclast_<mode>): New pattern.\n\t* config/i386/vaesintrin.h (_mm256_aesenclast_epi128,\n\t_mm512_aesenclast_epi128, _mm_aesenclast_epi128): New intrinsics.\n\ngcc/testsuite/\n\t* gcc.target/i386/avx512f-aesenclast-2.c: New test.\n\t* gcc.target/i386/avx512vl-aesenclast-2.c: Ditto.\n\t* gcc.target/i386/avx512fvl-vaes-1.c: Handle new intrinsics.\n\nFrom-SVN: r255676", "tree": {"sha": "1de9a2cf6b4d31885515b4dfd9dd6d625ef098eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1de9a2cf6b4d31885515b4dfd9dd6d625ef098eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/549fa5843dd13df696920b030f54eed1dcfbfe73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/549fa5843dd13df696920b030f54eed1dcfbfe73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/549fa5843dd13df696920b030f54eed1dcfbfe73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/549fa5843dd13df696920b030f54eed1dcfbfe73/comments", "author": {"login": "vaalfreja", "id": 5216345, "node_id": "MDQ6VXNlcjUyMTYzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5216345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaalfreja", "html_url": "https://github.com/vaalfreja", "followers_url": "https://api.github.com/users/vaalfreja/followers", "following_url": "https://api.github.com/users/vaalfreja/following{/other_user}", "gists_url": "https://api.github.com/users/vaalfreja/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaalfreja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaalfreja/subscriptions", "organizations_url": "https://api.github.com/users/vaalfreja/orgs", "repos_url": "https://api.github.com/users/vaalfreja/repos", "events_url": "https://api.github.com/users/vaalfreja/events{/privacy}", "received_events_url": "https://api.github.com/users/vaalfreja/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a5d179739d7d3deaaf3d9788e8ddbd50ca35f00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a5d179739d7d3deaaf3d9788e8ddbd50ca35f00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a5d179739d7d3deaaf3d9788e8ddbd50ca35f00"}], "stats": {"total": 127, "additions": 127, "deletions": 0}, "files": [{"sha": "453aa70025ca1e34a7b79ec9f0aa2f5c36be8256", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/549fa5843dd13df696920b030f54eed1dcfbfe73/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/549fa5843dd13df696920b030f54eed1dcfbfe73/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=549fa5843dd13df696920b030f54eed1dcfbfe73", "patch": "@@ -1,3 +1,11 @@\n+2017-12-15  Julia Koval  <julia.koval@intel.com>\n+\n+\t* config/i386/i386-builtin.def (__builtin_ia32_vaesenclast_v16qi,\n+\t__builtin_ia32_vaesenclast_v32qi, __builtin_ia32_vaesenclast_v64qi): New.\n+\t* config/i386/sse.md (vaesenclast_<mode>): New pattern.\n+\t* config/i386/vaesintrin.h (_mm256_aesenclast_epi128,\n+\t_mm512_aesenclast_epi128, _mm_aesenclast_epi128): New intrinsics.\n+\n 2017-12-15  Julia Koval  <julia.koval@intel.com>\n \n \t* config/i386/i386-builtin.def (__builtin_ia32_vaesenc_v16qi,"}, {"sha": "e3b12bdc318e4dcbf9d5f078d69526713297e94d", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/549fa5843dd13df696920b030f54eed1dcfbfe73/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/549fa5843dd13df696920b030f54eed1dcfbfe73/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=549fa5843dd13df696920b030f54eed1dcfbfe73", "patch": "@@ -2773,6 +2773,9 @@ BDESC (OPTION_MASK_ISA_VAES, CODE_FOR_vaesdeclast_v64qi, \"__builtin_ia32_vaesdec\n BDESC (OPTION_MASK_ISA_VAES, CODE_FOR_vaesenc_v16qi, \"__builtin_ia32_vaesenc_v16qi\", IX86_BUILTIN_VAESENC16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n BDESC (OPTION_MASK_ISA_VAES, CODE_FOR_vaesenc_v32qi, \"__builtin_ia32_vaesenc_v32qi\", IX86_BUILTIN_VAESENC32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)\n BDESC (OPTION_MASK_ISA_VAES, CODE_FOR_vaesenc_v64qi, \"__builtin_ia32_vaesenc_v64qi\", IX86_BUILTIN_VAESENC64, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI)\n+BDESC (OPTION_MASK_ISA_VAES, CODE_FOR_vaesenclast_v16qi, \"__builtin_ia32_vaesenclast_v16qi\", IX86_BUILTIN_VAESENCLAST16, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI)\n+BDESC (OPTION_MASK_ISA_VAES, CODE_FOR_vaesenclast_v32qi, \"__builtin_ia32_vaesenclast_v32qi\", IX86_BUILTIN_VAESENCLAST32, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI)\n+BDESC (OPTION_MASK_ISA_VAES, CODE_FOR_vaesenclast_v64qi, \"__builtin_ia32_vaesenclast_v64qi\", IX86_BUILTIN_VAESENCLAST64, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI)\n \n BDESC_END (ARGS2, SPECIAL_ARGS2)\n "}, {"sha": "c1469f457f5dca28dc4e7e6cb52c25fed5428267", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/549fa5843dd13df696920b030f54eed1dcfbfe73/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/549fa5843dd13df696920b030f54eed1dcfbfe73/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=549fa5843dd13df696920b030f54eed1dcfbfe73", "patch": "@@ -177,6 +177,7 @@\n   UNSPEC_VAESDEC\n   UNSPEC_VAESDECLAST\n   UNSPEC_VAESENC\n+  UNSPEC_VAESENCLAST\n ])\n \n (define_c_enum \"unspecv\" [\n@@ -20487,3 +20488,13 @@\n   \"TARGET_VAES\"\n   \"vaesenc\\t{%2, %1, %0|%0, %1, %2}\"\n )\n+\n+(define_insn \"vaesenclast_<mode>\"\n+  [(set (match_operand:VI1_AVX512VL_F 0 \"register_operand\" \"=v\")\n+\t  (unspec:VI1_AVX512VL_F\n+\t  [(match_operand:VI1_AVX512VL_F 1 \"register_operand\" \"v\")\n+\t   (match_operand:VI1_AVX512VL_F 2 \"vector_operand\" \"vm\")]\n+\t  UNSPEC_VAESENCLAST))]\n+  \"TARGET_VAES\"\n+  \"vaesenclast\\t{%2, %1, %0|%0, %1, %2}\"\n+)"}, {"sha": "510a36edebfd6cb710f97e6fc72bbe17641be95d", "filename": "gcc/config/i386/vaesintrin.h", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/549fa5843dd13df696920b030f54eed1dcfbfe73/gcc%2Fconfig%2Fi386%2Fvaesintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/549fa5843dd13df696920b030f54eed1dcfbfe73/gcc%2Fconfig%2Fi386%2Fvaesintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvaesintrin.h?ref=549fa5843dd13df696920b030f54eed1dcfbfe73", "patch": "@@ -29,6 +29,14 @@ _mm256_aesenc_epi128 (__m256i __A, __m256i __B)\n   return (__m256i)__builtin_ia32_vaesenc_v32qi ((__v32qi) __A, (__v32qi) __B);\n }\n \n+extern __inline __m256i\n+__attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_mm256_aesenclast_epi128 (__m256i __A, __m256i __B)\n+{\n+  return (__m256i)__builtin_ia32_vaesenclast_v32qi ((__v32qi) __A,\n+\t\t\t\t\t\t\t\t(__v32qi) __B);\n+}\n+\n #ifdef __DISABLE_VAES__\n #undef __DISABLE_VAES__\n #pragma GCC pop_options\n@@ -64,6 +72,14 @@ _mm512_aesenc_epi128 (__m512i __A, __m512i __B)\n   return (__m512i)__builtin_ia32_vaesenc_v64qi ((__v64qi) __A, (__v64qi) __B);\n }\n \n+extern __inline __m512i\n+__attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_mm512_aesenclast_epi128 (__m512i __A, __m512i __B)\n+{\n+  return (__m512i)__builtin_ia32_vaesenclast_v64qi ((__v64qi) __A,\n+\t\t\t\t\t\t    (__v64qi) __B);\n+}\n+\n #ifdef __DISABLE_VAESF__\n #undef __DISABLE_VAESF__\n #pragma GCC pop_options\n@@ -97,6 +113,14 @@ _mm_aesenc_epi128 (__m128i __A, __m128i __B)\n   return (__m128i)__builtin_ia32_vaesenc_v16qi ((__v16qi) __A, (__v16qi) __B);\n }\n \n+extern __inline __m128i\n+__attribute__((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_aesenclast_epi128 (__m128i __A, __m128i __B)\n+{\n+  return (__m128i)__builtin_ia32_vaesenclast_v16qi ((__v16qi) __A,\n+\t\t\t\t\t\t    (__v16qi) __B);\n+}\n+\n #ifdef __DISABLE_VAESVL__\n #undef __DISABLE_VAESVL__\n #pragma GCC pop_options"}, {"sha": "a2992686bd69dfae13fb1c11a656be9e3bf95c65", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/549fa5843dd13df696920b030f54eed1dcfbfe73/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/549fa5843dd13df696920b030f54eed1dcfbfe73/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=549fa5843dd13df696920b030f54eed1dcfbfe73", "patch": "@@ -1,3 +1,9 @@\n+2017-12-15  Julia Koval  <julia.koval@intel.com>\n+\n+\t* gcc.target/i386/avx512f-aesenclast-2.c: New test.\n+\t* gcc.target/i386/avx512vl-aesenclast-2.c: Ditto.\n+\t* gcc.target/i386/avx512fvl-vaes-1.c: Handle new intrinsics.\n+\n 2017-12-15  Julia Koval  <julia.koval@intel.com>\n \n \t* gcc.target/i386/avx512f-aesenc-2.c: New test."}, {"sha": "03d333b57ff426a54628970b0f24947f0a190153", "filename": "gcc/testsuite/gcc.target/i386/avx512f-aesenclast-2.c", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/549fa5843dd13df696920b030f54eed1dcfbfe73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-aesenclast-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/549fa5843dd13df696920b030f54eed1dcfbfe73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-aesenclast-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-aesenclast-2.c?ref=549fa5843dd13df696920b030f54eed1dcfbfe73", "patch": "@@ -0,0 +1,52 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mavx512f -mvaes\" } */\n+/* { dg-require-effective-target avx512f } */\n+/* { dg-require-effective-target avx512vaes } */\n+\n+#define AVX512F\n+\n+#define VAES\n+#include \"avx512f-helper.h\"\n+\n+#define SIZE (AVX512F_LEN / 32)\n+\n+#include \"avx512f-mask-type.h\"\n+\n+static void\n+CALC (unsigned int *r)\n+{\n+  for (int i = 0; i < SIZE; i+=4)\n+    {\n+      r[i] = 0xfbcda11;\n+      r[i + 1] = 0x238dd93f;\n+      r[i + 2] = 0x4adc62c0;\n+      r[i + 3] = 0x3efbcb88;\n+    }\n+}\n+\n+void\n+TEST (void)\n+{\n+  int i;\n+  UNION_TYPE (AVX512F_LEN, i_ud) res1, src1, src2;\n+  MASK_TYPE mask = MASK_VALUE;\n+  unsigned int res_ref[SIZE];\n+\n+  for (int i = 0; i < SIZE; i+=4)\n+    {\n+      src1.a[i] = 0x5d53475d;\n+      src1.a[i + 1] = 0x63746f72;\n+      src1.a[i + 2] = 0x73745665;\n+      src1.a[i + 3] = 0x7b5b5465;\n+      src2.a[i] = 0x726f6e5d;\n+      src2.a[i + 1] = 0x5b477565;\n+      src2.a[i + 2] = 0x68617929;\n+      src2.a[i + 3] = 0x48692853;\n+    }\n+\n+  CALC (res_ref);\n+  res1.x = INTRINSIC (_aesenclast_epi128) (src2.x, src1.x);\n+\n+  if (UNION_CHECK (AVX512F_LEN, i_ud) (res1, res_ref))\n+    abort ();\n+}"}, {"sha": "19507a45e1476aa84f1f5eb0074408647ba3aa7a", "filename": "gcc/testsuite/gcc.target/i386/avx512fvl-vaes-1.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/549fa5843dd13df696920b030f54eed1dcfbfe73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fvl-vaes-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/549fa5843dd13df696920b030f54eed1dcfbfe73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fvl-vaes-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fvl-vaes-1.c?ref=549fa5843dd13df696920b030f54eed1dcfbfe73", "patch": "@@ -3,14 +3,17 @@\n /* { dg-final { scan-assembler-times \"vaesdec\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\r]*%zmm\\[0-9\\]+\\[^\\n\\r]*%zmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  1 } } */\n /* { dg-final { scan-assembler-times \"vaesdeclast\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  1 } } */\n /* { dg-final { scan-assembler-times \"vaesenc\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\r]*%zmm\\[0-9\\]+\\[^\\n\\r]*%zmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vaesenclast\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  1 } } */\n \n /* { dg-final { scan-assembler-times \"vaesdec\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  1 } } */\n /* { dg-final { scan-assembler-times \"vaesdeclast\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  1 } } */\n /* { dg-final { scan-assembler-times \"vaesenc\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vaesenclast\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  1 } } */\n \n /* { dg-final { scan-assembler-times \"vaesdec\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  1 } } */\n /* { dg-final { scan-assembler-times \"vaesdeclast\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  1 } } */\n /* { dg-final { scan-assembler-times \"vaesenc\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vaesenclast\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  1 } } */\n \n #include <immintrin.h>\n \n@@ -24,12 +27,15 @@ avx512f_test (void)\n   x = _mm512_aesdec_epi128 (x, y);\n   x = _mm512_aesdeclast_epi128 (x, y);\n   x = _mm512_aesenc_epi128 (x, y);\n+  x = _mm512_aesenclast_epi128 (x, y);\n \n   x256 = _mm256_aesdec_epi128 (x256, y256);\n   x256 = _mm256_aesdeclast_epi128 (x256, y256);\n   x256 = _mm256_aesenc_epi128 (x256, y256);\n+  x256 = _mm256_aesenclast_epi128 (x256, y256);\n \n   x128 = _mm_aesdec_epi128 (x128, y128);\n   x128 = _mm_aesdeclast_epi128 (x128, y128);\n   x128 = _mm_aesenc_epi128 (x128, y128);\n+  x128 = _mm_aesenclast_epi128 (x128, y128);\n }"}, {"sha": "0f78a6635a0b91dadb3bb0905cc30f9af570a513", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-aesenclast-2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/549fa5843dd13df696920b030f54eed1dcfbfe73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-aesenclast-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/549fa5843dd13df696920b030f54eed1dcfbfe73/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-aesenclast-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-aesenclast-2.c?ref=549fa5843dd13df696920b030f54eed1dcfbfe73", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mavx512bw -mavx512vl -mvaes\" } */\n+/* { dg-require-effective-target avx512vl } */\n+/* { dg-require-effective-target avx512bw } */\n+/* { dg-require-effective-target avx512vaes } */\n+\n+#define AVX512VL\n+#define AVX512F_LEN 256\n+#define AVX512F_LEN_HALF 128\n+#include \"avx512f-aesenclast-2.c\"\n+\n+#undef AVX512F_LEN\n+#undef AVX512F_LEN_HALF\n+\n+#define AVX512F_LEN 128\n+#define AVX512F_LEN_HALF 128\n+#include \"avx512f-aesenclast-2.c\""}]}