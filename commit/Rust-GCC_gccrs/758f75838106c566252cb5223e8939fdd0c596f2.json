{"sha": "758f75838106c566252cb5223e8939fdd0c596f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU4Zjc1ODM4MTA2YzU2NjI1MmNiNTIyM2U4OTM5ZmRkMGM1OTZmMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-03-19T00:33:01Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-03-19T00:33:01Z"}, "message": "(FUNCTION_PROLOGUE): LE/370 takes 120 bytes for DSA.\n\nHave only one copy of timestamp and PPA2 per object module.\nOnly have unnamed CSECT to match IBM C.\n\nFrom-SVN: r11556", "tree": {"sha": "0adc40f48dc473da00d674b493144ce40d6e87f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0adc40f48dc473da00d674b493144ce40d6e87f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/758f75838106c566252cb5223e8939fdd0c596f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/758f75838106c566252cb5223e8939fdd0c596f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/758f75838106c566252cb5223e8939fdd0c596f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/758f75838106c566252cb5223e8939fdd0c596f2/comments", "author": null, "committer": null, "parents": [{"sha": "bb821298b358e86b525b70c646eb643026015d3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb821298b358e86b525b70c646eb643026015d3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb821298b358e86b525b70c646eb643026015d3b"}], "stats": {"total": 31, "additions": 17, "deletions": 14}, "files": [{"sha": "3a660a7557579baa8b0a425556a2ea20e5c5a230", "filename": "gcc/config/i370/i370.h", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/758f75838106c566252cb5223e8939fdd0c596f2/gcc%2Fconfig%2Fi370%2Fi370.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/758f75838106c566252cb5223e8939fdd0c596f2/gcc%2Fconfig%2Fi370%2Fi370.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fi370.h?ref=758f75838106c566252cb5223e8939fdd0c596f2", "patch": "@@ -494,7 +494,7 @@ enum reg_class\n #define FUNCTION_PROLOGUE(FILE, LSIZE)\t\t\t\t\t\\\n { \t\t\t\t\t\t\t\t\t\\\n   fprintf (FILE, \"\\tEDCPRLG USRDSAL=%d,BASEREG=%d\\n\",\t\t\t\\\n-\t   STACK_POINTER_OFFSET + LSIZE +\t\t\t\t\\\n+\t   STACK_POINTER_OFFSET + LSIZE - 120 +\t\t\t\t\\\n \t   current_function_outgoing_args_size, BASE_REGISTER);\t\t\\\n   fprintf (FILE, \"PG%d\\tEQU\\t*\\n\", mvs_page_num );\t\t\t\\\n   fprintf (FILE, \"\\tLR\\t11,1\\n\");\t\t\t\t\t\\\n@@ -524,10 +524,19 @@ enum reg_class\n       function_hour = function_time->tm_hour;\t\t\t\t\\\n       function_minute = function_time->tm_min;\t\t\t\t\\\n       function_second = function_time->tm_sec;\t\t\t\t\\\n+      fprintf (FILE, \"PPA2\\tDS\\t0F\\n\");\t\t\t\t\t\\\n+      fprintf (FILE, \"\\tDC\\tX'03',X'00',X'33',X'00'\\n\");\t\t\\\n+      fprintf (FILE, \"\\tDC\\tV(CEESTART),A(0)\\n\");\t\t\t\\\n+      fprintf (FILE, \"\\tDC\\tA(CEETIMES)\\n\");\t\t\t\t\\\n+      fprintf (FILE, \"CEETIMES\\tDS\\t0F\\n\");\t\t\t\t\\\n+      fprintf (FILE, \"\\tDC\\tCL4'%d',CL4'%02d%02d',CL6'%02d%02d00'\\n\",\t\\\n+    \t\t function_year, function_month, function_day,\t\t\\\n+    \t\t function_hour, function_minute, function_second);\t\\\n+      fprintf (FILE, \"\\tDC\\tCL2'01',CL4'0100'\\n\");\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   fprintf (FILE, \"$DSD%03d\\tDSECT\\n\", function_label_index);\t\t\\\n   fprintf (FILE, \"\\tDS\\tD\\n\");\t\t\t\t\t\t\\\n-  fprintf (FILE, \"\\tDS\\tCL(120+%d)\\n\", STACK_POINTER_OFFSET + LSIZE\t\\\n+  fprintf (FILE, \"\\tDS\\tCL(%d)\\n\", STACK_POINTER_OFFSET + LSIZE \t\\\n \t\t\t+ current_function_outgoing_args_size);\t\t\\\n   fprintf (FILE, \"\\tORG\\t$DSD%03d\\n\", function_label_index);\t\t\\\n   fprintf (FILE, \"\\tDS\\tCL(120+8)\\n\");\t\t\t\t\t\\\n@@ -537,26 +546,17 @@ enum reg_class\n \t   function_label_index);\t\t\t\t\t\\\n   fprintf (FILE, \"\\tDS\\t0H\\n\");\t\t\t\t\t\t\\\n   assemble_name (FILE, mvs_function_name);\t\t\t\t\\\n-  fprintf (FILE, \"\\tCSECT\\n\");\t\t\t\t\t\t\\\n+  fprintf (FILE, \"\\tEQU\\t*\\n\");\t\t\t\t\t\t\\\n   fprintf (FILE, \"\\tUSING\\t*,15\\n\");\t\t\t\t\t\\\n   fprintf (FILE, \"\\tB\\tFPL%03d\\n\", function_label_index);\t\t\\\n   fprintf (FILE, \"\\tDC\\tAL1(FPL%03d+4-*)\\n\", function_label_index + 1);\t\\\n   fprintf (FILE, \"\\tDC\\tX'CE',X'A0',AL1(16)\\n\");\t\t\t\\\n-  fprintf (FILE, \"\\tDC\\tAL4($PPA%03d)\\n\",function_label_index);\t\t\\\n+  fprintf (FILE, \"\\tDC\\tAL4(PPA2)\\n\");\t\t\t\t\t\\\n   fprintf (FILE, \"\\tDC\\tAL4(0)\\n\");\t\t\t\t\t\\\n   fprintf (FILE, \"\\tDC\\tAL4($DSL%03d)\\n\", function_label_index);\t\\\n   fprintf (FILE, \"FPL%03d\\tEQU\\t*\\n\", function_label_index + 1);\t\\\n   fprintf (FILE, \"\\tDC\\tAL2(%d),C'%s'\\n\", strlen (mvs_function_name),\t\\\n \tmvs_function_name);\t\t\t\t\t\t\\\n-  fprintf (FILE, \"$PPA%03d\\tDS\\t0F\\n\", function_label_index);\t\t\\\n-  fprintf (FILE, \"\\tDC\\tX'03',X'00',X'33',X'00'\\n\");\t\t\t\\\n-  fprintf (FILE, \"\\tDC\\tV(CEESTART),A(0)\\n\");\t\t\t\t\\\n-  fprintf (FILE, \"\\tDC\\tA($TIM%03d)\\n\", function_label_index);\t\t\\\n-  fprintf (FILE, \"$TIM%03d\\tDS\\t0F\\n\", function_label_index);\t\t\\\n-  fprintf (FILE, \"\\tDC\\tCL4'%d',CL4'%02d%02d',CL6'%02d%02d00'\\n\",\t\\\n-\t\t function_year, function_month, function_day,\t\t\\\n-\t\t function_hour, function_minute, function_second);\t\\\n-  fprintf (FILE, \"\\tDC\\tCL2'01',CL4'0100'\\n\");\t\t\t\t\\\n   fprintf (FILE, \"FPL%03d\\tDS\\t0H\\n\", function_label_index);\t\t\\\n   fprintf (FILE, \"\\tSTM\\t14,12,12(13)\\n\");\t\t\t\t\\\n   fprintf (FILE, \"\\tL\\t2,76(,13)\\n\");\t\t\t\t\t\\\n@@ -611,7 +611,10 @@ enum reg_class\n     strcpy (mvs_function_name, NAME);\t\t\t\t\t\\\n   fprintf (FILE, \"\\tDS\\t0F\\n\");\t\t\t\t\t\t\\\n   assemble_name (FILE, mvs_function_name);\t\t\t\t\\\n-  fputs (\"\\tCSECT\\n\", FILE);\t\t\t\t\t\t\\\n+  fputs (\"\\tEQU\\t*\\n\", FILE);\t\t\t\t\t\t\\\n+  fputs (\"\\tENTRY\\t\", FILE);\t\t\t\t\t\t\\\n+  assemble_name (FILE, mvs_function_name);\t\t\t\t\\\n+  fputc ('\\n', FILE);\t\t\t\t\t\t\t\\\n }\n \n /* This macro generates the assembly code for function exit, on machines"}]}