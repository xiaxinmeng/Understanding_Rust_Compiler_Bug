{"sha": "90737ab777cc13f3c3aaf8e9c352254df3ad6866", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA3MzdhYjc3N2NjMTNmM2MzYWFmOGU5YzM1MjI1NGRmM2FkNjg2Ng==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-04-11T15:19:15Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-04-11T15:19:15Z"}, "message": "locale_facets.tcc (num_get<>::do_get(iter_type, ios_base&, ios_base::iostate&, void*&)): Fix for sizeof(void*) > sizeof(unsigned long).\n\n2007-04-11  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/locale_facets.tcc (num_get<>::do_get(iter_type,\n\tios_base&, ios_base::iostate&, void*&)): Fix for sizeof(void*)\n\t> sizeof(unsigned long).\n\n\t* testsuite/22_locale/num_get/get/char/1.cc: Fix void* test.\n\t* testsuite/22_locale/num_get/get/wchar_t/1.cc: Likewise.\n\n\t* testsuite/22_locale/num_put/put/char/1.cc: Tweak comment.\n\t* testsuite/22_locale/num_put/put/wchar_t/1.cc: Likewise.\n\nFrom-SVN: r123716", "tree": {"sha": "990efb8ae32702ecec0ecea8294040b6d340f442", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/990efb8ae32702ecec0ecea8294040b6d340f442"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90737ab777cc13f3c3aaf8e9c352254df3ad6866", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90737ab777cc13f3c3aaf8e9c352254df3ad6866", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90737ab777cc13f3c3aaf8e9c352254df3ad6866", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90737ab777cc13f3c3aaf8e9c352254df3ad6866/comments", "author": null, "committer": null, "parents": [{"sha": "4bf371ea7e02b09ea657e8e6340b1b55ea210c6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bf371ea7e02b09ea657e8e6340b1b55ea210c6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bf371ea7e02b09ea657e8e6340b1b55ea210c6c"}], "stats": {"total": 45, "additions": 30, "deletions": 15}, "files": [{"sha": "aac7748114385ccd41ddc812656c9dd16d2cc73b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90737ab777cc13f3c3aaf8e9c352254df3ad6866/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90737ab777cc13f3c3aaf8e9c352254df3ad6866/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=90737ab777cc13f3c3aaf8e9c352254df3ad6866", "patch": "@@ -1,3 +1,15 @@\n+2007-04-11  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/locale_facets.tcc (num_get<>::do_get(iter_type,\n+\tios_base&, ios_base::iostate&, void*&)): Fix for sizeof(void*)\n+\t> sizeof(unsigned long).\n+\n+\t* testsuite/22_locale/num_get/get/char/1.cc: Fix void* test.\n+\t* testsuite/22_locale/num_get/get/wchar_t/1.cc: Likewise.\n+\n+\t* testsuite/22_locale/num_put/put/char/1.cc: Tweak comment.\n+\t* testsuite/22_locale/num_put/put/wchar_t/1.cc: Likewise.\n+\n 2007-04-11  Zack Weinberg  <zack@mrtock.ucsd.edu>\n \n \t* include/std/iosfwd: Do not include <bits/c++locale.h> and"}, {"sha": "64f148513bfb5ff5e0148a82d2b9dab8e0cdb553", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90737ab777cc13f3c3aaf8e9c352254df3ad6866/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90737ab777cc13f3c3aaf8e9c352254df3ad6866/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=90737ab777cc13f3c3aaf8e9c352254df3ad6866", "patch": "@@ -890,7 +890,11 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n       const fmtflags __fmt = __io.flags();\n       __io.flags((__fmt & ~ios_base::basefield) | ios_base::hex);\n \n-      unsigned long __ul;\n+      typedef __gnu_cxx::__conditional_type<(sizeof(void*)\n+\t\t\t\t\t     <= sizeof(unsigned long)),\n+\tunsigned long, unsigned long long>::__type _UIntPtrType;       \n+\n+      _UIntPtrType __ul;\n       __beg = _M_extract_int(__beg, __end, __io, __err, __ul);\n \n       // Reset from hex formatted input."}, {"sha": "266388fcc2dc0809c0600e786d9eb751a8ad6d26", "filename": "libstdc++-v3/testsuite/22_locale/num_get/get/char/1.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90737ab777cc13f3c3aaf8e9c352254df3ad6866/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90737ab777cc13f3c3aaf8e9c352254df3ad6866/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fchar%2F1.cc?ref=90737ab777cc13f3c3aaf8e9c352254df3ad6866", "patch": "@@ -2,7 +2,8 @@\n \n // 2001-11-21 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -51,8 +52,7 @@ void test01()\n   double d;\n   long double ld1 = 6.630025e+4;\n   long double ld;\n-  void* v;\n-  const void* cv = &ul2;\n+  void* v = 0;\n \n   // cache the num_get facet\n   istringstream iss;\n@@ -125,12 +125,12 @@ void test01()\n   VERIFY( ld == 0 );\n   VERIFY( err == goodbit );\n \n-  // const void\n+  // void*\n   iss.str(\"0xbffff74c,\");\n   iss.clear();\n   err = goodbit;\n   ng.get(iss.rdbuf(), 0, iss, err, v);\n-  VERIFY( &v != &cv );\n+  VERIFY( v != 0 );\n   VERIFY( err == goodbit );\n \n #ifdef _GLIBCXX_USE_LONG_LONG"}, {"sha": "43cfa93df3cf0963793e5a5cbfc48c035149a4a6", "filename": "libstdc++-v3/testsuite/22_locale/num_get/get/wchar_t/1.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90737ab777cc13f3c3aaf8e9c352254df3ad6866/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90737ab777cc13f3c3aaf8e9c352254df3ad6866/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fwchar_t%2F1.cc?ref=90737ab777cc13f3c3aaf8e9c352254df3ad6866", "patch": "@@ -2,7 +2,8 @@\n \n // 2001-11-21 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -52,7 +53,6 @@ void test01()\n   long double ld1 = 6.630025e+4;\n   long double ld;\n   void* v;\n-  const void* cv = &ul2;\n \n   // cache the num_get facet\n   wistringstream iss;\n@@ -124,12 +124,12 @@ void test01()\n   VERIFY( ld == 0 );\n   VERIFY( err == goodbit );\n \n-  // const void\n+  // void*\n   iss.str(L\"0xbffff74c,\");\n   iss.clear();\n   err = goodbit;\n   ng.get(iss.rdbuf(), 0, iss, err, v);\n-  VERIFY( &v != &cv );\n+  VERIFY( v != 0 );\n   VERIFY( err == goodbit );\n \n #ifdef _GLIBCXX_USE_LONG_LONG"}, {"sha": "36c6307bbb06adc28213a8bb37ec3afcd3571705", "filename": "libstdc++-v3/testsuite/22_locale/num_put/put/char/1.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90737ab777cc13f3c3aaf8e9c352254df3ad6866/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90737ab777cc13f3c3aaf8e9c352254df3ad6866/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F1.cc?ref=90737ab777cc13f3c3aaf8e9c352254df3ad6866", "patch": "@@ -65,7 +65,6 @@ void test01()\n   iterator_type os_it01 = np.put(os_it00, oss, '+', b1);\n   result1 = oss.str();\n   VERIFY( result1 == \"1\" );\n-  //  VERIFY( os_it00 != os_it01 );\n \n   oss.str(empty);\n   np.put(oss.rdbuf(), oss, '+', b0);\n@@ -134,7 +133,7 @@ void test01()\n   result1 = oss.str();\n   VERIFY( result1 == \"0\" );\n \n-  // const void\n+  // const void*\n   oss.str(empty);\n   oss.clear();\n   np.put(oss.rdbuf(), oss, '+', cv);"}, {"sha": "f588df3497a576c1ab423b74ec5f4955066d08d9", "filename": "libstdc++-v3/testsuite/22_locale/num_put/put/wchar_t/1.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90737ab777cc13f3c3aaf8e9c352254df3ad6866/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90737ab777cc13f3c3aaf8e9c352254df3ad6866/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F1.cc?ref=90737ab777cc13f3c3aaf8e9c352254df3ad6866", "patch": "@@ -2,7 +2,8 @@\n \n // 2001-11-19 Benjamin Kosnik  <bkoz@redhat.com>\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005 Free Software Foundation\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -65,7 +66,6 @@ void test01()\n   iterator_type os_it01 = np.put(os_it00, oss, L'+', b1);\n   result1 = oss.str();\n   VERIFY( result1 == L\"1\" );\n-  //  VERIFY( os_it00 != os_it01 );\n \n   oss.str(empty);\n   np.put(oss.rdbuf(), oss, L'+', b0);\n@@ -134,7 +134,7 @@ void test01()\n   result1 = oss.str();\n   VERIFY( result1 == L\"0\" );\n \n-  // const void\n+  // const void*\n   oss.str(empty);\n   oss.clear();\n   np.put(oss.rdbuf(), oss, L'+', cv);"}]}