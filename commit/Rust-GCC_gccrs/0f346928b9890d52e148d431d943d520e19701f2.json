{"sha": "0f346928b9890d52e148d431d943d520e19701f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYzNDY5MjhiOTg5MGQ1MmUxNDhkNDMxZDk0M2Q1MjBlMTk3MDFmMg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-11-19T18:56:01Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-11-19T18:56:01Z"}, "message": "mode-switching.c (optimize_mode_switching): Use FOR_BB_INSNS instead of open-coded for loop.\n\n\t* mode-switching.c (optimize_mode_switching): Use\n\tFOR_BB_INSNS instead of open-coded for loop.\n\t* cfgrtl.c (redirect_branch_edge): Ditto.\n\nFrom-SVN: r166953", "tree": {"sha": "ed75747dcbf5343045912de3228853e33c3f3462", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed75747dcbf5343045912de3228853e33c3f3462"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f346928b9890d52e148d431d943d520e19701f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f346928b9890d52e148d431d943d520e19701f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f346928b9890d52e148d431d943d520e19701f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f346928b9890d52e148d431d943d520e19701f2/comments", "author": null, "committer": null, "parents": [{"sha": "e4746336dc92c73ec67159365f86b56b216417aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4746336dc92c73ec67159365f86b56b216417aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4746336dc92c73ec67159365f86b56b216417aa"}], "stats": {"total": 32, "additions": 15, "deletions": 17}, "files": [{"sha": "912b8d77532bba8753b966abf5385154c42d3042", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f346928b9890d52e148d431d943d520e19701f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f346928b9890d52e148d431d943d520e19701f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f346928b9890d52e148d431d943d520e19701f2", "patch": "@@ -1,3 +1,9 @@\n+2010-11-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* mode-switching.c (optimize_mode_switching): Use\n+\tFOR_BB_INSNS instead of open-coded for loop.\n+\t* cfgrtl.c (redirect_branch_edge): Ditto.\n+\n 2010-11-19  Joern Rennecke  <amylaar@spamcop.net>\n \n \tPR target/46436\n@@ -32,9 +38,8 @@\n \tbefore shorts.\n \t* opth-gen.awk: Ditto.\n \n-\t* configure.ac: Add support for HeaderInclude and SourceInclude\n-\toption directives to add the appropriate files to the dependency\n-\tlists.\n+\t* configure.ac: Add support for HeaderInclude and SourceInclude option\n+\tdirectives to add the appropriate files to the dependency lists.\n \t* configure: Regenerate.\n \t* Makefile.in (OPTIONS_H_EXTRA): New variable for HeaderInclude.\n \t(OPTIONS_C_EXTRA): New variable for SourceInclude.\n@@ -197,8 +202,7 @@\n \t(rs6000_option_override): Ditto.\n \t(rs6000_handle_option): Ditto.\n \t(rs6000_conditional_register_usage): Add debug trace message.\n-\t(struct rs6000_opt_mask): New for target attribute/pragma\n-\tsupport.\n+\t(struct rs6000_opt_mask): New for target attribute/pragma support.\n \t(rs6000_opt_masks): Ditto.\n \t(struct rs6000_opt_var): Ditto.\n \t(rs6000_opt_vars): Ditto.\n@@ -230,8 +234,7 @@\n \t(TARGET_DEBUG*): Ditto.\n \n \t* config/rs6000/rs6000-opts.h: New header file to define the enums\n-\tthat are used in target variables that are now defined in\n-\trs6000.opt.\n+\tthat are used in target variables that are now defined in rs6000.opt.\n \n \t* config/rs6000/sysv4.h (enum rs6000_sdata_type): Move to\n \trs6000-opts.h.\n@@ -266,12 +269,10 @@\n 2010-11-19  Joseph Myers  <joseph@codesourcery.com>\n \n \t* common.opt (flag_instrument_functions_exclude_functions,\n-\tflag_instrument_functions_exclude_files): New Variable\n-\tdefinitions.\n+\tflag_instrument_functions_exclude_files): New Variable definitions.\n \t* flags.h (flag_instrument_functions_exclude_p): Don't declare.\n \t* gimplify.c (char_p): Declare type and vectors.\n-\t(flag_instrument_functions_exclude_p): Moved from opts.c.  Make\n-\tstatic.\n+\t(flag_instrument_functions_exclude_p): Moved from opts.c.  Make static.\n \t* opts.c (flag_instrument_functions_exclude_functions,\n \tflag_instrument_functions_exclude_files): Remove.\n \t(add_comma_separated_to_vector): Take void **."}, {"sha": "5d64f3af0190663dad95160a5727336c5006918d", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f346928b9890d52e148d431d943d520e19701f2/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f346928b9890d52e148d431d943d520e19701f2/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=0f346928b9890d52e148d431d943d520e19701f2", "patch": "@@ -1062,8 +1062,7 @@ redirect_branch_edge (edge e, basic_block target)\n     /* When expanding this BB might actually contain multiple\n        jumps (i.e. not yet split by find_many_sub_basic_blocks).\n        Redirect all of those that match our label.  */\n-    for (insn = BB_HEAD (src); insn != NEXT_INSN (BB_END (src));\n-\t insn = NEXT_INSN (insn))\n+    FOR_BB_INSNS (src, insn)\n       if (JUMP_P (insn) && !patch_jump_insn (insn, old_label, target))\n \treturn NULL;\n "}, {"sha": "d4c7b24b981891c653bd3679da6a8fe597fb527c", "filename": "gcc/mode-switching.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f346928b9890d52e148d431d943d520e19701f2/gcc%2Fmode-switching.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f346928b9890d52e148d431d943d520e19701f2/gcc%2Fmode-switching.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmode-switching.c?ref=0f346928b9890d52e148d431d943d520e19701f2", "patch": "@@ -518,9 +518,7 @@ optimize_mode_switching (void)\n \t      }\n \t  }\n \n-\t  for (insn = BB_HEAD (bb);\n-\t       insn != NULL && insn != NEXT_INSN (BB_END (bb));\n-\t       insn = NEXT_INSN (insn))\n+\t  FOR_BB_INSNS (bb, insn)\n \t    {\n \t      if (INSN_P (insn))\n \t\t{"}, {"sha": "cea7f4414bf7230ec2c119ade30b126698539047", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f346928b9890d52e148d431d943d520e19701f2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f346928b9890d52e148d431d943d520e19701f2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0f346928b9890d52e148d431d943d520e19701f2", "patch": "@@ -25,7 +25,7 @@\n \t* objc.dg/attributes/proto-attribute-3.m: New.\n \t* obj-c++.dg/attributes/proto-attribute-1.mm: Updated.\n \t* obj-c++.dg/attributes/proto-attribute-2.mm: New.\n-\t* obj-c++.dg/attributes/proto-attribute-3.mm: New.\t\n+\t* obj-c++.dg/attributes/proto-attribute-3.mm: New.\n \n 2010-11-19  Eric Botcazou  <ebotcazou@adacore.com>\n "}]}