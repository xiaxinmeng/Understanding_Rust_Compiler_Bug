{"sha": "4c1a901679c2dbb549916f260f3f878dcb48390a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGMxYTkwMTY3OWMyZGJiNTQ5OTE2ZjI2MGYzZjg3OGRjYjQ4MzkwYQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2009-06-18T14:13:20Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2009-06-18T14:13:20Z"}, "message": "system-aix64.ads: New file.\n\n\t* system-aix64.ads: New file.\n\t* gcc-interface/Makefile.in (aix LIBGNAT_TARGET_PAIRS): Use the\n\t64bit system.ads for ppc64 multilib variants.\n\nFrom-SVN: r148659", "tree": {"sha": "9ffe9ebee3951da7e1aa37dc514757a1820c3c7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ffe9ebee3951da7e1aa37dc514757a1820c3c7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c1a901679c2dbb549916f260f3f878dcb48390a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c1a901679c2dbb549916f260f3f878dcb48390a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c1a901679c2dbb549916f260f3f878dcb48390a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c1a901679c2dbb549916f260f3f878dcb48390a/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bdc4827b1cc142fc67a1de902379d0eebd76a5ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdc4827b1cc142fc67a1de902379d0eebd76a5ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdc4827b1cc142fc67a1de902379d0eebd76a5ae"}], "stats": {"total": 181, "additions": 179, "deletions": 2}, "files": [{"sha": "0a469b26ddc45f10c970cfb43a512b7e67da9926", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a901679c2dbb549916f260f3f878dcb48390a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a901679c2dbb549916f260f3f878dcb48390a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4c1a901679c2dbb549916f260f3f878dcb48390a", "patch": "@@ -1,3 +1,9 @@\n+2009-06-18  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* system-aix64.ads: New file.\n+\t* gcc-interface/Makefile.in (aix LIBGNAT_TARGET_PAIRS): Use the\n+\t64bit system.ads for ppc64 multilib variants.\n+\n 2009-06-16  Robert Dewar  <dewar@adacore.com>\n             Olivier Hainque  <hainque@adacore.com>\n "}, {"sha": "8a9bbe3a59b2bad44b9442461587932b90d16912", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a901679c2dbb549916f260f3f878dcb48390a/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a901679c2dbb549916f260f3f878dcb48390a/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=4c1a901679c2dbb549916f260f3f878dcb48390a", "patch": "@@ -1213,7 +1213,7 @@ ifeq ($(strip $(filter-out hppa% hp hpux11%,$(targ))),)\n endif\n \n ifeq ($(strip $(filter-out ibm aix%,$(manu) $(osys))),)\n-  LIBGNAT_TARGET_PAIRS = \\\n+  LIBGNAT_TARGET_PAIRS_COMMON = \\\n   a-intnam.ads<a-intnam-aix.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n@@ -1222,9 +1222,25 @@ ifeq ($(strip $(filter-out ibm aix%,$(manu) $(osys))),)\n   s-osprim.adb<s-osprim-posix.adb \\\n   s-taprop.adb<s-taprop-posix.adb \\\n   s-taspri.ads<s-taspri-posix.ads \\\n-  s-tpopsp.adb<s-tpopsp-posix.adb \\\n+  s-tpopsp.adb<s-tpopsp-posix.adb\n+\n+  LIBGNAT_TARGET_PAIRS_32 = \\\n   system.ads<system-aix.ads\n \n+  LIBGNAT_TARGET_PAIRS_64 = \\\n+  system.ads<system-aix64.ads\n+\n+  ifeq ($(findstring ppc64, \\\n+\t  $(shell $(GCC_FOR_TARGET) $(GNATLIBCFLAGS) \\\n+\t\t   -print-multi-os-directory)), \\\n+\tppc64)\n+    LIBGNAT_TARGET_PAIRS = \\\n+    $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_64)\n+  else\n+    LIBGNAT_TARGET_PAIRS = \\\n+    $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_32)\n+  endif\n+\n   THREADSLIB = -lpthreads\n   PREFIX_OBJS=$(PREFIX_REAL_OBJS)\n "}, {"sha": "c32125281dace033f3558bea9a04c1c79e272022", "filename": "gcc/ada/system-aix64.ads", "status": "added", "additions": 155, "deletions": 0, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1a901679c2dbb549916f260f3f878dcb48390a/gcc%2Fada%2Fsystem-aix64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1a901679c2dbb549916f260f3f878dcb48390a/gcc%2Fada%2Fsystem-aix64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-aix64.ads?ref=4c1a901679c2dbb549916f260f3f878dcb48390a", "patch": "@@ -0,0 +1,155 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                           (PPC/AIX64 Version)                            --\n+--                                                                          --\n+--            Copyright (C) 2009, Free Software Foundation, Inc.            --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 0.01;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   pragma Preelaborable_Initialization (Address);\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 64;\n+   Memory_Size  : constant := 2 ** 64;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := High_Order_First;\n+   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   --  0 .. 126 corresponds to the system priority range 1 .. 127.\n+   --\n+   --  If the scheduling policy is SCHED_FIFO or SCHED_RR the runtime makes use\n+   --  of the entire range provided by the system.\n+   --\n+   --  If the scheduling policy is SCHED_OTHER the only valid system priority\n+   --  is 1 and that is the only value ever passed to the system, regardless of\n+   --  how priorities are set by user programs.\n+\n+   Max_Priority           : constant Positive := 125;\n+   Max_Interrupt_Priority : constant Positive := 126;\n+\n+   subtype Any_Priority       is Integer      range   0 .. 126;\n+   subtype Priority           is Any_Priority range   0 .. 125;\n+   subtype Interrupt_Priority is Any_Priority range 126 .. 126;\n+\n+   Default_Priority : constant Priority :=\n+     (Priority'First + Priority'Last) / 2;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n+   Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   Preallocated_Stacks       : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := True;\n+   Stack_Check_Limits        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Always_Compatible_Rep     : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := False;\n+   GCC_ZCX_Support           : constant Boolean := True;  --  Post GCC 4 only\n+\n+end System;"}]}