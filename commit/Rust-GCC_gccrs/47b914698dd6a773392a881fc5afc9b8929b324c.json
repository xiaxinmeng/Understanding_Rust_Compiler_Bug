{"sha": "47b914698dd6a773392a881fc5afc9b8929b324c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdiOTE0Njk4ZGQ2YTc3MzM5MmE4ODFmYzVhZmM5Yjg5MjliMzI0Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-08-17T18:08:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-08-17T18:08:05Z"}, "message": "re PR fortran/45308 ([F2003] DATE_AND_TIME does _not_ blank-pad strings)\n\n\tPR fortran/45308\n\t* intrinsics/date_and_time.c (date_and_time): Pass __{zone,time,date}_len\n\tinstead of {ZONE,TIME,DATE}_LEN as second argument to fstrcpy.  Drop\n\tasserts.  Adjust comment to the F2003 wording from the F95 wording.\n\n\t* gfortran.dg/pr45308.f03: New test.\n\nFrom-SVN: r163312", "tree": {"sha": "a116d1b19f474b35987ce4e962e78b89ef101e20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a116d1b19f474b35987ce4e962e78b89ef101e20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47b914698dd6a773392a881fc5afc9b8929b324c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b914698dd6a773392a881fc5afc9b8929b324c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47b914698dd6a773392a881fc5afc9b8929b324c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b914698dd6a773392a881fc5afc9b8929b324c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "35d3d688fc4b8adde86a554a5061f2a7d54df6a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35d3d688fc4b8adde86a554a5061f2a7d54df6a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35d3d688fc4b8adde86a554a5061f2a7d54df6a2"}], "stats": {"total": 78, "additions": 43, "deletions": 35}, "files": [{"sha": "60c856d4ec06a577ab2e4df0da78a9d88e047b5a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b914698dd6a773392a881fc5afc9b8929b324c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b914698dd6a773392a881fc5afc9b8929b324c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=47b914698dd6a773392a881fc5afc9b8929b324c", "patch": "@@ -1,3 +1,8 @@\n+2010-08-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/45308\n+\t* gfortran.dg/pr45308.f03: New test.\n+\n 2010-08-17  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/45296"}, {"sha": "ba96104b02c8237ba2b6a61a85b13746d04416c6", "filename": "gcc/testsuite/gfortran.dg/pr45308.f03", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b914698dd6a773392a881fc5afc9b8929b324c/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr45308.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b914698dd6a773392a881fc5afc9b8929b324c/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr45308.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr45308.f03?ref=47b914698dd6a773392a881fc5afc9b8929b324c", "patch": "@@ -0,0 +1,9 @@\n+! PR fortran/45308\n+! { dg-do run }\n+ character(len=36) :: date, time\n+ date = 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n+ time = 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\n+ call date_and_time (date, time)\n+ if (index (date, 'a') /= 0 .or. index (time, 'a') /= 0) &\n+   call abort\n+end"}, {"sha": "b0a9c05ceb6225985223b644fb470666b95807e8", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b914698dd6a773392a881fc5afc9b8929b324c/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b914698dd6a773392a881fc5afc9b8929b324c/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=47b914698dd6a773392a881fc5afc9b8929b324c", "patch": "@@ -1,3 +1,10 @@\n+2010-08-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/45308\n+\t* intrinsics/date_and_time.c (date_and_time): Pass __{zone,time,date}_len\n+\tinstead of {ZONE,TIME,DATE}_LEN as second argument to fstrcpy.  Drop\n+\tasserts.  Adjust comment to the F2003 wording from the F95 wording.\n+\n 2010-08-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/44931"}, {"sha": "2ee8e5c0af7905800526e9a986b4507452714b75", "filename": "libgfortran/intrinsics/date_and_time.c", "status": "modified", "additions": 22, "deletions": 35, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b914698dd6a773392a881fc5afc9b8929b324c/libgfortran%2Fintrinsics%2Fdate_and_time.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b914698dd6a773392a881fc5afc9b8929b324c/libgfortran%2Fintrinsics%2Fdate_and_time.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fdate_and_time.c?ref=47b914698dd6a773392a881fc5afc9b8929b324c", "patch": "@@ -93,29 +93,25 @@ gmtime_r (const time_t * timep, struct tm * result)\n \n    Arguments:\n \n-   DATE (optional) shall be scalar and of type default character, and\n-   shall be of length at least 8 in order to contain the complete\n-   value. It is an INTENT(OUT) argument. Its leftmost 8 characters\n-   are assigned a value of the form CCYYMMDD, where CC is the century,\n-   YY the year within the century, MM the month within the year, and\n-   DD the day within the month. If there is no date available, they\n-   are assigned blanks.\n-\n-   TIME (optional) shall be scalar and of type default character, and\n-   shall be of length at least 10 in order to contain the complete\n-   value. It is an INTENT(OUT) argument. Its leftmost 10 characters\n-   are assigned a value of the form hhmmss.sss, where hh is the hour\n-   of the day, mm is the minutes of the hour, and ss.sss is the\n-   seconds and milliseconds of the minute. If there is no clock\n-   available, they are assigned blanks.\n-\n-   ZONE (optional) shall be scalar and of type default character, and\n-   shall be of length at least 5 in order to contain the complete\n-   value. It is an INTENT(OUT) argument. Its leftmost 5 characters\n-   are assigned a value of the form [+-]hhmm, where hh and mm are the\n-   time difference with respect to Coordinated Universal Time (UTC) in\n-   hours and parts of an hour expressed in minutes, respectively. If\n-   there is no clock available, they are assigned blanks.\n+   DATE (optional) shall be scalar and of type default character.\n+   It is an INTENT(OUT) argument.  It is assigned a value of the\n+   form CCYYMMDD, where CC is the century, YY the year within the\n+   century, MM the month within the year, and DD the day within the\n+   month.  If there is no date available, they are assigned blanks.\n+\n+   TIME (optional) shall be scalar and of type default character.\n+   It is an INTENT(OUT) argument. It is assigned a value of the\n+   form hhmmss.sss, where hh is the hour of the day, mm is the\n+   minutes of the hour, and ss.sss is the seconds and milliseconds\n+   of the minute.  If there is no clock available, they are assigned\n+   blanks.\n+\n+   ZONE (optional) shall be scalar and of type default character.\n+   It is an INTENT(OUT) argument.  It is assigned a value of the\n+   form [+-]hhmm, where hh and mm are the time difference with\n+   respect to Coordinated Universal Time (UTC) in hours and parts\n+   of an hour expressed in minutes, respectively.  If there is no\n+   clock available, they are assigned blanks.\n \n    VALUES (optional) shall be of type default integer and of rank\n    one. It is an INTENT(OUT) argument. Its size shall be at least\n@@ -311,22 +307,13 @@ date_and_time (char *__date, char *__time, char *__zone,\n     }\n \n   if (__zone)\n-    {\n-      assert (__zone_len >= ZONE_LEN);\n-      fstrcpy (__zone, ZONE_LEN, zone, ZONE_LEN);\n-    }\n+    fstrcpy (__zone, __zone_len, zone, ZONE_LEN);\n \n   if (__time)\n-    {\n-      assert (__time_len >= TIME_LEN);\n-      fstrcpy (__time, TIME_LEN, timec, TIME_LEN);\n-    }\n+    fstrcpy (__time, __time_len, timec, TIME_LEN);\n \n   if (__date)\n-    {\n-      assert (__date_len >= DATE_LEN);\n-      fstrcpy (__date, DATE_LEN, date, DATE_LEN);\n-    }\n+    fstrcpy (__date, __date_len, date, DATE_LEN);\n }\n \n "}]}