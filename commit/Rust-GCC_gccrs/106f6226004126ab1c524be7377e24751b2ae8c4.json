{"sha": "106f6226004126ab1c524be7377e24751b2ae8c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA2ZjYyMjYwMDQxMjZhYjFjNTI0YmU3Mzc3ZTI0NzUxYjJhZThjNA==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-04-01T21:37:11Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-04-05T09:45:58Z"}, "message": "Placate GCC 4.8\n\n    In file included from [...]/gcc/rust/parse/rust-parse.h:645:0,\n                     from [...]/gcc/rust/rust-session-manager.cc:34:\n    [...]/gcc/rust/parse/rust-parse-impl.h: In instantiation of 'std::unique_ptr<Rust::AST::AttrInput> Rust::Parser<ManagedTokenSource>::parse_attr_input() [with ManagedTokenSource = Rust::Lexer]':\n    [...]/gcc/rust/parse/rust-parse-impl.h:522:66:   required from 'Rust::AST::Attribute Rust::Parser<ManagedTokenSource>::parse_attribute_body() [with ManagedTokenSource = Rust::Lexer]'\n    [...]/gcc/rust/parse/rust-parse-impl.h:493:59:   required from 'Rust::AST::Attribute Rust::Parser<ManagedTokenSource>::parse_inner_attribute() [with ManagedTokenSource = Rust::Lexer]'\n    [...]/gcc/rust/parse/rust-parse-impl.h:444:58:   required from 'std::vector<Rust::AST::Attribute> Rust::Parser<ManagedTokenSource>::parse_inner_attributes() [with ManagedTokenSource = Rust::Lexer]'\n    [...]/gcc/rust/parse/rust-parse-impl.h:402:69:   required from 'Rust::AST::Crate Rust::Parser<ManagedTokenSource>::parse_crate() [with ManagedTokenSource = Rust::Lexer]'\n    [...]/gcc/rust/rust-session-manager.cc:458:43:   required from here\n    [...]/gcc/rust/parse/rust-parse-impl.h:734:9: error: could not convert 'input_tree' from 'std::unique_ptr<Rust::AST::DelimTokenTree>' to 'std::unique_ptr<Rust::AST::AttrInput>'\n      return input_tree;\n             ^\n    [...]/gcc/rust/parse/rust-parse-impl.h:792:9: error: could not convert 'attr_input_lit' from 'std::unique_ptr<Rust::AST::AttrInputLiteral>' to 'std::unique_ptr<Rust::AST::AttrInput>'\n      return attr_input_lit;\n             ^\n\n    In file included from [...]/gcc/rust/parse/rust-parse.h:645:0,\n                     from [...]/gcc/rust/rust-session-manager.cc:34:\n    [...]/gcc/rust/parse/rust-parse-impl.h: In instantiation of 'std::unique_ptr<Rust::AST::TraitItem> Rust::Parser<ManagedTokenSource>::parse_trait_item() [with ManagedTokenSource = Rust::Lexer]':\n    [...]/gcc/rust/parse/rust-parse-impl.h:4693:70:   required from 'std::unique_ptr<Rust::AST::Trait> Rust::Parser<ManagedTokenSource>::parse_trait(Rust::AST::Visibility, std::vector<Rust::AST::Attribute>) [with ManagedTokenSource = Rust::Lexer]'\n    [...]/gcc/rust/parse/rust-parse-impl.h:1268:67:   required from 'std::unique_ptr<Rust::AST::VisItem> Rust::Parser<ManagedTokenSource>::parse_vis_item(std::vector<Rust::AST::Attribute>) [with ManagedTokenSource = Rust::Lexer]'\n    [...]/gcc/rust/parse/rust-parse-impl.h:1048:53:   required from 'std::unique_ptr<Rust::AST::Item> Rust::Parser<ManagedTokenSource>::parse_item(bool) [with ManagedTokenSource = Rust::Lexer]'\n    [...]/gcc/rust/parse/rust-parse-impl.h:410:58:   required from 'Rust::AST::Crate Rust::Parser<ManagedTokenSource>::parse_crate() [with ManagedTokenSource = Rust::Lexer]'\n    [...]/gcc/rust/rust-session-manager.cc:458:43:   required from here\n    [...]/gcc/rust/parse/rust-parse-impl.h:4876:13: error: could not convert 'macro_invoc' from 'std::unique_ptr<Rust::AST::MacroInvocationSemi>' to 'std::unique_ptr<Rust::AST::TraitItem>'\n          return macro_invoc;\n                 ^", "tree": {"sha": "16c2397a864937eb4c46aa292b264368590d452c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16c2397a864937eb4c46aa292b264368590d452c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/106f6226004126ab1c524be7377e24751b2ae8c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/106f6226004126ab1c524be7377e24751b2ae8c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/106f6226004126ab1c524be7377e24751b2ae8c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/106f6226004126ab1c524be7377e24751b2ae8c4/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1cbfc670fe9a54baf08b163beb4b026023c432d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1cbfc670fe9a54baf08b163beb4b026023c432d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1cbfc670fe9a54baf08b163beb4b026023c432d"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "cfb9889afe1ac00fa9ee2dd125a1484008daba73", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/106f6226004126ab1c524be7377e24751b2ae8c4/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/106f6226004126ab1c524be7377e24751b2ae8c4/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=106f6226004126ab1c524be7377e24751b2ae8c4", "patch": "@@ -726,7 +726,7 @@ Parser<ManagedTokenSource>::parse_attr_input ()\n     case LEFT_SQUARE:\n       case LEFT_CURLY: {\n \t// must be a delimited token tree, so parse that\n-\tstd::unique_ptr<AST::DelimTokenTree> input_tree (\n+\tstd::unique_ptr<AST::AttrInput> input_tree (\n \t  new AST::DelimTokenTree (parse_delim_token_tree ()));\n \n \t// TODO: potential checks on DelimTokenTree before returning\n@@ -782,7 +782,7 @@ Parser<ManagedTokenSource>::parse_attr_input ()\n \tAST::LiteralExpr lit_expr (t->get_str (), lit_type, t->get_type_hint (),\n \t\t\t\t   {}, t->get_locus ());\n \n-\tstd::unique_ptr<AST::AttrInputLiteral> attr_input_lit (\n+\tstd::unique_ptr<AST::AttrInput> attr_input_lit (\n \t  new AST::AttrInputLiteral (std::move (lit_expr)));\n \n \t// do checks or whatever? none required, really\n@@ -4863,7 +4863,7 @@ Parser<ManagedTokenSource>::parse_trait_item ()\n       }\n       default: {\n \t// TODO: try and parse macro invocation semi - if fails, maybe error.\n-\tstd::unique_ptr<AST::MacroInvocationSemi> macro_invoc\n+\tstd::unique_ptr<AST::TraitItem> macro_invoc\n \t  = parse_macro_invocation_semi (outer_attrs);\n \n \tif (macro_invoc == nullptr)"}]}