{"sha": "b8ae0812ee567fa380f0a8c7f30c7a660a5069c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhhZTA4MTJlZTU2N2ZhMzgwZjBhOGM3ZjMwYzdhNjYwYTUwNjljMw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-11-27T12:43:25Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-11-27T12:43:25Z"}, "message": "changelog: allow flexible \"cherry picked\" format.\n\nIt handles the following:\n(cherry picked from commit c0c7270cc4efd896fe99f8ad5409dbef089a407f (testsuite changes only))\n\ncontrib/ChangeLog:\n\n\t* gcc-changelog/git_commit.py: Use regex for cherry pick prefix.\n\t* gcc-changelog/test_email.py: Test it.\n\t* gcc-changelog/test_patches.txt: Likewise.", "tree": {"sha": "d7439fcb51f4c4801481cfac2bd35131e8eab772", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7439fcb51f4c4801481cfac2bd35131e8eab772"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8ae0812ee567fa380f0a8c7f30c7a660a5069c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8ae0812ee567fa380f0a8c7f30c7a660a5069c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8ae0812ee567fa380f0a8c7f30c7a660a5069c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8ae0812ee567fa380f0a8c7f30c7a660a5069c3/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d7d69ca4a8c05d883e07ee42058c9c6b0c72370", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d7d69ca4a8c05d883e07ee42058c9c6b0c72370", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d7d69ca4a8c05d883e07ee42058c9c6b0c72370"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "d0ac23c22aa48b1baae02edf91386dff9d695760", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8ae0812ee567fa380f0a8c7f30c7a660a5069c3/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8ae0812ee567fa380f0a8c7f30c7a660a5069c3/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=b8ae0812ee567fa380f0a8c7f30c7a660a5069c3", "patch": "@@ -158,11 +158,11 @@\n item_empty_regex = re.compile(r'\\t(\\* \\S+ )?\\(\\S+\\):\\s*$')\n item_parenthesis_regex = re.compile(r'\\t(\\*|\\(\\S+\\):)')\n revert_regex = re.compile(r'This reverts commit (?P<hash>\\w+).$')\n+cherry_pick_regex = re.compile(r'cherry picked from commit (?P<hash>\\w+)')\n \n LINE_LIMIT = 100\n TAB_WIDTH = 8\n CO_AUTHORED_BY_PREFIX = 'co-authored-by: '\n-CHERRY_PICK_PREFIX = '(cherry picked from commit '\n \n REVIEW_PREFIXES = ('reviewed-by: ', 'reviewed-on: ', 'signed-off-by: ',\n                    'acked-by: ', 'tested-by: ', 'reported-by: ',\n@@ -422,14 +422,16 @@ def parse_changelog(self):\n                     continue\n                 elif lowered_line.startswith(REVIEW_PREFIXES):\n                     continue\n-                elif line.startswith(CHERRY_PICK_PREFIX):\n-                    commit = line[len(CHERRY_PICK_PREFIX):].rstrip(')')\n-                    if self.cherry_pick_commit:\n-                        self.errors.append(Error('multiple cherry pick lines',\n-                                                 line))\n-                    else:\n-                        self.cherry_pick_commit = commit\n-                    continue\n+                else:\n+                    m = cherry_pick_regex.search(line)\n+                    if m:\n+                        commit = m.group('hash')\n+                        if self.cherry_pick_commit:\n+                            msg = 'multiple cherry pick lines'\n+                            self.errors.append(Error(msg, line))\n+                        else:\n+                            self.cherry_pick_commit = commit\n+                        continue\n \n                 # ChangeLog name will be deduced later\n                 if not last_entry:"}, {"sha": "579194cdc24f9c8d7f778ac5f7d9e4cdee2eb566", "filename": "contrib/gcc-changelog/test_email.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8ae0812ee567fa380f0a8c7f30c7a660a5069c3/contrib%2Fgcc-changelog%2Ftest_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8ae0812ee567fa380f0a8c7f30c7a660a5069c3/contrib%2Fgcc-changelog%2Ftest_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_email.py?ref=b8ae0812ee567fa380f0a8c7f30c7a660a5069c3", "patch": "@@ -355,6 +355,8 @@ def test_parse_git_name_status(self):\n     def test_backport(self):\n         email = self.from_patch_glob('0001-asan-fix-RTX-emission.patch')\n         assert not email.errors\n+        expected_hash = '8cff672cb9a132d3d3158c2edfc9a64b55292b80'\n+        assert email.cherry_pick_commit == expected_hash\n         assert len(email.changelog_entries) == 1\n         entry = list(email.to_changelog_entries())[0][1]\n         assert entry.startswith('2020-06-11  Martin Liska  <mliska@suse.cz>')"}, {"sha": "9e9c5cd893fa936273bfdebbd73162c382a6f882", "filename": "contrib/gcc-changelog/test_patches.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8ae0812ee567fa380f0a8c7f30c7a660a5069c3/contrib%2Fgcc-changelog%2Ftest_patches.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8ae0812ee567fa380f0a8c7f30c7a660a5069c3/contrib%2Fgcc-changelog%2Ftest_patches.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_patches.txt?ref=b8ae0812ee567fa380f0a8c7f30c7a660a5069c3", "patch": "@@ -3145,7 +3145,7 @@ gcc/ChangeLog:\n \tby using Pmode instead of ptr_mode.\n \n Co-Authored-By: Jakub Jelinek <jakub@redhat.com>\n-(cherry picked from commit 8cff672cb9a132d3d3158c2edfc9a64b55292b80)\n+(cherry picked from commit 8cff672cb9a132d3d3158c2edfc9a64b55292b80 (only part))\n ---\n  gcc/asan.c | 1 +\n  1 file changed, 1 insertion(+)"}]}