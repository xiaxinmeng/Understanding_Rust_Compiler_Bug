{"sha": "1a73c9e40658ef4a66940297ae0be7a66956389e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE3M2M5ZTQwNjU4ZWY0YTY2OTQwMjk3YWUwYmU3YTY2OTU2Mzg5ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-06-18T18:38:52Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-06-18T18:38:52Z"}, "message": "* ChangeLog: Fix whitespace.\n\nFrom-SVN: r188752", "tree": {"sha": "cee1ef33a7863b1040c0600272371ee5f3308214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cee1ef33a7863b1040c0600272371ee5f3308214"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a73c9e40658ef4a66940297ae0be7a66956389e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a73c9e40658ef4a66940297ae0be7a66956389e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a73c9e40658ef4a66940297ae0be7a66956389e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a73c9e40658ef4a66940297ae0be7a66956389e/comments", "author": null, "committer": null, "parents": [{"sha": "32e7b05d82d19fa9eefd489a18cd924e7d5ceb39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32e7b05d82d19fa9eefd489a18cd924e7d5ceb39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32e7b05d82d19fa9eefd489a18cd924e7d5ceb39"}], "stats": {"total": 93, "additions": 46, "deletions": 47}, "files": [{"sha": "26adde90bf54404d8148de3f7249df19e2e9377b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 46, "deletions": 47, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a73c9e40658ef4a66940297ae0be7a66956389e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a73c9e40658ef4a66940297ae0be7a66956389e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a73c9e40658ef4a66940297ae0be7a66956389e", "patch": "@@ -1,68 +1,67 @@\n 2012-06-18  Ian Bolton  <ian.bolton@arm.com>\n-            Sameera Deshpande  <sameera.deshpande@arm.com>\n-            Greta Yorsh  <greta.yorsh@arm.com>\n+\t    Sameera Deshpande  <sameera.deshpande@arm.com>\n+\t    Greta Yorsh  <greta.yorsh@arm.com>\n \n-        * config/arm/arm-protos.h (arm_output_epilogue): Remove.\n-        * config/arm/arm.c (print_multi_reg): Remove.\n-        (vfp_output_fldmd): Likewise.\n-        (arm_output_epilogue): Likewise.\n-        * config/arm/arm.md (epilogue_insns): Update condition and code.\n+\t* config/arm/arm-protos.h (arm_output_epilogue): Remove.\n+\t* config/arm/arm.c (print_multi_reg): Remove.\n+\t(vfp_output_fldmd): Likewise.\n+\t(arm_output_epilogue): Likewise.\n+\t* config/arm/arm.md (epilogue_insns): Update condition and code.\n \n 2012-06-18  Ian Bolton  <ian.bolton@arm.com>\n-            Sameera Deshpande  <sameera.deshpande@arm.com>\n-            Greta Yorsh  <greta.yorsh@arm.com>\n+\t    Sameera Deshpande  <sameera.deshpande@arm.com>\n+\t    Greta Yorsh  <greta.yorsh@arm.com>\n \n-        * config/arm/arm-protos.h (thumb2_expand_return): New declaration.\n-        * config/arm/arm.c (thumb2_expand_return): New function.\n-        * config/arm/arm.md (return): Update condition and code.\n+\t* config/arm/arm-protos.h (thumb2_expand_return): New declaration.\n+\t* config/arm/arm.c (thumb2_expand_return): New function.\n+\t* config/arm/arm.md (return): Update condition and code.\n \n 2012-06-18  Ian Bolton  <ian.bolton@arm.com>\n-            Sameera Deshpande  <sameera.deshpande@arm.com>\n-            Greta Yorsh  <greta.yorsh@arm.com>\n+\t    Sameera Deshpande  <sameera.deshpande@arm.com>\n+\t    Greta Yorsh  <greta.yorsh@arm.com>\n \n-        * config/arm/arm-protos.h (output_return_instruction): New parameter and\n-\tint to bool change of parameter types.\n-        * config/arm/arm.c (output_return_instruction): Likewise.\n-        * config/arm/arm.md (arm_simple_return): New pattern.\n-        (arm_return, cond_return, cond_return_inverted): Add new arguments.\n-        * config/arm/thumb2.md (thumb2_return): Update condition and code.\n+\t* config/arm/arm-protos.h (output_return_instruction): New parameter\n+\tand int to bool change of parameter types.\n+\t* config/arm/arm.c (output_return_instruction): Likewise.\n+\t* config/arm/arm.md (arm_simple_return): New pattern.\n+\t(arm_return, cond_return, cond_return_inverted): Add new arguments.\n+\t* config/arm/thumb2.md (thumb2_return): Update condition and code.\n \n 2012-06-18  Ian Bolton  <ian.bolton@arm.com>\n-            Sameera Deshpande  <sameera.deshpande@arm.com>\n-            Greta Yorsh  <greta.yorsh@arm.com>\n+\t    Sameera Deshpande  <sameera.deshpande@arm.com>\n+\t    Greta Yorsh  <greta.yorsh@arm.com>\n \n-        * config/arm/arm-protos.h (arm_expand_epilogue): New declaration.\n-        * config/arm/arm.c (arm_expand_epilogue): New function.\n-        * config/arm/arm.md (epilogue): Update condition and code.\n-        (sibcall_epilogue): Likewise.\n+\t* config/arm/arm-protos.h (arm_expand_epilogue): New declaration.\n+\t* config/arm/arm.c (arm_expand_epilogue): New function.\n+\t* config/arm/arm.md (epilogue): Update condition and code.\n+\t(sibcall_epilogue): Likewise.\n \n 2012-06-18  Ian Bolton  <ian.bolton@arm.com>\n-            Sameera Deshpande  <sameera.deshpande@arm.com>\n-            Greta Yorsh  <greta.yorsh@arm.com>\n+\t    Sameera Deshpande  <sameera.deshpande@arm.com>\n+\t    Greta Yorsh  <greta.yorsh@arm.com>\n \n-        * config/arm/arm.c (arm_expand_epilogue_apcs_frame): New function.\n-        * config/arm/arm.md (arm_addsi3) Add an alternative.\n+\t* config/arm/arm.c (arm_expand_epilogue_apcs_frame): New function.\n+\t* config/arm/arm.md (arm_addsi3) Add an alternative.\n \n 2012-06-18  Ian Bolton  <ian.bolton@arm.com>\n-            Sameera Deshpande  <sameera.deshpande@arm.com>\n-            Greta Yorsh  <greta.yorsh@arm.com>\n+\t    Sameera Deshpande  <sameera.deshpande@arm.com>\n+\t    Greta Yorsh  <greta.yorsh@arm.com>\n \n-        * config/arm/arm.md (vfp_pop_multiple_with_writeback) New\n-\tdefine_insn.\n-        * config/arm/predicates.md (pop_multiple_fp) New special predicate.\n-        * config/arm/arm.c (arm_emit_vfp_multi_reg_pop): New function.\n+\t* config/arm/arm.md (vfp_pop_multiple_with_writeback) New define_insn.\n+\t* config/arm/predicates.md (pop_multiple_fp) New special predicate.\n+\t* config/arm/arm.c (arm_emit_vfp_multi_reg_pop): New function.\n \n 2012-06-18  Ian Bolton  <ian.bolton@arm.com>\n-            Sameera Deshpande  <sameera.deshpande@arm.com>\n-            Greta Yorsh  <greta.yorsh@arm.com>\n+\t    Sameera Deshpande  <sameera.deshpande@arm.com>\n+\t    Greta Yorsh  <greta.yorsh@arm.com>\n \n-        * config/arm/arm.md (load_multiple_with_writeback) New define_insn.\n-        (load_multiple, pop_multiple_with_writeback_and_return) Likewise.\n-        (pop_multiple_with_return, ldr_with_return) Likewise.\n-        * config/arm/predicates.md (pop_multiple_return) New special predicate.\n-        * config/arm/arm-protos.h (arm_output_multireg_pop) New declaration.\n-        * config/arm/arm.c (arm_output_multireg_pop) New function.\n-        (arm_emit_multi_reg_pop): New function.\n+\t* config/arm/arm.md (load_multiple_with_writeback) New define_insn.\n+\t(load_multiple, pop_multiple_with_writeback_and_return) Likewise.\n+\t(pop_multiple_with_return, ldr_with_return) Likewise.\n+\t* config/arm/predicates.md (pop_multiple_return) New special predicate.\n+\t* config/arm/arm-protos.h (arm_output_multireg_pop) New declaration.\n+\t* config/arm/arm.c (arm_output_multireg_pop) New function.\n+\t(arm_emit_multi_reg_pop): New function.\n \n 2012-06-18  Greta Yorsh  <Greta.Yorsh@arm.com>\n \n@@ -105,8 +104,8 @@\n \t(apply_int_iterator): Likewise.\n \t(apply_iterators): Traverse int iterator table and add all the used\n \titerators to list.\n-\t(initialize_iterators): Initialize data structures and callbacks for int\n-\titerators.\n+\t(initialize_iterators): Initialize data structures and callbacks for\n+\tint iterators.\n \t(read_rtx): Parse and read mappings for int iterators.\n \t(read_rtx_code): Record int iterator usage.\n "}]}