{"sha": "58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThjZDFkNzBkZDhjZDRiOTU3NzNjMDQ4N2E1ZDJhZWNhZDJiNGRjMQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-06-03T18:30:39Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-06-03T18:30:39Z"}, "message": "linux.h (MD_UNWIND_SUPPORT): Remove.\n\n\tgcc:\n\t* config/alpha/linux.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/alpha/osf5.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/alpha/vms.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/bfin/linux.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/bfin/uclinux.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/i386/linux.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/i386/linux64.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/i386/sol2.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/i386/mingw32.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/ia64/linux.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/ia64/vms.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/m68k/linux.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/mips/linux.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/pa/pa-hpux.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/pa/pa32-linux.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/rs6000/darwin.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/rs6000/linux.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/rs6000/linux64.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/s390/linux.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/s390/tpf.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/sh/linux.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/sparc/linux.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/sparc/linux64.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/sparc/sol2.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/xtensa/linux.h (MD_UNWIND_SUPPORT): Remove.\n\t* config/alpha/linux-unwind.h: Move to ../libgcc/config/alpha.\n\t* config/alpha/osf5-unwind.h: Move to ../libgcc/config/alpha.\n\t* config/alpha/vms-unwind.h: Move to ../libgcc/config/alpha.\n\t* config/bfin/linux-unwind.h: Move to ../libgcc/config/bfin.\n\t* config/i386/linux-unwind.h: Move to ../libgcc/config/i386.\n\t* config/i386/sol2-unwind.h: Move to ../libgcc/config/i386.\n\t* config/i386/w32-unwind.h: Move to ../libgcc/config/i386.\n\t* config/ia64/linux-unwind.h: Move to ../libgcc/config/ia64.\n\t* config/ia64/vms-unwind.h: Move to ../libgcc/config/ia64.\n\t* config/m68k/linux-unwind.h: Move to ../libgcc/config/m68k.\n\t* config/mips/linux-unwind.h: Move to ../libgcc/config/mips.\n\t* config/pa/hpux-unwind.h: Move to ../libgcc/config/pa.\n\t* config/pa/linux-unwind.h: Move to ../libgcc/config/pa.\n\t* config/rs6000/darwin-unwind.h: Move to ../libgcc/config/rs6000.\n\t* config/rs6000/linux-unwind.h: Move to ../libgcc/config/rs6000.\n\t* config/s390/linux-unwind.h: Move to ../libgcc/config/s390.\n\t* config/s390/tpf-unwind.h: Move to ../libgcc/config/s390.\n\t* config/sh/linux-unwind.h: Move to ../libgcc/config/sh.\n\t* config/sparc/linux-unwind.h: Move to ../libgcc/config/sparc.\n\t* config/sparc/sol2-unwind.h: Move to ../libgcc/config/sparc.\n\t* config/xtensa/linux-unwind.h: Move to ../libgcc/config/xtensa.\n\t* config/darwin9.h (DARWIN_LIBSYSTEM_HAS_UNWIND): Remove.\n\t* system.h (MD_UNWIND_SUPPORT): Poison.\n\t* doc/tm.texi.in (Exception Handling, MD_UNWIND_SUPPORT): Remove.\n\t* doc/tm.texi: Regenerate.\n\t* unwind-dw2.c: Include md-unwind-support.h instead of\n\tMD_UNWIND_SUPPORT.\n\t* config/ia64/unwind-ia64.c: Likewise.\n\t* config/xtensa/unwind-dw2-xtensa.c: Likewise.\n\n\tlibgcc:\n\t* config/alpha/linux-unwind.h: Move from ../gcc/config/alpha.\n\t* config/alpha/osf5-unwind.h: Move from ../gcc/config/alpha.\n\t* config/alpha/vms-unwind.h: Move from ../gcc/config/alpha.\n\t* config/bfin/linux-unwind.h: Move from ../gcc/config/bfin.\n\t* config/i386/linux-unwind.h: Move from ../gcc/config/i386.\n\t* config/i386/sol2-unwind.h: Move from ../gcc/config/i386.\n\t* config/i386/w32-unwind.h: Move from ../gcc/config/i386.\n\tWrap in !__MINGW64__.\n\t* config/ia64/linux-unwind.h: Move from ../gcc/config/ia64.\n\t* config/ia64/vms-unwind.h: Move from ../gcc/config/ia64.\n\t* config/m68k/linux-unwind.h: Move from ../gcc/config/m68k.\n\t* config/mips/linux-unwind.h: Move from ../gcc/config/mips.\n\t* config/pa/hpux-unwind.h: Move from ../gcc/config/pa.\n\t* config/pa/linux-unwind.h: Move from ../gcc/config/pa.\n\t* config/rs6000/darwin-unwind.h: Move from ../gcc/config/rs6000.\n\tWrap in !__LP64__.\n\t* config/rs6000/linux-unwind.h: Move from ../gcc/config/rs6000.\n\t* config/s390/linux-unwind.h: Move from ../gcc/config/s390.\n\t* config/s390/tpf-unwind.h: Move from ../gcc/config/s390.\n\t* config/sh/linux-unwind.h: Move from ../gcc/config/sh.\n\t* config/sparc/linux-unwind.h: Move from ../gcc/config/sparc.\n\t* config/sparc/sol2-unwind.h: Move from ../gcc/config/sparc.\n\t* config/xtensa/linux-unwind.h: Move from ../gcc/config/xtensa.\n\t* config/no-unwind.h: New file.\n\t* config.host (md_unwind_header): Document.\n\tDefine.\n\t(alpha*-*-linux*, alpha*-dec-osf5.1*, alpha64-dec-*vms*,\n\talpha*-dec-*vms*, bfin*-uclinux*, bfin*-linux-uclibc*,\n\thppa*-*-linux*, hppa[12]*-*-hpux10*, hppa*64*-*-hpux11*,\n\thppa[12]*-*-hpux11*): Set md_unwind_header.\n\t(i[34567]86-*-linux*): Handle i[34567]86-*-kopensolaris*-gnu.\n\tSet md_unwind_header.\n\t(x86_64-*-linux*, i[34567]86-*-solaris2*): Set md_unwind_header.\n\t(i[34567]86-*-cygwin*): Split from i[34567]86-*-mingw*.\n\t(i[34567]86-*-mingw*, ia64*-*-linux*, ia64-hp-*vms*,\n\tm68k-*-uclinux*, m68k-*-linux*, mips64*-*-linux*, mips*-*-linux*,\n\tpowerpc-*-darwin*, powerpc-*-linux*, s390-*-linux*,\n\ts390x-*-linux*,  s390x-ibm-tpf*, sh*-*-linux*, sparc-*-linux*,\n\tsparc*-*-solaris2*, sparc64-*-linux*, xtensa*-*-linux*): Set\n\tmd_unwind_header.\n\t* configure.ac: Link md-unwind-support.h to $md_unwind_header.\n\t* configure: Regenerate.\n\nFrom-SVN: r174613", "tree": {"sha": "f430fed8dbe1ebf2c96bc2f167ea68cb1e504948", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f430fed8dbe1ebf2c96bc2f167ea68cb1e504948"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "34e0c8d5fe61e28903fd89685e091a9654015dbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34e0c8d5fe61e28903fd89685e091a9654015dbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34e0c8d5fe61e28903fd89685e091a9654015dbf"}], "stats": {"total": 319, "additions": 218, "deletions": 101}, "files": [{"sha": "94b105e2633304a27a7e253143e07c4e3e8d41d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -1,3 +1,60 @@\n+2011-06-03  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/alpha/linux.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/alpha/osf5.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/alpha/vms.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/bfin/linux.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/bfin/uclinux.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/i386/linux.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/i386/linux64.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/i386/sol2.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/i386/mingw32.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/ia64/linux.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/ia64/vms.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/m68k/linux.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/mips/linux.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/pa/pa-hpux.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/pa/pa32-linux.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/rs6000/darwin.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/rs6000/linux.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/rs6000/linux64.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/s390/linux.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/s390/tpf.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/sh/linux.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/sparc/linux.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/sparc/linux64.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/sparc/sol2.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/xtensa/linux.h (MD_UNWIND_SUPPORT): Remove.\n+\t* config/alpha/linux-unwind.h: Move to ../libgcc/config/alpha.\n+\t* config/alpha/osf5-unwind.h: Move to ../libgcc/config/alpha.\n+\t* config/alpha/vms-unwind.h: Move to ../libgcc/config/alpha.\n+\t* config/bfin/linux-unwind.h: Move to ../libgcc/config/bfin.\n+\t* config/i386/linux-unwind.h: Move to ../libgcc/config/i386.\n+\t* config/i386/sol2-unwind.h: Move to ../libgcc/config/i386.\n+\t* config/i386/w32-unwind.h: Move to ../libgcc/config/i386.\n+\t* config/ia64/linux-unwind.h: Move to ../libgcc/config/ia64.\n+\t* config/ia64/vms-unwind.h: Move to ../libgcc/config/ia64.\n+\t* config/m68k/linux-unwind.h: Move to ../libgcc/config/m68k.\n+\t* config/mips/linux-unwind.h: Move to ../libgcc/config/mips.\n+\t* config/pa/hpux-unwind.h: Move to ../libgcc/config/pa.\n+\t* config/pa/linux-unwind.h: Move to ../libgcc/config/pa.\n+\t* config/rs6000/darwin-unwind.h: Move to ../libgcc/config/rs6000.\n+\t* config/rs6000/linux-unwind.h: Move to ../libgcc/config/rs6000.\n+\t* config/s390/linux-unwind.h: Move to ../libgcc/config/s390.\n+\t* config/s390/tpf-unwind.h: Move to ../libgcc/config/s390.\n+\t* config/sh/linux-unwind.h: Move to ../libgcc/config/sh.\n+\t* config/sparc/linux-unwind.h: Move to ../libgcc/config/sparc.\n+\t* config/sparc/sol2-unwind.h: Move to ../libgcc/config/sparc.\n+\t* config/xtensa/linux-unwind.h: Move to ../libgcc/config/xtensa.\n+\t* config/darwin9.h (DARWIN_LIBSYSTEM_HAS_UNWIND): Remove.\n+\t* system.h (MD_UNWIND_SUPPORT): Poison.\n+\t* doc/tm.texi.in (Exception Handling, MD_UNWIND_SUPPORT): Remove.\n+\t* doc/tm.texi: Regenerate.\n+\t* unwind-dw2.c: Include md-unwind-support.h instead of\n+\tMD_UNWIND_SUPPORT.\n+\t* config/ia64/unwind-ia64.c: Likewise.\n+\t* config/xtensa/unwind-dw2-xtensa.c: Likewise.\n+\n 2011-06-03  Jack Howarth <howarth@bromo.med.uc.edu>\n \n \t* varpool.c (varpool_extra_name_alias): Return NULL, not false."}, {"sha": "38dbdb0c8becf9a0805a8ad06f69b5e154a7a1ef", "filename": "gcc/config/alpha/linux.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Falpha%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Falpha%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -1,7 +1,7 @@\n /* Definitions of target machine for GNU compiler,\n    for Alpha Linux-based GNU systems.\n    Copyright (C) 1996, 1997, 1998, 2002, 2003, 2004, 2005, 2006, 2007, 2009,\n-   2010 Free Software Foundation, Inc.\n+   2010, 2011 Free Software Foundation, Inc.\n    Contributed by Richard Henderson.\n \n This file is part of GCC.\n@@ -84,8 +84,6 @@ along with GCC; see the file COPYING3.  If not see\n #define USE_LD_AS_NEEDED 1\n #endif\n \n-#define MD_UNWIND_SUPPORT \"config/alpha/linux-unwind.h\"\n-\n /* Define if long doubles should be mangled as 'g'.  */\n #define TARGET_ALTERNATE_LONG_DOUBLE_MANGLING\n "}, {"sha": "995f35d4f32bf4190819098c8e48d999d577173e", "filename": "gcc/config/alpha/osf5.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Falpha%2Fosf5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Falpha%2Fosf5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fosf5.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -274,5 +274,3 @@ __enable_execute_stack (void *addr)\t\t\t\t\t\\\n \n /* Handle #pragma extern_prefix.  */\n #define TARGET_HANDLE_PRAGMA_EXTERN_PREFIX 1\n-\n-#define MD_UNWIND_SUPPORT \"config/alpha/osf5-unwind.h\""}, {"sha": "f730ea1b5dd2daec7d8a478ae9d3aad1a71ce51f", "filename": "gcc/config/alpha/vms.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Falpha%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Falpha%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -225,14 +225,6 @@ typedef struct {int num_args; enum avms_arg_type atypes[6];} avms_arg_info;\n #define LINK_EH_SPEC \"vms-dwarf2eh.o%s \"\n #define LINK_GCC_C_SEQUENCE_SPEC \"%G\"\n \n-#ifdef IN_LIBGCC2\n-/* Get the definition for MD_FALLBACK_FRAME_STATE_FOR from a separate\n-   file. This avoids having to recompile the world instead of libgcc only\n-   when changes to this macro are exercised.  */\n-\n-#define MD_UNWIND_SUPPORT \"config/alpha/vms-unwind.h\"\n-#endif\n-\n #define ASM_OUTPUT_EXTERNAL(FILE, DECL, NAME) \\\n   avms_asm_output_external (FILE, DECL, NAME)\n "}, {"sha": "f91cf17f14113c8c1308f7ab3ea7f550e2a15e99", "filename": "gcc/config/bfin/linux.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fbfin%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fbfin%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Flinux.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -48,7 +48,5 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    -dynamic-linker /lib/ld-uClibc.so.0} \\\n    %{static}} -init __init -fini __fini\"\n \n-#define MD_UNWIND_SUPPORT \"config/bfin/linux-unwind.h\"\n-\n #undef TARGET_SUPPORTS_SYNC_CALLS\n #define TARGET_SUPPORTS_SYNC_CALLS 1"}, {"sha": "da26be576064709b679aa26b8f3ad1c702c8f7d5", "filename": "gcc/config/bfin/uclinux.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fbfin%2Fuclinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fbfin%2Fuclinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fuclinux.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -32,8 +32,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n   %{mfast-fp:-lbffastfp} %G %L %{mfast-fp:-lbffastfp} %G \\\n \"\n \n-#define MD_UNWIND_SUPPORT \"config/bfin/linux-unwind.h\"\n-\n /* Like the definition in gcc.c, but for purposes of uClinux, every link is\n    static.  */\n #define MFWRAP_SPEC \" %{fmudflap|fmudflapth: \\"}, {"sha": "bb62dd4ca9f515dce2b46591c29e8d03568918db", "filename": "gcc/config/darwin9.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fdarwin9.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fdarwin9.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin9.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for Darwin (Mac OS X) systems.\n-   Copyright (C) 2006, 2007, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2006, 2007, 2010, 2011 Free Software Foundation, Inc.\n    Contributed by Apple Inc.\n \n This file is part of GCC.\n@@ -35,9 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n /* Tell collect2 to run dsymutil for us as necessary.  */\n #define COLLECT_RUN_DSYMUTIL 1\n \n-/* libSystem contains unwind information for signal frames.  */\n-#define DARWIN_LIBSYSTEM_HAS_UNWIND\n-\n #undef  ASM_OUTPUT_ALIGNED_COMMON\n #define ASM_OUTPUT_ALIGNED_COMMON(FILE, NAME, SIZE, ALIGN)\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\"}, {"sha": "73681fe82f66f851a066bceb8d0b672b0897b834", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -22,5 +22,3 @@ along with GCC; see the file COPYING3.  If not see\n \n #define GNU_USER_LINK_EMULATION \"elf_i386\"\n #define GLIBC_DYNAMIC_LINKER \"/lib/ld-linux.so.2\"\n-\n-#define MD_UNWIND_SUPPORT \"config/i386/linux-unwind.h\""}, {"sha": "9bf7eab04af320ed560aa4c76041b9c5bfae8c9e", "filename": "gcc/config/i386/linux64.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fi386%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fi386%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux64.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -26,5 +26,3 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #define GLIBC_DYNAMIC_LINKER32 \"/lib/ld-linux.so.2\"\n #define GLIBC_DYNAMIC_LINKER64 \"/lib64/ld-linux-x86-64.so.2\"\n-\n-#define MD_UNWIND_SUPPORT \"config/i386/linux-unwind.h\""}, {"sha": "c1c12778d7014889bc1a762e89d45f029225ff1b", "filename": "gcc/config/i386/mingw32.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fi386%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fi386%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw32.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -241,12 +241,6 @@ __enable_execute_stack (void *addr)\t\t\t\t\t\\\n #include <windows.h>\n #endif\n \n-/* For 64-bit Windows we can't use DW2 unwind info. Also for multilib\n-   builds we can't use it, too.  */\n-#if !TARGET_64BIT_DEFAULT && !defined (TARGET_BI_ARCH)\n-#define MD_UNWIND_SUPPORT \"config/i386/w32-unwind.h\"\n-#endif\n-\n /* This matches SHLIB_SONAME and SHLIB_SOVERSION in t-cygming. */\n /* This matches SHLIB_SONAME and SHLIB_SOVERSION in t-cygwin. */\n #if DWARF2_UNWIND_INFO"}, {"sha": "e466b03d0c9b6c18a7c407eab0364a38657983f6", "filename": "gcc/config/i386/sol2.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fi386%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fi386%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -171,5 +171,3 @@ along with GCC; see the file COPYING3.  If not see\n \n #undef  PTRDIFF_TYPE\n #define PTRDIFF_TYPE \"int\"\n-\n-#define MD_UNWIND_SUPPORT \"config/i386/sol2-unwind.h\""}, {"sha": "00b0ddba1a0ed2ac5e38c89d85f5ca09a01d272d", "filename": "gcc/config/ia64/linux.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fia64%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fia64%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Flinux.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -77,8 +77,6 @@ do {\t\t\t\t\t\t\\\n #undef LINK_EH_SPEC\n #define LINK_EH_SPEC \"\"\n \n-#define MD_UNWIND_SUPPORT \"config/ia64/linux-unwind.h\"\n-\n /* Put all *tf routines in libgcc.  */\n #undef LIBGCC2_HAS_TF_MODE\n #define LIBGCC2_HAS_TF_MODE 1"}, {"sha": "061bd4b89806ed83cb04137e071baf5b29eafa72", "filename": "gcc/config/ia64/unwind-ia64.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fia64%2Funwind-ia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fia64%2Funwind-ia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Funwind-ia64.c?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -1,7 +1,7 @@\n /* Subroutines needed for unwinding IA-64 standard format stack frame\n    info for exception handling.\n    Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2004, 2005, 2006,\n-   2009  Free Software Foundation, Inc.\n+   2009, 2011  Free Software Foundation, Inc.\n    Contributed by Andrew MacLeod  <amacleod@cygnus.com>\n \t          Andrew Haley  <aph@cygnus.com>\n \t\t  David Mosberger-Tang <davidm@hpl.hp.com>\n@@ -1767,9 +1767,7 @@ _Unwind_GetBSP (struct _Unwind_Context *context)\n   return (_Unwind_Ptr) context->bsp;\n }\n \n-#ifdef MD_UNWIND_SUPPORT\n-#include MD_UNWIND_SUPPORT\n-#endif\n+#include \"md-unwind-support.h\"\n \f\n static _Unwind_Reason_Code\n uw_frame_state_for (struct _Unwind_Context *context, _Unwind_FrameState *fs)"}, {"sha": "5d87e711856e97aed4e0385e2f99be6ef8b429c5", "filename": "gcc/config/ia64/vms.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fia64%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fia64%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fvms.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -185,8 +185,6 @@ typedef struct crtl_name_spec\n /* Define this to be nonzero if static stack checking is supported.  */\n #define STACK_CHECK_STATIC_BUILTIN 1\n \n-#define MD_UNWIND_SUPPORT \"config/ia64/vms-unwind.h\"\n-\n #define UNW_IVMS_MODE(HEADER) (((HEADER) >> 44) & 0x3L)\n #define MD_UNW_COMPATIBLE_PERSONALITY_P(HEADER) (!UNW_IVMS_MODE (HEADER))\n "}, {"sha": "70738d221bfae3f655676e13e7439d30fdabf77e", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -235,5 +235,3 @@ along with GCC; see the file COPYING3.  If not see\n \n #undef  WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE BITS_PER_WORD\n-\n-#define MD_UNWIND_SUPPORT \"config/m68k/linux-unwind.h\""}, {"sha": "544a99f2d0b465a38a9322babcdeaa1feec0098d", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -99,8 +99,6 @@ along with GCC; see the file COPYING3.  If not see\n %{!shared: \\\n   %{profile:-lc_p} %{!profile:-lc}}\"\n \n-#define MD_UNWIND_SUPPORT \"config/mips/linux-unwind.h\"\n-\n #ifdef HAVE_AS_NO_SHARED\n /* Default to -mno-shared for non-PIC.  */\n # define NO_SHARED_SPECS \\"}, {"sha": "4d91be86dfd30d8d9ae64f4bf3235dfa1a808fbd", "filename": "gcc/config/pa/pa-hpux.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fpa%2Fpa-hpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fpa%2Fpa-hpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler, for HP-UX.\n-   Copyright (C) 1991, 1995, 1996, 2002, 2003, 2004, 2007, 2008, 2009, 2010\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1995, 1996, 2002, 2003, 2004, 2007, 2008, 2009,\n+   2010, 2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -115,5 +115,3 @@ along with GCC; see the file COPYING3.  If not see\n    compatibility with the HP-UX unwind library.  */\n #undef TARGET_HPUX_UNWIND_LIBRARY\n #define TARGET_HPUX_UNWIND_LIBRARY 1\n-\n-#define MD_UNWIND_SUPPORT \"config/pa/hpux-unwind.h\""}, {"sha": "01aa1c4b10373a82bd9de8cd094209d6b0fdca00", "filename": "gcc/config/pa/pa32-linux.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fpa%2Fpa32-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fpa%2Fpa32-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa32-linux.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for PA_RISC with ELF-32 format\n-   Copyright (C) 2000, 2002, 2004, 2006, 2007, 2010\n+   Copyright (C) 2000, 2002, 2004, 2006, 2007, 2010, 2011\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -63,5 +63,3 @@ call_ ## FUNC (void)\t\t\t\t\t\\\n \n #undef  WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE BITS_PER_WORD\n-\n-#define MD_UNWIND_SUPPORT \"config/pa/linux-unwind.h\""}, {"sha": "82971ae0e3278d20b2e546806f9db452f49f33c1", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -381,10 +381,6 @@ extern int darwin_emit_branch_islands;\n #include <stdbool.h>\n #endif\n \n-#if !defined(__LP64__) && !defined(DARWIN_LIBSYSTEM_HAS_UNWIND)\n-#define MD_UNWIND_SUPPORT \"config/rs6000/darwin-unwind.h\"\n-#endif\n-\n /* True, iff we're generating fast turn around debugging code.  When\n    true, we arrange for function prologues to start with 5 nops so\n    that gdb may insert code to redirect them, and for data to be"}, {"sha": "336727428bc8dad142c6d3a6be97951d65b0e4f0", "filename": "gcc/config/rs6000/linux.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Frs6000%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Frs6000%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -113,8 +113,6 @@\n \n #define TARGET_POSIX_IO\n \n-#define MD_UNWIND_SUPPORT \"config/rs6000/linux-unwind.h\"\n-\n #ifdef TARGET_LIBC_PROVIDES_SSP\n /* ppc32 glibc provides __stack_chk_guard in -0x7008(2).  */\n #define TARGET_THREAD_SSP_OFFSET\t-0x7008"}, {"sha": "972f353061a55a22eafd5d6cc631b8b9e2c10edb", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -539,8 +539,6 @@ extern int dot_symbols;\n #define USE_LD_AS_NEEDED 1\n #endif\n \n-#define MD_UNWIND_SUPPORT \"config/rs6000/linux-unwind.h\"\n-\n #ifdef TARGET_LIBC_PROVIDES_SSP\n /* ppc32 glibc provides __stack_chk_guard in -0x7008(2),\n    ppc64 glibc provides it at -0x7010(13).  */"}, {"sha": "e5385eca313a8090c8ef115d1ab77a18a82194f3", "filename": "gcc/config/s390/linux.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fs390%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fs390%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Flinux.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -79,8 +79,6 @@ along with GCC; see the file COPYING3.  If not see\n \n #define TARGET_ASM_FILE_END file_end_indicate_exec_stack\n \n-#define MD_UNWIND_SUPPORT \"config/s390/linux-unwind.h\"\n-\n #ifdef TARGET_LIBC_PROVIDES_SSP\n /* s390 glibc provides __stack_chk_guard in 0x14(tp),\n    s390x glibc provides it at 0x28(tp).  */"}, {"sha": "e4a1b50b6ec7452011623ee871070ea23f3fc361", "filename": "gcc/config/s390/tpf.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fs390%2Ftpf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fs390%2Ftpf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Ftpf.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -118,8 +118,6 @@ along with GCC; see the file COPYING3.  If not see\n    %{!shared:-shared} \\\n    %(entry_spec)\"\n \n-#define MD_UNWIND_SUPPORT \"config/s390/tpf-unwind.h\"\n-\n /* IBM copies these libraries over with these names.  */\n #define MATH_LIBRARY \"CLBM\"\n #define LIBSTDCXX \"CPP1\""}, {"sha": "edfd99be652e1dfe81d2cd9d41d505e695cabf01", "filename": "gcc/config/sh/linux.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fsh%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fsh%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flinux.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -114,8 +114,6 @@ along with GCC; see the file COPYING3.  If not see\n       }\t\t\t\t\t\t\t\t\t\\\n   } while (0)\n \n-#define MD_UNWIND_SUPPORT \"config/sh/linux-unwind.h\"\n-\n /* For SH3 and SH4, we use a slot of the unwind frame which correspond\n    to a fake register number 16 as a placeholder for the return address\n    in MD_FALLBACK_FRAME_STATE_FOR and its content will be read with"}, {"sha": "a9b630e61840e7134de8dc98ef3e8cdc2d0e1808", "filename": "gcc/config/sparc/linux.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fsparc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fsparc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -141,8 +141,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Static stack checking is supported by means of probes.  */\n #define STACK_CHECK_STATIC_BUILTIN 1\n \n-#define MD_UNWIND_SUPPORT \"config/sparc/linux-unwind.h\"\n-\n /* Linux currently uses RMO in uniprocessor mode, which is equivalent to\n    TMO, and TMO in multiprocessor mode.  But they reserve the right to\n    change their minds.  */"}, {"sha": "7f8b37891cfb63720137ed64c5bcdf6a091b006d", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -261,8 +261,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Static stack checking is supported by means of probes.  */\n #define STACK_CHECK_STATIC_BUILTIN 1\n \n-#define MD_UNWIND_SUPPORT \"config/sparc/linux-unwind.h\"\n-\n /* Linux currently uses RMO in uniprocessor mode, which is equivalent to\n    TMO, and TMO in multiprocessor mode.  But they reserve the right to\n    change their minds.  */"}, {"sha": "c99b02f8fe39d098937407db2f505a0fe86688da", "filename": "gcc/config/sparc/sol2.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fsparc%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fsparc%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -196,5 +196,3 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Static stack checking is supported by means of probes.  */\n #define STACK_CHECK_STATIC_BUILTIN 1\n-\n-#define MD_UNWIND_SUPPORT \"config/sparc/sol2-unwind.h\""}, {"sha": "f5caeb7a6036a6e42e35ed8f509a514711f4927d", "filename": "gcc/config/xtensa/linux.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fxtensa%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fxtensa%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Flinux.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -64,5 +64,3 @@ along with GCC; see the file COPYING3.  If not see\n \n #undef DBX_REGISTER_NUMBER\n \n-#define MD_UNWIND_SUPPORT \"config/xtensa/linux-unwind.h\"\n-"}, {"sha": "54daf7637ce829be60414326e8c990585d99f48f", "filename": "gcc/config/xtensa/unwind-dw2-xtensa.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fxtensa%2Funwind-dw2-xtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fconfig%2Fxtensa%2Funwind-dw2-xtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Funwind-dw2-xtensa.c?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -1,6 +1,6 @@\n /* DWARF2 exception handling and frame unwinding for Xtensa.\n    Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,\n-   2007, 2008, 2009\n+   2007, 2008, 2009, 2011\n    Free Software Foundation, Inc.\n \n    This file is part of GCC.\n@@ -208,9 +208,7 @@ _Unwind_GetTextRelBase (struct _Unwind_Context *context)\n   return (_Unwind_Ptr) context->bases.tbase;\n }\n \n-#ifdef MD_UNWIND_SUPPORT\n-#include MD_UNWIND_SUPPORT\n-#endif\n+#include \"md-unwind-support.h\"\n \f\n /* Extract any interesting information from the CIE for the translation\n    unit F belongs to.  Return a pointer to the byte after the augmentation,"}, {"sha": "e248b817695e9dc35276a5ef4bec9c3b8ea8fbda", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -1,5 +1,5 @@\n @c Copyright (C) 1988,1989,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,\n-@c 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+@c 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n @c Free Software Foundation, Inc.\n @c This is part of the GCC manual.\n @c For copying conditions, see the file gcc.texi.\n@@ -3373,11 +3373,6 @@ of bytes that the format occupies, @var{addr} is the @code{SYMBOL_REF}\n to be emitted.\n @end defmac\n \n-@defmac MD_UNWIND_SUPPORT\n-A string specifying a file to be #include'd in unwind-dw2.c.  The file\n-so included typically defines @code{MD_FALLBACK_FRAME_STATE_FOR}.\n-@end defmac\n-\n @defmac MD_FALLBACK_FRAME_STATE_FOR (@var{context}, @var{fs})\n This macro allows the target to add CPU and operating system specific\n code to the call-frame unwinder for use when there is no unwind data"}, {"sha": "528ac1366167f3935166aaed515ede534f412815", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -1,5 +1,5 @@\n @c Copyright (C) 1988,1989,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,\n-@c 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+@c 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n @c Free Software Foundation, Inc.\n @c This is part of the GCC manual.\n @c For copying conditions, see the file gcc.texi.\n@@ -3361,11 +3361,6 @@ of bytes that the format occupies, @var{addr} is the @code{SYMBOL_REF}\n to be emitted.\n @end defmac\n \n-@defmac MD_UNWIND_SUPPORT\n-A string specifying a file to be #include'd in unwind-dw2.c.  The file\n-so included typically defines @code{MD_FALLBACK_FRAME_STATE_FOR}.\n-@end defmac\n-\n @defmac MD_FALLBACK_FRAME_STATE_FOR (@var{context}, @var{fs})\n This macro allows the target to add CPU and operating system specific\n code to the call-frame unwinder for use when there is no unwind data"}, {"sha": "d08166135fa11a114f07f4eef2be3f8ffc9bd36a", "filename": "gcc/system.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -763,7 +763,8 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \n /* Target macros only used for code built for the target, that have\n    moved to libgcc-tm.h or have never been present elsewhere.  */\n- #pragma GCC poison DECLARE_LIBRARY_RENAMES LIBGCC2_GNU_PREFIX\n+ #pragma GCC poison DECLARE_LIBRARY_RENAMES LIBGCC2_GNU_PREFIX\t\t\\\n+\tMD_UNWIND_SUPPORT\n \n /* Other obsolete target macros, or macros that used to be in target\n    headers and were not used, and may be obsolete or may never have"}, {"sha": "19da29982b69d47a22360cc9f0f5768c37b1503b", "filename": "gcc/unwind-dw2.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Funwind-dw2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/gcc%2Funwind-dw2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2.c?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -333,9 +333,7 @@ _Unwind_GetTextRelBase (struct _Unwind_Context *context)\n }\n #endif\n \n-#ifdef MD_UNWIND_SUPPORT\n-#include MD_UNWIND_SUPPORT\n-#endif\n+#include \"md-unwind-support.h\"\n \f\n /* Extract any interesting information from the CIE for the translation\n    unit F belongs to.  Return a pointer to the byte after the augmentation,"}, {"sha": "5a4fec5139d4d9c3965d978bb1ebe1b9a3db8154", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -1,3 +1,48 @@\n+2011-06-03  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/alpha/linux-unwind.h: Move from ../gcc/config/alpha.\n+\t* config/alpha/osf5-unwind.h: Move from ../gcc/config/alpha.\n+\t* config/alpha/vms-unwind.h: Move from ../gcc/config/alpha.\n+\t* config/bfin/linux-unwind.h: Move from ../gcc/config/bfin.\n+\t* config/i386/linux-unwind.h: Move from ../gcc/config/i386.\n+\t* config/i386/sol2-unwind.h: Move from ../gcc/config/i386.\n+\t* config/i386/w32-unwind.h: Move from ../gcc/config/i386.\n+\tWrap in !__MINGW64__.\n+\t* config/ia64/linux-unwind.h: Move from ../gcc/config/ia64.\n+\t* config/ia64/vms-unwind.h: Move from ../gcc/config/ia64.\n+\t* config/m68k/linux-unwind.h: Move from ../gcc/config/m68k.\n+\t* config/mips/linux-unwind.h: Move from ../gcc/config/mips.\n+\t* config/pa/hpux-unwind.h: Move from ../gcc/config/pa.\n+\t* config/pa/linux-unwind.h: Move from ../gcc/config/pa.\n+\t* config/rs6000/darwin-unwind.h: Move from ../gcc/config/rs6000.\n+\tWrap in !__LP64__.\n+\t* config/rs6000/linux-unwind.h: Move from ../gcc/config/rs6000.\n+\t* config/s390/linux-unwind.h: Move from ../gcc/config/s390.\n+\t* config/s390/tpf-unwind.h: Move from ../gcc/config/s390.\n+\t* config/sh/linux-unwind.h: Move from ../gcc/config/sh.\n+\t* config/sparc/linux-unwind.h: Move from ../gcc/config/sparc.\n+\t* config/sparc/sol2-unwind.h: Move from ../gcc/config/sparc.\n+\t* config/xtensa/linux-unwind.h: Move from ../gcc/config/xtensa.\n+\t* config/no-unwind.h: New file.\n+\t* config.host (md_unwind_header): Document.\n+\tDefine.\n+\t(alpha*-*-linux*, alpha*-dec-osf5.1*, alpha64-dec-*vms*,\n+\talpha*-dec-*vms*, bfin*-uclinux*, bfin*-linux-uclibc*,\n+\thppa*-*-linux*, hppa[12]*-*-hpux10*, hppa*64*-*-hpux11*,\n+\thppa[12]*-*-hpux11*): Set md_unwind_header.\n+\t(i[34567]86-*-linux*): Handle i[34567]86-*-kopensolaris*-gnu.\n+\tSet md_unwind_header.\n+\t(x86_64-*-linux*, i[34567]86-*-solaris2*): Set md_unwind_header.\n+\t(i[34567]86-*-cygwin*): Split from i[34567]86-*-mingw*.\n+\t(i[34567]86-*-mingw*, ia64*-*-linux*, ia64-hp-*vms*,\n+\tm68k-*-uclinux*, m68k-*-linux*, mips64*-*-linux*, mips*-*-linux*,\n+\tpowerpc-*-darwin*, powerpc-*-linux*, s390-*-linux*,\n+\ts390x-*-linux*,  s390x-ibm-tpf*, sh*-*-linux*, sparc-*-linux*,\n+\tsparc*-*-solaris2*, sparc64-*-linux*, xtensa*-*-linux*): Set\n+\tmd_unwind_header.\n+\t* configure.ac: Link md-unwind-support.h to $md_unwind_header.\n+\t* configure: Regenerate.\n+\n 2011-06-03  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config.host (mips-sgi-irix[56]*): Restrict to mips-sgi-irix6.5*."}, {"sha": "c44ddd7b09ae2e68acb494dc98f657a613feaaa7", "filename": "libgcc/config.host", "status": "modified", "additions": 48, "deletions": 3, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -50,13 +50,16 @@\n #\t\t\tIf either is set, EXTRA_PARTS and\n #\t\t\tEXTRA_MULTILIB_PARTS inherited from the GCC\n #\t\t\tsubdirectory will be ignored.\n+#  md_unwind_header\tThe name of a header file defining\n+#\t\t\tMD_FALLBACK_FRAME_STATE_FOR.\n #  tmake_file\t\tA list of machine-description-specific\n #\t\t\tmakefile-fragments, if different from\n #\t\t\t\"$cpu_type/t-$cpu_type\".\n \n asm_hidden_op=.hidden\n extra_parts=\n tmake_file=\n+md_unwind_header=no-unwind.h\n \n # Set default cpu_type so it can be updated in each machine entry.\n cpu_type=`echo ${host} | sed 's/-.*$//'`\n@@ -210,6 +213,7 @@ case ${host} in\n alpha*-*-linux*)\n \ttmake_file=\"${tmake_file} alpha/t-crtfm\"\n \textra_parts=\"$extra_parts crtfastmath.o\"\n+\tmd_unwind_header=alpha/linux-unwind.h\n \t;;\n alpha*-*-freebsd*)\n \t;;\n@@ -225,12 +229,15 @@ alpha*-dec-osf5.1*)\n \t    ;;\n \tesac\n \textra_parts=\"${extra_parts} qrnnd.o crtfastmath.o gthr-posix.o\"\n+\tmd_unwind_header=alpha/osf5-unwind.h\n \t;;\n alpha64-dec-*vms*)\n \ttmake_file=\"vms/t-vms vms/t-vms64 alpha/t-vms\"\n+\tmd_unwind_header=alpha/vms-unwind.h\n \t;;\n alpha*-dec-*vms*)\n \ttmake_file=\"vms/t-vms alpha/t-vms\"\n+\tmd_unwind_header=alpha/vms-unwind.h\n \t;;\n arm-wrs-vxworks)\n \t;;\n@@ -261,11 +268,13 @@ avr-*-*)\n bfin*-elf*)\n         ;;\n bfin*-uclinux*)\n+\tmd_unwind_header=bfin/linux-unwind.h\n         ;;\n bfin*-linux-uclibc*)\n \t# No need to build crtbeginT.o on uClibc systems.  Should probably\n \t# be moved to the OS specific section above.\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n+\tmd_unwind_header=bfin/linux-unwind.h\n \t;;\n bfin*-*)\n         ;;\n@@ -289,12 +298,16 @@ h8300-*-elf*)\n hppa*64*-*-linux*)\n \t;;\n hppa*-*-linux*)\n+\tmd_unwind_header=pa/pa32-linux.h\n \t;;\n hppa[12]*-*-hpux10*)\n+\tmd_unwind_header=pa/hpux-unwind.h\n \t;;\n hppa*64*-*-hpux11*)\n+\tmd_unwind_header=pa/hpux-unwind.h\n \t;;\n hppa[12]*-*-hpux11*)\n+\tmd_unwind_header=pa/hpux-unwind.h\n \t;;\n i[34567]86-*-darwin*)\n \t;;\n@@ -319,13 +332,15 @@ i[34567]86-*-openbsd2.*|i[34567]86-*openbsd3.[0123])\n \t;;\n i[34567]86-*-openbsd*)\n \t;;\n-i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu | i[34567]86-*-gnu*)\n+i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu | i[34567]86-*-gnu* | i[34567]86-*-kopensolaris*-gnu)\n \textra_parts=\"$extra_parts crtprec32.o crtprec64.o crtprec80.o crtfastmath.o\"\n \ttmake_file=\"${tmake_file} i386/t-crtpc i386/t-crtfm\"\n+\tmd_unwind_header=i386/linux-unwind.h\n \t;;\n x86_64-*-linux* | x86_64-*-kfreebsd*-gnu | x86_64-*-knetbsd*-gnu)\n \textra_parts=\"$extra_parts crtprec32.o crtprec64.o crtprec80.o crtfastmath.o\"\n \ttmake_file=\"${tmake_file} i386/t-crtpc i386/t-crtfm\"\n+\tmd_unwind_header=i386/linux-unwind.h\n \t;;\n i[34567]86-pc-msdosdjgpp*)\n \t;;\n@@ -347,13 +362,19 @@ i[34567]86-*-rtems*)\n i[34567]86-*-solaris2*)\n \ttmake_file=\"$tmake_file i386/t-crtfm\"\n \textra_parts=\"$extra_parts crtfastmath.o\"\n+\tmd_unwind_header=i386/sol2-unwind.h\n \t;;\n i[4567]86-wrs-vxworks|i[4567]86-wrs-vxworksae)\n \t;;\n-i[34567]86-*-cygwin* | i[34567]86-*-mingw*)\n+i[34567]86-*-cygwin*)\n \textra_parts=\"crtbegin.o crtend.o crtfastmath.o\"\n \ttmake_file=\"i386/t-cygming i386/t-crtfm\"\n \t;;\n+i[34567]86-*-mingw*)\n+\textra_parts=\"crtbegin.o crtend.o crtfastmath.o\"\n+\ttmake_file=\"i386/t-cygming i386/t-crtfm\"\n+\tmd_unwind_header=i386/w32-unwind.h\n+\t;;\n x86_64-*-mingw*)\n \t;;\n i[34567]86-*-interix3*)\n@@ -369,11 +390,13 @@ ia64*-*-freebsd*)\n ia64*-*-linux*)\n \textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o crtfastmath.o\"\n \ttmake_file=\"ia64/t-ia64 t-softfp ia64/t-fprules-softfp ia64/t-softfp-compat\"\n+\tmd_unwind_header=ia64/linux-unwind.h\n \t;;\n ia64*-*-hpux*)\n \t;;\n ia64-hp-*vms*)\n \ttmake_file=\"vms/t-vms vms/t-vms64 ia64/t-vms\"\n+\tmd_unwind_header=ia64/vms-unwind.h\n \t;;\n iq2000*-*-elf*)\n         ;;\n@@ -400,10 +423,12 @@ m68k*-*-netbsdelf*)\n m68k*-*-openbsd*)\n \t;;\n m68k-*-uclinux*)\t\t# Motorola m68k/ColdFire running uClinux with uClibc\n+\tmd_unwind_header=m68k/linux-unwind.h\n \t;;\n-m68k-*-linux*)\t\t# Motorola m68k's running GNU/Linux\n+m68k-*-linux*)\t\t\t# Motorola m68k's running GNU/Linux\n \t\t\t\t# with ELF format using glibc 2\n \t\t\t\t# aka the GNU/Linux C library 6.\n+\tmd_unwind_header=m68k/linux-unwind.h\n \t;;\n m68k-*-rtems*)\n \t;;\n@@ -421,10 +446,12 @@ mips*-*-netbsd*)\t\t\t# NetBSD/mips, either endian.\n mips64*-*-linux*)\n \textra_parts=\"$extra_parts crtfastmath.o\"\n \ttmake_file=\"{$tmake_file} mips/t-crtfm\"\n+\tmd_unwind_header=mips/linux-unwind.h\n \t;;\n mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n \textra_parts=\"$extra_parts crtfastmath.o\"\n \ttmake_file=\"{$tmake_file} mips/t-crtfm\"\n+\tmd_unwind_header=mips/linux-unwind.h\n \t;;\n mips*-*-openbsd*)\n \t;;\n@@ -469,6 +496,15 @@ pdp11-*-*)\n picochip-*-*)\n         ;;\n powerpc-*-darwin*)\n+\tcase ${host} in\n+\t*-*-darwin9* | *-*-darwin[12][0-9]*)\n+\t  # libSystem contains unwind information for signal frames since\n+\t  # Darwin 9.\n+\t  ;;\n+\t*)\n+\t  md_unwind_header=rs6000/darwin-unwind.h\n+\t  ;;\n+\tesac\n \t;;\n powerpc64-*-darwin*)\n \t;;\n@@ -495,6 +531,7 @@ powerpc-*-rtems*)\n \t;;\n powerpc-*-linux* | powerpc64-*-linux*)\n \ttmake_file=\"${tmake_file} rs6000/t-ppccomm rs6000/t-ldbl128 t-softfp\"\n+\tmd_unwind_header=rs6000/linux-unwind.h\n \t;;\n powerpc-wrs-vxworks|powerpc-wrs-vxworksae)\n \t;;\n@@ -518,12 +555,15 @@ rx-*-elf)\n \t;;\n s390-*-linux*)\n \ttmake_file=\"${tmake_file} s390/t-crtstuff s390/t-linux s390/32/t-floattodi\"\n+\tmd_unwind_header=s390/linux-unwind.h\n \t;;\n s390x-*-linux*)\n \ttmake_file=\"${tmake_file} s390/t-crtstuff s390/t-linux\"\n+\tmd_unwind_header=s390/linux-unwind.h\n \t;;\n s390x-ibm-tpf*)\n \ttmake_file=\"${tmake_file} s390/t-crtstuff s390/t-tpf\"\n+\tmd_unwind_header-s390/tpf-unwind.h\n \t;;\n score-*-elf)\n         ;;\n@@ -534,6 +574,7 @@ sh-*-elf* | sh[12346l]*-*-elf* | \\\n \tcase ${host} in\n \tsh*-*-linux*)\n \t\ttmake_file=\"${tmake_file} sh/t-linux\"\n+\t\tmd_unwind_header=sh/unwind-linux.h\n \t\t;;\n \tesac\n \t;;\n@@ -559,6 +600,7 @@ sparc-*-elf*)\n sparc-*-linux*)\t\t# SPARC's running GNU/Linux, libc6\n \textra_parts=\"$extra_parts crtfastmath.o\"\n \ttmake_file=\"${tmake_file} t-crtfm\"\n+\tmd_unwind_header=sparc/linux.h\n \t;;\n sparc-*-rtems* | sparc64-*-rtems* )\n \ttmake_file=\"sparc/t-elf t-crtin t-crtfm t-rtems\"\n@@ -567,6 +609,7 @@ sparc-*-rtems* | sparc64-*-rtems* )\n sparc*-*-solaris2*)\n \ttmake_file=\"$tmake_file t-crtfm\"\n \textra_parts=\"$extra_parts crtfastmath.o\"\n+\tmd_unwind_header=sparc/sol2-unwind.h\n \t;;\n sparc64-*-elf*)\n \ttmake_file=\"${tmake_file} t-crtin t-crtfm\"\n@@ -579,6 +622,7 @@ sparc64-*-freebsd*|ultrasparc-*-freebsd*)\n sparc64-*-linux*)\t\t# 64-bit SPARC's running GNU/Linux\n \textra_parts=\"$extra_parts crtfastmath.o\"\n \ttmake_file=\"${tmake_file} t-crtfm\"\n+\tmd_unwind_header=sparc/linux-unwind.h\n \t;;\n sparc64-*-netbsd*)\n \t;;\n@@ -601,6 +645,7 @@ xstormy16-*-elf)\n xtensa*-*-elf*)\n \t;;\n xtensa*-*-linux*)\n+\tmd_unwind_header=xtensa/linux-unwind.h\n \t;;\n am33_2.0-*-linux*)\n \textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o\""}, {"sha": "e43aacfd00bd34864f42aad36fbc20035ca3f2ea", "filename": "libgcc/config/alpha/linux-unwind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Falpha%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Falpha%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Falpha%2Flinux-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "previous_filename": "gcc/config/alpha/linux-unwind.h"}, {"sha": "c649099349e3b4e1432acacac2da3b7937150c92", "filename": "libgcc/config/alpha/osf5-unwind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Falpha%2Fosf5-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Falpha%2Fosf5-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Falpha%2Fosf5-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "previous_filename": "gcc/config/alpha/osf5-unwind.h"}, {"sha": "71cb7b87920222d78e72237d4dffe0c2f41c3e67", "filename": "libgcc/config/alpha/vms-unwind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Falpha%2Fvms-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Falpha%2Fvms-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Falpha%2Fvms-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "previous_filename": "gcc/config/alpha/vms-unwind.h"}, {"sha": "88c8285632dff09754e85a1d08b7beb8bd13fec0", "filename": "libgcc/config/bfin/linux-unwind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fbfin%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fbfin%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fbfin%2Flinux-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "previous_filename": "gcc/config/bfin/linux-unwind.h"}, {"sha": "de44823e053f343c3cb774a904e5d53e44b0dfd9", "filename": "libgcc/config/i386/linux-unwind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fi386%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fi386%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Flinux-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "previous_filename": "gcc/config/i386/linux-unwind.h"}, {"sha": "d93b60c781cf6f737ef39df393b151afaf02e1ea", "filename": "libgcc/config/i386/sol2-unwind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fi386%2Fsol2-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fi386%2Fsol2-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fsol2-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "previous_filename": "gcc/config/i386/sol2-unwind.h"}, {"sha": "d77b8e3bd9ae3964087cb8eae345ec5aa373864c", "filename": "libgcc/config/i386/w32-unwind.h", "status": "renamed", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fi386%2Fw32-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fi386%2Fw32-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fw32-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Dwarf2 EH unwind support for Windows32 targets\n-   Copyright (C) 2007, 2009, 2010\n+   Copyright (C) 2007, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Pascal Obry  <obry@adacore.com>\n \n@@ -82,6 +82,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    Note that this implementation follows closely the same principles as the\n    GNU/Linux and OSF ones.  */\n \n+#ifndef __MINGW64__\n+\n #define WIN32_MEAN_AND_LEAN\n #include <windows.h>\n /* Patterns found experimentally to be on a Windows signal handler  */\n@@ -202,3 +204,5 @@ i386_w32_fallback_frame_state (struct _Unwind_Context *context,\n   else\n     return _URC_END_OF_STACK;\n }\n+\n+#endif /* !__MINGW64__ */", "previous_filename": "gcc/config/i386/w32-unwind.h"}, {"sha": "93f762de5736aef3379bd9583706c983436603a6", "filename": "libgcc/config/ia64/linux-unwind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fia64%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fia64%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2Flinux-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "previous_filename": "gcc/config/ia64/linux-unwind.h"}, {"sha": "41c76ae768c0ba2c112081e36fca36fa29f074ec", "filename": "libgcc/config/ia64/vms-unwind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fia64%2Fvms-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fia64%2Fvms-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2Fvms-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "previous_filename": "gcc/config/ia64/vms-unwind.h"}, {"sha": "053c15558caaf8cf55253a09bada9d5ea43dcaff", "filename": "libgcc/config/m68k/linux-unwind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fm68k%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fm68k%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fm68k%2Flinux-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "previous_filename": "gcc/config/m68k/linux-unwind.h"}, {"sha": "02f7cd54c5a2a79c247fb6406e490e0124867359", "filename": "libgcc/config/mips/linux-unwind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fmips%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fmips%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmips%2Flinux-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "previous_filename": "gcc/config/mips/linux-unwind.h"}, {"sha": "0ecd78a60de97a7b41ae03ee73a4c9c9c8543948", "filename": "libgcc/config/no-unwind.h", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fno-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fno-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fno-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -0,0 +1,2 @@\n+/* Dummy header for targets without a definition of\n+   MD_FALLBACK_FRAME_STATE_FOR.  */"}, {"sha": "92061ec3677e8e4d911752d4ee7a5fc2d14d4eb0", "filename": "libgcc/config/pa/hpux-unwind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fpa%2Fhpux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fpa%2Fhpux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpa%2Fhpux-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "previous_filename": "gcc/config/pa/hpux-unwind.h"}, {"sha": "a0560e97445a41f3e30a43eb4ba126c55489dda0", "filename": "libgcc/config/pa/linux-unwind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fpa%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fpa%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fpa%2Flinux-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "previous_filename": "gcc/config/pa/linux-unwind.h"}, {"sha": "8a4fbd55ac1826725dcd4c87b6947a18810d08be", "filename": "libgcc/config/rs6000/darwin-unwind.h", "status": "renamed", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Frs6000%2Fdarwin-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Frs6000%2Fdarwin-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Fdarwin-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -1,5 +1,5 @@\n-/* DWARF2 EH unwinding support for Darwin.\n-   Copyright (C) 2004, 2009 Free Software Foundation, Inc.\n+/* DWARF2 EH unwinding support for 32-bit PowerPC Darwin.\n+   Copyright (C) 2004, 2009, 2011 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -22,9 +22,13 @@\n    see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    <http://www.gnu.org/licenses/>.  */\n \n+#ifndef __LP64__\n+\n extern bool _Unwind_fallback_frame_state_for\n   (struct _Unwind_Context *context, _Unwind_FrameState *fs);\n \n #define MD_FALLBACK_FRAME_STATE_FOR(CONTEXT, FS)\t\\\n   (_Unwind_fallback_frame_state_for (CONTEXT, FS)\t\\\n    ? _URC_NO_REASON : _URC_END_OF_STACK)\n+\n+#endif", "previous_filename": "gcc/config/rs6000/darwin-unwind.h"}, {"sha": "a16df97e97ea2934f01e486204f7348730b1467b", "filename": "libgcc/config/rs6000/linux-unwind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Frs6000%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Frs6000%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Flinux-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "previous_filename": "gcc/config/rs6000/linux-unwind.h"}, {"sha": "558087fad94223eb0ad9ceb1348a8f0602c4aee9", "filename": "libgcc/config/s390/linux-unwind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fs390%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fs390%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fs390%2Flinux-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "previous_filename": "gcc/config/s390/linux-unwind.h"}, {"sha": "33fd5f5c8c544f97d8528640e0637e95175e5054", "filename": "libgcc/config/s390/tpf-unwind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fs390%2Ftpf-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fs390%2Ftpf-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fs390%2Ftpf-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "previous_filename": "gcc/config/s390/tpf-unwind.h"}, {"sha": "94ed95d55e127c85208b76cdb669f758045e14d7", "filename": "libgcc/config/sh/linux-unwind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fsh%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fsh%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsh%2Flinux-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "previous_filename": "gcc/config/sh/linux-unwind.h"}, {"sha": "adfef6ec29d0275390cdc4255dfaede8a1670325", "filename": "libgcc/config/sparc/linux-unwind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fsparc%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fsparc%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsparc%2Flinux-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "previous_filename": "gcc/config/sparc/linux-unwind.h"}, {"sha": "f8b99027247b89379c6105504f89908d989a381c", "filename": "libgcc/config/sparc/sol2-unwind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fsparc%2Fsol2-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fsparc%2Fsol2-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsparc%2Fsol2-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "previous_filename": "gcc/config/sparc/sol2-unwind.h"}, {"sha": "32e934972878bb87529494238169cab788607f1d", "filename": "libgcc/config/xtensa/linux-unwind.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fxtensa%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfig%2Fxtensa%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fxtensa%2Flinux-unwind.h?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "previous_filename": "gcc/config/xtensa/linux-unwind.h"}, {"sha": "1a3a0bde2580d1aab194ae02b44d05a7fcf8c11f", "filename": "libgcc/configure", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -3962,6 +3962,8 @@ tmake_file=\"${tmake_file_}\"\n \n \n \n+ac_config_links=\"$ac_config_links md-unwind-support.h:config/$md_unwind_header\"\n+\n \n # We need multilib support.\n ac_config_files=\"$ac_config_files Makefile\"\n@@ -4532,6 +4534,7 @@ esac\n cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n # Files that config.status was made for.\n config_files=\"$ac_config_files\"\n+config_links=\"$ac_config_links\"\n config_commands=\"$ac_config_commands\"\n \n _ACEOF\n@@ -4556,6 +4559,9 @@ Usage: $0 [OPTION]... [TAG]...\n Configuration files:\n $config_files\n \n+Configuration links:\n+$config_links\n+\n Configuration commands:\n $config_commands\n \n@@ -4683,6 +4689,7 @@ cat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n for ac_config_target in $ac_config_targets\n do\n   case $ac_config_target in\n+    \"md-unwind-support.h\") CONFIG_LINKS=\"$CONFIG_LINKS md-unwind-support.h:config/$md_unwind_header\" ;;\n     \"Makefile\") CONFIG_FILES=\"$CONFIG_FILES Makefile\" ;;\n     \"default\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS default\" ;;\n \n@@ -4697,6 +4704,7 @@ done\n # bizarre bug on SunOS 4.1.3.\n if $ac_need_defaults; then\n   test \"${CONFIG_FILES+set}\" = set || CONFIG_FILES=$config_files\n+  test \"${CONFIG_LINKS+set}\" = set || CONFIG_LINKS=$config_links\n   test \"${CONFIG_COMMANDS+set}\" = set || CONFIG_COMMANDS=$config_commands\n fi\n \n@@ -4876,7 +4884,7 @@ cat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n fi # test -n \"$CONFIG_FILES\"\n \n \n-eval set X \"  :F $CONFIG_FILES      :C $CONFIG_COMMANDS\"\n+eval set X \"  :F $CONFIG_FILES    :L $CONFIG_LINKS  :C $CONFIG_COMMANDS\"\n shift\n for ac_tag\n do\n@@ -5089,7 +5097,38 @@ which seems to be undefined.  Please make sure it is defined.\" >&2;}\n   || as_fn_error \"could not create $ac_file\" \"$LINENO\" 5\n  ;;\n \n+  :L)\n+  #\n+  # CONFIG_LINK\n+  #\n+\n+  if test \"$ac_source\" = \"$ac_file\" && test \"$srcdir\" = '.'; then\n+    :\n+  else\n+    # Prefer the file from the source tree if names are identical.\n+    if test \"$ac_source\" = \"$ac_file\" || test ! -r \"$ac_source\"; then\n+      ac_source=$srcdir/$ac_source\n+    fi\n \n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: linking $ac_source to $ac_file\" >&5\n+$as_echo \"$as_me: linking $ac_source to $ac_file\" >&6;}\n+\n+    if test ! -r \"$ac_source\"; then\n+      as_fn_error \"$ac_source: file not found\" \"$LINENO\" 5\n+    fi\n+    rm -f \"$ac_file\"\n+\n+    # Try a relative symlink, then a hard link, then a copy.\n+    case $srcdir in\n+    [\\\\/$]* | ?:[\\\\/]* ) ac_rel_source=$ac_source ;;\n+\t*) ac_rel_source=$ac_top_build_prefix$ac_source ;;\n+    esac\n+    ln -s \"$ac_rel_source\" \"$ac_file\" 2>/dev/null ||\n+      ln \"$ac_source\" \"$ac_file\" 2>/dev/null ||\n+      cp -p \"$ac_source\" \"$ac_file\" ||\n+      as_fn_error \"cannot link or copy $ac_source to $ac_file\" \"$LINENO\" 5\n+  fi\n+ ;;\n   :C)  { $as_echo \"$as_me:${as_lineno-$LINENO}: executing $ac_file commands\" >&5\n $as_echo \"$as_me: executing $ac_file commands\" >&6;}\n  ;;"}, {"sha": "f2bcabf4872a318b95cd1646aabd55d81498555d", "filename": "libgcc/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=58cd1d70dd8cd4b95773c0487a5d2aecad2b4dc1", "patch": "@@ -278,6 +278,7 @@ AC_SUBST(tmake_file)\n AC_SUBST(cpu_type)\n AC_SUBST(extra_parts)\n AC_SUBST(asm_hidden_op)\n+AC_CONFIG_LINKS([md-unwind-support.h:config/$md_unwind_header])\n \n # We need multilib support.\n AC_CONFIG_FILES([Makefile])"}]}