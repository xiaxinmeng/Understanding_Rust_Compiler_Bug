{"sha": "91f8389c1b40190eee416a559f99a9e767698c11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFmODM4OWMxYjQwMTkwZWVlNDE2YTU1OWY5OWE5ZTc2NzY5OGMxMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-12-16T07:50:31Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-12-16T07:50:31Z"}, "message": "re PR rtl-optimization/13313 (Wrong code generated)\n\n\tPR optimization/13313\n\t* combine.c (make_extraction) [REG]: Do not use\n\tgen_lowpart_for_combine when POS is non-zero.\n\nFrom-SVN: r74676", "tree": {"sha": "df19e512684786a7c142dbc4c1613405ad3a5069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df19e512684786a7c142dbc4c1613405ad3a5069"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91f8389c1b40190eee416a559f99a9e767698c11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91f8389c1b40190eee416a559f99a9e767698c11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91f8389c1b40190eee416a559f99a9e767698c11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91f8389c1b40190eee416a559f99a9e767698c11/comments", "author": null, "committer": null, "parents": [{"sha": "cbefa3c9a2b880ccab4954e7e0f8c8d571d89d31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbefa3c9a2b880ccab4954e7e0f8c8d571d89d31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbefa3c9a2b880ccab4954e7e0f8c8d571d89d31"}], "stats": {"total": 48, "additions": 41, "deletions": 7}, "files": [{"sha": "733c289f06fb8b5b4a6b9bb0f873e66b6a1b9818", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f8389c1b40190eee416a559f99a9e767698c11/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f8389c1b40190eee416a559f99a9e767698c11/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91f8389c1b40190eee416a559f99a9e767698c11", "patch": "@@ -1,3 +1,9 @@\n+2003-12-16  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR optimization/13313\n+\t* combine.c (make_extraction) [REG]: Do not use\n+\tgen_lowpart_for_combine when POS is non-zero.\n+\n 2003-12-16  Hartmut Penner  <hpenner@de.ibm.com>\n \n \t* altivec.h (vec_cmple, vec_all_numeric): Fix typo."}, {"sha": "2c92d247aa8357b41cde165cd5f6df2a185ea3e9", "filename": "gcc/combine.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f8389c1b40190eee416a559f99a9e767698c11/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f8389c1b40190eee416a559f99a9e767698c11/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=91f8389c1b40190eee416a559f99a9e767698c11", "patch": "@@ -6043,10 +6043,11 @@ make_extraction (enum machine_mode mode, rtx inner, HOST_WIDE_INT pos,\n \t{\n \t  if (tmode != inner_mode)\n \t    {\n-\t      if (in_dest)\n+\t      /* We can't call gen_lowpart_for_combine in a DEST since we\n+\t\t always want a SUBREG (see below) and it would sometimes\n+\t\t return a new hard register.  */\n+\t      if (pos || in_dest)\n \t\t{\n-\t\t  /* We can't call gen_lowpart_for_combine here since we always want\n-\t\t     a SUBREG and it would sometimes return a new hard register.  */\n \t\t  HOST_WIDE_INT final_word = pos / BITS_PER_WORD;\n \n \t\t  if (WORDS_BIG_ENDIAN"}, {"sha": "3dd3a023bd0065675c0aeea69944b15796ad5061", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f8389c1b40190eee416a559f99a9e767698c11/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f8389c1b40190eee416a559f99a9e767698c11/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=91f8389c1b40190eee416a559f99a9e767698c11", "patch": "@@ -1,3 +1,7 @@\n+2003-12-16  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.c-torture/execute/20031216-1.c: New test.\n+\n 2003-12-16  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n \n \t* g++.dg/template/ptrmem7.C: Simplified the test case to not hit\n@@ -134,10 +138,10 @@\n \t* g++.dg/ext/visibility-5.C: Likewise.\n \t* g++.dg/ext/visibility-6.C: Likewise.\n \n-2003-12-07  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\r\n-\r\n-\t* g++.dg/lookup/java1.C: New test.\r\n-\t* g++.dg/lookup/java2.C: New test.\r\n+2003-12-07  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n+\n+\t* g++.dg/lookup/java1.C: New test.\n+\t* g++.dg/lookup/java2.C: New test.\n \n 2003-12-07  Falk Hueffner  <falk@debian.org>\n "}, {"sha": "709f0166a207b6a01581774782a262564e70481e", "filename": "gcc/testsuite/gcc.c-torture/execute/20031216-1.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f8389c1b40190eee416a559f99a9e767698c11/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20031216-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f8389c1b40190eee416a559f99a9e767698c11/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20031216-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20031216-1.c?ref=91f8389c1b40190eee416a559f99a9e767698c11", "patch": "@@ -0,0 +1,23 @@\n+/* PR optimization/13313 */\n+/* Origin: Mike Lerwill <mike@ml-solutions.co.uk> */\n+\n+extern void abort(void);\n+\n+void DisplayNumber (unsigned long v)\n+{\n+  if (v != 0x9aL)\n+    abort();\n+}\n+\n+unsigned long ReadNumber (void)\n+{\n+  return 0x009a0000L;\n+}\n+\n+int main (void)\n+{\n+  unsigned long tmp;\n+  tmp = (ReadNumber() & 0x00ff0000L) >> 16;\n+  DisplayNumber (tmp);\n+  return 0;\n+}"}]}