{"sha": "9ba6f952f0eac930bcdaa16b9f1f785dd3feb910", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJhNmY5NTJmMGVhYzkzMGJjZGFhMTZiOWYxZjc4NWRkM2ZlYjkxMA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-01-06T13:48:52Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-01-06T13:48:52Z"}, "message": "DateTimeAtCompleted.java, [...]: New files.\n\n2004-01-06  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/print/attribute/standard/DateTimeAtCompleted.java,\n\tjavax/print/attribute/standard/DateTimeAtCreation.java,\n\tjavax/print/attribute/standard/DateTimeAtProcessing.java,\n\tjavax/print/attribute/standard/JobImpressionsCompleted.java,\n\tjavax/print/attribute/standard/JobKOctets.java,\n\tjavax/print/attribute/standard/JobKOctetsProcessed.java,\n\tjavax/print/attribute/standard/JobMediaSheetsCompleted.java,\n\tjavax/print/attribute/standard/JobPrioritySupported.java: New files.\n\t* Makefile.am (javax_source_files): Added new files.\n\t* Makefile.in: Regenerated.\n\nFrom-SVN: r75471", "tree": {"sha": "d522aa35e66172f2c9126dc246a47225d9329c60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d522aa35e66172f2c9126dc246a47225d9329c60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/comments", "author": null, "committer": null, "parents": [{"sha": "b80115c4b75caf5920a59aa9e08909a2e0181901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b80115c4b75caf5920a59aa9e08909a2e0181901", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b80115c4b75caf5920a59aa9e08909a2e0181901"}], "stats": {"total": 987, "additions": 905, "deletions": 82}, "files": [{"sha": "9519270fbd4d61a111677351e21b1292d5b433fe", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=9ba6f952f0eac930bcdaa16b9f1f785dd3feb910", "patch": "@@ -1,5 +1,17 @@\n 2004-01-06  Michael Koch  <konqueror@gmx.de>\n \n+\t* javax/print/attribute/standard/DateTimeAtCompleted.java,\n+\tjavax/print/attribute/standard/DateTimeAtCreation.java,\n+\tjavax/print/attribute/standard/DateTimeAtProcessing.java,\n+\tjavax/print/attribute/standard/JobImpressionsCompleted.java,\n+\tjavax/print/attribute/standard/JobKOctets.java,\n+\tjavax/print/attribute/standard/JobKOctetsProcessed.java,\n+\tjavax/print/attribute/standard/JobMediaSheetsCompleted.java,\n+\tjavax/print/attribute/standard/JobPrioritySupported.java: New files.\n+\t* Makefile.am (javax_source_files): Added new files.\n+\t* Makefile.in: Regenerated.\n+2004-01-06  Michael Koch  <konqueror@gmx.de>\n+\n \t* java/net/URLConnection.java\n \t(contentHandler): Removed.\n \t(locale): Removed."}, {"sha": "3b9b914649c51dcbb07cff31adfccb2751ac004c", "filename": "libjava/Makefile.am", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=9ba6f952f0eac930bcdaa16b9f1f785dd3feb910", "patch": "@@ -1787,9 +1787,17 @@ javax/print/attribute/TextSyntax.java \\\n javax/print/attribute/UnmodifiableSetException.java \\\n javax/print/attribute/URISyntax.java \\\n javax/print/attribute/standard/Copies.java \\\n+javax/print/attribute/standard/DateTimeAtCompleted.java \\\n+javax/print/attribute/standard/DateTimeAtCreation.java \\\n+javax/print/attribute/standard/DateTimeAtProcessing.java \\\n javax/print/attribute/standard/JobImpressions.java \\\n+javax/print/attribute/standard/JobImpressionsCompleted.java \\\n+javax/print/attribute/standard/JobKOctets.java \\\n+javax/print/attribute/standard/JobKOctetsProcessed.java \\\n javax/print/attribute/standard/JobMediaSheets.java \\\n+javax/print/attribute/standard/JobMediaSheetsCompleted.java \\\n javax/print/attribute/standard/JobPriority.java \\\n+javax/print/attribute/standard/JobPrioritySupported.java \\\n javax/print/attribute/standard/NumberOfDocuments.java \\\n javax/print/attribute/standard/NumberOfInterveningJobs.java \\\n javax/print/attribute/standard/NumberUp.java \\"}, {"sha": "6aa0a4f5a87932d1f0f4e69ebf2295c6a04b30b8", "filename": "libjava/Makefile.in", "status": "modified", "additions": 101, "deletions": 82, "changes": 183, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=9ba6f952f0eac930bcdaa16b9f1f785dd3feb910", "patch": "@@ -1,6 +1,6 @@\n-# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am\n+# Makefile.in generated automatically by automake 1.4 from Makefile.am\n \n-# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.\n+# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -96,10 +96,12 @@ GOBJECT_QUERY = @GOBJECT_QUERY@\n GTK_CFLAGS = @GTK_CFLAGS@\n GTK_LIBS = @GTK_LIBS@\n HASH_SYNC_SPEC = @HASH_SYNC_SPEC@\n+HAVE_LIB = @HAVE_LIB@\n IEEESPEC = @IEEESPEC@\n INCLTDL = @INCLTDL@\n INTERPRETER = @INTERPRETER@\n JC1GCSPEC = @JC1GCSPEC@\n+LIB = @LIB@\n LIBART_CFLAGS = @LIBART_CFLAGS@\n LIBART_CONFIG = @LIBART_CONFIG@\n LIBART_LIBS = @LIBART_LIBS@\n@@ -113,6 +115,7 @@ LIBICONV = @LIBICONV@\n LIBLTDL = @LIBLTDL@\n LIBTOOL = @LIBTOOL@\n LN_S = @LN_S@\n+LTLIB = @LTLIB@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n OBJDUMP = @OBJDUMP@\n@@ -1502,9 +1505,17 @@ javax/print/attribute/TextSyntax.java \\\n javax/print/attribute/UnmodifiableSetException.java \\\n javax/print/attribute/URISyntax.java \\\n javax/print/attribute/standard/Copies.java \\\n+javax/print/attribute/standard/DateTimeAtCompleted.java \\\n+javax/print/attribute/standard/DateTimeAtCreation.java \\\n+javax/print/attribute/standard/DateTimeAtProcessing.java \\\n javax/print/attribute/standard/JobImpressions.java \\\n+javax/print/attribute/standard/JobImpressionsCompleted.java \\\n+javax/print/attribute/standard/JobKOctets.java \\\n+javax/print/attribute/standard/JobKOctetsProcessed.java \\\n javax/print/attribute/standard/JobMediaSheets.java \\\n+javax/print/attribute/standard/JobMediaSheetsCompleted.java \\\n javax/print/attribute/standard/JobPriority.java \\\n+javax/print/attribute/standard/JobPrioritySupported.java \\\n javax/print/attribute/standard/NumberOfDocuments.java \\\n javax/print/attribute/standard/NumberOfInterveningJobs.java \\\n javax/print/attribute/standard/NumberUp.java \\\n@@ -2699,6 +2710,82 @@ org/w3c/dom/traversal/NodeIterator.lo \\\n org/w3c/dom/traversal/TreeWalker.lo\n lib_gnu_java_awt_peer_gtk_la_LDFLAGS = \n lib_gnu_java_awt_peer_gtk_la_DEPENDENCIES = \n+@GTK_CAIRO_FALSE@lib_gnu_java_awt_peer_gtk_la_OBJECTS =  \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkClasspathFontPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkFontMetrics.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkGlyphVector.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkGraphics.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkGraphics2D.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkPixbufDecoder.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkArg.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkArgList.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkButtonPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCanvasPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCheckboxGroupPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCheckboxMenuItemPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCheckboxPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkChoicePeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkClipboard.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkComponentPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkContainerPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkDialogPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkEmbeddedWindowPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkFileDialogPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkFontPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkFramePeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkGenericPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkImage.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkImagePainter.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkLabelPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkListPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMainThread.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuBarPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuComponentPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuItemPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkOffScreenImage.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkPanelPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkPopupMenuPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkScrollPanePeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkScrollbarPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkTextAreaPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkTextComponentPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkTextFieldPeer.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkToolkit.lo \\\n+@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkWindowPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEmbeddedWindowPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPanelPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollPanePeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.lo \\\n+@GTK_CAIRO_FALSE@jni/gtk-peer/gthread-jni.lo jni/classpath/jcl.lo \\\n+@GTK_CAIRO_FALSE@jni/classpath/jnilink.lo jni/classpath/native_state.lo \\\n+@GTK_CAIRO_FALSE@jni/classpath/primlib.lo\n @GTK_CAIRO_TRUE@lib_gnu_java_awt_peer_gtk_la_OBJECTS =  \\\n @GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GdkClasspathFontPeer.lo \\\n @GTK_CAIRO_TRUE@gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.lo \\\n@@ -2779,82 +2866,6 @@ lib_gnu_java_awt_peer_gtk_la_DEPENDENCIES =\n @GTK_CAIRO_TRUE@jni/gtk-peer/gthread-jni.lo jni/classpath/jcl.lo \\\n @GTK_CAIRO_TRUE@jni/classpath/jnilink.lo jni/classpath/native_state.lo \\\n @GTK_CAIRO_TRUE@jni/classpath/primlib.lo\n-@GTK_CAIRO_FALSE@lib_gnu_java_awt_peer_gtk_la_OBJECTS =  \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkClasspathFontPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkClasspathFontPeerMetrics.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkFontMetrics.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkGlyphVector.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkGraphics.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkGraphics2D.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GdkPixbufDecoder.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkArg.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkArgList.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkButtonPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCanvasPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCheckboxGroupPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCheckboxMenuItemPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkCheckboxPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkChoicePeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkClipboard.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkComponentPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkContainerPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkDialogPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkEmbeddedWindowPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkFileDialogPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkFontPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkFramePeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkGenericPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkImage.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkImagePainter.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkLabelPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkListPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMainThread.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuBarPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuComponentPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuItemPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkMenuPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkOffScreenImage.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkPanelPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkPopupMenuPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkScrollPanePeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkScrollbarPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkTextAreaPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkTextComponentPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkTextFieldPeer.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkToolkit.lo \\\n-@GTK_CAIRO_FALSE@gnu/java/awt/peer/gtk/GtkWindowPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkFontMetrics.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkGraphics.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GdkPixbufDecoder.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkButtonPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCanvasPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxMenuItemPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkChoicePeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkClipboard.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEmbeddedWindowPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkFileDialogPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkImagePainter.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkLabelPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkListPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuBarPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuItemPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMenuPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPanelPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollBarPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkScrollPanePeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextAreaPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextComponentPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkTextFieldPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkToolkit.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.lo \\\n-@GTK_CAIRO_FALSE@jni/gtk-peer/gthread-jni.lo jni/classpath/jcl.lo \\\n-@GTK_CAIRO_FALSE@jni/classpath/jnilink.lo jni/classpath/native_state.lo \\\n-@GTK_CAIRO_FALSE@jni/classpath/primlib.lo\n lib_gnu_awt_xlib_la_OBJECTS =  gnu/gcj/xlib/natClip.lo \\\n gnu/gcj/xlib/natColormap.lo gnu/gcj/xlib/natDisplay.lo \\\n gnu/gcj/xlib/natDrawable.lo gnu/gcj/xlib/natFont.lo \\\n@@ -2898,7 +2909,7 @@ libgcj-test.spec.in libgcj.pc.in libgcj.spec.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = gtar\n+TAR = tar\n GZIP_ENV = --best\n DIST_SUBDIRS =  @DIRLTDL@ testsuite gcj include @DIRLTDL@ gcj include\n DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n@@ -4221,9 +4232,17 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/javax/print/attribute/URISyntax.P \\\n .deps/javax/print/attribute/UnmodifiableSetException.P \\\n .deps/javax/print/attribute/standard/Copies.P \\\n+.deps/javax/print/attribute/standard/DateTimeAtCompleted.P \\\n+.deps/javax/print/attribute/standard/DateTimeAtCreation.P \\\n+.deps/javax/print/attribute/standard/DateTimeAtProcessing.P \\\n .deps/javax/print/attribute/standard/JobImpressions.P \\\n+.deps/javax/print/attribute/standard/JobImpressionsCompleted.P \\\n+.deps/javax/print/attribute/standard/JobKOctets.P \\\n+.deps/javax/print/attribute/standard/JobKOctetsProcessed.P \\\n .deps/javax/print/attribute/standard/JobMediaSheets.P \\\n+.deps/javax/print/attribute/standard/JobMediaSheetsCompleted.P \\\n .deps/javax/print/attribute/standard/JobPriority.P \\\n+.deps/javax/print/attribute/standard/JobPrioritySupported.P \\\n .deps/javax/print/attribute/standard/NumberOfDocuments.P \\\n .deps/javax/print/attribute/standard/NumberOfInterveningJobs.P \\\n .deps/javax/print/attribute/standard/NumberUp.P \\\n@@ -4827,7 +4846,7 @@ uninstall-toolexecmainlibDATA:\n all-recursive install-data-recursive install-exec-recursive \\\n installdirs-recursive install-recursive uninstall-recursive  \\\n check-recursive installcheck-recursive info-recursive dvi-recursive:\n-\t@set fnord $$MAKEFLAGS; amf=$$2; \\\n+\t@set fnord $(MAKEFLAGS); amf=$$2; \\\n \tdot_seen=no; \\\n \ttarget=`echo $@ | sed s/-recursive//`; \\\n \tlist='$(SUBDIRS)'; for subdir in $$list; do \\\n@@ -4847,11 +4866,11 @@ check-recursive installcheck-recursive info-recursive dvi-recursive:\n \n mostlyclean-recursive clean-recursive distclean-recursive \\\n maintainer-clean-recursive:\n-\t@set fnord $$MAKEFLAGS; amf=$$2; \\\n+\t@set fnord $(MAKEFLAGS); amf=$$2; \\\n \tdot_seen=no; \\\n \trev=''; list='$(SUBDIRS)'; for subdir in $$list; do \\\n \t  rev=\"$$subdir $$rev\"; \\\n-\t  test \"$$subdir\" != \".\" || dot_seen=yes; \\\n+\t  test \"$$subdir\" = \".\" && dot_seen=yes; \\\n \tdone; \\\n \ttest \"$$dot_seen\" = \"no\" && rev=\". $$rev\"; \\\n \ttarget=`echo $@ | sed s/-recursive//`; \\"}, {"sha": "68e09fdd58d41526bb67d98e0f4c01a7e651af83", "filename": "libjava/javax/print/attribute/standard/DateTimeAtCompleted.java", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDateTimeAtCompleted.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDateTimeAtCompleted.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDateTimeAtCompleted.java?ref=9ba6f952f0eac930bcdaa16b9f1f785dd3feb910", "patch": "@@ -0,0 +1,95 @@\n+/* DateTimeAtCompleted.java -- \n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.util.Date;\n+import javax.print.attribute.DateTimeSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+\n+public final class DateTimeAtCompleted extends DateTimeSyntax\n+  implements PrintJobAttribute\n+{\n+  private static final long serialVersionUID = 6497399708058490000L;\n+\n+  /**\n+   * Creates a <code>DateTimeAtCompleted</code> object.\n+   *\n+   * @param value the date at completion time\n+   *\n+   * @exception NullPointerException if value is null\n+   */\n+  public DateTimeAtCompleted(Date value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof DateTimeAtCompleted))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>DateTimeAtCompleted</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return DateTimeAtCompleted.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"date-time-at-completed\"\n+   */\n+  public final String getName()\n+  {\n+    return \"date-time-at-completed\";\n+  }\n+}"}, {"sha": "2a506d13a3c7a068b3f68d04160ffe9d00e8419a", "filename": "libjava/javax/print/attribute/standard/DateTimeAtCreation.java", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDateTimeAtCreation.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDateTimeAtCreation.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDateTimeAtCreation.java?ref=9ba6f952f0eac930bcdaa16b9f1f785dd3feb910", "patch": "@@ -0,0 +1,95 @@\n+/* DateTimeAtCreation.java -- \n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.util.Date;\n+import javax.print.attribute.DateTimeSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+\n+public final class DateTimeAtCreation extends DateTimeSyntax\n+  implements PrintJobAttribute\n+{\n+  private static final long serialVersionUID = -2923732231056647903L;\n+\n+  /**\n+   * Creates a <code>DateTimeAtCreation</code> object.\n+   *\n+   * @param value the date at creation time\n+   *\n+   * @exception NullPointerException if value is null\n+   */\n+  public DateTimeAtCreation(Date value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof DateTimeAtCreation))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>DateTimeAtCreation</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return DateTimeAtCreation.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"date-time-at-creation\"\n+   */\n+  public final String getName()\n+  {\n+    return \"date-time-at-creation\";\n+  }\n+}"}, {"sha": "caee02664eb569cb06d3bd7dfae50c4d2bd8633f", "filename": "libjava/javax/print/attribute/standard/DateTimeAtProcessing.java", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDateTimeAtProcessing.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDateTimeAtProcessing.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDateTimeAtProcessing.java?ref=9ba6f952f0eac930bcdaa16b9f1f785dd3feb910", "patch": "@@ -0,0 +1,95 @@\n+/* DateTimeAtProcessing.java -- \n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import java.util.Date;\n+import javax.print.attribute.DateTimeSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+\n+public final class DateTimeAtProcessing extends DateTimeSyntax\n+  implements PrintJobAttribute\n+{\n+  private static final long serialVersionUID = -3710068197278263244L;\n+\n+  /**\n+   * Creates a <code>DateTimeAtProcessing</code> object.\n+   *\n+   * @param value the date at processing time\n+   *\n+   * @exception NullPointerException if value is null\n+   */\n+  public DateTimeAtProcessing(Date value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof DateTimeAtProcessing))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>DateTimeAtProcessing</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return DateTimeAtProcessing.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"date-time-at-processing\"\n+   */\n+  public final String getName()\n+  {\n+    return \"date-time-at-processing\";\n+  }\n+}"}, {"sha": "da30186c01238878740ecea913a0ac00c213adc3", "filename": "libjava/javax/print/attribute/standard/JobImpressionsCompleted.java", "status": "added", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobImpressionsCompleted.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobImpressionsCompleted.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobImpressionsCompleted.java?ref=9ba6f952f0eac930bcdaa16b9f1f785dd3feb910", "patch": "@@ -0,0 +1,100 @@\n+/* JobImpressionsCompleted.java -- \n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.IntegerSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+\n+/**\n+ * @author Michael Koch\n+ */\n+public final class JobImpressionsCompleted extends IntegerSyntax\n+  implements PrintJobAttribute\n+{\n+  private static final long serialVersionUID = 6722648442432393294L;\n+  \n+  /**\n+   * Creates a <code>JobImpressionsCompleted</code> object.\n+   *\n+   * @param value the number of completed impressions\n+   *\n+   * @exception IllegalArgumentException if value < 0\n+   */\n+  public JobImpressionsCompleted(int value)\n+  {\n+    super(value);\n+\n+    if (value < 0)\n+      throw new IllegalArgumentException(\"value may not be less than 0\");\n+  }\n+  \n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof JobImpressionsCompleted))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>JobImpressionsCompleted</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return JobImpressionsCompleted.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"job-impressions-completed\"\n+   */\n+  public final String getName()\n+  {\n+    return \"job-impressions\";\n+  }\n+}"}, {"sha": "ff86181994a41dab9cb571b7fb3ee506192c1d9b", "filename": "libjava/javax/print/attribute/standard/JobKOctets.java", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobKOctets.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobKOctets.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobKOctets.java?ref=9ba6f952f0eac930bcdaa16b9f1f785dd3feb910", "patch": "@@ -0,0 +1,101 @@\n+/* JobKOctets.java -- \n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.IntegerSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.PrintRequestAttribute;\n+\n+/**\n+ * @author Michael Koch\n+ */\n+public final class JobKOctets extends IntegerSyntax\n+  implements PrintJobAttribute, PrintRequestAttribute\n+{\n+  private static final long serialVersionUID = -8959710146498202869L;\n+  \n+  /**\n+   * Creates a <code>JobKOctets</code> object.\n+   *\n+   * @param value the number of K octets\n+   *\n+   * @exception IllegalArgumentException if value < 0\n+   */\n+  public JobKOctets(int value)\n+  {\n+    super(value);\n+\n+    if (value < 0)\n+      throw new IllegalArgumentException(\"value may not be less than 0\");\n+  }\n+  \n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof JobKOctets))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>JobKOctets</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return JobKOctets.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"job-k-octets\"\n+   */\n+  public final String getName()\n+  {\n+    return \"job-k-octets\";\n+  }\n+}"}, {"sha": "76d3d6d3388527fef26503bd55fb633c7b238b91", "filename": "libjava/javax/print/attribute/standard/JobKOctetsProcessed.java", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobKOctetsProcessed.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobKOctetsProcessed.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobKOctetsProcessed.java?ref=9ba6f952f0eac930bcdaa16b9f1f785dd3feb910", "patch": "@@ -0,0 +1,101 @@\n+/* JobKOctetsProcessed.java -- \n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.IntegerSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.PrintRequestAttribute;\n+\n+/**\n+ * @author Michael Koch\n+ */\n+public final class JobKOctetsProcessed extends IntegerSyntax\n+  implements PrintJobAttribute, PrintRequestAttribute\n+{\n+  private static final long serialVersionUID = -6265238509657881806L;\n+  \n+  /**\n+   * Creates a <code>JobKOctetsProcessed</code> object.\n+   *\n+   * @param value the number of processed K octets\n+   *\n+   * @exception IllegalArgumentException if value < 0\n+   */\n+  public JobKOctetsProcessed(int value)\n+  {\n+    super(value);\n+\n+    if (value < 0)\n+      throw new IllegalArgumentException(\"value may not be less than 0\");\n+  }\n+  \n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof JobKOctetsProcessed))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>JobKOctetsProcessed</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return JobKOctetsProcessed.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"job-k-octets-processed\"\n+   */\n+  public final String getName()\n+  {\n+    return \"job-k-octets-processed\";\n+  }\n+}"}, {"sha": "849e942c3da53f8fc835ed23a987e616785bfe66", "filename": "libjava/javax/print/attribute/standard/JobMediaSheetsCompleted.java", "status": "added", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobMediaSheetsCompleted.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobMediaSheetsCompleted.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobMediaSheetsCompleted.java?ref=9ba6f952f0eac930bcdaa16b9f1f785dd3feb910", "patch": "@@ -0,0 +1,100 @@\n+/* JobMediaSheetsCompleted.java -- \n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.IntegerSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+\n+/**\n+ * @author Michael Koch\n+ */\n+public class JobMediaSheetsCompleted extends IntegerSyntax\n+  implements PrintJobAttribute\n+{\n+  private static final long serialVersionUID = 1739595973810840475L;\n+  \n+  /**\n+   * Creates a <code>JobMediaSheetsCompleted</code> object.\n+   *\n+   * @param value the number of completed media sheets for a print job\n+   *\n+   * @exception IllegalArgumentException if value < 0\n+   */\n+  public JobMediaSheetsCompleted(int value)\n+  {\n+    super(value);\n+\n+    if (value < 0)\n+      throw new IllegalArgumentException(\"value may not be less than 0\");\n+  }\n+  \n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof JobMediaSheetsCompleted))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>JobMediaSheetsCompleted</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return JobMediaSheetsCompleted.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"job-media-sheets-completed\"\n+   */\n+  public final String getName()\n+  {\n+    return \"job-media-sheets-completed\";\n+  }\n+}"}, {"sha": "a46c76b4ce57f0657875c95eb7d262b83c48d40e", "filename": "libjava/javax/print/attribute/standard/JobPrioritySupported.java", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobPrioritySupported.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ba6f952f0eac930bcdaa16b9f1f785dd3feb910/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobPrioritySupported.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FJobPrioritySupported.java?ref=9ba6f952f0eac930bcdaa16b9f1f785dd3feb910", "patch": "@@ -0,0 +1,97 @@\n+/* JobPrioritySupported.java -- \n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.IntegerSyntax;\n+import javax.print.attribute.SupportedValuesAttribute;\n+\n+public final class JobPrioritySupported extends IntegerSyntax\n+  implements SupportedValuesAttribute\n+{\n+  private static final long serialVersionUID = 2564840378013555894L;\n+\n+  /**\n+   * Creates a <code>JobPrioritySupported</code> object.\n+   *\n+   * @param value the priority\n+   *\n+   * @exception IllegalArgumentException if value < 1 or value > 100\n+   */\n+  public JobPrioritySupported(int value)\n+  {\n+    super(value);\n+\n+    if (value < 1 || value > 100)\n+      throw new IllegalArgumentException(\"value out of range\");\n+  }\n+\n+  /**\n+   * Tests of obj is equal to this object.\n+   *\n+   * @param obj the object to test\n+   *\n+   * @returns true if both objects are equal, false otherwise.\n+   */\n+  public boolean equals(Object obj)\n+  {\n+    if(! (obj instanceof JobPrioritySupported))\n+      return false;\n+\n+    return super.equals(obj);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>JobPrioritySupported</code> itself\n+   */\n+  public final Class getCategory()\n+  {\n+    return JobPrioritySupported.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"job-priority-supported\"\n+   */\n+  public final String getName()\n+  {\n+    return \"job-priority-supported\";\n+  }\n+}"}]}