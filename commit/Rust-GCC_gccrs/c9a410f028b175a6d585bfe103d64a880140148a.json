{"sha": "c9a410f028b175a6d585bfe103d64a880140148a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlhNDEwZjAyOGIxNzVhNmQ1ODViZmUxMDNkNjRhODgwMTQwMTQ4YQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-10-21T10:38:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-10-21T10:38:51Z"}, "message": "re PR tree-optimization/46111 (ICE: tree check: expected tree that contains 'decl minimal' structure, have 'mem_ref' in take_address_of, at tree-parloops.c:336 with -ftree-parallelize-loops -g)\n\n2010-10-21  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/46111\n\t* tree-parloops.c (take_address_of): Re-organize for MEM_REF.\n\n\t* g++.dg/torture/pr46111.C: New testcase.\n\nFrom-SVN: r165765", "tree": {"sha": "8909773836d8ee38d61ed03b1fa807fcd0296206", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8909773836d8ee38d61ed03b1fa807fcd0296206"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9a410f028b175a6d585bfe103d64a880140148a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9a410f028b175a6d585bfe103d64a880140148a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9a410f028b175a6d585bfe103d64a880140148a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9a410f028b175a6d585bfe103d64a880140148a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4818e7b9f8e9f5218d50f63c2dd7ae7f835aef0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4818e7b9f8e9f5218d50f63c2dd7ae7f835aef0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4818e7b9f8e9f5218d50f63c2dd7ae7f835aef0a"}], "stats": {"total": 72, "additions": 60, "deletions": 12}, "files": [{"sha": "8fc317f1e3df657d0b7402511c787b73797522cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a410f028b175a6d585bfe103d64a880140148a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a410f028b175a6d585bfe103d64a880140148a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c9a410f028b175a6d585bfe103d64a880140148a", "patch": "@@ -1,3 +1,8 @@\n+2010-10-21  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46111\n+\t* tree-parloops.c (take_address_of): Re-organize for MEM_REF.\n+\n 2010-10-21  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* config/s390/s390.md (*xordi3_cc): Mark xgrk as z196 only."}, {"sha": "78d4bc1c6cd0ae31fc8a50e847e788778de42943", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a410f028b175a6d585bfe103d64a880140148a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a410f028b175a6d585bfe103d64a880140148a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c9a410f028b175a6d585bfe103d64a880140148a", "patch": "@@ -1,3 +1,8 @@\n+2010-10-21  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46111\n+\t* g++.dg/torture/pr46111.C: New testcase.\n+\n 2010-10-21  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/46067"}, {"sha": "c1b04a03fa550a19c3d1c484e930bfb94fed4813", "filename": "gcc/testsuite/g++.dg/torture/pr46111.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a410f028b175a6d585bfe103d64a880140148a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr46111.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a410f028b175a6d585bfe103d64a880140148a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr46111.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr46111.C?ref=c9a410f028b175a6d585bfe103d64a880140148a", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-ftree-parallelize-loops=2 -g\" }\n+\n+struct A\n+{\n+  int zero ()\n+  {\n+    return 0;\n+  }\n+};\n+\n+static inline void\n+bar (int)\n+{\n+}\n+\n+struct B\n+{\n+  struct A a;\n+  B (int n)\n+  {\n+    for (int i = 0; i < n; i++)\n+      bar (a.zero ());\n+  }\n+};\n+\n+void\n+foo (int n)\n+{\n+  struct B b (n);\n+}"}, {"sha": "de9faefe77804b8b9b878b8aa33fccd5ea288df6", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a410f028b175a6d585bfe103d64a880140148a/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a410f028b175a6d585bfe103d64a880140148a/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=c9a410f028b175a6d585bfe103d64a880140148a", "patch": "@@ -333,14 +333,23 @@ take_address_of (tree obj, tree type, edge entry, htab_t decl_address)\n        handled_component_p (*var_p);\n        var_p = &TREE_OPERAND (*var_p, 0))\n     continue;\n-  uid = DECL_UID (*var_p);\n \n+  /* Canonicalize the access to base on a MEM_REF.  */\n+  if (DECL_P (*var_p))\n+    *var_p = build_simple_mem_ref (build_fold_addr_expr (*var_p));\n+\n+  /* Assign a canonical SSA name to the address of the base decl used\n+     in the address and share it for all accesses and addresses based\n+     on it.  */\n+  uid = DECL_UID (TREE_OPERAND (TREE_OPERAND (*var_p, 0), 0));\n   ielt.uid = uid;\n   dslot = htab_find_slot_with_hash (decl_address, &ielt, uid, INSERT);\n   if (!*dslot)\n     {\n-      addr = build_addr (*var_p, current_function_decl);\n-      bvar = create_tmp_var (TREE_TYPE (addr), get_name (*var_p));\n+      addr = TREE_OPERAND (*var_p, 0);\n+      bvar = create_tmp_var (TREE_TYPE (addr),\n+\t\t\t     get_name (TREE_OPERAND\n+\t\t\t\t         (TREE_OPERAND (*var_p, 0), 0)));\n       add_referenced_var (bvar);\n       stmt = gimple_build_assign (bvar, addr);\n       name = make_ssa_name (bvar, stmt);\n@@ -355,16 +364,14 @@ take_address_of (tree obj, tree type, edge entry, htab_t decl_address)\n   else\n     name = ((struct int_tree_map *) *dslot)->to;\n \n-  if (var_p != &obj)\n-    {\n-      *var_p = build_simple_mem_ref (name);\n-      name = force_gimple_operand (build_addr (obj, current_function_decl),\n-\t\t\t\t   &stmts, true, NULL_TREE);\n-      if (!gimple_seq_empty_p (stmts))\n-\tgsi_insert_seq_on_edge_immediate (entry, stmts);\n-    }\n+  /* Express the address in terms of the canonical SSA name.  */\n+  TREE_OPERAND (*var_p, 0) = name;\n+  name = force_gimple_operand (build_addr (obj, current_function_decl),\n+\t\t\t       &stmts, true, NULL_TREE);\n+  if (!gimple_seq_empty_p (stmts))\n+    gsi_insert_seq_on_edge_immediate (entry, stmts);\n \n-  if (TREE_TYPE (name) != type)\n+  if (!useless_type_conversion_p (type, TREE_TYPE (name)))\n     {\n       name = force_gimple_operand (fold_convert (type, name), &stmts, true,\n \t\t\t\t   NULL_TREE);"}]}