{"sha": "ab1c993b94cc09cf569f75c34c943f6e695a0ec3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWIxYzk5M2I5NGNjMDljZjU2OWY3NWMzNGM5NDNmNmU2OTVhMGVjMw==", "commit": {"author": {"name": "Tim Shen", "email": "timshen91@gmail.com", "date": "2013-10-17T20:46:50Z"}, "committer": {"name": "Tim Shen", "email": "timshen@gcc.gnu.org", "date": "2013-10-17T20:46:50Z"}, "message": "regex.h (regex_token_iterator<>::regex_token_iterator): Fix initialization orders in initialization list and add explicit braces for...\n\n2013-10-17  Tim Shen  <timshen91@gmail.com>\n\n\t* include/bits/regex.h (regex_token_iterator<>::regex_token_iterator):\n\tFix initialization orders in initialization list and add explicit braces\n\tfor potentially ambiguous(actually not) `else` branch to eliminate\n\twarnings.\n\t* include/bits/regex_automaton.h (_NFA<>::_NFA): Likewise.\n\t* include/bits/regex_compiler.h (_CharMatcher<>::_CharMatcher,\n\t_BracketMatcher<>::_BracketMatcher): Likewise.\n\t* include/bits/regex_compiler.tcc (_Compiler<>::_Compiler,\n\t_Compiler<>::_M_atom): Likewise.\n\t* include/bits/regex_executor.h (_Executor<>::_Executor): Likewise.\n\t* include/bits/regex_executor.tcc (_DFSExecutor<>::_M_dfs,\n\t_Executor<>::_M_word_boundry): Likewise.\n\t* include/bits/regex_scanner.tcc (_Scanner<>::_Scanner,\n\t_Scanner<>::_M_eat_class): Likewise.\n\t* include/bits/regex.tcc (__regex_algo_impl<>,\n\tregex_iterator<>::operator++): Likewise, and remove unused typedef.\n\nFrom-SVN: r203798", "tree": {"sha": "77c6c62f2454b98891ae2a05692b8bb9114f3b8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77c6c62f2454b98891ae2a05692b8bb9114f3b8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab1c993b94cc09cf569f75c34c943f6e695a0ec3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab1c993b94cc09cf569f75c34c943f6e695a0ec3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab1c993b94cc09cf569f75c34c943f6e695a0ec3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab1c993b94cc09cf569f75c34c943f6e695a0ec3/comments", "author": {"login": "timshen91", "id": 1157432, "node_id": "MDQ6VXNlcjExNTc0MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1157432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timshen91", "html_url": "https://github.com/timshen91", "followers_url": "https://api.github.com/users/timshen91/followers", "following_url": "https://api.github.com/users/timshen91/following{/other_user}", "gists_url": "https://api.github.com/users/timshen91/gists{/gist_id}", "starred_url": "https://api.github.com/users/timshen91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timshen91/subscriptions", "organizations_url": "https://api.github.com/users/timshen91/orgs", "repos_url": "https://api.github.com/users/timshen91/repos", "events_url": "https://api.github.com/users/timshen91/events{/privacy}", "received_events_url": "https://api.github.com/users/timshen91/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "358e1993d0b76b2643aee7565e2c5aef38a369ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/358e1993d0b76b2643aee7565e2c5aef38a369ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/358e1993d0b76b2643aee7565e2c5aef38a369ae"}], "stats": {"total": 166, "additions": 94, "deletions": 72}, "files": [{"sha": "5ae46af37811514117dece310b723107a2da0120", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1c993b94cc09cf569f75c34c943f6e695a0ec3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1c993b94cc09cf569f75c34c943f6e695a0ec3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ab1c993b94cc09cf569f75c34c943f6e695a0ec3", "patch": "@@ -1,3 +1,22 @@\n+2013-10-17  Tim Shen  <timshen91@gmail.com>\n+\n+\t* include/bits/regex.h (regex_token_iterator<>::regex_token_iterator):\n+\tFix initialization orders in initialization list and add explicit braces\n+\tfor potentially ambiguous(actually not) `else` branch to eliminate\n+\twarnings.\n+\t* include/bits/regex_automaton.h (_NFA<>::_NFA): Likewise.\n+\t* include/bits/regex_compiler.h (_CharMatcher<>::_CharMatcher,\n+\t_BracketMatcher<>::_BracketMatcher): Likewise.\n+\t* include/bits/regex_compiler.tcc (_Compiler<>::_Compiler,\n+\t_Compiler<>::_M_atom): Likewise.\n+\t* include/bits/regex_executor.h (_Executor<>::_Executor): Likewise.\n+\t* include/bits/regex_executor.tcc (_DFSExecutor<>::_M_dfs,\n+\t_Executor<>::_M_word_boundry): Likewise.\n+\t* include/bits/regex_scanner.tcc (_Scanner<>::_Scanner,\n+\t_Scanner<>::_M_eat_class): Likewise.\n+\t* include/bits/regex.tcc (__regex_algo_impl<>,\n+\tregex_iterator<>::operator++): Likewise, and remove unused typedef.\n+\n 2013-10-16  Tim Shen  <timshen91@gmail.com>\n \n \t* include/bits/regex.h (regex_token_iterator<>::regex_token_iterator):"}, {"sha": "5d1a8f4b71ed82b5dafca809e995ae42a7755c64", "filename": "libstdc++-v3/include/bits/regex.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1c993b94cc09cf569f75c34c943f6e695a0ec3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1c993b94cc09cf569f75c34c943f6e695a0ec3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h?ref=ab1c993b94cc09cf569f75c34c943f6e695a0ec3", "patch": "@@ -2514,7 +2514,7 @@ _GLIBCXX_END_NAMESPACE_VERSION\n        * iterator of the same type.\n        */\n       regex_token_iterator()\n-      : _M_position(), _M_result(nullptr), _M_suffix(), _M_n(0), _M_subs(),\n+      : _M_position(), _M_subs(), _M_suffix(), _M_n(0), _M_result(nullptr),\n       _M_has_m1(false)\n       { }\n \n@@ -2601,7 +2601,7 @@ _GLIBCXX_END_NAMESPACE_VERSION\n        */\n       regex_token_iterator(const regex_token_iterator& __rhs)\n       : _M_position(__rhs._M_position), _M_subs(__rhs._M_subs),\n-      _M_n(__rhs._M_n), _M_result(__rhs._M_result), _M_suffix(__rhs._M_suffix),\n+      _M_suffix(__rhs._M_suffix), _M_n(__rhs._M_n), _M_result(__rhs._M_result),\n       _M_has_m1(__rhs._M_has_m1)\n       {\n \tif (__rhs._M_result == &__rhs._M_suffix)\n@@ -2679,10 +2679,10 @@ _GLIBCXX_END_NAMESPACE_VERSION\n       { return _M_result == nullptr; }\n \n       _Position         _M_position;\n-      const value_type* _M_result;\n+      std::vector<int>  _M_subs;\n       value_type        _M_suffix;\n       std::size_t       _M_n;\n-      std::vector<int>  _M_subs;\n+      const value_type* _M_result;\n \n       // Show whether _M_subs contains -1\n       bool              _M_has_m1;"}, {"sha": "b3b5314d744d9696ca5f8c37c29901355b6f2c24", "filename": "libstdc++-v3/include/bits/regex.tcc", "status": "modified", "additions": 25, "deletions": 28, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1c993b94cc09cf569f75c34c943f6e695a0ec3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1c993b94cc09cf569f75c34c943f6e695a0ec3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.tcc?ref=ab1c993b94cc09cf569f75c34c943f6e695a0ec3", "patch": "@@ -61,14 +61,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       for (auto& __it : __res)\n \t__it.matched = false;\n \n-      typedef std::unique_ptr<_Executor<_BiIter, _Alloc, _CharT, _TraitsT>>\n-\t_ExecutorPtr;\n-      typedef _DFSExecutor<_BiIter, _Alloc, _CharT, _TraitsT> _DFSExecutorT;\n-      typedef _BFSExecutor<_BiIter, _Alloc, _CharT, _TraitsT> _BFSExecutorT;\n-\n-      _ExecutorPtr __executor =\n-\t__get_executor<_BiIter, _Alloc, _CharT, _TraitsT,\n-\t  __policy>(__s, __e, __res, __re, __flags);\n+      auto __executor = __get_executor<_BiIter, _Alloc, _CharT, _TraitsT,\n+\t   __policy>(__s, __e, __res, __re, __flags);\n \n       bool __ret;\n       if (__match_mode)\n@@ -540,26 +534,29 @@ _GLIBCXX_END_NAMESPACE_VERSION\n \t  auto __start = _M_match[0].second;\n \t  auto __prefix_first = _M_match[0].second;\n \t  if (_M_match[0].first == _M_match[0].second)\n-\t    if (__start == _M_end)\n-\t      {\n-\t\t_M_match = value_type();\n-\t\treturn *this;\n-\t      }\n-\t    else\n-\t      {\n-\t\tif (regex_search(__start, _M_end, _M_match, *_M_pregex, _M_flags\n-\t\t\t\t | regex_constants::match_not_null\n-\t\t\t\t | regex_constants::match_continuous))\n-\t\t  {\n-\t\t    _GLIBCXX_DEBUG_ASSERT(_M_match[0].matched);\n-\t\t    _M_match.at(_M_match.size()).first = __prefix_first;\n-\t\t    _M_match._M_in_iterator = true;\n-\t\t    _M_match._M_begin = _M_begin;\n-\t\t    return *this;\n-\t\t  }\n-\t\telse\n-\t\t  ++__start;\n-\t      }\n+\t    {\n+\t      if (__start == _M_end)\n+\t\t{\n+\t\t  _M_match = value_type();\n+\t\t  return *this;\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  if (regex_search(__start, _M_end, _M_match, *_M_pregex,\n+\t\t\t\t   _M_flags\n+\t\t\t\t   | regex_constants::match_not_null\n+\t\t\t\t   | regex_constants::match_continuous))\n+\t\t    {\n+\t\t      _GLIBCXX_DEBUG_ASSERT(_M_match[0].matched);\n+\t\t      _M_match.at(_M_match.size()).first = __prefix_first;\n+\t\t      _M_match._M_in_iterator = true;\n+\t\t      _M_match._M_begin = _M_begin;\n+\t\t      return *this;\n+\t\t    }\n+\t\t  else\n+\t\t    ++__start;\n+\t\t}\n+\t    }\n \t  _M_flags |= regex_constants::match_prev_avail;\n \t  if (regex_search(__start, _M_end, _M_match, *_M_pregex, _M_flags))\n \t    {"}, {"sha": "cb944990b4912ef45827ceeba29d19a487798f19", "filename": "libstdc++-v3/include/bits/regex_automaton.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1c993b94cc09cf569f75c34c943f6e695a0ec3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_automaton.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1c993b94cc09cf569f75c34c943f6e695a0ec3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_automaton.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_automaton.h?ref=ab1c993b94cc09cf569f75c34c943f6e695a0ec3", "patch": "@@ -138,7 +138,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       _NFA(_FlagT __f)\n       : _M_flags(__f), _M_start_state(0), _M_subexpr_count(0),\n-      _M_has_backref(false), _M_quant_count(0)\n+      _M_quant_count(0), _M_has_backref(false)\n       { }\n \n       _FlagT"}, {"sha": "7e4e6adafd56f8d2f25fd0c0accb6a79853d3229", "filename": "libstdc++-v3/include/bits/regex_compiler.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1c993b94cc09cf569f75c34c943f6e695a0ec3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1c993b94cc09cf569f75c34c943f6e695a0ec3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.h?ref=ab1c993b94cc09cf569f75c34c943f6e695a0ec3", "patch": "@@ -156,7 +156,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       explicit\n       _CharMatcher(_CharT __ch, const _TraitsT& __traits, _FlagT __flags)\n-      : _M_ch(_M_translate(__ch)), _M_traits(__traits), _M_flags(__flags)\n+      : _M_traits(__traits), _M_flags(__flags), _M_ch(_M_translate(__ch))\n       { }\n \n       bool\n@@ -189,8 +189,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _BracketMatcher(bool __is_non_matching,\n \t\t      const _TraitsT& __traits,\n \t\t      _FlagT __flags)\n-      : _M_is_non_matching(__is_non_matching), _M_traits(__traits),\n-\t_M_flags(__flags), _M_class_set(0)\n+      : _M_traits(__traits), _M_class_set(0), _M_flags(__flags),\n+      _M_is_non_matching(__is_non_matching)\n       { }\n \n       bool"}, {"sha": "e3764b8d82aa1511bef91569f1184a1c3fcf2512", "filename": "libstdc++-v3/include/bits/regex_compiler.tcc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1c993b94cc09cf569f75c34c943f6e695a0ec3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1c993b94cc09cf569f75c34c943f6e695a0ec3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_compiler.tcc?ref=ab1c993b94cc09cf569f75c34c943f6e695a0ec3", "patch": "@@ -73,8 +73,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t       ? __flags\n \t       : __flags | regex_constants::ECMAScript),\n     _M_traits(__traits),\n-    _M_scanner(__b, __e, _M_flags, _M_traits.getloc()),\n     _M_ctype(std::use_facet<std::ctype<_CharT>>(_M_traits.getloc())),\n+    _M_scanner(__b, __e, _M_flags, _M_traits.getloc()),\n     _M_nfa(_M_flags)\n     {\n       _StateSeqT __r(_M_nfa, _M_nfa._M_start());\n@@ -318,7 +318,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t}\n       else if (_M_match_token(_ScannerT::_S_token_subexpr_begin))\n \t{\n-\t  auto __mark = _M_nfa._M_sub_count();\n \t  _StateSeqT __r(_M_nfa, _M_nfa._M_insert_subexpr_begin());\n \t  this->_M_disjunction();\n \t  if (!_M_match_token(_ScannerT::_S_token_subexpr_end))"}, {"sha": "018b649a25aef1cacdc7973e9286a7492ff2e968", "filename": "libstdc++-v3/include/bits/regex_executor.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1c993b94cc09cf569f75c34c943f6e695a0ec3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_executor.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1c993b94cc09cf569f75c34c943f6e695a0ec3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_executor.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_executor.h?ref=ab1c993b94cc09cf569f75c34c943f6e695a0ec3", "patch": "@@ -74,8 +74,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t_FlagT          __flags)\n       : _M_begin(__begin),\n       _M_end(__end),\n-      _M_results(__results),\n       _M_re(__re),\n+      _M_results(__results),\n       _M_flags((__flags & regex_constants::match_prev_avail)\n \t       ? (__flags\n \t\t  & ~regex_constants::match_not_bol"}, {"sha": "b8755736e607d0135a228834c70d3c0bf0537955", "filename": "libstdc++-v3/include/bits/regex_executor.tcc", "status": "modified", "additions": 21, "deletions": 17, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1c993b94cc09cf569f75c34c943f6e695a0ec3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_executor.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1c993b94cc09cf569f75c34c943f6e695a0ec3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_executor.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_executor.tcc?ref=ab1c993b94cc09cf569f75c34c943f6e695a0ec3", "patch": "@@ -145,15 +145,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t    if (this->_M_re._M_traits.transform(__submatch.first,\n \t\t\t\t\t\t__submatch.second)\n \t\t== this->_M_re._M_traits.transform(__current, __last))\n-\t      if (__last != __current)\n-\t\t{\n-\t\t  auto __backup = __current;\n-\t\t  __current = __last;\n+\t      {\n+\t\tif (__last != __current)\n+\t\t  {\n+\t\t    auto __backup = __current;\n+\t\t    __current = __last;\n+\t\t    __ret = _M_dfs(__state._M_next);\n+\t\t    __current = __backup;\n+\t\t  }\n+\t\telse\n \t\t  __ret = _M_dfs(__state._M_next);\n-\t\t  __current = __backup;\n-\t\t}\n-\t      else\n-\t\t__ret = _M_dfs(__state._M_next);\n+\t      }\n \t  }\n \t  break;\n \tcase _S_opcode_accept:\n@@ -353,15 +355,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       auto __pre = _M_current;\n       --__pre;\n       if (!(_M_at_begin() && _M_at_end()))\n-\tif (_M_at_begin())\n-\t  __ans = _M_is_word(*_M_current)\n-\t    && !(_M_flags & regex_constants::match_not_bow);\n-\telse if (_M_at_end())\n-\t  __ans = _M_is_word(*__pre)\n-\t    && !(_M_flags & regex_constants::match_not_eow);\n-\telse\n-\t  __ans = _M_is_word(*_M_current)\n-\t    != _M_is_word(*__pre);\n+\t{\n+\t  if (_M_at_begin())\n+\t    __ans = _M_is_word(*_M_current)\n+\t      && !(_M_flags & regex_constants::match_not_bow);\n+\t  else if (_M_at_end())\n+\t    __ans = _M_is_word(*__pre)\n+\t      && !(_M_flags & regex_constants::match_not_eow);\n+\t  else\n+\t    __ans = _M_is_word(*_M_current)\n+\t      != _M_is_word(*__pre);\n+\t}\n       return __ans;\n     }\n "}, {"sha": "21d1e91f5f72ec5c203390c4e9240693ae517954", "filename": "libstdc++-v3/include/bits/regex_scanner.tcc", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab1c993b94cc09cf569f75c34c943f6e695a0ec3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_scanner.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab1c993b94cc09cf569f75c34c943f6e695a0ec3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_scanner.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_scanner.tcc?ref=ab1c993b94cc09cf569f75c34c943f6e695a0ec3", "patch": "@@ -56,8 +56,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     _Scanner<_FwdIter>::\n     _Scanner(_FwdIter __begin, _FwdIter __end,\n \t     _FlagT __flags, std::locale __loc)\n-    : _M_current(__begin) , _M_end(__end) , _M_flags(__flags),\n-      _M_ctype(std::use_facet<_CtypeT>(__loc)), _M_state(_S_state_normal),\n+    : _M_state(_S_state_normal), _M_current(__begin), _M_end(__end),\n+      _M_flags(__flags),\n+      _M_ctype(std::use_facet<_CtypeT>(__loc)),\n       _M_at_bracket_start(false),\n       _M_token_map\n \t{\n@@ -94,9 +95,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  {'t', '\\t'},\n \t  {'v', '\\v'},\n \t},\n-      _M_escape_map(_M_is_ecma()\n-\t\t    ? _M_ecma_escape_map\n-\t\t    : _M_awk_escape_map),\n       _M_ecma_spec_char\n \t{\n \t  '^',\n@@ -138,14 +136,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  '^',\n \t  '$',\n \t},\n-      _M_eat_escape(_M_is_ecma()\n-\t\t    ? &_Scanner::_M_eat_escape_ecma\n-\t\t    : &_Scanner::_M_eat_escape_posix),\n+      _M_escape_map(_M_is_ecma()\n+\t\t    ? _M_ecma_escape_map\n+\t\t    : _M_awk_escape_map),\n       _M_spec_char(_M_is_ecma()\n \t\t   ? _M_ecma_spec_char\n \t\t   : _M_is_basic()\n \t\t   ? _M_basic_spec_char\n-\t\t   : _M_extended_spec_char)\n+\t\t   : _M_extended_spec_char),\n+      _M_eat_escape(_M_is_ecma()\n+\t\t    ? &_Scanner::_M_eat_escape_ecma\n+\t\t    : &_Scanner::_M_eat_escape_posix)\n     { _M_advance(); }\n \n   template<typename _FwdIter>\n@@ -243,9 +244,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  _M_state = _S_state_in_brace;\n \t  _M_token = _S_token_interval_begin;\n \t}\n-      else if (_M_spec_char.count(__c)\n-\t       && __c != ']'\n-\t       && __c != '}'\n+      else if ((_M_spec_char.count(__c)\n+\t\t&& __c != ']'\n+\t\t&& __c != '}')\n \t       || (_M_is_grep() && __c == '\\n'))\n \t_M_token = _M_token_map.at(__c);\n       else\n@@ -515,10 +516,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  || *_M_current++ != __ch\n \t  || _M_current == _M_end // skip __ch\n \t  || *_M_current++ != ']') // skip ']'\n-\tif (__ch == ':')\n-\t  __throw_regex_error(regex_constants::error_ctype);\n-\telse\n-\t  __throw_regex_error(regex_constants::error_collate);\n+\t{\n+\t  if (__ch == ':')\n+\t    __throw_regex_error(regex_constants::error_ctype);\n+\t  else\n+\t    __throw_regex_error(regex_constants::error_collate);\n+\t}\n     }\n \n #ifdef _GLIBCXX_DEBUG"}]}