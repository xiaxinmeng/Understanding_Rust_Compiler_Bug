{"sha": "ade20620238fcc16f61e38aa199bde4d9e03952a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRlMjA2MjAyMzhmY2MxNmY2MWUzOGFhMTk5YmRlNGQ5ZTAzOTUyYQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-02-01T21:37:49Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-02-01T21:37:49Z"}, "message": "re PR fortran/42922 (Wrongly rejected derived types with default initializers in PURE procedures 2)\n\n2010-02-01  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/42922\n        * decl.c (variable_decl): Allow default initializer in\n        TYPE declarations in PURE functions.\n\n2010-02-01  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/42922\n        * gfortran.dg/pure_initializer_3.f90: News test.\n\nFrom-SVN: r156433", "tree": {"sha": "077d753f7ff743d2fa38fc8c1ddc2bb4156c1fd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/077d753f7ff743d2fa38fc8c1ddc2bb4156c1fd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ade20620238fcc16f61e38aa199bde4d9e03952a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ade20620238fcc16f61e38aa199bde4d9e03952a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ade20620238fcc16f61e38aa199bde4d9e03952a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ade20620238fcc16f61e38aa199bde4d9e03952a/comments", "author": null, "committer": null, "parents": [{"sha": "6eeea7a76e7741882185847fd061bb8ff59c4c1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eeea7a76e7741882185847fd061bb8ff59c4c1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6eeea7a76e7741882185847fd061bb8ff59c4c1e"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "9e7675570e57e70328986f62974bda0a182c5538", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ade20620238fcc16f61e38aa199bde4d9e03952a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ade20620238fcc16f61e38aa199bde4d9e03952a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ade20620238fcc16f61e38aa199bde4d9e03952a", "patch": "@@ -1,3 +1,9 @@\n+2010-02-01  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/42922\n+\t* decl.c (variable_decl): Allow default initializer in\n+\tTYPE declarations in PURE functions.\n+\n 2010-01-31  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/42888\n@@ -12,10 +18,10 @@\n \n 2010-01-31  Paul Thomas  <pault@gcc.gnu.org>\n \n-        PR fortran/38324\n+\tPR fortran/38324\n \t* expr.c (gfc_get_full_arrayspec_from_expr): New function.\n \t* gfortran.h : Add prototype for above.\n-        * trans-expr.c (gfc_trans_alloc_subarray_assign): New function.\n+\t* trans-expr.c (gfc_trans_alloc_subarray_assign): New function.\n \t(gfc_trans_subcomponent_assign): Call new function to replace\n \tthe code to deal with allocatable components.\n \t* trans-intrinsic.c (gfc_conv_intrinsic_bound): Call"}, {"sha": "015d6a4ef941055424290ecabf417fe3aa690317", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ade20620238fcc16f61e38aa199bde4d9e03952a/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ade20620238fcc16f61e38aa199bde4d9e03952a/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=ade20620238fcc16f61e38aa199bde4d9e03952a", "patch": "@@ -1809,7 +1809,8 @@ variable_decl (int elem)\n \t      m = MATCH_ERROR;\n \t    }\n \n-\t  if (current_attr.flavor != FL_PARAMETER && gfc_pure (NULL))\n+\t  if (current_attr.flavor != FL_PARAMETER && gfc_pure (NULL)\n+\t      && gfc_state_stack->state != COMP_DERIVED)\n \t    {\n \t      gfc_error (\"Initialization of variable at %C is not allowed in \"\n \t\t\t \"a PURE procedure\");"}, {"sha": "c68fe114b38174d324db01ff4c0507af0e4bcdde", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ade20620238fcc16f61e38aa199bde4d9e03952a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ade20620238fcc16f61e38aa199bde4d9e03952a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ade20620238fcc16f61e38aa199bde4d9e03952a", "patch": "@@ -1,3 +1,8 @@\n+2010-02-01  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/42922\n+\t* gfortran.dg/pure_initializer_3.f90: News test.\n+\n 2010-01-31  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/42888\n@@ -15,9 +20,9 @@\n \n 2010-01-31  Paul Thomas  <pault@gcc.gnu.org>\n \n-        PR fortran/38324\n-        * gfortran.dg/alloc_comp_basics_1.f90: Remove option -O2.\n-        * gfortran.dg/alloc_comp_bounds_1.f90: New test.\n+\tPR fortran/38324\n+\t* gfortran.dg/alloc_comp_basics_1.f90: Remove option -O2.\n+\t* gfortran.dg/alloc_comp_bounds_1.f90: New test.\n \n 2010-01-30  Paolo Bonzini  <bonzini@gnu.org>\n "}, {"sha": "91ec178f14d4f1edef567295d595bcf206dac108", "filename": "gcc/testsuite/gfortran.dg/pure_initializer_3.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ade20620238fcc16f61e38aa199bde4d9e03952a/gcc%2Ftestsuite%2Fgfortran.dg%2Fpure_initializer_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ade20620238fcc16f61e38aa199bde4d9e03952a/gcc%2Ftestsuite%2Fgfortran.dg%2Fpure_initializer_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpure_initializer_3.f90?ref=ade20620238fcc16f61e38aa199bde4d9e03952a", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+!\n+! PR fortran/42922\n+!\n+! Contributed by mrestelli@gmail.com\n+!\n+pure subroutine psub()\n+  implicit none\n+  type ilist\n+    integer :: i = 0\n+  end type ilist\n+  type(ilist) :: x\n+  x%i = 1\n+end subroutine psub"}]}