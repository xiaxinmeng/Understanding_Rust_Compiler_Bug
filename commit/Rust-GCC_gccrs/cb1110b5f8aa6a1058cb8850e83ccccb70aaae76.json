{"sha": "cb1110b5f8aa6a1058cb8850e83ccccb70aaae76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IxMTEwYjVmOGFhNmExMDU4Y2I4ODUwZTgzY2NjY2I3MGFhYWU3Ng==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-12-27T21:38:23Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-12-27T21:38:23Z"}, "message": "(ASM_FIRST_LINE): Print the version string.\n\n(ASM_SPEC): Pass -KVstring given -mversion-string.\n(LIB_SPEC): Add crtend.o.\n\t(STARTFILE_SPEC): Add crtbegin.o, and m88kdgux.ld for COFF.\n\t(CTOR_LIST_END, DTOR_LIST_END): Define as -1.\n\t(DO_GLOBAL_{C,D}ORS_BODY): Ignore null entries and look for -1\n\tbounds.\n\nFrom-SVN: r2926", "tree": {"sha": "4eb27ebb1235d4a3aea362f2f3e7fdf889f94e35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4eb27ebb1235d4a3aea362f2f3e7fdf889f94e35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb1110b5f8aa6a1058cb8850e83ccccb70aaae76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb1110b5f8aa6a1058cb8850e83ccccb70aaae76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb1110b5f8aa6a1058cb8850e83ccccb70aaae76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb1110b5f8aa6a1058cb8850e83ccccb70aaae76/comments", "author": null, "committer": null, "parents": [{"sha": "4d0e69c3f028843b21182d4d4431b5a93766673b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d0e69c3f028843b21182d4d4431b5a93766673b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d0e69c3f028843b21182d4d4431b5a93766673b"}], "stats": {"total": 60, "additions": 51, "deletions": 9}, "files": [{"sha": "59058d35a0dded773c0767ca34fd10fb2bc08eee", "filename": "gcc/config/m88k/dgux.h", "status": "modified", "additions": 51, "deletions": 9, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb1110b5f8aa6a1058cb8850e83ccccb70aaae76/gcc%2Fconfig%2Fm88k%2Fdgux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb1110b5f8aa6a1058cb8850e83ccccb70aaae76/gcc%2Fconfig%2Fm88k%2Fdgux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fdgux.h?ref=cb1110b5f8aa6a1058cb8850e83ccccb70aaae76", "patch": "@@ -3,7 +3,7 @@\n    Copyright (C) 1988, 1989, 1990, 1991 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@mcc.com)\n    Enhanced by Michael Meissner (meissner@osf.org)\n-   Currently supported by Tom Wood (wood@dg-rtp.dg.com)\n+   Version 2 port by Tom Wood (Tom_Wood@NeXT.com)\n \n This file is part of GNU CC.\n \n@@ -84,9 +84,10 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n /* Assembler support (-V, silicon filter, legends for mxdb).  */\n #undef\tASM_SPEC\n #define ASM_SPEC \"\\\n-%{V} %{v:%{!V:-V}} %{pipe: - %{msvr4:%{mversion-03.00:-KV3}}}\\\n+%{V} %{v:%{!V:-V}} %{pipe:%{!.s: - }\\\n+%{msvr4:%{mversion-03.00:-KV3}%{!mversion-03.00:%{mversion-*:-KV%*}}}}\\\n %{!mlegend:%{mstandard:-Wc,off}}\\\n-%{mlegend:-Wc,-fix-bb,-h\\\"gcc-2.2.14\\\",-s\\\"%i\\\"\\\n+%{mlegend:-Wc,-fix-bb,-h\\\"gcc-2.3.3\\\",-s\\\"%i\\\"\\\n %{traditional:,-lc}%{!traditional:,-lansi-c}\\\n %{mstandard:,-keep-std}\\\n %{mkeep-coff:,-keep-coff}\\\n@@ -100,10 +101,13 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n /* Linker and library spec's.\n    -static, -shared, -symbolic, -h* and -z* access AT&T V.4 link options.\n    -svr4 instructs gcc to place /usr/lib/values-X[cat].o on link the line.\n+   The absense of -msvr4 indicates linking done in a COFF environment and\n+   adds the link script to the link line.  In all environments, the first\n+   and last objects are crtbegin.o and crtend.o.\n    When the -G link option is used (-shared and -symbolic) a final link is\n    not being done.  */\n #undef\tLIB_SPEC\n-#define LIB_SPEC \"%{!shared:%{!symbolic:-lc}}\"\n+#define LIB_SPEC \"%{!shared:%{!symbolic:-lc}} crtend.o%s\"\n #undef\tLINK_SPEC\n #define LINK_SPEC \"%{z*} %{h*} %{V} %{v:%{!V:-V}} \\\n \t\t   %{static:-dn -Bstatic} \\\n@@ -113,6 +117,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef\tSTARTFILE_SPEC\n #define STARTFILE_SPEC \"%{!shared:%{!symbolic:%{pg:gcrt0.o%s} \\\n \t\t\t %{!pg:%{p:/lib/mcrt0.o}%{!p:/lib/crt0.o}} \\\n+\t\t\t %{!msvr4:m88kdgux.ld%s} crtbegin.o%s \\\n \t\t\t %{svr4:%{ansi:/lib/values-Xc.o} \\\n \t\t\t  %{!ansi:%{traditional:/lib/values-Xt.o} \\\n \t\t\t   %{!traditional:/usr/lib/values-Xa.o}}}}}\"\n@@ -139,8 +144,8 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef  ASM_FIRST_LINE\n #define ASM_FIRST_LINE(FILE)\t\t\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n-    if (VERSION_0300_SYNTAX)\t\t\t\t\t\t\\\n-      fprintf (FILE, \"\\t%s\\t \\\"03.00\\\"\\n\", VERSION_ASM_OP);\t\t\\\n+    if (m88k_version)\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \"\\t%s\\t \\\"%s\\\"\\n\", VERSION_ASM_OP, m88k_version);\t\\\n     if (write_symbols != NO_DEBUG\t\t\t\t\t\\\n \t&& ! (TARGET_STANDARD && ! TARGET_LEGEND))\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n@@ -162,14 +167,14 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef WCHAR_TYPE\n #undef WCHAR_TYPE_SIZE\n \n-/* Override svr4.h and m88k.h except when compiling crtstuff.c.  */\n+/* Override svr4.h and m88k.h except when compiling crtstuff.c.  These must\n+   be constant strings when compiling crtstuff.c.  Otherwise, respect the\n+   -mversion-STRING option used.  */\n #if !defined (CRT_BEGIN) && !defined (CRT_END)\n-#if 0 /* The SVR4 init method doesn't yet work.  */\n #undef\tINIT_SECTION_ASM_OP\n #define INIT_SECTION_ASM_OP (VERSION_0300_SYNTAX\t\t\\\n \t\t\t     ? \"section\\t .init,\\\"xa\\\"\"\t\\\n \t\t\t     : \"section\\t .init,\\\"x\\\"\")\n-#endif\n #undef\tCTORS_SECTION_ASM_OP\n #define CTORS_SECTION_ASM_OP (VERSION_0300_SYNTAX\t\t\\\n \t\t\t      ? \"section\\t .ctors,\\\"aw\\\"\"\t\\\n@@ -179,3 +184,40 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \t\t\t      ? \"section\\t .dtors,\\\"aw\\\"\"\t\\\n \t\t\t      : \"section\\t .dtors,\\\"d\\\"\")\n #endif /* crtstuff.c */\n+\n+/* The lists of global object constructors and global destructors are always\n+   placed in the .ctors/.dtors sections.  This requires the use of a link\n+   script if the COFF linker is used, but otherwise COFF and ELF objects\n+   can be intermixed.  A COFF object will pad the section to 16 bytes with\n+   zeros; and ELF object will not contain padding.  We deal with this by\n+   putting a -1 marker at the begin and end of the list and ignoring zero\n+   entries.  */\n+\n+/* Mark the end of the .ctors/.dtors sections with a -1.  */\n+#define CTOR_LIST_END\t\t\t\\\n+asm (CTORS_SECTION_ASM_OP);\t\t\\\n+func_ptr __CTOR_END__[1] = { (func_ptr) (-1) }\n+\n+#define DTOR_LIST_END\t\t\t\\\n+asm (DTORS_SECTION_ASM_OP);\t\t\\\n+func_ptr __DTOR_END__[1] = { (func_ptr) (-1) }\n+\n+/* Walk the list ignoring NULL entries till we hit the terminating -1.  */\n+#define DO_GLOBAL_CTORS_BODY\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\\\n+    int i;\t\t\t\t\t\t\\\n+    for (i=1;(int)(__CTOR_LIST__[i]) != -1; i++)\t\\\n+      if (((int *)__CTOR_LIST__)[i] != 0)\t\t\\\n+\t__CTOR_LIST__[i] ();\t\t\t\t\\\n+  } while (0)\t\t\t\t\t\n+\n+/* Walk the list looking for the terminating -1 that marks the end.\n+   Go backward and ignore any NULL entries.  */\n+#define DO_GLOBAL_DTORS_BODY\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\\\n+    int i;\t\t\t\t\t\t\\\n+    for (i=1;(int)(__DTOR_LIST__[i]) != -1; i++);\t\\\n+    for (i-=1;(int)(__DTOR_LIST__[i]) != -1; i--)\t\\\n+      if (((int *)__DTOR_LIST__)[i] != 0)\t\t\\\n+\t__DTOR_LIST__[i] ();\t\t\t\t\\\n+  } while (0)\t\t\t\t\t"}]}