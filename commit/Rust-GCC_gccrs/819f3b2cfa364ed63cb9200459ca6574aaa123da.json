{"sha": "819f3b2cfa364ed63cb9200459ca6574aaa123da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE5ZjNiMmNmYTM2NGVkNjNjYjkyMDA0NTljYTY1NzRhYWExMjNkYQ==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2012-05-22T08:31:52Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2012-05-22T08:31:52Z"}, "message": "re PR tree-optimization/53336 (invalid types in nop conversion)\n\ngcc:\n2012-05-16  Paolo Bonzini  <bonzini@gnu.org>\n\n\tPR tree-optimization/53336\n\t* tree-cfg.c (verify_gimple_assign_unary): Allow conversion from\n\tnon-integer integral types to offset type and vice versa.\n\ngcc/testsuite:\n2012-05-16  Paolo Bonzini  <bonzini@gnu.org>\n\n\tPR tree-optimization/53336\n\t* g++.dg/torture/pr53336.C: New testcase.\n\nFrom-SVN: r187759", "tree": {"sha": "3c8790916f85a32265d55ae917edeb9ac9c927b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c8790916f85a32265d55ae917edeb9ac9c927b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/819f3b2cfa364ed63cb9200459ca6574aaa123da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/819f3b2cfa364ed63cb9200459ca6574aaa123da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/819f3b2cfa364ed63cb9200459ca6574aaa123da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/819f3b2cfa364ed63cb9200459ca6574aaa123da/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7caf4b0caa0c8f0283d12632a7aa33276614e079", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7caf4b0caa0c8f0283d12632a7aa33276614e079", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7caf4b0caa0c8f0283d12632a7aa33276614e079"}], "stats": {"total": 62, "additions": 59, "deletions": 3}, "files": [{"sha": "7d63d054a8a8b3e914031e9cac0b8a326df2959c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/819f3b2cfa364ed63cb9200459ca6574aaa123da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/819f3b2cfa364ed63cb9200459ca6574aaa123da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=819f3b2cfa364ed63cb9200459ca6574aaa123da", "patch": "@@ -1,3 +1,9 @@\n+2012-05-22  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR tree-optimization/53336\n+\t* tree-cfg.c (verify_gimple_assign_unary): Allow conversion from\n+\tnon-integer integral types to offset type and vice versa.\n+\n 2012-05-22  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/aix.h (FP_SAVE_INLINE, GP_SAVE_INLINE): Delete."}, {"sha": "661da35a139f48e890efac7dfcb927758f20b100", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/819f3b2cfa364ed63cb9200459ca6574aaa123da/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/819f3b2cfa364ed63cb9200459ca6574aaa123da/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=819f3b2cfa364ed63cb9200459ca6574aaa123da", "patch": "@@ -1,3 +1,8 @@\n+2012-05-22  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR tree-optimization/53336\n+\t* g++.dg/torture/pr53336.C: New testcase.\n+\n 2012-05-22  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/53322"}, {"sha": "ab121945d81013a1b7a4ccd82b803e1d2a990f41", "filename": "gcc/testsuite/g++.dg/torture/pr53336.C", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/819f3b2cfa364ed63cb9200459ca6574aaa123da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53336.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/819f3b2cfa364ed63cb9200459ca6574aaa123da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53336.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53336.C?ref=819f3b2cfa364ed63cb9200459ca6574aaa123da", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+bool foo();\n+\n+struct C\n+{\n+    C()\n+    {\n+        if (foo())\n+            foo();\n+    }\n+};\n+\n+struct S\n+{\n+    struct dummy\n+    {\n+        int i_;\n+    };\n+    typedef int dummy::*bool_type;\n+\n+    operator bool_type() const\n+    {\n+        return foo() ? &dummy::i_ : 0;\n+    }\n+};\n+\n+int x;\n+\n+struct adaptor\n+{\n+    C c;\n+\n+    virtual void bar()\n+    {\n+        if (S())\n+            x = 0;\n+    }\n+};\n+\n+int main()\n+{\n+    adaptor a;\n+}\n+"}, {"sha": "423db1db4530d3b836d993cd1dd0a0dd6f2c10e7", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/819f3b2cfa364ed63cb9200459ca6574aaa123da/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/819f3b2cfa364ed63cb9200459ca6574aaa123da/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=819f3b2cfa364ed63cb9200459ca6574aaa123da", "patch": "@@ -3373,11 +3373,11 @@ verify_gimple_assign_unary (gimple stmt)\n \t\t    || ptrofftype_p (sizetype))))\n \t  return false;\n \n-\t/* Allow conversion from integer to offset type and vice versa.  */\n+\t/* Allow conversion from integral to offset type and vice versa.  */\n \tif ((TREE_CODE (lhs_type) == OFFSET_TYPE\n-\t     && TREE_CODE (rhs1_type) == INTEGER_TYPE)\n+\t     && INTEGRAL_TYPE_P (rhs1_type))\n \t    || (TREE_CODE (lhs_type) == INTEGER_TYPE\n-\t\t&& TREE_CODE (rhs1_type) == OFFSET_TYPE))\n+\t\t&& INTEGRAL_TYPE_P (rhs1_type)))\n \t  return false;\n \n \t/* Otherwise assert we are converting between types of the"}]}