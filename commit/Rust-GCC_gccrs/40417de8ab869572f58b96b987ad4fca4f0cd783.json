{"sha": "40417de8ab869572f58b96b987ad4fca4f0cd783", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA0MTdkZThhYjg2OTU3MmY1OGI5NmI5ODdhZDRmY2E0ZjBjZDc4Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-20T09:42:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-20T09:42:53Z"}, "message": "[multiple changes]\n\n2015-10-20  Vincent Celier  <celier@adacore.com>\n\n\t* prj-attr.adb: Add package Codepeer and its attributes.\n\n2015-10-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch3.adb, sem_ch13.adb: Minor reformatting.\n\n2015-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* gnatlink.adb (Gnatlink): Do not translate --RTS switch\n\tfor the linker and instead pass the switches that were\n\treinstated by the compiler.\n\n2015-10-20  Bob Duff  <duff@adacore.com>\n\n\t* a-contai.ads, a-convec.ads: Move Count_Type_Last from\n\ta-convec.ads to a-contai.ads, so other containers can refer to it.\n\nFrom-SVN: r229027", "tree": {"sha": "f4993289c7ca70623107b4a58f83baac6c5e986d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4993289c7ca70623107b4a58f83baac6c5e986d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40417de8ab869572f58b96b987ad4fca4f0cd783", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40417de8ab869572f58b96b987ad4fca4f0cd783", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40417de8ab869572f58b96b987ad4fca4f0cd783", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40417de8ab869572f58b96b987ad4fca4f0cd783/comments", "author": null, "committer": null, "parents": [{"sha": "b8a1821614cbf7e5c117bf0a7a215e3c3a81f8c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8a1821614cbf7e5c117bf0a7a215e3c3a81f8c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8a1821614cbf7e5c117bf0a7a215e3c3a81f8c3"}], "stats": {"total": 99, "additions": 66, "deletions": 33}, "files": [{"sha": "3b1a4eb2538e0f056dc421e4179cb471eae9b92e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40417de8ab869572f58b96b987ad4fca4f0cd783/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40417de8ab869572f58b96b987ad4fca4f0cd783/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=40417de8ab869572f58b96b987ad4fca4f0cd783", "patch": "@@ -1,3 +1,22 @@\n+2015-10-20  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-attr.adb: Add package Codepeer and its attributes.\n+\n+2015-10-20  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch3.adb, sem_ch13.adb: Minor reformatting.\n+\n+2015-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnatlink.adb (Gnatlink): Do not translate --RTS switch\n+\tfor the linker and instead pass the switches that were\n+\treinstated by the compiler.\n+\n+2015-10-20  Bob Duff  <duff@adacore.com>\n+\n+\t* a-contai.ads, a-convec.ads: Move Count_Type_Last from\n+\ta-convec.ads to a-contai.ads, so other containers can refer to it.\n+\n 2015-10-20  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch3.adb (Check_Nonoverridable_Aspects): New procedure within"}, {"sha": "02dc28f26a369132a5084e4c8fd639fe3ddc55a7", "filename": "gcc/ada/a-contai.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40417de8ab869572f58b96b987ad4fca4f0cd783/gcc%2Fada%2Fa-contai.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40417de8ab869572f58b96b987ad4fca4f0cd783/gcc%2Fada%2Fa-contai.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-contai.ads?ref=40417de8ab869572f58b96b987ad4fca4f0cd783", "patch": "@@ -34,6 +34,10 @@ package Ada.Containers is\n \n private\n \n+   Count_Type_Last : constant := Count_Type'Last;\n+   --  Count_Type'Last as a universal_integer, so we can compare Index_Type\n+   --  values against this without type conversions that might overflow.\n+\n    type Tamper_Counts is record\n       Busy : Natural := 0;\n       Lock : Natural := 0;"}, {"sha": "0356431772ad9c0f50b97cd23c062cea17fd564a", "filename": "gcc/ada/a-convec.ads", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40417de8ab869572f58b96b987ad4fca4f0cd783/gcc%2Fada%2Fa-convec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40417de8ab869572f58b96b987ad4fca4f0cd783/gcc%2Fada%2Fa-convec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-convec.ads?ref=40417de8ab869572f58b96b987ad4fca4f0cd783", "patch": "@@ -370,6 +370,7 @@ private\n    use Implementation;\n \n    type Elements_Array is array (Index_Type range <>) of aliased Element_Type;\n+   function \"=\" (L, R : Elements_Array) return Boolean is abstract;\n \n    type Elements_Type (Last : Extended_Index) is limited record\n       EA : Elements_Array (Index_Type'First .. Last);\n@@ -490,10 +491,6 @@ private\n \n    Empty_Vector : constant Vector := (Controlled with others => <>);\n \n-   Count_Type_Last : constant := Count_Type'Last;\n-   --  Count_Type'Last as a universal_integer, so we can compare Index_Type\n-   --  values against this without type conversions that might overflow.\n-\n    type Iterator is new Limited_Controlled and\n      Vector_Iterator_Interfaces.Reversible_Iterator with\n    record"}, {"sha": "f50c946eba90b100d0ff02b34cfa6adba099b990", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 26, "deletions": 23, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40417de8ab869572f58b96b987ad4fca4f0cd783/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40417de8ab869572f58b96b987ad4fca4f0cd783/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=40417de8ab869572f58b96b987ad4fca4f0cd783", "patch": "@@ -1539,8 +1539,7 @@ begin\n             loop\n                --  Do not compile with the front end switches. However, --RTS\n                --  is to be dealt with specially because it needs to be passed\n-               --  if the binder-generated file is in Ada and may also be used\n-               --  to drive the linker.\n+               --  to compile the file generated by the binder.\n \n                declare\n                   Arg : String_Ptr renames Args.Table (Index);\n@@ -1550,6 +1549,31 @@ begin\n                      Binder_Options_From_ALI.Table\n                        (Binder_Options_From_ALI.Last) := String_Access (Arg);\n \n+                     --  GNAT doesn't support GCC's multilib mechanism when it\n+                     --  is configured with --disable-libada. This means that,\n+                     --  when a multilib switch is used to request a particular\n+                     --  compilation mode, the corresponding --RTS switch must\n+                     --  also be specified. It is convenient to eliminate the\n+                     --  redundancy by keying the compilation mode on a single\n+                     --  switch, namely --RTS, and have the compiler reinstate\n+                     --  the multilib switch (see gcc-interface/lang-specs.h).\n+                     --  This switch must be passed to the driver at link time.\n+\n+                     if Arg'Length = 5\n+                       and then Arg (Arg'First + 1 .. Arg'First + 4) = \"mrtp\"\n+                     then\n+                        Linker_Options.Increment_Last;\n+                        Linker_Options.Table\n+                          (Linker_Options.Last) := String_Access (Arg);\n+\n+                     elsif Arg'Length = 6\n+                       and then Arg (Arg'First + 1 .. Arg'First + 5) = \"fsjlj\"\n+                     then\n+                        Linker_Options.Increment_Last;\n+                        Linker_Options.Table\n+                          (Linker_Options.Last) := String_Access (Arg);\n+                     end if;\n+\n                   elsif Arg'Length > 5\n                     and then Arg (Arg'First + 2 .. Arg'First + 5) = \"RTS=\"\n                   then\n@@ -1568,27 +1592,6 @@ begin\n                      Opt.RTS_Lib_Path_Name :=\n                        Get_RTS_Search_Dir\n                          (Arg (Arg'First + 6 .. Arg'Last), Objects);\n-\n-                     --  GNAT doesn't support the GCC multilib mechanism.\n-                     --  This means that, when a multilib switch is used\n-                     --  to request a particular compilation mode, the\n-                     --  corresponding runtime switch (--RTS) must also be\n-                     --  specified. The long-term goal is to fully support the\n-                     --  multilib mechanism; however, in the meantime, it is\n-                     --  convenient to eliminate the redundancy by keying the\n-                     --  compilation mode on a single switch, namely --RTS.\n-\n-                     --  Pass -mrtp to the linker if --RTS=rtp was passed\n-\n-                     if Arg'Length > 8\n-                       and then\n-                         (Arg (Arg'First + 6 .. Arg'First + 8) = \"rtp\"\n-                           or else Arg (Arg'Last - 2 .. Arg'Last) = \"rtp\")\n-                     then\n-                        Linker_Options.Increment_Last;\n-                        Linker_Options.Table (Linker_Options.Last) :=\n-                          new String'(\"-mrtp\");\n-                     end if;\n                   end if;\n                end;\n             end loop;"}, {"sha": "66de7c71601a5c90f49ebe6664848df63de0583b", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40417de8ab869572f58b96b987ad4fca4f0cd783/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40417de8ab869572f58b96b987ad4fca4f0cd783/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=40417de8ab869572f58b96b987ad4fca4f0cd783", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -379,6 +379,16 @@ package body Prj.Attr is\n    \"Pstack#\" &\n    \"LVswitches#\" &\n \n+   --  package Codepeer\n+\n+   \"Pcodepeer#\" &\n+   \"SVoutput_directory#\" &\n+   \"SVdatabase_directory#\" &\n+   \"SVmessage_patterns#\" &\n+   \"SVadditional_patterns#\" &\n+   \"LVswitches#\" &\n+   \"LVexcluded_source_files#\" &\n+\n    \"#\";\n \n    Initialized : Boolean := False;"}, {"sha": "c3af7ce488be8762288060fc8e38038f3d1a4d16", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40417de8ab869572f58b96b987ad4fca4f0cd783/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40417de8ab869572f58b96b987ad4fca4f0cd783/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=40417de8ab869572f58b96b987ad4fca4f0cd783", "patch": "@@ -1447,9 +1447,6 @@ package body Sem_Ch13 is\n                Disc        : Entity_Id;\n                Parent_Disc : Entity_Id;\n \n-               --  For a type extension, check whether parent has a\n-               --  reference discriminant, to verify that use is proper.\n-\n             begin\n                if not Is_Type (E) or else not Has_Discriminants (E) then\n                   Error_Msg_N\n@@ -1474,7 +1471,7 @@ package body Sem_Ch13 is\n                      Next_Discriminant (Disc);\n                   end loop;\n \n-                  --  Error if no proper access discriminant.\n+                  --  Error if no proper access discriminant\n \n                   if No (Disc) then\n                      Error_Msg_NE\n@@ -1483,6 +1480,9 @@ package body Sem_Ch13 is\n                   end if;\n                end if;\n \n+               --  For a type extension, check whether parent has a\n+               --  reference discriminant, to verify that use is proper.\n+\n                if Is_Derived_Type (E)\n                  and then Has_Discriminants (Etype (E))\n                then"}, {"sha": "2649f4d8bb485129b4144d73db4cd04ec11c98b9", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40417de8ab869572f58b96b987ad4fca4f0cd783/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40417de8ab869572f58b96b987ad4fca4f0cd783/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=40417de8ab869572f58b96b987ad4fca4f0cd783", "patch": "@@ -2615,7 +2615,7 @@ package body Sem_Ch3 is\n             return False;\n          end Has_Aspect_Spec;\n \n-         --  Start of processing for Check_Nonoverridable_Aspects\n+      --  Start of processing for Check_Nonoverridable_Aspects\n \n       begin\n "}]}