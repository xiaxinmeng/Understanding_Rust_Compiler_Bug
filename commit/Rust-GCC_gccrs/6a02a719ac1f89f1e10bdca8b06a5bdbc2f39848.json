{"sha": "6a02a719ac1f89f1e10bdca8b06a5bdbc2f39848", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEwMmE3MTlhYzFmODlmMWUxMGJkY2E4YjA2YTViZGJjMmYzOTg0OA==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-12-02T20:13:11Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-12-02T20:13:11Z"}, "message": "Fix PR45297: handle ADDR_EXPR in interpret_rhs_expr as in follow_ssa_edge_expr.\n\n2010-12-01  Sebastian Pop  <sebastian.pop@amd.com>\n\n\tPR middle-end/45297\n\t* tree-scalar-evolution.c (interpret_rhs_expr): Handle ADDR_EXPR\n\twith MEM_REFs as POINTER_PLUS_EXPR.\n\nFrom-SVN: r167390", "tree": {"sha": "dbcf34d5077c3b073edbea93727ac6372f8b00a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbcf34d5077c3b073edbea93727ac6372f8b00a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a02a719ac1f89f1e10bdca8b06a5bdbc2f39848", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a02a719ac1f89f1e10bdca8b06a5bdbc2f39848", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a02a719ac1f89f1e10bdca8b06a5bdbc2f39848", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a02a719ac1f89f1e10bdca8b06a5bdbc2f39848/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35caf1bdabb995220afd8af62306004bc38636fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35caf1bdabb995220afd8af62306004bc38636fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35caf1bdabb995220afd8af62306004bc38636fb"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "ec354d6c6f3babf5ab81137dbfd997267ad2794c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a02a719ac1f89f1e10bdca8b06a5bdbc2f39848/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a02a719ac1f89f1e10bdca8b06a5bdbc2f39848/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a02a719ac1f89f1e10bdca8b06a5bdbc2f39848", "patch": "@@ -1,3 +1,9 @@\n+2010-12-02  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR middle-end/45297\n+\t* tree-scalar-evolution.c (interpret_rhs_expr): Handle ADDR_EXPR\n+\twith MEM_REFs as POINTER_PLUS_EXPR.\n+\n 2010-12-02  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/i386/linux.h, config/m32r/linux.h, config/m68k/linux.h,"}, {"sha": "4a4bda9d9257c29709eb3e21c0cc7e36ec3652a1", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a02a719ac1f89f1e10bdca8b06a5bdbc2f39848/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a02a719ac1f89f1e10bdca8b06a5bdbc2f39848/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=6a02a719ac1f89f1e10bdca8b06a5bdbc2f39848", "patch": "@@ -1715,12 +1715,22 @@ interpret_rhs_expr (struct loop *loop, gimple at_stmt,\n \t  return chrec_convert (type, analyze_scalar_evolution (loop, rhs1),\n \t\t\t\tat_stmt);\n \t}\n-\n-      return chrec_dont_know;\n     }\n \n   switch (code)\n     {\n+    case ADDR_EXPR:\n+      /* Handle &MEM[ptr + CST] which is equivalent to POINTER_PLUS_EXPR.  */\n+      if (TREE_CODE (TREE_OPERAND (rhs1, 0)) != MEM_REF)\n+\t{\n+\t  res = chrec_dont_know;\n+\t  break;\n+\t}\n+\n+      rhs2 = TREE_OPERAND (TREE_OPERAND (rhs1, 0), 1);\n+      rhs1 = TREE_OPERAND (TREE_OPERAND (rhs1, 0), 0);\n+      /* Fall through.  */\n+\n     case POINTER_PLUS_EXPR:\n       chrec1 = analyze_scalar_evolution (loop, rhs1);\n       chrec2 = analyze_scalar_evolution (loop, rhs2);"}]}