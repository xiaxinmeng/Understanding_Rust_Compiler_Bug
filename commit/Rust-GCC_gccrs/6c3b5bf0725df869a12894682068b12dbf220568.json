{"sha": "6c3b5bf0725df869a12894682068b12dbf220568", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMzYjViZjA3MjVkZjg2OWExMjg5NDY4MjA2OGIxMmRiZjIyMDU2OA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-10-25T16:46:54Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-10-25T16:46:54Z"}, "message": "Expose forcibly_ggc_collect and run it after all selftests\n\ngcc/ChangeLog:\n\t* ggc-tests.c (forcibly_ggc_collect): Rename to...\n\t(selftest::forcibly_ggc_collect): ...this, and remove \"static\".\n\t(test_basic_struct): Update for above renaming.\n\t(test_length): Likewise.\n\t(test_union): Likewise.\n\t(test_finalization): Likewise.\n\t(test_deletable_global): Likewise.\n\t(test_inheritance): Likewise.\n\t(test_chain_next): Likewise.\n\t(test_user_struct): Likewise.\n\t(test_tree_marking): Likewise.\n\t* selftest-run-tests.c (selftest::run_tests): Call\n\tselftest::forcibly_ggc_collect at the end of the selftests.\n\t* selftest.h (selftest::forcibly_ggc_collect): New decl.\n\nFrom-SVN: r241527", "tree": {"sha": "9ed4ccf669a1c2f72ab19b46f518c6f399e4c206", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ed4ccf669a1c2f72ab19b46f518c6f399e4c206"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c3b5bf0725df869a12894682068b12dbf220568", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c3b5bf0725df869a12894682068b12dbf220568", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c3b5bf0725df869a12894682068b12dbf220568", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c3b5bf0725df869a12894682068b12dbf220568/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "96592eeda1f5cb381d91ef78dea3e2666bbdb7b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96592eeda1f5cb381d91ef78dea3e2666bbdb7b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96592eeda1f5cb381d91ef78dea3e2666bbdb7b5"}], "stats": {"total": 56, "additions": 42, "deletions": 14}, "files": [{"sha": "68ae6878416dfe331cefa40478bc833c934c1f3f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3b5bf0725df869a12894682068b12dbf220568/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3b5bf0725df869a12894682068b12dbf220568/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c3b5bf0725df869a12894682068b12dbf220568", "patch": "@@ -1,3 +1,20 @@\n+2016-10-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* ggc-tests.c (forcibly_ggc_collect): Rename to...\n+\t(selftest::forcibly_ggc_collect): ...this, and remove \"static\".\n+\t(test_basic_struct): Update for above renaming.\n+\t(test_length): Likewise.\n+\t(test_union): Likewise.\n+\t(test_finalization): Likewise.\n+\t(test_deletable_global): Likewise.\n+\t(test_inheritance): Likewise.\n+\t(test_chain_next): Likewise.\n+\t(test_user_struct): Likewise.\n+\t(test_tree_marking): Likewise.\n+\t* selftest-run-tests.c (selftest::run_tests): Call\n+\tselftest::forcibly_ggc_collect at the end of the selftests.\n+\t* selftest.h (selftest::forcibly_ggc_collect): New decl.\n+\n 2016-10-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/78102"}, {"sha": "b9cd276ba34b9e439011129a4b1124dcddd32a87", "filename": "gcc/ggc-tests.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3b5bf0725df869a12894682068b12dbf220568/gcc%2Fggc-tests.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3b5bf0725df869a12894682068b12dbf220568/gcc%2Fggc-tests.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-tests.c?ref=6c3b5bf0725df869a12894682068b12dbf220568", "patch": "@@ -27,19 +27,19 @@ along with GCC; see the file COPYING3.  If not see\n \n #if CHECKING_P\n \n-/* The various GTY markers must be outside of a namespace to be seen by\n-   gengtype, so we don't put this file within the selftest namespace.  */\n-\n /* A helper function for writing ggc tests.  */\n \n-static void\n-forcibly_ggc_collect ()\n+void\n+selftest::forcibly_ggc_collect ()\n {\n   ggc_force_collect = true;\n   ggc_collect ();\n   ggc_force_collect = false;\n }\n \n+/* The various GTY markers must be outside of a namespace to be seen by\n+   gengtype, so we don't put this file within the selftest namespace.  */\n+\n \f\n \n /* Verify that a simple struct works, and that it can\n@@ -58,7 +58,7 @@ test_basic_struct ()\n   root_test_struct = ggc_cleared_alloc <test_struct> ();\n   root_test_struct->other = ggc_cleared_alloc <test_struct> ();\n \n-  forcibly_ggc_collect ();\n+  selftest::forcibly_ggc_collect ();\n \n   ASSERT_TRUE (ggc_marked_p (root_test_struct));\n   ASSERT_TRUE (ggc_marked_p (root_test_struct->other));\n@@ -88,7 +88,7 @@ test_length ()\n   for (int i = 0; i < count; i++)\n     root_test_of_length->elem[i] = ggc_cleared_alloc <test_of_length> ();\n \n-  forcibly_ggc_collect ();\n+  selftest::forcibly_ggc_collect ();\n \n   ASSERT_TRUE (ggc_marked_p (root_test_of_length));\n   for (int i = 0; i < count; i++)\n@@ -162,7 +162,7 @@ test_union ()\n   test_struct *referenced_by_other = ggc_cleared_alloc <test_struct> ();\n   other->m_ptr = referenced_by_other;\n \n-  forcibly_ggc_collect ();\n+  selftest::forcibly_ggc_collect ();\n \n   ASSERT_TRUE (ggc_marked_p (root_test_of_union_1));\n   ASSERT_TRUE (ggc_marked_p (ts));\n@@ -202,7 +202,7 @@ test_finalization ()\n \n   test_struct_with_dtor::dtor_call_count = 0;\n \n-  forcibly_ggc_collect ();\n+  selftest::forcibly_ggc_collect ();\n \n   /* Verify that the destructor was run for each instance.  */\n   ASSERT_EQ (count, test_struct_with_dtor::dtor_call_count);\n@@ -220,7 +220,7 @@ test_deletable_global ()\n   test_of_deletable = ggc_cleared_alloc <test_struct> ();\n   ASSERT_TRUE (test_of_deletable != NULL);\n \n-  forcibly_ggc_collect ();\n+  selftest::forcibly_ggc_collect ();\n \n   ASSERT_EQ (NULL, test_of_deletable);\n }\n@@ -293,7 +293,7 @@ test_inheritance ()\n   test_some_subclass_as_base_ptr = new some_subclass ();\n   test_some_other_subclass_as_base_ptr = new some_other_subclass ();\n \n-  forcibly_ggc_collect ();\n+  selftest::forcibly_ggc_collect ();\n \n   /* Verify that the roots and everything referenced by them got marked\n      (both for fields in the base class and those in subclasses).  */\n@@ -372,7 +372,7 @@ test_chain_next ()\n       tail_node = new_node;\n     }\n \n-  forcibly_ggc_collect ();\n+  selftest::forcibly_ggc_collect ();\n \n   /* If we got here, we survived.  */\n \n@@ -439,7 +439,7 @@ test_user_struct ()\n \n   num_calls_to_user_gt_ggc_mx = 0;\n \n-  forcibly_ggc_collect ();\n+  selftest::forcibly_ggc_collect ();\n \n   ASSERT_TRUE (ggc_marked_p (root_user_struct_ptr));\n   ASSERT_TRUE (ggc_marked_p (referenced));\n@@ -457,7 +457,7 @@ test_tree_marking ()\n {\n   dummy_unittesting_tree = build_int_cst (integer_type_node, 1066);\n \n-  forcibly_ggc_collect ();\n+  selftest::forcibly_ggc_collect ();\n \n   ASSERT_TRUE (ggc_marked_p (dummy_unittesting_tree));\n }"}, {"sha": "54a9b0f6c7ebc79881f9cb33b0a4c3d97c59c405", "filename": "gcc/selftest-run-tests.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3b5bf0725df869a12894682068b12dbf220568/gcc%2Fselftest-run-tests.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3b5bf0725df869a12894682068b12dbf220568/gcc%2Fselftest-run-tests.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fselftest-run-tests.c?ref=6c3b5bf0725df869a12894682068b12dbf220568", "patch": "@@ -80,6 +80,12 @@ selftest::run_tests ()\n   /* Run any lang-specific selftests.  */\n   lang_hooks.run_lang_selftests ();\n \n+  /* Force a GC at the end of the selftests, to shake out GC-related\n+     issues.  For example, if any GC-managed items have buggy (or missing)\n+     finalizers, this last collection will ensure that things that were\n+     failed to be finalized can be detected by valgrind.  */\n+  forcibly_ggc_collect ();\n+\n   /* Finished running tests.  */\n   long finish_time = get_run_time ();\n   long elapsed_time = finish_time - start_time;"}, {"sha": "845eb01b12511e3667e5a83dd69e5fbcd888b808", "filename": "gcc/selftest.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c3b5bf0725df869a12894682068b12dbf220568/gcc%2Fselftest.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c3b5bf0725df869a12894682068b12dbf220568/gcc%2Fselftest.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fselftest.h?ref=6c3b5bf0725df869a12894682068b12dbf220568", "patch": "@@ -153,6 +153,11 @@ for_each_line_table_case (void (*testcase) (const line_table_case &));\n \n extern char *read_file (const location &loc, const char *path);\n \n+/* A helper function for writing tests that interact with the\n+   garbage collector.  */\n+\n+extern void forcibly_ggc_collect ();\n+\n /* Declarations for specific families of tests (by source file), in\n    alphabetical order.  */\n extern void bitmap_c_tests ();"}]}