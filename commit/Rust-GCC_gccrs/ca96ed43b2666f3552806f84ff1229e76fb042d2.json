{"sha": "ca96ed43b2666f3552806f84ff1229e76fb042d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E5NmVkNDNiMjY2NmYzNTUyODA2Zjg0ZmYxMjI5ZTc2ZmIwNDJkMg==", "commit": {"author": {"name": "Daniel Gutson", "email": "dgutson@codesourcery.com", "date": "2009-09-04T02:52:08Z"}, "committer": {"name": "Daniel Gutson", "email": "dgutson@gcc.gnu.org", "date": "2009-09-04T02:52:08Z"}, "message": "arm.md (UNSPEC_RBIT): New constant.\n\n2009-09-03  Daniel Gutson  <dgutson@codesourcery.com>\n\n\t* config/arm/arm.md (UNSPEC_RBIT): New constant.\n\t(rbitsi2): New insn.\n\t(ctzsi2): New expand.\n\t* config/arm/arm.h (CTZ_DEFINED_VALUE_AT_ZERO): New macro.\n\n\ttestsuite/\n\t* gcc.target/arm/ctz.c: New test case.\n\nFrom-SVN: r151402", "tree": {"sha": "c42128928f5a992274cc7e584fea7e404deb3a4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c42128928f5a992274cc7e584fea7e404deb3a4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca96ed43b2666f3552806f84ff1229e76fb042d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca96ed43b2666f3552806f84ff1229e76fb042d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca96ed43b2666f3552806f84ff1229e76fb042d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca96ed43b2666f3552806f84ff1229e76fb042d2/comments", "author": null, "committer": null, "parents": [{"sha": "9af43ec7a23b80c4fa17681245303ebdb1262fb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9af43ec7a23b80c4fa17681245303ebdb1262fb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9af43ec7a23b80c4fa17681245303ebdb1262fb5"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "a3a0f8b0ea9a5b9fcf5f170a5269184bc5d75a00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca96ed43b2666f3552806f84ff1229e76fb042d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca96ed43b2666f3552806f84ff1229e76fb042d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca96ed43b2666f3552806f84ff1229e76fb042d2", "patch": "@@ -1,3 +1,13 @@\n+2009-09-03  Daniel Gutson  <dgutson@codesourcery.com>\n+\n+\t* config/arm/arm.md (UNSPEC_RBIT): New constant.\n+\t(rbitsi2): New insn.\n+\t(ctzsi2): New expand.\n+\t* config/arm/arm.h (CTZ_DEFINED_VALUE_AT_ZERO): New macro.\n+\n+\ttestsuite/\n+\t* gcc.target/arm/ctz.c: New test case.\n+\n 2009-09-03  Martin Jambor  <mjambor@suse.cz>\n \n \t* tree-sra.c (duplicate_expr_for_different_base): Removed."}, {"sha": "215c9fba789b5188f1af06a3f227baf2d6bfb42f", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca96ed43b2666f3552806f84ff1229e76fb042d2/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca96ed43b2666f3552806f84ff1229e76fb042d2/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=ca96ed43b2666f3552806f84ff1229e76fb042d2", "patch": "@@ -2368,6 +2368,7 @@ extern int making_const_table;\n \n /* The arm5 clz instruction returns 32.  */\n #define CLZ_DEFINED_VALUE_AT_ZERO(MODE, VALUE)  ((VALUE) = 32, 1)\n+#define CTZ_DEFINED_VALUE_AT_ZERO(MODE, VALUE)  ((VALUE) = 32, 1)\n \f\n #undef  ASM_APP_OFF\n #define ASM_APP_OFF (TARGET_THUMB1 ? \"\\t.code\\t16\\n\" : \\"}, {"sha": "fd00c707df4add8effe46025d402c08887085a99", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca96ed43b2666f3552806f84ff1229e76fb042d2/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca96ed43b2666f3552806f84ff1229e76fb042d2/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=ca96ed43b2666f3552806f84ff1229e76fb042d2", "patch": "@@ -100,6 +100,7 @@\n    (UNSPEC_GOTSYM_OFF 24) ; The offset of the start of the the GOT from a\n \t\t\t  ; a given symbolic address.\n    (UNSPEC_THUMB1_CASESI 25) ; A Thumb1 compressed dispatch-table call.\n+   (UNSPEC_RBIT 26)       ; rbit operation.\n   ]\n )\n \n@@ -10955,6 +10956,26 @@\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"insn\" \"clz\")])\n \n+(define_insn \"rbitsi2\"\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+\t(unspec:SI [(match_operand:SI 1 \"s_register_operand\" \"r\")] UNSPEC_RBIT))]\n+  \"TARGET_32BIT && arm_arch_thumb2\"\n+  \"rbit%?\\\\t%0, %1\"\n+  [(set_attr \"predicable\" \"yes\")\n+   (set_attr \"insn\" \"clz\")])\n+\n+(define_expand \"ctzsi2\"\n+ [(set (match_operand:SI           0 \"s_register_operand\" \"\")\n+       (ctz:SI (match_operand:SI  1 \"s_register_operand\" \"\")))]\n+  \"TARGET_32BIT && arm_arch_thumb2\"\n+  \"\n+   rtx tmp = gen_reg_rtx (SImode); \n+   emit_insn (gen_rbitsi2 (tmp, operands[1]));\n+   emit_insn (gen_clzsi2 (operands[0], tmp));\n+   DONE;\n+  \"\n+)\n+\n ;; V5E instructions.\n \n (define_insn \"prefetch\""}, {"sha": "63e9d0266d26ad901a41a1da34896b3a6fde0e9c", "filename": "gcc/testsuite/gcc.target/arm/ctz.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca96ed43b2666f3552806f84ff1229e76fb042d2/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fctz.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca96ed43b2666f3552806f84ff1229e76fb042d2/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fctz.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fctz.c?ref=ca96ed43b2666f3552806f84ff1229e76fb042d2", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm32 } */\n+/* { dg-options \"-O2 -march=armv6t2\" } */\n+\n+unsigned int functest(unsigned int x)\n+{\n+\treturn __builtin_ctz(x);\n+}\n+\n+/* { dg-final { scan-assembler \"rbit\" } } */\n+/* { dg-final { scan-assembler \"clz\" } } */\n+/* { dg-final { scan-assembler-not \"rsb\" } } */"}]}