{"sha": "16a919a7162aa5dc92c0834ad4eef8b7f878a7ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZhOTE5YTcxNjJhYTVkYzkyYzA4MzRhZDRlZWY4YjdmODc4YTdhZQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-02-22T18:38:36Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-02-22T18:38:36Z"}, "message": "extend.texi (Other Builtins): Add __builtin_is_constant_evaluated.\n\n\ngcc/ChangeLog:\n\n\t* doc/extend.texi (Other Builtins): Add\n\t__builtin_is_constant_evaluated.\n\nFrom-SVN: r269129", "tree": {"sha": "0d0c124dc1e6b0238b69ed522a53e7d765dfb438", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d0c124dc1e6b0238b69ed522a53e7d765dfb438"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16a919a7162aa5dc92c0834ad4eef8b7f878a7ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16a919a7162aa5dc92c0834ad4eef8b7f878a7ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16a919a7162aa5dc92c0834ad4eef8b7f878a7ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16a919a7162aa5dc92c0834ad4eef8b7f878a7ae/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c87cc0c01e374c992d4085990bb0f65fbaf33128", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c87cc0c01e374c992d4085990bb0f65fbaf33128", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c87cc0c01e374c992d4085990bb0f65fbaf33128"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "77e2e8316a42a3f69c2bdf34a842ad30e7eb6c2a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16a919a7162aa5dc92c0834ad4eef8b7f878a7ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16a919a7162aa5dc92c0834ad4eef8b7f878a7ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16a919a7162aa5dc92c0834ad4eef8b7f878a7ae", "patch": "@@ -1,3 +1,8 @@\n+2019-02-22  Martin Sebor  <msebor@redhat.com>\n+\n+\t* doc/extend.texi (Other Builtins): Add\n+\t__builtin_is_constant_evaluated.\n+\n 2019-02-22  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/87609\n@@ -26,6 +31,17 @@\n \tsub<mode>3_compare1): Allow stack pointer for source register.\n \t* config/aarch64/predicates.md (aarch64_general_reg): New predicate.\n \n+2019-02-22  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/88993\n+\tPR tree-optimization/88853\n+\t* gimple-ssa-sprintf.c (sprintf_dom_walker::call_info::is_file_func):\n+\tNew helper.\n+\t(sprintf_dom_walker::call_info::is_string_func): New helper.\n+\t(format_directive): Only issue \"may exceed\" 4095/INT_MAX warnings\n+\tfor formatted string functions.\n+\t(sprintf_dom_walker::handle_gimple_call): Fix a typo in a comment.\n+\n 2019-02-22  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/89425"}, {"sha": "d9c78a3b0d84ac6cfbe7ea8e95bcc840caa205a4", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16a919a7162aa5dc92c0834ad4eef8b7f878a7ae/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16a919a7162aa5dc92c0834ad4eef8b7f878a7ae/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=16a919a7162aa5dc92c0834ad4eef8b7f878a7ae", "patch": "@@ -12890,6 +12890,23 @@ built-in in this case, because it has no opportunity to perform\n optimization.\n @end deftypefn\n \n+@deftypefn {Built-in Function} bool __builtin_is_constant_evaluated (void)\n+The @code{__builtin_is_constant_evaluated} function is available only\n+in C++.  The built-in is intended to be used by implementations of\n+the @code{std::is_constant_evaluated} C++ function.  Programs should make\n+use of the latter function rather than invoking the built-in directly.\n+\n+The main use case of the built-in is to determine whether a @code{constexpr}\n+function is being called in a @code{constexpr} context.  A call to\n+the function evaluates to a core constant expression with the value\n+@code{true} if and only if it occurs within the evaluation of an expression\n+or conversion that is manifestly constant-evaluated as defined in the C++\n+standard.  Manifestly constant-evaluated contexts include constant-expressions,\n+the conditions of @code{constexpr if} statements, constraint-expressions, and\n+initializers of variables usable in constant expressions.   For more details\n+refer to the latest revision of the C++ standard.\n+@end deftypefn\n+\n @deftypefn {Built-in Function} long __builtin_expect (long @var{exp}, long @var{c})\n @opindex fprofile-arcs\n You may use @code{__builtin_expect} to provide the compiler with"}]}