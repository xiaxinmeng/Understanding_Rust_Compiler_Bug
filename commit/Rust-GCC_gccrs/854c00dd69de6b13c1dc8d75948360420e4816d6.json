{"sha": "854c00dd69de6b13c1dc8d75948360420e4816d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU0YzAwZGQ2OWRlNmIxM2MxZGM4ZDc1OTQ4MzYwNDIwZTQ4MTZkNg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-11-13T17:43:23Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-11-13T17:43:23Z"}, "message": "Makefile.in (NO_OMIT_ADAFLAGS): Define.\n\n\t* gcc-interface/Makefile.in (NO_OMIT_ADAFLAGS): Define.\n\t(a-except.o): Replace -fno-inline with NO_INLINE_ADAFLAGS.\n\t(s-memory.o): New rule.\n\t(tracebak.o): Replace -fno-omit-frame-pointer with NO_OMIT_ADAFLAGS.\n\nFrom-SVN: r242357", "tree": {"sha": "14a264af81a83aff16bcd09b01e4de950cb1fe76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14a264af81a83aff16bcd09b01e4de950cb1fe76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/854c00dd69de6b13c1dc8d75948360420e4816d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/854c00dd69de6b13c1dc8d75948360420e4816d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/854c00dd69de6b13c1dc8d75948360420e4816d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/854c00dd69de6b13c1dc8d75948360420e4816d6/comments", "author": null, "committer": null, "parents": [{"sha": "4be719cdc2bc900370de83e1cce1f3c7eb4a8ba6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4be719cdc2bc900370de83e1cce1f3c7eb4a8ba6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4be719cdc2bc900370de83e1cce1f3c7eb4a8ba6"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "e498316e2914d61330ea447b7ea129139f4b0190", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/854c00dd69de6b13c1dc8d75948360420e4816d6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/854c00dd69de6b13c1dc8d75948360420e4816d6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=854c00dd69de6b13c1dc8d75948360420e4816d6", "patch": "@@ -1,3 +1,10 @@\n+2016-11-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/Makefile.in (NO_OMIT_ADAFLAGS): Define.\n+\t(a-except.o): Replace -fno-inline with NO_INLINE_ADAFLAGS.\n+\t(s-memory.o): New rule.\n+\t(tracebak.o): Replace -fno-omit-frame-pointer with NO_OMIT_ADAFLAGS.\n+\n 2016-11-07  Tamar Christina  <tamar.christina@arm.com>\n \n \t* adaint.c: Added signal.h for Windows."}, {"sha": "2c0a38028d133b7f4b8c87ee1a8721348a831127", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/854c00dd69de6b13c1dc8d75948360420e4816d6/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/854c00dd69de6b13c1dc8d75948360420e4816d6/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=854c00dd69de6b13c1dc8d75948360420e4816d6", "patch": "@@ -107,6 +107,7 @@ ADA_CFLAGS =\n ADAFLAGS = -W -Wall -gnatpg -gnata\n FORCE_DEBUG_ADAFLAGS = -g\n NO_INLINE_ADAFLAGS = -fno-inline\n+NO_OMIT_ADAFLAGS = -fno-omit-frame-pointer\n NO_SIBLING_ADAFLAGS = -fno-optimize-sibling-calls\n NO_REORDER_ADAFLAGS = -fno-toplevel-reorder\n GNATLIBFLAGS = -W -Wall -gnatpg -nostdinc\n@@ -3016,8 +3017,8 @@ s-tasdeb.o  : s-tasdeb.adb s-tasdeb.ads\n # use -O1 otherwise gdb isn't able to get a full backtrace on mips targets.\n \n a-except.o  : a-except.adb a-except.ads\n-\t$(CC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) -O1 -fno-inline \\\n-\t      $(NO_REORDER_ADAFLAGS) $(ADA_INCLUDES) $< $(OUTPUT_OPTION)\n+\t$(CC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) $(NO_INLINE_ADAFLAGS) \\\n+\t      $(NO_REORDER_ADAFLAGS) -O1 $(ADA_INCLUDES) $< $(OUTPUT_OPTION)\n \n # compile s-excdeb.o without optimization and with debug info to let the\n # debugger set breakpoints and inspect subprogram parameters on exception\n@@ -3041,11 +3042,19 @@ a-tags.o  : a-tags.adb a-tags.ads\n \t$(CC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) $(ADA_INCLUDES) \\\n \t      $< $(OUTPUT_OPTION)\n \n-# need to keep the frame pointer in this file to pop the stack properly on\n+# force no sibling call optimization on s-memory.o to avoid turning the\n+# tail recursion in Alloc into a loop that confuses branch prediction.\n+\n+s-memory.o  : s-memory.adb s-memory.ads\n+\t$(CC) -c $(ALL_ADAFLAGS) $(NO_SIBLING_ADAFLAGS) $(ADA_INCLUDES) \\\n+\t      $< $(OUTPUT_OPTION)\n+\n+# need to keep the frame pointer in tracebak.o to pop the stack properly on\n # some targets.\n+\n tracebak.o  : tracebak.c tb-gcc.c\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) $(ALL_CPPFLAGS) \\\n-\t      $(INCLUDES) -fno-omit-frame-pointer $< $(OUTPUT_OPTION)\n+\t      $(INCLUDES) $(NO_OMIT_ADAFLAGS) $< $(OUTPUT_OPTION)\n \n adadecode.o : adadecode.c adadecode.h\n aux-io.o  : aux-io.c"}]}