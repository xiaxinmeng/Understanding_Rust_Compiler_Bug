{"sha": "673beced43fa873c9d4158b9c60424d5392f20a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjczYmVjZWQ0M2ZhODczYzlkNDE1OGI5YzYwNDI0ZDUzOTJmMjBhMw==", "commit": {"author": {"name": "Revital Eres", "email": "eres@il.ibm.com", "date": "2009-10-27T11:46:07Z"}, "committer": {"name": "Revital Eres", "email": "revitale@gcc.gnu.org", "date": "2009-10-27T11:46:07Z"}, "message": "Fix PR40648 -- Fix misaligned store vectorizer patch\n\nFrom-SVN: r153590", "tree": {"sha": "dbfb2290d948099174a869949dc95046a489f07b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbfb2290d948099174a869949dc95046a489f07b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/673beced43fa873c9d4158b9c60424d5392f20a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/673beced43fa873c9d4158b9c60424d5392f20a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/673beced43fa873c9d4158b9c60424d5392f20a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/673beced43fa873c9d4158b9c60424d5392f20a3/comments", "author": {"login": "revit13", "id": 16211463, "node_id": "MDQ6VXNlcjE2MjExNDYz", "avatar_url": "https://avatars.githubusercontent.com/u/16211463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/revit13", "html_url": "https://github.com/revit13", "followers_url": "https://api.github.com/users/revit13/followers", "following_url": "https://api.github.com/users/revit13/following{/other_user}", "gists_url": "https://api.github.com/users/revit13/gists{/gist_id}", "starred_url": "https://api.github.com/users/revit13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/revit13/subscriptions", "organizations_url": "https://api.github.com/users/revit13/orgs", "repos_url": "https://api.github.com/users/revit13/repos", "events_url": "https://api.github.com/users/revit13/events{/privacy}", "received_events_url": "https://api.github.com/users/revit13/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b23dc2c0f588e909cd952bf9525a78231d6dcac9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b23dc2c0f588e909cd952bf9525a78231d6dcac9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b23dc2c0f588e909cd952bf9525a78231d6dcac9"}], "stats": {"total": 276, "additions": 157, "deletions": 119}, "files": [{"sha": "d5053d3ff87b51ef53c2100a636910118aa4bd37", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -1,3 +1,9 @@\n+2009-10-27  Revital Eres  <eres@il.ibm.com>\n+\n+\tPR tree-optimization/40648\n+\t* tree-vect-data-refs.c (vect_enhance_data_refs_alignment):\n+\tChange decision of when to peel for alignment.\n+\n 2009-10-27  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/41821"}, {"sha": "a0df7754230604c98f60d6e757d3e4b39f3089f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -1,3 +1,60 @@\n+2009-10-27  Revital Eres  <eres@il.ibm.com>\n+\n+\tPR tree-optimization/40648\n+\t* gcc.target/powerpc/vsx-vectorize-2.c: Adjust testcase following\n+\tchange in decision of peeling for alignment.\n+\t* gcc.target/powerpc/vsx-vectorize-3.c: Likewise.\n+\t* gcc.target/powerpc/vsx-vectorize-4.c: Likewise.\n+\t* gcc.target/powerpc/vsx-vectorize-5.c: Likewise.\n+\t* gcc.target/powerpc/vsx-vectorize-6.c: Likewise.\n+\t* gcc.target/powerpc/vsx-vectorize-7.c: Likewise.\n+\t* gcc.dg/vect/vect-50.c: Likewise.\n+\t* gcc.dg/vect/vect-33.c: Likewise.\n+\t* gcc.dg/vect/no-section-anchors-vect-69.c: Likewise.\n+\t* gcc.dg/vect/costmodel/i386/costmodel-fast-math-vect-pr29925.c:\n+\tLikewise.\n+\t* gcc.dg/vect/costmodel/i386/costmodel-vect-31.c: Likewise.\n+\t* gcc.dg/vect/costmodel/i386/costmodel-vect-33.c: Likewise.\n+\t* gcc.dg/vect/costmodel/x86_64/costmodel-fast-math-vect-pr29925.c:\n+\tLikewise.\n+\t* gcc.dg/vect/costmodel/x86_64/costmodel-vect-31.c: Likewise.\n+\t* gcc.dg/vect/costmodel/x86_64/costmodel-vect-33.c: Likewise.\n+\t* gcc.dg/vect/vect-multitypes-6.c: Likewise.\n+\t* gcc.dg/vect/vect-60.c: Likewise.\n+\t* gcc.dg/vect/vect-26.c: Likewise.\n+\t* gcc.dg/vect/vect-52.c: Likewise.\n+\t* gcc.dg/vect/vect-44.c: Likewise.\n+\t* gcc.dg/vect/vect-27.c: Likewise.\n+\t* gcc.dg/vect/vect-70.c: Likewise.\n+\t* gcc.dg/vect/vect-28.c: Likewise.\n+\t* gcc.dg/vect/no-section-anchors-vect-31.c: Likewise.\n+\t* gcc.dg/vect/vect-109.c: Likewise.\n+\t* gcc.dg/vect/vect-54.c: Likewise.\n+\t* gcc.dg/vect/vect-29.c: Likewise.\n+\t* gcc.dg/vect/vect-72.c: Likewise.\n+\t* gcc.dg/vect/vect-56.c: Likewise.\n+\t* gcc.dg/vect/vect-48.c: Likewise.\n+\t* gcc.dg/vect/vect-91.c: Likewise.\n+\t* gcc.dg/vect/vect-92.c: Likewise.\n+\t* gcc.dg/vect/vect-58.c: Likewise.\n+\t* gcc.dg/vect/slp-25.c: Likewise.\n+\t* gcc.dg/vect/vect-93.c: Likewise.\n+\t* gcc.dg/vect/vect-95.c: Likewise.\n+\t* gcc.dg/vect/no-section-anchors-vect-64.c: Likewise.\n+\t* gcc.dg/vect/vect-87.c: Likewise.\n+\t* gcc.dg/vect/vect-96.c: Likewise.\n+\t* gcc.dg/vect/vect-multitypes-1.c: Likewise.\n+\t* gcc.dg/vect/vect-88.c: Likewise.\n+\t* gcc.dg/vect/no-section-anchors-vect-66.c: Likewise.\n+\t* gcc.dg/vect/vect-89.c: Likewise.\n+\t* gcc.dg/vect/vect-multitypes-3.c: Likewise.\n+\t* gcc.dg/vect/no-section-anchors-vect-68.c: Likewise.\n+\t* gcc.dg/vect/vect-multitypes-4.c: Likewise.\n+\t* gfortran.dg/vect/vect-2.f90: Likewise.\n+\t* gfortran.dg/vect/vect-3.f90: Likewise.\n+\t* gfortran.dg/vect/vect-4.f90: Likewise.\n+\t* gfortran.dg/vect/vect-5.f90: Likewise.\n+\n 2009-10-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/41020"}, {"sha": "ffbd220c38b9f2bb8e2ca382727d038c99ee18d4", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/i386/costmodel-fast-math-vect-pr29925.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-fast-math-vect-pr29925.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-fast-math-vect-pr29925.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-fast-math-vect-pr29925.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -35,6 +35,6 @@ int main()\n    return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  { xfail vect_hw_misalign } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n "}, {"sha": "b109be232502f14b54f37e730b978756c2f3004d", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/i386/costmodel-vect-31.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-vect-31.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-vect-31.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-vect-31.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -86,8 +86,6 @@ int main (void)\n   return main1 ();\n } \n \n-/* { dg-final { scan-tree-dump-times \"vectorization not profitable\" 1 \"vect\" { xfail vect_hw_misalign } } }\n- */\n-/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { xfail vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 4 loops\" 1 \"vect\" { target vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorization not profitable\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "5676b247069a12a0ef4dcc76a1daf1027e064f50", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/i386/costmodel-vect-33.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-vect-33.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-vect-33.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-vect-33.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -36,5 +36,5 @@ int main (void)\n   return main1 ();\n } \n \n-/* { dg-final { scan-tree-dump-times \"vectorization not profitable\" 1 \"vect\" { xfail vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorization not profitable\" 1 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "a2ad28b14d8b02b9a226dd3beda271f3d748e858", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/x86_64/costmodel-fast-math-vect-pr29925.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-fast-math-vect-pr29925.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-fast-math-vect-pr29925.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-fast-math-vect-pr29925.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -35,6 +35,6 @@ int main()\n    return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_hw_misalign } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n "}, {"sha": "b109be232502f14b54f37e730b978756c2f3004d", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/x86_64/costmodel-vect-31.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-vect-31.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-vect-31.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-vect-31.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -86,7 +86,6 @@ int main (void)\n   return main1 ();\n } \n \n-/* { dg-final { scan-tree-dump-times \"vectorization not profitable\" 1 \"vect\" { xfail vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" { target {! vect_hw_misalign} } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 4 loops\" 1 \"vect\" { target {vect_hw_misalign } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorization not profitable\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "5676b247069a12a0ef4dcc76a1daf1027e064f50", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/x86_64/costmodel-vect-33.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-vect-33.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-vect-33.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-vect-33.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -36,5 +36,5 @@ int main (void)\n   return main1 ();\n } \n \n-/* { dg-final { scan-tree-dump-times \"vectorization not profitable\" 1 \"vect\" { xfail vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorization not profitable\" 1 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "21b87a396771248d7f99691d7ca5f95b846a46bf", "filename": "gcc/testsuite/gcc.dg/vect/no-section-anchors-vect-31.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-31.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-31.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-31.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -87,7 +87,6 @@ int main (void)\n } \n \n /* { dg-final { scan-tree-dump-times \"vectorized 4 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { xfail vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { target vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" { xfail vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "1ce3fa7f23b22de59cd041b9f6350bdc0b930a79", "filename": "gcc/testsuite/gcc.dg/vect/no-section-anchors-vect-64.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-64.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -83,7 +83,6 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { xfail vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { target vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" { xfail vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "49a9098f79f69412cb1d4e36cc8162593a20544c", "filename": "gcc/testsuite/gcc.dg/vect/no-section-anchors-vect-66.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-66.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-66.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-66.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -78,7 +78,6 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { xfail vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { target vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "de036e88ebf04f394d26092b18a7fe93fde3b27d", "filename": "gcc/testsuite/gcc.dg/vect/no-section-anchors-vect-68.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-68.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-68.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-68.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -87,7 +87,6 @@ int main (void)\n } \n \n /* { dg-final { scan-tree-dump-times \"vectorized 4 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\"  { xfail vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\"  { target vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" { xfail vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "cc4f26fa6c5f31d92b076a2bb76a7ef4a1066d00", "filename": "gcc/testsuite/gcc.dg/vect/no-section-anchors-vect-69.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-69.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-69.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-section-anchors-vect-69.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -113,9 +113,8 @@ int main (void)\n } \n \n /* { dg-final { scan-tree-dump-times \"vectorized 4 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { xfail vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { target vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" { xfail { {! vector_alignment_reachable} || vect_hw_misalign } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" { xfail {! vector_alignment_reachable} } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 1 \"vect\" { target { {! vector_alignment_reachable} && {! vect_hw_misalign} } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { target { {! vector_alignment_reachable} && {! vect_hw_misalign} } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "b660508a79c0e461bbbb0fe8ed265426c07925e0", "filename": "gcc/testsuite/gcc.dg/vect/slp-25.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-25.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -55,7 +55,6 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\"  } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { xfail vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { target vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" { xfail { vect_no_align || vect_hw_misalign } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" { xfail { vect_no_align } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "dd9f8ea77a316fba62bcdc85bfdc81e38dee0229", "filename": "gcc/testsuite/gcc.dg/vect/vect-109.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-109.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-109.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-109.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -74,6 +74,6 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 2 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"not vectorized: unsupported unaligned store\" 2 \"vect\" { xfail vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 3 \"vect\" { target vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 10 \"vect\" { target vect_hw_misalign } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n "}, {"sha": "bec111b69cf3ca7a27bf775600335e04087244b8", "filename": "gcc/testsuite/gcc.dg/vect/vect-26.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-26.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -35,7 +35,7 @@ int main (void)\n   return main1 ();\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail {! vect_hw_misalign} } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "e117196c1f5a2d84ebb72e5213190cf9b90bacd1", "filename": "gcc/testsuite/gcc.dg/vect/vect-27.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -46,5 +46,5 @@ int main (void)\n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail {! vect_hw_misalign} } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "794a7c8f438061a52fd74ae7c6c82b7928c298d0", "filename": "gcc/testsuite/gcc.dg/vect/vect-28.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-28.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-28.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-28.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -39,7 +39,7 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail { ! { vect_hw_misalign } } } } }  */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { target { vector_alignment_reachable && { ! { vect_hw_misalign } } } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { target { vector_alignment_reachable } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 1 \"vect\" { target { {! vector_alignment_reachable} && {! vect_hw_misalign} } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "1645a2dfcca097619398698417a6ff83f07ea5d3", "filename": "gcc/testsuite/gcc.dg/vect/vect-29.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -51,6 +51,6 @@ int main (void)\n /* The initialization induction loop (with aligned access) is also vectorized.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" { xfail vect_hw_misalign } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 1 \"vect\" {target vect_no_align } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "d35bce4d6f66807f3fe7d880889a141cc455dd0b", "filename": "gcc/testsuite/gcc.dg/vect/vect-33.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-33.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-33.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-33.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -38,7 +38,7 @@ int main (void)\n \n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail { ! { vect_hw_misalign } } } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { target { vector_alignment_reachable && {! vect_hw_misalign} } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { target vector_alignment_reachable } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 1 \"vect\" { target { {! vector_alignment_reachable} && {! vect_hw_misalign} } } } } */ \n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "5f2228fdd71a473244ac99c93d57c8b65f5fede1", "filename": "gcc/testsuite/gcc.dg/vect/vect-44.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -65,9 +65,8 @@ int main (void)\n    two loads to be aligned).  */\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 3 \"vect\" { xfail { ! {vect_hw_misalign } } } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align || vect_hw_misalign } } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { { vect_no_align || vect_hw_misalign } || {! vector_alignment_reachable} } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { { vect_no_align || {! vect_hw_misalign } } || {! vector_alignment_reachable} } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 3 \"vect\" { target vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 1 \"vect\" { target { {! vector_alignment_reachable} && {{! vect_no_align} && {! vect_hw_misalign} } } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "f66a8622ec0858c0943474156f034a0a85ab9c74", "filename": "gcc/testsuite/gcc.dg/vect/vect-48.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -55,6 +55,6 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail {! vect_hw_misalign } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 2 \"vect\" { target vect_no_align } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "74de0fb4fa84291107fae7a91a3a5577eae4126d", "filename": "gcc/testsuite/gcc.dg/vect/vect-50.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -61,9 +61,9 @@ int main (void)\n    align the store will not force the two loads to be aligned).  */\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align || vect_hw_misalign } } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 3 \"vect\" { target vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { { vect_no_align || vect_hw_misalign } || {! vector_alignment_reachable} } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align } } } }  */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { target vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { { vect_no_align || {! vect_hw_misalign } } || {! vector_alignment_reachable} } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 3 \"vect\" { target vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 1 \"vect\" { target { {! vector_alignment_reachable} && { {! vect_no_align } && {! vect_hw_misalign } } } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "426092e39152309a4ff713a4a3655a02b2a87d59", "filename": "gcc/testsuite/gcc.dg/vect/vect-52.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -56,6 +56,6 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" {xfail {! vect_hw_misalign } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 2 \"vect\" { target vect_no_align } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "629e82df59b6597ecda3d05830c88eebe2c71644", "filename": "gcc/testsuite/gcc.dg/vect/vect-54.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-54.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-54.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-54.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -59,7 +59,6 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 3 \"vect\" { target vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { xfail vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "945d7caa6c78556a265218aecf903d5b5b566782", "filename": "gcc/testsuite/gcc.dg/vect/vect-56.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -68,6 +68,6 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align || vect_hw_misalign } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail {! vect_hw_misalign } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "fa8c91b3071999ff19543dc7194b1717f187c7e2", "filename": "gcc/testsuite/gcc.dg/vect/vect-58.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-58.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-58.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-58.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -58,7 +58,6 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 3 \"vect\" { target vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { xfail vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "90234dd0db41674e0a0fe0c47f18c4e5b267a5e8", "filename": "gcc/testsuite/gcc.dg/vect/vect-60.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -69,6 +69,6 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align || vect_hw_misalign } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" { xfail vect_hw_misalign } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "e3ebdcab8b5eb81e85216c54817991b82c3fd666", "filename": "gcc/testsuite/gcc.dg/vect/vect-70.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-70.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-70.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-70.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -63,8 +63,7 @@ int main (void)\n }\n           \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { xfail vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { target vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" {target { vector_alignment_reachable && { ! {vect_hw_misalign} } } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" {target { vector_alignment_reachable} } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 1 \"vect\" {target {{! vector_alignment_reachable} && {! vect_hw_misalign} } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "1a9f13ca869265400cfbca26f5dabf46b9381553", "filename": "gcc/testsuite/gcc.dg/vect/vect-72.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -47,5 +47,5 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" { xfail vect_hw_misalign } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "9912f19e724d61cfeeb49356f15ad11e501e4c22", "filename": "gcc/testsuite/gcc.dg/vect/vect-87.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-87.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-87.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-87.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -50,8 +50,7 @@ int main (void)\n \n /* Fails for targets that don't vectorize PLUS (e.g alpha).  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { target vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { xfail vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" {target { vector_alignment_reachable && {! vect_hw_misalign} } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" {target vector_alignment_reachable} } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 1 \"vect\" {target { {! vector_alignment_reachable} && {! vect_hw_misalign} } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "593854652285955bd009851830f393e24a4fca8a", "filename": "gcc/testsuite/gcc.dg/vect/vect-88.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-88.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-88.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-88.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -50,8 +50,7 @@ int main (void)\n \n /* Fails for targets that don't vectorize PLUS (e.g alpha).  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { target vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { xfail vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" {target { vector_alignment_reachable && {! vect_hw_misalign} } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" {target vector_alignment_reachable } } }  */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 1 \"vect\" {target { {! vector_alignment_reachable} && {! vect_hw_misalign} } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "131efeab53a32f87838ceaedb17a96e15de4a66f", "filename": "gcc/testsuite/gcc.dg/vect/vect-89.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-89.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-89.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-89.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -45,7 +45,6 @@ int main (void)\n } \n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { target vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { xfail vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "632340b0fef7f869983b4ee8b7529da9ca3964d6", "filename": "gcc/testsuite/gcc.dg/vect/vect-91.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-91.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-91.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-91.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -58,8 +58,7 @@ main3 ()\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 3 \"vect\" { xfail vect_no_int_add } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 6 \"vect\" { target vect_hw_misalign } } } */\n /* { dg-final { scan-tree-dump-times \"accesses have the same alignment.\" 3 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 3 \"vect\" {target { vector_alignment_reachable && {! vect_hw_misalign} } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 3 \"vect\" {target { vector_alignment_reachable } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 3 \"vect\" {target { {! vector_alignment_reachable} && {! vect_hw_misalign} } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "3a64e251cb2a9b94689fe2893e502d62d723705e", "filename": "gcc/testsuite/gcc.dg/vect/vect-92.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-92.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-92.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-92.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -91,7 +91,6 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 3 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 9 \"vect\" { target vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { xfail vect_hw_misalign } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 3 \"vect\" { xfail vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 3 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "85666d9e699211f1817371fbbfa77654a8e1775d", "filename": "gcc/testsuite/gcc.dg/vect/vect-93.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-93.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-93.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-93.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -71,16 +71,15 @@ int main (void)\n \n /* main && main1 together: */\n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 2 \"vect\" { target powerpc*-*-* i?86-*-* x86_64-*-* } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 3 \"vect\" { target vect_hw_misalign } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" { target { vect_no_align && {! vector_alignment_reachable} } } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 3 \"vect\" { xfail { { vect_no_align || vect_hw_misalign } || {! vector_alignment_reachable} } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 3 \"vect\" { xfail { { vect_no_align } || {! vector_alignment_reachable} } } } } */\n \n /* in main1: */\n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" { target !powerpc*-*-* !i?86-*-* !x86_64-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" { target vect_no_align } } } */\n \n /* in main: */\n /* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\" { target vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail { vect_no_align || vect_hw_misalign } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail { vect_no_align } } } } */\n \n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "c1d5926e67dea03db8fd91ef888572a4840a486e", "filename": "gcc/testsuite/gcc.dg/vect/vect-95.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-95.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-95.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-95.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -56,14 +56,13 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" { xfail {vect_hw_misalign} } } } */\n \n /* For targets that support unaligned loads we version for the two unaligned \n    stores and generate misaligned accesses for the loads. For targets that \n    don't support unaligned loads we version for all four accesses.  */\n \n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align || vect_hw_misalign } } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 4 \"vect\" { target vect_hw_misalign } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align || vect_hw_misalign} } } }  */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 2 \"vect\" { xfail { vect_no_align || vect_hw_misalign } } } } */\n /*  { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { target vect_no_align } } } */\n /*  { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 4 \"vect\" { target vect_no_align } } } */"}, {"sha": "f392169f7702079231a91ad7fb6ba389608f556e", "filename": "gcc/testsuite/gcc.dg/vect/vect-96.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-96.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-96.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-96.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -44,6 +44,6 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { target { {! vect_no_align} && vector_alignment_reachable } } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { { vect_no_align || vect_hw_misalign } || {! vector_alignment_reachable} } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { { vect_no_align } || {! vector_alignment_reachable} } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 1 \"vect\" { target { vect_no_align || { {! vector_alignment_reachable} && {! vect_hw_misalign} } } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "e8fe027f5f305b5d8cb566f0988ee8b2bf917f77", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-1.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -78,11 +78,11 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 2 \"vect\" { xfail {! vect_hw_misalign}  } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 2 \"vect\" { xfail {! vect_hw_misalign} } } } */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail { vect_no_align || vect_hw_misalign } } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" { xfail *-*-* } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { vect_no_align || vect_hw_misalign }} } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 4 \"vect\" { xfail {! vect_hw_misalign} } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" { xfail {! vect_hw_misalign} } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { vect_no_align || vect_hw_misalign } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 4 \"vect\" { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align || vect_hw_misalign } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n "}, {"sha": "2cbc6216354f260d3cc2afdbb06481614f4b45eb", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-3.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -54,6 +54,6 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /*  { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 3 \"vect\" { target vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 3 \"vect\" {xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 3 \"vect\" {xfail { vect_no_align || vect_hw_misalign } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n "}, {"sha": "274fb0253196db3182afe4a0ae85f8fd757474ae", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-4.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -87,9 +87,9 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 2 \"vect\" { xfail {! vect_hw_misalign} } } } */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail { vect_no_align || vect_hw_misalign } } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" { xfail {! vect_hw_misalign}  } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { vect_no_align || vect_hw_misalign } } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 8 \"vect\" { xfail *-*-* } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 4 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 4 \"vect\" { xfail { vect_no_align || vect_hw_misalign } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n "}, {"sha": "522ed30ead3df62261a7e28d214ee33fdf423ea8", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-6.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -61,6 +61,6 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /*  { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 6 \"vect\" { target vect_no_align } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 6 \"vect\" {xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 6 \"vect\" {xfail { vect_no_align || vect_hw_misalign } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n "}, {"sha": "7bb7db0fa5f207ae43caea2ef2209e793bee69f5", "filename": "gcc/testsuite/gcc.target/powerpc/vsx-vectorize-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-2.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -58,7 +58,7 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" {xfail {! vect_hw_misalign } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 0 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 4 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 4 \"vect\" {xfail {! vect_hw_misalign } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "b7e1329a151f0b35fdd13c36b2907802b63da29b", "filename": "gcc/testsuite/gcc.target/powerpc/vsx-vectorize-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-3.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -54,7 +54,7 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" {xfail {! vect_hw_misalign } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 0 \"vect\" {xfail {! vect_hw_misalign } } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "ad6f8f0fec561b35f9c4c6762b154b7cb4883b0e", "filename": "gcc/testsuite/gcc.target/powerpc/vsx-vectorize-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-4.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -54,7 +54,7 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" {xfail {! vect_hw_misalign } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 0 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 3 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 3 \"vect\" {xfail {! vect_hw_misalign } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "a5449ffdd9e85544e337fb836ff183a8b312d1f1", "filename": "gcc/testsuite/gcc.target/powerpc/vsx-vectorize-5.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-5.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -54,7 +54,7 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" {xfail {! vect_hw_misalign } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 0 \"vect\" {xfail {! vect_hw_misalign } } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "8e6e288b9bf15c4218d0374154a85d2bbc9e81d5", "filename": "gcc/testsuite/gcc.target/powerpc/vsx-vectorize-6.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-6.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -58,7 +58,7 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" {xfail {! vect_hw_misalign } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 0 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 4 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 4 \"vect\" {xfail {! vect_hw_misalign } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "c09583535e1bcd9faacef4292a933667992314e0", "filename": "gcc/testsuite/gcc.target/powerpc/vsx-vectorize-7.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vectorize-7.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -58,7 +58,7 @@ int main (void)\n }\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" {xfail {! vect_hw_misalign } } } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 0 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 4 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 4 \"vect\" {xfail {! vect_hw_misalign } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "ed064d6cf256435774fae5eb39e8329cb56cfa7e", "filename": "gcc/testsuite/gfortran.dg/vect/vect-2.f90", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-2.f90?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -15,9 +15,8 @@ SUBROUTINE FOO(A, B, C)\n ! support unaligned loads).\n \n ! { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" } }\n-! { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 3 \"vect\" { xfail { { vect_no_align || vect_hw_misalign } || {! vector_alignment_reachable} } } } }\n-! { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" { target { vect_no_align && { {! vector_alignment_reachable } && {! vect_hw_misalign } } } } } }\n-! { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align || vect_hw_misalign} } } }\n-! { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 5 \"vect\" { target vect_hw_misalign } } }\n+! { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 3 \"vect\" { xfail { { vect_no_align || {! vect_hw_misalign} } || {! vector_alignment_reachable} } } } }\n+! { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 2 \"vect\" { target { vect_no_align && { {! vector_alignment_reachable } } } } } }\n+! { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align } } } }\n ! { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 3 \"vect\" {target { vect_no_align || { {!  vector_alignment_reachable  } && {! vect_hw_misalign }} } } } } \n ! { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "5fc4fbf49e342d80a83673401bdbcda4519634c6", "filename": "gcc/testsuite/gfortran.dg/vect/vect-3.f90", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-3.f90?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -7,11 +7,9 @@ SUBROUTINE SAXPY(X, Y, A, N)\n END\n \n ! { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 3 \"vect\" { target vect_no_align } } }\n-! { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { target vect_no_align } } } \n ! { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 1 \"vect\" { target { {! vect_no_align} && { {! vector_alignment_reachable} && {! vect_hw_misalign} } } } } }\n ! { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { target { {! vect_no_align} && { {! vector_alignment_reachable} && {! vect_hw_misalign} } } } } }\n-! { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 3 \"vect\" {target vect_hw_misalign} } }\n-! { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { { vect_no_align || vect_hw_misalign } || {! vector_alignment_reachable}} } } }\n-! { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail { { vect_no_align || vect_hw_misalign } || { ! vector_alignment_reachable} } } } }\n+! { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { vect_no_align || {! vector_alignment_reachable}} } } }\n+! { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail { { vect_no_align } || { ! vector_alignment_reachable} } } } }\n \n ! { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "592282fb09b567487e4e7514eedf40761ccf12f7", "filename": "gcc/testsuite/gfortran.dg/vect/vect-4.f90", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-4.f90?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -10,9 +10,8 @@ SUBROUTINE SAXPY(X, Y, A)\n END\n \n ! { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } \n-! { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { { vect_no_align || vect_hw_misalign } || {! vector_alignment_reachable} } } } }\n-! { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail { { vect_no_align || vect_hw_misalign } || {! vector_alignment_reachable} } } } }\n-! { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 3 \"vect\" { target vect_hw_misalign } } }\n+! { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { { vect_no_align } || {! vector_alignment_reachable} } } } }\n+! { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail { { vect_no_align } || {! vector_alignment_reachable} } } } }\n ! { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { target { {! vector_alignment_reachable} && {! vect_hw_misalign} } } } }\n ! { dg-final { scan-tree-dump-times \"accesses have the same alignment.\" 1 \"vect\" } }\n ! { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "25eb88e2cabb8e2bdc2ed12a108381139932ad4b", "filename": "gcc/testsuite/gfortran.dg/vect/vect-5.f90", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-5.f90?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -36,9 +36,8 @@ program main\n         end\n \n ! { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  } }\n-! { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { { vect_no_align || vect_hw_misalign } || {! vector_alignment_reachable} } } } }\n-! { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail { vect_no_align || vect_hw_misalign } } } }\n-! { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { target { vect_hw_misalign } } } }\n+! { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { { vect_no_align || {! vect_hw_misalign } } || {! vector_alignment_reachable} } } } }\n+! { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { xfail { vect_no_align } } } }\n ! { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 2 \"vect\" { target { vect_no_align } } } }\n ! { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning.\" 1 \"vect\" { target { {! vector_alignment_reachable} && {! vect_hw_misalign} } } } }\n ! { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "b4c1f401bb5a95439df2c00382660dcc28f2e291", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673beced43fa873c9d4158b9c60424d5392f20a3/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=673beced43fa873c9d4158b9c60424d5392f20a3", "patch": "@@ -1138,8 +1138,8 @@ vect_enhance_data_refs_alignment (loop_vec_info loop_vinfo)\n   /* While cost model enhancements are expected in the future, the high level\n      view of the code at this time is as follows:\n \n-     A) If there is an unsupported misaligned access then see if peeling\n-        to align this access can make all data references satisfy\n+     A) If there is a misaligned access then see if peeling to align\n+        this access can make all data references satisfy\n         vect_supportable_dr_alignment.  If so, update data structures\n         as needed and return true.\n \n@@ -1184,7 +1184,7 @@ vect_enhance_data_refs_alignment (loop_vec_info loop_vinfo)\n           && DR_GROUP_FIRST_DR (stmt_info) != stmt)\n         continue;\n \n-      if (!supportable_dr_alignment)\n+      if (!aligned_access_p (dr))\n         {\n \t  do_peeling = vector_alignment_reachable_p (dr);\n \t  if (do_peeling)"}]}