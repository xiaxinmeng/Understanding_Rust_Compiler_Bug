{"sha": "84dcde01bdb678f5fca3a237d798fe9d7b297215", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRkY2RlMDFiZGI2NzhmNWZjYTNhMjM3ZDc5OGZlOWQ3YjI5NzIxNQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2004-12-02T02:21:28Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2004-12-02T02:21:28Z"}, "message": "re PR target/16952 (GCC for powerpc cross target with -mrelocatable reports error)\n\n\tPR target/16952\n\t* config/rs6000/rs6000.c (rs6000_assemble_integer): Replace\n\t#ifdef RELOCATABLE_NEEDS_FIXUP with if.\n\t* config/rs6000/linux.h (RELOCATABLE_NEEDS_FIXUP): Define in terms\n\tof target_flags_explicit.\n\t* config/rs6000/linux64.h (RELOCATABLE_NEEDS_FIXUP): Ditto for biarch\n\tcase.  Define as 0 for non-biarch.\n\nFrom-SVN: r91605", "tree": {"sha": "805f03fd9d276e15def70e8fcc1492fd825b99e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/805f03fd9d276e15def70e8fcc1492fd825b99e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84dcde01bdb678f5fca3a237d798fe9d7b297215", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84dcde01bdb678f5fca3a237d798fe9d7b297215", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84dcde01bdb678f5fca3a237d798fe9d7b297215", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84dcde01bdb678f5fca3a237d798fe9d7b297215/comments", "author": null, "committer": null, "parents": [{"sha": "1270d6334aa627f82d5b00840f10381fc72b8b82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1270d6334aa627f82d5b00840f10381fc72b8b82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1270d6334aa627f82d5b00840f10381fc72b8b82"}], "stats": {"total": 35, "additions": 26, "deletions": 9}, "files": [{"sha": "88593cfee8e19f30f346d891e005ca306b3b39c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84dcde01bdb678f5fca3a237d798fe9d7b297215/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84dcde01bdb678f5fca3a237d798fe9d7b297215/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=84dcde01bdb678f5fca3a237d798fe9d7b297215", "patch": "@@ -1,3 +1,13 @@\n+2004-12-02  Alan Modra  <amodra@bigpond.net.au>\n+\n+\tPR target/16952\n+\t* config/rs6000/rs6000.c (rs6000_assemble_integer): Replace\n+\t#ifdef RELOCATABLE_NEEDS_FIXUP with if.\n+\t* config/rs6000/linux.h (RELOCATABLE_NEEDS_FIXUP): Define in terms\n+\tof target_flags_explicit.\n+\t* config/rs6000/linux64.h (RELOCATABLE_NEEDS_FIXUP): Ditto for biarch\n+\tcase.  Define as 0 for non-biarch.\n+\n 2004-12-01  Zack Weinberg  <zack@codesourcery.com>\n \n \t* config/rs6000/t-aix43, config/rs6000/t-aix52 (SHLIB_LINK):"}, {"sha": "e35f03347e1ce25a7a09ea2f402d6b71b8d2a648", "filename": "gcc/config/rs6000/linux.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84dcde01bdb678f5fca3a237d798fe9d7b297215/gcc%2Fconfig%2Frs6000%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84dcde01bdb678f5fca3a237d798fe9d7b297215/gcc%2Fconfig%2Frs6000%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux.h?ref=84dcde01bdb678f5fca3a237d798fe9d7b297215", "patch": "@@ -99,8 +99,11 @@\n #undef TARGET_64BIT\n #define TARGET_64BIT 0\n  \n-/* We don't need to generate entries in .fixup.  */\n+/* We don't need to generate entries in .fixup, except when\n+   -mrelocatable or -mrelocatable-lib is given.  */\n #undef RELOCATABLE_NEEDS_FIXUP\n+#define RELOCATABLE_NEEDS_FIXUP \\\n+  (target_flags & target_flags_explicit & MASK_RELOCATABLE)\n \n #define TARGET_ASM_FILE_END file_end_indicate_exec_stack\n "}, {"sha": "2cfabb636d3a33c01716b7d90915a5f14190d362", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84dcde01bdb678f5fca3a237d798fe9d7b297215/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84dcde01bdb678f5fca3a237d798fe9d7b297215/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=84dcde01bdb678f5fca3a237d798fe9d7b297215", "patch": "@@ -62,8 +62,11 @@ extern int dot_symbols;\n #undef  PROCESSOR_DEFAULT64\n #define PROCESSOR_DEFAULT64 PROCESSOR_POWER4\n \n-#undef\tTARGET_RELOCATABLE\n-#define\tTARGET_RELOCATABLE (!TARGET_64BIT && (target_flags & MASK_RELOCATABLE))\n+/* We don't need to generate entries in .fixup, except when\n+   -mrelocatable or -mrelocatable-lib is given.  */\n+#undef RELOCATABLE_NEEDS_FIXUP\n+#define RELOCATABLE_NEEDS_FIXUP \\\n+  (target_flags & target_flags_explicit & MASK_RELOCATABLE)\n \n #undef\tRS6000_ABI_NAME\n #define\tRS6000_ABI_NAME \"linux\"\n@@ -198,6 +201,8 @@ extern int dot_symbols;\n #define\tTARGET_EABI\t\t0\n #undef\tTARGET_PROTOTYPE\n #define\tTARGET_PROTOTYPE\t0\n+#undef RELOCATABLE_NEEDS_FIXUP\n+#define RELOCATABLE_NEEDS_FIXUP 0\n \n #endif\n \n@@ -222,9 +227,6 @@ extern int dot_symbols;\n #define PROFILE_HOOK(LABEL) \\\n   do { if (TARGET_64BIT) output_profile_hook (LABEL); } while (0)\n \n-/* We don't need to generate entries in .fixup.  */\n-#undef RELOCATABLE_NEEDS_FIXUP\n-\n /* PowerPC64 Linux word-aligns FP doubles when -malign-power is given.  */\n #undef  ADJUST_FIELD_ALIGN\n #define ADJUST_FIELD_ALIGN(FIELD, COMPUTED) \\"}, {"sha": "89f533563e5226fb28f886f1f81f88d68f726f14", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84dcde01bdb678f5fca3a237d798fe9d7b297215/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84dcde01bdb678f5fca3a237d798fe9d7b297215/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=84dcde01bdb678f5fca3a237d798fe9d7b297215", "patch": "@@ -11124,6 +11124,10 @@ print_operand_address (FILE *file, rtx x)\n     abort ();\n }\n \f\n+#ifndef RELOCATABLE_NEEDS_FIXUP\n+#define RELOCATABLE_NEEDS_FIXUP 0\n+#endif\n+\n /* Target hook for assembling integer objects.  The PowerPC version has\n    to handle fixup entries for relocatable code if RELOCATABLE_NEEDS_FIXUP\n    is defined.  It also needs to handle DI-mode objects on 64-bit\n@@ -11132,9 +11136,8 @@ print_operand_address (FILE *file, rtx x)\n static bool\n rs6000_assemble_integer (rtx x, unsigned int size, int aligned_p)\n {\n-#ifdef RELOCATABLE_NEEDS_FIXUP\n   /* Special handling for SI values.  */\n-  if (size == 4 && aligned_p)\n+  if (RELOCATABLE_NEEDS_FIXUP && size == 4 && aligned_p)\n     {\n       extern int in_toc_section (void);\n       static int recurse = 0;\n@@ -11182,7 +11185,6 @@ rs6000_assemble_integer (rtx x, unsigned int size, int aligned_p)\n \t  return true;\n \t}\n     }\n-#endif /* RELOCATABLE_NEEDS_FIXUP */\n   return default_assemble_integer (x, size, aligned_p);\n }\n "}]}