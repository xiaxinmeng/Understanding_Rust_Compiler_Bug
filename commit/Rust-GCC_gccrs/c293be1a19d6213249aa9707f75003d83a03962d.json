{"sha": "c293be1a19d6213249aa9707f75003d83a03962d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI5M2JlMWExOWQ2MjEzMjQ5YWE5NzA3Zjc1MDAzZDgzYTAzOTYyZA==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2014-12-09T23:02:06Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2014-12-09T23:02:06Z"}, "message": "re PR middle-end/64225 (-funsafe-math-optimizations generates call to pow where multiply instruction would do)\n\n2014-12-09  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\tPR middle-end/64225\n\t* tree-ssa-reassoc.c (acceptable_pow_call): Disable transformation\n\tfor BUILT_IN_POW when flag_errno_math is present.\n\nFrom-SVN: r218546", "tree": {"sha": "9fc1514ed9c24e25b2e1851ab4acd64a9b68ea14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fc1514ed9c24e25b2e1851ab4acd64a9b68ea14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c293be1a19d6213249aa9707f75003d83a03962d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c293be1a19d6213249aa9707f75003d83a03962d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c293be1a19d6213249aa9707f75003d83a03962d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c293be1a19d6213249aa9707f75003d83a03962d/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "443743fd95a5f87c21354bb44e31daaae6ef05bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/443743fd95a5f87c21354bb44e31daaae6ef05bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/443743fd95a5f87c21354bb44e31daaae6ef05bf"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "ce5183523cbc06fbe45b3694c86fad06b15c5b34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c293be1a19d6213249aa9707f75003d83a03962d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c293be1a19d6213249aa9707f75003d83a03962d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c293be1a19d6213249aa9707f75003d83a03962d", "patch": "@@ -1,3 +1,9 @@\n+2014-12-09  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\tPR middle-end/64225\n+\t* tree-ssa-reassoc.c (acceptable_pow_call): Disable transformation\n+\tfor BUILT_IN_POW when flag_errno_math is present.\n+\n 2014-12-09  Ilya Verbin  <ilya.verbin@intel.com>\n \n \t* lto-wrapper.c (compile_offload_image): Start processing in_argv"}, {"sha": "4fae8fcad7089c5d2332a39222bac8b197e5ecd5", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c293be1a19d6213249aa9707f75003d83a03962d/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c293be1a19d6213249aa9707f75003d83a03962d/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=c293be1a19d6213249aa9707f75003d83a03962d", "patch": "@@ -3988,6 +3988,9 @@ acceptable_pow_call (gimple stmt, tree *base, HOST_WIDE_INT *exponent)\n   switch (DECL_FUNCTION_CODE (fndecl))\n     {\n     CASE_FLT_FN (BUILT_IN_POW):\n+      if (flag_errno_math)\n+\treturn false;\n+\n       *base = gimple_call_arg (stmt, 0);\n       arg1 = gimple_call_arg (stmt, 1);\n "}]}