{"sha": "c822f852e9b088b78bb529d5edb20f607f5f5d7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgyMmY4NTJlOWIwODhiNzhiYjUyOWQ1ZWRiMjBmNjA3ZjVmNWQ3ZA==", "commit": {"author": {"name": "Marcus Shawcroft", "email": "marcus.shawcroft@arm.com", "date": "2013-06-28T15:17:19Z"}, "committer": {"name": "Marcus Shawcroft", "email": "mshawcroft@gcc.gnu.org", "date": "2013-06-28T15:17:19Z"}, "message": "[AArch64] Update comment w.r.t SYMBOL_TINY_ABSOLUTE address model.\n\nFrom-SVN: r200531", "tree": {"sha": "d3462a3b69053a1b4c080a71f14f2f1fa23f4a70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3462a3b69053a1b4c080a71f14f2f1fa23f4a70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c822f852e9b088b78bb529d5edb20f607f5f5d7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c822f852e9b088b78bb529d5edb20f607f5f5d7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c822f852e9b088b78bb529d5edb20f607f5f5d7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c822f852e9b088b78bb529d5edb20f607f5f5d7d/comments", "author": {"login": "mshawcroft", "id": 6357566, "node_id": "MDQ6VXNlcjYzNTc1NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6357566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mshawcroft", "html_url": "https://github.com/mshawcroft", "followers_url": "https://api.github.com/users/mshawcroft/followers", "following_url": "https://api.github.com/users/mshawcroft/following{/other_user}", "gists_url": "https://api.github.com/users/mshawcroft/gists{/gist_id}", "starred_url": "https://api.github.com/users/mshawcroft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mshawcroft/subscriptions", "organizations_url": "https://api.github.com/users/mshawcroft/orgs", "repos_url": "https://api.github.com/users/mshawcroft/repos", "events_url": "https://api.github.com/users/mshawcroft/events{/privacy}", "received_events_url": "https://api.github.com/users/mshawcroft/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "946c8f7bffaae8f81ece5c53788ae1a1ba27df52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/946c8f7bffaae8f81ece5c53788ae1a1ba27df52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/946c8f7bffaae8f81ece5c53788ae1a1ba27df52"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "b1ccef8592326ba35012aeb8e6baf9437edd596d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c822f852e9b088b78bb529d5edb20f607f5f5d7d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c822f852e9b088b78bb529d5edb20f607f5f5d7d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c822f852e9b088b78bb529d5edb20f607f5f5d7d", "patch": "@@ -1,3 +1,8 @@\n+2013-06-28  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n+\n+\t* config/aarch64/aarch64-protos.h (aarch64_symbol_type):\n+\tUpdate comment w.r.t SYMBOL_TINY_ABSOLUTE.\n+\n 2013-06-28  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n \n \t* config/aarch64/aarch64-protos.h"}, {"sha": "e5ae556736c49dff45fbefe4d3c8b40a77894b35", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c822f852e9b088b78bb529d5edb20f607f5f5d7d/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c822f852e9b088b78bb529d5edb20f607f5f5d7d/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=c822f852e9b088b78bb529d5edb20f607f5f5d7d", "patch": "@@ -68,6 +68,13 @@ enum aarch64_symbol_context\n    Each of of these represents a thread-local symbol, and corresponds to the\n    thread local storage relocation operator for the symbol being referred to.\n \n+   SYMBOL_TINY_ABSOLUTE\n+\n+   Generate symbol accesses as a PC relative address using a single\n+   instruction.  To compute the address of symbol foo, we generate:\n+\n+   ADR x0, foo\n+\n    SYMBOL_FORCE_TO_MEM : Global variables are addressed using\n    constant pool.  All variable addresses are spilled into constant\n    pools.  The constant pools themselves are addressed using PC"}]}