{"sha": "9b17a646d90ad0cc30daf8432aa60ad0d751d914", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIxN2E2NDZkOTBhZDBjYzMwZGFmODQzMmFhNjBhZDBkNzUxZDkxNA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-10-16T10:50:53Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-10-16T10:50:53Z"}, "message": "[AArch64] Improve poly_int handling in aarch64_layout_frame\n\nI'd used known_lt when converting these conditions to poly_int,\nbut on reflection that was a bad choice.  The code isn't just\ndoing a range check; it specifically needs constants that will\nfit in a certain encoding.\n\n2019-10-16  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64.c (aarch64_layout_frame): Use is_constant\n\trather than known_lt when choosing frame layouts.\n\nFrom-SVN: r277061", "tree": {"sha": "da3f70de7c8756fd0a84aed6a4d9e1918b84726e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da3f70de7c8756fd0a84aed6a4d9e1918b84726e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b17a646d90ad0cc30daf8432aa60ad0d751d914", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b17a646d90ad0cc30daf8432aa60ad0d751d914", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b17a646d90ad0cc30daf8432aa60ad0d751d914", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b17a646d90ad0cc30daf8432aa60ad0d751d914/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8e66b377a93e3fc371d0836768740d68ef8fffc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e66b377a93e3fc371d0836768740d68ef8fffc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e66b377a93e3fc371d0836768740d68ef8fffc5"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "c54f216a78035f60c39d689271271529010712ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b17a646d90ad0cc30daf8432aa60ad0d751d914/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b17a646d90ad0cc30daf8432aa60ad0d751d914/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b17a646d90ad0cc30daf8432aa60ad0d751d914", "patch": "@@ -1,3 +1,8 @@\n+2019-10-16  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_layout_frame): Use is_constant\n+\trather than known_lt when choosing frame layouts.\n+\n 2019-10-16  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_layout_frame): Assert"}, {"sha": "0537e7fe3595c5be3057a10531ac0cd068972df8", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b17a646d90ad0cc30daf8432aa60ad0d751d914/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b17a646d90ad0cc30daf8432aa60ad0d751d914/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=9b17a646d90ad0cc30daf8432aa60ad0d751d914", "patch": "@@ -5447,7 +5447,7 @@ aarch64_layout_frame (void)\n   else if (frame.wb_candidate1 != INVALID_REGNUM)\n     max_push_offset = 256;\n \n-  HOST_WIDE_INT const_size, const_fp_offset;\n+  HOST_WIDE_INT const_size, const_outgoing_args_size, const_fp_offset;\n   if (frame.frame_size.is_constant (&const_size)\n       && const_size < max_push_offset\n       && known_eq (crtl->outgoing_args_size, 0))\n@@ -5457,16 +5457,18 @@ aarch64_layout_frame (void)\n \t stp reg3, reg4, [sp, 16]  */\n       frame.callee_adjust = const_size;\n     }\n-  else if (known_lt (crtl->outgoing_args_size + frame.saved_regs_size, 512)\n+  else if (crtl->outgoing_args_size.is_constant (&const_outgoing_args_size)\n+\t   && const_outgoing_args_size + frame.saved_regs_size < 512\n \t   && !(cfun->calls_alloca\n-\t\t&& known_lt (frame.hard_fp_offset, max_push_offset)))\n+\t\t&& frame.hard_fp_offset.is_constant (&const_fp_offset)\n+\t\t&& const_fp_offset < max_push_offset))\n     {\n       /* Frame with small outgoing arguments:\n \t sub sp, sp, frame_size\n \t stp reg1, reg2, [sp, outgoing_args_size]\n \t stp reg3, reg4, [sp, outgoing_args_size + 16]  */\n       frame.initial_adjust = frame.frame_size;\n-      frame.callee_offset = frame.frame_size - frame.hard_fp_offset;\n+      frame.callee_offset = const_outgoing_args_size;\n     }\n   else if (frame.hard_fp_offset.is_constant (&const_fp_offset)\n \t   && const_fp_offset < max_push_offset)"}]}