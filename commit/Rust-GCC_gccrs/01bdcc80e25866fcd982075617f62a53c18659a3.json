{"sha": "01bdcc80e25866fcd982075617f62a53c18659a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFiZGNjODBlMjU4NjZmY2Q5ODIwNzU2MTdmNjJhNTNjMTg2NTlhMw==", "commit": {"author": {"name": "Aditya Kumar", "email": "aditya.k7@samsung.com", "date": "2015-09-29T22:20:14Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2015-09-29T22:20:14Z"}, "message": "Make compute_deps, extend_schedule static\n\nNo functional changes intended. Passes make check and bootstrap.\ngcc/ChangeLog:\n\n2015-09-29  Aditya Kumar  <hiraditya@msn.com>\n\n        * graphite-dependences.c (scop_get_dependences): Moved in down\n\tin order to be visible to its caller.\n        * graphite-poly.h: Removed compute_deps, and extend_schedule.\n\nFrom-SVN: r228269", "tree": {"sha": "f604e9de2ab0387a77b61793787f6e401c3a6526", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f604e9de2ab0387a77b61793787f6e401c3a6526"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01bdcc80e25866fcd982075617f62a53c18659a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01bdcc80e25866fcd982075617f62a53c18659a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01bdcc80e25866fcd982075617f62a53c18659a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01bdcc80e25866fcd982075617f62a53c18659a3/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4d0dacd622e29349a2f2febdc4f62c185e6d6f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4d0dacd622e29349a2f2febdc4f62c185e6d6f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4d0dacd622e29349a2f2febdc4f62c185e6d6f2"}], "stats": {"total": 84, "additions": 37, "deletions": 47}, "files": [{"sha": "8fc1ce77fd92bc51fef32003c356a9ed8c5752c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01bdcc80e25866fcd982075617f62a53c18659a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01bdcc80e25866fcd982075617f62a53c18659a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=01bdcc80e25866fcd982075617f62a53c18659a3", "patch": "@@ -1,3 +1,9 @@\n+2015-09-29  Aditya Kumar  <aditya.k7@samsung.com>\n+\n+\t* graphite-dependences.c (scop_get_dependences): Moved in down\n+\tin order to be visible to its caller.\n+\t* graphite-poly.h: Removed compute_deps, and extend_schedule.\n+\n 2015-09-29  Sebastian Pop  <s.pop@samsung.com>\n             Aditya Kumar  <aditya.k7@samsung.com>\n "}, {"sha": "e39394a805369287026384c78ed64d8256db375b", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01bdcc80e25866fcd982075617f62a53c18659a3/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01bdcc80e25866fcd982075617f62a53c18659a3/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=01bdcc80e25866fcd982075617f62a53c18659a3", "patch": "@@ -47,35 +47,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"graphite-poly.h\"\n \n \n-isl_union_map *\n-scop_get_dependences (scop_p scop)\n-{\n-  isl_union_map *dependences;\n-\n-  if (!scop->must_raw)\n-    compute_deps (scop, SCOP_BBS (scop),\n-\t\t  &scop->must_raw, &scop->may_raw,\n-\t\t  &scop->must_raw_no_source, &scop->may_raw_no_source,\n-\t\t  &scop->must_war, &scop->may_war,\n-\t\t  &scop->must_war_no_source, &scop->may_war_no_source,\n-\t\t  &scop->must_waw, &scop->may_waw,\n-\t\t  &scop->must_waw_no_source, &scop->may_waw_no_source);\n-\n-  dependences = isl_union_map_copy (scop->must_raw);\n-  dependences = isl_union_map_union (dependences,\n-\t\t\t\t     isl_union_map_copy (scop->must_war));\n-  dependences = isl_union_map_union (dependences,\n-\t\t\t\t     isl_union_map_copy (scop->must_waw));\n-  dependences = isl_union_map_union (dependences,\n-\t\t\t\t     isl_union_map_copy (scop->may_raw));\n-  dependences = isl_union_map_union (dependences,\n-\t\t\t\t     isl_union_map_copy (scop->may_war));\n-  dependences = isl_union_map_union (dependences,\n-\t\t\t\t     isl_union_map_copy (scop->may_waw));\n-\n-  return dependences;\n-}\n-\n /* Add the constraints from the set S to the domain of MAP.  */\n \n static isl_map *\n@@ -252,7 +223,7 @@ extend_schedule_1 (__isl_take isl_map *map, void *user)\n \n /* Return a relation that has uniform output dimensions.  */\n \n-__isl_give isl_union_map *\n+static __isl_give isl_union_map *\n extend_schedule (__isl_take isl_union_map *x)\n {\n   int max = 0;\n@@ -519,7 +490,7 @@ subtract_commutative_associative_deps (scop_p scop,\n /* Compute the original data dependences in SCOP for all the reads and\n    writes in PBBS.  */\n \n-void\n+static void\n compute_deps (scop_p scop, vec<poly_bb_p> pbbs,\n \t      isl_union_map **must_raw,\n \t      isl_union_map **may_raw,\n@@ -595,6 +566,35 @@ transform_is_safe (scop_p scop, isl_union_map *transform)\n   return res;\n }\n \n+isl_union_map *\n+scop_get_dependences (scop_p scop)\n+{\n+  isl_union_map *dependences;\n+\n+  if (!scop->must_raw)\n+    compute_deps (scop, SCOP_BBS (scop),\n+\t\t  &scop->must_raw, &scop->may_raw,\n+\t\t  &scop->must_raw_no_source, &scop->may_raw_no_source,\n+\t\t  &scop->must_war, &scop->may_war,\n+\t\t  &scop->must_war_no_source, &scop->may_war_no_source,\n+\t\t  &scop->must_waw, &scop->may_waw,\n+\t\t  &scop->must_waw_no_source, &scop->may_waw_no_source);\n+\n+  dependences = isl_union_map_copy (scop->must_raw);\n+  dependences = isl_union_map_union (dependences,\n+\t\t\t\t     isl_union_map_copy (scop->must_war));\n+  dependences = isl_union_map_union (dependences,\n+\t\t\t\t     isl_union_map_copy (scop->must_waw));\n+  dependences = isl_union_map_union (dependences,\n+\t\t\t\t     isl_union_map_copy (scop->may_raw));\n+  dependences = isl_union_map_union (dependences,\n+\t\t\t\t     isl_union_map_copy (scop->may_war));\n+  dependences = isl_union_map_union (dependences,\n+\t\t\t\t     isl_union_map_copy (scop->may_waw));\n+\n+  return dependences;\n+}\n+\n /* Return true when the SCOP transformed schedule is correct.  */\n \n bool"}, {"sha": "b2dbd367bb9a678ba800fec886eb7c4db13ba6af", "filename": "gcc/graphite-poly.h", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01bdcc80e25866fcd982075617f62a53c18659a3/gcc%2Fgraphite-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01bdcc80e25866fcd982075617f62a53c18659a3/gcc%2Fgraphite-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.h?ref=01bdcc80e25866fcd982075617f62a53c18659a3", "patch": "@@ -456,22 +456,6 @@ scop_set_nb_params (scop_p scop, graphite_dim_t nb_params)\n }\n \n bool graphite_legal_transform (scop_p);\n-__isl_give isl_union_map *extend_schedule (__isl_take isl_union_map *);\n-\n-void\n-compute_deps (scop_p scop, vec<poly_bb_p> pbbs,\n-\t      isl_union_map **must_raw,\n-\t      isl_union_map **may_raw,\n-\t      isl_union_map **must_raw_no_source,\n-\t      isl_union_map **may_raw_no_source,\n-\t      isl_union_map **must_war,\n-\t      isl_union_map **may_war,\n-\t      isl_union_map **must_war_no_source,\n-\t      isl_union_map **may_war_no_source,\n-\t      isl_union_map **must_waw,\n-\t      isl_union_map **may_waw,\n-\t      isl_union_map **must_waw_no_source,\n-\t      isl_union_map **may_waw_no_source);\n \n isl_union_map *\n scop_get_dependences (scop_p scop);"}]}