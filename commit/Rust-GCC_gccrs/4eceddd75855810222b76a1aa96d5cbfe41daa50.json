{"sha": "4eceddd75855810222b76a1aa96d5cbfe41daa50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVjZWRkZDc1ODU1ODEwMjIyYjc2YTFhYTk2ZDVjYmZlNDFkYWE1MA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-03-14T13:18:28Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-03-14T13:18:28Z"}, "message": "re PR fortran/43362 (ICE with structure constuctor with DT component)\n\n2010-03-14  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/43362\n        * resolve.c (resolve_structure_cons): Add missing PURE\n        * constraint.\n        (resolve_ordinary_assign): Add check to avoid segfault.\n\n2010-03-14  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/43362\n        * gfortran.dg/impure_constructor_1.f90: New test.\n\nFrom-SVN: r157447", "tree": {"sha": "1a01b6c272626c479a7165c02e5abb8cd5acdb91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a01b6c272626c479a7165c02e5abb8cd5acdb91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4eceddd75855810222b76a1aa96d5cbfe41daa50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eceddd75855810222b76a1aa96d5cbfe41daa50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eceddd75855810222b76a1aa96d5cbfe41daa50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eceddd75855810222b76a1aa96d5cbfe41daa50/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9fd6e05c4a4ba724087d037528c867c60cc4594c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fd6e05c4a4ba724087d037528c867c60cc4594c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fd6e05c4a4ba724087d037528c867c60cc4594c"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "dd809d9c23d7909b638fc03e3099e145942c9cfe", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eceddd75855810222b76a1aa96d5cbfe41daa50/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eceddd75855810222b76a1aa96d5cbfe41daa50/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4eceddd75855810222b76a1aa96d5cbfe41daa50", "patch": "@@ -1,3 +1,9 @@\n+2010-03-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/43362\n+\t* resolve.c (resolve_structure_cons): Add missing PURE constraint.\n+\t(resolve_ordinary_assign): Add check to avoid segfault.\n+\n 2010-03-12  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/43291"}, {"sha": "774dfe4f2ea466bb4ef8818f98db8ff5d86b8ee7", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eceddd75855810222b76a1aa96d5cbfe41daa50/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eceddd75855810222b76a1aa96d5cbfe41daa50/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=4eceddd75855810222b76a1aa96d5cbfe41daa50", "patch": "@@ -921,6 +921,16 @@ resolve_structure_cons (gfc_expr *expr)\n \t\t     \"for pointer component '%s' should be a POINTER or \"\n \t\t     \"a TARGET\", &cons->expr->where, comp->name);\n \t}\n+\n+      /* F2003, C1272 (3).  */\n+      if (gfc_pure (NULL) && cons->expr->expr_type == EXPR_VARIABLE\n+\t  && gfc_impure_variable (cons->expr->symtree->n.sym))\n+\t{\n+\t  t = FAILURE;\n+\t  gfc_error (\"Invalid expression in the derived type constructor for pointer \"\n+\t\t     \"component '%s' at %L in PURE procedure\", comp->name,\n+\t\t     &cons->expr->where);\n+\t}\n     }\n \n   return t;\n@@ -7947,6 +7957,7 @@ resolve_ordinary_assign (gfc_code *code, gfc_namespace *ns)\n       if (lhs->ts.type == BT_DERIVED\n \t    && lhs->expr_type == EXPR_VARIABLE\n \t    && lhs->ts.u.derived->attr.pointer_comp\n+\t    && rhs->expr_type == EXPR_VARIABLE\n \t    && gfc_impure_variable (rhs->symtree->n.sym))\n \t{\n \t  gfc_error (\"The impure variable at %L is assigned to \""}, {"sha": "47a80da34ff110fa0c5498ad1688742b5dae6a0d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eceddd75855810222b76a1aa96d5cbfe41daa50/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eceddd75855810222b76a1aa96d5cbfe41daa50/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4eceddd75855810222b76a1aa96d5cbfe41daa50", "patch": "@@ -1,3 +1,8 @@\n+2010-03-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/43362\n+\t* gfortran.dg/impure_constructor_1.f90: New test.\n+\n 2010-03-13  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/43354"}, {"sha": "6657213d78ad865cf86ceff3b4b2ac91c4921ce7", "filename": "gcc/testsuite/gfortran.dg/impure_constructor_1.f90", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eceddd75855810222b76a1aa96d5cbfe41daa50/gcc%2Ftestsuite%2Fgfortran.dg%2Fimpure_constructor_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eceddd75855810222b76a1aa96d5cbfe41daa50/gcc%2Ftestsuite%2Fgfortran.dg%2Fimpure_constructor_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fimpure_constructor_1.f90?ref=4eceddd75855810222b76a1aa96d5cbfe41daa50", "patch": "@@ -0,0 +1,30 @@\n+! { dg-do compile }\n+!\n+! PR fortran/43362\n+!\n+module m\n+  implicit none\n+  type t\n+    integer, pointer :: a\n+  end type t\n+  type t2\n+    type(t) :: b\n+  end type t2\n+  type t3\n+    type(t), pointer :: b\n+  end type t3\n+contains\n+ pure subroutine foo(x)\n+   type(t), target, intent(in) :: x\n+   type(t2) :: y\n+   type(t3) :: z\n+\n+   ! The following gave an ICE but is valid:\n+   y = t2(x) ! Note: F2003, C1272 (3) and (4) do not apply\n+   \n+   ! Variant which is invalid as C1272 (3) applies\n+   z = t3(x) ! { dg-error \"Invalid expression in the derived type constructor\" }\n+ end subroutine foo\n+end module m\n+\n+"}]}