{"sha": "9fa4023c7aa0ab126b00fe7e640ed9858b249c77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZhNDAyM2M3YWEwYWIxMjZiMDBmZTdlNjQwZWQ5ODU4YjI0OWM3Nw==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@wdc.com", "date": "2020-07-31T22:52:20Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@wdc.com", "date": "2020-07-31T22:52:20Z"}, "message": "RISC-V/libgcc: Reduce the size of RV64 millicode by 6 bytes\n\nRewrite code sequences throughout the 64-bit RISC-V `__riscv_save_*'\nroutines replacing `li t1, -48', `li t1, -64', and `li t1, -80',\ninstructions, which do not have a compressed encoding, respectively with\n`li t1, 3', `li t1, 4', and `li t1, 4', which do, and then adjusting the\nremaining code accordingly observing that `sub sp, sp, t1' takes the\nsame amount of space as an `slli t1, t1, 4'/`add sp, sp, t1' instruction\npair does, again due to the use of compressed encodings, saving 6 bytes\ntotal.\n\nThis change does increase code size by 4 bytes for RISC-V processors\nlacking the compressed instruction set, however their users couldn't\ncare about the code size or they would have chosen an implementation\nthat does have the compressed instructions, wouldn't they?\n\n\tlibgcc/\n\t* config/riscv/save-restore.S [__riscv_xlen == 64]\n\t(__riscv_save_10, __riscv_save_8, __riscv_save_6, __riscv_save_4)\n\t(__riscv_save_2): Replace negative immediates used for the final\n\tstack pointer adjustment with positive ones, right-shifted by 4.", "tree": {"sha": "d5b31bcdac3dd07ec7bf1cb16466752d277e3e6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5b31bcdac3dd07ec7bf1cb16466752d277e3e6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fa4023c7aa0ab126b00fe7e640ed9858b249c77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fa4023c7aa0ab126b00fe7e640ed9858b249c77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fa4023c7aa0ab126b00fe7e640ed9858b249c77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fa4023c7aa0ab126b00fe7e640ed9858b249c77/comments", "author": null, "committer": null, "parents": [{"sha": "d1da25fe991ca7140c4ecce39b30aacd6f78c921", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1da25fe991ca7140c4ecce39b30aacd6f78c921", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1da25fe991ca7140c4ecce39b30aacd6f78c921"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "e510009a42617ccdff3a655cac832b493c4f560b", "filename": "libgcc/config/riscv/save-restore.S", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fa4023c7aa0ab126b00fe7e640ed9858b249c77/libgcc%2Fconfig%2Friscv%2Fsave-restore.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fa4023c7aa0ab126b00fe7e640ed9858b249c77/libgcc%2Fconfig%2Friscv%2Fsave-restore.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Friscv%2Fsave-restore.S?ref=9fa4023c7aa0ab126b00fe7e640ed9858b249c77", "patch": "@@ -45,7 +45,7 @@ FUNC_BEGIN (__riscv_save_10)\n   .cfi_restore 27\n   addi sp, sp, -112\n   .cfi_def_cfa_offset 112\n-  li t1, -16\n+  li t1, 1\n .Ls10:\n   sd s10, 16(sp)\n   .cfi_offset 26, -96\n@@ -60,7 +60,7 @@ FUNC_BEGIN (__riscv_save_8)\n   .cfi_restore 27\n   addi sp, sp, -112\n   .cfi_def_cfa_offset 112\n-  li t1, -32\n+  li t1, 2\n .Ls8:\n   sd s8, 32(sp)\n   .cfi_offset 24, -80\n@@ -77,7 +77,7 @@ FUNC_BEGIN (__riscv_save_6)\n   .cfi_restore 27\n   addi sp, sp, -112\n   .cfi_def_cfa_offset 112\n-  li t1, -48\n+  li t1, 3\n .Ls6:\n   sd s6, 48(sp)\n   .cfi_offset 22, -64\n@@ -99,7 +99,7 @@ FUNC_BEGIN (__riscv_save_4)\n   .cfi_restore 27\n   addi sp, sp, -112\n   .cfi_def_cfa_offset 112\n-  li t1, -64\n+  li t1, 4\n .Ls4:\n   sd s4, 64(sp)\n   .cfi_offset 20, -48\n@@ -123,7 +123,7 @@ FUNC_BEGIN (__riscv_save_2)\n   .cfi_restore 27\n   addi sp, sp, -112\n   .cfi_def_cfa_offset 112\n-  li t1, -80\n+  li t1, 5\n .Ls2:\n   sd s2, 80(sp)\n   .cfi_offset 18, -32\n@@ -133,9 +133,10 @@ FUNC_BEGIN (__riscv_save_2)\n   .cfi_offset 8, -16\n   sd ra, 104(sp)\n   .cfi_offset 1, -8\n+  slli t1, t1, 4\n   # CFA info is not correct in next 2 instruction since t1's\n   # value is depend on how may register really save.\n-  sub sp, sp, t1\n+  add sp, sp, t1\n   jr t0\n   .cfi_endproc\n FUNC_END (__riscv_save_12)"}]}