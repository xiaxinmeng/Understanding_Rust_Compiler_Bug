{"sha": "86316060db3145742930d171de3683b9d27d3811", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYzMTYwNjBkYjMxNDU3NDI5MzBkMTcxZGUzNjgzYjlkMjdkMzgxMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-12-03T16:57:05Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-12-03T16:57:05Z"}, "message": "* semantics.c (build_data_member_initialization): Remove assert.\n\nFrom-SVN: r167437", "tree": {"sha": "2008330ecc5f491b1a9d16f303bec1ca5b9df698", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2008330ecc5f491b1a9d16f303bec1ca5b9df698"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86316060db3145742930d171de3683b9d27d3811", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86316060db3145742930d171de3683b9d27d3811", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86316060db3145742930d171de3683b9d27d3811", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86316060db3145742930d171de3683b9d27d3811/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9c60a01a9c238e216af7cd952c7b785842b6a6a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c60a01a9c238e216af7cd952c7b785842b6a6a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c60a01a9c238e216af7cd952c7b785842b6a6a4"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "c3ed2909324a48d37e4da1d1882dc6c36c6a9472", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86316060db3145742930d171de3683b9d27d3811/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86316060db3145742930d171de3683b9d27d3811/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=86316060db3145742930d171de3683b9d27d3811", "patch": "@@ -1,5 +1,8 @@\n 2010-12-03  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/46645\n+\t* semantics.c (build_data_member_initialization): Remove assert.\n+\n \tPR c++/46058\n \t* tree.c (lvalue_kind) [SCOPE_REF]: Handle non-dependent case.\n "}, {"sha": "2424e49a3c6e1eab60ebaf1e86e140c79f0589fc", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86316060db3145742930d171de3683b9d27d3811/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86316060db3145742930d171de3683b9d27d3811/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=86316060db3145742930d171de3683b9d27d3811", "patch": "@@ -5484,10 +5484,8 @@ build_data_member_initialization (tree t, VEC(constructor_elt,gc) **vec)\n       init = unshare_expr (TREE_OPERAND (t, 1));\n       if (TREE_CODE (member) == INDIRECT_REF)\n \t{\n-\t  /* Don't put out anything for value-init of an empty base.  */\n+\t  /* Don't put out anything for an empty base.  */\n \t  gcc_assert (is_empty_class (TREE_TYPE (member)));\n-\t  gcc_assert (TREE_CODE (init) == CONSTRUCTOR\n-\t\t      && CONSTRUCTOR_NELTS (init) == 0);\n \t  return true;\n \t}\n     }"}]}