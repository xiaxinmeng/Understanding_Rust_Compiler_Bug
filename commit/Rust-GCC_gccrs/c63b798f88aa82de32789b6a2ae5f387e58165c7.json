{"sha": "c63b798f88aa82de32789b6a2ae5f387e58165c7", "node_id": "C_kwDOANBUbNoAKGM2M2I3OThmODhhYTgyZGUzMjc4OWI2YTJhZTVmMzg3ZTU4MTY1Yzc", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-02-02T20:04:18Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-11T08:53:21Z"}, "message": "[Ada] Fix spurious ambiguity for if_expression containing operator\n\nIt comes from a discrepancy in the analysis of binary operators, between\nthe predefined ones for which we register an interpretation with the base\ntype and the user-defined ones for which we register an interpretation\nwith the subtype directly.\n\nThis is harmless in almost all cases because the two interpretations do not\ndiffer by this type property only, but is problematic when the operation is\nthe dependent expression of a conditional expression, because it causes two\ninterpretations of the conditional expression to be registered, which this\ntime differ by this type property only, thus making them impossible to be\ndisambiguated later.\n\ngcc/ada/\n\n\t* sem_ch4.adb (Analyze_User_Defined_Binary_Op): Use the base type\n\tin the interpretation of the operator.", "tree": {"sha": "6da8998a70ecc6d5eb5c40066dbf7377ec620ccc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6da8998a70ecc6d5eb5c40066dbf7377ec620ccc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c63b798f88aa82de32789b6a2ae5f387e58165c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c63b798f88aa82de32789b6a2ae5f387e58165c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c63b798f88aa82de32789b6a2ae5f387e58165c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c63b798f88aa82de32789b6a2ae5f387e58165c7/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd97da66c886a69c2d831dad1b3ffe06aa1879fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd97da66c886a69c2d831dad1b3ffe06aa1879fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd97da66c886a69c2d831dad1b3ffe06aa1879fe"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ca8e1cd1f24cfc288dd5c0002748dad467d37bc4", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c63b798f88aa82de32789b6a2ae5f387e58165c7/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c63b798f88aa82de32789b6a2ae5f387e58165c7/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=c63b798f88aa82de32789b6a2ae5f387e58165c7", "patch": "@@ -5934,7 +5934,7 @@ package body Sem_Ch4 is\n            and then (Has_Compatible_Type (Right_Opnd (N), Etype (F2))\n                       or else Etype (F2) = Any_Type)\n          then\n-            Add_One_Interp (N, Op_Id, Etype (Op_Id));\n+            Add_One_Interp (N, Op_Id, Base_Type (Etype (Op_Id)));\n \n             --  If the operands are overloaded, indicate that the current\n             --  type is a viable candidate. This is redundant in most cases,"}]}