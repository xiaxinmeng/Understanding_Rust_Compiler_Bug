{"sha": "d39ac0fdc0eb8be724c56b73a46a0836933975e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM5YWMwZmRjMGViOGJlNzI0YzU2YjczYTQ2YTA4MzY5MzM5NzVlMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-10-16T22:24:16Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-10-16T22:24:16Z"}, "message": "cfg.c (free_edge): Break out from ....\n\n\t* cfg.c (free_edge): Break out from ....\n\t(remove_edge): ... here.\n\t(clear_edges): Use free_edge.\n\n\t* att.h (ASM_QUAD): Add comment.\n\t* bsd.h, sco5.h, sun386.h (ASM_QUAD): Define.\n\nFrom-SVN: r46297", "tree": {"sha": "1295a7d5d520c93f35da9092195ef7eb5cc38d7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1295a7d5d520c93f35da9092195ef7eb5cc38d7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d39ac0fdc0eb8be724c56b73a46a0836933975e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d39ac0fdc0eb8be724c56b73a46a0836933975e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d39ac0fdc0eb8be724c56b73a46a0836933975e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d39ac0fdc0eb8be724c56b73a46a0836933975e2/comments", "author": null, "committer": null, "parents": [{"sha": "44cf5b6a7186bed435ece527a40b8bcc4adb0998", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44cf5b6a7186bed435ece527a40b8bcc4adb0998", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44cf5b6a7186bed435ece527a40b8bcc4adb0998"}], "stats": {"total": 61, "additions": 52, "deletions": 9}, "files": [{"sha": "cbf0c5d07aec097b44a579fc65e2d6a49efb9008", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d39ac0fdc0eb8be724c56b73a46a0836933975e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d39ac0fdc0eb8be724c56b73a46a0836933975e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d39ac0fdc0eb8be724c56b73a46a0836933975e2", "patch": "@@ -1,3 +1,12 @@\n+Wed Oct 17 00:21:31 CEST 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cfg.c (free_edge): Break out from ....\n+\t(remove_edge): ... here.\n+\t(clear_edges): Use free_edge.\n+\n+\t* att.h (ASM_QUAD): Add comment.\n+\t* bsd.h, sco5.h, sun386.h (ASM_QUAD): Define.\n+\n Wed Oct 17 00:01:02 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.c (split_ti): New function."}, {"sha": "a72067342f22fd4ffc7f659e7fb8eb99ff214751", "filename": "gcc/cfg.c", "status": "modified", "additions": 36, "deletions": 8, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d39ac0fdc0eb8be724c56b73a46a0836933975e2/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d39ac0fdc0eb8be724c56b73a46a0836933975e2/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=d39ac0fdc0eb8be724c56b73a46a0836933975e2", "patch": "@@ -117,6 +117,7 @@ struct basic_block_def entry_exit_blocks[2]\n };\n \n void debug_flow_info\t\t\tPARAMS ((void));\n+static void free_edge\t\t\tPARAMS ((edge));\n \f\n /* Called once at intialization time.  */\n \n@@ -142,23 +143,53 @@ init_flow ()\n     }\n }\n \f\n+/* Helper function for remove_edge and clear_edges.  Frees edge structure\n+   without actually unlinking it from the pred/succ lists.  */\n+\n+static void\n+free_edge (e)\n+     edge e;\n+{\n+  n_edges--;\n+  memset (e, 0, sizeof (*e));\n+  e->succ_next = first_deleted_edge;\n+  first_deleted_edge = e;\n+}\n+\n /* Free the memory associated with the edge structures.  */\n \n void\n clear_edges ()\n {\n   int i;\n+  edge e;\n \n   for (i = 0; i < n_basic_blocks; ++i)\n     {\n       basic_block bb = BASIC_BLOCK (i);\n+      edge e = bb->succ;\n \n-      while (bb->succ)\n-\tremove_edge (bb->succ);\n+      while (e)\n+\t{\n+\t  edge next = e->succ_next;\n+\n+\t  free_edge (e);\n+\t  e = next;\n+\t}\n+      bb->succ = NULL;\n+      bb->pred = NULL;\n     }\n \n-  while (ENTRY_BLOCK_PTR->succ)\n-    remove_edge (ENTRY_BLOCK_PTR->succ);\n+  e = ENTRY_BLOCK_PTR->succ;\n+  while (e)\n+    {\n+      edge next = e->succ_next;\n+\n+      free_edge (e);\n+      e = next;\n+    }\n+  EXIT_BLOCK_PTR->pred = NULL;\n+  ENTRY_BLOCK_PTR->succ = NULL;\n \n   if (n_edges)\n     abort ();\n@@ -335,10 +366,7 @@ remove_edge (e)\n   else\n     dest->pred = e->pred_next;\n \n-  n_edges--;\n-  memset (e, 0, sizeof (*e));\n-  e->succ_next = first_deleted_edge;\n-  first_deleted_edge = e;\n+  free_edge (e);\n }\n \n /* Redirect an edge's successor from one block to another.  */"}, {"sha": "7e8f7b57c5f4e98f9e4081cffe5188ec7c95d716", "filename": "gcc/config/i386/att.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d39ac0fdc0eb8be724c56b73a46a0836933975e2/gcc%2Fconfig%2Fi386%2Fatt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d39ac0fdc0eb8be724c56b73a46a0836933975e2/gcc%2Fconfig%2Fi386%2Fatt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fatt.h?ref=d39ac0fdc0eb8be724c56b73a46a0836933975e2", "patch": "@@ -32,7 +32,7 @@ Boston, MA 02111-1307, USA.  */\n \n #define ASM_SHORT \"\\t.value\\t\"\n #define ASM_LONG \"\\t.long\\t\"\n-#define ASM_QUAD \"\\t.quad\\t\"\n+#define ASM_QUAD \"\\t.quad\\t\"  /* Should not be used for 32bit compilation.  */\n \n /* How to output an ASCII string constant.  */\n "}, {"sha": "cf1b35b65d9abb4f8ccee74f9bb65fd79feb41e6", "filename": "gcc/config/i386/bsd.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d39ac0fdc0eb8be724c56b73a46a0836933975e2/gcc%2Fconfig%2Fi386%2Fbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d39ac0fdc0eb8be724c56b73a46a0836933975e2/gcc%2Fconfig%2Fi386%2Fbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbsd.h?ref=d39ac0fdc0eb8be724c56b73a46a0836933975e2", "patch": "@@ -43,6 +43,7 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_BYTE_OP \"\\t.byte\\t\"\n #define ASM_SHORT \"\\t.word\\t\"\n #define ASM_LONG \"\\t.long\\t\"\n+#define ASM_QUAD \"\\t.quad\\t\"  /* Should not be used for 32bit compilation.  */\n \n /* Output at beginning of assembler file.\n    ??? I am skeptical of this -- RMS.  */"}, {"sha": "16d5fcf2a45ca153ba01201a040f16bb3145cf36", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d39ac0fdc0eb8be724c56b73a46a0836933975e2/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d39ac0fdc0eb8be724c56b73a46a0836933975e2/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=d39ac0fdc0eb8be724c56b73a46a0836933975e2", "patch": "@@ -59,6 +59,9 @@ Boston, MA 02111-1307, USA.  */\n #undef ASM_LONG\n #define ASM_LONG\t\t\t\"\\t.long\\t\"\n \n+#undef ASM_QUAD\n+#define ASM_QUAD \"\\t.quad\\t\"  /* Should not be used for 32bit compilation.  */\n+\n #undef TYPE_ASM_OP\n #define TYPE_ASM_OP\t\t\t\"\\t.type\\t\"\n "}, {"sha": "8cc722710eb1787ab4d0461938d13b9aacdc1ea8", "filename": "gcc/config/i386/sun386.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d39ac0fdc0eb8be724c56b73a46a0836933975e2/gcc%2Fconfig%2Fi386%2Fsun386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d39ac0fdc0eb8be724c56b73a46a0836933975e2/gcc%2Fconfig%2Fi386%2Fsun386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsun386.h?ref=d39ac0fdc0eb8be724c56b73a46a0836933975e2", "patch": "@@ -36,6 +36,8 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_BYTE_OP \"\\t.byte\\t\"\n #define ASM_SHORT \"\\t.value\\t\"\n #define ASM_LONG \"\\t.long\\t\"\n+#define ASM_QUAD \"\\t.quad\\t\"  /* Should not be used for 32bit compilation.  */\n+\n \n /* How to output an ASCII string constant.  */\n "}]}