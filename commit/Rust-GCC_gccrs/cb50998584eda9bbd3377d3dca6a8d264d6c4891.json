{"sha": "cb50998584eda9bbd3377d3dca6a8d264d6c4891", "node_id": "C_kwDOANBUbNoAKGNiNTA5OTg1ODRlZGE5YmJkMzM3N2QzZGNhNmE4ZDI2NGQ2YzQ4OTE", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-02-09T12:01:11Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-13T08:04:29Z"}, "message": "[Ada] Remove obsolete uses of Unchecked_Deallocation from Ada 83\n\nIn Ada 83 the Unchecked_Deallocation was a top-level unit; since Ada 95\nit is an obsolete renaming of Ada.Unchecked_Deallocation. GNAT doesn't\nyet warn about uses of these obsolete renamings, but it still seems\nbetter to avoid them.\n\nCleanup before adding a new instance of Unchecked_Deallocation.\nOffending occurrences found with grep.\n\ngcc/ada/\n\n\t* butil.adb, sem.adb, sinput.adb, types.ads, xref_lib.adb:\n\tReplace uses of Unchecked_Deallocation with\n\tAda.Unchecked_Deallocation.\n\t* doc/gnat_ugn/gnat_and_program_execution.rst: Likewise for the\n\tdocumentation; fix casing of GNAT.IO.\n\t* gnat_ugn.texi: Regenerate.", "tree": {"sha": "e871f1069b53f814929873605f0f52d0ae3055b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e871f1069b53f814929873605f0f52d0ae3055b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb50998584eda9bbd3377d3dca6a8d264d6c4891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb50998584eda9bbd3377d3dca6a8d264d6c4891", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb50998584eda9bbd3377d3dca6a8d264d6c4891", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb50998584eda9bbd3377d3dca6a8d264d6c4891/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84f20139792e97f9fb6e10918e271c3277d0f178", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84f20139792e97f9fb6e10918e271c3277d0f178", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84f20139792e97f9fb6e10918e271c3277d0f178"}], "stats": {"total": 56, "additions": 28, "deletions": 28}, "files": [{"sha": "9536c109a8c6c628f693a0ca4d85ce796767f03b", "filename": "gcc/ada/butil.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb50998584eda9bbd3377d3dca6a8d264d6c4891/gcc%2Fada%2Fbutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb50998584eda9bbd3377d3dca6a8d264d6c4891/gcc%2Fada%2Fbutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbutil.adb?ref=cb50998584eda9bbd3377d3dca6a8d264d6c4891", "patch": "@@ -23,9 +23,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Ada.Unchecked_Deallocation;\n with Opt;    use Opt;\n with Output; use Output;\n-with Unchecked_Deallocation;\n \n with GNAT; use GNAT;\n \n@@ -540,7 +540,7 @@ package body Butil is\n    ---------------------------------\n \n    function Read_Forced_Elab_Order_File return String_Ptr is\n-      procedure Free is new Unchecked_Deallocation (String, String_Ptr);\n+      procedure Free is new Ada.Unchecked_Deallocation (String, String_Ptr);\n \n       Descr    : File_Descriptor;\n       Len      : Natural;"}, {"sha": "bf0fec9fd25c500cb0c92eb1ebae241c9c44013e", "filename": "gcc/ada/doc/gnat_ugn/gnat_and_program_execution.rst", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb50998584eda9bbd3377d3dca6a8d264d6c4891/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb50998584eda9bbd3377d3dca6a8d264d6c4891/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst?ref=cb50998584eda9bbd3377d3dca6a8d264d6c4891", "patch": "@@ -3590,9 +3590,9 @@ properly allocated memory location. Here is a complete example of use of\n \n   .. code-block:: ada\n \n-      with Gnat.Io; use Gnat.Io;\n-      with Unchecked_Deallocation;\n-      with Unchecked_Conversion;\n+      with GNAT.IO; use GNAT.IO;\n+      with Ada.Unchecked_Deallocation;\n+      with Ada.Unchecked_Conversion;\n       with GNAT.Debug_Pools;\n       with System.Storage_Elements;\n       with Ada.Exceptions; use Ada.Exceptions;\n@@ -3604,8 +3604,8 @@ properly allocated memory location. Here is a complete example of use of\n          P : GNAT.Debug_Pools.Debug_Pool;\n          for T'Storage_Pool use P;\n \n-         procedure Free is new Unchecked_Deallocation (Integer, T);\n-         function UC is new Unchecked_Conversion (U, T);\n+         procedure Free is new Ada.Unchecked_Deallocation (Integer, T);\n+         function UC is new Ada.Unchecked_Conversion (U, T);\n          A, B : aliased T;\n \n          procedure Info is new GNAT.Debug_Pools.Print_Info(Put_Line);\n@@ -3864,12 +3864,12 @@ execution of this erroneous program:\n \n     .. code-block:: ada\n \n-       with Unchecked_Deallocation;\n+       with Ada.Unchecked_Deallocation;\n        procedure Test_Gm is\n \n           type T is array (1..1000) of Integer;\n           type Ptr is access T;\n-          procedure Free is new Unchecked_Deallocation (T, Ptr);\n+          procedure Free is new Ada.Unchecked_Deallocation (T, Ptr);\n           A : Ptr;\n \n           procedure My_Alloc is"}, {"sha": "879f5fc64c4f0c69dc2b7d2266f1dfedde97ca89", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb50998584eda9bbd3377d3dca6a8d264d6c4891/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb50998584eda9bbd3377d3dca6a8d264d6c4891/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=cb50998584eda9bbd3377d3dca6a8d264d6c4891", "patch": "@@ -22221,9 +22221,9 @@ properly allocated memory location. Here is a complete example of use of\n @quotation\n \n @example\n-with Gnat.Io; use Gnat.Io;\n-with Unchecked_Deallocation;\n-with Unchecked_Conversion;\n+with GNAT.IO; use GNAT.IO;\n+with Ada.Unchecked_Deallocation;\n+with Ada.Unchecked_Conversion;\n with GNAT.Debug_Pools;\n with System.Storage_Elements;\n with Ada.Exceptions; use Ada.Exceptions;\n@@ -22235,8 +22235,8 @@ procedure Debug_Pool_Test is\n    P : GNAT.Debug_Pools.Debug_Pool;\n    for T'Storage_Pool use P;\n \n-   procedure Free is new Unchecked_Deallocation (Integer, T);\n-   function UC is new Unchecked_Conversion (U, T);\n+   procedure Free is new Ada.Unchecked_Deallocation (Integer, T);\n+   function UC is new Ada.Unchecked_Conversion (U, T);\n    A, B : aliased T;\n \n    procedure Info is new GNAT.Debug_Pools.Print_Info(Put_Line);\n@@ -29248,8 +29248,8 @@ to permit their use in free software.\n \n @printindex ge\n \n-@anchor{gnat_ugn/gnat_utility_programs switches-related-to-project-files}@w{                              }\n @anchor{cf}@w{                              }\n+@anchor{gnat_ugn/gnat_utility_programs switches-related-to-project-files}@w{                              }\n \n @c %**end of body\n @bye"}, {"sha": "796fffb3065243dfbac25549168d292ca46da3c2", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb50998584eda9bbd3377d3dca6a8d264d6c4891/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb50998584eda9bbd3377d3dca6a8d264d6c4891/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=cb50998584eda9bbd3377d3dca6a8d264d6c4891", "patch": "@@ -61,7 +61,7 @@ with Stylesw;        use Stylesw;\n with Uintp;          use Uintp;\n with Uname;          use Uname;\n \n-with Unchecked_Deallocation;\n+with Ada.Unchecked_Deallocation;\n \n pragma Warnings (Off, Sem_Util);\n --  Suppress warnings of unused with for Sem_Util (used only in asserts)\n@@ -1062,7 +1062,7 @@ package body Sem is\n    procedure Initialize is\n       Next : Suppress_Stack_Entry_Ptr;\n \n-      procedure Free is new Unchecked_Deallocation\n+      procedure Free is new Ada.Unchecked_Deallocation\n         (Suppress_Stack_Entry, Suppress_Stack_Entry_Ptr);\n \n    begin"}, {"sha": "fccbacfe1a15863e872bbd60f2f5b2234181d2d7", "filename": "gcc/ada/sinput.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb50998584eda9bbd3377d3dca6a8d264d6c4891/gcc%2Fada%2Fsinput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb50998584eda9bbd3377d3dca6a8d264d6c4891/gcc%2Fada%2Fsinput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.adb?ref=cb50998584eda9bbd3377d3dca6a8d264d6c4891", "patch": "@@ -41,8 +41,8 @@ with System.Storage_Elements;\n with System.Memory;\n with System.WCh_Con; use System.WCh_Con;\n \n+with Ada.Unchecked_Deallocation;\n with Unchecked_Conversion;\n-with Unchecked_Deallocation;\n \n package body Sinput is\n \n@@ -319,10 +319,10 @@ package body Sinput is\n    -- Clear_Source_File_Table --\n    -----------------------------\n \n-   procedure Free is new Unchecked_Deallocation\n+   procedure Free is new Ada.Unchecked_Deallocation\n      (Lines_Table_Type, Lines_Table_Ptr);\n \n-   procedure Free is new Unchecked_Deallocation\n+   procedure Free is new Ada.Unchecked_Deallocation\n      (Logical_Lines_Table_Type, Logical_Lines_Table_Ptr);\n \n    procedure Clear_Source_File_Table is\n@@ -383,7 +383,7 @@ package body Sinput is\n       Temp : Source_Buffer_Ptr_Var := To_Source_Buffer_Ptr_Var (Src);\n \n       procedure Free_Ptr is new\n-        Unchecked_Deallocation (Source_Buffer, Source_Buffer_Ptr_Var);\n+        Ada.Unchecked_Deallocation (Source_Buffer, Source_Buffer_Ptr_Var);\n    begin\n       Free_Ptr (Temp);\n       Src := null;\n@@ -922,7 +922,7 @@ package body Sinput is\n       pragma Import (Ada, Dope);\n       use System.Storage_Elements;\n       for Dope'Address use Src + System.Address'Size / 8;\n-      procedure Free is new Unchecked_Deallocation (Dope_Rec, Dope_Ptr);\n+      procedure Free is new Ada.Unchecked_Deallocation (Dope_Rec, Dope_Ptr);\n    begin\n       Free (Dope);\n    end Free_Dope;"}, {"sha": "de14bf741570f8a2beb26a20bd766f3f6d1162ca", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb50998584eda9bbd3377d3dca6a8d264d6c4891/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb50998584eda9bbd3377d3dca6a8d264d6c4891/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=cb50998584eda9bbd3377d3dca6a8d264d6c4891", "patch": "@@ -39,9 +39,9 @@\n --  2s-complement. If there are any machines for which this is not a correct\n --  assumption, a significant number of changes will be required.\n \n+with Ada.Unchecked_Deallocation;\n with System;\n with Unchecked_Conversion;\n-with Unchecked_Deallocation;\n \n package Types is\n    pragma Preelaborate;\n@@ -117,7 +117,7 @@ package Types is\n    type String_Ptr_Const is access constant String;\n    --  Standard character and string pointers\n \n-   procedure Free is new Unchecked_Deallocation (String, String_Ptr);\n+   procedure Free is new Ada.Unchecked_Deallocation (String, String_Ptr);\n    --  Procedure for freeing dynamically allocated String values\n \n    subtype Big_String is String (Positive);\n@@ -155,7 +155,8 @@ package Types is\n    --  Text buffers for input files are allocated dynamically and this type\n    --  is used to reference these text buffers.\n \n-   procedure Free is new Unchecked_Deallocation (Text_Buffer, Text_Buffer_Ptr);\n+   procedure Free is\n+     new Ada.Unchecked_Deallocation (Text_Buffer, Text_Buffer_Ptr);\n    --  Procedure for freeing dynamically allocated text buffers\n \n    ------------------------------------------"}, {"sha": "3cb7bcb8469ee9ed72e81a67f2497af0170d0804", "filename": "gcc/ada/xref_lib.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb50998584eda9bbd3377d3dca6a8d264d6c4891/gcc%2Fada%2Fxref_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb50998584eda9bbd3377d3dca6a8d264d6c4891/gcc%2Fada%2Fxref_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxref_lib.adb?ref=cb50998584eda9bbd3377d3dca6a8d264d6c4891", "patch": "@@ -29,10 +29,9 @@ with Osint;\n with Output; use Output;\n with Types;  use Types;\n \n-with Unchecked_Deallocation;\n-\n with Ada.Strings.Fixed; use Ada.Strings.Fixed;\n with Ada.Text_IO;\n+with Ada.Unchecked_Deallocation;\n \n with GNAT.Command_Line; use GNAT.Command_Line;\n with GNAT.IO_Aux;       use GNAT.IO_Aux;\n@@ -1718,7 +1717,7 @@ package body Xref_Lib is\n       Type_Tree     : Boolean)\n    is\n       type String_Access is access String;\n-      procedure Free is new Unchecked_Deallocation (String, String_Access);\n+      procedure Free is new Ada.Unchecked_Deallocation (String, String_Access);\n \n       ALIfile   : ALI_File;\n       File_Ref  : File_Reference;"}]}