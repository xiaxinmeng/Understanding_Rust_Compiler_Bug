{"sha": "ee2ba85639333f03774668c5a4b25d7ae08b1036", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUyYmE4NTYzOTMzM2YwMzc3NDY2OGM1YTRiMjVkN2FlMDhiMTAzNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-11-06T11:28:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-11-06T11:28:27Z"}, "message": "[multiple changes]\n\n2012-11-06  Tristan Gingold  <gingold@adacore.com>\n\n\t* sem_ch9.adb (Analyze_Protected_Type_Declaration): Fix thinko\n\tin previous commit.\n\n2012-11-06  Jose Ruiz  <ruiz@adacore.com>\n\n\t* ali.adb (Scan_ALI): Fix parsing mechanism for -fstack-check.\n\n2012-11-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* atree.adb, atree.ads, einfo.adb, errout.adb, errout.ads, erroutc.adb,\n\terroutc.ads, errutil.adb, errutil.ads, err_vars.ads, expander.adb,\n\texp_ch13.adb, exp_ch2.adb, exp_ch6.adb, exp_dist.adb, fe.h,\n\tfmap.adb, fmap.ads, gprep.adb, makeutl.adb, osint.adb, osint.ads,\n\tpar_sco.adb, prepcomp.adb, prj-part.adb, prj-proc.adb, scng.adb,\n\tsdefault.ads, sem_ch10.adb, sem_ch13.adb, sem_ch2.adb, sem_ch3.adb,\n\tsem_ch4.adb, sem_ch5.adb, sem_dim.adb, sem_elab.adb, sem_eval.adb,\n\tsem_intr.adb, sem_prag.adb, sem_type.adb, sem_warn.adb, stylesw.adb,\n\tstylesw.ads, targparm.adb, targparm.ads (Cascaded_Error): Rename to\n\tmore descriptive name 'Check_Error_Detected'. Add calls to\n\tCheck_Error_Detected at places where semantic analysis is abandoned\n\tassuming a previously detected error.\n\nFrom-SVN: r193235", "tree": {"sha": "95877e8f8a857b54830ea0e9deb7b9bda9226731", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95877e8f8a857b54830ea0e9deb7b9bda9226731"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee2ba85639333f03774668c5a4b25d7ae08b1036", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee2ba85639333f03774668c5a4b25d7ae08b1036", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee2ba85639333f03774668c5a4b25d7ae08b1036", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee2ba85639333f03774668c5a4b25d7ae08b1036/comments", "author": null, "committer": null, "parents": [{"sha": "d8192289b58f8a5fe8f68a50dd88db45c81f9afc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8192289b58f8a5fe8f68a50dd88db45c81f9afc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8192289b58f8a5fe8f68a50dd88db45c81f9afc"}], "stats": {"total": 281, "additions": 160, "deletions": 121}, "files": [{"sha": "379a4a156bffcbfc714f490b0c5afd6c6f64be2a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -1,3 +1,27 @@\n+2012-11-06  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* sem_ch9.adb (Analyze_Protected_Type_Declaration): Fix thinko\n+\tin previous commit.\n+\n+2012-11-06  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* ali.adb (Scan_ALI): Fix parsing mechanism for -fstack-check.\n+\n+2012-11-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* atree.adb, atree.ads, einfo.adb, errout.adb, errout.ads, erroutc.adb,\n+\terroutc.ads, errutil.adb, errutil.ads, err_vars.ads, expander.adb,\n+\texp_ch13.adb, exp_ch2.adb, exp_ch6.adb, exp_dist.adb, fe.h,\n+\tfmap.adb, fmap.ads, gprep.adb, makeutl.adb, osint.adb, osint.ads,\n+\tpar_sco.adb, prepcomp.adb, prj-part.adb, prj-proc.adb, scng.adb,\n+\tsdefault.ads, sem_ch10.adb, sem_ch13.adb, sem_ch2.adb, sem_ch3.adb,\n+\tsem_ch4.adb, sem_ch5.adb, sem_dim.adb, sem_elab.adb, sem_eval.adb,\n+\tsem_intr.adb, sem_prag.adb, sem_type.adb, sem_warn.adb, stylesw.adb,\n+\tstylesw.ads, targparm.adb, targparm.ads (Cascaded_Error): Rename to\n+\tmore descriptive name 'Check_Error_Detected'. Add calls to\n+\tCheck_Error_Detected at places where semantic analysis is abandoned\n+\tassuming a previously detected error.\n+\n 2012-11-06  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch4.adb: Minor comment change."}, {"sha": "0386c05fe5a2aa6e747e7cfe8f7591b8e6c1ede9", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -970,9 +970,16 @@ package body ALI is\n                Add_Char_To_Name_Buffer (Getc);\n             end loop;\n \n-            --  If -fstack-check, record that it occurred\n-\n-            if Name_Buffer (1 .. Name_Len) = \"-fstack-check\" then\n+            --  If -fstack-check, record that it occurred. Note that an\n+            --  additional string parameter can be specified, in the form of\n+            --  -fstack-check={no|generic|specific}. \"no\" means no checking,\n+            --  \"generic\" means force the use of old-style checking, and\n+            --  \"specific\" means use the best checking method.\n+\n+            if Name_Len >= 13\n+              and then Name_Buffer (1 .. 13) = \"-fstack-check\"\n+              and then Name_Buffer (1 .. Name_Len) /= \"-fstack-check=no\"\n+            then\n                Stack_Check_Switch_Set := True;\n             end if;\n "}, {"sha": "70dd3801e5cdef99ec4ff7d4cf477a4f0764a527", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -560,6 +560,20 @@ package body Atree is\n           (Nodes.Table (E + 2).Field12'Unrestricted_Access)).Convention := Val;\n    end Basic_Set_Convention;\n \n+   --------------------------\n+   -- Check_Error_Detected --\n+   --------------------------\n+\n+   procedure Check_Error_Detected is\n+   begin\n+      --  An anomaly has been detected which is assumed to be a consequence of\n+      --  a previous error. Raise an exception if no error found previously.\n+\n+      if Total_Errors_Detected = 0 then\n+         raise Program_Error;\n+      end if;\n+   end Check_Error_Detected;\n+\n    -----------------\n    -- Change_Node --\n    -----------------"}, {"sha": "0829d4da454acfff9bcb4d30a4de88e76172824c", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -276,6 +276,36 @@ package Atree is\n    Current_Error_Node : Node_Id;\n    --  Node to place error messages\n \n+   ------------------\n+   -- Error Counts --\n+   ------------------\n+\n+   --  The following variables denote the count of errors of various kinds\n+   --  detected in the tree.\n+\n+   Serious_Errors_Detected : Nat := 0;\n+   --  This is a count of errors that are serious enough to stop expansion,\n+   --  and hence to prevent generation of an object file even if the\n+   --  switch -gnatQ is set. Initialized to zero at the start of compilation.\n+   --  Initialized for -gnatVa use, see comment above.\n+\n+   Total_Errors_Detected : Nat := 0;\n+   --  Number of errors detected so far. Includes count of serious errors and\n+   --  non-serious errors, so this value is always greater than or equal to the\n+   --  Serious_Errors_Detected value. Initialized to zero at the start of\n+   --  compilation. Initialized for -gnatVa use, see comment above.\n+\n+   Warnings_Detected : Nat := 0;\n+   --  Number of warnings detected. Initialized to zero at the start of\n+   --  compilation. Initialized for -gnatVa use, see comment above.\n+\n+   procedure Check_Error_Detected;\n+   --  When an anomaly is found in the tree, many semantic routines silently\n+   --  bail out, assuming that the anomaly was caused by a previously detected\n+   --  error. This routine should be called in these cases, and will raise an\n+   --  exception if no error has been detected. This ensure that the anomaly\n+   --  is never allowed to go unnoticed.\n+\n    -------------------------------\n    -- Default Setting of Fields --\n    -------------------------------"}, {"sha": "212849791fb836abc5aa4e7d78a3720d8cdefa52", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -33,7 +33,6 @@ pragma Style_Checks (All_Checks);\n --  Turn off subprogram ordering, not used for this unit\n \n with Atree;  use Atree;\n-with Errout; use Errout;\n with Namet;  use Namet;\n with Nlists; use Nlists;\n with Output; use Output;\n@@ -6981,7 +6980,7 @@ package body Einfo is\n             --  previous errors.\n \n             elsif No (Etyp) then\n-               Cascaded_Error;\n+               Check_Error_Detected;\n                return T;\n \n             elsif Is_Private_Type (T) and then Etyp = Full_View (T) then"}, {"sha": "58355cc5ff293c6b291fc6c43850d01398fdbf0b", "filename": "gcc/ada/err_vars.ads", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ferr_vars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ferr_vars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferr_vars.ads?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,26 +38,6 @@ package Err_Vars is\n    --  been initialized, so we initialize some variables to avoid exceptions\n    --  from invalid values in such cases.\n \n-   ------------------\n-   -- Error Counts --\n-   ------------------\n-\n-   Serious_Errors_Detected : Nat := 0;\n-   --  This is a count of errors that are serious enough to stop expansion,\n-   --  and hence to prevent generation of an object file even if the\n-   --  switch -gnatQ is set. Initialized to zero at the start of compilation.\n-   --  Initialized for -gnatVa use, see comment above.\n-\n-   Total_Errors_Detected : Nat := 0;\n-   --  Number of errors detected so far. Includes count of serious errors and\n-   --  non-serious errors, so this value is always greater than or equal to the\n-   --  Serious_Errors_Detected value. Initialized to zero at the start of\n-   --  compilation. Initialized for -gnatVa use, see comment above.\n-\n-   Warnings_Detected : Nat := 0;\n-   --  Number of warnings detected. Initialized to zero at the start of\n-   --  compilation. Initialized for -gnatVa use, see comment above.\n-\n    ----------------------------------\n    -- Error Message Mode Variables --\n    ----------------------------------"}, {"sha": "6f450200ef952e19e9b844e6f8230f45ce1e88df", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -18,10 +18,6 @@\n -- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n -- http://www.gnu.org/licenses for a complete copy of the license.          --\n --                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n -- GNAT was originally developed  by the GNAT team at  New York University. --\n -- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n@@ -202,20 +198,6 @@ package body Errout is\n    --  spec for precise definition of the conversion that is performed by this\n    --  routine in OpenVMS mode.\n \n-   --------------------\n-   -- Cascaded_Error --\n-   --------------------\n-\n-   procedure Cascaded_Error is\n-   begin\n-      --  An anomaly has been detected which is assumed to be a consequence of\n-      --  a previous error. Raise an exception if no error found previously.\n-\n-      if Total_Errors_Detected = 0 then\n-         raise Program_Error;\n-      end if;\n-   end Cascaded_Error;\n-\n    -----------------------\n    -- Change_Error_Text --\n    -----------------------"}, {"sha": "2c6ab7d4ddd6e16ef10368d1c513acebe9bea855", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -39,19 +39,6 @@ with System;\n \n package Errout is\n \n-   Serious_Errors_Detected : Nat renames Err_Vars.Serious_Errors_Detected;\n-   --  This is a count of errors that are serious enough to stop expansion,\n-   --  and hence to prevent generation of an object file even if the switch\n-   --  -gnatQ is set.\n-\n-   Total_Errors_Detected : Nat renames Err_Vars.Total_Errors_Detected;\n-   --  Number of errors detected so far. Includes count of serious errors and\n-   --  non-serious errors, so this value is always greater than or equal to\n-   --  the Serious_Errors_Detected value.\n-\n-   Warnings_Detected : Nat renames Err_Vars.Warnings_Detected;\n-   --  Number of warnings detected\n-\n    Configurable_Run_Time_Violations : Nat := 0;\n    --  Count of configurable run time violations so far. This is used to\n    --  suppress certain cascaded error messages when we know that we may not\n@@ -727,13 +714,6 @@ package Errout is\n    --  This routine can only be called during semantic analysis. It may not\n    --  be called during parsing.\n \n-   procedure Cascaded_Error;\n-   --  When an anomaly is detected, many semantic routines silently bail out,\n-   --  assuming that the anomaly was caused by a previously detected error.\n-   --  This routine should be called in these cases, and will raise an\n-   --  exception if no serious error has been detected. This ensure that the\n-   --  anomaly is never allowed to go unnoticed.\n-\n    procedure Change_Error_Text (Error_Id : Error_Msg_Id; New_Msg : String);\n    --  The error message text of the message identified by Id is replaced by\n    --  the given text. This text may contain insertion characters in the"}, {"sha": "56a4e3547fb5805a18b65f1dd326ce3f4180d33a", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,6 +29,7 @@\n --  environment, and that in particular, no disallowed table expansion is\n --  allowed to occur.\n \n+with Atree;    use Atree;\n with Casing;   use Casing;\n with Debug;    use Debug;\n with Err_Vars; use Err_Vars;"}, {"sha": "fc5cfa9fc216a8dd29151d6402cfbca45998db20", "filename": "gcc/ada/erroutc.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ferroutc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ferroutc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.ads?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "d6fa960a7a48c8dc39e4d51ecba3fcb46495438f", "filename": "gcc/ada/errutil.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ferrutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ferrutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1991-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1991-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Atree;    use Atree;\n with Err_Vars; use Err_Vars;\n with Erroutc;  use Erroutc;\n with Namet;    use Namet;"}, {"sha": "fa6ad53b19d5d5747ef627d46b8ab3ed013dc612", "filename": "gcc/ada/errutil.ads", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ferrutil.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ferrutil.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.ads?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,9 +26,7 @@\n --  This package contains routines to output error messages and the\n --  corresponding instantiation of Styleg, suitable to instantiate Scng.\n \n---  It is not dependent on the GNAT tree packages (Atree, Sinfo, ...)\n-\n---  It uses the same global variables as Errout, located in package\n+--  It uses the same global variables as Errout, located in packages Atree and\n --  Err_Vars. Like Errout, it also uses the common variables and routines\n --  in package Erroutc.\n "}, {"sha": "141e144ab5bec220d45f7e258250a452490e32b2", "filename": "gcc/ada/exp_ch13.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fexp_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fexp_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch13.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -379,6 +379,7 @@ package body Exp_Ch13 is\n       --  This is an error protection against previous errors\n \n       if No (E_Scope) then\n+         Check_Error_Detected;\n          return;\n       end if;\n "}, {"sha": "b93f832441ca367cd837616c17cf46894d993009", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -28,7 +28,6 @@ with Checks;   use Checks;\n with Debug;    use Debug;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n-with Errout;   use Errout;\n with Exp_Smem; use Exp_Smem;\n with Exp_Tss;  use Exp_Tss;\n with Exp_Util; use Exp_Util;\n@@ -341,7 +340,8 @@ package body Exp_Ch2 is\n    begin\n       --  Defend against errors\n \n-      if No (E) and then Total_Errors_Detected /= 0 then\n+      if No (E) then\n+         Check_Error_Detected;\n          return;\n       end if;\n "}, {"sha": "c3cf8c8e70b9f6f8694cc71ded6f61cf94fbdc2d", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -6227,6 +6227,7 @@ package body Exp_Ch6 is\n       if Present (Expression (N))\n         and then Nkind (Expression (N)) = N_Empty\n       then\n+         Check_Error_Detected;\n          return;\n       end if;\n "}, {"sha": "c2396c1e568218fb327b12e37107e9ea6ed48e64", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -26,7 +26,6 @@\n with Atree;    use Atree;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n-with Errout;   use Errout;\n with Exp_Atag; use Exp_Atag;\n with Exp_Disp; use Exp_Disp;\n with Exp_Strm; use Exp_Strm;"}, {"sha": "83a692067cf2ce9bd1702865d41c5e2468984959", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -25,7 +25,6 @@\n \n with Atree;    use Atree;\n with Debug_A;  use Debug_A;\n-with Errout;   use Errout;\n with Exp_Aggr; use Exp_Aggr;\n with Exp_Alfa; use Exp_Alfa;\n with Exp_Attr; use Exp_Attr;"}, {"sha": "fe52233202bc7c11e3c0181dff90f29e682f8665", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -80,6 +80,10 @@ extern Boolean Is_Entity_Name\t\t(Node_Id);\n #define Get_Attribute_Definition_Clause einfo__get_attribute_definition_clause\n extern Node_Id Get_Attribute_Definition_Clause (Entity_Id, char);\n \n+/* atree: */\n+\n+#define Serious_Errors_Detected atree__serious_errors_detected\n+\n /* errout: */\n \n #define Error_Msg_N               errout__error_msg_n\n@@ -95,7 +99,6 @@ extern void Set_Identifier_Casing (Char *, const Char *);\n #define Error_Msg_Node_2        err_vars__error_msg_node_2\n #define Error_Msg_Uint_1        err_vars__error_msg_uint_1\n #define Error_Msg_Uint_2        err_vars__error_msg_uint_2\n-#define Serious_Errors_Detected err_vars__serious_errors_detected\n \n extern Entity_Id Error_Msg_Node_2;\n extern Uint      Error_Msg_Uint_1;"}, {"sha": "f5432096e28f92508f95071facd21d924259226a", "filename": "gcc/ada/fmap.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ffmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ffmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "19aa0693ef505dc31669d21d70b575d11396b0cc", "filename": "gcc/ada/fmap.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ffmap.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Ffmap.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.ads?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "8eb1465bff47e3a88a7be139ee81d6c97214adca", "filename": "gcc/ada/gprep.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fgprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fgprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgprep.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -23,8 +23,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Atree;    use Atree;\n with Csets;\n-with Err_Vars; use Err_Vars;\n with Errutil;\n with Namet;    use Namet;\n with Opt;\n@@ -524,13 +524,13 @@ package body GPrep is\n \n          --  In verbose mode, if there is no error, report it\n \n-         if Opt.Verbose_Mode and then Err_Vars.Total_Errors_Detected = 0 then\n+         if Opt.Verbose_Mode and then Total_Errors_Detected = 0 then\n             Errutil.Finalize (Source_Type => \"input\");\n          end if;\n \n          --  If we had some errors, delete the output file, and report them\n \n-         if Err_Vars.Total_Errors_Detected > 0 then\n+         if Total_Errors_Detected > 0 then\n             if Outfile /= Standard_Output then\n                Delete (Text_Outfile);\n             end if;"}, {"sha": "b2a6d53bb48865d0a7c30a78c3c5041259aba33a", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -24,6 +24,7 @@\n ------------------------------------------------------------------------------\n \n with ALI;      use ALI;\n+with Atree;    use Atree;\n with Debug;\n with Err_Vars; use Err_Vars;\n with Errutil;"}, {"sha": "2fdd6c5e8e9203adac8579391557bea3d8dd10fb", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -969,7 +969,7 @@ package body Par_SCO is\n       --  The test here for zero is to deal with possible previous errors\n \n       if Index = 0 then\n-         Cascaded_Error;\n+         Check_Error_Detected;\n \n       else\n          declare"}, {"sha": "2cc1c5e684f6a7c2c52dd1013f006fec2e4acfca", "filename": "gcc/ada/prepcomp.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fprepcomp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fprepcomp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprepcomp.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Atree;    use Atree;\n with Errout;   use Errout;\n with Lib.Writ; use Lib.Writ;\n with Opt;      use Opt;"}, {"sha": "5d09dbe6010bb820681c3c954fa780eda9b84b64", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Atree;    use Atree;\n with Err_Vars; use Err_Vars;\n with Opt;      use Opt;\n with Osint;    use Osint;\n@@ -690,7 +691,7 @@ package body Prj.Part is\n       --  If there were any kind of error during the parsing, serious\n       --  or not, then the parsing fails.\n \n-      if Err_Vars.Total_Errors_Detected > 0 then\n+      if Total_Errors_Detected > 0 then\n          Project := Empty_Node;\n       end if;\n "}, {"sha": "dc745fe5ca6e55864e062d802339a320c12bfe10", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Atree;    use Atree;\n with Err_Vars; use Err_Vars;\n with Opt;      use Opt;\n with Osint;    use Osint;\n@@ -2908,7 +2909,7 @@ package body Prj.Proc is\n \n             Process_Imported_Projects (Imported, Limited_With => True);\n \n-            if Err_Vars.Total_Errors_Detected = 0 then\n+            if Total_Errors_Detected = 0 then\n                Process_Aggregated_Projects;\n             end if;\n \n@@ -2938,7 +2939,7 @@ package body Prj.Proc is\n                   end loop;\n                end if;\n \n-               if Err_Vars.Total_Errors_Detected = 0 then\n+               if Total_Errors_Detected = 0 then\n \n                   --  For an aggregate library we add the aggregated projects\n                   --  as imported ones. This is necessary to give visibility"}, {"sha": "e27c91d14f2356bbc5d34067de5611692e104149", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -23,8 +23,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Atree;    use Atree;\n with Csets;    use Csets;\n-with Err_Vars; use Err_Vars;\n with Hostparm; use Hostparm;\n with Namet;    use Namet;\n with Opt;      use Opt;"}, {"sha": "492e7b74da99e813346bfbefdb56bdaa68449cce", "filename": "gcc/ada/sdefault.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsdefault.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsdefault.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsdefault.ads?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "2f203dc2e836ae77b382d55cb78f8e766480c64d", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -725,6 +725,7 @@ package body Sem_Ch10 is\n          --  ignore the entire analysis effort\n \n          if No (Lib_Unit) then\n+            Check_Error_Detected;\n             return;\n \n          else\n@@ -2677,7 +2678,7 @@ package body Sem_Ch10 is\n             --  Abandon processing in case of previous errors\n \n             if No (Par_Name) then\n-               pragma Assert (Serious_Errors_Detected /= 0);\n+               Check_Error_Detected;\n                return;\n             end if;\n          end loop;\n@@ -5105,7 +5106,7 @@ package body Sem_Ch10 is\n             --  Abandon processing in case of previous errors\n \n             if No (Scope (Uname)) then\n-               pragma Assert (Serious_Errors_Detected /= 0);\n+               Check_Error_Detected;\n                return;\n             end if;\n "}, {"sha": "cdddfa86e76362474adfb90d3b95abccef2e6cb9", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -7292,9 +7292,8 @@ package body Sem_Ch13 is\n          --  clause in question, then there was some previous error for which\n          --  we already gave a message, so just return with Comp Empty.\n \n-         if No (Comp)\n-           or else Component_Clause (Comp) /= CC\n-         then\n+         if No (Comp) or else Component_Clause (Comp) /= CC then\n+            Check_Error_Detected;\n             Comp := Empty;\n \n          --  Normal case where we have a component clause\n@@ -7897,15 +7896,22 @@ package body Sem_Ch13 is\n          end if;\n       end if;\n \n-      --  Dismiss cases for generic types or types with previous errors\n+      --  Dismiss generic types\n \n-      if No (UT)\n-        or else UT = Any_Type\n-        or else Is_Generic_Type (UT)\n-        or else Is_Generic_Type (Root_Type (UT))\n+      if Is_Generic_Type (T)\n+           or else\n+         Is_Generic_Type (UT)\n+           or else\n+         Is_Generic_Type (Root_Type (UT))\n       then\n          return;\n \n+      --  Guard against previous errors\n+\n+      elsif No (UT) or else UT = Any_Type then\n+         Check_Error_Detected;\n+         return;\n+\n       --  Check case of bit packed array\n \n       elsif Is_Array_Type (UT)"}, {"sha": "f20a518d4d2b43d7ef6e319927897d2ee54ab2fd", "filename": "gcc/ada/sem_ch2.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch2.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,7 +24,6 @@\n ------------------------------------------------------------------------------\n \n with Atree;    use Atree;\n-with Errout;   use Errout;\n with Namet;    use Namet;\n with Opt;      use Opt;\n with Restrict; use Restrict;"}, {"sha": "e6f76e29f1cb72c216f905e11086e323a2e1e190", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -12078,6 +12078,7 @@ package body Sem_Ch3 is\n       --  Defend against previous errors\n \n       if No (Scalar_Range (Derived_Type)) then\n+         Check_Error_Detected;\n          return;\n       end if;\n "}, {"sha": "10fd3863af2b14a1003766972827333655c8cb34", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -1921,6 +1921,7 @@ package body Sem_Ch4 is\n       --  Defend against error of missing expressions from previous error\n \n       if No (Then_Expr) then\n+         Check_Error_Detected;\n          return;\n       end if;\n \n@@ -3917,8 +3918,7 @@ package body Sem_Ch4 is\n          --  subsequent semantic checks might examine the original node.\n \n          Set_Entity (Sel, Comp);\n-         Rewrite (Selector_Name (N),\n-           New_Occurrence_Of (Comp, Sloc (N)));\n+         Rewrite (Selector_Name (N), New_Occurrence_Of (Comp, Sloc (N)));\n          Set_Original_Discriminant (Selector_Name (N), Comp);\n          Set_Etype (N, Etype (Comp));\n          Check_Implicit_Dereference (N, Etype (Comp));\n@@ -3930,9 +3930,9 @@ package body Sem_Ch4 is\n \n       elsif Is_Record_Type (Prefix_Type) then\n \n-         --  Find component with given name\n-         --  In an instance, if the node is known as a prefixed call, do\n-         --  not examine components whose visibility may be accidental.\n+         --  Find component with given name. In an instance, if the node is\n+         --  known as a prefixed call, do not examine components whose\n+         --  visibility may be accidental.\n \n          while Present (Comp) and then not Is_Prefixed_Call (N) loop\n             if Chars (Comp) = Chars (Sel)"}, {"sha": "bf1eceb4c2f5131edc9cd822f8301f1990c88495", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -898,6 +898,7 @@ package body Sem_Ch5 is\n       --  up, and we just return immediately (defence against previous errors).\n \n       if No (HSS) then\n+         Check_Error_Detected;\n          return;\n       end if;\n \n@@ -942,11 +943,8 @@ package body Sem_Ch5 is\n             --  identifier and continue, otherwise raise an exception.\n \n             if No (Ent) then\n-               if Total_Errors_Detected /= 0 then\n-                  Set_Identifier (N, Empty);\n-               else\n-                  raise Program_Error;\n-               end if;\n+               Check_Error_Detected;\n+               Set_Identifier (N, Empty);\n \n             else\n                Set_Ekind (Ent, E_Block);\n@@ -1398,6 +1396,7 @@ package body Sem_Ch5 is\n       --  Ignore previous error\n \n       if Label_Ent = Any_Id then\n+         Check_Error_Detected;\n          return;\n \n       --  We just have a label as the target of a goto"}, {"sha": "9b38f0072fbbe84d0811c284f29c38bf5a9b7b81", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -2094,7 +2094,9 @@ package body Sem_Ch9 is\n \n                --  Pragma case\n \n-               elsif Pragma_Name (Prio_Item) = Name_Priority then\n+               elsif Nkind (Prio_Item) = N_Pragma\n+                 and then Pragma_Name (Prio_Item) = Name_Priority\n+               then\n                   Error_Msg_N (\"?pragma Interrupt_Priority is preferred \"\n                                & \"in presence of handlers\", Prio_Item);\n                end if;"}, {"sha": "0e46efae9497bb76ab7ac2c82d3ad73c41c6b99b", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -1634,7 +1634,7 @@ package body Sem_Dim is\n             --  the call was aborted due to a previous error.\n \n             if No (Actual) then\n-               Cascaded_Error;\n+               Check_Error_Detected;\n                return;\n             end if;\n "}, {"sha": "6d88c966e1f7fd252a5bae34a1d3f6c0b1f184df", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -828,6 +828,7 @@ package body Sem_Elab is\n                --  If no alias, there is a previous error\n \n                if No (Ent) then\n+                  Check_Error_Detected;\n                   return;\n                end if;\n             end loop;"}, {"sha": "cf2a922f120efd5078b5ca33fc042a535876ce24", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -1294,10 +1294,13 @@ package body Sem_Eval is\n \n    begin\n       --  Never known at compile time if bad type or raises constraint error\n-      --  or empty (latter case occurs only as a result of a previous error)\n+      --  or empty (latter case occurs only as a result of a previous error).\n \n-      if No (Op)\n-        or else Op = Error\n+      if No (Op) then\n+         Check_Error_Detected;\n+         return False;\n+\n+      elsif Op = Error\n         or else Etype (Op) = Any_Type\n         or else Raises_Constraint_Error (Op)\n       then"}, {"sha": "93eb492473542398a481f41700ccffcfc9231fac", "filename": "gcc/ada/sem_intr.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_intr.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -271,7 +271,9 @@ package body Sem_Intr is\n          --  Return if previous error in declaration, otherwise get T2 type\n \n          if No (Next_Formal (First_Formal (E))) then\n+            Check_Error_Detected;\n             return;\n+\n          else\n             T2 := Etype (Next_Formal (First_Formal (E)));\n          end if;"}, {"sha": "ed9af8f11bf28cc0fd10008abf5627ffc82c7630", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -5059,7 +5059,7 @@ package body Sem_Prag is\n \n                   --  If previous error, avoid cascaded errors\n \n-                  Cascaded_Error;\n+                  Check_Error_Detected;\n                   Applies   := True;\n                   Effective := True;\n "}, {"sha": "41d9a62a9d50b15d2d4f2f1aea3c0a1ab43e4236", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -906,9 +906,10 @@ package body Sem_Type is\n             --  covers an object T2 that implements a direct derivation of T1.\n             --  Note: test for presence of E is defense against previous error.\n \n-            if Present (E)\n-              and then Present (Interfaces (E))\n-            then\n+            if No (E) then\n+               Check_Error_Detected;\n+\n+            elsif Present (Interfaces (E)) then\n                Elmt := First_Elmt (Interfaces (E));\n                while Present (Elmt) loop\n                   if Is_Ancestor (Etype (T1), Node (Elmt)) then"}, {"sha": "53ad6312daad41bce2ce26ee580200b5288ffcf6", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -619,6 +619,7 @@ package body Sem_Warn is\n          if No (Entity (Ident))\n            or else Ekind (Entity (Ident)) /= E_Loop\n          then\n+            Check_Error_Detected;\n             return;\n          end if;\n \n@@ -3317,7 +3318,7 @@ package body Sem_Warn is\n                       or else\n                     Denotes_Same_Prefix (Act1, Act2))\n                then\n-                  --  Exclude generic types and guard against previous errors.\n+                  --  Exclude generic types and guard against previous errors\n \n                   if Error_Posted (N)\n                     or else No (Etype (Act1))"}, {"sha": "886043bd8c398a4a8b17eb5ba2d03204f7800dc2", "filename": "gcc/ada/stylesw.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fstylesw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2ba85639333f03774668c5a4b25d7ae08b1036/gcc%2Fada%2Fstylesw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstylesw.adb?ref=ee2ba85639333f03774668c5a4b25d7ae08b1036", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}]}