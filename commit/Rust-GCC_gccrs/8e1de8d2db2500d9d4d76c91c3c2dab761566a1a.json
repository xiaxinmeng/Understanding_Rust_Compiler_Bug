{"sha": "8e1de8d2db2500d9d4d76c91c3c2dab761566a1a", "node_id": "C_kwDOANBUbNoAKDhlMWRlOGQyZGIyNTAwZDlkNGQ3NmM5MWMzYzJkYWI3NjE1NjZhMWE", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-01T20:25:52Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-03T11:06:25Z"}, "message": "Do not compare nonzero masks for varying.\n\nThere is no need to compare nonzero masks when comparing two VARYING\nranges, as they are always the same when range types are the same.\n\ngcc/ChangeLog:\n\n\t* value-range.cc (irange::legacy_equal_p): Remove nonozero mask\n\tcheck when comparing VR_VARYING ranges.", "tree": {"sha": "1c382c19460d4123d7da23e00295965210fd7c58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c382c19460d4123d7da23e00295965210fd7c58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e1de8d2db2500d9d4d76c91c3c2dab761566a1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1de8d2db2500d9d4d76c91c3c2dab761566a1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e1de8d2db2500d9d4d76c91c3c2dab761566a1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1de8d2db2500d9d4d76c91c3c2dab761566a1a/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b90d1b50867d7c0468e1851f24bc33fe338bcc20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b90d1b50867d7c0468e1851f24bc33fe338bcc20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b90d1b50867d7c0468e1851f24bc33fe338bcc20"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "ddbcdd67633171d59a048d55ba6bf11c02040822", "filename": "gcc/value-range.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1de8d2db2500d9d4d76c91c3c2dab761566a1a/gcc%2Fvalue-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1de8d2db2500d9d4d76c91c3c2dab761566a1a/gcc%2Fvalue-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.cc?ref=8e1de8d2db2500d9d4d76c91c3c2dab761566a1a", "patch": "@@ -1233,10 +1233,7 @@ irange::legacy_equal_p (const irange &other) const\n   if (m_kind == VR_UNDEFINED)\n     return true;\n   if (m_kind == VR_VARYING)\n-    {\n-      return (range_compatible_p (type (), other.type ())\n-\t      && vrp_operand_equal_p (m_nonzero_mask, other.m_nonzero_mask));\n-    }\n+    return range_compatible_p (type (), other.type ());\n   return (vrp_operand_equal_p (tree_lower_bound (0),\n \t\t\t       other.tree_lower_bound (0))\n \t  && vrp_operand_equal_p (tree_upper_bound (0),"}]}