{"sha": "8cda97ab52eae061d34167a1f786b43a21e7521b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNkYTk3YWI1MmVhZTA2MWQzNDE2N2ExZjc4NmI0M2EyMWU3NTIxYg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-02-28T01:39:03Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-02-28T01:39:03Z"}, "message": "runtime: update AIX memory allocation for new versions\n    \n    Reviewed-on: https://go-review.googlesource.com/97357\n\nFrom-SVN: r258052", "tree": {"sha": "1c07855b97c253e5be40eeb767b23262df57483a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c07855b97c253e5be40eeb767b23262df57483a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cda97ab52eae061d34167a1f786b43a21e7521b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cda97ab52eae061d34167a1f786b43a21e7521b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cda97ab52eae061d34167a1f786b43a21e7521b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cda97ab52eae061d34167a1f786b43a21e7521b/comments", "author": null, "committer": null, "parents": [{"sha": "930540ca89c63a3b744e652af14f60169401c8df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/930540ca89c63a3b744e652af14f60169401c8df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/930540ca89c63a3b744e652af14f60169401c8df"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "f23eef874fd1c6dce6e8b581f2613e176f60966f", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cda97ab52eae061d34167a1f786b43a21e7521b/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cda97ab52eae061d34167a1f786b43a21e7521b/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=8cda97ab52eae061d34167a1f786b43a21e7521b", "patch": "@@ -1,4 +1,4 @@\n-bd7fc3c85d874344b18bbb0a738ec94dfb43794b\n+821960465883fbdd96568f2325f55ee4b05de1cb\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "1405a54639c72c623effd989f2fc11d798b032f3", "filename": "libgo/go/runtime/malloc.go", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cda97ab52eae061d34167a1f786b43a21e7521b/libgo%2Fgo%2Fruntime%2Fmalloc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cda97ab52eae061d34167a1f786b43a21e7521b/libgo%2Fgo%2Fruntime%2Fmalloc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fmalloc.go?ref=8cda97ab52eae061d34167a1f786b43a21e7521b", "patch": "@@ -296,8 +296,8 @@ func mallocinit() {\n \t\t// allocation at 0x40 << 32 because when using 4k pages with 3-level\n \t\t// translation buffers, the user address space is limited to 39 bits\n \t\t// On darwin/arm64, the address space is even smaller.\n-\t\t// On AIX, mmap adresses range start at 0x07000000_00000000 for 64 bits\n-\t\t// processes.\n+\t\t// On AIX, mmap adresses range starts at 0x0700000000000000 for 64-bit\n+\t\t// processes. The new address space allocator starts at 0x0A00000000000000.\n \t\tarenaSize := round(_MaxMem, _PageSize)\n \t\tpSize = bitmapSize + spansSize + arenaSize + _PageSize\n \t\tfor i := 0; i <= 0x7f; i++ {\n@@ -307,13 +307,16 @@ func mallocinit() {\n \t\t\tcase GOARCH == \"arm64\":\n \t\t\t\tp = uintptr(i)<<40 | uintptrMask&(0x0040<<32)\n \t\t\tcase GOOS == \"aix\":\n-\t\t\t\ti = 1\n-\t\t\t\tp = uintptr(i)<<32 | uintptrMask&(0x70<<52)\n+\t\t\t\tif i == 0 {\n+\t\t\t\t\tp = uintptrMask&(1<<32) | uintptrMask&(0xa0<<52)\n+\t\t\t\t} else {\n+\t\t\t\t\tp = uintptr(i)<<32 | uintptrMask&(0x70<<52)\n+\t\t\t\t}\n \t\t\tdefault:\n \t\t\t\tp = uintptr(i)<<40 | uintptrMask&(0x00c0<<32)\n \t\t\t}\n \t\t\tp = uintptr(sysReserve(unsafe.Pointer(p), pSize, &reserved))\n-\t\t\tif p != 0 || GOOS == \"aix\" { // Useless to loop on AIX, as i is forced to 1\n+\t\t\tif p != 0 {\n \t\t\t\tbreak\n \t\t\t}\n \t\t}"}]}