{"sha": "c2dc9fb66147830f1ca83206543bbef7f3966a40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJkYzlmYjY2MTQ3ODMwZjFjYTgzMjA2NTQzYmJlZjdmMzk2NmE0MA==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-11-18T14:52:55Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-12-14T15:51:50Z"}, "message": "[Ada] Simplify prevention of cascaded errors for Refined_State\n\ngcc/ada/\n\n\t* sem_prag.adb (Analyze_Refinement_Clause): Simplify recently\n\tadded code for preventing cascaded errors.", "tree": {"sha": "1d7b1dc7d76bc312d6230eeea0d44bf7fda47e32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d7b1dc7d76bc312d6230eeea0d44bf7fda47e32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2dc9fb66147830f1ca83206543bbef7f3966a40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2dc9fb66147830f1ca83206543bbef7f3966a40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2dc9fb66147830f1ca83206543bbef7f3966a40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2dc9fb66147830f1ca83206543bbef7f3966a40/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c40c60ecb32a2200c3a4087521b9f35cc08763e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c40c60ecb32a2200c3a4087521b9f35cc08763e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c40c60ecb32a2200c3a4087521b9f35cc08763e"}], "stats": {"total": 27, "additions": 11, "deletions": 16}, "files": [{"sha": "1ffe513e9a4c7010eb17caa53bda08141aab6be3", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2dc9fb66147830f1ca83206543bbef7f3966a40/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2dc9fb66147830f1ca83206543bbef7f3966a40/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=c2dc9fb66147830f1ca83206543bbef7f3966a40", "patch": "@@ -28978,24 +28978,19 @@ package body Sem_Prag is\n \n          Report_Unused_Constituents (Part_Of_Constits);\n \n-         --  Avoid a cascading error reporting a missing refinement by adding\n-         --  State_Id as dummy constituent of itself.\n+         --  Avoid a cascading error reporting a missing refinement by adding a\n+         --  dummy constituent.\n \n-         if Non_Null_Seen\n-           and then not Has_Non_Null_Refinement (State_Id)\n-         then\n-            declare\n-               Constits : Elist_Id := Refinement_Constituents (State_Id);\n-            begin\n-               if No (Constits) then\n-                  Constits := New_Elmt_List;\n-                  Set_Refinement_Constituents (State_Id, Constits);\n-               end if;\n-\n-               Append_Elmt (State_Id, Constits);\n-               Set_Encapsulating_State (State_Id, State_Id);\n-            end;\n+         if No (Refinement_Constituents (State_Id)) then\n+            Set_Refinement_Constituents (State_Id, New_Elmt_List (Any_Id));\n          end if;\n+\n+         --  At this point the refinement might be dummy, but must be\n+         --  well-formed, to prevent cascaded errors.\n+\n+         pragma Assert (Has_Null_Refinement (State_Id)\n+                          xor\n+                        Has_Non_Null_Refinement (State_Id));\n       end Analyze_Refinement_Clause;\n \n       -----------------------------"}]}