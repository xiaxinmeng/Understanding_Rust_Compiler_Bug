{"sha": "ed97aa662b866f3f17e09f52740ad3acfe1cebe5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ5N2FhNjYyYjg2NmYzZjE3ZTA5ZjUyNzQwYWQzYWNmZTFjZWJlNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-03-08T07:32:36Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-03-08T07:32:36Z"}, "message": "re PR middle-end/7796 (sparc-sun-solaris2.7 extra failure w/-m64 on execute/930921-1.c in unroll.c)\n\n\tPR middle-end/7796\n\t* unroll.c (calculate_giv_inc): Handle constants being\n\tloaded with LSHIFTRT.\n\nFrom-SVN: r63971", "tree": {"sha": "22d7ada44abb7cd413b8b1e8ea59251eecd98a92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22d7ada44abb7cd413b8b1e8ea59251eecd98a92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed97aa662b866f3f17e09f52740ad3acfe1cebe5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed97aa662b866f3f17e09f52740ad3acfe1cebe5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed97aa662b866f3f17e09f52740ad3acfe1cebe5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed97aa662b866f3f17e09f52740ad3acfe1cebe5/comments", "author": null, "committer": null, "parents": [{"sha": "611db4979acfdb330276ea03259b604ba4ef33df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/611db4979acfdb330276ea03259b604ba4ef33df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/611db4979acfdb330276ea03259b604ba4ef33df"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "663b3eb543043f43d9f74d439781c9e7a7ed75b7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed97aa662b866f3f17e09f52740ad3acfe1cebe5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed97aa662b866f3f17e09f52740ad3acfe1cebe5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed97aa662b866f3f17e09f52740ad3acfe1cebe5", "patch": "@@ -1,3 +1,9 @@\n+2003-03-08  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR middle-end/7796\n+\t* unroll.c (calculate_giv_inc): Handle constants being\n+\tloaded with LSHIFTRT.\n+\n 2003-03-07  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/rs6000.c (processor_target_table): Do not disable\n@@ -20,7 +26,7 @@\n \n 2003-03-07  James E Wilson  <wilson@tuliptree.org>\n \n-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0* config/sh/sh.h (HARD_REGNO_NREGS): Round up the XD register count.\n+\t* config/sh/sh.h (HARD_REGNO_NREGS): Round up the XD register count.\n \n 2003-03-07  Geoffrey Keating  <geoffk@apple.com>\n "}, {"sha": "3b5dd7c91f8c1eeccea8a5d75ccf86d2fe91b995", "filename": "gcc/unroll.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed97aa662b866f3f17e09f52740ad3acfe1cebe5/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed97aa662b866f3f17e09f52740ad3acfe1cebe5/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=ed97aa662b866f3f17e09f52740ad3acfe1cebe5", "patch": "@@ -1624,11 +1624,13 @@ calculate_giv_inc (pattern, src_insn, regno)\n \t}\n \n       else if (GET_CODE (increment) == IOR\n+\t       || GET_CODE (increment) == PLUS\n \t       || GET_CODE (increment) == ASHIFT\n-\t       || GET_CODE (increment) == PLUS)\n+\t       || GET_CODE (increment) == LSHIFTRT)\n \t{\n \t  /* The rs6000 port loads some constants with IOR.\n-\t     The alpha port loads some constants with ASHIFT and PLUS.  */\n+\t     The alpha port loads some constants with ASHIFT and PLUS.\n+\t     The sparc64 port loads some constants with LSHIFTRT.  */\n \t  rtx second_part = XEXP (increment, 1);\n \t  enum rtx_code code = GET_CODE (increment);\n \n@@ -1645,8 +1647,10 @@ calculate_giv_inc (pattern, src_insn, regno)\n \t    increment = GEN_INT (INTVAL (increment) | INTVAL (second_part));\n \t  else if (code == PLUS)\n \t    increment = GEN_INT (INTVAL (increment) + INTVAL (second_part));\n-\t  else\n+\t  else if (code == ASHIFT)\n \t    increment = GEN_INT (INTVAL (increment) << INTVAL (second_part));\n+\t  else\n+\t    increment = GEN_INT ((unsigned HOST_WIDE_INT) INTVAL (increment) >> INTVAL (second_part));\n \t}\n \n       if (GET_CODE (increment) != CONST_INT)"}]}