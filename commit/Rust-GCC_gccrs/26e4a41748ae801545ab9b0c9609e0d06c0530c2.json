{"sha": "26e4a41748ae801545ab9b0c9609e0d06c0530c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZlNGE0MTc0OGFlODAxNTQ1YWI5YjBjOTYwOWUwZDA2YzA1MzBjMg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2010-08-20T19:23:52Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-08-20T19:23:52Z"}, "message": "re PR testsuite/45361 (gcc.target/i386/volatile-2.c failed)\n\n\tPR testsuite/45361\n\t* gcc.target/i386/volatile-2.c: Update scan strings to also\n\tinclude (%rip) for the memory reference on x86_64.\n\nFrom-SVN: r163416", "tree": {"sha": "5bdf12f926a1aac082713fd2cdec8c7e244142e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bdf12f926a1aac082713fd2cdec8c7e244142e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26e4a41748ae801545ab9b0c9609e0d06c0530c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26e4a41748ae801545ab9b0c9609e0d06c0530c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26e4a41748ae801545ab9b0c9609e0d06c0530c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26e4a41748ae801545ab9b0c9609e0d06c0530c2/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "994fc9abdde826d0b843b48e8ef1627295c3ae25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/994fc9abdde826d0b843b48e8ef1627295c3ae25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/994fc9abdde826d0b843b48e8ef1627295c3ae25"}], "stats": {"total": 47, "additions": 25, "deletions": 22}, "files": [{"sha": "022db4c40a39c597e0e35b248c262fe5ba95834c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26e4a41748ae801545ab9b0c9609e0d06c0530c2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26e4a41748ae801545ab9b0c9609e0d06c0530c2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=26e4a41748ae801545ab9b0c9609e0d06c0530c2", "patch": "@@ -1,3 +1,9 @@\n+2010-08-20  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR testsuite/45361\n+\t* gcc.target/i386/volatile-2.c: Update scan strings to also\n+\tinclude (%rip) for the memory reference on x86_64.\n+\n 2010-08-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/44974\n@@ -22,11 +28,8 @@\n 2010-08-19  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/init/synth3.C: New.\n-\n \t* g++.dg/init/value8.C: New.\n-\n \t* g++.dg/tree-ssa/empty-2.C: New.\n-\n \t* g++.dg/cpp0x/noexcept09.C: New.\n \n 2010-08-19  Daniel Kraft  <d@domob.eu>\n@@ -119,7 +122,7 @@\n \t(check_effective_target_function_sections): New.\n \t* gcc.dg/debug/dwarf2/aranges-fnsec-1.c: Check that the target supports\n \tfunction sections before proceding.\n-\t\n+\n 2010-08-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/45308"}, {"sha": "43851d124f68dfabf408b3abe2cc396f5ad7ef8b", "filename": "gcc/testsuite/gcc.target/i386/volatile-2.c", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26e4a41748ae801545ab9b0c9609e0d06c0530c2/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvolatile-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26e4a41748ae801545ab9b0c9609e0d06c0530c2/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvolatile-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvolatile-2.c?ref=26e4a41748ae801545ab9b0c9609e0d06c0530c2", "patch": "@@ -10,26 +10,26 @@ extern int volatile obj_0;\n void test_0 (int data)\n {\n   /* should not reread obj */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_0\" } } */\n-  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_0,\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_0(\\\\(%rip\\\\))?\" } } */\n+  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_0(\\\\(%rip\\\\))?,\" } } */\n   obj_0 = data;\n }\n \n extern int volatile obj_1;\n int test_1 (int data)\n {\n   /* should not reread obj */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_1\" } } */\n-  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_1,\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_1(\\\\(%rip\\\\))?\" } } */\n+  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_1(\\\\(%rip\\\\))?,\" } } */\n   return obj_1 = data;\n }\n \n extern int volatile obj_2;\n int test_2 (void)\n {\n   /* should not reread obj */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_2\" } } */\n-  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_2,\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_2(\\\\(%rip\\\\))?\" } } */\n+  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_2(\\\\(%rip\\\\))?,\" } } */\n   return obj_2 = 0;\n }\n \n@@ -40,25 +40,25 @@ extern int volatile obj_3;\n int test_3 (int data)\n {\n   /* should not reread obj */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_3\" } } */\n-  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_3,\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_3(\\\\(%rip\\\\))?\" } } */\n+  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_3(\\\\(%rip\\\\))?,\" } } */\n   return (obj_3 = data, 0);\n }\n \n extern int volatile obj_4;\n int test_4 (void)\n {\n   /* should not reread obj */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_4\" } } */\n-  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_4,\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_4(\\\\(%rip\\\\))?\" } } */\n+  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_4(\\\\(%rip\\\\))?,\" } } */\n   return (obj_4 = 0, 0);\n }\n extern int volatile obj_5;\n int test_5 (void)\n {\n   /* should reread obj */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_5\" } } */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]obj_5,\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_5(\\\\(%rip\\\\))?\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]obj_5(\\\\(%rip\\\\))?,\" } } */\n   return (obj_5 = 0, obj_5);\n }\n \n@@ -68,25 +68,25 @@ extern int volatile obj_6;\n void test_6 (int data, int cond)\n {\n   /* should not reread obj */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_6\" } } */\n-  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_6,\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_6(\\\\(%rip\\\\))?\" } } */\n+  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_6(\\\\(%rip\\\\))?,\" } } */\n   cond ? obj_6 = data : 0;\n }\n \n extern int volatile obj_7;\n int test_7 (int data, int cond)\n {\n   /* should not reread obj */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_7\" } } */\n-  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_7,\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_7(\\\\(%rip\\\\))?\" } } */\n+  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_7(\\\\(%rip\\\\))?,\" } } */\n   return cond ? obj_7 = data : 0;\n }\n \n extern int volatile obj_8;\n int test_8 (int cond)\n {\n   /* should not reread obj */\n-  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_8\" } } */\n-  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_8,\" } } */\n+  /* { dg-final { scan-assembler \"movl\\[ \\t\\]\\[^,\\]+, obj_8(\\\\(%rip\\\\))?\" } } */\n+  /* { dg-final { scan-assembler-not \"movl\\[ \\t\\]obj_8(\\\\(%rip\\\\))?,\" } } */\n   return cond ? obj_8 = 0 : 0;\n }"}]}