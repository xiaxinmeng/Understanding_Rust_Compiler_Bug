{"sha": "bfb014c3dedb6570350d1b87e71d8287c514fcaa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZiMDE0YzNkZWRiNjU3MDM1MGQxYjg3ZTcxZDgyODdjNTE0ZmNhYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-11-03T20:51:41Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-11-03T20:51:41Z"}, "message": "Handle auto parameter packs.\n\n\t* pt.c (struct find_parameter_pack_data): Add\n\ttype_pack_expansion_p field.\n\t(find_parameter_packs_r): Use it to turn 'auto' into a parameter pack.\n\t(uses_parameter_packs, make_pack_expansion)\n\t(check_for_bare_parameter_packs, fixed_parameter_pack_p): Set it.\n\nFrom-SVN: r229722", "tree": {"sha": "25bec5d6f31db0f90246460e71c9e5aebde17d8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25bec5d6f31db0f90246460e71c9e5aebde17d8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfb014c3dedb6570350d1b87e71d8287c514fcaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfb014c3dedb6570350d1b87e71d8287c514fcaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfb014c3dedb6570350d1b87e71d8287c514fcaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfb014c3dedb6570350d1b87e71d8287c514fcaa/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5c06742f6fb214c1c50e1bcd79aa9da86d652952", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c06742f6fb214c1c50e1bcd79aa9da86d652952", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c06742f6fb214c1c50e1bcd79aa9da86d652952"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "86c3653aff6b6bb524773c9b4d6abe014866489e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfb014c3dedb6570350d1b87e71d8287c514fcaa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfb014c3dedb6570350d1b87e71d8287c514fcaa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bfb014c3dedb6570350d1b87e71d8287c514fcaa", "patch": "@@ -1,3 +1,11 @@\n+2015-11-03  Jason Merrill  <jason@redhat.com>\n+\n+\t* pt.c (struct find_parameter_pack_data): Add\n+\ttype_pack_expansion_p field.\n+\t(find_parameter_packs_r): Use it to turn 'auto' into a parameter pack.\n+\t(uses_parameter_packs, make_pack_expansion)\n+\t(check_for_bare_parameter_packs, fixed_parameter_pack_p): Set it.\n+\n 2015-11-03  Thomas Schwinge  <thomas@codesourcery.com>\n \t    Chung-Lin Tang  <cltang@codesourcery.com>\n "}, {"sha": "bc1ba2f38d870a7c7455894968e29d6232883391", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfb014c3dedb6570350d1b87e71d8287c514fcaa/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfb014c3dedb6570350d1b87e71d8287c514fcaa/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=bfb014c3dedb6570350d1b87e71d8287c514fcaa", "patch": "@@ -3407,6 +3407,9 @@ struct find_parameter_pack_data\n \n   /* Set of AST nodes that have been visited by the traversal.  */\n   hash_set<tree> *visited;\n+\n+  /* True iff we're making a type pack expansion.  */\n+  bool type_pack_expansion_p;\n };\n \n /* Identifies all of the argument packs that occur in a template\n@@ -3443,6 +3446,12 @@ find_parameter_packs_r (tree *tp, int *walk_subtrees, void* data)\n     case TEMPLATE_TYPE_PARM:\n       t = TYPE_MAIN_VARIANT (t);\n     case TEMPLATE_TEMPLATE_PARM:\n+      /* If the placeholder appears in the decl-specifier-seq of a function\n+\t parameter pack (14.6.3), or the type-specifier-seq of a type-id that\n+\t is a pack expansion, the invented template parameter is a template\n+\t parameter pack.  */\n+      if (ppd->type_pack_expansion_p && is_auto_or_concept (t))\n+\tTEMPLATE_TYPE_PARAMETER_PACK (t) = true;\n       if (TEMPLATE_TYPE_PARAMETER_PACK (t))\n         parameter_pack_p = true;\n       break;\n@@ -3577,6 +3586,7 @@ uses_parameter_packs (tree t)\n   struct find_parameter_pack_data ppd;\n   ppd.parameter_packs = &parameter_packs;\n   ppd.visited = new hash_set<tree>;\n+  ppd.type_pack_expansion_p = false;\n   cp_walk_tree (&t, &find_parameter_packs_r, &ppd, ppd.visited);\n   delete ppd.visited;\n   return parameter_packs != NULL_TREE;\n@@ -3686,6 +3696,7 @@ make_pack_expansion (tree arg)\n   /* Determine which parameter packs will be expanded.  */\n   ppd.parameter_packs = &parameter_packs;\n   ppd.visited = new hash_set<tree>;\n+  ppd.type_pack_expansion_p = TYPE_P (arg);\n   cp_walk_tree (&arg, &find_parameter_packs_r, &ppd, ppd.visited);\n   delete ppd.visited;\n \n@@ -3733,6 +3744,7 @@ check_for_bare_parameter_packs (tree t)\n \n   ppd.parameter_packs = &parameter_packs;\n   ppd.visited = new hash_set<tree>;\n+  ppd.type_pack_expansion_p = false;\n   cp_walk_tree (&t, &find_parameter_packs_r, &ppd, ppd.visited);\n   delete ppd.visited;\n \n@@ -4772,6 +4784,7 @@ fixed_parameter_pack_p (tree parm)\n   struct find_parameter_pack_data ppd;\n   ppd.parameter_packs = &parameter_packs;\n   ppd.visited = new hash_set<tree>;\n+  ppd.type_pack_expansion_p = false;\n \n   fixed_parameter_pack_p_1 (parm, &ppd);\n "}, {"sha": "1cface77d555bea4fb6cc26e82f5363fbe48e276", "filename": "gcc/testsuite/g++.dg/concepts/auto3.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfb014c3dedb6570350d1b87e71d8287c514fcaa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfb014c3dedb6570350d1b87e71d8287c514fcaa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto3.C?ref=bfb014c3dedb6570350d1b87e71d8287c514fcaa", "patch": "@@ -0,0 +1,12 @@\n+// { dg-options -std=c++1z }\n+\n+template <class...> class tuple {};\n+\n+tuple<int> t;\n+tuple<auto> y = t;\n+\n+tuple<int,double> t2;\n+tuple<auto...> x = t2;\n+tuple<auto...> x2 = t;\n+\n+tuple<auto> y2 = t2;\t\t// { dg-error \"\" }"}]}