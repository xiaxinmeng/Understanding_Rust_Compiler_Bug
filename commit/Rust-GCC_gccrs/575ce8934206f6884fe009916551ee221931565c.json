{"sha": "575ce8934206f6884fe009916551ee221931565c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc1Y2U4OTM0MjA2ZjY4ODRmZTAwOTkxNjU1MWVlMjIxOTMxNTY1Yw==", "commit": {"author": {"name": "Stafford Horne", "email": "shorne@gmail.com", "date": "2019-07-21T21:02:54Z"}, "committer": {"name": "Stafford Horne", "email": "shorne@gcc.gnu.org", "date": "2019-07-21T21:02:54Z"}, "message": "or1k: only force reg for immediates\n\nThe force_reg in or1k_expand_compare is hard coded for SImode, which is fine as\nthis used to only be used on SI expands.  However, with FP support this will\ncause issues.  In general we should only force the right hand operand to a\nregister if its an immediate.  This patch adds an condition to check for that.\n\ngcc/ChangeLog:\n\n\t* config/or1k/or1k.c (or1k_expand_compare): Check for int before\n\tforce_reg.\n\nFrom-SVN: r273651", "tree": {"sha": "a3dda05ee246e99b847d2cafa4072e57e403793e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3dda05ee246e99b847d2cafa4072e57e403793e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/575ce8934206f6884fe009916551ee221931565c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/575ce8934206f6884fe009916551ee221931565c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/575ce8934206f6884fe009916551ee221931565c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/575ce8934206f6884fe009916551ee221931565c/comments", "author": {"login": "stffrdhrn", "id": 2404255, "node_id": "MDQ6VXNlcjI0MDQyNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/2404255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stffrdhrn", "html_url": "https://github.com/stffrdhrn", "followers_url": "https://api.github.com/users/stffrdhrn/followers", "following_url": "https://api.github.com/users/stffrdhrn/following{/other_user}", "gists_url": "https://api.github.com/users/stffrdhrn/gists{/gist_id}", "starred_url": "https://api.github.com/users/stffrdhrn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stffrdhrn/subscriptions", "organizations_url": "https://api.github.com/users/stffrdhrn/orgs", "repos_url": "https://api.github.com/users/stffrdhrn/repos", "events_url": "https://api.github.com/users/stffrdhrn/events{/privacy}", "received_events_url": "https://api.github.com/users/stffrdhrn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "44080af98edf7d8a59a94dd803f60cf0505fba34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44080af98edf7d8a59a94dd803f60cf0505fba34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44080af98edf7d8a59a94dd803f60cf0505fba34"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "711a31ea597d1d41d4822dd682ca9a069ae00c66", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/575ce8934206f6884fe009916551ee221931565c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/575ce8934206f6884fe009916551ee221931565c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=575ce8934206f6884fe009916551ee221931565c", "patch": "@@ -1,3 +1,8 @@\n+2019-07-22  Stafford Horne  <shorne@gmail.com>\n+\n+\t* config/or1k/or1k.c (or1k_expand_compare): Check for int before\n+\tforce_reg.\n+\n 2019-07-22  Stafford Horne  <shorne@gmail.com>\n \n \t* config.gcc (or1k*-*-*): Add mhard-float, mdouble-float, msoft-float"}, {"sha": "f8eed4a779794556dabaa558b29a3b9d8b2dbcf7", "filename": "gcc/config/or1k/or1k.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/575ce8934206f6884fe009916551ee221931565c/gcc%2Fconfig%2For1k%2For1k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/575ce8934206f6884fe009916551ee221931565c/gcc%2Fconfig%2For1k%2For1k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2For1k%2For1k.c?ref=575ce8934206f6884fe009916551ee221931565c", "patch": "@@ -1448,13 +1448,15 @@ void\n or1k_expand_compare (rtx *operands)\n {\n   rtx sr_f = gen_rtx_REG (BImode, SR_F_REGNUM);\n+  rtx righthand_op = XEXP (operands[0], 1);\n   rtx_code cmp_code = GET_CODE (operands[0]);\n   bool flag_check_ne = true;\n \n-  /* The RTL may receive an immediate in argument 1 of the compare, this is not\n-     supported unless we have l.sf*i instructions, force them into registers.  */\n-  if (!TARGET_SFIMM)\n-    XEXP (operands[0], 1) = force_reg (SImode, XEXP (operands[0], 1));\n+  /* Integer RTL may receive an immediate in argument 1 of the compare, this is\n+     not supported unless we have l.sf*i instructions, force them into\n+     registers.  */\n+  if (!TARGET_SFIMM && CONST_INT_P (righthand_op))\n+    XEXP (operands[0], 1) = force_reg (SImode, righthand_op);\n \n   /* Normalize comparison operators to ones OpenRISC support.  */\n   switch (cmp_code)"}]}