{"sha": "8848a766bc1ec6b38f278ecef52e2d8bd5a946da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg0OGE3NjZiYzFlYzZiMzhmMjc4ZWNlZjUyZTJkOGJkNWE5NDZkYQ==", "commit": {"author": {"name": "Jesse Rosenstock", "email": "jmr@ugcs.caltech.edu", "date": "2002-09-25T21:02:32Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-09-25T21:02:32Z"}, "message": "re PR libgcj/7709 (NullPointerException in _Jv_ResolvePoolEntry)\n\n2002-09-25  Jesse Rosenstock  <jmr@ugcs.caltech.edu>\n\n\t* resolve.cc (_Jv_ResolvePoolEntry) [end_of_method_search]: Check\n\tto see if `the_method == 0' before looking up vtable index.\n\tFixes PR libgcj/7709.\n\nFrom-SVN: r57517", "tree": {"sha": "c64d6359e2056eac9f442892ab9193a1452fcc1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c64d6359e2056eac9f442892ab9193a1452fcc1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8848a766bc1ec6b38f278ecef52e2d8bd5a946da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8848a766bc1ec6b38f278ecef52e2d8bd5a946da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8848a766bc1ec6b38f278ecef52e2d8bd5a946da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8848a766bc1ec6b38f278ecef52e2d8bd5a946da/comments", "author": null, "committer": null, "parents": [{"sha": "169f75f3846b0b292f5a7a6b4fddc1023c663ec6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/169f75f3846b0b292f5a7a6b4fddc1023c663ec6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/169f75f3846b0b292f5a7a6b4fddc1023c663ec6"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "dc94efbc3a03c6b97f28c16a0cbc889e270a4ee3", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8848a766bc1ec6b38f278ecef52e2d8bd5a946da/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8848a766bc1ec6b38f278ecef52e2d8bd5a946da/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=8848a766bc1ec6b38f278ecef52e2d8bd5a946da", "patch": "@@ -1,10 +1,17 @@\n+2002-09-25  Jesse Rosenstock  <jmr@ugcs.caltech.edu>\n+\n+\t* resolve.cc (_Jv_ResolvePoolEntry) [end_of_method_search]: Check\n+\tto see if `the_method == 0' before looking up vtable index.\n+\tFixes PR libgcj/7709.\n+\n 2002-09-25  Tom Tromey  <tromey@redhat.com>\n \n \t* java/lang/natClassLoader.cc: \n \t(_Jv_PrepareCompiledClass): Throw NoClassDefFoundError, per spec.\n \t* resolve.cc: Include NoClassDefFoundError.h, not\n \tClassNotFoundException.h.\n \t(_Jv_ResolvePoolEntry): Throw NoClassDefFoundError, per spec.\n+\n \t* defineclass.cc: Don't include ClassNotFoundException.h.\n \n \t* resolve.cc: Include StringBuffer."}, {"sha": "f3b98a7a348693b09183d14937dc3c7bab8dae9f", "filename": "libjava/resolve.cc", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8848a766bc1ec6b38f278ecef52e2d8bd5a946da/libjava%2Fresolve.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8848a766bc1ec6b38f278ecef52e2d8bd5a946da/libjava%2Fresolve.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fresolve.cc?ref=8848a766bc1ec6b38f278ecef52e2d8bd5a946da", "patch": "@@ -303,16 +303,6 @@ _Jv_ResolvePoolEntry (jclass klass, int index)\n       // with either loader should produce the same result,\n       // i.e., exactly the same jclass object. JVMS 5.4.3.3    \n     \n-      if (pool->tags[index] == JV_CONSTANT_InterfaceMethodref)\n-\tvtable_index = -1;\n-      else\n-\tvtable_index = _Jv_DetermineVTableIndex\n-\t  (found_class, method_name, method_signature);\n-\n-      if (vtable_index == METHOD_NOT_THERE)\n-\tthrow_incompatible_class_change_error\n-\t  (JvNewStringLatin1 (\"method not found\"));\n-\n       if (the_method == 0)\n \t{\n \t  java::lang::StringBuffer *sb = new java::lang::StringBuffer();\n@@ -324,6 +314,16 @@ _Jv_ResolvePoolEntry (jclass klass, int index)\n \t  throw new java::lang::NoSuchMethodError (sb->toString());\n \t}\n       \n+      if (pool->tags[index] == JV_CONSTANT_InterfaceMethodref)\n+\tvtable_index = -1;\n+      else\n+\tvtable_index = _Jv_DetermineVTableIndex (found_class, method_name,\n+\t\t\t\t\t\t method_signature);\n+\n+      if (vtable_index == METHOD_NOT_THERE)\n+\tthrow_incompatible_class_change_error\n+\t  (JvNewStringLatin1 (\"method not found\"));\n+\n       pool->data[index].rmethod = \n \t_Jv_BuildResolvedMethod(the_method,\n \t\t\t\tfound_class,"}]}