{"sha": "db09f9434d83e144068149a34fe3b24b5d5a5d61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIwOWY5NDM0ZDgzZTE0NDA2ODE0OWEzNGZlM2IyNGI1ZDVhNWQ2MQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2011-01-14T11:59:07Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2011-01-14T11:59:07Z"}, "message": "re PR middle-end/46823 (ICE: edge points to wrong declaration)\n\n2011-01-14  Martin Jambor  <mjambor@suse.cz>\n\n\tPR middle-end/46823\n\t* tree-inline.c (expand_call_inline): Get fndecl from call graph edge.\n\nFrom-SVN: r168778", "tree": {"sha": "577f6593f3c09144f1ebc7d3eb66927d308579ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/577f6593f3c09144f1ebc7d3eb66927d308579ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db09f9434d83e144068149a34fe3b24b5d5a5d61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db09f9434d83e144068149a34fe3b24b5d5a5d61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db09f9434d83e144068149a34fe3b24b5d5a5d61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db09f9434d83e144068149a34fe3b24b5d5a5d61/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "642d287307adc8e93432ccf75b8e4a12d12e425f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/642d287307adc8e93432ccf75b8e4a12d12e425f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/642d287307adc8e93432ccf75b8e4a12d12e425f"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "2ad6e8b93dd37329ed3190b47a2d25a968a61430", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db09f9434d83e144068149a34fe3b24b5d5a5d61/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db09f9434d83e144068149a34fe3b24b5d5a5d61/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db09f9434d83e144068149a34fe3b24b5d5a5d61", "patch": "@@ -1,3 +1,8 @@\n+2011-01-14  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR middle-end/46823\n+\t* tree-inline.c (expand_call_inline): Get fndecl from call graph edge.\n+\n 2011-01-13  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/xtensa/xtensa.h (XTENSA_LIBCALL_VALUE, LIBCALL_VALUE,"}, {"sha": "a73cb390a355b2b45bee46f6e403b3db6aa3743a", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db09f9434d83e144068149a34fe3b24b5d5a5d61/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db09f9434d83e144068149a34fe3b24b5d5a5d61/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=db09f9434d83e144068149a34fe3b24b5d5a5d61", "patch": "@@ -3783,14 +3783,19 @@ expand_call_inline (basic_block bb, gimple stmt, copy_body_data *id)\n   if (gimple_code (stmt) != GIMPLE_CALL)\n     goto egress;\n \n+  /* Objective C and fortran still calls tree_rest_of_compilation directly.\n+     Kill this check once this is fixed.  */\n+  if (!id->dst_node->analyzed)\n+    goto egress;\n+\n+  cg_edge = cgraph_edge (id->dst_node, stmt);\n+  gcc_checking_assert (cg_edge);\n   /* First, see if we can figure out what function is being called.\n      If we cannot, then there is no hope of inlining the function.  */\n-  fn = gimple_call_fndecl (stmt);\n-  if (!fn)\n+  if (cg_edge->indirect_unknown_callee)\n     goto egress;\n-\n-  /* Turn forward declarations into real ones.  */\n-  fn = cgraph_node (fn)->decl;\n+  fn = cg_edge->callee->decl;\n+  gcc_checking_assert (fn);\n \n   /* If FN is a declaration of a function in a nested scope that was\n      globally declared inline, we don't set its DECL_INITIAL.\n@@ -3804,13 +3809,6 @@ expand_call_inline (basic_block bb, gimple stmt, copy_body_data *id)\n       && gimple_has_body_p (DECL_ABSTRACT_ORIGIN (fn)))\n     fn = DECL_ABSTRACT_ORIGIN (fn);\n \n-  /* Objective C and fortran still calls tree_rest_of_compilation directly.\n-     Kill this check once this is fixed.  */\n-  if (!id->dst_node->analyzed)\n-    goto egress;\n-\n-  cg_edge = cgraph_edge (id->dst_node, stmt);\n-\n   /* First check that inlining isn't simply forbidden in this case.  */\n   if (inline_forbidden_into_p (cg_edge->caller->decl, cg_edge->callee->decl))\n     goto egress;"}]}