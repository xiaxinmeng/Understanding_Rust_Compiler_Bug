{"sha": "0ce0e6e865f65b34fd20e8ae912ff7307fb5b832", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNlMGU2ZTg2NWY2NWIzNGZkMjBlOGFlOTEyZmY3MzA3ZmI1YjgzMg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2018-08-14T19:09:33Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2018-08-14T19:09:33Z"}, "message": "re PR fortran/86116 (Ambiguous generic interface not recognised)\n\n2018-08-14  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/86116\n\t* interface.c (compare_type): Remove a CLASS/TYPE check.\n\t(compare_type_characteristics): New function that behaves like the old\n\t'compare_type'.\n\t(gfc_check_dummy_characteristics, gfc_check_result_characteristics):\n\tCall 'compare_type_characteristics' instead of 'compare_type'.\n\n2018-08-14  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/86116\n\t* gfortran.dg/generic_34.f90: New test case.\n\nFrom-SVN: r263540", "tree": {"sha": "76d5839764fbc72cc9f635108cb2a2286d7b135e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76d5839764fbc72cc9f635108cb2a2286d7b135e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ce0e6e865f65b34fd20e8ae912ff7307fb5b832", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ce0e6e865f65b34fd20e8ae912ff7307fb5b832", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ce0e6e865f65b34fd20e8ae912ff7307fb5b832", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ce0e6e865f65b34fd20e8ae912ff7307fb5b832/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8b5398cbdf99f6c977a6a1749628538ba436a0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8b5398cbdf99f6c977a6a1749628538ba436a0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8b5398cbdf99f6c977a6a1749628538ba436a0b"}], "stats": {"total": 55, "additions": 52, "deletions": 3}, "files": [{"sha": "e44035233019133872ee25209ae07b38c7afa05b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce0e6e865f65b34fd20e8ae912ff7307fb5b832/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce0e6e865f65b34fd20e8ae912ff7307fb5b832/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0ce0e6e865f65b34fd20e8ae912ff7307fb5b832", "patch": "@@ -1,3 +1,12 @@\n+2018-08-14  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/86116\n+\t* interface.c (compare_type): Remove a CLASS/TYPE check.\n+\t(compare_type_characteristics): New function that behaves like the old\n+\t'compare_type'.\n+\t(gfc_check_dummy_characteristics, gfc_check_result_characteristics):\n+\tCall 'compare_type_characteristics' instead of 'compare_type'.\n+\n 2018-08-12  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/66679"}, {"sha": "f85c76bad0f9a9e2c460d4e96571e2f3ac36ca93", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce0e6e865f65b34fd20e8ae912ff7307fb5b832/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce0e6e865f65b34fd20e8ae912ff7307fb5b832/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=0ce0e6e865f65b34fd20e8ae912ff7307fb5b832", "patch": "@@ -735,13 +735,20 @@ compare_type (gfc_symbol *s1, gfc_symbol *s2)\n   if (s2->attr.ext_attr & (1 << EXT_ATTR_NO_ARG_CHECK))\n     return true;\n \n+  return gfc_compare_types (&s1->ts, &s2->ts) || s2->ts.type == BT_ASSUMED;\n+}\n+\n+\n+static bool\n+compare_type_characteristics (gfc_symbol *s1, gfc_symbol *s2)\n+{\n   /* TYPE and CLASS of the same declared type are type compatible,\n      but have different characteristics.  */\n   if ((s1->ts.type == BT_CLASS && s2->ts.type == BT_DERIVED)\n       || (s1->ts.type == BT_DERIVED && s2->ts.type == BT_CLASS))\n     return false;\n \n-  return gfc_compare_types (&s1->ts, &s2->ts) || s2->ts.type == BT_ASSUMED;\n+  return compare_type (s1, s2);\n }\n \n \n@@ -1309,7 +1316,8 @@ gfc_check_dummy_characteristics (gfc_symbol *s1, gfc_symbol *s2,\n   /* Check type and rank.  */\n   if (type_must_agree)\n     {\n-      if (!compare_type (s1, s2) || !compare_type (s2, s1))\n+      if (!compare_type_characteristics (s1, s2)\n+\t  || !compare_type_characteristics (s2, s1))\n \t{\n \t  snprintf (errmsg, err_len, \"Type mismatch in argument '%s' (%s/%s)\",\n \t\t    s1->name, gfc_typename (&s1->ts), gfc_typename (&s2->ts));\n@@ -1528,7 +1536,7 @@ gfc_check_result_characteristics (gfc_symbol *s1, gfc_symbol *s2,\n     return true;\n \n   /* Check type and rank.  */\n-  if (!compare_type (r1, r2))\n+  if (!compare_type_characteristics (r1, r2))\n     {\n       snprintf (errmsg, err_len, \"Type mismatch in function result (%s/%s)\",\n \t\tgfc_typename (&r1->ts), gfc_typename (&r2->ts));"}, {"sha": "3bbc706c121141fe7ffb3606e5d1285446d65f07", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce0e6e865f65b34fd20e8ae912ff7307fb5b832/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce0e6e865f65b34fd20e8ae912ff7307fb5b832/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ce0e6e865f65b34fd20e8ae912ff7307fb5b832", "patch": "@@ -1,3 +1,8 @@\n+2018-08-14  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/86116\n+\t* gfortran.dg/generic_34.f90: New test case.\n+\n 2018-08-13  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/57891"}, {"sha": "1bcbfa089fa74012f6e4b7051c86383c031806d7", "filename": "gcc/testsuite/gfortran.dg/generic_34.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce0e6e865f65b34fd20e8ae912ff7307fb5b832/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_34.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce0e6e865f65b34fd20e8ae912ff7307fb5b832/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_34.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_34.f90?ref=0ce0e6e865f65b34fd20e8ae912ff7307fb5b832", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do compile }\n+!\n+! PR 86116: [6/7/8/9 Regression] Ambiguous generic interface not recognised\n+!\n+! Contributed by martin <mscfd@gmx.net>\n+\n+module mod\n+\n+   type :: t\n+   end type t\n+\n+   interface sub\n+      module procedure s1\n+      module procedure s2\n+   end interface\n+\n+contains\n+\n+   subroutine s1(x)  ! { dg-error \"Ambiguous interfaces in generic interface\" }\n+      type(t) :: x\n+   end subroutine\n+\n+   subroutine s2(x)  ! { dg-error \"Ambiguous interfaces in generic interface\" }\n+      class(*), allocatable :: x\n+   end subroutine\n+\n+end"}]}