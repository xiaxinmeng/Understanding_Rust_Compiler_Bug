{"sha": "bff9a7ec6e3b8bf9d9635445c94e6c166e6f43e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZmOWE3ZWM2ZTNiOGJmOWQ5NjM1NDQ1Yzk0ZTZjMTY2ZTZmNDNlMQ==", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2021-06-03T02:15:17Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2021-06-03T02:15:17Z"}, "message": "arc: Remove define_insn_and_split *bbit_di\n\ndefine_insn_and_split *bbit_di has unexpected empty split\ncondition when its insn condition isn't empty.  But as\nClaudiu pointed out, this pattern looks useless and it's\nbetter to remove it.\n\ngcc/ChangeLog:\n\n\t* config/arc/arc.md (*bbit_di): Remove.", "tree": {"sha": "0dc01f30ca90b435534339783404b4c1082c0d43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dc01f30ca90b435534339783404b4c1082c0d43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bff9a7ec6e3b8bf9d9635445c94e6c166e6f43e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bff9a7ec6e3b8bf9d9635445c94e6c166e6f43e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bff9a7ec6e3b8bf9d9635445c94e6c166e6f43e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bff9a7ec6e3b8bf9d9635445c94e6c166e6f43e1/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9663c744e2d0942f14eafa725a1bd9f766f02a16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9663c744e2d0942f14eafa725a1bd9f766f02a16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9663c744e2d0942f14eafa725a1bd9f766f02a16"}], "stats": {"total": 28, "additions": 0, "deletions": 28}, "files": [{"sha": "a67bb5810034f2ff329dc60e7b7ad5032c529ab3", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bff9a7ec6e3b8bf9d9635445c94e6c166e6f43e1/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bff9a7ec6e3b8bf9d9635445c94e6c166e6f43e1/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=bff9a7ec6e3b8bf9d9635445c94e6c166e6f43e1", "patch": "@@ -5016,34 +5016,6 @@ core_3, archs4x, archs4xd, archs4xd_slow\"\n \t(if_then_else (match_test \"get_attr_length (insn) == 6\")\n \t\t      (const_string \"true\") (const_string \"false\")))])\n \n-; ??? When testing a bit from a DImode register, combine creates a\n-; zero_extract in DImode.  This goes via an AND with a DImode constant,\n-; so can only be observed on 64 bit hosts.\n-(define_insn_and_split \"*bbit_di\"\n-  [(set (pc)\n-\t(if_then_else\n-\t  (match_operator 3 \"equality_comparison_operator\"\n-\t    [(zero_extract:DI (match_operand:SI 1 \"register_operand\" \"Rcqq,c\")\n-\t\t\t      (const_int 1)\n-\t\t\t      (match_operand 2 \"immediate_operand\" \"L,L\"))\n-\t     (const_int 0)])\n-\t  (label_ref (match_operand 0 \"\" \"\"))\n-\t  (pc)))\n-   (clobber (reg:CC_ZN CC_REG))]\n-  \"!CROSSING_JUMP_P (insn)\"\n-  \"#\"\n-  \"\"\n-  [(parallel\n-     [(set (pc) (if_then_else (match_dup 3) (label_ref (match_dup 0)) (pc)))\n-      (clobber (reg:CC_ZN CC_REG))])]\n-{\n-  rtx xtr;\n-\n-  xtr = gen_rtx_ZERO_EXTRACT (SImode, operands[1], const1_rtx, operands[2]);\n-  operands[3] = gen_rtx_fmt_ee (GET_CODE (operands[3]), GET_MODE (operands[3]),\n-\t\t\t\txtr, const0_rtx);\n-})\n-\n ;; -------------------------------------------------------------------\n ;; Hardware loop\n ;; -------------------------------------------------------------------"}]}