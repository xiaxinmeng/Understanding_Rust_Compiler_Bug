{"sha": "d358fb9dae37dfe948ef87af4d8951dac4cd3646", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM1OGZiOWRhZTM3ZGZlOTQ4ZWY4N2FmNGQ4OTUxZGFjNGNkMzY0Ng==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2013-10-16T23:06:36Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2013-10-16T23:06:36Z"}, "message": "re PR target/57756 (Function target attribute is retaining  state of previously seen function)\n\n2013-10-16  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\tPR target/57756\n\t* config/rs6000/rs6000.opt (rs6000_isa_flags_explicit): Move the\n\texplicit isa flag to be an options variable, instead of using\n\tglobal_options_set.  Remove define from rs6000.h.\n\t* config/rs6000/rs6000.h (rs6000_isa_flags_explicit): Likewise.\n\n\t* config/rs6000/rs6000.c (rs6000_option_override_internal):\n\tInitialize rs6000_isa_flags_explicit.\n\t(rs6000_function_specific_save): Add gcc_options* parameter, so\n\tthat the powerpc builds after the 2013-10-15 changes.\n\t(rs6000_function_specific_restore): Likewise.\n\nFrom-SVN: r203734", "tree": {"sha": "4fd1b471ea70ecad1296a167c84af47d24aa2b72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fd1b471ea70ecad1296a167c84af47d24aa2b72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d358fb9dae37dfe948ef87af4d8951dac4cd3646", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d358fb9dae37dfe948ef87af4d8951dac4cd3646", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d358fb9dae37dfe948ef87af4d8951dac4cd3646", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d358fb9dae37dfe948ef87af4d8951dac4cd3646/comments", "author": null, "committer": null, "parents": [{"sha": "c71aed477a177675e0887142a4a045c527860d51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c71aed477a177675e0887142a4a045c527860d51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c71aed477a177675e0887142a4a045c527860d51"}], "stats": {"total": 39, "additions": 30, "deletions": 9}, "files": [{"sha": "de8bf8891a9827802ca8526a41b3cbf506c32915", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d358fb9dae37dfe948ef87af4d8951dac4cd3646/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d358fb9dae37dfe948ef87af4d8951dac4cd3646/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d358fb9dae37dfe948ef87af4d8951dac4cd3646", "patch": "@@ -1,3 +1,17 @@\n+2013-10-16  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/57756\n+\t* config/rs6000/rs6000.opt (rs6000_isa_flags_explicit): Move the\n+\texplicit isa flag to be an options variable, instead of using\n+\tglobal_options_set.  Remove define from rs6000.h.\n+\t* config/rs6000/rs6000.h (rs6000_isa_flags_explicit): Likewise.\n+\n+\t* config/rs6000/rs6000.c (rs6000_option_override_internal):\n+\tInitialize rs6000_isa_flags_explicit.\n+\t(rs6000_function_specific_save): Add gcc_options* parameter, so\n+\tthat the powerpc builds after the 2013-10-15 changes.\n+\t(rs6000_function_specific_restore): Likewise.\n+\n 2013-10-16  DJ Delorie  <dj@redhat.com>\n \n \t* config/rl78/rl78.c (rl78_alloc_address_registers_macax): Verify"}, {"sha": "63f68c47bd53bd7358440da4d3023792eb9d1ca5", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d358fb9dae37dfe948ef87af4d8951dac4cd3646/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d358fb9dae37dfe948ef87af4d8951dac4cd3646/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=d358fb9dae37dfe948ef87af4d8951dac4cd3646", "patch": "@@ -2796,6 +2796,10 @@ rs6000_option_override_internal (bool global_init_p)\n     = ((global_init_p || target_option_default_node == NULL)\n        ? NULL : TREE_TARGET_OPTION (target_option_default_node));\n \n+  /* Remember the explicit arguments.  */\n+  if (global_init_p)\n+    rs6000_isa_flags_explicit = global_options_set.x_rs6000_isa_flags;\n+\n   /* On 64-bit Darwin, power alignment is ABI-incompatible with some C\n      library functions, so warn about it. The flag may be useful for\n      performance studies from time to time though, so don't disable it\n@@ -29995,19 +29999,22 @@ rs6000_set_current_function (tree fndecl)\n /* Save the current options */\n \n static void\n-rs6000_function_specific_save (struct cl_target_option *ptr)\n+rs6000_function_specific_save (struct cl_target_option *ptr,\n+\t\t\t       struct gcc_options *opts)\n {\n-  ptr->x_rs6000_isa_flags = rs6000_isa_flags;\n-  ptr->x_rs6000_isa_flags_explicit = rs6000_isa_flags_explicit;\n+  ptr->x_rs6000_isa_flags = opts->x_rs6000_isa_flags;\n+  ptr->x_rs6000_isa_flags_explicit = opts->x_rs6000_isa_flags_explicit;\n }\n \n /* Restore the current options */\n \n static void\n-rs6000_function_specific_restore (struct cl_target_option *ptr)\n+rs6000_function_specific_restore (struct gcc_options *opts,\n+\t\t\t\t  struct cl_target_option *ptr)\n+\t\t\t\t  \n {\n-  rs6000_isa_flags = ptr->x_rs6000_isa_flags;\n-  rs6000_isa_flags_explicit = ptr->x_rs6000_isa_flags_explicit;\n+  opts->x_rs6000_isa_flags = ptr->x_rs6000_isa_flags;\n+  opts->x_rs6000_isa_flags_explicit = ptr->x_rs6000_isa_flags_explicit;\n   (void) rs6000_option_override_internal (false);\n }\n "}, {"sha": "745437edb814700eff35352ad4ac8c7eac47d9a9", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d358fb9dae37dfe948ef87af4d8951dac4cd3646/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d358fb9dae37dfe948ef87af4d8951dac4cd3646/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=d358fb9dae37dfe948ef87af4d8951dac4cd3646", "patch": "@@ -593,9 +593,6 @@ extern int rs6000_vector_align[];\n #define MASK_PROTOTYPE\t\t\tOPTION_MASK_PROTOTYPE\n #endif\n \n-/* Explicit ISA options that were set.  */\n-#define rs6000_isa_flags_explicit\tglobal_options_set.x_rs6000_isa_flags\n-\n /* For power systems, we want to enable Altivec and VSX builtins even if the\n    user did not use -maltivec or -mvsx to allow the builtins to be used inside\n    of #pragma GCC target or the target attribute to change the code level for a"}, {"sha": "c3f9c2d44a3447c7b0f695754f4a0ceafe4c53e7", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d358fb9dae37dfe948ef87af4d8951dac4cd3646/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d358fb9dae37dfe948ef87af4d8951dac4cd3646/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=d358fb9dae37dfe948ef87af4d8951dac4cd3646", "patch": "@@ -30,6 +30,9 @@ TargetSave\n HOST_WIDE_INT x_rs6000_isa_flags\n \n ;; Miscellaneous flag bits that were set explicitly by the user\n+Variable\n+HOST_WIDE_INT rs6000_isa_flags_explicit\n+\n TargetSave\n HOST_WIDE_INT x_rs6000_isa_flags_explicit\n "}]}