{"sha": "69c56ce673d1e1d4508e82053a32011f807c6088", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjljNTZjZTY3M2QxZTFkNDUwOGU4MjA1M2EzMjAxMWY4MDdjNjA4OA==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-09-28T21:10:31Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-09-28T21:10:31Z"}, "message": "libgfortran/m4/unpack.m4: Silence -Wmaybe-uninitialized\n\nlibgfortran/ChangeLog:\n\n\t* m4/unpack.m4 (unpack0_'rtype_code`,\n\tunpack1_'rtype_code`): Move 'rstride[0]' initialization outside\n\tconditional branch to silence -Wmaybe-uninitialized.\n\t* generated/unpack_c10.c: Regenerate.\n\t* generated/unpack_c16.c: Regenerate.\n\t* generated/unpack_c4.c: Regenerate.\n\t* generated/unpack_c8.c: Regenerate.\n\t* generated/unpack_i1.c: Regenerate.\n\t* generated/unpack_i16.c: Regenerate.\n\t* generated/unpack_i2.c: Regenerate.\n\t* generated/unpack_i4.c: Regenerate.\n\t* generated/unpack_i8.c: Regenerate.\n\t* generated/unpack_r10.c: Regenerate.\n\t* generated/unpack_r16.c: Regenerate.\n\t* generated/unpack_r4.c: Regenerate.\n\t* generated/unpack_r8.c: Regenerate.", "tree": {"sha": "a2747a3fb9be7e30568782c4331bd5e9e3f63b16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2747a3fb9be7e30568782c4331bd5e9e3f63b16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69c56ce673d1e1d4508e82053a32011f807c6088", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69c56ce673d1e1d4508e82053a32011f807c6088", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69c56ce673d1e1d4508e82053a32011f807c6088", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69c56ce673d1e1d4508e82053a32011f807c6088/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f394e2d4c66678411c88b297f0db9a828214aef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f394e2d4c66678411c88b297f0db9a828214aef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f394e2d4c66678411c88b297f0db9a828214aef"}], "stats": {"total": 112, "additions": 56, "deletions": 56}, "files": [{"sha": "12110df8af055d3f3c8d85a2666b0160673ce948", "filename": "libgfortran/generated/unpack_c10.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_c10.c?ref=69c56ce673d1e1d4508e82053a32011f807c6088", "patch": "@@ -79,6 +79,8 @@ unpack0_c10 (gfc_array_c10 *ret, const gfc_array_c10 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -102,8 +104,6 @@ unpack0_c10 (gfc_array_c10 *ret, const gfc_array_c10 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;\n@@ -225,6 +225,8 @@ unpack1_c10 (gfc_array_c10 *ret, const gfc_array_c10 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -249,8 +251,6 @@ unpack1_c10 (gfc_array_c10 *ret, const gfc_array_c10 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;"}, {"sha": "c684156f297da509b055c82b5075f14aff2f9327", "filename": "libgfortran/generated/unpack_c16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_c16.c?ref=69c56ce673d1e1d4508e82053a32011f807c6088", "patch": "@@ -79,6 +79,8 @@ unpack0_c16 (gfc_array_c16 *ret, const gfc_array_c16 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -102,8 +104,6 @@ unpack0_c16 (gfc_array_c16 *ret, const gfc_array_c16 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;\n@@ -225,6 +225,8 @@ unpack1_c16 (gfc_array_c16 *ret, const gfc_array_c16 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -249,8 +251,6 @@ unpack1_c16 (gfc_array_c16 *ret, const gfc_array_c16 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;"}, {"sha": "374b3fe0c8cf797b24ae80667adab26770dd9fd2", "filename": "libgfortran/generated/unpack_c4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_c4.c?ref=69c56ce673d1e1d4508e82053a32011f807c6088", "patch": "@@ -79,6 +79,8 @@ unpack0_c4 (gfc_array_c4 *ret, const gfc_array_c4 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -102,8 +104,6 @@ unpack0_c4 (gfc_array_c4 *ret, const gfc_array_c4 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;\n@@ -225,6 +225,8 @@ unpack1_c4 (gfc_array_c4 *ret, const gfc_array_c4 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -249,8 +251,6 @@ unpack1_c4 (gfc_array_c4 *ret, const gfc_array_c4 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;"}, {"sha": "110cb4f3ee065d0dd1b800c9780b2cf16b21e649", "filename": "libgfortran/generated/unpack_c8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_c8.c?ref=69c56ce673d1e1d4508e82053a32011f807c6088", "patch": "@@ -79,6 +79,8 @@ unpack0_c8 (gfc_array_c8 *ret, const gfc_array_c8 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -102,8 +104,6 @@ unpack0_c8 (gfc_array_c8 *ret, const gfc_array_c8 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;\n@@ -225,6 +225,8 @@ unpack1_c8 (gfc_array_c8 *ret, const gfc_array_c8 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -249,8 +251,6 @@ unpack1_c8 (gfc_array_c8 *ret, const gfc_array_c8 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;"}, {"sha": "96237a169b216adc17945189ed8684ee0a28ae08", "filename": "libgfortran/generated/unpack_i1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_i1.c?ref=69c56ce673d1e1d4508e82053a32011f807c6088", "patch": "@@ -79,6 +79,8 @@ unpack0_i1 (gfc_array_i1 *ret, const gfc_array_i1 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -102,8 +104,6 @@ unpack0_i1 (gfc_array_i1 *ret, const gfc_array_i1 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;\n@@ -225,6 +225,8 @@ unpack1_i1 (gfc_array_i1 *ret, const gfc_array_i1 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -249,8 +251,6 @@ unpack1_i1 (gfc_array_i1 *ret, const gfc_array_i1 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;"}, {"sha": "f58be9572d9d44b64950916e4d0142949365afe1", "filename": "libgfortran/generated/unpack_i16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_i16.c?ref=69c56ce673d1e1d4508e82053a32011f807c6088", "patch": "@@ -79,6 +79,8 @@ unpack0_i16 (gfc_array_i16 *ret, const gfc_array_i16 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -102,8 +104,6 @@ unpack0_i16 (gfc_array_i16 *ret, const gfc_array_i16 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;\n@@ -225,6 +225,8 @@ unpack1_i16 (gfc_array_i16 *ret, const gfc_array_i16 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -249,8 +251,6 @@ unpack1_i16 (gfc_array_i16 *ret, const gfc_array_i16 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;"}, {"sha": "0dab104c9db37354e54825707de5497d2f977dae", "filename": "libgfortran/generated/unpack_i2.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_i2.c?ref=69c56ce673d1e1d4508e82053a32011f807c6088", "patch": "@@ -79,6 +79,8 @@ unpack0_i2 (gfc_array_i2 *ret, const gfc_array_i2 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -102,8 +104,6 @@ unpack0_i2 (gfc_array_i2 *ret, const gfc_array_i2 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;\n@@ -225,6 +225,8 @@ unpack1_i2 (gfc_array_i2 *ret, const gfc_array_i2 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -249,8 +251,6 @@ unpack1_i2 (gfc_array_i2 *ret, const gfc_array_i2 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;"}, {"sha": "b32c92a5d677496817d251dd04bf58b4528c534f", "filename": "libgfortran/generated/unpack_i4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_i4.c?ref=69c56ce673d1e1d4508e82053a32011f807c6088", "patch": "@@ -79,6 +79,8 @@ unpack0_i4 (gfc_array_i4 *ret, const gfc_array_i4 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -102,8 +104,6 @@ unpack0_i4 (gfc_array_i4 *ret, const gfc_array_i4 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;\n@@ -225,6 +225,8 @@ unpack1_i4 (gfc_array_i4 *ret, const gfc_array_i4 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -249,8 +251,6 @@ unpack1_i4 (gfc_array_i4 *ret, const gfc_array_i4 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;"}, {"sha": "25a928ca13c8b1de3f29e7d2d33195a674487c89", "filename": "libgfortran/generated/unpack_i8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_i8.c?ref=69c56ce673d1e1d4508e82053a32011f807c6088", "patch": "@@ -79,6 +79,8 @@ unpack0_i8 (gfc_array_i8 *ret, const gfc_array_i8 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -102,8 +104,6 @@ unpack0_i8 (gfc_array_i8 *ret, const gfc_array_i8 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;\n@@ -225,6 +225,8 @@ unpack1_i8 (gfc_array_i8 *ret, const gfc_array_i8 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -249,8 +251,6 @@ unpack1_i8 (gfc_array_i8 *ret, const gfc_array_i8 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;"}, {"sha": "4044ec3f8971510aadc8c60ee11db407f38eac75", "filename": "libgfortran/generated/unpack_r10.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_r10.c?ref=69c56ce673d1e1d4508e82053a32011f807c6088", "patch": "@@ -79,6 +79,8 @@ unpack0_r10 (gfc_array_r10 *ret, const gfc_array_r10 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -102,8 +104,6 @@ unpack0_r10 (gfc_array_r10 *ret, const gfc_array_r10 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;\n@@ -225,6 +225,8 @@ unpack1_r10 (gfc_array_r10 *ret, const gfc_array_r10 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -249,8 +251,6 @@ unpack1_r10 (gfc_array_r10 *ret, const gfc_array_r10 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;"}, {"sha": "beeaa4e41e82252a74316a518659a30b6233c49a", "filename": "libgfortran/generated/unpack_r16.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_r16.c?ref=69c56ce673d1e1d4508e82053a32011f807c6088", "patch": "@@ -79,6 +79,8 @@ unpack0_r16 (gfc_array_r16 *ret, const gfc_array_r16 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -102,8 +104,6 @@ unpack0_r16 (gfc_array_r16 *ret, const gfc_array_r16 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;\n@@ -225,6 +225,8 @@ unpack1_r16 (gfc_array_r16 *ret, const gfc_array_r16 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -249,8 +251,6 @@ unpack1_r16 (gfc_array_r16 *ret, const gfc_array_r16 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;"}, {"sha": "283dd848f523cf58dd59bd60c7be25cf81c72a21", "filename": "libgfortran/generated/unpack_r4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_r4.c?ref=69c56ce673d1e1d4508e82053a32011f807c6088", "patch": "@@ -79,6 +79,8 @@ unpack0_r4 (gfc_array_r4 *ret, const gfc_array_r4 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -102,8 +104,6 @@ unpack0_r4 (gfc_array_r4 *ret, const gfc_array_r4 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;\n@@ -225,6 +225,8 @@ unpack1_r4 (gfc_array_r4 *ret, const gfc_array_r4 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -249,8 +251,6 @@ unpack1_r4 (gfc_array_r4 *ret, const gfc_array_r4 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;"}, {"sha": "08882995313a0294af2fbb610f5ed01be41d681a", "filename": "libgfortran/generated/unpack_r8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fgenerated%2Funpack_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_r8.c?ref=69c56ce673d1e1d4508e82053a32011f807c6088", "patch": "@@ -79,6 +79,8 @@ unpack0_r8 (gfc_array_r8 *ret, const gfc_array_r8 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -102,8 +104,6 @@ unpack0_r8 (gfc_array_r8 *ret, const gfc_array_r8 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;\n@@ -225,6 +225,8 @@ unpack1_r8 (gfc_array_r8 *ret, const gfc_array_r8 *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -249,8 +251,6 @@ unpack1_r8 (gfc_array_r8 *ret, const gfc_array_r8 *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;"}, {"sha": "ebc469a84f812edea2337347732cdeb1244be5de", "filename": "libgfortran/m4/unpack.m4", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fm4%2Funpack.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69c56ce673d1e1d4508e82053a32011f807c6088/libgfortran%2Fm4%2Funpack.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Funpack.m4?ref=69c56ce673d1e1d4508e82053a32011f807c6088", "patch": "@@ -80,6 +80,8 @@ unpack0_'rtype_code` ('rtype` *ret, const 'rtype` *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -103,8 +105,6 @@ unpack0_'rtype_code` ('rtype` *ret, const 'rtype` *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;\n@@ -226,6 +226,8 @@ unpack1_'rtype_code` ('rtype` *ret, const 'rtype` *vector,\n   else\n     runtime_error (\"Funny sized logical array\");\n \n+  /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n+  rstride[0] = 1;\n   if (ret->base_addr == NULL)\n     {\n       /* The front end has signalled that we need to populate the\n@@ -250,8 +252,6 @@ unpack1_'rtype_code` ('rtype` *ret, const 'rtype` *vector,\n   else\n     {\n       dim = GFC_DESCRIPTOR_RANK (ret);\n-      /* Initialize to avoid -Wmaybe-uninitialized complaints.  */\n-      rstride[0] = 1;\n       for (n = 0; n < dim; n++)\n \t{\n \t  count[n] = 0;"}]}