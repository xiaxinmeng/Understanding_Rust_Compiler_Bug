{"sha": "0ded30b361d2b1e43048b640e9ad6fef161fe9a9", "node_id": "C_kwDOANBUbNoAKDBkZWQzMGIzNjFkMmIxZTQzMDQ4YjY0MGU5YWQ2ZmVmMTYxZmU5YTk", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-28T20:48:55Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-29T15:32:50Z"}, "message": "libstdc++: Do not use __used or __packed as identifiers\n\nThese names (and __unused) are defined as macros by newlib.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/format: Rename all variables called __used or\n\t__packed.\n\t* testsuite/17_intro/badnames.cc: Add no_pch options.\n\t* testsuite/17_intro/names.cc: Check __packed, __unused and\n\t__used.", "tree": {"sha": "f27739ace8a30e815b5d22211c35b6050a84e8b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f27739ace8a30e815b5d22211c35b6050a84e8b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ded30b361d2b1e43048b640e9ad6fef161fe9a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ded30b361d2b1e43048b640e9ad6fef161fe9a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ded30b361d2b1e43048b640e9ad6fef161fe9a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ded30b361d2b1e43048b640e9ad6fef161fe9a9/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36cabc257dfb7dd4f7625896891f6c5b195a0241", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36cabc257dfb7dd4f7625896891f6c5b195a0241", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36cabc257dfb7dd4f7625896891f6c5b195a0241"}], "stats": {"total": 41, "additions": 24, "deletions": 17}, "files": [{"sha": "cb5ce40decebc4c554986fae18b8c22dd6158b36", "filename": "libstdc++-v3/include/std/format", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ded30b361d2b1e43048b640e9ad6fef161fe9a9/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ded30b361d2b1e43048b640e9ad6fef161fe9a9/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat?ref=0ded30b361d2b1e43048b640e9ad6fef161fe9a9", "patch": "@@ -2472,21 +2472,21 @@ namespace __format\n       void\n       _M_overflow() override\n       {\n-\tauto __used = this->_M_used();\n+\tauto __s = this->_M_used();\n \tif (_M_max < 0) // No maximum.\n-\t  _M_out = ranges::copy(__used, std::move(_M_out)).out;\n+\t  _M_out = ranges::copy(__s, std::move(_M_out)).out;\n \telse if (_M_count < size_t(_M_max))\n \t  {\n \t    auto __max = _M_max - _M_count;\n \t    span<_CharT> __first;\n-\t    if (__max < __used.size())\n-\t      __first = __used.first(__max);\n+\t    if (__max < __s.size())\n+\t      __first = __s.first(__max);\n \t    else\n-\t      __first = __used;\n+\t      __first = __s;\n \t    _M_out = ranges::copy(__first, std::move(_M_out)).out;\n \t  }\n \tthis->_M_rewind();\n-\t_M_count += __used.size();\n+\t_M_count += __s.size();\n       }\n \n     public:\n@@ -2529,8 +2529,8 @@ namespace __format\n       void\n       _M_overflow()\n       {\n-\tauto __used = this->_M_used();\n-\t_M_count += __used.size();\n+\tauto __s = this->_M_used();\n+\t_M_count += __s.size();\n \n \tif (_M_max >= 0)\n \t  {\n@@ -2544,7 +2544,7 @@ namespace __format\n \t  {\n \t    // No maximum character count. Just extend the span to allow\n \t    // writing more characters to it.\n-\t    this->_M_reset({__used.data(), __used.size() + 1024}, __used.end());\n+\t    this->_M_reset({__s.data(), __s.size() + 1024}, __s.end());\n \t  }\n       }\n \n@@ -2594,12 +2594,12 @@ namespace __format\n       {\n \t_Iter_sink::_M_overflow();\n \titer_difference_t<_OutIter> __count(_M_count);\n-\tauto __used = this->_M_used();\n+\tauto __s = this->_M_used();\n \tauto __last = _M_first;\n-\tif (__used.data() == _M_buf) // Wrote at least _M_max characters.\n+\tif (__s.data() == _M_buf) // Wrote at least _M_max characters.\n \t  __last += _M_max;\n \telse\n-\t  __last += iter_difference_t<_OutIter>(__used.size());\n+\t  __last += iter_difference_t<_OutIter>(__s.size());\n \treturn { __last, __count };\n       }\n     };\n@@ -3119,10 +3119,10 @@ namespace __format\n     constexpr auto\n     __pack_arg_types(const array<_Arg_t, _Nm>& __types)\n     {\n-      __UINT64_TYPE__ __packed = 0;\n+      __UINT64_TYPE__ __packed_types = 0;\n       for (auto __i = __types.rbegin(); __i != __types.rend(); ++__i)\n-\t__packed = (__packed << _Bits) | *__i;\n-      return __packed;\n+\t__packed_types = (__packed_types << _Bits) | *__i;\n+      return __packed_types;\n     }\n } // namespace __format\n /// @endcond"}, {"sha": "5f1be094515402dcb9d2f186e2d79d537ae32e12", "filename": "libstdc++-v3/testsuite/17_intro/badnames.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ded30b361d2b1e43048b640e9ad6fef161fe9a9/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fbadnames.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ded30b361d2b1e43048b640e9ad6fef161fe9a9/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fbadnames.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fbadnames.cc?ref=0ded30b361d2b1e43048b640e9ad6fef161fe9a9", "patch": "@@ -16,6 +16,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile { target x86_64-*-linux* } }\n+// { dg-add-options no_pch }\n \n // Names taken from coding_style.bad_identifiers in the libstdc++ manual.\n // We can't test this on all targets, because these names are used in"}, {"sha": "ffbb199797b9aa59d15ab8bc9a0f8d4ac27c0ec1", "filename": "libstdc++-v3/testsuite/17_intro/names.cc", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ded30b361d2b1e43048b640e9ad6fef161fe9a9/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fnames.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ded30b361d2b1e43048b640e9ad6fef161fe9a9/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fnames.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fnames.cc?ref=0ded30b361d2b1e43048b640e9ad6fef161fe9a9", "patch": "@@ -129,8 +129,11 @@\n #define ptr (\n #endif\n \n-// This clashes with newlib so don't use it.\n+// These clash with newlib so don't use them.\n # define __lockable\t\tcannot be used as an identifier\n+# define __packed\t\tcannot be used as an identifier\n+# define __unused\t\tcannot be used as an identifier\n+# define __used\t\t\tcannot be used as an identifier\n \n #ifndef __APPLE__\n #define __weak   predefined qualifier on darwin\n@@ -239,8 +242,11 @@\n #endif\n \n #if __has_include(<newlib.h>)\n-// newlib's <sys/cdefs.h> defines __lockable as a macro.\n+// newlib's <sys/cdefs.h> defines these as macros.\n #undef __lockable\n+#undef __packed\n+#undef __unused\n+#undef __used\n // newlib's <time.h> defines __tzrule_type with these members.\n #undef d\n #undef m"}]}