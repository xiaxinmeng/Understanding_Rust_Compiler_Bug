{"sha": "601fc26e4e7625131573450f11dfb7ae5f57ffeb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAxZmMyNmU0ZTc2MjUxMzE1NzM0NTBmMTFkZmI3YWU1ZjU3ZmZlYg==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2010-01-08T21:54:37Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2010-01-08T21:54:37Z"}, "message": "re PR target/37454 (gcc: unrecognized option '-rdynamic')\n\n2010-01-08  Steve Ellcey  <sje@cup.hp.com>\n\n\tPR target/37454\n\t* configure.ac: Modify -rdynamic check.\n\t* configure: Regenerate.\n\nFrom-SVN: r155745", "tree": {"sha": "1c4268e5a2e7410d018f9ca9d3e41978eaaeb487", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c4268e5a2e7410d018f9ca9d3e41978eaaeb487"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/601fc26e4e7625131573450f11dfb7ae5f57ffeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/601fc26e4e7625131573450f11dfb7ae5f57ffeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/601fc26e4e7625131573450f11dfb7ae5f57ffeb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/601fc26e4e7625131573450f11dfb7ae5f57ffeb/comments", "author": null, "committer": null, "parents": [{"sha": "e51ded7c74e8911008fac61475f436faa2ef8140", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e51ded7c74e8911008fac61475f436faa2ef8140", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e51ded7c74e8911008fac61475f436faa2ef8140"}], "stats": {"total": 88, "additions": 35, "deletions": 53}, "files": [{"sha": "b524bae2137125e790213586005a312b64bb4667", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/601fc26e4e7625131573450f11dfb7ae5f57ffeb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/601fc26e4e7625131573450f11dfb7ae5f57ffeb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=601fc26e4e7625131573450f11dfb7ae5f57ffeb", "patch": "@@ -1,3 +1,9 @@\n+2010-01-08  Steve Ellcey  <sje@cup.hp.com>\n+\n+\tPR target/37454\n+\t* configure.ac: Modify -rdynamic check.\n+\t* configure: Regenerate.\n+\n 2010-01-08  DJ Delorie  <dj@redhat.com>\n \n \t* config/sh/sh.c (sh_expand_epilogue): Fix interrupt handler"}, {"sha": "4a1fe5b75f22a7eb4885e947170df00533cafcb6", "filename": "gcc/configure", "status": "modified", "additions": 15, "deletions": 35, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/601fc26e4e7625131573450f11dfb7ae5f57ffeb/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/601fc26e4e7625131573450f11dfb7ae5f57ffeb/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=601fc26e4e7625131573450f11dfb7ae5f57ffeb", "patch": "@@ -25017,39 +25017,22 @@ fi\n \n pluginlibs=\n if test x\"$enable_plugin\" = x\"yes\"; then\n-  # Check that the host supports -rdynamic and -ldl\n-  have_rdynamic=no\n-  have_dl=no\n-  saved_LDFLAGS=\"$LDFLAGS\"\n-  saved_LIBS=\"$LIBS\"\n-  LIBS=\n-\n-  # Check -rdynamic\n-  LDFLAGS=\"$LDFLAGS -rdynamic\"\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -rdynamic\" >&5\n-$as_echo_n \"checking for -rdynamic... \" >&6; }\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n \n-int\n-main ()\n-{\n-return 0;\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_link \"$LINENO\"; then :\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n-$as_echo \"yes\" >&6; }; have_rdynamic=yes\n-else\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-fi\n-rm -f core conftest.err conftest.$ac_objext \\\n-    conftest$ac_exeext conftest.$ac_ext\n-  if test x\"$have_rdynamic\" = x\"yes\" ; then\n-    pluginlibs=\"-rdynamic\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for exported symbols\" >&5\n+$as_echo_n \"checking for exported symbols... \" >&6; }\n+  echo \"int main() {return 0;} int foobar() {return 0;}\" > conftest.c\n+  ${CC} ${CFLAGS} ${LDFLAGS} conftest.c -o conftest > /dev/null 2>&1\n+  if $gcc_cv_objdump -T conftest | grep foobar > /dev/null; then\n+    : # No need to use a flag\n+  else\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -rdynamic\" >&5\n+$as_echo_n \"checking for -rdynamic... \" >&6; }\n+    ${CC} ${CFLAGS} ${LDFLAGS} -rdynamic conftest.c -o conftest > /dev/null 2>&1\n+    if $gcc_cv_objdump -T conftest | grep foobar > /dev/null; then\n+      pluginlibs=\"-rdynamic\"\n+    else\n+      enable_plugin=no\n+    fi\n   fi\n \n   # Check -ldl\n@@ -25150,9 +25133,6 @@ Building GCC with plugin support requires a host that supports\n -fPIC, -shared, -ldl and -rdynamic.\" \"$LINENO\" 5\n     fi\n   fi\n-\n-  LDFLAGS=\"$saved_LDFLAGS\"\n-  LIBS=\"$saved_LIBS\"\n fi\n \n "}, {"sha": "ab1d7754b8f60769acd47926bbf219a959bd2094", "filename": "gcc/configure.ac", "status": "modified", "additions": 14, "deletions": 18, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/601fc26e4e7625131573450f11dfb7ae5f57ffeb/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/601fc26e4e7625131573450f11dfb7ae5f57ffeb/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=601fc26e4e7625131573450f11dfb7ae5f57ffeb", "patch": "@@ -4297,21 +4297,20 @@ enable_plugin=yes; default_plugin=yes)\n \n pluginlibs=\n if test x\"$enable_plugin\" = x\"yes\"; then\n-  # Check that the host supports -rdynamic and -ldl\n-  have_rdynamic=no\n-  have_dl=no\n-  saved_LDFLAGS=\"$LDFLAGS\"\n-  saved_LIBS=\"$LIBS\"\n-  LIBS=\n-\n-  # Check -rdynamic\n-  LDFLAGS=\"$LDFLAGS -rdynamic\"\n-  AC_MSG_CHECKING([for -rdynamic])\n-  AC_TRY_LINK([],[return 0;],\n-    [AC_MSG_RESULT([yes]); have_rdynamic=yes],\n-    [AC_MSG_RESULT([no])])\n-  if test x\"$have_rdynamic\" = x\"yes\" ; then\n-    pluginlibs=\"-rdynamic\"\n+\n+  AC_MSG_CHECKING([for exported symbols])\n+  echo \"int main() {return 0;} int foobar() {return 0;}\" > conftest.c\n+  ${CC} ${CFLAGS} ${LDFLAGS} conftest.c -o conftest > /dev/null 2>&1\n+  if $gcc_cv_objdump -T conftest | grep foobar > /dev/null; then\n+    : # No need to use a flag\n+  else\n+    AC_MSG_CHECKING([for -rdynamic])\n+    ${CC} ${CFLAGS} ${LDFLAGS} -rdynamic conftest.c -o conftest > /dev/null 2>&1\n+    if $gcc_cv_objdump -T conftest | grep foobar > /dev/null; then\n+      pluginlibs=\"-rdynamic\"\n+    else\n+      enable_plugin=no\n+    fi\n   fi\n \n   # Check -ldl\n@@ -4340,9 +4339,6 @@ Building GCC with plugin support requires a host that supports\n -fPIC, -shared, -ldl and -rdynamic.])\n     fi\n   fi\n-\n-  LDFLAGS=\"$saved_LDFLAGS\"\n-  LIBS=\"$saved_LIBS\"\n fi\n \n AC_SUBST(pluginlibs)"}]}