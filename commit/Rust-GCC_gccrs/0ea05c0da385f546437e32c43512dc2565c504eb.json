{"sha": "0ea05c0da385f546437e32c43512dc2565c504eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVhMDVjMGRhMzg1ZjU0NjQzN2UzMmM0MzUxMmRjMjU2NWM1MDRlYg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-02-28T20:53:47Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-02-28T20:53:47Z"}, "message": "re PR java/9695 (Inner class bug prevent GNU Classpath from compiling)\n\n\tPR java/9695:\n\t* class.c (maybe_layout_super_class): Always pass a WFL to\n\tdo_resolve_class.\n\t* parse.y (do_resolve_class): Updated comment to explain\n\tparameters.\n\nFrom-SVN: r63584", "tree": {"sha": "ff933323332bdbed9ede2133d881c80430e36a4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff933323332bdbed9ede2133d881c80430e36a4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ea05c0da385f546437e32c43512dc2565c504eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea05c0da385f546437e32c43512dc2565c504eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ea05c0da385f546437e32c43512dc2565c504eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea05c0da385f546437e32c43512dc2565c504eb/comments", "author": null, "committer": null, "parents": [{"sha": "8c108db21b23f8083867ff2cec09d9f0110258c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c108db21b23f8083867ff2cec09d9f0110258c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c108db21b23f8083867ff2cec09d9f0110258c2"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "17ab8447943fd7cf5a12f633d9091fd521e3c0c8", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea05c0da385f546437e32c43512dc2565c504eb/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea05c0da385f546437e32c43512dc2565c504eb/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=0ea05c0da385f546437e32c43512dc2565c504eb", "patch": "@@ -1,3 +1,11 @@\n+2003-02-28  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR java/9695:\n+\t* class.c (maybe_layout_super_class): Always pass a WFL to\n+\tdo_resolve_class.\n+\t* parse.y (do_resolve_class): Updated comment to explain\n+\tparameters.\n+\n 2003-02-26  Tom Tromey  <tromey@redhat.com>\n \n \t* jcf-write.c (generate_classfile): Check whether class is"}, {"sha": "f121f0e95c521ef6cd5dc671093529981fddcc0b", "filename": "gcc/java/class.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea05c0da385f546437e32c43512dc2565c504eb/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea05c0da385f546437e32c43512dc2565c504eb/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=0ea05c0da385f546437e32c43512dc2565c504eb", "patch": "@@ -1726,8 +1726,19 @@ maybe_layout_super_class (tree super_class, tree this_class)\n \tsuper_class = TREE_TYPE (super_class);\n       else\n \t{\n+\t  /* do_resolve_class expects an EXPR_WITH_FILE_LOCATION, so\n+\t     we give it one.  */\n+\t  tree this_wrap = NULL_TREE;\n+\n+\t  if (this_class)\n+\t    {\n+\t      tree this_decl = TYPE_NAME (this_class);\n+\t      this_wrap = build_expr_wfl (this_class,\n+\t\t\t\t\t  DECL_SOURCE_FILE (this_decl),\n+\t\t\t\t\t  DECL_SOURCE_LINE (this_decl), 0);\n+\t    }\n \t  super_class = do_resolve_class (NULL_TREE, /* FIXME? */\n-\t\t\t\t\t  super_class, NULL_TREE, this_class);\n+\t\t\t\t\t  super_class, NULL_TREE, this_wrap);\n \t  if (!super_class)\n \t    return NULL_TREE;\t/* FIXME, NULL_TREE not checked by caller. */\n \t  super_class = TREE_TYPE (super_class);"}, {"sha": "dd05c1a98c1f49f7437e19ddb140b1316efa8dd2", "filename": "gcc/java/parse.y", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea05c0da385f546437e32c43512dc2565c504eb/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea05c0da385f546437e32c43512dc2565c504eb/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=0ea05c0da385f546437e32c43512dc2565c504eb", "patch": "@@ -5678,11 +5678,11 @@ resolve_class (tree enclosing, tree class_type, tree decl, tree cl)\n   return resolved_type_decl;\n }\n \n-/* Effectively perform the resolution of class CLASS_TYPE. DECL or CL\n-   are used to report error messages. Do not try to replace TYPE_NAME\n-   (class_type) by a variable, since it is changed by\n-   find_in_imports{_on_demand} and (but it doesn't really matter)\n-   qualify_and_find.  */\n+/* Effectively perform the resolution of class CLASS_TYPE.  DECL or CL\n+   are used to report error messages; CL must either be NULL_TREE or a\n+   WFL wrapping a class.  Do not try to replace TYPE_NAME (class_type)\n+   by a variable, since it is changed by find_in_imports{_on_demand}\n+   and (but it doesn't really matter) qualify_and_find.  */\n \n tree\n do_resolve_class (tree enclosing, tree class_type, tree decl, tree cl)"}]}