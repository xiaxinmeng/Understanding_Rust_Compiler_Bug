{"sha": "ed79f4d0023ac6c7f26e3cc484f30b0327b763d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ3OWY0ZDAwMjNhYzZjN2YyNmUzY2M0ODRmMzBiMDMyN2I3NjNkMQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2014-04-18T13:31:57Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2014-04-18T13:31:57Z"}, "message": "vsx.md (vsx_xxmrghw_<mode>): Adjust for little-endian.\n\n[gcc]\n\n2014-04-18  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* config/rs6000/vsx.md (vsx_xxmrghw_<mode>): Adjust for\n\tlittle-endian.\n\t(vsx_xxmrglw_<mode>): Likewise.\n\n[gcc/testsuite]\n\n2014-04-18  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* gcc.dg/vmx/merge-vsx.c: Add V4SI and V4SF tests.\n\t* gcc.dg/vmx/merge-vsx-be-order.c: Likewise.\n\nFrom-SVN: r209516", "tree": {"sha": "07df89b703ce258aabc1751a77a8afe668448e2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07df89b703ce258aabc1751a77a8afe668448e2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed79f4d0023ac6c7f26e3cc484f30b0327b763d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed79f4d0023ac6c7f26e3cc484f30b0327b763d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed79f4d0023ac6c7f26e3cc484f30b0327b763d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed79f4d0023ac6c7f26e3cc484f30b0327b763d1/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f634721cbbf07a26e93ac4b073e0b81ce8f27b8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f634721cbbf07a26e93ac4b073e0b81ce8f27b8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f634721cbbf07a26e93ac4b073e0b81ce8f27b8d"}], "stats": {"total": 85, "additions": 83, "deletions": 2}, "files": [{"sha": "b6ce19eeca8c7c2bfba14eec7c89cac0cb2c5046", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed79f4d0023ac6c7f26e3cc484f30b0327b763d1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed79f4d0023ac6c7f26e3cc484f30b0327b763d1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed79f4d0023ac6c7f26e3cc484f30b0327b763d1", "patch": "@@ -1,3 +1,9 @@\n+2014-04-18  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/vsx.md (vsx_xxmrghw_<mode>): Adjust for\n+\tlittle-endian.\n+\t(vsx_xxmrglw_<mode>): Likewise.\n+\n 2014-04-17  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/60876"}, {"sha": "23d85ab0628f960443547f5d8441a7ba88646021", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed79f4d0023ac6c7f26e3cc484f30b0327b763d1/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed79f4d0023ac6c7f26e3cc484f30b0327b763d1/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=ed79f4d0023ac6c7f26e3cc484f30b0327b763d1", "patch": "@@ -1891,7 +1891,12 @@\n \t  (parallel [(const_int 0) (const_int 4)\n \t\t     (const_int 1) (const_int 5)])))]\n   \"VECTOR_MEM_VSX_P (<MODE>mode)\"\n-  \"xxmrghw %x0,%x1,%x2\"\n+{\n+  if (BYTES_BIG_ENDIAN)\n+    return \"xxmrghw %x0,%x1,%x2\";\n+  else\n+    return \"xxmrglw %x0,%x2,%x1\";\n+}\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"vsx_xxmrglw_<mode>\"\n@@ -1903,7 +1908,12 @@\n \t  (parallel [(const_int 2) (const_int 6)\n \t\t     (const_int 3) (const_int 7)])))]\n   \"VECTOR_MEM_VSX_P (<MODE>mode)\"\n-  \"xxmrglw %x0,%x1,%x2\"\n+{\n+  if (BYTES_BIG_ENDIAN)\n+    return \"xxmrglw %x0,%x1,%x2\";\n+  else\n+    return \"xxmrghw %x0,%x2,%x1\";\n+}\n   [(set_attr \"type\" \"vecperm\")])\n \n ;; Shift left double by word immediate"}, {"sha": "d1ad53cb3d1f17b07efe0c69e9a6c9c1387532e1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed79f4d0023ac6c7f26e3cc484f30b0327b763d1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed79f4d0023ac6c7f26e3cc484f30b0327b763d1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ed79f4d0023ac6c7f26e3cc484f30b0327b763d1", "patch": "@@ -1,3 +1,8 @@\n+2014-04-18  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* gcc.dg/vmx/merge-vsx.c: Add V4SI and V4SF tests.\n+\t* gcc.dg/vmx/merge-vsx-be-order.c: Likewise.\n+\n 2014-04-17  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/59200"}, {"sha": "56e0b0e6c2e1a1fea699e1998cfc69233a56c4ec", "filename": "gcc/testsuite/gcc.dg/vmx/merge-vsx-be-order.c", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed79f4d0023ac6c7f26e3cc484f30b0327b763d1/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fmerge-vsx-be-order.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed79f4d0023ac6c7f26e3cc484f30b0327b763d1/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fmerge-vsx-be-order.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fmerge-vsx-be-order.c?ref=ed79f4d0023ac6c7f26e3cc484f30b0327b763d1", "patch": "@@ -21,31 +21,64 @@ static void test()\n   vector long long vlb = {0,1};\n   vector double vda = {-2.0,-1.0};\n   vector double vdb = {0.0,1.0};\n+  vector unsigned int vuia = {0,1,2,3};\n+  vector unsigned int vuib = {4,5,6,7};\n+  vector signed int vsia = {-4,-3,-2,-1};\n+  vector signed int vsib = {0,1,2,3};\n+  vector float vfa = {-4.0,-3.0,-2.0,-1.0};\n+  vector float vfb = {0.0,1.0,2.0,3.0};\n \n   /* Result vectors.  */\n   vector long long vlh, vll;\n   vector double vdh, vdl;\n+  vector unsigned int vuih, vuil;\n+  vector signed int vsih, vsil;\n+  vector float vfh, vfl;\n \n   /* Expected result vectors.  */\n #if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__\n   vector long long vlrh = {1,-1};\n   vector long long vlrl = {0,-2};\n   vector double vdrh = {1.0,-1.0};\n   vector double vdrl = {0.0,-2.0};\n+  vector unsigned int vuirh = {6,2,7,3};\n+  vector unsigned int vuirl = {4,0,5,1};\n+  vector signed int vsirh = {2,-2,3,-1};\n+  vector signed int vsirl = {0,-4,1,-3};\n+  vector float vfrh = {2.0,-2.0,3.0,-1.0};\n+  vector float vfrl = {0.0,-4.0,1.0,-3.0};\n #else\n   vector long long vlrh = {-2,0};\n   vector long long vlrl = {-1,1};\n   vector double vdrh = {-2.0,0.0};\n   vector double vdrl = {-1.0,1.0};\n+  vector unsigned int vuirh = {0,4,1,5};\n+  vector unsigned int vuirl = {2,6,3,7};\n+  vector signed int vsirh = {-4,0,-3,1};\n+  vector signed int vsirl = {-2,2,-1,3};\n+  vector float vfrh = {-4.0,0.0,-3.0,1.0};\n+  vector float vfrl = {-2.0,2.0,-1.0,3.0};\n #endif\n \n   vlh = vec_mergeh (vla, vlb);\n   vll = vec_mergel (vla, vlb);\n   vdh = vec_mergeh (vda, vdb);\n   vdl = vec_mergel (vda, vdb);\n+  vuih = vec_mergeh (vuia, vuib);\n+  vuil = vec_mergel (vuia, vuib);\n+  vsih = vec_mergeh (vsia, vsib);\n+  vsil = vec_mergel (vsia, vsib);\n+  vfh  = vec_mergeh (vfa,  vfb );\n+  vfl  = vec_mergel (vfa,  vfb );\n \n   check (vec_long_long_eq (vlh, vlrh), \"vlh\");\n   check (vec_long_long_eq (vll, vlrl), \"vll\");\n   check (vec_double_eq (vdh, vdrh), \"vdh\" );\n   check (vec_double_eq (vdl, vdrl), \"vdl\" );\n+  check (vec_all_eq (vuih, vuirh), \"vuih\");\n+  check (vec_all_eq (vuil, vuirl), \"vuil\");\n+  check (vec_all_eq (vsih, vsirh), \"vsih\");\n+  check (vec_all_eq (vsil, vsirl), \"vsil\");\n+  check (vec_all_eq (vfh,  vfrh),  \"vfh\");\n+  check (vec_all_eq (vfl,  vfrl),  \"vfl\");\n }"}, {"sha": "40693e95b33606a706ec886a3dc9b87f5c795d30", "filename": "gcc/testsuite/gcc.dg/vmx/merge-vsx.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed79f4d0023ac6c7f26e3cc484f30b0327b763d1/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fmerge-vsx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed79f4d0023ac6c7f26e3cc484f30b0327b763d1/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fmerge-vsx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fmerge-vsx.c?ref=ed79f4d0023ac6c7f26e3cc484f30b0327b763d1", "patch": "@@ -21,24 +21,51 @@ static void test()\n   vector long long vlb = {0,1};\n   vector double vda = {-2.0,-1.0};\n   vector double vdb = {0.0,1.0};\n+  vector unsigned int vuia = {0,1,2,3};\n+  vector unsigned int vuib = {4,5,6,7};\n+  vector signed int vsia = {-4,-3,-2,-1};\n+  vector signed int vsib = {0,1,2,3};\n+  vector float vfa = {-4.0,-3.0,-2.0,-1.0};\n+  vector float vfb = {0.0,1.0,2.0,3.0};\n \n   /* Result vectors.  */\n   vector long long vlh, vll;\n   vector double vdh, vdl;\n+  vector unsigned int vuih, vuil;\n+  vector signed int vsih, vsil;\n+  vector float vfh, vfl;\n \n   /* Expected result vectors.  */\n   vector long long vlrh = {-2,0};\n   vector long long vlrl = {-1,1};\n   vector double vdrh = {-2.0,0.0};\n   vector double vdrl = {-1.0,1.0};\n+  vector unsigned int vuirh = {0,4,1,5};\n+  vector unsigned int vuirl = {2,6,3,7};\n+  vector signed int vsirh = {-4,0,-3,1};\n+  vector signed int vsirl = {-2,2,-1,3};\n+  vector float vfrh = {-4.0,0.0,-3.0,1.0};\n+  vector float vfrl = {-2.0,2.0,-1.0,3.0};\n \n   vlh = vec_mergeh (vla, vlb);\n   vll = vec_mergel (vla, vlb);\n   vdh = vec_mergeh (vda, vdb);\n   vdl = vec_mergel (vda, vdb);\n+  vuih = vec_mergeh (vuia, vuib);\n+  vuil = vec_mergel (vuia, vuib);\n+  vsih = vec_mergeh (vsia, vsib);\n+  vsil = vec_mergel (vsia, vsib);\n+  vfh  = vec_mergeh (vfa,  vfb );\n+  vfl  = vec_mergel (vfa,  vfb );\n \n   check (vec_long_long_eq (vlh, vlrh), \"vlh\");\n   check (vec_long_long_eq (vll, vlrl), \"vll\");\n   check (vec_double_eq (vdh, vdrh), \"vdh\" );\n   check (vec_double_eq (vdl, vdrl), \"vdl\" );\n+  check (vec_all_eq (vuih, vuirh), \"vuih\");\n+  check (vec_all_eq (vuil, vuirl), \"vuil\");\n+  check (vec_all_eq (vsih, vsirh), \"vsih\");\n+  check (vec_all_eq (vsil, vsirl), \"vsil\");\n+  check (vec_all_eq (vfh,  vfrh),  \"vfh\");\n+  check (vec_all_eq (vfl,  vfrl),  \"vfl\");\n }"}]}