{"sha": "19a13d5a1d695465b3c3905b7c8ec888add1a39e", "node_id": "C_kwDOANBUbNoAKDE5YTEzZDVhMWQ2OTU0NjViM2MzOTA1YjdjOGVjODg4YWRkMWEzOWU", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-02-02T15:23:37Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-02-10T09:11:56Z"}, "message": "[nvptx] Handle sm_7x shared atomic store more optimal\n\nFor sm_7x atomic stores we fall back on expand_atomic_store, but this\nresults in using membar.sys for shared stores.\n\nFix this by adding an nvptx_atomic_store insn that adds a membar.cta for a\nshared store.\n\nTested on x86_64 with nvptx accelerator.\n\ngcc/ChangeLog:\n\n2022-02-02  Tom de Vries  <tdevries@suse.de>\n\n\t* config/nvptx/nvptx.md (define_insn \"nvptx_atomic_store<mode>\"): New\n\tdefine_insn.\n\t(define_expand \"atomic_store<mode>\"): Use nvptx_atomic_store<mode> for\n\tTARGET_SM70.\n\t(define_c_enum \"unspecv\"): Add UNSPECV_ST.\n\ngcc/testsuite/ChangeLog:\n\n2022-02-02  Tom de Vries  <tdevries@suse.de>\n\n\t* gcc.target/nvptx/atomic-store-2.c: New test.", "tree": {"sha": "c435edfc1a68f095cdbc240e071ea6827125c2fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c435edfc1a68f095cdbc240e071ea6827125c2fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19a13d5a1d695465b3c3905b7c8ec888add1a39e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19a13d5a1d695465b3c3905b7c8ec888add1a39e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19a13d5a1d695465b3c3905b7c8ec888add1a39e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19a13d5a1d695465b3c3905b7c8ec888add1a39e/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e7d4e82dc9fecb051e9ac422c312b26206d5ecd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e7d4e82dc9fecb051e9ac422c312b26206d5ecd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e7d4e82dc9fecb051e9ac422c312b26206d5ecd"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "4c378ec6ecb63fcc44191bd945bd8c5801445ca2", "filename": "gcc/config/nvptx/nvptx.md", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19a13d5a1d695465b3c3905b7c8ec888add1a39e/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19a13d5a1d695465b3c3905b7c8ec888add1a39e/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.md?ref=19a13d5a1d695465b3c3905b7c8ec888add1a39e", "patch": "@@ -57,6 +57,7 @@\n    UNSPECV_CAS\n    UNSPECV_CAS_LOCAL\n    UNSPECV_XCHG\n+   UNSPECV_ST\n    UNSPECV_BARSYNC\n    UNSPECV_WARPSYNC\n    UNSPECV_UNIFORM_WARP_CHECK\n@@ -2067,8 +2068,11 @@\n     }\n \n   if (TARGET_SM70)\n-    /* Fall back to expand_atomic_store.  */\n-    FAIL;\n+    {\n+       emit_insn (gen_nvptx_atomic_store<mode> (operands[0], operands[1],\n+\t\t\t\t\t\toperands[2]));\n+       DONE;\n+    }\n \n   bool maybe_shared_p = nvptx_mem_maybe_shared_p (operands[0]);\n   if (!maybe_shared_p)\n@@ -2081,6 +2085,20 @@\n   DONE;\n })\n \n+(define_insn \"nvptx_atomic_store<mode>\"\n+  [(set (match_operand:SDIM 0 \"memory_operand\" \"+m\")\t      ;; memory\n+       (unspec_volatile:SDIM\n+\t [(match_operand:SDIM 1 \"nvptx_nonmemory_operand\" \"Ri\") ;; input\n+\t  (match_operand:SI 2 \"const_int_operand\")]\t\t;; model\n+\t       UNSPECV_ST))]\n+  \"TARGET_SM70\"\n+  {\n+    const char *t\n+      = \"%.\\tst%A0.b%T0\\t%0, %1;\";\n+    return nvptx_output_atomic_insn (t, operands, 0, 2);\n+  }\n+  [(set_attr \"atomic\" \"true\")])\n+\n (define_insn \"atomic_fetch_add<mode>\"\n   [(set (match_operand:SDIM 1 \"memory_operand\" \"+m\")\n \t(unspec_volatile:SDIM"}, {"sha": "cd5e4c38267a2fa4760e91843e851b7eec9fd99c", "filename": "gcc/testsuite/gcc.target/nvptx/atomic-store-2.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19a13d5a1d695465b3c3905b7c8ec888add1a39e/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fatomic-store-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19a13d5a1d695465b3c3905b7c8ec888add1a39e/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fatomic-store-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fatomic-store-2.c?ref=19a13d5a1d695465b3c3905b7c8ec888add1a39e", "patch": "@@ -0,0 +1,26 @@\n+/* Test the atomic store expansion for sm > sm_6x targets,\n+   shared state space.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-misa=sm_75\" } */\n+\n+enum memmodel\n+{\n+  MEMMODEL_SEQ_CST = 5\n+};\n+\n+unsigned int u32 __attribute__((shared));\n+unsigned long long int u64 __attribute__((shared));\n+\n+int\n+main()\n+{\n+  __atomic_store_n (&u32, 0, MEMMODEL_SEQ_CST);\n+  __atomic_store_n (&u64, 0, MEMMODEL_SEQ_CST);\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler-times \"st.shared.b32\" 1 } } */\n+/* { dg-final { scan-assembler-times \"st.shared.b64\" 1 } } */\n+/* { dg-final { scan-assembler-times \"membar.cta\" 4 } } */"}]}