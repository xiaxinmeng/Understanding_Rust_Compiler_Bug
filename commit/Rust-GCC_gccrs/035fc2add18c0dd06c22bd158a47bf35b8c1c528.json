{"sha": "035fc2add18c0dd06c22bd158a47bf35b8c1c528", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM1ZmMyYWRkMThjMGRkMDZjMjJiZDE1OGE0N2JmMzViOGMxYzUyOA==", "commit": {"author": {"name": "Jim Wilson", "email": "jimw@sifive.com", "date": "2018-04-17T21:41:07Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2018-04-17T21:41:07Z"}, "message": "RISC-V: Fix 32-bit stack pointer alignment problem.\n\n\tgcc/\n\tPR 84856\n\t* config/riscv/riscv.c (riscv_compute_frame_info): Add calls to\n\tRISCV_STACK_ALIGN when using outgoing_args_size and pretend_args_size.\n\tSet arg_pointer_offset after using pretend_args_size.\n\nFrom-SVN: r259449", "tree": {"sha": "d7a3fd5c0cd7a1e37a3b3ea228d5bd4cbad7857a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7a3fd5c0cd7a1e37a3b3ea228d5bd4cbad7857a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/035fc2add18c0dd06c22bd158a47bf35b8c1c528", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/035fc2add18c0dd06c22bd158a47bf35b8c1c528", "html_url": "https://github.com/Rust-GCC/gccrs/commit/035fc2add18c0dd06c22bd158a47bf35b8c1c528", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/035fc2add18c0dd06c22bd158a47bf35b8c1c528/comments", "author": null, "committer": null, "parents": [{"sha": "cbe679a486d11b1d959042732a9ddc204afbb661", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbe679a486d11b1d959042732a9ddc204afbb661", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbe679a486d11b1d959042732a9ddc204afbb661"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "bf4f7cc92217d8687e45e47d1b7054f0b82e59e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/035fc2add18c0dd06c22bd158a47bf35b8c1c528/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/035fc2add18c0dd06c22bd158a47bf35b8c1c528/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=035fc2add18c0dd06c22bd158a47bf35b8c1c528", "patch": "@@ -1,3 +1,10 @@\n+2018-04-17  Jim Wilson  <jimw@sifive.com>\n+\n+\tPR 84856\n+\t* config/riscv/riscv.c (riscv_compute_frame_info): Add calls to\n+\tRISCV_STACK_ALIGN when using outgoing_args_size and pretend_args_size.\n+\tSet arg_pointer_offset after using pretend_args_size.\n+\n 2018-04-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/85431"}, {"sha": "2870177fa97e4561b3d60d53dffe2b17e1182510", "filename": "gcc/config/riscv/riscv.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/035fc2add18c0dd06c22bd158a47bf35b8c1c528/gcc%2Fconfig%2Friscv%2Friscv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/035fc2add18c0dd06c22bd158a47bf35b8c1c528/gcc%2Fconfig%2Friscv%2Friscv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.c?ref=035fc2add18c0dd06c22bd158a47bf35b8c1c528", "patch": "@@ -3307,7 +3307,7 @@ riscv_compute_frame_info (void)\n     }\n \n   /* At the bottom of the frame are any outgoing stack arguments. */\n-  offset = crtl->outgoing_args_size;\n+  offset = RISCV_STACK_ALIGN (crtl->outgoing_args_size);\n   /* Next are local stack variables. */\n   offset += RISCV_STACK_ALIGN (get_frame_size ());\n   /* The virtual frame pointer points above the local variables. */\n@@ -3333,9 +3333,11 @@ riscv_compute_frame_info (void)\n   frame->hard_frame_pointer_offset = offset;\n   /* Above the hard frame pointer is the callee-allocated varags save area. */\n   offset += RISCV_STACK_ALIGN (cfun->machine->varargs_size);\n-  frame->arg_pointer_offset = offset;\n   /* Next is the callee-allocated area for pretend stack arguments.  */\n-  offset += crtl->args.pretend_args_size;\n+  offset += RISCV_STACK_ALIGN (crtl->args.pretend_args_size);\n+  /* Arg pointer must be below pretend args, but must be above alignment\n+     padding.  */\n+  frame->arg_pointer_offset = offset - crtl->args.pretend_args_size;\n   frame->total_size = offset;\n   /* Next points the incoming stack pointer and any incoming arguments. */\n "}]}