{"sha": "c4f372c54f24fd24f1092fb6a09c31c7733ce8cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRmMzcyYzU0ZjI0ZmQyNGYxMDkyZmI2YTA5YzMxYzc3MzNjZThjYw==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2019-09-19T08:13:25Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-09-19T08:13:25Z"}, "message": "[Ada] Remove duplicated routines for getting homonym number\n\nRoutines Homonym_Number and Get_Homonym_Number were exactly the same,\nexcept for minor style differences. Keep the one in Exp_Util; remove the\none in Exp_Dbug. No test attached, because semantics is unaffected.\n\n2019-09-19  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* exp_dbug.ads, exp_dbug.adb (Get_Homonym_Number): Remove.\n\t(Append_Homonym_Number): Use Homonym_Number instead of\n\tGet_Homonym_Number.\n\t* exp_util.ads, exp_util.adb (Homonym_Number): Mirror style of\n\tthe removed Get_Homonym_Number routine, i.e. initialize local\n\tobjects at declaration and refine the type of result.\n\t* sem_util.adb (Add_Homonym_Suffix): Use Homonym_Number instead\n\tof Get_Homonym_Number.\n\nFrom-SVN: r275940", "tree": {"sha": "3e158cd7eb87635e806b4203f28e331135a1e9ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e158cd7eb87635e806b4203f28e331135a1e9ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4f372c54f24fd24f1092fb6a09c31c7733ce8cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4f372c54f24fd24f1092fb6a09c31c7733ce8cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4f372c54f24fd24f1092fb6a09c31c7733ce8cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4f372c54f24fd24f1092fb6a09c31c7733ce8cc/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "890cde5319470afab7e96e3b7953075681c015f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/890cde5319470afab7e96e3b7953075681c015f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/890cde5319470afab7e96e3b7953075681c015f5"}], "stats": {"total": 51, "additions": 18, "deletions": 33}, "files": [{"sha": "1f3128e178a13f85cbc5c46be83ad6a624f4ef53", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4f372c54f24fd24f1092fb6a09c31c7733ce8cc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4f372c54f24fd24f1092fb6a09c31c7733ce8cc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c4f372c54f24fd24f1092fb6a09c31c7733ce8cc", "patch": "@@ -1,3 +1,14 @@\n+2019-09-19  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* exp_dbug.ads, exp_dbug.adb (Get_Homonym_Number): Remove.\n+\t(Append_Homonym_Number): Use Homonym_Number instead of\n+\tGet_Homonym_Number.\n+\t* exp_util.ads, exp_util.adb (Homonym_Number): Mirror style of\n+\tthe removed Get_Homonym_Number routine, i.e. initialize local\n+\tobjects at declaration and refine the type of result.\n+\t* sem_util.adb (Add_Homonym_Suffix): Use Homonym_Number instead\n+\tof Get_Homonym_Number.\n+\n 2019-09-19  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch13.adb (Check_Aspect_At_End_Of_Declarations): Simplify"}, {"sha": "5f650984fd0db397eb9fb62fe8044c3dd234a9a0", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 2, "deletions": 21, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4f372c54f24fd24f1092fb6a09c31c7733ce8cc/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4f372c54f24fd24f1092fb6a09c31c7733ce8cc/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=c4f372c54f24fd24f1092fb6a09c31c7733ce8cc", "patch": "@@ -27,6 +27,7 @@ with Alloc;\n with Atree;    use Atree;\n with Debug;    use Debug;\n with Einfo;    use Einfo;\n+with Exp_Util; use Exp_Util;\n with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n with Opt;      use Opt;\n@@ -224,7 +225,7 @@ package body Exp_Dbug is\n             Homonym_Numbers (Homonym_Len) := '_';\n          end if;\n \n-         Add_Nat_To_H (Get_Homonym_Number (E));\n+         Add_Nat_To_H (Homonym_Number (E));\n       end if;\n    end Append_Homonym_Number;\n \n@@ -1054,26 +1055,6 @@ package body Exp_Dbug is\n       end loop;\n    end Build_Subprogram_Instance_Renamings;\n \n-   ------------------------\n-   -- Get_Homonym_Number --\n-   ------------------------\n-\n-   function Get_Homonym_Number (E : Entity_Id) return Pos is\n-      H  : Entity_Id := Homonym (E);\n-      Nr : Pos := 1;\n-\n-   begin\n-      while Present (H) loop\n-         if Scope (H) = Scope (E) then\n-            Nr := Nr + 1;\n-         end if;\n-\n-         H := Homonym (H);\n-      end loop;\n-\n-      return Nr;\n-   end Get_Homonym_Number;\n-\n    ------------------------------------\n    -- Get_Secondary_DT_External_Name --\n    ------------------------------------"}, {"sha": "93b978378f9e5d4b4f4ad94bfc0c6eed654c80ce", "filename": "gcc/ada/exp_dbug.ads", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4f372c54f24fd24f1092fb6a09c31c7733ce8cc/gcc%2Fada%2Fexp_dbug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4f372c54f24fd24f1092fb6a09c31c7733ce8cc/gcc%2Fada%2Fexp_dbug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.ads?ref=c4f372c54f24fd24f1092fb6a09c31c7733ce8cc", "patch": "@@ -460,10 +460,6 @@ package Exp_Dbug is\n    -- Subprograms for Handling Qualification --\n    --------------------------------------------\n \n-   function Get_Homonym_Number (E : Entity_Id) return Pos;\n-   --  Return the homonym number for E, which is its position in the homonym\n-   --  chain starting at 1. This is exported for use in GNATprove.\n-\n    procedure Qualify_Entity_Names (N : Node_Id);\n    --  Given a node N, that represents a block, subprogram body, or package\n    --  body or spec, or protected or task type, sets a fully qualified name"}, {"sha": "905e3f4ddea5c22b202bcb56a81e09c67a2f2c4b", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4f372c54f24fd24f1092fb6a09c31c7733ce8cc/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4f372c54f24fd24f1092fb6a09c31c7733ce8cc/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=c4f372c54f24fd24f1092fb6a09c31c7733ce8cc", "patch": "@@ -6795,13 +6795,11 @@ package body Exp_Util is\n    -- Homonym_Number --\n    --------------------\n \n-   function Homonym_Number (Subp : Entity_Id) return Nat is\n-      Count : Nat;\n-      Hom   : Entity_Id;\n+   function Homonym_Number (Subp : Entity_Id) return Pos is\n+      Hom   : Entity_Id := Homonym (Subp);\n+      Count : Pos := 1;\n \n    begin\n-      Count := 1;\n-      Hom := Homonym (Subp);\n       while Present (Hom) loop\n          if Scope (Hom) = Scope (Subp) then\n             Count := Count + 1;"}, {"sha": "02fb233f97c9fd72d6c010b392aa31154d246a81", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4f372c54f24fd24f1092fb6a09c31c7733ce8cc/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4f372c54f24fd24f1092fb6a09c31c7733ce8cc/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=c4f372c54f24fd24f1092fb6a09c31c7733ce8cc", "patch": "@@ -734,7 +734,7 @@ package Exp_Util is\n    --  pragmas at the start of the package declaration contains\n    --    pragma Annotate (GNATprove, External_Axiomatization);\n \n-   function Homonym_Number (Subp : Entity_Id) return Nat;\n+   function Homonym_Number (Subp : Entity_Id) return Pos;\n    --  Here subp is the entity for a subprogram. This routine returns the\n    --  homonym number used to disambiguate overloaded subprograms in the same\n    --  scope (the number is used as part of constructed names to make sure that"}, {"sha": "b276fd2bb897a90711700d37eb857df72e66ea21", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4f372c54f24fd24f1092fb6a09c31c7733ce8cc/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4f372c54f24fd24f1092fb6a09c31c7733ce8cc/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=c4f372c54f24fd24f1092fb6a09c31c7733ce8cc", "patch": "@@ -33,7 +33,6 @@ with Elists;   use Elists;\n with Errout;   use Errout;\n with Erroutc;  use Erroutc;\n with Exp_Ch11; use Exp_Ch11;\n-with Exp_Dbug; use Exp_Dbug;\n with Exp_Util; use Exp_Util;\n with Fname;    use Fname;\n with Freeze;   use Freeze;\n@@ -26314,7 +26313,7 @@ package body Sem_Util is\n \n          if Has_Homonym (U) then\n             declare\n-               N : constant Pos := Get_Homonym_Number (U);\n+               N : constant Pos := Homonym_Number (U);\n                S : constant String := N'Img;\n             begin\n                if N > 1 then"}]}