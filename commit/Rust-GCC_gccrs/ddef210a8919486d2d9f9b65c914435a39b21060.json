{"sha": "ddef210a8919486d2d9f9b65c914435a39b21060", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRlZjIxMGE4OTE5NDg2ZDJkOWY5YjY1YzkxNDQzNWEzOWIyMTA2MA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2004-09-13T05:21:04Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2004-09-13T05:21:04Z"}, "message": "g77-dg.exp: Remove unused file.\n\n\t* lib/g77-dg.exp: Remove unused file.\n\t* lib/mike-g77.exp: Ditto.\n\t* lib/g77.exp: Ditto.\n\nFrom-SVN: r87425", "tree": {"sha": "1b928378d4149d71e809d4d9500cc92cbc333121", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b928378d4149d71e809d4d9500cc92cbc333121"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddef210a8919486d2d9f9b65c914435a39b21060", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddef210a8919486d2d9f9b65c914435a39b21060", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddef210a8919486d2d9f9b65c914435a39b21060", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddef210a8919486d2d9f9b65c914435a39b21060/comments", "author": null, "committer": null, "parents": [{"sha": "3fcb283bc743ac8c48c94e3b27ccbc4e22531e82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fcb283bc743ac8c48c94e3b27ccbc4e22531e82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fcb283bc743ac8c48c94e3b27ccbc4e22531e82"}], "stats": {"total": 539, "additions": 6, "deletions": 533}, "files": [{"sha": "ae42e1bf8b3d5811634eda8b3b862b8faae0c343", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddef210a8919486d2d9f9b65c914435a39b21060/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddef210a8919486d2d9f9b65c914435a39b21060/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ddef210a8919486d2d9f9b65c914435a39b21060", "patch": "@@ -1,3 +1,9 @@\n+2004-09-12  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\t* lib/g77-dg.exp: Remove unused file.\n+\t* lib/mike-g77.exp: Ditto.\n+\t* lib/g77.exp: Ditto.\n+\n 2004-09-12  Richard Henderson  <rth@redhat.com>\n \n \t* g++.old-deja/g++.other/sizeof3.C: Fix abort declaration."}, {"sha": "4734075fe52c9cd081e0e57e03cbf9a5cbd36e8b", "filename": "gcc/testsuite/lib/g77-dg.exp", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fcb283bc743ac8c48c94e3b27ccbc4e22531e82/gcc%2Ftestsuite%2Flib%2Fg77-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fcb283bc743ac8c48c94e3b27ccbc4e22531e82/gcc%2Ftestsuite%2Flib%2Fg77-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg77-dg.exp?ref=3fcb283bc743ac8c48c94e3b27ccbc4e22531e82", "patch": "@@ -1,46 +0,0 @@\n-#   Copyright (C) 1997, 1999, 2000, 2003 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-# \n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-# \n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n-\n-load_lib gcc-dg.exp\n-\n-# Define g77 callbacks for dg.exp.\n-\n-proc g77-dg-test { prog do_what extra_tool_flags } {\n-    set result \\\n-\t[gcc-dg-test-1 g77_target_compile $prog $do_what $extra_tool_flags]\n-    \n-    set comp_output [lindex $result 0]\n-    set output_file [lindex $result 1]\n-\n-    # Put the error message on the same line as the line number\n-    # Remove the line of source code with the error and\n-    # the \"     ^\" that points to error\n-    regsub -all \"\\n\\[^\\n\\]*\\n *\\\\^\\n\" $comp_output \"\" comp_output \n-\n-    return [list $comp_output $output_file]\n-}\n-\n-proc g77-dg-prune { system text } {\n-    return [gcc-dg-prune $system $text]\n-}\n-\n-# Utility routines.\n-\n-# Modified dg-runtest that can cycle through a list of optimization options\n-# as c-torture does.\n-proc g77-dg-runtest { testcases default-extra-flags } {\n-    return [gcc-dg-runtest $testcases ${default-extra-flags}]\n-}"}, {"sha": "ec0494d2fe5630fd285f3559cb30859e2e1928de", "filename": "gcc/testsuite/lib/g77.exp", "status": "removed", "additions": 0, "deletions": 225, "changes": 225, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fcb283bc743ac8c48c94e3b27ccbc4e22531e82/gcc%2Ftestsuite%2Flib%2Fg77.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fcb283bc743ac8c48c94e3b27ccbc4e22531e82/gcc%2Ftestsuite%2Flib%2Fg77.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg77.exp?ref=3fcb283bc743ac8c48c94e3b27ccbc4e22531e82", "patch": "@@ -1,225 +0,0 @@\n-# Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 2000, 2001, 2002 Free\n-# Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-# \n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-# \n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n-\n-# This file was written by Rob Savoye (rob@cygnus.com)\n-# Many modifications by Jeffrey Wheat (cassidy@cygnus.com)\n-# With modifications by Mike Stump <mrs@cygnus.com>.\n-\n-#\n-# g77 support library routines\n-#\n-load_lib prune.exp\n-load_lib gcc-defs.exp\n-\n-#\n-# G77_UNDER_TEST is the compiler under test.\n-#\n-\n-\n-set gpp_compile_options \"\"\n-\n-\n-#\n-# g77_version -- extract and print the version number of the compiler\n-#\n-\n-proc g77_version { } {\n-    global G77_UNDER_TEST\n-    \n-    g77_init\n-\n-    # ignore any arguments after the command\n-    set compiler [lindex $G77_UNDER_TEST 0]\n-    \n-    # verify that the compiler exists\n-    if { [is_remote host] || [which $compiler] != 0 } then {\n-\tset tmp [remote_exec host \"$compiler -v\"]\n-\tset status [lindex $tmp 0];\n-\tset output [lindex $tmp 1];\n-\tregexp \" version \\[^\\n\\r\\]*\" $output version\n-\tif { $status == 0 && [info exists version] } then {\n-\t    if [is_remote host] {\n-\t\tclone_output \"$compiler $version\\n\"\n-\t    } else {\n-\t\tclone_output \"[which $compiler] $version\\n\"\n-\t    }\n-\t} else {\n-\t    clone_output \"Couldn't determine version of [which $compiler]\\n\"\n-\t}\n-    } else {\n-\t# compiler does not exist (this should have already been detected)\n-\twarning \"$compiler does not exist\"\n-    }\n-}\n-\n-#\n-# g77_link_flags -- provide new version of g77_link_flags\n-# (originally from libgloss.exp) which knows about the gcc tree structure\n-#\n-\n-proc g77_link_flags { paths } {\n-    global rootme\n-    global srcdir\n-    global ld_library_path\n-    global G77_UNDER_TEST\n-\n-    set gccpath ${paths}\n-    set libio_dir \"\"\n-    set flags \"\"\n-    set ld_library_path \".\"\n-\n-    if { $gccpath != \"\" } {\n-      if [file exists \"${gccpath}/libf2c/.libs/libg2c.a\"] {\n-          append flags \"-L${gccpath}/libf2c/.libs \"\n-          append ld_library_path \":${gccpath}/libf2c/.libs\"\n-      }\n-      if [file exists \"${gccpath}/libf2c/libfrtbegin.a\"] {\n-          append flags \"-L${gccpath}/libf2c \"\n-      }\n-      if [file exists \"${gccpath}/libiberty/libiberty.a\"] {\n-          append flags \"-L${gccpath}/libiberty \"\n-      }\n-      append ld_library_path \":${rootme}\"\n-      set compiler [lindex $G77_UNDER_TEST 0]\n-      if { [is_remote host] == 0 && [which $compiler] != 0 } {\n-\tforeach i \"[exec $compiler --print-multi-lib]\" {\n-\t  set mldir \"\"\n-\t  regexp -- \"\\[a-z0-9=/\\.-\\]*;\" $i mldir\n-\t  set mldir [string trimright $mldir \"\\;@\"]\n-\t  if { \"$mldir\" == \".\" } {\n-\t    continue\n-\t  }\n-\t  if { [llength [glob -nocomplain ${rootme}/${mldir}/libgcc_s*.so.*]] == 1 } {\n-\t    append ld_library_path \":${rootme}/${mldir}\"\n-\t  }\n-\t}\n-      }\n-    }\n-\n-    # On IRIX 6, we have to set variables akin to LD_LIBRARY_PATH, but\n-    # called LD_LIBRARYN32_PATH (for the N32 ABI) and LD_LIBRARY64_PATH\n-    # (for the 64-bit ABI).  The right way to do this would be to modify\n-    # unix.exp -- but that's not an option since it's part of DejaGNU\n-    # proper, so we do it here.\n-    # The same applies to Darwin (DYLD_LIBRARY_PATH), Solaris 32 bit\n-    # (LD_LIBRARY_PATH_32), Solaris 64 bit (LD_LIBRARY_PATH_64), and HP-UX\n-    # (SHLIB_PATH).\n-    setenv  LD_LIBRARY_PATH     $ld_library_path\n-    setenv  SHLIB_PATH          $ld_library_path\n-    setenv  LD_LIBRARYN32_PATH  $ld_library_path\n-    setenv  LD_LIBRARY64_PATH   $ld_library_path\n-    setenv  LD_LIBRARY_PATH_32  $ld_library_path\n-    setenv  LD_LIBRARY_PATH_64  $ld_library_path\n-    setenv  DYLD_LIBRARY_PATH   $ld_library_path\n-\n-    return \"$flags\"\n-}\n-\n-#\n-# g77_init -- called at the start of each subdir of tests\n-#\n-\n-proc g77_init { args } {\n-    global subdir\n-    global gpp_initialized\n-    global base_dir\n-    global tmpdir\n-    global libdir\n-    global gluefile wrap_flags;\n-    global objdir srcdir\n-    global ALWAYS_G77FLAGS\n-    global TOOL_EXECUTABLE TOOL_OPTIONS\n-    global G77_UNDER_TEST\n-    global TESTING_IN_BUILD_TREE\n-\n-    if ![info exists G77_UNDER_TEST] then {\n-\tif [info exists TOOL_EXECUTABLE] {\n-\t    set G77_UNDER_TEST $TOOL_EXECUTABLE;\n-\t} else {\n-\t    if { [is_remote host] || ! [info exists TESTING_IN_BUILD_TREE] } {\n-\t\tset G77_UNDER_TEST [transform g77]\n-\t    } else {\n-\t\tset G77_UNDER_TEST [findfile $base_dir/../g77 \"$base_dir/../g77 -B$base_dir/../\" [findfile $base_dir/g77 \"$base_dir/g77 -B$base_dir/\" [transform g77]]]\n-\t    }\n-\t}\n-    }\n-\n-    if ![is_remote host] {\n-\tif { [which $G77_UNDER_TEST] == 0 } then {\n-\t    perror \"G77_UNDER_TEST ($G77_UNDER_TEST) does not exist\"\n-\t    exit 1\n-\t}\n-    }\n-    if ![info exists tmpdir] {\n-\tset tmpdir \"/tmp\"\n-    }\n-\n-    if [info exists gluefile] {\n-\tunset gluefile\n-    }\n-\n-    if { [target_info needs_status_wrapper] != \"\" } {\n-\tset gluefile ${tmpdir}/g77-testglue.o;\n-\tset result [build_wrapper $gluefile];\n-\tif { $result != \"\" } {\n-\t    set gluefile [lindex $result 0];\n-\t    set wrap_flags [lindex $result 1];\n-\t} else {\n-\t    unset gluefile\n-\t}\n-    }\n-\n-    set ALWAYS_G77FLAGS \"\"\n-\n-    if ![is_remote host] {\n-\tif [info exists TOOL_OPTIONS] {\n-\t    lappend ALWAYS_G77FLAGS \"ldflags=[g77_link_flags [get_multilibs ${TOOL_OPTIONS}] ]\";\n-\t} else {\n-\t    lappend ALWAYS_G77FLAGS \"ldflags=[g77_link_flags [get_multilibs] ]\";\n-\t}\n-    }\n-\n-    if [info exists TOOL_OPTIONS] {\n-\tlappend ALWAYS_G77FLAGS \"additional_flags=$TOOL_OPTIONS\";\n-    }\n-\n-    verbose -log \"ALWAYS_G77FLAGS set to $ALWAYS_G77FLAGS\"\n-\n-    verbose \"g77 is initialized\" 3\n-}\n-\n-#\n-# g77_target_compile -- compile a source file\n-#\n-\n-proc g77_target_compile { source dest type options } {\n-    global tmpdir;\n-    global gluefile wrap_flags\n-    global ALWAYS_G77FLAGS;\n-    global G77_UNDER_TEST;\n-\n-    if { [target_info needs_status_wrapper] != \"\" && [info exists gluefile] } {\n-\tlappend options \"libs=${gluefile}\"\n-\tlappend options \"ldflags=${wrap_flags}\"\n-    }\n-\n-    lappend options \"compiler=$G77_UNDER_TEST\";\n-\n-    set options [concat \"$ALWAYS_G77FLAGS\" $options];\n-\n-    return [target_compile $source $dest $type $options]\n-}"}, {"sha": "ccc9041e3ec395241faeabc6bfd295cf02571b89", "filename": "gcc/testsuite/lib/mike-g77.exp", "status": "removed", "additions": 0, "deletions": 262, "changes": 262, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fcb283bc743ac8c48c94e3b27ccbc4e22531e82/gcc%2Ftestsuite%2Flib%2Fmike-g77.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fcb283bc743ac8c48c94e3b27ccbc4e22531e82/gcc%2Ftestsuite%2Flib%2Fmike-g77.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fmike-g77.exp?ref=3fcb283bc743ac8c48c94e3b27ccbc4e22531e82", "patch": "@@ -1,262 +0,0 @@\n-# Copyright (C) 1988, 90, 91, 92, 95, 96, 97, 1998 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-# \n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-# \n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n-\n-# This file was derived from mike-g++.exp written by Mike Stump <mrs@cygnus.com>\n-\n-# Please email any bugs, comments, and/or additions to this file to:\n-# fortran@gnu.org\n-\n-#\n-# mike_cleanup -- remove any files that are created by the testcase\n-#\n-proc mike_cleanup { src_code output_file assembly_file } {\n-    remote_file build delete $output_file $assembly_file;\n-}\n-\n-#\n-# prebase -- sets up a Mike Stump (mrs@cygnus.com) style g77 test\n-#\n-proc prebase { } {\n-    global compiler_output\n-    global not_compiler_output\n-    global compiler_result\n-    global not_compiler_result\n-    global program_output\n-    global groups\n-    global run \n-    global actions\n-    global target_regexp\n-\n-    set compiler_output \"^$\"\n-    set not_compiler_output \".*Internal compiler error.*\"\n-    set compiler_result \"\"\n-    set not_compiler_result \"\"\n-    set program_output \".*PASS.*\"\n-    set groups {}\n-    set run no\n-    set actions assemble\n-    set target_regexp \".*\"\n-}\n-\n-#\n-# run the test\n-#\n-proc postbase  { src_code run groups args } {\n-    global verbose\n-    global srcdir\n-    global subdir\n-    global not_compiler_output\n-    global compiler_output\n-    global compiler_result\n-    global not_compiler_result\n-    global program_output\n-    global actions\n-    global target_regexp\n-    global host_triplet\n-    global target_triplet\n-    global tool\n-    global tmpdir\n-    global G77_UNDER_TEST\n-    global GROUP\n-\n-    if ![info exists G77_UNDER_TEST] {\n-\terror \"No compiler specified for testing.\"\n-    }\n-\n-    if ![regexp $target_regexp $target_triplet] {\n-\tunsupported $subdir/$src_code\n-\treturn\n-    }\n-\n-    if { [llength $args] > 0 } {\n-\tset comp_options [lindex $args 0];\n-    } else {\n-\tset comp_options \"\"\n-    }\n-\n-    set fail_message $subdir/$src_code\n-    set pass_message $subdir/$src_code\n-\n-    if [info exists GROUP] {\n-\tif {[lsearch $groups $GROUP] == -1} {\n-\t    return\n-\t}\n-    }\n-\n-    if [string match $run yes] {\n-\tset actions run\n-    }\n-\n-    set output_file \"$tmpdir/[file tail [file rootname $src_code]]\"\n-    set assembly_file \"$output_file\"\n-    append assembly_file \".S\"\n-\n-    set compile_type \"none\"\n-\n-    case $actions {\n-\tcompile\n-\t{\n-\t    set compile_type \"assembly\";\n-\t    set output_file $assembly_file;\n-\t}\n-\tassemble\n-\t{\n-\t    set compile_type \"object\";\n-\t    append output_file \".o\";\n-\t}\n-\tlink\n-\t{\n-\t    set compile_type \"executable\";\n-\t    append output_file \".exe\";\n-\t}\n-\trun\n-\t{\n-\t    set compile_type \"executable\";\n-\t    append output_file \".exe\";\n-\t    set run yes;\n-\t}\n-\tdefault\n-\t{\n-\t    set output_file \"\";\n-\t    set compile_type \"none\";\n-\t}\n-    }\n-\n-    set src_file \"$srcdir/$subdir/$src_code\"\n-    set options \"\"\n-    lappend options \"compiler=$G77_UNDER_TEST\"\n-\n-    if { $comp_options != \"\" } {\n-\tlappend options \"additional_flags=$comp_options\"\n-    }\n-\n-    set comp_output [g77_target_compile $src_file $output_file $compile_type $options];\n-\n-    set pass no\n-\n-    # Delete things like \"ld.so warning\" messages.\n-    set comp_output [prune_warnings $comp_output]\n-\n-    if [regexp -- $not_compiler_output $comp_output] {\n-\tif { $verbose > 1 } {\n-\t    send_user \"\\nChecking:\\n$not_compiler_output\\nto make sure it does not match:\\n$comp_output\\nbut it does.\\n\\n\"\n-\t} else {\n-\t    send_log \"\\nCompiler output:\\n$comp_output\\n\\n\"\n-\t}\n-\tfail $fail_message\n-\t# The framework doesn't like to see any error remnants,\n-\t# so remove them.\n-\tuplevel {\n-\t    if [info exists errorInfo] {\n-\t\tunset errorInfo\n-\t    }\n-\t}\n-\tmike_cleanup $src_code $output_file $assembly_file\n-\treturn\n-    }\n-\n-    # remove any leftover CRs.\n-    regsub -all -- \"\\r\" $comp_output \"\" comp_output\n-\n-    regsub -all \"(^|\\n)\\[^\\n\\]*linker input file unused since linking not done\" $comp_output \"\" comp_output\n-    regsub -all \"(^|\\n)\\[^\\n\\]*file path prefix \\[^\\n\\]* never used\" $comp_output \"\" comp_output\n-\n-    set unsupported_message [${tool}_check_unsupported_p $comp_output]\n-    if { $unsupported_message != \"\" } {\n-\tunsupported \"$subdir/$src_code: $unsupported_message\"\n-\tmike_cleanup $src_code $output_file $assembly_file\n-\treturn\n-    }\n-\n-    if { $verbose > 1 } {\n-\tsend_user \"\\nChecking:\\n$compiler_output\\nto see if it matches:\\n$comp_output\\n\"\n-    } else {\n-\tsend_log \"\\nCompiler output:\\n$comp_output\\n\\n\"\n-    }\n-    if [regexp -- $compiler_output $comp_output] {\n-\tif { $verbose > 1 } {\n-\t    send_user \"Yes, it matches.\\n\\n\"\n-\t}\n-\tset pass yes\n-\tif [file exists [file rootname [file tail $src_code]].s] {\n-\t    set fd [open [file rootname [file tail $src_code]].s r]\n-\t    set dot_s [read $fd]\n-\t    close $fd\n-\t    if { $compiler_result != \"\" } {\n-\t\tverbose \"Checking .s file for $compiler_result\" 2\n-\t\tif [regexp -- $compiler_result $dot_s] {\n-\t\t    verbose \"Yes, it matches.\" 2\n-\t\t} else {\n-\t\t    verbose \"Nope, doesn't match.\" 2\n-\t\t    verbose $dot_s 4\n-\t\t    set pass no\n-\t\t}\n-\t    }\n-\t    if { $not_compiler_result != \"\" } {\n-\t\tverbose \"Checking .s file for not $not_compiler_result\" 2\n-\t\tif ![regexp -- $not_compiler_result $dot_s] {\n-\t\t    verbose \"Nope, not found (that's good).\" 2\n-\t\t} else {\n-\t\t    verbose \"Uh oh, it was found.\" 2\n-\t\t    verbose $dot_s 4\n-\t\t    set pass no\n-\t\t}\n-\t    }\n-\t}\n-\tif [string match $run yes] {\n-\t    set result [g77_load $output_file]\n-\t    set status [lindex $result 0];\n-\t    set output [lindex $result 1];\n-\t    if { $status == -1 } {\n-\t\tmike_cleanup $src_code $output_file $assembly_file;\n-\t\treturn;\n-\t    }\n-\t    if { $verbose > 1 } {\n-\t\tsend_user \"Checking:\\n$program_output\\nto see if it matches:\\n$output\\n\\n\"\n-\t    }\n-\t    if ![regexp -- $program_output $output] {\n-\t\tset pass no\n-\t\tif { $verbose > 1 } {\n-\t\t    send_user \"Nope, does not match.\\n\\n\"\n-\t\t}\n-\t    } else {\n-\t\tif { $verbose > 1 } {\n-\t\t    send_user \"Yes, it matches.\\n\\n\"\n-\t\t}\n-\t    }\n-\t}\n-    } else {\n-\tif { $verbose > 1 } {\n-\t    send_user \"Nope, does not match.\\n\\n\"\n-\t}\n-    }\n-\n-    if [string match $pass \"yes\"] {\n-\tpass $pass_message\n-    } else {\n-\tfail $fail_message\n-    }\n-\n-    # The framework doesn't like to see any error remnants,\n-    # so remove them.\n-    uplevel {\n-\tif [info exists errorInfo] {\n-\t    unset errorInfo\n-\t}\n-    }\n-\n-    mike_cleanup $src_code $output_file $assembly_file\n-}"}]}