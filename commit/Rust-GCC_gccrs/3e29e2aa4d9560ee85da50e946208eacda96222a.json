{"sha": "3e29e2aa4d9560ee85da50e946208eacda96222a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UyOWUyYWE0ZDk1NjBlZTg1ZGE1MGU5NDYyMDhlYWNkYTk2MjIyYQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-02-06T05:48:34Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-02-06T05:48:34Z"}, "message": "fr30-protos.h: Remove the prototype for fr30_setup_incoming_varargs.\n\n\t* config/fr30/fr30-protos.h: Remove the prototype for\n\tfr30_setup_incoming_varargs.\n\tUpdate the prototypes for fr30_num_arg_regs and\n\tfr30_function_arg_partial_nregs.\n\t* config/fr30/fr30.c (TARGET_STRUCT_VALUE_RTX): New.\n\t(TARGET_SETUP_INCOMING_VARARGS): Likewise.\n\t(fr30_setup_incoming_varargs): Make it static.\n\tAdd argument second_time.  Don't do anything when second_time\n\tis nonzero.\n\t(fr30_num_arg_regs): Change the type of the first argument to\n\tenum machine_mode.\n\t(fr30_function_arg_partial_nregs): Change the type of the\n\tsecond argument to enum machine_mode.\n\t* config/fr30/fr30.h (STRUCT_VALUE): Remove.\n\t(SETUP_INCOMING_VARARGS): Remove.\n\nFrom-SVN: r77375", "tree": {"sha": "66245d4509adfee1ca1bacce4e60f9fc4da79ff9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66245d4509adfee1ca1bacce4e60f9fc4da79ff9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e29e2aa4d9560ee85da50e946208eacda96222a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e29e2aa4d9560ee85da50e946208eacda96222a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e29e2aa4d9560ee85da50e946208eacda96222a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e29e2aa4d9560ee85da50e946208eacda96222a/comments", "author": null, "committer": null, "parents": [{"sha": "07ba2efb2e1da2a319c12d24396c922e79a63965", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07ba2efb2e1da2a319c12d24396c922e79a63965", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07ba2efb2e1da2a319c12d24396c922e79a63965"}], "stats": {"total": 55, "additions": 32, "deletions": 23}, "files": [{"sha": "c3dbb552593275fccfd5fb9d38ffad4f86663b10", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e29e2aa4d9560ee85da50e946208eacda96222a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e29e2aa4d9560ee85da50e946208eacda96222a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e29e2aa4d9560ee85da50e946208eacda96222a", "patch": "@@ -1,3 +1,21 @@\n+2004-02-06  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/fr30/fr30-protos.h: Remove the prototype for\n+\tfr30_setup_incoming_varargs.\n+\tUpdate the prototypes for fr30_num_arg_regs and\n+\tfr30_function_arg_partial_nregs.\n+\t* config/fr30/fr30.c (TARGET_STRUCT_VALUE_RTX): New.\n+\t(TARGET_SETUP_INCOMING_VARARGS): Likewise.\n+\t(fr30_setup_incoming_varargs): Make it static.\n+\tAdd argument second_time.  Don't do anything when second_time\n+\tis nonzero.\n+\t(fr30_num_arg_regs): Change the type of the first argument to\n+\tenum machine_mode.\n+\t(fr30_function_arg_partial_nregs): Change the type of the\n+\tsecond argument to enum machine_mode.\n+\t* config/fr30/fr30.h (STRUCT_VALUE): Remove.\n+\t(SETUP_INCOMING_VARARGS): Remove.\n+\n 2004-02-06  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/arc/arc-protos.h: Remove the prototype for"}, {"sha": "d786cd03ad85803a381b777733c7b55f613db86d", "filename": "gcc/config/fr30/fr30-protos.h", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e29e2aa4d9560ee85da50e946208eacda96222a/gcc%2Fconfig%2Ffr30%2Ffr30-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e29e2aa4d9560ee85da50e946208eacda96222a/gcc%2Fconfig%2Ffr30%2Ffr30-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30-protos.h?ref=3e29e2aa4d9560ee85da50e946208eacda96222a", "patch": "@@ -29,6 +29,9 @@ extern void  fr30_print_operand_address (FILE *, rtx);\n extern rtx   fr30_move_double (rtx *);\n #ifdef TREE_CODE\n extern rtx   fr30_va_arg (tree, tree);\n+extern int   fr30_num_arg_regs (enum machine_mode, tree);\n+extern int   fr30_function_arg_partial_nregs (CUMULATIVE_ARGS,\n+\t\t\t\t\t      enum machine_mode, tree, int);\n #endif /* TREE_CODE */\n #ifdef HAVE_MACHINE_MODES\n #define Mmode enum machine_mode\n@@ -43,9 +46,3 @@ extern int   fr30_const_double_is_zero (rtx);\n #undef Mmode\n #endif /* HAVE_MACHINE_MODES */\n #endif /* RTX_CODE */\n-\n-#ifdef TREE_CODE\n-extern int   fr30_num_arg_regs (int, tree);\n-extern int   fr30_function_arg_partial_nregs (CUMULATIVE_ARGS, int, tree, int);\n-extern void  fr30_setup_incoming_varargs (CUMULATIVE_ARGS, int, tree, int *);\n-#endif /* TREE_CODE */"}, {"sha": "d6ffc760e359bd1f64473ab062277abf95ed4028", "filename": "gcc/config/fr30/fr30.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e29e2aa4d9560ee85da50e946208eacda96222a/gcc%2Fconfig%2Ffr30%2Ffr30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e29e2aa4d9560ee85da50e946208eacda96222a/gcc%2Fconfig%2Ffr30%2Ffr30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.c?ref=3e29e2aa4d9560ee85da50e946208eacda96222a", "patch": "@@ -121,6 +121,8 @@ static struct fr30_frame_info \tcurrent_frame_info;\n /* Zero structure to initialize current_frame_info.  */\n static struct fr30_frame_info \tzero_frame_info;\n \n+static void fr30_setup_incoming_varargs (CUMULATIVE_ARGS *, enum machine_mode,\n+\t\t\t\t\t tree, int *, int);\n static rtx fr30_pass_by_reference (tree, tree);\n static rtx fr30_pass_by_value (tree, tree);\n \n@@ -152,6 +154,12 @@ static rtx fr30_pass_by_value (tree, tree);\n #undef TARGET_PROMOTE_PROTOTYPES\n #define TARGET_PROMOTE_PROTOTYPES hook_bool_tree_true\n \n+#undef TARGET_STRUCT_VALUE_RTX\n+#define TARGET_STRUCT_VALUE_RTX hook_rtx_tree_int_null\n+\n+#undef TARGET_SETUP_INCOMING_VARARGS\n+#define TARGET_SETUP_INCOMING_VARARGS fr30_setup_incoming_varargs\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n /* Returns the number of bytes offset between FROM_REG and TO_REG\n@@ -662,9 +670,8 @@ fr30_print_operand (FILE *file, rtx x, int code)\n /* Compute the number of word sized registers needed to hold a\n    function argument of mode INT_MODE and tree type TYPE.  */\n int\n-fr30_num_arg_regs (int int_mode, tree type)\n+fr30_num_arg_regs (enum machine_mode mode, tree type)\n {\n-  enum machine_mode mode = (enum machine_mode) int_mode;\n   int size;\n \n   if (MUST_PASS_IN_STACK (mode, type))\n@@ -687,7 +694,7 @@ fr30_num_arg_regs (int int_mode, tree type)\n    parameters to the function.  */\n \n int\n-fr30_function_arg_partial_nregs (CUMULATIVE_ARGS cum, int int_mode,\n+fr30_function_arg_partial_nregs (CUMULATIVE_ARGS cum, enum machine_mode mode,\n \t\t\t\t tree type, int named)\n {\n   /* Unnamed arguments, ie those that are prototyped as ...\n@@ -702,7 +709,7 @@ fr30_function_arg_partial_nregs (CUMULATIVE_ARGS cum, int int_mode,\n      are needed because the parameter must be passed on the stack)\n      then return zero, as this parameter does not require partial\n      register, partial stack stack space.  */\n-  if (cum + fr30_num_arg_regs (int_mode, type) <= FR30_NUM_ARG_REGS)\n+  if (cum + fr30_num_arg_regs (mode, type) <= FR30_NUM_ARG_REGS)\n     return 0;\n   \n   /* Otherwise return the number of registers that would be used.  */"}, {"sha": "29753016cf94f0de794869a19201c7c886fa53f9", "filename": "gcc/config/fr30/fr30.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e29e2aa4d9560ee85da50e946208eacda96222a/gcc%2Fconfig%2Ffr30%2Ffr30.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e29e2aa4d9560ee85da50e946208eacda96222a/gcc%2Fconfig%2Ffr30%2Ffr30.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.h?ref=3e29e2aa4d9560ee85da50e946208eacda96222a", "patch": "@@ -817,12 +817,6 @@ enum reg_class\n    If not defined, this defaults to the value 1.  */\n #define DEFAULT_PCC_STRUCT_RETURN 1\n \n-/* If the structure value address is not passed in a register, define\n-   `STRUCT_VALUE' as an expression returning an RTX for the place where the\n-   address is passed.  If it returns 0, the address is passed as an \"invisible\"\n-   first argument.  */\n-#define STRUCT_VALUE 0\n-\n /*}}}*/ \f\n /*{{{  Generating Code for Profiling.  */ \n \n@@ -845,13 +839,6 @@ enum reg_class\n   fprintf (FILE, \".word\\tLP%d\\n\", LABELNO);\t\\\n }\n \n-/*}}}*/ \f\n-/*{{{  Implementing the VARARGS Macros.  */ \n-\n-#define SETUP_INCOMING_VARARGS(ARGS_SO_FAR, MODE, TYPE, PRETEND_ARGS_SIZE, SECOND_TIME) \\\n-  if (! SECOND_TIME) \\\n-    fr30_setup_incoming_varargs (ARGS_SO_FAR, MODE, TYPE, & PRETEND_ARGS_SIZE)\n-\n /*}}}*/ \f\n /*{{{  Trampolines for Nested Functions.  */ \n "}]}