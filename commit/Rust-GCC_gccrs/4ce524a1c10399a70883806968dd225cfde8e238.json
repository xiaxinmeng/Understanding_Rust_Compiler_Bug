{"sha": "4ce524a1c10399a70883806968dd225cfde8e238", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNlNTI0YTFjMTAzOTlhNzA4ODM4MDY5NjhkZDIyNWNmZGU4ZTIzOA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-29T00:17:58Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-29T00:17:58Z"}, "message": "Make next_insn and previous_insn require an rtx_insn *\n\ngcc/\n2014-08-28  David Malcolm  <dmalcolm@redhat.com>\n\n\t* rtl.h (previous_insn): Strengthen param from rtx to rtx_insn *.\n\t(next_insn): Likewise.\n\t* emit-rtl.c (next_insn): Likewise.\n\t(previous_insn): Likewise.\n\t* config/pa/pa.c (remove_useless_addtr_insns): Strenghten locals\n\t\"insn\" and \"next\" from rtx to rtx_insn *.\n\t* config/picochip/picochip.c (picochip_reorg): Likewise for locals\n\t\"insn\", \"insn1\", \"vliw_start\",  \"prologue_end_note\",\n\t\"last_insn_in_packet\".\n\nFrom-SVN: r214708", "tree": {"sha": "a5044f0cbe3f1c8ba3bef4f198432e6eede0c76a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5044f0cbe3f1c8ba3bef4f198432e6eede0c76a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ce524a1c10399a70883806968dd225cfde8e238", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ce524a1c10399a70883806968dd225cfde8e238", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ce524a1c10399a70883806968dd225cfde8e238", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ce524a1c10399a70883806968dd225cfde8e238/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4f09818188143532976be5cf3ac592340cd5adbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f09818188143532976be5cf3ac592340cd5adbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f09818188143532976be5cf3ac592340cd5adbf"}], "stats": {"total": 33, "additions": 22, "deletions": 11}, "files": [{"sha": "2095abfc1bfc2a3baf37d210889b47fcbac38719", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ce524a1c10399a70883806968dd225cfde8e238/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ce524a1c10399a70883806968dd225cfde8e238/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ce524a1c10399a70883806968dd225cfde8e238", "patch": "@@ -1,3 +1,15 @@\n+2014-08-28  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* rtl.h (previous_insn): Strengthen param from rtx to rtx_insn *.\n+\t(next_insn): Likewise.\n+\t* emit-rtl.c (next_insn): Likewise.\n+\t(previous_insn): Likewise.\n+\t* config/pa/pa.c (remove_useless_addtr_insns): Strenghten locals\n+\t\"insn\" and \"next\" from rtx to rtx_insn *.\n+\t* config/picochip/picochip.c (picochip_reorg): Likewise for locals\n+\t\"insn\", \"insn1\", \"vliw_start\",  \"prologue_end_note\",\n+\t\"last_insn_in_packet\".\n+\n 2014-08-28  David Malcolm  <dmalcolm@redhat.com>\n \n \t* shrink-wrap.h (active_insn_between): Strengthen both params from"}, {"sha": "0ae6bd320331a1a81ae7c5e48409c240773cb2d9", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ce524a1c10399a70883806968dd225cfde8e238/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ce524a1c10399a70883806968dd225cfde8e238/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=4ce524a1c10399a70883806968dd225cfde8e238", "patch": "@@ -3296,7 +3296,7 @@ pa_output_ascii (FILE *file, const char *p, int size)\n static void\n remove_useless_addtr_insns (int check_notes)\n {\n-  rtx insn;\n+  rtx_insn *insn;\n   static int pass = 0;\n \n   /* This is fairly cheap, so always run it when optimizing.  */\n@@ -3348,7 +3348,8 @@ remove_useless_addtr_insns (int check_notes)\n \t reverse the comparison & the branch to avoid add,tr insns.  */\n       for (insn = get_insns (); insn; insn = next_insn (insn))\n \t{\n-\t  rtx tmp, next;\n+\t  rtx tmp;\n+\t  rtx_insn *next;\n \n \t  /* Ignore anything that isn't an INSN.  */\n \t  if (! NONJUMP_INSN_P (insn))"}, {"sha": "3e532f46b0ee0909b890b8c2272eb050075d3d2d", "filename": "gcc/config/picochip/picochip.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ce524a1c10399a70883806968dd225cfde8e238/gcc%2Fconfig%2Fpicochip%2Fpicochip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ce524a1c10399a70883806968dd225cfde8e238/gcc%2Fconfig%2Fpicochip%2Fpicochip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpicochip%2Fpicochip.c?ref=4ce524a1c10399a70883806968dd225cfde8e238", "patch": "@@ -3249,7 +3249,7 @@ reorder_var_tracking_notes (void)\n void\n picochip_reorg (void)\n {\n-  rtx insn, insn1, vliw_start = NULL_RTX;\n+  rtx_insn *insn, *insn1, *vliw_start = NULL;\n   int vliw_insn_location = 0;\n \n   /* We are freeing block_for_insn in the toplev to keep compatibility\n@@ -3326,8 +3326,8 @@ picochip_reorg (void)\n      of VLIW packets. */\n   if (picochip_schedule_type == DFA_TYPE_SPEED)\n     {\n-      rtx prologue_end_note = NULL;\n-      rtx last_insn_in_packet = NULL;\n+      rtx_insn *prologue_end_note = NULL;\n+      rtx_insn *last_insn_in_packet = NULL;\n \n       for (insn = get_insns (); insn; insn = next_insn (insn))\n \t{"}, {"sha": "c257fbe3381ef6aa122d7fc80accdd14b885b651", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ce524a1c10399a70883806968dd225cfde8e238/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ce524a1c10399a70883806968dd225cfde8e238/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=4ce524a1c10399a70883806968dd225cfde8e238", "patch": "@@ -3215,9 +3215,8 @@ get_max_insn_count (void)\n    of the sequence.  */\n \n rtx_insn *\n-next_insn (rtx uncast_insn)\n+next_insn (rtx_insn *insn)\n {\n-  rtx_insn *insn = safe_as_a <rtx_insn *> (uncast_insn);\n   if (insn)\n     {\n       insn = NEXT_INSN (insn);\n@@ -3233,9 +3232,8 @@ next_insn (rtx uncast_insn)\n    of the sequence.  */\n \n rtx_insn *\n-previous_insn (rtx uncast_insn)\n+previous_insn (rtx_insn *insn)\n {\n-  rtx_insn *insn = safe_as_a <rtx_insn *> (uncast_insn);\n   if (insn)\n     {\n       insn = PREV_INSN (insn);"}, {"sha": "beeed2f9a1e45d1357b4e6f01d4b4e2e70e782ae", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ce524a1c10399a70883806968dd225cfde8e238/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ce524a1c10399a70883806968dd225cfde8e238/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=4ce524a1c10399a70883806968dd225cfde8e238", "patch": "@@ -2620,8 +2620,8 @@ extern rtx_insn *emit_use (rtx);\n extern rtx_insn *make_insn_raw (rtx);\n extern void add_function_usage_to (rtx, rtx);\n extern rtx_call_insn *last_call_insn (void);\n-extern rtx_insn *previous_insn (rtx);\n-extern rtx_insn *next_insn (rtx);\n+extern rtx_insn *previous_insn (rtx_insn *);\n+extern rtx_insn *next_insn (rtx_insn *);\n extern rtx_insn *prev_nonnote_insn (rtx);\n extern rtx_insn *prev_nonnote_insn_bb (rtx);\n extern rtx_insn *next_nonnote_insn (rtx);"}]}