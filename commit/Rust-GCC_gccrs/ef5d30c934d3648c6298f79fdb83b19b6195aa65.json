{"sha": "ef5d30c934d3648c6298f79fdb83b19b6195aa65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY1ZDMwYzkzNGQzNjQ4YzYyOThmNzlmZGI4M2IxOWI2MTk1YWE2NQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-06-27T22:57:34Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-06-27T22:57:34Z"}, "message": "(expand_call): If function hasn't been used before, call\nassemble_external.\n\nFrom-SVN: r4773", "tree": {"sha": "24f1449a2717d46c4b4cd6d0a0e5c473da088901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24f1449a2717d46c4b4cd6d0a0e5c473da088901"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef5d30c934d3648c6298f79fdb83b19b6195aa65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef5d30c934d3648c6298f79fdb83b19b6195aa65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef5d30c934d3648c6298f79fdb83b19b6195aa65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef5d30c934d3648c6298f79fdb83b19b6195aa65/comments", "author": null, "committer": null, "parents": [{"sha": "e44842fedef92357e088c310031cf04c519d239f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e44842fedef92357e088c310031cf04c519d239f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e44842fedef92357e088c310031cf04c519d239f"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "edb0dd0a9c71b543a05f071faf41c6ac4deef028", "filename": "gcc/calls.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5d30c934d3648c6298f79fdb83b19b6195aa65/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5d30c934d3648c6298f79fdb83b19b6195aa65/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=ef5d30c934d3648c6298f79fdb83b19b6195aa65", "patch": "@@ -1476,8 +1476,18 @@ expand_call (exp, target, ignore)\n \n   /* Get the function to call, in the form of RTL.  */\n   if (fndecl)\n-    /* Get a SYMBOL_REF rtx for the function address.  */\n-    funexp = XEXP (DECL_RTL (fndecl), 0);\n+    {\n+      /* If this is the first use of the function, see if we need to\n+\t make an external definition for it.  */\n+      if (! TREE_USED (fndecl))\n+\t{\n+\t  assemble_external (fndecl);\n+\t  TREE_USED (fndecl) = 1;\n+\t}\n+\n+      /* Get a SYMBOL_REF rtx for the function address.  */\n+      funexp = XEXP (DECL_RTL (fndecl), 0);\n+    }\n   else\n     /* Generate an rtx (probably a pseudo-register) for the address.  */\n     {"}]}