{"sha": "a9deb2560c097bfe2484127ee09342a128835061", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTlkZWIyNTYwYzA5N2JmZTI0ODQxMjdlZTA5MzQyYTEyODgzNTA2MQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-03-27T11:56:30Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-03-27T11:56:30Z"}, "message": "re PR middle-end/43391 (make_decl_rtl failure for C++ on AIX and HPUX)\n\n\tPR middle-end/43391\n\t* varasm.c (make_decl_rtl): Deal with COMMON flag to make\n\tnotice_global_symbol work.\n\nFrom-SVN: r157773", "tree": {"sha": "e93283e829b9883c3a73386155f1c7dadf9e6228", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e93283e829b9883c3a73386155f1c7dadf9e6228"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9deb2560c097bfe2484127ee09342a128835061", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9deb2560c097bfe2484127ee09342a128835061", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9deb2560c097bfe2484127ee09342a128835061", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9deb2560c097bfe2484127ee09342a128835061/comments", "author": null, "committer": null, "parents": [{"sha": "5a9c8a1bb7532b3d26f1bf69f88599852dfdd81e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a9c8a1bb7532b3d26f1bf69f88599852dfdd81e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a9c8a1bb7532b3d26f1bf69f88599852dfdd81e"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "d4f4488e512e1ad1c793666e7006757e2ec54588", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9deb2560c097bfe2484127ee09342a128835061/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9deb2560c097bfe2484127ee09342a128835061/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a9deb2560c097bfe2484127ee09342a128835061", "patch": "@@ -1,3 +1,9 @@\n+2010-03-27  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR middle-end/43391\n+\t* varasm.c (make_decl_rtl): Deal with COMMON flag to make\n+\tnotice_global_symbol work.\n+\n 2010-03-27  Jakub Jelinek  <jakub@redhat.com>\n \n \t* dwarf2out.c (dwarf2_debug_hooks): Use dwarf2out_function_decl"}, {"sha": "af9adffd73d55ac020db7ae2671c50c101363cb6", "filename": "gcc/varasm.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9deb2560c097bfe2484127ee09342a128835061/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9deb2560c097bfe2484127ee09342a128835061/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=a9deb2560c097bfe2484127ee09342a128835061", "patch": "@@ -1435,16 +1435,19 @@ make_decl_rtl (tree decl)\n \n   /* Specifying a section attribute on a variable forces it into a\n      non-.bss section, and thus it cannot be common.  */\n-  gcc_assert (!(TREE_CODE (decl) == VAR_DECL\n-\t      && DECL_SECTION_NAME (decl) != NULL_TREE\n-\t      && DECL_INITIAL (decl) == NULL_TREE\n-\t      && DECL_COMMON (decl))\n-\t      || !DECL_COMMON (decl));\n+  /* FIXME: In general this code should not be necessary because\n+     visibility pass is doing the same work.  But notice_global_symbol\n+     is called early and it needs to make DECL_RTL to get the name.\n+     we take care of recomputing the DECL_RTL after visibility is changed.  */\n+  if (TREE_CODE (decl) == VAR_DECL\n+      && DECL_SECTION_NAME (decl) != NULL_TREE\n+      && DECL_INITIAL (decl) == NULL_TREE\n+      && DECL_COMMON (decl))\n+    DECL_COMMON (decl) = 0;\n \n   /* Variables can't be both common and weak.  */\n-  gcc_assert (TREE_CODE (decl) != VAR_DECL\n-\t      || !DECL_WEAK (decl)\n-\t      || !DECL_COMMON (decl));\n+  if (TREE_CODE (decl) == VAR_DECL && DECL_WEAK (decl))\n+    DECL_COMMON (decl) = 0;\n \n   if (use_object_blocks_p () && use_blocks_for_decl_p (decl))\n     x = create_block_symbol (name, get_block_for_decl (decl), -1);"}]}