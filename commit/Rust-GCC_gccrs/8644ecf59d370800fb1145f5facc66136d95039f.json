{"sha": "8644ecf59d370800fb1145f5facc66136d95039f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY0NGVjZjU5ZDM3MDgwMGZiMTE0NWY1ZmFjYzY2MTM2ZDk1MDM5Zg==", "commit": {"author": {"name": "Chris Fairles", "email": "cfairles@gcc.gnu.org", "date": "2009-02-05T17:47:56Z"}, "committer": {"name": "Chris Fairles", "email": "cfairles@gcc.gnu.org", "date": "2009-02-05T17:47:56Z"}, "message": "thread (__thread_data_base): Nest class in std::thread.\n\n2009-02-05  Chris Fairles  <cfairles@gcc.gnu.org>\n            Benjamin Kosnik  <bkoz@redhat.com>\n\n        * include/std/thread (__thread_data_base): Nest class in std::thread.\n        (__thread_data): Likewise.\n        (__thread_data_ptr): Nest typedef in std::thread.\n        * src/thread.cc (__thread_proxy): Qualify the above names.\n        * config/abi/pre/gnu.ver: Remove unused exports.\n\n\nCo-Authored-By: Benjamin Kosnik <bkoz@redhat.com>\n\nFrom-SVN: r143969", "tree": {"sha": "30d6e3368f5a827855d0c87cfc91d1ff138a7227", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30d6e3368f5a827855d0c87cfc91d1ff138a7227"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8644ecf59d370800fb1145f5facc66136d95039f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8644ecf59d370800fb1145f5facc66136d95039f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8644ecf59d370800fb1145f5facc66136d95039f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8644ecf59d370800fb1145f5facc66136d95039f/comments", "author": null, "committer": null, "parents": [{"sha": "ee04b57491958360b550bbb8047f85940ce28541", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee04b57491958360b550bbb8047f85940ce28541", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee04b57491958360b550bbb8047f85940ce28541"}], "stats": {"total": 72, "additions": 39, "deletions": 33}, "files": [{"sha": "341e94df43f3549636d5a4cc30d800760a6c87b0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8644ecf59d370800fb1145f5facc66136d95039f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8644ecf59d370800fb1145f5facc66136d95039f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8644ecf59d370800fb1145f5facc66136d95039f", "patch": "@@ -1,3 +1,12 @@\n+2009-02-05  Chris Fairles  <cfairles@gcc.gnu.org>\n+\t    Benjamin Kosnik  <bkoz@redhat.com>\n+\t\n+\t* include/std/thread (__thread_data_base): Nest class in std::thread.\n+\t(__thread_data): Likewise.\n+\t(__thread_data_ptr): Nest typedef in std::thread.\n+\t* src/thread.cc (__thread_proxy): Qualify the above names.\n+\t* config/abi/pre/gnu.ver: Remove unused exports.\n+\t\n 2009-02-04  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/unique_ptr.h: Remove private __this_type typedef."}, {"sha": "1754f07e6bb5b82da38efa43b87f9e37fa9d97a0", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8644ecf59d370800fb1145f5facc66136d95039f/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8644ecf59d370800fb1145f5facc66136d95039f/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=8644ecf59d370800fb1145f5facc66136d95039f", "patch": "@@ -897,9 +897,6 @@ GLIBCXX_3.4.11 {\n     _ZNSt22condition_variable_anyD2Ev;\n \n     # thread\n-    _ZNSt10shared_ptrISt18__thread_data_baseED1Ev;\n-    _ZNSt12bad_weak_ptrD0Ev;\n-    _ZNSt12bad_weak_ptrD1Ev;\n     _ZNSt6thread15_M_start_threadEv;\n     _ZNSt6thread4joinEv;\n     _ZNSt6thread6detachEv;"}, {"sha": "231d4b38c82dbfa455745e1e1052ca68970469dc", "filename": "libstdc++-v3/include/std/thread", "status": "modified", "additions": 27, "deletions": 28, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8644ecf59d370800fb1145f5facc66136d95039f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8644ecf59d370800fb1145f5facc66136d95039f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread?ref=8644ecf59d370800fb1145f5facc66136d95039f", "patch": "@@ -53,41 +53,25 @@\n \n namespace std\n {\n-  class __thread_data_base;\n-\n-  typedef shared_ptr<__thread_data_base> __thread_data_ptr;\n-\n-  class __thread_data_base\n+  class thread\n   {\n   public:\n-    __thread_data_base() = default;\n-    virtual ~__thread_data_base() = default;\n+    class __thread_data_base;\n     \n-    virtual void _M_run() = 0;\n+    typedef shared_ptr<__thread_data_base> __thread_data_ptr;\n     \n-    __gthread_t \t_M_thread_handle;\n-    __thread_data_ptr \t_M_this_ptr;\n-  };\n-  \n-  template<typename _Callable>\n-    class __thread_data : public __thread_data_base\n+    class __thread_data_base\n     {\n     public:\n-      __thread_data(_Callable&& __f)\n-      : _M_func(std::forward<_Callable>(__f))\n-      { }\n-\n-      void _M_run()\n-      { _M_func(); }\n-\n-    private:\n-      _Callable _M_func;\n+      __thread_data_base() = default;\n+      virtual ~__thread_data_base() = default;\n+      \n+      virtual void _M_run() = 0;\n+      \n+      __gthread_t \t_M_thread_handle;\n+      __thread_data_ptr \t_M_this_ptr;\n     };\n-\n-  /// thread\n-  class thread\n-  {\n-  public:\n+    \n     // types\n     class id;\n     typedef __gthread_t native_handle_type;\n@@ -152,6 +136,21 @@ namespace std\n     static unsigned hardware_concurrency();\n \n   private:\n+    template<typename _Callable>\n+      class __thread_data : public __thread_data_base\n+      {\n+      public:\n+\t__thread_data(_Callable&& __f)\n+\t  : _M_func(std::forward<_Callable>(__f))\n+\t{ }\n+\t\n+\tvoid _M_run()\n+\t{ _M_func(); }\n+\t\n+      private:\n+\t_Callable _M_func;\n+      };\n+\n     template<typename _Callable>\n       __thread_data_ptr \n       _M_make_thread_data(_Callable&& __f)"}, {"sha": "e3797e66dca4a401eb305a13adf146e0d5b0dcae", "filename": "libstdc++-v3/src/thread.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8644ecf59d370800fb1145f5facc66136d95039f/libstdc%2B%2B-v3%2Fsrc%2Fthread.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8644ecf59d370800fb1145f5facc66136d95039f/libstdc%2B%2B-v3%2Fsrc%2Fthread.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fthread.cc?ref=8644ecf59d370800fb1145f5facc66136d95039f", "patch": "@@ -40,8 +40,9 @@ namespace std\n     {\n       void* __thread_proxy(void* __p)\n       {\n-\t__thread_data_base* __t = static_cast<__thread_data_base*>(__p);\n-\t__thread_data_ptr __local_thread_data;\n+\tthread::__thread_data_base* __t = \n+\t  static_cast<thread::__thread_data_base*>(__p);\n+\tthread::__thread_data_ptr __local_thread_data;\n \t__local_thread_data.swap(__t->_M_this_ptr);\n \n \t__try"}]}