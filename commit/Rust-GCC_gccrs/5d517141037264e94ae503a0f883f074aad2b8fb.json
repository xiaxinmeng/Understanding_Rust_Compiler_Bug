{"sha": "5d517141037264e94ae503a0f883f074aad2b8fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ1MTcxNDEwMzcyNjRlOTRhZTUwM2EwZjg4M2YwNzRhYWQyYjhmYg==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-10-28T11:52:11Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-10-28T11:52:11Z"}, "message": "re PR rtl-optimization/38711 (ira should not be using df-lr except at -O1.)\n\n\tPR rtl-optimization/38711\n\t* ira.c (ira): Remove DF_LIVE if the problem is in the stack.\n\t(do_reload): Add it back at the end for -O2 and higher.\n\n\t* function.c (thread_prologue_and_epilogue_insns): Use\n\tREG_SET_TO_HARD_REG_SET instead of CLEAR_HARD_REG_SET and\n\treg_set_to_hard_reg_set.\n\nFrom-SVN: r192890", "tree": {"sha": "33dd73f7055ebe2827ac8d5bbc019cafd1b54a0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33dd73f7055ebe2827ac8d5bbc019cafd1b54a0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d517141037264e94ae503a0f883f074aad2b8fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d517141037264e94ae503a0f883f074aad2b8fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d517141037264e94ae503a0f883f074aad2b8fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d517141037264e94ae503a0f883f074aad2b8fb/comments", "author": null, "committer": null, "parents": [{"sha": "68cc8feb2f06207424b05f9f938a2b549f12cb9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68cc8feb2f06207424b05f9f938a2b549f12cb9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68cc8feb2f06207424b05f9f938a2b549f12cb9e"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "3ed5d44aca49b4b982714d046e037559894c1554", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d517141037264e94ae503a0f883f074aad2b8fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d517141037264e94ae503a0f883f074aad2b8fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d517141037264e94ae503a0f883f074aad2b8fb", "patch": "@@ -1,3 +1,13 @@\n+2012-10-28  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\tPR rtl-optimization/38711\n+\t* ira.c (ira): Remove DF_LIVE if the problem is in the stack.\n+\t(do_reload): Add it back at the end for -O2 and higher.\n+\n+\t* function.c (thread_prologue_and_epilogue_insns): Use\n+\tREG_SET_TO_HARD_REG_SET instead of CLEAR_HARD_REG_SET and\n+\treg_set_to_hard_reg_set.\n+\n 2012-10-28  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa-inline.c (edge_badness): Reduce precision; use scc hints."}, {"sha": "e23ac91daf31ae37dcfc6a21b9f80743d7dd9692", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d517141037264e94ae503a0f883f074aad2b8fb/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d517141037264e94ae503a0f883f074aad2b8fb/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=5d517141037264e94ae503a0f883f074aad2b8fb", "patch": "@@ -6176,8 +6176,7 @@ thread_prologue_and_epilogue_insns (void)\n \t  CLEAR_HARD_REG_BIT (prologue_clobbered, STACK_POINTER_REGNUM);\n \t  if (frame_pointer_needed)\n \t    CLEAR_HARD_REG_BIT (prologue_clobbered, HARD_FRAME_POINTER_REGNUM);\n-\t  CLEAR_HARD_REG_SET (live_on_edge);\n-\t  reg_set_to_hard_reg_set (&live_on_edge,\n+\t  REG_SET_TO_HARD_REG_SET (live_on_edge,\n \t\t\t\t   df_get_live_in (entry_edge->dest));\n \t  if (hard_reg_set_intersect_p (live_on_edge, prologue_clobbered))\n \t    {"}, {"sha": "8dcdbf57549d265e4875bf4feaaaecdbd3bdfc81", "filename": "gcc/ira.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d517141037264e94ae503a0f883f074aad2b8fb/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d517141037264e94ae503a0f883f074aad2b8fb/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=5d517141037264e94ae503a0f883f074aad2b8fb", "patch": "@@ -4399,6 +4399,16 @@ ira (FILE *f)\n   setup_prohibited_mode_move_regs ();\n \n   df_note_add_problem ();\n+\n+  /* DF_LIVE can't be used in the register allocator, too many other\n+     parts of the compiler depend on using the \"classic\" liveness\n+     interpretation of the DF_LR problem.  See PR38711.\n+     Remove the problem, so that we don't spend time updating it in\n+     any of the df_analyze() calls during IRA/LRA.  */\n+  if (optimize > 1)\n+    df_remove_problem (df_live);\n+  gcc_checking_assert (df_live == NULL);\n+\n #ifdef ENABLE_CHECKING\n   df->changeable_flags |= DF_VERIFY_SCHEDULED;\n #endif\n@@ -4678,6 +4688,12 @@ do_reload (void)\n   df_scan_alloc (NULL);\n   df_scan_blocks ();\n \n+  if (optimize > 1)\n+    {\n+      df_live_add_problem ();\n+      df_live_set_all_dirty ();\n+    }\n+\n   if (optimize)\n     df_analyze ();\n "}]}