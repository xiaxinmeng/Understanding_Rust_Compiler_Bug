{"sha": "e45c0886d6eb063199f113c4285bbd9d8e96fce3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ1YzA4ODZkNmViMDYzMTk5ZjExM2M0Mjg1YmJkOWQ4ZTk2ZmNlMw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-10-20T11:33:35Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-10-20T11:33:35Z"}, "message": "Make-lang.in (GNATLIBFLAGS, [...]): Reintroduce.\n\n\t* gcc-interface/Make-lang.in (GNATLIBFLAGS, GNATLIBCFLAGS, THREAD_KIND,\n\tTRACE): Reintroduce.\n\t(ada/tracebak.o, ada/targext.o, ada/cio.o, ada/init.o,\n\tada/initialize.o, ada/raise.o): Reintroduce explicit compilation rules.\n\nFrom-SVN: r180246", "tree": {"sha": "03e41ffd8ee0d72b4be66903f737a6e84f25bca0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03e41ffd8ee0d72b4be66903f737a6e84f25bca0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e45c0886d6eb063199f113c4285bbd9d8e96fce3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e45c0886d6eb063199f113c4285bbd9d8e96fce3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e45c0886d6eb063199f113c4285bbd9d8e96fce3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e45c0886d6eb063199f113c4285bbd9d8e96fce3/comments", "author": null, "committer": null, "parents": [{"sha": "c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "24d909d6521b707ce583d0ecd3ca47cd5b6dbb61", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e45c0886d6eb063199f113c4285bbd9d8e96fce3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e45c0886d6eb063199f113c4285bbd9d8e96fce3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e45c0886d6eb063199f113c4285bbd9d8e96fce3", "patch": "@@ -1,3 +1,10 @@\n+2011-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/Make-lang.in (GNATLIBFLAGS, GNATLIBCFLAGS, THREAD_KIND,\n+\tTRACE): Reintroduce.\n+\t(ada/tracebak.o, ada/targext.o, ada/cio.o, ada/init.o,\n+\tada/initialize.o, ada/raise.o): Reintroduce explicit compilation rules.\n+\n 2011-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (lhs_or_actual_p): New predicate."}, {"sha": "43d42f658b558969d98d225847d9273575abf960", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e45c0886d6eb063199f113c4285bbd9d8e96fce3/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e45c0886d6eb063199f113c4285bbd9d8e96fce3/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=e45c0886d6eb063199f113c4285bbd9d8e96fce3", "patch": "@@ -61,8 +61,12 @@ ALL_ADAFLAGS = $(CFLAGS) $(ADA_CFLAGS) $(ADAFLAGS) $(WARN_ADAFLAGS)\n FORCE_DEBUG_ADAFLAGS = -g\n ADA_CFLAGS =\n ADA_INCLUDES = -nostdinc -I- -I. -Iada -I$(srcdir)/ada -I$(srcdir)/ada/gcc-interface\n+GNATLIBFLAGS= -W -Wall -gnatpg -nostdinc\n+GNATLIBCFLAGS= -g -O2 $(TCFLAGS)\n ADA_INCLUDE_DIR = $(libsubdir)/adainclude\n ADA_RTL_OBJ_DIR = $(libsubdir)/adalib\n+THREAD_KIND=native\n+TRACE=no\n # We do not want the WARN_CFLAGS of the compiler in Ada as it is for C/C++.\n COMMON_FLAGS_TO_PASS = $(filter-out -pedantic -W%, $(FLAGS_TO_PASS))\n ADA_FLAGS_TO_PASS = \\\n@@ -1199,8 +1203,9 @@ ada/a-tags.o  : ada/a-tags.adb ada/a-tags.ads\n \t$(CC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) $(ADA_INCLUDES) \\\n \t  $< $(OUTPUT_OPTION)\n \n-CFLAGS-ada/tracebak.o += $(ADA_CFLAGS) -fno-omit-frame-pointer\n ada/tracebak.o : ada/tracebak.c $(CONFIG_H) $(SYSTEM_H)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) $(ALL_CPPFLAGS) \\\n+\t      $(INCLUDES) -fno-omit-frame-pointer $< $(OUTPUT_OPTION)\n \n # dependencies for windows specific tool (mdll)\n \n@@ -1221,20 +1226,25 @@ ada/exit.o     : ada/exit.c $(CONFIG_H) $(SYSTEM_H) ada/adaint.h\n ada/final.o    : ada/final.c $(CONFIG_H) $(SYSTEM_H) ada/raise.h\n ada/link.o     : ada/link.c\n \n-CFLAGS-ada/targext.o += $(ADA_CFLAGS)\n ada/targext.o : ada/targext.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n+\t\t $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n-CFLAGS-ada/cio.o += $(ADA_CFLAGS)\n ada/cio.o : ada/cio.c $(CONFIG_H) $(SYSTEM_H) ada/adaint.h\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n+\t\t $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n-CFLAGS-ada/init.o += $(ADA_CFLAGS)\n ada/init.o : ada/init.c $(CONFIG_H) $(SYSTEM_H) ada/adaint.h ada/raise.h\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n+\t\t $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n-CFLAGS-ada/initialize.o += $(ADA_CFLAGS)\n ada/initialize.o : ada/initialize.c\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n+\t\t $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n-CFLAGS-ada/raise.o += $(ADA_CFLAGS)\n ada/raise.o : ada/raise.c $(CONFIG_H) $(SYSTEM_H) ada/adaint.h ada/raise.h\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n+\t\t $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n ada/cuintp.o : ada/gcc-interface/cuintp.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) ada/gcc-interface/ada.h ada/types.h ada/uintp.h \\"}]}