{"sha": "823685221de986afb729910a6f2237f07a377f17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIzNjg1MjIxZGU5ODZhZmI3Mjk5MTBhNmYyMjM3ZjA3YTM3N2YxNw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2021-09-01T07:38:39Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2021-09-01T07:38:39Z"}, "message": "C: PR c/79412: Poison decls with error_mark_node after type mismatch\n\nThis patch fixes an ICE during error-recovery regression in the C front-end.\nThe symptom is that the middle-end's sanity checking assertions fail during\ngimplification when being asked to increment an array, which is non-sense.\nThe issue is that the C-front end has detected the type mismatch and\nreported an error to the user, but hasn't provided any indication of this\nto the middle-end, simply passing bogus trees that the optimizers recognize\nas invalid.\n\nThis appears to be a frequently reported ICE with 94730, 94731, 101036\nand 101365 all marked as duplicates.\n\nI believe the correct (polite) fix is to mark the mismatched types as\nproblematic/dubious in the front-end, when the error is spotted, so that\nthe middle-end has a heads-up and can be a little more forgiving.  This\npatch to c-decl.c's duplicate_decls sets (both) mismatched types to\nerror_mark_node if they are significantly different, and we've issued\nan error message.  Alas, this is too punitive for FUNCTION_DECLs where\nwe store return types, parameter lists, parameter types and attributes\nin the type, but fortunately the middle-end is already more cautious\nabout trusting possibly suspect function types.\n\nThis fix required one minor change to the testsuite, typedef-var-2.c\nwhere after conflicting type definitions, we now no longer assume that\nthe (first or) second definition is the correct one.  This change only\naffects the behaviour after seen_error(), so should be relatively safe.\n\n2021-09-01  Roger Sayle  <roger@nextmovesoftware.com>\n\t    Joseph Myers  <joseph@codesourcery.com>\n\ngcc/c/ChangeLog\n\tPR c/79412\n\t* c-decl.c (duplicate_decls): On significant mismatches, mark the\n\ttypes of both (non-function) decls as error_mark_node, so that the\n\tmiddle-end can see the code is malformed.\n\t(free_attr_access_data): Don't process if the type has been set to\n\terror_mark_node.\n\ngcc/testsuite/ChangeLog\n\tPR c/79412\n\t* gcc.dg/pr79412.c: New test case.\n\t* gcc.dg/typedef-var-2.c: Update expeted errors.", "tree": {"sha": "3397097f226bb1f8809c72f58a346beb41ffa10b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3397097f226bb1f8809c72f58a346beb41ffa10b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/823685221de986afb729910a6f2237f07a377f17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/823685221de986afb729910a6f2237f07a377f17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/823685221de986afb729910a6f2237f07a377f17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/823685221de986afb729910a6f2237f07a377f17/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2874d905647a1d146dafa60199d440e837adc4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2874d905647a1d146dafa60199d440e837adc4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2874d905647a1d146dafa60199d440e837adc4d"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "3482d82fae1af730523dc2d3daaddea3df43c2eb", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/823685221de986afb729910a6f2237f07a377f17/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/823685221de986afb729910a6f2237f07a377f17/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=823685221de986afb729910a6f2237f07a377f17", "patch": "@@ -2957,6 +2957,17 @@ duplicate_decls (tree newdecl, tree olddecl)\n     {\n       /* Avoid `unused variable' and other warnings for OLDDECL.  */\n       suppress_warning (olddecl, OPT_Wunused);\n+      /* If the types are completely different, poison them both with\n+ \t error_mark_node.  */\n+      if (TREE_CODE (TREE_TYPE (newdecl)) != TREE_CODE (TREE_TYPE (olddecl))\n+\t  && olddecl != error_mark_node\n+\t  && seen_error ())\n+\t{\n+\t  if (TREE_CODE (olddecl) != FUNCTION_DECL)\n+\t    TREE_TYPE (olddecl) = error_mark_node;\n+\t  if (TREE_CODE (newdecl) != FUNCTION_DECL)\n+\t    TREE_TYPE (newdecl) = error_mark_node;\n+\t}\n       return false;\n     }\n \n@@ -12209,7 +12220,7 @@ free_attr_access_data ()\n \t  attr_access::free_lang_data (attrs);\n \n       tree fntype = TREE_TYPE (n->decl);\n-      if (!fntype)\n+      if (!fntype || fntype == error_mark_node)\n \tcontinue;\n       tree attrs = TYPE_ATTRIBUTES (fntype);\n       if (!attrs)"}, {"sha": "b60d5e1b2e33dac6420411247de4f0a1b213eb08", "filename": "gcc/testsuite/gcc.dg/pr79412.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/823685221de986afb729910a6f2237f07a377f17/gcc%2Ftestsuite%2Fgcc.dg%2Fpr79412.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/823685221de986afb729910a6f2237f07a377f17/gcc%2Ftestsuite%2Fgcc.dg%2Fpr79412.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr79412.c?ref=823685221de986afb729910a6f2237f07a377f17", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+int a;\n+/* { dg-message \"note: previous declaration\" \"previous declaration\" { target *-*-* } .-1 } */\n+void fn1 ()\n+{\n+  a++;\n+}\n+int a[] = {2};  /* { dg-error \"conflicting types\" } */"}, {"sha": "bc119a0558ebf34f126a21b5f3dceadb9049e2bf", "filename": "gcc/testsuite/gcc.dg/typedef-var-2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/823685221de986afb729910a6f2237f07a377f17/gcc%2Ftestsuite%2Fgcc.dg%2Ftypedef-var-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/823685221de986afb729910a6f2237f07a377f17/gcc%2Ftestsuite%2Fgcc.dg%2Ftypedef-var-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftypedef-var-2.c?ref=823685221de986afb729910a6f2237f07a377f17", "patch": "@@ -4,12 +4,13 @@\n int f (void)\n {\n   extern float v;   \n-\n+/* { dg-message \"note: previous declaration\" \"previous declaration\" { target *-*-* } .-1 } */\n   return (v > 0.0f);\n }\n \n extern int t;\n+/* { dg-message \"note: previous declaration\" \"previous declaration\" { target *-*-* } .-1 } */\n \n typedef float t; /* { dg-error \"redeclared as different kind of symbol\" } */\n \n-t v = 4.5f;\n+t v = 4.5f;  /* { dg-error \"conflicting types\" } */"}]}