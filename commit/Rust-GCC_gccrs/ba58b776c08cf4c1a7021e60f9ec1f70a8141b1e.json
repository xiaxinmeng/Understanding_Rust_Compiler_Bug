{"sha": "ba58b776c08cf4c1a7021e60f9ec1f70a8141b1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE1OGI3NzZjMDhjZjRjMWE3MDIxZTYwZjllYzFmNzBhODE0MWIxZQ==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2019-12-16T10:34:08Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-16T10:34:08Z"}, "message": "[Ada] Minor reformatting and U.S. spelling adjustment\n\n2019-12-16  Gary Dismukes  <dismukes@adacore.com>\n\ngcc/ada/\n\n\t* checks.adb, sem_util.adb: Minor reformatting and U.S. spelling\n\tadjustment.\n\nFrom-SVN: r279425", "tree": {"sha": "a018d402d7f07ad503f910907dbbe5e3369933f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a018d402d7f07ad503f910907dbbe5e3369933f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba58b776c08cf4c1a7021e60f9ec1f70a8141b1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba58b776c08cf4c1a7021e60f9ec1f70a8141b1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba58b776c08cf4c1a7021e60f9ec1f70a8141b1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba58b776c08cf4c1a7021e60f9ec1f70a8141b1e/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dce1ef7a34b2b80d02e36ebc464e642a84b15f2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dce1ef7a34b2b80d02e36ebc464e642a84b15f2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dce1ef7a34b2b80d02e36ebc464e642a84b15f2d"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "4af1acdf1eb0ae710804953361441a45cb4c0072", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba58b776c08cf4c1a7021e60f9ec1f70a8141b1e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba58b776c08cf4c1a7021e60f9ec1f70a8141b1e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ba58b776c08cf4c1a7021e60f9ec1f70a8141b1e", "patch": "@@ -1,3 +1,8 @@\n+2019-12-16  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* checks.adb, sem_util.adb: Minor reformatting and U.S. spelling\n+\tadjustment.\n+\n 2019-12-16  Bob Duff  <duff@adacore.com>\n \n \t* sem_ch10.adb (Analyze_Subunit): Give an error if the subunit"}, {"sha": "51ef6c078a3c72872d630409dbc1dbbd0936addb", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba58b776c08cf4c1a7021e60f9ec1f70a8141b1e/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba58b776c08cf4c1a7021e60f9ec1f70a8141b1e/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=ba58b776c08cf4c1a7021e60f9ec1f70a8141b1e", "patch": "@@ -2067,15 +2067,14 @@ package body Checks is\n             Apply_Float_Conversion_Check (Ck_Node, Target_Base);\n             Set_Etype (Temp, Target_Base);\n \n-            --  Note : previously the declaration was inserted above\n-            --  the parent of the conversion, apparently as a small\n-            --  optimization for the subequent traversal in Insert_\n-            --  Actions.  Unfortunately a similar optimization takes\n-            --  place in Insert_Actions, assuming that the insertion\n-            --  point must be above the expression that creates actions.\n-            --  This is not correct in the presence of conditional\n-            --  expressions, where the insertion must be in the\n-            --  list of asctions attached to the current alternative.\n+            --  Note: Previously the declaration was inserted above the parent\n+            --  of the conversion, apparently as a small optimization for the\n+            --  subequent traversal in Insert_Actions. Unfortunately a similar\n+            --  optimization takes place in Insert_Actions, assuming that the\n+            --  insertion point must be above the expression that creates\n+            --  actions. This is not correct in the presence of conditional\n+            --  expressions, where the insertion must be in the list of actions\n+            --  attached to the current alternative.\n \n             Insert_Action (Par,\n               Make_Object_Declaration (Loc,"}, {"sha": "4c47ec4b6420c84c873818a2cda796c93a9fd4a4", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba58b776c08cf4c1a7021e60f9ec1f70a8141b1e/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba58b776c08cf4c1a7021e60f9ec1f70a8141b1e/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=ba58b776c08cf4c1a7021e60f9ec1f70a8141b1e", "patch": "@@ -13790,11 +13790,11 @@ package body Sem_Util is\n    function Is_Atomic_Or_VFA_Object (N : Node_Id) return Boolean is\n       function Is_VFA_Object (N : Node_Id) return Boolean;\n       --  Determine whether arbitrary node N denotes a reference to an object\n-      --  which is Volatile_Full_Access. Modelled on Is_Atomic_Object above.\n+      --  that is Volatile_Full_Access. Modeled on Is_Atomic_Object above.\n \n       function Is_VFA_Object_Entity (Id : Entity_Id) return Boolean;\n-      --  Determine whether arbitrary entity Id denotes an object which is\n-      --  Volatile_Full_Access. Modelled on Is_Atomic_Object_Entity above.\n+      --  Determine whether arbitrary entity Id denotes an object that is\n+      --  Volatile_Full_Access. Modeled on Is_Atomic_Object_Entity above.\n \n       ---------------------\n       --  Is_VFA_Object  --"}]}