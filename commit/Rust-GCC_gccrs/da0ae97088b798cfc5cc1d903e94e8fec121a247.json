{"sha": "da0ae97088b798cfc5cc1d903e94e8fec121a247", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGEwYWU5NzA4OGI3OThjZmM1Y2MxZDkwM2U5NGU4ZmVjMTIxYTI0Nw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-06-24T18:20:28Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-06-24T18:20:28Z"}, "message": "Implement 8bit divmod patterns.\n\ngcc/\n\n2010-06-24  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/44588\n\t* config/i386/i386.md (extract_code): New.\n\t(<u>divmodqi4): Likewise.\n\t(divmodhiqi3): Likewise.\n\t(udivmodhiqi3): Likewise.\n\t(<u>divqi3): Remvoved.\n\ngcc/testsuite/\n\n2010-06-24  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/44588\n\t* gcc.target/i386/mod-1.c: New.\n\t* gcc.target/i386/umod-1.c: Likewise.\n\t* gcc.target/i386/umod-2.c: Likewise.\n\t* gcc.target/i386/umod-3.c: Likewise.\n\nFrom-SVN: r161329", "tree": {"sha": "3adbcf39fae4d6feb8a320fb9854096c2a4e031f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3adbcf39fae4d6feb8a320fb9854096c2a4e031f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da0ae97088b798cfc5cc1d903e94e8fec121a247", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da0ae97088b798cfc5cc1d903e94e8fec121a247", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da0ae97088b798cfc5cc1d903e94e8fec121a247", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da0ae97088b798cfc5cc1d903e94e8fec121a247/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "54f044ebbbdce8a6758b3fa7bdbd854632bc47b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54f044ebbbdce8a6758b3fa7bdbd854632bc47b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54f044ebbbdce8a6758b3fa7bdbd854632bc47b3"}], "stats": {"total": 116, "additions": 105, "deletions": 11}, "files": [{"sha": "16e71b94874162621ffb04b473d4f31beaa84456", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da0ae97088b798cfc5cc1d903e94e8fec121a247/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da0ae97088b798cfc5cc1d903e94e8fec121a247/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da0ae97088b798cfc5cc1d903e94e8fec121a247", "patch": "@@ -1,3 +1,12 @@\n+2010-06-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/44588\n+\t* config/i386/i386.md (extract_code): New.\n+\t(<u>divmodqi4): Likewise.\n+\t(divmodhiqi3): Likewise.\n+\t(udivmodhiqi3): Likewise.\n+\t(<u>divqi3): Remvoved.\n+\n 2010-06-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/44492"}, {"sha": "d2afa853da2497cca7085ff07f595750383c9990", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 88, "deletions": 11, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da0ae97088b798cfc5cc1d903e94e8fec121a247/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da0ae97088b798cfc5cc1d903e94e8fec121a247/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=da0ae97088b798cfc5cc1d903e94e8fec121a247", "patch": "@@ -760,6 +760,8 @@\n \n ;; Used in signed and unsigned divisions.\n (define_code_iterator any_div [div udiv])\n+(define_code_attr extract_code\n+  [(div \"SIGN_EXTRACT\") (udiv \"ZERO_EXTRACT\")])\n \n ;; Instruction prefix for signed and unsigned operations.\n (define_code_attr sgnprefix [(sign_extend \"i\") (zero_extend \"\")\n@@ -7269,17 +7271,6 @@\n \f\n ;; Divide instructions\n \n-(define_insn \"<u>divqi3\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"=a\")\n-\t(any_div:QI\n-\t  (match_operand:HI 1 \"register_operand\" \"0\")\n-\t  (match_operand:QI 2 \"nonimmediate_operand\" \"qm\")))\n-   (clobber (reg:CC FLAGS_REG))]\n-  \"TARGET_QIMODE_MATH\"\n-  \"<sgnprefix>div{b}\\t%2\"\n-  [(set_attr \"type\" \"idiv\")\n-   (set_attr \"mode\" \"QI\")])\n-\n ;; The patterns that match these are at the end of this file.\n \n (define_expand \"divxf3\"\n@@ -7316,6 +7307,92 @@\n \f\n ;; Divmod instructions.\n \n+(define_expand \"<u>divmodqi4\"\n+  [(parallel [(set (match_operand:QI 0 \"register_operand\" \"\")\n+\t\t   (any_div:QI\n+\t\t     (match_operand:QI 1 \"register_operand\" \"\")\n+\t\t     (match_operand:QI 2 \"nonimmediate_operand\" \"\")))\n+\t      (set (match_operand:QI 3 \"register_operand\" \"\")\n+\t\t   (mod:QI (match_dup 1) (match_dup 2)))\n+\t      (clobber (reg:CC FLAGS_REG))])]\n+  \"TARGET_QIMODE_MATH\"\n+{\n+  rtx div, mod, insn;\n+  rtx tmp0, tmp1;\n+  \n+  tmp0 = gen_reg_rtx (HImode);\n+  tmp1 = gen_reg_rtx (HImode);\n+\n+  /* Extend operands[1] to HImode.  Generate 8bit divide.  Result is\n+     in AX.  */\n+  if (<extract_code> == SIGN_EXTRACT)\n+    {\n+      emit_insn (gen_extendqihi2 (tmp1, operands[1]));\n+      emit_insn (gen_divmodhiqi3 (tmp0, tmp1, operands[2]));\n+\n+      div = gen_rtx_DIV (QImode, operands[1], operands[2]);\n+      mod = gen_rtx_MOD (QImode, operands[1], operands[2]);\n+\n+      tmp1 = gen_rtx_<extract_code> (QImode, tmp0,\n+\t\t\t\t     GEN_INT (8), GEN_INT (8));\n+    }\n+  else\n+    {\n+      emit_insn (gen_zero_extendqihi2 (tmp1, operands[1]));\n+      emit_insn (gen_udivmodhiqi3 (tmp0, tmp1, operands[2]));\n+\n+      div = gen_rtx_UDIV (QImode, operands[1], operands[2]);\n+      mod = gen_rtx_UMOD (QImode, operands[1], operands[2]);\n+\n+      tmp1 = gen_rtx_<extract_code> (SImode, tmp0,\n+\t\t\t\t     GEN_INT (8), GEN_INT (8));\n+      tmp1 = simplify_gen_subreg (QImode, tmp1, SImode, 0);\n+    }\n+\n+  /* Extract remainder from AH.  */\n+  insn = emit_move_insn (operands[3], tmp1);\n+  set_unique_reg_note (insn, REG_EQUAL, mod);\n+\n+  /* Extract quotient from AL.  */\n+  insn = emit_move_insn (operands[0], gen_lowpart (QImode, tmp0));\n+  set_unique_reg_note (insn, REG_EQUAL, div);\n+\n+  DONE;\n+})\n+\n+;; Divide AX by r/m8, with result stored in\n+;; AL <- Quotient\n+;; AH <- Remainder\n+(define_insn \"divmodhiqi3\"\n+  [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n+\t(ior:HI\n+\t  (ashift:HI\n+\t    (zero_extend:HI\n+\t      (mod:QI (match_operand:HI 1 \"register_operand\" \"0\")\n+\t\t      (match_operand:QI 2 \"nonimmediate_operand\" \"qm\")))\n+\t    (const_int 8))\n+\t  (zero_extend:HI (div:QI (match_dup 1) (match_dup 2)))))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_QIMODE_MATH\"\n+  \"idiv{b}\\t%2\"\n+  [(set_attr \"type\" \"idiv\")\n+   (set_attr \"mode\" \"QI\")])\n+\n+(define_insn \"udivmodhiqi3\"\n+  [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n+\t(ior:HI\n+\t  (ashift:HI\n+\t    (zero_extend:HI\n+\t      (umod:QI (match_operand:HI 1 \"register_operand\" \"0\")\n+\t\t       (match_operand:QI 2 \"nonimmediate_operand\" \"qm\")))\n+\t    (const_int 8))\n+\t  (zero_extend:HI (udiv:QI (match_dup 1) (match_dup 2)))))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_QIMODE_MATH\"\n+  \"div{b}\\t%2\"\n+  [(set_attr \"type\" \"idiv\")\n+   (set_attr \"mode\" \"QI\")])\n+\n (define_expand \"divmod<mode>4\"\n   [(parallel [(set (match_operand:SWIM248 0 \"register_operand\" \"\")\n \t\t   (div:SWIM248"}, {"sha": "ad9c1f3a164b05c8d52243d6443aac31290c8f66", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da0ae97088b798cfc5cc1d903e94e8fec121a247/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da0ae97088b798cfc5cc1d903e94e8fec121a247/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da0ae97088b798cfc5cc1d903e94e8fec121a247", "patch": "@@ -1,3 +1,11 @@\n+2010-06-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/44588\n+\t* gcc.target/i386/mod-1.c: New.\n+\t* gcc.target/i386/umod-1.c: Likewise.\n+\t* gcc.target/i386/umod-2.c: Likewise.\n+\t* gcc.target/i386/umod-3.c: Likewise.\n+\n 2010-06-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/44492"}]}