{"sha": "05724daed2ffba316e84fcd45f02221d52e4fa95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU3MjRkYWVkMmZmYmEzMTZlODRmY2Q0NWYwMjIyMWQ1MmU0ZmE5NQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2007-07-13T15:36:39Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2007-07-13T15:36:39Z"}, "message": "libgcj.ver: Add __gcj_personality_sj0.\n\n2007-07-13  Andrew Haley  <aph@redhat.com>\n\n        * libgcj.ver: Add __gcj_personality_sj0.\n\n        * testsuite/libjava.jvmti/jvmti-interp.exp: Likewise.\n        * testsuite/libjava.jni/jni.exp: Use -fdollars-in-identifiers.\n        * testsuite/libjava.jni/cni.exp: Use -fdollars-in-identifiers.\n        * testsuite/libjava.jvmti/jvmti.exp (gcj_jvmti_compile_cxx_to_o): Likewise.\n\n        * gnu/classpath/natVMStackWalker.cc (getCallingClassLoader): Check\n        klass is non-null.\n        * java/lang/reflect/natField.cc (getAddr): Call\n        _Jv_StackTrace::GetCallingClass only if CALLER is non-null.\n        * java/lang/reflect/natVMProxy.cc (run_proxy): Use\n        _Jv_getFieldInternal to get field proxyClass.m.\n        (_Jv_getFieldInternal): New function.\n\nFrom-SVN: r126623", "tree": {"sha": "a39d0218788f5767c0531f93e60cedd6147f8934", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a39d0218788f5767c0531f93e60cedd6147f8934"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05724daed2ffba316e84fcd45f02221d52e4fa95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05724daed2ffba316e84fcd45f02221d52e4fa95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05724daed2ffba316e84fcd45f02221d52e4fa95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05724daed2ffba316e84fcd45f02221d52e4fa95/comments", "author": null, "committer": null, "parents": [{"sha": "976731ee6e809f1201abbed7e85717bda0025fb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/976731ee6e809f1201abbed7e85717bda0025fb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/976731ee6e809f1201abbed7e85717bda0025fb1"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "73162fcaab3b27dfd43a938862c8646820a0d629", "filename": "libjava/headers.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05724daed2ffba316e84fcd45f02221d52e4fa95/libjava%2Fheaders.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05724daed2ffba316e84fcd45f02221d52e4fa95/libjava%2Fheaders.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fheaders.txt?ref=05724daed2ffba316e84fcd45f02221d52e4fa95", "patch": "@@ -49,11 +49,11 @@ friend class java::lang::Class;\n class java/lang/reflect/Field\n prepend jfieldID _Jv_FromReflectedField (java::lang::reflect::Field *);\n prepend jobject _Jv_JNI_ToReflectedField (_Jv_JNIEnv*, jclass, jfieldID, jboolean);\n-prepend jobject _Jv_getFieldInternal (java::lang::reflect::Field f, jclass c, jobject o);\n+prepend jobject _Jv_getFieldInternal (java::lang::reflect::Field *f, jclass c, jobject o);\n friend jfieldID (::_Jv_FromReflectedField) (java::lang::reflect::Field *);\n friend jobject (::_Jv_JNI_ToReflectedField) (_Jv_JNIEnv*, jclass, jfieldID, jboolean);\n friend class java::lang::Class;\n-friend jobject (::_Jv_getFieldInternal) (java::lang::reflect::Field f, jclass c, jobject o);\n+friend jobject (::_Jv_getFieldInternal) (java::lang::reflect::Field *f, jclass c, jobject o);\n \n class java/lang/reflect/Method\n prepend jmethodID _Jv_FromReflectedMethod (java::lang::reflect::Method *);"}]}