{"sha": "9f706f23d133a3e4eb5130996461e5cfb2cb706a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY3MDZmMjNkMTMzYTNlNGViNTEzMDk5NjQ2MWU1Y2ZiMmNiNzA2YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-06-05T15:35:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-06-05T15:35:13Z"}, "message": "re PR middle-end/40340 (Fortification warning no longer emitted in inlines)\n\n\tPR middle-end/40340\n\t* tree-ssa-live.c (remove_unused_scope_block_p): Don't prune\n\tinlined_function_outer_scope_p blocks for artificial inlines\n\teven at -g0/-g1.\n\t* tree.c (tree_nonartificial_location): Rewrite using\n\tblock_nonartificial_location.\n\n\t* gcc.dg/pr40340-1.c: New test.\n\t* gcc.dg/pr40340-2.c: New test.\n\t* gcc.dg/pr40340-3.c: New test.\n\t* gcc.dg/pr40340-4.c: New test.\n\t* gcc.dg/pr40340-5.c: New test.\n\t* gcc.dg/pr40340.h: New file.\n\nFrom-SVN: r148212", "tree": {"sha": "12a9da39bc6bfc83111af358d8b58d60dbbd2f22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12a9da39bc6bfc83111af358d8b58d60dbbd2f22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f706f23d133a3e4eb5130996461e5cfb2cb706a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f706f23d133a3e4eb5130996461e5cfb2cb706a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f706f23d133a3e4eb5130996461e5cfb2cb706a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f706f23d133a3e4eb5130996461e5cfb2cb706a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f439681a9e2e7fa095868097d0e0cc331734957", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f439681a9e2e7fa095868097d0e0cc331734957", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f439681a9e2e7fa095868097d0e0cc331734957"}], "stats": {"total": 187, "additions": 160, "deletions": 27}, "files": [{"sha": "b06f7e4966726750342c7de521916593aca61513", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f706f23d133a3e4eb5130996461e5cfb2cb706a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f706f23d133a3e4eb5130996461e5cfb2cb706a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f706f23d133a3e4eb5130996461e5cfb2cb706a", "patch": "@@ -1,3 +1,19 @@\n+2009-06-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/40340\n+\t* tree-ssa-live.c (remove_unused_scope_block_p): Don't prune\n+\tinlined_function_outer_scope_p blocks for artificial inlines\n+\teven at -g0/-g1.\n+\t* tree.c (tree_nonartificial_location): Rewrite using\n+\tblock_nonartificial_location.\n+\n+\t* gcc.dg/pr40340-1.c: New test.\n+\t* gcc.dg/pr40340-2.c: New test.\n+\t* gcc.dg/pr40340-3.c: New test.\n+\t* gcc.dg/pr40340-4.c: New test.\n+\t* gcc.dg/pr40340-5.c: New test.\n+\t* gcc.dg/pr40340.h: New file.\n+\n 2009-06-05  Revital Eres  <eres@il.ibm.com>\n \t    Leehod Baruch  <leehod@il.ibm.com>\n \n@@ -21,7 +37,7 @@\n \t* dwarf2out.c (dwarf2out_begin_function): Mark discriminator\n \tas possibly unused.\n \n-2009-06-04  Jakub Jelinek  <jakub@redhat.com>\n+2009-06-05  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/s390/s390.c (global_not_special_regno_p): New static inline.\n \t(save_gprs): Don't tell unwinder when a global register is saved."}, {"sha": "aae84c637814461f1c1c76a2904588152654fc4e", "filename": "gcc/testsuite/gcc.dg/pr40340-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f706f23d133a3e4eb5130996461e5cfb2cb706a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40340-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f706f23d133a3e4eb5130996461e5cfb2cb706a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40340-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40340-1.c?ref=9f706f23d133a3e4eb5130996461e5cfb2cb706a", "patch": "@@ -0,0 +1,24 @@\n+/* PR middle-end/40340 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wall -Wno-system-headers\" } */\n+\n+#include \"pr40340.h\"\n+\n+static inline\n+__attribute__ ((always_inline))\n+void\n+test (char *p)\n+{\n+  memset (p, 0, 6);\n+}\n+\n+int\n+main (void)\n+{\n+  char buf[4];\n+  test (buf);\n+  return 0;\n+}\n+\n+/* { dg-warning \"will always overflow destination buffer\" \"\" { target *-*-* } 10 } */\n+/* { dg-message \"file included\" \"In file included\" { target *-*-* } 0 } */"}, {"sha": "a0d6e084e7397caf0c4a806be0270b6cda9ece59", "filename": "gcc/testsuite/gcc.dg/pr40340-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f706f23d133a3e4eb5130996461e5cfb2cb706a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40340-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f706f23d133a3e4eb5130996461e5cfb2cb706a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40340-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40340-2.c?ref=9f706f23d133a3e4eb5130996461e5cfb2cb706a", "patch": "@@ -0,0 +1,16 @@\n+/* PR middle-end/40340 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wall -Wno-system-headers\" } */\n+\n+#include \"pr40340.h\"\n+\n+int\n+main (void)\n+{\n+  char buf[4];\n+  memset (buf, 0, 6);\n+  return 0;\n+}\n+\n+/* { dg-warning \"will always overflow destination buffer\" \"\" { target *-*-* } 10 } */\n+/* { dg-message \"file included\" \"In file included\" { target *-*-* } 0 } */"}, {"sha": "5ef09e073d8e44729c7984a2d97d9c0f5eb1a0d0", "filename": "gcc/testsuite/gcc.dg/pr40340-3.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f706f23d133a3e4eb5130996461e5cfb2cb706a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40340-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f706f23d133a3e4eb5130996461e5cfb2cb706a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40340-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40340-3.c?ref=9f706f23d133a3e4eb5130996461e5cfb2cb706a", "patch": "@@ -0,0 +1,15 @@\n+/* PR middle-end/40340 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wall -Wno-system-headers\" } */\n+\n+#define TEST2\n+#include \"pr40340.h\"\n+\n+int\n+main (void)\n+{\n+  test2 ();\n+  return 0;\n+}\n+\n+/* { dg-bogus \"will always overflow destination buffer\" \"\" { target *-*-* } 10 } */"}, {"sha": "d3f020cada8e228784a17fce73faf88f4173a090", "filename": "gcc/testsuite/gcc.dg/pr40340-4.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f706f23d133a3e4eb5130996461e5cfb2cb706a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40340-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f706f23d133a3e4eb5130996461e5cfb2cb706a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40340-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40340-4.c?ref=9f706f23d133a3e4eb5130996461e5cfb2cb706a", "patch": "@@ -0,0 +1,16 @@\n+/* PR middle-end/40340 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wall -Wno-system-headers -g\" } */\n+\n+#define TEST3\n+#include \"pr40340.h\"\n+\n+int\n+main (void)\n+{\n+  char buf[4];\n+  test3 (buf);\n+  return 0;\n+}\n+\n+/* { dg-bogus \"will always overflow destination buffer\" \"\" { target *-*-* } 10 } */"}, {"sha": "f50514c3ac9a6deb56a1773ab91841ab0ca7ccdb", "filename": "gcc/testsuite/gcc.dg/pr40340-5.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f706f23d133a3e4eb5130996461e5cfb2cb706a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40340-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f706f23d133a3e4eb5130996461e5cfb2cb706a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40340-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40340-5.c?ref=9f706f23d133a3e4eb5130996461e5cfb2cb706a", "patch": "@@ -0,0 +1,17 @@\n+/* PR middle-end/40340 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wall -Wsystem-headers -g\" } */\n+\n+#define TEST3\n+#include \"pr40340.h\"\n+\n+int\n+main (void)\n+{\n+  char buf[4];\n+  test3 (buf);\n+  return 0;\n+}\n+\n+/* { dg-warning \"will always overflow destination buffer\" \"\" { target *-*-* } 10 } */\n+/* { dg-message \"file included\" \"In file included\" { target *-*-* } 0 } */"}, {"sha": "174e076b943f6cb4203de55cf0f3d0bb161e9013", "filename": "gcc/testsuite/gcc.dg/pr40340.h", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f706f23d133a3e4eb5130996461e5cfb2cb706a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40340.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f706f23d133a3e4eb5130996461e5cfb2cb706a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40340.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40340.h?ref=9f706f23d133a3e4eb5130996461e5cfb2cb706a", "patch": "@@ -0,0 +1,31 @@\n+#pragma GCC system_header\n+typedef __SIZE_TYPE__ size_t;\n+extern void *memset (void *s, int c, size_t n)\n+  __attribute__ ((nothrow, nonnull (1)));\n+extern inline\n+__attribute__ ((always_inline, artificial, gnu_inline, nothrow))\n+void *\n+memset (void *dest, int ch, size_t len)\n+{\n+  return __builtin___memset_chk (dest, ch, len,\n+\t\t\t\t __builtin_object_size (dest, 0));\n+}\n+\n+#ifdef TEST2\n+static void\n+__attribute__ ((noinline))\n+test2 (void)\n+{\n+  char buf[4];\n+  memset (buf, 0, 6);\n+}\n+#endif\n+\n+#ifdef TEST3\n+static inline void\n+__attribute__ ((always_inline))\n+test3 (char *p)\n+{\n+  memset (p, 0, 6);\n+}\n+#endif"}, {"sha": "a710c65d3b4384a0898ace62358fcc4ceb7c70f8", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f706f23d133a3e4eb5130996461e5cfb2cb706a/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f706f23d133a3e4eb5130996461e5cfb2cb706a/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=9f706f23d133a3e4eb5130996461e5cfb2cb706a", "patch": "@@ -536,7 +536,25 @@ remove_unused_scope_block_p (tree scope)\n    /* For terse debug info we can eliminate info on unused variables.  */\n    else if (debug_info_level == DINFO_LEVEL_NONE\n \t    || debug_info_level == DINFO_LEVEL_TERSE)\n-     ;\n+     {\n+       /* Even for -g0/-g1 don't prune outer scopes from artificial\n+\t  functions, otherwise diagnostics using tree_nonartificial_location\n+\t  will not be emitted properly.  */\n+       if (inlined_function_outer_scope_p (scope))\n+\t {\n+\t   tree ao = scope;\n+\n+\t   while (ao\n+\t\t  && TREE_CODE (ao) == BLOCK\n+\t\t  && BLOCK_ABSTRACT_ORIGIN (ao) != ao)\n+\t     ao = BLOCK_ABSTRACT_ORIGIN (ao);\n+\t   if (ao\n+\t       && TREE_CODE (ao) == FUNCTION_DECL\n+\t       && DECL_DECLARED_INLINE_P (ao)\n+\t       && lookup_attribute (\"artificial\", DECL_ATTRIBUTES (ao)))\n+\t     unused = false;\n+\t }\n+     }\n    else if (BLOCK_VARS (scope) || BLOCK_NUM_NONLOCALIZED_VARS (scope))\n      unused = false;\n    /* See if this block is important for representation of inlined function."}, {"sha": "352c5534348fe5a20183ef732f06b5d2993e3b70", "filename": "gcc/tree.c", "status": "modified", "additions": 5, "deletions": 25, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f706f23d133a3e4eb5130996461e5cfb2cb706a/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f706f23d133a3e4eb5130996461e5cfb2cb706a/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=9f706f23d133a3e4eb5130996461e5cfb2cb706a", "patch": "@@ -9224,32 +9224,12 @@ block_nonartificial_location (tree block)\n location_t\n tree_nonartificial_location (tree exp)\n {\n-  tree block = TREE_BLOCK (exp);\n+  location_t *loc = block_nonartificial_location (TREE_BLOCK (exp));\n \n-  while (block\n-\t && TREE_CODE (block) == BLOCK\n-\t && BLOCK_ABSTRACT_ORIGIN (block))\n-    {\n-      tree ao = BLOCK_ABSTRACT_ORIGIN (block);\n-\n-      do\n-\t{\n-\t  if (TREE_CODE (ao) == FUNCTION_DECL\n-\t      && DECL_DECLARED_INLINE_P (ao)\n-\t      && lookup_attribute (\"artificial\", DECL_ATTRIBUTES (ao)))\n-\t    return BLOCK_SOURCE_LOCATION (block);\n-\t  else if (TREE_CODE (ao) == BLOCK\n-\t\t   && BLOCK_SUPERCONTEXT (ao) != ao)\n-\t    ao = BLOCK_SUPERCONTEXT (ao);\n-\t  else\n-\t    break;\n-\t}\n-      while (ao);\n-\n-      block = BLOCK_SUPERCONTEXT (block);\n-    }\n-\n-  return EXPR_LOCATION (exp);\n+  if (loc)\n+    return *loc;\n+  else\n+    return EXPR_LOCATION (exp);\n }\n \n "}]}