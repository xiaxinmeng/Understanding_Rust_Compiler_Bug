{"sha": "268a0ec4edd31182a527d02f47fab50d60ad845d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY4YTBlYzRlZGQzMTE4MmE1MjdkMDJmNDdmYWI1MGQ2MGFkODQ1ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-04-05T17:05:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-04-05T17:05:23Z"}, "message": "re PR rtl-optimization/70542 (Wrong code with -O3 -mavx2.)\n\n\tPR rtl-optimization/70542\n\t* ree.c (add_removable_extension): For VECTOR_MODE_P punt\n\tif there are any uses other than insn or debug insns.\n\n\t* gcc.dg/torture/pr70542.c: New test.\n\t* gcc.target/i386/avx2-pr70542.c: New test.\n\nFrom-SVN: r234756", "tree": {"sha": "52989561542f7e2f21d718297c1e222a7eb64b4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52989561542f7e2f21d718297c1e222a7eb64b4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/268a0ec4edd31182a527d02f47fab50d60ad845d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/268a0ec4edd31182a527d02f47fab50d60ad845d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/268a0ec4edd31182a527d02f47fab50d60ad845d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/268a0ec4edd31182a527d02f47fab50d60ad845d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "02a49e4f9f81edfd3da44295a163f5029fcfef78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a49e4f9f81edfd3da44295a163f5029fcfef78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02a49e4f9f81edfd3da44295a163f5029fcfef78"}], "stats": {"total": 79, "additions": 65, "deletions": 14}, "files": [{"sha": "df63cc59b8d104d10e0c349eef30601a98299be6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/268a0ec4edd31182a527d02f47fab50d60ad845d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/268a0ec4edd31182a527d02f47fab50d60ad845d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=268a0ec4edd31182a527d02f47fab50d60ad845d", "patch": "@@ -1,3 +1,9 @@\n+2016-04-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/70542\n+\t* ree.c (add_removable_extension): For VECTOR_MODE_P punt\n+\tif there are any uses other than insn or debug insns.\n+\n 2016-04-05  Marc Glisse  <marc.glisse@inria.fr>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "4627b4f99b555a77d53ebdcd9f1fd3ccb6488082", "filename": "gcc/ree.c", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/268a0ec4edd31182a527d02f47fab50d60ad845d/gcc%2Free.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/268a0ec4edd31182a527d02f47fab50d60ad845d/gcc%2Free.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Free.c?ref=268a0ec4edd31182a527d02f47fab50d60ad845d", "patch": "@@ -1025,11 +1025,11 @@ add_removable_extension (const_rtx expr, rtx_insn *insn,\n \t    return;\n \t  }\n \t/* For vector mode extensions, ensure that all uses of the\n-\t   XEXP (src, 0) register are the same extension (both code\n-\t   and to which mode), as unlike integral extensions lowpart\n-\t   subreg of the sign/zero extended register are not equal\n-\t   to the original register, so we have to change all uses or\n-\t   none.  */\n+\t   XEXP (src, 0) register are in insn or debug insns, as unlike\n+\t   integral extensions lowpart subreg of the sign/zero extended\n+\t   register are not equal to the original register, so we have\n+\t   to change all uses or none and the current code isn't able\n+\t   to change them all at once in one transaction.  */\n \telse if (VECTOR_MODE_P (GET_MODE (XEXP (src, 0))))\n \t  {\n \t    if (idx == 0)\n@@ -1046,15 +1046,7 @@ add_removable_extension (const_rtx expr, rtx_insn *insn,\n \t\t\tbreak;\n \t\t      }\n \t\t    rtx_insn *use_insn = DF_REF_INSN (ref_link->ref);\n-\t\t    const_rtx use_set;\n-\t\t    if (use_insn == insn || DEBUG_INSN_P (use_insn))\n-\t\t      continue;\n-\t\t    if (!(use_set = single_set (use_insn))\n-\t\t\t|| !REG_P (SET_DEST (use_set))\n-\t\t\t|| GET_MODE (SET_DEST (use_set)) != GET_MODE (dest)\n-\t\t\t|| GET_CODE (SET_SRC (use_set)) != code\n-\t\t\t|| !rtx_equal_p (XEXP (SET_SRC (use_set), 0),\n-\t\t\t\t\t XEXP (src, 0)))\n+\t\t    if (use_insn != insn && !DEBUG_INSN_P (use_insn))\n \t\t      {\n \t\t\tidx = -1U;\n \t\t\tbreak;"}, {"sha": "ab6935c72fb1b183c978c1204f7d311c89598bf2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/268a0ec4edd31182a527d02f47fab50d60ad845d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/268a0ec4edd31182a527d02f47fab50d60ad845d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=268a0ec4edd31182a527d02f47fab50d60ad845d", "patch": "@@ -1,3 +1,9 @@\n+2016-04-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/70542\n+\t* gcc.dg/torture/pr70542.c: New test.\n+\t* gcc.target/i386/avx2-pr70542.c: New test.\n+\n 2016-04-05  Zdenek Sojka  <zsojka@seznam.cz>\n \n \tPR tree-optimization/70509"}, {"sha": "ed7ab9dae73b46d53dfbe09b64e34590e6c2f12c", "filename": "gcc/testsuite/gcc.dg/torture/pr70542.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/268a0ec4edd31182a527d02f47fab50d60ad845d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70542.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/268a0ec4edd31182a527d02f47fab50d60ad845d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70542.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70542.c?ref=268a0ec4edd31182a527d02f47fab50d60ad845d", "patch": "@@ -0,0 +1,31 @@\n+/* PR rtl-optimization/70542 */\n+/* { dg-do run } */\n+\n+int a[113], d[113];\n+short b[113], c[113], e[113];\n+\n+int\n+main ()\n+{\n+  int i;\n+  long j;\n+  for (i = 0; i < 113; ++i)\n+    {\n+      a[i] = -636544305;\n+      b[i] = -31804;\n+    }\n+  for (j = 1; j <= 112; ++j)\n+    {\n+      c[j] = b[j] >> ((a[j] & 1587842570) - 1510214139);\n+      if (a[j])\n+\td[j] = j;\n+      e[j] = 7 << ((2312631697 - b[j]) - 2312663500);\n+    }\n+  asm volatile (\"\" : : : \"memory\");\n+  if (c[0] || d[0] || e[0])\n+    __builtin_abort ();\n+  for (i = 1; i <= 112; ++i)\n+    if (c[i] != -1 || d[i] != i || e[i] != 14)\n+      __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "2a95c5a027d383d6517e5d8d30a41a67f82969e0", "filename": "gcc/testsuite/gcc.target/i386/avx2-pr70542.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/268a0ec4edd31182a527d02f47fab50d60ad845d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-pr70542.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/268a0ec4edd31182a527d02f47fab50d60ad845d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-pr70542.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-pr70542.c?ref=268a0ec4edd31182a527d02f47fab50d60ad845d", "patch": "@@ -0,0 +1,16 @@\n+/* PR tree-optimization/70542 */\n+/* { dg-do run } */\n+/* { dg-options \"-O3 -mavx2\" } */\n+/* { dg-require-effective-target avx2 } */\n+\n+#include \"avx2-check.h\"\n+\n+#define main() do_main ()\n+\n+#include \"../../gcc.dg/torture/pr70542.c\"\n+\n+static void\n+avx2_test (void)\n+{\n+  do_main ();\n+}"}]}