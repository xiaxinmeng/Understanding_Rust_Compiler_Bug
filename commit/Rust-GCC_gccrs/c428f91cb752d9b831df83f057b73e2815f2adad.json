{"sha": "c428f91cb752d9b831df83f057b73e2815f2adad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQyOGY5MWNiNzUyZDliODMxZGY4M2YwNTdiNzNlMjgxNWYyYWRhZA==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2016-01-28T11:52:08Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2016-01-28T11:52:08Z"}, "message": "Add support for vector permute cost since various permutes can expand into a complex sequence of instructions.\n\nAdd support for vector permute cost since various permutes can expand\ninto a complex sequence of instructions.  This fixes major performance\nregressions due to recent changes in SLP vectorizer (which now vectorizes\nmore aggressively and emits many complex permutes).  Set the cost to > 1\nfor all microarchitectures so that the number of permutes is usually zero\nand regressions disappear.\n\n2016-01-28  Wilco Dijkstra  <wdijkstr@arm.com>\n\n\t* config/aarch64/aarch64.c (generic_vector_cost):\n\tSet vec_permute_cost.\n\t(cortexa57_vector_cost): Likewise.\n\t(exynosm1_vector_cost): Likewise.\n\t(xgene1_vector_cost): Likewise.\n\t(aarch64_builtin_vectorization_cost): Use vec_permute_cost.\n\t* config/aarch64/aarch64-protos.h (cpu_vector_cost):\n\tAdd vec_permute_cost entry.\n\nFrom-SVN: r232922", "tree": {"sha": "01eefad07cd25439ef89e429e6aa15805e974d2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01eefad07cd25439ef89e429e6aa15805e974d2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c428f91cb752d9b831df83f057b73e2815f2adad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c428f91cb752d9b831df83f057b73e2815f2adad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c428f91cb752d9b831df83f057b73e2815f2adad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c428f91cb752d9b831df83f057b73e2815f2adad/comments", "author": null, "committer": null, "parents": [{"sha": "e2b691c4204110d08206dcc304c9fba56e88b89b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2b691c4204110d08206dcc304c9fba56e88b89b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2b691c4204110d08206dcc304c9fba56e88b89b"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "1967e92279834cf66a33a14632724a527e8d6f31", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c428f91cb752d9b831df83f057b73e2815f2adad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c428f91cb752d9b831df83f057b73e2815f2adad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c428f91cb752d9b831df83f057b73e2815f2adad", "patch": "@@ -1,3 +1,14 @@\n+2016-01-28  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\t* config/aarch64/aarch64.c (generic_vector_cost):\n+\tSet vec_permute_cost.\n+\t(cortexa57_vector_cost): Likewise.\n+\t(exynosm1_vector_cost): Likewise.\n+\t(xgene1_vector_cost): Likewise.\n+\t(aarch64_builtin_vectorization_cost): Use vec_permute_cost.\n+\t* config/aarch64/aarch64-protos.h (cpu_vector_cost):\n+\tAdd vec_permute_cost entry.\n+\n 2016-01-28  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* config/aarch64/aarch64.md (ccmp<mode>): Disassemble"}, {"sha": "bd900c6269f992d810c73e63d336964242b917ff", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c428f91cb752d9b831df83f057b73e2815f2adad/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c428f91cb752d9b831df83f057b73e2815f2adad/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=c428f91cb752d9b831df83f057b73e2815f2adad", "patch": "@@ -156,9 +156,10 @@ struct cpu_vector_cost\n   const int scalar_load_cost;\t\t /* Cost of scalar load.  */\n   const int scalar_store_cost;\t\t /* Cost of scalar store.  */\n   const int vec_stmt_cost;\t\t /* Cost of any vector operation,\n-\t\t\t\t\t    excluding load, store,\n+\t\t\t\t\t    excluding load, store, permute,\n \t\t\t\t\t    vector-to-scalar and\n \t\t\t\t\t    scalar-to-vector operation.  */\n+  const int vec_permute_cost;\t\t /* Cost of permute operation.  */\n   const int vec_to_scalar_cost;\t\t /* Cost of vec-to-scalar operation.  */\n   const int scalar_to_vec_cost;\t\t /* Cost of scalar-to-vector\n \t\t\t\t\t    operation.  */"}, {"sha": "5b3771eca6744c3dce7549468817d971e84091c4", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c428f91cb752d9b831df83f057b73e2815f2adad/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c428f91cb752d9b831df83f057b73e2815f2adad/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=c428f91cb752d9b831df83f057b73e2815f2adad", "patch": "@@ -315,6 +315,7 @@ static const struct cpu_vector_cost generic_vector_cost =\n   1, /* scalar_load_cost  */\n   1, /* scalar_store_cost  */\n   1, /* vec_stmt_cost  */\n+  2, /* vec_permute_cost  */\n   1, /* vec_to_scalar_cost  */\n   1, /* scalar_to_vec_cost  */\n   1, /* vec_align_load_cost  */\n@@ -332,6 +333,7 @@ static const struct cpu_vector_cost cortexa57_vector_cost =\n   4, /* scalar_load_cost  */\n   1, /* scalar_store_cost  */\n   3, /* vec_stmt_cost  */\n+  3, /* vec_permute_cost  */\n   8, /* vec_to_scalar_cost  */\n   8, /* scalar_to_vec_cost  */\n   5, /* vec_align_load_cost  */\n@@ -348,6 +350,7 @@ static const struct cpu_vector_cost exynosm1_vector_cost =\n   5, /* scalar_load_cost  */\n   1, /* scalar_store_cost  */\n   3, /* vec_stmt_cost  */\n+  3, /* vec_permute_cost  */\n   3, /* vec_to_scalar_cost  */\n   3, /* scalar_to_vec_cost  */\n   5, /* vec_align_load_cost  */\n@@ -365,6 +368,7 @@ static const struct cpu_vector_cost xgene1_vector_cost =\n   5, /* scalar_load_cost  */\n   1, /* scalar_store_cost  */\n   2, /* vec_stmt_cost  */\n+  2, /* vec_permute_cost  */\n   4, /* vec_to_scalar_cost  */\n   4, /* scalar_to_vec_cost  */\n   10, /* vec_align_load_cost  */\n@@ -7574,6 +7578,8 @@ aarch64_builtin_vectorization_cost (enum vect_cost_for_stmt type_of_cost,\n \treturn aarch64_tune_params.vec_costs->cond_not_taken_branch_cost;\n \n       case vec_perm:\n+\treturn aarch64_tune_params.vec_costs->vec_permute_cost;\n+\n       case vec_promote_demote:\n \treturn aarch64_tune_params.vec_costs->vec_stmt_cost;\n "}]}