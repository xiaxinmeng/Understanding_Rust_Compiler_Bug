{"sha": "f8cb36a94c67ec4723475e68df75f9571b4ed198", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhjYjM2YTk0YzY3ZWM0NzIzNDc1ZTY4ZGY3NWY5NTcxYjRlZDE5OA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-12-11T09:18:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-12-11T09:18:33Z"}, "message": "re PR tree-optimization/59386 (ICE on valid code at -O2 and -O3 on x86_64-linux-gnu in 64-bit mode)\n\n\tPR tree-optimization/59386\n\t* tree-inline.c (remap_gimple_stmt): If not id->do_not_unshare,\n\tunshare_expr (id->retval) before passing it to gimple_build_assign.\n\n\t* gcc.c-torture/compile/pr59386.c: New test.\n\nFrom-SVN: r205883", "tree": {"sha": "360af5e11bcd5b815e520289e341d8e82c81385a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/360af5e11bcd5b815e520289e341d8e82c81385a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8cb36a94c67ec4723475e68df75f9571b4ed198", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8cb36a94c67ec4723475e68df75f9571b4ed198", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8cb36a94c67ec4723475e68df75f9571b4ed198", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8cb36a94c67ec4723475e68df75f9571b4ed198/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba8267926cfcaddc979ba021882ba2ff2f50003d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba8267926cfcaddc979ba021882ba2ff2f50003d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba8267926cfcaddc979ba021882ba2ff2f50003d"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "22caa76f771d8e2ebb7ea84404a0766da71c6f52", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb36a94c67ec4723475e68df75f9571b4ed198/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb36a94c67ec4723475e68df75f9571b4ed198/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8cb36a94c67ec4723475e68df75f9571b4ed198", "patch": "@@ -1,3 +1,9 @@\n+2013-12-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/59386\n+\t* tree-inline.c (remap_gimple_stmt): If not id->do_not_unshare,\n+\tunshare_expr (id->retval) before passing it to gimple_build_assign.\n+\n 2013-12-11  Bin Cheng  <bin.cheng@arm.com>\n \n \tReverted:"}, {"sha": "ebd99960b42ef2be6796ad390237bd30c54b0cb0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb36a94c67ec4723475e68df75f9571b4ed198/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb36a94c67ec4723475e68df75f9571b4ed198/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f8cb36a94c67ec4723475e68df75f9571b4ed198", "patch": "@@ -1,3 +1,8 @@\n+2013-12-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/59386\n+\t* gcc.c-torture/compile/pr59386.c: New test.\n+\n 2013-12-11  Bin Cheng  <bin.cheng@arm.com>\n \n \tReverted:"}, {"sha": "b014f707ce73e1521e781461cae000f953571ae2", "filename": "gcc/testsuite/gcc.c-torture/compile/pr59386.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb36a94c67ec4723475e68df75f9571b4ed198/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr59386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb36a94c67ec4723475e68df75f9571b4ed198/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr59386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr59386.c?ref=f8cb36a94c67ec4723475e68df75f9571b4ed198", "patch": "@@ -0,0 +1,24 @@\n+/* PR tree-optimization/59386 */\n+\n+struct S { int s; };\n+struct T { int t; struct S u; } c;\n+int b;\n+\n+struct S\n+foo ()\n+{\n+  struct T d;\n+  if (b)\n+    while (c.t)\n+      ;\n+  else\n+    return d.u;\n+}\n+\n+struct S\n+bar ()\n+{\n+  struct T a;\n+  a.u = foo ();\n+  return a.u;\n+}"}, {"sha": "96a480593d46cbf203213f5a253eb9beb6447233", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8cb36a94c67ec4723475e68df75f9571b4ed198/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8cb36a94c67ec4723475e68df75f9571b4ed198/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=f8cb36a94c67ec4723475e68df75f9571b4ed198", "patch": "@@ -1273,7 +1273,9 @@ remap_gimple_stmt (gimple stmt, copy_body_data *id)\n \t\t  || ! SSA_NAME_VAR (retval)\n \t\t  || TREE_CODE (SSA_NAME_VAR (retval)) != RESULT_DECL)))\n         {\n-\t  copy = gimple_build_assign (id->retvar, retval);\n+\t  copy = gimple_build_assign (id->do_not_unshare\n+\t\t\t\t      ? id->retvar : unshare_expr (id->retvar),\n+\t\t\t\t      retval);\n \t  /* id->retvar is already substituted.  Skip it on later remapping.  */\n \t  skip_first = true;\n \t}"}]}