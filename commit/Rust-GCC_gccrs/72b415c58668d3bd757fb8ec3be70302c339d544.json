{"sha": "72b415c58668d3bd757fb8ec3be70302c339d544", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJiNDE1YzU4NjY4ZDNiZDc1N2ZiOGVjM2JlNzAzMDJjMzM5ZDU0NA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-11-30T19:19:06Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-11-30T19:19:06Z"}, "message": "re PR target/38287 (segfault at -O2 -fPIC -mcpu=v8)\n\n\tPR target/38287\n\t* config/sparc/sparc.md (divsi3 expander): Remove constraints.\n\t(divsi3_sp32): Add new alternative with 'K' for operand #2.\n\t(cmp_sdiv_cc_set): Factor common string.\n\t(udivsi3_sp32): Add new alternative with 'K' for operand #2.\n\tAdd TARGET_V9 case.\n\t(cmp_udiv_cc_set): Factor common string.\n\nFrom-SVN: r142295", "tree": {"sha": "33022bd1a0dd08243666dacc662f7541d956d15e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33022bd1a0dd08243666dacc662f7541d956d15e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72b415c58668d3bd757fb8ec3be70302c339d544", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b415c58668d3bd757fb8ec3be70302c339d544", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72b415c58668d3bd757fb8ec3be70302c339d544", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b415c58668d3bd757fb8ec3be70302c339d544/comments", "author": null, "committer": null, "parents": [{"sha": "07c9463afe8ebcb06ac6071305ff893520e30239", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07c9463afe8ebcb06ac6071305ff893520e30239", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07c9463afe8ebcb06ac6071305ff893520e30239"}], "stats": {"total": 175, "additions": 132, "deletions": 43}, "files": [{"sha": "5602b5a74d9b0c4201c670d3c19c156c06a4b426", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b415c58668d3bd757fb8ec3be70302c339d544/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b415c58668d3bd757fb8ec3be70302c339d544/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=72b415c58668d3bd757fb8ec3be70302c339d544", "patch": "@@ -1,3 +1,13 @@\n+2008-11-30  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR target/38287\n+\t* config/sparc/sparc.md (divsi3 expander): Remove constraints.\n+\t(divsi3_sp32): Add new alternative with 'K' for operand #2.\n+\t(cmp_sdiv_cc_set): Factor common string.\n+\t(udivsi3_sp32): Add new alternative with 'K' for operand #2.\n+\tAdd TARGET_V9 case.\n+\t(cmp_udiv_cc_set): Factor common string.\n+\n 2008-11-30  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR middle-end/38283"}, {"sha": "0a82e89adf7ba80815a0004d782b89d44a16fdaf", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 79, "deletions": 43, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b415c58668d3bd757fb8ec3be70302c339d544/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b415c58668d3bd757fb8ec3be70302c339d544/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=72b415c58668d3bd757fb8ec3be70302c339d544", "patch": "@@ -4895,14 +4895,11 @@\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"length\" \"2\")])\n \n-;; The V8 architecture specifies that there must be 3 instructions between\n-;; a Y register write and a use of it for correct results.\n-\n (define_expand \"divsi3\"\n-  [(parallel [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n-\t\t   (div:SI (match_operand:SI 1 \"register_operand\" \"r,r\")\n-\t\t\t   (match_operand:SI 2 \"input_operand\" \"rI,m\")))\n-\t      (clobber (match_scratch:SI 3 \"=&r,&r\"))])]\n+  [(parallel [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t\t   (div:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t\t   (match_operand:SI 2 \"input_operand\" \"\")))\n+\t      (clobber (match_scratch:SI 3 \"\"))])]\n   \"TARGET_V8 || TARGET_DEPRECATED_V8_INSNS\"\n {\n   if (TARGET_ARCH64)\n@@ -4915,24 +4912,40 @@\n     }\n })\n \n+;; The V8 architecture specifies that there must be at least 3 instructions\n+;; between a write to the Y register and a use of it for correct results.\n+;; We try to fill one of them with a simple constant or a memory load.\n+\n (define_insn \"divsi3_sp32\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n-\t(div:SI (match_operand:SI 1 \"register_operand\" \"r,r\")\n-\t\t(match_operand:SI 2 \"input_operand\" \"rI,m\")))\n-   (clobber (match_scratch:SI 3 \"=&r,&r\"))]\n-  \"(TARGET_V8 || TARGET_DEPRECATED_V8_INSNS)\n-   && TARGET_ARCH32\"\n-{\n-  if (which_alternative == 0)\n-    if (TARGET_V9)\n-      return \"sra\\t%1, 31, %3\\n\\twr\\t%3, 0, %%y\\n\\tsdiv\\t%1, %2, %0\";\n-    else\n-      return \"sra\\t%1, 31, %3\\n\\twr\\t%3, 0, %%y\\n\\tnop\\n\\tnop\\n\\tnop\\n\\tsdiv\\t%1, %2, %0\";\n-  else\n-    if (TARGET_V9)\n-      return \"sra\\t%1, 31, %3\\n\\twr\\t%3, 0, %%y\\n\\tld\\t%2, %3\\n\\tsdiv\\t%1, %3, %0\";\n-    else\n-      return \"sra\\t%1, 31, %3\\n\\twr\\t%3, 0, %%y\\n\\tld\\t%2, %3\\n\\tnop\\n\\tnop\\n\\tsdiv\\t%1, %3, %0\";\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r\")\n+\t(div:SI (match_operand:SI 1 \"register_operand\" \"r,r,r\")\n+\t\t(match_operand:SI 2 \"input_operand\" \"rI,K,m\")))\n+   (clobber (match_scratch:SI 3 \"=&r,&r,&r\"))]\n+  \"(TARGET_V8 || TARGET_DEPRECATED_V8_INSNS) && TARGET_ARCH32\"\n+{\n+  output_asm_insn (\"sra\\t%1, 31, %3\", operands);\n+  output_asm_insn (\"wr\\t%3, 0, %%y\", operands);\n+\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      if (TARGET_V9)\n+\treturn \"sdiv\\t%1, %2, %0\";\n+      else\n+\treturn \"nop\\n\\tnop\\n\\tnop\\n\\tsdiv\\t%1, %2, %0\";\n+    case 1:\n+      if (TARGET_V9)\n+\treturn \"sethi\\t%%hi(%a2), %3\\n\\tsdiv\\t%1, %3, %0\";\n+      else\n+\treturn \"sethi\\t%%hi(%a2), %3\\n\\tnop\\n\\tnop\\n\\tsdiv\\t%1, %3, %0\";\n+    case 2:\n+      if (TARGET_V9)\n+\treturn \"ld\\t%2, %3\\n\\tsdiv\\t%1, %3, %0\";\n+      else\n+\treturn \"ld\\t%2, %3\\n\\tnop\\n\\tnop\\n\\tsdiv\\t%1, %3, %0\";\n+    default:\n+      gcc_unreachable ();\n+    }\n }\n   [(set_attr \"type\" \"multi\")\n    (set (attr \"length\")\n@@ -4967,10 +4980,13 @@\n    (clobber (match_scratch:SI 3 \"=&r\"))]\n   \"TARGET_V8 || TARGET_DEPRECATED_V8_INSNS\"\n {\n+  output_asm_insn (\"sra\\t%1, 31, %3\", operands);\n+  output_asm_insn (\"wr\\t%3, 0, %%y\", operands);\n+\n   if (TARGET_V9)\n-    return \"sra\\t%1, 31, %3\\n\\twr\\t%3, 0, %%y\\n\\tsdivcc\\t%1, %2, %0\";\n+    return \"sdivcc\\t%1, %2, %0\";\n   else\n-    return \"sra\\t%1, 31, %3\\n\\twr\\t%3, 0, %%y\\n\\tnop\\n\\tnop\\n\\tnop\\n\\tsdivcc\\t%1, %2, %0\";\n+    return \"nop\\n\\tnop\\n\\tnop\\n\\tsdivcc\\t%1, %2, %0\";\n }\n   [(set_attr \"type\" \"multi\")\n    (set (attr \"length\")\n@@ -4985,29 +5001,48 @@\n   \"TARGET_V8 || TARGET_DEPRECATED_V8_INSNS\"\n   \"\")\n \n-;; The V8 architecture specifies that there must be 3 instructions between\n-;; a Y register write and a use of it for correct results.\n+;; The V8 architecture specifies that there must be at least 3 instructions\n+;; between a write to the Y register and a use of it for correct results.\n+;; We try to fill one of them with a simple constant or a memory load.\n \n (define_insn \"udivsi3_sp32\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r,&r,&r\")\n-\t(udiv:SI (match_operand:SI 1 \"nonimmediate_operand\" \"r,r,m\")\n-\t\t (match_operand:SI 2 \"input_operand\" \"rI,m,r\")))]\n-  \"(TARGET_V8 || TARGET_DEPRECATED_V8_INSNS)\n-   && TARGET_ARCH32\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r,&r,&r,&r\")\n+\t(udiv:SI (match_operand:SI 1 \"nonimmediate_operand\" \"r,r,r,m\")\n+\t\t (match_operand:SI 2 \"input_operand\" \"rI,K,m,r\")))]\n+  \"(TARGET_V8 || TARGET_DEPRECATED_V8_INSNS) && TARGET_ARCH32\"\n {\n-  output_asm_insn (\"wr\\t%%g0, %%g0, %%y\", operands);\n+  output_asm_insn (\"wr\\t%%g0, 0, %%y\", operands);\n+\n   switch (which_alternative)\n     {\n-    default:\n-      return \"nop\\n\\tnop\\n\\tnop\\n\\tudiv\\t%1, %2, %0\";\n+    case 0:\n+      if (TARGET_V9)\n+\treturn \"udiv\\t%1, %2, %0\";\n+      else\n+\treturn \"nop\\n\\tnop\\n\\tnop\\n\\tudiv\\t%1, %2, %0\";\n     case 1:\n-      return \"ld\\t%2, %0\\n\\tnop\\n\\tnop\\n\\tudiv\\t%1, %0, %0\";\n+      if (TARGET_V9)\n+\treturn \"sethi\\t%%hi(%a2), %0\\n\\tudiv\\t%1, %0, %0\";\n+      else\n+\treturn \"sethi\\t%%hi(%a2), %0\\n\\tnop\\n\\tnop\\n\\tudiv\\t%1, %0, %0\";\n     case 2:\n-      return \"ld\\t%1, %0\\n\\tnop\\n\\tnop\\n\\tudiv\\t%0, %2, %0\";\n+      if (TARGET_V9)\n+\treturn \"ld\\t%2, %0\\n\\tudiv\\t%1, %0, %0\";\n+      else\n+\treturn \"ld\\t%2, %0\\n\\tnop\\n\\tnop\\n\\tudiv\\t%1, %0, %0\";\n+    case 3:\n+      if (TARGET_V9)\n+\treturn \"ld\\t%1, %0\\n\\tudiv\\t%0, %2, %0\";\n+      else\n+\treturn \"ld\\t%1, %0\\n\\tnop\\n\\tnop\\n\\tudiv\\t%0, %2, %0\";\n+    default:\n+      gcc_unreachable ();\n     }\n }\n   [(set_attr \"type\" \"multi\")\n-   (set_attr \"length\" \"5\")])\n+   (set (attr \"length\")\n+\t(if_then_else (eq_attr \"isa\" \"v9\")\n+\t\t      (const_int 3) (const_int 5)))])\n \n (define_insn \"udivsi3_sp64\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n@@ -5033,13 +5068,14 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(udiv:SI (match_dup 1) (match_dup 2)))]\n-  \"TARGET_V8\n-   || TARGET_DEPRECATED_V8_INSNS\"\n+  \"TARGET_V8 || TARGET_DEPRECATED_V8_INSNS\"\n {\n+  output_asm_insn (\"wr\\t%%g0, 0, %%y\", operands);\n+\n   if (TARGET_V9)\n-    return \"wr\\t%%g0, %%g0, %%y\\n\\tudivcc\\t%1, %2, %0\";\n+    return \"udivcc\\t%1, %2, %0\";\n   else\n-    return \"wr\\t%%g0, %%g0, %%y\\n\\tnop\\n\\tnop\\n\\tnop\\n\\tudivcc\\t%1, %2, %0\";\n+    return \"nop\\n\\tnop\\n\\tnop\\n\\tudivcc\\t%1, %2, %0\";\n }\n   [(set_attr \"type\" \"multi\")\n    (set (attr \"length\")"}, {"sha": "cd0d6c408d83c3e592c82f8d45fe4e97ac76a64a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b415c58668d3bd757fb8ec3be70302c339d544/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b415c58668d3bd757fb8ec3be70302c339d544/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=72b415c58668d3bd757fb8ec3be70302c339d544", "patch": "@@ -1,3 +1,7 @@\n+2008-11-30  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* g++.dg/opt/reload3.C: New test.\n+\n 2008-11-30  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/35824"}, {"sha": "12f3e66f369ea7680aa4bcc749a5e1ee7386b7df", "filename": "gcc/testsuite/g++.dg/opt/reload3.C", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b415c58668d3bd757fb8ec3be70302c339d544/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Freload3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b415c58668d3bd757fb8ec3be70302c339d544/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Freload3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Freload3.C?ref=72b415c58668d3bd757fb8ec3be70302c339d544", "patch": "@@ -0,0 +1,39 @@\n+// PR target/38287\n+// { dg-do run }\n+// { dg-options \"-O2 -mcpu=v8 -fPIC\" { target { { sparc*-*-* } && { ilp32 && fpic } } } }\n+\n+#include <cstdlib>\n+\n+class QTime\n+{\n+public:\n+    explicit QTime(int ms = 0) : ds(ms) {}\n+    static QTime currentTime() { return QTime(); }\n+    QTime addMSecs(int ms) const;\n+    int msecs() const { return ds; }\n+private:\n+    unsigned ds;\n+};\n+\n+static const unsigned MSECS_PER_DAY = 86400000;\n+\n+QTime QTime::addMSecs(int ms) const\n+{\n+    QTime t;\n+    if ( ms < 0 ) {\n+        // % not well-defined for -ve, but / is.\n+        int negdays = (MSECS_PER_DAY-ms) / MSECS_PER_DAY;\n+        t.ds = ((int)ds + ms + negdays*MSECS_PER_DAY)\n+                % MSECS_PER_DAY;\n+    } else {\n+        t.ds = ((int)ds + ms) % MSECS_PER_DAY;\n+    }\n+    return t;\n+}\n+\n+int main()\n+{\n+  if (QTime(1).addMSecs(1).msecs() != 2)\n+    abort ();\n+  return 0;\n+}"}]}