{"sha": "ec13a3ef9b7ebf476a9f27276afba8b27dfbcf2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMxM2EzZWY5YjdlYmY0NzZhOWYyNzI3NmFmYmE4YjI3ZGZiY2YyYw==", "commit": {"author": {"name": "David Billinghurst", "email": "David.Billinghurst@riotinto.com", "date": "2004-07-02T12:39:56Z"}, "committer": {"name": "David Billinghurst", "email": "billingd@gcc.gnu.org", "date": "2004-07-02T12:39:56Z"}, "message": "re PR fortran/16290 (Test intrinsic_set_exponent.f90 fails on irix6.5)\n\n2004-07-02  David Billinghurst  (David.Billinghurst@riotinto.com)\n\n\tPR fortran/16290\n\t* gfortran.fortran-torture/execute/intrinsic_set_exponent.f90\n\tAllow for cases without denormalized floating point numbers.\n\nFrom-SVN: r84018", "tree": {"sha": "225f75e654e2f8909de2052043ddcf85c773a0ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/225f75e654e2f8909de2052043ddcf85c773a0ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec13a3ef9b7ebf476a9f27276afba8b27dfbcf2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec13a3ef9b7ebf476a9f27276afba8b27dfbcf2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec13a3ef9b7ebf476a9f27276afba8b27dfbcf2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec13a3ef9b7ebf476a9f27276afba8b27dfbcf2c/comments", "author": null, "committer": null, "parents": [{"sha": "23f6b2f91e6a3a8570f2b4214e3faee872ae1d82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23f6b2f91e6a3a8570f2b4214e3faee872ae1d82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23f6b2f91e6a3a8570f2b4214e3faee872ae1d82"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "9aeee5ce7eb19a7a5e7049b25983d8c069bcfefd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec13a3ef9b7ebf476a9f27276afba8b27dfbcf2c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec13a3ef9b7ebf476a9f27276afba8b27dfbcf2c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ec13a3ef9b7ebf476a9f27276afba8b27dfbcf2c", "patch": "@@ -1,3 +1,9 @@\n+2004-07-02  David Billinghurst  (David.Billinghurst@riotinto.com)\n+\n+\tPR fortran/16290\n+\t* gfortran.fortran-torture/execute/intrinsic_set_exponent.f90\n+\tAllow for cases without denormalized floating point numbers.\n+\n 2004-07-01  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \tPR c/1027"}, {"sha": "d29cf533c24d2044581dfd080c7b10c0a401d95b", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/intrinsic_set_exponent.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec13a3ef9b7ebf476a9f27276afba8b27dfbcf2c/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_set_exponent.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec13a3ef9b7ebf476a9f27276afba8b27dfbcf2c/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_set_exponent.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_set_exponent.f90?ref=ec13a3ef9b7ebf476a9f27276afba8b27dfbcf2c", "patch": "@@ -12,7 +12,7 @@ subroutine test_real4()\n   n = -148\n   x = 1024.0\n   y = set_exponent (x, n)\n-  if (exponent (y) .ne. n) call abort()\n+  if ((y .ne. 0.0) .and. (exponent (y) .ne. n)) call abort()\n \n   n = 8\n   x = 1024.0\n@@ -27,7 +27,7 @@ subroutine test_real4()\n   n = -148\n   x = -1024.0\n   y = set_exponent (x, n)\n-  if (exponent (y) .ne. n) call abort()\n+  if  ((y .ne. 0.0) .and. (exponent (y) .ne. n)) call abort()\n \n   n = 8\n   x = -1024.0\n@@ -51,7 +51,7 @@ subroutine test_real8()\n   n = -1073\n   x = 1024.0_8\n   y = set_exponent (x, n)\n-  if (exponent (y) .ne. n) call abort()\n+  if  ((y .ne. 0.0_8) .and. (exponent (y) .ne. n)) call abort()\n \n   n = 8\n   x = 1024.0_8\n@@ -73,7 +73,7 @@ subroutine test_real8()\n   x = -1024.0\n   y = set_exponent (x, n)\n   low = z'00000001'\n-  if (exponent (y) .ne. n) call abort()\n+  if ((y .ne. 0.0) .and. (exponent (y) .ne. n)) call abort()\n \n   n = 8\n   x = -1024.0"}]}