{"sha": "0bf09c37211e410fbe66de3d52b40d1981a5a0d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJmMDljMzcyMTFlNDEwZmJlNjZkZTNkNTJiNDBkMTk4MWE1YTBkNg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2019-03-18T21:22:30Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2019-03-18T21:22:30Z"}, "message": "Add a test for PR c++/89630\n\n\tPR c++/89630\n\t* g++.target/i386/pr89630.C: New test.\n\nFrom-SVN: r269781", "tree": {"sha": "22687046f160c1192dbc4fe42fd6205e6fbf0e78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22687046f160c1192dbc4fe42fd6205e6fbf0e78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bf09c37211e410fbe66de3d52b40d1981a5a0d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bf09c37211e410fbe66de3d52b40d1981a5a0d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bf09c37211e410fbe66de3d52b40d1981a5a0d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bf09c37211e410fbe66de3d52b40d1981a5a0d6/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a8b58d84bf4fd9c925a835ba39c1c552383bc61b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8b58d84bf4fd9c925a835ba39c1c552383bc61b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8b58d84bf4fd9c925a835ba39c1c552383bc61b"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "267b2cd4858ed61e43729a135cb4949bb1773377", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf09c37211e410fbe66de3d52b40d1981a5a0d6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf09c37211e410fbe66de3d52b40d1981a5a0d6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0bf09c37211e410fbe66de3d52b40d1981a5a0d6", "patch": "@@ -1,3 +1,8 @@\n+2019-03-19  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR c++/89630\n+\t* g++.target/i386/pr89630.C: New test.\n+\n 2019-03-18  Kito Cheng  <kito.cheng@gmail.com>\n \n \t* gcc.target/riscv/arch-1.c: Add quotes around march in dg-error."}, {"sha": "240aa742000639958de9c54e3d59a076c9d606e9", "filename": "gcc/testsuite/g++.target/i386/pr89630.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bf09c37211e410fbe66de3d52b40d1981a5a0d6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr89630.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bf09c37211e410fbe66de3d52b40d1981a5a0d6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr89630.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fi386%2Fpr89630.C?ref=0bf09c37211e410fbe66de3d52b40d1981a5a0d6", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do compile }\n+// { dg-options \"-std=c++14 -mrtm -march=skylake-avx512\" }\n+\n+template <int> class A;\n+template <typename> class B;\n+template <typename> struct C;\n+template <typename P_expr> class D {\n+  using B<typename P_expr::T_numtype>::rank_;\n+  void operator()(typename C<A<rank_>>::i);\n+};\n+\n+template <typename P_expr> class F {\n+  using B<typename P_expr::T_numtype>::rank_;\n+  void operator()(typename C<A<rank_>>::i);\n+};"}]}