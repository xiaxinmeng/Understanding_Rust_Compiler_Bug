{"sha": "727afe64d6c6ccc6c360da0707de4b2bd74a96d9", "node_id": "C_kwDOANBUbNoAKDcyN2FmZTY0ZDZjNmNjYzZjMzYwZGEwNzA3ZGU0YjJiZDc0YTk2ZDk", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-08-25T14:33:02Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-08-25T14:33:02Z"}, "message": "Desugar double borrows into two HIR:BorrowExpr's\n\nWe simply hit a gcc_unreachable() on double borrows but it seems reasonable\nto just desugar the AST into a borrow of a borrow to foo. Instead of a\nborrow expression with a flag to be respected.\n\nFixes #1506", "tree": {"sha": "ea563c5efee59807e61e7793372336b94d129579", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea563c5efee59807e61e7793372336b94d129579"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/727afe64d6c6ccc6c360da0707de4b2bd74a96d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/727afe64d6c6ccc6c360da0707de4b2bd74a96d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/727afe64d6c6ccc6c360da0707de4b2bd74a96d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/727afe64d6c6ccc6c360da0707de4b2bd74a96d9/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3cf195ab46d7effe806990aa6b7a409bf8e46df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3cf195ab46d7effe806990aa6b7a409bf8e46df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3cf195ab46d7effe806990aa6b7a409bf8e46df"}], "stats": {"total": 41, "additions": 28, "deletions": 13}, "files": [{"sha": "be045e930d15a4d5547322e41eb1910b35462600", "filename": "gcc/rust/hir/rust-ast-lower-expr.h", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/727afe64d6c6ccc6c360da0707de4b2bd74a96d9/gcc%2Frust%2Fhir%2Frust-ast-lower-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/727afe64d6c6ccc6c360da0707de4b2bd74a96d9/gcc%2Frust%2Fhir%2Frust-ast-lower-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-expr.h?ref=727afe64d6c6ccc6c360da0707de4b2bd74a96d9", "patch": "@@ -643,10 +643,29 @@ class ASTLoweringExpr : public ASTLoweringBase\n \t\t\t\t   mappings->get_next_hir_id (crate_num),\n \t\t\t\t   UNKNOWN_LOCAL_DEFID);\n \n-    translated = new HIR::BorrowExpr (\n-      mapping, std::unique_ptr<HIR::Expr> (borrow_lvalue),\n-      expr.get_is_mut () ? Mutability::Mut : Mutability::Imm,\n-      expr.get_is_double_borrow (), expr.get_outer_attrs (), expr.get_locus ());\n+    HIR::BorrowExpr *borrow_expr\n+      = new HIR::BorrowExpr (mapping,\n+\t\t\t     std::unique_ptr<HIR::Expr> (borrow_lvalue),\n+\t\t\t     expr.get_is_mut () ? Mutability::Mut\n+\t\t\t\t\t\t: Mutability::Imm,\n+\t\t\t     expr.get_outer_attrs (), expr.get_locus ());\n+\n+    if (expr.get_is_double_borrow ())\n+      {\n+\tNodeId artifical_bouble_borrow_id = mappings->get_next_node_id ();\n+\tAnalysis::NodeMapping mapping (crate_num, artifical_bouble_borrow_id,\n+\t\t\t\t       mappings->get_next_hir_id (crate_num),\n+\t\t\t\t       UNKNOWN_LOCAL_DEFID);\n+\n+\tborrow_expr\n+\t  = new HIR::BorrowExpr (mapping,\n+\t\t\t\t std::unique_ptr<HIR::Expr> (borrow_expr),\n+\t\t\t\t expr.get_is_mut () ? Mutability::Mut\n+\t\t\t\t\t\t    : Mutability::Imm,\n+\t\t\t\t expr.get_outer_attrs (), expr.get_locus ());\n+      }\n+\n+    translated = borrow_expr;\n   }\n \n   void visit (AST::DereferenceExpr &expr) override"}, {"sha": "e173d3766743783aa484e6ea468758b65ed504d3", "filename": "gcc/rust/hir/tree/rust-hir-expr.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/727afe64d6c6ccc6c360da0707de4b2bd74a96d9/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/727afe64d6c6ccc6c360da0707de4b2bd74a96d9/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h?ref=727afe64d6c6ccc6c360da0707de4b2bd74a96d9", "patch": "@@ -192,18 +192,17 @@ class BorrowExpr : public OperatorExpr\n \n   BorrowExpr (Analysis::NodeMapping mappings,\n \t      std::unique_ptr<Expr> borrow_lvalue, Mutability mut,\n-\t      bool is_double_borrow, AST::AttrVec outer_attribs, Location locus)\n+\t      AST::AttrVec outer_attribs, Location locus)\n     : OperatorExpr (std::move (mappings), std::move (borrow_lvalue),\n \t\t    std::move (outer_attribs), locus),\n-      mut (mut), double_borrow (is_double_borrow)\n+      mut (mut)\n   {}\n \n   void accept_vis (HIRFullVisitor &vis) override;\n   void accept_vis (HIRExpressionVisitor &vis) override;\n \n   Mutability get_mut () const { return mut; }\n   bool is_mut () const { return mut == Mutability::Mut; }\n-  bool get_is_double_borrow () const { return double_borrow; }\n \n protected:\n   /* Use covariance to implement clone function as returning this object rather"}, {"sha": "9dc72a1472b8ac36a89166729b7eef93afd9a942", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/727afe64d6c6ccc6c360da0707de4b2bd74a96d9/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/727afe64d6c6ccc6c360da0707de4b2bd74a96d9/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.cc?ref=727afe64d6c6ccc6c360da0707de4b2bd74a96d9", "patch": "@@ -1209,12 +1209,6 @@ TypeCheckExpr::visit (HIR::BorrowExpr &expr)\n \t}\n     }\n \n-  if (expr.get_is_double_borrow ())\n-    {\n-      // FIXME double_reference\n-      gcc_unreachable ();\n-    }\n-\n   infered = new TyTy::ReferenceType (expr.get_mappings ().get_hirid (),\n \t\t\t\t     TyTy::TyVar (resolved_base->get_ref ()),\n \t\t\t\t     expr.get_mut ());"}, {"sha": "a38f23144ed8e5fe8042971f942a8fcef41f92f6", "filename": "gcc/testsuite/rust/compile/torture/issue-1506.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/727afe64d6c6ccc6c360da0707de4b2bd74a96d9/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fissue-1506.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/727afe64d6c6ccc6c360da0707de4b2bd74a96d9/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fissue-1506.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fissue-1506.rs?ref=727afe64d6c6ccc6c360da0707de4b2bd74a96d9", "patch": "@@ -0,0 +1,3 @@\n+pub fn main() {\n+    let _: &i32 = &&&&1;\n+}"}]}