{"sha": "392d2ff3bd6fc66a6683540fc33910ddef9bf6f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkyZDJmZjNiZDZmYzY2YTY2ODM1NDBmYzMzOTEwZGRlZjliZjZmMQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-05-28T11:45:48Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-05-28T11:45:48Z"}, "message": "rs6000: Improve p9-dimode* testcases\n\nThis removes the unnecessary restriction to 32-bit (all three ways).\nIt also scans for mtvsr*, not just mtvsrd.  Finally, it uses the \"wa\"\nconstraints instead of \"wi\" in the inline asm statements.\n\n\ngcc/testsuite/\n\t* gcc.target/powerpc/p9-dimode1.c: Don't restrict to -m64.  Check for\n\tall mtvsr*, not just mtvsrd.  Use \"wa\" instead of \"wi\" constraints.\n\t* gcc.target/powerpc/p9-dimode2.c: Ditto.\n\nFrom-SVN: r271696", "tree": {"sha": "ea94bab744a19dac442602f469d39048c3a87a9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea94bab744a19dac442602f469d39048c3a87a9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/392d2ff3bd6fc66a6683540fc33910ddef9bf6f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/392d2ff3bd6fc66a6683540fc33910ddef9bf6f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/392d2ff3bd6fc66a6683540fc33910ddef9bf6f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/392d2ff3bd6fc66a6683540fc33910ddef9bf6f1/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8d2a3107980a1db83ab0d4bdc74e8c00e558b57b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d2a3107980a1db83ab0d4bdc74e8c00e558b57b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d2a3107980a1db83ab0d4bdc74e8c00e558b57b"}], "stats": {"total": 34, "additions": 16, "deletions": 18}, "files": [{"sha": "f1acd6dbc7a5b84fd2c0d870a2bf2c59ceb4422e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/392d2ff3bd6fc66a6683540fc33910ddef9bf6f1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/392d2ff3bd6fc66a6683540fc33910ddef9bf6f1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=392d2ff3bd6fc66a6683540fc33910ddef9bf6f1", "patch": "@@ -1,3 +1,9 @@\n+2019-05-28  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* gcc.target/powerpc/p9-dimode1.c: Don't restrict to -m64.  Check for\n+\tall mtvsr*, not just mtvsrd.  Use \"wa\" instead of \"wi\" constraints.\n+\t* gcc.target/powerpc/p9-dimode2.c: Ditto.\n+\n 2019-05-28  Martin Liska  <mliska@suse.cz>\n \n \tPR ipa/90555"}, {"sha": "b2cd3d68221f9d998cc8c60dd2c939797d53d4df", "filename": "gcc/testsuite/gcc.target/powerpc/p9-dimode1.c", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/392d2ff3bd6fc66a6683540fc33910ddef9bf6f1/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-dimode1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/392d2ff3bd6fc66a6683540fc33910ddef9bf6f1/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-dimode1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-dimode1.c?ref=392d2ff3bd6fc66a6683540fc33910ddef9bf6f1", "patch": "@@ -1,21 +1,17 @@\n-/* { dg-do compile { target { powerpc64*-*-* && lp64 } } } */\n+/* { dg-do compile { target { powerpc*-*-* } } } */\n /* { dg-require-effective-target powerpc_p9vector_ok } */\n /* { dg-options \"-mdejagnu-cpu=power9 -O2\" } */\n \n /* Verify P9 changes to allow DImode into Altivec registers, and generate\n    constants using XXSPLTIB.  */\n \n-#ifndef _ARCH_PPC64\n-#error \"This code is 64-bit.\"\n-#endif\n-\n double\n p9_zero (void)\n {\n   long l = 0;\n   double ret;\n \n-  __asm__ (\"xxlor %x0,%x1,%x1\" : \"=&d\" (ret) : \"wi\" (l));\n+  __asm__ (\"xxlor %x0,%x1,%x1\" : \"=&d\" (ret) : \"wa\" (l));\n \n   return ret;\n }\n@@ -26,7 +22,7 @@ p9_plus_1 (void)\n   long l = 1;\n   double ret;\n \n-  __asm__ (\"xxlor %x0,%x1,%x1\" : \"=&d\" (ret) : \"wi\" (l));\n+  __asm__ (\"xxlor %x0,%x1,%x1\" : \"=&d\" (ret) : \"wa\" (l));\n \n   return ret;\n }\n@@ -37,13 +33,13 @@ p9_minus_1 (void)\n   long l = -1;\n   double ret;\n \n-  __asm__ (\"xxlor %x0,%x1,%x1\" : \"=&d\" (ret) : \"wi\" (l));\n+  __asm__ (\"xxlor %x0,%x1,%x1\" : \"=&d\" (ret) : \"wa\" (l));\n \n   return ret;\n }\n \n /* { dg-final { scan-assembler     {\\mxxspltib\\M} } } */\n-/* { dg-final { scan-assembler-not {\\mmtvsrd\\M}   } } */\n+/* { dg-final { scan-assembler-not {\\mmtvsr}      } } */\n /* { dg-final { scan-assembler-not {\\mlfd\\M}      } } */\n /* { dg-final { scan-assembler-not {\\mld\\M}       } } */\n /* { dg-final { scan-assembler-not {\\mlxsd\\M}     } } */"}, {"sha": "c2196a2b586bd27d83b0529609ee210d5fe6d3ac", "filename": "gcc/testsuite/gcc.target/powerpc/p9-dimode2.c", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/392d2ff3bd6fc66a6683540fc33910ddef9bf6f1/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-dimode2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/392d2ff3bd6fc66a6683540fc33910ddef9bf6f1/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-dimode2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-dimode2.c?ref=392d2ff3bd6fc66a6683540fc33910ddef9bf6f1", "patch": "@@ -1,26 +1,22 @@\n-/* { dg-do compile { target { powerpc64*-*-* && lp64 } } } */\n+/* { dg-do compile { target { powerpc*-*-* } } } */\n /* { dg-require-effective-target powerpc_p9vector_ok } */\n /* { dg-options \"-mdejagnu-cpu=power9 -O2\" } */\n \n-/* Verify that large integer constants are loaded via direct move instead of being\n-   loaded from memory.  */\n-\n-#ifndef _ARCH_PPC64\n-#error \"This code is 64-bit.\"\n-#endif\n+/* Verify that large integer constants are loaded via direct move instead of\n+   being loaded from memory.  */\n \n double\n p9_large (void)\n {\n   long l = 0x12345678;\n   double ret;\n \n-  __asm__ (\"xxlor %x0,%x1,%x1\" : \"=&d\" (ret) : \"wi\" (l));\n+  __asm__ (\"xxlor %x0,%x1,%x1\" : \"=&d\" (ret) : \"wa\" (l));\n \n   return ret;\n }\n \n-/* { dg-final { scan-assembler     {\\mmtvsrd\\M} } } */\n+/* { dg-final { scan-assembler     {\\mmtvsr}    } } */\n /* { dg-final { scan-assembler-not {\\mld\\M}     } } */\n /* { dg-final { scan-assembler-not {\\mlfd\\M}    } } */\n /* { dg-final { scan-assembler-not {\\mlxsd\\M}   } } */"}]}