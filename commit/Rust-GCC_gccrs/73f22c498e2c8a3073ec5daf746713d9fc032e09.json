{"sha": "73f22c498e2c8a3073ec5daf746713d9fc032e09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNmMjJjNDk4ZTJjOGEzMDczZWM1ZGFmNzQ2NzEzZDlmYzAzMmUwOQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-11-05T19:34:19Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-11-05T19:34:19Z"}, "message": "i386.exp (FLAGS): Remove.\n\n\t* gcc.target/i386/i386.exp (FLAGS): Remove.\n\tWrap gcc_target_compile with $clearcap_ldflags added to options.\n\nFrom-SVN: r166377", "tree": {"sha": "4ec8ca1a44126ae8ced50f131f36fbda3488157d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ec8ca1a44126ae8ced50f131f36fbda3488157d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73f22c498e2c8a3073ec5daf746713d9fc032e09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f22c498e2c8a3073ec5daf746713d9fc032e09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73f22c498e2c8a3073ec5daf746713d9fc032e09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f22c498e2c8a3073ec5daf746713d9fc032e09/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "897145e3e11c868abb2b5ec23ef5f65a87914270", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/897145e3e11c868abb2b5ec23ef5f65a87914270", "html_url": "https://github.com/Rust-GCC/gccrs/commit/897145e3e11c868abb2b5ec23ef5f65a87914270"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "fda07c36ac00a5fd15d143a29a300323cba9c6b2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f22c498e2c8a3073ec5daf746713d9fc032e09/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f22c498e2c8a3073ec5daf746713d9fc032e09/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=73f22c498e2c8a3073ec5daf746713d9fc032e09", "patch": "@@ -1,3 +1,8 @@\n+2010-11-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* gcc.target/i386/i386.exp (FLAGS): Remove.\n+\tWrap gcc_target_compile with $clearcap_ldflags added to options.\n+\n 2010-11-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/46160"}, {"sha": "32dbf5eac054809312c204dd2c2a3ba5f391c24b", "filename": "gcc/testsuite/gcc.target/i386/i386.exp", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f22c498e2c8a3073ec5daf746713d9fc032e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f22c498e2c8a3073ec5daf746713d9fc032e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp?ref=73f22c498e2c8a3073ec5daf746713d9fc032e09", "patch": "@@ -188,13 +188,24 @@ proc check_effective_target_xop { } {\n \n # If the linker used understands -M <mapfile>, pass it to clear hardware\n # capabilities set by the Sun assembler.\n-set FLAGS \"\"\n set clearcap_ldflags \"-Wl,-M,$srcdir/$subdir/clearcap.map\"\n \n if [check_no_compiler_messages mapfile executable {\n \tint main (void) { return 0; }\n   } $clearcap_ldflags ] {\n-  set FLAGS $clearcap_ldflags\n+\n+  if { [info procs gcc_target_compile] != [list] \\\n+\t&& [info procs saved_gcc_target_compile] == [list] } {\n+    rename gcc_target_compile saved_gcc_target_compile\n+\n+    proc gcc_target_compile { source dest type options } {\n+      global clearcap_ldflags\n+      # Always pass -Wl,-M,<mapfile>, but don't let it show up in gcc.sum.\n+      lappend options \"additional_flags=$clearcap_ldflags\"\n+\n+      return [saved_gcc_target_compile $source $dest $type $options]\n+    }\n+  }\n }\n \n # If a testcase doesn't have special options, use these.\n@@ -221,7 +232,7 @@ set tests [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]]\n set tests [prune $tests $srcdir/$subdir/vect-args.c]\n \n # Main loop.\n-dg-runtest $tests $FLAGS $DEFAULT_CFLAGS\n+dg-runtest $tests \"\" $DEFAULT_CFLAGS\n \n # All done.\n dg-finish"}]}