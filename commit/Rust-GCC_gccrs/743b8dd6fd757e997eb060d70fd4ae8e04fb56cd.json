{"sha": "743b8dd6fd757e997eb060d70fd4ae8e04fb56cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQzYjhkZDZmZDc1N2U5OTdlYjA2MGQ3MGZkNGFlOGUwNGZiNTZjZA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-07-31T15:29:03Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-08-17T18:38:05Z"}, "message": "Darwin, X86, config: Adjust 'as' command lines [PR100340].\n\nVersions of the assembler using clang from XCode 12.5/12.5.1\nhave a bug which produces different code layout between debug and\nnon-debug input, leading to a compare fail for default configure\nparameters.\n\nThis is a workaround fix to disable the optimisation that is\nresponsible for the bug.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\nPR target/100340 - Bootstrap fails with Clang 12.0.5 (XCode 12.5)\n\n\tPR target/100340\n\ngcc/ChangeLog:\n\n\t* config.in: Regenerate.\n\t* config/i386/darwin.h (EXTRA_ASM_OPTS): New\n\t(ASM_SPEC): Pass options to disable branch shortening where\n\tneeded.\n\t* configure: Regenerate.\n\t* configure.ac: Detect versions of 'as' that support the\n\toptimisation which has the bug.", "tree": {"sha": "6ec35e1b496cdc662e14dfc12f786bccace8e46d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ec35e1b496cdc662e14dfc12f786bccace8e46d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/743b8dd6fd757e997eb060d70fd4ae8e04fb56cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/743b8dd6fd757e997eb060d70fd4ae8e04fb56cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/743b8dd6fd757e997eb060d70fd4ae8e04fb56cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/743b8dd6fd757e997eb060d70fd4ae8e04fb56cd/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7e17be3be3d43640a9a4a33d59315dec69fdda4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7e17be3be3d43640a9a4a33d59315dec69fdda4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7e17be3be3d43640a9a4a33d59315dec69fdda4"}], "stats": {"total": 61, "additions": 60, "deletions": 1}, "files": [{"sha": "d8a810bbc91e78e1c4f885fa899785020d135553", "filename": "gcc/config.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/743b8dd6fd757e997eb060d70fd4ae8e04fb56cd/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/743b8dd6fd757e997eb060d70fd4ae8e04fb56cd/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=743b8dd6fd757e997eb060d70fd4ae8e04fb56cd", "patch": "@@ -616,6 +616,13 @@\n #endif\n \n \n+/* Define if your Mac OS X assembler supports -mllvm -x86-pad-for-align=false.\n+   */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_AS_MLLVM_X86_PAD_FOR_ALIGN\n+#endif\n+\n+\n /* Define if your Mac OS X assembler supports the -mmacos-version-min option.\n    */\n #ifndef USED_FOR_TARGET"}, {"sha": "73b06e2307d2ee93104a3058b8f11a1c05b29cd8", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/743b8dd6fd757e997eb060d70fd4ae8e04fb56cd/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/743b8dd6fd757e997eb060d70fd4ae8e04fb56cd/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=743b8dd6fd757e997eb060d70fd4ae8e04fb56cd", "patch": "@@ -125,10 +125,18 @@ along with GCC; see the file COPYING3.  If not see\n   %{mfentry*:%eDarwin does not support -mfentry or associated options}\" \\\n   DARWIN_CC1_SPEC\n \n+/* This is a workaround for a tool bug: see PR100340.  */\n+\n+#ifdef HAVE_AS_MLLVM_X86_PAD_FOR_ALIGN\n+#define EXTRA_ASM_OPTS \" -mllvm -x86-pad-for-align=false\"\n+#else\n+#define EXTRA_ASM_OPTS \"\"\n+#endif\n+\n #undef ASM_SPEC\n #define ASM_SPEC \"-arch %(darwin_arch) \\\n   \" ASM_OPTIONS \" -force_cpusubtype_ALL \\\n-  %{static}\" ASM_MMACOSX_VERSION_MIN_SPEC\n+  %{static}\" ASM_MMACOSX_VERSION_MIN_SPEC EXTRA_ASM_OPTS\n \n #undef ENDFILE_SPEC\n #define ENDFILE_SPEC \\"}, {"sha": "a2d1003a0f5a2184aae55396a9700275810decd9", "filename": "gcc/configure", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/743b8dd6fd757e997eb060d70fd4ae8e04fb56cd/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/743b8dd6fd757e997eb060d70fd4ae8e04fb56cd/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=743b8dd6fd757e997eb060d70fd4ae8e04fb56cd", "patch": "@@ -27082,6 +27082,41 @@ $as_echo \"$as_me: WARNING: LTO for $target requires binutils >= 2.20.1, but vers\n \tfi\n \t;;\n     esac\n+    case $target_os in\n+       darwin2[0-9]* | darwin19*)\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for llvm assembler x86-pad-for-align option\" >&5\n+$as_echo_n \"checking assembler for llvm assembler x86-pad-for-align option... \" >&6; }\n+if ${gcc_cv_as_mllvm_x86_pad_for_align+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_mllvm_x86_pad_for_align=no\n+  if test x$gcc_cv_as != x; then\n+    $as_echo '.text' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags -mllvm -x86-pad-for-align=false -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgcc_cv_as_mllvm_x86_pad_for_align=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_mllvm_x86_pad_for_align\" >&5\n+$as_echo \"$gcc_cv_as_mllvm_x86_pad_for_align\" >&6; }\n+if test $gcc_cv_as_mllvm_x86_pad_for_align = yes; then\n+\n+$as_echo \"#define HAVE_AS_MLLVM_X86_PAD_FOR_ALIGN 1\" >>confdefs.h\n+\n+fi\n+\n+       ;;\n+    esac\n \n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for -xbrace_comment\" >&5\n $as_echo_n \"checking assembler for -xbrace_comment... \" >&6; }"}, {"sha": "ad8fa5a46049d04aa9cb9f52ebe031f00ea39717", "filename": "gcc/configure.ac", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/743b8dd6fd757e997eb060d70fd4ae8e04fb56cd/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/743b8dd6fd757e997eb060d70fd4ae8e04fb56cd/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=743b8dd6fd757e997eb060d70fd4ae8e04fb56cd", "patch": "@@ -4799,6 +4799,15 @@ foo:\tnop\n \tfi\n \t;;\n     esac\n+    case $target_os in\n+       darwin2[[0-9]]* | darwin19*)\n+        gcc_GAS_CHECK_FEATURE([llvm assembler x86-pad-for-align option],\n+          gcc_cv_as_mllvm_x86_pad_for_align,,\n+          [-mllvm -x86-pad-for-align=false], [.text],,\n+          [AC_DEFINE(HAVE_AS_MLLVM_X86_PAD_FOR_ALIGN, 1,\n+\t    [Define if your Mac OS X assembler supports -mllvm -x86-pad-for-align=false.])])\n+       ;;\n+    esac\n \n     gcc_GAS_CHECK_FEATURE([-xbrace_comment], gcc_cv_as_ix86_xbrace_comment,,\n       [-xbrace_comment=no], [.text],,"}]}