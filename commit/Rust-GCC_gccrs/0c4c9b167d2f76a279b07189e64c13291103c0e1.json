{"sha": "0c4c9b167d2f76a279b07189e64c13291103c0e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM0YzliMTY3ZDJmNzZhMjc5YjA3MTg5ZTY0YzEzMjkxMTAzYzBlMQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.co.uk", "date": "2000-09-15T16:33:52Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "2000-09-15T16:33:52Z"}, "message": "Avoid explicit references to fpul register in machine description\n\nFrom-SVN: r36436", "tree": {"sha": "42f463f469209a971bfcfac69504c9136c236e4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42f463f469209a971bfcfac69504c9136c236e4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c4c9b167d2f76a279b07189e64c13291103c0e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c4c9b167d2f76a279b07189e64c13291103c0e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c4c9b167d2f76a279b07189e64c13291103c0e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c4c9b167d2f76a279b07189e64c13291103c0e1/comments", "author": null, "committer": null, "parents": [{"sha": "188c5e6ca8656feaa041ac6aa53c3b5f26a31678", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/188c5e6ca8656feaa041ac6aa53c3b5f26a31678", "html_url": "https://github.com/Rust-GCC/gccrs/commit/188c5e6ca8656feaa041ac6aa53c3b5f26a31678"}], "stats": {"total": 195, "additions": 103, "deletions": 92}, "files": [{"sha": "b914948e4b241196f259bdab5cbb3d29de0cba30", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c4c9b167d2f76a279b07189e64c13291103c0e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c4c9b167d2f76a279b07189e64c13291103c0e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c4c9b167d2f76a279b07189e64c13291103c0e1", "patch": "@@ -7,6 +7,20 @@\n \t* calls.c (emit_library_call_value_1): Don't create a libcall\n \tsequence here; our caller will in most cases do it.\n \n+\t* sh.h (SECONDARY_INPUT_RELOAD_CLASS): Handle moving T, MACL or\n+\tMACH into FPUL.\n+\t(SECONDARY_OUTPUT_RELOAD_CLASS): Similar case.\n+\t* sh.md (reload_outsf): Generate recognizable patterns for\n+\tTARGET_SH3E.\n+\t(floatsisf2, floatsisf2_ie, floatsisf2_i4, fix_truncsfsi2,\n+\tfix_truncsfsi2_i4, fixsfsi, floatsidf2, floatsidf2_i, fix_truncdfsi2,\n+\tfix_truncdfsi2_i, extendsfdf2, extendsfdf2_i4, truncdfsf2,\n+\ttruncdfsf2_i4): Change not to use explicit references to fpul.\n+\t(floatsisf2_ie): Remove USE of fpscr.\n+\t(floatsisf2): Change default expansion to match this.\n+\t(fix_truncsfsi2_i4_2, fix_truncdfsi2_i4 & splitters): Comment out\n+\tunused patterns.\n+\n 2000-09-15  Richard Henderson  <rth@cygnus.com>\n \n \t* expmed.c (store_bit_field): Consider naturally aligned"}, {"sha": "1723634bac926fa874e5b264dcbca65fed2d4f89", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c4c9b167d2f76a279b07189e64c13291103c0e1/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c4c9b167d2f76a279b07189e64c13291103c0e1/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=0c4c9b167d2f76a279b07189e64c13291103c0e1", "patch": "@@ -822,6 +822,7 @@ extern enum reg_class reg_class_from_letter[];\n       && (GET_CODE (X) == MEM\t\t\t\t\t\t\\\n \t  || (GET_CODE (X) == REG\t\t\t\t\t\\\n \t      && (REGNO (X) >= FIRST_PSEUDO_REGISTER\t\t\t\\\n+\t\t  || REGNO (X) == T_REG\t\t\t\t\t\\\n \t\t  || system_reg_operand (X, VOIDmode)))))\t\t\\\n    ? GENERAL_REGS\t\t\t\t\t\t\t\\\n    : (((CLASS) == MAC_REGS || (CLASS) == PR_REGS)\t\t\t\\\n@@ -835,6 +836,11 @@ extern enum reg_class reg_class_from_letter[];\n     && ! ((fp_zero_operand (X) || fp_one_operand (X))\t\t\t\\\n \t  && (MODE) == SFmode && fldi_ok ()))\t\t\t\t\\\n    ? R0_REGS\t\t\t\t\t\t\t\t\\\n+   : (CLASS == FPUL_REGS\t\t\t\t\t\t\\\n+      && ((GET_CODE (X) == REG\t\t\t\t\t\t\\\n+          && (REGNO (X) == MACL_REG || REGNO (X) == MACH_REG\t\t\\\n+\t      || REGNO (X) == T_REG))))\t\t\t\t\t\\\n+   ? GENERAL_REGS\t\t\t\t\t\t\t\\\n    : CLASS == FPUL_REGS && immediate_operand ((X), (MODE))\t\t\\\n    ? (GET_CODE (X) == CONST_INT && CONST_OK_FOR_I (INTVAL (X))\t\t\\\n       ? GENERAL_REGS\t\t\t\t\t\t\t\\"}, {"sha": "a4f17d686f0849093ae33aa880e6e2360e317b94", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 83, "deletions": 92, "changes": 175, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c4c9b167d2f76a279b07189e64c13291103c0e1/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c4c9b167d2f76a279b07189e64c13291103c0e1/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=0c4c9b167d2f76a279b07189e64c13291103c0e1", "patch": "@@ -4216,91 +4216,86 @@ else\n    (set_attr \"fp_mode\" \"single\")])\n \n (define_expand \"floatsisf2\"\n-  [(set (reg:SI 22)\n-\t(match_operand:SI 1 \"arith_reg_operand\" \"\"))\n-   (parallel [(set (match_operand:SF 0 \"arith_reg_operand\" \"\")\n-\t\t   (float:SF (reg:SI 22)))\n+  [(parallel [(set (match_operand:SF 0 \"arith_reg_operand\" \"\")\n+\t\t   (float:SF (match_operand:SI 1 \"arith_reg_operand\" \"\")))\n \t      (use (match_dup 2))])]\n   \"TARGET_SH3E\"\n   \"\n {\n   if (TARGET_SH4)\n     {\n-      emit_insn (gen_rtx (SET, VOIDmode, gen_rtx (REG, SImode, 22),\n-\t\t\t  operands[1]));\n-      emit_sf_insn (gen_floatsisf2_i4 (operands[0], get_fpscr_rtx ()));\n+      emit_sf_insn (gen_floatsisf2_i4 (operands[0], operands[1], get_fpscr_rtx ()));\n       DONE;\n     }\n   operands[2] = get_fpscr_rtx ();\n }\")\n \n (define_insn \"floatsisf2_i4\"\n   [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n-\t(float:SF (reg:SI 22)))\n-   (use (match_operand:PSI 1 \"fpscr_operand\" \"c\"))]\n+\t(float:SF (match_operand:SI 1 \"register_operand\" \"y\")))\n+   (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH3E\"\n-  \"float\tfpul,%0\"\n+  \"float\t%1,%0\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"fp_mode\" \"single\")])\n \n-(define_insn \"*floatsisf2_ie\"\n-  [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n-\t(float:SF (reg:SI 22)))]\n-  \"TARGET_SH3E && ! TARGET_SH4\"\n-  \"float\tfpul,%0\"\n-  [(set_attr \"type\" \"fp\")])\n+;; ??? This pattern is used nowhere.  floatsisf always expands to floatsisf_i4.\n+;; (define_insn \"*floatsisf2_ie\"\n+;;  [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n+;;\t(float:SF (reg:SI 22)))]\n+;;  \"TARGET_SH3E && ! TARGET_SH4\"\n+;;  \"float\tfpul,%0\"\n+;;  [(set_attr \"type\" \"fp\")])\n \n (define_expand \"fix_truncsfsi2\"\n-  [(set (reg:SI 22)\n-\t(fix:SI (match_operand:SF 1 \"arith_reg_operand\" \"f\")))\n-   (set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n-\t(reg:SI 22))]\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=y\")\n+\t(fix:SI (match_operand:SF 1 \"arith_reg_operand\" \"f\")))]\n   \"TARGET_SH3E\"\n   \"\n {\n   if (TARGET_SH4)\n     {\n-      emit_sf_insn (gen_fix_truncsfsi2_i4 (operands[1], get_fpscr_rtx ()));\n-      emit_insn (gen_rtx (SET, VOIDmode, operands[0],\n-\t\t\t  gen_rtx (REG, SImode, 22)));\n+      emit_sf_insn (gen_fix_truncsfsi2_i4 (operands[0], operands[1], get_fpscr_rtx ()));\n       DONE;\n     }\n }\")\n \n (define_insn \"fix_truncsfsi2_i4\"\n-  [(set (reg:SI 22)\n-\t(fix:SI (match_operand:SF 0 \"arith_reg_operand\" \"f\")))\n-   (use (match_operand:PSI 1 \"fpscr_operand\" \"c\"))]\n-  \"TARGET_SH4\"\n-  \"ftrc\t%0,fpul\"\n-  [(set_attr \"type\" \"fp\")\n-   (set_attr \"fp_mode\" \"single\")])\n-\n-(define_insn \"fix_truncsfsi2_i4_2\"\n-  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=y\")\n \t(fix:SI (match_operand:SF 1 \"arith_reg_operand\" \"f\")))\n-   (use (reg:SI 48))\n-   (clobber (reg:SI 22))]\n+   (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n-  \"#\"\n-  [(set_attr \"length\" \"4\")\n+  \"ftrc\t%1,%0\"\n+  [(set_attr \"type\" \"fp\")\n    (set_attr \"fp_mode\" \"single\")])\n \n-(define_split\n-  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n-\t(fix:SI (match_operand:SF 1 \"arith_reg_operand\" \"f\")))\n-   (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))\n-   (clobber (reg:SI 22))]\n-  \"TARGET_SH4\"\n-  [(parallel [(set (reg:SI 22) (fix:SI (match_dup 1)))\n-\t      (use (match_dup 2))])\n-   (set (match_dup 0) (reg:SI 22))])\n+;; ??? This pattern is used nowhere.  fix_truncsfsi2 always expands to\n+;; fix_truncsfsi2_i4.\n+;; (define_insn \"fix_truncsfsi2_i4_2\"\n+;;  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n+;;\t(fix:SI (match_operand:SF 1 \"arith_reg_operand\" \"f\")))\n+;;   (use (reg:SI 48))\n+;;   (clobber (reg:SI 22))]\n+;;  \"TARGET_SH4\"\n+;;  \"#\"\n+;;  [(set_attr \"length\" \"4\")\n+;;   (set_attr \"fp_mode\" \"single\")])\n+\n+;;(define_split\n+;;  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n+;;\t(fix:SI (match_operand:SF 1 \"arith_reg_operand\" \"f\")))\n+;;   (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))\n+;;   (clobber (reg:SI 22))]\n+;;  \"TARGET_SH4\"\n+;;  [(parallel [(set (reg:SI 22) (fix:SI (match_dup 1)))\n+;;\t      (use (match_dup 2))])\n+;;   (set (match_dup 0) (reg:SI 22))])\n \n (define_insn \"*fixsfsi\"\n-  [(set (reg:SI 22)\n-\t(fix:SI (match_operand:SF 0 \"arith_reg_operand\" \"f\")))]\n+  [(set (match_operand:SI 0 \"register_operand\" \"=y\")\n+\t(fix:SI (match_operand:SF 1 \"arith_reg_operand\" \"f\")))]\n   \"TARGET_SH3E && ! TARGET_SH4\"\n-  \"ftrc\t%0,fpul\"\n+  \"ftrc\t%1,%0\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"cmpgtsf_t\"\n@@ -4486,17 +4481,16 @@ else\n   \"TARGET_SH4\"\n   \"\n {\n-  emit_insn (gen_rtx (SET, VOIDmode, gen_rtx (REG, SImode, 22), operands[1]));\n-  emit_df_insn (gen_floatsidf2_i (operands[0], get_fpscr_rtx ()));\n+  emit_df_insn (gen_floatsidf2_i (operands[0], operands[1], get_fpscr_rtx ()));\n   DONE;\n }\")\n \n (define_insn \"floatsidf2_i\"\n   [(set (match_operand:DF 0 \"arith_reg_operand\" \"=f\")\n-\t(float:DF (reg:SI 22)))\n-   (use (match_operand:PSI 1 \"fpscr_operand\" \"c\"))]\n+\t(float:DF (match_operand:SI 1 \"register_operand\" \"y\")))\n+   (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n-  \"float\tfpul,%0\"\n+  \"float\t%1,%0\"\n   [(set_attr \"type\" \"dfp_conv\")\n    (set_attr \"fp_mode\" \"double\")])\n \n@@ -4506,39 +4500,40 @@ else\n   \"TARGET_SH4\"\n   \"\n {\n-  emit_df_insn (gen_fix_truncdfsi2_i (operands[1], get_fpscr_rtx ()));\n-  emit_insn (gen_rtx (SET, VOIDmode, operands[0], gen_rtx (REG, SImode, 22)));\n+  emit_df_insn (gen_fix_truncdfsi2_i (operands[0], operands[1], get_fpscr_rtx ()));\n   DONE;\n }\")\n \n (define_insn \"fix_truncdfsi2_i\"\n-  [(set (reg:SI 22)\n-\t(fix:SI (match_operand:DF 0 \"arith_reg_operand\" \"f\")))\n-   (use (match_operand:PSI 1 \"fpscr_operand\" \"c\"))]\n-  \"TARGET_SH4\"\n-  \"ftrc\t%0,fpul\"\n-  [(set_attr \"type\" \"dfp_conv\")\n-   (set_attr \"fp_mode\" \"double\")])\n-\n-(define_insn \"fix_truncdfsi2_i4\"\n-  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=y\")\n \t(fix:SI (match_operand:DF 1 \"arith_reg_operand\" \"f\")))\n-   (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))\n-   (clobber (reg:SI 22))]\n+   (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n-  \"#\"\n-  [(set_attr \"length\" \"4\")\n+  \"ftrc\t%1,%0\"\n+  [(set_attr \"type\" \"dfp_conv\")\n    (set_attr \"fp_mode\" \"double\")])\n \n-(define_split\n-  [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n-\t(fix:SI (match_operand:DF 1 \"arith_reg_operand\" \"f\")))\n-   (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))\n-   (clobber (reg:SI 22))]\n-  \"TARGET_SH4\"\n-  [(parallel [(set (reg:SI 22) (fix:SI (match_dup 1)))\n-\t      (use (match_dup 2))])\n-   (set (match_dup 0) (reg:SI 22))])\n+;; ??? This pattern is used nowhere.  fix_truncdfsi2 always expands to\n+;; fix_truncdfsi2_i.\n+;; (define_insn \"fix_truncdfsi2_i4\"\n+;;   [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n+;; \t(fix:SI (match_operand:DF 1 \"arith_reg_operand\" \"f\")))\n+;;    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))\n+;;    (clobber (reg:SI 22))]\n+;;   \"TARGET_SH4\"\n+;;   \"#\"\n+;;   [(set_attr \"length\" \"4\")\n+;;    (set_attr \"fp_mode\" \"double\")])\n+;; \n+;; (define_split\n+;;   [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n+;; \t(fix:SI (match_operand:DF 1 \"arith_reg_operand\" \"f\")))\n+;;    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))\n+;;    (clobber (reg:SI 22))]\n+;;   \"TARGET_SH4\"\n+;;   [(parallel [(set (reg:SI 22) (fix:SI (match_dup 1)))\n+;; \t      (use (match_dup 2))])\n+;;    (set (match_dup 0) (reg:SI 22))])\n \n (define_insn \"cmpgtdf_t\"\n   [(set (reg:SI 18) (gt:SI (match_operand:DF 0 \"arith_reg_operand\" \"f\")\n@@ -4630,18 +4625,16 @@ else\n   \"TARGET_SH4\"\n   \"\n {\n-  emit_sf_insn (gen_movsf_ie (gen_rtx (REG, SFmode, 22), operands[1],\n-\t\t\t      get_fpscr_rtx ()));\n-  emit_df_insn (gen_extendsfdf2_i4 (operands[0], get_fpscr_rtx ()));\n+  emit_df_insn (gen_extendsfdf2_i4 (operands[0], operands[1], get_fpscr_rtx ()));\n   DONE;\n }\")\n \n (define_insn \"extendsfdf2_i4\"\n   [(set (match_operand:DF 0 \"arith_reg_operand\" \"=f\")\n-\t(float_extend:DF (reg:SF 22)))\n-   (use (match_operand:PSI 1 \"fpscr_operand\" \"c\"))]\n+\t(float_extend:DF (match_operand:SF 1 \"register_operand\" \"y\")))\n+   (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n-  \"fcnvsd  fpul,%0\"\n+  \"fcnvsd  %1,%0\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"fp_mode\" \"double\")])\n \n@@ -4651,18 +4644,16 @@ else\n   \"TARGET_SH4\"\n   \"\n {\n-  emit_df_insn (gen_truncdfsf2_i4 (operands[1], get_fpscr_rtx ()));\n-  emit_sf_insn (gen_movsf_ie (operands[0], gen_rtx (REG, SFmode, 22),\n-\t\t\t   get_fpscr_rtx ()));\n+  emit_df_insn (gen_truncdfsf2_i4 (operands[0], operands[1], get_fpscr_rtx ()));\n   DONE;\n }\")\n \n (define_insn \"truncdfsf2_i4\"\n-  [(set (reg:SF 22)\n-\t(float_truncate:SF (match_operand:DF 0 \"arith_reg_operand\" \"f\")))\n-   (use (match_operand:PSI 1 \"fpscr_operand\" \"c\"))]\n+  [(set (match_operand:SF 0 \"register_operand\" \"=y\")\n+\t(float_truncate:SF (match_operand:DF 1 \"arith_reg_operand\" \"f\")))\n+   (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n-  \"fcnvds  %0,fpul\"\n+  \"fcnvds  %1,%0\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"fp_mode\" \"double\")])\n \f"}]}