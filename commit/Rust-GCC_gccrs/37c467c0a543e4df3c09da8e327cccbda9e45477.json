{"sha": "37c467c0a543e4df3c09da8e327cccbda9e45477", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdjNDY3YzBhNTQzZTRkZjNjMDlkYThlMzI3Y2NjYmRhOWU0NTQ3Nw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-06-22T18:40:21Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-06-22T18:40:21Z"}, "message": "i386.c (ix86_expand_move): Simplify SYMBOL_REF handling.\n\n\t* config/i386/i386.c (ix86_expand_move): Simplify SYMBOL_REF handling.\n\nFrom-SVN: r237716", "tree": {"sha": "da8c0f39389f65b764a42962150bc6a5ea4609c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da8c0f39389f65b764a42962150bc6a5ea4609c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37c467c0a543e4df3c09da8e327cccbda9e45477", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37c467c0a543e4df3c09da8e327cccbda9e45477", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37c467c0a543e4df3c09da8e327cccbda9e45477", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37c467c0a543e4df3c09da8e327cccbda9e45477/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac81cf0b2bf5efdd716d10d1c218eb5a17e1035b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac81cf0b2bf5efdd716d10d1c218eb5a17e1035b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac81cf0b2bf5efdd716d10d1c218eb5a17e1035b"}], "stats": {"total": 74, "additions": 45, "deletions": 29}, "files": [{"sha": "ab5891b437507221dae9d4dc64c2ca681fc38431", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37c467c0a543e4df3c09da8e327cccbda9e45477/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37c467c0a543e4df3c09da8e327cccbda9e45477/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37c467c0a543e4df3c09da8e327cccbda9e45477", "patch": "@@ -1,3 +1,7 @@\n+2016-06-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_expand_move): Simplify SYMBOL_REF handling.\n+\n 2016-06-22  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c/70339"}, {"sha": "02e678acda52826ec2421a42e0b9d6060ad2ed00", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 41, "deletions": 29, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37c467c0a543e4df3c09da8e327cccbda9e45477/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37c467c0a543e4df3c09da8e327cccbda9e45477/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=37c467c0a543e4df3c09da8e327cccbda9e45477", "patch": "@@ -19393,50 +19393,62 @@ void\n ix86_expand_move (machine_mode mode, rtx operands[])\n {\n   rtx op0, op1;\n+  rtx tmp, addend = NULL_RTX;\n   enum tls_model model;\n \n   op0 = operands[0];\n   op1 = operands[1];\n \n-  if (GET_CODE (op1) == SYMBOL_REF)\n+  switch (GET_CODE (op1))\n     {\n-      rtx tmp;\n+    case CONST:\n+      tmp = XEXP (op1, 0);\n \n+      if (GET_CODE (tmp) != PLUS\n+\t  || GET_CODE (XEXP (tmp, 0)) != SYMBOL_REF)\n+\tbreak;\n+\n+      op1 = XEXP (tmp, 0);\n+      addend = XEXP (tmp, 1);\n+      /* FALLTHRU */\n+\n+    case SYMBOL_REF:\n       model = SYMBOL_REF_TLS_MODEL (op1);\n-      if (model)\n-\t{\n-\t  op1 = legitimize_tls_address (op1, model, true);\n-\t  op1 = force_operand (op1, op0);\n-\t  if (op1 == op0)\n-\t    return;\n-\t  op1 = convert_to_mode (mode, op1, 1);\n-\t}\n-      else if ((tmp = legitimize_pe_coff_symbol (op1, false)) != NULL_RTX)\n-\top1 = tmp;\n-    }\n-  else if (GET_CODE (op1) == CONST\n-\t   && GET_CODE (XEXP (op1, 0)) == PLUS\n-\t   && GET_CODE (XEXP (XEXP (op1, 0), 0)) == SYMBOL_REF)\n-    {\n-      rtx addend = XEXP (XEXP (op1, 0), 1);\n-      rtx symbol = XEXP (XEXP (op1, 0), 0);\n-      rtx tmp;\n \n-      model = SYMBOL_REF_TLS_MODEL (symbol);\n       if (model)\n-\ttmp = legitimize_tls_address (symbol, model, true);\n+\top1 = legitimize_tls_address (op1, model, true);\n       else\n-        tmp = legitimize_pe_coff_symbol (symbol, true);\n+\t{\n+\t  tmp = legitimize_pe_coff_symbol (op1, addend != NULL_RTX);\n+\t  if (tmp)\n+\t    {\n+\t      op1 = tmp;\n+\t      if (!addend)\n+\t\tbreak;\n+\t    }\n+\t  else\n+\t    {\n+\t      op1 = operands[1];\n+\t      break;\n+\t    }\n+\t}\n \n-      if (tmp)\n+      if (addend)\n \t{\n-\t  tmp = force_operand (tmp, NULL);\n-\t  tmp = expand_simple_binop (Pmode, PLUS, tmp, addend,\n+\t  op1 = force_operand (op1, NULL_RTX);\n+\t  op1 = expand_simple_binop (Pmode, PLUS, op1, addend,\n \t\t\t\t     op0, 1, OPTAB_DIRECT);\n-\t  if (tmp == op0)\n-\t    return;\n-\t  op1 = convert_to_mode (mode, tmp, 1);\n \t}\n+      else\n+\top1 = force_operand (op1, op0);\n+\n+      if (op1 == op0)\n+\treturn;\n+\n+      op1 = convert_to_mode (mode, op1, 1);\n+\n+    default:\n+      break;\n     }\n \n   if ((flag_pic || MACHOPIC_INDIRECT)"}]}