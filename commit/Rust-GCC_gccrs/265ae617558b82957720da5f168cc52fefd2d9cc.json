{"sha": "265ae617558b82957720da5f168cc52fefd2d9cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY1YWU2MTc1NThiODI5NTc3MjBkYTVmMTY4Y2M1MmZlZmQyZDljYw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@redhat.com", "date": "2000-03-24T02:05:09Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2000-03-24T02:05:09Z"}, "message": "Undo part of 3/21/2000 change\n\nFrom-SVN: r32720", "tree": {"sha": "f244377509610adc42423b174e46793c70fe0036", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f244377509610adc42423b174e46793c70fe0036"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/265ae617558b82957720da5f168cc52fefd2d9cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/265ae617558b82957720da5f168cc52fefd2d9cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/265ae617558b82957720da5f168cc52fefd2d9cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/265ae617558b82957720da5f168cc52fefd2d9cc/comments", "author": null, "committer": null, "parents": [{"sha": "1751425fc5a3a0b20db2b2fb21b39c8fb0b0d677", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1751425fc5a3a0b20db2b2fb21b39c8fb0b0d677", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1751425fc5a3a0b20db2b2fb21b39c8fb0b0d677"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "f2aa7c3e96a0335cfa47bf0ae5230f6b5535059b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265ae617558b82957720da5f168cc52fefd2d9cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265ae617558b82957720da5f168cc52fefd2d9cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=265ae617558b82957720da5f168cc52fefd2d9cc", "patch": "@@ -1,3 +1,9 @@\n+2000-03-23  Michael Meissner  <meissner@redhat.com>\n+\n+\t* config/alpha/alpha.md (TF floating point insns): Undo 2000-03-21\n+\tchange adding TARGET_FP to the TF floating point insns, except for\n+\ttrunctfsf2, which generates direct calls to truncdfsf2.\n+\n 2000-03-23  Geoff Keating  <geoffk@cygnus.com>\n \n \t* config/rs6000/rs6000.h (ARG_POINTER_CFA_OFFSET): New definition,"}, {"sha": "03c70036416dbe8c286dd6165a54e35b244cb496", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265ae617558b82957720da5f168cc52fefd2d9cc/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265ae617558b82957720da5f168cc52fefd2d9cc/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=265ae617558b82957720da5f168cc52fefd2d9cc", "patch": "@@ -2093,7 +2093,7 @@\n (define_expand \"fix_trunctfdi2\"\n   [(use (match_operand:DI 0 \"register_operand\" \"\"))\n    (use (match_operand:TF 1 \"general_operand\" \"\"))]\n-  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_cvt (FIX, operands); DONE;\")\n \n (define_insn \"\"\n@@ -2131,7 +2131,7 @@\n (define_expand \"floatditf2\"\n   [(use (match_operand:TF 0 \"register_operand\" \"\"))\n    (use (match_operand:DI 1 \"general_operand\" \"\"))]\n-  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_cvt (FLOAT, operands); DONE;\")\n \n (define_expand \"floatunsdisf2\"\n@@ -2149,7 +2149,7 @@\n (define_expand \"floatunsditf2\"\n   [(use (match_operand:TF 0 \"register_operand\" \"\"))\n    (use (match_operand:DI 1 \"general_operand\" \"\"))]\n-  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_cvt (UNSIGNED_FLOAT, operands); DONE;\")\n \n (define_expand \"extendsfdf2\"\n@@ -2183,7 +2183,7 @@\n (define_expand \"extendsftf2\"\n   [(use (match_operand:TF 0 \"register_operand\" \"\"))\n    (use (match_operand:SF 1 \"general_operand\" \"\"))]\n-  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_HAS_XFLOATING_LIBS\"\n   \"\n {\n   rtx tmp = gen_reg_rtx (DFmode);\n@@ -2195,7 +2195,7 @@\n (define_expand \"extenddftf2\"\n   [(use (match_operand:TF 0 \"register_operand\" \"\"))\n    (use (match_operand:DF 1 \"general_operand\" \"\"))]\n-  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_cvt (FLOAT_EXTEND, operands); DONE;\")\n \n (define_insn \"\"\n@@ -2217,7 +2217,7 @@\n (define_expand \"trunctfdf2\"\n   [(use (match_operand:DF 0 \"register_operand\" \"\"))\n    (use (match_operand:TF 1 \"general_operand\" \"\"))]\n-  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_cvt (FLOAT_TRUNCATE, operands); DONE;\")\n \n (define_expand \"trunctfsf2\"\n@@ -2317,7 +2317,7 @@\n   [(use (match_operand 0 \"register_operand\" \"\"))\n    (use (match_operand 1 \"general_operand\" \"\"))\n    (use (match_operand 2 \"general_operand\" \"\"))]\n-  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_arith (DIV, operands); DONE;\")\n \n (define_insn \"\"\n@@ -2381,7 +2381,7 @@\n   [(use (match_operand 0 \"register_operand\" \"\"))\n    (use (match_operand 1 \"general_operand\" \"\"))\n    (use (match_operand 2 \"general_operand\" \"\"))]\n-  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_arith (MULT, operands); DONE;\")\n \n (define_insn \"\"\n@@ -2455,7 +2455,7 @@\n   [(use (match_operand 0 \"register_operand\" \"\"))\n    (use (match_operand 1 \"general_operand\" \"\"))\n    (use (match_operand 2 \"general_operand\" \"\"))]\n-  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_HAS_XFLOATING_LIBS\"\n   \"alpha_emit_xfloating_arith (MINUS, operands); DONE;\")\n \n (define_insn \"\"\n@@ -3172,7 +3172,7 @@\n (define_expand \"cmptf\"\n   [(set (cc0) (compare (match_operand:TF 0 \"general_operand\" \"\")\n \t\t       (match_operand:TF 1 \"general_operand\" \"\")))]\n-  \"TARGET_FP && TARGET_HAS_XFLOATING_LIBS\"\n+  \"TARGET_HAS_XFLOATING_LIBS\"\n   \"\n {\n   alpha_compare.op0 = operands[0];"}]}