{"sha": "62ec3fe8f1bb871c19b6d30b3051443293276d54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJlYzNmZThmMWJiODcxYzE5YjZkMzBiMzA1MTQ0MzI5MzI3NmQ1NA==", "commit": {"author": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2018-11-14T16:02:03Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2018-11-14T16:02:03Z"}, "message": "Add comment\n\nFrom-SVN: r266149", "tree": {"sha": "d7030d47a2287404683cae0421da2a00c2b55800", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7030d47a2287404683cae0421da2a00c2b55800"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62ec3fe8f1bb871c19b6d30b3051443293276d54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62ec3fe8f1bb871c19b6d30b3051443293276d54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62ec3fe8f1bb871c19b6d30b3051443293276d54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62ec3fe8f1bb871c19b6d30b3051443293276d54/comments", "author": null, "committer": null, "parents": [{"sha": "725891a0a46961602cad6f81dd9c8f0ee3d93cea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/725891a0a46961602cad6f81dd9c8f0ee3d93cea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/725891a0a46961602cad6f81dd9c8f0ee3d93cea"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "87082ad10d2a907b2b309ad16debecd9917d16dc", "filename": "gcc/gimplify.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ec3fe8f1bb871c19b6d30b3051443293276d54/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ec3fe8f1bb871c19b6d30b3051443293276d54/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=62ec3fe8f1bb871c19b6d30b3051443293276d54", "patch": "@@ -1959,7 +1959,9 @@ last_stmt_in_scope (gimple *stmt)\n }\n \n /* Collect interesting labels in LABELS and return the statement preceding\n-   another case label, or a user-defined label.  */\n+   another case label, or a user-defined label.  Store a location useful\n+   to give warnings at *PREVLOC (usually the location of the returned\n+   statement or of its surrounding scope).  */\n \n static gimple *\n collect_fallthrough_labels (gimple_stmt_iterator *gsi_p,"}]}