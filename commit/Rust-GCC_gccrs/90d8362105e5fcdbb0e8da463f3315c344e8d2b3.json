{"sha": "90d8362105e5fcdbb0e8da463f3315c344e8d2b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBkODM2MjEwNWU1ZmNkYmIwZThkYTQ2M2YzMzE1YzM0NGU4ZDJiMw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2004-12-21T00:49:45Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2004-12-21T00:49:45Z"}, "message": "re PR libgcj/15001 ([3.4 only] Using JNI with interpreter and interface methods yields SIGSEGV)\n\n\tPR java/15001\n\t* testsuite/libjava.jni/iface.c: New file.\n\t* testsuite/libjava.jni/iface.out: New file.\n\t* testsuite/libjava.jni/iface.java: New file.\n\nFrom-SVN: r92445", "tree": {"sha": "ebad3395e1e19c088c5c220227ad303db595561a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebad3395e1e19c088c5c220227ad303db595561a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90d8362105e5fcdbb0e8da463f3315c344e8d2b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d8362105e5fcdbb0e8da463f3315c344e8d2b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90d8362105e5fcdbb0e8da463f3315c344e8d2b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d8362105e5fcdbb0e8da463f3315c344e8d2b3/comments", "author": null, "committer": null, "parents": [{"sha": "f8c940c55c841f14853e2aba9399f86853a4e19a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8c940c55c841f14853e2aba9399f86853a4e19a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8c940c55c841f14853e2aba9399f86853a4e19a"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "e307a8370fee97203efdb4b1f383810b52a351fe", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d8362105e5fcdbb0e8da463f3315c344e8d2b3/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d8362105e5fcdbb0e8da463f3315c344e8d2b3/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=90d8362105e5fcdbb0e8da463f3315c344e8d2b3", "patch": "@@ -1,3 +1,10 @@\n+2004-12-20  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR java/15001\n+\t* testsuite/libjava.jni/iface.c: New file.\n+\t* testsuite/libjava.jni/iface.out: New file.\n+\t* testsuite/libjava.jni/iface.java: New file.\n+\n 2004-12-19  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* include/config.h.in: Regenerate."}, {"sha": "6d33dc01f25251837938ae596b0172a2ceef33cf", "filename": "libjava/testsuite/libjava.jni/iface.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d8362105e5fcdbb0e8da463f3315c344e8d2b3/libjava%2Ftestsuite%2Flibjava.jni%2Fiface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d8362105e5fcdbb0e8da463f3315c344e8d2b3/libjava%2Ftestsuite%2Flibjava.jni%2Fiface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fiface.c?ref=90d8362105e5fcdbb0e8da463f3315c344e8d2b3", "patch": "@@ -0,0 +1,40 @@\n+#include <stdlib.h>\n+#include <stdio.h>\n+#include <iface.h>\n+\n+void check (JNIEnv *);\n+\n+void check(JNIEnv *env)\n+{\n+  if ((*env)->ExceptionCheck(env) != JNI_FALSE)\n+    {\n+      fprintf(stderr, \"UNEXPECTED EXCEPTION\\n\");\n+      exit(-1);\n+    }\n+}\n+\n+void\n+Java_iface_doCalls (JNIEnv *env, jobject self, jobject other)\n+{\n+  jclass iface_class, comparable_class;\n+  jmethodID iface_meth, comparable_meth;\n+  jvalue args[1];\n+\n+  iface_class = (*env)->FindClass(env, \"iface\");\n+  check (env);\n+  comparable_class = (*env)->FindClass (env, \"mycomp\");\n+  check (env);\n+\n+  iface_meth = (*env)->GetMethodID (env, iface_class, \"compareTo\",\n+\t\t\t\t    \"(Ljava/lang/Object;)I\");\n+  check (env);\n+  comparable_meth = (*env)->GetMethodID (env, comparable_class, \"compareTo\",\n+\t\t\t\t\t \"(Ljava/lang/Object;)I\");\n+  check (env);\n+\n+  args[0].l = other;\n+  (*env)->CallObjectMethodA (env, self, iface_meth, args);\n+  check (env);\n+  (*env)->CallObjectMethodA (env, self, comparable_meth, args);\n+  check (env);\n+}"}, {"sha": "c878ae362eaafcf147224449d492f5a3a72bda98", "filename": "libjava/testsuite/libjava.jni/iface.java", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d8362105e5fcdbb0e8da463f3315c344e8d2b3/libjava%2Ftestsuite%2Flibjava.jni%2Fiface.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d8362105e5fcdbb0e8da463f3315c344e8d2b3/libjava%2Ftestsuite%2Flibjava.jni%2Fiface.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fiface.java?ref=90d8362105e5fcdbb0e8da463f3315c344e8d2b3", "patch": "@@ -0,0 +1,27 @@\n+// JNI calls via an interface method were broken in a couple releases.\n+\n+interface mycomp\n+{\n+  int compareTo(Object x);\n+}\n+\n+public class iface implements mycomp\n+{\n+  static\n+  {\n+    System.loadLibrary(\"iface\");\n+  }\n+\n+  public int compareTo (Object x)\n+  {\n+    System.out.println (\"hi maude\");\n+    return 3;\n+  }\n+\n+  public native void doCalls(Object x);\n+\n+  public static void main (String[] args)\n+  {\n+    new iface().doCalls(args);\n+  }\n+}"}, {"sha": "4eb3a1b43f7eb70c439c553eacf6c3e80849778c", "filename": "libjava/testsuite/libjava.jni/iface.out", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d8362105e5fcdbb0e8da463f3315c344e8d2b3/libjava%2Ftestsuite%2Flibjava.jni%2Fiface.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d8362105e5fcdbb0e8da463f3315c344e8d2b3/libjava%2Ftestsuite%2Flibjava.jni%2Fiface.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fiface.out?ref=90d8362105e5fcdbb0e8da463f3315c344e8d2b3", "patch": "@@ -0,0 +1,2 @@\n+hi maude\n+hi maude"}]}