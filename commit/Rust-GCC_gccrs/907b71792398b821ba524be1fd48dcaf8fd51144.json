{"sha": "907b71792398b821ba524be1fd48dcaf8fd51144", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA3YjcxNzkyMzk4YjgyMWJhNTI0YmUxZmQ0OGRjYWY4ZmQ1MTE0NA==", "commit": {"author": {"name": "Timothy Moore", "email": "moore@gnu.org", "date": "1992-10-15T15:57:37Z"}, "committer": {"name": "Timothy Moore", "email": "moore@gnu.org", "date": "1992-10-15T15:57:37Z"}, "message": "(INITIAL_FRAME_POINTER_OFFSET): Pass extra null parameter\n        to compute_frame_size..\n\nFrom-SVN: r2478", "tree": {"sha": "4f503e0c8171ac53762de6a757ccc8f0543408ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f503e0c8171ac53762de6a757ccc8f0543408ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/907b71792398b821ba524be1fd48dcaf8fd51144", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/907b71792398b821ba524be1fd48dcaf8fd51144", "html_url": "https://github.com/Rust-GCC/gccrs/commit/907b71792398b821ba524be1fd48dcaf8fd51144", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/907b71792398b821ba524be1fd48dcaf8fd51144/comments", "author": null, "committer": null, "parents": [{"sha": "8a9c76f3c232a8c6a38c2616419d8a55ecaf4e98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a9c76f3c232a8c6a38c2616419d8a55ecaf4e98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a9c76f3c232a8c6a38c2616419d8a55ecaf4e98"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "63541f8b81846084096e593dfc55fdc15561488f", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/907b71792398b821ba524be1fd48dcaf8fd51144/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/907b71792398b821ba524be1fd48dcaf8fd51144/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=907b71792398b821ba524be1fd48dcaf8fd51144", "patch": "@@ -434,7 +434,7 @@ extern int leaf_function;\n    it's not, there's no point in trying to eliminate the\n    frame pointer.  If it is a leaf function, we guessed right!  */\n #define INITIAL_FRAME_POINTER_OFFSET(VAR) \\\n-  do { int __fsize = compute_frame_size (get_frame_size (), 1) + 32;\t\\\n+  do { int __fsize = compute_frame_size (get_frame_size (), 1, 0) + 32;\t\\\n        (VAR) = -(TARGET_SNAKE ? (__fsize + 63) & ~63 : __fsize); } while (0)\n \n /* Base register for access to arguments of the function.  */\n@@ -1228,7 +1228,7 @@ extern union tree_node *current_function_decl;\n   if (memory_address_p (MODE, X))\t\t\t\t\\\n     goto WIN;\t\t\t\t\t\t\t\\\n   if (flag_pic) (X) = legitimize_pic_address (X, MODE, gen_reg_rtx (Pmode));\\\n-  else if ((GET_CODE (X) == SYMBOL_REF && read_only_operand (X))\t\\\n+  else if ((GET_CODE (X) == SYMBOL_REF && read_only_operand (X))\\\n \t    || GET_CODE (X) == LABEL_REF)\t\t\t\\\n     (X) = gen_rtx (LO_SUM, Pmode,\t\t\t\t\\\n \t\t   copy_to_mode_reg (Pmode, gen_rtx (HIGH, Pmode, X)), X); \\"}]}