{"sha": "ddff61d69b48b6962dc925d5835f86aef34da136", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRmZjYxZDY5YjQ4YjY5NjJkYzkyNWQ1ODM1Zjg2YWVmMzRkYTEzNg==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2014-12-04T02:13:22Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2014-12-04T02:13:22Z"}, "message": "rs6000.md (floatsidf2_internal): Use std::swap.\n\n        * config/rs6000/rs6000.md (floatsidf2_internal): Use std::swap.\n        (floatunssidf2_internal): Same.\n        * config/rs6000/rs6000.c (rs6000_emit_vector_compare): Same.\n        (rs6000_emit_int_cmove): Same.\n        (rs6000_sched_reorder): Same.\n        (altivec_expand_vec_perm_const): Same.\n        (rs6000_expand_vec_perm_const_1): Same.\n\nFrom-SVN: r218339", "tree": {"sha": "68a8b7b19284a37860398840acf1691700de5890", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68a8b7b19284a37860398840acf1691700de5890"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddff61d69b48b6962dc925d5835f86aef34da136", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddff61d69b48b6962dc925d5835f86aef34da136", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddff61d69b48b6962dc925d5835f86aef34da136", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddff61d69b48b6962dc925d5835f86aef34da136/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "98cae2dba430c817d5ca5c56c6d1684c37d731d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98cae2dba430c817d5ca5c56c6d1684c37d731d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98cae2dba430c817d5ca5c56c6d1684c37d731d6"}], "stats": {"total": 41, "additions": 17, "deletions": 24}, "files": [{"sha": "aeb6acb5e259bae0054693837100c963fe99c48b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddff61d69b48b6962dc925d5835f86aef34da136/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddff61d69b48b6962dc925d5835f86aef34da136/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ddff61d69b48b6962dc925d5835f86aef34da136", "patch": "@@ -1,3 +1,13 @@\n+2014-12-03  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* config/rs6000/rs6000.md (floatsidf2_internal): Use std::swap.\n+\t(floatunssidf2_internal): Same.\n+\t* config/rs6000/rs6000.c (rs6000_emit_vector_compare): Same.\n+\t(rs6000_emit_int_cmove): Same.\n+\t(rs6000_sched_reorder): Same.\n+\t(altivec_expand_vec_perm_const): Same.\n+\t(rs6000_expand_vec_perm_const_1): Same.\n+\n 2014-12-03  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \tPR rtl-optimization/64010"}, {"sha": "8c492cce7cf482ca5a76765dc705ce74f8789c57", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 16, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddff61d69b48b6962dc925d5835f86aef34da136/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddff61d69b48b6962dc925d5835f86aef34da136/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=ddff61d69b48b6962dc925d5835f86aef34da136", "patch": "@@ -19796,12 +19796,7 @@ rs6000_emit_vector_compare (enum rtx_code rcode,\n   if (try_again)\n     {\n       if (swap_operands)\n-\t{\n-\t  rtx tmp;\n-\t  tmp = op0;\n-\t  op0 = op1;\n-\t  op1 = tmp;\n-\t}\n+\tstd::swap (op0, op1);\n \n       mask = rs6000_emit_vector_compare_inner (rcode, op0, op1);\n       if (mask)\n@@ -20114,9 +20109,7 @@ rs6000_emit_int_cmove (rtx dest, rtx op, rtx true_cond, rtx false_cond)\n     default:\n       /* We need to swap the sense of the comparison.  */\n       {\n-\trtx t = true_cond;\n-\ttrue_cond = false_cond;\n-\tfalse_cond = t;\n+\tstd::swap (false_cond, true_cond);\n \tPUT_CODE (condition_rtx, reverse_condition (cond_code));\n       }\n       break;\n@@ -27496,11 +27489,7 @@ rs6000_sched_reorder (FILE *dump ATTRIBUTE_UNUSED, int sched_verbose,\n     if (is_nonpipeline_insn (ready[n_ready - 1])\n         && (recog_memoized (ready[n_ready - 2]) > 0))\n       /* Simply swap first two insns.  */\n-      {\n-\trtx_insn *tmp = ready[n_ready - 1];\n-\tready[n_ready - 1] = ready[n_ready - 2];\n-\tready[n_ready - 2] = tmp;\n-      }\n+      std::swap (ready[n_ready - 1], ready[n_ready - 2]);\n   }\n \n   if (rs6000_cpu == PROCESSOR_POWER6)\n@@ -31305,7 +31294,7 @@ altivec_expand_vec_perm_const (rtx operands[4])\n              (or swapped back) to ensure proper right-to-left numbering\n              from 0 to 2N-1.  */\n \t  if (swapped ^ !BYTES_BIG_ENDIAN)\n-\t    x = op0, op0 = op1, op1 = x;\n+\t    std::swap (op0, op1);\n \t  if (imode != V16QImode)\n \t    {\n \t      op0 = gen_lowpart (imode, op0);\n@@ -31361,7 +31350,7 @@ rs6000_expand_vec_perm_const_1 (rtx target, rtx op0, rtx op1,\n \treturn false;\n       perm0 -= 2;\n       perm1 += 2;\n-      x = op0, op0 = op1, op1 = x;\n+      std::swap (op0, op1);\n     }\n   /* If the second selector does not come from the second operand, fail.  */\n   else if ((perm1 & 2) == 0)"}, {"sha": "fbf3c16e3e45588502b0cf63bae7e7a1c698a4be", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddff61d69b48b6962dc925d5835f86aef34da136/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddff61d69b48b6962dc925d5835f86aef34da136/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=ddff61d69b48b6962dc925d5835f86aef34da136", "patch": "@@ -5546,10 +5546,7 @@\n   highword = adjust_address (operands[4], SImode, 0);\n   lowword = adjust_address (operands[4], SImode, 4);\n   if (! WORDS_BIG_ENDIAN)\n-    {\n-      rtx tmp;\n-      tmp = highword; highword = lowword; lowword = tmp;\n-    }\n+    std::swap (lowword, highword);\n \n   emit_insn (gen_xorsi3 (operands[6], operands[1],\n \t\t\t GEN_INT (~ (HOST_WIDE_INT) 0x7fffffff)));\n@@ -5657,10 +5654,7 @@\n   highword = adjust_address (operands[4], SImode, 0);\n   lowword = adjust_address (operands[4], SImode, 4);\n   if (! WORDS_BIG_ENDIAN)\n-    {\n-      rtx tmp;\n-      tmp = highword; highword = lowword; lowword = tmp;\n-    }\n+    std::swap (lowword, highword);\n \n   emit_move_insn (lowword, operands[1]);\n   emit_move_insn (highword, operands[2]);"}]}