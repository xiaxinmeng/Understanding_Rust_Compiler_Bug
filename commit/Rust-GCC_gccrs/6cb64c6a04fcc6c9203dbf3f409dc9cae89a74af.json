{"sha": "6cb64c6a04fcc6c9203dbf3f409dc9cae89a74af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNiNjRjNmEwNGZjYzZjOTIwM2RiZjNmNDA5ZGM5Y2FlODlhNzRhZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-07T23:33:16Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-07T23:33:16Z"}, "message": "(TRAMPOLINE_TEMPLATE, TRANSFER_FROM_TRAMPOLINE): Fix assembler syntax\nerrors.\n\nFrom-SVN: r9336", "tree": {"sha": "b73f91d4b02c3f1173396e3c21c63a581902bfbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b73f91d4b02c3f1173396e3c21c63a581902bfbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cb64c6a04fcc6c9203dbf3f409dc9cae89a74af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cb64c6a04fcc6c9203dbf3f409dc9cae89a74af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cb64c6a04fcc6c9203dbf3f409dc9cae89a74af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cb64c6a04fcc6c9203dbf3f409dc9cae89a74af/comments", "author": null, "committer": null, "parents": [{"sha": "bd8cb5e27fadcb450ea6af570fe3edf7056fcf65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd8cb5e27fadcb450ea6af570fe3edf7056fcf65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd8cb5e27fadcb450ea6af570fe3edf7056fcf65"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "63733367913234e777bdab1befac76c751a478b4", "filename": "gcc/config/ns32k/ns32k.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cb64c6a04fcc6c9203dbf3f409dc9cae89a74af/gcc%2Fconfig%2Fns32k%2Fns32k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cb64c6a04fcc6c9203dbf3f409dc9cae89a74af/gcc%2Fconfig%2Fns32k%2Fns32k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.h?ref=6cb64c6a04fcc6c9203dbf3f409dc9cae89a74af", "patch": "@@ -755,7 +755,7 @@ enum reg_class { NO_REGS, GENERAL_REGS, FLOAT_REGS, GEN_AND_FP_REGS,\n    of a trampoline, leaving space for the variable parts.  */\n \n /* On the 32k, the trampoline looks like this:\n-     addr  .,r2\n+     addr  0(pc),r2\n      jump  @__trampoline\n      .int STATIC\n      .int FUNCTION\n@@ -765,7 +765,7 @@ operands on the 32k are stored).  */\n \n #define TRAMPOLINE_TEMPLATE(FILE)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n-  fprintf (FILE, \"\\taddr .,r2\\n\" );\t\t\t\t\t\\\n+  fprintf (FILE, \"\\taddr 0(pc),r2\\n\" );\t\t\t\t\t\\\n   fprintf (FILE, \"\\tjump \" );\t\t\t\t\t\t\\\n   PUT_ABSOLUTE_PREFIX (FILE);\t\t\t\t\t\t\\\n   fprintf (FILE, \"__trampoline\\n\" );\t\t\t\t\t\\\n@@ -798,9 +798,10 @@ operands on the 32k are stored).  */\n void\t\t\t\t\t\\\n __transfer_from_trampoline ()\t\t\\\n {\t\t\t\t\t\\\n-  asm (\"___trampoline:\");\t\t\\\n+  asm (\".globl __trampoline\");\t\t\\\n+  asm (\"__trampoline:\");\t\t\\\n   asm (\"movd 16(r2),tos\");\t\t\\\n-  asm (\"movd 12(r2),r2\");\t\t\\\n+  asm (\"movd 12(r2),r1\");\t\t\\\n   asm (\"ret 0\");\t\t\t\\\n }\n \f"}]}