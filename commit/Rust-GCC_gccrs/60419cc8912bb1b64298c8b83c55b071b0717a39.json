{"sha": "60419cc8912bb1b64298c8b83c55b071b0717a39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA0MTljYzg5MTJiYjFiNjQyOThjOGI4M2M1NWIwNzFiMDcxN2EzOQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-08-07T08:54:53Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-08-07T08:54:53Z"}, "message": "tree-ssa.c (useless_type_conversion_p_1): Only for types that require structural equality defer to the langhook.\n\n2009-08-07  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa.c (useless_type_conversion_p_1): Only for types\n\tthat require structural equality defer to the langhook.\n\nFrom-SVN: r150559", "tree": {"sha": "2bd7ee4870a404eae65aa88e36ba3a72231f2af6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bd7ee4870a404eae65aa88e36ba3a72231f2af6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60419cc8912bb1b64298c8b83c55b071b0717a39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60419cc8912bb1b64298c8b83c55b071b0717a39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60419cc8912bb1b64298c8b83c55b071b0717a39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60419cc8912bb1b64298c8b83c55b071b0717a39/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "685b0d134d7e7dc210a85bdfbd189c9f69f82a62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/685b0d134d7e7dc210a85bdfbd189c9f69f82a62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/685b0d134d7e7dc210a85bdfbd189c9f69f82a62"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "b9304a156bcee9664acc02160954fc0dfd0ca5fd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60419cc8912bb1b64298c8b83c55b071b0717a39/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60419cc8912bb1b64298c8b83c55b071b0717a39/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60419cc8912bb1b64298c8b83c55b071b0717a39", "patch": "@@ -1,3 +1,8 @@\n+2009-08-07  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa.c (useless_type_conversion_p_1): Only for types\n+\tthat require structural equality defer to the langhook.\n+\n 2009-08-07  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-prop.h (enum jump_func_type): New value IPA_JF_ANCESTOR, changed"}, {"sha": "ddd4cfb7456a15f3a0478ec538ccf4e5007fa342", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60419cc8912bb1b64298c8b83c55b071b0717a39/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60419cc8912bb1b64298c8b83c55b071b0717a39/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=60419cc8912bb1b64298c8b83c55b071b0717a39", "patch": "@@ -1073,11 +1073,11 @@ useless_type_conversion_p_1 (tree outer_type, tree inner_type)\n   else if (AGGREGATE_TYPE_P (inner_type)\n \t   && TREE_CODE (inner_type) == TREE_CODE (outer_type))\n     {\n-      /* ???  This seems to be necessary even for aggregates that don't\n-\t have TYPE_STRUCTURAL_EQUALITY_P set.  */\n+      if (TYPE_STRUCTURAL_EQUALITY_P (outer_type)\n+\t  || TYPE_STRUCTURAL_EQUALITY_P (inner_type))\n+\treturn lang_hooks.types_compatible_p (inner_type, outer_type);\n \n-      /* ???  This should eventually just return false.  */\n-      return lang_hooks.types_compatible_p (inner_type, outer_type);\n+      return false;\n     }\n   \n   return false;"}]}