{"sha": "ce23293b0a4416b1c0770b2ad151ac4b23df4aca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2UyMzI5M2IwYTQ0MTZiMWMwNzcwYjJhZDE1MWFjNGIyM2RmNGFjYQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-01-02T13:09:42Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-01-02T13:09:42Z"}, "message": "avr.opt (-mbranch-cost): Fix double definition of this option introduced in r180739.\n\n\t* config/avr/avr.opt (-mbranch-cost): Fix double definition of\n\tthis option introduced in r180739.\n\nFrom-SVN: r182798", "tree": {"sha": "d4e367b048e431e197658ac6a66ae98dea1f7be0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4e367b048e431e197658ac6a66ae98dea1f7be0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce23293b0a4416b1c0770b2ad151ac4b23df4aca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce23293b0a4416b1c0770b2ad151ac4b23df4aca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce23293b0a4416b1c0770b2ad151ac4b23df4aca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce23293b0a4416b1c0770b2ad151ac4b23df4aca/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "884f56d1e1ee1a31d6ac75c8f3b3989b8118271e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/884f56d1e1ee1a31d6ac75c8f3b3989b8118271e"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "e86e8cd31d6e35718e3063ecc0475074cb8e87bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce23293b0a4416b1c0770b2ad151ac4b23df4aca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce23293b0a4416b1c0770b2ad151ac4b23df4aca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce23293b0a4416b1c0770b2ad151ac4b23df4aca", "patch": "@@ -1,3 +1,8 @@\n+2012-01-02  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/avr.opt (-mbranch-cost): Fix double definition of\n+\tthis option introduced in r180739.\n+\n 2012-01-02  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/51345"}, {"sha": "d6e73ee09144deeb455d35ba07906758eced9626", "filename": "gcc/config/avr/avr.opt", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce23293b0a4416b1c0770b2ad151ac4b23df4aca/gcc%2Fconfig%2Favr%2Favr.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce23293b0a4416b1c0770b2ad151ac4b23df4aca/gcc%2Fconfig%2Favr%2Favr.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.opt?ref=ce23293b0a4416b1c0770b2ad151ac4b23df4aca", "patch": "@@ -73,7 +73,3 @@ Accumulate outgoing function arguments and acquire/release the needed stack spac\n mstrict-X\n Target Report Var(avr_strict_X) Init(0)\n When accessing RAM, use X as imposed by the hardware, i.e. just use pre-decrement, post-increment and indirect addressing with the X register.  Without this option, the compiler may assume that there is an addressing mode X+const similar to Y+const and Z+const and emit instructions to emulate such an addressing mode for X.\n-\n-mbranch-cost=\n-Target Report RejectNegative Joined UInteger Var(avr_branch_cost) Init(0)\n-Set the cost of a branch instruction.  Default value is 0."}]}