{"sha": "71103b610487c068e1bb379724f6bba1eafedb08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzExMDNiNjEwNDg3YzA2OGUxYmIzNzk3MjRmNmJiYTFlYWZlZGIwOA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2017-01-27T14:25:59Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2017-01-27T14:25:59Z"}, "message": "docs: Add __GIMPLE and __RTL to the \"Internals\" doc\n\ngcc/ChangeLog:\n\t* doc/sourcebuild.texi (Testsuites): Add \"GIMPLE Tests\" and\n\t\"RTL Tests\" to menu.\n\t(GIMPLE Tests): New node.\n\t(RTL Tests): New node.\n\nFrom-SVN: r244977", "tree": {"sha": "29ae1a3400d101391f5a01dc2a9059ab746d64c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29ae1a3400d101391f5a01dc2a9059ab746d64c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71103b610487c068e1bb379724f6bba1eafedb08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71103b610487c068e1bb379724f6bba1eafedb08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71103b610487c068e1bb379724f6bba1eafedb08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71103b610487c068e1bb379724f6bba1eafedb08/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "40b6bff965d004095b06ad3827e8221ae5bcc25e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40b6bff965d004095b06ad3827e8221ae5bcc25e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40b6bff965d004095b06ad3827e8221ae5bcc25e"}], "stats": {"total": 100, "additions": 100, "deletions": 0}, "files": [{"sha": "c70fb93be346d2c3e38c8b79c0985c23665aa616", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71103b610487c068e1bb379724f6bba1eafedb08/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71103b610487c068e1bb379724f6bba1eafedb08/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=71103b610487c068e1bb379724f6bba1eafedb08", "patch": "@@ -1,3 +1,10 @@\n+2017-01-27  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* doc/sourcebuild.texi (Testsuites): Add \"GIMPLE Tests\" and\n+\t\"RTL Tests\" to menu.\n+\t(GIMPLE Tests): New node.\n+\t(RTL Tests): New node.\n+\n 2017-01-27  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/79245"}, {"sha": "0dc434824b81cb0401fcc9fa6cead98412c7c82a", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71103b610487c068e1bb379724f6bba1eafedb08/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71103b610487c068e1bb379724f6bba1eafedb08/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=71103b610487c068e1bb379724f6bba1eafedb08", "patch": "@@ -863,6 +863,8 @@ here; FIXME: document the others.\n * profopt Testing:: Support for testing profile-directed optimizations.\n * compat Testing::  Support for testing binary compatibility.\n * Torture Tests::   Support for torture testing using multiple options.\n+* GIMPLE Tests::    Support for testing GIMPLE passes.\n+* RTL Tests::       Support for testing RTL passes.\n @end menu\n \n @node Test Idioms\n@@ -2931,3 +2933,94 @@ set ADDITIONAL_TORTURE_OPTIONS  [list \\\n   @{ -O2 -ftree-loop-linear @} \\\n   @{ -O2 -fpeel-loops @} ]\n @end smallexample\n+\n+@node GIMPLE Tests\n+@section Support for testing GIMPLE passes\n+\n+As of gcc 7, C functions can be tagged with @code{__GIMPLE} to indicate\n+that the function body will be GIMPLE, rather than C.  The compiler requires\n+the option @option{-fgimple} to enable this functionality.  For example:\n+\n+@smallexample\n+/* @{ dg-do compile @} */\n+/* @{ dg-options \"-O -fgimple\" @} */\n+\n+void __GIMPLE (startwith (\"dse2\")) foo ()\n+@{\n+  int a;\n+\n+bb_2:\n+  if (a > 4)\n+    goto bb_3;\n+  else\n+    goto bb_4;\n+\n+bb_3:\n+  a_2 = 10;\n+  goto bb_5;\n+\n+bb_4:\n+  a_3 = 20;\n+\n+bb_5:\n+  a_1 = __PHI (bb_3: a_2, bb_4: a_3);\n+  a_4 = a_1 + 4;\n+\n+  return;\n+@}\n+@end smallexample\n+\n+The @code{startwith} argument indicates at which pass to begin.\n+\n+Use the dump modifier @code{-gimple} (e.g. @option{-fdump-tree-all-gimple})\n+to make tree dumps more closely follow the format accepted by the GIMPLE\n+parser.\n+\n+Example DejaGnu tests of GIMPLE can be seen in the source tree at\n+@file{gcc/testsuite/gcc.dg/gimplefe-*.c}.\n+\n+The @code{__GIMPLE} parser is integrated with the C tokenizer and\n+preprocessor, so it should be possible to use macros to build out\n+test coverage.\n+\n+@node RTL Tests\n+@section Support for testing RTL passes\n+\n+As of gcc 7, C functions can be tagged with @code{__RTL} to indicate that the\n+function body will be RTL, rather than C.  For example:\n+\n+@smallexample\n+double __RTL (startwith (\"ira\")) test (struct foo *f, const struct bar *b)\n+@{\n+  (function \"test\"\n+     [...snip; various directives go in here...]\n+  ) ;; function \"test\"\n+@}\n+@end smallexample\n+\n+The @code{startwith} argument indicates at which pass to begin.\n+\n+The parser expects the RTL body to be in the format emitted by this\n+dumping function:\n+\n+@smallexample\n+DEBUG_FUNCTION void\n+print_rtx_function (FILE *outfile, function *fn, bool compact);\n+@end smallexample\n+\n+when \"compact\" is true.  So you can capture RTL in the correct format\n+from the debugger using:\n+\n+@smallexample\n+(gdb) print_rtx_function (stderr, cfun, true);\n+@end smallexample\n+\n+and copy and paste the output into the body of the C function.\n+\n+Example DejaGnu tests of RTL can be seen in the source tree under\n+@file{gcc/testsuite/gcc.dg/rtl}.\n+\n+The @code{__RTL} parser is not integrated with the C tokenizer or\n+preprocessor, and works simply by reading the relevant lines within\n+the braces.  In particular, the RTL body must be on separate lines from\n+the enclosing braces, and the preprocessor is not usable within it."}]}