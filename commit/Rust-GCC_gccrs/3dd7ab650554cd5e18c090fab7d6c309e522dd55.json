{"sha": "3dd7ab650554cd5e18c090fab7d6c309e522dd55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RkN2FiNjUwNTU0Y2Q1ZTE4YzA5MGZhYjdkNmMzMDllNTIyZGQ1NQ==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2005-01-05T18:53:08Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2005-01-05T18:53:08Z"}, "message": "arm.c (arm_return_in_memory): Treat complex types as aggregates for AAPCS ABIs.\n\n2004-01-05  Julian Brown  <julian@codesourcery.com>\n\n\t* config/arm/arm.c (arm_return_in_memory): Treat complex types\n\tas aggregates for AAPCS ABIs.\n\nFrom-SVN: r92963", "tree": {"sha": "10a05943ee24b032de6268a06111c9d7c1650f28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10a05943ee24b032de6268a06111c9d7c1650f28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3dd7ab650554cd5e18c090fab7d6c309e522dd55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dd7ab650554cd5e18c090fab7d6c309e522dd55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dd7ab650554cd5e18c090fab7d6c309e522dd55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dd7ab650554cd5e18c090fab7d6c309e522dd55/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "59d8fe27225bbdeb958692a320caf77eb8fc9f17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59d8fe27225bbdeb958692a320caf77eb8fc9f17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59d8fe27225bbdeb958692a320caf77eb8fc9f17"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "39da29dadc6361d372b999db448b959f27af3415", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dd7ab650554cd5e18c090fab7d6c309e522dd55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dd7ab650554cd5e18c090fab7d6c309e522dd55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3dd7ab650554cd5e18c090fab7d6c309e522dd55", "patch": "@@ -1,3 +1,8 @@\n+2004-01-05  Julian Brown  <julian@codesourcery.com>\n+\n+\t* config/arm/arm.c (arm_return_in_memory): Treat complex types\n+\tas aggregates for AAPCS ABIs.\n+\n 2005-01-05  Stan Shebs  <shebs@apple.com>\n \n \t* unwind-dw2-fde-darwin.c (examine_objects): Use 64-bit"}, {"sha": "65820219394e56ace5e44f46accbbcab0d97b974", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dd7ab650554cd5e18c090fab7d6c309e522dd55/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dd7ab650554cd5e18c090fab7d6c309e522dd55/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=3dd7ab650554cd5e18c090fab7d6c309e522dd55", "patch": "@@ -2296,8 +2296,10 @@ arm_return_in_memory (tree type)\n {\n   HOST_WIDE_INT size;\n \n-  if (!AGGREGATE_TYPE_P (type))\n-    /* All simple types are returned in registers.  */\n+  if (!AGGREGATE_TYPE_P (type) &&\n+      !(TARGET_AAPCS_BASED && TREE_CODE (type) == COMPLEX_TYPE))\n+    /* All simple types are returned in registers.\n+       For AAPCS, complex types are treated the same as aggregates.  */\n     return 0;\n \n   size = int_size_in_bytes (type);"}]}