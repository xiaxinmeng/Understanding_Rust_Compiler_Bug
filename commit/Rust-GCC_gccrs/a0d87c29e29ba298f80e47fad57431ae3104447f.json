{"sha": "a0d87c29e29ba298f80e47fad57431ae3104447f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBkODdjMjllMjliYTI5OGY4MGU0N2ZhZDU3NDMxYWUzMTA0NDQ3Zg==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2019-06-03T17:35:47Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-06-03T17:35:47Z"}, "message": "bb-reorder.c (copy_bb_p): Don't overflow size calculation.\n\n\t* bb-reorder.c (copy_bb_p): Don't overflow size calculation.\n\t(get_uncond_jump_length): Assert length less than INT_MAX and\n\tnon-negative.\n\nFrom-SVN: r271877", "tree": {"sha": "1f67eb71410c97fcac80dafc5aa3f008ebabd34e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f67eb71410c97fcac80dafc5aa3f008ebabd34e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0d87c29e29ba298f80e47fad57431ae3104447f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0d87c29e29ba298f80e47fad57431ae3104447f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0d87c29e29ba298f80e47fad57431ae3104447f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0d87c29e29ba298f80e47fad57431ae3104447f/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7cfe71d1d271cd6f5d181a75a25d535e67448f0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cfe71d1d271cd6f5d181a75a25d535e67448f0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cfe71d1d271cd6f5d181a75a25d535e67448f0d"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "ae20f9579aa2ca6a52accdd88d729410a8d87e24", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d87c29e29ba298f80e47fad57431ae3104447f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d87c29e29ba298f80e47fad57431ae3104447f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0d87c29e29ba298f80e47fad57431ae3104447f", "patch": "@@ -1,3 +1,9 @@\n+2019-06-03  Alan Modra  <amodra@gmail.com>\n+\n+\t* bb-reorder.c (copy_bb_p): Don't overflow size calculation.\n+\t(get_uncond_jump_length): Assert length less than INT_MAX and\n+\tnon-negative.\n+\n 2019-06-03  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \tPR middle-end/64242"}, {"sha": "c21d204627e5205da09e60b17d909a7386ab9e3f", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d87c29e29ba298f80e47fad57431ae3104447f/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d87c29e29ba298f80e47fad57431ae3104447f/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=a0d87c29e29ba298f80e47fad57431ae3104447f", "patch": "@@ -1357,8 +1357,8 @@ connect_traces (int n_traces, struct trace *traces)\n static bool\n copy_bb_p (const_basic_block bb, int code_may_grow)\n {\n-  int size = 0;\n-  int max_size = uncond_jump_length;\n+  unsigned int size = 0;\n+  unsigned int max_size = uncond_jump_length;\n   rtx_insn *insn;\n \n   if (EDGE_COUNT (bb->preds) < 2)\n@@ -1376,7 +1376,11 @@ copy_bb_p (const_basic_block bb, int code_may_grow)\n   FOR_BB_INSNS (bb, insn)\n     {\n       if (INSN_P (insn))\n-\tsize += get_attr_min_length (insn);\n+\t{\n+\t  size += get_attr_min_length (insn);\n+\t  if (size > max_size)\n+\t    break;\n+\t}\n     }\n \n   if (size <= max_size)\n@@ -1385,7 +1389,7 @@ copy_bb_p (const_basic_block bb, int code_may_grow)\n   if (dump_file)\n     {\n       fprintf (dump_file,\n-\t       \"Block %d can't be copied because its size = %d.\\n\",\n+\t       \"Block %d can't be copied because its size = %u.\\n\",\n \t       bb->index, size);\n     }\n \n@@ -1397,14 +1401,15 @@ copy_bb_p (const_basic_block bb, int code_may_grow)\n int\n get_uncond_jump_length (void)\n {\n-  int length;\n+  unsigned int length;\n \n   start_sequence ();\n   rtx_code_label *label = emit_label (gen_label_rtx ());\n   rtx_insn *jump = emit_jump_insn (targetm.gen_jump (label));\n   length = get_attr_min_length (jump);\n   end_sequence ();\n \n+  gcc_assert (length < INT_MAX);\n   return length;\n }\n "}]}