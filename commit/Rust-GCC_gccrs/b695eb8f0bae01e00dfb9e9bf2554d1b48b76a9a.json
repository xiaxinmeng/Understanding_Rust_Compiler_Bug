{"sha": "b695eb8f0bae01e00dfb9e9bf2554d1b48b76a9a", "node_id": "C_kwDOANBUbNoAKGI2OTVlYjhmMGJhZTAxZTAwZGZiOWU5YmYyNTU0ZDFiNDhiNzZhOWE", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-02-25T12:09:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-25T12:09:43Z"}, "message": "Merge #970\n\n970: Add file!() builtin r=CohenArthur a=CohenArthur\n\n\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>", "tree": {"sha": "df10f5102aef7d31d306753511b381e79e002363", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df10f5102aef7d31d306753511b381e79e002363"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b695eb8f0bae01e00dfb9e9bf2554d1b48b76a9a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiGMcHCRBK7hj4Ov3rIwAAkrAIAIrFRzDKzQx8dFh7OtiV80dx\nyPr+Yl8MOhRC3Z2SNHwr45t+jnXX/vAKKuQK6YyHf2yYDau/kbFo4qUpXrDPOMec\nw3tVrgb/BjS4cPMs4SymDP3wg6M6z0CCLjMMWlRpdPNZc1MRdGiaI29YccUPaL6/\nU+Sr6E/Zmk2mINGVvxjabj1+31B/c1y9FKHmIydexnDC9OqGYalaXXu+8TuxvQXV\nEpkRY+o2hY3KawZBl1u6U6Qt4uVe5WlW5uVdYowH8nYuSwxV3MJwCh/jEl5Kzrx7\nF0z5OnSMwuxmdMhy1KNCgnyYUQlmlkQxeeZPshRQrSy+j0XlQVHvi3JkPduWdaA=\n=5+4t\n-----END PGP SIGNATURE-----\n", "payload": "tree df10f5102aef7d31d306753511b381e79e002363\nparent d3a4cf93b73fb32ab8d18541cc4fa5ff7b74c8e8\nparent 8cc50f2d23fc085801ea21237b68b5cb27efd291\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1645790983 +0000\ncommitter GitHub <noreply@github.com> 1645790983 +0000\n\nMerge #970\n\n970: Add file!() builtin r=CohenArthur a=CohenArthur\n\n\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b695eb8f0bae01e00dfb9e9bf2554d1b48b76a9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b695eb8f0bae01e00dfb9e9bf2554d1b48b76a9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b695eb8f0bae01e00dfb9e9bf2554d1b48b76a9a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3a4cf93b73fb32ab8d18541cc4fa5ff7b74c8e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3a4cf93b73fb32ab8d18541cc4fa5ff7b74c8e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3a4cf93b73fb32ab8d18541cc4fa5ff7b74c8e8"}, {"sha": "8cc50f2d23fc085801ea21237b68b5cb27efd291", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cc50f2d23fc085801ea21237b68b5cb27efd291", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cc50f2d23fc085801ea21237b68b5cb27efd291"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "ce0be92dad06f03238e7311bb16e988e010a7acb", "filename": "gcc/rust/expand/rust-macro-builtins.cc", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b695eb8f0bae01e00dfb9e9bf2554d1b48b76a9a/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b695eb8f0bae01e00dfb9e9bf2554d1b48b76a9a/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc?ref=b695eb8f0bae01e00dfb9e9bf2554d1b48b76a9a", "patch": "@@ -18,13 +18,35 @@\n \n #include \"rust-macro-builtins.h\"\n #include \"rust-diagnostics.h\"\n+#include \"rust-expr.h\"\n+#include \"rust-session-manager.h\"\n \n namespace Rust {\n+namespace {\n+std::unique_ptr<AST::Expr>\n+make_string (Location locus, std::string value)\n+{\n+  return std::unique_ptr<AST::Expr> (\n+    new AST::LiteralExpr (value, AST::Literal::STRING,\n+\t\t\t  PrimitiveCoreType::CORETYPE_STR, {}, locus));\n+}\n+} // namespace\n+\n AST::ASTFragment\n MacroBuiltin::assert (Location invoc_locus, AST::MacroInvocData &invoc)\n {\n   rust_debug (\"assert!() called\");\n \n   return AST::ASTFragment::create_empty ();\n }\n+\n+AST::ASTFragment\n+MacroBuiltin::file (Location invoc_locus, AST::MacroInvocData &invoc)\n+{\n+  auto current_file\n+    = Session::get_instance ().linemap->location_file (invoc_locus);\n+  auto file_str = AST::SingleASTNode (make_string (invoc_locus, current_file));\n+\n+  return AST::ASTFragment ({file_str});\n+}\n } // namespace Rust"}, {"sha": "ee42fe1dcc666e5b3fe33e75cba5b87dd88821fc", "filename": "gcc/rust/expand/rust-macro-builtins.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b695eb8f0bae01e00dfb9e9bf2554d1b48b76a9a/gcc%2Frust%2Fexpand%2Frust-macro-builtins.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b695eb8f0bae01e00dfb9e9bf2554d1b48b76a9a/gcc%2Frust%2Fexpand%2Frust-macro-builtins.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-builtins.h?ref=b695eb8f0bae01e00dfb9e9bf2554d1b48b76a9a", "patch": "@@ -28,6 +28,9 @@ class MacroBuiltin\n public:\n   static AST::ASTFragment assert (Location invoc_locus,\n \t\t\t\t  AST::MacroInvocData &invoc);\n+\n+  static AST::ASTFragment file (Location invoc_locus,\n+\t\t\t\tAST::MacroInvocData &invoc);\n };\n } // namespace Rust\n "}, {"sha": "d154a8aab2bcc2dd03f35288950f325cf54a42b4", "filename": "gcc/rust/util/rust-hir-map.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b695eb8f0bae01e00dfb9e9bf2554d1b48b76a9a/gcc%2Frust%2Futil%2Frust-hir-map.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b695eb8f0bae01e00dfb9e9bf2554d1b48b76a9a/gcc%2Frust%2Futil%2Frust-hir-map.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-hir-map.cc?ref=b695eb8f0bae01e00dfb9e9bf2554d1b48b76a9a", "patch": "@@ -746,6 +746,7 @@ Mappings::insert_macro_def (AST::MacroRulesDefinition *macro)\n \t\t\t\t Location, AST::MacroInvocData &)>>\n     builtin_macros = {\n       {\"assert\", MacroBuiltin::assert},\n+      {\"file\", MacroBuiltin::file},\n     };\n \n   auto builtin = builtin_macros.find (macro->get_rule_name ());"}, {"sha": "d68f62f5175d27ecf41a65bac7e9e52d33434d19", "filename": "gcc/testsuite/rust/execute/torture/builtin_macros1.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b695eb8f0bae01e00dfb9e9bf2554d1b48b76a9a/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fbuiltin_macros1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b695eb8f0bae01e00dfb9e9bf2554d1b48b76a9a/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fbuiltin_macros1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fbuiltin_macros1.rs?ref=b695eb8f0bae01e00dfb9e9bf2554d1b48b76a9a", "patch": "@@ -0,0 +1,18 @@\n+// { dg-output \"rust/execute/torture/builtin_macros1.rs\" }\n+macro_rules! file {\n+    () => {{}};\n+}\n+\n+extern \"C\" {\n+    fn printf(fmt: *const i8, ...);\n+}\n+\n+fn print(s: &str) {\n+    printf(\"%s\\n\\0\" as *const str as *const i8, s);\n+}\n+\n+fn main() -> i32 {\n+    print(file!());\n+\n+    0\n+}"}]}