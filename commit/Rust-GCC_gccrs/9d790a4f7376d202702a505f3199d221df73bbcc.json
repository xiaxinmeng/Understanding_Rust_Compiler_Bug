{"sha": "9d790a4f7376d202702a505f3199d221df73bbcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ3OTBhNGY3Mzc2ZDIwMjcwMmE1MDVmMzE5OWQyMjFkZjczYmJjYw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-09T16:59:56Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-09T16:59:56Z"}, "message": "(aggregate_value_p): Return 1 if regs we would use are not all call-clobbered.\n\nFrom-SVN: r2384", "tree": {"sha": "0855fe750c9ae5b4b934acf2e252c137cb1869e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0855fe750c9ae5b4b934acf2e252c137cb1869e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d790a4f7376d202702a505f3199d221df73bbcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d790a4f7376d202702a505f3199d221df73bbcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d790a4f7376d202702a505f3199d221df73bbcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d790a4f7376d202702a505f3199d221df73bbcc/comments", "author": null, "committer": null, "parents": [{"sha": "6ed1d6c5eda4bcf3d996aec32b510dce8e957d1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ed1d6c5eda4bcf3d996aec32b510dce8e957d1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ed1d6c5eda4bcf3d996aec32b510dce8e957d1d"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "2d01888bc284d62cbc0c40f9f327de8a5b374cd0", "filename": "gcc/function.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d790a4f7376d202702a505f3199d221df73bbcc/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d790a4f7376d202702a505f3199d221df73bbcc/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=9d790a4f7376d202702a505f3199d221df73bbcc", "patch": "@@ -2543,6 +2543,8 @@ int\n aggregate_value_p (exp)\n      tree exp;\n {\n+  int i, regno, nregs;\n+  rtx reg;\n   if (TYPE_MODE (TREE_TYPE (exp)) == BLKmode)\n     return 1;\n   if (RETURN_IN_MEMORY (TREE_TYPE (exp)))\n@@ -2551,6 +2553,14 @@ aggregate_value_p (exp)\n       && (TREE_CODE (TREE_TYPE (exp)) == RECORD_TYPE\n \t  || TREE_CODE (TREE_TYPE (exp)) == UNION_TYPE))\n     return 1;\n+  /* Make sure we have suitable call-clobbered regs to return\n+     the value in; if not, we must return it in memory.  */\n+  reg = hard_function_value (TREE_TYPE (exp), 0);\n+  regno = REGNO (reg);\n+  nregs = HARD_REGNO_NREGS (regno, TYPE_MODE (TREE_TYPE (exp)));\n+  for (i = 0; i < nregs; i++)\n+    if (! call_used_regs[regno + i])\n+      return 1;\n   return 0;\n }\n \f"}]}