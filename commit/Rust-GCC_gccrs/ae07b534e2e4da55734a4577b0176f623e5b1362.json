{"sha": "ae07b534e2e4da55734a4577b0176f623e5b1362", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUwN2I1MzRlMmU0ZGE1NTczNGE0NTc3YjAxNzZmNjIzZTViMTM2Mg==", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2020-05-17T15:38:03Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T21:13:13Z"}, "message": "Template the scope class", "tree": {"sha": "55e338cb03e1262e3fa7a4d134e6362b38460460", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55e338cb03e1262e3fa7a4d134e6362b38460460"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae07b534e2e4da55734a4577b0176f623e5b1362", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae07b534e2e4da55734a4577b0176f623e5b1362", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae07b534e2e4da55734a4577b0176f623e5b1362", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae07b534e2e4da55734a4577b0176f623e5b1362/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "837cc2b5c46844e897545112a8395f94b8a35758", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/837cc2b5c46844e897545112a8395f94b8a35758", "html_url": "https://github.com/Rust-GCC/gccrs/commit/837cc2b5c46844e897545112a8395f94b8a35758"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "cd8eb91c64c2514b42253b35285a7db39db84120", "filename": "gcc/rust/analysis/rust-resolution.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae07b534e2e4da55734a4577b0176f623e5b1362/gcc%2Frust%2Fanalysis%2Frust-resolution.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae07b534e2e4da55734a4577b0176f623e5b1362/gcc%2Frust%2Fanalysis%2Frust-resolution.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fanalysis%2Frust-resolution.h?ref=ae07b534e2e4da55734a4577b0176f623e5b1362", "patch": "@@ -225,8 +225,8 @@ class TypeResolution : public AST::ASTVisitor\n \n   bool go ();\n \n-  Scope scope;\n-  Scope typeScope;\n+  Scope<AST::Type *> scope;\n+  Scope<AST::Type *> typeScope;\n   AST::Crate &crate;\n \n   std::vector<AST::IdentifierPattern> letPatternBuffer;"}, {"sha": "231e667fae1095e324aaa416a3ffd38504a6b28f", "filename": "gcc/rust/analysis/scope.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae07b534e2e4da55734a4577b0176f623e5b1362/gcc%2Frust%2Fanalysis%2Fscope.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae07b534e2e4da55734a4577b0176f623e5b1362/gcc%2Frust%2Fanalysis%2Fscope.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fanalysis%2Fscope.h?ref=ae07b534e2e4da55734a4577b0176f623e5b1362", "patch": "@@ -6,14 +6,14 @@\n namespace Rust {\n namespace Analysis {\n \n-class Scope\n+template <class T> class Scope\n {\n public:\n   Scope () : scopeStack () {}\n \n   ~Scope () {}\n \n-  bool Insert (std::string key, AST::Type *val)\n+  bool Insert (std::string key, T val)\n   {\n     if (scopeStack.back ().find (key) != scopeStack.back ().end ())\n       {\n@@ -24,7 +24,7 @@ class Scope\n     return true;\n   }\n \n-  bool Lookup (std::string key, AST::Type **result)\n+  bool Lookup (std::string key, T *result)\n   {\n     for (auto it = scopeStack.rbegin (); it != scopeStack.rend (); ++it)\n       {\n@@ -40,15 +40,15 @@ class Scope\n \n   void Push () { scopeStack.push_back ({}); }\n \n-  std ::map<std::string, AST::Type *> Pop ()\n+  std ::map<std::string, T> Pop ()\n   {\n     auto toplevel = scopeStack.back ();\n     scopeStack.pop_back ();\n     return toplevel;\n   }\n \n private:\n-  std::vector<std::map<std::string, AST::Type *> > scopeStack;\n+  std::vector<std::map<std::string, T> > scopeStack;\n };\n \n } // namespace Analysis"}, {"sha": "77826f9f9c5c9549b250dff8aff4876754f9a6b0", "filename": "gcc/rust/backend/rust-compile.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae07b534e2e4da55734a4577b0176f623e5b1362/gcc%2Frust%2Fbackend%2Frust-compile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae07b534e2e4da55734a4577b0176f623e5b1362/gcc%2Frust%2Fbackend%2Frust-compile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile.h?ref=ae07b534e2e4da55734a4577b0176f623e5b1362", "patch": "@@ -226,7 +226,7 @@ class Compilation : public AST::ASTVisitor\n \n   bool go ();\n \n-  Analysis::Scope scope;\n+  Analysis::Scope<AST::Type *> scope;\n   AST::Crate &crate;\n   Backend *backend;\n "}]}