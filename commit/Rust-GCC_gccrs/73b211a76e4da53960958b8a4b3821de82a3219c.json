{"sha": "73b211a76e4da53960958b8a4b3821de82a3219c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNiMjExYTc2ZTRkYTUzOTYwOTU4YjhhNGIzODIxZGU4MmEzMjE5Yw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-06-23T09:53:53Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-15T09:39:09Z"}, "message": "[Ada] Do not use maximal values from System in runtime units\n\ngcc/ada/\n\n\t* libgnat/a-cfinve.adb (Int): Use subtype of Long_Long_Integer.\n\t* libgnat/a-cofove.adb (Int): Likewise.\n\t* libgnat/a-cgcaso.adb (T): Likewise.\n\t* libgnat/a-cogeso.adb (T): Likewise.\n\t* libgnat/g-debpoo.ads (Byte_Count): Use Long_Long_Integer'Size.", "tree": {"sha": "5ad04ad1acda52e70912fe645f3cf151bc8ea3cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ad04ad1acda52e70912fe645f3cf151bc8ea3cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73b211a76e4da53960958b8a4b3821de82a3219c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73b211a76e4da53960958b8a4b3821de82a3219c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73b211a76e4da53960958b8a4b3821de82a3219c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73b211a76e4da53960958b8a4b3821de82a3219c/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a39bc02543ee30ac995104e369adc84a08798709", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a39bc02543ee30ac995104e369adc84a08798709", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a39bc02543ee30ac995104e369adc84a08798709"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "e424df072ca87b1b254431c49ec2ebac68bc921e", "filename": "gcc/ada/libgnat/a-cfinve.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73b211a76e4da53960958b8a4b3821de82a3219c/gcc%2Fada%2Flibgnat%2Fa-cfinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73b211a76e4da53960958b8a4b3821de82a3219c/gcc%2Fada%2Flibgnat%2Fa-cfinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cfinve.adb?ref=73b211a76e4da53960958b8a4b3821de82a3219c", "patch": "@@ -40,7 +40,7 @@ is\n    --  When growing a container, multiply current capacity by this. Doubling\n    --  leads to amortized linear-time copying.\n \n-   type Int is range System.Min_Int .. System.Max_Int;\n+   subtype Int is Long_Long_Integer;\n \n    procedure Free is\n      new Ada.Unchecked_Deallocation (Elements_Array, Elements_Array_Ptr);"}, {"sha": "ff03b80af4779e5dc5a864ad3658276cd491df45", "filename": "gcc/ada/libgnat/a-cgcaso.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73b211a76e4da53960958b8a4b3821de82a3219c/gcc%2Fada%2Flibgnat%2Fa-cgcaso.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73b211a76e4da53960958b8a4b3821de82a3219c/gcc%2Fada%2Flibgnat%2Fa-cgcaso.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cgcaso.adb?ref=73b211a76e4da53960958b8a4b3821de82a3219c", "patch": "@@ -29,12 +29,10 @@\n \n --  This algorithm was adapted from GNAT.Heap_Sort_G (see g-hesorg.ad[sb])\n \n-with System;\n-\n procedure Ada.Containers.Generic_Constrained_Array_Sort\n   (Container : in out Array_Type)\n is\n-   type T is range System.Min_Int .. System.Max_Int;\n+   subtype T is Long_Long_Integer;\n \n    function To_Index (J : T) return Index_Type;\n    pragma Inline (To_Index);"}, {"sha": "c8a60df2a3ddd90646ec87e1bd7d3fd64278d18c", "filename": "gcc/ada/libgnat/a-cofove.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73b211a76e4da53960958b8a4b3821de82a3219c/gcc%2Fada%2Flibgnat%2Fa-cofove.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73b211a76e4da53960958b8a4b3821de82a3219c/gcc%2Fada%2Flibgnat%2Fa-cofove.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cofove.adb?ref=73b211a76e4da53960958b8a4b3821de82a3219c", "patch": "@@ -33,7 +33,7 @@ package body Ada.Containers.Formal_Vectors with\n   SPARK_Mode => Off\n is\n \n-   type Int is range System.Min_Int .. System.Max_Int;\n+   subtype Int is Long_Long_Integer;\n \n    function To_Array_Index (Index : Index_Type'Base) return Count_Type'Base;\n "}, {"sha": "2b6b05e5724e13327405508eefc354132ffb32e3", "filename": "gcc/ada/libgnat/a-cogeso.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73b211a76e4da53960958b8a4b3821de82a3219c/gcc%2Fada%2Flibgnat%2Fa-cogeso.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73b211a76e4da53960958b8a4b3821de82a3219c/gcc%2Fada%2Flibgnat%2Fa-cogeso.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cogeso.adb?ref=73b211a76e4da53960958b8a4b3821de82a3219c", "patch": "@@ -29,10 +29,8 @@\n \n --  This algorithm was adapted from GNAT.Heap_Sort (see g-heasor.ad[sb])\n \n-with System;\n-\n procedure Ada.Containers.Generic_Sort (First, Last : Index_Type'Base) is\n-   type T is range System.Min_Int .. System.Max_Int;\n+   subtype T is Long_Long_Integer;\n \n    function To_Index (J : T) return Index_Type;\n    pragma Inline (To_Index);"}, {"sha": "88cffe84183b1fb0c3700acc67a7b58ffd87773a", "filename": "gcc/ada/libgnat/g-debpoo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73b211a76e4da53960958b8a4b3821de82a3219c/gcc%2Fada%2Flibgnat%2Fg-debpoo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73b211a76e4da53960958b8a4b3821de82a3219c/gcc%2Fada%2Flibgnat%2Fg-debpoo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-debpoo.ads?ref=73b211a76e4da53960958b8a4b3821de82a3219c", "patch": "@@ -299,7 +299,7 @@ package GNAT.Debug_Pools is\n    --  If Valid is True, Size_In_Storage_Elements is set to the size of this\n    --  chunk of memory.\n \n-   type Byte_Count is mod System.Max_Binary_Modulus;\n+   type Byte_Count is mod 2 ** Long_Long_Integer'Size;\n    --  Type used for maintaining byte counts, needs to be large enough to\n    --  to accommodate counts allowing for repeated use of the same memory.\n "}]}