{"sha": "f0c721ad7cc43cb007beb8a55cb088f17a2a065b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBjNzIxYWQ3Y2M0M2NiMDA3YmViOGE1NWNiMDg4ZjE3YTJhMDY1Yg==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2004-09-21T15:42:44Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2004-09-21T15:42:44Z"}, "message": "c-typeck.c (build_function_call): Give name of object we are attempting to call in error message.\n\n2004-09-21  Daniel Berlin <dberlin@dberlin.org>\n\n\t* c-typeck.c (build_function_call): Give name of object\n\twe are attempting to call in error message.\n\t* c-objc-common.c (c_tree_printer): Call pp_expression,\n\tnot return false, for 'E' case.\n\nFrom-SVN: r87809", "tree": {"sha": "2204defb2a1b87a08691c53ec1e9648bcdadb633", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2204defb2a1b87a08691c53ec1e9648bcdadb633"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0c721ad7cc43cb007beb8a55cb088f17a2a065b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0c721ad7cc43cb007beb8a55cb088f17a2a065b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0c721ad7cc43cb007beb8a55cb088f17a2a065b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0c721ad7cc43cb007beb8a55cb088f17a2a065b/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5775a06aa64761ba8521ad79bd1a2cc8429a6750", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5775a06aa64761ba8521ad79bd1a2cc8429a6750", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5775a06aa64761ba8521ad79bd1a2cc8429a6750"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "7d034c47903be413126ea11a5ff89b30c2b04c45", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c721ad7cc43cb007beb8a55cb088f17a2a065b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c721ad7cc43cb007beb8a55cb088f17a2a065b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f0c721ad7cc43cb007beb8a55cb088f17a2a065b", "patch": "@@ -1,3 +1,10 @@\n+2004-09-21  Daniel Berlin <dberlin@dberlin.org>\n+\t\n+\t* c-typeck.c (build_function_call): Give name of object\n+\twe are attempting to call in error message.\n+\t* c-objc-common.c (c_tree_printer): Call pp_expression,\n+\tnot return false, for 'E' case.\n+\n 2004-09-21  Steven Bosscher  <stevenb@suse.de>\n \n \tPR rtl-optimization/17482"}, {"sha": "0259fe5de607bb34356dfb76436f84a4f8ea6ff2", "filename": "gcc/c-objc-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c721ad7cc43cb007beb8a55cb088f17a2a065b/gcc%2Fc-objc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c721ad7cc43cb007beb8a55cb088f17a2a065b/gcc%2Fc-objc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-objc-common.c?ref=f0c721ad7cc43cb007beb8a55cb088f17a2a065b", "patch": "@@ -235,7 +235,7 @@ c_tree_printer (pretty_printer *pp, text_info *text)\n       if (TREE_CODE (t) == IDENTIFIER_NODE)\n \tn = IDENTIFIER_POINTER (t);\n       else\n-        return false;\n+\tpp_expression (cpp, t);\n       break;\n \n     default:"}, {"sha": "d94965b19a12b2c5647c56f247baeebde2abc510", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c721ad7cc43cb007beb8a55cb088f17a2a065b/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c721ad7cc43cb007beb8a55cb088f17a2a065b/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=f0c721ad7cc43cb007beb8a55cb088f17a2a065b", "patch": "@@ -1926,7 +1926,7 @@ build_function_call (tree function, tree params)\n   if (!(TREE_CODE (fntype) == POINTER_TYPE\n \t&& TREE_CODE (TREE_TYPE (fntype)) == FUNCTION_TYPE))\n     {\n-      error (\"called object is not a function\");\n+      error (\"called object %qE is not a function\", function);\n       return error_mark_node;\n     }\n "}, {"sha": "8813963f973928026923026582b4bfdc013ebf69", "filename": "gcc/testsuite/gcc.dg/20040920-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c721ad7cc43cb007beb8a55cb088f17a2a065b/gcc%2Ftestsuite%2Fgcc.dg%2F20040920-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c721ad7cc43cb007beb8a55cb088f17a2a065b/gcc%2Ftestsuite%2Fgcc.dg%2F20040920-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20040920-1.c?ref=f0c721ad7cc43cb007beb8a55cb088f17a2a065b", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+int bob;\n+struct a\n+{\n+  int foo;\n+};\n+int main(void)\n+{\n+  struct a bar;\n+  bob(5); /* { dg-error \"called object 'bob\\\\({anonymous}\\\\)' is not a function\" } */\n+  bar.foo(); /* { dg-error \"called object 'bar.foo\\\\({anonymous}\\\\)' is not a function\" } */\n+}"}]}