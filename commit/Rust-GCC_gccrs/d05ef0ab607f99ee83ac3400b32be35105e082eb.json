{"sha": "d05ef0ab607f99ee83ac3400b32be35105e082eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA1ZWYwYWI2MDdmOTllZTgzYWMzNDAwYjMyYmUzNTEwNWUwODJlYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2003-11-17T14:58:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2003-11-17T14:58:17Z"}, "message": "[multiple changes]\n\n2003-11-17  Jerome Guitton  <guitton@act-europe.fr>\n\n\t* 5zthrini.adb: Remove the call to Init_RTS at elaboration, as it is\n\talready called in System.Threads.\n\n\t* 5ztiitho.adb (Initialize_Task_Hooks): Remove the registration of the\n\tenvironment task, as it has been moved to System.Threads.Initialization.\n\n2003-11-17  Arnaud Charlet  <charlet@act-europe.fr>\n\n\t* adaint.c (__gnatlib_install_locks): Only reference\n\t__gnat_install_locks on VMS, since other platforms can avoid using\n\t--enable-threads=gnat\n\n2003-11-17  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n\n\t* ada-tree.h: (TYPE_IS_PACKED_ARRAY_TYPE_P): New macro.\n\n\t* decl.c (gnat_to_gnu_entity, case E_Array_Subtype): Set\n\tTYPE_PACKED_ARRAY_TYPE_P.\n\t(validate_size): Do not verify size if TYPE_IS_PACKED_ARRAY_TYPE_P.\n\n\tPart of PR ada/12806\n\t* utils.c (float_type_for_precision): Renamed from float_type_for_size.\n\tUse GET_MODE_PRECISION instead of GET_MODE_BITSIZE.\n\n2003-11-17  Vincent Celier  <celier@gnat.com>\n\n\t* gnatchop.adb (Error_Msg): New Boolean parameter Warning, defaulted\n\tto False.\n\tDo not set exit status to Failure when Warning is True.\n\t(Gnatchop): Make errors \"no compilation units found\" and\n\t\"no source files written\" warnings only.\n\n\t* make.adb (Gnatmake): When using a project file, set\n\tLook_In_Primary_Dir to False.\n\t(Configuration_Pragmas_Switch): Check for Global_Configuration_Pragmas\n\tand Local_Configuration_Pragmas in the project where they are declared\n\tnot an extending project which might have inherited them.\n\n\t* osint.adb (Locate_File): If Name is already an absolute path, do not\n\tlook for a directory.\n\n\t* par-ch10.adb (P_Compilation_Unit): If source contains no token, and\n\t-gnats (Check_Syntax) is used, issue only a warning, not an error.\n\n\t* prj.adb (Register_Default_Naming_Scheme): Add new component Project\n\tin objects of type Variable_Value.\n\n\t* prj.ads: (Variable_Value): New component Project\n\n\t* prj-nmsc.adb (Ada_Check.Warn_If_Not_Sources): No warning if source\n\tis in a project extended by Project.\n\n\t* prj-proc.adb (Add_Attributes): New parameter Project. Set component\n\tProject of Variable_Values to this new parameter value.\n\t(Expression): Set component Project of Variable_Values.\n\t(Process_Declarative_Items): Call Add_Attributes with parameter Project.\n\tSet the component Project in array elements.\n\n2003-11-17  Sergey Rybin  <rybin@act-europe.fr>\n\n\t* errout.adb: (Initialize): Add initialization for error nodes.\n\n\t* sem_ch12.adb (Initialize): Add missing initializations for\n\tExchanged_Views and Hidden_Entities.\n\n2003-11-17  Ed Schonberg  <schonberg@gnat.com>\n\n\t* sem_ch12.adb (Copy_Generic_Node): Preserve entity when copying an\n\talready instantiated tree for use in subsequent inlining.\n\t(Analyze_Associations, Instantiate_Formal_Subprogram,\n\tInstantiate_Object): improve error message for mismatch in\n\tinstantiations.\n\n\t* sem_ch6.adb (Build_Body_To_Inline): Major cleanup to handle\n\tinstantiations of subprograms declared in instances.\n\n2003-11-17  Javier Miranda  <miranda@gnat.com>\n\n\t* sem_ch4.adb (Analyze_Allocator): Previous modification must be\n\texecuted only under the Extensions_Allowed flag.\n\n2003-11-17  Robert Dewar  <dewar@gnat.com>\n\n\t* a-exexda.adb (Address_Image): Fix documentation to indicate leading\n\tzeroes suppressed.\n\t(Address_Image): Fix bug of returning 0x instead of 0x0\n\tMinor reformatting (function specs).\n\n\t* einfo.ads: Minor fix for documentation of Is_Bit_Packed_Array\n\t(missed case of 33-63)\n\n\t* freeze.adb, sem_ch13.adb: Properly check size of packed bit array\n\n\t* s-thread.adb: Add comments for pragma Restriction\n\n\t* exp_aggr.adb, g-debuti.adb, par-ch4.adb, sem_aggr.adb,\n\tsem_ch6.adb, sprint.adb, xref_lib.adb: Minor reformatting\n\n2003-11-17  Ed Falis  <falis@gnat.com>\n\n\t* s-thread.adb: Added No_Tasking restriction for this implementation.\n\n2003-11-17  Emmanuel Briot  <briot@act-europe.fr>\n\n\t* xref_lib.adb (Parse_Identifier_Info): Add handling of generic\n\tinstanciation references in the parent type description.\n\n2003-11-17  GNAT Script  <nobody@gnat.com>\n\n\t* Make-lang.in: Makefile automatically updated\n\nFrom-SVN: r73672", "tree": {"sha": "d4fd4202c674dfd74d652a50e82fd804b0e87ffc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4fd4202c674dfd74d652a50e82fd804b0e87ffc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d05ef0ab607f99ee83ac3400b32be35105e082eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d05ef0ab607f99ee83ac3400b32be35105e082eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d05ef0ab607f99ee83ac3400b32be35105e082eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d05ef0ab607f99ee83ac3400b32be35105e082eb/comments", "author": null, "committer": null, "parents": [{"sha": "638dcaa0b0a786d4442d1d264386571d5a115015", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/638dcaa0b0a786d4442d1d264386571d5a115015", "html_url": "https://github.com/Rust-GCC/gccrs/commit/638dcaa0b0a786d4442d1d264386571d5a115015"}], "stats": {"total": 4037, "additions": 2511, "deletions": 1526}, "files": [{"sha": "e0bffe09d6c67a55affc317690fb16122094fcdd", "filename": "gcc/ada/5zthrini.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2F5zthrini.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2F5zthrini.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5zthrini.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -115,7 +115,6 @@ package body System.Threads.Initialization is\n \n begin\n    Initialize_Task_Hooks;\n-   Init_RTS;\n \n    --  Register the environment task\n    declare"}, {"sha": "196c6a89fce54036d753bea75fd869c4a7bc679b", "filename": "gcc/ada/5ztiitho.adb", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2F5ztiitho.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2F5ztiitho.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ztiitho.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -46,7 +46,4 @@ procedure Initialize_Task_Hooks is\n    Result : OSI.STATUS;\n begin\n    taskCreateHookAdd (Register'Access);\n-   --  Register the environment task\n-   Result := Register (OSI.taskIdSelf);\n-   pragma Assert (Result /= -1);\n end Initialize_Task_Hooks;"}, {"sha": "dc7dccd1436eed6c8e2a8be4b4a1519f6a0ba33b", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 2131, "deletions": 1267, "changes": 3398, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb"}, {"sha": "214d5348ca38443eafc8e7798a44ee6699671c3c", "filename": "gcc/ada/a-exexda.adb", "status": "modified", "additions": 11, "deletions": 18, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fa-exexda.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fa-exexda.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexda.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -41,9 +41,8 @@ package body Exception_Data is\n    -----------------------\n \n    function Address_Image (A : System.Address) return String;\n-   --  Returns at string of the form 0xhhhhhhhhh for 32-bit addresses\n-   --  or 0xhhhhhhhhhhhhhhhh for 64-bit addresses. Hex characters are\n-   --  in lower case.\n+   --  Returns at string of the form 0xhhhhhhhhh for an address, with\n+   --  leading zeros suppressed. Hex characters a-f are in lower case.\n \n    procedure Append_Info_Nat\n      (N    : Natural;\n@@ -66,22 +65,19 @@ package body Exception_Data is\n    --  we then use three intermediate functions :\n \n    function Basic_Exception_Information\n-     (X    : Exception_Occurrence)\n-      return String;\n+     (X : Exception_Occurrence) return String;\n    --  Returns the basic exception information string associated with a\n    --  given exception occurrence. This is the common part shared by both\n    --  Exception_Information and Tailored_Exception_Infomation.\n \n    function Basic_Exception_Traceback\n-     (X    : Exception_Occurrence)\n-      return String;\n+     (X : Exception_Occurrence) return String;\n    --  Returns an image of the complete call chain associated with an\n    --  exception occurence in its most basic form, that is as a raw sequence\n    --  of hexadecimal binary addresses.\n \n    function Tailored_Exception_Traceback\n-     (X    : Exception_Occurrence)\n-      return String;\n+     (X : Exception_Occurrence) return String;\n    --  Returns an image of the complete call chain associated with an\n    --  exception occurrence, either in its basic form if no decorator is\n    --  in place, or as formatted by the decorator otherwise.\n@@ -121,10 +117,11 @@ package body Exception_Data is\n    begin\n       P := S'Last;\n       N := To_Integer (A);\n-      while N /= 0 loop\n+      loop\n          S (P) := H (Integer (N mod 16));\n          P := P - 1;\n          N := N / 16;\n+         exit when N = 0;\n       end loop;\n \n       S (P - 1) := '0';\n@@ -184,8 +181,7 @@ package body Exception_Data is\n    ---------------------------------\n \n    function Basic_Exception_Information\n-     (X    : Exception_Occurrence)\n-      return String\n+     (X : Exception_Occurrence) return String\n    is\n       Name : constant String := Exception_Name (X);\n       Msg  : constant String := Exception_Message (X);\n@@ -251,8 +247,7 @@ package body Exception_Data is\n    -------------------------------\n \n    function Basic_Exception_Traceback\n-     (X    : Exception_Occurrence)\n-      return String\n+     (X : Exception_Occurrence) return String\n    is\n       Info_Maxlen : constant Natural := 35 + X.Num_Tracebacks * 19;\n       --  Maximum length of the information string we are building, with :\n@@ -460,8 +455,7 @@ package body Exception_Data is\n    ----------------------------------\n \n    function Tailored_Exception_Traceback\n-     (X    : Exception_Occurrence)\n-      return String\n+     (X : Exception_Occurrence) return String\n    is\n       --  We indeed reference the decorator *wrapper* from here and not the\n       --  decorator itself. The purpose of the local variable Wrapper is to\n@@ -491,8 +485,7 @@ package body Exception_Data is\n    ------------------------------------\n \n    function Tailored_Exception_Information\n-     (X    : Exception_Occurrence)\n-      return String\n+     (X : Exception_Occurrence) return String\n    is\n       --  The tailored exception information is simply the basic information\n       --  associated with the tailored call chain backtrace."}, {"sha": "d7767e274e4ad1c1cc6bef582155fbd2fa1f4e46", "filename": "gcc/ada/ada-tree.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fada-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fada-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fada-tree.h?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -72,10 +72,14 @@ struct lang_type GTY(())\n #define TYPE_FAT_POINTER_P(NODE)  \\\n   (TREE_CODE (NODE) == RECORD_TYPE && TYPE_IS_FAT_POINTER_P (NODE))\n \n-/* For integral types, nonzero if this is a packed array type.  Such\n-   types should not be extended to a larger size.  */\n+/* For integral types and array types, nonzero if this is a packed array type.\n+   Such types should not be extended to a larger size.  */\n #define TYPE_PACKED_ARRAY_TYPE_P(NODE) TYPE_LANG_FLAG_0 (NODE)\n \n+#define TYPE_IS_PACKED_ARRAY_TYPE_P(NODE) \\\n+  ((TREE_CODE (NODE) == INTEGER_TYPE || TREE_CODE (NODE) == ARRAY_TYPE) \\\n+   && TYPE_PACKED_ARRAY_TYPE_P (NODE))\n+\n /* For INTEGER_TYPE, nonzero if this is a modular type with a modulus that\n    is not equal to two to the power of its mode's size.  */\n #define TYPE_MODULAR_P(NODE) TYPE_LANG_FLAG_1 (INTEGER_TYPE_CHECK (NODE))"}, {"sha": "5f4b95d5e58cec2fc8c5f27e4a36ea8dde4ec384", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -2465,13 +2465,15 @@ __gnat_copy_attribs (char *from, char *to, int mode)\n extern void __gnat_install_locks (void (*) (void), void (*) (void));\n \n /* This function offers a hook for libgnarl to set the\n-   locking subprograms for libgcc_eh. */\n+   locking subprograms for libgcc_eh.\n+   This is only needed on OpenVMS, since other platforms use standard\n+   --enable-threads=posix option, or similar.  */\n \n void\n __gnatlib_install_locks (void (*lock) (void) ATTRIBUTE_UNUSED,\n                          void (*unlock) (void) ATTRIBUTE_UNUSED)\n {\n-#ifdef IN_RTS\n+#if defined (IN_RTS) && defined (VMS)\n   __gnat_install_locks (lock, unlock);\n   /* There is a bootstrap path issue if adaint is build with this\n      symbol unresolved for the stage1 compiler. Since the compiler"}, {"sha": "058b61e18ef7c4050281dd31f1c4dab437131441", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -1992,6 +1992,8 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t  debug_no_type_hash = 0;\n \t  TYPE_CONVENTION_FORTRAN_P (gnu_type)\n \t    = (Convention (gnat_entity) == Convention_Fortran);\n+\t  TYPE_PACKED_ARRAY_TYPE_P (gnu_type)\n+\t    = Is_Packed_Array_Type (gnat_entity);\n \n \t  /* If our size depends on a placeholder and the maximum size doesn't\n \t     overflow, use it.  */\n@@ -5752,11 +5754,6 @@ validate_size (Uint uint_size,\n   else\n     gnat_error_node = gnat_object;\n \n-  /* Don't give errors on packed array types; we'll be giving the error on\n-     the type itself soon enough.  */\n-  if (Is_Packed_Array_Type (gnat_object))\n-    gnat_error_node = Empty;\n-\n   /* Return 0 if no size was specified, either because Esize was not Present or\n      the specified size was zero.  */\n   if (No (uint_size) || uint_size == No_Uint)\n@@ -5791,11 +5788,11 @@ validate_size (Uint uint_size,\n       return 0;\n     }\n \n-  /* If this is an integral type, the front-end has verified the size, so we\n-     need not do it here (which would entail checking against the bounds).\n-     However, if this is an aliased object, it may not be smaller than the\n-     type of the object.  */\n-  if (INTEGRAL_TYPE_P (gnu_type) && ! TYPE_PACKED_ARRAY_TYPE_P (gnu_type)\n+  /* If this is an integral type or a packed array type, the front-end has\n+     verified the size, so we need not do it here (which would entail\n+     checking against the bounds).  However, if this is an aliased object, it\n+     may not be smaller than the type of the object.  */\n+  if ((INTEGRAL_TYPE_P (gnu_type) || TYPE_IS_PACKED_ARRAY_TYPE_P (gnu_type))\n       && ! (kind == VAR_DECL && Is_Aliased (gnat_object)))\n     return size;\n "}, {"sha": "59ff1addeb79e741e9a4a2f3751e3a5134e2bcd9", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -1660,9 +1660,9 @@ package Einfo is\n --    Is_Bit_Packed_Array (Flag122) [implementation base type only]\n --       Present in all entities. This flag is set for a packed array\n --       type that is bit packed (i.e. the component size is known by the\n---       front end and is in the range 1-7, 9-15, or 17-31). Is_Packed is\n---       always set if Is_Bit_Packed_Array is set, but it is possible for\n---       Is_Packed to be set without Is_Bit_Packed_Array or the case of an\n+--       front end and is in the range 1-7, 9-15, 17-31, or 33-63). Is_Packed\n+--       is always set if Is_Bit_Packed_Array is set, but it is possible for\n+--       Is_Packed to be set without Is_Bit_Packed_Array for the case of an\n --       array having one or more index types that are enumeration types\n --       with non-standard enumeration representations.\n "}, {"sha": "51832899bba22a6a93c99e50a57f64c62da0b87c", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -1408,6 +1408,12 @@ package body Errout is\n          Warnings.Table (Warnings.Last).Start := Source_Ptr'First;\n          Warnings.Table (Warnings.Last).Stop  := Source_Ptr'Last;\n       end if;\n+\n+      --  Set all (???) the error nodes to Empty:\n+\n+      Error_Msg_Node_1 := Empty;\n+      Error_Msg_Node_2 := Empty;\n+\n    end Initialize;\n \n    -----------------"}, {"sha": "0f6c2ee0ad9cd3045ef3330e713f09090b74de44", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 19, "deletions": 30, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -106,8 +106,7 @@ package body Exp_Aggr is\n       Target                        : Node_Id;\n       Flist                         : Node_Id   := Empty;\n       Obj                           : Entity_Id := Empty;\n-      Is_Limited_Ancestor_Expansion : Boolean   := False)\n-      return List_Id;\n+      Is_Limited_Ancestor_Expansion : Boolean   := False) return List_Id;\n    --  N is an N_Aggregate or a N_Extension_Aggregate. Typ is the type\n    --  of the aggregate. Target is an expression containing the\n    --  location on which the component by component assignments will\n@@ -175,8 +174,7 @@ package body Exp_Aggr is\n       Into        : Node_Id;\n       Scalar_Comp : Boolean;\n       Indices     : List_Id := No_List;\n-      Flist       : Node_Id := Empty)\n-      return        List_Id;\n+      Flist       : Node_Id := Empty) return List_Id;\n    --  This recursive routine returns a list of statements containing the\n    --  loops and assignments that are needed for the expansion of the array\n    --  aggregate N.\n@@ -207,8 +205,7 @@ package body Exp_Aggr is\n       Typ    : Entity_Id;\n       Target : Node_Id;\n       Flist  : Node_Id := Empty;\n-      Obj    : Entity_Id := Empty)\n-      return   List_Id;\n+      Obj    : Entity_Id := Empty) return List_Id;\n    --  N is a nested (record or array) aggregate that has been marked\n    --  with 'Delay_Expansion'. Typ is the expected type of the\n    --  aggregate and Target is a (duplicable) expression that will\n@@ -225,8 +222,7 @@ package body Exp_Aggr is\n    function Make_OK_Assignment_Statement\n      (Sloc       : Source_Ptr;\n       Name       : Node_Id;\n-      Expression : Node_Id)\n-      return       Node_Id;\n+      Expression : Node_Id) return Node_Id;\n    --  This is like Make_Assignment_Statement, except that Assignment_OK\n    --  is set in the left operand. All assignments built by this unit\n    --  use this routine. This is needed to deal with assignments to\n@@ -405,8 +401,7 @@ package body Exp_Aggr is\n       Into        : Node_Id;\n       Scalar_Comp : Boolean;\n       Indices     : List_Id := No_List;\n-      Flist       : Node_Id := Empty)\n-      return        List_Id\n+      Flist       : Node_Id := Empty) return List_Id\n    is\n       Loc          : constant Source_Ptr := Sloc (N);\n       Index_Base   : constant Entity_Id  := Base_Type (Etype (Index));\n@@ -1281,8 +1276,7 @@ package body Exp_Aggr is\n       Target                        : Node_Id;\n       Flist                         : Node_Id   := Empty;\n       Obj                           : Entity_Id := Empty;\n-      Is_Limited_Ancestor_Expansion : Boolean   := False)\n-      return List_Id\n+      Is_Limited_Ancestor_Expansion : Boolean   := False) return List_Id\n    is\n       Loc     : constant Source_Ptr := Sloc (N);\n       L       : constant List_Id    := New_List;\n@@ -1333,8 +1327,7 @@ package body Exp_Aggr is\n          Typ     : Entity_Id;\n          F       : Node_Id;\n          Attach  : Node_Id;\n-         Init_Pr : Boolean)\n-         return    List_Id;\n+         Init_Pr : Boolean) return List_Id;\n       --  returns the list of statements necessary to initialize the internal\n       --  controller of the (possible) ancestor typ into target and attach\n       --  it to finalization list F. Init_Pr conditions the call to the\n@@ -1530,8 +1523,7 @@ package body Exp_Aggr is\n          Typ     : Entity_Id;\n          F       : Node_Id;\n          Attach  : Node_Id;\n-         Init_Pr : Boolean)\n-         return    List_Id\n+         Init_Pr : Boolean) return List_Id\n       is\n          L   : constant List_Id := New_List;\n          Ref : Node_Id;\n@@ -2432,10 +2424,9 @@ package body Exp_Aggr is\n       Typ : constant Entity_Id := Etype (N);\n \n       function Flatten\n-        (N    : Node_Id;\n-         Ix   : Node_Id;\n-         Ixb  : Node_Id)\n-         return Boolean;\n+        (N   : Node_Id;\n+         Ix  : Node_Id;\n+         Ixb : Node_Id) return Boolean;\n       --  Convert the aggregate into a purely positional form if possible.\n \n       function Is_Flat (N : Node_Id; Dims : Int) return Boolean;\n@@ -2446,10 +2437,9 @@ package body Exp_Aggr is\n       -------------\n \n       function Flatten\n-        (N    : Node_Id;\n-         Ix   : Node_Id;\n-         Ixb  : Node_Id)\n-         return Boolean\n+        (N   : Node_Id;\n+         Ix  : Node_Id;\n+         Ixb : Node_Id) return Boolean\n       is\n          Loc : constant Source_Ptr := Sloc (N);\n          Blo : constant Node_Id    := Type_Low_Bound (Etype (Ixb));\n@@ -4483,8 +4473,9 @@ package body Exp_Aggr is\n    ----------------------------\n \n    function Has_Default_Init_Comps (N : Node_Id) return Boolean is\n-      Comps  : constant List_Id := Component_Associations (N);\n-      C      : Node_Id;\n+      Comps : constant List_Id := Component_Associations (N);\n+      C     : Node_Id;\n+\n    begin\n       pragma Assert (Nkind (N) = N_Aggregate\n                      or else Nkind (N) = N_Extension_Aggregate);\n@@ -4533,8 +4524,7 @@ package body Exp_Aggr is\n       Typ    : Entity_Id;\n       Target : Node_Id;\n       Flist  : Node_Id   := Empty;\n-      Obj    : Entity_Id := Empty)\n-      return   List_Id\n+      Obj    : Entity_Id := Empty) return List_Id\n    is\n    begin\n       if Is_Record_Type (Etype (N)) then\n@@ -4558,8 +4548,7 @@ package body Exp_Aggr is\n    function Make_OK_Assignment_Statement\n      (Sloc       : Source_Ptr;\n       Name       : Node_Id;\n-      Expression : Node_Id)\n-      return       Node_Id\n+      Expression : Node_Id) return Node_Id\n    is\n    begin\n       Set_Assignment_OK (Name);"}, {"sha": "812ea693e520b02d5d512151796d5f994cb56387", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -1817,16 +1817,19 @@ package body Freeze is\n          --  fields with component clauses, where we must check the size.\n          --  This is not done till the freeze point, since for fixed-point\n          --  types, we do not know the size until the type is frozen.\n+         --  Similar processing applies to bit packed arrays.\n \n          if Is_First_Subtype (Rec) then\n             Comp := First_Component (Rec);\n \n             while Present (Comp) loop\n                if Present (Component_Clause (Comp))\n-                 and then Is_Fixed_Point_Type (Etype (Comp))\n+                 and then (Is_Fixed_Point_Type (Etype (Comp))\n+                             or else\n+                           Is_Bit_Packed_Array (Etype (Comp)))\n                then\n                   Check_Size\n-                    (Component_Clause (Comp),\n+                    (Component_Name (Component_Clause (Comp)),\n                      Etype (Comp),\n                      Esize (Comp),\n                      Junk);\n@@ -2382,6 +2385,29 @@ package body Freeze is\n                   end if;\n                end if;\n \n+               --  For bit-packed arrays, check the size\n+\n+               if Is_Bit_Packed_Array (E)\n+                 and then Known_Esize (E)\n+               then\n+                  declare\n+                     Discard : Boolean;\n+                     SizC    : constant Node_Id := Size_Clause (E);\n+\n+                  begin\n+                     --  It is not clear if it is possible to have no size\n+                     --  clause at this stage, but this is not worth worrying\n+                     --  about. Post the error on the entity name in the size\n+                     --  clause if present, else on the type entity itself.\n+\n+                     if Present (SizC) then\n+                        Check_Size (Name (SizC), E, Esize (E), Discard);\n+                     else\n+                        Check_Size (E, E, Esize (E), Discard);\n+                     end if;\n+                  end;\n+               end if;\n+\n                --  Check one common case of a size given where the array\n                --  needs to be packed, but was not so the size cannot be\n                --  honored. This would of course be caught by the backend,"}, {"sha": "8e4480ab50babedc7405acb56fe2d5c371eddf2f", "filename": "gcc/ada/g-debuti.adb", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fg-debuti.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fg-debuti.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-debuti.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -39,9 +39,11 @@ package body GNAT.Debug_Utilities is\n       H : constant array (0 .. 15) of Character := \"0123456789ABCDEF\";\n       --  Table of hex digits\n \n-   --------------------------\n-   -- Image (address case) --\n-   --------------------------\n+   -----------\n+   -- Image --\n+   -----------\n+\n+   --  Address case\n \n    function Image (A : Address) return Image_String is\n       S : Image_String;\n@@ -71,9 +73,11 @@ package body GNAT.Debug_Utilities is\n       return S;\n    end Image;\n \n-   -------------------------\n-   -- Image (string case) --\n-   -------------------------\n+   -----------\n+   -- Image --\n+   -----------\n+\n+   --  String case\n \n    function Image (S : String) return String is\n       W : String (1 .. 2 * S'Length + 2);"}, {"sha": "8764a86578ce7f1ff5ea543d6160173d05249343", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -207,7 +207,7 @@ procedure Gnatchop is\n    -- Local subprograms --\n    -----------------------\n \n-   procedure Error_Msg (Message : String);\n+   procedure Error_Msg (Message : String; Warning : Boolean := False);\n    --  Produce an error message on standard error output\n \n    procedure File_Time_Stamp (Name : C_File_Name; Time : OS_Time);\n@@ -337,10 +337,13 @@ procedure Gnatchop is\n    -- Error_Msg --\n    ---------------\n \n-   procedure Error_Msg (Message : String) is\n+   procedure Error_Msg (Message : String; Warning : Boolean := False) is\n    begin\n       Put_Line (Standard_Error, Message);\n-      Set_Exit_Status (Failure);\n+\n+      if not Warning then\n+         Set_Exit_Status (Failure);\n+      end if;\n \n       if Exit_On_Error then\n          raise Terminate_Program;\n@@ -1687,7 +1690,7 @@ begin\n \n    if Unit.Last = 0 then\n       if not Write_gnat_adc then\n-         Error_Msg (\"no compilation units found\");\n+         Error_Msg (\"no compilation units found\", Warning => True);\n       end if;\n \n       goto No_Files_Written;\n@@ -1739,7 +1742,7 @@ begin\n    --  been written.\n \n    if not Write_gnat_adc then\n-      Error_Msg (\"no source files written\");\n+      Error_Msg (\"no source files written\", Warning => True);\n    end if;\n \n    return;"}, {"sha": "5b181b659757950bd06cfcc79ea9039b54b65fc9", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -3001,7 +3001,8 @@ package body Make is\n          if Global_Attribute_Present then\n             declare\n                Path : constant String :=\n-                        Absolute_Path (Global_Attribute.Value, Main_Project);\n+                        Absolute_Path\n+                          (Global_Attribute.Value, Global_Attribute.Project);\n             begin\n                if not Is_Regular_File (Path) then\n                   Make_Failed\n@@ -3033,7 +3034,8 @@ package body Make is\n          if Local_Attribute_Present then\n             declare\n                Path : constant String :=\n-                 Absolute_Path (Local_Attribute.Value, For_Project);\n+                        Absolute_Path\n+                          (Local_Attribute.Value, Local_Attribute.Project);\n             begin\n                if not Is_Regular_File (Path) then\n                   Make_Failed\n@@ -3725,6 +3727,16 @@ package body Make is\n                         And_Save => False);\n          end if;\n \n+      else\n+         --  If we use a project file, we have already checked that a main\n+         --  specified on the command line with directory information has the\n+         --  path name corresponding to a correct source in the project tree.\n+         --  So, we don't need the directory information to be taken into\n+         --  account by Find_File, and in fact it may lead to take the wrong\n+         --  sources for other compilation units, when there are extending\n+         --  projects.\n+\n+         Opt.Look_In_Primary_Dir := False;\n       end if;\n \n       --  If the user wants a program without a main subprogram, add the"}, {"sha": "1bd39c4ea667ba9b29250602b2d9e99e0afcb0b3", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -50,6 +50,11 @@ package body Osint is\n    --  Standard prefix, computed dynamically the first time Relocate_Path\n    --  is called, and cached for subsequent calls.\n \n+   Empty  : aliased String := \"\";\n+   No_Dir : constant String_Ptr := Empty'Access;\n+   --  Used in Locate_File as a fake directory when Name is already an\n+   --  absolute path.\n+\n    -------------------------------------\n    -- Use of Name_Find and Name_Enter --\n    -------------------------------------\n@@ -1430,7 +1435,12 @@ package body Osint is\n       Dir_Name : String_Ptr;\n \n    begin\n-      if T = Library then\n+      --  If Name is already an absolute path, do not look for a directory\n+\n+      if Is_Absolute_Path (Name) then\n+         Dir_Name := No_Dir;\n+\n+      elsif T = Library then\n          Dir_Name := Lib_Search_Directories.Table (Dir);\n \n       else pragma Assert (T /= Config);"}, {"sha": "86d47b3c2c3e239dbfa8e166b585f5b5fe748458", "filename": "gcc/ada/par-ch10.adb", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fpar-ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fpar-ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch10.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -300,9 +300,14 @@ package body Ch10 is\n             Append_List (P_Context_Clause, Context_Items (Comp_Unit_Node));\n \n          else\n-            Error_Msg_SC (\"compilation unit expected\");\n-            Cunit_Error_Flag := True;\n-            Resync_Cunit;\n+            if Operating_Mode = Check_Syntax and then Token = Tok_EOF then\n+               Error_Msg_SC (\"?file contains no compilation units\");\n+\n+            else\n+               Error_Msg_SC (\"compilation unit expected\");\n+               Cunit_Error_Flag := True;\n+               Resync_Cunit;\n+            end if;\n \n             --  If we are at an end of file, then just quit, the above error\n             --  message was complaint enough."}, {"sha": "b88c494fe63495479168409c9fc846bade17c21a", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -1402,6 +1402,7 @@ package body Ch4 is\n       else\n          Set_Expression (Assoc_Node, P_Expression);\n       end if;\n+\n       return Assoc_Node;\n    end P_Record_Or_Array_Component_Association;\n "}, {"sha": "cda03eecd384b8e4fd97ee9c9706fba25fca8ce7", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -991,8 +991,8 @@ package body Prj.Nmsc is\n                The_Unit_Data := Units.Table (The_Unit_Id);\n \n                if Specs then\n-                  if The_Unit_Data.File_Names (Specification).Project /=\n-                    Project\n+                  if not Check_Project\n+                    (The_Unit_Data.File_Names (Specification).Project)\n                   then\n                      Error_Msg\n                        (Project,\n@@ -1001,8 +1001,8 @@ package body Prj.Nmsc is\n                   end if;\n \n                else\n-                  if The_Unit_Data.File_Names (Com.Body_Part).Project /=\n-                    Project\n+                  if not Check_Project\n+                    (The_Unit_Data.File_Names (Com.Body_Part).Project)\n                   then\n                      Error_Msg\n                        (Project,"}, {"sha": "e75057a883df9f4aa486bbd70cf2297b4a92277f", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 26, "deletions": 22, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -56,8 +56,9 @@ package body Prj.Proc is\n    --  arguments are not null string.\n \n    procedure Add_Attributes\n-     (Decl     : in out Declarations;\n-      First    : Attribute_Node_Id);\n+     (Project : Project_Id;\n+      Decl    : in out Declarations;\n+      First   : Attribute_Node_Id);\n    --  Add all attributes, starting with First, with their default\n    --  values to the package or project with declarations Decl.\n \n@@ -66,21 +67,18 @@ package body Prj.Proc is\n       From_Project_Node : Project_Node_Id;\n       Pkg               : Package_Id;\n       First_Term        : Project_Node_Id;\n-      Kind              : Variable_Kind)\n-      return              Variable_Value;\n+      Kind              : Variable_Kind) return Variable_Value;\n    --  From N_Expression project node From_Project_Node, compute the value\n    --  of an expression and return it as a Variable_Value.\n \n    function Imported_Or_Extended_Project_From\n      (Project   : Project_Id;\n-      With_Name : Name_Id)\n-      return      Project_Id;\n+      With_Name : Name_Id) return Project_Id;\n    --  Find an imported or extended project of Project whose name is With_Name\n \n    function Package_From\n      (Project   : Project_Id;\n-      With_Name : Name_Id)\n-      return      Package_Id;\n+      With_Name : Name_Id) return Package_Id;\n    --  Find the package of Project whose name is With_Name\n \n    procedure Process_Declarative_Items\n@@ -143,8 +141,9 @@ package body Prj.Proc is\n    --------------------\n \n    procedure Add_Attributes\n-     (Decl           : in out Declarations;\n-      First          : Attribute_Node_Id)\n+     (Project : Project_Id;\n+      Decl    : in out Declarations;\n+      First   : Attribute_Node_Id)\n    is\n       The_Attribute  : Attribute_Node_Id := First;\n       Attribute_Data : Attribute_Record;\n@@ -171,7 +170,8 @@ package body Prj.Proc is\n \n                   when Single =>\n                      New_Attribute :=\n-                       (Kind     => Single,\n+                       (Project  => Project,\n+                        Kind     => Single,\n                         Location => No_Location,\n                         Default  => True,\n                         Value    => Empty_String);\n@@ -180,7 +180,8 @@ package body Prj.Proc is\n \n                   when List =>\n                      New_Attribute :=\n-                       (Kind     => List,\n+                       (Project  => Project,\n+                        Kind     => List,\n                         Location => No_Location,\n                         Default  => True,\n                         Values   => Nil_String);\n@@ -225,8 +226,7 @@ package body Prj.Proc is\n       From_Project_Node : Project_Node_Id;\n       Pkg               : Package_Id;\n       First_Term        : Project_Node_Id;\n-      Kind              : Variable_Kind)\n-      return              Variable_Value\n+      Kind              : Variable_Kind) return Variable_Value\n    is\n       The_Term : Project_Node_Id := First_Term;\n       --  The term in the expression list\n@@ -241,6 +241,7 @@ package body Prj.Proc is\n       --  Reference to the last string elements in Result, when Kind is List.\n \n    begin\n+      Result.Project := Project;\n       Result.Location := Location_Of (First_Term);\n \n       --  Process each term of the expression, starting with First_Term\n@@ -536,14 +537,16 @@ package body Prj.Proc is\n                              Expression_Kind_Of (The_Current_Term) = List\n                            then\n                               The_Variable :=\n-                                (Kind     => List,\n+                                (Project  => Project,\n+                                 Kind     => List,\n                                  Location => No_Location,\n                                  Default  => True,\n                                  Values   => Nil_String);\n \n                            else\n                               The_Variable :=\n-                                (Kind     => Single,\n+                                (Project  => Project,\n+                                 Kind     => Single,\n                                  Location => No_Location,\n                                  Default  => True,\n                                  Value    => Empty_String);\n@@ -739,8 +742,7 @@ package body Prj.Proc is\n \n    function Imported_Or_Extended_Project_From\n      (Project   : Project_Id;\n-      With_Name : Name_Id)\n-      return      Project_Id\n+      With_Name : Name_Id) return Project_Id\n    is\n       Data : constant Project_Data := Projects.Table (Project);\n       List : Project_List          := Data.Imported_Projects;\n@@ -779,8 +781,7 @@ package body Prj.Proc is\n \n    function Package_From\n      (Project   : Project_Id;\n-      With_Name : Name_Id)\n-      return      Package_Id\n+      With_Name : Name_Id) return Package_Id\n    is\n       Data   : constant Project_Data := Projects.Table (Project);\n       Result : Package_Id := Data.Decl.Packages;\n@@ -1035,7 +1036,8 @@ package body Prj.Proc is\n                         --  Set the default values of the attributes\n \n                         Add_Attributes\n-                          (Packages.Table (New_Pkg).Decl,\n+                          (Project,\n+                           Packages.Table (New_Pkg).Decl,\n                            Package_Attributes.Table\n                              (Package_Id_Of (Current_Item)).First_Attribute);\n \n@@ -1260,6 +1262,8 @@ package body Prj.Proc is\n \n                            Array_Elements.Table (New_Element) :=\n                              Array_Elements.Table (Orig_Element);\n+                           Array_Elements.Table (New_Element).Value.Project :=\n+                             Project;\n \n                            --  Adjust the Next link\n \n@@ -1856,7 +1860,7 @@ package body Prj.Proc is\n             Processed_Data.Extended_By := Extended_By;\n             Processed_Data.Naming      := Standard_Naming_Data;\n \n-            Add_Attributes (Processed_Data.Decl, Attribute_First);\n+            Add_Attributes (Project, Processed_Data.Decl, Attribute_First);\n             With_Clause := First_With_Clause_Of (From_Project_Node);\n \n             while With_Clause /= Empty_Node loop"}, {"sha": "730af24c1eaf0fd425cff4a56e4d6227b6b126ef", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -306,7 +306,8 @@ package body Prj is\n          Element :=\n            (Index => Lang,\n             Index_Case_Sensitive => False,\n-            Value => (Kind     => Single,\n+            Value => (Project  => No_Project,\n+                      Kind     => Single,\n                       Location => No_Location,\n                       Default  => False,\n                       Value    => Default_Spec_Suffix),\n@@ -341,7 +342,8 @@ package body Prj is\n          Element :=\n            (Index => Lang,\n             Index_Case_Sensitive => False,\n-            Value => (Kind     => Single,\n+            Value => (Project  => No_Project,\n+                      Kind     => Single,\n                       Location => No_Location,\n                       Default  => False,\n                       Value    => Default_Body_Suffix),"}, {"sha": "270cb4e8048bc860665ed6a88ab42ec751d329b7", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -77,6 +77,10 @@ package Prj is\n \n    function Empty_String return Name_Id;\n \n+   type Project_Id is new Nat;\n+   No_Project : constant Project_Id := 0;\n+   --  Id of a Project File\n+\n    type String_List_Id is new Nat;\n    Nil_String : constant String_List_Id := 0;\n    type String_Element is record\n@@ -107,6 +111,7 @@ package Prj is\n    --  while processing the project tree (unknown package name).\n \n    type Variable_Value (Kind : Variable_Kind := Undefined) is record\n+      Project  : Project_Id := No_Project;\n       Location : Source_Ptr := No_Location;\n       Default  : Boolean    := False;\n       case Kind is\n@@ -122,7 +127,8 @@ package Prj is\n    --  Default is True if the current value is the default one for the variable\n \n    Nil_Variable_Value : constant Variable_Value :=\n-     (Kind     => Undefined,\n+     (Project  => No_Project,\n+      Kind     => Undefined,\n       Location => No_Location,\n       Default  => False);\n    --  Value of a non existing variable or array element\n@@ -303,10 +309,6 @@ package Prj is\n    --  Returns True if Left and Right are the same naming scheme\n    --  not considering Specs and Bodies.\n \n-   type Project_Id is new Nat;\n-   No_Project : constant Project_Id := 0;\n-   --  Id of a Project File\n-\n    type Project_List is new Nat;\n    Empty_Project_List : constant Project_List := 0;\n    --  A list of project files."}, {"sha": "6687d28bce930e491604cf0701c300b69e6f6dc0", "filename": "gcc/ada/s-thread.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fs-thread.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fs-thread.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-thread.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -33,6 +33,11 @@\n \n --  This is the VxWorks version of this package\n \n+pragma Restrictions (No_Tasking);\n+--  The VxWorks version of this package is intended only for programs\n+--  which do not use Ada tasking. This restriction ensures that this\n+--  will be checked by the binder.\n+\n with System.Secondary_Stack;\n \n with Unchecked_Conversion;"}, {"sha": "b72932474de5d5ddc564bb21532975572e35c6db", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -2202,6 +2202,10 @@ package body Sem_Aggr is\n          --         C : Lim := (..., others => <>);\n          --      end record;\n \n+         ----------------------------\n+         -- Check_Non_Limited_Type --\n+         ----------------------------\n+\n          procedure Check_Non_Limited_Type is\n          begin\n             if Is_Limited_Type (Etype (Compon))\n@@ -2223,6 +2227,8 @@ package body Sem_Aggr is\n             end if;\n          end Check_Non_Limited_Type;\n \n+      --  Start of processing for Get_Value\n+\n       begin\n          Mbox_Present := False;\n \n@@ -2254,8 +2260,8 @@ package body Sem_Aggr is\n                         else\n                            return Expression (Parent (Compon));\n                         end if;\n-                     else\n \n+                     else\n                         Check_Non_Limited_Type;\n \n                         if Present (Others_Etype) and then\n@@ -2295,8 +2301,8 @@ package body Sem_Aggr is\n                         else\n                            Expr := Expression (Parent (Compon));\n                         end if;\n-                     else\n \n+                     else\n                         Check_Non_Limited_Type;\n \n                         if Present (Next (Selector_Name)) then\n@@ -2926,13 +2932,11 @@ package body Sem_Aggr is\n                   Typech := Base_Type (Etype (Component));\n \n                elsif Typech /= Base_Type (Etype (Component)) then\n-\n                   if not Box_Present (Parent (Selectr)) then\n                      Error_Msg_N\n                        (\"components in choice list must have same type\",\n                         Selectr);\n                   end if;\n-\n                end if;\n \n                Next (Selectr);"}, {"sha": "babcc70eda63823bf3765b8a11bc860aa9e8a39e", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 68, "deletions": 24, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -757,9 +757,11 @@ package body Sem_Ch12 is\n       F_Copy  : List_Id)\n       return    List_Id\n    is\n-      Actual_Types    : constant Elist_Id := New_Elmt_List;\n-      Assoc           : constant List_Id  := New_List;\n-      Defaults        : constant Elist_Id := New_Elmt_List;\n+      Actual_Types    : constant Elist_Id  := New_Elmt_List;\n+      Assoc           : constant List_Id   := New_List;\n+      Defaults        : constant Elist_Id  := New_Elmt_List;\n+      Gen_Unit        : constant Entity_Id := Defining_Entity\n+                                                (Parent (F_Copy));\n       Actuals         : List_Id;\n       Actual          : Node_Id;\n       Formal          : Node_Id;\n@@ -985,8 +987,11 @@ package body Sem_Ch12 is\n                       Defining_Identifier (Analyzed_Formal));\n \n                   if No (Match) then\n-                     Error_Msg_NE (\"missing actual for instantiation of &\",\n-                        Instantiation_Node, Defining_Identifier (Formal));\n+                     Error_Msg_NE\n+                       (\"missing actual&\",\n+                         Instantiation_Node, Defining_Identifier (Formal));\n+                     Error_Msg_NE (\"\\in instantiation of & declared#\",\n+                         Instantiation_Node, Gen_Unit);\n                      Abandon_Instantiation (Instantiation_Node);\n \n                   else\n@@ -1071,9 +1076,10 @@ package body Sem_Ch12 is\n \n                   if No (Match) then\n                      Error_Msg_NE\n-                       (\"missing actual for instantiation of&\",\n-                        Instantiation_Node,\n-                        Defining_Identifier (Formal));\n+                       (\"missing actual&\",\n+                         Instantiation_Node, Defining_Identifier (Formal));\n+                     Error_Msg_NE (\"\\in instantiation of & declared#\",\n+                         Instantiation_Node, Gen_Unit);\n \n                      Abandon_Instantiation (Instantiation_Node);\n \n@@ -1105,8 +1111,17 @@ package body Sem_Ch12 is\n          end loop;\n \n          if Num_Actuals > Num_Matched then\n-            Error_Msg_N\n-              (\"unmatched actuals in instantiation\", Instantiation_Node);\n+            if Present (Selector_Name (Actual)) then\n+               Error_Msg_NE\n+                 (\"unmatched actual&\",\n+                    Actual, Selector_Name (Actual));\n+               Error_Msg_NE (\"\\in instantiation of& declared#\",\n+                    Actual, Gen_Unit);\n+            else\n+               Error_Msg_NE\n+                 (\"unmatched actual in instantiation of& declared#\",\n+                   Actual, Gen_Unit);\n+            end if;\n          end if;\n \n       elsif Present (Actuals) then\n@@ -4641,19 +4656,37 @@ package body Sem_Ch12 is\n          else\n             --  If the associated node is still defined, the entity in\n             --  it is global, and must be copied to the instance.\n+            --  If this copy is being made for a body to inline, it is\n+            --  applied to an instantiated tree, and the entity is already\n+            --  present and must be also preserved.\n \n-            if Present (Get_Associated_Node (N)) then\n-               if Nkind (Get_Associated_Node (N)) = Nkind (N) then\n-                  Set_Entity (New_N, Entity (Get_Associated_Node (N)));\n-                  Check_Private_View (N);\n+            declare\n+               Assoc : constant Node_Id := Get_Associated_Node (N);\n+            begin\n+               if Present (Assoc) then\n+                  if Nkind (Assoc) = Nkind (N) then\n+                     Set_Entity (New_N, Entity (Assoc));\n+                     Check_Private_View (N);\n+\n+                  elsif Nkind (Assoc) = N_Function_Call then\n+                     Set_Entity (New_N, Entity (Name (Assoc)));\n+\n+                  elsif (Nkind (Assoc) = N_Defining_Identifier\n+                          or else Nkind (Assoc) = N_Defining_Character_Literal\n+                          or else Nkind (Assoc) = N_Defining_Operator_Symbol)\n+                    and then Expander_Active\n+                  then\n+                     --  Inlining case: we are copying a tree that contains\n+                     --  global entities, which are preserved in the copy\n+                     --  to be used for subsequent inlining.\n \n-               elsif Nkind (Get_Associated_Node (N)) = N_Function_Call then\n-                  Set_Entity (New_N, Entity (Name (Get_Associated_Node (N))));\n+                     null;\n \n-               else\n-                  Set_Entity (New_N, Empty);\n+                  else\n+                     Set_Entity (New_N, Empty);\n+                  end if;\n                end if;\n-            end if;\n+            end;\n          end if;\n \n          --  For expanded name, we must copy the Prefix and Selector_Name\n@@ -5618,6 +5651,8 @@ package body Sem_Ch12 is\n       Generic_Flags.Init;\n       Generic_Renamings_HTable.Reset;\n       Circularity_Detected := False;\n+      Exchanged_Views      := No_Elist;\n+      Hidden_Entities      := No_Elist;\n    end Initialize;\n \n    ----------------------------\n@@ -6586,8 +6621,10 @@ package body Sem_Ch12 is\n \n       else\n          Error_Msg_NE\n-           (\"missing actual for instantiation of &\",\n-                                 Instantiation_Node, Formal_Sub);\n+           (\"missing actual&\", Instantiation_Node, Formal_Sub);\n+         Error_Msg_NE\n+           (\"\\in instantiation of & declared#\",\n+              Instantiation_Node, Scope (Analyzed_S));\n          Abandon_Instantiation (Instantiation_Node);\n       end if;\n \n@@ -6729,8 +6766,12 @@ package body Sem_Ch12 is\n \n          if No (Actual) then\n             Error_Msg_NE\n-              (\"missing actual for instantiation of &\",\n+              (\"missing actual&\",\n                Instantiation_Node, Formal_Id);\n+            Error_Msg_NE\n+              (\"\\in instantiation of & declared#\",\n+                 Instantiation_Node,\n+                   Scope (Defining_Identifier (Analyzed_Formal)));\n             Abandon_Instantiation (Instantiation_Node);\n          end if;\n \n@@ -6893,8 +6934,11 @@ package body Sem_Ch12 is\n \n          else\n             Error_Msg_NE\n-              (\"missing actual for instantiation of &\",\n-               Instantiation_Node, Formal_Id);\n+              (\"missing actual&\",\n+                Instantiation_Node, Formal_Id);\n+            Error_Msg_NE (\"\\in instantiation of & declared#\",\n+              Instantiation_Node,\n+                Scope (Defining_Identifier (Analyzed_Formal)));\n \n             if Is_Scalar_Type\n                  (Etype (Defining_Identifier (Analyzed_Formal)))"}, {"sha": "ca9bb01355cf829111cad73655f97e25f9eadf34", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 65, "deletions": 11, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -1881,7 +1881,7 @@ package body Sem_Ch13 is\n       Biased  : Boolean;\n \n       Max_Bit_So_Far : Uint;\n-      --  Records the maximum bit position so far. If all field positoins\n+      --  Records the maximum bit position so far. If all field positions\n       --  are monotonically increasing, then we can skip the circuit for\n       --  checking for overlap, since no overlap is possible.\n \n@@ -2153,10 +2153,9 @@ package body Sem_Ch13 is\n                               CC, Rectype);\n                         end if;\n \n-                        --  This information is also set in the\n-                        --  corresponding component of the base type,\n-                        --  found by accessing the Original_Record_Component\n-                        --  link if it is present.\n+                        --  This information is also set in the corresponding\n+                        --  component of the base type, found by accessing the\n+                        --  Original_Record_Component link if it is present.\n \n                         Ocomp := Original_Record_Component (Comp);\n \n@@ -2848,21 +2847,68 @@ package body Sem_Ch13 is\n    begin\n       Biased := False;\n \n-      --  Immediate return if size is same as standard size or if composite\n-      --  item, or generic type, or type with previous errors.\n+      --  Dismiss cases for generic types or types with previous errors\n \n       if No (UT)\n         or else UT = Any_Type\n         or else Is_Generic_Type (UT)\n         or else Is_Generic_Type (Root_Type (UT))\n-        or else Is_Composite_Type (UT)\n-        or else (Known_Esize (UT) and then Siz = Esize (UT))\n       then\n          return;\n \n+      --  Check case of bit packed array\n+\n+      elsif Is_Array_Type (UT)\n+        and then Known_Static_Component_Size (UT)\n+        and then Is_Bit_Packed_Array (UT)\n+      then\n+         declare\n+            Asiz : Uint;\n+            Indx : Node_Id;\n+            Ityp : Entity_Id;\n+\n+         begin\n+            Asiz := Component_Size (UT);\n+            Indx := First_Index (UT);\n+            loop\n+               Ityp := Etype (Indx);\n+\n+               --  If non-static bound, then we are not in the business of\n+               --  trying to check the length, and indeed an error will be\n+               --  issued elsewhere, since sizes of non-static array types\n+               --  cannot be set implicitly or explicitly.\n+\n+               if not Is_Static_Subtype (Ityp) then\n+                  return;\n+               end if;\n+\n+               --  Otherwise accumulate next dimension\n+\n+               Asiz := Asiz * (Expr_Value (Type_High_Bound (Ityp)) -\n+                               Expr_Value (Type_Low_Bound  (Ityp)) +\n+                               Uint_1);\n+\n+               Next_Index (Indx);\n+               exit when No (Indx);\n+            end loop;\n+\n+            if Asiz <= Siz then\n+               return;\n+            else\n+               Error_Msg_Uint_1 := Asiz;\n+               Error_Msg_NE\n+                 (\"size for& too small, minimum allowed is ^\", N, T);\n+            end if;\n+         end;\n+\n+      --  All other composite types are ignored\n+\n+      elsif Is_Composite_Type (UT) then\n+         return;\n+\n       --  For fixed-point types, don't check minimum if type is not frozen,\n-      --  since type is not known till then\n-      --  at freeze time.\n+      --  since we don't know all the characteristics of the type that can\n+      --  affect the size (e.g. a specified small) till freeze time.\n \n       elsif Is_Fixed_Point_Type (UT)\n         and then not Is_Frozen (UT)\n@@ -2872,6 +2918,14 @@ package body Sem_Ch13 is\n       --  Cases for which a minimum check is required\n \n       else\n+         --  Ignore if specified size is correct for the type\n+\n+         if Known_Esize (UT) and then Siz = Esize (UT) then\n+            return;\n+         end if;\n+\n+         --  Otherwise get minimum size\n+\n          M := UI_From_Int (Minimum_Size (UT));\n \n          if Siz < M then"}, {"sha": "798a80c2403a71335dccd4c59091ec26ba52c2a1", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -338,13 +338,18 @@ package body Sem_Ch4 is\n             Check_Restriction (No_Protected_Type_Allocators, N);\n          end if;\n \n-         if Nkind (Expression (E)) /= N_Aggregate\n-           and then Is_Limited_Type (Type_Id)\n+         if Is_Limited_Type (Type_Id)\n            and then Comes_From_Source (N)\n            and then not In_Instance_Body\n          then\n-            Error_Msg_N (\"initialization not allowed for limited types\", N);\n-            Explain_Limited_Type (Type_Id, N);\n+            if Extensions_Allowed\n+              and then Nkind (Expression (E)) = N_Aggregate\n+            then\n+               null;\n+            else\n+               Error_Msg_N (\"initialization not allowed for limited types\", N);\n+               Explain_Limited_Type (Type_Id, N);\n+            end if;\n          end if;\n \n          Analyze_And_Resolve (Expression (E), Type_Id);"}, {"sha": "05c0ccf5b342c722ef8a435e110b87139b68babc", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 44, "deletions": 92, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -82,11 +82,7 @@ package body Sem_Ch6 is\n    --  Analyze a generic subprogram body. N is the body to be analyzed,\n    --  and Gen_Id is the defining entity Id for the corresponding spec.\n \n-   function Build_Body_To_Inline\n-     (N         : Node_Id;\n-      Subp      : Entity_Id;\n-      Orig_Body : Node_Id)\n-      return      Boolean;\n+   procedure Build_Body_To_Inline (N : Node_Id; Subp : Entity_Id);\n    --  If a subprogram has pragma Inline and inlining is active, use generic\n    --  machinery to build an unexpanded body for the subprogram. This body is\n    --  subsequenty used for inline expansions at call sites. If subprogram can\n@@ -132,8 +128,7 @@ package body Sem_Ch6 is\n \n    function Is_Non_Overriding_Operation\n      (Prev_E : Entity_Id;\n-      New_E  : Entity_Id)\n-      return   Boolean;\n+      New_E  : Entity_Id) return Boolean;\n    --  Enforce the rule given in 12.3(18): a private operation in an instance\n    --  overrides an inherited operation only if the corresponding operation\n    --  was overriding in the generic. This can happen for primitive operations\n@@ -156,8 +151,7 @@ package body Sem_Ch6 is\n      (T1       : Entity_Id;\n       T2       : Entity_Id;\n       Ctype    : Conformance_Type;\n-      Get_Inst : Boolean := False)\n-      return     Boolean;\n+      Get_Inst : Boolean := False) return Boolean;\n    --  Check that two formal parameter types conform, checking both\n    --  for equality of base types, and where required statically\n    --  matching subtypes, depending on the setting of Ctype.\n@@ -1142,9 +1136,7 @@ package body Sem_Ch6 is\n                                 (Front_End_Inlining\n                                   or else Configurable_Run_Time_Mode)))\n       then\n-         if Build_Body_To_Inline (N, Spec_Id, Copy_Separate_Tree (N)) then\n-            null;\n-         end if;\n+         Build_Body_To_Inline (N, Spec_Id);\n       end if;\n \n       --  Now we can go on to analyze the body\n@@ -1492,12 +1484,7 @@ package body Sem_Ch6 is\n    -- Build_Body_To_Inline --\n    --------------------------\n \n-   function Build_Body_To_Inline\n-     (N         : Node_Id;\n-      Subp      : Entity_Id;\n-      Orig_Body : Node_Id)\n-      return      Boolean\n-   is\n+   procedure Build_Body_To_Inline (N : Node_Id; Subp : Entity_Id) is\n       Decl : constant Node_Id := Unit_Declaration_Node (Subp);\n       Original_Body   : Node_Id;\n       Body_To_Analyze : Node_Id;\n@@ -1732,7 +1719,7 @@ package body Sem_Ch6 is\n       if Nkind (Decl) = N_Subprogram_Declaration\n         and then Present (Body_To_Inline (Decl))\n       then\n-         return True;    --  Done already.\n+         return;    --  Done already.\n \n       --  Functions that return unconstrained composite types will require\n       --  secondary stack handling, and cannot currently be inlined.\n@@ -1744,64 +1731,13 @@ package body Sem_Ch6 is\n       then\n          Cannot_Inline\n            (\"cannot inline & (unconstrained return type)?\", N, Subp);\n-         return False;\n-      end if;\n-\n-      --  We need to capture references to the formals in order to substitute\n-      --  the actuals at the point of inlining, i.e. instantiation. To treat\n-      --  the formals as globals to the body to inline, we nest it within\n-      --  a dummy parameterless subprogram, declared within the real one.\n-\n-      Original_Body := Orig_Body;\n-\n-      --  Within an instance, the current tree is already the result of\n-      --  a generic copy, and not what we need for subsequent inlining.\n-      --  We create the required body by doing an instantiating copy, to\n-      --  obtain the proper partially analyzed tree.\n-\n-      if In_Instance then\n-         if No (Generic_Parent (Specification (N))) then\n-            return False;\n-\n-         elsif Is_Child_Unit (Scope (Current_Scope)) then\n-            return False;\n-\n-         elsif Scope (Current_Scope) = Cunit_Entity (Main_Unit) then\n-\n-            --  compiling an instantiation. There is no point in generating\n-            --  bodies to inline, because they will not be used.\n-\n-            return False;\n-\n-         else\n-            Body_To_Analyze :=\n-              Copy_Generic_Node\n-                (Generic_Parent (Specification (N)), Empty,\n-                   Instantiating => True);\n-         end if;\n-\n-      --  Case of not in an instance\n-\n-      else\n-         Body_To_Analyze :=\n-           Copy_Generic_Node (Original_Body, Empty,\n-             Instantiating => False);\n-      end if;\n-\n-      Set_Parameter_Specifications (Specification (Original_Body), No_List);\n-      Set_Defining_Unit_Name (Specification (Original_Body),\n-        Make_Defining_Identifier (Sloc (N), New_Internal_Name ('S')));\n-      Set_Corresponding_Spec (Original_Body, Empty);\n-\n-      if Ekind (Subp) = E_Function then\n-         Set_Subtype_Mark (Specification (Original_Body),\n-           New_Occurrence_Of (Etype (Subp), Sloc (N)));\n+         return;\n       end if;\n \n-      if Present (Declarations (Orig_Body))\n-        and then Has_Excluded_Declaration (Declarations (Orig_Body))\n+      if Present (Declarations (N))\n+        and then Has_Excluded_Declaration (Declarations (N))\n       then\n-         return False;\n+         return;\n       end if;\n \n       if Present (Handled_Statement_Sequence (N)) then\n@@ -1810,12 +1746,12 @@ package body Sem_Ch6 is\n               (\"cannot inline& (exception handler)?\",\n                First (Exception_Handlers (Handled_Statement_Sequence (N))),\n                Subp);\n-            return False;\n+            return;\n          elsif\n            Has_Excluded_Statement\n              (Statements (Handled_Statement_Sequence (N)))\n          then\n-            return False;\n+            return;\n          end if;\n       end if;\n \n@@ -1827,16 +1763,36 @@ package body Sem_Ch6 is\n         and then not Is_Always_Inlined (Subp)\n       then\n          Cannot_Inline (\"cannot inline& (body too large)?\", N, Subp);\n-         return False;\n+         return;\n       end if;\n \n       if Has_Pending_Instantiation then\n          Cannot_Inline\n            (\"cannot inline& (forward instance within enclosing body)?\",\n              N, Subp);\n-         return False;\n+         return;\n+      end if;\n+\n+      --  Within an instance, the body to inline must be treated as a nested\n+      --  generic, so that the proper global references are preserved.\n+\n+      if In_Instance then\n+         Save_Env (Scope (Current_Scope), Scope (Current_Scope));\n+         Original_Body := Copy_Generic_Node (N, Empty, True);\n+      else\n+         Original_Body := Copy_Separate_Tree (N);\n       end if;\n \n+      --  We need to capture references to the formals in order to substitute\n+      --  the actuals at the point of inlining, i.e. instantiation. To treat\n+      --  the formals as globals to the body to inline, we nest it within\n+      --  a dummy parameterless subprogram, declared within the real one.\n+\n+      Set_Parameter_Specifications (Specification (Original_Body), No_List);\n+      Set_Defining_Unit_Name (Specification (Original_Body),\n+        Make_Defining_Identifier (Sloc (N), New_Internal_Name ('S')));\n+      Set_Corresponding_Spec (Original_Body, Empty);\n+\n       Body_To_Analyze := Copy_Generic_Node (Original_Body, Empty, False);\n \n       --  Set return type of function, which is also global and does not need\n@@ -1866,7 +1822,10 @@ package body Sem_Ch6 is\n       Set_Body_To_Inline (Decl, Original_Body);\n       Set_Ekind (Defining_Entity (Original_Body), Ekind (Subp));\n       Set_Is_Inlined (Subp);\n-      return True;\n+\n+      if In_Instance then\n+         Restore_Env;\n+      end if;\n    end Build_Body_To_Inline;\n \n    -------------------\n@@ -2972,8 +2931,7 @@ package body Sem_Ch6 is\n      (T1       : Entity_Id;\n       T2       : Entity_Id;\n       Ctype    : Conformance_Type;\n-      Get_Inst : Boolean := False)\n-      return     Boolean\n+      Get_Inst : Boolean := False) return Boolean\n    is\n       Type_1 : Entity_Id := T1;\n       Type_2 : Entity_Id := T2;\n@@ -3475,8 +3433,7 @@ package body Sem_Ch6 is\n \n    function Fully_Conformant_Expressions\n      (Given_E1 : Node_Id;\n-      Given_E2 : Node_Id)\n-      return     Boolean\n+      Given_E2 : Node_Id) return Boolean\n    is\n       E1 : constant Node_Id := Original_Node (Given_E1);\n       E2 : constant Node_Id := Original_Node (Given_E2);\n@@ -3849,8 +3806,7 @@ package body Sem_Ch6 is\n \n    function Fully_Conformant_Discrete_Subtypes\n      (Given_S1 : Node_Id;\n-      Given_S2 : Node_Id)\n-      return     Boolean\n+      Given_S2 : Node_Id) return Boolean\n    is\n       S1 : constant Node_Id := Original_Node (Given_S1);\n       S2 : constant Node_Id := Original_Node (Given_S2);\n@@ -3942,8 +3898,7 @@ package body Sem_Ch6 is\n \n    function Is_Non_Overriding_Operation\n      (Prev_E : Entity_Id;\n-      New_E  : Entity_Id)\n-      return Boolean\n+      New_E  : Entity_Id) return Boolean\n    is\n       Formal : Entity_Id;\n       F_Typ  : Entity_Id;\n@@ -3956,8 +3911,7 @@ package body Sem_Ch6 is\n \n       function Types_Correspond\n         (P_Type : Entity_Id;\n-         N_Type : Entity_Id)\n-         return   Boolean;\n+         N_Type : Entity_Id) return Boolean;\n       --  Returns true if and only if the types (or designated types\n       --  in the case of anonymous access types) are the same or N_Type\n       --  is derived directly or indirectly from P_Type.\n@@ -4005,8 +3959,7 @@ package body Sem_Ch6 is\n \n       function Types_Correspond\n         (P_Type : Entity_Id;\n-         N_Type : Entity_Id)\n-         return   Boolean\n+         N_Type : Entity_Id) return Boolean\n       is\n          Prev_Type : Entity_Id := Base_Type (P_Type);\n          New_Type  : Entity_Id := Base_Type (N_Type);\n@@ -5245,7 +5198,6 @@ package body Sem_Ch6 is\n \n    function Type_Conformant (New_Id, Old_Id : Entity_Id) return Boolean is\n       Result : Boolean;\n-\n    begin\n       Check_Conformance (New_Id, Old_Id, Type_Conformant, False, Result);\n       return Result;"}, {"sha": "277ede36059dbebd6223cd1eac39143fd2592dfa", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -928,6 +928,7 @@ package body Sprint is\n             Set_Debug_Sloc;\n             Sprint_Bar_List (Choices (Node));\n             Write_Str (\" => \");\n+\n             if Box_Present (Node) then\n                Write_Str_With_Col_Check (\"<>\");\n             else"}, {"sha": "23296d59eb262c925f1ac5bc74d4170b9b4545cb", "filename": "gcc/ada/utils.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05ef0ab607f99ee83ac3400b32be35105e082eb/gcc%2Fada%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils.c?ref=d05ef0ab607f99ee83ac3400b32be35105e082eb", "patch": "@@ -148,7 +148,7 @@ static tree merge_sizes (tree, tree, tree, int, int);\n static tree compute_related_constant (tree, tree);\n static tree split_plus (tree, tree *);\n static int value_zerop (tree);\n-static tree float_type_for_size (int, enum machine_mode);\n+static tree float_type_for_precision (int, enum machine_mode);\n static tree convert_to_fat_pointer (tree, tree);\n static tree convert_to_thin_pointer (tree, tree);\n static tree make_descriptor_field (const char *,tree, tree, tree);\n@@ -1992,7 +1992,7 @@ gnat_type_for_size (unsigned precision, int unsignedp)\n /* Likewise for floating-point types.  */\n \n static tree\n-float_type_for_size (int precision, enum machine_mode mode)\n+float_type_for_precision (int precision, enum machine_mode mode)\n {\n   tree t;\n   char type_name[20];\n@@ -2023,7 +2023,7 @@ tree\n gnat_type_for_mode (enum machine_mode mode, int unsignedp)\n {\n   if (GET_MODE_CLASS (mode) == MODE_FLOAT)\n-    return float_type_for_size (GET_MODE_BITSIZE (mode), mode);\n+    return float_type_for_precision (GET_MODE_PRECISION (mode), mode);\n   else\n     return gnat_type_for_size (GET_MODE_BITSIZE (mode), unsignedp);\n }"}]}