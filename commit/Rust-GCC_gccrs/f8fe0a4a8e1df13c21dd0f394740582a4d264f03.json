{"sha": "f8fe0a4a8e1df13c21dd0f394740582a4d264f03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhmZTBhNGE4ZTFkZjEzYzIxZGQwZjM5NDc0MDU4MmE0ZDI2NGYwMw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-08-20T11:14:38Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@gcc.gnu.org", "date": "2010-08-20T11:14:38Z"}, "message": "tm.texi.in (PIC_OFFSET_TABLE_REG_CALL_CLOBBERED): Document to be zero or nonzero.\n\n2010-08-20  Joseph Myers  <joseph@codesourcery.com>\n\n\tgcc/\n\t* doc/tm.texi.in (PIC_OFFSET_TABLE_REG_CALL_CLOBBERED): Document to\n\tbe zero or nonzero.\n\t* doc/tm.texi: Regenerate.\n\t* defaults.h (PIC_OFFSET_TABLE_REG_CALL_CLOBBERED): Define.\n\t* df-scan.c (df_get_exit_block_use_set), reginfo.c\n\t(init_reg_sets_1), rtlanal.c (rtx_unstable_p, rtx_varies_p):\n\tHandle new PIC_OFFSET_TABLE_REG_CALL_CLOBBERED semantics.\n\t* config/ia64/ia64.h (PIC_OFFSET_TABLE_REG_CALL_CLOBBERED): Define\n\tto 1.\n\nFrom-SVN: r163399", "tree": {"sha": "2d9f05dc440f7a83a7c9010772e45442652c54fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d9f05dc440f7a83a7c9010772e45442652c54fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8fe0a4a8e1df13c21dd0f394740582a4d264f03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8fe0a4a8e1df13c21dd0f394740582a4d264f03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8fe0a4a8e1df13c21dd0f394740582a4d264f03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8fe0a4a8e1df13c21dd0f394740582a4d264f03/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "46499993b183dd96d52a050628e409c0512cc411", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46499993b183dd96d52a050628e409c0512cc411", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46499993b183dd96d52a050628e409c0512cc411"}], "stats": {"total": 47, "additions": 29, "deletions": 18}, "files": [{"sha": "11a82db620bfd2479dd41272217cfc92cf72d0df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8fe0a4a8e1df13c21dd0f394740582a4d264f03/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8fe0a4a8e1df13c21dd0f394740582a4d264f03/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8fe0a4a8e1df13c21dd0f394740582a4d264f03", "patch": "@@ -1,3 +1,15 @@\n+2010-08-20  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* doc/tm.texi.in (PIC_OFFSET_TABLE_REG_CALL_CLOBBERED): Document to\n+\tbe zero or nonzero.\n+\t* doc/tm.texi: Regenerate.\n+\t* defaults.h (PIC_OFFSET_TABLE_REG_CALL_CLOBBERED): Define.\n+\t* df-scan.c (df_get_exit_block_use_set), reginfo.c\n+\t(init_reg_sets_1), rtlanal.c (rtx_unstable_p, rtx_varies_p):\n+\tHandle new PIC_OFFSET_TABLE_REG_CALL_CLOBBERED semantics.\n+\t* config/ia64/ia64.h (PIC_OFFSET_TABLE_REG_CALL_CLOBBERED): Define\n+\tto 1.\n+\n 2010-08-20  Olivier Hainque  <hainque@adacore.com>\n \n \t* config/sparc/sparc.c (sparc_asm_function_epilogue): Don't output"}, {"sha": "b43d075f3c1333e1cbbe1546448c366180224013", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8fe0a4a8e1df13c21dd0f394740582a4d264f03/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8fe0a4a8e1df13c21dd0f394740582a4d264f03/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=f8fe0a4a8e1df13c21dd0f394740582a4d264f03", "patch": "@@ -1359,7 +1359,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Define this macro if the register defined by `PIC_OFFSET_TABLE_REGNUM' is\n    clobbered by calls.  */\n \n-#define PIC_OFFSET_TABLE_REG_CALL_CLOBBERED\n+#define PIC_OFFSET_TABLE_REG_CALL_CLOBBERED 1\n \n \f\n /* The Overall Framework of an Assembler File.  */"}, {"sha": "aaf6ea66de9e6d084762915b9da96eddd3829fec", "filename": "gcc/defaults.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8fe0a4a8e1df13c21dd0f394740582a4d264f03/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8fe0a4a8e1df13c21dd0f394740582a4d264f03/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=f8fe0a4a8e1df13c21dd0f394740582a4d264f03", "patch": "@@ -722,6 +722,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define PIC_OFFSET_TABLE_REGNUM INVALID_REGNUM\n #endif\n \n+#ifndef PIC_OFFSET_TABLE_REG_CALL_CLOBBERED\n+#define PIC_OFFSET_TABLE_REG_CALL_CLOBBERED 0\n+#endif\n+\n #ifndef TARGET_DLLIMPORT_DECL_ATTRIBUTES\n #define TARGET_DLLIMPORT_DECL_ATTRIBUTES 0\n #endif"}, {"sha": "8b17ae2948898197457cf852b6f81d47ff263984", "filename": "gcc/df-scan.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8fe0a4a8e1df13c21dd0f394740582a4d264f03/gcc%2Fdf-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8fe0a4a8e1df13c21dd0f394740582a4d264f03/gcc%2Fdf-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.c?ref=f8fe0a4a8e1df13c21dd0f394740582a4d264f03", "patch": "@@ -4032,14 +4032,13 @@ df_get_exit_block_use_set (bitmap exit_block_uses)\n #endif\n     }\n \n-#ifndef PIC_OFFSET_TABLE_REG_CALL_CLOBBERED\n   /* Many architectures have a GP register even without flag_pic.\n      Assume the pic register is not in use, or will be handled by\n      other means, if it is not fixed.  */\n-  if ((unsigned) PIC_OFFSET_TABLE_REGNUM != INVALID_REGNUM\n+  if (!PIC_OFFSET_TABLE_REG_CALL_CLOBBERED\n+      && (unsigned) PIC_OFFSET_TABLE_REGNUM != INVALID_REGNUM\n       && fixed_regs[PIC_OFFSET_TABLE_REGNUM])\n     bitmap_set_bit (exit_block_uses, PIC_OFFSET_TABLE_REGNUM);\n-#endif\n \n   /* Mark all global registers, and all registers used by the\n      epilogue as being live at the end of the function since they"}, {"sha": "7e8765b363852211bf932fdd25180b209c671875", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8fe0a4a8e1df13c21dd0f394740582a4d264f03/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8fe0a4a8e1df13c21dd0f394740582a4d264f03/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=f8fe0a4a8e1df13c21dd0f394740582a4d264f03", "patch": "@@ -7128,8 +7128,9 @@ when @code{flag_pic} is true).\n @end defmac\n \n @defmac PIC_OFFSET_TABLE_REG_CALL_CLOBBERED\n-Define this macro if the register defined by\n-@code{PIC_OFFSET_TABLE_REGNUM} is clobbered by calls.  Do not define\n+A C expression that is nonzero if the register defined by\n+@code{PIC_OFFSET_TABLE_REGNUM} is clobbered by calls.  If not defined,\n+the default is zero.  Do not define\n this macro if @code{PIC_OFFSET_TABLE_REGNUM} is not defined.\n @end defmac\n "}, {"sha": "4d13cbe86874d2c26c1064e9c5aede55159dce87", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8fe0a4a8e1df13c21dd0f394740582a4d264f03/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8fe0a4a8e1df13c21dd0f394740582a4d264f03/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=f8fe0a4a8e1df13c21dd0f394740582a4d264f03", "patch": "@@ -7123,8 +7123,9 @@ when @code{flag_pic} is true).\n @end defmac\n \n @defmac PIC_OFFSET_TABLE_REG_CALL_CLOBBERED\n-Define this macro if the register defined by\n-@code{PIC_OFFSET_TABLE_REGNUM} is clobbered by calls.  Do not define\n+A C expression that is nonzero if the register defined by\n+@code{PIC_OFFSET_TABLE_REGNUM} is clobbered by calls.  If not defined,\n+the default is zero.  Do not define\n this macro if @code{PIC_OFFSET_TABLE_REGNUM} is not defined.\n @end defmac\n "}, {"sha": "879f50b08257e26519a7b5c6026f01c56d957b16", "filename": "gcc/reginfo.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8fe0a4a8e1df13c21dd0f394740582a4d264f03/gcc%2Freginfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8fe0a4a8e1df13c21dd0f394740582a4d264f03/gcc%2Freginfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freginfo.c?ref=f8fe0a4a8e1df13c21dd0f394740582a4d264f03", "patch": "@@ -495,10 +495,9 @@ init_reg_sets_1 (void)\n       else if (i == ARG_POINTER_REGNUM && fixed_regs[i])\n \t;\n #endif\n-#ifndef PIC_OFFSET_TABLE_REG_CALL_CLOBBERED\n-      else if (i == (unsigned) PIC_OFFSET_TABLE_REGNUM && fixed_regs[i])\n+      else if (!PIC_OFFSET_TABLE_REG_CALL_CLOBBERED\n+\t       && i == (unsigned) PIC_OFFSET_TABLE_REGNUM && fixed_regs[i])\n \t;\n-#endif\n       else if (CALL_REALLY_USED_REGNO_P (i))\n         {\n \t  SET_HARD_REG_BIT (regs_invalidated_by_call, i);"}, {"sha": "4331f416b253639a9fa5d04f57ac4add20bc8490", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8fe0a4a8e1df13c21dd0f394740582a4d264f03/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8fe0a4a8e1df13c21dd0f394740582a4d264f03/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=f8fe0a4a8e1df13c21dd0f394740582a4d264f03", "patch": "@@ -118,13 +118,11 @@ rtx_unstable_p (const_rtx x)\n \t  /* The arg pointer varies if it is not a fixed register.  */\n \t  || (x == arg_pointer_rtx && fixed_regs[ARG_POINTER_REGNUM]))\n \treturn 0;\n-#ifndef PIC_OFFSET_TABLE_REG_CALL_CLOBBERED\n       /* ??? When call-clobbered, the value is stable modulo the restore\n \t that must happen after a call.  This currently screws up local-alloc\n \t into believing that the restore is not needed.  */\n-      if (x == pic_offset_table_rtx)\n+      if (!PIC_OFFSET_TABLE_REG_CALL_CLOBBERED && x == pic_offset_table_rtx)\n \treturn 0;\n-#endif\n       return 1;\n \n     case ASM_OPERANDS:\n@@ -197,14 +195,11 @@ rtx_varies_p (const_rtx x, bool for_alias)\n \t  || (x == arg_pointer_rtx && fixed_regs[ARG_POINTER_REGNUM]))\n \treturn 0;\n       if (x == pic_offset_table_rtx\n-#ifdef PIC_OFFSET_TABLE_REG_CALL_CLOBBERED\n \t  /* ??? When call-clobbered, the value is stable modulo the restore\n \t     that must happen after a call.  This currently screws up\n \t     local-alloc into believing that the restore is not needed, so we\n \t     must return 0 only if we are called from alias analysis.  */\n-\t  && for_alias\n-#endif\n-\t  )\n+\t  && (!PIC_OFFSET_TABLE_REG_CALL_CLOBBERED || for_alias))\n \treturn 0;\n       return 1;\n "}]}