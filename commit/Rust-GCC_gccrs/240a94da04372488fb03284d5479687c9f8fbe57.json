{"sha": "240a94da04372488fb03284d5479687c9f8fbe57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQwYTk0ZGEwNDM3MjQ4OGZiMDMyODRkNTQ3OTY4N2M5ZjhmYmU1Nw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-05-06T10:49:35Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-05-06T10:49:35Z"}, "message": "tree-vect-slp.c (vect_supported_load_permutation_p): Use vect_transform_slp_perm_load to check if...\n\n2015-05-06  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-slp.c (vect_supported_load_permutation_p): Use\n\tvect_transform_slp_perm_load to check if we support a permutation\n\tfor basic-block vectorization.\n\n\t* gcc.dg/vect/bb-slp-34.c: New testcase.\n\nFrom-SVN: r222846", "tree": {"sha": "0ad58236fb46b1acfdb616f36490b2bdb04fd1fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ad58236fb46b1acfdb616f36490b2bdb04fd1fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/240a94da04372488fb03284d5479687c9f8fbe57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/240a94da04372488fb03284d5479687c9f8fbe57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/240a94da04372488fb03284d5479687c9f8fbe57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/240a94da04372488fb03284d5479687c9f8fbe57/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "edbb33c7958d9ebb202f8dbfa84901e0b6d5ef7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edbb33c7958d9ebb202f8dbfa84901e0b6d5ef7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edbb33c7958d9ebb202f8dbfa84901e0b6d5ef7a"}], "stats": {"total": 75, "additions": 69, "deletions": 6}, "files": [{"sha": "f201ab905cb10483eab2b8a59543f01ce3d3eda4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240a94da04372488fb03284d5479687c9f8fbe57/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240a94da04372488fb03284d5479687c9f8fbe57/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=240a94da04372488fb03284d5479687c9f8fbe57", "patch": "@@ -1,3 +1,9 @@\n+2015-05-06  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-slp.c (vect_supported_load_permutation_p): Use\n+\tvect_transform_slp_perm_load to check if we support a permutation\n+\tfor basic-block vectorization.\n+\n 2015-05-06  Nick Clifton  <nickc@redhat.com>\n \n \t* config/rl78/rl78.c (need_to_save): Save register 22 if it is"}, {"sha": "c42a9d4a862e9eaca55a21522d752742e1ea9930", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240a94da04372488fb03284d5479687c9f8fbe57/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240a94da04372488fb03284d5479687c9f8fbe57/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=240a94da04372488fb03284d5479687c9f8fbe57", "patch": "@@ -1,3 +1,7 @@\n+2015-05-06  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/vect/bb-slp-34.c: New testcase.\n+\n 2015-05-06  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/62283"}, {"sha": "62949cc44944a518dad3743828e0ff9d63b4fdbc", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-34.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240a94da04372488fb03284d5479687c9f8fbe57/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-34.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240a94da04372488fb03284d5479687c9f8fbe57/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-34.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-34.c?ref=240a94da04372488fb03284d5479687c9f8fbe57", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-require-effective-target vect_int } */\n+\n+#include \"tree-vect.h\"\n+\n+extern void abort (void);\n+\n+int a[8], b[8];\n+\n+void __attribute__((noinline,noclone))\n+foo(void)\n+{\n+  a[0] = b[3];\n+  a[1] = b[2];\n+  a[2] = b[1];\n+  a[3] = b[0];\n+  a[4] = b[2];\n+  a[5] = b[3];\n+  a[6] = b[4];\n+  a[7] = b[5];\n+}\n+\n+int main()\n+{\n+  int i;\n+  check_vect ();\n+  for (i = 0; i < 8; ++i)\n+    b[i] = i;\n+  foo ();\n+  if (a[0] != 3 || a[1] != 2 || a[2] != 1 || a[3] != 0\n+      || a[4] != 2 || a[5] != 3 || a[6] != 4 || a[7] != 5)\n+    abort ();\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump \"basic block vectorized\" \"slp2\" { target vect_perm } } } */\n+/* { dg-final { cleanup-tree-dump \"slp1\" } } */\n+/* { dg-final { cleanup-tree-dump \"slp2\" } } */"}, {"sha": "fc96df31173e9071e36ec5e807586b862cc51c16", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240a94da04372488fb03284d5479687c9f8fbe57/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240a94da04372488fb03284d5479687c9f8fbe57/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=240a94da04372488fb03284d5479687c9f8fbe57", "patch": "@@ -1325,17 +1325,36 @@ vect_supported_load_permutation_p (slp_instance slp_instn)\n      FORNOW: not supported in loop SLP because of realignment compications.  */\n   if (STMT_VINFO_BB_VINFO (vinfo_for_stmt (stmt)))\n     {\n-      /* Check that for every node in the instance the loads\n-\t form a subchain.  */\n+      /* Check whether the loads in an instance form a subchain and thus\n+         no permutation is necessary.  */\n       FOR_EACH_VEC_ELT (SLP_INSTANCE_LOADS (slp_instn), i, node)\n         {\n+\t  bool subchain_p = true;\n           next_load = NULL;\n           FOR_EACH_VEC_ELT (SLP_TREE_SCALAR_STMTS (node), j, load)\n             {\n               if (j != 0 && next_load != load)\n-\t\treturn false;\n+\t\t{\n+\t\t  subchain_p = false;\n+\t\t  break;\n+\t\t}\n               next_load = GROUP_NEXT_ELEMENT (vinfo_for_stmt (load));\n             }\n+\t  if (subchain_p)\n+\t    SLP_TREE_LOAD_PERMUTATION (node).release ();\n+\t  else\n+\t    {\n+\t      /* Verify the permutation can be generated.  */\n+\t      vec<tree> tem;\n+\t      if (!vect_transform_slp_perm_load (node, tem, NULL,\n+\t\t\t\t\t\t 1, slp_instn, true))\n+\t\t{\n+\t\t  dump_printf_loc (MSG_MISSED_OPTIMIZATION,\n+\t\t\t\t   vect_location,\n+\t\t\t\t   \"unsupported load permutation\\n\");\n+\t\t  return false;\n+\t\t}\n+\t    }\n         }\n \n       /* Check that the alignment of the first load in every subchain, i.e.,\n@@ -1364,9 +1383,6 @@ vect_supported_load_permutation_p (slp_instance slp_instn)\n \t    }\n \t}\n \n-      /* We are done, no actual permutations need to be generated.  */\n-      FOR_EACH_VEC_ELT (SLP_INSTANCE_LOADS (slp_instn), i, node)\n-\tSLP_TREE_LOAD_PERMUTATION (node).release ();\n       return true;\n     }\n "}]}