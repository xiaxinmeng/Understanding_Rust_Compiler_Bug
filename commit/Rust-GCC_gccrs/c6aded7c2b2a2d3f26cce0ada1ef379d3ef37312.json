{"sha": "c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZhZGVkN2MyYjJhMmQzZjI2Y2NlMGFkYTFlZjM3OWQzZWYzNzMxMg==", "commit": {"author": {"name": "Anthony Green", "email": "green@cygnus.com", "date": "1998-01-26T23:00:04Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-26T23:00:04Z"}, "message": "flags.h: New flag (optimize_size).\n\n        * flags.h: New flag (optimize_size).\n        * toplev.c (main): Parse -Os option and set optimize_space\n        accordingly.\n        * gcc.c (default_compilers), cp/lang-specs.h, f/lang-specs.h: Define\n        __OPTIMIZE_SIZE__ when compiling with -Os.\n        * config/dsp16xx/dsp16xx.h, config/i386/i386.h,\n        config/i386/dgux.h, config/i960/i960.h, config/pdp11/pdp11.h,\n        config/v850/v850.h (OPTIMIZATION_OPTIONS): New SIZE argument\n        to macro.\n        * config/i386/i386.c (optimization_options): Accept new SIZE argument.\n\nFrom-SVN: r17497", "tree": {"sha": "f38e94fefea9081b3c8c56aea7c5e45f007ac4bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f38e94fefea9081b3c8c56aea7c5e45f007ac4bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/comments", "author": null, "committer": null, "parents": [{"sha": "3698f44e0eaa13abd10a7e80de48a06f151d5d3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3698f44e0eaa13abd10a7e80de48a06f151d5d3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3698f44e0eaa13abd10a7e80de48a06f151d5d3d"}], "stats": {"total": 165, "additions": 103, "deletions": 62}, "files": [{"sha": "518c8e56772d01af767625c46dd69e51e25786b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "patch": "@@ -1,3 +1,16 @@\n+Tue Jan 20 16:01:03 1998  Anthony Green  <green@cygnus.com>\n+\n+\t* flags.h: New flag (optimize_size).\n+\t* toplev.c (main): Parse -Os option and set optimize_space\n+\taccordingly.\n+\t* gcc.c (default_compilers), cp/lang-specs.h, f/lang-specs.h: Define \n+\t__OPTIMIZE_SIZE__ when compiling with -Os.\n+\t* config/dsp16xx/dsp16xx.h, config/i386/i386.h,\n+\tconfig/i386/dgux.h, config/i960/i960.h, config/pdp11/pdp11.h,\n+\tconfig/v850/v850.h (OPTIMIZATION_OPTIONS): New SIZE argument\n+\tto macro.\n+\t* config/i386/i386.c (optimization_options): Accept new SIZE argument.\n+\n Mon Jan 26 23:57:39 1998  Manfred Hollstein  <manfred@s-direktnet.de>\n \n \t* libgcc2.c (__clear_insn_cache): On sysV68 enable the memctl"}, {"sha": "138696530db586f690ef5bc5cc76ab9213e8eff2", "filename": "gcc/config/dsp16xx/dsp16xx.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h?ref=c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  AT&T DSP1600.\n-   Copyright (C) 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n    Contributed by Michael Collison (collison@world.std.com).\n \n This file is part of GNU CC.\n@@ -286,7 +286,7 @@ extern int target_flags;\n \n #define OVERRIDE_OPTIONS override_options ()\n \n-#define OPTIMIZATION_OPTIONS(LEVEL)                   \\\n+#define OPTIMIZATION_OPTIONS(LEVEL,SIZE)              \\\n {                                                     \\\n     flag_gnu_linker             = FALSE;              \\\n                                                       \\\n@@ -298,14 +298,15 @@ extern int target_flags;\n                                                       \\\n     if (LEVEL >= 2)                                   \\\n     {                                                 \\\n-\tflag_strength_reduce         = TRUE;          \\\n+        if (! SIZE)                                   \\\n+ \t  flag_strength_reduce       = TRUE;          \\\n \tflag_cse_follow_jumps        = TRUE;          \\\n \tflag_cse_skip_blocks         = TRUE;          \\\n \tflag_expensive_optimizations = TRUE;          \\\n \tflag_rerun_cse_after_loop    = TRUE;          \\\n     }                                                 \\\n                                                       \\\n-    if (LEVEL >= 3)                                   \\\n+    if ((LEVEL >= 3) && ! SIZE)                       \\\n     {                                                 \\\n        flag_inline_functions = 1;                     \\\n     }                                                 \\"}, {"sha": "692fb7dbc6b31621b6283fc5ca025495c877eb0d", "filename": "gcc/config/i386/dgux.h", "status": "modified", "additions": 6, "deletions": 24, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fconfig%2Fi386%2Fdgux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fconfig%2Fi386%2Fdgux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdgux.h?ref=c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for GNU compiler for Intel 80x86 running DG/ux\n-   Copyright (C) 1993, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n    Currently maintained by gcc@dg-rtp.dg.com.\n \n This file is part of GNU CC.\n@@ -25,7 +25,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"i386/sysv4.h\"\n \n #ifndef VERSION_INFO2\n-#define VERSION_INFO2   \"$Revision: 1.1 $\"\n+#define VERSION_INFO2   \"$Revision: 1.6 $\"\n #endif\n \n #ifndef VERSION_STRING\n@@ -119,12 +119,12 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n */\n \n #undef\tOPTIMIZATION_OPTIONS\n-#define OPTIMIZATION_OPTIONS(LEVEL)\t\t\t\\\n+#define OPTIMIZATION_OPTIONS(LEVEL,SIZE)\t\t\\\n   do {\t\t\t\t\t\t\t\\\n     extern int flag_signed_bitfields;\t\t\t\\\n     flag_signed_bitfields = 0;\t\t\t\t\\\n     abort_helper ();\t\t\t\t\t\\\n-    optimization_options (LEVEL);\t\t\t\\\n+    optimization_options (LEVEL,SIZE);\t\t\t\\\n   } while (0)\n \n \n@@ -170,7 +170,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n /* Linker and library spec's.\n    -static, -shared, -symbolic, -h* and -z* access AT&T V.4 link options.\n    -svr4 instructs gcc to place /usr/lib/values-X[cat].o on link the line.\n-   The absense of -msvr4 indicates linking done in a COFF environment and\n+   The absence of -msvr4 indicates linking done in a COFF environment and\n    adds the link script to the link line.  In all environments, the first\n    and last objects are crtbegin.o and crtend.o.\n    When the -G link option is used (-shared and -symbolic) a final link is\n@@ -260,24 +260,6 @@ char insn; int insn_; char * file_; int line_;\n     warning (\"argument is a structure\"),0 : 0), \\\n     (function_arg (&CUM, MODE, TYPE, NAMED)))\n \n-/* This is how to output an assembler line\n-   that says to advance the location counter\n-   to a multiple of 2**LOG bytes.  */\n-\n-#undef ASM_OUTPUT_ALIGN\n-#define ASM_OUTPUT_ALIGN(FILE,LOG)\t\\\n-     if (LOG <= 2) \t\t\t\\\n-        fprintf ((FILE), \"\\t.align %d\\n\", 1<<(LOG));\\\n-     else if ((LOG)!=0) \t\t\\\n-        {\t\t\t\t\\\n-\t char buf[256];\t\t\t\\\n-\t if (!backalign_labelno) fprintf ((FILE), \"\\t.align %d\\n\", 1); \\\n-\t ASM_GENERATE_INTERNAL_LABEL (buf, \"LBA\", backalign_labelno++); \\\n-\t fprintf ((FILE), \"%s:\", &buf[1]); \\\n-\t fprintf ((FILE), \"\\t.backalign %s,%d,%d\\n\", &buf[1], 1<<(LOG), \\\n-\t\t  ((TARGET_PENTIUMPRO || TARGET_486) && LOG==4) ? 6 : 2);\\\n-        }\n-\n-/* add .align 1 to avoid .backalign bug in assembler */\n+/* Add .align 1 to avoid .backalign bug in assembler */\n #undef CONST_SECTION_ASM_OP\n #define CONST_SECTION_ASM_OP    \".section\\t.rodata\\n\\t.align 1\""}, {"sha": "4e616287d43fa6a8457f932427add2184c6573c2", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for insn-output.c for Intel X86.\n-   Copyright (C) 1988, 92, 94, 95, 96, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 92, 94-97, 1998 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -410,8 +410,9 @@ order_regs_for_local_alloc ()\n }\n \f\n void\n-optimization_options (level)\n+optimization_options (level, size)\n      int level;\n+     int size;\n {\n   /* For -O2 and beyond, turn off -fschedule-insns by default.  It tends to\n      make the problem with not enough registers even worse.  */"}, {"sha": "8e485252bde5d56007164ce7e301eb68ec17d04d", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler for Intel X86\n    (386, 486, Pentium).\n-   Copyright (C) 1988, 92, 94, 95, 96, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 92, 94-97, 1998 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -287,7 +287,7 @@ extern int ix86_arch;\n #define SUBTARGET_OPTIONS\n \n /* Define this to change the optimizations performed by default.  */\n-#define OPTIMIZATION_OPTIONS(LEVEL) optimization_options(LEVEL)\n+#define OPTIMIZATION_OPTIONS(LEVEL,SIZE) optimization_options(LEVEL,SIZE)\n \n /* Specs for the compiler proper */\n "}, {"sha": "1ef3ba7291260f7ae2bde498b4987c724f4d0e7e", "filename": "gcc/config/i960/i960.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fconfig%2Fi960%2Fi960.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fconfig%2Fi960%2Fi960.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.h?ref=c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for Intel 80960\n-   Copyright (C) 1992, 1993, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1993, 1995, 1996, 1998 Free Software Foundation, Inc.\n    Contributed by Steven McGeady, Intel Corp.\n    Additional Work by Glenn Colon-Bonet, Jonathan Shapiro, Andy Wilson\n    Converted to GCC 2.0 by Jim Wilson and Michael Tiemann, Cygnus Support.\n@@ -94,7 +94,7 @@ Boston, MA 02111-1307, USA.  */\n #define CAN_DEBUG_WITHOUT_FP\n \n /* Do leaf procedure and tail call optimizations for -O2 and higher.  */\n-#define OPTIMIZATION_OPTIONS(LEVEL)\t\t\\\n+#define OPTIMIZATION_OPTIONS(LEVEL,SIZE)\t\\\n {\t\t\t\t\t\t\\\n   if ((LEVEL) >= 2)\t\t\t\t\\\n     {\t\t\t\t\t\t\\"}, {"sha": "87c4954fda130a7faedf0aa25095e285725684bc", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for the pdp-11\n-   Copyright (C) 1994, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1995, 1996, 1998 Free Software Foundation, Inc.\n    Contributed by Michael K. Gschwind (mike@vlsivie.tuwien.ac.at).\n \n This file is part of GNU CC.\n@@ -1295,11 +1295,12 @@ JMP\tFUNCTION\t0x0058  0x0000 <- FUNCTION\n    LEVEL is the optimization level specified; 2 if -O2 is\n    specified, 1 if -O is specified, and 0 if neither is specified.  */\n \n-#define OPTIMIZATION_OPTIONS(LEVEL)\t\t\t\t\t\\\n+#define OPTIMIZATION_OPTIONS(LEVEL,SIZE)\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   if (LEVEL >= 3)\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      flag_inline_functions\t\t= 1;\t\t\t\t\\\n+      if (! SIZE)\t\t\t\t\t\t\t\\\n+        flag_inline_functions\t\t= 1;\t\t\t\t\\\n       flag_omit_frame_pointer\t\t= 1;\t\t\t\t\\\n       /* flag_unroll_loops\t\t\t= 1; */\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\"}, {"sha": "59ad91d2de7cccb0918e63fc7f94694e2733e8c8", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler. NEC V850 series\n-   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998 Free Software Foundation, Inc.\n    Contributed by Jeff Law (law@cygnus.com).\n \n This file is part of GNU CC.\n@@ -208,6 +208,8 @@ extern struct small_memory_info small_memory[(int)SMALL_MEMORY_max];\n    LEVEL is the optimization level specified; 2 if `-O2' is\n    specified, 1 if `-O' is specified, and 0 if neither is specified.\n \n+   SIZE is non-zero if `-Os' is specified, 0 otherwise.  \n+\n    You should not use this macro to change options that are not\n    machine-specific.  These should uniformly selected by the same\n    optimization level on all supported machines.  Use this macro to\n@@ -216,7 +218,7 @@ extern struct small_memory_info small_memory[(int)SMALL_MEMORY_max];\n    *Do not examine `write_symbols' in this macro!* The debugging\n    options are not supposed to alter the generated code. */\n \n-#define OPTIMIZATION_OPTIONS(LEVEL)\t\t\t\t\t\\\n+#define OPTIMIZATION_OPTIONS(LEVEL,SIZE)\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   if (LEVEL)\t\t\t\t\t\t\t\t\\\n     target_flags |= (MASK_EP | MASK_PROLOG_FUNCTION);\t\t\t\\"}, {"sha": "78a6956dfbf2c6aa208ec0430a80a91d6d829528", "filename": "gcc/cp/lang-specs.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fcp%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fcp%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flang-specs.h?ref=c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "patch": "@@ -34,7 +34,7 @@ Boston, MA 02111-1307, USA.  */\n \t-undef -D__GNUC__=%v1 -D__GNUG__=%v1 -D__cplusplus -D__GNUC_MINOR__=%v2\\\n \t%{ansi:-trigraphs -D__STRICT_ANSI__} %{!undef:%{!ansi:%p} %P}\\\n \t%{!fno-exceptions:-D__EXCEPTIONS}\\\n-        %c %{O*:%{!O0:-D__OPTIMIZE__}} %{trigraphs}\\\n+        %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}} %{trigraphs}\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\\n         %i %{!M:%{!MM:%{!E:%{!pipe:%g.ii}}}}%{E:%W{o*}}%{M:%W{o*}}%{MM:%W{o*}} |\\n\",\n    \"%{!M:%{!MM:%{!E:cc1plus %{!pipe:%g.ii} %1 %2\\"}, {"sha": "a51e2a6ba9af9a93c5901d93e7a3e29ab6038458", "filename": "gcc/f/lang-specs.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Ff%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Ff%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flang-specs.h?ref=c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "patch": "@@ -49,7 +49,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \t-undef -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n \t%{ansi:-trigraphs -$ -D__STRICT_ANSI__}\\\n \t%{!undef:%P} -D_LANGUAGE_FORTRAN %{trigraphs} \\\n-\t%c %{O*:%{!O0:-D__OPTIMIZE__}} -traditional\\\n+\t%c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}} -traditional\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\\n \t%i %{!M:%{!MM:%{!E:%{!pipe:%g.i}}}}%{E:%W{o*}}%{M:%W{o*}}%{MM:%W{o*}} |\\n\",\n    \"%{!M:%{!MM:%{!E:f771 %{!pipe:%g.i} -fset-g77-defaults %(f771) \\"}, {"sha": "f5d1255e9b3de111c818f0742e42a837878e76fa", "filename": "gcc/flags.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "patch": "@@ -1,5 +1,5 @@\n /* Compilation switch flag definitions for GNU CC.\n-   Copyright (C) 1987, 88, 94, 95, 96, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 88, 94-97, 1998 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -53,6 +53,10 @@ extern int use_gnu_debug_info_extensions;\n \n extern int optimize;\n \n+/* Nonzero means optimize for size.  -Os.  */\n+\n+extern int optimize_size;\n+\n /* Nonzero means do stupid register allocation.  -noreg.\n    Currently, this is 1 if `optimize' is 0.  */\n "}, {"sha": "05e741f64ea5624db62a93cc5d32472d4902121d", "filename": "gcc/gcc.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "patch": "@@ -1,5 +1,5 @@\n /* Compiler driver program that can handle many languages.\n-   Copyright (C) 1987, 89, 92-96, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 89, 92-97, 1998 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -601,7 +601,8 @@ static struct compiler default_compilers[] =\n         -undef -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n \t%{ansi:-trigraphs -D__STRICT_ANSI__}\\\n \t%{!undef:%{!ansi:%p} %P} %{trigraphs} \\\n-        %c %{O*:%{!O0:-D__OPTIMIZE__}} %{traditional} %{ftraditional:-traditional}\\\n+        %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\\n+        %{traditional} %{ftraditional:-traditional}\\\n         %{traditional-cpp:-traditional}\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\\n         %i %{!M:%{!MM:%{!E:%{!pipe:%g.i}}}}%{E:%W{o*}}%{M:%W{o*}}%{MM:%W{o*}} |\\n\",\n@@ -622,7 +623,8 @@ static struct compiler default_compilers[] =\n         -undef -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n \t%{ansi:-trigraphs -D__STRICT_ANSI__}\\\n \t%{!undef:%{!ansi:%p} %P} %{trigraphs}\\\n-        %c %{O*:%{!O0:-D__OPTIMIZE__}} %{traditional} %{ftraditional:-traditional}\\\n+        %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\\n+        %{traditional} %{ftraditional:-traditional}\\\n         %{traditional-cpp:-traditional}\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\\n         %i %W{o*}}\\\n@@ -635,7 +637,8 @@ static struct compiler default_compilers[] =\n         -undef -D__OBJC__ -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n \t %{ansi:-trigraphs -D__STRICT_ANSI__}\\\n \t%{!undef:%{!ansi:%p} %P} %{trigraphs}\\\n-        %c %{O*:%{!O0:-D__OPTIMIZE__}} %{traditional} %{ftraditional:-traditional}\\\n+        %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\\n+        %{traditional} %{ftraditional:-traditional}\\\n         %{traditional-cpp:-traditional}\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\\n         %i %{!M:%{!MM:%{!E:%{!pipe:%g.i}}}}%{E:%W{o*}}%{M:%W{o*}}%{MM:%W{o*}} |\\n\",\n@@ -659,7 +662,8 @@ static struct compiler default_compilers[] =\n         -undef -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\\\n \t %{ansi:-trigraphs -D__STRICT_ANSI__}\\\n \t%{!undef:%{!ansi:%p} %P} %{trigraphs}\\\n-        %c %{O*:%{!O0:-D__OPTIMIZE__}} %{traditional} %{ftraditional:-traditional}\\\n+        %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\\n+        %{traditional} %{ftraditional:-traditional}\\\n         %{traditional-cpp:-traditional}\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\\n         %i %W{o*}\"},\n@@ -685,7 +689,8 @@ static struct compiler default_compilers[] =\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG} %{trigraphs}\\\n         -undef -$ %{!undef:%p %P} -D__ASSEMBLER__ \\\n-        %c %{O*:%{!O0:-D__OPTIMIZE__}} %{traditional} %{ftraditional:-traditional}\\\n+        %c %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\\n+        %{traditional} %{ftraditional:-traditional}\\\n         %{traditional-cpp:-traditional}\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\\\n         %i %{!M:%{!MM:%{!E:%{!pipe:%g.s}}}}%{E:%W{o*}}%{M:%W{o*}}%{MM:%W{o*}} |\\n\","}, {"sha": "562eb77e6f1ab458e0f2dd3a12c3312bd5dddb8f", "filename": "gcc/invoke.texi", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "patch": "@@ -1,4 +1,4 @@\n-@c Copyright (C) 1988,89,92,93,94,95,96,1997 Free Software Foundation, Inc.\n+@c Copyright (C) 1988,89,92-97,1998 Free Software Foundation, Inc.\n @c This is part of the GCC manual.\n @c For copying conditions, see the file gcc.texi.\n \n@@ -155,7 +155,7 @@ in the following sections.\n -fschedule-insns2  -fstrength-reduce  -fthread-jumps\n -funroll-all-loops  -funroll-loops\n -fmove-all-movables  -freduce-all-givs\n--O  -O0  -O1  -O2  -O3\n+-O  -O0  -O1  -O2  -O3 -Os\n @end smallexample\n \n @item Preprocessor Options\n@@ -2078,6 +2078,11 @@ Optimize yet more.  @samp{-O3} turns on all optimizations specified by\n @item -O0\n Do not optimize.\n \n+@item -Os\n+Optimize for size.  @samp{-Os} enables all @samp{-O2} optimizations that\n+do not typically increase code size.  It also performs further\n+optimizations designed to reduce code size.\n+\n If you use multiple @samp{-O} options, with or without level numbers,\n the last such option is the one that is effective.\n @end table"}, {"sha": "981d0f91a1a8799cf78ddd83cedc405709ba4bb3", "filename": "gcc/tm.texi", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "patch": "@@ -1,4 +1,4 @@\n-@c Copyright (C) 1988,89,92,93,94,96,1997 Free Software Foundation, Inc.\n+@c Copyright (C) 1988,89,92-97,1998 Free Software Foundation, Inc.\n @c This is part of the GCC manual.\n @c For copying conditions, see the file gcc.texi.\n \n@@ -591,7 +591,7 @@ Don't use this macro to turn on various extra optimizations for\n @samp{-O}.  That is what @code{OPTIMIZATION_OPTIONS} is for.\n \n @findex OPTIMIZATION_OPTIONS\n-@item OPTIMIZATION_OPTIONS (@var{level})\n+@item OPTIMIZATION_OPTIONS (@var{level}, @var{size})\n Some machines may desire to change what optimizations are performed for\n various optimization levels.   This macro, if defined, is executed once\n just after the optimization level is determined and before the remainder\n@@ -601,6 +601,8 @@ used as the default values for the other command line options.\n @var{level} is the optimization level specified; 2 if @samp{-O2} is\n specified, 1 if @samp{-O} is specified, and 0 if neither is specified.\n \n+@var{size} is non-zero if @samp{-Os} is specified and zero otherwise.\n+\n You should not use this macro to change options that are not\n machine-specific.  These should uniformly selected by the same\n optimization level on all supported machines.  Use this macro to enable"}, {"sha": "5d19787ea4a92541963fdba294ffdea0c84dab65", "filename": "gcc/toplev.c", "status": "modified", "additions": 35, "deletions": 10, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=c6aded7c2b2a2d3f26cce0ada1ef379d3ef37312", "patch": "@@ -1,5 +1,5 @@\n /* Top level of GNU C compiler\n-   Copyright (C) 1987, 88, 89, 92-6, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 88, 89, 92-7, 1998 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -306,6 +306,13 @@ int use_gnu_debug_info_extensions = 0;\n \n int optimize = 0;\n \n+/* Nonzero means optimize for size.  -Os.\n+   The only valid values are zero and non-zero. When optimize_size is\n+   non-zero, optimize defaults to 2, but certain individual code\n+   bloating optimizations are disabled.  */\n+\n+int optimize_size = 0;\n+\n /* Number of error messages and warning messages so far.  */\n \n int errorcount = 0;\n@@ -3719,18 +3726,27 @@ main (argc, argv, envp)\n \t}\n       else if (argv[i][0] == '-' && argv[i][1] == 'O')\n \t{\n-\t  /* Handle -O2, -O3, -O69, ...  */\n+\t  /* Handle -Os, -O2, -O3, -O69, ...  */\n \t  char *p = &argv[i][2];\n \t  int c;\n-\n-\t  while (c = *p++)\n-\t    if (! (c >= '0' && c <= '9'))\n-\t      break;\n-\t  if (c == 0)\n-\t    optimize = atoi (&argv[i][2]);\n+\t  \n+\t  if ((p[0] == 's') && (p[1] == 0))\n+\t    optimize_size = 1;\n+\t  else\n+\t    {\t    \n+\t      while (c = *p++)\n+\t\tif (! (c >= '0' && c <= '9'))\n+\t\t  break;\n+\t      if (c == 0)\n+\t\toptimize = atoi (&argv[i][2]);\n+\t    }\n \t}\n     }\n \n+  /* Optimizing for size forces optimize to be no less than 2. */\n+  if (optimize_size && (optimize < 2))\n+    optimize = 2;\n+    \n   obey_regdecls = (optimize == 0);\n \n   if (optimize >= 1)\n@@ -3767,14 +3783,20 @@ main (argc, argv, envp)\n       flag_inline_functions = 1;\n     }\n \n+  /* Disable code bloating optimizations if optimizing for size. */\n+  if (optimize_size)\n+    {\n+      flag_inline_functions = 0;\n+    }\n+\n   /* Initialize target_flags before OPTIMIZATION_OPTIONS so the latter can\n      modify it.  */\n   target_flags = 0;\n   set_target_switch (\"\");\n \n #ifdef OPTIMIZATION_OPTIONS\n   /* Allow default optimizations to be specified on a per-machine basis.  */\n-  OPTIMIZATION_OPTIONS (optimize);\n+  OPTIMIZATION_OPTIONS (optimize, optimize_size);\n #endif\n \n   /* Initialize register usage now so switches may override.  */\n@@ -3966,8 +3988,11 @@ main (argc, argv, envp)\n \t  else if (str[0] == 'O')\n \t    {\n \t      register char *p = str+1;\n-\t      while (*p && *p >= '0' && *p <= '9')\n+\t      if (*p == 's')\n \t\tp++;\n+\t      else\n+\t\twhile (*p && *p >= '0' && *p <= '9')\n+\t\t  p++;\n \t      if (*p == '\\0')\n \t\t;\n \t      else"}]}