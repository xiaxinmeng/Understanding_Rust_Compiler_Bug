{"sha": "918f238e7f736ee291d76e77fcefdaee761bf167", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE4ZjIzOGU3ZjczNmVlMjkxZDc2ZTc3ZmNlZmRhZWU3NjFiZjE2Nw==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2011-03-08T22:02:59Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-08T22:02:59Z"}, "message": "re PR c++/47705 (internal compiler error: in convert_nontype_argument, at cp/pt.c:5006)\n\n\tPR c++/47705\n\t* pt.c (convert_nontype_argument): Only call decay_conversion on\n\tarrays.\n\nFrom-SVN: r170791", "tree": {"sha": "9e34e9175aa63544f2ab93ee0e71a2246845d64a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e34e9175aa63544f2ab93ee0e71a2246845d64a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/918f238e7f736ee291d76e77fcefdaee761bf167", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/918f238e7f736ee291d76e77fcefdaee761bf167", "html_url": "https://github.com/Rust-GCC/gccrs/commit/918f238e7f736ee291d76e77fcefdaee761bf167", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/918f238e7f736ee291d76e77fcefdaee761bf167/comments", "author": null, "committer": null, "parents": [{"sha": "ef78aed645ba8b781a9a78412669738dc7871c6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef78aed645ba8b781a9a78412669738dc7871c6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef78aed645ba8b781a9a78412669738dc7871c6a"}], "stats": {"total": 34, "additions": 18, "deletions": 16}, "files": [{"sha": "68f04e15eac414205cbd025544c08f67e7aebc7a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/918f238e7f736ee291d76e77fcefdaee761bf167/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/918f238e7f736ee291d76e77fcefdaee761bf167/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=918f238e7f736ee291d76e77fcefdaee761bf167", "patch": "@@ -1,3 +1,9 @@\n+2011-03-08  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/47705\n+\t* pt.c (convert_nontype_argument): Only call decay_conversion on\n+\tarrays.\n+\n 2011-03-08  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/47488"}, {"sha": "2ca2cd0c0c24c694f8d28020c926401b302b147d", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/918f238e7f736ee291d76e77fcefdaee761bf167/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/918f238e7f736ee291d76e77fcefdaee761bf167/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=918f238e7f736ee291d76e77fcefdaee761bf167", "patch": "@@ -5314,7 +5314,8 @@ convert_nontype_argument (tree type, tree expr, tsubst_flags_t complain)\n \n   /* Add the ADDR_EXPR now for the benefit of\n      value_dependent_expression_p.  */\n-  if (TYPE_PTROBV_P (type))\n+  if (TYPE_PTROBV_P (type)\n+      && TREE_CODE (TREE_TYPE (expr)) == ARRAY_TYPE)\n     expr = decay_conversion (expr);\n \n   /* If we are in a template, EXPR may be non-dependent, but still\n@@ -5369,20 +5370,15 @@ convert_nontype_argument (tree type, tree expr, tsubst_flags_t complain)\n \t qualification conversion. Let's strip everything.  */\n       else if (TYPE_PTROBV_P (type))\n \t{\n-\t  tree sub = expr;\n-\t  STRIP_NOPS (sub);\n-\t  if (TREE_CODE (sub) == ADDR_EXPR)\n-\t    {\n-\t      gcc_assert (TREE_CODE (TREE_TYPE (sub)) == POINTER_TYPE);\n-\t      /* Skip the ADDR_EXPR only if it is part of the decay for\n-\t\t an array. Otherwise, it is part of the original argument\n-\t\t in the source code.  */\n-\t      if (TREE_CODE (TREE_TYPE (TREE_OPERAND (sub, 0))) == ARRAY_TYPE)\n-\t\texpr = TREE_OPERAND (sub, 0);\n-\t      else\n-\t\texpr = sub;\n-\t      expr_type = TREE_TYPE (expr);\n-\t    }\n+\t  STRIP_NOPS (expr);\n+\t  gcc_assert (TREE_CODE (expr) == ADDR_EXPR);\n+\t  gcc_assert (TREE_CODE (TREE_TYPE (expr)) == POINTER_TYPE);\n+\t  /* Skip the ADDR_EXPR only if it is part of the decay for\n+\t     an array. Otherwise, it is part of the original argument\n+\t     in the source code.  */\n+\t  if (TREE_CODE (TREE_TYPE (TREE_OPERAND (expr, 0))) == ARRAY_TYPE)\n+\t    expr = TREE_OPERAND (expr, 0);\n+\t  expr_type = TREE_TYPE (expr);\n \t}\n     }\n "}, {"sha": "69cab54f412b48703b4ca159c78b88495f0ead44", "filename": "gcc/testsuite/g++.dg/template/nontype21.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/918f238e7f736ee291d76e77fcefdaee761bf167/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/918f238e7f736ee291d76e77fcefdaee761bf167/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype21.C?ref=918f238e7f736ee291d76e77fcefdaee761bf167", "patch": "@@ -4,4 +4,4 @@ template<char const * const x> class Something { };\n \n extern char const xyz;\n \n-class SomethingElse:public Something<xyz> { }; // { dg-error \"const char *\" }\n+class SomethingElse:public Something<xyz> { }; // { dg-error \"xyz. is a variable\" }"}]}