{"sha": "acd4ef9df257ce400c5eabfa9ab92a1b3196e090", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNkNGVmOWRmMjU3Y2U0MDBjNWVhYmZhOWFiOTJhMWIzMTk2ZTA5MA==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-09-18T12:45:51Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-26T08:59:11Z"}, "message": "[Ada] Fix harmless assertion failure in GNATprove mode\n\ngcc/ada/\n\n\t* inline.adb (Establish_Actual_Mapping_For_Inlined_Call): Add\n\tguard for a call to Set_Last_Assignment with the same condition\n\tas the assertion in that routine and explain why this guard\n\tfails in GNATprove mode.", "tree": {"sha": "6cb386d8a244eb7a2d762a4b15c1d3ba5ce71359", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cb386d8a244eb7a2d762a4b15c1d3ba5ce71359"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acd4ef9df257ce400c5eabfa9ab92a1b3196e090", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acd4ef9df257ce400c5eabfa9ab92a1b3196e090", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acd4ef9df257ce400c5eabfa9ab92a1b3196e090", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acd4ef9df257ce400c5eabfa9ab92a1b3196e090/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ab5d8c17b7b8ca792979997fb3a13b2c9eeba8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ab5d8c17b7b8ca792979997fb3a13b2c9eeba8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ab5d8c17b7b8ca792979997fb3a13b2c9eeba8b"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "c24763abedcaa6172fb0d16cb374b78ad2c91400", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acd4ef9df257ce400c5eabfa9ab92a1b3196e090/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acd4ef9df257ce400c5eabfa9ab92a1b3196e090/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=acd4ef9df257ce400c5eabfa9ab92a1b3196e090", "patch": "@@ -2917,7 +2917,24 @@ package body Inline is\n          --  formal in the inlined code.\n \n          if Is_Entity_Name (A) and then Ekind (F) /= E_In_Parameter then\n-            Set_Last_Assignment (Entity (A), Empty);\n+\n+            --  In GNATprove mode a protected component acting as an actual\n+            --  subprogram parameter will appear as inlined-for-proof. However,\n+            --  its E_Component entity is not an assignable object, so the\n+            --  assertion in Set_Last_Assignment will fail. We just omit the\n+            --  call to Set_Last_Assignment, because GNATprove flags useless\n+            --  assignments with its own flow analysis.\n+            --\n+            --  In GNAT mode such a problem does not occur, because protected\n+            --  components are inlined via object renamings whose entity kind\n+            --  E_Variable is assignable.\n+\n+            if Is_Assignable (Entity (A)) then\n+               Set_Last_Assignment (Entity (A), Empty);\n+            else\n+               pragma Assert\n+                 (GNATprove_Mode and then Is_Protected_Component (Entity (A)));\n+            end if;\n          end if;\n \n          --  If the argument may be a controlling argument in a call within"}]}