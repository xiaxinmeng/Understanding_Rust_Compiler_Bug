{"sha": "a8f3a62df168583299b417adf67abc55edd79f0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThmM2E2MmRmMTY4NTgzMjk5YjQxN2FkZjY3YWJjNTVlZGQ3OWYwZg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-21T23:33:51Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-21T23:33:51Z"}, "message": "Don't permit assigning abstract string/bool to numeric variable.\n\nFrom-SVN: r168145", "tree": {"sha": "8d2a7a0645782e55683e6000e9a664f47ae9d31e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d2a7a0645782e55683e6000e9a664f47ae9d31e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8f3a62df168583299b417adf67abc55edd79f0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8f3a62df168583299b417adf67abc55edd79f0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8f3a62df168583299b417adf67abc55edd79f0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8f3a62df168583299b417adf67abc55edd79f0f/comments", "author": null, "committer": null, "parents": [{"sha": "67eff3d9f72b4ae733dd519331f90757d48f0590", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67eff3d9f72b4ae733dd519331f90757d48f0590", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67eff3d9f72b4ae733dd519331f90757d48f0590"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "8d4730ee423a54d68c60c9740c14ef865027fd83", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8f3a62df168583299b417adf67abc55edd79f0f/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8f3a62df168583299b417adf67abc55edd79f0f/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=a8f3a62df168583299b417adf67abc55edd79f0f", "patch": "@@ -543,15 +543,17 @@ Type::are_assignable(const Type* lhs, const Type* rhs, std::string* reason)\n \t  || lhs->interface_type() != NULL))\n     return true;\n \n-  // An untyped constant may be assigned to a numeric type if it is\n-  // representable in that type.\n-  if (rhs->is_abstract()\n+  // An untyped numeric constant may be assigned to a numeric type if\n+  // it is representable in that type.\n+  if ((rhs->is_abstract()\n+       && (rhs->integer_type() != NULL\n+\t   || rhs->float_type() != NULL\n+\t   || rhs->complex_type() != NULL))\n       && (lhs->integer_type() != NULL\n \t  || lhs->float_type() != NULL\n \t  || lhs->complex_type() != NULL))\n     return true;\n \n-\n   // Give some better error messages.\n   if (reason != NULL && reason->empty())\n     {"}]}