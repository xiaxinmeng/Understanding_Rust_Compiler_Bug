{"sha": "e03dd76578bb5e8b6d5ba2a2628d349bd5c822bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAzZGQ3NjU3OGJiNWU4YjZkNWJhMmEyNjI4ZDM0OWJkNWM4MjJiZg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2016-02-10T18:01:40Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2016-02-10T18:01:40Z"}, "message": "re PR target/69148 (ICE (floating point exception) on s390x-linux-gnu)\n\n2016-02-10  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR target/69148\n\t* lra-constraints.c (curr_insn_transform): Find in/out operands\n\tfor secondary memory moves.  Update dups.\n\n2016-02-10  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR target/69468\n\t* gcc.target/s390/pr69148.c: New.\n\nFrom-SVN: r233283", "tree": {"sha": "c136e4cca5309a1b6a42fe765f6983429e68dd1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c136e4cca5309a1b6a42fe765f6983429e68dd1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e03dd76578bb5e8b6d5ba2a2628d349bd5c822bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e03dd76578bb5e8b6d5ba2a2628d349bd5c822bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e03dd76578bb5e8b6d5ba2a2628d349bd5c822bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e03dd76578bb5e8b6d5ba2a2628d349bd5c822bf/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "89908c8f2b5107f92dcd9a33098797cdf848a151", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89908c8f2b5107f92dcd9a33098797cdf848a151", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89908c8f2b5107f92dcd9a33098797cdf848a151"}], "stats": {"total": 55, "additions": 48, "deletions": 7}, "files": [{"sha": "b4495d868c2f02471ba3e1dbf28fa6e137e2ff63", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03dd76578bb5e8b6d5ba2a2628d349bd5c822bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03dd76578bb5e8b6d5ba2a2628d349bd5c822bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e03dd76578bb5e8b6d5ba2a2628d349bd5c822bf", "patch": "@@ -1,3 +1,9 @@\n+2016-02-10  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/69148\n+\t* lra-constraints.c (curr_insn_transform): Find in/out operands\n+\tfor secondary memory moves.  Update dups.\n+\n 2016-02-10  Yuri Rumyantsev  <ysrumyan@gmail.com>\n \n \tPR tree-optimization/69652"}, {"sha": "751ec3ef28aa243f33a488ec466c45464eb1c707", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03dd76578bb5e8b6d5ba2a2628d349bd5c822bf/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03dd76578bb5e8b6d5ba2a2628d349bd5c822bf/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=e03dd76578bb5e8b6d5ba2a2628d349bd5c822bf", "patch": "@@ -3559,14 +3559,26 @@ curr_insn_transform (bool check_only_p)\n \n   if (use_sec_mem_p)\n     {\n+      int in = -1, out = -1;\n       rtx new_reg, src, dest, rld;\n       machine_mode sec_mode, rld_mode;\n \n-      lra_assert (sec_mem_p);\n-      lra_assert (curr_static_id->operand[0].type == OP_OUT\n-\t\t  && curr_static_id->operand[1].type == OP_IN);\n-      dest = *curr_id->operand_loc[0];\n-      src = *curr_id->operand_loc[1];\n+      lra_assert (curr_insn_set != NULL_RTX && sec_mem_p);\n+      dest = SET_DEST (curr_insn_set);\n+      src = SET_SRC (curr_insn_set);\n+      for (i = 0; i < n_operands; i++)\n+\tif (*curr_id->operand_loc[i] == dest)\n+\t  out = i;\n+\telse if (*curr_id->operand_loc[i] == src)\n+\t  in = i;\n+      for (i = 0; i < curr_static_id->n_dups; i++)\n+\tif (out < 0 && *curr_id->dup_loc[i] == dest)\n+\t  out = curr_static_id->dup_num[i];\n+\telse if (in < 0 && *curr_id->dup_loc[i] == src)\n+\t  in = curr_static_id->dup_num[i];\n+      lra_assert (out >= 0 && in >= 0\n+\t\t  && curr_static_id->operand[out].type == OP_OUT\n+\t\t  && curr_static_id->operand[in].type == OP_IN);\n       rld = (GET_MODE_SIZE (GET_MODE (dest)) <= GET_MODE_SIZE (GET_MODE (src))\n \t     ? dest : src);\n       rld_mode = GET_MODE (rld);\n@@ -3599,14 +3611,16 @@ curr_insn_transform (bool check_only_p)\n \t}\n       else if (dest == rld)\n         {\n-\t  *curr_id->operand_loc[0] = new_reg;\n+\t  *curr_id->operand_loc[out] = new_reg;\n+\t  lra_update_dup (curr_id, out);\n \t  after = emit_spill_move (false, new_reg, dest);\n \t  lra_process_new_insns (curr_insn, NULL, after,\n \t\t\t\t \"Inserting the sec. move\");\n \t}\n       else\n \t{\n-\t  *curr_id->operand_loc[1] = new_reg;\n+\t  *curr_id->operand_loc[in] = new_reg;\n+\t  lra_update_dup (curr_id, in);\n \t  /* See comments above.  */\n \t  push_to_sequence (before);\n \t  before = emit_spill_move (true, new_reg, src);"}, {"sha": "090b3dd27783e80aa79a6e38d265b7d245c600e2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03dd76578bb5e8b6d5ba2a2628d349bd5c822bf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03dd76578bb5e8b6d5ba2a2628d349bd5c822bf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e03dd76578bb5e8b6d5ba2a2628d349bd5c822bf", "patch": "@@ -1,3 +1,8 @@\n+2016-02-10  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/69468\n+\t* gcc.target/s390/pr69148.c: New.\n+\n 2016-02-10  Yuri Rumyantsev  <ysrumyan@gmail.com>\n \n \tPR tree-optimization/69652"}, {"sha": "5570b52b8cee44debfd7bdefa53c7bd328cf8c8d", "filename": "gcc/testsuite/gcc.target/s390/pr69148.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e03dd76578bb5e8b6d5ba2a2628d349bd5c822bf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr69148.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e03dd76578bb5e8b6d5ba2a2628d349bd5c822bf/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr69148.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr69148.c?ref=e03dd76578bb5e8b6d5ba2a2628d349bd5c822bf", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -march=z196 -m64 -w\" } */\n+union U { int r; float f; };\n+struct A {\n+  int a;\n+    union U b[64];\n+    };\n+    double foo (double);\n+\n+void\n+bar (struct A *z, int x)\n+{\n+  union U y;\n+  y.f = foo (z->b[x].f);\n+  z->a = y.r ? 4 : y.r;\n+}"}]}