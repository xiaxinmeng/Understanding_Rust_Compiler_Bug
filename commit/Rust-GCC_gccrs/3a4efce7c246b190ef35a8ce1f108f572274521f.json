{"sha": "3a4efce7c246b190ef35a8ce1f108f572274521f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E0ZWZjZTdjMjQ2YjE5MGVmMzVhOGNlMWYxMDhmNTcyMjc0NTIxZg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2013-12-10T01:23:37Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2013-12-10T01:23:37Z"}, "message": "re PR preprocessor/55715 (bogus overflow warning for #if A-B when A<0 & B==minimum integer)\n\n\tPR preprocessor/55715\nlibcpp:\n\t* expr.c (num_binary_op): Implement subtraction directly rather\n\tthan with negation and falling through into addition case.\n\ngcc/testsuite:\n\t* gcc.dg/cpp/expr-overflow-1.c: New test.\n\nFrom-SVN: r205846", "tree": {"sha": "17fee4f3cb77d383b7ed61dc4891d6ab12174ac5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17fee4f3cb77d383b7ed61dc4891d6ab12174ac5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a4efce7c246b190ef35a8ce1f108f572274521f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a4efce7c246b190ef35a8ce1f108f572274521f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a4efce7c246b190ef35a8ce1f108f572274521f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a4efce7c246b190ef35a8ce1f108f572274521f/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e73d2479dd03132a1147c013426ea8e88c10d2ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e73d2479dd03132a1147c013426ea8e88c10d2ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e73d2479dd03132a1147c013426ea8e88c10d2ff"}], "stats": {"total": 72, "additions": 71, "deletions": 1}, "files": [{"sha": "7945eac39fb58e7c79dce02dcd7c5c0b8c986e6b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a4efce7c246b190ef35a8ce1f108f572274521f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a4efce7c246b190ef35a8ce1f108f572274521f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3a4efce7c246b190ef35a8ce1f108f572274521f", "patch": "@@ -1,3 +1,8 @@\n+2013-12-09  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR preprocessor/55715\n+\t* gcc.dg/cpp/expr-overflow-1.c: New test.\n+\n 2013-12-10  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/59428"}, {"sha": "8a67aaa6d46664042fc1cc62a09c5c42dce50135", "filename": "gcc/testsuite/gcc.dg/cpp/expr-overflow-1.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a4efce7c246b190ef35a8ce1f108f572274521f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fexpr-overflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a4efce7c246b190ef35a8ce1f108f572274521f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fexpr-overflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fexpr-overflow-1.c?ref=3a4efce7c246b190ef35a8ce1f108f572274521f", "patch": "@@ -0,0 +1,44 @@\n+/* Test overflow in preprocessor arithmetic.  PR 55715.  */\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=c99\" } */\n+\n+#include <stdint.h>\n+\n+#if -1 - INTMAX_MIN\n+#endif\n+\n+#if 0 - INTMAX_MIN /* { dg-warning \"overflow\" } */\n+#endif\n+\n+#if 1 * INTMAX_MIN\n+#endif\n+\n+#if -1 * INTMAX_MIN /* { dg-warning \"overflow\" } */\n+#endif\n+\n+#if 0 * INTMAX_MIN\n+#endif\n+\n+#if -INTMAX_MIN /* { dg-warning \"overflow\" } */\n+#endif\n+\n+#if +INTMAX_MIN\n+#endif\n+\n+#if INTMAX_MIN / 1\n+#endif\n+\n+#if INTMAX_MIN / -1 /* { dg-warning \"overflow\" } */\n+#endif\n+\n+#if UINTMAX_MAX * UINTMAX_MAX\n+#endif\n+\n+#if UINTMAX_MAX / -1\n+#endif\n+\n+#if UINTMAX_MAX + INTMAX_MAX\n+#endif\n+\n+#if UINTMAX_MAX - INTMAX_MIN\n+#endif"}, {"sha": "4a06d0c3a63217dcded0830cd384db1650fe5aed", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a4efce7c246b190ef35a8ce1f108f572274521f/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a4efce7c246b190ef35a8ce1f108f572274521f/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=3a4efce7c246b190ef35a8ce1f108f572274521f", "patch": "@@ -1,3 +1,9 @@\n+2013-12-09  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR preprocessor/55715\n+\t* expr.c (num_binary_op): Implement subtraction directly rather\n+\tthan with negation and falling through into addition case.\n+\n 2013-11-18  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* lex.c (search_line_fast): Correct for little endian."}, {"sha": "1e17b005deea26ec37bf0c015b0a5fdae8d136b4", "filename": "libcpp/expr.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a4efce7c246b190ef35a8ce1f108f572274521f/libcpp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a4efce7c246b190ef35a8ce1f108f572274521f/libcpp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fexpr.c?ref=3a4efce7c246b190ef35a8ce1f108f572274521f", "patch": "@@ -1836,7 +1836,22 @@ num_binary_op (cpp_reader *pfile, cpp_num lhs, cpp_num rhs, enum cpp_ttype op)\n \n       /* Arithmetic.  */\n     case CPP_MINUS:\n-      rhs = num_negate (rhs, precision);\n+      result.low = lhs.low - rhs.low;\n+      result.high = lhs.high - rhs.high;\n+      if (result.low > lhs.low)\n+\tresult.high--;\n+      result.unsignedp = lhs.unsignedp || rhs.unsignedp;\n+      result.overflow = false;\n+\n+      result = num_trim (result, precision);\n+      if (!result.unsignedp)\n+\t{\n+\t  bool lhsp = num_positive (lhs, precision);\n+\t  result.overflow = (lhsp != num_positive (rhs, precision)\n+\t\t\t     && lhsp != num_positive (result, precision));\n+\t}\n+      return result;\n+\n     case CPP_PLUS:\n       result.low = lhs.low + rhs.low;\n       result.high = lhs.high + rhs.high;"}]}