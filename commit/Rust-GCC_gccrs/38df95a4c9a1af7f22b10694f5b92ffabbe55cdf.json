{"sha": "38df95a4c9a1af7f22b10694f5b92ffabbe55cdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhkZjk1YTRjOWExYWY3ZjIyYjEwNjk0ZjViOTJmZmFiYmU1NWNkZg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2001-02-02T17:57:57Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-02-02T17:57:57Z"}, "message": "float-sh.h (LDBL_EPSILON, [...]): Prevent truncation to 32-bit doubles on -m3e and -m4-single-only.\n\n* config/float-sh.h (LDBL_EPSILON, LDBL_MIN, LDBL_MAX): Prevent\ntruncation to 32-bit doubles on -m3e and -m4-single-only.\n\nFrom-SVN: r39409", "tree": {"sha": "5542da1454c90af27a4f42a9b9c34565d9c7ee83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5542da1454c90af27a4f42a9b9c34565d9c7ee83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38df95a4c9a1af7f22b10694f5b92ffabbe55cdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38df95a4c9a1af7f22b10694f5b92ffabbe55cdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38df95a4c9a1af7f22b10694f5b92ffabbe55cdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38df95a4c9a1af7f22b10694f5b92ffabbe55cdf/comments", "author": null, "committer": null, "parents": [{"sha": "049f6ec972093cb435f6d842386872c1c6001a0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/049f6ec972093cb435f6d842386872c1c6001a0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/049f6ec972093cb435f6d842386872c1c6001a0c"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "455cbbc2a6acaa3dd4d6185e2eaa189cc438e9bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38df95a4c9a1af7f22b10694f5b92ffabbe55cdf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38df95a4c9a1af7f22b10694f5b92ffabbe55cdf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=38df95a4c9a1af7f22b10694f5b92ffabbe55cdf", "patch": "@@ -1,3 +1,8 @@\n+2001-02-02  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* config/float-sh.h (LDBL_EPSILON, LDBL_MIN, LDBL_MAX): Prevent\n+\ttruncation to 32-bit doubles on -m3e and -m4-single-only.\n+\n 2001-02-02  Mark Mitchell  <mark@codesourcery.com>\n \n \t* gcc.c (init_gcc_specs): New function.  Make -shared-libgcc "}, {"sha": "0ff8d3b3cce78d7a0f6684aea19f4b6594828835", "filename": "gcc/config/float-sh.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38df95a4c9a1af7f22b10694f5b92ffabbe55cdf/gcc%2Fconfig%2Ffloat-sh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38df95a4c9a1af7f22b10694f5b92ffabbe55cdf/gcc%2Fconfig%2Ffloat-sh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffloat-sh.h?ref=38df95a4c9a1af7f22b10694f5b92ffabbe55cdf", "patch": "@@ -99,6 +99,9 @@\n \n #endif\n \n+/* Because -m3e and -m4-single-only have 32-bit doubles, we append L\n+   to the doubles below, so that they're not truncated.  */\n+\n    /* Number of base-FLT_RADIX digits in the significand of a long double */\n #undef LDBL_MANT_DIG\n #define LDBL_MANT_DIG 53\n@@ -107,13 +110,13 @@\n #define LDBL_DIG 15\n    /* Difference between 1.0 and the minimum long double greater than 1.0 */\n #undef LDBL_EPSILON\n-#define LDBL_EPSILON 2.2204460492503131e-16\n+#define LDBL_EPSILON 2.2204460492503131e-16L\n    /* Minimum int x such that FLT_RADIX**(x-1) is a normalised long double */\n #undef LDBL_MIN_EXP\n #define LDBL_MIN_EXP (-1021)\n    /* Minimum normalised long double */\n #undef LDBL_MIN\n-#define LDBL_MIN 2.2250738585072014e-308\n+#define LDBL_MIN 2.2250738585072014e-308L\n    /* Minimum int x such that 10**x is a normalised long double */\n #undef LDBL_MIN_10_EXP\n #define LDBL_MIN_10_EXP (-307)\n@@ -122,7 +125,7 @@\n #define LDBL_MAX_EXP 1024\n    /* Maximum long double */\n #undef LDBL_MAX\n-#define LDBL_MAX 1.7976931348623157e+308\n+#define LDBL_MAX 1.7976931348623157e+308L\n    /* Maximum int x such that 10**x is a representable long double */\n #undef LDBL_MAX_10_EXP\n #define LDBL_MAX_10_EXP 308"}]}