{"sha": "3203ed5f0182e7dbf1c74e6598e718641a3d4013", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIwM2VkNWYwMTgyZTdkYmYxYzc0ZTY1OThlNzE4NjQxYTNkNDAxMw==", "commit": {"author": {"name": "Tim Shen", "email": "timshen@google.com", "date": "2016-11-27T00:32:04Z"}, "committer": {"name": "Tim Shen", "email": "timshen@gcc.gnu.org", "date": "2016-11-27T00:32:04Z"}, "message": "re PR libstdc++/78441 ([variant] variant_alternative doesn't allow cv qualifiers)\n\n\tPR libstdc++/78441\n\t* include/std/variant: Propagate cv qualifications to types returned\n\tby variant_alternative.\n\t* testsuite/20_util/variant/compile.cc: Tests.\n\nFrom-SVN: r242892", "tree": {"sha": "0db3aa4bf197b8f1448c76a2cd58777ba299b74b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0db3aa4bf197b8f1448c76a2cd58777ba299b74b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3203ed5f0182e7dbf1c74e6598e718641a3d4013", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3203ed5f0182e7dbf1c74e6598e718641a3d4013", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3203ed5f0182e7dbf1c74e6598e718641a3d4013", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3203ed5f0182e7dbf1c74e6598e718641a3d4013/comments", "author": {"login": "timshen91", "id": 1157432, "node_id": "MDQ6VXNlcjExNTc0MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1157432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timshen91", "html_url": "https://github.com/timshen91", "followers_url": "https://api.github.com/users/timshen91/followers", "following_url": "https://api.github.com/users/timshen91/following{/other_user}", "gists_url": "https://api.github.com/users/timshen91/gists{/gist_id}", "starred_url": "https://api.github.com/users/timshen91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timshen91/subscriptions", "organizations_url": "https://api.github.com/users/timshen91/orgs", "repos_url": "https://api.github.com/users/timshen91/repos", "events_url": "https://api.github.com/users/timshen91/events{/privacy}", "received_events_url": "https://api.github.com/users/timshen91/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "216c1ee8384255ff0a345608d0f97e74b2da312c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/216c1ee8384255ff0a345608d0f97e74b2da312c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/216c1ee8384255ff0a345608d0f97e74b2da312c"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "4a26191fb8fe95c16dad926fc3e6a1c672a1935f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3203ed5f0182e7dbf1c74e6598e718641a3d4013/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3203ed5f0182e7dbf1c74e6598e718641a3d4013/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3203ed5f0182e7dbf1c74e6598e718641a3d4013", "patch": "@@ -1,3 +1,10 @@\n+2016-11-26  Tim Shen  <timshen@google.com>\n+\n+\tPR libstdc++/78441\n+\t* include/std/variant: Propagate cv qualifications to types returned\n+\tby variant_alternative.\n+\t* testsuite/20_util/variant/compile.cc: Tests.\n+\n 2016-11-23  Felix Morgner  <felix.morgner@gmail.com>\n \t    Jonathan Wakely  <jwakely@redhat.com>\n "}, {"sha": "34ad3fdefb0081e8974642be5ac1ac2e6858636d", "filename": "libstdc++-v3/include/std/variant", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3203ed5f0182e7dbf1c74e6598e718641a3d4013/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3203ed5f0182e7dbf1c74e6598e718641a3d4013/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant?ref=3203ed5f0182e7dbf1c74e6598e718641a3d4013", "patch": "@@ -85,6 +85,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     using variant_alternative_t =\n       typename variant_alternative<_Np, _Variant>::type;\n \n+  template<size_t _Np, typename _Variant>\n+    struct variant_alternative<_Np, const _Variant>\n+    { using type = add_const_t<variant_alternative_t<_Np, _Variant>>; };\n+\n+  template<size_t _Np, typename _Variant>\n+    struct variant_alternative<_Np, volatile _Variant>\n+    { using type = add_volatile_t<variant_alternative_t<_Np, _Variant>>; };\n+\n+  template<size_t _Np, typename _Variant>\n+    struct variant_alternative<_Np, const volatile _Variant>\n+    { using type = add_cv_t<variant_alternative_t<_Np, _Variant>>; };\n+\n   constexpr size_t variant_npos = -1;\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "e3330bef928cc88ea5c6d09c81dd6f5d36dff669", "filename": "libstdc++-v3/testsuite/20_util/variant/compile.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3203ed5f0182e7dbf1c74e6598e718641a3d4013/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2Fcompile.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3203ed5f0182e7dbf1c74e6598e718641a3d4013/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2Fcompile.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fvariant%2Fcompile.cc?ref=3203ed5f0182e7dbf1c74e6598e718641a3d4013", "patch": "@@ -330,3 +330,12 @@ void test_adl()\n    variant<X> v8{allocator_arg, a, in_place_type<X>, il, x};\n    variant<X> v9{allocator_arg, a, in_place_type<X>, 1};\n }\n+\n+void test_variant_alternative() {\n+  static_assert(is_same_v<variant_alternative_t<0, variant<int, string>>, int>, \"\");\n+  static_assert(is_same_v<variant_alternative_t<1, variant<int, string>>, string>, \"\");\n+\n+  static_assert(is_same_v<variant_alternative_t<0, const variant<int>>, const int>, \"\");\n+  static_assert(is_same_v<variant_alternative_t<0, volatile variant<int>>, volatile int>, \"\");\n+  static_assert(is_same_v<variant_alternative_t<0, const volatile variant<int>>, const volatile int>, \"\");\n+}"}]}