{"sha": "ba793d6e429767eb37d63e2fa94ccf42a36806bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE3OTNkNmU0Mjk3NjdlYjM3ZDYzZTJmYTk0Y2NmNDJhMzY4MDZiZA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-01-23T19:51:01Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-01-23T19:51:01Z"}, "message": "cp-tree.h (__eprintf): Remove declaration.\n\n\t* cp-tree.h (__eprintf): Remove declaration.\n\t* tree.c (__eprintf): Remove definition.\n\n\t* cp-tree.h (CLASSTYPE_MARKED_N, SET_CLASSTYPE_MARKED_N,\n\tCLEAR_CLASSTYPE_MARKED_N): Avoid signed vs. unsigned warnings.\n\nFrom-SVN: r31573", "tree": {"sha": "cc088452431d16ed885deea0cbc33386395303cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc088452431d16ed885deea0cbc33386395303cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba793d6e429767eb37d63e2fa94ccf42a36806bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba793d6e429767eb37d63e2fa94ccf42a36806bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba793d6e429767eb37d63e2fa94ccf42a36806bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba793d6e429767eb37d63e2fa94ccf42a36806bd/comments", "author": null, "committer": null, "parents": [{"sha": "ae373eda2fc639df6dc12ae1bb111f5a9f0f151f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae373eda2fc639df6dc12ae1bb111f5a9f0f151f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae373eda2fc639df6dc12ae1bb111f5a9f0f151f"}], "stats": {"total": 50, "additions": 21, "deletions": 29}, "files": [{"sha": "3295b630a913d3042ef47f878a50d94fc9ecc694", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba793d6e429767eb37d63e2fa94ccf42a36806bd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba793d6e429767eb37d63e2fa94ccf42a36806bd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ba793d6e429767eb37d63e2fa94ccf42a36806bd", "patch": "@@ -1,3 +1,14 @@\n+2000-01-23  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* cp-tree.h (__eprintf): Remove declaration.\n+\t* tree.c (__eprintf): Remove definition.\n+\n+2000-01-23  Zack Weinberg  <zack@rabi.columbia.edu>\n+\t    Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* cp-tree.h (CLASSTYPE_MARKED_N, SET_CLASSTYPE_MARKED_N,\n+\tCLEAR_CLASSTYPE_MARKED_N): Avoid signed vs. unsigned warnings.\n+\n 2000-01-23  Brad Lucier  <lucier@math.purdue.edu>\n \n \t* class.c (dump_class_hierarchy): Print HOST_WIDE_INT properly."}, {"sha": "8884811fce9fab9cc64c56538e2518cc1b45f095", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba793d6e429767eb37d63e2fa94ccf42a36806bd/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba793d6e429767eb37d63e2fa94ccf42a36806bd/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=ba793d6e429767eb37d63e2fa94ccf42a36806bd", "patch": "@@ -1409,21 +1409,21 @@ struct lang_type\n /* Mark bits for depth-first and breath-first searches.  */\n \n /* Get the value of the Nth mark bit.  */\n-#define CLASSTYPE_MARKED_N(NODE, N)\t\t\t\t\t\\\n+#define CLASSTYPE_MARKED_N(NODE, N)\t\t\t\t\\\n   (((CLASS_TYPE_P (NODE) ? TYPE_LANG_SPECIFIC (NODE)->marks\t\\\n-     : TYPE_ALIAS_SET (NODE)) & (1 << N)) != 0)\n+     : ((unsigned) TYPE_ALIAS_SET (NODE))) & (1 << N)) != 0)\n \n /* Set the Nth mark bit.  */\n-#define SET_CLASSTYPE_MARKED_N(NODE, N)\t\t\t\t\t\\\n-  (CLASS_TYPE_P (NODE)\t\t\t\t\t\t\t\\\n-   ? (TYPE_LANG_SPECIFIC (NODE)->marks |= (1 << (N)))\t\\\n-   : (TYPE_ALIAS_SET (NODE) |= (1 << (N))))\n+#define SET_CLASSTYPE_MARKED_N(NODE, N)\t\t\t\t\\\n+  (CLASS_TYPE_P (NODE)\t\t\t\t\t\t\\\n+   ? (void) (TYPE_LANG_SPECIFIC (NODE)->marks |= (1 << (N)))\t\\\n+   : (void) (TYPE_ALIAS_SET (NODE) |= (1 << (N))))\n \n /* Clear the Nth mark bit.  */\n-#define CLEAR_CLASSTYPE_MARKED_N(NODE, N)\t\t\t\t\\\n-  (CLASS_TYPE_P (NODE)\t\t\t\t\t\t\t\\\n-   ? (TYPE_LANG_SPECIFIC (NODE)->marks &= ~(1 << (N)))\t\\\n-   : (TYPE_ALIAS_SET (NODE) &= ~(1 << (N))))\n+#define CLEAR_CLASSTYPE_MARKED_N(NODE, N)\t\t\t\\\n+  (CLASS_TYPE_P (NODE)\t\t\t\t\t\t\\\n+   ? (void) (TYPE_LANG_SPECIFIC (NODE)->marks &= ~(1 << (N)))\t\\\n+   : (void) (TYPE_ALIAS_SET (NODE) &= ~(1 << (N))))\n \n /* Get the value of the mark bits.  */\n #define CLASSTYPE_MARKED(NODE) CLASSTYPE_MARKED_N(NODE, 0)\n@@ -4164,8 +4164,6 @@ extern const char *lang_printable_name\t\tPROTO((tree, int));\n extern tree build_exception_variant\t\tPROTO((tree, tree));\n extern tree copy_template_template_parm\t\tPROTO((tree));\n extern void print_lang_statistics\t\tPROTO((void));\n-extern void __eprintf\n-\tPROTO((const char *, const char *, unsigned, const char *));\n extern tree array_type_nelts_total\t\tPROTO((tree));\n extern tree array_type_nelts_top\t\tPROTO((tree));\n extern tree break_out_target_exprs\t\tPROTO((tree));"}, {"sha": "4a47ba8bf96daf22cc9613c0f92097a26f75b054", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba793d6e429767eb37d63e2fa94ccf42a36806bd/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba793d6e429767eb37d63e2fa94ccf42a36806bd/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=ba793d6e429767eb37d63e2fa94ccf42a36806bd", "patch": "@@ -1482,23 +1482,6 @@ print_lang_statistics ()\n #endif\n }\n \n-/* This is used by the `assert' macro.  It is provided in libgcc.a,\n-   which `cc' doesn't know how to link.  Note that the C++ front-end\n-   no longer actually uses the `assert' macro (instead, it calls\n-   my_friendly_assert).  But all of the back-end files still need this.  */\n-\n-void\n-__eprintf (string, expression, line, filename)\n-     const char *string;\n-     const char *expression;\n-     unsigned line;\n-     const char *filename;\n-{\n-  fprintf (stderr, string, expression, line, filename);\n-  fflush (stderr);\n-  abort ();\n-}\n-\n /* Return, as an INTEGER_CST node, the number of elements for TYPE\n    (which is an ARRAY_TYPE).  This counts only elements of the top\n    array.  */"}]}