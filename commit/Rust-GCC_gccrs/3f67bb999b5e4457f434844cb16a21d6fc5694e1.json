{"sha": "3f67bb999b5e4457f434844cb16a21d6fc5694e1", "node_id": "C_kwDOANBUbNoAKDNmNjdiYjk5OWI1ZTQ0NTdmNDM0ODQ0Y2IxNmEyMWQ2ZmM1Njk0ZTE", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-10-20T15:28:50Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-10-22T09:49:14Z"}, "message": "Refactor fill_param_ty into cc file\n\nThis also changes the signiture to take a fat pointer instead of raw\npointer for the substitution.", "tree": {"sha": "65020c1f323aabf9308cac9645482d93cc6f79dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65020c1f323aabf9308cac9645482d93cc6f79dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f67bb999b5e4457f434844cb16a21d6fc5694e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f67bb999b5e4457f434844cb16a21d6fc5694e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f67bb999b5e4457f434844cb16a21d6fc5694e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f67bb999b5e4457f434844cb16a21d6fc5694e1/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "649e3e074bf8306bf0eb042f10483dbd61cd040b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/649e3e074bf8306bf0eb042f10483dbd61cd040b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/649e3e074bf8306bf0eb042f10483dbd61cd040b"}], "stats": {"total": 53, "additions": 28, "deletions": 25}, "files": [{"sha": "b6d88eee6a5352d00ddcc23a191011a7e141c4e5", "filename": "gcc/rust/typecheck/rust-tyty.cc", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f67bb999b5e4457f434844cb16a21d6fc5694e1/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f67bb999b5e4457f434844cb16a21d6fc5694e1/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc?ref=3f67bb999b5e4457f434844cb16a21d6fc5694e1", "patch": "@@ -328,6 +328,30 @@ StructFieldType::clone () const\n \t\t\t      get_field_type ()->clone ());\n }\n \n+void\n+SubstitutionParamMapping::fill_param_ty (BaseType &type, Location locus)\n+{\n+  if (type.get_kind () == TyTy::TypeKind::INFER)\n+    {\n+      type.inherit_bounds (*param);\n+    }\n+  else\n+    {\n+      if (!param->bounds_compatible (type, locus, true))\n+\treturn;\n+    }\n+\n+  if (type.get_kind () == TypeKind::PARAM)\n+    {\n+      delete param;\n+      param = static_cast<ParamType *> (type.clone ());\n+    }\n+  else\n+    {\n+      param->set_ty_ref (type.get_ref ());\n+    }\n+}\n+\n void\n SubstitutionParamMapping::override_context ()\n {\n@@ -643,7 +667,7 @@ ADTType::handle_substitions (SubstitutionArgumentMappings subst_mappings)\n       bool ok\n \t= subst_mappings.get_argument_for_symbol (sub.get_param_ty (), &arg);\n       if (ok)\n-\tsub.fill_param_ty (arg.get_tyty (), subst_mappings.get_locus ());\n+\tsub.fill_param_ty (*arg.get_tyty (), subst_mappings.get_locus ());\n     }\n \n   adt->iterate_fields ([&] (StructFieldType *field) mutable -> bool {\n@@ -924,7 +948,7 @@ FnType::handle_substitions (SubstitutionArgumentMappings subst_mappings)\n \t= subst_mappings.get_argument_for_symbol (sub.get_param_ty (), &arg);\n       if (ok)\n \t{\n-\t  sub.fill_param_ty (arg.get_tyty (), subst_mappings.get_locus ());\n+\t  sub.fill_param_ty (*arg.get_tyty (), subst_mappings.get_locus ());\n \t}\n     }\n \n@@ -2275,7 +2299,7 @@ ProjectionType::handle_substitions (SubstitutionArgumentMappings subst_mappings)\n       bool ok\n \t= subst_mappings.get_argument_for_symbol (sub.get_param_ty (), &arg);\n       if (ok)\n-\tsub.fill_param_ty (arg.get_tyty (), subst_mappings.get_locus ());\n+\tsub.fill_param_ty (*arg.get_tyty (), subst_mappings.get_locus ());\n     }\n \n   auto fty = projection->base;"}, {"sha": "0712c3cdb8d835f024fbed02972758c2941fca9e", "filename": "gcc/rust/typecheck/rust-tyty.h", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f67bb999b5e4457f434844cb16a21d6fc5694e1/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f67bb999b5e4457f434844cb16a21d6fc5694e1/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.h?ref=3f67bb999b5e4457f434844cb16a21d6fc5694e1", "patch": "@@ -626,28 +626,7 @@ class SubstitutionParamMapping\n \n   std::string as_string () const { return param->as_string (); }\n \n-  void fill_param_ty (BaseType *type, Location locus)\n-  {\n-    if (type->get_kind () == TyTy::TypeKind::INFER)\n-      {\n-\ttype->inherit_bounds (*param);\n-      }\n-    else\n-      {\n-\tif (!param->bounds_compatible (*type, locus, true))\n-\t  return;\n-      }\n-\n-    if (type->get_kind () == TypeKind::PARAM)\n-      {\n-\tdelete param;\n-\tparam = static_cast<ParamType *> (type->clone ());\n-      }\n-    else\n-      {\n-\tparam->set_ty_ref (type->get_ref ());\n-      }\n-  }\n+  void fill_param_ty (BaseType &type, Location locus);\n \n   SubstitutionParamMapping clone () const\n   {"}]}