{"sha": "5073ad7a647c3f8075429d7b69ac810cc53f118d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA3M2FkN2E2NDdjM2Y4MDc1NDI5ZDdiNjlhYzgxMGNjNTNmMTE4ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-11-20T11:52:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-11-20T11:52:08Z"}, "message": "[multiple changes]\n\n2014-11-20  Robert Dewar  <dewar@adacore.com>\n\n\t* gnatcmd.adb, sem_ch6.adb, exp_dist.adb: Minor reformatting.\n\t* sem_util.adb (Bad_Unordered_Enumeration_Reference): Suppress\n\twarning (return False) for generic type.\n\n2014-11-20  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_res.adb (Appears_In_Check): Removed.\n\t(Is_OK_Volatile_Context): Rewrite the checks which verify that\n\tan effectively volatile object subject to enabled properties\n\tAsync_Writers or Effective_Reads appears in a suitable context to\n\tproperly recognize a procedure call.\n\t(Within_Check): New routine.\n\t(Within_Procedure_Call): New routine.\n\nFrom-SVN: r217848", "tree": {"sha": "17d27b8748b96061f9da279b7ecbab8beb04add1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17d27b8748b96061f9da279b7ecbab8beb04add1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5073ad7a647c3f8075429d7b69ac810cc53f118d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5073ad7a647c3f8075429d7b69ac810cc53f118d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5073ad7a647c3f8075429d7b69ac810cc53f118d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5073ad7a647c3f8075429d7b69ac810cc53f118d/comments", "author": null, "committer": null, "parents": [{"sha": "bc5e261c09a9c3938baa1fdb93361f29e17ff40a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc5e261c09a9c3938baa1fdb93361f29e17ff40a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc5e261c09a9c3938baa1fdb93361f29e17ff40a"}], "stats": {"total": 169, "additions": 110, "deletions": 59}, "files": [{"sha": "83156e02012919a8398efb5729bde2e670c70304", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5073ad7a647c3f8075429d7b69ac810cc53f118d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5073ad7a647c3f8075429d7b69ac810cc53f118d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5073ad7a647c3f8075429d7b69ac810cc53f118d", "patch": "@@ -1,3 +1,19 @@\n+2014-11-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnatcmd.adb, sem_ch6.adb, exp_dist.adb: Minor reformatting.\n+\t* sem_util.adb (Bad_Unordered_Enumeration_Reference): Suppress\n+\twarning (return False) for generic type.\n+\n+2014-11-20  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_res.adb (Appears_In_Check): Removed.\n+\t(Is_OK_Volatile_Context): Rewrite the checks which verify that\n+\tan effectively volatile object subject to enabled properties\n+\tAsync_Writers or Effective_Reads appears in a suitable context to\n+\tproperly recognize a procedure call.\n+\t(Within_Check): New routine.\n+\t(Within_Procedure_Call): New routine.\n+\n 2014-11-20  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch6.adb: Improve better error message."}, {"sha": "310943bf042a001797aa8e1b0c4e1fccf0be1aa6", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5073ad7a647c3f8075429d7b69ac810cc53f118d/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5073ad7a647c3f8075429d7b69ac810cc53f118d/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=5073ad7a647c3f8075429d7b69ac810cc53f118d", "patch": "@@ -9801,15 +9801,11 @@ package body Exp_Dist is\n                         while Present (Disc) loop\n                            declare\n                               Discriminant : constant Entity_Id :=\n-                                               Make_Selected_Component (Loc,\n-                                                 Prefix        =>\n-                                                   Expr_Formal,\n-                                                 Selector_Name =>\n-                                                   Chars (Disc));\n-\n+                                Make_Selected_Component (Loc,\n+                                  Prefix        => Expr_Formal,\n+                                  Selector_Name => Chars (Disc));\n                            begin\n                               Set_Etype (Discriminant, Etype (Disc));\n-\n                               Append_To (Elements,\n                                 Make_Component_Association (Loc,\n                                   Choices => New_List (\n@@ -10031,14 +10027,16 @@ package body Exp_Dist is\n                      if Is_Limited_Type (Typ) then\n                         Append_To (Stms,\n                           Make_Implicit_If_Statement (Typ,\n-                            Condition => New_Occurrence_Of (Cstr_Formal, Loc),\n+                            Condition       =>\n+                              New_Occurrence_Of (Cstr_Formal, Loc),\n                             Then_Statements => New_List (\n                               Stream_Call (Name_Write)),\n                             Else_Statements => New_List (\n                               Stream_Call (Name_Output))));\n \n                      elsif Transmit_As_Unconstrained (Typ) then\n                         Append_To (Stms, Stream_Call (Name_Output));\n+\n                      else\n                         Append_To (Stms, Stream_Call (Name_Write));\n                      end if;\n@@ -10049,7 +10047,8 @@ package body Exp_Dist is\n \n                   Append_To (Stms,\n                     Make_Procedure_Call_Statement (Loc,\n-                      Name => New_Occurrence_Of (RTE (RE_BS_To_Any), Loc),\n+                      Name                   =>\n+                        New_Occurrence_Of (RTE (RE_BS_To_Any), Loc),\n                       Parameter_Associations => New_List (\n                         New_Occurrence_Of (Strm, Loc),\n                         New_Occurrence_Of (Any, Loc))));\n@@ -10059,7 +10058,8 @@ package body Exp_Dist is\n \n                   Append_To (Stms,\n                     Make_Procedure_Call_Statement (Loc,\n-                      Name => New_Occurrence_Of (RTE (RE_Release_Buffer), Loc),\n+                      Name                   =>\n+                        New_Occurrence_Of (RTE (RE_Release_Buffer), Loc),\n                       Parameter_Associations => New_List (\n                         New_Occurrence_Of (Strm, Loc))));\n                end;\n@@ -10070,7 +10070,8 @@ package body Exp_Dist is\n             if Present (Result_TC) then\n                Append_To (Stms,\n                  Make_Procedure_Call_Statement (Loc,\n-                   Name => New_Occurrence_Of (RTE (RE_Set_TC), Loc),\n+                   Name                   =>\n+                     New_Occurrence_Of (RTE (RE_Set_TC), Loc),\n                    Parameter_Associations => New_List (\n                      New_Occurrence_Of (Any, Loc),\n                      Result_TC)));"}, {"sha": "7f9ca1857f04526aa63fefd2df8231a609227c48", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5073ad7a647c3f8075429d7b69ac810cc53f118d/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5073ad7a647c3f8075429d7b69ac810cc53f118d/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=5073ad7a647c3f8075429d7b69ac810cc53f118d", "patch": "@@ -489,9 +489,8 @@ procedure GNATCmd is\n \n       for Index in 1 .. Last_Switches.Last loop\n          if Last_Switches.Table (Index) (1) /= '-'\n-           or else\n-           (Last_Switches.Table (Index).all'Length > 7\n-            and then Last_Switches.Table (Index) (1 .. 7) = \"-files=\")\n+           or else (Last_Switches.Table (Index).all'Length > 7\n+                     and then Last_Switches.Table (Index) (1 .. 7) = \"-files=\")\n          then\n             Add_Sources := False;\n             exit;\n@@ -507,9 +506,7 @@ procedure GNATCmd is\n          --  put the list of sources in it. For gnatstack create a temporary\n          --  file with the list of .ci files.\n \n-         if The_Command = List   or else\n-            The_Command = Stack\n-         then\n+         if The_Command = List or else The_Command = Stack then\n             Tempdir.Create_Temp_File (FD, Temp_File_Name);\n             Last_Switches.Increment_Last;\n             Last_Switches.Table (Last_Switches.Last) :=\n@@ -1937,6 +1934,7 @@ begin\n          --  a configuration pragmas file, if necessary.\n \n          if The_Command = Sync then\n+\n             --  If there are switches in package Compiler, put them in the\n             --  Carg_Switches table.\n \n@@ -2155,8 +2153,8 @@ begin\n          --  on the command line, call tool with all the sources of the main\n          --  project.\n \n-         if The_Command = Sync   or else\n-            The_Command = List   or else\n+         if The_Command = Sync  or else\n+            The_Command = List  or else\n             The_Command = Stack\n          then\n             Check_Files;"}, {"sha": "8c6b0d2233cdd24f5b11e0e8cfbcff4cf5a6b2b3", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5073ad7a647c3f8075429d7b69ac810cc53f118d/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5073ad7a647c3f8075429d7b69ac810cc53f118d/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=5073ad7a647c3f8075429d7b69ac810cc53f118d", "patch": "@@ -331,8 +331,8 @@ package body Sem_Ch6 is\n          --  which case the redeclaration is illegal.\n \n          if Present (Prev)\n-           and then Nkind (Original_Node (Unit_Declaration_Node (Prev)))\n-             =  N_Expression_Function\n+           and then Nkind (Original_Node (Unit_Declaration_Node (Prev))) =\n+                                                        N_Expression_Function\n          then\n             Error_Msg_Sloc := Sloc (Prev);\n             Error_Msg_N (\"& conflicts with declaration#\", Def_Id);"}, {"sha": "e0b1b0e20d497b818a8ed8a4caf77fee0aec4318", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 72, "deletions": 37, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5073ad7a647c3f8075429d7b69ac810cc53f118d/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5073ad7a647c3f8075429d7b69ac810cc53f118d/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=5073ad7a647c3f8075429d7b69ac810cc53f118d", "patch": "@@ -6897,51 +6897,83 @@ package body Sem_Res is\n    --  Used to resolve identifiers and expanded names\n \n    procedure Resolve_Entity_Name (N : Node_Id; Typ : Entity_Id) is\n-      function Appears_In_Check (Nod : Node_Id) return Boolean;\n-      --  Denote whether an arbitrary node Nod appears in a check node\n-\n       function Is_OK_Volatile_Context\n         (Context : Node_Id;\n          Obj_Ref : Node_Id) return Boolean;\n       --  Determine whether node Context denotes a \"non-interfering context\"\n       --  (as defined in SPARK RM 7.1.3(13)) where volatile reference Obj_Ref\n       --  can safely reside.\n \n-      ----------------------\n-      -- Appears_In_Check --\n-      ----------------------\n+      ----------------------------\n+      -- Is_OK_Volatile_Context --\n+      ----------------------------\n \n-      function Appears_In_Check (Nod : Node_Id) return Boolean is\n-         Par : Node_Id;\n+      function Is_OK_Volatile_Context\n+        (Context : Node_Id;\n+         Obj_Ref : Node_Id) return Boolean\n+      is\n+         function Within_Check (Nod : Node_Id) return Boolean;\n+         --  Determine whether an arbitrary node appears in a check node\n \n-      begin\n-         --  Climb the parent chain looking for a check node\n+         function Within_Procedure_Call (Nod : Node_Id) return Boolean;\n+         --  Determine whether an arbitrary node appears in a procedure call\n \n-         Par := Nod;\n-         while Present (Par) loop\n-            if Nkind (Par) in N_Raise_xxx_Error then\n-               return True;\n+         ------------------\n+         -- Within_Check --\n+         ------------------\n \n-            --  Prevent the search from going too far\n+         function Within_Check (Nod : Node_Id) return Boolean is\n+            Par : Node_Id;\n \n-            elsif Is_Body_Or_Package_Declaration (Par) then\n-               exit;\n-            end if;\n+         begin\n+            --  Climb the parent chain looking for a check node\n \n-            Par := Parent (Par);\n-         end loop;\n+            Par := Nod;\n+            while Present (Par) loop\n+               if Nkind (Par) in N_Raise_xxx_Error then\n+                  return True;\n \n-         return False;\n-      end Appears_In_Check;\n+               --  Prevent the search from going too far\n \n-      ----------------------------\n-      -- Is_OK_Volatile_Context --\n-      ----------------------------\n+               elsif Is_Body_Or_Package_Declaration (Par) then\n+                  exit;\n+               end if;\n+\n+               Par := Parent (Par);\n+            end loop;\n+\n+            return False;\n+         end Within_Check;\n+\n+         ---------------------------\n+         -- Within_Procedure_Call --\n+         ---------------------------\n+\n+         function Within_Procedure_Call (Nod : Node_Id) return Boolean is\n+            Par : Node_Id;\n+\n+         begin\n+            --  Climb the parent chain looking for a procedure call\n+\n+            Par := Nod;\n+            while Present (Par) loop\n+               if Nkind (Par) = N_Procedure_Call_Statement then\n+                  return True;\n+\n+               --  Prevent the search from going too far\n+\n+               elsif Is_Body_Or_Package_Declaration (Par) then\n+                  exit;\n+               end if;\n+\n+               Par := Parent (Par);\n+            end loop;\n+\n+            return False;\n+         end Within_Procedure_Call;\n+\n+      --  Start of processing for Is_OK_Volatile_Context\n \n-      function Is_OK_Volatile_Context\n-        (Context : Node_Id;\n-         Obj_Ref : Node_Id) return Boolean\n-      is\n       begin\n          --  The volatile object appears on either side of an assignment\n \n@@ -6996,9 +7028,19 @@ package body Sem_Res is\n          --  Allow references to volatile objects in various checks. This is\n          --  not a direct SPARK 2014 requirement.\n \n-         elsif Appears_In_Check (Context) then\n+         elsif Within_Check (Context) then\n+            return True;\n+\n+         --  Assume that references to effectively volatile objects that appear\n+         --  as actual parameters in a procedure call are always legal. A full\n+         --  legality check is done when the actuals are resolved.\n+\n+         elsif Within_Procedure_Call (Context) then\n             return True;\n \n+         --  Otherwise the context is not suitable for an effectively volatile\n+         --  object.\n+\n          else\n             return False;\n          end if;\n@@ -7140,13 +7182,6 @@ package body Sem_Res is\n          if Is_OK_Volatile_Context (Par, N) then\n             null;\n \n-         --  Assume that references to effectively volatile objects that appear\n-         --  as actual parameters in a procedure call are always legal. A full\n-         --  legality check is done when the actuals are resolved.\n-\n-         elsif Nkind (Par) = N_Procedure_Call_Statement then\n-            null;\n-\n          --  Otherwise the context causes a side effect with respect to the\n          --  effectively volatile object.\n "}, {"sha": "cc8679cab16d65c90c659df23a0739dab03ad091", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5073ad7a647c3f8075429d7b69ac810cc53f118d/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5073ad7a647c3f8075429d7b69ac810cc53f118d/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=5073ad7a647c3f8075429d7b69ac810cc53f118d", "patch": "@@ -897,8 +897,9 @@ package body Sem_Util is\n    is\n    begin\n       return Is_Enumeration_Type (T)\n-        and then Comes_From_Source (N)\n         and then Warn_On_Unordered_Enumeration_Type\n+        and then not Is_Generic_Type (T)\n+        and then Comes_From_Source (N)\n         and then not Has_Pragma_Ordered (T)\n         and then not In_Same_Extended_Unit (N, T);\n    end Bad_Unordered_Enumeration_Reference;"}]}