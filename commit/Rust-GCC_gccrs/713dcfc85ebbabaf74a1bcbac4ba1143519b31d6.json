{"sha": "713dcfc85ebbabaf74a1bcbac4ba1143519b31d6", "node_id": "C_kwDOANBUbNoAKDcxM2RjZmM4NWViYmFiYWY3NGExYmNiYWM0YmExMTQzNTE5YjMxZDY", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-11-15T20:20:20Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-11-16T20:13:16Z"}, "message": "Fortran: ICE in simplification of array expression involving power [PR107680]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/107680\n\t* arith.cc (arith_power): Check that operands are properly converted\n\tbefore attempting to simplify.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/107680\n\t* gfortran.dg/pr107680.f90: New test.", "tree": {"sha": "b2920853c359e4720fe0b9c3c14f1ef6203c2c99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2920853c359e4720fe0b9c3c14f1ef6203c2c99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/713dcfc85ebbabaf74a1bcbac4ba1143519b31d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713dcfc85ebbabaf74a1bcbac4ba1143519b31d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713dcfc85ebbabaf74a1bcbac4ba1143519b31d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713dcfc85ebbabaf74a1bcbac4ba1143519b31d6/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac74b3f82b339569b34dc9d1330c2faf74a1c82a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac74b3f82b339569b34dc9d1330c2faf74a1c82a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac74b3f82b339569b34dc9d1330c2faf74a1c82a"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "c4ab75b401ce0627ec3db0e81eb514b963ef0391", "filename": "gcc/fortran/arith.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713dcfc85ebbabaf74a1bcbac4ba1143519b31d6/gcc%2Ffortran%2Farith.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713dcfc85ebbabaf74a1bcbac4ba1143519b31d6/gcc%2Ffortran%2Farith.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farith.cc?ref=713dcfc85ebbabaf74a1bcbac4ba1143519b31d6", "patch": "@@ -845,6 +845,13 @@ arith_power (gfc_expr *op1, gfc_expr *op2, gfc_expr **resultp)\n   if (!gfc_numeric_ts (&op1->ts) || !gfc_numeric_ts (&op2->ts))\n     return ARITH_INVALID_TYPE;\n \n+  /* The result type is derived from op1 and must be compatible with the\n+     result of the simplification.  Otherwise postpone simplification until\n+     after operand conversions usually done by gfc_type_convert_binary.  */\n+  if ((op1->ts.type == BT_INTEGER && op2->ts.type != BT_INTEGER)\n+      || (op1->ts.type == BT_REAL && op2->ts.type == BT_COMPLEX))\n+    return ARITH_NOT_REDUCED;\n+\n   rc = ARITH_OK;\n   result = gfc_get_constant_expr (op1->ts.type, op1->ts.kind, &op1->where);\n "}, {"sha": "4ed431eb06fa904dd677b979698473babc39f8ec", "filename": "gcc/testsuite/gfortran.dg/pr107680.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713dcfc85ebbabaf74a1bcbac4ba1143519b31d6/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr107680.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713dcfc85ebbabaf74a1bcbac4ba1143519b31d6/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr107680.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr107680.f90?ref=713dcfc85ebbabaf74a1bcbac4ba1143519b31d6", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do compile }\n+! { dg-options \"-fdump-tree-original\" }\n+! PR fortran/107680 - ICE in arith_power\n+! Contributed by G.Steinmetz\n+\n+program p\n+  real,    parameter :: x(*) = [real    :: ([1])]   **  2.0\n+  complex, parameter :: y(*) = [real    :: ([1])]   ** (2.0,1.0)\n+  complex, parameter :: z(*) = [complex :: ([1])]   ** (2.0,1.0)\n+  complex, parameter :: u(*) = [complex :: ([1.0])] ** (2.0,1.0)\n+  complex, parameter :: v(*) = [real    :: ([(1.0,2.0)])] ** (3.0,1.0)\n+  complex, parameter :: w(*) = [integer :: ([(1.0,2.0)])] ** (3.0,1.0)\n+  print *, [real    :: ([3])]   **  2\n+  print *, [real    :: ([3])]   **  2.0\n+  print *, [real    :: ([1])]   ** (1.0,2.0)\n+  print *, [real    :: ([1.0])] ** (1.0,2.0)\n+  print *, [complex :: ([3])]   **  2\n+  print *, [complex :: ([3])]   **  2.0\n+  print *, [complex :: ([1])]   ** (1.0,2.0)\n+  print *, [complex :: ([1.0])] ** (1.0,2.0)\n+  print *, [integer :: ([3.0])] **  2\n+  print *, [integer :: ([3.0])] **  2.0\n+  print *, [integer :: ([1.0])] ** (1.0,2.0)\n+  print *, [integer :: ([(1.0,2.0)])] ** (3.0,1.0)\n+  print *, v(1)\n+  if (u(1) /= 1) stop 1\n+  if (v(1) /= 1) stop 2\n+  if (w(1) /= 1) stop 3\n+  if (x(1) /= 1) stop 4\n+  if (y(1) /= 1) stop 5\n+  if (z(1) /= 1) stop 6\n+end\n+\n+! { dg-final { scan-tree-dump-not \"_gfortran_stop_numeric\" \"original\" } }"}]}