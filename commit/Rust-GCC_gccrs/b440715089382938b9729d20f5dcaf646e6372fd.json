{"sha": "b440715089382938b9729d20f5dcaf646e6372fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ0MDcxNTA4OTM4MjkzOGI5NzI5ZDIwZjVkY2FmNjQ2ZTYzNzJmZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-09-12T10:42:06Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-09-12T10:42:06Z"}, "message": "Minor tweak to line debug info\n\nThis prevents the SLOC of the expression for a tag from being present\nin the line debug info every time it is referenced for coverage purposes.\n\ngcc/ada/ChangeLog:\n\t* gcc-interface/trans.c (gnat_to_gnu) <N_Object_Declaration>: Clear\n\tthe SLOC of the expression of a tag.", "tree": {"sha": "5b01e766b5b0fd6b5b5c66619668198a17d70359", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b01e766b5b0fd6b5b5c66619668198a17d70359"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b440715089382938b9729d20f5dcaf646e6372fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b440715089382938b9729d20f5dcaf646e6372fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b440715089382938b9729d20f5dcaf646e6372fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b440715089382938b9729d20f5dcaf646e6372fd/comments", "author": null, "committer": null, "parents": [{"sha": "4965be0b3388557643114c1ec20bd206f0bda1df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4965be0b3388557643114c1ec20bd206f0bda1df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4965be0b3388557643114c1ec20bd206f0bda1df"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "aa4393c24b73422608da9c4efd468bdf18f34f92", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b440715089382938b9729d20f5dcaf646e6372fd/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b440715089382938b9729d20f5dcaf646e6372fd/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=b440715089382938b9729d20f5dcaf646e6372fd", "patch": "@@ -6476,6 +6476,7 @@ gnat_to_gnu (Node_Id gnat_node)\n \n \t  gnu_expr = gnat_to_gnu (Expression (gnat_node));\n \n+\t  /* First deal with erroneous expressions.  */\n \t  if (TREE_CODE (gnu_expr) == ERROR_MARK)\n \t    {\n \t      /* If this is a named number for which we cannot manipulate\n@@ -6485,6 +6486,11 @@ gnat_to_gnu (Node_Id gnat_node)\n \t      else if (type_annotate_only)\n \t\tgnu_expr = NULL_TREE;\n \t    }\n+\n+\t  /* Then a special case: we do not want the SLOC of the expression\n+\t     of the tag to pop up every time it is referenced somewhere.  */\n+\t  else if (EXPR_P (gnu_expr) && Is_Tag (gnat_temp))\n+\t    SET_EXPR_LOCATION (gnu_expr, UNKNOWN_LOCATION);\n \t}\n       else\n \tgnu_expr = NULL_TREE;"}]}