{"sha": "944fc8abefc438b7087db07cdf81c1bbcb0faf26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ0ZmM4YWJlZmM0MzhiNzA4N2RiMDdjZGY4MWMxYmJjYjBmYWYyNg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-04-06T14:01:33Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-04-06T14:01:33Z"}, "message": "More system.h cutover patches:\n\n        * c-parse.in: Include system.h, and remove stuff now made redundant.\n        * cccp.c: Likewise.\n        * cexp.y: Likewise.\n        * protoize.c: Likewise.  Properly check for cpp stringification.\n        * Makefile.in (c-parse.o, cccp.o, cexp.o, protoize.o, unprotoize.o):\n        Depend on system.h.\n        * objc/Make-lang.in (objc-parse.o): Likewise.\n\nFrom-SVN: r19020", "tree": {"sha": "705fdf7fa2c894b86921a9d5b3c46a2bd38525cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/705fdf7fa2c894b86921a9d5b3c46a2bd38525cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/944fc8abefc438b7087db07cdf81c1bbcb0faf26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/944fc8abefc438b7087db07cdf81c1bbcb0faf26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/944fc8abefc438b7087db07cdf81c1bbcb0faf26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/944fc8abefc438b7087db07cdf81c1bbcb0faf26/comments", "author": null, "committer": null, "parents": [{"sha": "3286ab57366ae3422fdacff3c2e605ea81a29c44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3286ab57366ae3422fdacff3c2e605ea81a29c44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3286ab57366ae3422fdacff3c2e605ea81a29c44"}], "stats": {"total": 369, "additions": 110, "deletions": 259}, "files": [{"sha": "d35f141f7e07b7091fbf5caf9f45014bfc908dca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=944fc8abefc438b7087db07cdf81c1bbcb0faf26", "patch": "@@ -1,3 +1,15 @@\n+Mon Apr  6 16:08:04 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+        * c-parse.in: Include system.h, and remove stuff now made redundant.\n+        * cccp.c: Likewise.\n+        * cexp.y: Likewise.\n+        * protoize.c: Likewise.  Properly check for cpp stringification.\n+\n+        * Makefile.in (c-parse.o, cccp.o, cexp.o, protoize.o, unprotoize.o):\n+\tDepend on system.h.  \n+\n+\t* objc/Make-lang.in (objc-parse.o): Likewise.\n+\n Mon Apr  6 14:59:58 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n         * gansidecl.h: Check if compiler supports __attribute__.  Provide"}, {"sha": "53749d6e02e4c3f69d155fa9a043d88c4bb36607", "filename": "gcc/Makefile.in", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=944fc8abefc438b7087db07cdf81c1bbcb0faf26", "patch": "@@ -1223,7 +1223,7 @@ s-crt0:\t$(CRT0_S) $(MCRT0_S) $(GCC_PASSES) $(CONFIG_H)\n # C language specific files.\n \n c-parse.o : $(srcdir)/c-parse.c $(CONFIG_H) $(TREE_H) c-lex.h \\\n-    $(srcdir)/c-parse.h c-tree.h input.h flags.h\n+    $(srcdir)/c-parse.h c-tree.h input.h flags.h system.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c $(srcdir)/c-parse.c\n $(srcdir)/c-parse.h: $(srcdir)/c-parse.c\n $(srcdir)/c-parse.c: $(srcdir)/c-parse.y\n@@ -1751,12 +1751,12 @@ cpp$(exeext): $(CCCP)$(exeext)\n cccp$(exeext): cccp.o cexp.o version.o prefix.o $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ cccp.o cexp.o prefix.o \\\n \t  version.o $(LIBS)\n-cexp.o: $(srcdir)/cexp.c $(CONFIG_H)\n+cexp.o: $(srcdir)/cexp.c $(CONFIG_H) system.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c $(srcdir)/cexp.c\n $(srcdir)/cexp.c: $(srcdir)/cexp.y\n \tcd $(srcdir); $(BISON) -o cexp.c cexp.y\n \n-cccp.o: cccp.c $(CONFIG_H) pcp.h version.c config.status\n+cccp.o: cccp.c $(CONFIG_H) pcp.h version.c config.status system.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n \t  -DGPLUSPLUS_INCLUDE_DIR=\\\"$(gxx_include_dir)\\\" \\\n@@ -1808,7 +1808,7 @@ unprotoize$(exeext): unprotoize.o getopt.o getopt1.o getpwd.o version.o \\\n \t  unprotoize.o getopt.o getopt1.o getpwd.o version.o \\\n \t  pexecute.o choose-temp.o $(LIBS)\n \n-protoize.o: protoize.c getopt.h $(CONFIG_H)\n+protoize.o: protoize.c getopt.h $(CONFIG_H) system.h\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n           -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n \t  -DGPLUSPLUS_INCLUDE_DIR=\\\"$(gxx_include_dir)\\\" \\\n@@ -1818,7 +1818,7 @@ protoize.o: protoize.c getopt.h $(CONFIG_H)\n \t  -DSTD_PROTO_DIR=\\\"$(libsubdir)\\\" \\\n \t  $(srcdir)/protoize.c\n \n-unprotoize.o: unprotoize.c protoize.c getopt.h $(CONFIG_H)\n+unprotoize.o: unprotoize.c protoize.c getopt.h $(CONFIG_H) system.h\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n           -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n \t  -DGPLUSPLUS_INCLUDE_DIR=\\\"$(gxx_include_dir)\\\" \\"}, {"sha": "8777295d248cefd81a57e0419e5865e1ba99cc99", "filename": "gcc/c-parse.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.c?ref=944fc8abefc438b7087db07cdf81c1bbcb0faf26", "patch": "@@ -68,9 +68,7 @@\n #line 56 \"c-parse.y\"\n \n #include \"config.h\"\n-\n-#include <stdio.h>\n-#include <errno.h>\n+#include \"system.h\"\n #include <setjmp.h>\n \n #include \"tree.h\"\n@@ -81,7 +79,6 @@\n #include \"output.h\"\n \n #ifdef MULTIBYTE_CHARS\n-#include <stdlib.h>\n #include <locale.h>\n #endif\n \n@@ -90,10 +87,6 @@\n    definition here.  */\n char *language_string = \"GNU C\";\n \n-#ifndef errno\n-extern int errno;\n-#endif\n-\n /* Like YYERROR but do call yyerror.  */\n #define YYERROR1 { yyerror (\"syntax error\"); YYERROR; }\n "}, {"sha": "fbfa994cd6e7491afb89037e5c5d120f813b6af6", "filename": "gcc/c-parse.in", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=944fc8abefc438b7087db07cdf81c1bbcb0faf26", "patch": "@@ -59,9 +59,7 @@ end ifc\n \n %{\n #include \"config.h\"\n-\n-#include <stdio.h>\n-#include <errno.h>\n+#include \"system.h\"\n #include <setjmp.h>\n \n #include \"tree.h\"\n@@ -72,7 +70,6 @@ end ifc\n #include \"output.h\"\n \n #ifdef MULTIBYTE_CHARS\n-#include <stdlib.h>\n #include <locale.h>\n #endif\n \n@@ -89,10 +86,6 @@ ifc\n char *language_string = \"GNU C\";\n end ifc\n \n-#ifndef errno\n-extern int errno;\n-#endif\n-\n /* Like YYERROR but do call yyerror.  */\n #define YYERROR1 { yyerror (\"syntax error\"); YYERROR; }\n "}, {"sha": "aba326d02b962fcd174585e45d1a253aa18659fd", "filename": "gcc/c-parse.y", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.y?ref=944fc8abefc438b7087db07cdf81c1bbcb0faf26", "patch": "@@ -55,9 +55,7 @@ State 434 contains 2 shift/reduce conflicts.  (Four ways to parse this.)  */\n \n %{\n #include \"config.h\"\n-\n-#include <stdio.h>\n-#include <errno.h>\n+#include \"system.h\"\n #include <setjmp.h>\n \n #include \"tree.h\"\n@@ -68,7 +66,6 @@ State 434 contains 2 shift/reduce conflicts.  (Four ways to parse this.)  */\n #include \"output.h\"\n \n #ifdef MULTIBYTE_CHARS\n-#include <stdlib.h>\n #include <locale.h>\n #endif\n \n@@ -77,10 +74,6 @@ State 434 contains 2 shift/reduce conflicts.  (Four ways to parse this.)  */\n    definition here.  */\n char *language_string = \"GNU C\";\n \n-#ifndef errno\n-extern int errno;\n-#endif\n-\n /* Like YYERROR but do call yyerror.  */\n #define YYERROR1 { yyerror (\"syntax error\"); YYERROR; }\n "}, {"sha": "ebb42fbf0bcf1367b6b486c76680b0293261e6ac", "filename": "gcc/cccp.c", "status": "modified", "additions": 26, "deletions": 81, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=944fc8abefc438b7087db07cdf81c1bbcb0faf26", "patch": "@@ -19,70 +19,44 @@ Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA. */\n \n #include \"config.h\"\n-#include <sys/types.h>\n-#include <sys/stat.h>\n-#include <ctype.h>\n-#include <stdio.h>\n-#include <signal.h>\n-\n-#ifdef TIME_WITH_SYS_TIME\n-# include <sys/time.h>\n-# include <time.h>\n+#if defined (__STDC__) && defined (HAVE_VPRINTF)\n+# include <stdarg.h>\n+# define PRINTF_ALIST(msg) char *msg, ...\n+# define PRINTF_DCL(msg)\n+# define PRINTF_PROTO(ARGS, m, n) PROTO (ARGS) __attribute__ ((format (__printf__, m, n)))\n #else\n-# if HAVE_SYS_TIME_H\n-# include <sys/time.h>\n-# else\n-#  include <time.h>\n-#endif\n-#endif\n-\n-#ifdef HAVE_SYS_RESOURCE_H\n-# include <sys/resource.h>\n-#endif\n-\n-#if HAVE_FCNTL_H\n-# include <fcntl.h>\n-#endif\n-\n-#if HAVE_LIMITS_H\n-# include <limits.h>\n-#endif\n-\n-#if HAVE_UNISTD_H\n-# include <unistd.h>\n+# include <varargs.h>\n+# define PRINTF_ALIST(msg) msg, va_alist\n+# define PRINTF_DCL(msg) char *msg; va_dcl\n+# define PRINTF_PROTO(ARGS, m, n) () __attribute__ ((format (__printf__, m, n)))\n+# define vfprintf(file, msg, args) \\\n+    { \\\n+      char *a0 = va_arg(args, char *); \\\n+      char *a1 = va_arg(args, char *); \\\n+      char *a2 = va_arg(args, char *); \\\n+      char *a3 = va_arg(args, char *); \\\n+      fprintf (file, msg, a0, a1, a2, a3); \\\n+    }\n #endif\n \n-#include <errno.h>\n+#define PRINTF_PROTO_1(ARGS) PRINTF_PROTO(ARGS, 1, 2)\n+#define PRINTF_PROTO_2(ARGS) PRINTF_PROTO(ARGS, 2, 3)\n+#define PRINTF_PROTO_3(ARGS) PRINTF_PROTO(ARGS, 3, 4)\n+#define PRINTF_PROTO_4(ARGS) PRINTF_PROTO(ARGS, 4, 5)\n \n-#if HAVE_STDLIB_H\n-# include <stdlib.h>\n-#endif\n+#include \"system.h\"\n+#include <sys/stat.h>\n+#include <signal.h>\n \n-#ifdef HAVE_STRING_H\n-# include <string.h>\n-#else\n-# ifdef HAVE_STRINGS_H\n-#  include <strings.h>\n-#endif\n+#ifdef HAVE_SYS_RESOURCE_H\n+# include <sys/resource.h>\n #endif\n \n typedef unsigned char U_CHAR;\n \n #include \"gansidecl.h\"\n #include \"pcp.h\"\n \n-#ifdef NEED_DECLARATION_INDEX\n-extern char *index ();\n-#endif\n-\n-#ifdef NEED_DECLARATION_RINDEX\n-extern char *rindex ();\n-#endif\n-\n-#ifdef NEED_DECLARATION_GETENV\n-extern char *getenv ();\n-#endif\n-\n #ifndef GET_ENVIRONMENT\n #define GET_ENVIRONMENT(ENV_VALUE,ENV_NAME) ENV_VALUE = getenv (ENV_NAME)\n #endif\n@@ -107,31 +81,6 @@ extern char *getenv ();\n # define OBJECT_SUFFIX \".o\"\n #endif\n \n-#if defined (__STDC__) && defined (HAVE_VPRINTF)\n-# include <stdarg.h>\n-# define PRINTF_ALIST(msg) char *msg, ...\n-# define PRINTF_DCL(msg)\n-# define PRINTF_PROTO(ARGS, m, n) PROTO (ARGS) __attribute__ ((format (__printf__, m, n)))\n-#else\n-# include <varargs.h>\n-# define PRINTF_ALIST(msg) msg, va_alist\n-# define PRINTF_DCL(msg) char *msg; va_dcl\n-# define PRINTF_PROTO(ARGS, m, n) () __attribute__ ((format (__printf__, m, n)))\n-# define vfprintf(file, msg, args) \\\n-    { \\\n-      char *a0 = va_arg(args, char *); \\\n-      char *a1 = va_arg(args, char *); \\\n-      char *a2 = va_arg(args, char *); \\\n-      char *a3 = va_arg(args, char *); \\\n-      fprintf (file, msg, a0, a1, a2, a3); \\\n-    }\n-#endif\n-\n-#define PRINTF_PROTO_1(ARGS) PRINTF_PROTO(ARGS, 1, 2)\n-#define PRINTF_PROTO_2(ARGS) PRINTF_PROTO(ARGS, 2, 3)\n-#define PRINTF_PROTO_3(ARGS) PRINTF_PROTO(ARGS, 3, 4)\n-#define PRINTF_PROTO_4(ARGS) PRINTF_PROTO(ARGS, 4, 5)\n-\n /* VMS-specific definitions */\n #ifdef VMS\n #include <descrip.h>\n@@ -221,10 +170,6 @@ char *strerror (int,...);\n #endif\n HOST_WIDE_INT parse_escape PROTO((char **, HOST_WIDE_INT));\n HOST_WIDE_INT parse_c_expression PROTO((char *, int));\n-\n-#ifndef errno\n-extern int errno;\n-#endif\n \f\n /* Name under which this program was invoked.  */\n "}, {"sha": "4e3a1467d140e916af7da9865db7c660e2e00e12", "filename": "gcc/cexp.c", "status": "modified", "additions": 24, "deletions": 38, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fcexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fcexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.c?ref=944fc8abefc438b7087db07cdf81c1bbcb0faf26", "patch": "@@ -22,28 +22,38 @@\n #line 27 \"cexp.y\"\n \n #include \"config.h\"\n-#include <setjmp.h>\n-/* #define YYDEBUG 1 */\n-\n-\n-#ifdef HAVE_STRING_H\n-# include <string.h>\n+#if defined (__STDC__) && defined (HAVE_VPRINTF)\n+# include <stdarg.h>\n+# define VA_START(va_list, var) va_start (va_list, var)\n+# define PRINTF_ALIST(msg) char *msg, ...\n+# define PRINTF_DCL(msg)\n+# define PRINTF_PROTO(ARGS, m, n) PROTO (ARGS) __attribute__ ((format (__printf__, m, n)))\n+#else\n+# include <varargs.h>\n+# define VA_START(va_list, var) va_start (va_list)\n+# define PRINTF_ALIST(msg) msg, va_alist\n+# define PRINTF_DCL(msg) char *msg; va_dcl\n+# define PRINTF_PROTO(ARGS, m, n) () __attribute__ ((format (__printf__, m, n)))\n+# define vfprintf(file, msg, args) \\\n+    { \\\n+      char *a0 = va_arg(args, char *); \\\n+      char *a1 = va_arg(args, char *); \\\n+      char *a2 = va_arg(args, char *); \\\n+      char *a3 = va_arg(args, char *); \\\n+      fprintf (file, msg, a0, a1, a2, a3); \\\n+    }\n #endif\n \n-#ifdef HAVE_STDLIB_H\n-# include <stdlib.h>\n-#endif\n+#define PRINTF_PROTO_1(ARGS) PRINTF_PROTO(ARGS, 1, 2)\n \n-#ifdef HAVE_LIMITS_H\n-# include <limits.h>\n-#endif\n+#include \"system.h\"\n+#include <setjmp.h>\n+/* #define YYDEBUG 1 */\n \n #ifdef MULTIBYTE_CHARS\n #include <locale.h>\n #endif\n \n-#include <stdio.h>\n-\n typedef unsigned char U_CHAR;\n \n /* This is used for communicating lists of keywords with cccp.c.  */\n@@ -117,30 +127,6 @@ struct arglist {\n # endif\n #endif\n \n-#if defined (__STDC__) && defined (HAVE_VPRINTF)\n-# include <stdarg.h>\n-# define VA_START(va_list, var) va_start (va_list, var)\n-# define PRINTF_ALIST(msg) char *msg, ...\n-# define PRINTF_DCL(msg)\n-# define PRINTF_PROTO(ARGS, m, n) PROTO (ARGS) __attribute__ ((format (__printf__, m, n)))\n-#else\n-# include <varargs.h>\n-# define VA_START(va_list, var) va_start (va_list)\n-# define PRINTF_ALIST(msg) msg, va_alist\n-# define PRINTF_DCL(msg) char *msg; va_dcl\n-# define PRINTF_PROTO(ARGS, m, n) () __attribute__ ((format (__printf__, m, n)))\n-# define vfprintf(file, msg, args) \\\n-    { \\\n-      char *a0 = va_arg(args, char *); \\\n-      char *a1 = va_arg(args, char *); \\\n-      char *a2 = va_arg(args, char *); \\\n-      char *a3 = va_arg(args, char *); \\\n-      fprintf (file, msg, a0, a1, a2, a3); \\\n-    }\n-#endif\n-\n-#define PRINTF_PROTO_1(ARGS) PRINTF_PROTO(ARGS, 1, 2)\n-\n HOST_WIDE_INT parse_c_expression PROTO((char *, int));\n \n static int yylex PROTO((void));"}, {"sha": "346f83e44cc84f290da4265a651eb5cca5cb20ff", "filename": "gcc/cexp.y", "status": "modified", "additions": 25, "deletions": 39, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fcexp.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fcexp.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.y?ref=944fc8abefc438b7087db07cdf81c1bbcb0faf26", "patch": "@@ -1,5 +1,5 @@\n /* Parse C expressions for CCCP.\n-   Copyright (C) 1987, 1992, 1994, 1995, 1996, 1997 Free Software Foundation.\n+   Copyright (C) 1987, 1992, 94 - 97, 1998 Free Software Foundation.\n \n This program is free software; you can redistribute it and/or modify it\n under the terms of the GNU General Public License as published by the\n@@ -26,28 +26,38 @@ Boston, MA 02111-1307, USA.\n    \n %{\n #include \"config.h\"\n-#include <setjmp.h>\n-/* #define YYDEBUG 1 */\n-\n-\n-#ifdef HAVE_STRING_H\n-# include <string.h>\n+#if defined (__STDC__) && defined (HAVE_VPRINTF)\n+# include <stdarg.h>\n+# define VA_START(va_list, var) va_start (va_list, var)\n+# define PRINTF_ALIST(msg) char *msg, ...\n+# define PRINTF_DCL(msg)\n+# define PRINTF_PROTO(ARGS, m, n) PROTO (ARGS) __attribute__ ((format (__printf__, m, n)))\n+#else\n+# include <varargs.h>\n+# define VA_START(va_list, var) va_start (va_list)\n+# define PRINTF_ALIST(msg) msg, va_alist\n+# define PRINTF_DCL(msg) char *msg; va_dcl\n+# define PRINTF_PROTO(ARGS, m, n) () __attribute__ ((format (__printf__, m, n)))\n+# define vfprintf(file, msg, args) \\\n+    { \\\n+      char *a0 = va_arg(args, char *); \\\n+      char *a1 = va_arg(args, char *); \\\n+      char *a2 = va_arg(args, char *); \\\n+      char *a3 = va_arg(args, char *); \\\n+      fprintf (file, msg, a0, a1, a2, a3); \\\n+    }\n #endif\n \n-#ifdef HAVE_STDLIB_H\n-# include <stdlib.h>\n-#endif\n+#define PRINTF_PROTO_1(ARGS) PRINTF_PROTO(ARGS, 1, 2)\n \n-#ifdef HAVE_LIMITS_H\n-# include <limits.h>\n-#endif\n+#include \"system.h\"\n+#include <setjmp.h>\n+/* #define YYDEBUG 1 */\n \n #ifdef MULTIBYTE_CHARS\n #include <locale.h>\n #endif\n \n-#include <stdio.h>\n-\n typedef unsigned char U_CHAR;\n \n /* This is used for communicating lists of keywords with cccp.c.  */\n@@ -121,30 +131,6 @@ struct arglist {\n # endif\n #endif\n \n-#if defined (__STDC__) && defined (HAVE_VPRINTF)\n-# include <stdarg.h>\n-# define VA_START(va_list, var) va_start (va_list, var)\n-# define PRINTF_ALIST(msg) char *msg, ...\n-# define PRINTF_DCL(msg)\n-# define PRINTF_PROTO(ARGS, m, n) PROTO (ARGS) __attribute__ ((format (__printf__, m, n)))\n-#else\n-# include <varargs.h>\n-# define VA_START(va_list, var) va_start (va_list)\n-# define PRINTF_ALIST(msg) msg, va_alist\n-# define PRINTF_DCL(msg) char *msg; va_dcl\n-# define PRINTF_PROTO(ARGS, m, n) () __attribute__ ((format (__printf__, m, n)))\n-# define vfprintf(file, msg, args) \\\n-    { \\\n-      char *a0 = va_arg(args, char *); \\\n-      char *a1 = va_arg(args, char *); \\\n-      char *a2 = va_arg(args, char *); \\\n-      char *a3 = va_arg(args, char *); \\\n-      fprintf (file, msg, a0, a1, a2, a3); \\\n-    }\n-#endif\n-\n-#define PRINTF_PROTO_1(ARGS) PRINTF_PROTO(ARGS, 1, 2)\n-\n HOST_WIDE_INT parse_c_expression PROTO((char *, int));\n \n static int yylex PROTO((void));"}, {"sha": "ebde9d0101b899bed45a57150e2f51a29138e879", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=944fc8abefc438b7087db07cdf81c1bbcb0faf26", "patch": "@@ -71,7 +71,7 @@ cc1obj$(exeext): $(P) $(OBJC_OBJS) $(OBJS) $(LIBDEPS)\n objc-parse.o : $(srcdir)/objc/objc-parse.c \\\n    $(CONFIG_H) $(TREE_H) \\\n    $(srcdir)/c-lex.h $(srcdir)/c-tree.h $(srcdir)/input.h \\\n-   $(srcdir)/flags.h $(srcdir)/output.h $(srcdir)/objc/objc-act.h\n+   $(srcdir)/flags.h $(srcdir)/output.h $(srcdir)/objc/objc-act.h system.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -I$(srcdir)/objc \\\n \t-c $(srcdir)/objc/objc-parse.c\n "}, {"sha": "abb9099469ac84b5fae0627e481bf311347ba6be", "filename": "gcc/objc/objc-parse.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fobjc%2Fobjc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fobjc%2Fobjc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.c?ref=944fc8abefc438b7087db07cdf81c1bbcb0faf26", "patch": "@@ -68,9 +68,7 @@\n #line 33 \"objc-parse.y\"\n \n #include \"config.h\"\n-\n-#include <stdio.h>\n-#include <errno.h>\n+#include \"system.h\"\n #include <setjmp.h>\n \n #include \"tree.h\"\n@@ -81,7 +79,6 @@\n #include \"output.h\"\n \n #ifdef MULTIBYTE_CHARS\n-#include <stdlib.h>\n #include <locale.h>\n #endif\n \n@@ -91,10 +88,6 @@\n    definition here.  */\n char *language_string = \"GNU Obj-C\";\n \n-#ifndef errno\n-extern int errno;\n-#endif\n-\n /* Like YYERROR but do call yyerror.  */\n #define YYERROR1 { yyerror (\"syntax error\"); YYERROR; }\n "}, {"sha": "c216d438ae1782bbb40adb7ac716ec260bb61292", "filename": "gcc/objc/objc-parse.y", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fobjc%2Fobjc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fobjc%2Fobjc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.y?ref=944fc8abefc438b7087db07cdf81c1bbcb0faf26", "patch": "@@ -32,9 +32,7 @@ Boston, MA 02111-1307, USA.  */\n \n %{\n #include \"config.h\"\n-\n-#include <stdio.h>\n-#include <errno.h>\n+#include \"system.h\"\n #include <setjmp.h>\n \n #include \"tree.h\"\n@@ -45,7 +43,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"output.h\"\n \n #ifdef MULTIBYTE_CHARS\n-#include <stdlib.h>\n #include <locale.h>\n #endif\n \n@@ -55,10 +52,6 @@ Boston, MA 02111-1307, USA.  */\n    definition here.  */\n char *language_string = \"GNU Obj-C\";\n \n-#ifndef errno\n-extern int errno;\n-#endif\n-\n /* Like YYERROR but do call yyerror.  */\n #define YYERROR1 { yyerror (\"syntax error\"); YYERROR; }\n "}, {"sha": "e61e92e6be2b41a74df1f34e6a1c29093f4b3ed6", "filename": "gcc/protoize.c", "status": "modified", "additions": 12, "deletions": 55, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944fc8abefc438b7087db07cdf81c1bbcb0faf26/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=944fc8abefc438b7087db07cdf81c1bbcb0faf26", "patch": "@@ -57,20 +57,12 @@ Boston, MA 02111-1307, USA.  */\n #define _POSIX_SOURCE\n #endif\n \n-#ifdef HAVE_VARARGS_H\n-#include <varargs.h>\n+#ifdef __STDC__\n+#include <stdarg.h>\n #else\n-#ifdef HAVE_SYS_VARARGS_H\n-#include <sys/varargs.h>\n-#endif\n+#include <varargs.h>\n #endif\n-\n-/* On some systems stdio.h includes stdarg.h;\n-   we must bring in varargs.h first.  */\n-#include <stdio.h>\n-#include <ctype.h>\n-#include <errno.h>\n-#include <sys/types.h>\n+#include \"system.h\"\n #include <sys/stat.h>\n #if ! defined (_WIN32) || defined (__CYGWIN32__)\n #if defined(POSIX) || defined(CONCURRENT)\n@@ -80,23 +72,6 @@ Boston, MA 02111-1307, USA.  */\n #endif\n #endif\n #include <setjmp.h>\n-\n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n-\n-#ifdef HAVE_UNISTD_H\n-#include <unistd.h>\n-#endif\n-\n-#ifdef HAVE_STRING_H\n-#include <string.h>\n-#else\n-#ifdef HAVE_STRINGS_H\n-#include <strings.h>\n-#endif\n-#endif\n-\n #include \"gansidecl.h\"\n \n /* Include getopt.h for the sake of getopt_long.\n@@ -106,10 +81,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"getopt.h\"\n #undef getopt\n \n-#ifndef errno\n-extern int errno;\n-#endif\n-\n #ifndef HAVE_STRERROR\n extern int sys_nerr;\n extern char *sys_errlist[];\n@@ -161,23 +132,6 @@ typedef char * pointer_type;\n typedef char * const_pointer_type;\n #endif\n \n-#if defined(POSIX)\n-\n-#include <stdlib.h>\n-#include <unistd.h>\n-#include <signal.h>\n-#include <fcntl.h>\n-#include <sys/wait.h>\n-\n-#else /* !defined(POSIX) */\n-\n-#ifndef F_OK\n-#define R_OK    4       /* Test for Read permission */\n-#define W_OK    2       /* Test for Write permission */\n-#define X_OK    1       /* Test for eXecute permission */\n-#define F_OK    0       /* Test for existence of File */\n-#endif\n-\n #ifndef O_RDONLY\n #define O_RDONLY        0\n #endif\n@@ -186,6 +140,13 @@ typedef char * const_pointer_type;\n #define O_WRONLY        1\n #endif\n \n+#if defined(POSIX)\n+\n+#include <signal.h>\n+#include <sys/wait.h>\n+\n+#else /* !defined(POSIX) */\n+\n #ifndef WIFSIGNALED\n #define WIFSIGNALED(S) (((S) & 0xff) != 0 && ((S) & 0xff) != 0x7f)\n #endif\n@@ -232,17 +193,13 @@ extern size_t   strlen ()\n \n #endif /* !defined (POSIX) */\n \n-#ifdef NEED_DECLARATION_RINDEX\n-extern char *rindex ();\n-#endif\n-\n /* Look for these where the `const' qualifier is intentionally cast aside.  */\n \n #define NONCONST\n \n /* Define a STRINGIFY macro that's right for ANSI or traditional C.  */\n \n-#ifdef __STDC__\n+#if defined(HAVE_CPP_STRINGIFY) || (defined(__GNUC__) && defined(__STDC__))\n #define STRINGIFY(STRING) #STRING\n #else\n #define STRINGIFY(STRING) \"STRING\""}]}