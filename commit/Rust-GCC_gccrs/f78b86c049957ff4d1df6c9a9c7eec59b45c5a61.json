{"sha": "f78b86c049957ff4d1df6c9a9c7eec59b45c5a61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc4Yjg2YzA0OTk1N2ZmNGQxZGY2YzlhOWM3ZWVjNTliNDVjNWE2MQ==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2010-04-13T13:35:30Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2010-04-13T13:35:30Z"}, "message": "re PR middle-end/43730 (internal compiler error: in expand_builtin_interclass_mathfn, at builtins.c:2313)\n\n\tPR middle-end/43730\n\t* builtins.c (expand_builtin_interclass_mathfn): Also create\n\ta register if the predicate doesn't match.\n\ntestsuite/\n\t* gcc.dg/pr43730.c: New test.\n\nFrom-SVN: r158268", "tree": {"sha": "0b1c749b0e72bad06519cd6b38b9b34401de7a8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b1c749b0e72bad06519cd6b38b9b34401de7a8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f78b86c049957ff4d1df6c9a9c7eec59b45c5a61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f78b86c049957ff4d1df6c9a9c7eec59b45c5a61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f78b86c049957ff4d1df6c9a9c7eec59b45c5a61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f78b86c049957ff4d1df6c9a9c7eec59b45c5a61/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e6229c2ef5aba6ee3461fe57d9747ae803c3f04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e6229c2ef5aba6ee3461fe57d9747ae803c3f04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e6229c2ef5aba6ee3461fe57d9747ae803c3f04"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "ff7b057457ef486eaa747de32280984cb39a7813", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f78b86c049957ff4d1df6c9a9c7eec59b45c5a61/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f78b86c049957ff4d1df6c9a9c7eec59b45c5a61/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f78b86c049957ff4d1df6c9a9c7eec59b45c5a61", "patch": "@@ -1,3 +1,9 @@\n+2010-04-13  Michael Matz  <matz@suse.de>\n+\n+\tPR middle-end/43730\n+\t* builtins.c (expand_builtin_interclass_mathfn): Also create\n+\ta register if the predicate doesn't match.\n+\n 2010-04-13  Diego Novillo  <dnovillo@google.com>\n \n \t* Makefile.in (c-pch.o, ggc-common.o): Depend on timevar.h."}, {"sha": "c1acd5d8bc5dabf6177aea46f5ada3e8074c9a56", "filename": "gcc/builtins.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f78b86c049957ff4d1df6c9a9c7eec59b45c5a61/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f78b86c049957ff4d1df6c9a9c7eec59b45c5a61/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=f78b86c049957ff4d1df6c9a9c7eec59b45c5a61", "patch": "@@ -2316,7 +2316,8 @@ expand_builtin_interclass_mathfn (tree exp, rtx target, rtx subtarget)\n       tree orig_arg = arg;\n       /* Make a suitable register to place result in.  */\n       if (!target\n-\t  || GET_MODE (target) != TYPE_MODE (TREE_TYPE (exp)))\n+\t  || GET_MODE (target) != TYPE_MODE (TREE_TYPE (exp))\n+\t  || !insn_data[icode].operand[0].predicate (target, GET_MODE (target)))\n          target = gen_reg_rtx (TYPE_MODE (TREE_TYPE (exp)));\n \n       gcc_assert (insn_data[icode].operand[0].predicate"}, {"sha": "5d187a1dec4d387dc91cfda82f426e645e3b4d3e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f78b86c049957ff4d1df6c9a9c7eec59b45c5a61/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f78b86c049957ff4d1df6c9a9c7eec59b45c5a61/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f78b86c049957ff4d1df6c9a9c7eec59b45c5a61", "patch": "@@ -1,3 +1,8 @@\n+2010-04-13  Michael Matz  <matz@suse.de>\n+\n+\tPR middle-end/43730\n+\t* gcc.dg/pr43730.c: New test.\n+\n 2010-04-13  Michael Matz  <matz@suse.de>\n \n \t* gcc.dg/tree-ssa/negate.c: New testcase."}, {"sha": "0d91aef1d46574f9332913d9e98aeff5e2352599", "filename": "gcc/testsuite/gcc.dg/pr43730.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f78b86c049957ff4d1df6c9a9c7eec59b45c5a61/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43730.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f78b86c049957ff4d1df6c9a9c7eec59b45c5a61/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43730.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43730.c?ref=f78b86c049957ff4d1df6c9a9c7eec59b45c5a61", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O0\" } */\n+extern int (isinfl)(long double);\n+\n+int\n+bugfun(long double x, long double y)\n+{\n+  int result;\n+\n+  if (isinfl(x))\n+    result = isinfl(y);\n+  else\n+    {\n+      int kx, ky;\n+      kx = ky = 1;\n+      result = (kx == ky);\n+    }\n+  return (result);\n+}"}]}