{"sha": "4b9454025b3a5dc0f7bed051d5026a09b5db6376", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI5NDU0MDI1YjNhNWRjMGY3YmVkMDUxZDUwMjZhMDliNWRiNjM3Ng==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-10-13T16:16:30Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-10-13T16:16:30Z"}, "message": "Makefile.in (c-parse.c, tradcif.c): Create atomically.\n\n\t* Makefile.in (c-parse.c, tradcif.c): Create atomically.\n\n\t* objc/Make-lang.in (objc-parse.c): Likewise.\n\ncp:\n\t* Makefile.in (parse.c, parse.h): Create atomically.\n\njava:\n\t* Make-lang.in (parse.c, parse-scan.c): Create atomically.\n\n\t* Makefile.in (parse.c, parse-scan.c): Likewise.\n\nFrom-SVN: r36861", "tree": {"sha": "1c009b7d7928662a00cf610e735dbde43609ec49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c009b7d7928662a00cf610e735dbde43609ec49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b9454025b3a5dc0f7bed051d5026a09b5db6376", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b9454025b3a5dc0f7bed051d5026a09b5db6376", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b9454025b3a5dc0f7bed051d5026a09b5db6376", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b9454025b3a5dc0f7bed051d5026a09b5db6376/comments", "author": null, "committer": null, "parents": [{"sha": "c7319d87dbcb3c2b6e7ffa194eb3854690bc9e90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7319d87dbcb3c2b6e7ffa194eb3854690bc9e90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7319d87dbcb3c2b6e7ffa194eb3854690bc9e90"}], "stats": {"total": 50, "additions": 37, "deletions": 13}, "files": [{"sha": "f826ec3c3a36b925d20a8537c589235e3f29b6ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9454025b3a5dc0f7bed051d5026a09b5db6376/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9454025b3a5dc0f7bed051d5026a09b5db6376/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b9454025b3a5dc0f7bed051d5026a09b5db6376", "patch": "@@ -1,3 +1,9 @@\n+2000-10-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (c-parse.c, tradcif.c): Create atomically.\n+\t\n+\t* objc/Make-lang.in (objc-parse.c): Likewise.\n+\n 2000-10-13  Richard Earnshaw <rearnsha@arm.com>\n \n \t* arm.c: Include obstack.h"}, {"sha": "7f9fcfe8d6fec1cc685f2790ef5f2615988411d9", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9454025b3a5dc0f7bed051d5026a09b5db6376/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9454025b3a5dc0f7bed051d5026a09b5db6376/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=4b9454025b3a5dc0f7bed051d5026a09b5db6376", "patch": "@@ -1103,7 +1103,8 @@ c-parse.o : $(srcdir)/c-parse.c $(CONFIG_H) $(TREE_H) c-lex.h $(GGC_H) intl.h \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c $(srcdir)/c-parse.c\n \n $(srcdir)/c-parse.c: $(srcdir)/c-parse.y\n-\tcd $(srcdir); $(BISON) $(BISONFLAGS) -o c-parse.c c-parse.y\n+\tcd $(srcdir); $(BISON) $(BISONFLAGS) -o c-p$$$$.c c-parse.y ; \\\n+\tmv -f c-p$$$$.c c-parse.c\n $(srcdir)/c-parse.y: c-parse.in\n \techo '/*WARNING: This file is automatically generated!*/' >tmp-c-parse.y\n \tsed -e \"/^ifobjc$$/,/^end ifobjc$$/d\" \\\n@@ -1852,7 +1853,8 @@ tradcpp.o: tradcpp.c $(CONFIG_H) system.h version.h cppdefault.h\n tradcif.o: $(srcdir)/tradcif.c $(CONFIG_H) system.h defaults.h\n \n $(srcdir)/tradcif.c: $(srcdir)/tradcif.y\n-\tcd $(srcdir); $(BISON) $(BISONFLAGS) -o tradcif.c tradcif.y\n+\tcd $(srcdir); $(BISON) $(BISONFLAGS) -o tr$$$$.c tradcif.y ; \\\n+\tmv -f tr$$$$.c tradcif.c\n \n # Note for the stamp targets, we run the program `true' instead of\n # having an empty command (nothing following the semicolon)."}, {"sha": "739e9b2097eb84355206b7611e44bf9910fa4282", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9454025b3a5dc0f7bed051d5026a09b5db6376/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9454025b3a5dc0f7bed051d5026a09b5db6376/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4b9454025b3a5dc0f7bed051d5026a09b5db6376", "patch": "@@ -1,3 +1,7 @@\n+2000-10-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (parse.c, parse.h): Create atomically.\n+\n 2000-10-12  Mark Mitchell  <mark@codesourcery.com>\n \n \t* class.c (current_obstack): Remove."}, {"sha": "ac5c9f7da29361ec2e3f8a24663ac30757e72223", "filename": "gcc/cp/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9454025b3a5dc0f7bed051d5026a09b5db6376/gcc%2Fcp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9454025b3a5dc0f7bed051d5026a09b5db6376/gcc%2Fcp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMakefile.in?ref=4b9454025b3a5dc0f7bed051d5026a09b5db6376", "patch": "@@ -225,8 +225,9 @@ parse.o : $(PARSE_C) $(CXX_TREE_H) $(srcdir)/../flags.h lex.h \\\n CONFLICTS = expect 33 shift/reduce conflicts and 58 reduce/reduce conflicts.\n $(PARSE_H) $(PARSE_C) : $(srcdir)/parse.y\n \t@echo $(CONFLICTS)\n-\tcd $(srcdir); $(BISON) $(BISONFLAGS) -d -o parse.c parse.y\n-\tcd $(srcdir); grep '^#define[ \t]*YYEMPTY' parse.c >>parse.h\n+\tcd $(srcdir); $(BISON) $(BISONFLAGS) -d -o p$$$$.c parse.y ; \\\n+\tgrep '^#define[ \t]*YYEMPTY' p$$$$.c >> p$$$$.h ; \\\n+\tmv -f p$$$$.c $(PARSE_C) ; mv -f p$$$$.h $(PARSE_H)\n #$(PARSE_C) $(PARSE_H) : stamp-parse ; @true\n #stamp-parse: $(srcdir)/parse.y\n #\t@echo $(CONFLICTS)"}, {"sha": "8976390c1dda937ff826c28ba6c17acc9546e3a4", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9454025b3a5dc0f7bed051d5026a09b5db6376/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9454025b3a5dc0f7bed051d5026a09b5db6376/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=4b9454025b3a5dc0f7bed051d5026a09b5db6376", "patch": "@@ -1,3 +1,9 @@\n+2000-10-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Make-lang.in (parse.c, parse-scan.c): Create atomically.\n+\t\n+\t* Makefile.in (parse.c, parse-scan.c): Likewise.\n+\n 2000-10-12  Mark Mitchell  <mark@codesourcery.com>\n \n \t* class.c (temporary_obstack): Remove."}, {"sha": "35a174ae02623932b5bfbc8e2c936f7529f4420a", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9454025b3a5dc0f7bed051d5026a09b5db6376/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9454025b3a5dc0f7bed051d5026a09b5db6376/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=4b9454025b3a5dc0f7bed051d5026a09b5db6376", "patch": "@@ -122,12 +122,14 @@ JAVABISONFLAGS = --name-prefix=java_\n \n $(PARSE_C):  $(srcdir)/java/parse.y\n \t$(SET_BISON); \\\n-\tcd $(PARSE_DIR) && $$bison -t $(BISONFLAGS) $(JAVABISONFLAGS) \\\n-\t    -o parse.c $(PARSE_RELDIR)/parse.y\n+\tcd $(PARSE_DIR) ; $$bison -t $(BISONFLAGS) $(JAVABISONFLAGS) \\\n+\t    -o p$$$$.c $(PARSE_RELDIR)/parse.y ; \\\n+\tmv -f p$$$$.c parse.c\n $(PARSE_SCAN_C):  $(srcdir)/java/parse-scan.y\n \t$(SET_BISON); \\\n-\tcd $(PARSE_DIR) && $$bison -t $(BISONFLAGS) -o parse-scan.c \\\n-\t    $(PARSE_RELDIR)/parse-scan.y\n+\tcd $(PARSE_DIR) ; $$bison -t $(BISONFLAGS) -o ps$$$$.c \\\n+\t    $(PARSE_RELDIR)/parse-scan.y ; \\\n+\tmv -f ps$$$$.c parse-scan.c\n \n # This must be kept in sync with dependencies in Makefile.in.\n JV_SCAN_SOURCES = $(srcdir)/java/parse-scan.y $(srcdir)/java/lex.c \\"}, {"sha": "96081783bae30758017c3b1dc95ef3ba1aff5880", "filename": "gcc/java/Makefile.in", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9454025b3a5dc0f7bed051d5026a09b5db6376/gcc%2Fjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9454025b3a5dc0f7bed051d5026a09b5db6376/gcc%2Fjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMakefile.in?ref=4b9454025b3a5dc0f7bed051d5026a09b5db6376", "patch": "@@ -230,12 +230,14 @@ PARSE_H = $(srcdir)/parse.h\n \n $(PARSE_C):  $(srcdir)/parse.y\n \t$(SET_BISON); \\\n-\tcd $(PARSE_DIR) && $$bison -t $(BISONFLAGS) $(JAVABISONFLAGS) \\\n-\t    -o parse.c $(PARSE_RELDIR)/parse.y\n+\tcd $(PARSE_DIR) ; $$bison -t $(BISONFLAGS) $(JAVABISONFLAGS) \\\n+\t    -o p$$$$.c $(PARSE_RELDIR)/parse.y ; \\\n+\tmv -f p$$$$.c parse.c\n $(PARSE_SCAN_C):  $(srcdir)/parse-scan.y\n \t$(SET_BISON); \\\n-\tcd $(PARSE_DIR) && $$bison -t $(BISONFLAGS) -o parse-scan.c \\\n-\t    $(PARSE_RELDIR)/parse-scan.y\n+\tcd $(PARSE_DIR) ; $$bison -t $(BISONFLAGS) -o ps$$$$.c \\\n+\t    $(PARSE_RELDIR)/parse-scan.y ; \\\n+\tmv -f ps$$$$.c parse-scan.c\n \n lex.c: keyword.h lex.h\n "}, {"sha": "049c3060aa7c4089b3107cfa5f76b4571639d262", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9454025b3a5dc0f7bed051d5026a09b5db6376/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9454025b3a5dc0f7bed051d5026a09b5db6376/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=4b9454025b3a5dc0f7bed051d5026a09b5db6376", "patch": "@@ -75,7 +75,8 @@ objc-parse.o : $(srcdir)/objc/objc-parse.c \\\n $(INTL_TARGETS): $(srcdir)/objc/objc-parse.c\n $(srcdir)/objc/objc-parse.c : $(srcdir)/objc/objc-parse.y\n \tcd $(srcdir)/objc; \\\n-\t$(BISON) $(BISONFLAGS) -o objc-parse.c objc-parse.y\n+\t$(BISON) $(BISONFLAGS) -o op$$$$.c objc-parse.y ; \\\n+\tmv -f op$$$$.c objc-parse.c\n \n $(srcdir)/objc/objc-parse.y: $(srcdir)/c-parse.in\n \techo '/*WARNING: This file is automatically generated!*/' >tmp-objc-prs.y"}]}