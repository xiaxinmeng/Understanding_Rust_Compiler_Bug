{"sha": "015089dd480af952c22cbc9928d776d3ba7ca248", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE1MDg5ZGQ0ODBhZjk1MmMyMmNiYzk5MjhkNzc2ZDNiYTdjYTI0OA==", "commit": {"author": {"name": "Tim Josling", "email": "timjosling@gcc.gnu.org", "date": "2002-06-19T20:30:23Z"}, "committer": {"name": "Tim Josling", "email": "timjosling@gcc.gnu.org", "date": "2002-06-19T20:30:23Z"}, "message": "Clean up configure.in checks for bad languages; fix typos in treelang.\n\nFrom-SVN: r54800", "tree": {"sha": "ebb522feadad4e1d54008107a778137493964630", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebb522feadad4e1d54008107a778137493964630"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/015089dd480af952c22cbc9928d776d3ba7ca248", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/015089dd480af952c22cbc9928d776d3ba7ca248", "html_url": "https://github.com/Rust-GCC/gccrs/commit/015089dd480af952c22cbc9928d776d3ba7ca248", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/015089dd480af952c22cbc9928d776d3ba7ca248/comments", "author": null, "committer": null, "parents": [{"sha": "a616effa589567238ba8e380f2a7ec143689648a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a616effa589567238ba8e380f2a7ec143689648a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a616effa589567238ba8e380f2a7ec143689648a"}], "stats": {"total": 105, "additions": 82, "deletions": 23}, "files": [{"sha": "70782be6825b89a18e166ba4f62fdbc516ea00a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/015089dd480af952c22cbc9928d776d3ba7ca248/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/015089dd480af952c22cbc9928d776d3ba7ca248/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=015089dd480af952c22cbc9928d776d3ba7ca248", "patch": "@@ -1,3 +1,8 @@\n+2002-06-20  Tim Josling  <tej@melbpc.org.au>\n+\n+\t* Makefile.in: Clean up code to check for misspecified languages\n+\tin enable-languages.\n+\n 2002-06-19  Andrew Pinski <pinskia@physics.uc.edu>\n \n         * cpptrad.c (_cpp_replacement_text_len): initialize len."}, {"sha": "0d7609e488574a70697ec9c19bcbc1764275bd9e", "filename": "gcc/configure", "status": "modified", "additions": 34, "deletions": 11, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/015089dd480af952c22cbc9928d776d3ba7ca248/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/015089dd480af952c22cbc9928d776d3ba7ca248/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=015089dd480af952c22cbc9928d776d3ba7ca248", "patch": "@@ -2244,7 +2244,7 @@ EOF\n fi\n \n # Find some useful tools\n-for ac_prog in mawk gawk nawk awk\n+for ac_prog in gawk mawk nawk awk\n do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -7929,7 +7929,8 @@ if test x\"${enable_languages+set}\" != xset; then\n \t\tenable_languages=all\n \tfi\n else\n-\tif test x\"${enable_languages}\" = x;\n+\tif test x\"${enable_languages}\" = x \\\n+        || test x\"${enable_languages}\" = xyes;\n \tthen\n \t\t{ echo \"configure: error: --enable-languages needs at least one language argument\" 1>&2; exit 1; }\n \tfi\n@@ -7967,7 +7968,8 @@ do\n    esac\n done\n \n-remaining_languages=${enable_languages}\n+expected_languages=`echo ,${enable_languages}, | sed -e 's:,: :g' -e 's:  *: :g' -e 's:  *: :g' -e 's:^ ::' -e 's: $::'`\n+found_languages=\n subdirs=\n for lang in ${srcdir}/*/config-lang.in ..\n do\n@@ -7991,8 +7993,8 @@ do\n \t  *,all,*) add_this_lang=yes ;;\n \t  *) add_this_lang=no ;;\n \t  esac\n+          found_languages=\"${found_languages} ${lang_alias}\"\n \t  if test x\"${add_this_lang}\" = xyes; then\n-                remaining_languages=`echo $remaining_languages | sed -e s/${lang_alias}//g`\n \t\tcase $lang in\n \t\t    ${srcdir}/ada/config-lang.in)\n \t\t\tif test x$have_gnat = xyes ; then\n@@ -8008,12 +8010,33 @@ do\n \tesac\n done\n \n-remaining_languages_check=`echo $remaining_languages | sed -e 's/,//g' -e 's/^c$//'g`\n-if test \"xxx$remaining_languages_check\" != \"xxx\" -a \"xxx$remaining_languages_check\" != \"xxxall\" ; then\n-    remaining_languages_clean=`echo $remaining_languages | sed -e 's/^c,//' -e 's/,c,/,/' -e 's/,c$//'  -e 's/^c$//' -e 's/,,*/,/g' -e 's/^,//g' -e 's/,$//g' `\n-    echo \"Language alias(es) not found: $remaining_languages_clean\" \n-    echo \"Refer to the configure instructions in the doc directory\"\n-    exit 1\n+missing_languages=\n+for expected_language in ${expected_languages} ..\n+do \n+    if test \"${expected_language}\" != ..; then\n+        missing_language=\"${expected_language}\"\n+        if test \"${expected_language}\" = \"c\" \\\n+           || test \"${expected_language}\" = \"all\"; then\n+                missing_language=\n+        fi\n+        for found_language in ${found_languages} ..\n+        do \n+            if test \"${found_language}\" != ..; then\n+                if test \"${expected_language}\" = \"${found_language}\"; then\n+                    missing_language=\n+                fi\n+            fi\n+        done\n+        if test \"x${missing_language}\" != x; then\n+           missing_languages=\"${missing_languages} ${missing_language}\"\n+        fi\n+    fi\n+done\n+\n+if test \"x$missing_languages\" != x; then\n+  { echo \"configure: error: \n+The following requested languages were not found:${missing_languages}\n+The following languages were available: c${found_languages}\" 1>&2; exit 1; }\n fi\n \n # Make gthr-default.h if we have a thread file.\n@@ -8060,7 +8083,7 @@ fi\n \n \n echo $ac_n \"checking whether to enable maintainer-specific portions of Makefiles\"\"... $ac_c\" 1>&6\n-echo \"configure:8064: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n+echo \"configure:8087: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n     # Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n if test \"${enable_maintainer_mode+set}\" = set; then\n   enableval=\"$enable_maintainer_mode\""}, {"sha": "60d7f83b11294fafdece0d682479698e9f94053e", "filename": "gcc/configure.in", "status": "modified", "additions": 32, "deletions": 9, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/015089dd480af952c22cbc9928d776d3ba7ca248/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/015089dd480af952c22cbc9928d776d3ba7ca248/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=015089dd480af952c22cbc9928d776d3ba7ca248", "patch": "@@ -2181,7 +2181,8 @@ if test x\"${enable_languages+set}\" != xset; then\n \t\tenable_languages=all\n \tfi\n else\n-\tif test x\"${enable_languages}\" = x;\n+\tif test x\"${enable_languages}\" = x \\\n+        || test x\"${enable_languages}\" = xyes;\n \tthen\n \t\tAC_MSG_ERROR([--enable-languages needs at least one language argument])\n \tfi\n@@ -2221,7 +2222,8 @@ changequote([,])dnl\n    esac\n done\n \n-remaining_languages=${enable_languages}\n+expected_languages=`echo ,${enable_languages}, | sed -e 's:,: :g' -e 's:  *: :g' -e 's:  *: :g' -e 's:^ ::' -e 's: $::'`\n+found_languages=\n subdirs=\n for lang in ${srcdir}/*/config-lang.in ..\n do\n@@ -2246,8 +2248,8 @@ changequote(,)dnl\n \t  *,all,*) add_this_lang=yes ;;\n \t  *) add_this_lang=no ;;\n \t  esac\n+          found_languages=\"${found_languages} ${lang_alias}\"\n \t  if test x\"${add_this_lang}\" = xyes; then\n-                remaining_languages=`echo $remaining_languages | sed -e s/${lang_alias}//g`\n \t\tcase $lang in\n \t\t    ${srcdir}/ada/config-lang.in)\n \t\t\tif test x$have_gnat = xyes ; then\n@@ -2264,12 +2266,33 @@ changequote([,])dnl\n \tesac\n done\n \n-remaining_languages_check=`echo $remaining_languages | sed -e 's/,//g' -e 's/^c$//'g`\n-if test \"xxx$remaining_languages_check\" != \"xxx\" -a \"xxx$remaining_languages_check\" != \"xxxall\" ; then\n-    remaining_languages_clean=`echo $remaining_languages | sed -e 's/^c,//' -e 's/,c,/,/' -e 's/,c$//'  -e 's/^c$//' -e 's/,,*/,/g' -e 's/^,//g' -e 's/,$//g' `\n-    echo \"Language alias(es) not found: $remaining_languages_clean\" \n-    echo \"Refer to the configure instructions in the doc directory\"\n-    exit 1\n+missing_languages=\n+for expected_language in ${expected_languages} ..\n+do \n+    if test \"${expected_language}\" != ..; then\n+        missing_language=\"${expected_language}\"\n+        if test \"${expected_language}\" = \"c\" \\\n+           || test \"${expected_language}\" = \"all\"; then\n+                missing_language=\n+        fi\n+        for found_language in ${found_languages} ..\n+        do \n+            if test \"${found_language}\" != ..; then\n+                if test \"${expected_language}\" = \"${found_language}\"; then\n+                    missing_language=\n+                fi\n+            fi\n+        done\n+        if test \"x${missing_language}\" != x; then\n+           missing_languages=\"${missing_languages} ${missing_language}\"\n+        fi\n+    fi\n+done\n+\n+if test \"x$missing_languages\" != x; then\n+  AC_MSG_ERROR([\n+The following requested languages were not found:${missing_languages}\n+The following languages were available: c${found_languages}])\n fi\n \n # Make gthr-default.h if we have a thread file."}, {"sha": "4db3f72199e42ce0f0e97c6cf31529aba1b9cdd8", "filename": "gcc/treelang/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/015089dd480af952c22cbc9928d776d3ba7ca248/gcc%2Ftreelang%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/015089dd480af952c22cbc9928d776d3ba7ca248/gcc%2Ftreelang%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FChangeLog?ref=015089dd480af952c22cbc9928d776d3ba7ca248", "patch": "@@ -1,3 +1,8 @@\n+2002-06-19  Paolo Bonzini <bonzini@gnu.org> \n+\n+\t* lex.l (yyparse) Return AUTOMATIC for 'automatic' token rather\n+\tthan STATIC.\n+\n 2002-06-10  Tim Josling  <tej@melbpc.org.au>\n \n         Cleanup \n@@ -25,7 +30,7 @@\n \t* tree1.c (main): Remove include of \"output.h\".\n \t(symbol_table): Add GTY details.\n \t(symbol_table_ggc): Remove.\n-\t(treelang_init): Remove root definitions for garage collection.\n+\t(treelang_init): Remove root definitions for garbage collection.\n \t(mark_production_used): Remove.\n \t(mark_token_used): Remove.\n \t(main, at end): include generated garage collection routines."}, {"sha": "87dce1ae85ea6445c08521a1c87ade9487b2f15b", "filename": "gcc/treelang/README", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/015089dd480af952c22cbc9928d776d3ba7ca248/gcc%2Ftreelang%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/015089dd480af952c22cbc9928d776d3ba7ca248/gcc%2Ftreelang%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FREADME?ref=015089dd480af952c22cbc9928d776d3ba7ca248", "patch": "@@ -11,6 +11,9 @@ the GCC back end 'tree' interface in syntax.\n Thanks to Richard Kenner, Joachim Nadler and many others for helping\n me to understand enough of GCC to do this.\n \n+Please note, the documentation is not a good model to use for GCC\n+front end documentation. \n+\n Tim Josling\n-May 2001\n+19 June 2002\n "}, {"sha": "b1881dc9f3dd1891f548bd2c1ac0d88415dc452f", "filename": "gcc/treelang/lex.l", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/015089dd480af952c22cbc9928d776d3ba7ca248/gcc%2Ftreelang%2Flex.l", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/015089dd480af952c22cbc9928d776d3ba7ca248/gcc%2Ftreelang%2Flex.l", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Flex.l?ref=015089dd480af952c22cbc9928d776d3ba7ca248", "patch": "@@ -166,7 +166,7 @@ static void dump_lex_value (int lexret);\n   \n \"automatic\" {\n   update_lineno_charno ();\n-  SAVE_RETURN (STATIC);\n+  SAVE_RETURN (AUTOMATIC);\n }\n   \n \"int\" {"}]}