{"sha": "eb78da45ab82753b78bf062c6f3e982f68274913", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI3OGRhNDVhYjgyNzUzYjc4YmYwNjJjNmYzZTk4MmY2ODI3NDkxMw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-27T18:03:50Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-28T08:27:09Z"}, "message": "mklog: support renaming of files\n\ncontrib/ChangeLog:\n\n\t* mklog.py: Support renaming of files.\n\tOne needs unidiff 0.6.0+.\n\t* test_mklog.py: Test it.", "tree": {"sha": "4403f656a3ec732534de3a6186b94fa823b466f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4403f656a3ec732534de3a6186b94fa823b466f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb78da45ab82753b78bf062c6f3e982f68274913", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7Pdd0ACgkQTcGC3A+n\nN4Uhdgf9GSFn8JOK9UI6N8vHuN7ySsh0y5hMZ5nd2TmpI2wGsPKgcSo0jmOzXuC6\n2+xLa/CZV98wkalZ2tzH0JAYxFmQYjSYRaY4qMThrY/I6Eo5wtVDcwKcDucMFuw0\nc4LhSbJOjDnRdyMR90228pPKYin4Wdo2GjLlzx/bBRj3EZyR87CT3CGk8Ipa/ADu\n6alJ+kmUI3jWhENuHPqKX2Xhk0qoqV2/TeGazf0WRkT6CrxGEa6RtQ+E5CMApTBw\npqBAfGqE/6HVn0MdShIHirmTkHVTSVo1I9dp39OFxGkwMoh9zUKELrErUwPt+GYd\n98epXGjDrB3l9xK+Bg9GgcPSIXFgBw==\n=VSSY\n-----END PGP SIGNATURE-----", "payload": "tree 4403f656a3ec732534de3a6186b94fa823b466f7\nparent 4a948703db483c3ba3df67816425d951c0268623\nauthor Martin Liska <mliska@suse.cz> 1590602630 +0200\ncommitter Martin Liska <mliska@suse.cz> 1590654429 +0200\n\nmklog: support renaming of files\n\ncontrib/ChangeLog:\n\n\t* mklog.py: Support renaming of files.\n\tOne needs unidiff 0.6.0+.\n\t* test_mklog.py: Test it.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb78da45ab82753b78bf062c6f3e982f68274913", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb78da45ab82753b78bf062c6f3e982f68274913", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb78da45ab82753b78bf062c6f3e982f68274913/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a948703db483c3ba3df67816425d951c0268623", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a948703db483c3ba3df67816425d951c0268623", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a948703db483c3ba3df67816425d951c0268623"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "243edbb15c522169709902b27a8558c6e0755107", "filename": "contrib/mklog.py", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb78da45ab82753b78bf062c6f3e982f68274913/contrib%2Fmklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb78da45ab82753b78bf062c6f3e982f68274913/contrib%2Fmklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmklog.py?ref=eb78da45ab82753b78bf062c6f3e982f68274913", "patch": "@@ -173,6 +173,14 @@ def generate_changelog(data, no_functions=False, fill_pr_titles=False):\n                 out += '\\t* %s: %s.\\n' % (relative_path, msg)\n             elif file.is_removed_file:\n                 out += '\\t* %s: Removed.\\n' % (relative_path)\n+            elif hasattr(file, 'is_rename') and file.is_rename:\n+                out += '\\t* %s: Moved to...\\n' % (relative_path)\n+                new_path = file.target_file[2:]\n+                # A file can be theoretically moved to a location that\n+                # belongs to a different ChangeLog.  Let user fix it.\n+                if new_path.startswith(changelog):\n+                    new_path = new_path[len(changelog):].lstrip('/')\n+                out += '\\t* %s: ...here.\\n' % (new_path)\n             else:\n                 if not no_functions:\n                     for hunk in file:"}, {"sha": "344b7a2c77167c03f5c65a4fb436100c6d9fdda4", "filename": "contrib/test_mklog.py", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb78da45ab82753b78bf062c6f3e982f68274913/contrib%2Ftest_mklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb78da45ab82753b78bf062c6f3e982f68274913/contrib%2Ftest_mklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ftest_mklog.py?ref=eb78da45ab82753b78bf062c6f3e982f68274913", "patch": "@@ -30,6 +30,11 @@\n \n from mklog import generate_changelog\n \n+import unidiff\n+\n+unidiff_supports_renaming = hasattr(unidiff.PatchedFile(), 'is_rename')\n+\n+\n PATCH1 = '''\\\n diff --git a/gcc/config/riscv/riscv.h b/gcc/config/riscv/riscv.h\n index 567c23380fe..e6209ede9d6 100644\n@@ -379,6 +384,21 @@\n \n '''\n \n+PATCH8 = '''\\\n+diff --git a/gcc/ipa-icf.c b/gcc/ipa-icf2.c\n+similarity index 100%\n+rename from gcc/ipa-icf.c\n+rename to gcc/ipa-icf2.c\n+'''\n+\n+EXPECTED8 = '''\\\n+gcc/ChangeLog:\n+\n+\t* ipa-icf.c: Moved to...\n+\t* ipa-icf2.c: ...here.\n+\n+'''\n+\n class TestMklog(unittest.TestCase):\n     def test_macro_definition(self):\n         changelog = generate_changelog(PATCH1)\n@@ -411,3 +431,9 @@ def test_gty_in_struct(self):\n     def test_dr_detection_in_test_case(self):\n         changelog = generate_changelog(PATCH7)\n         assert changelog == EXPECTED7\n+\n+    @unittest.skipIf(not unidiff_supports_renaming,\n+                     'Newer version of unidiff is needed (0.6.0+)')\n+    def test_renaming(self):\n+        changelog = generate_changelog(PATCH8)\n+        assert changelog == EXPECTED8"}]}