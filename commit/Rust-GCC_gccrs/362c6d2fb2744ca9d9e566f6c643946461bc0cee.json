{"sha": "362c6d2fb2744ca9d9e566f6c643946461bc0cee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYyYzZkMmZiMjc0NGNhOWQ5ZTU2NmY2YzY0Mzk0NjQ2MWJjMGNlZQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2010-01-31T18:12:21Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2010-01-31T18:12:21Z"}, "message": "configure.ac: Add \"recommended\" version checks for GMP/MPC.\n\n\t* configure.ac: Add \"recommended\" version checks for GMP/MPC.\n\tUpdate recommended GMP/MPFR/MPC versions.\n\t* configure: Regenerate.\n\ngcc:\n\t* doc/install.texi: Update recommended GMP/MPFR/MPC versions.\n\nFrom-SVN: r156408", "tree": {"sha": "0de7e4ea535670852bf83d117d0ff6a1c2196d5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0de7e4ea535670852bf83d117d0ff6a1c2196d5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/362c6d2fb2744ca9d9e566f6c643946461bc0cee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/362c6d2fb2744ca9d9e566f6c643946461bc0cee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/362c6d2fb2744ca9d9e566f6c643946461bc0cee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/362c6d2fb2744ca9d9e566f6c643946461bc0cee/comments", "author": null, "committer": null, "parents": [{"sha": "8370a62af8eab46ee68fa072db3d2b55d6ce607c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8370a62af8eab46ee68fa072db3d2b55d6ce607c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8370a62af8eab46ee68fa072db3d2b55d6ce607c"}], "stats": {"total": 123, "additions": 100, "deletions": 23}, "files": [{"sha": "9320f20220dc387f26929f2d7096438626cfd83e", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362c6d2fb2744ca9d9e566f6c643946461bc0cee/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362c6d2fb2744ca9d9e566f6c643946461bc0cee/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=362c6d2fb2744ca9d9e566f6c643946461bc0cee", "patch": "@@ -1,3 +1,9 @@\n+2010-01-31  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* configure.ac: Add \"recommended\" version checks for GMP/MPC.\n+\tUpdate recommended GMP/MPFR/MPC versions.\n+\t* configure: Regenerate.\n+\n 2010-01-31  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* MAINTAINERS: Move my Embecosm email address into the"}, {"sha": "fd6529879246427c8158d60007122a1da0d09da3", "filename": "configure", "status": "modified", "additions": 60, "deletions": 10, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362c6d2fb2744ca9d9e566f6c643946461bc0cee/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362c6d2fb2744ca9d9e566f6c643946461bc0cee/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=362c6d2fb2744ca9d9e566f6c643946461bc0cee", "patch": "@@ -5467,18 +5467,38 @@ if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n   have_gmp=yes\n   saved_CFLAGS=\"$CFLAGS\"\n   CFLAGS=\"$CFLAGS $gmpinc\"\n-  # Check GMP actually works\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for correct version of gmp.h\" >&5\n-$as_echo_n \"checking for correct version of gmp.h... \" >&6; }\n+  # Check for the recommended and required versions of GMP.\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of gmp.h\" >&5\n+$as_echo_n \"checking for the correct version of gmp.h... \" >&6; }\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include \"gmp.h\"\n+int\n+main ()\n+{\n+\n+  #define GCC_GMP_VERSION_NUM(a,b,c) (((a) << 16L) | ((b) << 8) | (c))\n+  #define GCC_GMP_VERSION GCC_GMP_VERSION_NUM(__GNU_MP_VERSION,__GNU_MP_VERSION_MINOR,__GNU_MP_VERSION_PATCHLEVEL)\n+  #if GCC_GMP_VERSION < GCC_GMP_VERSION_NUM(4,2,0)\n+  choke me\n+  #endif\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n \n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n-#include \"gmp.h\"\n+#include <gmp.h>\n int\n main ()\n {\n \n-  #if __GNU_MP_VERSION < 4 || (__GNU_MP_VERSION == 4 && __GNU_MP_VERSION_MINOR < 2)\n+  #define GCC_GMP_VERSION_NUM(a,b,c) (((a) << 16L) | ((b) << 8) | (c))\n+  #define GCC_GMP_VERSION GCC_GMP_VERSION_NUM(__GNU_MP_VERSION,__GNU_MP_VERSION_MINOR,__GNU_MP_VERSION_PATCHLEVEL)\n+  #if GCC_GMP_VERSION < GCC_GMP_VERSION_NUM(4,3,2)\n   choke me\n   #endif\n \n@@ -5489,6 +5509,11 @@ _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n $as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: buggy but acceptable\" >&5\n+$as_echo \"buggy but acceptable\" >&6; }\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n else\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n $as_echo \"no\" >&6; }; have_gmp=no\n@@ -5497,8 +5522,9 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n \n   # If we have GMP, check the MPFR version.\n   if test x\"$have_gmp\" = xyes; then\n-        { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for correct version of mpfr.h\" >&5\n-$as_echo_n \"checking for correct version of mpfr.h... \" >&6; }\n+    # Check for the recommended and required versions of MPFR.\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of mpfr.h\" >&5\n+$as_echo_n \"checking for the correct version of mpfr.h... \" >&6; }\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n #include <gmp.h>\n@@ -5524,7 +5550,7 @@ int\n main ()\n {\n \n-    #if MPFR_VERSION < MPFR_VERSION_NUM(2,3,2)\n+    #if MPFR_VERSION < MPFR_VERSION_NUM(2,4,2)\n     choke me\n     #endif\n \n@@ -5549,6 +5575,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n \n   # Check for the MPC header version.\n   if test x\"$have_gmp\" = xyes ; then\n+    # Check for the recommended and required versions of MPC.\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of mpc.h\" >&5\n $as_echo_n \"checking for the correct version of mpc.h... \" >&6; }\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n@@ -5558,7 +5585,23 @@ int\n main ()\n {\n \n-    #if MPC_VERSION < MPC_VERSION_NUM (0,8,0)\n+    #if MPC_VERSION < MPC_VERSION_NUM(0,8,0)\n+    choke me\n+    #endif\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <mpc.h>\n+int\n+main ()\n+{\n+\n+    #if MPC_VERSION < MPC_VERSION_NUM(0,8,1)\n     choke me\n     #endif\n \n@@ -5569,6 +5612,11 @@ _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n $as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: buggy but acceptable\" >&5\n+$as_echo \"buggy but acceptable\" >&6; }\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n else\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n $as_echo \"no\" >&6; }; have_gmp=no\n@@ -5625,8 +5673,10 @@ rm -f core conftest.err conftest.$ac_objext \\\n \n   CFLAGS=\"$saved_CFLAGS\"\n \n+# The library versions listed in the error message below should match\n+# the HARD-minimums enforced above.\n   if test x$have_gmp != xyes; then\n-    as_fn_error \"Building GCC requires GMP 4.2+, MPFR 2.3.2+ and MPC 0.8.0+.\n+    as_fn_error \"Building GCC requires GMP 4.2+, MPFR 2.3.1+ and MPC 0.8.0+.\n Try the --with-gmp, --with-mpfr and/or --with-mpc options to specify\n their locations.  Source code for these libraries can be found at\n their respective hosting sites as well as at"}, {"sha": "346416673393274567c50f8c787dd05f9643292c", "filename": "configure.ac", "status": "modified", "additions": 27, "deletions": 10, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362c6d2fb2744ca9d9e566f6c643946461bc0cee/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362c6d2fb2744ca9d9e566f6c643946461bc0cee/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=362c6d2fb2744ca9d9e566f6c643946461bc0cee", "patch": "@@ -1343,26 +1343,35 @@ if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n   have_gmp=yes\n   saved_CFLAGS=\"$CFLAGS\"\n   CFLAGS=\"$CFLAGS $gmpinc\"\n-  # Check GMP actually works\n-  AC_MSG_CHECKING([for correct version of gmp.h])\n+  # Check for the recommended and required versions of GMP.\n+  AC_MSG_CHECKING([for the correct version of gmp.h])\n   AC_TRY_COMPILE([#include \"gmp.h\"],[\n-  #if __GNU_MP_VERSION < 4 || (__GNU_MP_VERSION == 4 && __GNU_MP_VERSION_MINOR < 2)\n+  #define GCC_GMP_VERSION_NUM(a,b,c) (((a) << 16L) | ((b) << 8) | (c))\n+  #define GCC_GMP_VERSION GCC_GMP_VERSION_NUM(__GNU_MP_VERSION,__GNU_MP_VERSION_MINOR,__GNU_MP_VERSION_PATCHLEVEL)\n+  #if GCC_GMP_VERSION < GCC_GMP_VERSION_NUM(4,2,0)\n   choke me\n   #endif\n-  ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no]); have_gmp=no])\n+  ], AC_TRY_COMPILE([#include <gmp.h>],[\n+  #define GCC_GMP_VERSION_NUM(a,b,c) (((a) << 16L) | ((b) << 8) | (c))\n+  #define GCC_GMP_VERSION GCC_GMP_VERSION_NUM(__GNU_MP_VERSION,__GNU_MP_VERSION_MINOR,__GNU_MP_VERSION_PATCHLEVEL)\n+  #if GCC_GMP_VERSION < GCC_GMP_VERSION_NUM(4,3,2)\n+  choke me\n+  #endif\n+  ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([buggy but acceptable])]),\n+   [AC_MSG_RESULT([no]); have_gmp=no])\n \n   # If we have GMP, check the MPFR version.\n   if test x\"$have_gmp\" = xyes; then\n-    dnl MPFR 2.3.1 is acceptable, but MPFR 2.3.2 is better.\n-    AC_MSG_CHECKING([for correct version of mpfr.h])\n+    # Check for the recommended and required versions of MPFR.\n+    AC_MSG_CHECKING([for the correct version of mpfr.h])\n     AC_TRY_COMPILE([#include <gmp.h>\n     #include <mpfr.h>],[\n     #if MPFR_VERSION < MPFR_VERSION_NUM(2,3,1)\n     choke me\n     #endif\n     ], AC_TRY_COMPILE([#include <gmp.h>\n     #include <mpfr.h>],[\n-    #if MPFR_VERSION < MPFR_VERSION_NUM(2,3,2)\n+    #if MPFR_VERSION < MPFR_VERSION_NUM(2,4,2)\n     choke me\n     #endif\n     ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([buggy but acceptable])]),\n@@ -1371,12 +1380,18 @@ if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n \n   # Check for the MPC header version.\n   if test x\"$have_gmp\" = xyes ; then\n+    # Check for the recommended and required versions of MPC.\n     AC_MSG_CHECKING([for the correct version of mpc.h])\n     AC_TRY_COMPILE([#include <mpc.h>],[\n-    #if MPC_VERSION < MPC_VERSION_NUM (0,8,0)\n+    #if MPC_VERSION < MPC_VERSION_NUM(0,8,0)\n     choke me\n     #endif\n-    ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no]); have_gmp=no])\n+    ], AC_TRY_COMPILE([#include <mpc.h>],[\n+    #if MPC_VERSION < MPC_VERSION_NUM(0,8,1)\n+    choke me\n+    #endif\n+    ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([buggy but acceptable])]),\n+     [AC_MSG_RESULT([no]); have_gmp=no])\n   fi\n \n   # Now check the MPFR library.\n@@ -1408,8 +1423,10 @@ if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n \n   CFLAGS=\"$saved_CFLAGS\"\n \n+# The library versions listed in the error message below should match\n+# the HARD-minimums enforced above.\n   if test x$have_gmp != xyes; then\n-    AC_MSG_ERROR([Building GCC requires GMP 4.2+, MPFR 2.3.2+ and MPC 0.8.0+.\n+    AC_MSG_ERROR([Building GCC requires GMP 4.2+, MPFR 2.3.1+ and MPC 0.8.0+.\n Try the --with-gmp, --with-mpfr and/or --with-mpc options to specify\n their locations.  Source code for these libraries can be found at\n their respective hosting sites as well as at"}, {"sha": "07b4de0556747db86988c3b543b0f5999bff4274", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362c6d2fb2744ca9d9e566f6c643946461bc0cee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362c6d2fb2744ca9d9e566f6c643946461bc0cee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=362c6d2fb2744ca9d9e566f6c643946461bc0cee", "patch": "@@ -1,3 +1,7 @@\n+2010-01-31  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* doc/install.texi: Update recommended GMP/MPFR/MPC versions.\n+\n 2010-01-31  Kai Tietz  <kai.tietz@onevision.com>\n \n \t* config.gcc: Adjust order of makefile fragments for mingw targets."}, {"sha": "1be448083e4fd042c1374bb15acd0929b38fc6bc", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362c6d2fb2744ca9d9e566f6c643946461bc0cee/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362c6d2fb2744ca9d9e566f6c643946461bc0cee/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=362c6d2fb2744ca9d9e566f6c643946461bc0cee", "patch": "@@ -303,7 +303,7 @@ Necessary (only on some platforms) to untar the source code.  Many\n systems' @command{tar} programs will also work, only try GNU\n @command{tar} if you have problems.\n \n-@item GNU Multiple Precision Library (GMP) version 4.2 (or later)\n+@item GNU Multiple Precision Library (GMP) version 4.3.2 (or later)\n \n Necessary to build GCC@.  If you do not have it installed in your\n library search path, you will have to configure with the\n@@ -312,7 +312,7 @@ and @option{--with-gmp-include}.  Alternatively, if a GMP source\n distribution is found in a subdirectory of your GCC sources named\n @file{gmp}, it will be built together with GCC@.\n \n-@item MPFR Library version 2.3.2 (or later)\n+@item MPFR Library version 2.4.2 (or later)\n \n Necessary to build GCC@.  It can be downloaded from\n @uref{http://www.mpfr.org/}.  The @option{--with-mpfr} configure\n@@ -322,7 +322,7 @@ default library search path.  See also @option{--with-mpfr-lib} and\n distribution is found in a subdirectory of your GCC sources named\n @file{mpfr}, it will be built together with GCC@.\n \n-@item MPC Library version 0.8.0 (or later)\n+@item MPC Library version 0.8.1 (or later)\n \n Necessary to build GCC@.  It can be downloaded from\n @uref{http://www.multiprecision.org/}.  The @option{--with-mpc}"}]}