{"sha": "a2ab189d04027ac47edefaba4e3ab6d4a93a0891", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJhYjE4OWQwNDAyN2FjNDdlZGVmYWJhNGUzYWI2ZDRhOTNhMDg5MQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-01-10T22:34:13Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-01-10T22:34:13Z"}, "message": "m32r.md: Use define_constants for unspec and unspec_volatile.\n\n\t* config/m32r/m32r.md: Use define_constants for unspec and\n\tunspec_volatile.\n\nFrom-SVN: r75656", "tree": {"sha": "180fdd53b28789ea7760e012a95e48f46c5fe61f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/180fdd53b28789ea7760e012a95e48f46c5fe61f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2ab189d04027ac47edefaba4e3ab6d4a93a0891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2ab189d04027ac47edefaba4e3ab6d4a93a0891", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2ab189d04027ac47edefaba4e3ab6d4a93a0891", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2ab189d04027ac47edefaba4e3ab6d4a93a0891/comments", "author": null, "committer": null, "parents": [{"sha": "162fd675e5647239cc88413481f23b87e688a756", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/162fd675e5647239cc88413481f23b87e688a756", "html_url": "https://github.com/Rust-GCC/gccrs/commit/162fd675e5647239cc88413481f23b87e688a756"}], "stats": {"total": 48, "additions": 30, "deletions": 18}, "files": [{"sha": "adf35bb17f780cbb526f586cff5b1e2082a6ec8b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2ab189d04027ac47edefaba4e3ab6d4a93a0891/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2ab189d04027ac47edefaba4e3ab6d4a93a0891/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a2ab189d04027ac47edefaba4e3ab6d4a93a0891", "patch": "@@ -1,3 +1,8 @@\n+2004-01-10  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/m32r/m32r.md: Use define_constants for unspec and\n+\tunspec_volatile.\n+\n 2004-01-10  Jan Hubicka  <jh@suse.cz>\n \n \tPR opt/11635"}, {"sha": "78d9df1e5464f9ddc657fa4dcc36ae3fe10e2141", "filename": "gcc/config/m32r/m32r.md", "status": "modified", "additions": 25, "deletions": 18, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2ab189d04027ac47edefaba4e3ab6d4a93a0891/gcc%2Fconfig%2Fm32r%2Fm32r.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2ab189d04027ac47edefaba4e3ab6d4a93a0891/gcc%2Fconfig%2Fm32r%2Fm32r.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.md?ref=a2ab189d04027ac47edefaba4e3ab6d4a93a0891", "patch": "@@ -19,13 +19,19 @@\n ;; Boston, MA 02111-1307, USA.\n \n ;; See file \"rtl.def\" for documentation on define_insn, match_*, et. al.\n-\n-;; unspec usage\n-;; 0 - blockage\n-;; 1 - flush_icache\n-;; 2 - load_sda_base\n-;; 3 - setting carry in addx/subx instructions.\n \f\n+;; UNSPEC_VOLATILE usage\n+(define_constants\n+  [(UNSPECV_BLOCKAGE\t\t0)\n+   (UNSPECV_FLUSH_ICACHE\t1)])\n+\n+;; UNSPEC usage\n+(define_constants\n+  [(UNSPEC_LOAD_SDA_BASE\t2)\n+   (UNSPEC_SET_CBIT\t\t3)\n+   (UNSPEC_PIC_LOAD_ADDR\t4)\n+   (UNSPEC_GET_PC\t\t5)])\n+\n ;; Insn type.  Used to default other attribute values.\n (define_attr \"type\"\n   \"int2,int4,load2,load4,load8,store2,store4,store8,shift2,shift4,mul2,div4,uncond_branch,branch,call,multi,misc\"\n@@ -564,7 +570,7 @@\n \n (define_expand \"movsi_sda\"\n   [(set (match_dup 2)\n-\t(unspec [(const_int 0)] 2))\n+\t(unspec [(const_int 0)] UNSPEC_LOAD_SDA_BASE))\n    (set (match_operand:SI 0 \"register_operand\" \"\")\n \t(lo_sum:SI (match_dup 2)\n \t\t   (match_operand:SI 1 \"small_data_operand\" \"\")))]\n@@ -579,7 +585,7 @@\n \n (define_insn \"*load_sda_base\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(const_int 0)] 2))]\n+\t(unspec:SI [(const_int 0)] UNSPEC_LOAD_SDA_BASE))]\n   \"\"\n   \"ld24 %0,#_SDA_BASE_\"\n   [(set_attr \"type\" \"int4\")\n@@ -921,13 +927,13 @@\n \t\t\t    (plus:SI (match_dup 5)\n \t\t\t\t     (ne:SI (reg:CC 17) (const_int 0)))))\n \t      (set (reg:CC 17)\n-\t\t   (unspec:CC [(const_int 0)] 3))])\n+\t\t   (unspec:CC [(const_int 0)] UNSPEC_SET_CBIT))])\n    (parallel [(set (match_dup 6)\n \t\t   (plus:SI (match_dup 6)\n \t\t\t    (plus:SI (match_dup 7)\n \t\t\t\t     (ne:SI (reg:CC 17) (const_int 0)))))\n \t      (set (reg:CC 17)\n-\t\t   (unspec:CC [(const_int 0)] 3))])]\n+\t\t   (unspec:CC [(const_int 0)] UNSPEC_SET_CBIT))])]\n   \"\n {\n   operands[4] = operand_subword (operands[0], (WORDS_BIG_ENDIAN != 0), 0, DImode);\n@@ -951,7 +957,7 @@\n \t\t (plus:SI (match_operand:SI 2 \"register_operand\" \"r\")\n \t\t\t  (ne:SI (reg:CC 17) (const_int 0)))))\n    (set (reg:CC 17)\n-\t(unspec:CC [(const_int 0)] 3))]\n+\t(unspec:CC [(const_int 0)] UNSPEC_SET_CBIT))]\n   \"\"\n   \"addx %0,%2\"\n   [(set_attr \"type\" \"int2\")\n@@ -991,13 +997,13 @@\n \t\t\t     (minus:SI (match_dup 5)\n \t\t\t\t       (ne:SI (reg:CC 17) (const_int 0)))))\n \t      (set (reg:CC 17)\n-\t\t   (unspec:CC [(const_int 0)] 3))])\n+\t\t   (unspec:CC [(const_int 0)] UNSPEC_SET_CBIT))])\n    (parallel [(set (match_dup 6)\n \t\t   (minus:SI (match_dup 6)\n \t\t\t     (minus:SI (match_dup 7)\n \t\t\t\t       (ne:SI (reg:CC 17) (const_int 0)))))\n \t      (set (reg:CC 17)\n-\t\t   (unspec:CC [(const_int 0)] 3))])]\n+\t\t   (unspec:CC [(const_int 0)] UNSPEC_SET_CBIT))])]\n   \"\n {\n   operands[4] = operand_subword (operands[0], (WORDS_BIG_ENDIAN != 0), 0, DImode);\n@@ -1012,7 +1018,7 @@\n \t\t  (minus:SI (match_operand:SI 2 \"register_operand\" \"r\")\n \t\t\t    (ne:SI (reg:CC 17) (const_int 0)))))\n    (set (reg:CC 17)\n-\t(unspec:CC [(const_int 0)] 3))]\n+\t(unspec:CC [(const_int 0)] UNSPEC_SET_CBIT))]\n   \"\"\n   \"subx %0,%2\"\n   [(set_attr \"type\" \"int2\")\n@@ -2494,14 +2500,15 @@\n ;; all of memory.  This blocks insns from being moved across this point.\n \n (define_insn \"blockage\"\n-  [(unspec_volatile [(const_int 0)] 0)]\n+  [(unspec_volatile [(const_int 0)] UNSPECV_BLOCKAGE)]\n   \"\"\n   \"\")\n \n ;; Special pattern to flush the icache.\n \n (define_insn \"flush_icache\"\n-  [(unspec_volatile [(match_operand 0 \"memory_operand\" \"m\")] 1)\n+  [(unspec_volatile [(match_operand 0 \"memory_operand\" \"m\")]\n+\t\t    UNSPECV_FLUSH_ICACHE)\n    (match_operand 1 \"\" \"\")\n    (clobber (reg:SI 17))]\n   \"\"\n@@ -2700,7 +2707,7 @@\n \n (define_insn \"pic_load_addr\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-        (unspec:SI [(match_operand 1 \"\" \"\")] 4))]\n+        (unspec:SI [(match_operand 1 \"\" \"\")] UNSPEC_PIC_LOAD_ADDR))]\n   \"flag_pic\"\n   \"ld24 %0,%#%1\"\n   [(set_attr \"type\" \"int4\")])\n@@ -2710,7 +2717,7 @@\n (define_insn \"get_pc\"\n   [(clobber (reg:SI 14))\n    (set (match_operand 0 \"register_operand\" \"=r\")\n-        (unspec [(match_operand 1 \"\" \"\")] 5))\n+        (unspec [(match_operand 1 \"\" \"\")] UNSPEC_GET_PC))\n    (use (match_operand:SI 2 \"immediate_operand\" \"\"))]\n   \"flag_pic\"\n   \"*"}]}