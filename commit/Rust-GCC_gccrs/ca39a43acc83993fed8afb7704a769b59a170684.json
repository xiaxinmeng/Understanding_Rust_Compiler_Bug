{"sha": "ca39a43acc83993fed8afb7704a769b59a170684", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EzOWE0M2FjYzgzOTkzZmVkOGFmYjc3MDRhNzY5YjU5YTE3MDY4NA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-01-14T10:14:23Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-01-14T10:14:23Z"}, "message": "[ARM] Fix PR target/64460: Set 'shift' attr properly on some patterns.\n\n\tPR target/64460\n\t* config/arm/arm.md (*<arith_shift_insn>_multsi): Set 'shift' to 2.\n\t(*<arith_shift_insn>_shiftsi): Set 'shift' attr to 3.\n\n\t* gcc.target/arm/pr64460_1.c: New test.\n\nFrom-SVN: r219583", "tree": {"sha": "d1bbf7552b9840a567f2f1f22b206a359fcb5652", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1bbf7552b9840a567f2f1f22b206a359fcb5652"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca39a43acc83993fed8afb7704a769b59a170684", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca39a43acc83993fed8afb7704a769b59a170684", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca39a43acc83993fed8afb7704a769b59a170684", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca39a43acc83993fed8afb7704a769b59a170684/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fcd7669cb6f4153b535be458e8629ecbc4257bbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcd7669cb6f4153b535be458e8629ecbc4257bbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcd7669cb6f4153b535be458e8629ecbc4257bbc"}], "stats": {"total": 84, "additions": 82, "deletions": 2}, "files": [{"sha": "611f0a7bd495bdf16dfd2220b43955252e269006", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca39a43acc83993fed8afb7704a769b59a170684/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca39a43acc83993fed8afb7704a769b59a170684/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca39a43acc83993fed8afb7704a769b59a170684", "patch": "@@ -1,3 +1,9 @@\n+2015-01-14  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/64460\n+\t* config/arm/arm.md (*<arith_shift_insn>_multsi): Set 'shift' to 2.\n+\t(*<arith_shift_insn>_shiftsi): Set 'shift' attr to 3.\n+\n 2015-01-14  Matthew Fortune  <matthew.fortune@imgtec.com>\n \n     \t* config/mips/mips.h (MIPS_ISA_LEVEL_SPEC): Only infer an ISA"}, {"sha": "bbefb93a46cd6bf02f723d3de971e916bc4343b5", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca39a43acc83993fed8afb7704a769b59a170684/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca39a43acc83993fed8afb7704a769b59a170684/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=ca39a43acc83993fed8afb7704a769b59a170684", "patch": "@@ -8262,7 +8262,7 @@\n   \"<arith_shift_insn>%?\\\\t%0, %1, %2, lsl %b3\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n-   (set_attr \"shift\" \"4\")\n+   (set_attr \"shift\" \"2\")\n    (set_attr \"arch\" \"a,t2\")\n    (set_attr \"type\" \"alu_shift_imm\")])\n \n@@ -8277,7 +8277,7 @@\n   \"<arith_shift_insn>%?\\\\t%0, %1, %3%S2\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n-   (set_attr \"shift\" \"4\")\n+   (set_attr \"shift\" \"3\")\n    (set_attr \"arch\" \"a,t2,a\")\n    (set_attr \"type\" \"alu_shift_imm,alu_shift_imm,alu_shift_reg\")])\n "}, {"sha": "071c47d5988e6db2608742be65680d04350f7655", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca39a43acc83993fed8afb7704a769b59a170684/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca39a43acc83993fed8afb7704a769b59a170684/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ca39a43acc83993fed8afb7704a769b59a170684", "patch": "@@ -1,3 +1,8 @@\n+2015-01-14  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/64460\n+\t* gcc.target/arm/pr64460_1.c: New test.\n+\n 2015-01-14  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/64493"}, {"sha": "ee6ad4a214f326aa458881d10d7913500f703934", "filename": "gcc/testsuite/gcc.target/arm/pr64460_1.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca39a43acc83993fed8afb7704a769b59a170684/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr64460_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca39a43acc83993fed8afb7704a769b59a170684/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr64460_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr64460_1.c?ref=ca39a43acc83993fed8afb7704a769b59a170684", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mtune=xscale\" } */\n+\n+typedef unsigned int size_t;\n+typedef short unsigned int __uint16_t;\n+typedef long unsigned int __uint32_t;\n+typedef unsigned int __uintptr_t;\n+typedef __uint16_t uint16_t ;\n+typedef __uint32_t uint32_t ;\n+typedef __uintptr_t uintptr_t;\n+typedef uint32_t Objects_Id;\n+typedef uint16_t Objects_Maximum;\n+typedef struct { } Objects_Control;\n+\n+static __inline__ void *_Addresses_Align_up (void *address, size_t alignment)\n+{\n+\tuintptr_t mask = alignment - (uintptr_t)1;\n+\treturn (void*)(((uintptr_t)address + mask) & ~mask);\n+}\n+\n+typedef struct {\n+\tObjects_Id minimum_id;\n+\tObjects_Maximum maximum;\n+\t_Bool\n+\t\tauto_extend;\n+\tObjects_Maximum allocation_size;\n+\tvoid **object_blocks;\n+} Objects_Information;\n+\n+extern uint32_t _Objects_Get_index (Objects_Id);\n+extern void** _Workspace_Allocate (size_t);\n+\n+void _Objects_Extend_information (Objects_Information *information)\n+{\n+\tuint32_t block_count;\n+\tuint32_t minimum_index;\n+\tuint32_t maximum;\n+\tsize_t block_size;\n+\t_Bool\n+\t\tdo_extend =\n+\t\tminimum_index = _Objects_Get_index( information->minimum_id );\n+\tif ( information->object_blocks ==\n+\t\t\t((void *)0)\n+\t   )\n+\t\tblock_count = 0;\n+\telse {\n+\t\tblock_count = information->maximum / information->allocation_size;\n+\t}\n+\tif ( do_extend ) {\n+\t\tvoid **object_blocks;\n+\t\tuintptr_t object_blocks_size;\n+\t\tuintptr_t inactive_per_block_size;\n+\t\tobject_blocks_size = (uintptr_t)_Addresses_Align_up(\n+\t\t\t\t(void*)(block_count * sizeof(void*)),\n+\t\t\t\t8\n+\t\t\t\t);\n+\t\tinactive_per_block_size =\n+\t\t\t(uintptr_t)_Addresses_Align_up(\n+\t\t\t\t\t(void*)(block_count * sizeof(uint32_t)),\n+\t\t\t\t\t8\n+\t\t\t\t\t);\n+\t\tblock_size = object_blocks_size + inactive_per_block_size +\n+\t\t\t((maximum + minimum_index) * sizeof(Objects_Control *));\n+\t\tif ( information->auto_extend ) {\n+\t\t\tobject_blocks = _Workspace_Allocate( block_size );\n+\t\t} else {\n+\t\t}\n+\t}\n+}"}]}