{"sha": "b7cb92adc97bd0cde5263493567cff7d23ed65d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdjYjkyYWRjOTdiZDBjZGU1MjYzNDkzNTY3Y2ZmN2QyM2VkNjVkNw==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-04-14T08:32:34Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-04-14T08:32:34Z"}, "message": "* Idea and part of the patch from HJ.\n\n        * Makefile.in: auto-host.h renamed from auto-config.h.  All references\n        changed.\n        (distclean): Remove auto-build.h too.\n        * configure.in: Rename host autoconf generated file to auto-host.h.\n        If host != build, then run autoconf to generate auto-build.h for\n        the build machine and include it in build_xm_files.\n        Check for wait.h and sys/wait.h.\n\nFrom-SVN: r19205", "tree": {"sha": "1bd91d169d6d61a61b60647e064b8ca2cb33d3a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bd91d169d6d61a61b60647e064b8ca2cb33d3a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7cb92adc97bd0cde5263493567cff7d23ed65d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7cb92adc97bd0cde5263493567cff7d23ed65d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7cb92adc97bd0cde5263493567cff7d23ed65d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7cb92adc97bd0cde5263493567cff7d23ed65d7/comments", "author": null, "committer": null, "parents": [{"sha": "80608e279347300c822a048eb4b37b607f930b76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80608e279347300c822a048eb4b37b607f930b76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80608e279347300c822a048eb4b37b607f930b76"}], "stats": {"total": 120, "additions": 91, "deletions": 29}, "files": [{"sha": "9f27e91aaac679b44b727d6af5589d4289a97d0b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7cb92adc97bd0cde5263493567cff7d23ed65d7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7cb92adc97bd0cde5263493567cff7d23ed65d7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b7cb92adc97bd0cde5263493567cff7d23ed65d7", "patch": "@@ -1,5 +1,14 @@\n Tue Apr 14 09:02:32 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* Idea and part of the patch from HJ.\n+        * Makefile.in: auto-host.h renamed from auto-config.h.  All references\n+        changed.\n+        (distclean): Remove auto-build.h too.\n+        * configure.in: Rename host autoconf generated file to auto-host.h.\n+        If host != build, then run autoconf to generate auto-build.h for\n+        the build machine and include it in build_xm_files.\n+        Check for wait.h and sys/wait.h.\n+\n \t* combine.c (simplify_rtx, case TRUNCATE): Respect value of\n \tTRULY_NOOP_TRUNCATION.\n "}, {"sha": "e7590bc78f4f1e750e3a9259a154150e50eaa4f5", "filename": "gcc/Makefile.in", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7cb92adc97bd0cde5263493567cff7d23ed65d7/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7cb92adc97bd0cde5263493567cff7d23ed65d7/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=b7cb92adc97bd0cde5263493567cff7d23ed65d7", "patch": "@@ -728,9 +728,9 @@ $(srcdir)/config.in: $(srcdir)/cstamp-h.in\n $(srcdir)/cstamp-h.in: $(srcdir)/configure.in $(srcdir)/acconfig.h\n \tcd $(srcdir) && autoheader\n \techo timestamp > $(srcdir)/cstamp-h.in\n-auto-config.h: cstamp-h ; @true\n+auto-host.h: cstamp-h ; @true\n cstamp-h: config.in config.status\n-\tCONFIG_HEADERS=auto-config.h:config.in $(SHELL) config.status\n+\tCONFIG_HEADERS=auto-host.h:config.in $(SHELL) config.status\n \n # Really, really stupid make features, such as SUN's KEEP_STATE, may force\n # a target to build even if it is up-to-date.  So we must verify that\n@@ -757,7 +757,7 @@ start.encap: native xgcc$(exeext) specs $(LIBGCC1) xlimits.h lang.start.encap\n rest.encap: stmp-headers $(LIBGCC) $(STMP_FIXPROTO) $(EXTRA_PARTS) lang.rest.encap\n # This is what is made with the host's compiler\n # whether making a cross compiler or not.\n-native: config.status auto-config.h cpp$(exeext) $(LANGUAGES) \\\n+native: config.status auto-host.h cpp$(exeext) $(LANGUAGES) \\\n \t$(EXTRA_PASSES) $(EXTRA_PROGRAMS) $(USE_COLLECT2)\n \n # Define the names for selecting languages in LANGUAGES.\n@@ -2115,7 +2115,8 @@ clean: mostlyclean lang.clean\n # Delete all files that users would normally create\n # while building and installing GCC.\n distclean: clean lang.distclean\n-\t-rm -f tm.h config.h auto-config.h tconfig.h hconfig.h md cstamp-h\n+\t-rm -f tm.h config.h auto-host.h auto-build.h tconfig.h hconfig.h\n+\t-rm -f md cstamp-h\n \t-rm -f config.status config.run config.cache config.bak\n \t-rm -f Make-lang Make-hooks Make-host Make-target\n \t-rm -f Makefile specs.h options.h *.oaux"}, {"sha": "3ae066fc168791760195f4677d6eb798afc6a715", "filename": "gcc/configure", "status": "modified", "additions": 39, "deletions": 13, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7cb92adc97bd0cde5263493567cff7d23ed65d7/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7cb92adc97bd0cde5263493567cff7d23ed65d7/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=b7cb92adc97bd0cde5263493567cff7d23ed65d7", "patch": "@@ -1494,7 +1494,7 @@ EOF\n \n fi\n \n-for ac_hdr in limits.h stddef.h string.h strings.h stdlib.h time.h fcntl.h unistd.h sys/file.h sys/time.h sys/resource.h sys/param.h sys/times.h varargs.h sys/varargs.h\n+for ac_hdr in limits.h stddef.h string.h strings.h stdlib.h time.h fcntl.h unistd.h sys/file.h sys/time.h sys/resource.h sys/param.h sys/times.h varargs.h sys/varargs.h wait.h sys/wait.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n@@ -4637,17 +4637,39 @@ fi\n # Set up the header files.\n # $links is the list of header files to create.\n # $vars is the list of shell variables with file names to include.\n-# auto-conf.h is the file containing items generated by autoconf and is\n+# auto-host.h is the file containing items generated by autoconf and is\n # the first file included by config.h.\n null_defines=\n-host_xm_file=\"auto-config.h ${host_xm_file}\"\n+host_xm_file=\"auto-host.h ${host_xm_file}\"\n \n-# If host=build, it is correct to have hconfig include auto-conf.h\n+# If host=build, it is correct to have hconfig include auto-host.h\n # as well.  If host!=build, we are in error and need to do more \n # work to find out the build config parameters.\n if [ x$host = x$build ]\n then\n-\tbuild_xm_file=\"auto-config.h ${build_xm_file}\"\n+\tbuild_xm_file=\"auto-host.h ${build_xm_file}\"\n+else\n+\t# We create a subdir, then run autoconf in the subdir.\n+\t# To prevent recursion we set host and build for the new\n+\t# invocation of configure to the build for this invocation\n+\t# of configure. \n+\ttempdir=build.$$\n+\trm -rf $tempdir\n+\tmkdir $tempdir\n+\tcd $tempdir\n+\tcase ${srcdir} in\n+\t/*) realsrcdir=${srcdir};;\n+\t*) realsrcdir=../${srcdir};;\n+\tesac\n+\tCC=${BUILD_CC-cc} ${realsrcdir}/configure \\\n+\t\t--target=$target --host=$build --build=$build\n+\n+\t# We just finished tests for the build machine, so rename\n+\t# the file auto-build.h in the gcc directory.\n+\tmv auto-host.h ../auto-build.h\n+\tcd ..\n+\trm -rf $tempdir\n+\tbuild_xm_file=\"auto-build.h ${build_xm_file}\"\n fi\n \n vars=\"host_xm_file tm_file xm_file build_xm_file\"\n@@ -4754,19 +4776,23 @@ done\n \n host_xm_file_list=\n for f in $host_xm_file; do\n-\tif test $f != \"auto-config.h\"; then\n+\tif test $f != \"auto-host.h\"; then\n \t\thost_xm_file_list=\"${host_xm_file_list} \\$(srcdir)/config/$f\"\n \telse\n-\t\thost_xm_file_list=\"${host_xm_file_list} auto-config.h\"\n+\t\thost_xm_file_list=\"${host_xm_file_list} auto-host.h\"\n \tfi\n done\n \n build_xm_file_list=\n for f in $build_xm_file; do\n-\tif test $f != \"auto-config.h\"; then\n-\t\tbuild_xm_file_list=\"${build_xm_file_list} \\$(srcdir)/config/$f\"\n+\tif test $f != \"auto-build.h\"; then\n+\t\tif test $f != \"auto-host.h\"; then\n+\t\t\tbuild_xm_file_list=\"${build_xm_file_list} \\$(srcdir)/config/$f\"\n+\t\telse\n+\t\t\tbuild_xm_file_list=\"${build_xm_file_list} auto-host.h\"\n+\t\tfi\n \telse\n-\t\tbuild_xm_file_list=\"${build_xm_file_list} auto-config.h\"\n+\t\tbuild_xm_file_list=\"${build_xm_file_list} auto-build.h\"\n \tfi\n done\n \n@@ -5207,7 +5233,7 @@ done\n \n ac_given_srcdir=$srcdir\n \n-trap 'rm -fr `echo \"$all_outputs auto-config.h:config.in\" | sed \"s/:[^ ]*//g\"` conftest*; exit 1' 1 2 15\n+trap 'rm -fr `echo \"$all_outputs auto-host.h:config.in\" | sed \"s/:[^ ]*//g\"` conftest*; exit 1' 1 2 15\n EOF\n cat >> $CONFIG_STATUS <<EOF\n \n@@ -5444,7 +5470,7 @@ ac_eD='%g'\n if test \"${CONFIG_HEADERS+set}\" != set; then\n EOF\n cat >> $CONFIG_STATUS <<EOF\n-  CONFIG_HEADERS=\"auto-config.h:config.in\"\n+  CONFIG_HEADERS=\"auto-host.h:config.in\"\n EOF\n cat >> $CONFIG_STATUS <<\\EOF\n fi\n@@ -5567,7 +5593,7 @@ cat >> $CONFIG_STATUS <<\\EOF\n \n . $srcdir/configure.lang\n case x$CONFIG_HEADERS in\n-xauto-config.h:config.in)\n+xauto-host.h:config.in)\n echo > cstamp-h ;;\n esac\n # If the host supports symlinks, point stage[1234] at ../stage[1234] so"}, {"sha": "3930a1e9b33ae962633732ac75455b177ba87d0c", "filename": "gcc/configure.in", "status": "modified", "additions": 38, "deletions": 12, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7cb92adc97bd0cde5263493567cff7d23ed65d7/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7cb92adc97bd0cde5263493567cff7d23ed65d7/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=b7cb92adc97bd0cde5263493567cff7d23ed65d7", "patch": "@@ -22,7 +22,7 @@\n \n # Initialization and defaults\n AC_INIT(tree.c)\n-AC_CONFIG_HEADER(auto-config.h:config.in)\n+AC_CONFIG_HEADER(auto-host.h:config.in)\n \n remove=rm\n hard_link=ln\n@@ -148,7 +148,7 @@ EGCS_PROG_INSTALL\n \n AC_HEADER_STDC\n AC_HEADER_TIME\n-AC_CHECK_HEADERS(limits.h stddef.h string.h strings.h stdlib.h time.h fcntl.h unistd.h sys/file.h sys/time.h sys/resource.h sys/param.h sys/times.h varargs.h sys/varargs.h)\n+AC_CHECK_HEADERS(limits.h stddef.h string.h strings.h stdlib.h time.h fcntl.h unistd.h sys/file.h sys/time.h sys/resource.h sys/param.h sys/times.h varargs.h sys/varargs.h wait.h sys/wait.h)\n \n # Check for thread headers.\n AC_CHECK_HEADER(thread.h, [have_thread_h=yes], [have_thread_h=])\n@@ -2948,17 +2948,39 @@ fi\n # Set up the header files.\n # $links is the list of header files to create.\n # $vars is the list of shell variables with file names to include.\n-# auto-conf.h is the file containing items generated by autoconf and is\n+# auto-host.h is the file containing items generated by autoconf and is\n # the first file included by config.h.\n null_defines=\n-host_xm_file=\"auto-config.h ${host_xm_file}\"\n+host_xm_file=\"auto-host.h ${host_xm_file}\"\n \n-# If host=build, it is correct to have hconfig include auto-conf.h\n+# If host=build, it is correct to have hconfig include auto-host.h\n # as well.  If host!=build, we are in error and need to do more \n # work to find out the build config parameters.\n if [[ x$host = x$build ]]\n then\n-\tbuild_xm_file=\"auto-config.h ${build_xm_file}\"\n+\tbuild_xm_file=\"auto-host.h ${build_xm_file}\"\n+else\n+\t# We create a subdir, then run autoconf in the subdir.\n+\t# To prevent recursion we set host and build for the new\n+\t# invocation of configure to the build for this invocation\n+\t# of configure. \n+\ttempdir=build.$$\n+\trm -rf $tempdir\n+\tmkdir $tempdir\n+\tcd $tempdir\n+\tcase ${srcdir} in\n+\t/*) realsrcdir=${srcdir};;\n+\t*) realsrcdir=../${srcdir};;\n+\tesac\n+\tCC=${BUILD_CC-cc} ${realsrcdir}/configure \\\n+\t\t--target=$target --host=$build --build=$build\n+\n+\t# We just finished tests for the build machine, so rename\n+\t# the file auto-build.h in the gcc directory.\n+\tmv auto-host.h ../auto-build.h\n+\tcd ..\n+\trm -rf $tempdir\n+\tbuild_xm_file=\"auto-build.h ${build_xm_file}\"\n fi\n \n vars=\"host_xm_file tm_file xm_file build_xm_file\"\n@@ -3065,19 +3087,23 @@ done\n \n host_xm_file_list=\n for f in $host_xm_file; do\n-\tif test $f != \"auto-config.h\"; then\n+\tif test $f != \"auto-host.h\"; then\n \t\thost_xm_file_list=\"${host_xm_file_list} \\$(srcdir)/config/$f\"\n \telse\n-\t\thost_xm_file_list=\"${host_xm_file_list} auto-config.h\"\n+\t\thost_xm_file_list=\"${host_xm_file_list} auto-host.h\"\n \tfi\n done\n \n build_xm_file_list=\n for f in $build_xm_file; do\n-\tif test $f != \"auto-config.h\"; then\n-\t\tbuild_xm_file_list=\"${build_xm_file_list} \\$(srcdir)/config/$f\"\n+\tif test $f != \"auto-build.h\"; then\n+\t\tif test $f != \"auto-host.h\"; then\n+\t\t\tbuild_xm_file_list=\"${build_xm_file_list} \\$(srcdir)/config/$f\"\n+\t\telse\n+\t\t\tbuild_xm_file_list=\"${build_xm_file_list} auto-host.h\"\n+\t\tfi\n \telse\n-\t\tbuild_xm_file_list=\"${build_xm_file_list} auto-config.h\"\n+\t\tbuild_xm_file_list=\"${build_xm_file_list} auto-build.h\"\n \tfi\n done\n \n@@ -3422,7 +3448,7 @@ AC_OUTPUT($all_outputs,\n [\n . $srcdir/configure.lang\n case x$CONFIG_HEADERS in\n-xauto-config.h:config.in)\n+xauto-host.h:config.in)\n echo > cstamp-h ;;\n esac\n # If the host supports symlinks, point stage[1234] at ../stage[1234] so"}]}