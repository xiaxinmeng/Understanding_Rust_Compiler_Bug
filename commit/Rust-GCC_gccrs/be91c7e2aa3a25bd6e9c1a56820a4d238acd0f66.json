{"sha": "be91c7e2aa3a25bd6e9c1a56820a4d238acd0f66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU5MWM3ZTJhYTNhMjViZDZlOWMxYTU2ODIwYTRkMjM4YWNkMGY2Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-08T08:46:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-08T08:46:01Z"}, "message": "[multiple changes]\n\n2017-09-08  Ed Schonberg  <schonberg@adacore.com>\n\n        * sem_ch12.adb (Check_Generic_Parent): New procedure within\n        Analyze_Associations, to handle actual packages that depend on\n        previous instances.  If a package IAP that is an instantiation is\n        used as an actual in a subsequent instantiation SI in the same\n        scope, and IAP has a body, IAP must be frozen before SI. If\n        the generic parent of IAP is itself declared in a previous\n        instantiation in the same scope, that instantiation must also\n        be frozen before SI.\n        (Install_Body): Prevent double insertion of freeze node for\n        instance.\n\n2017-09-08  Hristian Kirtchev  <kirtchev@adacore.com>\n\n        * sem_prag.adb (Resolve_State): Update the\n        comment on documentation. Generate a reference to the state once\n        resolution takes place.\n\n2017-09-08  Ed Schonberg  <schonberg@adacore.com>\n\n        * sem_ch13.adb (Analyze_Aspect_Specifications, case\n        Linker_Section): If the aspect applies to an object declaration\n        with explicit initialization, do not delay the freezing of the\n        object, to prevent access-before-elaboration in the generated\n        initialization code.\n\n2017-09-08  Ed Schonberg  <schonberg@adacore.com>\n\n        * a-wtdeio.adb (Put, all versions): Use Long_Long_Integer\n        (Integer_Value (Item)) when the size of the fixed decimal type\n        is larger than Integer.\n\nFrom-SVN: r251865", "tree": {"sha": "d77894cb30bfee74e96186a0a6902c69b9788a5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d77894cb30bfee74e96186a0a6902c69b9788a5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be91c7e2aa3a25bd6e9c1a56820a4d238acd0f66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be91c7e2aa3a25bd6e9c1a56820a4d238acd0f66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be91c7e2aa3a25bd6e9c1a56820a4d238acd0f66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be91c7e2aa3a25bd6e9c1a56820a4d238acd0f66/comments", "author": null, "committer": null, "parents": [{"sha": "8b735094320efbfa8e1bf9dd17ac823d16341b8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b735094320efbfa8e1bf9dd17ac823d16341b8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b735094320efbfa8e1bf9dd17ac823d16341b8f"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "98850e94396bcdf00b79cd58acce9accd67b60ae", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be91c7e2aa3a25bd6e9c1a56820a4d238acd0f66/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be91c7e2aa3a25bd6e9c1a56820a4d238acd0f66/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=be91c7e2aa3a25bd6e9c1a56820a4d238acd0f66", "patch": "@@ -1,3 +1,36 @@\n+2017-09-08  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Check_Generic_Parent): New procedure within\n+\tAnalyze_Associations, to handle actual packages that depend on\n+\tprevious instances.  If a package IAP that is an instantiation is\n+\tused as an actual in a subsequent instantiation SI in the same\n+\tscope, and IAP has a body, IAP must be frozen before SI. If\n+\tthe generic parent of IAP is itself declared in a previous\n+\tinstantiation in the same scope, that instantiation must also\n+\tbe frozen before SI.\n+\t(Install_Body): Prevent double insertion of freeze node for\n+\tinstance.\n+\n+2017-09-08  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_prag.adb (Resolve_State): Update the\n+\tcomment on documentation. Generate a reference to the state once\n+\tresolution takes place.\n+\n+2017-09-08  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications, case\n+\tLinker_Section): If the aspect applies to an object declaration\n+\twith explicit initialization, do not delay the freezing of the\n+\tobject, to prevent access-before-elaboration in the generated\n+\tinitialization code.\n+\n+2017-09-08  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* a-wtdeio.adb (Put, all versions): Use Long_Long_Integer\n+\t(Integer_Value (Item)) when the size of the fixed decimal type\n+\tis larger than Integer.\n+\n 2017-09-07  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ada/82127"}]}