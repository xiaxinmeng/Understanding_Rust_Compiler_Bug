{"sha": "1e97aa4083fc908cc500a1f53340dfa7b80a68f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU5N2FhNDA4M2ZjOTA4Y2M1MDBhMWY1MzM0MGRmYTdiODBhNjhmMw==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@redhat.com", "date": "2001-02-09T20:29:08Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2001-02-09T20:29:08Z"}, "message": "mangle_name.c (append_unicode_mangled_name): Emit `_' or `U' outside of the `__U' sequence too.\n\n2001-02-09  Alexandre Petit-Bianco  <apbianco@redhat.com>\n\n\t* mangle_name.c (append_unicode_mangled_name): Emit `_' or `U'\n\toutside of the `__U' sequence too.\n\t(unicode_mangling_length): Count `_' or `U' outside of the `__U'\n\tsequence too.\n\n(http://gcc.gnu.org/ml/gcc-patches/2001-02/msg00532.html)\n\nFrom-SVN: r39570", "tree": {"sha": "5d1b21d1dd34dce39026d3ef17ffe2377fed19cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d1b21d1dd34dce39026d3ef17ffe2377fed19cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e97aa4083fc908cc500a1f53340dfa7b80a68f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e97aa4083fc908cc500a1f53340dfa7b80a68f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e97aa4083fc908cc500a1f53340dfa7b80a68f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e97aa4083fc908cc500a1f53340dfa7b80a68f3/comments", "author": null, "committer": null, "parents": [{"sha": "ce675456284e5878b4cf8980b15114fca7b5a49a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce675456284e5878b4cf8980b15114fca7b5a49a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce675456284e5878b4cf8980b15114fca7b5a49a"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "8070ba7153c632aa3a41e736d7c1df5fd683297e", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e97aa4083fc908cc500a1f53340dfa7b80a68f3/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e97aa4083fc908cc500a1f53340dfa7b80a68f3/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=1e97aa4083fc908cc500a1f53340dfa7b80a68f3", "patch": "@@ -1,3 +1,10 @@\n+2001-02-09  Alexandre Petit-Bianco  <apbianco@redhat.com>\n+\n+\t* mangle_name (append_unicode_mangled_name): Emit `_' or `U'\n+\toutside of the `__U' sequence too.\n+\t(unicode_mangling_length): Count `_' or `U' outside of the `__U'\n+\tsequence too.\n+\n 2001-02-09  Alexandre Petit-Bianco  <apbianco@redhat.com>\n \n \t* jvgenmain.c (error): Reversed 2001-02-01 deletion."}, {"sha": "101dee7c7c2b67dc332132d48f21950c760eaddf", "filename": "gcc/java/mangle_name.c", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e97aa4083fc908cc500a1f53340dfa7b80a68f3/gcc%2Fjava%2Fmangle_name.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e97aa4083fc908cc500a1f53340dfa7b80a68f3/gcc%2Fjava%2Fmangle_name.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fmangle_name.c?ref=1e97aa4083fc908cc500a1f53340dfa7b80a68f3", "patch": "@@ -113,6 +113,13 @@ append_unicode_mangled_name (name, len)\n \t\t  uuU = 0;\n \t\t  obstack_grow (mangle_obstack, \"U_\", 2);\n \t\t}\n+\t      /* Otherwise, just reset uuU and emit the character we\n+                 have. */\n+\t      else\n+\t\t{\n+\t\t  uuU = 0;\n+\t\t  obstack_1grow (mangle_obstack, ch);\n+\t\t}\n \t      continue;\n \t    }\n \t  sprintf (buf, \"__U%x_\", ch);\n@@ -156,19 +163,25 @@ unicode_mangling_length (name, len)\n \n \t  if (ch == '_' || ch == 'U')\n \t    {\n+\t      /* It's always at least one character. */\n+\t      num_chars++;\n+\n \t      /* Prepare to recognize __U */\n \t      if (ch == '_' && (uuU < 3))\n-\t\t{\n-\t\t  num_chars++;\n-\t\t  uuU++;\n-\t\t}\n-\t      /* We recognize __U that we wish to encode __U_ */\n+\t\tuuU++;\n+\n+\t      /* We recognize __U that we wish to encode __U_, we\n+\t         count one more character. */\n \t      else if (ch == 'U' && (uuU == 2))\n \t\t{\n-\t\t  num_chars += 2;\n+\t\t  num_chars++;\n \t\t  need_escapes = 1;\n \t\t  uuU = 0;\n \t\t}\n+\t      /* Otherwise, just reset uuU */\n+\t      else\n+\t\tuuU = 0;\n+\n \t      continue;\n \t    }\n \t  "}]}