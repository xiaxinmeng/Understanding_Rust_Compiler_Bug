{"sha": "64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRiNWZjZmEzYmM2YWMxZDVmMGJhYjlkNWRlM2E4Y2QyMjU5ZDcwZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-06-17T18:01:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-06-17T18:01:05Z"}, "message": "re PR c++/66571 (Template substitution causes some OpenMP rejects-valid)\n\n\tPR c++/66571\n\t* pt.c (tsubst_omp_clause_decl): New function.\n\t(tsubst_omp_clauses): Use it or tsubst_copy instead of\n\ttsubst_expr on OMP_CLAUSE_DECL.\n\n\t* g++.dg/gomp/pr66571-1.C: New test.\n\nFrom-SVN: r224569", "tree": {"sha": "92044082e42a4af15c4b09548ef58e9de84438d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92044082e42a4af15c4b09548ef58e9de84438d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c8b9f3265820507a1a9472fee7384b265692380", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c8b9f3265820507a1a9472fee7384b265692380", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c8b9f3265820507a1a9472fee7384b265692380"}], "stats": {"total": 100, "additions": 87, "deletions": 13}, "files": [{"sha": "010442fadfd2bf17238dd935b1e53375835c0782", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e", "patch": "@@ -1,3 +1,8 @@\n+2015-06-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/66571\n+\t* g++.dg/gomp/pr66571-1.C: New test.\n+\n 2015-06-17  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* cp-lang.c (cxx_dwarf_name): Use anon_aggrname_p.\n@@ -7,7 +12,6 @@\n \t* pt.c (push_template_decl_real): Likewise.\n \t* name-lookup.c (make_anon_name): Use anon_aggrname_format.\n \n-\n 2015-06-17  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* call.c: Do not include input.h, line-map.h or is-a.h."}, {"sha": "ccce90dba954fa6993219115a607d7c211de51d6", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 42, "deletions": 12, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e", "patch": "@@ -13489,6 +13489,32 @@ tsubst_copy (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n     }\n }\n \n+/* Helper function for tsubst_omp_clauses, used for instantiation of\n+   OMP_CLAUSE_DECL of clauses that handles also OpenMP array sections\n+   represented with TREE_LIST.  */\n+\n+static tree\n+tsubst_omp_clause_decl (tree decl, tree args, tsubst_flags_t complain,\n+\t\t\ttree in_decl)\n+{\n+  if (TREE_CODE (decl) == TREE_LIST)\n+    {\n+      tree low_bound\n+\t= tsubst_expr (TREE_PURPOSE (decl), args, complain, in_decl,\n+\t\t       /*integral_constant_expression_p=*/false);\n+      tree length = tsubst_expr (TREE_VALUE (decl), args, complain, in_decl,\n+\t\t\t\t /*integral_constant_expression_p=*/false);\n+      tree chain = tsubst_omp_clause_decl (TREE_CHAIN (decl), args, complain,\n+\t\t\t\t\t   in_decl);\n+      if (TREE_PURPOSE (decl) == low_bound\n+\t  && TREE_VALUE (decl) == length\n+\t  && TREE_CHAIN (decl) == chain)\n+\treturn decl;\n+      return tree_cons (low_bound, length, chain);\n+    }\n+  return tsubst_copy (decl, args, complain, in_decl);\n+}\n+\n /* Like tsubst_copy, but specifically for OpenMP clauses.  */\n \n static tree\n@@ -13520,16 +13546,23 @@ tsubst_omp_clauses (tree clauses, bool declare_simd,\n \tcase OMP_CLAUSE_FIRSTPRIVATE:\n \tcase OMP_CLAUSE_COPYIN:\n \tcase OMP_CLAUSE_COPYPRIVATE:\n+\tcase OMP_CLAUSE_UNIFORM:\n+\t  OMP_CLAUSE_DECL (nc) = tsubst_copy (OMP_CLAUSE_DECL (oc), args,\n+\t\t\t\t\t      complain, in_decl);\n+\t  break;\n+\tcase OMP_CLAUSE_DEPEND:\n+\tcase OMP_CLAUSE_FROM:\n+\tcase OMP_CLAUSE_TO:\n+\tcase OMP_CLAUSE_MAP:\n+\t  OMP_CLAUSE_DECL (nc)\n+\t    = tsubst_omp_clause_decl (OMP_CLAUSE_DECL (oc), args, complain,\n+\t\t\t\t      in_decl);\n+\t  break;\n \tcase OMP_CLAUSE_IF:\n \tcase OMP_CLAUSE_NUM_THREADS:\n \tcase OMP_CLAUSE_SCHEDULE:\n \tcase OMP_CLAUSE_COLLAPSE:\n \tcase OMP_CLAUSE_FINAL:\n-\tcase OMP_CLAUSE_DEPEND:\n-\tcase OMP_CLAUSE_FROM:\n-\tcase OMP_CLAUSE_TO:\n-\tcase OMP_CLAUSE_UNIFORM:\n-\tcase OMP_CLAUSE_MAP:\n \tcase OMP_CLAUSE_DEVICE:\n \tcase OMP_CLAUSE_DIST_SCHEDULE:\n \tcase OMP_CLAUSE_NUM_TEAMS:\n@@ -13556,20 +13589,17 @@ tsubst_omp_clauses (tree clauses, bool declare_simd,\n \t      else\n \t\tgcc_assert (identifier_p (placeholder));\n \t    }\n-\t  OMP_CLAUSE_OPERAND (nc, 0)\n-\t    = tsubst_expr (OMP_CLAUSE_OPERAND (oc, 0), args, complain,\n-\t\t\t   in_decl, /*integral_constant_expression_p=*/false);\n+\t  OMP_CLAUSE_DECL (nc) = tsubst_copy (OMP_CLAUSE_DECL (oc), args,\n+\t\t\t\t\t      complain, in_decl);\n \t  break;\n \tcase OMP_CLAUSE_LINEAR:\n \tcase OMP_CLAUSE_ALIGNED:\n-\t  OMP_CLAUSE_OPERAND (nc, 0)\n-\t    = tsubst_expr (OMP_CLAUSE_OPERAND (oc, 0), args, complain,\n-\t\t\t   in_decl, /*integral_constant_expression_p=*/false);\n+\t  OMP_CLAUSE_DECL (nc) = tsubst_copy (OMP_CLAUSE_DECL (oc), args,\n+\t\t\t\t\t      complain, in_decl);\n \t  OMP_CLAUSE_OPERAND (nc, 1)\n \t    = tsubst_expr (OMP_CLAUSE_OPERAND (oc, 1), args, complain,\n \t\t\t   in_decl, /*integral_constant_expression_p=*/false);\n \t  break;\n-\n \tcase OMP_CLAUSE_NOWAIT:\n \tcase OMP_CLAUSE_ORDERED:\n \tcase OMP_CLAUSE_DEFAULT:"}, {"sha": "7d774cb7e82ab8dbcf1834356aec011b55b1f823", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e", "patch": "@@ -1,5 +1,8 @@\n 2015-06-17  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/66571\n+\t* g++.dg/gomp/pr66571-1.C: New test.\n+\n \tPR middle-end/66429\n \t* c-c++-common/gomp/pr66429.c: New test.\n "}, {"sha": "9fa9ab6f0eccc15e9520db749a187b8e6fe19bd9", "filename": "gcc/testsuite/g++.dg/gomp/pr66571-1.C", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr66571-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr66571-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr66571-1.C?ref=64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e", "patch": "@@ -0,0 +1,37 @@\n+// PR c++/66571\n+// { dg-do compile }\n+// { dg-options \"-fopenmp\" }\n+\n+template <typename T, typename U>\n+extern void bar (T, T, U);\n+\n+template <typename T, typename U>\n+void\n+foo (T a, T b, U c)\n+{\n+  #pragma omp parallel for simd shared (a, c) reduction (+:b)\n+  for (int i = 0; i < 10; i++)\n+    bar<T> (a, b, c);\n+  #pragma omp target map(tofrom:a, c[0:5])\n+    ;\n+  #pragma omp task depend(inout:c[4:2])\n+    ;\n+  T d = a;\n+  T e = b;\n+  U f = c;\n+  #pragma omp parallel for simd shared (d, f) reduction (+:e)\n+  for (int i = 0; i < 10; i++)\n+    bar<T> (d, e, f);\n+  #pragma omp target map(tofrom:d, f[0:5])\n+    ;\n+  #pragma omp task depend(inout:f[4:2])\n+    ;\n+}\n+\n+void\n+baz ()\n+{\n+  int a = 0, b = 0, cb[10] = {}, *c = cb;\n+  foo <int, int *> (a, b, c);\n+  foo <int &, int *&> (a, b, c);\n+}"}]}