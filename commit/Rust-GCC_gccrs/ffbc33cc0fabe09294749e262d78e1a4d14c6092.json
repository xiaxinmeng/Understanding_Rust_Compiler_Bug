{"sha": "ffbc33cc0fabe09294749e262d78e1a4d14c6092", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZiYzMzY2MwZmFiZTA5Mjk0NzQ5ZTI2MmQ3OGUxYTRkMTRjNjA5Mg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2005-11-21T07:49:47Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2005-11-21T07:49:47Z"}, "message": "fold-const.c (fold_binary): Optimize A / A to 1.0 if we don't care about NaNs or Infinities.\n\n        * fold-const.c (fold_binary) <RDIV_EXPR>: Optimize A / A to 1.0 \n        if we don't care about NaNs or Infinities.\n\ntestsuite:\n\n        * gcc.dg/fold-div-2.c: New test.\n\nFrom-SVN: r107282", "tree": {"sha": "1d2eeb3b6160ee6b9edecc9b94a1b55db1c94ced", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d2eeb3b6160ee6b9edecc9b94a1b55db1c94ced"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffbc33cc0fabe09294749e262d78e1a4d14c6092", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffbc33cc0fabe09294749e262d78e1a4d14c6092", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffbc33cc0fabe09294749e262d78e1a4d14c6092", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffbc33cc0fabe09294749e262d78e1a4d14c6092/comments", "author": null, "committer": null, "parents": [{"sha": "083a9e91be655a491f27a22aac997006af2eb912", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/083a9e91be655a491f27a22aac997006af2eb912", "html_url": "https://github.com/Rust-GCC/gccrs/commit/083a9e91be655a491f27a22aac997006af2eb912"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "b4ff1f894458c198c652d880941edad39f77212c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffbc33cc0fabe09294749e262d78e1a4d14c6092/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffbc33cc0fabe09294749e262d78e1a4d14c6092/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ffbc33cc0fabe09294749e262d78e1a4d14c6092", "patch": "@@ -1,3 +1,8 @@\n+2005-11-21  Uros Bizjak  <uros@kss-loka.si>\n+\n+\t* fold-const.c (fold_binary) <RDIV_EXPR>: Optimize A / A to 1.0 \n+\tif we don't care about NaNs or Infinities.\n+\n 2005-11-20  Ian Lance Taylor  <ian@airs.com>\n \n \tPR rtl-optimization/24883"}, {"sha": "e7f550b2038ae43d815f7ab9d3dacbb0d84fd2fa", "filename": "gcc/fold-const.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffbc33cc0fabe09294749e262d78e1a4d14c6092/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffbc33cc0fabe09294749e262d78e1a4d14c6092/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=ffbc33cc0fabe09294749e262d78e1a4d14c6092", "patch": "@@ -8227,6 +8227,17 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t  && real_zerop (arg1))\n \treturn NULL_TREE;\n \n+      /* Optimize A / A to 1.0 if we don't care about\n+\t NaNs or Infinities.  */\n+      if (! HONOR_NANS (TYPE_MODE (TREE_TYPE (arg0)))\n+\t  && ! HONOR_INFINITIES (TYPE_MODE (TREE_TYPE (arg0)))\n+\t  && operand_equal_p (arg0, arg1, 0))\n+\t{\n+\t  tree r = build_real (TREE_TYPE (arg0), dconst1);\n+\n+\t  return omit_two_operands (type, r, arg0, arg1);\n+\t}\n+\n       /* (-A) / (-B) -> A / B  */\n       if (TREE_CODE (arg0) == NEGATE_EXPR && negate_expr_p (arg1))\n \treturn fold_build2 (RDIV_EXPR, type,"}, {"sha": "045cf0a6e1a0487abce066b5d3550f936ab487a2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffbc33cc0fabe09294749e262d78e1a4d14c6092/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffbc33cc0fabe09294749e262d78e1a4d14c6092/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ffbc33cc0fabe09294749e262d78e1a4d14c6092", "patch": "@@ -1,3 +1,7 @@\n+2005-11-21  Uros Bizjak  <uros@kss-loka.si>\n+\n+\t* gcc.dg/fold-div-2.c: New test.\n+\t\n 2005-11-20  Ian Lance Taylor  <ian@airs.com>\n \n \tPR rtl-optimization/24883"}, {"sha": "bfd07d1c482d36c07b8bce8ccc69377e670600ef", "filename": "gcc/testsuite/gcc.dg/fold-div-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffbc33cc0fabe09294749e262d78e1a4d14c6092/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-div-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffbc33cc0fabe09294749e262d78e1a4d14c6092/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-div-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-div-2.c?ref=ffbc33cc0fabe09294749e262d78e1a4d14c6092", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-ffinite-math-only -fdump-tree-gimple\" } */\n+\n+double f(double x)\n+{\n+  return x / x;\n+}\n+\n+/* Division should be turned into 1.0.  */\n+\n+/* { dg-final { scan-tree-dump-not \" / \" \"gimple\" } } */\n+/* { dg-final { cleanup-tree-dump \"gimple\" } } */\n+"}]}