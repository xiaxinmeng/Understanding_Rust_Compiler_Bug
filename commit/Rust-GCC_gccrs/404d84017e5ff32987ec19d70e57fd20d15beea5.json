{"sha": "404d84017e5ff32987ec19d70e57fd20d15beea5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA0ZDg0MDE3ZTVmZjMyOTg3ZWMxOWQ3MGU1N2ZkMjBkMTViZWVhNQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2006-10-04T04:48:35Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2006-10-04T04:48:35Z"}, "message": "re PR fortran/29098 (allocation of a pointer to a derived type crashes)\n\n2006-10-04  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/29098\n\t* resolve.c (resolve_structure_cons): Do not return FAILURE if\n\tcomponent expression is NULL.\n\n2006-10-04  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/29098\n\t* gfortran.dg/default_initialization_2.f90: New test.\n\nFrom-SVN: r117424", "tree": {"sha": "e9a1fd6e762da7974311f4c34cb790b81b47d6c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9a1fd6e762da7974311f4c34cb790b81b47d6c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/404d84017e5ff32987ec19d70e57fd20d15beea5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/404d84017e5ff32987ec19d70e57fd20d15beea5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/404d84017e5ff32987ec19d70e57fd20d15beea5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/404d84017e5ff32987ec19d70e57fd20d15beea5/comments", "author": null, "committer": null, "parents": [{"sha": "ee1d3dc013ba01f325df8029b4ba23c2e1229df0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee1d3dc013ba01f325df8029b4ba23c2e1229df0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee1d3dc013ba01f325df8029b4ba23c2e1229df0"}], "stats": {"total": 52, "additions": 48, "deletions": 4}, "files": [{"sha": "548a3d9cf981098cb0e2816632fca05828abb4e5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/404d84017e5ff32987ec19d70e57fd20d15beea5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/404d84017e5ff32987ec19d70e57fd20d15beea5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=404d84017e5ff32987ec19d70e57fd20d15beea5", "patch": "@@ -1,3 +1,9 @@\n+2006-10-04  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/29098\n+\t* resolve.c (resolve_structure_cons): Do not return FAILURE if\n+\tcomponent expression is NULL.\n+\n 2006-10-03  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/20779"}, {"sha": "e28a93cbcdfe9083fab5842d522d64e03be54028", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/404d84017e5ff32987ec19d70e57fd20d15beea5/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/404d84017e5ff32987ec19d70e57fd20d15beea5/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=404d84017e5ff32987ec19d70e57fd20d15beea5", "patch": "@@ -607,10 +607,7 @@ resolve_structure_cons (gfc_expr * expr)\n   for (; comp; comp = comp->next, cons = cons->next)\n     {\n       if (! cons->expr)\n-\t{\n-\t  t = FAILURE;\n-\t  continue;\n-\t}\n+\tcontinue;\n \n       if (gfc_resolve_expr (cons->expr) == FAILURE)\n \t{"}, {"sha": "7cc0dd29aa7cfd3120ca4d1b7da4ecfedd21c0a7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/404d84017e5ff32987ec19d70e57fd20d15beea5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/404d84017e5ff32987ec19d70e57fd20d15beea5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=404d84017e5ff32987ec19d70e57fd20d15beea5", "patch": "@@ -1,3 +1,8 @@\n+2006-10-04  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/29098\n+\t* gfortran.dg/default_initialization_2.f90: New test.\n+\n 2006-10-03  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/20779"}, {"sha": "cc7ecdc4061d6e09bcaaeb0ddde32387a901486a", "filename": "gcc/testsuite/gfortran.dg/default_initialization_2.f90", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/404d84017e5ff32987ec19d70e57fd20d15beea5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_initialization_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/404d84017e5ff32987ec19d70e57fd20d15beea5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_initialization_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_initialization_2.f90?ref=404d84017e5ff32987ec19d70e57fd20d15beea5", "patch": "@@ -0,0 +1,36 @@\n+! { dg-do compile }\n+! This tests the patch for PR29098, in which the presence of the default\n+! initializer would cause allocate to fail because the latter uses\n+! the interface assignment.  This, in its turn was failing because\n+! no expressions were found for the other components; and a FAILURE\n+! was returned from resolve_structure_cons.\n+!\n+! Contributed by Olav Vahtras  <vahtras@pdc.kth.se>\n+!\n+ MODULE MAT\n+   TYPE BAS\n+      INTEGER :: R = 0,C = 0\n+   END TYPE BAS\n+   TYPE BLOCK\n+      INTEGER, DIMENSION(:), POINTER ::  R,C\n+      TYPE(BAS), POINTER, DIMENSION(:) :: NO => NULL()\n+   END TYPE BLOCK\n+   INTERFACE ASSIGNMENT(=)\n+      MODULE PROCEDURE BLASSIGN\n+   END INTERFACE\n+   CONTAINS\n+      SUBROUTINE BLASSIGN(A,B)\n+      TYPE(BLOCK), INTENT(IN) :: B\n+      TYPE(BLOCK), INTENT(INOUT) :: A\n+      INTEGER I,N\n+      ! ...\n+      END SUBROUTINE BLASSIGN\n+ END MODULE MAT\n+PROGRAM TEST\n+USE MAT\n+TYPE(BLOCK) MATRIX\n+POINTER MATRIX\n+ALLOCATE(MATRIX)\n+END\n+\n+! { dg-final { cleanup-modules \"mat\" } }"}]}