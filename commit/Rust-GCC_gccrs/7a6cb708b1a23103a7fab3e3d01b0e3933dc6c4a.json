{"sha": "7a6cb708b1a23103a7fab3e3d01b0e3933dc6c4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E2Y2I3MDhiMWEyMzEwM2E3ZmFiM2UzZDAxYjBlMzkzM2RjNmM0YQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-02-17T19:27:27Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-02-17T19:27:27Z"}, "message": "compiler: Check for initialization loop in constant initializer.\n\nFrom-SVN: r184347", "tree": {"sha": "b57a8d903111548a327f95b0ba0b3272352346d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b57a8d903111548a327f95b0ba0b3272352346d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a6cb708b1a23103a7fab3e3d01b0e3933dc6c4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a6cb708b1a23103a7fab3e3d01b0e3933dc6c4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a6cb708b1a23103a7fab3e3d01b0e3933dc6c4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a6cb708b1a23103a7fab3e3d01b0e3933dc6c4a/comments", "author": null, "committer": null, "parents": [{"sha": "061793a4cc6d5e50c8a56a3247e6f8757741cc9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/061793a4cc6d5e50c8a56a3247e6f8757741cc9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/061793a4cc6d5e50c8a56a3247e6f8757741cc9a"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "603b97ec0c1e89a7fa2f3602cefd191852d4c9a9", "filename": "gcc/go/gofrontend/gogo-tree.cc", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a6cb708b1a23103a7fab3e3d01b0e3933dc6c4a/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a6cb708b1a23103a7fab3e3d01b0e3933dc6c4a/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc?ref=7a6cb708b1a23103a7fab3e3d01b0e3933dc6c4a", "patch": "@@ -834,8 +834,15 @@ Gogo::write_globals()\n \t      else if (init == NULL_TREE)\n \t\t;\n \t      else if (TREE_CONSTANT(init))\n-\t\tthis->backend()->global_variable_set_init(var,\n-\t\t\t\t\t\t\t  tree_to_expr(init));\n+\t\t{\n+\t\t  if (expression_requires(no->var_value()->init(), NULL, no))\n+\t\t    error_at(no->location(),\n+\t\t\t     \"initialization expression for %qs depends \"\n+\t\t\t     \"upon itself\",\n+\t\t\t     no->message_name().c_str());\n+\t\t  this->backend()->global_variable_set_init(var,\n+\t\t\t\t\t\t\t    tree_to_expr(init));\n+\t\t}\n \t      else if (is_sink)\n \t\tvar_init_tree = init;\n \t      else"}]}