{"sha": "1041dabaa27fa33389263dcb1aacd7aae5a73396", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA0MWRhYmFhMjdmYTMzMzg5MjYzZGNiMWFhY2Q3YWFlNWE3MzM5Ng==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-05-17T10:19:31Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-05-17T10:19:31Z"}, "message": "functional (result_of): Move...\n\n2010-05-17  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/std/functional (result_of): Move...\n\t* include/std/type_traits: ... here.\n\t* testsuite/20_util/declval/requirements/1_neg.cc: Adjust dg-error\n\tline number.\n\nFrom-SVN: r159478", "tree": {"sha": "14031ea5835bb3428a72b7e47fdd248b3b497c69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14031ea5835bb3428a72b7e47fdd248b3b497c69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1041dabaa27fa33389263dcb1aacd7aae5a73396", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1041dabaa27fa33389263dcb1aacd7aae5a73396", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1041dabaa27fa33389263dcb1aacd7aae5a73396", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1041dabaa27fa33389263dcb1aacd7aae5a73396/comments", "author": null, "committer": null, "parents": [{"sha": "233961db333a77cac359e6c35eae5565703d7d78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/233961db333a77cac359e6c35eae5565703d7d78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/233961db333a77cac359e6c35eae5565703d7d78"}], "stats": {"total": 35, "additions": 22, "deletions": 13}, "files": [{"sha": "b0782ce18c9a002d856f6288f068b83692cd4dff", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1041dabaa27fa33389263dcb1aacd7aae5a73396/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1041dabaa27fa33389263dcb1aacd7aae5a73396/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1041dabaa27fa33389263dcb1aacd7aae5a73396", "patch": "@@ -1,3 +1,10 @@\n+2010-05-17  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/std/functional (result_of): Move...\n+\t* include/std/type_traits: ... here.\n+\t* testsuite/20_util/declval/requirements/1_neg.cc: Adjust dg-error\n+\tline number.\n+\n 2010-05-12  Jason Merrill  <jason@redhat.com>\n \n \t* testsuite/20_util/auto_ptr/assign_neg.cc: Expect template"}, {"sha": "7de7edfff9ab77f00fd6e800470813e2d35dffe1", "filename": "libstdc++-v3/include/std/functional", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1041dabaa27fa33389263dcb1aacd7aae5a73396/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1041dabaa27fa33389263dcb1aacd7aae5a73396/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional?ref=1041dabaa27fa33389263dcb1aacd7aae5a73396", "patch": "@@ -169,17 +169,6 @@ namespace std\n     : _Weak_result_type_impl<typename remove_cv<_Functor>::type>\n     { };\n \n-  template<typename _Signature>\n-    class result_of;\n-\n-  template<typename _Functor, typename... _ArgTypes>\n-    struct result_of<_Functor(_ArgTypes...)>\n-    {\n-      typedef\n-        decltype( std::declval<_Functor>()(std::declval<_ArgTypes>()...) )\n-        type;\n-    };\n-\n   /// Determines if the type _Tp derives from unary_function.\n   template<typename _Tp>\n     struct _Derives_from_unary_function : __sfinae_types"}, {"sha": "9831851c4a54ab04b7a8b1e47f1e6507d3bd54bc", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1041dabaa27fa33389263dcb1aacd7aae5a73396/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1041dabaa27fa33389263dcb1aacd7aae5a73396/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=1041dabaa27fa33389263dcb1aacd7aae5a73396", "patch": "@@ -638,7 +638,6 @@ namespace std\n       typedef typename\n         common_type<typename common_type<_Tp, _Up>::type, _Vp...>::type type;\n     };\n-  // @} group metaprogramming\n \n   /// declval\n   template<typename _Tp>\n@@ -656,6 +655,20 @@ namespace std\n \t\t    \"declval() must not be used!\");\n       return __declval_protector<_Tp>::__delegate();\n     }\n+\n+  /// result_of\n+  template<typename _Signature>\n+    class result_of;\n+\n+  template<typename _Functor, typename... _ArgTypes>\n+    struct result_of<_Functor(_ArgTypes...)>\n+    {\n+      typedef\n+        decltype( std::declval<_Functor>()(std::declval<_ArgTypes>()...) )\n+        type;\n+    };\n+\n+  // @} group metaprogramming\n }\n \n #endif  // __GXX_EXPERIMENTAL_CXX0X__"}, {"sha": "c3b5022f77a13691ea1446ceafe4fb6d7e263a52", "filename": "libstdc++-v3/testsuite/20_util/declval/requirements/1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1041dabaa27fa33389263dcb1aacd7aae5a73396/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1041dabaa27fa33389263dcb1aacd7aae5a73396/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc?ref=1041dabaa27fa33389263dcb1aacd7aae5a73396", "patch": "@@ -19,7 +19,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-error \"static assertion failed\" \"\" { target *-*-* } 655 }\n+// { dg-error \"static assertion failed\" \"\" { target *-*-* } 654 }\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 30 }\n // { dg-excess-errors \"In function\" }\n "}]}