{"sha": "2e94d3ee47be0742df843d95e3d1bf1da11e4796", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU5NGQzZWU0N2JlMDc0MmRmODQzZDk1ZTNkMWJmMWRhMTFlNDc5Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-09T12:38:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-09T12:38:23Z"}, "message": "alias: Punt after walking too many VALUEs during a toplevel find_base_term call [PR94045]\n\nAs mentioned in the PR, on a largish C++ testcase the compile time\non i686-linux is about 16 minutes on a fast box, mostly spent in\nfind_base_term recursive calls dealing with very deep chains of preserved\nVALUEs during var-tracking.\n\nThe following patch punts after we process many VALUEs (we already have code\nto punt if we run into a VALUE cycle).\n\nI've gathered statistics on when we punt this way (with BITS_PER_WORD, TU,\nfunction columns piped through sort | uniq -c | sort -n):\n     36 32 ../../gcc/asan.c _Z29initialize_sanitizer_builtinsv.part.0\n    108 32 _first_test.go reflect_test.reflect_test..import\n   1005 32 /home/jakub/src/gcc/gcc/testsuite/gcc.dg/pr85180.c foo\n   1005 32 /home/jakub/src/gcc/gcc/testsuite/gcc.dg/pr87985.c foo\n   1005 64 /home/jakub/src/gcc/gcc/testsuite/gcc.dg/pr85180.c foo\n   1005 64 /home/jakub/src/gcc/gcc/testsuite/gcc.dg/pr87985.c foo\n   2534 32 /home/jakub/src/gcc/gcc/testsuite/gcc.dg/stack-check-9.c f3\n   6346 32 ../../gcc/brig/brig-lang.c brig_define_builtins\n   6398 32 ../../gcc/d/d-builtins.cc d_define_builtins\n   8816 32 ../../gcc/c-family/c-common.c c_common_nodes_and_builtins\n   8824 32 ../../gcc/lto/lto-lang.c lto_define_builtins\n  41413 32 /home/jakub/src/gcc/gcc/testsuite/gcc.dg/pr43058.c test\nAdditionally, for most of these (for the builtins definitions tested just\none) I've verified with a different alias.c change which didn't punt but\nin the toplevel find_base_term recorded if visited_vals reached the limit\nwhether the return value was NULL_RTX or something different, and in all\nthese cases the end result was NULL_RTX, so at least in these cases it\nshould just shorten the time until it returns NULL.\n\n2020-03-09  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/94045\n\t* params.opt (-param=max-find-base-term-values=): New option.\n\t* alias.c (find_base_term): Add cut-off for number of visited VALUEs\n\tin a single toplevel find_base_term call.", "tree": {"sha": "d7c01bf9173b197214ae0c482b27f66c6b54dad7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7c01bf9173b197214ae0c482b27f66c6b54dad7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e94d3ee47be0742df843d95e3d1bf1da11e4796", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e94d3ee47be0742df843d95e3d1bf1da11e4796", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e94d3ee47be0742df843d95e3d1bf1da11e4796", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e94d3ee47be0742df843d95e3d1bf1da11e4796/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "016d0f9e43c1d2bd8227751b5b20a309c94edc90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/016d0f9e43c1d2bd8227751b5b20a309c94edc90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/016d0f9e43c1d2bd8227751b5b20a309c94edc90"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "c9c4e7503c7e8ba02a27d4e08478bac75f5a219d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e94d3ee47be0742df843d95e3d1bf1da11e4796/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e94d3ee47be0742df843d95e3d1bf1da11e4796/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e94d3ee47be0742df843d95e3d1bf1da11e4796", "patch": "@@ -1,3 +1,10 @@\n+2020-03-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/94045\n+\t* params.opt (-param=max-find-base-term-values=): New option.\n+\t* alias.c (find_base_term): Add cut-off for number of visited VALUEs\n+\tin a single toplevel find_base_term call.\n+\n 2020-03-06  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \tPR target/91598"}, {"sha": "82a27f686a5578a9c48366498b867e8f2a000136", "filename": "gcc/alias.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e94d3ee47be0742df843d95e3d1bf1da11e4796/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e94d3ee47be0742df843d95e3d1bf1da11e4796/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=2e94d3ee47be0742df843d95e3d1bf1da11e4796", "patch": "@@ -2005,6 +2005,9 @@ find_base_term (rtx x, vec<std::pair<cselib_val *,\n       if (cselib_sp_based_value_p (val))\n \treturn static_reg_base_value[STACK_POINTER_REGNUM];\n \n+      if (visited_vals.length () > (unsigned) param_max_find_base_term_values)\n+\treturn ret;\n+\n       f = val->locs;\n       /* Reset val->locs to avoid infinite recursion.  */\n       if (f)"}, {"sha": "e39216aa7d02e54ce47b88d591189c7ded93cbe4", "filename": "gcc/params.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e94d3ee47be0742df843d95e3d1bf1da11e4796/gcc%2Fparams.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e94d3ee47be0742df843d95e3d1bf1da11e4796/gcc%2Fparams.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.opt?ref=2e94d3ee47be0742df843d95e3d1bf1da11e4796", "patch": "@@ -662,6 +662,10 @@ Max. size of loc list for which reverse ops should be added.\n Common Joined UInteger Var(param_max_vartrack_size) Init(50000000) Param Optimization\n Max. size of var tracking hash tables.\n \n+-param=max-find-base-term-values=\n+Common Joined UInteger Var(param_max_find_base_term_values) Init(2000) Param Optimization\n+Maximum number of VALUEs handled during a single find_base_term call.\n+\n -param=max-vrp-switch-assertions=\n Common Joined UInteger Var(param_max_vrp_switch_assertions) Init(10) Param Optimization\n Maximum number of assertions to add along the default edge of a switch statement during VRP."}]}