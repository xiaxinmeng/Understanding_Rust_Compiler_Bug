{"sha": "05f9a806ee423a6dc7995c1c1bfe18c97c80c5c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVmOWE4MDZlZTQyM2E2ZGM3OTk1YzFjMWJmZTE4Yzk3YzgwYzVjNA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-06-05T13:11:00Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-06-05T13:11:00Z"}, "message": "re PR c++/85976 (ICE in cp_tree_equal when building Blitz. May be nested templates.)\n\n\tPR c++/85976\n\t* tree.c (cp_tree_equal): Handle USING_DECL.\n\n\t* g++.dg/cpp0x/alias-decl-64.C: New test.\n\nFrom-SVN: r261200", "tree": {"sha": "eaef443648e01b9ff10c57c24e39ed0138c7f472", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eaef443648e01b9ff10c57c24e39ed0138c7f472"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05f9a806ee423a6dc7995c1c1bfe18c97c80c5c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05f9a806ee423a6dc7995c1c1bfe18c97c80c5c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05f9a806ee423a6dc7995c1c1bfe18c97c80c5c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05f9a806ee423a6dc7995c1c1bfe18c97c80c5c4/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97a53d1d04d5dc36f64c0897ff0c49c78ef83ffc"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "4962eacf5fc56557c1a6074bb718cfc9f7b6b413", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05f9a806ee423a6dc7995c1c1bfe18c97c80c5c4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05f9a806ee423a6dc7995c1c1bfe18c97c80c5c4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=05f9a806ee423a6dc7995c1c1bfe18c97c80c5c4", "patch": "@@ -1,3 +1,8 @@\n+2018-06-05  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/85976\n+\t* tree.c (cp_tree_equal): Handle USING_DECL.\n+\n 2018-06-05  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/85731 - wrong error with qualified-id in template."}, {"sha": "bbbda7e98b60d850f66f1037ba1d8c84897ad281", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05f9a806ee423a6dc7995c1c1bfe18c97c80c5c4/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05f9a806ee423a6dc7995c1c1bfe18c97c80c5c4/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=05f9a806ee423a6dc7995c1c1bfe18c97c80c5c4", "patch": "@@ -3878,6 +3878,14 @@ cp_tree_equal (tree t1, tree t2)\n \t\t\t\t     DEFERRED_NOEXCEPT_ARGS (t2)));\n       break;\n \n+    case USING_DECL:\n+      if (DECL_DEPENDENT_P (t1) && DECL_DEPENDENT_P (t2))\n+\treturn (cp_tree_equal (USING_DECL_SCOPE (t1),\n+\t\t\t       USING_DECL_SCOPE (t2))\n+\t\t&& cp_tree_equal (DECL_NAME (t1),\n+\t\t\t\t  DECL_NAME (t2)));\n+      return false;\n+\n     default:\n       break;\n     }"}, {"sha": "a049d14e886a47752a93663eb3e0dcf232d4cb1f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05f9a806ee423a6dc7995c1c1bfe18c97c80c5c4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05f9a806ee423a6dc7995c1c1bfe18c97c80c5c4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=05f9a806ee423a6dc7995c1c1bfe18c97c80c5c4", "patch": "@@ -1,3 +1,8 @@\n+2018-06-05  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/85976\n+\t* g++.dg/cpp0x/alias-decl-64.C: New test.\n+\n 2018-06-05  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/86046"}, {"sha": "019eb2697501a7cbf9273538fc588779bf186ef3", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-64.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05f9a806ee423a6dc7995c1c1bfe18c97c80c5c4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-64.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05f9a806ee423a6dc7995c1c1bfe18c97c80c5c4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-64.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-64.C?ref=05f9a806ee423a6dc7995c1c1bfe18c97c80c5c4", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/85976\n+// { dg-do compile { target c++11 } }\n+\n+template <int> class A;\n+template <typename> class B;\n+template <typename> struct C;\n+template <typename P_expr> class D {\n+  using B<typename P_expr::T_numtype>::rank_;\n+  void operator()(typename C<A<rank_>>::i);\n+};\n+\n+template <typename P_expr> class F {\n+  using B<typename P_expr::T_numtype>::rank_;\n+  void operator()(typename C<A<rank_>>::i);\n+};"}]}