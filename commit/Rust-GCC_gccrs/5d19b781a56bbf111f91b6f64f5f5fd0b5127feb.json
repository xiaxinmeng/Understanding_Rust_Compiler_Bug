{"sha": "5d19b781a56bbf111f91b6f64f5f5fd0b5127feb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQxOWI3ODFhNTZiYmYxMTFmOTFiNmY2NGY1ZjVmZDBiNTEyN2ZlYg==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2005-10-06T23:49:31Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2005-10-06T23:49:31Z"}, "message": "PR testsuite/23611, PR testsuite/23615\n\n\tPR testsuite/23611, PR testsuite/23615\n\t* obj-c++.dg/bitfield-3.mm: Include standard headers instead of\n\twriting prototypes of library functions by hand.\n\t* obj-c++.dg/bitfield-4.mm: Likewise.\n\t* obj-c++.dg/const-str-4.mm: Likewise.\n\t* obj-c++.dg/encode-4.mm: Likewise.\n\t* obj-c++.dg/encode-5.mm: Likewise.\n\t* obj-c++.dg/encode-6.mm: Likewise.\n\t* obj-c++.dg/gnu-runtime-3.mm: Likewise.\n\t* obj-c++.dg/method-10.mm: Likewise.\n\t* obj-c++.dg/method-17.mm: Likewise.\n\t* obj-c++.dg/method-19.mm: Likewise.\n\t* obj-c++.dg/try-catch-2.mm: Likewise.\n\nFrom-SVN: r105074", "tree": {"sha": "d621dc1dd53271075bd5a9abc892ace23b51a3af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d621dc1dd53271075bd5a9abc892ace23b51a3af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/comments", "author": null, "committer": null, "parents": [{"sha": "b7add5063821f73f2b8463317d224b68cd1aeb3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7add5063821f73f2b8463317d224b68cd1aeb3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7add5063821f73f2b8463317d224b68cd1aeb3e"}], "stats": {"total": 68, "additions": 39, "deletions": 29}, "files": [{"sha": "44e8a7a5436b1a999335e0b6c39874cb8f485b17", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5d19b781a56bbf111f91b6f64f5f5fd0b5127feb", "patch": "@@ -1,3 +1,19 @@\n+2005-10-07  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\tPR testsuite/23611, PR testsuite/23615\n+\t* obj-c++.dg/bitfield-3.mm: Include standard headers instead of\n+\twriting prototypes of library functions by hand.\n+\t* obj-c++.dg/bitfield-4.mm: Likewise.\n+\t* obj-c++.dg/const-str-4.mm: Likewise.\n+\t* obj-c++.dg/encode-4.mm: Likewise.\n+\t* obj-c++.dg/encode-5.mm: Likewise.\n+\t* obj-c++.dg/encode-6.mm: Likewise.\n+\t* obj-c++.dg/gnu-runtime-3.mm: Likewise.\n+\t* obj-c++.dg/method-10.mm: Likewise.\n+\t* obj-c++.dg/method-17.mm: Likewise.\n+\t* obj-c++.dg/method-19.mm: Likewise.\n+\t* obj-c++.dg/try-catch-2.mm: Likewise.\n+\n 2005-10-06  Richard Henderson  <rth@redhat.com>\n \n \tPR 24236"}, {"sha": "1ad10f642864b8ba52eb2b60e5d1a4fc1aa0408c", "filename": "gcc/testsuite/obj-c++.dg/bitfield-3.mm", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fbitfield-3.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fbitfield-3.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fbitfield-3.mm?ref=5d19b781a56bbf111f91b6f64f5f5fd0b5127feb", "patch": "@@ -6,10 +6,8 @@\n \n typedef struct objc_object { struct objc_class *class_pointer; } *id;\n \n-extern \"C\" {\n-  extern void abort(void);\n-  extern int strcmp(const char *, const char *);\n-}\n+#include <stdlib.h>\n+#include <string.h>\n \n #define CHECK_IF(expr) if(!(expr)) abort();\n "}, {"sha": "d7617bf106ccf9773958645c777b2279a1e28fbc", "filename": "gcc/testsuite/obj-c++.dg/bitfield-4.mm", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fbitfield-4.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fbitfield-4.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fbitfield-4.mm?ref=5d19b781a56bbf111f91b6f64f5f5fd0b5127feb", "patch": "@@ -6,10 +6,9 @@\n \n #include <objc/Object.h>\n \n-extern \"C\" {\n-  extern void abort(void);\n-  extern int strcmp(const char *str1, const char *str2);\n-}\n+#include <stdlib.h>\n+#include <string.h>\n+\n #define CHECK_IF(expr) if(!(expr)) abort()\n \n enum Enum { one, two, three, four };"}, {"sha": "9ea257d80e9cc598b2492cd63fa178f548049c23", "filename": "gcc/testsuite/obj-c++.dg/const-str-4.mm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-4.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-4.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fconst-str-4.mm?ref=5d19b781a56bbf111f91b6f64f5f5fd0b5127feb", "patch": "@@ -3,7 +3,7 @@\n /* { dg-options \"-fnext-runtime -fconstant-string-class=MyString -lobjc\" } */ \n /* { dg-do run { target *-*-darwin* } } */\n \n-extern \"C\" void abort(void);\n+#include <stdlib.h>\n \n @interface MyString\n {"}, {"sha": "66745f01f08f6239c989743ece1657bf51a4811f", "filename": "gcc/testsuite/obj-c++.dg/encode-4.mm", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fencode-4.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fencode-4.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fencode-4.mm?ref=5d19b781a56bbf111f91b6f64f5f5fd0b5127feb", "patch": "@@ -31,10 +31,9 @@ to the actual placement of parameters (relative to 'self')\n #define CLASS_GETINSTANCEMETHOD class_get_instance_method\n #endif\n \n-extern \"C\" {\n-  extern int sscanf(const char *str, const char *format, ...);\n-  extern void abort(void);\n-}\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n #define CHECK_IF(expr) if(!(expr)) abort()\n \n @interface Foo: Object"}, {"sha": "748df7c634e344bd53ca58fdcf2a3e1eb4f13f13", "filename": "gcc/testsuite/obj-c++.dg/encode-5.mm", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fencode-5.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fencode-5.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fencode-5.mm?ref=5d19b781a56bbf111f91b6f64f5f5fd0b5127feb", "patch": "@@ -13,10 +13,9 @@\n #include <objc/objc-api.h>\n #endif\n \n-extern \"C\" {\n-  extern int sscanf(const char *str, const char *format, ...);\n-  extern void abort(void);\n-}\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n #define CHECK_IF(expr) if(!(expr)) abort()\n \n enum Enum {"}, {"sha": "5b85c3d5590934523caa2371073eb41a46bb096d", "filename": "gcc/testsuite/obj-c++.dg/encode-6.mm", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fencode-6.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fencode-6.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fencode-6.mm?ref=5d19b781a56bbf111f91b6f64f5f5fd0b5127feb", "patch": "@@ -12,10 +12,9 @@\n #define OBJC_GETCLASS objc_get_class\n #endif\n \n-extern \"C\" {\n-  extern void abort(void);\n-  extern int strcmp(const char *s1, const char *s2);\n-}\n+#include <stdlib.h>\n+#include <string.h>\n+\n #define CHECK_IF(expr) if(!(expr)) abort()\n \n @class Int1, Int2;"}, {"sha": "d9c62d9de2d3de7ed21677d09a2ae6c738b39257", "filename": "gcc/testsuite/obj-c++.dg/gnu-runtime-3.mm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-runtime-3.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-runtime-3.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fgnu-runtime-3.mm?ref=5d19b781a56bbf111f91b6f64f5f5fd0b5127feb", "patch": "@@ -5,13 +5,13 @@\n /* { dg-options \"-fgnu-runtime\" } */\n \n #include <objc/Object.h>\n+#include <stdlib.h>\n \n @interface FooBar: Object\n - (void)boo;\n @end\n \n int called = 0;\n-extern \"C\" void abort ();\n \n @implementation FooBar\n - (void)boo"}, {"sha": "01a568ba857a7288fa8ddfc7bcda47b716924c65", "filename": "gcc/testsuite/obj-c++.dg/method-10.mm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-10.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-10.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-10.mm?ref=5d19b781a56bbf111f91b6f64f5f5fd0b5127feb", "patch": "@@ -4,8 +4,8 @@\n /* { dg-do run } */\n \n #include <objc/Object.h>\n+#include <stdlib.h>\n \n-extern \"C\" void abort(void);\n #define CHECK_IF(expr) if(!(expr)) abort()\n \n @interface Int1: Object"}, {"sha": "a7f27f86459918d1da92a598e56df593c72812a9", "filename": "gcc/testsuite/obj-c++.dg/method-17.mm", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-17.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-17.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-17.mm?ref=5d19b781a56bbf111f91b6f64f5f5fd0b5127feb", "patch": "@@ -5,7 +5,8 @@ message sends (so that proper C/C++ argument conversions may\n /* { dg-do run } */\n \n #include <objc/Object.h>\n-extern \"C\" void abort(void);\n+#include <stdlib.h>\n+\n #define CHECK_IF(expr) if(!(expr)) abort()\n \n static double d = 4.5920234e2;"}, {"sha": "e7a2b44fd7a0c6a609f413b409defaf1679387d3", "filename": "gcc/testsuite/obj-c++.dg/method-19.mm", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-19.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-19.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fmethod-19.mm?ref=5d19b781a56bbf111f91b6f64f5f5fd0b5127feb", "patch": "@@ -14,10 +14,9 @@\n #define OBJC_GETCLASS objc_get_class\n #endif\n \n-extern \"C\" {\n-  extern void abort(void);\n-  extern int strcmp(const char *, const char *);\n-}\n+#include <stdlib.h>\n+#include <string.h>\n+\n #define CHECK_IF(expr) if(!(expr)) abort()\n \n @protocol Proto"}, {"sha": "9352260ab266b18f6acec19255120131ea1db1f6", "filename": "gcc/testsuite/obj-c++.dg/try-catch-2.mm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftry-catch-2.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d19b781a56bbf111f91b6f64f5f5fd0b5127feb/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftry-catch-2.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftry-catch-2.mm?ref=5d19b781a56bbf111f91b6f64f5f5fd0b5127feb", "patch": "@@ -7,13 +7,13 @@\n \n #include <objc/Object.h>\n #include <stdio.h>\n+#include <stdlib.h>\n \n /* The following is not required in actual user code; we include it\n    here to check that the compiler generates an internal definition of\n    _setjmp that is consistent with what <setjmp.h> provides.  */\n #include <setjmp.h>\n \n-extern \"C\" void abort(void);\n #define CHECK_IF(expr) if(!(expr)) abort()\n \n @interface Frob: Object"}]}