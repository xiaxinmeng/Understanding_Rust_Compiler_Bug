{"sha": "a2a86641b76dfd5606606d5a49fa64c20f0d9245", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJhODY2NDFiNzZkZmQ1NjA2NjA2ZDVhNDlmYTY0YzIwZjBkOTI0NQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2018-10-05T14:09:07Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-10-05T14:09:07Z"}, "message": "re PR libbacktrace/87529 (libbacktrace API forces users to have memory leaks)\n\n\tPR libbacktrace/87529\n\t* backtrace.h: Document that backtrace_create_state should be\n\tcalled only once.\n\nFrom-SVN: r264871", "tree": {"sha": "47a1d357500d2aec20c7e1e206f756c001db2cc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47a1d357500d2aec20c7e1e206f756c001db2cc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2a86641b76dfd5606606d5a49fa64c20f0d9245", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2a86641b76dfd5606606d5a49fa64c20f0d9245", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2a86641b76dfd5606606d5a49fa64c20f0d9245", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2a86641b76dfd5606606d5a49fa64c20f0d9245/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f48bd5e43acaa30252437f2d6faae1d18de08388", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f48bd5e43acaa30252437f2d6faae1d18de08388", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f48bd5e43acaa30252437f2d6faae1d18de08388"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "75745aa1796a0457a3e32813e1f00d424d817afd", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2a86641b76dfd5606606d5a49fa64c20f0d9245/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2a86641b76dfd5606606d5a49fa64c20f0d9245/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=a2a86641b76dfd5606606d5a49fa64c20f0d9245", "patch": "@@ -1,3 +1,9 @@\n+2018-10-05  Ian Lance Taylor  <iant@golang.org>\n+\n+\tPR libbacktrace/87529\n+\t* backtrace.h: Document that backtrace_create_state should be\n+\tcalled only once.\n+\n 2018-08-05 Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* configure.ac: Move define of HAVE_ZLIB into check for -lz."}, {"sha": "83439ffadce51e65cb75c3ea5120c4fa67e40aa0", "filename": "libbacktrace/backtrace.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2a86641b76dfd5606606d5a49fa64c20f0d9245/libbacktrace%2Fbacktrace.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2a86641b76dfd5606606d5a49fa64c20f0d9245/libbacktrace%2Fbacktrace.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fbacktrace.h?ref=a2a86641b76dfd5606606d5a49fa64c20f0d9245", "patch": "@@ -92,7 +92,13 @@ typedef void (*backtrace_error_callback) (void *data, const char *msg,\n    use appropriate atomic operations.  If THREADED is zero the state\n    may only be accessed by one thread at a time.  This returns a state\n    pointer on success, NULL on error.  If an error occurs, this will\n-   call the ERROR_CALLBACK routine.  */\n+   call the ERROR_CALLBACK routine.\n+\n+   Calling this function allocates resources that can not be freed.\n+   There is no backtrace_free_state function.  The state is used to\n+   cache information that is expensive to recompute.  Programs are\n+   expected to call this function at most once and to save the return\n+   value for all later calls to backtrace functions.  */\n \n extern struct backtrace_state *backtrace_create_state (\n     const char *filename, int threaded,"}]}