{"sha": "eefdb8e68448cced1ca01833d776c968fb10265e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVmZGI4ZTY4NDQ4Y2NlZDFjYTAxODMzZDc3NmM5NjhmYjEwMjY1ZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2012-04-23T23:32:54Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-04-23T23:32:54Z"}, "message": "Check if MASK_/TARGET_ macros defined for extra_masks\n\n2012-04-23  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR bootstrap/52878\n\t* opth-gen.awk: Check if MASK_ and TARGET_ macros are defined for\n\textra_masks.\n\nFrom-SVN: r186729", "tree": {"sha": "a2207e94c4695b5f74f948b92d008cdbb2f0f16c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2207e94c4695b5f74f948b92d008cdbb2f0f16c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eefdb8e68448cced1ca01833d776c968fb10265e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eefdb8e68448cced1ca01833d776c968fb10265e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eefdb8e68448cced1ca01833d776c968fb10265e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eefdb8e68448cced1ca01833d776c968fb10265e/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ec20ea138a66e277f503fa627c9760348a23ce2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ec20ea138a66e277f503fa627c9760348a23ce2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ec20ea138a66e277f503fa627c9760348a23ce2"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "e1daace31c75530f1a5f83ffaa04d5c10c655082", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eefdb8e68448cced1ca01833d776c968fb10265e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eefdb8e68448cced1ca01833d776c968fb10265e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eefdb8e68448cced1ca01833d776c968fb10265e", "patch": "@@ -1,3 +1,9 @@\n+2012-04-23  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/52878\n+\t* opth-gen.awk: Check if MASK_ and TARGET_ macros are defined for\n+\textra_masks.\n+\n 2012-04-23  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (*add<mode>_2): Add r/r/0 alternative."}, {"sha": "a600b30502b405e5fc66eee095d91600534e5875", "filename": "gcc/opth-gen.awk", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eefdb8e68448cced1ca01833d776c968fb10265e/gcc%2Fopth-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eefdb8e68448cced1ca01833d776c968fb10265e/gcc%2Fopth-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopth-gen.awk?ref=eefdb8e68448cced1ca01833d776c968fb10265e", "patch": "@@ -314,12 +314,14 @@ for (i = 0; i < n_opts; i++) {\n \t\t\tmask = \"OPTION_MASK_\"\n \t\t\tif (host_wide_int[vname] == \"yes\")\n \t\t\t\tmask_1 = \"HOST_WIDE_INT_1\"\n-\t\t}\n+\t\t} else\n+\t\t\textra_mask_bits[name] = 1\n \t\tprint \"#define \" mask name \" (\" mask_1 \" << \" masknum[vname]++ \")\"\n \t}\n }\n for (i = 0; i < n_extra_masks; i++) {\n-\tprint \"#define MASK_\" extra_masks[i] \" (1 << \" masknum[\"\"]++ \")\"\n+\tif (extra_mask_bits[extra_masks[i]] == 0)\n+\t\tprint \"#define MASK_\" extra_masks[i] \" (1 << \" masknum[\"\"]++ \")\"\n }\n \n for (var in masknum) {\n@@ -355,14 +357,16 @@ for (i = 0; i < n_opts; i++) {\n \t\t\tvname = \"target_flags\"\n \t\t\tmacro = \"TARGET_\"\n \t\t\tmask = \"MASK_\"\n+\t\t\textra_mask_macros[name] = 1\n \t\t}\n \t\tprint \"#define \" macro name \\\n \t\t      \" ((\" vname \" & \" mask name \") != 0)\"\n \t}\n }\n for (i = 0; i < n_extra_masks; i++) {\n-\tprint \"#define TARGET_\" extra_masks[i] \\\n-\t      \" ((target_flags & MASK_\" extra_masks[i] \") != 0)\"\n+\tif (extra_mask_macros[extra_masks[i]] == 0)\n+\t\tprint \"#define TARGET_\" extra_masks[i] \\\n+\t\t      \" ((target_flags & MASK_\" extra_masks[i] \") != 0)\"\n }\n print \"\"\n "}]}