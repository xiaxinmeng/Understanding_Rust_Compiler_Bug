{"sha": "0fa6e0eff715294ffe4c681e3779ff4aeb45eec9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZhNmUwZWZmNzE1Mjk0ZmZlNGM2ODFlMzc3OWZmNGFlYjQ1ZWVjOQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-05-30T21:32:53Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-05-30T21:32:53Z"}, "message": "re PR middle-end/57073 (__builtin_powif (-1.0, k) should be optimized to \"1.0 - 2.0 * (K%2)\")\n\n2013-05-30  Tobias Burnus  <burnus@net-b.de>\n            Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n        PR middle-end/57073\n        * tree-ssa-math-opts.c (execute_cse_sincos): Optimize\n        powi (-1.0, k) to (k & 1) ? -1.0 : 1.0.\n\n2013-05-30  Tobias Burnus  <burnus@net-b.de>\n\n        PR middle-end/57073\n        * gfortran.dg/power_6.f90: New.\n\nFrom-SVN: r199461", "tree": {"sha": "0338f41a27df644e6cb3e528642a32455d55caf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0338f41a27df644e6cb3e528642a32455d55caf9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fa6e0eff715294ffe4c681e3779ff4aeb45eec9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fa6e0eff715294ffe4c681e3779ff4aeb45eec9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fa6e0eff715294ffe4c681e3779ff4aeb45eec9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fa6e0eff715294ffe4c681e3779ff4aeb45eec9/comments", "author": null, "committer": null, "parents": [{"sha": "4688ddf59b247da24a4d5ebc22fb2c875b3c26cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4688ddf59b247da24a4d5ebc22fb2c875b3c26cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4688ddf59b247da24a4d5ebc22fb2c875b3c26cf"}], "stats": {"total": 70, "additions": 64, "deletions": 6}, "files": [{"sha": "9086576410a08cabb8b95f3616da6e33a52be5d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fa6e0eff715294ffe4c681e3779ff4aeb45eec9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fa6e0eff715294ffe4c681e3779ff4aeb45eec9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0fa6e0eff715294ffe4c681e3779ff4aeb45eec9", "patch": "@@ -1,6 +1,13 @@\n+2013-05-30  Tobias Burnus  <burnus@net-b.de>\n+\t    Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR middle-end/57073\n+\t* tree-ssa-math-opts.c (execute_cse_sincos): Optimize\n+\tpowi (-1.0, k) to (k & 1) ? -1.0 : 1.0.\n+\n 2013-05-30  Steven Bosscher  <steven@gcc.gnu.org>\n \n-       * rtlanal.c (tablejump_p): Expect table and label to be adjacent.\n+\t* rtlanal.c (tablejump_p): Expect table and label to be adjacent.\n \n 2013-05-30  Vladimir Makarov  <vmakarov@redhat.com>\n "}, {"sha": "27bf13439d0351f1e81c1ed9c59a65db8fca4dbc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fa6e0eff715294ffe4c681e3779ff4aeb45eec9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fa6e0eff715294ffe4c681e3779ff4aeb45eec9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0fa6e0eff715294ffe4c681e3779ff4aeb45eec9", "patch": "@@ -1,3 +1,8 @@\n+2013-05-30  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR middle-end/57073\n+\t* gfortran.dg/power_6.f90: New.\n+\n 2013-05-30  Ian Bolton  <ian.bolton@arm.com>\n \n \t* gcc.target/aarch64/insv_1.c: New test."}, {"sha": "65d1bd02684f57b21af9d9de6a5ed3a6bceb48c8", "filename": "gcc/testsuite/gfortran.dg/power_6.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fa6e0eff715294ffe4c681e3779ff4aeb45eec9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpower_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fa6e0eff715294ffe4c681e3779ff4aeb45eec9/gcc%2Ftestsuite%2Fgfortran.dg%2Fpower_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpower_6.f90?ref=0fa6e0eff715294ffe4c681e3779ff4aeb45eec9", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+! { dg-options \"-O1 -fdump-tree-optimized\" }\n+!\n+! PR middle-end/57073\n+! See also PR 57073\n+!\n+real function f(k)\n+  integer, value :: k\n+  f = (-1.0)**k\n+end\n+\n+! { dg-final { scan-tree-dump-not \"__builtin_powif\"  \"optimized\" } }\n+! { dg-final { scan-tree-dump \"powi_cond_\\[0-9\\] = k_\\[0-9\\]\\\\(D\\\\) & 1;\"  \"optimized\" } }\n+! { dg-final { scan-tree-dump \"powi_\\[0-9\\] = powi_cond_\\[0-9\\] \\\\? -1.0e\\\\+0 : 1.0e\\\\+0;\"  \"optimized\" } }\n+! { dg-final { cleanup-tree-dump \"optimized\" } }"}, {"sha": "a15c404286790c355e041bf7f47f7eee44da6ed3", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 36, "deletions": 5, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fa6e0eff715294ffe4c681e3779ff4aeb45eec9/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fa6e0eff715294ffe4c681e3779ff4aeb45eec9/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=0fa6e0eff715294ffe4c681e3779ff4aeb45eec9", "patch": "@@ -1445,12 +1445,43 @@ execute_cse_sincos (void)\n \t\tCASE_FLT_FN (BUILT_IN_POWI):\n \t\t  arg0 = gimple_call_arg (stmt, 0);\n \t\t  arg1 = gimple_call_arg (stmt, 1);\n-\t\t  if (!host_integerp (arg1, 0))\n-\t\t    break;\n-\n-\t\t  n = TREE_INT_CST_LOW (arg1);\n \t\t  loc = gimple_location (stmt);\n-\t\t  result = gimple_expand_builtin_powi (&gsi, loc, arg0, n);\n+\n+\t\t  if (real_minus_onep (arg0)\n+\t\t      && TREE_CODE (TREE_TYPE (arg1)) == INTEGER_TYPE\n+\t\t      && !host_integerp (arg1,0))\n+\t\t    {\n+                      tree t0, t1, cond, one, minus_one;\n+\t\t      gimple stmt;\n+\n+\t\t      t0 = TREE_TYPE (arg0);\n+\t\t      t1 = TREE_TYPE (arg1);\n+\t\t      one = build_real (t0, dconst1);\n+\t\t      minus_one = build_real (t0, dconstm1);\n+\n+\t\t      cond = make_temp_ssa_name (t1, NULL, \"powi_cond\");\n+\t\t      stmt = gimple_build_assign_with_ops (BIT_AND_EXPR, cond,\n+\t\t\t\t\t\t\t   arg1,\n+\t\t\t\t\t\t\t   build_int_cst (t1,\n+\t\t\t\t\t\t\t\t\t  1));\n+\t\t      gimple_set_location (stmt, loc);\n+\t\t      gsi_insert_before (&gsi, stmt, GSI_SAME_STMT);\n+\n+\t\t      result = make_temp_ssa_name (t0, NULL, \"powi\");\n+\t\t      stmt = gimple_build_assign_with_ops (COND_EXPR, result,\n+\t\t\t\t\t\t\t   cond,\n+\t\t\t\t\t\t\t   minus_one, one);\n+\t\t      gimple_set_location (stmt, loc);\n+\t\t      gsi_insert_before (&gsi, stmt, GSI_SAME_STMT);\n+\t\t    }\n+\t\t  else\n+\t\t    {\n+\t\t      if (!host_integerp (arg1, 0))\n+\t\t\tbreak;\n+\n+\t\t      n = TREE_INT_CST_LOW (arg1);\n+\t\t      result = gimple_expand_builtin_powi (&gsi, loc, arg0, n);\n+\t\t    }\n \n \t\t  if (result)\n \t\t    {"}]}