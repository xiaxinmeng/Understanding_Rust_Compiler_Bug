{"sha": "e2fa159e1d59089353cdfb11d52aed3450de2915", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJmYTE1OWUxZDU5MDg5MzUzY2RmYjExZDUyYWVkMzQ1MGRlMjkxNQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-02-22T19:26:46Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-02-22T19:26:46Z"}, "message": "com.c (ffecom_arglist_expr_): Crash if non-supplied optional arg isn't passed as an address.\n\n        * com.c (ffecom_arglist_expr_): Crash if non-supplied\n        optional arg isn't passed as an address.\n        Pass null pointer explicitly, instead of via ffecom routine.\n        If incoming argstring is NULL, substitute pointer to \"0\".\n        Recognize '0' as ending the usual arg stuff, just like '\\0'.\n        * com.c (ffecom_arglist_expr_): Pass null pointers for optional\n        args which aren't supplied.\nMore patches from Craig.\n\nFrom-SVN: r18183", "tree": {"sha": "8db5a72265466bc02472d5b54f50deebe361b57c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8db5a72265466bc02472d5b54f50deebe361b57c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2fa159e1d59089353cdfb11d52aed3450de2915", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2fa159e1d59089353cdfb11d52aed3450de2915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2fa159e1d59089353cdfb11d52aed3450de2915", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2fa159e1d59089353cdfb11d52aed3450de2915/comments", "author": null, "committer": null, "parents": [{"sha": "6d4331962422e9333a9ca194aa9f81fc997f3cc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d4331962422e9333a9ca194aa9f81fc997f3cc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d4331962422e9333a9ca194aa9f81fc997f3cc7"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "f63413b0cbe9dcda541b4cf40649a0273819ca1d", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2fa159e1d59089353cdfb11d52aed3450de2915/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2fa159e1d59089353cdfb11d52aed3450de2915/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=e2fa159e1d59089353cdfb11d52aed3450de2915", "patch": "@@ -46,12 +46,24 @@ Mon Dec  1 19:12:36 1997  Craig Burley  <burley@gnu.org>\n \n \t* intrin.c (ffeintrin_check_): Fix up indentation a bit more.\n \n+Mon Dec  1 16:21:08 1997  Craig Burley  <burley@gnu.org>\n+\n+\t* com.c (ffecom_arglist_expr_): Crash if non-supplied\n+\toptional arg isn't passed as an address.\n+\tPass null pointer explicitly, instead of via ffecom routine.\n+\tIf incoming argstring is NULL, substitute pointer to \"0\".\n+\tRecognize '0' as ending the usual arg stuff, just like '\\0'.\n+\n Sun Nov 30 22:22:22 1997  Craig Burley  <burley@gnu.org>\n \n \t* intdoc.c: Minor fix-ups.\n \n \t* intrin.c (ffeintrin_check_): Fix up indentation a bit.\n \n+1997-11-17  Dave Love  <d.love@dl.ac.uk>\n+\n+\t* com.c (ffecom_arglist_expr_): Pass null pointers for optional\n+\targs which aren't supplied.\n \n Fri Oct 10 13:00:48 1997  Craig Burley  <burley@gnu.ai.mit.edu>\n "}, {"sha": "63a8d27fee2de6b1b26c5d15e872d541dfae3a4f", "filename": "gcc/f/com.c", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2fa159e1d59089353cdfb11d52aed3450de2915/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2fa159e1d59089353cdfb11d52aed3450de2915/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=e2fa159e1d59089353cdfb11d52aed3450de2915", "patch": "@@ -1093,6 +1093,10 @@ ffecom_arglist_expr_ (char *c, ffebld expr)\n   tree item;\n   bool ptr = FALSE;\n   tree wanted = NULL_TREE;\n+  static char zed[] = \"0\";\n+\n+  if (c == NULL)\n+    c = &zed[0];\n \n   while (expr != NULL)\n     {\n@@ -1185,6 +1189,39 @@ ffecom_arglist_expr_ (char *c, ffebld expr)\n \t}\n     }\n \n+  /* We've run out of args in the call; if the implementation expects\n+     more, supply null pointers for them, which the implementation can\n+     check to see if an arg was omitted. */\n+\n+  while (*c != '\\0' && *c != '0')\n+    {\n+      if (*c == '&')\n+\t++c;\n+      else\n+\tassert (\"missing arg to run-time routine!\" == NULL);\n+\n+      switch (*(c++))\n+\t{\n+\tcase '\\0':\n+\tcase 'a':\n+\tcase 'c':\n+\tcase 'd':\n+\tcase 'e':\n+\tcase 'f':\n+\tcase 'i':\n+\tcase 'j':\n+\t  break;\n+\n+\tdefault:\n+\t  assert (\"bad arg string code\" == NULL);\n+\t  break;\n+\t}\n+      *plist\n+\t= build_tree_list (NULL_TREE,\n+\t\t\t   null_pointer_node);\n+      plist = &TREE_CHAIN (*plist);\n+    }\n+\n   *plist = trail;\n \n   return list;"}]}