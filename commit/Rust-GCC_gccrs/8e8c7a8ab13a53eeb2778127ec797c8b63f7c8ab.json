{"sha": "8e8c7a8ab13a53eeb2778127ec797c8b63f7c8ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU4YzdhOGFiMTNhNTNlZWIyNzc4MTI3ZWM3OTdjOGI2M2Y3YzhhYg==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2014-10-24T11:50:24Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2014-10-24T11:50:24Z"}, "message": "vaddl.c: New file.\n\n2014-10-24  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vaddl.c: New file.\n\nFrom-SVN: r216652", "tree": {"sha": "6e157a204cadf562dcd25706b13df87cfd72ff07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e157a204cadf562dcd25706b13df87cfd72ff07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e8c7a8ab13a53eeb2778127ec797c8b63f7c8ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e8c7a8ab13a53eeb2778127ec797c8b63f7c8ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e8c7a8ab13a53eeb2778127ec797c8b63f7c8ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e8c7a8ab13a53eeb2778127ec797c8b63f7c8ab/comments", "author": null, "committer": null, "parents": [{"sha": "b3f53799544a53cde36386347fa8c379de66de0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3f53799544a53cde36386347fa8c379de66de0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3f53799544a53cde36386347fa8c379de66de0a"}], "stats": {"total": 126, "additions": 126, "deletions": 0}, "files": [{"sha": "3e6566bf8208289414afa35ed7cb163910908513", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e8c7a8ab13a53eeb2778127ec797c8b63f7c8ab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e8c7a8ab13a53eeb2778127ec797c8b63f7c8ab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8e8c7a8ab13a53eeb2778127ec797c8b63f7c8ab", "patch": "@@ -1,3 +1,7 @@\n+2014-10-24  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vaddl.c: New file.\n+\n 2014-10-24  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vaddhn.c: New file."}, {"sha": "861abec8e7bf7fe5fb8106eace42ed526c7b4f7a", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vaddl.c", "status": "added", "additions": 122, "deletions": 0, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e8c7a8ab13a53eeb2778127ec797c8b63f7c8ab/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvaddl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e8c7a8ab13a53eeb2778127ec797c8b63f7c8ab/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvaddl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvaddl.c?ref=8e8c7a8ab13a53eeb2778127ec797c8b63f7c8ab", "patch": "@@ -0,0 +1,122 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,64,1) [] = { 0x3333333333333333 };\n+VECT_VAR_DECL(expected,uint,8,8) [] = { 0x3, 0x3, 0x3, 0x3,\n+\t\t\t\t\t0x3, 0x3, 0x3, 0x3 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0x37, 0x37, 0x37, 0x37 };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0x3, 0x3 };\n+VECT_VAR_DECL(expected,uint,64,1) [] = { 0x3333333333333333 };\n+VECT_VAR_DECL(expected,poly,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,poly,16,4) [] = { 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,2) [] = { 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,int,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,8) [] = {  0xffe3, 0xffe4, 0xffe5, 0xffe6,\n+\t\t\t\t\t 0xffe7, 0xffe8, 0xffe9, 0xffea };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xffffffe2, 0xffffffe3,\n+\t\t\t\t\t0xffffffe4, 0xffffffe5 };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0xffffffffffffffe0,\n+\t\t\t\t\t0xffffffffffffffe1 };\n+VECT_VAR_DECL(expected,uint,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0x1e3, 0x1e4, 0x1e5, 0x1e6,\n+\t\t\t\t\t 0x1e7, 0x1e8, 0x1e9, 0x1ea };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0x1ffe1, 0x1ffe2,\n+\t\t\t\t\t 0x1ffe3, 0x1ffe4 };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0x1ffffffe0, 0x1ffffffe1 };\n+VECT_VAR_DECL(expected,poly,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t   0x33333333, 0x33333333 };\n+\n+#ifndef INSN_NAME\n+#define INSN_NAME vaddl\n+#define TEST_MSG \"VADDL\"\n+#endif\n+\n+#define FNNAME1(NAME) void exec_ ## NAME (void)\n+#define FNNAME(NAME) FNNAME1(NAME)\n+\n+FNNAME (INSN_NAME)\n+{\n+  /* Basic test: y=vaddl(x1,x2), then store the result.  */\n+#define TEST_VADDL1(INSN, T1, T2, W, W2, N)\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W2, N) =\t\t\t\t\t\\\n+    INSN##_##T2##W(VECT_VAR(vector, T1, W, N),\t\t\t\t\\\n+\t\t   VECT_VAR(vector2, T1, W, N));\t\t\t\\\n+  vst1q_##T2##W2(VECT_VAR(result, T1, W2, N), VECT_VAR(vector_res, T1, W2, N))\n+\n+#define TEST_VADDL(INSN, T1, T2, W, W2, N)\t\\\n+  TEST_VADDL1(INSN, T1, T2, W, W2, N)\n+\n+  DECL_VARIABLE(vector, int, 8, 8);\n+  DECL_VARIABLE(vector, int, 16, 4);\n+  DECL_VARIABLE(vector, int, 32, 2);\n+  DECL_VARIABLE(vector, uint, 8, 8);\n+  DECL_VARIABLE(vector, uint, 16, 4);\n+  DECL_VARIABLE(vector, uint, 32, 2);\n+\n+  DECL_VARIABLE(vector2, int, 8, 8);\n+  DECL_VARIABLE(vector2, int, 16, 4);\n+  DECL_VARIABLE(vector2, int, 32, 2);\n+  DECL_VARIABLE(vector2, uint, 8, 8);\n+  DECL_VARIABLE(vector2, uint, 16, 4);\n+  DECL_VARIABLE(vector2, uint, 32, 2);\n+\n+  DECL_VARIABLE(vector_res, int, 16, 8);\n+  DECL_VARIABLE(vector_res, int, 32, 4);\n+  DECL_VARIABLE(vector_res, int, 64, 2);\n+  DECL_VARIABLE(vector_res, uint, 16, 8);\n+  DECL_VARIABLE(vector_res, uint, 32, 4);\n+  DECL_VARIABLE(vector_res, uint, 64, 2);\n+\n+  clean_results ();\n+\n+  /* Initialize input \"vector\" from \"buffer\".  */\n+  VLOAD(vector, buffer, , int, s, 8, 8);\n+  VLOAD(vector, buffer, , int, s, 16, 4);\n+  VLOAD(vector, buffer, , int, s, 32, 2);\n+  VLOAD(vector, buffer, , uint, u, 8, 8);\n+  VLOAD(vector, buffer, , uint, u, 16, 4);\n+  VLOAD(vector, buffer, , uint, u, 32, 2);\n+\n+  /* Choose init value arbitrarily.  */\n+  VDUP(vector2, , int, s, 8, 8, -13);\n+  VDUP(vector2, , int, s, 16, 4, -14);\n+  VDUP(vector2, , int, s, 32, 2, -16);\n+  VDUP(vector2, , uint, u, 8, 8, 0xf3);\n+  VDUP(vector2, , uint, u, 16, 4, 0xfff1);\n+  VDUP(vector2, , uint, u, 32, 2, 0xfffffff0);\n+\n+  /* Execute the tests.  */\n+  TEST_VADDL(INSN_NAME, int, s, 8, 16, 8);\n+  TEST_VADDL(INSN_NAME, int, s, 16, 32, 4);\n+  TEST_VADDL(INSN_NAME, int, s, 32, 64, 2);\n+  TEST_VADDL(INSN_NAME, uint, u, 8, 16, 8);\n+  TEST_VADDL(INSN_NAME, uint, u, 16, 32, 4);\n+  TEST_VADDL(INSN_NAME, uint, u, 32, 64, 2);\n+\n+  CHECK_RESULTS (TEST_MSG, \"\");\n+}\n+\n+int main (void)\n+{\n+  FNNAME (INSN_NAME);\n+  return 0;\n+}"}]}