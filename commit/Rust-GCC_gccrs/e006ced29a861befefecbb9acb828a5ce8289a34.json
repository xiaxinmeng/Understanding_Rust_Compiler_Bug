{"sha": "e006ced29a861befefecbb9acb828a5ce8289a34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAwNmNlZDI5YTg2MWJlZmVmZWNiYjlhY2I4MjhhNWNlODI4OWEzNA==", "commit": {"author": {"name": "Falk Hueffner", "email": "falk@debian.org", "date": "2003-10-20T07:59:45Z"}, "committer": {"name": "Falk Hueffner", "email": "falk@gcc.gnu.org", "date": "2003-10-20T07:59:45Z"}, "message": "re PR target/12654 (Incorrect comparison code generated for Alpha)\n\n\tPR target/12654\n\t* config/alpha/alpha.c (alpha_emit_conditional_branch): Don't do\n\tcomparison against constant by adjusting the argument except for\n\tEQ and NE.\n\nFrom-SVN: r72696", "tree": {"sha": "63f17f5aeda65008c0cc5ad0b0897006c4dfc4c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63f17f5aeda65008c0cc5ad0b0897006c4dfc4c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e006ced29a861befefecbb9acb828a5ce8289a34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e006ced29a861befefecbb9acb828a5ce8289a34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e006ced29a861befefecbb9acb828a5ce8289a34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e006ced29a861befefecbb9acb828a5ce8289a34/comments", "author": {"login": "falk-hueffner", "id": 2112658, "node_id": "MDQ6VXNlcjIxMTI2NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/2112658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/falk-hueffner", "html_url": "https://github.com/falk-hueffner", "followers_url": "https://api.github.com/users/falk-hueffner/followers", "following_url": "https://api.github.com/users/falk-hueffner/following{/other_user}", "gists_url": "https://api.github.com/users/falk-hueffner/gists{/gist_id}", "starred_url": "https://api.github.com/users/falk-hueffner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/falk-hueffner/subscriptions", "organizations_url": "https://api.github.com/users/falk-hueffner/orgs", "repos_url": "https://api.github.com/users/falk-hueffner/repos", "events_url": "https://api.github.com/users/falk-hueffner/events{/privacy}", "received_events_url": "https://api.github.com/users/falk-hueffner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8b7ebc31f26c15615c810c708f8098c49721df98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b7ebc31f26c15615c810c708f8098c49721df98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b7ebc31f26c15615c810c708f8098c49721df98"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "20a8abcfc97e52ae7bf1d8f06e89f2e6b8fb485d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e006ced29a861befefecbb9acb828a5ce8289a34/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e006ced29a861befefecbb9acb828a5ce8289a34/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e006ced29a861befefecbb9acb828a5ce8289a34", "patch": "@@ -1,3 +1,10 @@\n+2003-10-20  Falk Hueffner  <falk@debian.org>\n+\n+\tPR target/12654\n+\t* config/alpha/alpha.c (alpha_emit_conditional_branch): Don't do\n+\tcomparison against constant by adjusting the argument except for\n+\tEQ and NE.\n+\n 2003-10-19  Mark Mitchell  <mark@codesourcery.com>\n \n \t* config.gcc: Add support for arm926ejs, arm1026ejs, arm1136js,"}, {"sha": "69d996a17cb06efa523148c69a50c393c998b3ba", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e006ced29a861befefecbb9acb828a5ce8289a34/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e006ced29a861befefecbb9acb828a5ce8289a34/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=e006ced29a861befefecbb9acb828a5ce8289a34", "patch": "@@ -3160,10 +3160,10 @@ alpha_emit_conditional_branch (enum rtx_code code)\n \t  if (op1 == const0_rtx)\n \t    cmp_code = NIL, branch_code = code;\n \n-\t  /* We want to use cmpcc/bcc when we can, since there is a zero delay\n-\t     bypass between logicals and br/cmov on EV5.  But we don't want to\n-\t     force valid immediate constants into registers needlessly.  */\n-\t  else if (GET_CODE (op1) == CONST_INT)\n+\t  /* If the constants doesn't fit into an immediate, but can\n+ \t     be generated by lda/ldah, we adjust the argument and\n+ \t     compare against zero, so we can use beq/bne directly.  */\n+\t  else if (GET_CODE (op1) == CONST_INT && (code == EQ || code == NE))\n \t    {\n \t      HOST_WIDE_INT v = INTVAL (op1), n = -v;\n "}, {"sha": "526ca0402f91117b3fd54cd09f507c2898f7e78b", "filename": "gcc/testsuite/gcc.c-torture/execute/20031020-1.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e006ced29a861befefecbb9acb828a5ce8289a34/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20031020-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e006ced29a861befefecbb9acb828a5ce8289a34/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20031020-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20031020-1.c?ref=e006ced29a861befefecbb9acb828a5ce8289a34", "patch": "@@ -0,0 +1,23 @@\n+/* PR target/12654\n+   The Alpha backend tried to do a >= 1024 as (a - 1024) >= 0, which fails\n+   for very large negative values.  */\n+/* Origin: tg@swox.com  */\n+\n+#include <limits.h>\n+\n+extern void abort (void);\n+\n+void __attribute__((noinline))\n+foo (long x)\n+{\n+  if (x >= 1024)\n+    abort ();\n+}\n+\n+int\n+main ()\n+{\n+  foo (LONG_MIN);\n+  foo (LONG_MIN + 10000);\n+  return 0;\n+}"}]}