{"sha": "ea37206decb6b4df127e65af206c58e6fc3ae60a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEzNzIwNmRlY2I2YjRkZjEyN2U2NWFmMjA2YzU4ZTZmYzNhZTYwYQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-12-07T12:20:44Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-12-07T12:20:44Z"}, "message": "re PR middle-end/90840 (ICE in simplify_subreg, at simplify-rtx.c:6441)\n\n\tPR middle-end/90840\n\t* expr.c (expand_assignment): In the case of a CONCAT on the LHS, make\n\tsure to pass a valid inner mode in calls to simplify_gen_subreg.\n\nFrom-SVN: r279076", "tree": {"sha": "9b18614f9e99a9c95e508acbf32a4e3be29cd637", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b18614f9e99a9c95e508acbf32a4e3be29cd637"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea37206decb6b4df127e65af206c58e6fc3ae60a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea37206decb6b4df127e65af206c58e6fc3ae60a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea37206decb6b4df127e65af206c58e6fc3ae60a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea37206decb6b4df127e65af206c58e6fc3ae60a/comments", "author": null, "committer": null, "parents": [{"sha": "9c81750c5bedd7883182ee2684a012c6210ebe1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c81750c5bedd7883182ee2684a012c6210ebe1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c81750c5bedd7883182ee2684a012c6210ebe1d"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "582ffe099235ba9b57c55063648f2eaac3a1c68d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea37206decb6b4df127e65af206c58e6fc3ae60a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea37206decb6b4df127e65af206c58e6fc3ae60a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea37206decb6b4df127e65af206c58e6fc3ae60a", "patch": "@@ -1,3 +1,9 @@\n+2019-12-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR middle-end/90840\n+\t* expr.c (expand_assignment): In the case of a CONCAT on the LHS, make\n+\tsure to pass a valid inner mode in calls to simplify_gen_subreg.\n+\n 2019-12-07  Tobias Burnus  <tobias@codesourcery.com>\n \t    David Malcolm  <dmalcolm@redhat.com>\n \t    Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "20aa939709cd3ee64dbc6c588ed8efee19c5b657", "filename": "gcc/expr.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea37206decb6b4df127e65af206c58e6fc3ae60a/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea37206decb6b4df127e65af206c58e6fc3ae60a/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=ea37206decb6b4df127e65af206c58e6fc3ae60a", "patch": "@@ -5285,13 +5285,16 @@ expand_assignment (tree to, tree from, bool nontemporal)\n \t\t}\n \t      else\n \t\t{\n+\t\t  machine_mode from_mode\n+\t\t    = GET_MODE (result) == VOIDmode\n+\t\t      ? TYPE_MODE (TREE_TYPE (from))\n+\t\t      : GET_MODE (result);\n \t\t  rtx from_rtx;\n \t\t  if (MEM_P (result))\n \t\t    from_rtx = change_address (result, to_mode, NULL_RTX);\n \t\t  else\n \t\t    from_rtx\n-\t\t      = simplify_gen_subreg (to_mode, result,\n-\t\t\t\t\t     TYPE_MODE (TREE_TYPE (from)), 0);\n+\t\t      = simplify_gen_subreg (to_mode, result, from_mode, 0);\n \t\t  if (from_rtx)\n \t\t    {\n \t\t      emit_move_insn (XEXP (to_rtx, 0),\n@@ -5303,12 +5306,9 @@ expand_assignment (tree to, tree from, bool nontemporal)\n \t\t    {\n \t\t      to_mode = GET_MODE_INNER (to_mode);\n \t\t      rtx from_real\n-\t\t\t= simplify_gen_subreg (to_mode, result,\n-\t\t\t\t\t       TYPE_MODE (TREE_TYPE (from)),\n-\t\t\t\t\t       0);\n+\t\t\t= simplify_gen_subreg (to_mode, result, from_mode, 0);\n \t\t      rtx from_imag\n-\t\t\t= simplify_gen_subreg (to_mode, result,\n-\t\t\t\t\t       TYPE_MODE (TREE_TYPE (from)),\n+\t\t\t= simplify_gen_subreg (to_mode, result, from_mode,\n \t\t\t\t\t       GET_MODE_SIZE (to_mode));\n \t\t      if (!from_real || !from_imag)\n \t\t\tgoto concat_store_slow;"}]}