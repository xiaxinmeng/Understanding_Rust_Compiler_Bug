{"sha": "053d3344d411a28cb7d59ea924e7e81caa0255e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUzZDMzNDRkNDExYTI4Y2I3ZDU5ZWE5MjRlN2U4MWNhYTAyNTVlOA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2002-04-03T23:55:22Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2002-04-03T23:55:22Z"}, "message": "cris.c (cris_target_asm_function_prologue): Cast uses of PIC_OFFSET_TABLE_REGNUM to int to silence warnings.\n\n\t* config/cris/cris.c (cris_target_asm_function_prologue): Cast\n\tuses of PIC_OFFSET_TABLE_REGNUM to int to silence warnings.\n\t(cris_target_asm_function_epilogue): Ditto.\n\t(cris_initial_frame_pointer_offset): Ditto.\n\t(cris_simple_epilogue): Ditto.\n\t(cris_expand_builtin_va_arg): Variable-size types come in\n\tby-reference.\n\nFrom-SVN: r51825", "tree": {"sha": "931bc4ff09b1b36075cdcb723633e0f1da2bcd32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/931bc4ff09b1b36075cdcb723633e0f1da2bcd32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/053d3344d411a28cb7d59ea924e7e81caa0255e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/053d3344d411a28cb7d59ea924e7e81caa0255e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/053d3344d411a28cb7d59ea924e7e81caa0255e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/053d3344d411a28cb7d59ea924e7e81caa0255e8/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "61ab52602318de76659b6916ae3d937d57a32adb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61ab52602318de76659b6916ae3d937d57a32adb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61ab52602318de76659b6916ae3d937d57a32adb"}], "stats": {"total": 62, "additions": 37, "deletions": 25}, "files": [{"sha": "ce125acd123a5d29d263c4746b24a601d6c090c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053d3344d411a28cb7d59ea924e7e81caa0255e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053d3344d411a28cb7d59ea924e7e81caa0255e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=053d3344d411a28cb7d59ea924e7e81caa0255e8", "patch": "@@ -1,3 +1,13 @@\n+2002-04-04  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* config/cris/cris.c (cris_target_asm_function_prologue): Cast\n+\tuses of PIC_OFFSET_TABLE_REGNUM to int to silence warnings.\n+\t(cris_target_asm_function_epilogue): Ditto.\n+\t(cris_initial_frame_pointer_offset): Ditto.\n+\t(cris_simple_epilogue): Ditto.\n+\t(cris_expand_builtin_va_arg): Variable-size types come in\n+\tby-reference.\n+\n 2002-04-03  David S. Miller  <davem@redhat.com>\n \n \t* config/sparc/crtfastmath.c (FPRS_NS): Get it right for"}, {"sha": "ff0c52af008e25af31f86fe94c7e1ce1d0afe321", "filename": "gcc/config/cris/cris.c", "status": "modified", "additions": 27, "deletions": 25, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053d3344d411a28cb7d59ea924e7e81caa0255e8/gcc%2Fconfig%2Fcris%2Fcris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053d3344d411a28cb7d59ea924e7e81caa0255e8/gcc%2Fconfig%2Fcris%2Fcris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.c?ref=053d3344d411a28cb7d59ea924e7e81caa0255e8", "patch": "@@ -711,7 +711,7 @@ cris_target_asm_function_prologue (file, size)\n     {\n       if ((((regs_ever_live[regno]\n \t     && !call_used_regs[regno])\n-\t    || (regno == PIC_OFFSET_TABLE_REGNUM\n+\t    || (regno == (int) PIC_OFFSET_TABLE_REGNUM\n \t\t&& (current_function_uses_pic_offset_table\n \t\t    /* It is saved anyway, if there would be a gap.  */\n \t\t    || (flag_pic\n@@ -1043,7 +1043,7 @@ cris_target_asm_function_epilogue (file, size)\n        regno++)\n     if ((((regs_ever_live[regno]\n \t   && !call_used_regs[regno])\n-\t  || (regno == PIC_OFFSET_TABLE_REGNUM\n+\t  || (regno == (int) PIC_OFFSET_TABLE_REGNUM\n \t      && (current_function_uses_pic_offset_table\n \t\t  /* It is saved anyway, if there would be a gap.  */\n \t\t  || (flag_pic\n@@ -1069,7 +1069,7 @@ cris_target_asm_function_epilogue (file, size)\n        regno--)\n     if ((((regs_ever_live[regno]\n \t   && !call_used_regs[regno])\n-\t  || (regno == PIC_OFFSET_TABLE_REGNUM\n+\t  || (regno == (int) PIC_OFFSET_TABLE_REGNUM\n \t      && (current_function_uses_pic_offset_table\n \t\t  /* It is saved anyway, if there would be a gap.  */\n \t\t  || (flag_pic\n@@ -1659,7 +1659,7 @@ cris_initial_frame_pointer_offset ()\n   for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n     if ((((regs_ever_live[regno]\n \t   && !call_used_regs[regno])\n-\t  || (regno == PIC_OFFSET_TABLE_REGNUM\n+\t  || (regno == (int) PIC_OFFSET_TABLE_REGNUM\n \t      && (current_function_uses_pic_offset_table\n \t\t  /* It is saved anyway, if there would be a gap.  */\n \t\t  || (flag_pic\n@@ -2051,7 +2051,7 @@ cris_simple_epilogue ()\n      in the delay-slot of the \"ret\".  */\n   for (regno = 0; regno < reglimit; regno++)\n     if ((regs_ever_live[regno] && ! call_used_regs[regno])\n-\t|| (regno == PIC_OFFSET_TABLE_REGNUM\n+\t|| (regno == (int) PIC_OFFSET_TABLE_REGNUM\n \t    && (current_function_uses_pic_offset_table\n \t\t/* It is saved anyway, if there would be a gap.  */\n \t\t|| (flag_pic\n@@ -2626,7 +2626,7 @@ cris_expand_builtin_va_arg (valist, type)\n   if (type == error_mark_node\n       || (type_size = TYPE_SIZE_UNIT (TYPE_MAIN_VARIANT (type))) == NULL\n       || TREE_OVERFLOW (type_size))\n-    /* Presumable an error; the size isn't computable.  A message has\n+    /* Presumably an error; the size isn't computable.  A message has\n        supposedly been emitted elsewhere.  */\n     rounded_size = size_zero_node;\n   else\n@@ -2640,28 +2640,30 @@ cris_expand_builtin_va_arg (valist, type)\n \n   if (!integer_zerop (rounded_size))\n     {\n-      /* Check if the type is passed by value or by reference.  This test must\n-\t be different than the call-site test and be done at run-time:\n-\t gcc.c-torture/execute/20020307-2.c.  Hence the tree stuff.\n-\n-\t Values up to 8 bytes are passed by-value, padded to register-size\n-\t (4 bytes).  Larger values are passed by-reference.  */\n+      /* Check if the type is passed by value or by reference.  Values up\n+\t to 8 bytes are passed by-value, padded to register-size (4\n+\t bytes).  Larger values and varying-size types are passed\n+\t by reference.  */\n       passed_size\n-\t= fold (build (COND_EXPR, sizetype,\n-\t\t       fold (build (GT_EXPR, sizetype,\n-\t\t\t\t    rounded_size,\n-\t\t\t\t    size8)),\n-\t\t       size4,\n-\t\t       rounded_size));\n+\t= (!really_constant_p (type_size)\n+\t   ? size4\n+\t   : fold (build (COND_EXPR, sizetype,\n+\t\t\t  fold (build (GT_EXPR, sizetype,\n+\t\t\t\t       rounded_size,\n+\t\t\t\t       size8)),\n+\t\t\t  size4,\n+\t\t\t  rounded_size)));\n \n       addr_tree\n-       = fold (build (COND_EXPR, TREE_TYPE (addr_tree),\n-\t\t      fold (build (GT_EXPR, sizetype,\n-\t\t\t\t   rounded_size,\n-\t\t\t\t   size8)),\n-\t\t      build1 (INDIRECT_REF, build_pointer_type (type),\n-\t\t\t      addr_tree),\n-\t\t      addr_tree));\n+\t= (!really_constant_p (type_size)\n+\t   ? build1 (INDIRECT_REF, build_pointer_type (type), addr_tree)\n+\t   : fold (build (COND_EXPR, TREE_TYPE (addr_tree),\n+\t\t\t  fold (build (GT_EXPR, sizetype,\n+\t\t\t\t       rounded_size,\n+\t\t\t\t       size8)),\n+\t\t\t  build1 (INDIRECT_REF, build_pointer_type (type),\n+\t\t\t\t  addr_tree),\n+\t\t\t  addr_tree)));\n     }\n \n   addr = expand_expr (addr_tree, NULL_RTX, Pmode, EXPAND_NORMAL);"}]}