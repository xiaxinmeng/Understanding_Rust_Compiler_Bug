{"sha": "24b830b6cde4ed227661d29ba985565f23a2bf96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRiODMwYjZjZGU0ZWQyMjc2NjFkMjliYTk4NTU2NWYyM2EyYmY5Ng==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2018-03-08T09:26:24Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-03-08T09:26:24Z"}, "message": "Fix ifunc detection in target-supports.exp file.\n\n2018-03-08  Thomas Schwinge  <thomas@codesourcery.com>\n\n\t* lib/target-supports.exp: Do not return zero from a ifunc\n\tfunction.\n\nFrom-SVN: r258362", "tree": {"sha": "43d9d3376d6d71d9038c32e6706b43d8a196da50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43d9d3376d6d71d9038c32e6706b43d8a196da50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24b830b6cde4ed227661d29ba985565f23a2bf96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24b830b6cde4ed227661d29ba985565f23a2bf96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24b830b6cde4ed227661d29ba985565f23a2bf96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24b830b6cde4ed227661d29ba985565f23a2bf96/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de341bf0fbfddec8a7c0711ac5503a55f7aaf6dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de341bf0fbfddec8a7c0711ac5503a55f7aaf6dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de341bf0fbfddec8a7c0711ac5503a55f7aaf6dc"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "3d12b6b2a471a87dbbc8383436af1c94c89ea8df", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24b830b6cde4ed227661d29ba985565f23a2bf96/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24b830b6cde4ed227661d29ba985565f23a2bf96/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=24b830b6cde4ed227661d29ba985565f23a2bf96", "patch": "@@ -1,3 +1,8 @@\n+2018-03-08  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* lib/target-supports.exp: Do not return zero from a ifunc\n+\tfunction.\n+\n 2018-03-08  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/84746"}, {"sha": "a3ce690efa8dfea06bfa3d3ff72ea48bd9afe7a0", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24b830b6cde4ed227661d29ba985565f23a2bf96/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24b830b6cde4ed227661d29ba985565f23a2bf96/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=24b830b6cde4ed227661d29ba985565f23a2bf96", "patch": "@@ -448,8 +448,9 @@ proc check_ifunc_available { } {\n \t#ifdef __cplusplus\n \textern \"C\" {\n \t#endif\n-\ttypedef void F (void);\n-\tF* g (void) { return 0; }\n+\textern void f_ ();\n+ \ttypedef void F (void);\n+\tF* g (void) { return &f_; }\t\n \tvoid f () __attribute__ ((ifunc (\"g\")));\n \t#ifdef __cplusplus\n \t}"}]}