{"sha": "b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBjZDUwZmRjM2MyYzhhMDIyMWExYzdkODM3OWY0YzdlMTVlNjIzZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T10:11:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T10:11:06Z"}, "message": "[multiple changes]\n\n2017-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* checks.adb (Insert_Valid_Check): Do not generate\n\ta validity check when inside a generic.\n\n2017-04-25  Yannick Moy  <moy@adacore.com>\n\n\t* sem_res.adb (Resolve_Type_Conversion): Fix bad logic.\n\n2017-04-25  Arnaud Charlet  <charlet@adacore.com>\n\n\t* snames.ads-tmpl (Snames): More names for detecting predefined\n\tpotentially blocking subprograms.\n\n2017-04-25  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pre_Post_Condition): The rules\n\tconcerning inheritance of class-wide preconditions do not apply\n\tto postconditions.\n\n2017-04-25  Bob Duff  <duff@adacore.com>\n\n\t* s-ficobl.ads: Minor comment fix.\n\nFrom-SVN: r247174", "tree": {"sha": "d3a8805b202977065c048d4fa21cf0d92f1e0bc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3a8805b202977065c048d4fa21cf0d92f1e0bc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f/comments", "author": null, "committer": null, "parents": [{"sha": "d8ee014f291458a3518ea516619e75faf24aca17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8ee014f291458a3518ea516619e75faf24aca17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8ee014f291458a3518ea516619e75faf24aca17"}], "stats": {"total": 55, "additions": 44, "deletions": 11}, "files": [{"sha": "a3ceadb32046cf1b69411c5947e96f7b8f91bb9f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f", "patch": "@@ -1,3 +1,27 @@\n+2017-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* checks.adb (Insert_Valid_Check): Do not generate\n+\ta validity check when inside a generic.\n+\n+2017-04-25  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Type_Conversion): Fix bad logic.\n+\n+2017-04-25  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* snames.ads-tmpl (Snames): More names for detecting predefined\n+\tpotentially blocking subprograms.\n+\n+2017-04-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pre_Post_Condition): The rules\n+\tconcerning inheritance of class-wide preconditions do not apply\n+\tto postconditions.\n+\n+2017-04-25  Bob Duff  <duff@adacore.com>\n+\n+\t* s-ficobl.ads: Minor comment fix.\n+\n 2017-04-25  Yannick Moy  <moy@adacore.com>\n \n \t* checks.adb (Apply_Scalar_Range_Check): Analyze precisely"}, {"sha": "61fb006f1ffe105f499e9dd0f10d64f6cf5624e1", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f", "patch": "@@ -7233,27 +7233,31 @@ package body Checks is\n         or else Expr_Known_Valid (Expr)\n       then\n          return;\n-      end if;\n \n       --  Do not insert checks within a predicate function. This will arise\n       --  if the current unit and the predicate function are being compiled\n       --  with validity checks enabled.\n \n-      if Present (Predicate_Function (Typ))\n+      elsif Present (Predicate_Function (Typ))\n         and then Current_Scope = Predicate_Function (Typ)\n       then\n          return;\n-      end if;\n \n       --  If the expression is a packed component of a modular type of the\n       --  right size, the data is always valid.\n \n-      if Nkind (Expr) = N_Selected_Component\n+      elsif Nkind (Expr) = N_Selected_Component\n         and then Present (Component_Clause (Entity (Selector_Name (Expr))))\n         and then Is_Modular_Integer_Type (Typ)\n         and then Modulus (Typ) = 2 ** Esize (Entity (Selector_Name (Expr)))\n       then\n          return;\n+\n+      --  Do not generate a validity check when inside a generic unit as this\n+      --  is an expansion activity.\n+\n+      elsif Inside_A_Generic then\n+         return;\n       end if;\n \n       --  If we have a checked conversion, then validity check applies to"}, {"sha": "a95c03924194fae65f8542bcccff7f2220368503", "filename": "gcc/ada/s-ficobl.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f/gcc%2Fada%2Fs-ficobl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f/gcc%2Fada%2Fs-ficobl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-ficobl.ads?ref=b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 1992-2014, Free Software Foundation, Inc.       --\n+--            Copyright (C) 1992-2016, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -89,7 +89,7 @@ package System.File_Control_Block is\n       Name : Pstring;\n       --  A pointer to the file name. The file name is null for temporary\n       --  files, and also for standard files (stdin, stdout, stderr). The\n-      --  name is always null-terminated if it is non-null.\n+      --  name is always NUL-terminated if it is non-null.\n \n       Encoding : System.CRTL.Filename_Encoding;\n       --  Encoding used to specified the filename"}, {"sha": "f549198c1262ff9460830ba042ada0e1e14f4f54", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f", "patch": "@@ -4417,6 +4417,7 @@ package body Sem_Prag is\n \n             begin\n                if Class_Present (N)\n+                 and then Pragma_Name (N) = Name_Precondition\n                  and then Present (Overridden_Operation (E))\n                  and then not Inherits_Class_Wide_Pre (E)\n                then"}, {"sha": "b3e2c285e494ed0f42dd291fc9c163f47cd0259b", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f", "patch": "@@ -11055,17 +11055,17 @@ package body Sem_Res is\n \n       --  If at this stage we have a real to integer conversion, make sure that\n       --  the Do_Range_Check flag is set, because such conversions in general\n-      --  need a range check. We only need this if expansion is off, or we are\n-      --  in GNATprove mode and the conversion if from fixed-point to integer\n+      --  need a range check. We only need this if expansion is off.\n+      --  In GNATprove mode, we only do that when converting from fixed-point\n       --  (as floating-point to integer conversions are now handled in\n       --  GNATprove mode).\n \n       if Nkind (N) = N_Type_Conversion\n         and then not Expander_Active\n         and then Is_Integer_Type (Target_Typ)\n-        and then (Is_Real_Type (Operand_Typ)\n-                   or else (GNATprove_Mode\n-                             and then Is_Fixed_Point_Type (Operand_Typ)))\n+        and then (Is_Fixed_Point_Type (Operand_Typ)\n+                   or else (not GNATprove_Mode\n+                             and then Is_Floating_Point_Type (Operand_Typ)))\n       then\n          Set_Do_Range_Check (Operand);\n       end if;"}, {"sha": "bfa5e30311d88e63e53e1fa85065977e6f02e984", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=b0cd50fdc3c2c8a0221a1c7d8379f4c7e15e623f", "patch": "@@ -275,14 +275,18 @@ package Snames is\n    Name_EDF                            : constant Name_Id := N + $;\n    Name_Reset_Standard_Files           : constant Name_Id := N + $;\n    Name_Sequential_IO                  : constant Name_Id := N + $;\n+   Name_Strings                        : constant Name_Id := N + $;\n    Name_Streams                        : constant Name_Id := N + $;\n    Name_Suspend_Until_True             : constant Name_Id := N + $;\n    Name_Suspend_Until_True_And_Set_Deadline : constant Name_Id := N + $;\n    Name_Synchronous_Barriers           : constant Name_Id := N + $;\n    Name_Task_Identification            : constant Name_Id := N + $;\n    Name_Text_Streams                   : constant Name_Id := N + $;\n+   Name_Unbounded                      : constant Name_Id := N + $;\n    Name_Unbounded_IO                   : constant Name_Id := N + $;\n    Name_Wait_For_Release               : constant Name_Id := N + $;\n+   Name_Wide_Unbounded                 : constant Name_Id := N + $;\n+   Name_Wide_Wide_Unbounded            : constant Name_Id := N + $;\n    Name_Yield                          : constant Name_Id := N + $;\n \n    --  Names of implementations of the distributed systems annex"}]}