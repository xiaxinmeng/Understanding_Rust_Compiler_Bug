{"sha": "47b1e19b64b76712bd3cf26c39b46d0937347f19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdiMWUxOWI2NGI3NjcxMmJkM2NmMjZjMzliNDZkMDkzNzM0N2YxOQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2000-07-30T18:13:10Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2000-07-30T18:13:10Z"}, "message": "simplify-rtx.c (simplify_relational_operation): Verify that mode == VOIDmode implies both operands to be VOIDmode.\n\n\n\t* simplify-rtx.c (simplify_relational_operation): Verify that mode ==\n\tVOIDmode implies both operands to be VOIDmode.\n\t(simplify_ternary_operation): Compute properly the mode of comparison.\n\t* combine.c (combine_simplify_rtx): Likewise.\n\nFrom-SVN: r35343", "tree": {"sha": "3ff42cba89273f5cd54afab8421fa8d28be2414f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ff42cba89273f5cd54afab8421fa8d28be2414f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47b1e19b64b76712bd3cf26c39b46d0937347f19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b1e19b64b76712bd3cf26c39b46d0937347f19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47b1e19b64b76712bd3cf26c39b46d0937347f19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b1e19b64b76712bd3cf26c39b46d0937347f19/comments", "author": null, "committer": null, "parents": [{"sha": "c34d53740af2d85e6f9bfbd1f7593aba0ea1cae4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c34d53740af2d85e6f9bfbd1f7593aba0ea1cae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c34d53740af2d85e6f9bfbd1f7593aba0ea1cae4"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "84159f72d89de40533d7001189f72a7ed1938e1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b1e19b64b76712bd3cf26c39b46d0937347f19/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b1e19b64b76712bd3cf26c39b46d0937347f19/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47b1e19b64b76712bd3cf26c39b46d0937347f19", "patch": "@@ -1,3 +1,10 @@\n+Sun Jul 30 20:08:37 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n+\n+\t* simplify-rtx.c (simplify_relational_operation): Verify that mode ==\n+\tVOIDmode implies both operands to be VOIDmode.\n+\t(simplify_ternary_operation): Compute properly the mode of comparison.\n+\t* combine.c (combine_simplify_rtx): Likewise.\n+\n 2000-07-25  Michael Hayes  <mph@paradise.net.nz>\n \n \t* basic-block.h (struct loops): New field rc_order."}, {"sha": "627f4a18758ed43ca9401f8aca3d84e337ab011c", "filename": "gcc/combine.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b1e19b64b76712bd3cf26c39b46d0937347f19/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b1e19b64b76712bd3cf26c39b46d0937347f19/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=47b1e19b64b76712bd3cf26c39b46d0937347f19", "patch": "@@ -3639,8 +3639,13 @@ combine_simplify_rtx (x, op0_mode, last, in_dest)\n       temp = simplify_unary_operation (code, mode, XEXP (x, 0), op0_mode);\n       break;\n     case '<':\n-      temp = simplify_relational_operation (code, op0_mode,\n-\t\t\t\t\t    XEXP (x, 0), XEXP (x, 1));\n+      {\n+\tenum machine_mode cmp_mode = GET_MODE (XEXP (x, 0));\n+\tif (cmp_mode == VOIDmode)\n+\t  cmp_mode = GET_MODE (XEXP (x, 1));\n+\ttemp = simplify_relational_operation (code, cmp_mode,\n+\t\t\t\t\t      XEXP (x, 0), XEXP (x, 1));\n+      }\n #ifdef FLOAT_STORE_FLAG_VALUE\n       if (temp != 0 && GET_MODE_CLASS (mode) == MODE_FLOAT)\n \t{"}, {"sha": "02af1d002df2e6d35e0b598eb80d07341f15f9c1", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b1e19b64b76712bd3cf26c39b46d0937347f19/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b1e19b64b76712bd3cf26c39b46d0937347f19/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=47b1e19b64b76712bd3cf26c39b46d0937347f19", "patch": "@@ -1691,6 +1691,11 @@ simplify_relational_operation (code, mode, op0, op1)\n   int equal, op0lt, op0ltu, op1lt, op1ltu;\n   rtx tem;\n \n+  if (mode == VOIDmode\n+      && (GET_MODE (op0) != VOIDmode\n+\t  || GET_MODE (op1) != VOIDmode))\n+    abort();\n+\n   /* If op0 is a compare, extract the comparison arguments from it.  */\n   if (GET_CODE (op0) == COMPARE && op1 == const0_rtx)\n     op1 = XEXP (op0, 1), op0 = XEXP (op0, 0);\n@@ -1980,8 +1985,11 @@ simplify_ternary_operation (code, mode, op0_mode, op0, op1, op2)\n \treturn op2;\n       else if (GET_RTX_CLASS (GET_CODE (op0)) == '<' && ! side_effects_p (op0))\n \t{\n+\t  enum machine_mode cmp_mode = (GET_MODE (XEXP (op0, 0)) == VOIDmode\n+\t\t\t\t\t? GET_MODE (XEXP (op0, 1))\n+\t\t\t\t\t: GET_MODE (XEXP (op0, 0)));\n \t  rtx temp\n-\t     = simplify_relational_operation (GET_CODE (op0), op0_mode,\n+\t     = simplify_relational_operation (GET_CODE (op0), cmp_mode,\n \t\t\t\t\t      XEXP (op0, 0), XEXP (op0, 1));\n \n \t  /* See if any simplifications were possible.  */"}]}