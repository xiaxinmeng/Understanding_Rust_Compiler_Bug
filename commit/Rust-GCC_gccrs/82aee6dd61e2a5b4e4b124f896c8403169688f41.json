{"sha": "82aee6dd61e2a5b4e4b124f896c8403169688f41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJhZWU2ZGQ2MWUyYTViNGU0YjEyNGY4OTZjODQwMzE2OTY4OGY0MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-02-06T21:14:19Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-02-07T13:51:12Z"}, "message": "c++: Fix ICE on nonsense requires-clause.\n\nHere we were swallowing all the syntax errors by parsing tentatively, and\nreturning error_mark_node without ever actually giving an error.  Fixed by\nusing save_tokens/rollback_tokens instead.\n\n\tPR c++/92517\n\t* parser.c (cp_parser_constraint_primary_expression): Do the main\n\tparse non-tentatively.", "tree": {"sha": "d45df0fc330ed4a44c5ac31be47f4b660b0b37e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d45df0fc330ed4a44c5ac31be47f4b660b0b37e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82aee6dd61e2a5b4e4b124f896c8403169688f41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82aee6dd61e2a5b4e4b124f896c8403169688f41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82aee6dd61e2a5b4e4b124f896c8403169688f41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82aee6dd61e2a5b4e4b124f896c8403169688f41/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c7a03bc360c3511fae3747a71e579e9fd0824f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c7a03bc360c3511fae3747a71e579e9fd0824f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c7a03bc360c3511fae3747a71e579e9fd0824f9"}], "stats": {"total": 32, "additions": 22, "deletions": 10}, "files": [{"sha": "df7d2ca0587c6b0d2f5082c80a10d74bbb4f98c8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82aee6dd61e2a5b4e4b124f896c8403169688f41/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82aee6dd61e2a5b4e4b124f896c8403169688f41/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=82aee6dd61e2a5b4e4b124f896c8403169688f41", "patch": "@@ -1,3 +1,9 @@\n+2020-02-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/92517\n+\t* parser.c (cp_parser_constraint_primary_expression): Do the main\n+\tparse non-tentatively.\n+\n 2020-02-06  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/93597 - ICE with lambda in operator function."}, {"sha": "d4c9523289fac830d434dab315e12652e7d8f9a3", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82aee6dd61e2a5b4e4b124f896c8403169688f41/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82aee6dd61e2a5b4e4b124f896c8403169688f41/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=82aee6dd61e2a5b4e4b124f896c8403169688f41", "patch": "@@ -27478,7 +27478,7 @@ cp_parser_constraint_primary_expression (cp_parser *parser, bool lambda_p)\n       return e;\n     }\n \n-  cp_parser_parse_tentatively (parser);\n+  cp_lexer_save_tokens (parser->lexer);\n   cp_id_kind idk;\n   location_t loc = input_location;\n   cp_expr expr = cp_parser_primary_expression (parser,\n@@ -27494,19 +27494,16 @@ cp_parser_constraint_primary_expression (cp_parser *parser, bool lambda_p)\n       /* The primary-expression could be part of an unenclosed non-logical\n \t compound expression.  */\n       pce = cp_parser_constraint_requires_parens (parser, lambda_p);\n-      if (pce != pce_ok)\n-\tcp_parser_simulate_error (parser);\n-      else\n-\texpr = finish_constraint_primary_expr (expr);\n     }\n-  if (cp_parser_parse_definitely (parser))\n-    return expr;\n-  if (expr == error_mark_node)\n-    return error_mark_node;\n+  if (pce == pce_ok)\n+    {\n+      cp_lexer_commit_tokens (parser->lexer);\n+      return finish_constraint_primary_expr (expr);\n+    }\n \n   /* Retry the parse at a lower precedence. If that succeeds, diagnose the\n      error, but return the expression as if it were valid.  */\n-  gcc_assert (pce != pce_ok);\n+  cp_lexer_rollback_tokens (parser->lexer);\n   cp_parser_parse_tentatively (parser);\n   if (pce == pce_maybe_operator)\n     expr = cp_parser_assignment_expression (parser, NULL, false, false);"}, {"sha": "0a47682c456e263156d1c77dfaa57a24e06b3dc0", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-syntax1.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82aee6dd61e2a5b4e4b124f896c8403169688f41/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-syntax1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82aee6dd61e2a5b4e4b124f896c8403169688f41/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-syntax1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-syntax1.C?ref=82aee6dd61e2a5b4e4b124f896c8403169688f41", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/92517\n+// { dg-do compile { target concepts } }\n+\n+template <typename T>\n+concept C = true;\n+\n+template<int I>\n+requires C decltype<I>\t\t// { dg-error \"\" }\n+void f() {}"}]}