{"sha": "fd5e7009f67a8fbbb80019d60f772124699b5205", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ1ZTcwMDlmNjdhOGZiYmI4MDAxOWQ2MGY3NzIxMjQ2OTliNTIwNQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-06-10T18:53:21Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-06-10T18:53:21Z"}, "message": "gcc.c (do_spec_1): Allow leading text in version string.\n\n\t* gcc.c (do_spec_1): Allow leading text in version string.\n\tDelete support for default minor number = 0.\n\nFrom-SVN: r12264", "tree": {"sha": "3a1551ed105201e3e89266e838562a4fcf0b4bb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a1551ed105201e3e89266e838562a4fcf0b4bb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd5e7009f67a8fbbb80019d60f772124699b5205", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd5e7009f67a8fbbb80019d60f772124699b5205", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd5e7009f67a8fbbb80019d60f772124699b5205", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd5e7009f67a8fbbb80019d60f772124699b5205/comments", "author": null, "committer": null, "parents": [{"sha": "8cfe18d616b72d9d8bf9ebe40c9a1c10be9f3f24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cfe18d616b72d9d8bf9ebe40c9a1c10be9f3f24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cfe18d616b72d9d8bf9ebe40c9a1c10be9f3f24"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "16a8db49a538aaa5db3bb40859ced2e6bacadcfd", "filename": "gcc/gcc.c", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd5e7009f67a8fbbb80019d60f772124699b5205/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd5e7009f67a8fbbb80019d60f772124699b5205/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=fd5e7009f67a8fbbb80019d60f772124699b5205", "patch": "@@ -3735,26 +3735,35 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \t    {\n \t      int c1 = *p++;  /* Select first or second version number.  */\n \t      char *v = compiler_version;\n-\t      char *q, *copy;\n+\t      char *q;\n+\n+\t      /* The format of the version string is\n+\t\t ([^0-9]*-)?[0-9]+[.][0-9]+([.][0-9]+)?([- ].*)?  */\n+\n+\t      /* Ignore leading non-digits.  i.e. \"foo-\" in \"foo-2.7.2\".  */\n+\t      while (! isdigit (*v))\n+\t\tv++;\n+\t      if (v > compiler_version && v[-1] != '-')\n+\t\tabort ();\n+\n \t      /* If desired, advance to second version number.  */\n \t      if (c1 == '2')\n \t\t{\n \t\t  /* Set V after the first period.  */\n-\t\t  while (*v != 0 && *v != ' ' && *v != '.')\n-\t\t    v++;\n-\t\t  if (*v == '.')\n+\t\t  while (isdigit (*v))\n \t\t    v++;\n+\t\t  if (*v != '.')\n+\t\t    abort ();\n+\t\t  v++;\n \t\t}\n+\n \t      /* Set Q at the next period or at the end.  */\n \t      q = v;\n-\t      while (*q != 0 && *q != ' ' && *q != '.')\n+\t      while (isdigit (*q))\n \t\tq++;\n-\t      /* Empty string means zero.  */\n-\t      if (v == q)\n-\t\t{\n-\t\t  v = \"0\";\n-\t\t  q = v + 1;\n-\t\t}\n+\t      if (*q != 0 && *q != ' ' && *q != '.' && *q != '-')\n+\t\tabort ();\n+\n \t      /* Put that part into the command.  */\n \t      obstack_grow (&obstack, v, q - v);\n \t      arg_going = 1;"}]}