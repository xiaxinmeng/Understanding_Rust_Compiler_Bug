{"sha": "32501d71a9e686c148171671d18e510aa719038c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI1MDFkNzFhOWU2ODZjMTQ4MTcxNjcxZDE4ZTUxMGFhNzE5MDM4Yw==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2019-08-20T09:49:37Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-20T09:49:37Z"}, "message": "[Ada] Enable delta_aggregate only in Ada 2020 mode\n\nIf the delta_aggregate feature is used, the -gnat2020 or -gnatX switch\nmust be given.\n\nThe following test must get an error if neither\n-gnat2020 nor -gnatX is specified:\n\ngcc -c delta_aggregate.ads -gnat2012\n\ndelta_aggregate.ads:4:18: delta_aggregate is an Ada 202x feature\ndelta_aggregate.ads:4:18: compile with -gnatX\n\npackage Delta_Aggregate is\n\n   X : String := \"Hello\";\n   Y : String := (X with delta 1 => 'h');\n\nend Delta_Aggregate;\n\n2019-08-20  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* par-ch4.adb: Minor wording change in error messages.\n\t* sem_aggr.adb (Resolve_Delta_Aggregate): Emit an error for Ada\n\tversions prior to Ada 2020.\n\nFrom-SVN: r274729", "tree": {"sha": "2016e703ea870b06d2366330f211f5ae4fba4e6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2016e703ea870b06d2366330f211f5ae4fba4e6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32501d71a9e686c148171671d18e510aa719038c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32501d71a9e686c148171671d18e510aa719038c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32501d71a9e686c148171671d18e510aa719038c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32501d71a9e686c148171671d18e510aa719038c/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7e7f0b0a1df83dd65810a057b5ce4d01618d2fa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e7f0b0a1df83dd65810a057b5ce4d01618d2fa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e7f0b0a1df83dd65810a057b5ce4d01618d2fa3"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "af31baf30adf54e49d3daaa18cb7cf58113ca729", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32501d71a9e686c148171671d18e510aa719038c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32501d71a9e686c148171671d18e510aa719038c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=32501d71a9e686c148171671d18e510aa719038c", "patch": "@@ -1,3 +1,9 @@\n+2019-08-20  Bob Duff  <duff@adacore.com>\n+\n+\t* par-ch4.adb: Minor wording change in error messages.\n+\t* sem_aggr.adb (Resolve_Delta_Aggregate): Emit an error for Ada\n+\tversions prior to Ada 2020.\n+\n 2019-08-20  Bob Duff  <duff@adacore.com>\n \n \t* freeze.adb (Is_Atomic_VFA_Aggregate): Make the temp for"}, {"sha": "986d128d933b2300f1098428c4228b5ae926b0f1", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32501d71a9e686c148171671d18e510aa719038c/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32501d71a9e686c148171671d18e510aa719038c/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=32501d71a9e686c148171671d18e510aa719038c", "patch": "@@ -2850,7 +2850,7 @@ package body Ch4 is\n \n             when Tok_At_Sign =>  --  AI12-0125 : target_name\n                if Ada_Version < Ada_2020 then\n-                  Error_Msg_SC (\"target name is an Ada 2020 extension\");\n+                  Error_Msg_SC (\"target name is an Ada 202x feature\");\n                   Error_Msg_SC (\"\\compile with -gnatX\");\n                end if;\n \n@@ -3325,7 +3325,7 @@ package body Ch4 is\n       Set_Expression (Assoc_Node, P_Expression);\n \n       if Ada_Version < Ada_2020 then\n-         Error_Msg_SC (\"iterated component is an Ada 2020 extension\");\n+         Error_Msg_SC (\"iterated component is an Ada 202x feature\");\n          Error_Msg_SC (\"\\compile with -gnatX\");\n       end if;\n "}, {"sha": "bc801215d9511f3bb8a1170e7b8934fd46ae4cd8", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32501d71a9e686c148171671d18e510aa719038c/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32501d71a9e686c148171671d18e510aa719038c/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=32501d71a9e686c148171671d18e510aa719038c", "patch": "@@ -2799,6 +2799,11 @@ package body Sem_Aggr is\n       Base : constant Node_Id := Expression (N);\n \n    begin\n+      if Ada_Version < Ada_2020 then\n+         Error_Msg_N (\"delta_aggregate is an Ada 202x feature\", N);\n+         Error_Msg_N (\"\\compile with -gnatX\", N);\n+      end if;\n+\n       if not Is_Composite_Type (Typ) then\n          Error_Msg_N (\"not a composite type\", N);\n       end if;"}]}