{"sha": "375132991d21ea039aaecd850018a636f240bebb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc1MTMyOTkxZDIxZWEwMzlhYWVjZDg1MDAxOGE2MzZmMjQwYmViYg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-11-25T17:52:21Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-11-25T17:52:21Z"}, "message": "bt-load.c (migrate_btr_defs): Get the key of a heap entry before removing it, not after.\n\n\t* bt-load.c (migrate_btr_defs): Get the key of a heap entry\n\tbefore removing it, not after.\n\nFrom-SVN: r218056", "tree": {"sha": "e279924f3a4ab63249003237e1c968ba9a5b37e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e279924f3a4ab63249003237e1c968ba9a5b37e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/375132991d21ea039aaecd850018a636f240bebb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375132991d21ea039aaecd850018a636f240bebb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/375132991d21ea039aaecd850018a636f240bebb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375132991d21ea039aaecd850018a636f240bebb/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d19f2e385cc27fab1acbe352abeb6cbc0e17572a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d19f2e385cc27fab1acbe352abeb6cbc0e17572a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d19f2e385cc27fab1acbe352abeb6cbc0e17572a"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "cd9d808fb0dbdd2fa99a2e84de701c4a5b5ed758", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375132991d21ea039aaecd850018a636f240bebb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375132991d21ea039aaecd850018a636f240bebb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=375132991d21ea039aaecd850018a636f240bebb", "patch": "@@ -1,3 +1,8 @@\n+2014-11-25  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* bt-load.c (migrate_btr_defs): Get the key of a heap entry\n+\tbefore removing it, not after.\n+\n 2014-11-25  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/mn10300/mn10300.c (mn10300_insert_setlb_lcc): Remove"}, {"sha": "53c4db31847bf1bb2e70b197eafd8bc188b002f7", "filename": "gcc/bt-load.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375132991d21ea039aaecd850018a636f240bebb/gcc%2Fbt-load.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375132991d21ea039aaecd850018a636f240bebb/gcc%2Fbt-load.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbt-load.c?ref=375132991d21ea039aaecd850018a636f240bebb", "patch": "@@ -1434,8 +1434,8 @@ migrate_btr_defs (enum reg_class btr_class, int allow_callee_save)\n \n   while (!all_btr_defs.empty ())\n     {\n-      btr_def def = all_btr_defs.extract_min ();\n       int min_cost = -all_btr_defs.min_key ();\n+      btr_def def = all_btr_defs.extract_min ();\n       if (migrate_btr_def (def, min_cost))\n \t{\n \t  all_btr_defs.insert (-def->cost, def);"}]}