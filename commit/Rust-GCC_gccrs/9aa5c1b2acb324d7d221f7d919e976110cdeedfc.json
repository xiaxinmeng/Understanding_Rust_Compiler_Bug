{"sha": "9aa5c1b2acb324d7d221f7d919e976110cdeedfc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFhNWMxYjJhY2IzMjRkN2QyMjFmN2Q5MTllOTc2MTEwY2RlZWRmYw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2009-01-06T15:04:25Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2009-01-06T15:04:25Z"}, "message": "i386.h (ACCUMULATE_OUTGOING_ARGS): Enable for MSABI\n\n\n\t* i386.h (ACCUMULATE_OUTGOING_ARGS): Enable for MSABI\n\t* i386.c (init_cumulative_args): Disallow calls of MSABI functions when\n\taccumulate outgoing args is off.\n\nCo-Authored-By: Kai Tietz <kai.tietz@onevision.com>\n\nFrom-SVN: r143118", "tree": {"sha": "ddd0047f2295a95e1ee60d5eb419ff46e616fc54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddd0047f2295a95e1ee60d5eb419ff46e616fc54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9aa5c1b2acb324d7d221f7d919e976110cdeedfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aa5c1b2acb324d7d221f7d919e976110cdeedfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aa5c1b2acb324d7d221f7d919e976110cdeedfc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aa5c1b2acb324d7d221f7d919e976110cdeedfc/comments", "author": null, "committer": null, "parents": [{"sha": "f7556aaec3e41bc2314849dbd5de482ebf87a0d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7556aaec3e41bc2314849dbd5de482ebf87a0d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7556aaec3e41bc2314849dbd5de482ebf87a0d1"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "b1edf5e46710968f746cd8deb8207a67647af7d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa5c1b2acb324d7d221f7d919e976110cdeedfc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa5c1b2acb324d7d221f7d919e976110cdeedfc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9aa5c1b2acb324d7d221f7d919e976110cdeedfc", "patch": "@@ -1,3 +1,10 @@\n+2009-01-06  Jan Hubicka  <jh@suse.cz>\n+\t    Kai Tietz <kai.tietz@onevision.com>\n+\n+\t* i386.h (ACCUMULATE_OUTGOING_ARGS): Enable for MSABI\n+\t* i386.c (init_cumulative_args): Disallow calls of MSABI functions when\n+\taccumulate outgoing args is off.\n+\n 2009-01-06  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR bootstrap/38742"}, {"sha": "d6fca325b1037070f35f917950a256d3472e7d4b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa5c1b2acb324d7d221f7d919e976110cdeedfc/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa5c1b2acb324d7d221f7d919e976110cdeedfc/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=9aa5c1b2acb324d7d221f7d919e976110cdeedfc", "patch": "@@ -4639,6 +4639,9 @@ init_cumulative_args (CUMULATIVE_ARGS *cum,  /* Argument info to initialize */\n   else\n    cum->call_abi = ix86_function_type_abi (fntype);\n   /* Set up the number of registers to use for passing arguments.  */\n+\n+  if (cum->call_abi == MS_ABI && !ACCUMULATE_OUTGOING_ARGS)\n+    sorry (\"ms_abi attribute require -maccumulate-outgoing-args or subtarget optimization implying it\");\n   cum->nregs = ix86_regparm;\n   if (TARGET_64BIT)\n     {"}, {"sha": "a853ed666ea805c06d9a8988dcb4620ca6ee522a", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa5c1b2acb324d7d221f7d919e976110cdeedfc/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa5c1b2acb324d7d221f7d919e976110cdeedfc/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=9aa5c1b2acb324d7d221f7d919e976110cdeedfc", "patch": "@@ -1509,9 +1509,13 @@ enum reg_class\n    be computed and placed into the variable\n    `crtl->outgoing_args_size'.  No space will be pushed onto the\n    stack for each call; instead, the function prologue should increase the stack\n-   frame size by this amount.  */\n+   frame size by this amount.  \n+   \n+   MS ABI seem to require 16 byte alignment everywhere except for function\n+   prologue and apilogue.  This is not possible without\n+   ACCUMULATE_OUTGOING_ARGS.  */\n \n-#define ACCUMULATE_OUTGOING_ARGS TARGET_ACCUMULATE_OUTGOING_ARGS\n+#define ACCUMULATE_OUTGOING_ARGS (TARGET_ACCUMULATE_OUTGOING_ARGS || ix86_cfun_abi () == MS_ABI)\n \n /* If defined, a C expression whose value is nonzero when we want to use PUSH\n    instructions to pass outgoing arguments.  */"}]}