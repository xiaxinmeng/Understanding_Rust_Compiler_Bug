{"sha": "a92db2624549f119a6f5c1e19c3013768b6bad3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTkyZGIyNjI0NTQ5ZjExOWE2ZjVjMWUxOWMzMDEzNzY4YjZiYWQzZQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2019-12-12T10:45:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-02T08:58:00Z"}, "message": "[Ada] Reuse Is_Package_Or_Generic_Package where possible\n\n2020-06-02  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* contracts.adb, einfo.adb, exp_ch9.adb, sem_ch12.adb,\n\tsem_ch4.adb, sem_ch7.adb, sem_ch8.adb, sem_elab.adb,\n\tsem_type.adb, sem_util.adb: Reuse Is_Package_Or_Generic_Package\n\twhere possible (similarly, reuse Is_Concurrent_Type if it was\n\tpossible in the same expressions).", "tree": {"sha": "1993d05c7b90268f5da970985d969a204eb9ecb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1993d05c7b90268f5da970985d969a204eb9ecb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a92db2624549f119a6f5c1e19c3013768b6bad3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a92db2624549f119a6f5c1e19c3013768b6bad3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a92db2624549f119a6f5c1e19c3013768b6bad3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a92db2624549f119a6f5c1e19c3013768b6bad3e/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86b14bb1a93d8ef01678d132013a2006a4f00deb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86b14bb1a93d8ef01678d132013a2006a4f00deb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86b14bb1a93d8ef01678d132013a2006a4f00deb"}], "stats": {"total": 52, "additions": 26, "deletions": 26}, "files": [{"sha": "d58f1360f22e2c344df5f19e44519071f4c28016", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=a92db2624549f119a6f5c1e19c3013768b6bad3e", "patch": "@@ -213,7 +213,7 @@ package body Contracts is\n       --    Initializes\n       --    Part_Of (instantiation only)\n \n-      elsif Ekind_In (Id, E_Generic_Package, E_Package) then\n+      elsif Is_Package_Or_Generic_Package (Id) then\n          if Nam_In (Prag_Nam, Name_Abstract_State,\n                               Name_Initial_Condition,\n                               Name_Initializes)"}, {"sha": "1df8ed049db6d3060eb06bf43c61d2779b40a26c", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=a92db2624549f119a6f5c1e19c3013768b6bad3e", "patch": "@@ -713,7 +713,7 @@ package body Einfo is\n \n    function Abstract_States (Id : E) return L is\n    begin\n-      pragma Assert (Ekind_In (Id, E_Generic_Package, E_Package));\n+      pragma Assert (Is_Package_Or_Generic_Package (Id));\n       return Elist25 (Id);\n    end Abstract_States;\n \n@@ -837,7 +837,7 @@ package body Einfo is\n \n    function Body_Entity (Id : E) return E is\n    begin\n-      pragma Assert (Ekind_In (Id, E_Package, E_Generic_Package));\n+      pragma Assert (Is_Package_Or_Generic_Package (Id));\n       return Node19 (Id);\n    end Body_Entity;\n \n@@ -1424,8 +1424,8 @@ package body Einfo is\n \n    function First_Private_Entity (Id : E) return E is\n    begin\n-      pragma Assert (Ekind_In (Id, E_Package, E_Generic_Package)\n-                       or else Ekind (Id) in Concurrent_Kind);\n+      pragma Assert (Is_Package_Or_Generic_Package (Id)\n+                       or else Is_Concurrent_Type (Id));\n       return Node16 (Id);\n    end First_Private_Entity;\n \n@@ -3044,7 +3044,7 @@ package body Einfo is\n \n    function Package_Instantiation (Id : E) return N is\n    begin\n-      pragma Assert (Ekind_In (Id, E_Package, E_Generic_Package));\n+      pragma Assert (Is_Package_Or_Generic_Package (Id));\n       return Node26 (Id);\n    end Package_Instantiation;\n \n@@ -3883,7 +3883,7 @@ package body Einfo is\n \n    procedure Set_Abstract_States (Id : E; V : L) is\n    begin\n-      pragma Assert (Ekind_In (Id, E_Generic_Package, E_Package));\n+      pragma Assert (Is_Package_Or_Generic_Package (Id));\n       Set_Elist25 (Id, V);\n    end Set_Abstract_States;\n \n@@ -4006,7 +4006,7 @@ package body Einfo is\n \n    procedure Set_Body_Entity (Id : E; V : E) is\n    begin\n-      pragma Assert (Ekind_In (Id, E_Package, E_Generic_Package));\n+      pragma Assert (Is_Package_Or_Generic_Package (Id));\n       Set_Node19 (Id, V);\n    end Set_Body_Entity;\n \n@@ -4593,8 +4593,8 @@ package body Einfo is\n \n    procedure Set_First_Private_Entity (Id : E; V : E) is\n    begin\n-      pragma Assert (Ekind_In (Id, E_Package, E_Generic_Package)\n-                       or else Ekind (Id) in Concurrent_Kind);\n+      pragma Assert (Is_Package_Or_Generic_Package (Id)\n+                       or else Is_Concurrent_Type (Id));\n       Set_Node16 (Id, V);\n    end Set_First_Private_Entity;\n \n@@ -7827,7 +7827,7 @@ package body Einfo is\n \n    function Has_Non_Null_Abstract_State (Id : E) return B is\n    begin\n-      pragma Assert (Ekind_In (Id, E_Generic_Package, E_Package));\n+      pragma Assert (Is_Package_Or_Generic_Package (Id));\n \n       return\n         Present (Abstract_States (Id))\n@@ -7863,7 +7863,7 @@ package body Einfo is\n    -----------------------------\n \n    function Has_Null_Abstract_State (Id : E) return B is\n-      pragma Assert (Ekind_In (Id, E_Generic_Package, E_Package));\n+      pragma Assert (Is_Package_Or_Generic_Package (Id));\n \n       States : constant Elist_Id := Abstract_States (Id);\n "}, {"sha": "392a221e18fe0e782ef79da084307cc2ca0e01b7", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=a92db2624549f119a6f5c1e19c3013768b6bad3e", "patch": "@@ -6167,7 +6167,7 @@ package body Exp_Ch9 is\n                --  this safe. This is a common (if dubious) idiom.\n \n                elsif S = Scope (Prot)\n-                 and then Ekind_In (S, E_Package, E_Generic_Package)\n+                 and then Is_Package_Or_Generic_Package (S)\n                  and then Nkind (Parent (E)) = N_Object_Declaration\n                  and then Nkind (Parent (Parent (E))) = N_Package_Body\n                then"}, {"sha": "209e0601cbd06f2a58c25da7eb0e1b6649bd6658", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=a92db2624549f119a6f5c1e19c3013768b6bad3e", "patch": "@@ -10364,7 +10364,7 @@ package body Sem_Ch12 is\n       --  such as a parent generic within the body of a generic child.\n \n       if not Is_Entity_Name (Actual)\n-        or else not Ekind_In (Entity (Actual), E_Generic_Package, E_Package)\n+        or else not Is_Package_Or_Generic_Package (Entity (Actual))\n       then\n          Error_Msg_N\n            (\"expect package instance to instantiate formal\", Actual);"}, {"sha": "702f2650ea6032e9eff2421f443426abd7f65d74", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=a92db2624549f119a6f5c1e19c3013768b6bad3e", "patch": "@@ -9480,7 +9480,7 @@ package body Sem_Ch4 is\n             Type_Scope : constant Entity_Id := Scope (T);\n             Op_List    : Elist_Id := Primitive_Operations (T);\n          begin\n-            if Ekind_In (Type_Scope, E_Package, E_Generic_Package)\n+            if Is_Package_Or_Generic_Package (Type_Scope)\n               and then ((In_Package_Body (Type_Scope)\n               and then In_Open_Scopes (Type_Scope)) or else In_Instance_Body)\n             then"}, {"sha": "f217dfd255587cc6bf26b11e42c42c771b9c71f8", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=a92db2624549f119a6f5c1e19c3013768b6bad3e", "patch": "@@ -2428,7 +2428,7 @@ package body Sem_Ch7 is\n       --  defined in the associated package, subject to at least one Part_Of\n       --  constituent.\n \n-      if Ekind_In (P, E_Generic_Package, E_Package) then\n+      if Is_Package_Or_Generic_Package (P) then\n          declare\n             States     : constant Elist_Id := Abstract_States (P);\n             State_Elmt : Elmt_Id;\n@@ -3322,7 +3322,7 @@ package body Sem_Ch7 is\n       --  performed if the caller requests this behavior.\n \n       if Do_Abstract_States\n-        and then Ekind_In (Pack_Id, E_Generic_Package, E_Package)\n+        and then Is_Package_Or_Generic_Package (Pack_Id)\n         and then Has_Non_Null_Abstract_State (Pack_Id)\n         and then Requires_Body\n       then\n@@ -3380,7 +3380,7 @@ package body Sem_Ch7 is\n       --  provided). If Ignore_Abstract_State is True, we don't do this check\n       --  (so we can use Unit_Requires_Body to check for some other reason).\n \n-      elsif Ekind_In (Pack_Id, E_Generic_Package, E_Package)\n+      elsif Is_Package_Or_Generic_Package (Pack_Id)\n         and then Present (Abstract_States (Pack_Id))\n         and then not Is_Null_State\n                        (Node (First_Elmt (Abstract_States (Pack_Id))))"}, {"sha": "7f50b407dcadd763598967fbc318b8c64b6d7b10", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=a92db2624549f119a6f5c1e19c3013768b6bad3e", "patch": "@@ -5950,7 +5950,7 @@ package body Sem_Ch8 is\n \n                   --  Package or generic package is always a simple reference\n \n-                  if Ekind_In (E, E_Package, E_Generic_Package) then\n+                  if Is_Package_Or_Generic_Package (E) then\n                      Generate_Reference (E, N, 'r');\n \n                   --  Else see if we have a left hand side\n@@ -8779,7 +8779,7 @@ package body Sem_Ch8 is\n \n       --  Set Default_Storage_Pool field of the library unit if necessary\n \n-      if Ekind_In (S, E_Package, E_Generic_Package)\n+      if Is_Package_Or_Generic_Package (S)\n         and then\n           Nkind (Parent (Unit_Declaration_Node (S))) = N_Compilation_Unit\n       then\n@@ -8949,7 +8949,7 @@ package body Sem_Ch8 is\n \n       if Is_Child_Unit (S)\n         and then Present (E)\n-        and then Ekind_In (E, E_Package, E_Generic_Package)\n+        and then Is_Package_Or_Generic_Package (E)\n         and then\n           Nkind (Parent (Unit_Declaration_Node (E))) = N_Compilation_Unit\n       then"}, {"sha": "dbf3fac3c4c294d758b79b81aa772da65a2c9e30", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=a92db2624549f119a6f5c1e19c3013768b6bad3e", "patch": "@@ -13826,7 +13826,7 @@ package body Sem_Elab is\n          --  be on another machine.\n \n          if Ekind (Body_Id) = E_Package_Body\n-           and then Ekind_In (Spec_Id, E_Generic_Package, E_Package)\n+           and then Is_Package_Or_Generic_Package (Spec_Id)\n            and then (Is_Remote_Call_Interface (Spec_Id)\n                       or else Is_Remote_Types (Spec_Id))\n          then"}, {"sha": "1868568c5eaba1229a78ab087be1acb4c73df2e7", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=a92db2624549f119a6f5c1e19c3013768b6bad3e", "patch": "@@ -1383,7 +1383,7 @@ package body Sem_Type is\n       begin\n          return In_Same_List (Parent (Typ), Op_Decl)\n            or else\n-             (Ekind_In (Scop, E_Package, E_Generic_Package)\n+             (Is_Package_Or_Generic_Package (Scop)\n                and then List_Containing (Op_Decl) =\n                               Visible_Declarations (Parent (Scop))\n                and then List_Containing (Parent (Typ)) ="}, {"sha": "c1b1d9ef233363702fd9df012da8d5d34c7bd59c", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92db2624549f119a6f5c1e19c3013768b6bad3e/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=a92db2624549f119a6f5c1e19c3013768b6bad3e", "patch": "@@ -3407,7 +3407,7 @@ package body Sem_Util is\n          --  Stop the traversal when a package subject to a null abstract state\n          --  has been found.\n \n-         if Ekind_In (Context, E_Generic_Package, E_Package)\n+         if Is_Package_Or_Generic_Package (Context)\n            and then Has_Null_Abstract_State (Context)\n          then\n             exit;\n@@ -12978,7 +12978,7 @@ package body Sem_Util is\n \n       begin\n          if Present (Pkg)\n-           and then Ekind_In (Pkg, E_Generic_Package, E_Package)\n+           and then Is_Package_Or_Generic_Package (Pkg)\n          then\n             while Nkind (Pkg_Decl) /= N_Package_Specification loop\n                Pkg_Decl := Parent (Pkg_Decl);\n@@ -25283,7 +25283,7 @@ package body Sem_Util is\n               or else\n                 (Present (Scope (Val))\n                   and then Is_Implementation_Defined (Scope (Val))))\n-           and then not (Ekind_In (Val, E_Package, E_Generic_Package)\n+           and then not (Is_Package_Or_Generic_Package (Val)\n                           and then Is_Library_Level_Entity (Val))\n          then\n             Check_Restriction (No_Implementation_Identifiers, Post_Node);"}]}