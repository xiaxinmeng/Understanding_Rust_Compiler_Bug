{"sha": "3eebae0bb1d8b63654facfd9fbad7bbe69e49ba5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VlYmFlMGJiMWQ4YjYzNjU0ZmFjZmQ5ZmJhZDdiYmU2OWU0OWJhNQ==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@redhat.com", "date": "2004-11-24T14:46:23Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2004-11-24T14:46:23Z"}, "message": "tree-ssa-alias.c (merge_pointed_to_info): Fix comment regarding PT_MALLOC.\n\n\n\t* tree-ssa-alias.c (merge_pointed_to_info): Fix comment\n\tregarding PT_MALLOC.\n\nFrom-SVN: r91164", "tree": {"sha": "01ff430a15b7d8a7738ce4596cf0c4dd0e967fa8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01ff430a15b7d8a7738ce4596cf0c4dd0e967fa8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3eebae0bb1d8b63654facfd9fbad7bbe69e49ba5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eebae0bb1d8b63654facfd9fbad7bbe69e49ba5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eebae0bb1d8b63654facfd9fbad7bbe69e49ba5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eebae0bb1d8b63654facfd9fbad7bbe69e49ba5/comments", "author": null, "committer": null, "parents": [{"sha": "4f514514983790765b026a90ef68be2e14304407", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f514514983790765b026a90ef68be2e14304407", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f514514983790765b026a90ef68be2e14304407"}], "stats": {"total": 30, "additions": 16, "deletions": 14}, "files": [{"sha": "82a31f1f5943a4a8e57c5a1ccd03dbbca56af7c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eebae0bb1d8b63654facfd9fbad7bbe69e49ba5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eebae0bb1d8b63654facfd9fbad7bbe69e49ba5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3eebae0bb1d8b63654facfd9fbad7bbe69e49ba5", "patch": "@@ -1,3 +1,8 @@\n+2004-11-24  Diego Novillo  <dnovillo@redhat.com>\n+\n+\t* tree-ssa-alias.c (merge_pointed_to_info): Fix comment\n+\tregarding PT_MALLOC.\n+\n 2004-11-24  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/i386/i386.c (optimization_options): Use"}, {"sha": "0e30f126d3045161c898bba8cff69ae8e1293d5b", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eebae0bb1d8b63654facfd9fbad7bbe69e49ba5/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eebae0bb1d8b63654facfd9fbad7bbe69e49ba5/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=3eebae0bb1d8b63654facfd9fbad7bbe69e49ba5", "patch": "@@ -1714,20 +1714,17 @@ merge_pointed_to_info (struct alias_info *ai, tree dest, tree orig)\n \t ...\n \t P_j = P_i + X;\n \n-\t P_j would be marked as PT_MALLOC, which is wrong because\n-\t PT_MALLOC implies that the pointer may not point to another\n-\t variable.\n-\n-\t FIXME 1: Subsequent analysis may determine that P_j\n-\t cannot alias anything else, but we are being conservative\n-\t here.\n-\n-\t FIXME 2: If the merging comes from a copy assignment, we\n-\t ought to merge PT_MALLOC, but then both pointers would end up\n-\t getting different name tags because create_name_tags is not\n-\t smart enough to determine that the two come from the same\n-\t malloc call.  Copy propagation before aliasing should cure\n-\t this.  */\n+\t P_j would be marked as PT_MALLOC, however we currently do not\n+\t handle cases of more than one pointer pointing to the same\n+\t malloc'd area.\n+\n+\t FIXME: If the merging comes from an expression that preserves\n+\t the PT_MALLOC attribute (copy assignment, address\n+\t arithmetic), we ought to merge PT_MALLOC, but then both\n+\t pointers would end up getting different name tags because\n+\t create_name_tags is not smart enough to determine that the\n+\t two come from the same malloc call.  Copy propagation before\n+\t aliasing should cure this.  */\n       gcc_assert (orig_pi != dest_pi);\n       \n       dest_pi->pt_malloc = 0;"}]}