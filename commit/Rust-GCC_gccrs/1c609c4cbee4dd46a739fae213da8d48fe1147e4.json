{"sha": "1c609c4cbee4dd46a739fae213da8d48fe1147e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM2MDljNGNiZWU0ZGQ0NmE3MzlmYWUyMTNkYThkNDhmZTExNDdlNA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "1999-04-30T02:19:00Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "1999-04-30T02:19:00Z"}, "message": "decl.c (cp_finish_decl): Don't permit arrays of abstract or signature type.\n\n\t* decl.c (cp_finish_decl): Don't permit arrays of abstract or\n\tsignature type.\n\nFrom-SVN: r26706", "tree": {"sha": "a77337bacbf76df14b1697ada6e2d59cfda00827", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a77337bacbf76df14b1697ada6e2d59cfda00827"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c609c4cbee4dd46a739fae213da8d48fe1147e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c609c4cbee4dd46a739fae213da8d48fe1147e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c609c4cbee4dd46a739fae213da8d48fe1147e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c609c4cbee4dd46a739fae213da8d48fe1147e4/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0c42bebfad7d884832bc28d1b768e9ed48336889", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c42bebfad7d884832bc28d1b768e9ed48336889", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c42bebfad7d884832bc28d1b768e9ed48336889"}], "stats": {"total": 48, "additions": 37, "deletions": 11}, "files": [{"sha": "a6dec3a88fbd007b22a769eae9bdabdcee8aa31e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c609c4cbee4dd46a739fae213da8d48fe1147e4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c609c4cbee4dd46a739fae213da8d48fe1147e4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1c609c4cbee4dd46a739fae213da8d48fe1147e4", "patch": "@@ -1,3 +1,8 @@\n+1999-04-30  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* decl.c (cp_finish_decl): Don't permit arrays of abstract or\n+\tsignature type.\n+\n 1999-04-29  Mark Mitchell  <mark@codesourcery.com>\n \n \t* decl2.c (do_static_destruction): Remove obsolete FIXME comment."}, {"sha": "05ee40863cac47c1779772f1d4d32e6cdb0c4a82", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c609c4cbee4dd46a739fae213da8d48fe1147e4/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c609c4cbee4dd46a739fae213da8d48fe1147e4/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=1c609c4cbee4dd46a739fae213da8d48fe1147e4", "patch": "@@ -7704,6 +7704,7 @@ cp_finish_decl (decl, init, asmspec_tree, need_pop, flags)\n   char *asmspec = NULL;\n   int was_readonly = 0;\n   int already_used = 0;\n+  tree core_type;\n \n   /* If this is 0, then we did not change obstacks.  */\n   if (! decl)\n@@ -7859,6 +7860,10 @@ cp_finish_decl (decl, init, asmspec_tree, need_pop, flags)\n \n   GNU_xref_decl (current_function_decl, decl);\n \n+  core_type = type;\n+  while (TREE_CODE (core_type) == ARRAY_TYPE)\n+    core_type = TREE_TYPE (core_type);\n+  \n   if (TREE_CODE (decl) == FIELD_DECL)\n     ;\n   else if (TREE_CODE (decl) == CONST_DECL)\n@@ -7907,14 +7912,11 @@ cp_finish_decl (decl, init, asmspec_tree, need_pop, flags)\n   else if (TREE_CODE_CLASS (TREE_CODE (type)) == 't'\n \t   && (IS_AGGR_TYPE (type) || TYPE_NEEDS_CONSTRUCTING (type)))\n     {\n-      tree ctype = type;\n-      while (TREE_CODE (ctype) == ARRAY_TYPE)\n-\tctype = TREE_TYPE (ctype);\n-      if (! TYPE_NEEDS_CONSTRUCTING (ctype))\n+      if (! TYPE_NEEDS_CONSTRUCTING (core_type))\n \t{\n-\t  if (CLASSTYPE_READONLY_FIELDS_NEED_INIT (ctype))\n+\t  if (CLASSTYPE_READONLY_FIELDS_NEED_INIT (core_type))\n \t    cp_error (\"structure `%D' with uninitialized const members\", decl);\n-\t  if (CLASSTYPE_REF_FIELDS_NEED_INIT (ctype))\n+\t  if (CLASSTYPE_REF_FIELDS_NEED_INIT (core_type))\n \t    cp_error (\"structure `%D' with uninitialized reference members\",\n \t\t      decl);\n \t}\n@@ -8183,17 +8185,17 @@ cp_finish_decl (decl, init, asmspec_tree, need_pop, flags)\n \tresume_temporary_allocation ();\n \n       if (type != error_mark_node\n-\t  && TYPE_LANG_SPECIFIC (type)\n-\t  && CLASSTYPE_ABSTRACT_VIRTUALS (type))\n-\tabstract_virtuals_error (decl, type);\n+\t  && TYPE_LANG_SPECIFIC (core_type)\n+\t  && CLASSTYPE_ABSTRACT_VIRTUALS (core_type))\n+\tabstract_virtuals_error (decl, core_type);\n       else if ((TREE_CODE (type) == FUNCTION_TYPE\n \t\t|| TREE_CODE (type) == METHOD_TYPE)\n \t       && TYPE_LANG_SPECIFIC (TREE_TYPE (type))\n \t       && CLASSTYPE_ABSTRACT_VIRTUALS (TREE_TYPE (type)))\n \tabstract_virtuals_error (decl, TREE_TYPE (type));\n \n-      if (TYPE_LANG_SPECIFIC (type) && IS_SIGNATURE (type))\n-\tsignature_error (decl, type);\n+      if (TYPE_LANG_SPECIFIC (core_type) && IS_SIGNATURE (core_type))\n+\tsignature_error (decl, core_type);\n       else if ((TREE_CODE (type) == FUNCTION_TYPE\n \t\t|| TREE_CODE (type) == METHOD_TYPE)\n \t       && TYPE_LANG_SPECIFIC (TREE_TYPE (type))"}, {"sha": "6068e3105dccd87e903ca80f7bde1e3b0fd6bb48", "filename": "gcc/testsuite/g++.old-deja/g++.other/decl3.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c609c4cbee4dd46a739fae213da8d48fe1147e4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdecl3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c609c4cbee4dd46a739fae213da8d48fe1147e4/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdecl3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdecl3.C?ref=1c609c4cbee4dd46a739fae213da8d48fe1147e4", "patch": "@@ -0,0 +1,19 @@\n+// Build don't link:\n+\n+// Origin:  Adapted by Nathan Sidwell 29 Apr 1999 <nathan@acm.org>\n+//          from a test case submitted by Corey Kosak <kosak@cs.cmu.edu>\n+//          http://egcs.cygnus.com/ml/egcs-bugs/1999-04/msg00502.html\n+\n+// We should not allow arrays of abstract type. [class.abstract/2]\n+\n+struct cow_t {\n+  virtual void f()=0; // ERROR - abstract\n+};\n+\n+\n+int main()\n+{\n+  cow_t cow[2];  // ERROR - abstract class\n+  cow[0].f();\n+  return 0;\n+}"}]}