{"sha": "4e3e8a5f8175d06b2de55a6f45491fc484901370", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUzZThhNWY4MTc1ZDA2YjJkZTU1YTZmNDU0OTFmYzQ4NDkwMTM3MA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-06-29T11:25:29Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-06-29T11:25:29Z"}, "message": "tree-cfg.c (group_case_labels_stmt): Return whether we changed anything.\n\n2017-06-29  Richard Biener  <rguenther@suse.de>\n\n\t* tree-cfg.c (group_case_labels_stmt): Return whether we changed\n\tanything.\n\t(group_case_labels): Likewise.\n\t(find_taken_edge): Push sanity checking on val to workers...\n\t(find_taken_edge_cond_expr): ... here\n\t(find_taken_edge_switch_expr): ... and here, handle cases\n\twith just a default label.\n\t* tree-cfg.h (group_case_labels_stmt): Adjust prototype.\n\t(group_case_labels): Likewise.\n\t* tree-cfgcleanup.c (execute_cleanup_cfg_post_optimizing): When\n\tgroup_case_labels does anything cleanup the CFG again.\n\nFrom-SVN: r249780", "tree": {"sha": "b04e0bef1db0be49b0cd9205bc42896a05b79fe4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b04e0bef1db0be49b0cd9205bc42896a05b79fe4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e3e8a5f8175d06b2de55a6f45491fc484901370", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e3e8a5f8175d06b2de55a6f45491fc484901370", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e3e8a5f8175d06b2de55a6f45491fc484901370", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e3e8a5f8175d06b2de55a6f45491fc484901370/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6cd83bec4b76e19175a425b7e1841d9c5d0d164e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cd83bec4b76e19175a425b7e1841d9c5d0d164e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cd83bec4b76e19175a425b7e1841d9c5d0d164e"}], "stats": {"total": 53, "additions": 37, "deletions": 16}, "files": [{"sha": "578068bd3436cd5fb91f18296a4651be9a3e8f12", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e3e8a5f8175d06b2de55a6f45491fc484901370/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e3e8a5f8175d06b2de55a6f45491fc484901370/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e3e8a5f8175d06b2de55a6f45491fc484901370", "patch": "@@ -1,3 +1,17 @@\n+2017-06-29  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-cfg.c (group_case_labels_stmt): Return whether we changed\n+\tanything.\n+\t(group_case_labels): Likewise.\n+\t(find_taken_edge): Push sanity checking on val to workers...\n+\t(find_taken_edge_cond_expr): ... here\n+\t(find_taken_edge_switch_expr): ... and here, handle cases\n+\twith just a default label.\n+\t* tree-cfg.h (group_case_labels_stmt): Adjust prototype.\n+\t(group_case_labels): Likewise.\n+\t* tree-cfgcleanup.c (execute_cleanup_cfg_post_optimizing): When\n+\tgroup_case_labels does anything cleanup the CFG again.\n+\n 2017-06-29  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/81196"}, {"sha": "e82f95b48ddbb8c2067b1a9bbee15f27537bd3ec", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 19, "deletions": 13, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e3e8a5f8175d06b2de55a6f45491fc484901370/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e3e8a5f8175d06b2de55a6f45491fc484901370/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=4e3e8a5f8175d06b2de55a6f45491fc484901370", "patch": "@@ -1675,7 +1675,7 @@ cleanup_dead_labels (void)\n    the ones jumping to the same label.\n    Eg. three separate entries 1: 2: 3: become one entry 1..3:  */\n \n-void\n+bool\n group_case_labels_stmt (gswitch *stmt)\n {\n   int old_size = gimple_switch_num_labels (stmt);\n@@ -1759,23 +1759,27 @@ group_case_labels_stmt (gswitch *stmt)\n \n   gcc_assert (new_size <= old_size);\n   gimple_switch_set_num_labels (stmt, new_size);\n+  return new_size < old_size;\n }\n \n /* Look for blocks ending in a multiway branch (a GIMPLE_SWITCH),\n    and scan the sorted vector of cases.  Combine the ones jumping to the\n    same label.  */\n \n-void\n+bool\n group_case_labels (void)\n {\n   basic_block bb;\n+  bool changed = false;\n \n   FOR_EACH_BB_FN (bb, cfun)\n     {\n       gimple *stmt = last_stmt (bb);\n       if (stmt && gimple_code (stmt) == GIMPLE_SWITCH)\n-\tgroup_case_labels_stmt (as_a <gswitch *> (stmt));\n+\tchanged |= group_case_labels_stmt (as_a <gswitch *> (stmt));\n     }\n+\n+  return changed;\n }\n \n /* Checks whether we can merge block B into block A.  */\n@@ -2243,15 +2247,8 @@ find_taken_edge (basic_block bb, tree val)\n \n   stmt = last_stmt (bb);\n \n-  gcc_assert (stmt);\n   gcc_assert (is_ctrl_stmt (stmt));\n \n-  if (val == NULL)\n-    return NULL;\n-\n-  if (!is_gimple_min_invariant (val))\n-    return NULL;\n-\n   if (gimple_code (stmt) == GIMPLE_COND)\n     return find_taken_edge_cond_expr (bb, val);\n \n@@ -2266,7 +2263,8 @@ find_taken_edge (basic_block bb, tree val)\n          It may be the case that we only need to allow the LABEL_REF to\n          appear inside an ADDR_EXPR, but we also allow the LABEL_REF to\n          appear inside a LABEL_EXPR just to be safe.  */\n-      if ((TREE_CODE (val) == ADDR_EXPR || TREE_CODE (val) == LABEL_EXPR)\n+      if (val\n+\t  && (TREE_CODE (val) == ADDR_EXPR || TREE_CODE (val) == LABEL_EXPR)\n \t  && TREE_CODE (TREE_OPERAND (val, 0)) == LABEL_DECL)\n \treturn find_taken_edge_computed_goto (bb, TREE_OPERAND (val, 0));\n       return NULL;\n@@ -2304,9 +2302,12 @@ find_taken_edge_cond_expr (basic_block bb, tree val)\n {\n   edge true_edge, false_edge;\n \n+  if (val == NULL\n+      || TREE_CODE (val) != INTEGER_CST)\n+    return NULL;\n+\n   extract_true_false_edges_from_block (bb, &true_edge, &false_edge);\n \n-  gcc_assert (TREE_CODE (val) == INTEGER_CST);\n   return (integer_zerop (val) ? false_edge : true_edge);\n }\n \n@@ -2322,7 +2323,12 @@ find_taken_edge_switch_expr (gswitch *switch_stmt, basic_block bb,\n   edge e;\n   tree taken_case;\n \n-  taken_case = find_case_label_for_value (switch_stmt, val);\n+  if (gimple_switch_num_labels (switch_stmt) == 1)\n+    taken_case = gimple_switch_default_label (switch_stmt);\n+  else if (! val || TREE_CODE (val) != INTEGER_CST)\n+    return NULL;\n+  else\n+    taken_case = find_case_label_for_value (switch_stmt, val);\n   dest_bb = label_to_block (CASE_LABEL (taken_case));\n \n   e = find_edge (bb, dest_bb);"}, {"sha": "4e1b5b076d5b2cdedceab90df9e571d1c7a1cb54", "filename": "gcc/tree-cfg.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e3e8a5f8175d06b2de55a6f45491fc484901370/gcc%2Ftree-cfg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e3e8a5f8175d06b2de55a6f45491fc484901370/gcc%2Ftree-cfg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.h?ref=4e3e8a5f8175d06b2de55a6f45491fc484901370", "patch": "@@ -36,8 +36,8 @@ extern void end_recording_case_labels (void);\n extern basic_block label_to_block_fn (struct function *, tree);\n #define label_to_block(t) (label_to_block_fn (cfun, t))\n extern void cleanup_dead_labels (void);\n-extern void group_case_labels_stmt (gswitch *);\n-extern void group_case_labels (void);\n+extern bool group_case_labels_stmt (gswitch *);\n+extern bool group_case_labels (void);\n extern void replace_uses_by (tree, tree);\n extern basic_block single_noncomplex_succ (basic_block bb);\n extern void notice_special_calls (gcall *);"}, {"sha": "c904d0cf57f42a729771d05a754f09a80ca419e2", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e3e8a5f8175d06b2de55a6f45491fc484901370/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e3e8a5f8175d06b2de55a6f45491fc484901370/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=4e3e8a5f8175d06b2de55a6f45491fc484901370", "patch": "@@ -1205,7 +1205,8 @@ execute_cleanup_cfg_post_optimizing (void)\n     }\n   maybe_remove_unreachable_handlers ();\n   cleanup_dead_labels ();\n-  group_case_labels ();\n+  if (group_case_labels ())\n+    todo |= TODO_cleanup_cfg;\n   if ((flag_compare_debug_opt || flag_compare_debug)\n       && flag_dump_final_insns)\n     {"}]}