{"sha": "c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQyYjBiZGYyZjNkMjIxNjdlZDZkNjZhMjQ5ZDBkN2M3N2E2NzJiMQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-08-14T12:37:49Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-08-14T12:37:49Z"}, "message": "avx512ifmaintrin.h: Fix whitespace.\n\n\t* config/i386/avx512ifmaintrin.h: Fix whitespace.\n\t* config/i386/avx512ifmavlintrin.h: Ditto.\n\t* config/i386/avx512vbmiintrin.h: Ditto.\n\t* config/i386/avx512vbmivlintrin.h: Ditto.\n\t* config/i386/avx512vlbwintrin.h: Ditto.\n\t* config/i386/avx512vldqintrin.h: Ditto.\n\t* config/i386/avx512vlintrin.h: Ditto.\n\nFrom-SVN: r239455", "tree": {"sha": "e6360de3ea887a8af02da6aa9080a7c30afba4d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6360de3ea887a8af02da6aa9080a7c30afba4d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1/comments", "author": null, "committer": null, "parents": [{"sha": "281f7120dbf4d4cdbead702f20a8b8758ddaf01a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/281f7120dbf4d4cdbead702f20a8b8758ddaf01a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/281f7120dbf4d4cdbead702f20a8b8758ddaf01a"}], "stats": {"total": 215, "additions": 95, "deletions": 120}, "files": [{"sha": "c50aa65d0289814fca6f780c3481856bbae2bf25", "filename": "gcc/config/i386/avx512ifmaintrin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1/gcc%2Fconfig%2Fi386%2Favx512ifmaintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1/gcc%2Fconfig%2Fi386%2Favx512ifmaintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512ifmaintrin.h?ref=c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1", "patch": "@@ -41,7 +41,7 @@ _mm512_madd52lo_epu64 (__m512i __X, __m512i __Y, __m512i __Z)\n   return (__m512i) __builtin_ia32_vpmadd52luq512_mask ((__v8di) __X,\n \t\t\t\t\t\t       (__v8di) __Y,\n \t\t\t\t\t\t       (__v8di) __Z,\n-\t\t\t\t\t\t       (__mmask8) - 1);\n+\t\t\t\t\t\t       (__mmask8) -1);\n }\n \n extern __inline __m512i\n@@ -51,7 +51,7 @@ _mm512_madd52hi_epu64 (__m512i __X, __m512i __Y, __m512i __Z)\n   return (__m512i) __builtin_ia32_vpmadd52huq512_mask ((__v8di) __X,\n \t\t\t\t\t\t       (__v8di) __Y,\n \t\t\t\t\t\t       (__v8di) __Z,\n-\t\t\t\t\t\t       (__mmask8) - 1);\n+\t\t\t\t\t\t       (__mmask8) -1);\n }\n \n extern __inline __m512i"}, {"sha": "6c496f78ce5f0382aeac7b582e702cb5e9f60d0b", "filename": "gcc/config/i386/avx512ifmavlintrin.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1/gcc%2Fconfig%2Fi386%2Favx512ifmavlintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1/gcc%2Fconfig%2Fi386%2Favx512ifmavlintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512ifmavlintrin.h?ref=c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1", "patch": "@@ -41,7 +41,7 @@ _mm_madd52lo_epu64 (__m128i __X, __m128i __Y, __m128i __Z)\n   return (__m128i) __builtin_ia32_vpmadd52luq128_mask ((__v2di) __X,\n \t\t\t\t\t\t       (__v2di) __Y,\n \t\t\t\t\t\t       (__v2di) __Z,\n-\t\t\t\t\t\t       (__mmask8) - 1);\n+\t\t\t\t\t\t       (__mmask8) -1);\n }\n \n extern __inline __m128i\n@@ -51,7 +51,7 @@ _mm_madd52hi_epu64 (__m128i __X, __m128i __Y, __m128i __Z)\n   return (__m128i) __builtin_ia32_vpmadd52huq128_mask ((__v2di) __X,\n \t\t\t\t\t\t       (__v2di) __Y,\n \t\t\t\t\t\t       (__v2di) __Z,\n-\t\t\t\t\t\t       (__mmask8) - 1);\n+\t\t\t\t\t\t       (__mmask8) -1);\n }\n \n extern __inline __m256i\n@@ -61,7 +61,7 @@ _mm256_madd52lo_epu64 (__m256i __X, __m256i __Y, __m256i __Z)\n   return (__m256i) __builtin_ia32_vpmadd52luq256_mask ((__v4di) __X,\n \t\t\t\t\t\t       (__v4di) __Y,\n \t\t\t\t\t\t       (__v4di) __Z,\n-\t\t\t\t\t\t       (__mmask8) - 1);\n+\t\t\t\t\t\t       (__mmask8) -1);\n }\n \n extern __inline __m256i\n@@ -71,7 +71,7 @@ _mm256_madd52hi_epu64 (__m256i __X, __m256i __Y, __m256i __Z)\n   return (__m256i) __builtin_ia32_vpmadd52huq256_mask ((__v4di) __X,\n \t\t\t\t\t\t       (__v4di) __Y,\n \t\t\t\t\t\t       (__v4di) __Z,\n-\t\t\t\t\t\t       (__mmask8) - 1);\n+\t\t\t\t\t\t       (__mmask8) -1);\n }\n \n extern __inline __m128i"}, {"sha": "a2ad07a6a2251cb04d7da0c426fef488c36d3ec9", "filename": "gcc/config/i386/avx512vbmiintrin.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1/gcc%2Fconfig%2Fi386%2Favx512vbmiintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1/gcc%2Fconfig%2Fi386%2Favx512vbmiintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512vbmiintrin.h?ref=c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1", "patch": "@@ -108,8 +108,7 @@ _mm512_permutex2var_epi8 (__m512i __A, __m512i __I, __m512i __B)\n \t\t\t\t\t\t\t/* idx */ ,\n \t\t\t\t\t\t\t(__v64qi) __A,\n \t\t\t\t\t\t\t(__v64qi) __B,\n-\t\t\t\t\t\t\t(__mmask64) -\n-\t\t\t\t\t\t\t1);\n+\t\t\t\t\t\t\t(__mmask64) -1);\n }\n \n extern __inline __m512i"}, {"sha": "04308ead4250d8d6343efdbe94a66ce3bb3d9767", "filename": "gcc/config/i386/avx512vbmivlintrin.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1/gcc%2Fconfig%2Fi386%2Favx512vbmivlintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1/gcc%2Fconfig%2Fi386%2Favx512vbmivlintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512vbmivlintrin.h?ref=c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1", "patch": "@@ -173,8 +173,7 @@ _mm256_permutex2var_epi8 (__m256i __A, __m256i __I, __m256i __B)\n \t\t\t\t\t\t\t/* idx */ ,\n \t\t\t\t\t\t\t(__v32qi) __A,\n \t\t\t\t\t\t\t(__v32qi) __B,\n-\t\t\t\t\t\t\t(__mmask32) -\n-\t\t\t\t\t\t\t1);\n+\t\t\t\t\t\t\t(__mmask32) -1);\n }\n \n extern __inline __m256i\n@@ -224,8 +223,7 @@ _mm_permutex2var_epi8 (__m128i __A, __m128i __I, __m128i __B)\n \t\t\t\t\t\t\t/* idx */ ,\n \t\t\t\t\t\t\t(__v16qi) __A,\n \t\t\t\t\t\t\t(__v16qi) __B,\n-\t\t\t\t\t\t\t(__mmask16) -\n-\t\t\t\t\t\t\t1);\n+\t\t\t\t\t\t\t(__mmask16) -1);\n }\n \n extern __inline __m128i"}, {"sha": "02bbed0a8b92809454a5b0e6bce17159ef6c0349", "filename": "gcc/config/i386/avx512vlbwintrin.h", "status": "modified", "additions": 34, "deletions": 36, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1/gcc%2Fconfig%2Fi386%2Favx512vlbwintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1/gcc%2Fconfig%2Fi386%2Favx512vlbwintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512vlbwintrin.h?ref=c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1", "patch": "@@ -575,8 +575,7 @@ _mm256_permutex2var_epi16 (__m256i __A, __m256i __I, __m256i __B)\n \t\t\t\t\t\t\t/* idx */ ,\n \t\t\t\t\t\t\t(__v16hi) __A,\n \t\t\t\t\t\t\t(__v16hi) __B,\n-\t\t\t\t\t\t\t(__mmask16) -\n-\t\t\t\t\t\t\t1);\n+\t\t\t\t\t\t\t(__mmask16) -1);\n }\n \n extern __inline __m256i\n@@ -626,8 +625,7 @@ _mm_permutex2var_epi16 (__m128i __A, __m128i __I, __m128i __B)\n \t\t\t\t\t\t\t/* idx */ ,\n \t\t\t\t\t\t\t(__v8hi) __A,\n \t\t\t\t\t\t\t(__v8hi) __B,\n-\t\t\t\t\t\t\t(__mmask8) -\n-\t\t\t\t\t\t\t1);\n+\t\t\t\t\t\t\t(__mmask8) -1);\n }\n \n extern __inline __m128i\n@@ -2009,7 +2007,7 @@ _mm256_cmpneq_epi8_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask32) __builtin_ia32_cmpb256_mask ((__v32qi) __X,\n \t\t\t\t\t\t  (__v32qi) __Y, 4,\n-\t\t\t\t\t\t  (__mmask32) - 1);\n+\t\t\t\t\t\t  (__mmask32) -1);\n }\n \n extern __inline __mmask32\n@@ -2018,7 +2016,7 @@ _mm256_cmplt_epi8_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask32) __builtin_ia32_cmpb256_mask ((__v32qi) __X,\n \t\t\t\t\t\t  (__v32qi) __Y, 1,\n-\t\t\t\t\t\t  (__mmask32) - 1);\n+\t\t\t\t\t\t  (__mmask32) -1);\n }\n \n extern __inline __mmask32\n@@ -2027,7 +2025,7 @@ _mm256_cmpge_epi8_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask32) __builtin_ia32_cmpb256_mask ((__v32qi) __X,\n \t\t\t\t\t\t  (__v32qi) __Y, 5,\n-\t\t\t\t\t\t  (__mmask32) - 1);\n+\t\t\t\t\t\t  (__mmask32) -1);\n }\n \n extern __inline __mmask32\n@@ -2036,7 +2034,7 @@ _mm256_cmple_epi8_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask32) __builtin_ia32_cmpb256_mask ((__v32qi) __X,\n \t\t\t\t\t\t  (__v32qi) __Y, 2,\n-\t\t\t\t\t\t  (__mmask32) - 1);\n+\t\t\t\t\t\t  (__mmask32) -1);\n }\n \n extern __inline __mmask16\n@@ -2045,7 +2043,7 @@ _mm256_cmpneq_epi16_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask16) __builtin_ia32_cmpw256_mask ((__v16hi) __X,\n \t\t\t\t\t\t  (__v16hi) __Y, 4,\n-\t\t\t\t\t\t  (__mmask16) - 1);\n+\t\t\t\t\t\t  (__mmask16) -1);\n }\n \n extern __inline __mmask16\n@@ -2054,7 +2052,7 @@ _mm256_cmplt_epi16_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask16) __builtin_ia32_cmpw256_mask ((__v16hi) __X,\n \t\t\t\t\t\t  (__v16hi) __Y, 1,\n-\t\t\t\t\t\t  (__mmask16) - 1);\n+\t\t\t\t\t\t  (__mmask16) -1);\n }\n \n extern __inline __mmask16\n@@ -2063,7 +2061,7 @@ _mm256_cmpge_epi16_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask16) __builtin_ia32_cmpw256_mask ((__v16hi) __X,\n \t\t\t\t\t\t  (__v16hi) __Y, 5,\n-\t\t\t\t\t\t  (__mmask16) - 1);\n+\t\t\t\t\t\t  (__mmask16) -1);\n }\n \n extern __inline __mmask16\n@@ -2072,7 +2070,7 @@ _mm256_cmple_epi16_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask16) __builtin_ia32_cmpw256_mask ((__v16hi) __X,\n \t\t\t\t\t\t  (__v16hi) __Y, 2,\n-\t\t\t\t\t\t  (__mmask16) - 1);\n+\t\t\t\t\t\t  (__mmask16) -1);\n }\n \n extern __inline __mmask16\n@@ -2081,7 +2079,7 @@ _mm_cmpneq_epu8_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask16) __builtin_ia32_ucmpb128_mask ((__v16qi) __X,\n \t\t\t\t\t\t   (__v16qi) __Y, 4,\n-\t\t\t\t\t\t   (__mmask16) - 1);\n+\t\t\t\t\t\t   (__mmask16) -1);\n }\n \n extern __inline __mmask16\n@@ -2090,7 +2088,7 @@ _mm_cmplt_epu8_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask16) __builtin_ia32_ucmpb128_mask ((__v16qi) __X,\n \t\t\t\t\t\t   (__v16qi) __Y, 1,\n-\t\t\t\t\t\t   (__mmask16) - 1);\n+\t\t\t\t\t\t   (__mmask16) -1);\n }\n \n extern __inline __mmask16\n@@ -2099,7 +2097,7 @@ _mm_cmpge_epu8_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask16) __builtin_ia32_ucmpb128_mask ((__v16qi) __X,\n \t\t\t\t\t\t   (__v16qi) __Y, 5,\n-\t\t\t\t\t\t   (__mmask16) - 1);\n+\t\t\t\t\t\t   (__mmask16) -1);\n }\n \n extern __inline __mmask16\n@@ -2108,7 +2106,7 @@ _mm_cmple_epu8_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask16) __builtin_ia32_ucmpb128_mask ((__v16qi) __X,\n \t\t\t\t\t\t   (__v16qi) __Y, 2,\n-\t\t\t\t\t\t   (__mmask16) - 1);\n+\t\t\t\t\t\t   (__mmask16) -1);\n }\n \n extern __inline __mmask8\n@@ -2117,7 +2115,7 @@ _mm_cmpneq_epu16_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpw128_mask ((__v8hi) __X,\n \t\t\t\t\t\t  (__v8hi) __Y, 4,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -2126,7 +2124,7 @@ _mm_cmplt_epu16_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpw128_mask ((__v8hi) __X,\n \t\t\t\t\t\t  (__v8hi) __Y, 1,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -2135,7 +2133,7 @@ _mm_cmpge_epu16_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpw128_mask ((__v8hi) __X,\n \t\t\t\t\t\t  (__v8hi) __Y, 5,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -2144,7 +2142,7 @@ _mm_cmple_epu16_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpw128_mask ((__v8hi) __X,\n \t\t\t\t\t\t  (__v8hi) __Y, 2,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask16\n@@ -2153,7 +2151,7 @@ _mm_cmpneq_epi8_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask16) __builtin_ia32_cmpb128_mask ((__v16qi) __X,\n \t\t\t\t\t\t  (__v16qi) __Y, 4,\n-\t\t\t\t\t\t  (__mmask16) - 1);\n+\t\t\t\t\t\t  (__mmask16) -1);\n }\n \n extern __inline __mmask16\n@@ -2162,7 +2160,7 @@ _mm_cmplt_epi8_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask16) __builtin_ia32_cmpb128_mask ((__v16qi) __X,\n \t\t\t\t\t\t  (__v16qi) __Y, 1,\n-\t\t\t\t\t\t  (__mmask16) - 1);\n+\t\t\t\t\t\t  (__mmask16) -1);\n }\n \n extern __inline __mmask16\n@@ -2171,7 +2169,7 @@ _mm_cmpge_epi8_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask16) __builtin_ia32_cmpb128_mask ((__v16qi) __X,\n \t\t\t\t\t\t  (__v16qi) __Y, 5,\n-\t\t\t\t\t\t  (__mmask16) - 1);\n+\t\t\t\t\t\t  (__mmask16) -1);\n }\n \n extern __inline __mmask16\n@@ -2180,7 +2178,7 @@ _mm_cmple_epi8_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask16) __builtin_ia32_cmpb128_mask ((__v16qi) __X,\n \t\t\t\t\t\t  (__v16qi) __Y, 2,\n-\t\t\t\t\t\t  (__mmask16) - 1);\n+\t\t\t\t\t\t  (__mmask16) -1);\n }\n \n extern __inline __mmask8\n@@ -2189,7 +2187,7 @@ _mm_cmpneq_epi16_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpw128_mask ((__v8hi) __X,\n \t\t\t\t\t\t (__v8hi) __Y, 4,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -2198,7 +2196,7 @@ _mm_cmplt_epi16_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpw128_mask ((__v8hi) __X,\n \t\t\t\t\t\t (__v8hi) __Y, 1,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -2207,7 +2205,7 @@ _mm_cmpge_epi16_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpw128_mask ((__v8hi) __X,\n \t\t\t\t\t\t (__v8hi) __Y, 5,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -2216,7 +2214,7 @@ _mm_cmple_epi16_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpw128_mask ((__v8hi) __X,\n \t\t\t\t\t\t (__v8hi) __Y, 2,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __m256i\n@@ -3609,7 +3607,7 @@ _mm256_cmpneq_epu8_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask32) __builtin_ia32_ucmpb256_mask ((__v32qi) __X,\n \t\t\t\t\t\t   (__v32qi) __Y, 4,\n-\t\t\t\t\t\t   (__mmask32) - 1);\n+\t\t\t\t\t\t   (__mmask32) -1);\n }\n \n extern __inline __mmask32\n@@ -3618,7 +3616,7 @@ _mm256_cmplt_epu8_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask32) __builtin_ia32_ucmpb256_mask ((__v32qi) __X,\n \t\t\t\t\t\t   (__v32qi) __Y, 1,\n-\t\t\t\t\t\t   (__mmask32) - 1);\n+\t\t\t\t\t\t   (__mmask32) -1);\n }\n \n extern __inline __mmask32\n@@ -3627,7 +3625,7 @@ _mm256_cmpge_epu8_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask32) __builtin_ia32_ucmpb256_mask ((__v32qi) __X,\n \t\t\t\t\t\t   (__v32qi) __Y, 5,\n-\t\t\t\t\t\t   (__mmask32) - 1);\n+\t\t\t\t\t\t   (__mmask32) -1);\n }\n \n extern __inline __mmask32\n@@ -3636,7 +3634,7 @@ _mm256_cmple_epu8_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask32) __builtin_ia32_ucmpb256_mask ((__v32qi) __X,\n \t\t\t\t\t\t   (__v32qi) __Y, 2,\n-\t\t\t\t\t\t   (__mmask32) - 1);\n+\t\t\t\t\t\t   (__mmask32) -1);\n }\n \n extern __inline __mmask16\n@@ -3645,7 +3643,7 @@ _mm256_cmpneq_epu16_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask16) __builtin_ia32_ucmpw256_mask ((__v16hi) __X,\n \t\t\t\t\t\t   (__v16hi) __Y, 4,\n-\t\t\t\t\t\t   (__mmask16) - 1);\n+\t\t\t\t\t\t   (__mmask16) -1);\n }\n \n extern __inline __mmask16\n@@ -3654,7 +3652,7 @@ _mm256_cmplt_epu16_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask16) __builtin_ia32_ucmpw256_mask ((__v16hi) __X,\n \t\t\t\t\t\t   (__v16hi) __Y, 1,\n-\t\t\t\t\t\t   (__mmask16) - 1);\n+\t\t\t\t\t\t   (__mmask16) -1);\n }\n \n extern __inline __mmask16\n@@ -3663,7 +3661,7 @@ _mm256_cmpge_epu16_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask16) __builtin_ia32_ucmpw256_mask ((__v16hi) __X,\n \t\t\t\t\t\t   (__v16hi) __Y, 5,\n-\t\t\t\t\t\t   (__mmask16) - 1);\n+\t\t\t\t\t\t   (__mmask16) -1);\n }\n \n extern __inline __mmask16\n@@ -3672,7 +3670,7 @@ _mm256_cmple_epu16_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask16) __builtin_ia32_ucmpw256_mask ((__v16hi) __X,\n \t\t\t\t\t\t   (__v16hi) __Y, 2,\n-\t\t\t\t\t\t   (__mmask16) - 1);\n+\t\t\t\t\t\t   (__mmask16) -1);\n }\n \n extern __inline void"}, {"sha": "5ff0a5263999950107a32ef36cf09e1ccaff95fd", "filename": "gcc/config/i386/avx512vldqintrin.h", "status": "modified", "additions": 9, "deletions": 18, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1/gcc%2Fconfig%2Fi386%2Favx512vldqintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1/gcc%2Fconfig%2Fi386%2Favx512vldqintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512vldqintrin.h?ref=c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1", "patch": "@@ -389,8 +389,7 @@ _mm256_broadcast_f64x2 (__m128d __A)\n   return (__m256d) __builtin_ia32_broadcastf64x2_256_mask ((__v2df)\n \t\t\t\t\t\t\t   __A,\n \t\t\t\t\t\t           (__v4df)_mm256_undefined_pd(),\n-\t\t\t\t\t\t\t   (__mmask8) -\n-\t\t\t\t\t\t\t   1);\n+\t\t\t\t\t\t\t   (__mmask8) -1);\n }\n \n extern __inline __m256d\n@@ -421,8 +420,7 @@ _mm256_broadcast_i64x2 (__m128i __A)\n   return (__m256i) __builtin_ia32_broadcasti64x2_256_mask ((__v2di)\n \t\t\t\t\t\t\t   __A,\n \t\t\t\t\t\t           (__v4di)_mm256_undefined_si256(),\n-\t\t\t\t\t\t\t   (__mmask8) -\n-\t\t\t\t\t\t\t   1);\n+\t\t\t\t\t\t\t   (__mmask8) -1);\n }\n \n extern __inline __m256i\n@@ -452,8 +450,7 @@ _mm256_broadcast_f32x2 (__m128 __A)\n {\n   return (__m256) __builtin_ia32_broadcastf32x2_256_mask ((__v4sf) __A,\n \t\t\t\t\t\t          (__v8sf)_mm256_undefined_ps(),\n-\t\t\t\t\t\t\t  (__mmask8) -\n-\t\t\t\t\t\t\t  1);\n+\t\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __m256\n@@ -482,8 +479,7 @@ _mm256_broadcast_i32x2 (__m128i __A)\n   return (__m256i) __builtin_ia32_broadcasti32x2_256_mask ((__v4si)\n \t\t\t\t\t\t\t   __A,\n \t\t\t\t\t\t          (__v8si)_mm256_undefined_si256(),\n-\t\t\t\t\t\t\t   (__mmask8) -\n-\t\t\t\t\t\t\t   1);\n+\t\t\t\t\t\t\t   (__mmask8) -1);\n }\n \n extern __inline __m256i\n@@ -514,8 +510,7 @@ _mm_broadcast_i32x2 (__m128i __A)\n   return (__m128i) __builtin_ia32_broadcasti32x2_128_mask ((__v4si)\n \t\t\t\t\t\t\t   __A,\n \t\t\t\t\t\t          (__v4si)_mm_undefined_si128(),\n-\t\t\t\t\t\t\t   (__mmask8) -\n-\t\t\t\t\t\t\t   1);\n+\t\t\t\t\t\t\t   (__mmask8) -1);\n }\n \n extern __inline __m128i\n@@ -1351,8 +1346,7 @@ _mm256_extractf64x2_pd (__m256d __A, const int __imm)\n \t\t\t\t\t\t\t __imm,\n \t\t\t\t\t\t\t (__v2df)\n \t\t\t\t\t\t\t _mm_setzero_pd (),\n-\t\t\t\t\t\t\t (__mmask8) -\n-\t\t\t\t\t\t\t 1);\n+\t\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __m128d\n@@ -1388,8 +1382,7 @@ _mm256_extracti64x2_epi64 (__m256i __A, const int __imm)\n \t\t\t\t\t\t\t __imm,\n \t\t\t\t\t\t\t (__v2di)\n \t\t\t\t\t\t\t _mm_setzero_di (),\n-\t\t\t\t\t\t\t (__mmask8) -\n-\t\t\t\t\t\t\t 1);\n+\t\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __m128i\n@@ -1743,8 +1736,7 @@ _mm256_inserti64x2 (__m256i __A, __m128i __B, const int __imm)\n \t\t\t\t\t\t\t__imm,\n \t\t\t\t\t\t\t(__v4di)\n \t\t\t\t\t\t\t_mm256_setzero_si256 (),\n-\t\t\t\t\t\t\t(__mmask8) -\n-\t\t\t\t\t\t\t1);\n+\t\t\t\t\t\t\t(__mmask8) -1);\n }\n \n extern __inline __m256i\n@@ -1783,8 +1775,7 @@ _mm256_insertf64x2 (__m256d __A, __m128d __B, const int __imm)\n \t\t\t\t\t\t\t__imm,\n \t\t\t\t\t\t\t(__v4df)\n \t\t\t\t\t\t\t_mm256_setzero_pd (),\n-\t\t\t\t\t\t\t(__mmask8) -\n-\t\t\t\t\t\t\t1);\n+\t\t\t\t\t\t\t(__mmask8) -1);\n }\n \n extern __inline __m256d"}, {"sha": "01f26c19cdf66bcc135001c6cfa102871f506d11", "filename": "gcc/config/i386/avx512vlintrin.h", "status": "modified", "additions": 43, "deletions": 54, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1/gcc%2Fconfig%2Fi386%2Favx512vlintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1/gcc%2Fconfig%2Fi386%2Favx512vlintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512vlintrin.h?ref=c42b0bdf2f3d22167ed6d66a249d0d7c77a672b1", "patch": "@@ -2698,8 +2698,7 @@ _mm256_broadcast_f32x4 (__m128 __A)\n {\n   return (__m256) __builtin_ia32_broadcastf32x4_256_mask ((__v4sf) __A,\n \t\t\t\t\t\t          (__v8sf)_mm256_undefined_pd (),\n-\t\t\t\t\t\t\t  (__mmask8) -\n-\t\t\t\t\t\t\t  1);\n+\t\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __m256\n@@ -2728,8 +2727,7 @@ _mm256_broadcast_i32x4 (__m128i __A)\n   return (__m256i) __builtin_ia32_broadcasti32x4_256_mask ((__v4si)\n \t\t\t\t\t\t\t   __A,\n \t\t\t\t\t\t           (__v8si)_mm256_undefined_si256 (),\n-\t\t\t\t\t\t\t   (__mmask8) -\n-\t\t\t\t\t\t\t   1);\n+\t\t\t\t\t\t\t   (__mmask8) -1);\n }\n \n extern __inline __m256i\n@@ -6293,8 +6291,7 @@ _mm256_permutex2var_pd (__m256d __A, __m256i __I, __m256d __B)\n \t\t\t\t\t\t\t/* idx */ ,\n \t\t\t\t\t\t\t(__v4df) __A,\n \t\t\t\t\t\t\t(__v4df) __B,\n-\t\t\t\t\t\t\t(__mmask8) -\n-\t\t\t\t\t\t\t1);\n+\t\t\t\t\t\t\t(__mmask8) -1);\n }\n \n extern __inline __m256d\n@@ -6584,8 +6581,7 @@ _mm_permutex2var_pd (__m128d __A, __m128i __I, __m128d __B)\n \t\t\t\t\t\t\t/* idx */ ,\n \t\t\t\t\t\t\t(__v2df) __A,\n \t\t\t\t\t\t\t(__v2df) __B,\n-\t\t\t\t\t\t\t(__mmask8) -\n-\t\t\t\t\t\t\t1);\n+\t\t\t\t\t\t\t(__mmask8) -1);\n }\n \n extern __inline __m128d\n@@ -8259,8 +8255,7 @@ _mm256_conflict_epi64 (__m256i __A)\n   return (__m256i) __builtin_ia32_vpconflictdi_256_mask ((__v4di) __A,\n \t\t\t\t\t\t\t (__v4di)\n \t\t\t\t\t\t\t _mm256_setzero_si256 (),\n-\t\t\t\t\t\t\t (__mmask8) -\n-\t\t\t\t\t\t\t 1);\n+\t\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __m256i\n@@ -8291,8 +8286,7 @@ _mm256_conflict_epi32 (__m256i __A)\n   return (__m256i) __builtin_ia32_vpconflictsi_256_mask ((__v8si) __A,\n \t\t\t\t\t\t\t (__v8si)\n \t\t\t\t\t\t\t _mm256_setzero_si256 (),\n-\t\t\t\t\t\t\t (__mmask8) -\n-\t\t\t\t\t\t\t 1);\n+\t\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __m256i\n@@ -8381,8 +8375,7 @@ _mm_conflict_epi64 (__m128i __A)\n   return (__m128i) __builtin_ia32_vpconflictdi_128_mask ((__v2di) __A,\n \t\t\t\t\t\t\t (__v2di)\n \t\t\t\t\t\t\t _mm_setzero_di (),\n-\t\t\t\t\t\t\t (__mmask8) -\n-\t\t\t\t\t\t\t 1);\n+\t\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __m128i\n@@ -8413,8 +8406,7 @@ _mm_conflict_epi32 (__m128i __A)\n   return (__m128i) __builtin_ia32_vpconflictsi_128_mask ((__v4si) __A,\n \t\t\t\t\t\t\t (__v4si)\n \t\t\t\t\t\t\t _mm_setzero_si128 (),\n-\t\t\t\t\t\t\t (__mmask8) -\n-\t\t\t\t\t\t\t 1);\n+\t\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __m128i\n@@ -9291,8 +9283,7 @@ _mm256_inserti32x4 (__m256i __A, __m128i __B, const int __imm)\n \t\t\t\t\t\t\t__imm,\n \t\t\t\t\t\t\t(__v8si)\n \t\t\t\t\t\t\t_mm256_setzero_si256 (),\n-\t\t\t\t\t\t\t(__mmask8) -\n-\t\t\t\t\t\t\t1);\n+\t\t\t\t\t\t\t(__mmask8) -1);\n }\n \n extern __inline __m256i\n@@ -9367,8 +9358,7 @@ _mm256_extracti32x4_epi32 (__m256i __A, const int __imm)\n \t\t\t\t\t\t\t __imm,\n \t\t\t\t\t\t\t (__v4si)\n \t\t\t\t\t\t\t _mm_setzero_si128 (),\n-\t\t\t\t\t\t\t (__mmask8) -\n-\t\t\t\t\t\t\t 1);\n+\t\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __m128i\n@@ -9404,8 +9394,7 @@ _mm256_extractf32x4_ps (__m256 __A, const int __imm)\n \t\t\t\t\t\t\t__imm,\n \t\t\t\t\t\t\t(__v4sf)\n \t\t\t\t\t\t\t_mm_setzero_ps (),\n-\t\t\t\t\t\t\t(__mmask8) -\n-\t\t\t\t\t\t\t1);\n+\t\t\t\t\t\t\t(__mmask8) -1);\n }\n \n extern __inline __m128\n@@ -11797,7 +11786,7 @@ _mm256_cmpneq_epu32_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpd256_mask ((__v8si) __X,\n \t\t\t\t\t\t  (__v8si) __Y, 4,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -11815,7 +11804,7 @@ _mm256_cmplt_epu32_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpd256_mask ((__v8si) __X,\n \t\t\t\t\t\t  (__v8si) __Y, 1,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -11833,7 +11822,7 @@ _mm256_cmpge_epu32_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpd256_mask ((__v8si) __X,\n \t\t\t\t\t\t  (__v8si) __Y, 5,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -11851,7 +11840,7 @@ _mm256_cmple_epu32_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpd256_mask ((__v8si) __X,\n \t\t\t\t\t\t  (__v8si) __Y, 2,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -11869,7 +11858,7 @@ _mm256_cmpneq_epu64_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpq256_mask ((__v4di) __X,\n \t\t\t\t\t\t  (__v4di) __Y, 4,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -11887,7 +11876,7 @@ _mm256_cmplt_epu64_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpq256_mask ((__v4di) __X,\n \t\t\t\t\t\t  (__v4di) __Y, 1,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -11905,7 +11894,7 @@ _mm256_cmpge_epu64_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpq256_mask ((__v4di) __X,\n \t\t\t\t\t\t  (__v4di) __Y, 5,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -11923,7 +11912,7 @@ _mm256_cmple_epu64_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpq256_mask ((__v4di) __X,\n \t\t\t\t\t\t  (__v4di) __Y, 2,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -11941,7 +11930,7 @@ _mm256_cmpneq_epi32_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpd256_mask ((__v8si) __X,\n \t\t\t\t\t\t (__v8si) __Y, 4,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -11959,7 +11948,7 @@ _mm256_cmplt_epi32_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpd256_mask ((__v8si) __X,\n \t\t\t\t\t\t (__v8si) __Y, 1,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -11977,7 +11966,7 @@ _mm256_cmpge_epi32_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpd256_mask ((__v8si) __X,\n \t\t\t\t\t\t (__v8si) __Y, 5,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -11995,7 +11984,7 @@ _mm256_cmple_epi32_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpd256_mask ((__v8si) __X,\n \t\t\t\t\t\t (__v8si) __Y, 2,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12013,7 +12002,7 @@ _mm256_cmpneq_epi64_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpq256_mask ((__v4di) __X,\n \t\t\t\t\t\t (__v4di) __Y, 4,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12031,7 +12020,7 @@ _mm256_cmplt_epi64_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpq256_mask ((__v4di) __X,\n \t\t\t\t\t\t (__v4di) __Y, 1,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12049,7 +12038,7 @@ _mm256_cmpge_epi64_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpq256_mask ((__v4di) __X,\n \t\t\t\t\t\t (__v4di) __Y, 5,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12067,7 +12056,7 @@ _mm256_cmple_epi64_mask (__m256i __X, __m256i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpq256_mask ((__v4di) __X,\n \t\t\t\t\t\t (__v4di) __Y, 2,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12085,7 +12074,7 @@ _mm_cmpneq_epu32_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpd128_mask ((__v4si) __X,\n \t\t\t\t\t\t  (__v4si) __Y, 4,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12103,7 +12092,7 @@ _mm_cmplt_epu32_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpd128_mask ((__v4si) __X,\n \t\t\t\t\t\t  (__v4si) __Y, 1,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12121,7 +12110,7 @@ _mm_cmpge_epu32_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpd128_mask ((__v4si) __X,\n \t\t\t\t\t\t  (__v4si) __Y, 5,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12139,7 +12128,7 @@ _mm_cmple_epu32_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpd128_mask ((__v4si) __X,\n \t\t\t\t\t\t  (__v4si) __Y, 2,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12157,7 +12146,7 @@ _mm_cmpneq_epu64_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpq128_mask ((__v2di) __X,\n \t\t\t\t\t\t  (__v2di) __Y, 4,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12175,7 +12164,7 @@ _mm_cmplt_epu64_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpq128_mask ((__v2di) __X,\n \t\t\t\t\t\t  (__v2di) __Y, 1,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12193,7 +12182,7 @@ _mm_cmpge_epu64_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpq128_mask ((__v2di) __X,\n \t\t\t\t\t\t  (__v2di) __Y, 5,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12211,7 +12200,7 @@ _mm_cmple_epu64_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_ucmpq128_mask ((__v2di) __X,\n \t\t\t\t\t\t  (__v2di) __Y, 2,\n-\t\t\t\t\t\t  (__mmask8) - 1);\n+\t\t\t\t\t\t  (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12229,7 +12218,7 @@ _mm_cmpneq_epi32_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpd128_mask ((__v4si) __X,\n \t\t\t\t\t\t (__v4si) __Y, 4,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12247,7 +12236,7 @@ _mm_cmplt_epi32_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpd128_mask ((__v4si) __X,\n \t\t\t\t\t\t (__v4si) __Y, 1,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12265,7 +12254,7 @@ _mm_cmpge_epi32_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpd128_mask ((__v4si) __X,\n \t\t\t\t\t\t (__v4si) __Y, 5,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12283,7 +12272,7 @@ _mm_cmple_epi32_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpd128_mask ((__v4si) __X,\n \t\t\t\t\t\t (__v4si) __Y, 2,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12301,7 +12290,7 @@ _mm_cmpneq_epi64_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpq128_mask ((__v2di) __X,\n \t\t\t\t\t\t (__v2di) __Y, 4,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12319,7 +12308,7 @@ _mm_cmplt_epi64_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpq128_mask ((__v2di) __X,\n \t\t\t\t\t\t (__v2di) __Y, 1,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12337,7 +12326,7 @@ _mm_cmpge_epi64_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpq128_mask ((__v2di) __X,\n \t\t\t\t\t\t (__v2di) __Y, 5,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n extern __inline __mmask8\n@@ -12355,7 +12344,7 @@ _mm_cmple_epi64_mask (__m128i __X, __m128i __Y)\n {\n   return (__mmask8) __builtin_ia32_cmpq128_mask ((__v2di) __X,\n \t\t\t\t\t\t (__v2di) __Y, 2,\n-\t\t\t\t\t\t (__mmask8) - 1);\n+\t\t\t\t\t\t (__mmask8) -1);\n }\n \n #else"}]}