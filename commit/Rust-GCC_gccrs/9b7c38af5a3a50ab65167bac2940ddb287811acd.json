{"sha": "9b7c38af5a3a50ab65167bac2940ddb287811acd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI3YzM4YWY1YTNhNTBhYjY1MTY3YmFjMjk0MGRkYjI4NzgxMWFjZA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-08-04T08:37:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-04T08:37:31Z"}, "message": "restrict.adb: Improved messages for restriction warnings\n\n2008-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* restrict.adb: Improved messages for restriction warnings\n\n\t* restrict.ads: Improved messages for restriction messages\n\n\t* s-rident.ads (Profile_Name): Add No_Profile\n\nFrom-SVN: r138575", "tree": {"sha": "0ae7a257f92387bf9beeed516b151157d717c1d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ae7a257f92387bf9beeed516b151157d717c1d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b7c38af5a3a50ab65167bac2940ddb287811acd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b7c38af5a3a50ab65167bac2940ddb287811acd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b7c38af5a3a50ab65167bac2940ddb287811acd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b7c38af5a3a50ab65167bac2940ddb287811acd/comments", "author": null, "committer": null, "parents": [{"sha": "d6b251539f6ff149a4a5185f3026d09c81ecdbf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6b251539f6ff149a4a5185f3026d09c81ecdbf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6b251539f6ff149a4a5185f3026d09c81ecdbf4"}], "stats": {"total": 327, "additions": 213, "deletions": 114}, "files": [{"sha": "99a20afcad9c9642db2d56ba70c311572eadaca1", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 167, "deletions": 83, "changes": 250, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7c38af5a3a50ab65167bac2940ddb287811acd/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7c38af5a3a50ab65167bac2940ddb287811acd/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=9b7c38af5a3a50ab65167bac2940ddb287811acd", "patch": "@@ -52,22 +52,20 @@ package body Restrict is\n    -- Local Subprograms --\n    -----------------------\n \n-   procedure Restriction_Msg (Msg : String; R : String; N : Node_Id);\n-   --  Output error message at node N with given text, replacing the\n-   --  '%' in the message with the name of the restriction given as R,\n-   --  cased according to the current identifier casing. We do not use\n-   --  the normal insertion mechanism, since this requires an entry\n-   --  in the Names table, and this table will be locked if we are\n-   --  generating a message from gigi.\n+   procedure Restriction_Msg (R : Restriction_Id; N : Node_Id);\n+   --  Called if a violation of restriction R at node N is found. This routine\n+   --  outputs the appropriate message or messages taking care of warning vs\n+   --  real violation, serious vs non-serious, implicit vs explicit, the second\n+   --  message giving the profile name if needed, and the location information.\n \n    function Same_Unit (U1, U2 : Node_Id) return Boolean;\n    --  Returns True iff U1 and U2 represent the same library unit. Used for\n    --  handling of No_Dependence => Unit restriction case.\n \n    function Suppress_Restriction_Message (N : Node_Id) return Boolean;\n-   --  N is the node for a possible restriction violation message, but\n-   --  the message is to be suppressed if this is an internal file and\n-   --  this file is not the main unit.\n+   --  N is the node for a possible restriction violation message, but the\n+   --  message is to be suppressed if this is an internal file and this file is\n+   --  not the main unit. Returns True if message is to be suppressed.\n \n    -------------------\n    -- Abort_Allowed --\n@@ -148,7 +146,7 @@ package body Restrict is\n             if Name_Len < 5\n               or else (Name_Buffer (Name_Len - 3 .. Name_Len) /= \".ads\"\n                          and then\n-                       Name_Buffer (Name_Len - 4 .. Name_Len) /= \".adb\")\n+                       Name_Buffer (Name_Len - 3 .. Name_Len) /= \".adb\")\n             then\n                return;\n             end if;\n@@ -194,8 +192,6 @@ package body Restrict is\n       N : Node_Id;\n       V : Uint := Uint_Minus_1)\n    is\n-      Rimage : constant String := Restriction_Id'Image (R);\n-\n       VV : Integer;\n       --  V converted to integer form. If V is greater than Integer'Last,\n       --  it is reset to minus 1 (unknown value).\n@@ -311,35 +307,7 @@ package body Restrict is\n                    and then Restrictions.Value (R) = 0)\n         or else Restrictions.Count (R) > Restrictions.Value (R)\n       then\n-         Error_Msg_Sloc := Restrictions_Loc (R);\n-\n-         --  If we have a location for the Restrictions pragma, output it\n-\n-         if Error_Msg_Sloc > No_Location\n-           or else Error_Msg_Sloc = System_Location\n-         then\n-            if Restriction_Warnings (R) then\n-               Restriction_Msg (\"|violation of restriction %#?\", Rimage, N);\n-            else\n-               --  Normally a restriction violation is a non-serious error,\n-               --  but we treat violation of No_Finalization as a serious\n-               --  error, since we want to turn off expansion in this case,\n-               --  expansion just causes too many cascaded errors.\n-\n-               if R = No_Finalization then\n-                  Restriction_Msg (\"violation of restriction %#\", Rimage, N);\n-               else\n-                  Restriction_Msg (\"|violation of restriction %#\", Rimage, N);\n-               end if;\n-            end if;\n-\n-         --  Otherwise we have the case of an implicit restriction\n-         --  (e.g. a restriction implicitly set by another pragma)\n-\n-         else\n-            Restriction_Msg\n-              (\"|violation of implicit restriction %\", Rimage, N);\n-         end if;\n+         Restriction_Msg (R, N);\n       end if;\n    end Check_Restriction;\n \n@@ -543,43 +511,147 @@ package body Restrict is\n    -- Restriction_Msg --\n    ---------------------\n \n-   procedure Restriction_Msg (Msg : String; R : String; N : Node_Id) is\n-      B : String (1 .. Msg'Length + 2 * R'Length + 1);\n-      P : Natural := 1;\n+   procedure Restriction_Msg (R : Restriction_Id; N : Node_Id) is\n+      Msg : String (1 .. 100);\n+      Len : Natural := 0;\n \n-   begin\n-      Name_Buffer (1 .. R'Last) := R;\n-      Name_Len := R'Length;\n-      Set_Casing (Identifier_Casing (Get_Source_File_Index (Sloc (N))));\n-\n-      P := 0;\n-      for J in Msg'Range loop\n-         if Msg (J) = '%' then\n-            P := P + 1;\n-            B (P) := '`';\n-\n-            --  Put characters of image in message, quoting upper case letters\n-\n-            for J in 1 .. Name_Len loop\n-               if Name_Buffer (J) in 'A' .. 'Z' then\n-                  P := P + 1;\n-                  B (P) := ''';\n-               end if;\n+      procedure Add_Char (C : Character);\n+      --  Append given character to Msg, bumping Len\n \n-               P := P + 1;\n-               B (P) := Name_Buffer (J);\n-            end loop;\n+      procedure Add_Str (S : String);\n+      --  Append given string to Msg, bumping Len appropriately\n+\n+      procedure Id_Case (S : String; Quotes : Boolean := True);\n+      --  Given a string S, case it according to current identifier casing,\n+      --  and store in Error_Msg_String. Then append `~` to the message buffer\n+      --  to output the string unchanged surrounded in quotes. The quotes are\n+      --  suppressed if Quotes = False.\n+\n+      --------------\n+      -- Add_Char --\n+      --------------\n+\n+      procedure Add_Char (C : Character) is\n+      begin\n+         Len := Len + 1;\n+         Msg (Len) := C;\n+      end Add_Char;\n+\n+      -------------\n+      -- Add_Str --\n+      -------------\n \n-            P := P + 1;\n-            B (P) := '`';\n+      procedure Add_Str (S : String) is\n+      begin\n+         Msg (Len + 1 .. Len + S'Length) := S;\n+         Len := Len + S'Length;\n+      end Add_Str;\n \n+      -------------\n+      -- Id_Case --\n+      -------------\n+\n+      procedure Id_Case (S : String; Quotes : Boolean := True) is\n+      begin\n+         Name_Buffer (1 .. S'Last) := S;\n+         Name_Len := S'Length;\n+         Set_Casing (Identifier_Casing (Get_Source_File_Index (Sloc (N))));\n+         Error_Msg_Strlen := Name_Len;\n+         Error_Msg_String (1 .. Name_Len) := Name_Buffer (1 .. Name_Len);\n+\n+         if Quotes then\n+            Add_Str (\"`~`\");\n          else\n-            P := P + 1;\n-            B (P) := Msg (J);\n+            Add_Char ('~');\n+         end if;\n+      end Id_Case;\n+\n+   --  Start of processing for Restriction_Msg\n+\n+   begin\n+      --  Set warning message if warning\n+\n+      if Restriction_Warnings (R) then\n+         Add_Char ('?');\n+\n+      --  If real violation (not warning), then mark it as non-serious unless\n+      --  it is a violation of No_Finalization in which case we leave it as a\n+      --  serious message, since otherwise we get crashes during attempts to\n+      --  expand stuff that is not properly formed due to assumptions made\n+      --  about no finalization being present.\n+\n+      elsif R /= No_Finalization then\n+         Add_Char ('|');\n+      end if;\n+\n+      Error_Msg_Sloc := Restrictions_Loc (R);\n+\n+      --  Set main message, adding implicit if no source location\n+\n+      if Error_Msg_Sloc > No_Location\n+        or else Error_Msg_Sloc = System_Location\n+      then\n+         Add_Str (\"violation of restriction \");\n+      else\n+         Add_Str (\"violation of implicit restriction \");\n+         Error_Msg_Sloc := No_Location;\n+      end if;\n+\n+      --  Case of parametrized restriction\n+\n+      if R in All_Parameter_Restrictions then\n+         Add_Char ('`');\n+         Id_Case (Restriction_Id'Image (R), Quotes => False);\n+         Add_Str (\" = ^`\");\n+         Error_Msg_Uint_1 := UI_From_Int (Int (Restrictions.Value (R)));\n+\n+      --  Case of boolean restriction\n+\n+      else\n+         Id_Case (Restriction_Id'Image (R));\n+      end if;\n+\n+      --  Case of no secondary profile continuation message\n+\n+      if Restriction_Profile_Name (R) = No_Profile then\n+         if Error_Msg_Sloc /= No_Location then\n+            Add_Char ('#');\n+         end if;\n+\n+         Add_Char ('!');\n+         Error_Msg_N (Msg (1 .. Len), N);\n+\n+      --  Case of secondary profile continuation message present\n+\n+      else\n+         Add_Char ('!');\n+         Error_Msg_N (Msg (1 .. Len), N);\n+\n+         Len := 0;\n+         Add_Char ('\\');\n+\n+         --  Set as warning if warning case\n+\n+         if Restriction_Warnings (R) then\n+            Add_Char ('?');\n          end if;\n-      end loop;\n \n-      Error_Msg_N (B (1 .. P), N);\n+         --  Set main message\n+\n+         Add_Str (\"from profile \");\n+         Id_Case (Profile_Name'Image (Restriction_Profile_Name (R)));\n+\n+         --  Add location if we have one\n+\n+         if Error_Msg_Sloc /= No_Location then\n+            Add_Char ('#');\n+         end if;\n+\n+         --  Output unconditional message and we are done\n+\n+         Add_Char ('!');\n+         Error_Msg_N (Msg (1 .. Len), N);\n+      end if;\n    end Restriction_Msg;\n \n    ---------------\n@@ -634,6 +706,10 @@ package body Restrict is\n                   Set_Restriction (J, N, V (J));\n                end if;\n \n+               --  Record that this came from a Profile[_Warnings] restriction\n+\n+               Restriction_Profile_Name (J) := P;\n+\n                --  Set warning flag, except that we do not set the warning\n                --  flag if the restriction was already active and this is\n                --  the warning case. That avoids a warning overriding a real\n@@ -683,13 +759,17 @@ package body Restrict is\n          Restricted_Profile_Cached := False;\n       end if;\n \n-      --  Set location, but preserve location of system\n-      --  restriction for nice error msg with run time name\n+      --  Set location, but preserve location of system restriction for nice\n+      --  error msg with run time name.\n \n       if Restrictions_Loc (R) /= System_Location then\n          Restrictions_Loc (R) := Sloc (N);\n       end if;\n \n+      --  Note restriction came from restriction pragma, not profile\n+\n+      Restriction_Profile_Name (R) := No_Profile;\n+\n       --  Record the restriction if we are in the main unit, or in the extended\n       --  main unit. The reason that we test separately for Main_Unit is that\n       --  gnat.adc is processed with Current_Sem_Unit = Main_Unit, but nodes in\n@@ -731,12 +811,11 @@ package body Restrict is\n          Restrictions_Loc (R) := Sloc (N);\n       end if;\n \n-      --  Record the restriction if we are in the main unit,\n-      --  or in the extended main unit. The reason that we\n-      --  test separately for Main_Unit is that gnat.adc is\n-      --  processed with Current_Sem_Unit = Main_Unit, but\n-      --  nodes in gnat.adc do not appear to be the extended\n-      --  main source unit (they probably should do ???)\n+      --  Record the restriction if we are in the main unit, or in the extended\n+      --  main unit. The reason that we test separately for Main_Unit is that\n+      --  gnat.adc is processed with Current_Sem_Unit = Main_Unit, but nodes in\n+      --  gnat.adc do not appear to be the extended main source unit (they\n+      --  probably should do ???)\n \n       if Current_Sem_Unit = Main_Unit\n         or else In_Extended_Main_Source_Unit (N)\n@@ -751,15 +830,20 @@ package body Restrict is\n             Main_Restrictions.Value (R) := V;\n          end if;\n       end if;\n+\n+      --  Note restriction came from restriction pragma, not profile\n+\n+      Restriction_Profile_Name (R) := No_Profile;\n    end Set_Restriction;\n \n    -----------------------------------\n    -- Set_Restriction_No_Dependence --\n    -----------------------------------\n \n    procedure Set_Restriction_No_Dependence\n-     (Unit : Node_Id;\n-      Warn : Boolean)\n+     (Unit    : Node_Id;\n+      Warn    : Boolean;\n+      Profile : Profile_Name := No_Profile)\n    is\n    begin\n       --  Loop to check for duplicate entry\n@@ -782,7 +866,7 @@ package body Restrict is\n \n       --  Entry is not currently in table\n \n-      No_Dependence.Append ((Unit, Warn));\n+      No_Dependence.Append ((Unit, Warn, Profile));\n    end Set_Restriction_No_Dependence;\n \n    ----------------------------------"}, {"sha": "2553e0444aa3c05b357293950df3b1e058c46832", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 24, "deletions": 14, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7c38af5a3a50ab65167bac2940ddb287811acd/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7c38af5a3a50ab65167bac2940ddb287811acd/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=9b7c38af5a3a50ab65167bac2940ddb287811acd", "patch": "@@ -50,6 +50,12 @@ package Restrict is\n    --  pragma, and a value of System_Location is used for restrictions\n    --  set from package Standard by the processing in Targparm.\n \n+   Restriction_Profile_Name : array (All_Restrictions) of Profile_Name;\n+   --  Entries in this array are valid only if the corresponding restriction\n+   --  in Restrictions set. The value is the corresponding profile name if the\n+   --  restriction was set by a Profile or Profile_Warnings pragma. The value\n+   --  is No_Profile in all other cases.\n+\n    Main_Restrictions : Restrictions_Info := No_Restrictions;\n    --  This variable records only restrictions found in any units of the\n    --  main extended unit. These are the variables used for ali file output,\n@@ -154,6 +160,10 @@ package Restrict is\n \n       Warn : Boolean;\n       --  True if from Restriction_Warnings, False if from Restrictions\n+\n+      Profile : Profile_Name;\n+      --  Set to name of profile from which No_Dependence entry came, or to\n+      --  No_Profile if a pragma Restriction set the No_Dependence entry.\n    end record;\n \n    package No_Dependence is new Table.Table (\n@@ -190,14 +200,13 @@ package Restrict is\n       V : Uint := Uint_Minus_1);\n    --  Checks that the given restriction is not set, and if it is set, an\n    --  appropriate message is posted on the given node. Also records the\n-   --  violation in the appropriate internal arrays. Note that it is\n-   --  mandatory to always use this routine to check if a restriction\n-   --  is violated. Such checks must never be done directly by the caller,\n-   --  since otherwise violations in the absence of restrictions are not\n-   --  properly recorded. The value of V is relevant only for parameter\n-   --  restrictions, and in this case indicates the exact count for the\n-   --  violation. If the exact count is not known, V is left at its\n-   --  default value of -1 which indicates an unknown count.\n+   --  violation in the appropriate internal arrays. Note that it is mandatory\n+   --  to always use this routine to check if a restriction is violated. Such\n+   --  checks must never be done directly by the caller, since otherwise\n+   --  violations in the absence of restrictions are not properly recorded. The\n+   --  value of V is relevant only for parameter restrictions, and in this case\n+   --  indicates the exact count for the violation. If the exact count is not\n+   --  known, V is left at its default of -1 which indicates an unknown count.\n \n    procedure Check_Restriction_No_Dependence (U : Node_Id; Err : Node_Id);\n    --  Called when a dependence on a unit is created (either implicitly, or by\n@@ -302,18 +311,19 @@ package Restrict is\n    --  parameter restriction, and the corresponding value V is given.\n \n    procedure Set_Restriction_No_Dependence\n-     (Unit : Node_Id;\n-      Warn : Boolean);\n+     (Unit    : Node_Id;\n+      Warn    : Boolean;\n+      Profile : Profile_Name := No_Profile);\n    --  Sets given No_Dependence restriction in table if not there already.\n    --  Warn is True if from Restriction_Warnings, or for Restrictions if flag\n    --  Treat_Restrictions_As_Warnings is set. False if from Restrictions and\n-   --  this flag is not set.\n+   --  this flag is not set. Profile is set to a non-default value if the\n+   --  No_Dependence restriction comes from a Profile pragma.\n \n    function Tasking_Allowed return Boolean;\n    pragma Inline (Tasking_Allowed);\n-   --  Tests to see if tasking operations are allowed by the current\n-   --  restrictions settings. For tasking to be allowed Max_Tasks must\n-   --  be non-zero.\n+   --  Tests if tasking operations are allowed by the current restrictions\n+   --  settings. For tasking to be allowed Max_Tasks must be non-zero.\n \n private\n    type Save_Cunit_Boolean_Restrictions is"}, {"sha": "9dbaa73ded4ec1fb95b7123fbff73d64ab039f2d", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 22, "deletions": 17, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7c38af5a3a50ab65167bac2940ddb287811acd/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7c38af5a3a50ab65167bac2940ddb287811acd/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=9b7c38af5a3a50ab65167bac2940ddb287811acd", "patch": "@@ -50,9 +50,9 @@ package System.Rident is\n    --  The following enumeration type defines the set of restriction\n    --  identifiers that are implemented in GNAT.\n \n-   --  To add a new restriction identifier, add an entry with the name\n-   --  to be used in the pragma, and add appropriate calls to the\n-   --  Restrict.Check_Restriction routine.\n+   --  To add a new restriction identifier, add an entry with the name to be\n+   --  used in the pragma, and add calls to the Restrict.Check_Restriction\n+   --  routine as appropriate.\n \n    type Restriction_Id is\n \n@@ -199,7 +199,7 @@ package System.Rident is\n    subtype All_Parameter_Restrictions is\n      Restriction_Id range\n        Max_Protected_Entries .. Max_Storage_At_Blocking;\n-   --  All restrictions that are take a parameter\n+   --  All restrictions that take a parameter\n \n    subtype Checked_Parameter_Restrictions is\n      All_Parameter_Restrictions range\n@@ -225,8 +225,8 @@ package System.Rident is\n    subtype Checked_Val_Parameter_Restrictions is\n      Checked_Parameter_Restrictions range\n        Max_Protected_Entries .. Max_Tasks;\n-   --  Restrictions with parameter where the count is known at least in\n-   --  some cases by the compiler/binder.\n+   --  Restrictions with parameter where the count is known at least in some\n+   --  cases by the compiler/binder.\n \n    subtype Checked_Zero_Parameter_Restrictions is\n      Checked_Parameter_Restrictions range\n@@ -307,24 +307,29 @@ package System.Rident is\n    -- Profile Definitions and Data --\n    ----------------------------------\n \n-   type Profile_Name is (Ravenscar, Restricted);\n-   --  Names of recognized profiles\n+   type Profile_Name is (No_Profile, Ravenscar, Restricted);\n+   --  Names of recognized profiles. No_Profile is used to indicate that a\n+   --  restriction came from pragma Restrictions[_Warning], as opposed to\n+   --  pragma Profile[_Warning].\n+\n+   subtype Profile_Name_Actual is Profile_Name range Ravenscar .. Restricted;\n+   --  Actual used profile names\n \n    type Profile_Data is record\n       Set : Restriction_Flags;\n-      --  Set to True if given restriction must be set for the profile,\n-      --  and False if it need not be set (False does not mean that it\n-      --  must not be set, just that it need not be set). If the flag\n-      --  is True for a parameter restriction, then the Value array\n-      --  gives the maximum value permitted by the profile.\n+      --  Set to True if given restriction must be set for the profile, and\n+      --  False if it need not be set (False does not mean that it must not be\n+      --  set, just that it need not be set). If the flag is True for a\n+      --  parameter restriction, then the Value array gives the maximum value\n+      --  permitted by the profile.\n \n       Value : Restriction_Values;\n-      --  An entry in this array is meaningful only if the corresponding\n-      --  flag in Set is True. In that case, the value in this array is\n-      --  the maximum value of the parameter permitted by the profile.\n+      --  An entry in this array is meaningful only if the corresponding flag\n+      --  in Set is True. In that case, the value in this array is the maximum\n+      --  value of the parameter permitted by the profile.\n    end record;\n \n-   Profile_Info : array (Profile_Name) of Profile_Data :=\n+   Profile_Info : array (Profile_Name_Actual) of Profile_Data :=\n \n                      --  Restricted Profile\n "}]}