{"sha": "4a0a75dd441da8834907fc7d78634b458f71ce58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGEwYTc1ZGQ0NDFkYTg4MzQ5MDdmYzdkNzg2MzRiNDU4ZjcxY2U1OA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2003-05-16T18:57:46Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2003-05-16T18:57:46Z"}, "message": "alpha.c (print_operand_address, [...]): Use string concatentation on HOST_WIDE_INT_PRINT_* format specifier to collapse...\n\n\t* alpha.c (print_operand_address, alpha_start_function,\n\tunicosmk_output_ssib): Use string concatentation on\n\tHOST_WIDE_INT_PRINT_* format specifier to collapse multiple\n\tfunction calls into one.\n\t* arm.c (arm_print_operand): Likewise.\n\t* cris.c (cris_asm_output_mi_thunk): Likewise.\n\t* frv.c (frv_asm_output_mi_thunk): Likewise.\n\t* ia64.c (ia64_print_operand, process_set): Likewise.\n\t* m68k.c (m68k_output_function_epilogue, m68k_output_mi_thunk):\n\tLikewise.\n\t* mips/iris5gas.h (PUT_SDB_SIZE): Likewise.\n\t* mips.h (PUT_SDB_INT_VAL, PUT_SDB_SIZE): Likewise.\n\t* pa.c (output_div_insn, pa_asm_output_mi_thunk): Likewise.\n\t* pa.h (PRINT_OPERAND_ADDRESS): Likewise.\n\t* rs6000.c (rs6000_va_start, print_operand_address): Likewise.\n\t* s390.c (s390_assemble_integer): Likewise.\n\t* sparc.c (sparc_flat_function_prologue,\n\tsparc_flat_function_epilogue): Likewise.\n\t* stormy16.c (xstormy16_print_operand_address, xstormy16_print_operand): Likewise.\n\t* vax.c (vax_output_mi_thunk): Likewise.\n\nFrom-SVN: r66876", "tree": {"sha": "0b677c3c72e427d52d52d0d8e91a633ff8a6f68c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b677c3c72e427d52d52d0d8e91a633ff8a6f68c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a0a75dd441da8834907fc7d78634b458f71ce58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a0a75dd441da8834907fc7d78634b458f71ce58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a0a75dd441da8834907fc7d78634b458f71ce58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a0a75dd441da8834907fc7d78634b458f71ce58/comments", "author": null, "committer": null, "parents": [{"sha": "6f562bc641d930d071fa591988776971ffc96eae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f562bc641d930d071fa591988776971ffc96eae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f562bc641d930d071fa591988776971ffc96eae"}], "stats": {"total": 260, "additions": 103, "deletions": 157}, "files": [{"sha": "67ac0fd98578e9fce3a9e3e646c746af2f0eaf60", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a0a75dd441da8834907fc7d78634b458f71ce58", "patch": "@@ -1,5 +1,26 @@\n 2003-05-16  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n+\t* alpha.c (print_operand_address, alpha_start_function,\n+\tunicosmk_output_ssib): Use string concatentation on\n+\tHOST_WIDE_INT_PRINT_* format specifier to collapse multiple\n+\tfunction calls into one.\n+\t* arm.c (arm_print_operand): Likewise.\n+\t* cris.c (cris_asm_output_mi_thunk): Likewise.\n+\t* frv.c (frv_asm_output_mi_thunk): Likewise.\n+\t* ia64.c (ia64_print_operand, process_set): Likewise.\n+\t* m68k.c (m68k_output_function_epilogue, m68k_output_mi_thunk):\n+\tLikewise.\n+\t* mips/iris5gas.h (PUT_SDB_SIZE): Likewise.\n+\t* mips.h (PUT_SDB_INT_VAL, PUT_SDB_SIZE): Likewise.\n+\t* pa.c (output_div_insn, pa_asm_output_mi_thunk): Likewise.\n+\t* pa.h (PRINT_OPERAND_ADDRESS): Likewise.\n+\t* rs6000.c (rs6000_va_start, print_operand_address): Likewise.\n+\t* s390.c (s390_assemble_integer): Likewise.\n+\t* sparc.c (sparc_flat_function_prologue,\n+\tsparc_flat_function_epilogue): Likewise. \n+\t* stormy16.c (xstormy16_print_operand_address, xstormy16_print_operand): Likewise.\n+\t* vax.c (vax_output_mi_thunk): Likewise.\n+\n \t* frv.c (frv_print_operand_memory_reference): Fix format specifier\n \twarning.\n \t(frv_rtx_costs): Mark parameter with ATTRIBUTE_UNUSED."}, {"sha": "276428574e653d13ae44a80d596164e8de838543", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 17, "deletions": 35, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=4a0a75dd441da8834907fc7d78634b458f71ce58", "patch": "@@ -6112,10 +6112,7 @@ print_operand_address (file, addr)\n \t}\n \n       if (offset)\n-\t{\n-\t  fputc ('+', file);\n-\t  fprintf (file, HOST_WIDE_INT_PRINT_DEC, offset);\n-\t}\n+\tfprintf (file, \"+\" HOST_WIDE_INT_PRINT_DEC, offset);\n       \n       addr = XEXP (addr, 0);\n       if (GET_CODE (addr) == REG)\n@@ -6159,8 +6156,7 @@ print_operand_address (file, addr)\n   else\n     abort ();\n \n-  fprintf (file, HOST_WIDE_INT_PRINT_DEC, offset);\n-  fprintf (file, \"($%d)\", basereg);\n+  fprintf (file, HOST_WIDE_INT_PRINT_DEC \"($%d)\", offset, basereg);\n }\n \f\n /* Emit RTL insns to initialize the variable parts of a trampoline at\n@@ -7692,23 +7688,17 @@ alpha_start_function (file, fnname, decl)\n   if (TARGET_ABI_UNICOSMK)\n     ;\n   else if (TARGET_ABI_OPEN_VMS)\n-    {\n-      fprintf (file, \"\\t.frame $%d,\", vms_unwind_regno);\n-      fprintf (file, HOST_WIDE_INT_PRINT_DEC,\n-\t       frame_size >= (1UL << 31) ? 0 : frame_size);\n-      fputs (\",$26,\", file);\n-      fprintf (file, HOST_WIDE_INT_PRINT_DEC, reg_offset);\n-      fputs (\"\\n\", file);\n-    }\n+    fprintf (file, \"\\t.frame $%d,\" HOST_WIDE_INT_PRINT_DEC \",$26,\"\n+\t     HOST_WIDE_INT_PRINT_DEC \"\\n\",\n+\t     vms_unwind_regno,\n+\t     frame_size >= (1UL << 31) ? 0 : frame_size,\n+\t     reg_offset);\n   else if (!flag_inhibit_size_directive)\n-    {\n-      fprintf (file, \"\\t.frame $%d,\",\n-\t       (frame_pointer_needed\n-\t\t? HARD_FRAME_POINTER_REGNUM : STACK_POINTER_REGNUM));\n-      fprintf (file, HOST_WIDE_INT_PRINT_DEC,\n-\t       frame_size >= (1UL << 31) ? 0 : frame_size);\n-      fprintf (file, \",$26,%d\\n\", current_function_pretend_args_size);\n-    }\n+    fprintf (file, \"\\t.frame $%d,\" HOST_WIDE_INT_PRINT_DEC \",$26,%d\\n\",\n+\t     (frame_pointer_needed\n+\t      ? HARD_FRAME_POINTER_REGNUM : STACK_POINTER_REGNUM),\n+\t     frame_size >= (1UL << 31) ? 0 : frame_size,\n+\t     current_function_pretend_args_size);\n \n   /* Describe which registers were spilled.  */\n   if (TARGET_ABI_UNICOSMK)\n@@ -7728,23 +7718,17 @@ alpha_start_function (file, fnname, decl)\n     {\n       if (imask)\n \t{\n-\t  fprintf (file, \"\\t.mask 0x%lx,\", imask);\n-\t  fprintf (file, HOST_WIDE_INT_PRINT_DEC,\n+\t  fprintf (file, \"\\t.mask 0x%lx,\" HOST_WIDE_INT_PRINT_DEC \"\\n\", imask,\n \t\t   frame_size >= (1UL << 31) ? 0 : reg_offset - frame_size);\n-\t  putc ('\\n', file);\n \n \t  for (i = 0; i < 32; ++i)\n \t    if (imask & (1UL << i))\n \t      reg_offset += 8;\n \t}\n \n       if (fmask)\n-\t{\n-\t  fprintf (file, \"\\t.fmask 0x%lx,\", fmask);\n-\t  fprintf (file, HOST_WIDE_INT_PRINT_DEC,\n-\t\t   frame_size >= (1UL << 31) ? 0 : reg_offset - frame_size);\n-\t  putc ('\\n', file);\n-\t}\n+\tfprintf (file, \"\\t.fmask 0x%lx,\" HOST_WIDE_INT_PRINT_DEC \"\\n\", fmask,\n+\t\t frame_size >= (1UL << 31) ? 0 : reg_offset - frame_size);\n     }\n \n #if TARGET_ABI_OPEN_VMS\n@@ -10067,14 +10051,12 @@ unicosmk_output_ssib (file, fnname)\n   for (x = machine->first_ciw; x; x = XEXP (x, 1))\n     {\n       ciw = XEXP (x, 0);\n-      fprintf (file, \"\\t.quad\\t\");\n #if HOST_BITS_PER_WIDE_INT == 32\n-      fprintf (file, HOST_WIDE_INT_PRINT_DOUBLE_HEX,\n+      fprintf (file, \"\\t.quad\\t\" HOST_WIDE_INT_PRINT_DOUBLE_HEX \"\\n\",\n \t       CONST_DOUBLE_HIGH (ciw), CONST_DOUBLE_LOW (ciw));\n #else\n-      fprintf (file, HOST_WIDE_INT_PRINT_HEX, INTVAL (ciw));\n+      fprintf (file, \"\\t.quad\\t\" HOST_WIDE_INT_PRINT_HEX \"\\n\", INTVAL (ciw));\n #endif\n-      fprintf (file, \"\\n\");\n     }\n }\n "}, {"sha": "a13a696a35d67a4b5d771dbcf7cebbc0b37ba5b1", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=4a0a75dd441da8834907fc7d78634b458f71ce58", "patch": "@@ -9551,10 +9551,7 @@ arm_print_operand (stream, x, code)\n \t    if (val == -1)\n \t      arm_print_operand (stream, XEXP (x, 1), 0);\n \t    else\n-\t      {\n-\t\tfputc ('#', stream);\n-\t\tfprintf (stream, HOST_WIDE_INT_PRINT_DEC, val);\n-\t      }\n+\t      fprintf (stream, \"#\" HOST_WIDE_INT_PRINT_DEC, val);\n \t  }\n       }\n       return;"}, {"sha": "bff96df76efeec255d1011785ea222e33deff15e", "filename": "gcc/config/cris/cris.c", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fcris%2Fcris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fcris%2Fcris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.c?ref=4a0a75dd441da8834907fc7d78634b458f71ce58", "patch": "@@ -2736,17 +2736,13 @@ cris_asm_output_mi_thunk (stream, thunkdecl, delta, vcall_offset, funcdecl)\n      tree funcdecl;\n {\n   if (delta > 0)\n-    {\n-      fprintf (stream, \"\\tadd%s \", ADDITIVE_SIZE_MODIFIER (delta));\n-      fprintf (stream, HOST_WIDE_INT_PRINT_DEC, delta);\n-      fprintf (stream, \",$%s\\n\", reg_names[CRIS_FIRST_ARG_REG]);\n-    }\n+    fprintf (stream, \"\\tadd%s \" HOST_WIDE_INT_PRINT_DEC \",$%s\\n\",\n+\t     ADDITIVE_SIZE_MODIFIER (delta), delta,\n+\t     reg_names[CRIS_FIRST_ARG_REG]);\n   else if (delta < 0)\n-    {\n-      fprintf (stream, \"\\tsub%s \", ADDITIVE_SIZE_MODIFIER (-delta));\n-      fprintf (stream, HOST_WIDE_INT_PRINT_DEC, -delta);\n-      fprintf (stream, \",$%s\\n\", reg_names[CRIS_FIRST_ARG_REG]);\n-    }\n+    fprintf (stream, \"\\tsub%s \" HOST_WIDE_INT_PRINT_DEC \",$%s\\n\",\n+\t     ADDITIVE_SIZE_MODIFIER (-delta), -delta,\n+\t     reg_names[CRIS_FIRST_ARG_REG]);\n \n   if (flag_pic)\n     {"}, {"sha": "822c19a0693160f2d22c1d94cbb06640417669ea", "filename": "gcc/config/frv/frv.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Ffrv%2Ffrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Ffrv%2Ffrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.c?ref=4a0a75dd441da8834907fc7d78634b458f71ce58", "patch": "@@ -1828,13 +1828,11 @@ frv_asm_output_mi_thunk (file, thunk_fndecl, delta, vcall_offset, function)\n     fprintf (file, \"\\taddi %s,#%d,%s\\n\", name_arg0, (int) delta, name_arg0);\n   else\n     {\n-      const char *name_add = reg_names[TEMP_REGNO];\n-      fprintf (file, \"\\tsethi%s #hi(\", parallel);\n-      fprintf (file, HOST_WIDE_INT_PRINT_DEC, delta);\n-      fprintf (file, \"),%s\\n\", name_add);\n-      fprintf (file, \"\\tsetlo #lo(\");\n-      fprintf (file, HOST_WIDE_INT_PRINT_DEC, delta);\n-      fprintf (file, \"),%s\\n\", name_add);\n+      const char *const name_add = reg_names[TEMP_REGNO];\n+      fprintf (file, \"\\tsethi%s #hi(\" HOST_WIDE_INT_PRINT_DEC \"),%s\\n\",\n+\t       parallel, delta, name_add);\n+      fprintf (file, \"\\tsetlo #lo(\" HOST_WIDE_INT_PRINT_DEC \"),%s\\n\",\n+\t       delta, name_add);\n       fprintf (file, \"\\tadd %s,%s,%s\\n\", name_add, name_arg0, name_arg0);\n     }\n "}, {"sha": "84f45af4f7b02ed79c24ddf8c8faa4f7aff444b9", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=4a0a75dd441da8834907fc7d78634b458f71ce58", "patch": "@@ -3940,9 +3940,7 @@ ia64_print_operand (file, x, code)\n \t    break;\n \t  }\n \n-\tputc (',', file);\n-\tputc (' ', file);\n-\tfprintf (file, HOST_WIDE_INT_PRINT_DEC, value);\n+\tfprintf (file, \", \" HOST_WIDE_INT_PRINT_DEC, value);\n \treturn;\n       }\n \n@@ -7512,12 +7510,8 @@ process_set (asm_out_file, pat)\n \t  if (op0 == dest && GET_CODE (op1) == CONST_INT)\n \t    {\n \t      if (INTVAL (op1) < 0)\n-\t\t{\n-\t\t  fputs (\"\\t.fframe \", asm_out_file);\n-\t\t  fprintf (asm_out_file, HOST_WIDE_INT_PRINT_DEC,\n-\t\t\t   -INTVAL (op1));\n-\t\t  fputc ('\\n', asm_out_file);\n-\t\t}\n+\t\tfprintf (asm_out_file, \"\\t.fframe \"HOST_WIDE_INT_PRINT_DEC\"\\n\",\n+\t\t\t -INTVAL (op1));\n \t      else\n \t\tprocess_epilogue ();\n \t    }"}, {"sha": "6f554a52ef863640fd113fa2b542d49e7b3c8da9", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=4a0a75dd441da8834907fc7d78634b458f71ce58", "patch": "@@ -4021,11 +4021,8 @@ m68k_output_mi_thunk (file, thunk, delta, vcall_offset, function)\n   else if (delta < 0 && delta >= -8)\n     asm_fprintf (file, \"\\tsubq.l %I%d,4(%Rsp)\\n\", (int) -delta);\n   else\n-    {\n-      asm_fprintf (file, \"\\tadd.l %I\");\n-      fprintf (file, HOST_WIDE_INT_PRINT_DEC, delta);\n-      asm_fprintf (file, \",4(%Rsp)\\n\");\n-    }\n+    asm_fprintf (file, \"\\tadd.l %I\" HOST_WIDE_INT_PRINT_DEC \",4(%Rsp)\\n\",\n+\t\t delta);\n \n   xops[0] = DECL_RTL (function);\n "}, {"sha": "30c3a04c726802928c261d0d8a888bf38be29e99", "filename": "gcc/config/mips/iris5gas.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fmips%2Firis5gas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fmips%2Firis5gas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis5gas.h?ref=4a0a75dd441da8834907fc7d78634b458f71ce58", "patch": "@@ -53,9 +53,8 @@ crtbegin.o%s\"\n #define PUT_SDB_SIZE(a)                                       \\\n do {                                                  \\\n   extern FILE *asm_out_text_file;                     \\\n-  fprintf (asm_out_text_file, \"\\t.esize\\t\");          \\\n-  fprintf (asm_out_text_file, HOST_WIDE_INT_PRINT_DEC, (HOST_WIDE_INT) (a)); \\\n-  fprintf (asm_out_text_file, \";\");                   \\\n+  fprintf (asm_out_text_file, \"\\t.esize\\t\" HOST_WIDE_INT_PRINT_DEC \";\", \\\n+ \t   (HOST_WIDE_INT) (a));\t\t      \\\n } while (0)\n \n #undef PUT_SDB_TYPE"}, {"sha": "1d22ca36a097a5e114747c938d1333de09c7fe32", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=4a0a75dd441da8834907fc7d78634b458f71ce58", "patch": "@@ -1360,9 +1360,8 @@ do {\t\t\t\t\t\t\t\\\n #define PUT_SDB_INT_VAL(a)\t\t\t\t\\\n do {\t\t\t\t\t\t\t\\\n   extern FILE *asm_out_text_file;\t\t\t\\\n-  fprintf (asm_out_text_file, \"\\t.val\\t\");\t\t\\\n-  fprintf (asm_out_text_file, HOST_WIDE_INT_PRINT_DEC, (HOST_WIDE_INT)(a)); \\\n-  fprintf (asm_out_text_file, \";\");\t\t\t\\\n+  fprintf (asm_out_text_file, \"\\t.val\\t\" HOST_WIDE_INT_PRINT_DEC \";\", \\\n+\t   (HOST_WIDE_INT)(a));\t\t\t        \\\n } while (0)\n \n #define PUT_SDB_VAL(a)\t\t\t\t\t\\\n@@ -1404,9 +1403,8 @@ do {\t\t\t\t\t\t\t\\\n #define PUT_SDB_SIZE(a)\t\t\t\t\t\\\n do {\t\t\t\t\t\t\t\\\n   extern FILE *asm_out_text_file;\t\t\t\\\n-  fprintf (asm_out_text_file, \"\\t.size\\t\");\t\t\\\n-  fprintf (asm_out_text_file, HOST_WIDE_INT_PRINT_DEC, (HOST_WIDE_INT)(a)); \\\n-  fprintf (asm_out_text_file, \";\");\t\t\t\\\n+  fprintf (asm_out_text_file, \"\\t.size\\t\" HOST_WIDE_INT_PRINT_DEC \";\", \\\n+\t   (HOST_WIDE_INT)(a));\t\t\t        \\\n } while (0)\n \n #define PUT_SDB_DIM(a)\t\t\t\t\t\\"}, {"sha": "0826467f61611d9589844edeb7377a9486500427", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 14, "deletions": 23, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=4a0a75dd441da8834907fc7d78634b458f71ce58", "patch": "@@ -5077,15 +5077,15 @@ output_div_insn (operands, unsignedp, insn)\n \t}\n       if (unsignedp)\n \t{\n-\t  sprintf (buf, \"$$divU_\");\n-\t  sprintf (buf + 7, HOST_WIDE_INT_PRINT_DEC, INTVAL (operands[0]));\n+\t  sprintf (buf, \"$$divU_\" HOST_WIDE_INT_PRINT_DEC,\n+\t\t   INTVAL (operands[0]));\n \t  return output_millicode_call (insn,\n \t\t\t\t\tgen_rtx_SYMBOL_REF (SImode, buf));\n \t}\n       else\n \t{\n-\t  sprintf (buf, \"$$divI_\");\n-\t  sprintf (buf + 7, HOST_WIDE_INT_PRINT_DEC, INTVAL (operands[0]));\n+\t  sprintf (buf, \"$$divI_\" HOST_WIDE_INT_PRINT_DEC,\n+\t\t   INTVAL (operands[0]));\n \t  return output_millicode_call (insn,\n \t\t\t\t\tgen_rtx_SYMBOL_REF (SImode, buf));\n \t}\n@@ -7195,25 +7195,20 @@ pa_asm_output_mi_thunk (file, thunk_fndecl, delta, vcall_offset, function)\n \t      fprintf (file, \"\\tmtsp %%r1,%%sr0\\n\");\n \t      fprintf (file, \"\\tbe 0(%%sr0,%%r22)\\n\\tldo \");\n \t    }\n-\t  fprintf (file, HOST_WIDE_INT_PRINT_DEC, delta);\n-\t  fprintf (file, \"(%%r26),%%r26\\n\");\n+\t  fprintf (file, HOST_WIDE_INT_PRINT_DEC \"(%%r26),%%r26\\n\", delta);\n \t}\n       else\n-\t{\n-\t  fprintf (file, \"\\tb %s\\n\\tldo \", target_name);\n-\t  fprintf (file, HOST_WIDE_INT_PRINT_DEC, delta);\n-\t  fprintf (file, \"(%%r26),%%r26\\n\");\n-\t}\n+\tfprintf (file, \"\\tb %s\\n\\tldo \" HOST_WIDE_INT_PRINT_DEC\n+\t\t \"(%%r26),%%r26\\n\",\n+\t\t target_name, delta);\n     }\n   else\n     {\n       if (!TARGET_64BIT && !TARGET_PORTABLE_RUNTIME && flag_pic)\n \t{\n-\t  fprintf (file, \"\\taddil L'\");\n-\t  fprintf (file, HOST_WIDE_INT_PRINT_DEC, delta);\n-\t  fprintf (file, \",%%r26\\n\\tldo R'\");\n-\t  fprintf (file, HOST_WIDE_INT_PRINT_DEC, delta);\n-\t  fprintf (file, \"(%%r1),%%r26\\n\");\n+\t  fprintf (file, \"\\taddil L'\" HOST_WIDE_INT_PRINT_DEC\n+\t\t   \",%%r26\\n\\tldo R'\" HOST_WIDE_INT_PRINT_DEC \"(%%r1),%%r26\\n\",\n+\t\t   delta, delta);\n \t  fprintf (file, \"\\taddil LT'%s,%%r19\\n\", lab);\n \t  fprintf (file, \"\\tldw RT'%s(%%r1),%%r22\\n\", lab);\n \t  fprintf (file, \"\\tldw 0(%%sr0,%%r22),%%r22\\n\");\n@@ -7231,13 +7226,9 @@ pa_asm_output_mi_thunk (file, thunk_fndecl, delta, vcall_offset, function)\n \t    }\n \t}\n       else\n-\t{\n-\t  fprintf (file, \"\\taddil L'\");\n-\t  fprintf (file, HOST_WIDE_INT_PRINT_DEC, delta);\n-\t  fprintf (file, \",%%r26\\n\\tb %s\\n\\tldo R'\", target_name);\n-\t  fprintf (file, HOST_WIDE_INT_PRINT_DEC, delta);\n-\t  fprintf (file, \"(%%r1),%%r26\\n\");\n-\t}\n+\tfprintf (file, \"\\taddil L'\" HOST_WIDE_INT_PRINT_DEC\n+\t\t \",%%r26\\n\\tb %s\\n\\tldo R'\" HOST_WIDE_INT_PRINT_DEC\n+\t\t \"(%%r1),%%r26\\n\", delta, target_name, delta);\n     }\n     \n   fprintf (file, \"\\t.EXIT\\n\\t.PROCEND\\n\");"}, {"sha": "1db28cf9f1cecae43c0b0c3a9def620dc4984820", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=4a0a75dd441da8834907fc7d78634b458f71ce58", "patch": "@@ -1827,8 +1827,7 @@ do { \t\t\t\t\t\t\t\t\t\\\n       fputs (\")\", FILE);\t\t\t\t\t\t\\\n       break;\t\t\t\t\t\t\t\t\\\n     case CONST_INT:\t\t\t\t\t\t\t\\\n-      fprintf (FILE, HOST_WIDE_INT_PRINT_DEC, INTVAL (addr));\t\t\\\n-      fprintf (FILE, \"(%%r0)\");\t\t\t\t\t\t\\\n+      fprintf (FILE, HOST_WIDE_INT_PRINT_DEC \"(%%r0)\", INTVAL (addr));\t\\\n       break;\t\t\t\t\t\t\t\t\\\n     default:\t\t\t\t\t\t\t\t\\\n       output_addr_const (FILE, addr);\t\t\t\t\t\\"}, {"sha": "2b53284f93fba73760dfc185a432ed6c3dc396ba", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=4a0a75dd441da8834907fc7d78634b458f71ce58", "patch": "@@ -4226,15 +4226,9 @@ rs6000_va_start (valist, nextarg)\n   n_fpr = current_function_args_info.fregno - FP_ARG_MIN_REG;\n \n   if (TARGET_DEBUG_ARG)\n-    {\n-      fputs (\"va_start: words = \", stderr);\n-      fprintf (stderr, HOST_WIDE_INT_PRINT_DEC, words);\n-      fputs (\", n_gpr = \", stderr);\n-      fprintf (stderr, HOST_WIDE_INT_PRINT_DEC, n_gpr);\n-      fputs (\", n_fpr = \", stderr);\n-      fprintf (stderr, HOST_WIDE_INT_PRINT_DEC, n_fpr);\n-      putc ('\\n', stderr);\n-    }\n+    fprintf (stderr, \"va_start: words = \"HOST_WIDE_INT_PRINT_DEC\", n_gpr = \"\n+\t     HOST_WIDE_INT_PRINT_DEC\", n_fpr = \"HOST_WIDE_INT_PRINT_DEC\"\\n\",\n+\t     words, n_gpr, n_fpr);\n \n   t = build (MODIFY_EXPR, TREE_TYPE (gpr), gpr, build_int_2 (n_gpr, 0));\n   TREE_SIDE_EFFECTS (t) = 1;\n@@ -8824,10 +8818,8 @@ print_operand_address (file, x)\n \t\t reg_names[ REGNO (XEXP (x, 1)) ]);\n     }\n   else if (GET_CODE (x) == PLUS && GET_CODE (XEXP (x, 1)) == CONST_INT)\n-    {\n-      fprintf (file, HOST_WIDE_INT_PRINT_DEC, INTVAL (XEXP (x, 1)));\n-      fprintf (file, \"(%s)\", reg_names[ REGNO (XEXP (x, 0)) ]);\n-    }\n+    fprintf (file, HOST_WIDE_INT_PRINT_DEC \"(%s)\",\n+\t     INTVAL (XEXP (x, 1)), reg_names[ REGNO (XEXP (x, 0)) ]);\n #if TARGET_ELF\n   else if (GET_CODE (x) == LO_SUM && GET_CODE (XEXP (x, 0)) == REG\n            && CONSTANT_P (XEXP (x, 1)))"}, {"sha": "43d63dab8a6a0b77fcb99fdcd6a315a7a9925e30", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=4a0a75dd441da8834907fc7d78634b458f71ce58", "patch": "@@ -3461,9 +3461,8 @@ s390_assemble_integer (x, size, aligned_p)\n   if (size == 8 && aligned_p\n       && GET_CODE (x) == CONST_INT && INTVAL (x) < INT_MIN)\n     {\n-      fputs (\"\\t.quad\\t\", asm_out_file);\n-      fprintf (asm_out_file, HOST_WIDE_INT_PRINT_HEX, INTVAL (x));\n-      putc ('\\n', asm_out_file);\n+      fprintf (asm_out_file, \"\\t.quad\\t\" HOST_WIDE_INT_PRINT_HEX \"\\n\",\n+\t       INTVAL (x));\n       return true;\n     }\n   return default_assemble_integer (x, size, aligned_p);"}, {"sha": "24907f146bcac45c2070f1efe34818d75fc0f14e", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 16, "deletions": 26, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=4a0a75dd441da8834907fc7d78634b458f71ce58", "patch": "@@ -7222,10 +7222,9 @@ sparc_flat_function_prologue (file, size)\n \t    }\n \t  else\n \t    {\n-\t      fprintf (file, \"\\tset\\t\");\n-\t      fprintf (file, HOST_WIDE_INT_PRINT_DEC, size);\n-\t      fprintf (file, \", %s\\n\\tsub\\t%s, %s, %s\\n\",\n-\t\t       t1_str, sp_str, t1_str, sp_str);\n+\t      fprintf (file, \"\\tset\\t\" HOST_WIDE_INT_PRINT_DEC\n+\t\t       \", %s\\n\\tsub\\t%s, %s, %s\\n\",\n+\t\t       size, t1_str, sp_str, t1_str, sp_str);\n \t      if (gmask & HARD_FRAME_POINTER_MASK)\n \t\t{\n \t\t  fprintf (file, \"\\tst\\t%s, [%s+%d]\\n\",\n@@ -7283,10 +7282,9 @@ sparc_flat_function_prologue (file, size)\n \t    }\n \t  else\n \t    {\n-\t      fprintf (file, \"\\tset\\t\");\n-\t      fprintf (file, HOST_WIDE_INT_PRINT_DEC, size1);\n-\t      fprintf (file, \", %s\\n\\tsub\\t%s, %s, %s\\n\",\n-\t\t       t1_str, sp_str, t1_str, sp_str);\n+\t      fprintf (file, \"\\tset\\t\" HOST_WIDE_INT_PRINT_DEC\n+\t\t       \", %s\\n\\tsub\\t%s, %s, %s\\n\",\n+\t\t       size1, t1_str, sp_str, t1_str, sp_str);\n \t      if (gmask & HARD_FRAME_POINTER_MASK)\n \t\t{\n \t\t  fprintf (file, \"\\tst\\t%s, [%s+%d]\\n\\tadd\\t%s, %s, %s\\t%s# set up frame pointer\\n\",\n@@ -7321,10 +7319,9 @@ sparc_flat_function_prologue (file, size)\n \t\t\t\t   gmask & ~(HARD_FRAME_POINTER_MASK | RETURN_ADDR_MASK),\n \t\t\t\t   current_frame_info.fmask,\n \t\t\t\t   \"st\", \"std\", -size1);\n-\t  fprintf (file, \"\\tset\\t\");\n-\t  fprintf (file, HOST_WIDE_INT_PRINT_DEC, size - size1);\n-\t  fprintf (file, \", %s\\n\\tsub\\t%s, %s, %s\\n\",\n-\t\t   t1_str, sp_str, t1_str, sp_str);\n+\t  fprintf (file, \"\\tset\\t\" HOST_WIDE_INT_PRINT_DEC\n+\t\t   \", %s\\n\\tsub\\t%s, %s, %s\\n\",\n+\t\t   size - size1, t1_str, sp_str, t1_str, sp_str);\n \t  if (dwarf2out_do_frame ())\n \t    if (! (gmask & HARD_FRAME_POINTER_MASK))\n \t      dwarf2out_def_cfa (\"\", STACK_POINTER_REGNUM, size);\n@@ -7383,11 +7380,8 @@ sparc_flat_function_epilogue (file, size)\n \t delay slot if not otherwise filled by the reload sequence.  */\n \n       if (size > 4095)\n-        {\n-\t  fprintf (file, \"\\tset\\t\");\n-\t  fprintf (file, HOST_WIDE_INT_PRINT_DEC, size);\n-\t  fprintf (file, \", %s\\n\", t1_str);\n-\t}\n+\tfprintf (file, \"\\tset\\t\" HOST_WIDE_INT_PRINT_DEC \", %s\\n\",\n+\t\t size, t1_str);\n \n       if (frame_pointer_needed)\n \t{\n@@ -7413,10 +7407,9 @@ sparc_flat_function_epilogue (file, size)\n \t  /* Offset to register save area from %sp.  */\n \t  reg_offset = size1 - reg_offset;\n \n-\t  fprintf (file, \"\\tset\\t\");\n-\t  fprintf (file, HOST_WIDE_INT_PRINT_DEC, size1);\n-\t  fprintf (file, \", %s\\n\\tadd\\t%s, %s, %s\\n\",\n-\t\t   t1_str, sp_str, t1_str, sp_str);\n+\t  fprintf (file, \"\\tset\\t\" HOST_WIDE_INT_PRINT_DEC\n+\t\t   \", %s\\n\\tadd\\t%s, %s, %s\\n\",\n+\t\t   size1, t1_str, sp_str, t1_str, sp_str);\n \t}\n \n       /* We must restore the frame pointer and return address reg first\n@@ -7446,11 +7439,8 @@ sparc_flat_function_epilogue (file, size)\n \t{\n \t  size -= size1;\n \t  if (size > 4095)\n-\t    {\n-\t      fprintf (file, \"\\tset\\t\");\n-\t      fprintf (file, HOST_WIDE_INT_PRINT_DEC, size);\n-\t      fprintf (file, \", %s\\n\", t1_str);\n-\t    }\n+\t    fprintf (file, \"\\tset\\t\" HOST_WIDE_INT_PRINT_DEC \", %s\\n\",\n+\t\t     size, t1_str);\n \t}\n \n       if (current_function_returns_struct)"}, {"sha": "956a6af56455d41785acdf5ee1e30d94fcc4664a", "filename": "gcc/config/stormy16/stormy16.c", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.c?ref=4a0a75dd441da8834907fc7d78634b458f71ce58", "patch": "@@ -1661,10 +1661,7 @@ xstormy16_print_operand_address (file, address)\n   if (post_inc)\n     fputs (\"++\", file);\n   if (offset != 0)\n-    {\n-      fputc (',', file);\n-      fprintf (file, HOST_WIDE_INT_PRINT_DEC, offset);\n-    }\n+    fprintf (file, \",\" HOST_WIDE_INT_PRINT_DEC, offset);\n   fputc (')', file);\n }\n \n@@ -1695,8 +1692,7 @@ xstormy16_print_operand (file, x, code)\n \tif (l == -1)\n \t  output_operand_lossage (\"`B' operand has multiple bits set\");\n \t\n-\tfputs (IMMEDIATE_PREFIX, file);\n-\tfprintf (file, HOST_WIDE_INT_PRINT_DEC, l);\n+\tfprintf (file, IMMEDIATE_PREFIX HOST_WIDE_INT_PRINT_DEC, l);\n \treturn;\n       }\n \n@@ -1725,8 +1721,7 @@ xstormy16_print_operand (file, x, code)\n \tif (code == 'O')\n \t  xx = -xx;\n \t\n-\tfputs (IMMEDIATE_PREFIX, file);\n-\tfprintf (file, HOST_WIDE_INT_PRINT_DEC, xx - 1);\n+\tfprintf (file, IMMEDIATE_PREFIX HOST_WIDE_INT_PRINT_DEC, xx - 1);\n \treturn;\n       }\n "}, {"sha": "70c63e4821b1dde2f93d77f331f01376da0513db", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0a75dd441da8834907fc7d78634b458f71ce58/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=4a0a75dd441da8834907fc7d78634b458f71ce58", "patch": "@@ -787,9 +787,7 @@ vax_output_mi_thunk (file, thunk, delta, vcall_offset, function)\n      HOST_WIDE_INT vcall_offset ATTRIBUTE_UNUSED;\n      tree function;\n {\n-  fprintf (file, \"\\t.word 0x0ffc\\n\");\t\t\t\t\t\n-  fprintf (file, \"\\taddl2 $\");\n-  fprintf (file, HOST_WIDE_INT_PRINT_DEC, delta);\n+  fprintf (file, \"\\t.word 0x0ffc\\n\\taddl2 $\" HOST_WIDE_INT_PRINT_DEC, delta);\n   asm_fprintf (file, \",4(%Rap)\\n\");\n   fprintf (file, \"\\tjmp \");\t\t\t\t\t\t\n   assemble_name (file,  XSTR (XEXP (DECL_RTL (function), 0), 0));\t"}]}