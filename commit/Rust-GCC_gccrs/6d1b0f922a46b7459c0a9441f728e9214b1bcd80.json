{"sha": "6d1b0f922a46b7459c0a9441f728e9214b1bcd80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQxYjBmOTIyYTQ2Yjc0NTljMGE5NDQxZjcyOGU5MjE0YjFiY2Q4MA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2010-05-20T04:44:11Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2010-05-20T04:44:11Z"}, "message": "re PR fortran/43851 (Add _gfortran_error_stop_numeric)\n\n2010-05-19 Jerry DeLisle <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/43851\n\t* runtime/stop.c (error_stop_numeric): New function and updated comment.\n\tAdd declaration for stop_numeric and remove declaration for stop_string.\n\t(stop_string): Use for blank STOP.\n\t(stop_numeric): Remove use of special -1 stop code.\n\t* runtime/pause.c (do_pause): Use stop_string for blank stop.\n\t(pause_numeric): Remove use of special -1 pause code.\n\t* gfortran.map: Add new symbol to run-time library.\n\t* libgfortran.h: Move declaration for stop_string to here to make\n\tfunction visible for do_pause. Remove declaration for stop_numeric.\n\n2010-05-19 Jerry DeLisle <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/43851\n\t* trans-stmt.c (gfc_trans_stop): Add generation of call to\n\tgfortran_error_stop_numeric. Fix up some whitespace. Use stop_string for\n\tblank STOP, handling a null expression. (gfc_trans_pause): Use\n\tpause_string for blank PAUSE.\n\t* trans.h: Add external function declaration for error_stop_numeric.\n\t* trans-decl.c (gfc_build_builtin_function_decls): Add the building of\n\tthe declaration for the library call. Adjust whitespaces.\n\t* match.c (gfc_match_stopcode): Remove use of the actual stop code to\n\tsignal no stop code. Match the expression following the stop and pass\n\tthat to the translators. Remove the old use of digit matching.  Add\n\tchecks that the stop_code expression is INTEGER or CHARACTER, constant,\n\tand if CHARACTER, default character KIND.\n\n2010-05-19 Jerry DeLisle <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/43851\n\t* gfortran.dg/label_1.f90: Update test.\n\nFrom-SVN: r159609", "tree": {"sha": "9eb7755ffeb7c601a8f6b2bf59f09b47b648f7a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9eb7755ffeb7c601a8f6b2bf59f09b47b648f7a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d1b0f922a46b7459c0a9441f728e9214b1bcd80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d1b0f922a46b7459c0a9441f728e9214b1bcd80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d1b0f922a46b7459c0a9441f728e9214b1bcd80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/comments", "author": null, "committer": null, "parents": [{"sha": "b41e2d6d522cbbf4b001d0caa381ca25e942618b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b41e2d6d522cbbf4b001d0caa381ca25e942618b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b41e2d6d522cbbf4b001d0caa381ca25e942618b"}], "stats": {"total": 207, "additions": 146, "deletions": 61}, "files": [{"sha": "a1bc38eff840fb85835a95d261f29d4cf6ec551f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6d1b0f922a46b7459c0a9441f728e9214b1bcd80", "patch": "@@ -1,3 +1,19 @@\n+2010-05-19 Jerry DeLisle <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/43851\n+\t* trans-stmt.c (gfc_trans_stop): Add generation of call to\n+\tgfortran_error_stop_numeric. Fix up some whitespace. Use stop_string for\n+\tblank STOP, handling a null expression. (gfc_trans_pause): Use\n+\tpause_string for blank PAUSE.\n+\t* trans.h: Add external function declaration for error_stop_numeric.\n+\t* trans-decl.c (gfc_build_builtin_function_decls): Add the building of\n+\tthe declaration for the library call. Adjust whitespaces.\n+\t* match.c (gfc_match_stopcode): Remove use of the actual stop code to\n+\tsignal no stop code. Match the expression following the stop and pass\n+\tthat to the translators. Remove the old use of digit matching.  Add\n+\tchecks that the stop_code expression is INTEGER or CHARACTER, constant,\n+\tand if CHARACTER, default character KIND.\n+\n 2010-05-19  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/44055"}, {"sha": "0f970f6f2d1b90edf5b1d676b9c948f0b7424354", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 30, "deletions": 24, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=6d1b0f922a46b7459c0a9441f728e9214b1bcd80", "patch": "@@ -2006,42 +2006,23 @@ gfc_match_cycle (void)\n static match\n gfc_match_stopcode (gfc_statement st)\n {\n-  int stop_code;\n   gfc_expr *e;\n   match m;\n-  int cnt;\n \n-  stop_code = -1;\n   e = NULL;\n \n   if (gfc_match_eos () != MATCH_YES)\n     {\n-      m = gfc_match_small_literal_int (&stop_code, &cnt);\n+      m = gfc_match_expr (&e);\n       if (m == MATCH_ERROR)\n \tgoto cleanup;\n-\n-      if (m == MATCH_YES && cnt > 5)\n-\t{\n-\t  gfc_error (\"Too many digits in STOP code at %C\");\n-\t  goto cleanup;\n-\t}\n-\n       if (m == MATCH_NO)\n-\t{\n-\t  /* Try a character constant.  */\n-\t  m = gfc_match_expr (&e);\n-\t  if (m == MATCH_ERROR)\n-\t    goto cleanup;\n-\t  if (m == MATCH_NO)\n-\t    goto syntax;\n-\t  if (e->ts.type != BT_CHARACTER || e->expr_type != EXPR_CONSTANT)\n-\t    goto syntax;\n-\t}\n-\n-      if (gfc_match_eos () != MATCH_YES)\n \tgoto syntax;\n     }\n \n+  if (gfc_match_eos () != MATCH_YES)\n+    goto syntax;\n+\n   if (gfc_pure (NULL))\n     {\n       gfc_error (\"%s statement not allowed in PURE procedure at %C\",\n@@ -2055,6 +2036,31 @@ gfc_match_stopcode (gfc_statement st)\n       return MATCH_ERROR;\n     }\n \n+  if (e != NULL)\n+    {\n+      if (!(e->ts.type == BT_CHARACTER || e->ts.type == BT_INTEGER))\n+\t{\n+\t  gfc_error (\"STOP code at %L must be either INTEGER or CHARACTER type\",\n+\t\t     &e->where);\n+\t  return MATCH_ERROR;\n+\t}\n+\n+      if (e->ts.type == BT_CHARACTER\n+\t  && e->ts.kind != gfc_default_character_kind)\n+\t{\n+\t  gfc_error (\"STOP code at %L must be default character KIND=%d\",\n+\t\t     &e->where, (int) gfc_default_character_kind);\n+\t  return MATCH_ERROR;\n+\t}\n+\n+      if (e->expr_type != EXPR_CONSTANT)\n+\t{\n+\t  gfc_error (\"STOP code at %L must be a constant expression\",\n+\t\t     &e->where);\n+\t  return MATCH_ERROR;\n+\t}\n+    }\n+\n   switch (st)\n     {\n     case ST_STOP:\n@@ -2071,7 +2077,7 @@ gfc_match_stopcode (gfc_statement st)\n     }\n \n   new_st.expr1 = e;\n-  new_st.ext.stop_code = stop_code;\n+  new_st.ext.stop_code = -1;\n \n   return MATCH_YES;\n "}, {"sha": "fa826799c550be39ec37e4165a1948c5ce80ea6a", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=6d1b0f922a46b7459c0a9441f728e9214b1bcd80", "patch": "@@ -86,6 +86,7 @@ tree gfor_fndecl_pause_numeric;\n tree gfor_fndecl_pause_string;\n tree gfor_fndecl_stop_numeric;\n tree gfor_fndecl_stop_string;\n+tree gfor_fndecl_error_stop_numeric;\n tree gfor_fndecl_error_stop_string;\n tree gfor_fndecl_runtime_error;\n tree gfor_fndecl_runtime_error_at;\n@@ -2774,31 +2775,41 @@ gfc_build_builtin_function_decls (void)\n   gfor_fndecl_stop_numeric =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"stop_numeric\")),\n \t\t\t\t     void_type_node, 1, gfc_int4_type_node);\n-  /* Stop doesn't return.  */\n+  /* STOP doesn't return.  */\n   TREE_THIS_VOLATILE (gfor_fndecl_stop_numeric) = 1;\n \n+\n   gfor_fndecl_stop_string =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"stop_string\")),\n \t\t\t\t     void_type_node, 2, pchar_type_node,\n-                                     gfc_int4_type_node);\n-  /* Stop doesn't return.  */\n+\t\t\t\t     gfc_int4_type_node);\n+  /* STOP doesn't return.  */\n   TREE_THIS_VOLATILE (gfor_fndecl_stop_string) = 1;\n \n+\n+  gfor_fndecl_error_stop_numeric =\n+    gfc_build_library_function_decl (get_identifier (PREFIX(\"error_stop_numeric\")),\n+\t\t\t\t     void_type_node, 1, gfc_int4_type_node);\n+  /* ERROR STOP doesn't return.  */\n+  TREE_THIS_VOLATILE (gfor_fndecl_error_stop_numeric) = 1;\n+\n+\n   gfor_fndecl_error_stop_string =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"error_stop_string\")),\n \t\t\t\t     void_type_node, 2, pchar_type_node,\n-                                     gfc_int4_type_node);\n+\t\t\t\t     gfc_int4_type_node);\n   /* ERROR STOP doesn't return.  */\n   TREE_THIS_VOLATILE (gfor_fndecl_error_stop_string) = 1;\n \n+\n   gfor_fndecl_pause_numeric =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"pause_numeric\")),\n \t\t\t\t     void_type_node, 1, gfc_int4_type_node);\n \n   gfor_fndecl_pause_string =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"pause_string\")),\n \t\t\t\t     void_type_node, 2, pchar_type_node,\n-                                     gfc_int4_type_node);\n+\t\t\t\t     gfc_int4_type_node);\n \n   gfor_fndecl_runtime_error =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"runtime_error\")),"}, {"sha": "79294646db5d28d3b57f701a0a621ef8518e9b64", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=6d1b0f922a46b7459c0a9441f728e9214b1bcd80", "patch": "@@ -552,9 +552,17 @@ gfc_trans_pause (gfc_code * code)\n \n   if (code->expr1 == NULL)\n     {\n-      tmp = build_int_cst (gfc_int4_type_node, code->ext.stop_code);\n+      tmp = build_int_cst (gfc_int4_type_node, 0);\n       tmp = build_call_expr_loc (input_location,\n-\t\t\t     gfor_fndecl_pause_numeric, 1, tmp);\n+\t\t\t\t gfor_fndecl_pause_string, 2,\n+\t\t\t\t build_int_cst (pchar_type_node, 0), tmp);\n+    }\n+  else if (code->expr1->ts.type == BT_INTEGER)\n+    {\n+      gfc_conv_expr (&se, code->expr1);\n+      tmp = build_call_expr_loc (input_location,\n+\t\t\t\t gfor_fndecl_pause_numeric, 1,\n+\t\t\t\t fold_convert (gfc_int4_type_node, se.expr));\n     }\n   else\n     {\n@@ -588,17 +596,27 @@ gfc_trans_stop (gfc_code *code, bool error_stop)\n \n   if (code->expr1 == NULL)\n     {\n-      tmp = build_int_cst (gfc_int4_type_node, code->ext.stop_code);\n+      tmp = build_int_cst (gfc_int4_type_node, 0);\n+      tmp = build_call_expr_loc (input_location,\n+\t\t\t     \t error_stop ? gfor_fndecl_error_stop_string\n+\t\t\t\t : gfor_fndecl_stop_string,\n+\t\t\t     \t 2, build_int_cst (pchar_type_node, 0), tmp);\n+    }\n+  else if (code->expr1->ts.type == BT_INTEGER)\n+    {\n+      gfc_conv_expr (&se, code->expr1);\n       tmp = build_call_expr_loc (input_location,\n-\t\t\t     gfor_fndecl_stop_numeric, 1, tmp);\n+      \t\t\t\t error_stop ? gfor_fndecl_error_stop_numeric\n+\t\t\t   \t : gfor_fndecl_stop_numeric, 1,\n+\t\t\t\t fold_convert (gfc_int4_type_node, se.expr));\n     }\n   else\n     {\n       gfc_conv_expr_reference (&se, code->expr1);\n       tmp = build_call_expr_loc (input_location,\n-\t\t\t     error_stop ? gfor_fndecl_error_stop_string\n-\t\t\t\t      : gfor_fndecl_stop_string,\n-\t\t\t     2, se.expr, se.string_length);\n+\t\t\t     \t error_stop ? gfor_fndecl_error_stop_string\n+\t\t\t\t : gfor_fndecl_stop_string,\n+\t\t\t     \t 2, se.expr, se.string_length);\n     }\n \n   gfc_add_expr_to_block (&se.pre, tmp);"}, {"sha": "9ee81480c5b22e5c30db0bc8a66eb1d758c2e403", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=6d1b0f922a46b7459c0a9441f728e9214b1bcd80", "patch": "@@ -538,6 +538,7 @@ extern GTY(()) tree gfor_fndecl_pause_numeric;\n extern GTY(()) tree gfor_fndecl_pause_string;\n extern GTY(()) tree gfor_fndecl_stop_numeric;\n extern GTY(()) tree gfor_fndecl_stop_string;\n+extern GTY(()) tree gfor_fndecl_error_stop_numeric;\n extern GTY(()) tree gfor_fndecl_error_stop_string;\n extern GTY(()) tree gfor_fndecl_runtime_error;\n extern GTY(()) tree gfor_fndecl_runtime_error_at;"}, {"sha": "a3658dbd564f6bd8a958b940611aace9ac2720a3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d1b0f922a46b7459c0a9441f728e9214b1bcd80", "patch": "@@ -1,3 +1,8 @@\n+2010-05-19 Jerry DeLisle <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/43851\n+\t* gfortran.dg/label_1.f90: Update test.\n+\n 2010-05-19  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.dg/lto/ipareference2_0.c: New file."}, {"sha": "b5959dad7d16e33153df819bd88bec662eab1dd3", "filename": "gcc/testsuite/gfortran.dg/label_1.f90", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/gcc%2Ftestsuite%2Fgfortran.dg%2Flabel_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/gcc%2Ftestsuite%2Fgfortran.dg%2Flabel_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flabel_1.f90?ref=6d1b0f922a46b7459c0a9441f728e9214b1bcd80", "patch": "@@ -4,7 +4,6 @@\n program a\n 0056780 continue    ! { dg-error \"Too many digits\" }\n 0 continue          ! { dg-error \"Zero is not a valid statement label\" }\n-  stop 001234       ! { dg-error \"Too many digits\" }\n end program a\n \n "}, {"sha": "0f0014118344e7ecd86ff7ae2ff78d361775e72e", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=6d1b0f922a46b7459c0a9441f728e9214b1bcd80", "patch": "@@ -1,3 +1,16 @@\n+2010-05-19 Jerry DeLisle <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/43851\n+\t* runtime/stop.c (error_stop_numeric): New function and updated comment.\n+\tAdd declaration for stop_numeric and remove declaration for stop_string.\n+\t(stop_string): Use for blank STOP.\n+\t(stop_numeric): Remove use of special -1 stop code.\n+\t* runtime/pause.c (do_pause): Use stop_string for blank stop.\n+\t(pause_numeric): Remove use of special -1 pause code.\n+\t* gfortran.map: Add new symbol to run-time library.\n+\t* libgfortran.h: Move declaration for stop_string to here to make\n+\tfunction visible for do_pause. Remove declaration for stop_numeric.\n+\n 2010-05-08  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \t* io/unix.h (mem_alloc_r): Fix typo to reduce visibility."}, {"sha": "3e854eb0eae5f3801f45e3d616925f4b0c9b6136", "filename": "libgfortran/gfortran.map", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/libgfortran%2Fgfortran.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/libgfortran%2Fgfortran.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgfortran.map?ref=6d1b0f922a46b7459c0a9441f728e9214b1bcd80", "patch": "@@ -1103,6 +1103,11 @@ GFORTRAN_1.3 {\n     _gfortran_error_stop_string;\n } GFORTRAN_1.2; \n \n+GFORTRAN_1.4 {\n+  global:\n+    _gfortran_error_stop_numeric;\n+} GFORTRAN_1.3; \n+\n F2C_1.0 {\n   global:\n     _gfortran_f2c_specific__abs_c4;"}, {"sha": "99f7342958fd136fc14dd2395f44692c3902a312", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=6d1b0f922a46b7459c0a9441f728e9214b1bcd80", "patch": "@@ -827,8 +827,9 @@ internal_proto(filename_from_unit);\n \n /* stop.c */\n \n-extern void stop_numeric (GFC_INTEGER_4) __attribute__ ((noreturn));\n-iexport_proto(stop_numeric);\n+extern void stop_string (const char *, GFC_INTEGER_4)\n+  __attribute__ ((noreturn));\n+export_proto(stop_string);\n \n /* reshape_packed.c */\n "}, {"sha": "28edf6c50299faf75875f95163f4ece53c7bb5b6", "filename": "libgfortran/runtime/pause.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/libgfortran%2Fruntime%2Fpause.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/libgfortran%2Fruntime%2Fpause.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fpause.c?ref=6d1b0f922a46b7459c0a9441f728e9214b1bcd80", "patch": "@@ -26,7 +26,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n #include <string.h>\n \n-\n static void\n do_pause (void)\n {\n@@ -36,26 +35,24 @@ do_pause (void)\n \n   fgets(buff, 4, stdin);\n   if (strncmp(buff, \"go\\n\", 3) != 0)\n-    stop_numeric (-1);\n+    stop_string ('\\0', 0);\n   st_printf (\"RESUMED\\n\");\n }\n \n-/* A numeric or blank STOP statement.  */\n+/* A numeric PAUSE statement.  */\n \n-extern void pause_numeric (GFC_INTEGER_4 code);\n+extern void pause_numeric (GFC_INTEGER_4);\n export_proto(pause_numeric);\n \n void\n pause_numeric (GFC_INTEGER_4 code)\n {\n-  if (code == -1)\n-    st_printf (\"PAUSE\\n\");\n-  else\n-    st_printf (\"PAUSE %d\\n\", (int)code);\n-\n+  st_printf (\"PAUSE %d\\n\", (int) code);\n   do_pause ();\n }\n \n+/* A character string or blank PAUSE statement.  */\n+\n extern void pause_string (char *string, GFC_INTEGER_4 len);\n export_proto(pause_string);\n "}, {"sha": "87c0411acbeb263a8799f6badd8231d16358e9ef", "filename": "libgfortran/runtime/stop.c", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/libgfortran%2Fruntime%2Fstop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1b0f922a46b7459c0a9441f728e9214b1bcd80/libgfortran%2Fruntime%2Fstop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fstop.c?ref=6d1b0f922a46b7459c0a9441f728e9214b1bcd80", "patch": "@@ -26,22 +26,20 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n #include <string.h>\n \n-/* A numeric or blank STOP statement.  */\n+/* A numeric STOP statement.  */\n+\n+extern void stop_numeric (GFC_INTEGER_4)\n+  __attribute__ ((noreturn));\n+export_proto(stop_numeric);\n+\n void\n stop_numeric (GFC_INTEGER_4 code)\n {\n-  if (code == -1)\n-    code = 0;\n-  else\n-    st_printf (\"STOP %d\\n\", (int)code);\n-\n+  st_printf (\"STOP %d\\n\", (int)code);\n   sys_exit (code);\n }\n-iexport(stop_numeric);\n-\n \n-extern void stop_string (const char *string, GFC_INTEGER_4 len);\n-export_proto(stop_string);\n+/* A character string or blank STOP statement.  */\n \n void\n stop_string (const char *string, GFC_INTEGER_4 len)\n@@ -54,14 +52,16 @@ stop_string (const char *string, GFC_INTEGER_4 len)\n   sys_exit (0);\n }\n \n-extern void error_stop_string (const char *, GFC_INTEGER_4);\n-export_proto(error_stop_string);\n-\n \n /* Per Fortran 2008, section 8.4:  \"Execution of a STOP statement initiates\n    normal termination of execution. Execution of an ERROR STOP statement\n    initiates error termination of execution.\"  Thus, error_stop_string returns\n    a nonzero exit status code.  */\n+\n+extern void error_stop_string (const char *, GFC_INTEGER_4)\n+  __attribute__ ((noreturn));\n+export_proto(error_stop_string);\n+\n void\n error_stop_string (const char *string, GFC_INTEGER_4 len)\n {\n@@ -72,3 +72,16 @@ error_stop_string (const char *string, GFC_INTEGER_4 len)\n \n   sys_exit (1);\n }\n+\n+/* A numeric or blank ERROR STOP statement.  */\n+\n+extern void error_stop_numeric (GFC_INTEGER_4)\n+  __attribute__ ((noreturn));\n+export_proto(error_stop_numeric);\n+\n+void\n+error_stop_numeric (GFC_INTEGER_4 code)\n+{\n+  st_printf (\"ERROR STOP %d\\n\", (int) code);\n+  sys_exit (code);\n+}"}]}