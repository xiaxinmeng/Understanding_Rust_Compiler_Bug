{"sha": "d541888b0f2aeedb039751c7bb0d1e45dc775a38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU0MTg4OGIwZjJhZWVkYjAzOTc1MWM3YmIwZDFlNDVkYzc3NWEzOA==", "commit": {"author": {"name": "Stanislaw Skowronek", "email": "skylark@linux-mips.org", "date": "2006-05-02T12:57:52Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2006-05-02T12:57:52Z"}, "message": "re PR target/25871 (TRAMPOLINE_TEMPLATE uses 32bit moves on 64bit code)\n\n2006-05-02  Joshua Kinard  <kumba@gentoo.org>\n\n\tPR target/25871\n\t* gcc/config/mips/mips.h (TRAMPOLINE_TEMPLATE): Avoid 32-bit moves\n\twith 64-bit pointers.\n\nFrom-SVN: r113460", "tree": {"sha": "3818a5be99044fa7f154df891ef056c097310a62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3818a5be99044fa7f154df891ef056c097310a62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d541888b0f2aeedb039751c7bb0d1e45dc775a38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d541888b0f2aeedb039751c7bb0d1e45dc775a38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d541888b0f2aeedb039751c7bb0d1e45dc775a38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d541888b0f2aeedb039751c7bb0d1e45dc775a38/comments", "author": null, "committer": null, "parents": [{"sha": "7a7017bc20fdda8b27baa76f8e393a9dd54339bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a7017bc20fdda8b27baa76f8e393a9dd54339bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a7017bc20fdda8b27baa76f8e393a9dd54339bb"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "e1e0e22b6e4189cb7713fca54c5d9b65937e0297", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d541888b0f2aeedb039751c7bb0d1e45dc775a38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d541888b0f2aeedb039751c7bb0d1e45dc775a38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d541888b0f2aeedb039751c7bb0d1e45dc775a38", "patch": "@@ -1,3 +1,9 @@\n+2006-05-02  Joshua Kinard  <kumba@gentoo.org>\n+\n+\tPR target/25871\n+\t* gcc/config/mips/mips.h (TRAMPOLINE_TEMPLATE): Avoid 32-bit moves\n+\twith 64-bit pointers.\n+\n 2006-05-02  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/arm.c (add_minipool_forward_ref): Check if insn"}, {"sha": "60e1aca9f1425914b6175889b9befcf0d99272cf", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d541888b0f2aeedb039751c7bb0d1e45dc775a38/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d541888b0f2aeedb039751c7bb0d1e45dc775a38/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=d541888b0f2aeedb039751c7bb0d1e45dc775a38", "patch": "@@ -2023,31 +2023,36 @@ typedef struct mips_args {\n    This code should not include a label--the label is taken care of\n    automatically.  */\n \n-#define TRAMPOLINE_TEMPLATE(STREAM)\t\t\t\t\t \\\n-{\t\t\t\t\t\t\t\t\t \\\n-  fprintf (STREAM, \"\\t.word\\t0x03e00821\\t\\t# move   $1,$31\\n\");\t\t\\\n+#define TRAMPOLINE_TEMPLATE(STREAM)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (ptr_mode == DImode)\t\t\t\t\t\t\\\n+    fprintf (STREAM, \"\\t.word\\t0x03e0082d\\t\\t# dmove   $1,$31\\n\");\t\\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    fprintf (STREAM, \"\\t.word\\t0x03e00821\\t\\t# move   $1,$31\\n\");\t\\\n   fprintf (STREAM, \"\\t.word\\t0x04110001\\t\\t# bgezal $0,.+8\\n\");\t\t\\\n   fprintf (STREAM, \"\\t.word\\t0x00000000\\t\\t# nop\\n\");\t\t\t\\\n   if (ptr_mode == DImode)\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       fprintf (STREAM, \"\\t.word\\t0xdfe30014\\t\\t# ld     $3,20($31)\\n\");\t\\\n       fprintf (STREAM, \"\\t.word\\t0xdfe2001c\\t\\t# ld     $2,28($31)\\n\");\t\\\n+      fprintf (STREAM, \"\\t.word\\t0x0060c82d\\t\\t# dmove  $25,$3\\n\");\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       fprintf (STREAM, \"\\t.word\\t0x8fe30014\\t\\t# lw     $3,20($31)\\n\");\t\\\n       fprintf (STREAM, \"\\t.word\\t0x8fe20018\\t\\t# lw     $2,24($31)\\n\");\t\\\n+      fprintf (STREAM, \"\\t.word\\t0x0060c821\\t\\t# move   $25,$3\\n\");\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n-  fprintf (STREAM, \"\\t.word\\t0x0060c821\\t\\t# move   $25,$3 (abicalls)\\n\"); \\\n   fprintf (STREAM, \"\\t.word\\t0x00600008\\t\\t# jr     $3\\n\");\t\t\\\n-  fprintf (STREAM, \"\\t.word\\t0x0020f821\\t\\t# move   $31,$1\\n\");\t\t\\\n   if (ptr_mode == DImode)\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n+      fprintf (STREAM, \"\\t.word\\t0x0020f82d\\t\\t# dmove   $31,$1\\n\");\t\\\n       fprintf (STREAM, \"\\t.dword\\t0x00000000\\t\\t# <function address>\\n\"); \\\n       fprintf (STREAM, \"\\t.dword\\t0x00000000\\t\\t# <static chain value>\\n\"); \\\n     }\t\t\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n+      fprintf (STREAM, \"\\t.word\\t0x0020f821\\t\\t# move   $31,$1\\n\");\t\\\n       fprintf (STREAM, \"\\t.word\\t0x00000000\\t\\t# <function address>\\n\"); \\\n       fprintf (STREAM, \"\\t.word\\t0x00000000\\t\\t# <static chain value>\\n\"); \\\n     }\t\t\t\t\t\t\t\t\t\\"}]}