{"sha": "525c561de81c042875bf238b418dbfe50bab31cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI1YzU2MWRlODFjMDQyODc1YmYyMzhiNDE4ZGJmZTUwYmFiMzFjZg==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2010-08-22T09:33:45Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2010-08-22T09:33:45Z"}, "message": "mips.c (mips_override_options): Rename to...\n\n\t* config/mips/mips.c (mips_override_options): Rename to...\n\t(mips_option_override): ...this. Make static.\n\t(TARGET_OPTION_OVERRIDE): Define.\n\t(mips_in_small_data_p): Update comment.\n\t* config/mips/mips.h (OVERRIDE_OPTIONS): Remove.\n\t(FIXED_REGISTERS): Update comment.\n\t* config/mips/mips-protos.h (mips_override_options): Remove.\n\nFrom-SVN: r163456", "tree": {"sha": "f8e14965f8ea9cb4c4f97f30e509f3adcd53cef0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8e14965f8ea9cb4c4f97f30e509f3adcd53cef0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/525c561de81c042875bf238b418dbfe50bab31cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/525c561de81c042875bf238b418dbfe50bab31cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/525c561de81c042875bf238b418dbfe50bab31cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/525c561de81c042875bf238b418dbfe50bab31cf/comments", "author": null, "committer": null, "parents": [{"sha": "60f22d5d602118d29b2fb4e0077ad1ca573e37d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60f22d5d602118d29b2fb4e0077ad1ca573e37d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60f22d5d602118d29b2fb4e0077ad1ca573e37d6"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "b498e0a0a06ce709869dd9a15bc91ac906897211", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525c561de81c042875bf238b418dbfe50bab31cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525c561de81c042875bf238b418dbfe50bab31cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=525c561de81c042875bf238b418dbfe50bab31cf", "patch": "@@ -1,3 +1,13 @@\n+2010-08-22  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/mips/mips.c (mips_override_options): Rename to...\n+\t(mips_option_override): ...this. Make static.\n+\t(TARGET_OPTION_OVERRIDE): Define.\n+\t(mips_in_small_data_p): Update comment.\n+\t* config/mips/mips.h (OVERRIDE_OPTIONS): Remove.\n+\t(FIXED_REGISTERS): Update comment.\n+\t* config/mips/mips-protos.h (mips_override_options): Remove.\n+\n 2010-08-21  Olivier Hainque  <hainque@adacore.com>\n \n \t* config/rs6000/vxworks.h (TARGET_OS_CPP_BUILTINS): Define __PPC__."}, {"sha": "6302c3a9db0c489f367347b6feeaddad8199d347", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525c561de81c042875bf238b418dbfe50bab31cf/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525c561de81c042875bf238b418dbfe50bab31cf/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=525c561de81c042875bf238b418dbfe50bab31cf", "patch": "@@ -253,7 +253,6 @@ extern bool mips_expand_ext_as_unaligned_load (rtx, rtx, HOST_WIDE_INT,\n extern bool mips_expand_ins_as_unaligned_store (rtx, rtx, HOST_WIDE_INT,\n \t\t\t\t\t\tHOST_WIDE_INT);\n extern bool mips_mem_fits_mode_p (enum machine_mode mode, rtx x);\n-extern void mips_override_options (void);\n extern void mips_conditional_register_usage (void);\n extern void mips_order_regs_for_local_alloc (void);\n extern HOST_WIDE_INT mips_debugger_offset (rtx, HOST_WIDE_INT);"}, {"sha": "e3df236488753514101c7a53b9dfffa4c5ebeec7", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525c561de81c042875bf238b418dbfe50bab31cf/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525c561de81c042875bf238b418dbfe50bab31cf/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=525c561de81c042875bf238b418dbfe50bab31cf", "patch": "@@ -7773,7 +7773,7 @@ mips_in_small_data_p (const_tree decl)\n \n   /* We don't yet generate small-data references for -mabicalls\n      or VxWorks RTP code.  See the related -G handling in\n-     mips_override_options.  */\n+     mips_option_override.  */\n   if (TARGET_ABICALLS || TARGET_VXWORKS_RTP)\n     return false;\n \n@@ -15469,10 +15469,10 @@ mips_handle_option (size_t code, const char *arg, int value)\n     }\n }\n \n-/* Implement OVERRIDE_OPTIONS.  */\n+/* Implement TARGET_OPTION_OVERRIDE.  */\n \n-void\n-mips_override_options (void)\n+static void\n+mips_option_override (void)\n {\n   int i, start, regno, mode;\n \n@@ -16344,6 +16344,9 @@ void mips_function_profiler (FILE *file)\n #undef TARGET_ASM_ALIGNED_DI_OP\n #define TARGET_ASM_ALIGNED_DI_OP \"\\t.dword\\t\"\n \n+#undef TARGET_OPTION_OVERRIDE\n+#define TARGET_OPTION_OVERRIDE mips_option_override\n+\n #undef TARGET_LEGITIMIZE_ADDRESS\n #define TARGET_LEGITIMIZE_ADDRESS mips_legitimize_address\n "}, {"sha": "c5519b0fc8b811e7d1f715b38c2605b9f026c1c3", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/525c561de81c042875bf238b418dbfe50bab31cf/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/525c561de81c042875bf238b418dbfe50bab31cf/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=525c561de81c042875bf238b418dbfe50bab31cf", "patch": "@@ -1073,8 +1073,6 @@ enum mips_code_readable_setting {\n #define SWITCH_TAKES_ARG(CHAR)\t\t\t\t\t\t\\\n   (DEFAULT_SWITCH_TAKES_ARG (CHAR) || (CHAR) == 'G')\n \n-#define OVERRIDE_OPTIONS mips_override_options ()\n-\n #define CONDITIONAL_REGISTER_USAGE mips_conditional_register_usage ()\n \n /* Show we can debug even without a frame pointer.  */\n@@ -1521,7 +1519,7 @@ enum mips_code_readable_setting {\n \n    Regarding coprocessor registers: without evidence to the contrary,\n    it's best to assume that each coprocessor register has a unique\n-   use.  This can be overridden, in, e.g., mips_override_options or\n+   use.  This can be overridden, in, e.g., mips_option_override or\n    CONDITIONAL_REGISTER_USAGE should the assumption be inappropriate\n    for a particular target.  */\n "}]}