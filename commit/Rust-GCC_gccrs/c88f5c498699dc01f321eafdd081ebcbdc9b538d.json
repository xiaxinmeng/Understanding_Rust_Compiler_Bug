{"sha": "c88f5c498699dc01f321eafdd081ebcbdc9b538d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg4ZjVjNDk4Njk5ZGMwMWYzMjFlYWZkZDA4MWViY2JkYzliNTM4ZA==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2010-06-18T15:59:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-18T15:59:27Z"}, "message": "[multiple changes]\n\n2010-06-18  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_cg.adb (Homonym_Suffix_Length): Minor code reorganization.\n\n2010-06-18  Thomas Quinot  <quinot@adacore.com>\n\n\t* sprint.ads: Minor reformatting.\n\t* output.ads: Update obsolete comment.\n\n2010-06-18  Ed Schonberg  <schonberg@adacore.com>\n\n\t* freeze.adb (Build_And_Analyze_Renamed_Body): if the renamed entity is\n\tan external intrinsic operation (e.g. a GCC numeric function) indicate\n\tthat the renaming entity has the same characteristics, so a call to it\n\tis properly expanded.\n\nFrom-SVN: r161003", "tree": {"sha": "1f6a996b4edefd612d1c07c930a9077765321aa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f6a996b4edefd612d1c07c930a9077765321aa5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c88f5c498699dc01f321eafdd081ebcbdc9b538d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c88f5c498699dc01f321eafdd081ebcbdc9b538d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c88f5c498699dc01f321eafdd081ebcbdc9b538d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c88f5c498699dc01f321eafdd081ebcbdc9b538d/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fd7de64cee04fd08c9a849a20e9cf0fd8d6906e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd7de64cee04fd08c9a849a20e9cf0fd8d6906e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd7de64cee04fd08c9a849a20e9cf0fd8d6906e1"}], "stats": {"total": 76, "additions": 51, "deletions": 25}, "files": [{"sha": "ef18f42cf69459e06063e6341b31425942b76ad6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88f5c498699dc01f321eafdd081ebcbdc9b538d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88f5c498699dc01f321eafdd081ebcbdc9b538d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c88f5c498699dc01f321eafdd081ebcbdc9b538d", "patch": "@@ -1,3 +1,9 @@\n+2010-06-18  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_cg.adb: Code clean up.\n+\t* debug.adb: Complete documentation of switch -gnatd.Z.\n+\t* gcc-interface/misc.c (callgraph_info_file): Declare.\n+\n 2010-06-18  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_cg.adb (Homonym_Suffix_Length): Minor code reorganization."}, {"sha": "5f7f26b0723be8b5ad83754cea8d51fbb1f09472", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88f5c498699dc01f321eafdd081ebcbdc9b538d/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88f5c498699dc01f321eafdd081ebcbdc9b538d/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=c88f5c498699dc01f321eafdd081ebcbdc9b538d", "patch": "@@ -596,6 +596,10 @@ package body Debug is\n    --       case of the gcc back end. Provided as a back up in case the new\n    --       scheme has problems.\n \n+   --  d.Z  This flag enables the frontend call-graph output associated with\n+   --       dispatching calls. Available only during the development of this\n+   --       new output.\n+\n    --  d1   Error messages have node numbers where possible. Normally error\n    --       messages have only source locations. This option is useful when\n    --       debugging errors caused by expanded code, where the source location"}, {"sha": "1ab11b83e68854c451154ff3d5a91eee312de576", "filename": "gcc/ada/exp_cg.adb", "status": "modified", "additions": 38, "deletions": 25, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88f5c498699dc01f321eafdd081ebcbdc9b538d/gcc%2Fada%2Fexp_cg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88f5c498699dc01f321eafdd081ebcbdc9b538d/gcc%2Fada%2Fexp_cg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_cg.adb?ref=c88f5c498699dc01f321eafdd081ebcbdc9b538d", "patch": "@@ -29,9 +29,6 @@ with Einfo;    use Einfo;\n with Elists;   use Elists;\n with Exp_Disp; use Exp_Disp;\n with Exp_Tss;  use Exp_Tss;\n---  with Interfaces.C;\n---  with Interfaces.C_Streams;\n---   Why are these commented out ???\n with Lib;      use Lib;\n with Namet;    use Namet;\n with Opt;      use Opt;\n@@ -42,12 +39,31 @@ with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n with Sinput;   use Sinput;\n with Snames;   use Snames;\n+with System;   use System;\n with Table;\n with Uintp;    use Uintp;\n \n package body Exp_CG is\n \n-   --  package ICS renames Interfaces.C_Streams;\n+   --  We duplicate here some declarations from packages Interfaces.C and\n+   --  Interfaces.C_Streams because adding their dependence to the frontend\n+   --  causes bootstrapping problems with old versions of the compiler.\n+\n+   subtype FILEs is System.Address;\n+   --  Corresponds to the C type FILE*\n+\n+   subtype C_chars is System.Address;\n+   --  Pointer to null-terminated array of characters\n+\n+   function fputs (Strng : C_chars; Stream : FILEs) return Integer;\n+   pragma Import (C, fputs, \"fputs\");\n+\n+   --  Import the file stream associated with the \"ci\" output file. Done to\n+   --  generate the output in the file created and left opened by routine\n+   --  toplev.c before calling gnat1drv.\n+\n+   Callgraph_Info_File : FILEs;\n+   pragma Import (C, Callgraph_Info_File);\n \n    package Call_Graph_Nodes is new Table.Table (\n       Table_Component_Type => Node_Id,\n@@ -56,7 +72,10 @@ package body Exp_CG is\n       Table_Initial        => 50,\n       Table_Increment      => 100,\n       Table_Name           => \"Call_Graph_Nodes\");\n-   --  Document this table! ???\n+   --  This table records nodes associated with dispatching calls and tagged\n+   --  type declarations found in the main compilation unit. Used as an\n+   --  auxiliary storage because the call-graph output requires fully qualified\n+   --  names and they are not available until the backend is called.\n \n    function Is_Predefined_Dispatching_Operation (E : Entity_Id) return Boolean;\n    --  Determines if E is a predefined primitive operation.\n@@ -88,7 +107,12 @@ package body Exp_CG is\n       N : Node_Id;\n \n    begin\n-      if not Debug_Flag_Dot_Z then\n+      --  No output if the \"ci\" output file has not been previously opened\n+      --  by toplev.c. Temporarily the output is also disabled with -gnatd.Z\n+\n+      if Callgraph_Info_File = Null_Address\n+        or else not Debug_Flag_Dot_ZZ\n+      then\n          return;\n       end if;\n \n@@ -330,27 +354,16 @@ package body Exp_CG is\n    -- Write_Output --\n    ------------------\n \n---  This functionality has been temporarily disabled because bootstrapping the\n---  compiler with old versions requires no dependency on package Interfaces.C\n-\n-   --  Import the file stream associated with the \"ci\" output file. Done to\n-   --  generate the output in the file created and left opened by routine\n-   --  toplev.c before calling gnat1drv.\n-\n---   Callgraph_Info_File : ICS.FILEs;\n---   pragma Import (C, Callgraph_Info_File);\n-\n---   procedure Write_Output (Str : String) is\n---      Line  : constant Interfaces.C.char_array := Interfaces.C.To_C (Str);\n---      Errno : ICS.int;\n---   begin\n---      Errno := ICS.fputs (Line'Address, Callgraph_Info_File);\n---      pragma Assert (Errno = 0);\n---   end Write_Output;\n-\n    procedure Write_Output (Str : String) is\n+      Nul   : constant Character := Character'First;\n+      Line  : String (Str'First .. Str'Last + 1);\n+      Errno : Integer;\n    begin\n-      null;\n+      --  Add the null character to the string as required by fputs\n+\n+      Line  := Str & Nul;\n+      Errno := fputs (Line'Address, Callgraph_Info_File);\n+      pragma Assert (Errno >= 0);\n    end Write_Output;\n \n    ---------------------"}, {"sha": "3716f1a631f7b1c9ac5869ab0f5aca6f1f55079f", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88f5c498699dc01f321eafdd081ebcbdc9b538d/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88f5c498699dc01f321eafdd081ebcbdc9b538d/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=c88f5c498699dc01f321eafdd081ebcbdc9b538d", "patch": "@@ -135,6 +135,9 @@ static tree gnat_eh_personality\t\t(void);\n \n struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n \n+/* This symbol needs to be defined for the front-end.  */\n+void *callgraph_info_file = NULL;\n+\n /* How much we want of our DWARF extensions.  Some of our dwarf+ extensions\n    are incompatible with regular GDB versions, so we must make sure to only\n    produce them on explicit request.  This is eventually reflected into the"}]}