{"sha": "25903d03442b16235d3198031754e321e0c787c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU5MDNkMDM0NDJiMTYyMzVkMzE5ODAzMTc1NGUzMjFlMGM3ODdjOA==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2003-05-18T09:42:12Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2003-05-18T09:42:12Z"}, "message": "semantics.c (perform_deferred_access_checks): Don't discard checked access.\n\n\t* semantics.c (perform_deferred_access_checks): Don't discard\n\tchecked access.\n\n\t* g++.dg/parse/access2.C: New test.\n\nFrom-SVN: r66925", "tree": {"sha": "27deb9add3b4a28ee4fbfd8d4f3136c9d635c6c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27deb9add3b4a28ee4fbfd8d4f3136c9d635c6c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25903d03442b16235d3198031754e321e0c787c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25903d03442b16235d3198031754e321e0c787c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25903d03442b16235d3198031754e321e0c787c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25903d03442b16235d3198031754e321e0c787c8/comments", "author": null, "committer": null, "parents": [{"sha": "8849fb4939f6f95f22e8e02126e608b85787693c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8849fb4939f6f95f22e8e02126e608b85787693c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8849fb4939f6f95f22e8e02126e608b85787693c"}], "stats": {"total": 43, "additions": 39, "deletions": 4}, "files": [{"sha": "bf1c262afafa770c2b905d75e135720d2acf28e1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25903d03442b16235d3198031754e321e0c787c8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25903d03442b16235d3198031754e321e0c787c8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=25903d03442b16235d3198031754e321e0c787c8", "patch": "@@ -1,3 +1,8 @@\n+2003-05-18  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\t* semantics.c (perform_deferred_access_checks): Don't discard\n+\tchecked access.\n+\n 2003-05-17  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* error.c (cp_error_at, cp_warning_at, cp_pedwarn_at): Eliminate"}, {"sha": "be524bef5ddce8a0fd5165ee29a5f6becf78bfd3", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25903d03442b16235d3198031754e321e0c787c8/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25903d03442b16235d3198031754e321e0c787c8/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=25903d03442b16235d3198031754e321e0c787c8", "patch": "@@ -234,7 +234,21 @@ void pop_to_parent_deferring_access_checks (void)\n   pop_deferring_access_checks ();\n }\n \n-/* Perform the deferred access checks.  */\n+/* Perform the deferred access checks.\n+\n+   After performing the checks, we still have to keep the list\n+   `deferred_access_stack->deferred_access_checks' since we may want\n+   to check access for them again later in a different context.\n+   For example:\n+\n+     class A {\n+       typedef int X;\n+       static X a;\n+     };\n+     A::X A::a, x;\t// No error for `A::a', error for `x'\n+\n+   We have to perform deferred access of `A::X', first with `A::a',\n+   next with `x'.  */\n \n void perform_deferred_access_checks (void)\n {\n@@ -245,9 +259,6 @@ void perform_deferred_access_checks (void)\n     /* Check access.  */\n     enforce_access (TREE_PURPOSE (deferred_check), \n \t\t    TREE_VALUE (deferred_check));\n-\n-  /* No more deferred checks.  */\n-  deferred_access_stack->deferred_access_checks = NULL_TREE;\n }\n \n /* Defer checking the accessibility of DECL, when looked up in"}, {"sha": "a2ad87c929b53b5d4af387fc617ddb9776911e5d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25903d03442b16235d3198031754e321e0c787c8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25903d03442b16235d3198031754e321e0c787c8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=25903d03442b16235d3198031754e321e0c787c8", "patch": "@@ -1,3 +1,7 @@\n+2003-05-18  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\t* g++.dg/parse/access2.C: New test.\n+\n 2003-05-17  Mark Mitchell  <mark@codesourcery.com>\n \n \t* lib/gcc-dg.exp (gcc-dg-debug-runtest): New method."}, {"sha": "ee8cd234e070ceeecf3bf7fbb302c54aaec4b195", "filename": "gcc/testsuite/g++.dg/parse/access2.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25903d03442b16235d3198031754e321e0c787c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Faccess2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25903d03442b16235d3198031754e321e0c787c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Faccess2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Faccess2.C?ref=25903d03442b16235d3198031754e321e0c787c8", "patch": "@@ -0,0 +1,15 @@\n+// Copyright (C) 2003 Free Software Foundation\n+// Contributed by Kriang Lerdsuwanakij <lerdsuwa@users.sourceforge.net>\n+// { dg-do compile }\n+\n+// Deferred access checking of variable declaration.\n+\n+class A {\n+  typedef int X;\t// { dg-error \"private\" }\n+  static X a, b, c;\n+};\n+\n+A::X A::a;\n+A::X A::b, x;\t\t// { dg-error \"this context\" }\n+A::X y, A::c;\t\t// { dg-error \"this context\" }\n+A::X z;\t\t\t// { dg-error \"this context\" }"}]}