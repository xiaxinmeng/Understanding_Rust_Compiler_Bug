{"sha": "8700c49499167593375eac262646fb9246904015", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODcwMGM0OTQ5OTE2NzU5MzM3NWVhYzI2MjY0NmZiOTI0NjkwNDAxNQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-08-14T22:55:17Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-08-14T22:55:17Z"}, "message": "(calculate_giv_inc): Handle constants loaded with IOR.\n\nFrom-SVN: r7918", "tree": {"sha": "8962306cefc1fe4df756c43a6578028f0b84965f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8962306cefc1fe4df756c43a6578028f0b84965f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8700c49499167593375eac262646fb9246904015", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8700c49499167593375eac262646fb9246904015", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8700c49499167593375eac262646fb9246904015", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8700c49499167593375eac262646fb9246904015/comments", "author": null, "committer": null, "parents": [{"sha": "bbd4b75be010f6776f2ec809b38e109b4bf81225", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbd4b75be010f6776f2ec809b38e109b4bf81225", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbd4b75be010f6776f2ec809b38e109b4bf81225"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "fafa627e24d5796cd92360cfe8b2f64f07108078", "filename": "gcc/unroll.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8700c49499167593375eac262646fb9246904015/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8700c49499167593375eac262646fb9246904015/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=8700c49499167593375eac262646fb9246904015", "patch": "@@ -1335,11 +1335,27 @@ calculate_giv_inc (pattern, src_insn, regno)\n \t one of the LO_SUM rtx.  */\n       if (GET_CODE (increment) == LO_SUM)\n \tincrement = XEXP (increment, 1);\n+      else if (GET_CODE (increment) == IOR)\n+\t{\n+\t  /* The rs6000 port loads some constants with IOR.  */\n+\t  rtx second_part = XEXP (increment, 1);\n+\n+\t  src_insn = PREV_INSN (src_insn);\n+\t  increment = SET_SRC (PATTERN (src_insn));\n+\t  /* Don't need the last insn anymore.  */\n+\t  delete_insn (get_last_insn ());\n+\n+\t  if (GET_CODE (second_part) != CONST_INT\n+\t      || GET_CODE (increment) != CONST_INT)\n+\t    abort ();\n+\n+\t  increment = GEN_INT (INTVAL (increment) | INTVAL (second_part));\n+\t}\n \n       if (GET_CODE (increment) != CONST_INT)\n \tabort ();\n \t\t  \n-      /* The insn loading the constant into a register is not longer needed,\n+      /* The insn loading the constant into a register is no longer needed,\n \t so delete it.  */\n       delete_insn (get_last_insn ());\n     }"}]}