{"sha": "53d2b7cb8623bde9ad120e97cca1b36938cfb9e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNkMmI3Y2I4NjIzYmRlOWFkMTIwZTk3Y2NhMWIzNjkzOGNmYjllNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-11-27T14:30:36Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-11-27T14:30:36Z"}, "message": "tree.c (wide_int_to_tree): Free discarded INTEGER_CST.\n\n2017-11-27  Richard Biener  <rguenther@suse.de>\n\n\t* tree.c (wide_int_to_tree): Free discarded INTEGER_CST.\n\t(type_hash_canon): Also clear int_cst_hash_table entry for\n\tTYPE_MIN/MAX_VALUE.\n\t(build_nonstandard_integer_type): Hash all TYPE_MAX_VALUEs.\n\nFrom-SVN: r255171", "tree": {"sha": "a43c8ca21970c96673fbf9fd6f2dc0c93091d872", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a43c8ca21970c96673fbf9fd6f2dc0c93091d872"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53d2b7cb8623bde9ad120e97cca1b36938cfb9e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53d2b7cb8623bde9ad120e97cca1b36938cfb9e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53d2b7cb8623bde9ad120e97cca1b36938cfb9e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53d2b7cb8623bde9ad120e97cca1b36938cfb9e7/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7dccfa38d6853680dbd40117e2cd4fc94ba9206", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7dccfa38d6853680dbd40117e2cd4fc94ba9206", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7dccfa38d6853680dbd40117e2cd4fc94ba9206"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "2cf55c8908f4b46f5f790386312f8eb100135b24", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53d2b7cb8623bde9ad120e97cca1b36938cfb9e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53d2b7cb8623bde9ad120e97cca1b36938cfb9e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53d2b7cb8623bde9ad120e97cca1b36938cfb9e7", "patch": "@@ -1,3 +1,10 @@\n+2017-11-27  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree.c (wide_int_to_tree): Free discarded INTEGER_CST.\n+\t(type_hash_canon): Also clear int_cst_hash_table entry for\n+\tTYPE_MIN/MAX_VALUE.\n+\t(build_nonstandard_integer_type): Hash all TYPE_MAX_VALUEs.\n+\n 2017-11-27  Tamar Christina  <tamar.christina@arm.com>\n \n \t* doc/extend.texi: Add -A suffix (ARMv8*-A, ARMv7-A)."}, {"sha": "c328b1345c074e26e02f5b6fc2efa57f47fdcb80", "filename": "gcc/tree.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53d2b7cb8623bde9ad120e97cca1b36938cfb9e7/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53d2b7cb8623bde9ad120e97cca1b36938cfb9e7/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=53d2b7cb8623bde9ad120e97cca1b36938cfb9e7", "patch": "@@ -1576,6 +1576,8 @@ wide_int_to_tree (tree type, const wide_int_ref &pcst)\n \t  t = nt;\n \t  *slot = t;\n \t}\n+      else\n+\tggc_free (nt);\n     }\n \n   return t;\n@@ -6496,10 +6498,18 @@ type_hash_canon (unsigned int hashcode, tree type)\n \t{\n \t  if (TYPE_MIN_VALUE (type)\n \t      && TREE_TYPE (TYPE_MIN_VALUE (type)) == type)\n-\t    ggc_free (TYPE_MIN_VALUE (type));\n+\t    {\n+\t      /* Zero is always in TYPE_CACHED_VALUES.  */\n+\t      if (! TYPE_UNSIGNED (type))\n+\t\tint_cst_hash_table->remove_elt (TYPE_MIN_VALUE (type));\n+\t      ggc_free (TYPE_MIN_VALUE (type));\n+\t    }\n \t  if (TYPE_MAX_VALUE (type)\n \t      && TREE_TYPE (TYPE_MAX_VALUE (type)) == type)\n-\t    ggc_free (TYPE_MAX_VALUE (type));\n+\t    {\n+\t      int_cst_hash_table->remove_elt (TYPE_MAX_VALUE (type));\n+\t      ggc_free (TYPE_MAX_VALUE (type));\n+\t    }\n \t  if (TYPE_CACHED_VALUES_P (type))\n \t    ggc_free (TYPE_CACHED_VALUES (type));\n \t}\n@@ -7486,8 +7496,10 @@ build_nonstandard_integer_type (unsigned HOST_WIDE_INT precision,\n     fixup_signed_type (itype);\n \n   ret = itype;\n-  if (tree_fits_uhwi_p (TYPE_MAX_VALUE (itype)))\n-    ret = type_hash_canon (tree_to_uhwi (TYPE_MAX_VALUE (itype)), itype);\n+\n+  inchash::hash hstate;\n+  inchash::add_expr (TYPE_MAX_VALUE (itype), hstate);\n+  ret = type_hash_canon (hstate.end (), itype);\n   if (precision <= MAX_INT_CACHED_PREC)\n     nonstandard_integer_type_cache[precision + unsignedp] = ret;\n "}]}