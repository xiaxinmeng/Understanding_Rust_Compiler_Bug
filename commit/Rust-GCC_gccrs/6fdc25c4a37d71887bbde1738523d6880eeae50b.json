{"sha": "6fdc25c4a37d71887bbde1738523d6880eeae50b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZkYzI1YzRhMzdkNzE4ODdiYmRlMTczODUyM2Q2ODgwZWVhZTUwYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-05-02T08:39:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-05-02T08:39:29Z"}, "message": "[multiple changes]\n\n2017-05-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Find_Equality_Types, Try_One_Interp): The same relaxed\n\tvisibility rules for equality operators that apply within an\n\tinstantiation apply within an inlined body.\n\t* sem_type.adb (Add_One_Interp): ditto.\n\n2017-05-02  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma): Forbid pragma Contract_Cases on null\n\tprocedures.\n\n2017-05-02  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* snames.ads-tmpl\n\t(Name_Assume, Name_Attribute_Definition, Name_Loop_Optimize,\n\tName_No_Tagged_Streams): Move to regular pragmas.  Add\n\tplaceholders for Default_Scalar_Storage_Order, Dispatching_Domain,\n\tand Secondary_Stack_Size.\n\t(Pragma_Id): Move Pragma_Assume,\n\tPragma_Attribute_Definition, Pragma_Loop_Optimize and\n\tPragma_No_Tagged_Streams to second part.\n\nFrom-SVN: r247470", "tree": {"sha": "d212ff77621dce8c5005b65eaa72576491c5ce11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d212ff77621dce8c5005b65eaa72576491c5ce11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fdc25c4a37d71887bbde1738523d6880eeae50b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fdc25c4a37d71887bbde1738523d6880eeae50b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fdc25c4a37d71887bbde1738523d6880eeae50b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fdc25c4a37d71887bbde1738523d6880eeae50b/comments", "author": null, "committer": null, "parents": [{"sha": "c0e938d0cdbc3ae9b202e855d9f7ccea96138344", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0e938d0cdbc3ae9b202e855d9f7ccea96138344", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0e938d0cdbc3ae9b202e855d9f7ccea96138344"}], "stats": {"total": 122, "additions": 83, "deletions": 39}, "files": [{"sha": "fb54ab70c2c6722c6f63b8560521f0c5117394ea", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fdc25c4a37d71887bbde1738523d6880eeae50b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fdc25c4a37d71887bbde1738523d6880eeae50b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6fdc25c4a37d71887bbde1738523d6880eeae50b", "patch": "@@ -1,3 +1,26 @@\n+2017-05-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Find_Equality_Types, Try_One_Interp): The same relaxed\n+\tvisibility rules for equality operators that apply within an\n+\tinstantiation apply within an inlined body.\n+\t* sem_type.adb (Add_One_Interp): ditto.\n+\n+2017-05-02  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma): Forbid pragma Contract_Cases on null\n+\tprocedures.\n+\n+2017-05-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* snames.ads-tmpl\n+\t(Name_Assume, Name_Attribute_Definition, Name_Loop_Optimize,\n+\tName_No_Tagged_Streams): Move to regular pragmas.  Add\n+\tplaceholders for Default_Scalar_Storage_Order, Dispatching_Domain,\n+\tand Secondary_Stack_Size.\n+\t(Pragma_Id): Move Pragma_Assume,\n+\tPragma_Attribute_Definition, Pragma_Loop_Optimize and\n+\tPragma_No_Tagged_Streams to second part.\n+\n 2017-05-02  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_attr.adb: Minor reformatting."}, {"sha": "9a22b8eb32d7895410b296957362e72dc8100690", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fdc25c4a37d71887bbde1738523d6880eeae50b/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fdc25c4a37d71887bbde1738523d6880eeae50b/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=6fdc25c4a37d71887bbde1738523d6880eeae50b", "patch": "@@ -6476,7 +6476,7 @@ package body Sem_Ch4 is\n             --  Either the types are compatible, or one operand is universal\n             --  (numeric or null).\n \n-           or else (In_Instance\n+           or else ((In_Instance or else In_Inlined_Body)\n                      and then\n                        (First_Subtype (T1) = First_Subtype (Etype (R))\n                          or else Nkind (R) = N_Null"}, {"sha": "e19535fed1c0b4925267059be3e15e9b222e3bf4", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fdc25c4a37d71887bbde1738523d6880eeae50b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fdc25c4a37d71887bbde1738523d6880eeae50b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=6fdc25c4a37d71887bbde1738523d6880eeae50b", "patch": "@@ -13422,6 +13422,7 @@ package body Sem_Prag is\n          when Pragma_Contract_Cases => Contract_Cases : declare\n             Spec_Id   : Entity_Id;\n             Subp_Decl : Node_Id;\n+            Subp_Spec : Node_Id;\n \n          begin\n             GNAT_Pragma;\n@@ -13462,7 +13463,19 @@ package body Sem_Prag is\n             --  Subprogram\n \n             elsif Nkind (Subp_Decl) = N_Subprogram_Declaration then\n-               null;\n+               Subp_Spec := Specification (Subp_Decl);\n+\n+               --  Pragma Contract_Cases is forbidden on null procedures, as\n+               --  this may lead to potential ambiguities in behavior when\n+               --  interface null procedures are involved.\n+\n+               if Nkind (Subp_Spec) = N_Procedure_Specification\n+                 and then Null_Present (Subp_Spec)\n+               then\n+                  Error_Msg_N (Fix_Error\n+                    (\"pragma % cannot apply to null procedure\"), N);\n+                  return;\n+               end if;\n \n             else\n                Pragma_Misplaced;"}, {"sha": "b77b538716eab9c99fd9bc8410722faa6566b306", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fdc25c4a37d71887bbde1738523d6880eeae50b/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fdc25c4a37d71887bbde1738523d6880eeae50b/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=6fdc25c4a37d71887bbde1738523d6880eeae50b", "patch": "@@ -374,7 +374,7 @@ package body Sem_Type is\n                      and then not Is_Hidden (Vis_Type))\n            or else Nkind (N) = N_Expanded_Name\n            or else (Nkind (N) in N_Op and then E = Entity (N))\n-           or else In_Instance\n+           or else (In_Instance or else In_Inlined_Body)\n            or else Ekind (Vis_Type) = E_Anonymous_Access_Type\n          then\n             null;"}, {"sha": "cdf2ca66e9528b9c1ed6b4a7fffce463a38d2fca", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 44, "deletions": 36, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fdc25c4a37d71887bbde1738523d6880eeae50b/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fdc25c4a37d71887bbde1738523d6880eeae50b/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=6fdc25c4a37d71887bbde1738523d6880eeae50b", "patch": "@@ -379,8 +379,8 @@ package Snames is\n    First_Pragma_Name                   : constant Name_Id := N + $;\n \n    --  Configuration pragmas are grouped at start. Note that there is a list\n-   --  of these names in the GNAT Users guide, be sure to update this list if\n-   --  a new configuration pragma is added.\n+   --  of them in the GNAT UG (doc/gnat_ugn/the_gnat_compilation_model.rst),\n+   --  be sure to update this list if a new configuration pragma is added.\n \n    Name_Ada_83                         : constant Name_Id := N + $; -- GNAT\n    Name_Ada_95                         : constant Name_Id := N + $; -- GNAT\n@@ -391,9 +391,7 @@ package Snames is\n    Name_Allow_Integer_Address          : constant Name_Id := N + $; -- GNAT\n    Name_Annotate                       : constant Name_Id := N + $; -- GNAT\n    Name_Assertion_Policy               : constant Name_Id := N + $; -- Ada 05\n-   Name_Assume                         : constant Name_Id := N + $; -- GNAT\n    Name_Assume_No_Invalid_Values       : constant Name_Id := N + $; -- GNAT\n-   Name_Attribute_Definition           : constant Name_Id := N + $; -- GNAT\n    Name_C_Pass_By_Copy                 : constant Name_Id := N + $; -- GNAT\n    Name_Check_Float_Overflow           : constant Name_Id := N + $; -- GNAT\n    Name_Check_Name                     : constant Name_Id := N + $; -- GNAT\n@@ -406,16 +404,15 @@ package Snames is\n    Name_Convention_Identifier          : constant Name_Id := N + $; -- GNAT\n    Name_Debug_Policy                   : constant Name_Id := N + $; -- GNAT\n    Name_Detect_Blocking                : constant Name_Id := N + $; -- Ada 05\n+\n+   --  Note: Default_Scalar_Storage_Order is not in this list because its name\n+   --  matches the name of the corresponding attribute. However, it is included\n+   --  in the definition of the type Pragma_Id, and the functions Get_Pragma_Id\n+   --  and Is_Pragma_Name correctly recognize Default_Scalar_Storage_Order.\n+\n    Name_Default_Storage_Pool           : constant Name_Id := N + $; -- Ada 12\n    Name_Disable_Atomic_Synchronization : constant Name_Id := N + $; -- GNAT\n    Name_Discard_Names                  : constant Name_Id := N + $;\n-\n-   --  Note: Dispatching_Domain is not in this list because its name matches\n-   --  the name of the corresponding attribute. However, it is included in the\n-   --  definition of the type Pragma_Id, and the functions Get_Pragma_Id and\n-   --  Is_Pragma_Id correctly recognize and process Dispatching_Domain.\n-   --  Dispatching_Domain is a standard Ada 2012 pragma.\n-\n    Name_Elaboration_Checks             : constant Name_Id := N + $; -- GNAT\n    Name_Eliminate                      : constant Name_Id := N + $; -- GNAT\n    Name_Enable_Atomic_Synchronization  : constant Name_Id := N + $; -- GNAT\n@@ -425,9 +422,8 @@ package Snames is\n \n    --  Note: Fast_Math is not in this list because its name matches the name of\n    --  the corresponding attribute. However, it is included in the definition\n-   --  of the type Pragma_Id, and the functions Get_Pragma_Id,\n-   --  Is_[Configuration_]Pragma_Id, and correctly recognize and process\n-   --  Fast_Math.\n+   --  of the type Pragma_Id and the functions Get_Pragma_Id and Is_Pragma_Name\n+   --  correctly recognize and process Fast_Math.\n \n    Name_Favor_Top_Level                : constant Name_Id := N + $; -- GNAT\n    Name_Ignore_Pragma                  : constant Name_Id := N + $; -- GNAT\n@@ -436,11 +432,9 @@ package Snames is\n    Name_Interrupt_State                : constant Name_Id := N + $; -- GNAT\n    Name_License                        : constant Name_Id := N + $; -- GNAT\n    Name_Locking_Policy                 : constant Name_Id := N + $;\n-   Name_Loop_Optimize                  : constant Name_Id := N + $; -- GNAT\n    Name_No_Heap_Finalization           : constant Name_Id := N + $; -- GNAT\n    Name_No_Run_Time                    : constant Name_Id := N + $; -- GNAT\n    Name_No_Strict_Aliasing             : constant Name_Id := N + $; -- GNAT\n-   Name_No_Tagged_Streams              : constant Name_Id := N + $; -- GNAT\n    Name_Normalize_Scalars              : constant Name_Id := N + $;\n    Name_Optimize_Alignment             : constant Name_Id := N + $; -- GNAT\n    Name_Overflow_Mode                  : constant Name_Id := N + $; -- GNAT\n@@ -487,12 +481,14 @@ package Snames is\n    Name_All_Calls_Remote               : constant Name_Id := N + $;\n    Name_Assert                         : constant Name_Id := N + $; -- Ada 05\n    Name_Assert_And_Cut                 : constant Name_Id := N + $; -- GNAT\n+   Name_Assume                         : constant Name_Id := N + $; -- GNAT\n    Name_Async_Readers                  : constant Name_Id := N + $; -- GNAT\n    Name_Async_Writers                  : constant Name_Id := N + $; -- GNAT\n    Name_Asynchronous                   : constant Name_Id := N + $;\n    Name_Atomic                         : constant Name_Id := N + $;\n    Name_Atomic_Components              : constant Name_Id := N + $;\n    Name_Attach_Handler                 : constant Name_Id := N + $;\n+   Name_Attribute_Definition           : constant Name_Id := N + $; -- GNAT\n    Name_Check                          : constant Name_Id := N + $; -- GNAT\n    Name_Comment                        : constant Name_Id := N + $; -- GNAT\n    Name_Common_Object                  : constant Name_Id := N + $; -- GNAT\n@@ -509,14 +505,20 @@ package Snames is\n \n    --  Note: CPU is not in this list because its name matches the name of\n    --  the corresponding attribute. However, it is included in the definition\n-   --  of the type Pragma_Id, and the functions Get_Pragma_Id and Is_Pragma_Id\n-   --  correctly recognize and process CPU. CPU is a standard Ada 2012\n-   --  pragma.\n+   --  of the type Pragma_Id and the functions Get_Pragma_Id and Is_Pragma_Name\n+   --  correctly recognize and process CPU. CPU is a standard Ada 2012 pragma.\n \n    Name_Deadline_Floor                 : constant Name_Id := N + $; -- GNAT\n    Name_Debug                          : constant Name_Id := N + $; -- GNAT\n    Name_Default_Initial_Condition      : constant Name_Id := N + $; -- GNAT\n    Name_Depends                        : constant Name_Id := N + $; -- GNAT\n+\n+   --  Note: Dispatching_Domain is not in this list because its name matches\n+   --  the name of the corresponding attribute. However, it is included in the\n+   --  definition of the type Pragma_Id, and the functions Get_Pragma_Id and\n+   --  Is_Pragma_Name correctly recognize and process Dispatching_Domain.\n+   --  Dispatching_Domain is a standard Ada 2012 pragma.\n+\n    Name_Effective_Reads                : constant Name_Id := N + $; -- GNAT\n    Name_Effective_Writes               : constant Name_Id := N + $; -- GNAT\n    Name_Elaborate                      : constant Name_Id := N + $; -- Ada 83\n@@ -551,17 +553,17 @@ package Snames is\n    Name_Inspection_Point               : constant Name_Id := N + $;\n \n    --  Note: Interface is not in this list because its name matches an Ada 05\n-   --  keyword. However it is included in the definition of the type\n-   --  Attribute_Id, and the functions Get_Pragma_Id and Is_Pragma_Id correctly\n-   --  recognize and process Name_Interface.\n+   --  keyword. However it is included in the definition of the type Pragma_Id,\n+   --  and the functions Get_Pragma_Id and Is_Pragma_Name correctly recognize\n+   --  and process Name_Interface.\n \n    Name_Interface_Name                 : constant Name_Id := N + $; -- GNAT\n    Name_Interrupt_Handler              : constant Name_Id := N + $;\n \n    --  Note: Interrupt_Priority is not in this list because its name matches\n    --  the name of the corresponding attribute. However, it is included in the\n    --  definition of the type Pragma_Id, and the functions Get_Pragma_Id and\n-   --  Is_Pragma_Id correctly recognize and process Interrupt_Priority.\n+   --  Is_Pragma_Name correctly recognize and process Interrupt_Priority.\n \n    Name_Invariant                      : constant Name_Id := N + $; -- GNAT\n    Name_Keep_Names                     : constant Name_Id := N + $; -- GNAT\n@@ -575,10 +577,11 @@ package Snames is\n \n    --  Note: Lock_Free is not in this list because its name matches the name of\n    --  the corresponding attribute. However, it is included in the definition\n-   --  of the type Pragma_Id, and the functions Get_Pragma_Id and Is_Pragma_Id\n+   --  of the type Pragma_Id and the functions Get_Pragma_Id and Is_Pragma_Name\n    --  correctly recognize and process Lock_Free. Lock_Free is a GNAT pragma.\n \n    Name_Loop_Invariant                 : constant Name_Id := N + $; -- GNAT\n+   Name_Loop_Optimize                  : constant Name_Id := N + $; -- GNAT\n    Name_Loop_Variant                   : constant Name_Id := N + $; -- GNAT\n    Name_Machine_Attribute              : constant Name_Id := N + $; -- GNAT\n    Name_Main                           : constant Name_Id := N + $; -- GNAT\n@@ -589,6 +592,7 @@ package Snames is\n    Name_No_Elaboration_Code_All        : constant Name_Id := N + $; -- GNAT\n    Name_No_Inline                      : constant Name_Id := N + $; -- GNAT\n    Name_No_Return                      : constant Name_Id := N + $; -- Ada 05\n+   Name_No_Tagged_Streams              : constant Name_Id := N + $; -- GNAT\n    Name_Obsolescent                    : constant Name_Id := N + $; -- GNAT\n    Name_Optimize                       : constant Name_Id := N + $;\n    Name_Ordered                        : constant Name_Id := N + $; -- GNAT\n@@ -609,7 +613,7 @@ package Snames is\n \n    --  Note: Priority is not in this list because its name matches the name of\n    --  the corresponding attribute. However, it is included in the definition\n-   --  of the type Pragma_Id, and the functions Get_Pragma_Id and Is_Pragma_Id\n+   --  of the type Pragma_Id and the functions Get_Pragma_Id and Is_Pragma_Name\n    --  correctly recognize and process Priority. Priority is a standard Ada 95\n    --  pragma.\n \n@@ -625,15 +629,21 @@ package Snames is\n    Name_Remote_Access_Type             : constant Name_Id := N + $; -- GNAT\n    Name_Remote_Call_Interface          : constant Name_Id := N + $;\n    Name_Remote_Types                   : constant Name_Id := N + $;\n+\n+   --  Note: Secondary_Stack_Size is not in this list because its name matches\n+   --  the name of the corresponding attribute. However, it is included in the\n+   --  definition of the type Pragma_Id, and the functions Get_Pragma_Id and\n+   --  Is_Pragma_Name correctly recognize and process Secondary_Stack_Size.\n+\n    Name_Share_Generic                  : constant Name_Id := N + $; -- GNAT\n    Name_Shared                         : constant Name_Id := N + $; -- Ada 83\n    Name_Shared_Passive                 : constant Name_Id := N + $;\n    Name_Simple_Storage_Pool_Type       : constant Name_Id := N + $; -- GNAT\n \n    --  Note: Storage_Size is not in this list because its name matches the name\n    --  of the corresponding attribute. However, it is included in the\n-   --  definition of the type Attribute_Id, and the functions Get_Pragma_Id and\n-   --  Is_Pragma_Id correctly recognize and process Name_Storage_Size.\n+   --  definition of the type Pragma_Id, and the functions Get_Pragma_Id and\n+   --  Is_Pragma_Name correctly recognize and process Name_Storage_Size.\n \n    --  Note: Storage_Unit is also omitted from the list because of a clash with\n    --  an attribute name, and is treated similarly.\n@@ -1758,11 +1768,9 @@ package Snames is\n \n    type Pragma_Id is (\n \n-      --  Configuration pragmas\n-\n-      --  Note: This list is in the GNAT users guide, so be sure that if any\n-      --  additions or deletions are made to the following list, they are\n-      --  properly reflected in the users guide.\n+      --  Configuration pragmas are grouped at start. Note that there is a list\n+      --  of them in the GNAT UG (doc/gnat_ugn/the_gnat_compilation_model.rst),\n+      --  be sure to update this list if a new configuration pragma is added.\n \n       Pragma_Ada_83,\n       Pragma_Ada_95,\n@@ -1773,9 +1781,7 @@ package Snames is\n       Pragma_Allow_Integer_Address,\n       Pragma_Annotate,\n       Pragma_Assertion_Policy,\n-      Pragma_Assume,\n       Pragma_Assume_No_Invalid_Values,\n-      Pragma_Attribute_Definition,\n       Pragma_C_Pass_By_Copy,\n       Pragma_Check_Float_Overflow,\n       Pragma_Check_Name,\n@@ -1804,11 +1810,9 @@ package Snames is\n       Pragma_Interrupt_State,\n       Pragma_License,\n       Pragma_Locking_Policy,\n-      Pragma_Loop_Optimize,\n       Pragma_No_Heap_Finalization,\n       Pragma_No_Run_Time,\n       Pragma_No_Strict_Aliasing,\n-      Pragma_No_Tagged_Streams,\n       Pragma_Normalize_Scalars,\n       Pragma_Optimize_Alignment,\n       Pragma_Overflow_Mode,\n@@ -1854,12 +1858,14 @@ package Snames is\n       Pragma_All_Calls_Remote,\n       Pragma_Assert,\n       Pragma_Assert_And_Cut,\n+      Pragma_Assume,\n       Pragma_Async_Readers,\n       Pragma_Async_Writers,\n       Pragma_Asynchronous,\n       Pragma_Atomic,\n       Pragma_Atomic_Components,\n       Pragma_Attach_Handler,\n+      Pragma_Attribute_Definition,\n       Pragma_Check,\n       Pragma_Comment,\n       Pragma_Common_Object,\n@@ -1921,6 +1927,7 @@ package Snames is\n       Pragma_Linker_Section,\n       Pragma_List,\n       Pragma_Loop_Invariant,\n+      Pragma_Loop_Optimize,\n       Pragma_Loop_Variant,\n       Pragma_Machine_Attribute,\n       Pragma_Main,\n@@ -1931,6 +1938,7 @@ package Snames is\n       Pragma_No_Elaboration_Code_All,\n       Pragma_No_Inline,\n       Pragma_No_Return,\n+      Pragma_No_Tagged_Streams,\n       Pragma_Obsolescent,\n       Pragma_Optimize,\n       Pragma_Ordered,"}]}