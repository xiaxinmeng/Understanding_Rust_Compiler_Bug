{"sha": "405f403a0903740e263aad309780dbd4932d0878", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA1ZjQwM2EwOTAzNzQwZTI2M2FhZDMwOTc4MGRiZDQ5MzJkMDg3OA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-11-23T13:44:22Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-11-23T13:44:22Z"}, "message": "tree-phinode.c (make_phi_node): Use a new variable, capacity, to receive the return value of ideal_phi_node_len.\n\n\t* tree-phinode.c (make_phi_node): Use a new variable,\n\tcapacity, to receive the return value of ideal_phi_node_len.\n\nFrom-SVN: r91091", "tree": {"sha": "3fb02d173413e77a88c1c412aa37c2e62cddba23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fb02d173413e77a88c1c412aa37c2e62cddba23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/405f403a0903740e263aad309780dbd4932d0878", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/405f403a0903740e263aad309780dbd4932d0878", "html_url": "https://github.com/Rust-GCC/gccrs/commit/405f403a0903740e263aad309780dbd4932d0878", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/405f403a0903740e263aad309780dbd4932d0878/comments", "author": null, "committer": null, "parents": [{"sha": "a3407e423920a7233e038318adc6dc246ba272dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3407e423920a7233e038318adc6dc246ba272dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3407e423920a7233e038318adc6dc246ba272dd"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "23d9ee21417890e27b33beb15adac29b8c0b3548", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/405f403a0903740e263aad309780dbd4932d0878/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/405f403a0903740e263aad309780dbd4932d0878/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=405f403a0903740e263aad309780dbd4932d0878", "patch": "@@ -1,3 +1,8 @@\n+2004-11-23  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-phinode.c (make_phi_node): Use a new variable,\n+\tcapacity, to receive the return value of ideal_phi_node_len.\n+\n 2004-11-23  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gthr-solaris.h (__gthread_recursive_mutex_t): New type."}, {"sha": "c8c811c6f1cb8b9a59ebfab71bafa6a3da6fbbcd", "filename": "gcc/tree-phinodes.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/405f403a0903740e263aad309780dbd4932d0878/gcc%2Ftree-phinodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/405f403a0903740e263aad309780dbd4932d0878/gcc%2Ftree-phinodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-phinodes.c?ref=405f403a0903740e263aad309780dbd4932d0878", "patch": "@@ -206,10 +206,11 @@ static tree\n make_phi_node (tree var, int len)\n {\n   tree phi;\n+  int capacity;\n \n-  len = ideal_phi_node_len (len);\n+  capacity = ideal_phi_node_len (len);\n \n-  phi = allocate_phi_node (len);\n+  phi = allocate_phi_node (capacity);\n \n   /* We do not have to clear a part of the PHI node that stores PHI\n      arguments, which is safe because we tell the garbage collector to\n@@ -218,7 +219,7 @@ make_phi_node (tree var, int len)\n      pointers in the unused portion of the array.  */\n   memset (phi, 0, sizeof (struct tree_phi_node) - sizeof (struct phi_arg_d));\n   TREE_SET_CODE (phi, PHI_NODE);\n-  PHI_ARG_CAPACITY (phi) = len;\n+  PHI_ARG_CAPACITY (phi) = capacity;\n   TREE_TYPE (phi) = TREE_TYPE (var);\n   if (TREE_CODE (var) == SSA_NAME)\n     SET_PHI_RESULT (phi, var);"}]}