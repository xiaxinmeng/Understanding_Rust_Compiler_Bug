{"sha": "8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGViYzJmNWUwNWFhMzJiY2FkOGNiZmIwMmY4YjUwZDkyYTQ2OWU2Ng==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-05-21T10:54:32Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-05-21T10:54:47Z"}, "message": "libgfortran: Use __builtin_cpu_is/__builtin_cpu_supports\n\n\t* m4/matmul.m4: Don't include <config/i386/cpuinfo.h>.  Use\n\t__builtin_cpu_is/__builtin_cpu_supports\n\t* generated/matmul_c10.c: Regenerated.\n\t* generated/matmul_c16.c: Likewise.\n\t* generated/matmul_c4.c: Likewise.\n\t* generated/matmul_c8.c: Likewise.\n\t* generated/matmul_i1.c: Likewise.\n\t* generated/matmul_i16.c: Likewise.\n\t* generated/matmul_i2.c: Likewise.\n\t* generated/matmul_i4.c: Likewise.\n\t* generated/matmul_i8.c: Likewise.\n\t* generated/matmul_r10.c: Likewise.\n\t* generated/matmul_r16.c: Likewise.\n\t* generated/matmul_r4.c: Likewise.\n\t* generated/matmul_r8.c: Likewise.", "tree": {"sha": "41e2ba782785299699ebf96e9298b85e1bf82d81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41e2ba782785299699ebf96e9298b85e1bf82d81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e02b45ffc60e0078bde3c56a14f00c54b7f8039", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e02b45ffc60e0078bde3c56a14f00c54b7f8039", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e02b45ffc60e0078bde3c56a14f00c54b7f8039"}], "stats": {"total": 312, "additions": 158, "deletions": 154}, "files": [{"sha": "71c233c87d6afe2ab56f63481cadf0400e34a025", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66", "patch": "@@ -1,3 +1,21 @@\n+2020-05-21  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* m4/matmul.m4: Don't include <config/i386/cpuinfo.h>.  Use\n+\t__builtin_cpu_is/__builtin_cpu_supports\n+\t* generated/matmul_c10.c: Regenerated.\n+\t* generated/matmul_c16.c: Likewise.\n+\t* generated/matmul_c4.c: Likewise.\n+\t* generated/matmul_c8.c: Likewise.\n+\t* generated/matmul_i1.c: Likewise.\n+\t* generated/matmul_i16.c: Likewise.\n+\t* generated/matmul_i2.c: Likewise.\n+\t* generated/matmul_i4.c: Likewise.\n+\t* generated/matmul_i8.c: Likewise.\n+\t* generated/matmul_r10.c: Likewise.\n+\t* generated/matmul_r16.c: Likewise.\n+\t* generated/matmul_r4.c: Likewise.\n+\t* generated/matmul_r8.c: Likewise.\n+\n 2020-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR bootstrap/95147"}, {"sha": "ce5be246ddbc40434377eb0bb9eac36c2acaa43c", "filename": "libgfortran/generated/matmul_c10.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c10.c?ref=8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66", "patch": "@@ -2367,7 +2367,6 @@ matmul_c10_vanilla (gfc_array_c10 * const restrict retarray,\n \n /* Currently, this is i386 only.  Adjust for other architectures.  */\n \n-#include <config/i386/cpuinfo.h>\n void matmul_c10 (gfc_array_c10 * const restrict retarray, \n \tgfc_array_c10 * const restrict a, gfc_array_c10 * const restrict b, int try_blas,\n \tint blas_limit, blas_call gemm)\n@@ -2384,11 +2383,11 @@ void matmul_c10 (gfc_array_c10 * const restrict retarray,\n   if (matmul_fn == NULL)\n     {\n       matmul_fn = matmul_c10_vanilla;\n-      if (__cpu_model.__cpu_vendor == VENDOR_INTEL)\n+      if (__builtin_cpu_is (\"intel\"))\n \t{\n           /* Run down the available processors in order of preference.  */\n #ifdef HAVE_AVX512F\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX512F))\n+\t  if (__builtin_cpu_supports (\"avx512f\"))\n \t    {\n \t      matmul_fn = matmul_c10_avx512f;\n \t      goto store;\n@@ -2397,8 +2396,8 @@ void matmul_c10 (gfc_array_c10 * const restrict retarray,\n #endif  /* HAVE_AVX512F */\n \n #ifdef HAVE_AVX2\n-      \t  if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX2))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\t  if (__builtin_cpu_supports (\"avx2\")\n+\t      && __builtin_cpu_supports (\"fma\"))\n \t    {\n \t      matmul_fn = matmul_c10_avx2;\n \t      goto store;\n@@ -2407,26 +2406,26 @@ void matmul_c10 (gfc_array_c10 * const restrict retarray,\n #endif\n \n #ifdef HAVE_AVX\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n+\t  if (__builtin_cpu_supports (\"avx\"))\n  \t    {\n               matmul_fn = matmul_c10_avx;\n \t      goto store;\n \t    }\n #endif  /* HAVE_AVX */\n         }\n-    else if (__cpu_model.__cpu_vendor == VENDOR_AMD)\n+    else if (__builtin_cpu_is (\"amd\"))\n       {\n #if defined(HAVE_AVX) && defined(HAVE_FMA3) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t    && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma\"))\n \t  {\n             matmul_fn = matmul_c10_avx128_fma3;\n \t    goto store;\n \t  }\n #endif\n #if defined(HAVE_AVX) && defined(HAVE_FMA4) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA4)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma4\"))\n \t  {\n             matmul_fn = matmul_c10_avx128_fma4;\n \t    goto store;"}, {"sha": "bf756d124ecf06b0c50a442d76ca65dd5ceb92d5", "filename": "libgfortran/generated/matmul_c16.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c16.c?ref=8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66", "patch": "@@ -2367,7 +2367,6 @@ matmul_c16_vanilla (gfc_array_c16 * const restrict retarray,\n \n /* Currently, this is i386 only.  Adjust for other architectures.  */\n \n-#include <config/i386/cpuinfo.h>\n void matmul_c16 (gfc_array_c16 * const restrict retarray, \n \tgfc_array_c16 * const restrict a, gfc_array_c16 * const restrict b, int try_blas,\n \tint blas_limit, blas_call gemm)\n@@ -2384,11 +2383,11 @@ void matmul_c16 (gfc_array_c16 * const restrict retarray,\n   if (matmul_fn == NULL)\n     {\n       matmul_fn = matmul_c16_vanilla;\n-      if (__cpu_model.__cpu_vendor == VENDOR_INTEL)\n+      if (__builtin_cpu_is (\"intel\"))\n \t{\n           /* Run down the available processors in order of preference.  */\n #ifdef HAVE_AVX512F\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX512F))\n+\t  if (__builtin_cpu_supports (\"avx512f\"))\n \t    {\n \t      matmul_fn = matmul_c16_avx512f;\n \t      goto store;\n@@ -2397,8 +2396,8 @@ void matmul_c16 (gfc_array_c16 * const restrict retarray,\n #endif  /* HAVE_AVX512F */\n \n #ifdef HAVE_AVX2\n-      \t  if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX2))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\t  if (__builtin_cpu_supports (\"avx2\")\n+\t      && __builtin_cpu_supports (\"fma\"))\n \t    {\n \t      matmul_fn = matmul_c16_avx2;\n \t      goto store;\n@@ -2407,26 +2406,26 @@ void matmul_c16 (gfc_array_c16 * const restrict retarray,\n #endif\n \n #ifdef HAVE_AVX\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n+\t  if (__builtin_cpu_supports (\"avx\"))\n  \t    {\n               matmul_fn = matmul_c16_avx;\n \t      goto store;\n \t    }\n #endif  /* HAVE_AVX */\n         }\n-    else if (__cpu_model.__cpu_vendor == VENDOR_AMD)\n+    else if (__builtin_cpu_is (\"amd\"))\n       {\n #if defined(HAVE_AVX) && defined(HAVE_FMA3) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t    && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma\"))\n \t  {\n             matmul_fn = matmul_c16_avx128_fma3;\n \t    goto store;\n \t  }\n #endif\n #if defined(HAVE_AVX) && defined(HAVE_FMA4) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA4)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma4\"))\n \t  {\n             matmul_fn = matmul_c16_avx128_fma4;\n \t    goto store;"}, {"sha": "5b24410457489255d2829f03df031d3ba46d562a", "filename": "libgfortran/generated/matmul_c4.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c4.c?ref=8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66", "patch": "@@ -2367,7 +2367,6 @@ matmul_c4_vanilla (gfc_array_c4 * const restrict retarray,\n \n /* Currently, this is i386 only.  Adjust for other architectures.  */\n \n-#include <config/i386/cpuinfo.h>\n void matmul_c4 (gfc_array_c4 * const restrict retarray, \n \tgfc_array_c4 * const restrict a, gfc_array_c4 * const restrict b, int try_blas,\n \tint blas_limit, blas_call gemm)\n@@ -2384,11 +2383,11 @@ void matmul_c4 (gfc_array_c4 * const restrict retarray,\n   if (matmul_fn == NULL)\n     {\n       matmul_fn = matmul_c4_vanilla;\n-      if (__cpu_model.__cpu_vendor == VENDOR_INTEL)\n+      if (__builtin_cpu_is (\"intel\"))\n \t{\n           /* Run down the available processors in order of preference.  */\n #ifdef HAVE_AVX512F\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX512F))\n+\t  if (__builtin_cpu_supports (\"avx512f\"))\n \t    {\n \t      matmul_fn = matmul_c4_avx512f;\n \t      goto store;\n@@ -2397,8 +2396,8 @@ void matmul_c4 (gfc_array_c4 * const restrict retarray,\n #endif  /* HAVE_AVX512F */\n \n #ifdef HAVE_AVX2\n-      \t  if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX2))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\t  if (__builtin_cpu_supports (\"avx2\")\n+\t      && __builtin_cpu_supports (\"fma\"))\n \t    {\n \t      matmul_fn = matmul_c4_avx2;\n \t      goto store;\n@@ -2407,26 +2406,26 @@ void matmul_c4 (gfc_array_c4 * const restrict retarray,\n #endif\n \n #ifdef HAVE_AVX\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n+\t  if (__builtin_cpu_supports (\"avx\"))\n  \t    {\n               matmul_fn = matmul_c4_avx;\n \t      goto store;\n \t    }\n #endif  /* HAVE_AVX */\n         }\n-    else if (__cpu_model.__cpu_vendor == VENDOR_AMD)\n+    else if (__builtin_cpu_is (\"amd\"))\n       {\n #if defined(HAVE_AVX) && defined(HAVE_FMA3) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t    && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma\"))\n \t  {\n             matmul_fn = matmul_c4_avx128_fma3;\n \t    goto store;\n \t  }\n #endif\n #if defined(HAVE_AVX) && defined(HAVE_FMA4) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA4)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma4\"))\n \t  {\n             matmul_fn = matmul_c4_avx128_fma4;\n \t    goto store;"}, {"sha": "df3cb927e1c7ef66b2f8c13494ef13b3e75aa52a", "filename": "libgfortran/generated/matmul_c8.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c8.c?ref=8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66", "patch": "@@ -2367,7 +2367,6 @@ matmul_c8_vanilla (gfc_array_c8 * const restrict retarray,\n \n /* Currently, this is i386 only.  Adjust for other architectures.  */\n \n-#include <config/i386/cpuinfo.h>\n void matmul_c8 (gfc_array_c8 * const restrict retarray, \n \tgfc_array_c8 * const restrict a, gfc_array_c8 * const restrict b, int try_blas,\n \tint blas_limit, blas_call gemm)\n@@ -2384,11 +2383,11 @@ void matmul_c8 (gfc_array_c8 * const restrict retarray,\n   if (matmul_fn == NULL)\n     {\n       matmul_fn = matmul_c8_vanilla;\n-      if (__cpu_model.__cpu_vendor == VENDOR_INTEL)\n+      if (__builtin_cpu_is (\"intel\"))\n \t{\n           /* Run down the available processors in order of preference.  */\n #ifdef HAVE_AVX512F\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX512F))\n+\t  if (__builtin_cpu_supports (\"avx512f\"))\n \t    {\n \t      matmul_fn = matmul_c8_avx512f;\n \t      goto store;\n@@ -2397,8 +2396,8 @@ void matmul_c8 (gfc_array_c8 * const restrict retarray,\n #endif  /* HAVE_AVX512F */\n \n #ifdef HAVE_AVX2\n-      \t  if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX2))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\t  if (__builtin_cpu_supports (\"avx2\")\n+\t      && __builtin_cpu_supports (\"fma\"))\n \t    {\n \t      matmul_fn = matmul_c8_avx2;\n \t      goto store;\n@@ -2407,26 +2406,26 @@ void matmul_c8 (gfc_array_c8 * const restrict retarray,\n #endif\n \n #ifdef HAVE_AVX\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n+\t  if (__builtin_cpu_supports (\"avx\"))\n  \t    {\n               matmul_fn = matmul_c8_avx;\n \t      goto store;\n \t    }\n #endif  /* HAVE_AVX */\n         }\n-    else if (__cpu_model.__cpu_vendor == VENDOR_AMD)\n+    else if (__builtin_cpu_is (\"amd\"))\n       {\n #if defined(HAVE_AVX) && defined(HAVE_FMA3) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t    && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma\"))\n \t  {\n             matmul_fn = matmul_c8_avx128_fma3;\n \t    goto store;\n \t  }\n #endif\n #if defined(HAVE_AVX) && defined(HAVE_FMA4) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA4)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma4\"))\n \t  {\n             matmul_fn = matmul_c8_avx128_fma4;\n \t    goto store;"}, {"sha": "49b0fbad21142d99c6a423bb259122d112cfb190", "filename": "libgfortran/generated/matmul_i1.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i1.c?ref=8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66", "patch": "@@ -2367,7 +2367,6 @@ matmul_i1_vanilla (gfc_array_i1 * const restrict retarray,\n \n /* Currently, this is i386 only.  Adjust for other architectures.  */\n \n-#include <config/i386/cpuinfo.h>\n void matmul_i1 (gfc_array_i1 * const restrict retarray, \n \tgfc_array_i1 * const restrict a, gfc_array_i1 * const restrict b, int try_blas,\n \tint blas_limit, blas_call gemm)\n@@ -2384,11 +2383,11 @@ void matmul_i1 (gfc_array_i1 * const restrict retarray,\n   if (matmul_fn == NULL)\n     {\n       matmul_fn = matmul_i1_vanilla;\n-      if (__cpu_model.__cpu_vendor == VENDOR_INTEL)\n+      if (__builtin_cpu_is (\"intel\"))\n \t{\n           /* Run down the available processors in order of preference.  */\n #ifdef HAVE_AVX512F\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX512F))\n+\t  if (__builtin_cpu_supports (\"avx512f\"))\n \t    {\n \t      matmul_fn = matmul_i1_avx512f;\n \t      goto store;\n@@ -2397,8 +2396,8 @@ void matmul_i1 (gfc_array_i1 * const restrict retarray,\n #endif  /* HAVE_AVX512F */\n \n #ifdef HAVE_AVX2\n-      \t  if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX2))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\t  if (__builtin_cpu_supports (\"avx2\")\n+\t      && __builtin_cpu_supports (\"fma\"))\n \t    {\n \t      matmul_fn = matmul_i1_avx2;\n \t      goto store;\n@@ -2407,26 +2406,26 @@ void matmul_i1 (gfc_array_i1 * const restrict retarray,\n #endif\n \n #ifdef HAVE_AVX\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n+\t  if (__builtin_cpu_supports (\"avx\"))\n  \t    {\n               matmul_fn = matmul_i1_avx;\n \t      goto store;\n \t    }\n #endif  /* HAVE_AVX */\n         }\n-    else if (__cpu_model.__cpu_vendor == VENDOR_AMD)\n+    else if (__builtin_cpu_is (\"amd\"))\n       {\n #if defined(HAVE_AVX) && defined(HAVE_FMA3) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t    && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma\"))\n \t  {\n             matmul_fn = matmul_i1_avx128_fma3;\n \t    goto store;\n \t  }\n #endif\n #if defined(HAVE_AVX) && defined(HAVE_FMA4) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA4)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma4\"))\n \t  {\n             matmul_fn = matmul_i1_avx128_fma4;\n \t    goto store;"}, {"sha": "4e1d837682b3328c2d4b804a3974b42e47b10618", "filename": "libgfortran/generated/matmul_i16.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i16.c?ref=8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66", "patch": "@@ -2367,7 +2367,6 @@ matmul_i16_vanilla (gfc_array_i16 * const restrict retarray,\n \n /* Currently, this is i386 only.  Adjust for other architectures.  */\n \n-#include <config/i386/cpuinfo.h>\n void matmul_i16 (gfc_array_i16 * const restrict retarray, \n \tgfc_array_i16 * const restrict a, gfc_array_i16 * const restrict b, int try_blas,\n \tint blas_limit, blas_call gemm)\n@@ -2384,11 +2383,11 @@ void matmul_i16 (gfc_array_i16 * const restrict retarray,\n   if (matmul_fn == NULL)\n     {\n       matmul_fn = matmul_i16_vanilla;\n-      if (__cpu_model.__cpu_vendor == VENDOR_INTEL)\n+      if (__builtin_cpu_is (\"intel\"))\n \t{\n           /* Run down the available processors in order of preference.  */\n #ifdef HAVE_AVX512F\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX512F))\n+\t  if (__builtin_cpu_supports (\"avx512f\"))\n \t    {\n \t      matmul_fn = matmul_i16_avx512f;\n \t      goto store;\n@@ -2397,8 +2396,8 @@ void matmul_i16 (gfc_array_i16 * const restrict retarray,\n #endif  /* HAVE_AVX512F */\n \n #ifdef HAVE_AVX2\n-      \t  if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX2))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\t  if (__builtin_cpu_supports (\"avx2\")\n+\t      && __builtin_cpu_supports (\"fma\"))\n \t    {\n \t      matmul_fn = matmul_i16_avx2;\n \t      goto store;\n@@ -2407,26 +2406,26 @@ void matmul_i16 (gfc_array_i16 * const restrict retarray,\n #endif\n \n #ifdef HAVE_AVX\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n+\t  if (__builtin_cpu_supports (\"avx\"))\n  \t    {\n               matmul_fn = matmul_i16_avx;\n \t      goto store;\n \t    }\n #endif  /* HAVE_AVX */\n         }\n-    else if (__cpu_model.__cpu_vendor == VENDOR_AMD)\n+    else if (__builtin_cpu_is (\"amd\"))\n       {\n #if defined(HAVE_AVX) && defined(HAVE_FMA3) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t    && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma\"))\n \t  {\n             matmul_fn = matmul_i16_avx128_fma3;\n \t    goto store;\n \t  }\n #endif\n #if defined(HAVE_AVX) && defined(HAVE_FMA4) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA4)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma4\"))\n \t  {\n             matmul_fn = matmul_i16_avx128_fma4;\n \t    goto store;"}, {"sha": "191298708dcf4aae5969f03fc2ac114f24c1c487", "filename": "libgfortran/generated/matmul_i2.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i2.c?ref=8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66", "patch": "@@ -2367,7 +2367,6 @@ matmul_i2_vanilla (gfc_array_i2 * const restrict retarray,\n \n /* Currently, this is i386 only.  Adjust for other architectures.  */\n \n-#include <config/i386/cpuinfo.h>\n void matmul_i2 (gfc_array_i2 * const restrict retarray, \n \tgfc_array_i2 * const restrict a, gfc_array_i2 * const restrict b, int try_blas,\n \tint blas_limit, blas_call gemm)\n@@ -2384,11 +2383,11 @@ void matmul_i2 (gfc_array_i2 * const restrict retarray,\n   if (matmul_fn == NULL)\n     {\n       matmul_fn = matmul_i2_vanilla;\n-      if (__cpu_model.__cpu_vendor == VENDOR_INTEL)\n+      if (__builtin_cpu_is (\"intel\"))\n \t{\n           /* Run down the available processors in order of preference.  */\n #ifdef HAVE_AVX512F\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX512F))\n+\t  if (__builtin_cpu_supports (\"avx512f\"))\n \t    {\n \t      matmul_fn = matmul_i2_avx512f;\n \t      goto store;\n@@ -2397,8 +2396,8 @@ void matmul_i2 (gfc_array_i2 * const restrict retarray,\n #endif  /* HAVE_AVX512F */\n \n #ifdef HAVE_AVX2\n-      \t  if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX2))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\t  if (__builtin_cpu_supports (\"avx2\")\n+\t      && __builtin_cpu_supports (\"fma\"))\n \t    {\n \t      matmul_fn = matmul_i2_avx2;\n \t      goto store;\n@@ -2407,26 +2406,26 @@ void matmul_i2 (gfc_array_i2 * const restrict retarray,\n #endif\n \n #ifdef HAVE_AVX\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n+\t  if (__builtin_cpu_supports (\"avx\"))\n  \t    {\n               matmul_fn = matmul_i2_avx;\n \t      goto store;\n \t    }\n #endif  /* HAVE_AVX */\n         }\n-    else if (__cpu_model.__cpu_vendor == VENDOR_AMD)\n+    else if (__builtin_cpu_is (\"amd\"))\n       {\n #if defined(HAVE_AVX) && defined(HAVE_FMA3) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t    && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma\"))\n \t  {\n             matmul_fn = matmul_i2_avx128_fma3;\n \t    goto store;\n \t  }\n #endif\n #if defined(HAVE_AVX) && defined(HAVE_FMA4) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA4)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma4\"))\n \t  {\n             matmul_fn = matmul_i2_avx128_fma4;\n \t    goto store;"}, {"sha": "ab14a0a3ff3c8a9bafd381a01fd0f365d95cc158", "filename": "libgfortran/generated/matmul_i4.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i4.c?ref=8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66", "patch": "@@ -2367,7 +2367,6 @@ matmul_i4_vanilla (gfc_array_i4 * const restrict retarray,\n \n /* Currently, this is i386 only.  Adjust for other architectures.  */\n \n-#include <config/i386/cpuinfo.h>\n void matmul_i4 (gfc_array_i4 * const restrict retarray, \n \tgfc_array_i4 * const restrict a, gfc_array_i4 * const restrict b, int try_blas,\n \tint blas_limit, blas_call gemm)\n@@ -2384,11 +2383,11 @@ void matmul_i4 (gfc_array_i4 * const restrict retarray,\n   if (matmul_fn == NULL)\n     {\n       matmul_fn = matmul_i4_vanilla;\n-      if (__cpu_model.__cpu_vendor == VENDOR_INTEL)\n+      if (__builtin_cpu_is (\"intel\"))\n \t{\n           /* Run down the available processors in order of preference.  */\n #ifdef HAVE_AVX512F\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX512F))\n+\t  if (__builtin_cpu_supports (\"avx512f\"))\n \t    {\n \t      matmul_fn = matmul_i4_avx512f;\n \t      goto store;\n@@ -2397,8 +2396,8 @@ void matmul_i4 (gfc_array_i4 * const restrict retarray,\n #endif  /* HAVE_AVX512F */\n \n #ifdef HAVE_AVX2\n-      \t  if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX2))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\t  if (__builtin_cpu_supports (\"avx2\")\n+\t      && __builtin_cpu_supports (\"fma\"))\n \t    {\n \t      matmul_fn = matmul_i4_avx2;\n \t      goto store;\n@@ -2407,26 +2406,26 @@ void matmul_i4 (gfc_array_i4 * const restrict retarray,\n #endif\n \n #ifdef HAVE_AVX\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n+\t  if (__builtin_cpu_supports (\"avx\"))\n  \t    {\n               matmul_fn = matmul_i4_avx;\n \t      goto store;\n \t    }\n #endif  /* HAVE_AVX */\n         }\n-    else if (__cpu_model.__cpu_vendor == VENDOR_AMD)\n+    else if (__builtin_cpu_is (\"amd\"))\n       {\n #if defined(HAVE_AVX) && defined(HAVE_FMA3) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t    && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma\"))\n \t  {\n             matmul_fn = matmul_i4_avx128_fma3;\n \t    goto store;\n \t  }\n #endif\n #if defined(HAVE_AVX) && defined(HAVE_FMA4) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA4)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma4\"))\n \t  {\n             matmul_fn = matmul_i4_avx128_fma4;\n \t    goto store;"}, {"sha": "bc627e189fe75c016adeb9ea5fae0e828cd394f7", "filename": "libgfortran/generated/matmul_i8.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i8.c?ref=8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66", "patch": "@@ -2367,7 +2367,6 @@ matmul_i8_vanilla (gfc_array_i8 * const restrict retarray,\n \n /* Currently, this is i386 only.  Adjust for other architectures.  */\n \n-#include <config/i386/cpuinfo.h>\n void matmul_i8 (gfc_array_i8 * const restrict retarray, \n \tgfc_array_i8 * const restrict a, gfc_array_i8 * const restrict b, int try_blas,\n \tint blas_limit, blas_call gemm)\n@@ -2384,11 +2383,11 @@ void matmul_i8 (gfc_array_i8 * const restrict retarray,\n   if (matmul_fn == NULL)\n     {\n       matmul_fn = matmul_i8_vanilla;\n-      if (__cpu_model.__cpu_vendor == VENDOR_INTEL)\n+      if (__builtin_cpu_is (\"intel\"))\n \t{\n           /* Run down the available processors in order of preference.  */\n #ifdef HAVE_AVX512F\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX512F))\n+\t  if (__builtin_cpu_supports (\"avx512f\"))\n \t    {\n \t      matmul_fn = matmul_i8_avx512f;\n \t      goto store;\n@@ -2397,8 +2396,8 @@ void matmul_i8 (gfc_array_i8 * const restrict retarray,\n #endif  /* HAVE_AVX512F */\n \n #ifdef HAVE_AVX2\n-      \t  if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX2))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\t  if (__builtin_cpu_supports (\"avx2\")\n+\t      && __builtin_cpu_supports (\"fma\"))\n \t    {\n \t      matmul_fn = matmul_i8_avx2;\n \t      goto store;\n@@ -2407,26 +2406,26 @@ void matmul_i8 (gfc_array_i8 * const restrict retarray,\n #endif\n \n #ifdef HAVE_AVX\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n+\t  if (__builtin_cpu_supports (\"avx\"))\n  \t    {\n               matmul_fn = matmul_i8_avx;\n \t      goto store;\n \t    }\n #endif  /* HAVE_AVX */\n         }\n-    else if (__cpu_model.__cpu_vendor == VENDOR_AMD)\n+    else if (__builtin_cpu_is (\"amd\"))\n       {\n #if defined(HAVE_AVX) && defined(HAVE_FMA3) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t    && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma\"))\n \t  {\n             matmul_fn = matmul_i8_avx128_fma3;\n \t    goto store;\n \t  }\n #endif\n #if defined(HAVE_AVX) && defined(HAVE_FMA4) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA4)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma4\"))\n \t  {\n             matmul_fn = matmul_i8_avx128_fma4;\n \t    goto store;"}, {"sha": "b5e63be244831c7fb56c646ef3e208d970915c64", "filename": "libgfortran/generated/matmul_r10.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r10.c?ref=8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66", "patch": "@@ -2367,7 +2367,6 @@ matmul_r10_vanilla (gfc_array_r10 * const restrict retarray,\n \n /* Currently, this is i386 only.  Adjust for other architectures.  */\n \n-#include <config/i386/cpuinfo.h>\n void matmul_r10 (gfc_array_r10 * const restrict retarray, \n \tgfc_array_r10 * const restrict a, gfc_array_r10 * const restrict b, int try_blas,\n \tint blas_limit, blas_call gemm)\n@@ -2384,11 +2383,11 @@ void matmul_r10 (gfc_array_r10 * const restrict retarray,\n   if (matmul_fn == NULL)\n     {\n       matmul_fn = matmul_r10_vanilla;\n-      if (__cpu_model.__cpu_vendor == VENDOR_INTEL)\n+      if (__builtin_cpu_is (\"intel\"))\n \t{\n           /* Run down the available processors in order of preference.  */\n #ifdef HAVE_AVX512F\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX512F))\n+\t  if (__builtin_cpu_supports (\"avx512f\"))\n \t    {\n \t      matmul_fn = matmul_r10_avx512f;\n \t      goto store;\n@@ -2397,8 +2396,8 @@ void matmul_r10 (gfc_array_r10 * const restrict retarray,\n #endif  /* HAVE_AVX512F */\n \n #ifdef HAVE_AVX2\n-      \t  if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX2))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\t  if (__builtin_cpu_supports (\"avx2\")\n+\t      && __builtin_cpu_supports (\"fma\"))\n \t    {\n \t      matmul_fn = matmul_r10_avx2;\n \t      goto store;\n@@ -2407,26 +2406,26 @@ void matmul_r10 (gfc_array_r10 * const restrict retarray,\n #endif\n \n #ifdef HAVE_AVX\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n+\t  if (__builtin_cpu_supports (\"avx\"))\n  \t    {\n               matmul_fn = matmul_r10_avx;\n \t      goto store;\n \t    }\n #endif  /* HAVE_AVX */\n         }\n-    else if (__cpu_model.__cpu_vendor == VENDOR_AMD)\n+    else if (__builtin_cpu_is (\"amd\"))\n       {\n #if defined(HAVE_AVX) && defined(HAVE_FMA3) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t    && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma\"))\n \t  {\n             matmul_fn = matmul_r10_avx128_fma3;\n \t    goto store;\n \t  }\n #endif\n #if defined(HAVE_AVX) && defined(HAVE_FMA4) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA4)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma4\"))\n \t  {\n             matmul_fn = matmul_r10_avx128_fma4;\n \t    goto store;"}, {"sha": "4e6c66bb8f35ec71cdc061631ddee3d793bddaf3", "filename": "libgfortran/generated/matmul_r16.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r16.c?ref=8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66", "patch": "@@ -2367,7 +2367,6 @@ matmul_r16_vanilla (gfc_array_r16 * const restrict retarray,\n \n /* Currently, this is i386 only.  Adjust for other architectures.  */\n \n-#include <config/i386/cpuinfo.h>\n void matmul_r16 (gfc_array_r16 * const restrict retarray, \n \tgfc_array_r16 * const restrict a, gfc_array_r16 * const restrict b, int try_blas,\n \tint blas_limit, blas_call gemm)\n@@ -2384,11 +2383,11 @@ void matmul_r16 (gfc_array_r16 * const restrict retarray,\n   if (matmul_fn == NULL)\n     {\n       matmul_fn = matmul_r16_vanilla;\n-      if (__cpu_model.__cpu_vendor == VENDOR_INTEL)\n+      if (__builtin_cpu_is (\"intel\"))\n \t{\n           /* Run down the available processors in order of preference.  */\n #ifdef HAVE_AVX512F\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX512F))\n+\t  if (__builtin_cpu_supports (\"avx512f\"))\n \t    {\n \t      matmul_fn = matmul_r16_avx512f;\n \t      goto store;\n@@ -2397,8 +2396,8 @@ void matmul_r16 (gfc_array_r16 * const restrict retarray,\n #endif  /* HAVE_AVX512F */\n \n #ifdef HAVE_AVX2\n-      \t  if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX2))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\t  if (__builtin_cpu_supports (\"avx2\")\n+\t      && __builtin_cpu_supports (\"fma\"))\n \t    {\n \t      matmul_fn = matmul_r16_avx2;\n \t      goto store;\n@@ -2407,26 +2406,26 @@ void matmul_r16 (gfc_array_r16 * const restrict retarray,\n #endif\n \n #ifdef HAVE_AVX\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n+\t  if (__builtin_cpu_supports (\"avx\"))\n  \t    {\n               matmul_fn = matmul_r16_avx;\n \t      goto store;\n \t    }\n #endif  /* HAVE_AVX */\n         }\n-    else if (__cpu_model.__cpu_vendor == VENDOR_AMD)\n+    else if (__builtin_cpu_is (\"amd\"))\n       {\n #if defined(HAVE_AVX) && defined(HAVE_FMA3) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t    && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma\"))\n \t  {\n             matmul_fn = matmul_r16_avx128_fma3;\n \t    goto store;\n \t  }\n #endif\n #if defined(HAVE_AVX) && defined(HAVE_FMA4) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA4)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma4\"))\n \t  {\n             matmul_fn = matmul_r16_avx128_fma4;\n \t    goto store;"}, {"sha": "202634b55d1411c368acfcd3972b062c269c11a1", "filename": "libgfortran/generated/matmul_r4.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r4.c?ref=8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66", "patch": "@@ -2367,7 +2367,6 @@ matmul_r4_vanilla (gfc_array_r4 * const restrict retarray,\n \n /* Currently, this is i386 only.  Adjust for other architectures.  */\n \n-#include <config/i386/cpuinfo.h>\n void matmul_r4 (gfc_array_r4 * const restrict retarray, \n \tgfc_array_r4 * const restrict a, gfc_array_r4 * const restrict b, int try_blas,\n \tint blas_limit, blas_call gemm)\n@@ -2384,11 +2383,11 @@ void matmul_r4 (gfc_array_r4 * const restrict retarray,\n   if (matmul_fn == NULL)\n     {\n       matmul_fn = matmul_r4_vanilla;\n-      if (__cpu_model.__cpu_vendor == VENDOR_INTEL)\n+      if (__builtin_cpu_is (\"intel\"))\n \t{\n           /* Run down the available processors in order of preference.  */\n #ifdef HAVE_AVX512F\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX512F))\n+\t  if (__builtin_cpu_supports (\"avx512f\"))\n \t    {\n \t      matmul_fn = matmul_r4_avx512f;\n \t      goto store;\n@@ -2397,8 +2396,8 @@ void matmul_r4 (gfc_array_r4 * const restrict retarray,\n #endif  /* HAVE_AVX512F */\n \n #ifdef HAVE_AVX2\n-      \t  if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX2))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\t  if (__builtin_cpu_supports (\"avx2\")\n+\t      && __builtin_cpu_supports (\"fma\"))\n \t    {\n \t      matmul_fn = matmul_r4_avx2;\n \t      goto store;\n@@ -2407,26 +2406,26 @@ void matmul_r4 (gfc_array_r4 * const restrict retarray,\n #endif\n \n #ifdef HAVE_AVX\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n+\t  if (__builtin_cpu_supports (\"avx\"))\n  \t    {\n               matmul_fn = matmul_r4_avx;\n \t      goto store;\n \t    }\n #endif  /* HAVE_AVX */\n         }\n-    else if (__cpu_model.__cpu_vendor == VENDOR_AMD)\n+    else if (__builtin_cpu_is (\"amd\"))\n       {\n #if defined(HAVE_AVX) && defined(HAVE_FMA3) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t    && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma\"))\n \t  {\n             matmul_fn = matmul_r4_avx128_fma3;\n \t    goto store;\n \t  }\n #endif\n #if defined(HAVE_AVX) && defined(HAVE_FMA4) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA4)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma4\"))\n \t  {\n             matmul_fn = matmul_r4_avx128_fma4;\n \t    goto store;"}, {"sha": "22c24e50c372ce30a66dbd9e49829ab60d9a0627", "filename": "libgfortran/generated/matmul_r8.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fgenerated%2Fmatmul_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r8.c?ref=8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66", "patch": "@@ -2367,7 +2367,6 @@ matmul_r8_vanilla (gfc_array_r8 * const restrict retarray,\n \n /* Currently, this is i386 only.  Adjust for other architectures.  */\n \n-#include <config/i386/cpuinfo.h>\n void matmul_r8 (gfc_array_r8 * const restrict retarray, \n \tgfc_array_r8 * const restrict a, gfc_array_r8 * const restrict b, int try_blas,\n \tint blas_limit, blas_call gemm)\n@@ -2384,11 +2383,11 @@ void matmul_r8 (gfc_array_r8 * const restrict retarray,\n   if (matmul_fn == NULL)\n     {\n       matmul_fn = matmul_r8_vanilla;\n-      if (__cpu_model.__cpu_vendor == VENDOR_INTEL)\n+      if (__builtin_cpu_is (\"intel\"))\n \t{\n           /* Run down the available processors in order of preference.  */\n #ifdef HAVE_AVX512F\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX512F))\n+\t  if (__builtin_cpu_supports (\"avx512f\"))\n \t    {\n \t      matmul_fn = matmul_r8_avx512f;\n \t      goto store;\n@@ -2397,8 +2396,8 @@ void matmul_r8 (gfc_array_r8 * const restrict retarray,\n #endif  /* HAVE_AVX512F */\n \n #ifdef HAVE_AVX2\n-      \t  if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX2))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\t  if (__builtin_cpu_supports (\"avx2\")\n+\t      && __builtin_cpu_supports (\"fma\"))\n \t    {\n \t      matmul_fn = matmul_r8_avx2;\n \t      goto store;\n@@ -2407,26 +2406,26 @@ void matmul_r8 (gfc_array_r8 * const restrict retarray,\n #endif\n \n #ifdef HAVE_AVX\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n+\t  if (__builtin_cpu_supports (\"avx\"))\n  \t    {\n               matmul_fn = matmul_r8_avx;\n \t      goto store;\n \t    }\n #endif  /* HAVE_AVX */\n         }\n-    else if (__cpu_model.__cpu_vendor == VENDOR_AMD)\n+    else if (__builtin_cpu_is (\"amd\"))\n       {\n #if defined(HAVE_AVX) && defined(HAVE_FMA3) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t    && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma\"))\n \t  {\n             matmul_fn = matmul_r8_avx128_fma3;\n \t    goto store;\n \t  }\n #endif\n #if defined(HAVE_AVX) && defined(HAVE_FMA4) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA4)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma4\"))\n \t  {\n             matmul_fn = matmul_r8_avx128_fma4;\n \t    goto store;"}, {"sha": "5acecf1edce6db1a2e56a223d3c9525d5cf80d3c", "filename": "libgfortran/m4/matmul.m4", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fm4%2Fmatmul.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66/libgfortran%2Fm4%2Fmatmul.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmatmul.m4?ref=8ebc2f5e05aa32bcad8cbfb02f8b50d92a469e66", "patch": "@@ -134,7 +134,6 @@ internal_proto('matmul_name`);\n \n /* Currently, this is i386 only.  Adjust for other architectures.  */\n \n-#include <config/i386/cpuinfo.h>\n void matmul_'rtype_code` ('rtype` * const restrict retarray, \n \t'rtype` * const restrict a, 'rtype` * const restrict b, int try_blas,\n \tint blas_limit, blas_call gemm)\n@@ -151,11 +150,11 @@ void matmul_'rtype_code` ('rtype` * const restrict retarray,\n   if (matmul_fn == NULL)\n     {\n       matmul_fn = matmul_'rtype_code`_vanilla;\n-      if (__cpu_model.__cpu_vendor == VENDOR_INTEL)\n+      if (__builtin_cpu_is (\"intel\"))\n \t{\n           /* Run down the available processors in order of preference.  */\n #ifdef HAVE_AVX512F\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX512F))\n+\t  if (__builtin_cpu_supports (\"avx512f\"))\n \t    {\n \t      matmul_fn = matmul_'rtype_code`_avx512f;\n \t      goto store;\n@@ -164,8 +163,8 @@ void matmul_'rtype_code` ('rtype` * const restrict retarray,\n #endif  /* HAVE_AVX512F */\n \n #ifdef HAVE_AVX2\n-      \t  if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX2))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\t  if (__builtin_cpu_supports (\"avx2\")\n+\t      && __builtin_cpu_supports (\"fma\"))\n \t    {\n \t      matmul_fn = matmul_'rtype_code`_avx2;\n \t      goto store;\n@@ -174,26 +173,26 @@ void matmul_'rtype_code` ('rtype` * const restrict retarray,\n #endif\n \n #ifdef HAVE_AVX\n-      \t  if (__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n+\t  if (__builtin_cpu_supports (\"avx\"))\n  \t    {\n               matmul_fn = matmul_'rtype_code`_avx;\n \t      goto store;\n \t    }\n #endif  /* HAVE_AVX */\n         }\n-    else if (__cpu_model.__cpu_vendor == VENDOR_AMD)\n+    else if (__builtin_cpu_is (\"amd\"))\n       {\n #if defined(HAVE_AVX) && defined(HAVE_FMA3) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t    && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma\"))\n \t  {\n             matmul_fn = matmul_'rtype_code`_avx128_fma3;\n \t    goto store;\n \t  }\n #endif\n #if defined(HAVE_AVX) && defined(HAVE_FMA4) && defined(HAVE_AVX128)\n-        if ((__cpu_model.__cpu_features[0] & (1 << FEATURE_AVX))\n-\t     && (__cpu_model.__cpu_features[0] & (1 << FEATURE_FMA4)))\n+\tif (__builtin_cpu_supports (\"avx\")\n+\t    && __builtin_cpu_supports (\"fma4\"))\n \t  {\n             matmul_fn = matmul_'rtype_code`_avx128_fma4;\n \t    goto store;"}]}