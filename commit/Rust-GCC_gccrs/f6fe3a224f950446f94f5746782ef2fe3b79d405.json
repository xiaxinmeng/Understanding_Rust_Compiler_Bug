{"sha": "f6fe3a224f950446f94f5746782ef2fe3b79d405", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZmZTNhMjI0Zjk1MDQ0NmY5NGY1NzQ2NzgyZWYyZmUzYjc5ZDQwNQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2006-04-07T14:24:44Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2006-04-07T14:24:44Z"}, "message": "rs6000.c (rs6000_rtx_costs): Do not treat CONST_DOUBLE as INTVAL.\n\n\t* config/rs6000/rs6000.c (rs6000_rtx_costs) <CONST_DOUBLE>: Do not\n\ttreat CONST_DOUBLE as INTVAL.  and64_2_operands require an extra\n\tinsn.\n\nFrom-SVN: r112752", "tree": {"sha": "3bd5f90341203b350db9151e9cd27c5edf2e7714", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bd5f90341203b350db9151e9cd27c5edf2e7714"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6fe3a224f950446f94f5746782ef2fe3b79d405", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6fe3a224f950446f94f5746782ef2fe3b79d405", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6fe3a224f950446f94f5746782ef2fe3b79d405", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6fe3a224f950446f94f5746782ef2fe3b79d405/comments", "author": null, "committer": null, "parents": [{"sha": "28e6f134a1e8cfda974cf2f54999137fe7480b13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28e6f134a1e8cfda974cf2f54999137fe7480b13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28e6f134a1e8cfda974cf2f54999137fe7480b13"}], "stats": {"total": 44, "additions": 23, "deletions": 21}, "files": [{"sha": "486c0186139e8274104511d9adbedd82bcea696d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6fe3a224f950446f94f5746782ef2fe3b79d405/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6fe3a224f950446f94f5746782ef2fe3b79d405/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6fe3a224f950446f94f5746782ef2fe3b79d405", "patch": "@@ -1,3 +1,8 @@\n+2006-04-07  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_rtx_costs) <CONST_DOUBLE>: Do not\n+\ttreat CONST_DOUBLE as INTVAL.  and64_2_operands require an extra\n+\tinsn.\n \n 2006-04-07  Jan Hubicka  <jh@suse.cz>\n "}, {"sha": "ec2cfdef933ec0f0917e31499f420ef74a47977a", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 18, "deletions": 21, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6fe3a224f950446f94f5746782ef2fe3b79d405/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6fe3a224f950446f94f5746782ef2fe3b79d405/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=f6fe3a224f950446f94f5746782ef2fe3b79d405", "patch": "@@ -18642,28 +18642,25 @@ rs6000_rtx_costs (rtx x, int code, int outer_code, int *total)\n       /* FALLTHRU */\n \n     case CONST_DOUBLE:\n-      if (mode == DImode\n-\t  && ((outer_code == AND\n-\t       && (satisfies_constraint_K (x)\n-\t\t   || satisfies_constraint_L (x)\n-\t\t   || mask_operand (x, DImode)\n-\t\t   || mask64_operand (x, DImode)))\n-\t      || ((outer_code == IOR || outer_code == XOR)\n-\t\t  && CONST_DOUBLE_HIGH (x) == 0\n-\t\t  && (CONST_DOUBLE_LOW (x)\n-\t\t      & ~ (unsigned HOST_WIDE_INT) 0xffff) == 0)))\n+      if (mode == DImode && code == CONST_DOUBLE)\n \t{\n-\t  *total = 0;\n-\t  return true;\n-\t}\n-      else if (mode == DImode\n-\t       && (outer_code == SET\n-\t\t   || outer_code == IOR\n-\t\t   || outer_code == XOR)\n-\t       && CONST_DOUBLE_HIGH (x) == 0)\n-\t{\n-\t  *total = COSTS_N_INSNS (1);\n-\t  return true;\n+\t  if ((outer_code == IOR || outer_code == XOR)\n+\t      && CONST_DOUBLE_HIGH (x) == 0\n+\t      && (CONST_DOUBLE_LOW (x)\n+\t\t  & ~ (unsigned HOST_WIDE_INT) 0xffff) == 0)\n+\t    {\n+\t      *total = 0;\n+\t      return true;\n+\t    }\n+\t  else if ((outer_code == AND && and64_2_operand (x, DImode))\n+\t\t   || ((outer_code == SET\n+\t\t\t|| outer_code == IOR\n+\t\t\t|| outer_code == XOR)\n+\t\t       && CONST_DOUBLE_HIGH (x) == 0))\n+\t    {\n+\t      *total = COSTS_N_INSNS (1);\n+\t      return true;\n+\t    }\n \t}\n       /* FALLTHRU */\n "}]}