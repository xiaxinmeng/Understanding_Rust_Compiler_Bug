{"sha": "4246c8da675115145c206b475b2a224269bfd228", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI0NmM4ZGE2NzUxMTUxNDVjMjA2YjQ3NWIyYTIyNDI2OWJmZDIyOA==", "commit": {"author": {"name": "Mark Wielaard", "email": "mjw@redhat.com", "date": "2016-02-22T22:42:19Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2016-02-22T22:42:19Z"}, "message": "PR28901 Add two levels for -Wunused-const-variable.\n\nThere is some controversy about enabling -Wunused-const-variable for all\nunused static const variables because some feel there are too many errors\nexposed in header files. Create two levels for -Wunused-const-variable.\nOne level to only check for unused static const variables in the main\ncompilation file. Which is enabled by -Wunused-variable. And a second\nlevel that also checks for unused static const variables in included\nfiles. Which must be explicitly enabled.\n\ngcc/ChangeLog\n\n\tPR c/28901\n\t* cgraphunit.c (check_global_declaration): Check level of\n\twarn_unused_const_variable and main_input_filename.\n\t* doc/invoke.texi (Warning Options): Add -Wunused-const-variable=.\n\t(-Wunused-variable): For C implies -Wunused-const-variable=1.\n\t(-Wunused-const-variable): Explain levels 1 and 2.\n\ngcc/c-family/ChangeLog\n\n\tPR c/28901\n\t* c.opt (Wunused-const-variable): Turn into Alias for...\n\t(Wunused-const-variable=): New option.\n\ngcc/testsuite/ChangeLog\n\n\tPR c/28901\n\t* gcc.dg/unused-variable-3.c: New test.\n\nFrom-SVN: r233616", "tree": {"sha": "ca99c93ee8a42bd45375966c5fac2b44cca0e3f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca99c93ee8a42bd45375966c5fac2b44cca0e3f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4246c8da675115145c206b475b2a224269bfd228", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4246c8da675115145c206b475b2a224269bfd228", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4246c8da675115145c206b475b2a224269bfd228", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4246c8da675115145c206b475b2a224269bfd228/comments", "author": null, "committer": null, "parents": [{"sha": "07bfc9c103a685d5ad59ce846188c449e81055df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07bfc9c103a685d5ad59ce846188c449e81055df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07bfc9c103a685d5ad59ce846188c449e81055df"}], "stats": {"total": 68, "additions": 60, "deletions": 8}, "files": [{"sha": "49f6c25399216d343cdf913978c9b1bb572c608a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4246c8da675115145c206b475b2a224269bfd228/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4246c8da675115145c206b475b2a224269bfd228/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4246c8da675115145c206b475b2a224269bfd228", "patch": "@@ -1,3 +1,12 @@\n+2016-02-20  Mark Wielaard  <mjw@redhat.com>\n+\n+\tPR c/28901\n+\t* cgraphunit.c (check_global_declaration): Check level of\n+\twarn_unused_const_variable and main_input_filename.\n+\t* doc/invoke.texi (Warning Options): Add -Wunused-const-variable=.\n+\t(-Wunused-variable): For C implies -Wunused-const-variable=1.\n+\t(-Wunused-const-variable): Explain levels 1 and 2.\n+\n 2016-02-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/69888"}, {"sha": "f11503ecd150d7e6e19330c4334164d6e5331bb6", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4246c8da675115145c206b475b2a224269bfd228/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4246c8da675115145c206b475b2a224269bfd228/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=4246c8da675115145c206b475b2a224269bfd228", "patch": "@@ -1,3 +1,9 @@\n+2016-02-20  Mark Wielaard  <mjw@redhat.com>\n+\n+\tPR c/28901\n+\t* c.opt (Wunused-const-variable): Turn into Alias for...\n+\t(Wunused-const-variable=): New option.\n+\n 2016-02-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR c++/69865"}, {"sha": "7c5f6c7b5ccbcbc42cde8739cc7011b3fed66fff", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4246c8da675115145c206b475b2a224269bfd228/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4246c8da675115145c206b475b2a224269bfd228/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=4246c8da675115145c206b475b2a224269bfd228", "patch": "@@ -949,7 +949,11 @@ C ObjC C++ ObjC++ LangEnabledBy(C ObjC C++ ObjC++,Wunused)\n ; documented in common.opt\n \n Wunused-const-variable\n-C ObjC C++ ObjC++ Var(warn_unused_const_variable) Warning LangEnabledBy(C ObjC,Wunused-variable)\n+C ObjC C++ ObjC++ Warning Alias(Wunused-const-variable=, 2, 0)\n+Warn when a const variable is unused.\n+\n+Wunused-const-variable=\n+C ObjC C++ ObjC++ Joined RejectNegative UInteger Var(warn_unused_const_variable) Warning LangEnabledBy(C ObjC,Wunused-variable, 1, 0)\n Warn when a const variable is unused.\n \n Wvariadic-macros"}, {"sha": "27a073a63be1df1f1a6cd7245f7c95de584d1f04", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4246c8da675115145c206b475b2a224269bfd228/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4246c8da675115145c206b475b2a224269bfd228/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=4246c8da675115145c206b475b2a224269bfd228", "patch": "@@ -942,7 +942,10 @@ check_global_declaration (symtab_node *snode)\n   /* Warn about static fns or vars defined but not used.  */\n   if (((warn_unused_function && TREE_CODE (decl) == FUNCTION_DECL)\n        || (((warn_unused_variable && ! TREE_READONLY (decl))\n-\t    || (warn_unused_const_variable && TREE_READONLY (decl)))\n+\t    || (warn_unused_const_variable > 0 && TREE_READONLY (decl)\n+\t\t&& (warn_unused_const_variable == 2\n+\t\t    || filename_cmp (main_input_filename,\n+\t\t\t\t     DECL_SOURCE_FILE (decl)) == 0)))\n \t   && TREE_CODE (decl) == VAR_DECL))\n       && ! DECL_IN_SYSTEM_HEADER (decl)\n       && ! snode->referred_to_p (/*include_self=*/false)\n@@ -971,7 +974,7 @@ check_global_declaration (symtab_node *snode)\n \t\t(TREE_CODE (decl) == FUNCTION_DECL)\n \t\t? OPT_Wunused_function\n \t\t: (TREE_READONLY (decl)\n-\t\t   ? OPT_Wunused_const_variable\n+\t\t   ? OPT_Wunused_const_variable_\n \t\t   : OPT_Wunused_variable),\n \t\t\"%qD defined but not used\", decl);\n }"}, {"sha": "490df938bd803bc69c3152c9d2cb7bedc75013bf", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4246c8da675115145c206b475b2a224269bfd228/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4246c8da675115145c206b475b2a224269bfd228/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=4246c8da675115145c206b475b2a224269bfd228", "patch": "@@ -303,7 +303,7 @@ Objective-C and Objective-C++ Dialects}.\n -Wunsuffixed-float-constants  -Wunused  -Wunused-function @gol\n -Wunused-label  -Wunused-local-typedefs -Wunused-parameter @gol\n -Wno-unused-result -Wunused-value @gol -Wunused-variable @gol\n--Wunused-const-variable @gol\n+-Wunused-const-variable -Wunused-const-variable=@var{n} @gol\n -Wunused-but-set-parameter -Wunused-but-set-variable @gol\n -Wuseless-cast -Wvariadic-macros -Wvector-operation-performance @gol\n -Wvla -Wvolatile-register-var  -Wwrite-strings @gol\n@@ -4231,23 +4231,39 @@ its return value. The default is @option{-Wunused-result}.\n @opindex Wunused-variable\n @opindex Wno-unused-variable\n Warn whenever a local or static variable is unused aside from its\n-declaration. This option implies @option{-Wunused-const-variable} for C,\n+declaration. This option implies @option{-Wunused-const-variable=1} for C,\n but not for C++. This warning is enabled by @option{-Wall}.\n \n To suppress this warning use the @code{unused} attribute\n (@pxref{Variable Attributes}).\n \n @item -Wunused-const-variable\n+@itemx -Wunused-const-variable=@var{n}\n @opindex Wunused-const-variable\n @opindex Wno-unused-const-variable\n Warn whenever a constant static variable is unused aside from its declaration.\n-This warning is enabled by @option{-Wunused-variable} for C, but not for C++.\n-In C++ this is normally not an error since const variables take the place of\n-@code{#define}s in C++.\n+@option{-Wunused-const-variable=1} is enabled by @option{-Wunused-variable}\n+for C, but not for C++. In C this declares variable storage, but in C++ this\n+is not an error since const variables take the place of @code{#define}s.\n \n To suppress this warning use the @code{unused} attribute\n (@pxref{Variable Attributes}).\n \n+@table @gcctabopt\n+@item -Wunused-const-variable=1\n+This is the warning level that is enabled by @option{-Wunused-variable} for\n+C.  It warns only about unused static const variables defined in the main\n+compilation unit, but not about static const variables declared in any\n+header included.\n+\n+@item -Wunused-const-variable=2\n+This warning level also warns for unused constant static variables in\n+headers (excluding system headers).  This is the warning level of\n+@option{-Wunused-const-variable} and must be explicitly requested since\n+in C++ this isn't an error and in C it might be harder to clean up all\n+headers included.\n+@end table\n+\n @item -Wunused-value\n @opindex Wunused-value\n @opindex Wno-unused-value"}, {"sha": "1868873a914cc60734a6570c8712988e8fe9d5d5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4246c8da675115145c206b475b2a224269bfd228/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4246c8da675115145c206b475b2a224269bfd228/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4246c8da675115145c206b475b2a224269bfd228", "patch": "@@ -1,3 +1,8 @@\n+2016-02-20  Mark Wielaard  <mjw@redhat.com>\n+\n+\tPR c/28901\n+\t* gcc.dg/unused-variable-3.c: New test.\n+\n 2016-02-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/69888"}, {"sha": "6aca95813e17ac7a22be36882d2deaac5d5b07fc", "filename": "gcc/testsuite/gcc.dg/unused-variable-3.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4246c8da675115145c206b475b2a224269bfd228/gcc%2Ftestsuite%2Fgcc.dg%2Funused-variable-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4246c8da675115145c206b475b2a224269bfd228/gcc%2Ftestsuite%2Fgcc.dg%2Funused-variable-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funused-variable-3.c?ref=4246c8da675115145c206b475b2a224269bfd228", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wunused-variable\" } */\n+\n+static const int cmain = 42;\t/* { dg-warning \"defined but not used\" } */\n+\n+/* Don't warn for unused static consts in headers,\n+   unless -Wunused-const-variable=2.  */\n+#line 1 \"header.h\"\n+static const int cheader = 42;"}]}