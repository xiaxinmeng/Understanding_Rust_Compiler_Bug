{"sha": "2fdb618d66fb9222cf911a366230e74e32678fd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZkYjYxOGQ2NmZiOTIyMmNmOTExYTM2NjIzMGU3NGUzMjY3OGZkOQ==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2010-01-16T14:42:32Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2010-01-16T14:42:32Z"}, "message": "Avoid tr '\\n', for Solaris /usr/bin/tr.\n\ncontrib/\n\t* check_warning_flags.sh: Use \\012 instead of \\n with tr.\n\ngcc/:\n\tPR gcc/42525\n\t* Makefile.in (write_entries_to_file, install-plugin):\n\tUse \\012 instead of \\n with tr.\n\nlibjava/:\n\t* Makefile.am (write_entries_to_file): Use \\012 instead of \\n\n\twith tr.\n\t* scripts/makemake.tcl: Likewise.\n\t* sources.am: Regenerate.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r155963", "tree": {"sha": "448346a4b071523906dbff9bf5bc54e6dec0c70f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/448346a4b071523906dbff9bf5bc54e6dec0c70f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fdb618d66fb9222cf911a366230e74e32678fd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fdb618d66fb9222cf911a366230e74e32678fd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fdb618d66fb9222cf911a366230e74e32678fd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fdb618d66fb9222cf911a366230e74e32678fd9/comments", "author": null, "committer": null, "parents": [{"sha": "636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "46c1cc3170b52204a5c3fce8bf1c4b6236a68213", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fdb618d66fb9222cf911a366230e74e32678fd9/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fdb618d66fb9222cf911a366230e74e32678fd9/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=2fdb618d66fb9222cf911a366230e74e32678fd9", "patch": "@@ -1,3 +1,7 @@\n+2010-01-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* check_warning_flags.sh: Use \\012 instead of \\n with tr.\n+\n 2010-01-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* dg-extract-results.sh: Don't use tail -n."}, {"sha": "d9c5735abf81f039d0e2f01be1bbcff975032f81", "filename": "contrib/check_warning_flags.sh", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fdb618d66fb9222cf911a366230e74e32678fd9/contrib%2Fcheck_warning_flags.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fdb618d66fb9222cf911a366230e74e32678fd9/contrib%2Fcheck_warning_flags.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck_warning_flags.sh?ref=2fdb618d66fb9222cf911a366230e74e32678fd9", "patch": "@@ -3,7 +3,7 @@\n # Check that the warning flags documented in invoke.texi match up\n # with what the compiler accepts.\n #\n-# Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+# Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n # Written by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>.\n #\n # This script is Free Software, and it can be copied, distributed and\n@@ -147,7 +147,7 @@ remove_problematic_help_flags='\n   /-$/d\n   /=/d'\n help_flags=`\n-  $CC --help -v 2>/dev/null | tr ' ' '\\n' |\n+  $CC --help -v 2>/dev/null | tr ' ' '\\012' |\n     sed -n '\n       b a\n       :a"}, {"sha": "f73bb9139fae2d01062d00de96b319ee4741fd20", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fdb618d66fb9222cf911a366230e74e32678fd9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fdb618d66fb9222cf911a366230e74e32678fd9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2fdb618d66fb9222cf911a366230e74e32678fd9", "patch": "@@ -1,3 +1,9 @@\n+2010-01-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\tPR gcc/42525\n+\t* Makefile.in (write_entries_to_file, install-plugin):\n+\tUse \\012 instead of \\n with tr.\n+\n 2010-01-16  Richard Sandiford  <r.sandiford@uk.ibm.com>\n \n \t* configure.ac (HAVE_AS_REF): New C macro."}, {"sha": "d6a57c459e744477cdd59ebb1c37730ae112dd36", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fdb618d66fb9222cf911a366230e74e32678fd9/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fdb618d66fb9222cf911a366230e74e32678fd9/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2fdb618d66fb9222cf911a366230e74e32678fd9", "patch": "@@ -290,7 +290,7 @@ write_entries_to_file = $(shell rm -f $(2) || :) $(shell touch $(2)) \\\n \t     echo $$i; i=`expr $$i + $(write_entries_to_file_split)`; done), \\\n \t  $(shell echo \"$(wordlist $(range), \\\n \t\t\t  $(shell expr $(range) + $(write_entries_to_file_split) - 1), $(1))\" \\\n-\t     | tr ' ' '\\n' >> $(2)))\n+\t     | tr ' ' '\\012' >> $(2)))\n \n # --------\n # UNSORTED\n@@ -4289,7 +4289,7 @@ install-plugin: installdirs lang.install-plugin s-header-vars\n # We keep the directory structure for files in config and .def files. All\n # other files are flattened to a single directory.\n \t$(mkinstalldirs) $(DESTDIR)$(plugin_includedir)\n-\theaders=`echo $(PLUGIN_HEADERS) | tr ' ' '\\n' | sort -u`; \\\n+\theaders=`echo $(PLUGIN_HEADERS) | tr ' ' '\\012' | sort -u`; \\\n \tsrcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`; \\\n \tfor file in $$headers; do \\\n \t  if [ -f $$file ] ; then \\"}, {"sha": "d527c3578ea565c727938589132ae3c0e183adb7", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fdb618d66fb9222cf911a366230e74e32678fd9/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fdb618d66fb9222cf911a366230e74e32678fd9/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=2fdb618d66fb9222cf911a366230e74e32678fd9", "patch": "@@ -1,3 +1,11 @@\n+2010-01-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* Makefile.am (write_entries_to_file): Use \\012 instead of \\n\n+\twith tr.\n+\t* scripts/makemake.tcl: Likewise.\n+\t* sources.am: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\n 2010-01-09  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gnu/gcj/convert/Convert.java (version): Update copyright notice"}, {"sha": "11c60dfe09f357f0d2fdee00032e1bc448583902", "filename": "libjava/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fdb618d66fb9222cf911a366230e74e32678fd9/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fdb618d66fb9222cf911a366230e74e32678fd9/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=2fdb618d66fb9222cf911a366230e74e32678fd9", "patch": "@@ -26,7 +26,7 @@ write_entries_to_file = $(shell rm -f $(2) || :) $(shell touch $(2)) \\\n \t     echo $$i; i=`expr $$i + $(write_entries_to_file_split)`; done), \\\n \t  $(shell echo $(wordlist $(range), \\\n \t\t\t  $(shell expr $(range) + $(write_entries_to_file_split) - 1), $(1)) \\\n-\t     | tr ' ' '\\n' >> $(2)))\n+\t     | tr ' ' '\\012' >> $(2)))\n \n ## ################################################################\n "}, {"sha": "23461147ef26fa09410276b4b1b1fef215ad1292", "filename": "libjava/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fdb618d66fb9222cf911a366230e74e32678fd9/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fdb618d66fb9222cf911a366230e74e32678fd9/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=2fdb618d66fb9222cf911a366230e74e32678fd9", "patch": "@@ -893,7 +893,7 @@ write_entries_to_file = $(shell rm -f $(2) || :) $(shell touch $(2)) \\\n \t     echo $$i; i=`expr $$i + $(write_entries_to_file_split)`; done), \\\n \t  $(shell echo $(wordlist $(range), \\\n \t\t\t  $(shell expr $(range) + $(write_entries_to_file_split) - 1), $(1)) \\\n-\t     | tr ' ' '\\n' >> $(2)))\n+\t     | tr ' ' '\\012' >> $(2)))\n \n \n # This is required by TL_AC_GXX_INCLUDE_DIR.\n@@ -11946,7 +11946,7 @@ java/io.list: $(java_io_source_files)\n \n java/lang.list: $(java_lang_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n-\techo $(srcdir)/classpath/lib/java/lang/*.class | tr ' ' '\\n' | fgrep -v Object.class | fgrep -v Class.class | egrep -v '(Ecos|Posix|Win32)Process' > java/lang.list\n+\techo $(srcdir)/classpath/lib/java/lang/*.class | tr ' ' '\\012' | fgrep -v Object.class | fgrep -v Class.class | egrep -v '(Ecos|Posix|Win32)Process' > java/lang.list\n \n -include java/lang.deps\n "}, {"sha": "6d1eea95a34f32551d4d5112bfe40cb5a03bd758", "filename": "libjava/scripts/makemake.tcl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fdb618d66fb9222cf911a366230e74e32678fd9/libjava%2Fscripts%2Fmakemake.tcl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fdb618d66fb9222cf911a366230e74e32678fd9/libjava%2Fscripts%2Fmakemake.tcl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fscripts%2Fmakemake.tcl?ref=2fdb618d66fb9222cf911a366230e74e32678fd9", "patch": "@@ -357,7 +357,7 @@ proc emit_package_rule_to_list {package package_files_list} {\n     # Object and Class are special cases due to an apparent compiler\n     # bug.  Process is a special case because we don't build all\n     # concrete implementations of Process on all platforms.\n-    set omit \"| tr ' ' '\\\\n' | fgrep -v Object.class | fgrep -v Class.class | egrep -v '\\(Ecos\\|Posix\\|Win32\\)Process' \"\n+    set omit \"| tr ' ' '\\\\012' | fgrep -v Object.class | fgrep -v Class.class | egrep -v '\\(Ecos\\|Posix\\|Win32\\)Process' \"\n   } else {\n     set omit \"\"\n   }"}, {"sha": "1ccc7b91e0f24e9312b11eb74ea89ad8b238ee5f", "filename": "libjava/sources.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fdb618d66fb9222cf911a366230e74e32678fd9/libjava%2Fsources.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fdb618d66fb9222cf911a366230e74e32678fd9/libjava%2Fsources.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fsources.am?ref=2fdb618d66fb9222cf911a366230e74e32678fd9", "patch": "@@ -4722,7 +4722,7 @@ java_lang_header_files = $(filter-out java/lang/Object.h java/lang/Class.h,$(pat\n \n java/lang.list: $(java_lang_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n-\techo $(srcdir)/classpath/lib/java/lang/*.class | tr ' ' '\\n' | fgrep -v Object.class | fgrep -v Class.class | egrep -v '(Ecos|Posix|Win32)Process' > java/lang.list\n+\techo $(srcdir)/classpath/lib/java/lang/*.class | tr ' ' '\\012' | fgrep -v Object.class | fgrep -v Class.class | egrep -v '(Ecos|Posix|Win32)Process' > java/lang.list\n \n -include java/lang.deps\n "}]}