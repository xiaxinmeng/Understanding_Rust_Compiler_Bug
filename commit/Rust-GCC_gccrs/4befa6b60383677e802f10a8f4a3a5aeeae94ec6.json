{"sha": "4befa6b60383677e802f10a8f4a3a5aeeae94ec6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJlZmE2YjYwMzgzNjc3ZTgwMmYxMGE4ZjRhM2E1YWVlYWU5NGVjNg==", "commit": {"author": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1995-12-16T03:10:56Z"}, "committer": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1995-12-16T03:10:56Z"}, "message": "Initial revision\n\nFrom-SVN: r10743", "tree": {"sha": "dab83cc02be233f1876daa9ae0fc2d520140ae3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dab83cc02be233f1876daa9ae0fc2d520140ae3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4befa6b60383677e802f10a8f4a3a5aeeae94ec6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4befa6b60383677e802f10a8f4a3a5aeeae94ec6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4befa6b60383677e802f10a8f4a3a5aeeae94ec6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4befa6b60383677e802f10a8f4a3a5aeeae94ec6/comments", "author": null, "committer": null, "parents": [{"sha": "268bfa44d0a3b887ae7810c86ec4ac0b1b7925f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/268bfa44d0a3b887ae7810c86ec4ac0b1b7925f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/268bfa44d0a3b887ae7810c86ec4ac0b1b7925f0"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "c42a9bf18d516d093c74cd5aad80cf57008729ea", "filename": "gcc/config/m88k/t-dguxbcs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4befa6b60383677e802f10a8f4a3a5aeeae94ec6/gcc%2Fconfig%2Fm88k%2Ft-dguxbcs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4befa6b60383677e802f10a8f4a3a5aeeae94ec6/gcc%2Fconfig%2Fm88k%2Ft-dguxbcs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Ft-dguxbcs?ref=4befa6b60383677e802f10a8f4a3a5aeeae94ec6", "patch": "@@ -0,0 +1,28 @@\n+# Specify how to create the *.asm files\n+\n+MOVE_ASM = moveHI15x.asm moveQI16x.asm moveSI46x.asm moveSI64n.asm \\\n+\t   moveHI48x.asm moveSI45x.asm moveSI47x.asm moveSI96x.asm \\\n+\t   moveDI96x.asm\n+\n+$(MOVE_ASM): $(srcdir)/config/m88k/m88k-move.sh\n+\t$(srcdir)/config/m88k/m88k-move.sh\n+\n+LIB2FUNCS_EXTRA = $(MOVE_ASM)\n+LIBGCC1 = libgcc1.null\n+CROSS_LIBGCC1 = libgcc1.null\n+\n+# In a coff environment, a link script is required for ctors and dtors.\n+m88kdgux.ld: $(srcdir)/config/m88k/dgux.ld\n+\trm -f m88kdgux.ld; cp $(srcdir)/config/m88k/dgux.ld ./m88kdgux.ld\n+\n+# A bcs crtbegin.o is needed since bcs does not  \n+# increment the stack pointer in the init section as elf does \n+bcscrtbegin.o:     crtstuff.c $(GCC_PASSES) $(CONFIG_H) gbl-ctors.h\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) -DCRT_BEGIN -DBCS \\\n+\t-finhibit-size-directive -fno-inline-functions \\\n+\t-g0 -c $(srcdir)/crtstuff.c -o bcscrtbegin.o \n+\n+# Build libgcc.a, crtbegin.o, and crtend.o as bcs objects\n+GCC_FOR_TARGET = PATH=/usr/sde/m88kbcs/usr/bin/:/usr/bin TARGET_BINARY_INTERFACE=m88kbcs ./xgcc -B./ -msvr3 -D_M88KBCS_TARGET -mno-ocs-debug-info\n+\n+T_CFLAGS = -O -D_M88KBCS_TARGET"}]}