{"sha": "ea2d416aac0d9e927f567c09617bd8c417b194a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEyZDQxNmFhYzBkOWU5MjdmNTY3YzA5NjE3YmQ4YzQxN2IxOTRhNQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-02-02T07:33:43Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-02-02T07:33:43Z"}, "message": "flow.c (mark_regs_live_at_end): Follow expand_function_end and replace BLKmode with DECL_RTL's mode.\n\n        * flow.c (mark_regs_live_at_end): Follow expand_function_end and\n        replace BLKmode with DECL_RTL's mode.\n\nFrom-SVN: r31754", "tree": {"sha": "fd5a123e7bd728021810699cea7637b049889253", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd5a123e7bd728021810699cea7637b049889253"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea2d416aac0d9e927f567c09617bd8c417b194a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea2d416aac0d9e927f567c09617bd8c417b194a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea2d416aac0d9e927f567c09617bd8c417b194a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea2d416aac0d9e927f567c09617bd8c417b194a5/comments", "author": null, "committer": null, "parents": [{"sha": "eca1bd08cfd81ef60cb5bf8f88f2500bd712b486", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eca1bd08cfd81ef60cb5bf8f88f2500bd712b486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eca1bd08cfd81ef60cb5bf8f88f2500bd712b486"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "480e69dc1ec8d1b8ccd6a81f51e77ce4f7dda918", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea2d416aac0d9e927f567c09617bd8c417b194a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea2d416aac0d9e927f567c09617bd8c417b194a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea2d416aac0d9e927f567c09617bd8c417b194a5", "patch": "@@ -1,3 +1,8 @@\n+2000-02-01  Richard Henderson  <rth@cygnus.com>\n+\n+\t* flow.c (mark_regs_live_at_end): Follow expand_function_end and\n+\treplace BLKmode with DECL_RTL's mode.\n+\n 2000-02-01  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* frame.c (find_fde): Convert for loop to do-while so compiler\n@@ -206,7 +211,7 @@ Tue Feb  1 00:57:40 2000  Hans-Peter Nilsson  <hp@bitrange.com>\n \n 2000-01-29 Herman A.J. ten Brugge <Haj.Ten.Brugge@net.HCC.nl>\n \n-        * c4x.h (INIT_TARGET_OPTABS): Add all missing local optab entries.\n+\t* c4x.h (INIT_TARGET_OPTABS): Add all missing local optab entries.\n \t* c4x.c: Define the optab rtx values.\n \t(c4x_add_gc_roots): Add the ggc roots for these optab rtx values.\n \t(c4x_emit_libcall): Use new optab rtx values.\n@@ -217,7 +222,7 @@ Tue Feb  1 00:57:40 2000  Hans-Peter Nilsson  <hp@bitrange.com>\n \n 2000-01-29 Herman A.J. ten Brugge <Haj.Ten.Brugge@net.HCC.nl>\n \n-        * c4x.c (c4x_output_ascii): Restrict line length of output when TI\n+\t* c4x.c (c4x_output_ascii): Restrict line length of output when TI\n \tsyntax is used.\n \t(c4x_function_prologue): Use regnames intead of float_reg_names when\n \tTI syntax is used.\n@@ -309,7 +314,7 @@ Fri Jan 28 10:57:58 2000  Jason Eckhardt  <jle@cygnus.com>\n \n 2000-01-27  Richard Henderson  <rth@cygnus.com>\n \n-        * alpha.md (trunctfsf2): New.\n+\t* alpha.md (trunctfsf2): New.\n \n 2000-01-27  Andrew Hobson  <ahobson@eng.mindspring.net>\n "}, {"sha": "865677863edf959352c7acc0f2de9b421afe6ab8", "filename": "gcc/flow.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea2d416aac0d9e927f567c09617bd8c417b194a5/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea2d416aac0d9e927f567c09617bd8c417b194a5/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=ea2d416aac0d9e927f567c09617bd8c417b194a5", "patch": "@@ -2809,7 +2809,7 @@ static void\n mark_regs_live_at_end (set)\n      regset set;\n {\n-  tree type;\n+  tree result, type;\n   int i;\n \n   /* If exiting needs the right stack value, consider the stack pointer\n@@ -2868,22 +2868,22 @@ mark_regs_live_at_end (set)\n \n   /* Mark function return value.  */\n \n-  type = TREE_TYPE (DECL_RESULT (current_function_decl));\n+  result = DECL_RESULT (current_function_decl);\n+  type = TREE_TYPE (result);\n   if (type != void_type_node)\n     {\n       rtx outgoing;\n \n-      if (current_function_returns_struct\n-\t  || current_function_returns_pcc_struct)\n-\ttype = build_pointer_type (type);\n-\n+      /* ??? Share this code with expand_function_end.  */\n #ifdef FUNCTION_OUTGOING_VALUE\n       outgoing = FUNCTION_OUTGOING_VALUE (type, current_function_decl);\n #else\n       outgoing = FUNCTION_VALUE (type, current_function_decl);\n #endif\n+      /* If this is a BLKmode structure being returned in registers,\n+\t then use the mode computed in expand_return.  */\n       if (GET_MODE (outgoing) == BLKmode)\n-\tPUT_MODE (outgoing, DECL_MODE (DECL_RESULT (current_function_decl)));\n+\tPUT_MODE (outgoing, GET_MODE (DECL_RTL (result)));\n \n       if (GET_CODE (outgoing) == REG)\n \tmark_reg (set, outgoing);"}]}