{"sha": "3e08bbcfe8cf565f51869ed0e1f36a56e742d954", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UwOGJiY2ZlOGNmNTY1ZjUxODY5ZWQwZTFmMzZhNTZlNzQyZDk1NA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2008-03-28T13:47:06Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-03-28T13:47:06Z"}, "message": "re PR fortran/35721 (ASSOCIATED returns false when strides confusing)\n\n2008-03-28  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/35721\n        * intrinsics/associated.c (associated): Ignore different\n        stride of pointer vs. target if only one element is referred.\n\n2008-03-28  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/35721\n        * gfortran.dg/associated_target_2.f90: New.\n\nFrom-SVN: r133684", "tree": {"sha": "bc7075222c4580d1b29a61956a7d5b16553ba268", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc7075222c4580d1b29a61956a7d5b16553ba268"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e08bbcfe8cf565f51869ed0e1f36a56e742d954", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e08bbcfe8cf565f51869ed0e1f36a56e742d954", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e08bbcfe8cf565f51869ed0e1f36a56e742d954", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e08bbcfe8cf565f51869ed0e1f36a56e742d954/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "626f4dd8f52c0e85892dc4bd9f7bb2a1c87e2f3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/626f4dd8f52c0e85892dc4bd9f7bb2a1c87e2f3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/626f4dd8f52c0e85892dc4bd9f7bb2a1c87e2f3c"}], "stats": {"total": 60, "additions": 57, "deletions": 3}, "files": [{"sha": "2ac6eb02a205caf2a5ed6ea03373006dd92d7716", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e08bbcfe8cf565f51869ed0e1f36a56e742d954/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e08bbcfe8cf565f51869ed0e1f36a56e742d954/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3e08bbcfe8cf565f51869ed0e1f36a56e742d954", "patch": "@@ -1,3 +1,8 @@\n+2008-03-28  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/35721\n+\t* gfortran.dg/associated_target_2.f90: New.\n+\n 2008-03-28  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/19580"}, {"sha": "b1179bea36031af7d07101df3c3c3cb3306e5c3b", "filename": "gcc/testsuite/gfortran.dg/associated_target_2.f90", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e08bbcfe8cf565f51869ed0e1f36a56e742d954/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociated_target_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e08bbcfe8cf565f51869ed0e1f36a56e742d954/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociated_target_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociated_target_2.f90?ref=3e08bbcfe8cf565f51869ed0e1f36a56e742d954", "patch": "@@ -0,0 +1,41 @@\n+! { dg-do run }\n+!\n+! PR fortran/35721\n+!\n+! ASSOCIATED(ptr, trgt) should return true if\n+! the same storage units (in the same order)\n+! gfortran was returning false if the strips\n+! were different but only one (the same!) element\n+! was present.\n+!\n+! Contributed by Dick Hendrickson\n+!\n+      program try_mg0028\n+      implicit none\n+      real  tda2r(2,3)\n+\n+      call       mg0028(tda2r,  1,  2,  3)\n+\n+      CONTAINS\n+\n+      SUBROUTINE MG0028(TDA2R,nf1,nf2,nf3)\n+      integer        ::  nf1,nf2,nf3\n+      real, target   ::  TDA2R(NF2,NF3)\n+      real, pointer  ::  TLA2L(:,:),TLA2L1(:,:)\n+      logical LL(4)\n+      TLA2L => TDA2R(NF2:NF1:-NF2,NF3:NF1:-NF2)\n+      TLA2L1 => TLA2L\n+      LL(1) = ASSOCIATED(TLA2L)\n+      LL(2) = ASSOCIATED(TLA2L,TLA2L1)\n+      LL(3) = ASSOCIATED(TLA2L,TDA2R)\n+      LL(4) = ASSOCIATED(TLA2L1,TDA2R(2:2,3:1:-2))  !should be true\n+\n+      if (any(LL .neqv. (/ .true., .true., .false., .true./))) then\n+        print *, LL\n+        print *, shape(TLA2L1)\n+        print *, shape(TDA2R(2:2,3:1:-2))\n+        stop\n+      endif\n+\n+      END SUBROUTINE\n+      END PROGRAM"}, {"sha": "57ec570681c17098a89abb99020c451845a142a9", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e08bbcfe8cf565f51869ed0e1f36a56e742d954/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e08bbcfe8cf565f51869ed0e1f36a56e742d954/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=3e08bbcfe8cf565f51869ed0e1f36a56e742d954", "patch": "@@ -1,3 +1,9 @@\n+2008-03-28  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/35721\n+\t* intrinsics/associated.c (associated): Ignore different\n+\tstride of pointer vs. target if only one element is referred.\n+\n 2008-03-26  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \t* io/unix.c (fd_close):  Do not close STDIN."}, {"sha": "dc1da1df6f6657c5e8d29aff13586ece0b7492b6", "filename": "libgfortran/intrinsics/associated.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e08bbcfe8cf565f51869ed0e1f36a56e742d954/libgfortran%2Fintrinsics%2Fassociated.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e08bbcfe8cf565f51869ed0e1f36a56e742d954/libgfortran%2Fintrinsics%2Fassociated.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fassociated.c?ref=3e08bbcfe8cf565f51869ed0e1f36a56e742d954", "patch": "@@ -48,10 +48,12 @@ associated (const gfc_array_void *pointer, const gfc_array_void *target)\n   rank = GFC_DESCRIPTOR_RANK (pointer);\n   for (n = 0; n < rank; n++)\n     {\n-      if (pointer->dim[n].stride != target->dim[n].stride)\n+      long diff;\n+      diff = pointer->dim[n].ubound - pointer->dim[n].lbound;\n+\n+      if (diff != (target->dim[n].ubound - target->dim[n].lbound))\n         return 0;\n-      if ((pointer->dim[n].ubound - pointer->dim[n].lbound)\n-          != (target->dim[n].ubound - target->dim[n].lbound))\n+      if (pointer->dim[n].stride != target->dim[n].stride && diff != 0)\n         return 0;\n       if (pointer->dim[n].ubound < pointer->dim[n].lbound)\n \treturn 0;"}]}