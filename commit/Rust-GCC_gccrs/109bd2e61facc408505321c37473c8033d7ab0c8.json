{"sha": "109bd2e61facc408505321c37473c8033d7ab0c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA5YmQyZTYxZmFjYzQwODUwNTMyMWMzNzQ3M2M4MDMzZDdhYjBjOA==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2015-06-23T02:27:49Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2015-06-23T02:27:49Z"}, "message": "re PR tree-optimization/66449 (ICE: in build2_stat, at tree.c:4376 with -O3)\n\n\n\tPR tree-optimization/66449\n\t* tree-ssa-loop-niter.c (loop_exits_before_overflow): Use\n\tPOINTER_PLUS_EXPR for pointers.\n\n\tgcc/testsuite\n\tPR tree-optimization/66449\n\t* gcc.dg/vect/pr66449.c: New test.\n\nFrom-SVN: r224769", "tree": {"sha": "ffd2829402bdcf622586bb911cac06f9cc617479", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffd2829402bdcf622586bb911cac06f9cc617479"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/109bd2e61facc408505321c37473c8033d7ab0c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/109bd2e61facc408505321c37473c8033d7ab0c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/109bd2e61facc408505321c37473c8033d7ab0c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/109bd2e61facc408505321c37473c8033d7ab0c8/comments", "author": null, "committer": null, "parents": [{"sha": "350911e65183b142018003691fd8d2eee479e175", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/350911e65183b142018003691fd8d2eee479e175", "html_url": "https://github.com/Rust-GCC/gccrs/commit/350911e65183b142018003691fd8d2eee479e175"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "cd7074e5f15a8c2d9d78c1ebf4e53a336d485c4f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109bd2e61facc408505321c37473c8033d7ab0c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109bd2e61facc408505321c37473c8033d7ab0c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=109bd2e61facc408505321c37473c8033d7ab0c8", "patch": "@@ -1,3 +1,9 @@\n+2015-06-23  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR tree-optimization/66449\n+\t* tree-ssa-loop-niter.c (loop_exits_before_overflow): Use\n+\tPOINTER_PLUS_EXPR for pointers.\n+\n 2015-06-23  Alan Modra  <amodra@gmail.com>\n \n \t* rtlanal.c (commutative_operand_precedence): Correct comments."}, {"sha": "d5329af391ce4731629b8e29a33d102960d8d1c8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109bd2e61facc408505321c37473c8033d7ab0c8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109bd2e61facc408505321c37473c8033d7ab0c8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=109bd2e61facc408505321c37473c8033d7ab0c8", "patch": "@@ -1,3 +1,8 @@\n+2015-06-23  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR tree-optimization/66449\n+\t* gcc.dg/vect/pr66449.c: New test.\n+\n 2015-06-22  Pierre-Marie de Rodat  <derodat@adacore.com>\n \n \t* g++.dg/other/dump-ada-spec-5.C: New test."}, {"sha": "986b3fb6b9a41e1ea6172a60a0f2ac7f16252792", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr66449.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109bd2e61facc408505321c37473c8033d7ab0c8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr66449.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109bd2e61facc408505321c37473c8033d7ab0c8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr66449.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr66449.c?ref=109bd2e61facc408505321c37473c8033d7ab0c8", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+void *fn1(void *p1, void *p2, long p3)\n+{\n+  long a = (long)p1, b = (long)p2, c = p3;\n+\n+  while (c)\n+    {\n+      int d = ((int *)b)[0];\n+\n+      c--;\n+      ((char *)a)[0] = d;\n+      a++;\n+    }\n+  return 0;\n+}\n+"}, {"sha": "855d32ceeb01dab8278ca37f55f67dcf92ec1451", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/109bd2e61facc408505321c37473c8033d7ab0c8/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/109bd2e61facc408505321c37473c8033d7ab0c8/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=109bd2e61facc408505321c37473c8033d7ab0c8", "patch": "@@ -3888,7 +3888,12 @@ loop_exits_before_overflow (tree base, tree step,\n \n \t   by proving the reverse conditions are false using loop's initial\n \t   condition.  */\n-\tstepped = fold_build2 (PLUS_EXPR, TREE_TYPE (base), base, step);\n+\tif (POINTER_TYPE_P (TREE_TYPE (base)))\n+\t  code = POINTER_PLUS_EXPR;\n+\telse\n+\t  code = PLUS_EXPR;\n+\n+\tstepped = fold_build2 (code, TREE_TYPE (base), base, step);\n \tif (operand_equal_p (stepped, civ->base, 0))\n \t  {\n \t    if (tree_int_cst_sign_bit (step))"}]}