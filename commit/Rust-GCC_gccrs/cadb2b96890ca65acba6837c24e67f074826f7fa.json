{"sha": "cadb2b96890ca65acba6837c24e67f074826f7fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FkYjJiOTY4OTBjYTY1YWNiYTY4MzdjMjRlNjdmMDc0ODI2ZjdmYQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2014-09-17T20:13:17Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2014-09-17T20:13:17Z"}, "message": "Makefile.in (LIBGCOV_INTERFACE): Add _gcov_dump from ...\n\n\t* Makefile.in (LIBGCOV_INTERFACE): Add _gcov_dump from ...\n\t(LIBGCOV_DRIVER): ... here.\n\t* libgcov-driver.c (gcov_master): New.\n\t(gcov_exit): Remove from master chain.\n\t(__gcov_init): Add to master chain if version compatible.  Don't\n\tclear the version.\n\t* libgcov_interface (__gcov_flust): Call gcov_dump_int.\n\t(gcov_reset_int): Clear master chain, if compatible.\n\t(gcov_dump_int): New internal interface.  Dump master chain, if\n\tcompatible.\n\t(gcov_dump): Alias for gcov_dump_int.\n\t* libgcov.h (struct gcov_root): Add next and prev fields.\n\t(struct gcov_master): New struct.\n\t(__gcov_master): New.\n\t(gcov_dump_int): Declare.\n\nFrom-SVN: r215337", "tree": {"sha": "d63e4fa5645e26ab19e311988498d7daa883d937", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d63e4fa5645e26ab19e311988498d7daa883d937"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cadb2b96890ca65acba6837c24e67f074826f7fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cadb2b96890ca65acba6837c24e67f074826f7fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cadb2b96890ca65acba6837c24e67f074826f7fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cadb2b96890ca65acba6837c24e67f074826f7fa/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c83ee180191ab19daabee8edefa3e8cf4d00b67f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c83ee180191ab19daabee8edefa3e8cf4d00b67f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c83ee180191ab19daabee8edefa3e8cf4d00b67f"}], "stats": {"total": 92, "additions": 79, "deletions": 13}, "files": [{"sha": "6c6e386b96eab473650fc035c8cc31049b6591e6", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cadb2b96890ca65acba6837c24e67f074826f7fa/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cadb2b96890ca65acba6837c24e67f074826f7fa/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=cadb2b96890ca65acba6837c24e67f074826f7fa", "patch": "@@ -1,3 +1,21 @@\n+2014-09-17  Nathan sidwell  <nathan@acm.org>\n+\n+\t* Makefile.in (LIBGCOV_INTERFACE): Add _gcov_dump from ...\n+\t(LIBGCOV_DRIVER): ... here.\n+\t* libgcov-driver.c (gcov_master): New.\n+\t(gcov_exit): Remove from master chain.\n+\t(__gcov_init): Add to master chain if version compatible.  Don't\n+\tclear the version.\n+\t* libgcov_interface (__gcov_flust): Call gcov_dump_int.\n+\t(gcov_reset_int): Clear master chain, if compatible.\n+\t(gcov_dump_int): New internal interface.  Dump master chain, if\n+\tcompatible.\n+\t(gcov_dump): Alias for gcov_dump_int.\n+\t* libgcov.h (struct gcov_root): Add next and prev fields.\n+\t(struct gcov_master): New struct.\n+\t(__gcov_master): New.\n+\t(gcov_dump_int): Declare.\n+\n 2014-09-17  Olivier Hainque  <hainque@adacore.com>\n \n \t* config.host (x86_64-*-mingw*): Add i386/t-cygming to tmake_file"}, {"sha": "de03c47b6d14febcfd2a370e3d2dcc7b1be66e6d", "filename": "libgcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cadb2b96890ca65acba6837c24e67f074826f7fa/libgcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cadb2b96890ca65acba6837c24e67f074826f7fa/libgcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FMakefile.in?ref=cadb2b96890ca65acba6837c24e67f074826f7fa", "patch": "@@ -858,9 +858,10 @@ LIBGCOV_PROFILER = _gcov_interval_profiler _gcov_pow2_profiler\t\t\\\n \t_gcov_one_value_profiler _gcov_indirect_call_profiler\t\t\\\n  \t_gcov_average_profiler _gcov_ior_profiler\t\t\t\\\n \t_gcov_indirect_call_profiler_v2 _gcov_time_profiler\n-LIBGCOV_INTERFACE = _gcov_flush _gcov_fork _gcov_execl _gcov_execlp    \\\n+LIBGCOV_INTERFACE = _gcov_dump _gcov_flush _gcov_fork\t\t\t\\\n+\t_gcov_execl _gcov_execlp\t\t\t\t\t\\\n \t_gcov_execle _gcov_execv _gcov_execvp _gcov_execve _gcov_reset\n-LIBGCOV_DRIVER = _gcov _gcov_dump\n+LIBGCOV_DRIVER = _gcov\n \n libgcov-merge-objects = $(patsubst %,%$(objext),$(LIBGCOV_MERGE))\n libgcov-profiler-objects = $(patsubst %,%$(objext),$(LIBGCOV_PROFILER))"}, {"sha": "7bde5261878a2ccab36e8fb3c65dc9879b4364eb", "filename": "libgcc/libgcov-driver.c", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cadb2b96890ca65acba6837c24e67f074826f7fa/libgcc%2Flibgcov-driver.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cadb2b96890ca65acba6837c24e67f074826f7fa/libgcc%2Flibgcov-driver.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov-driver.c?ref=cadb2b96890ca65acba6837c24e67f074826f7fa", "patch": "@@ -777,13 +777,23 @@ __gcov_dump_one (struct gcov_root *root)\n   root->run_counted = 1;\n }\n \n-/* Per-program/shared-object gcov state.  */\n+/* Per-dynamic-object gcov state.  */\n struct gcov_root __gcov_root;\n \n+/* Exactly one of these will be live in the process image.  */\n+struct gcov_master __gcov_master = \n+  {GCOV_VERSION, 0};\n+\n static void\n gcov_exit (void)\n {\n   __gcov_dump_one (&__gcov_root);\n+  if (__gcov_root.next)\n+    __gcov_root.next->prev = __gcov_root.prev;\n+  if (__gcov_root.prev)\n+    __gcov_root.prev->next = __gcov_root.next;\n+  else\n+    __gcov_master.root = __gcov_root.next;\n }\n \n /* Add a new object file onto the bb chain.  Invoked automatically\n@@ -797,12 +807,21 @@ __gcov_init (struct gcov_info *info)\n   if (gcov_version (info, info->version, 0))\n     {\n       if (!__gcov_root.list)\n-        atexit (gcov_exit);\n+\t{\n+\t  /* Add to master list and at exit function.  */\n+\t  if (gcov_version (NULL, __gcov_master.version, \"<master>\"))\n+\t    {\n+\t      __gcov_root.next = __gcov_master.root;\n+\t      if (__gcov_master.root)\n+\t\t__gcov_master.root->prev = &__gcov_root;\n+\t      __gcov_master.root = &__gcov_root;\n+\t    }\n+\t  atexit (gcov_exit);\n+\t}\n \n       info->next = __gcov_root.list;\n       __gcov_root.list = info;\n     }\n-  info->version = 0;\n }\n #endif /* !IN_GCOV_TOOL */\n #endif /* L_gcov */"}, {"sha": "3e6ec20b99950731cedd4cfd42f15b953d69984d", "filename": "libgcc/libgcov-interface.c", "status": "modified", "additions": 23, "deletions": 7, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cadb2b96890ca65acba6837c24e67f074826f7fa/libgcc%2Flibgcov-interface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cadb2b96890ca65acba6837c24e67f074826f7fa/libgcc%2Flibgcov-interface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov-interface.c?ref=cadb2b96890ca65acba6837c24e67f074826f7fa", "patch": "@@ -85,7 +85,7 @@ __gcov_flush (void)\n   init_mx_once ();\n   __gthread_mutex_lock (&__gcov_flush_mx);\n \n-  __gcov_dump_one (&__gcov_root);\n+  __gcov_dump_int ();\n   __gcov_reset_int ();\n \n   __gthread_mutex_unlock (&__gcov_flush_mx);\n@@ -132,8 +132,16 @@ gcov_clear (const struct gcov_info *list)\n void\n __gcov_reset_int (void)\n {\n-  gcov_clear (__gcov_root.list);\n-  __gcov_root.dumped = 0;\n+  struct gcov_root *root;\n+\n+  /* If we're compatible with the master, iterate over everything,\n+     otherise just do us.  */\n+  for (root = __gcov_master.version == GCOV_VERSION\n+\t ? __gcov_master.root : &__gcov_root; root; root = root->next)\n+    {\n+      gcov_clear (root->list);\n+      root->dumped = 0;\n+    }\n }\n \n ALIAS_void_fn (__gcov_reset_int, __gcov_reset);\n@@ -145,11 +153,19 @@ ALIAS_void_fn (__gcov_reset_int, __gcov_reset);\n    so far, in order to collect profile in region of interest.  */\n \n void\n-__gcov_dump (void)\n+__gcov_dump_int (void)\n {\n-  __gcov_dump_one (&__gcov_root);\n+  struct gcov_root *root;\n+\n+  /* If we're compatible with the master, iterate over everything,\n+     otherise just do us.  */\n+  for (root = __gcov_master.version == GCOV_VERSION\n+\t ? __gcov_master.root : &__gcov_root; root; root = root->next)\n+    __gcov_dump_one (root);\n }\n \n+ALIAS_void_fn (__gcov_dump_int, __gcov_dump);\n+\n #endif /* L_gcov_dump */\n \n #ifdef L_gcov_fork\n@@ -169,8 +185,8 @@ __gcov_fork (void)\n #endif\n \n #ifdef L_gcov_execl\n-/* A wrapper for the execl function.  Flushes the accumulated profiling data, so\n-   that they are not lost.  */\n+/* A wrapper for the execl function.  Flushes the accumulated\n+   profiling data, so that they are not lost.  */\n \n int\n __gcov_execl (const char *path, char *arg, ...)"}, {"sha": "3816b6a7090ec62c430812619f1e994cb009910d", "filename": "libgcc/libgcov.h", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cadb2b96890ca65acba6837c24e67f074826f7fa/libgcc%2Flibgcov.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cadb2b96890ca65acba6837c24e67f074826f7fa/libgcc%2Flibgcov.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov.h?ref=cadb2b96890ca65acba6837c24e67f074826f7fa", "patch": "@@ -212,10 +212,21 @@ struct gcov_root\n   struct gcov_info *list;\n   unsigned dumped : 1;\t/* counts have been dumped.  */\n   unsigned run_counted : 1;  /* run has been accounted for.  */\n+  struct gcov_root *next;\n+  struct gcov_root *prev;\n };\n \n extern struct gcov_root __gcov_root ATTRIBUTE_HIDDEN;\n \n+struct gcov_master\n+{\n+  gcov_unsigned_t version;\n+  struct gcov_root *root;\n+};\n+  \n+/* Exactly one of these will be active in the process.  */\n+extern struct gcov_master __gcov_master;\n+\n /* Dump a set of gcov objects.  */\n extern void __gcov_dump_one (struct gcov_root *) ATTRIBUTE_HIDDEN;\n \n@@ -230,8 +241,9 @@ extern void __gcov_flush (void) ATTRIBUTE_HIDDEN;\n extern void __gcov_reset (void);\n extern void __gcov_reset_int (void) ATTRIBUTE_HIDDEN;\n \n-/* Function to enable early write of profile information so far.  */\n+/* User function to enable early write of profile information so far.  */\n extern void __gcov_dump (void);\n+extern void __gcov_dump_int (void) ATTRIBUTE_HIDDEN;\n \n /* The merge function that just sums the counters.  */\n extern void __gcov_merge_add (gcov_type *, unsigned) ATTRIBUTE_HIDDEN;"}]}