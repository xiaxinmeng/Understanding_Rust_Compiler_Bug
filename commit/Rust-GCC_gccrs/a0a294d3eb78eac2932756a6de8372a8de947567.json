{"sha": "a0a294d3eb78eac2932756a6de8372a8de947567", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBhMjk0ZDNlYjc4ZWFjMjkzMjc1NmE2ZGU4MzcyYThkZTk0NzU2Nw==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-06-24T08:25:23Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-15T09:39:12Z"}, "message": "[Ada] Cleanup defensive guards for Null_Exclusion_Present\n\ngcc/ada/\n\n\t* sem_ch3.adb (Process_Subtype): Combine guards for\n\tNull_Exclusion_Present in May_Have_Null_Exclusion; use this\n\tcombined guard when checking AI-231.", "tree": {"sha": "4d80fb32cb1ec7244ec9ed59af9c49f0d4e81288", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d80fb32cb1ec7244ec9ed59af9c49f0d4e81288"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0a294d3eb78eac2932756a6de8372a8de947567", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0a294d3eb78eac2932756a6de8372a8de947567", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0a294d3eb78eac2932756a6de8372a8de947567", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0a294d3eb78eac2932756a6de8372a8de947567/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f366ea4dbe44407ad3f6af2a4a23c9fb007aea3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f366ea4dbe44407ad3f6af2a4a23c9fb007aea3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f366ea4dbe44407ad3f6af2a4a23c9fb007aea3"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "cce8d37083b7240d11289d6502953d0b497a9387", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0a294d3eb78eac2932756a6de8372a8de947567/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0a294d3eb78eac2932756a6de8372a8de947567/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=a0a294d3eb78eac2932756a6de8372a8de947567", "patch": "@@ -21541,21 +21541,12 @@ package body Sem_Ch3 is\n          Check_Incomplete (S);\n          P := Parent (S);\n \n-         --  Ada 2005 (AI-231): Static check\n-\n-         if Ada_Version >= Ada_2005\n-           and then Present (P)\n-           and then Null_Exclusion_Present (P)\n-           and then Nkind (P) /= N_Access_To_Object_Definition\n-           and then not Is_Access_Type (Entity (S))\n-         then\n-            Error_Msg_N (\"`NOT NULL` only allowed for an access type\", S);\n-         end if;\n-\n          --  The following mirroring of assertion in Null_Exclusion_Present is\n          --  ugly, can't we have a range, a static predicate or even a flag???\n \n          May_Have_Null_Exclusion :=\n+           Present (P)\n+             and then\n            Nkind (P) in N_Access_Definition\n                       | N_Access_Function_Definition\n                       | N_Access_Procedure_Definition\n@@ -21571,6 +21562,17 @@ package body Sem_Ch3 is\n                       | N_Parameter_Specification\n                       | N_Subtype_Declaration;\n \n+         --  Ada 2005 (AI-231): Static check\n+\n+         if Ada_Version >= Ada_2005\n+           and then May_Have_Null_Exclusion\n+           and then Null_Exclusion_Present (P)\n+           and then Nkind (P) /= N_Access_To_Object_Definition\n+           and then not Is_Access_Type (Entity (S))\n+         then\n+            Error_Msg_N (\"`NOT NULL` only allowed for an access type\", S);\n+         end if;\n+\n          --  Create an Itype that is a duplicate of Entity (S) but with the\n          --  null-exclusion attribute.\n "}]}