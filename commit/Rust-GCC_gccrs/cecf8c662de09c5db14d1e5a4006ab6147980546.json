{"sha": "cecf8c662de09c5db14d1e5a4006ab6147980546", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2VjZjhjNjYyZGUwOWM1ZGIxNGQxZTVhNDAwNmFiNjE0Nzk4MDU0Ng==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2021-01-06T11:05:35Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2021-01-06T11:05:35Z"}, "message": "robustify vxworks glimits.h overriding\n\nThe glimits.h overriding used in gcc/config/t-vxworks was fragile: the\nintermediate file would already be there in a rebuild, and so the\nadjustments would not be made, so the generated limits.h would miss\nthem, causing limits-width-[12] tests to fail on that target.\n\nWhile changing it, I also replaced the modern $(cmd) shell syntax with\nthe more portable `cmd` construct.\n\n\nfor  gcc/ChangeLog\n\n\t* Makefile.in (T_GLIMITS_H): New.\n\t(stmp-int-hdrs): Depend on it, use it.\n\t* config/t-vxworks (T_GLIMITS_H): Override it.\n\t(vxw-glimits.h): New.", "tree": {"sha": "4c484c209d5a7041e0086034aa366821b500225a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c484c209d5a7041e0086034aa366821b500225a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cecf8c662de09c5db14d1e5a4006ab6147980546", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cecf8c662de09c5db14d1e5a4006ab6147980546", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cecf8c662de09c5db14d1e5a4006ab6147980546", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cecf8c662de09c5db14d1e5a4006ab6147980546/comments", "author": null, "committer": null, "parents": [{"sha": "c9ee9c1e3553247c776f33eb0fe0aadee094a192", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9ee9c1e3553247c776f33eb0fe0aadee094a192", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9ee9c1e3553247c776f33eb0fe0aadee094a192"}], "stats": {"total": 42, "additions": 16, "deletions": 26}, "files": [{"sha": "23e7f6ca9ea808d9dedba4774b25b2c98080ea55", "filename": "gcc/Makefile.in", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cecf8c662de09c5db14d1e5a4006ab6147980546/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cecf8c662de09c5db14d1e5a4006ab6147980546/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=cecf8c662de09c5db14d1e5a4006ab6147980546", "patch": "@@ -450,6 +450,9 @@ USER_H = $(srcdir)/ginclude/float.h \\\n USER_H_INC_NEXT_PRE = @user_headers_inc_next_pre@\n USER_H_INC_NEXT_POST = @user_headers_inc_next_post@\n \n+# Enable target overriding of this fragment, as in config/t-vxworks.\n+T_GLIMITS_H = $(srcdir)/glimits.h\n+\n # The GCC to use for compiling crt*.o.\n # Usually the one we just built.\n # Don't use this as a dependency--use $(GCC_PASSES).\n@@ -3076,7 +3079,7 @@ gcov-tool$(exeext): $(GCOV_TOOL_OBJS) $(LIBDEPS)\n # be rebuilt.\n \n # Build the include directories.\n-stmp-int-hdrs: $(STMP_FIXINC) $(USER_H) fixinc_list\n+stmp-int-hdrs: $(STMP_FIXINC) $(T_GLIMITS_H) $(USER_H) fixinc_list\n # Copy in the headers provided with gcc.\n #\n # The sed command gets just the last file name component;\n@@ -3130,9 +3133,9 @@ stmp-int-hdrs: $(STMP_FIXINC) $(USER_H) fixinc_list\n \t  multi_dir=`echo $${ml} | sed -e 's/^[^;]*;//'`; \\\n \t  fix_dir=include-fixed$${multi_dir}; \\\n \t  if $(LIMITS_H_TEST) ; then \\\n-\t    cat $(srcdir)/limitx.h $(srcdir)/glimits.h $(srcdir)/limity.h > tmp-xlimits.h; \\\n+\t    cat $(srcdir)/limitx.h $(T_GLIMITS_H) $(srcdir)/limity.h > tmp-xlimits.h; \\\n \t  else \\\n-\t    cat $(srcdir)/glimits.h > tmp-xlimits.h; \\\n+\t    cat $(T_GLIMITS_H) > tmp-xlimits.h; \\\n \t  fi; \\\n \t  $(mkinstalldirs) $${fix_dir}; \\\n \t  chmod a+rx $${fix_dir} || true; \\"}, {"sha": "5a06ebe1b870167aace99c448c63944e4651bf29", "filename": "gcc/config/t-vxworks", "status": "modified", "additions": 10, "deletions": 23, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cecf8c662de09c5db14d1e5a4006ab6147980546/gcc%2Fconfig%2Ft-vxworks", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cecf8c662de09c5db14d1e5a4006ab6147980546/gcc%2Fconfig%2Ft-vxworks", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-vxworks?ref=cecf8c662de09c5db14d1e5a4006ab6147980546", "patch": "@@ -43,29 +43,16 @@ $(INSTALL_HEADERS_DIR): install-stdint.h\n LIMITS_H_TEST = true\n STMP_FIXINC = stmp-fixinc\n \n-# VxWorks system environments have been GCC based for a long time and we need\n-# to make sure that our files and the system ones use distinct macro names to\n-# protect against recursive inclusions.  We achieve this by temporarily\n-# substituting the headers used by stmp-int-headers with alternative versions\n-# where we add some version indication in the inclusion-protection macro\n+# VxWorks system environments have been GCC based for a long time and\n+# we need to make sure that our files and the system ones use distinct\n+# macro names to protect against recursive inclusions.  We achieve\n+# this by modifying the GLIMITS_H fragment that goes into limits.h\n+# with some version indication in the inclusion-protection macro\n # names.\n \n-# Before the standard stmp-int-headers operations take place, arrange to\n-# copy the current version of the relevant header files locally, generate\n-# the alternate version and replace the original version with ours:\n+T_GLIMITS_H = vxw-glimits.h\n \n-stmp-int-hdrs: subst-glimits.h\n-\n-subst-%.h:\n-\tcp -p $(srcdir)/$*.h orig-$*.h\n-\tID=$$(echo $(BASEVER_c) | sed -e 's/\\./_/g'); \\\n-\tsed -e \"s/_LIMITS_H__/_LIMITS_H__$${ID}_/\" < $(srcdir)/$*.h > $@\n-\tcp $@ $(srcdir)/$*.h\n-\n-# Then arrange to restore the original versions after the standard\n-# operations have taken place:\n-\n-INSTALL_HEADERS += restore-glimits.h\n-\n-restore-glimits.h: stmp-int-hdrs\n-\tcp -p orig-glimits.h $(srcdir)/glimits.h\n+vxw-glimits.h: $(srcdir)/glimits.h\n+\tID=`echo $(BASEVER_c) | sed -e 's/\\./_/g'` && \\\n+\tsed -e \"s/_LIMITS_H__/_LIMITS_H__$${ID}_/\" < $(srcdir)/glimits.h > $@T\n+\tmv $@T $@"}]}