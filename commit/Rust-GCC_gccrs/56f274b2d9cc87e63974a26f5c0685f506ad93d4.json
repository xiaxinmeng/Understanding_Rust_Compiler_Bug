{"sha": "56f274b2d9cc87e63974a26f5c0685f506ad93d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZmMjc0YjJkOWNjODdlNjM5NzRhMjZmNWMwNjg1ZjUwNmFkOTNkNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-10-29T11:37:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-10-29T11:37:18Z"}, "message": "Makefile.am (CXXFLAGS, LDFLAGS): Filter out -fsanitize=address.\n\n\t* Makefile.am (CXXFLAGS, LDFLAGS): Filter out -fsanitize=address.\n\t(libiberty_normal, libiberty_noasan, libiberty_pic, libiberty_dep):\n\tNew variables.\n\t(libiberty): Set to -Wc, followed by the first existing noasan/,\n\tpic/ or . libiberty.a.\n\t(libcc1plugin_la_DEPENDENCIES, libcc1plugin_la_LINK,\n\tlibcc1_la_DEPENDENCIES, libcc1_la_LINK, LTLDFLAGS): New variables.\n\t* Makefile.in: Regenerated.\n\nFrom-SVN: r216832", "tree": {"sha": "6c7aa8f0b6b1fbc2fc8d9343dc5033d1ac6be855", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c7aa8f0b6b1fbc2fc8d9343dc5033d1ac6be855"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56f274b2d9cc87e63974a26f5c0685f506ad93d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56f274b2d9cc87e63974a26f5c0685f506ad93d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56f274b2d9cc87e63974a26f5c0685f506ad93d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56f274b2d9cc87e63974a26f5c0685f506ad93d4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a3cdf7c0cadca64ff0efa9c56ff1ed50fee70575", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3cdf7c0cadca64ff0efa9c56ff1ed50fee70575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3cdf7c0cadca64ff0efa9c56ff1ed50fee70575"}], "stats": {"total": 65, "additions": 54, "deletions": 11}, "files": [{"sha": "f059b29bc8b100186e9a41518d32c4f91a03867d", "filename": "libcc1/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56f274b2d9cc87e63974a26f5c0685f506ad93d4/libcc1%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56f274b2d9cc87e63974a26f5c0685f506ad93d4/libcc1%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FChangeLog?ref=56f274b2d9cc87e63974a26f5c0685f506ad93d4", "patch": "@@ -1,3 +1,14 @@\n+2014-10-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* Makefile.am (CXXFLAGS, LDFLAGS): Filter out -fsanitize=address.\n+\t(libiberty_normal, libiberty_noasan, libiberty_pic, libiberty_dep):\n+\tNew variables.\n+\t(libiberty): Set to -Wc, followed by the first existing noasan/,\n+\tpic/ or . libiberty.a.\n+\t(libcc1plugin_la_DEPENDENCIES, libcc1plugin_la_LINK,\n+\tlibcc1_la_DEPENDENCIES, libcc1_la_LINK, LTLDFLAGS): New variables.\n+\t* Makefile.in: Regenerated.\n+\n 2014-10-27  Phil Muldoon  <pmuldoon@redhat.com>\n \t    Jan Kratochvil  <jan.kratochvil@redhat.com>\n \t    Tom Tromey  <tromey@redhat.com>"}, {"sha": "899a7df43f660348e1c21731ccc9f3e13992659c", "filename": "libcc1/Makefile.am", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56f274b2d9cc87e63974a26f5c0685f506ad93d4/libcc1%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56f274b2d9cc87e63974a26f5c0685f506ad93d4/libcc1%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FMakefile.am?ref=56f274b2d9cc87e63974a26f5c0685f506ad93d4", "patch": "@@ -24,8 +24,17 @@ AM_CPPFLAGS = -I $(srcdir)/../include -I $(srcdir)/../libgcc \\\n \t-I $(srcdir)/../libcpp/include\n WERROR_FLAG = -Werror\n AM_CXXFLAGS = $(WARN_FLAGS) $(WERROR_FLAG) $(visibility)\n-libiberty = ../libiberty/pic/libiberty.a\n-\n+override CXXFLAGS := $(filter-out -fsanitize=address,$(CXXFLAGS))\n+override LDFLAGS := $(filter-out -fsanitize=address,$(LDFLAGS))\n+# Can be simplified when libiberty becomes a normal convenience library.\n+libiberty_normal = ../libiberty/libiberty.a\n+libiberty_noasan = ../libiberty/noasan/libiberty.a\n+libiberty_pic = ../libiberty/pic/libiberty.a\n+Wc=-Wc,\n+libiberty = $(if $(wildcard $(libiberty_noasan)),$(Wc)$(libiberty_noasan), \\\n+\t    $(if $(wildcard $(libiberty_pic)),$(Wc)$(libiberty_pic), \\\n+\t    $(Wc)$(libiberty_normal)))\n+libiberty_dep = $(patsubst $(Wc)%,%,$(libiberty))\n \n plugindir = $(libdir)/gcc/$(target_noncanonical)/$(gcc_version)/plugin\n cc1libdir = $(libdir)/$(libsuffix)\n@@ -49,7 +58,16 @@ shared_source = callbacks.cc callbacks.hh connection.cc connection.hh \\\n libcc1plugin_la_LDFLAGS = -module -export-symbols $(srcdir)/libcc1plugin.sym\n libcc1plugin_la_SOURCES = plugin.cc $(shared_source)\n libcc1plugin_la_LIBADD = $(libiberty)\n+libcc1plugin_la_DEPENDENCIES = $(libiberty_dep)\n+libcc1plugin_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n+\t$(CXXFLAGS) $(libcc1plugin_la_LDFLAGS) $(LTLDFLAGS) -o $@\n \n+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n libcc1_la_LDFLAGS = -module -export-symbols $(srcdir)/libcc1.sym\n libcc1_la_SOURCES = findcomp.cc libcc1.cc names.cc names.hh $(shared_source)\n libcc1_la_LIBADD = $(libiberty)\n+libcc1_la_DEPENDENCIES = $(libiberty_dep)\n+libcc1_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n+\t$(CXXFLAGS) $(libcc1_la_LDFLAGS) $(LTLDFLAGS) -o $@"}, {"sha": "9e5b67fe6c5ea81030aca6dc562f5734409f2c3b", "filename": "libcc1/Makefile.in", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56f274b2d9cc87e63974a26f5c0685f506ad93d4/libcc1%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56f274b2d9cc87e63974a26f5c0685f506ad93d4/libcc1%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FMakefile.in?ref=56f274b2d9cc87e63974a26f5c0685f506ad93d4", "patch": "@@ -81,20 +81,12 @@ am__base_list = \\\n   sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n am__installdirs = \"$(DESTDIR)$(cc1libdir)\" \"$(DESTDIR)$(plugindir)\"\n LTLIBRARIES = $(cc1lib_LTLIBRARIES) $(plugin_LTLIBRARIES)\n-libcc1_la_DEPENDENCIES = $(libiberty)\n am__objects_1 = callbacks.lo connection.lo marshall.lo\n am_libcc1_la_OBJECTS = findcomp.lo libcc1.lo names.lo $(am__objects_1)\n libcc1_la_OBJECTS = $(am_libcc1_la_OBJECTS)\n-libcc1_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\\n-\t$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n-\t$(CXXFLAGS) $(libcc1_la_LDFLAGS) $(LDFLAGS) -o $@\n @ENABLE_PLUGIN_TRUE@am_libcc1_la_rpath = -rpath $(cc1libdir)\n-libcc1plugin_la_DEPENDENCIES = $(libiberty)\n am_libcc1plugin_la_OBJECTS = plugin.lo $(am__objects_1)\n libcc1plugin_la_OBJECTS = $(am_libcc1plugin_la_OBJECTS)\n-libcc1plugin_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\\n-\t$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n-\t$(CXXFLAGS) $(libcc1plugin_la_LDFLAGS) $(LDFLAGS) -o $@\n @ENABLE_PLUGIN_TRUE@am_libcc1plugin_la_rpath = -rpath $(plugindir)\n DEFAULT_INCLUDES = -I.@am__isrc@\n depcomp = $(SHELL) $(top_srcdir)/../depcomp\n@@ -259,7 +251,16 @@ AM_CPPFLAGS = -I $(srcdir)/../include -I $(srcdir)/../libgcc \\\n \n WERROR_FLAG = -Werror\n AM_CXXFLAGS = $(WARN_FLAGS) $(WERROR_FLAG) $(visibility)\n-libiberty = ../libiberty/pic/libiberty.a\n+# Can be simplified when libiberty becomes a normal convenience library.\n+libiberty_normal = ../libiberty/libiberty.a\n+libiberty_noasan = ../libiberty/noasan/libiberty.a\n+libiberty_pic = ../libiberty/pic/libiberty.a\n+Wc = -Wc,\n+libiberty = $(if $(wildcard $(libiberty_noasan)),$(Wc)$(libiberty_noasan), \\\n+\t    $(if $(wildcard $(libiberty_pic)),$(Wc)$(libiberty_pic), \\\n+\t    $(Wc)$(libiberty_normal)))\n+\n+libiberty_dep = $(patsubst $(Wc)%,%,$(libiberty))\n plugindir = $(libdir)/gcc/$(target_noncanonical)/$(gcc_version)/plugin\n cc1libdir = $(libdir)/$(libsuffix)\n @ENABLE_PLUGIN_TRUE@plugin_LTLIBRARIES = libcc1plugin.la\n@@ -271,9 +272,20 @@ shared_source = callbacks.cc callbacks.hh connection.cc connection.hh \\\n libcc1plugin_la_LDFLAGS = -module -export-symbols $(srcdir)/libcc1plugin.sym\n libcc1plugin_la_SOURCES = plugin.cc $(shared_source)\n libcc1plugin_la_LIBADD = $(libiberty)\n+libcc1plugin_la_DEPENDENCIES = $(libiberty_dep)\n+libcc1plugin_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n+\t$(CXXFLAGS) $(libcc1plugin_la_LDFLAGS) $(LTLDFLAGS) -o $@\n+\n+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n libcc1_la_LDFLAGS = -module -export-symbols $(srcdir)/libcc1.sym\n libcc1_la_SOURCES = findcomp.cc libcc1.cc names.cc names.hh $(shared_source)\n libcc1_la_LIBADD = $(libiberty)\n+libcc1_la_DEPENDENCIES = $(libiberty_dep)\n+libcc1_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n+\t$(CXXFLAGS) $(libcc1_la_LDFLAGS) $(LTLDFLAGS) -o $@\n+\n all: $(BUILT_SOURCES) cc1plugin-config.h\n \t$(MAKE) $(AM_MAKEFLAGS) all-am\n \n@@ -619,6 +631,8 @@ uninstall-am: uninstall-cc1libLTLIBRARIES uninstall-pluginLTLIBRARIES\n \tpdf pdf-am ps ps-am tags uninstall uninstall-am \\\n \tuninstall-cc1libLTLIBRARIES uninstall-pluginLTLIBRARIES\n \n+override CXXFLAGS := $(filter-out -fsanitize=address,$(CXXFLAGS))\n+override LDFLAGS := $(filter-out -fsanitize=address,$(LDFLAGS))\n \n # Put this in a header so we don't run sed for each compilation.  This\n # is also simpler to debug as one can easily see the constant."}]}