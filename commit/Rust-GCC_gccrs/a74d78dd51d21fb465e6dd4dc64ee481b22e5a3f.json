{"sha": "a74d78dd51d21fb465e6dd4dc64ee481b22e5a3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc0ZDc4ZGQ1MWQyMWZiNDY1ZTZkZDRkYzY0ZWU0ODFiMjJlNWEzZg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-11-27T10:13:07Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-11-27T10:13:07Z"}, "message": "fini.c: Rename variable `spaces' to `xspaces' to avoid conflicting with function...\n\n        * fini.c: Rename variable `spaces' to `xspaces' to avoid\n        conflicting with function `spaces' from libiberty.\n        * g77spec.c: Don't prototype libiberty functions.\n        * malloc.c: Likewise.\n\nFrom-SVN: r23933", "tree": {"sha": "4101a17698912c5bba672c0ea2cef0cccfe0fb9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4101a17698912c5bba672c0ea2cef0cccfe0fb9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a74d78dd51d21fb465e6dd4dc64ee481b22e5a3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a74d78dd51d21fb465e6dd4dc64ee481b22e5a3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a74d78dd51d21fb465e6dd4dc64ee481b22e5a3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a74d78dd51d21fb465e6dd4dc64ee481b22e5a3f/comments", "author": null, "committer": null, "parents": [{"sha": "9d483bc4790a0ff069ce5c9ac663a22a29d14bf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d483bc4790a0ff069ce5c9ac663a22a29d14bf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d483bc4790a0ff069ce5c9ac663a22a29d14bf3"}], "stats": {"total": 48, "additions": 25, "deletions": 23}, "files": [{"sha": "624de916e4782fcab8adec399362fe870ee68f6e", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a74d78dd51d21fb465e6dd4dc64ee481b22e5a3f/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a74d78dd51d21fb465e6dd4dc64ee481b22e5a3f/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=a74d78dd51d21fb465e6dd4dc64ee481b22e5a3f", "patch": "@@ -1,3 +1,11 @@\n+Fri Nov 27 13:10:32 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* fini.c: Rename variable `spaces' to `xspaces' to avoid\n+\tconflicting with function `spaces' from libiberty.\n+\n+\t* g77spec.c: Don't prototype libiberty functions.\n+\t* malloc.c: Likewise.\n+\n 1998-11-20  Dave Love  <d.love@dl.ac.uk>\n \n \t* g77.texi: Assorted minor changes."}, {"sha": "a51000bba7d39b945569a6f199bc922a48b1dae0", "filename": "gcc/f/fini.c", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a74d78dd51d21fb465e6dd4dc64ee481b22e5a3f/gcc%2Ff%2Ffini.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a74d78dd51d21fb465e6dd4dc64ee481b22e5a3f/gcc%2Ff%2Ffini.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ffini.c?ref=a74d78dd51d21fb465e6dd4dc64ee481b22e5a3f", "patch": "@@ -62,7 +62,7 @@ static FILE *out;\n static char prefix[32];\n static char postfix[32];\n static char storage[32];\n-static char *spaces[]\n+static char *xspaces[]\n =\n {\n   \"\",\t\t\t\t/* 0 */\n@@ -636,7 +636,7 @@ testname (bool nested, int indent, name first, name last)\n   int numhalf;\n \n   assert (!nested || indent >= 2);\n-  assert (((size_t) indent) + 4 < ARRAY_SIZE (spaces));\n+  assert (((size_t) indent) + 4 < ARRAY_SIZE (xspaces));\n \n   num = 0;\n   numhalf = 0;\n@@ -654,30 +654,30 @@ testname (bool nested, int indent, name first, name last)\n \t     \"\\\n %s{\\n\\\n \",\n-\t     spaces[indent - 2]);\n+\t     xspaces[indent - 2]);\n \n   fprintf (out,\n \t   \"\\\n %sif ((c = ffesrc_strcmp_2c (ffe_case_match (), p, \\\"%s\\\", \\\"%s\\\", \\\"%s\\\")) == 0)\\n\\\n %sreturn %s%s%s;\\n\\\n \",\n-\t   spaces[indent], nhalf->name_uc, nhalf->name_lc, nhalf->name_ic,\n-\t   spaces[indent + 2], prefix, nhalf->kwname, postfix);\n+\t   xspaces[indent], nhalf->name_uc, nhalf->name_lc, nhalf->name_ic,\n+\t   xspaces[indent + 2], prefix, nhalf->kwname, postfix);\n \n   if (num != 1)\n     {\n       fprintf (out,\n \t       \"\\\n %selse if (c < 0)\\n\\\n \",\n-\t       spaces[indent]);\n+\t       xspaces[indent]);\n \n       if (numhalf == 0)\n \tfprintf (out,\n \t\t \"\\\n %s;\\n\\\n \",\n-\t\t spaces[indent + 2]);\n+\t\t xspaces[indent + 2]);\n       else\n \ttestname (TRUE, indent + 4, first, nhalf->previous);\n \n@@ -687,7 +687,7 @@ testname (bool nested, int indent, name first, name last)\n \t\t   \"\\\n %selse\\n\\\n \",\n-\t\t   spaces[indent]);\n+\t\t   xspaces[indent]);\n \n \t  testname (TRUE, indent + 4, nhalf->next, last);\n \t}\n@@ -698,7 +698,7 @@ testname (bool nested, int indent, name first, name last)\n \t     \"\\\n %s}\\n\\\n \",\n-\t     spaces[indent - 2]);\n+\t     xspaces[indent - 2]);\n }\n \n void\n@@ -710,7 +710,7 @@ testnames (bool nested, int indent, int len, name first, name last)\n   int numhalf;\n \n   assert (!nested || indent >= 2);\n-  assert (((size_t) indent) + 4 < ARRAY_SIZE (spaces));\n+  assert (((size_t) indent) + 4 < ARRAY_SIZE (xspaces));\n \n   num = 0;\n   numhalf = 0;\n@@ -728,30 +728,30 @@ testnames (bool nested, int indent, int len, name first, name last)\n \t     \"\\\n %s{\\n\\\n \",\n-\t     spaces[indent - 2]);\n+\t     xspaces[indent - 2]);\n \n   fprintf (out,\n \t   \"\\\n %sif ((c = ffesrc_strncmp_2c (ffe_case_match (), p, \\\"%s\\\", \\\"%s\\\", \\\"%s\\\", %d)) == 0)\\n\\\n %sreturn %s%s%s;\\n\\\n \",\n-\t   spaces[indent], nhalf->name_uc, nhalf->name_lc, nhalf->name_ic,\n-\t   len, spaces[indent + 2], prefix, nhalf->kwname, postfix);\n+\t   xspaces[indent], nhalf->name_uc, nhalf->name_lc, nhalf->name_ic,\n+\t   len, xspaces[indent + 2], prefix, nhalf->kwname, postfix);\n \n   if (num != 1)\n     {\n       fprintf (out,\n \t       \"\\\n %selse if (c < 0)\\n\\\n \",\n-\t       spaces[indent]);\n+\t       xspaces[indent]);\n \n       if (numhalf == 0)\n \tfprintf (out,\n \t\t \"\\\n %s;\\n\\\n \",\n-\t\t spaces[indent + 2]);\n+\t\t xspaces[indent + 2]);\n       else\n \ttestnames (TRUE, indent + 4, len, first, nhalf->previous);\n \n@@ -761,7 +761,7 @@ testnames (bool nested, int indent, int len, name first, name last)\n \t\t   \"\\\n %selse\\n\\\n \",\n-\t\t   spaces[indent]);\n+\t\t   xspaces[indent]);\n \n \t  testnames (TRUE, indent + 4, len, nhalf->next, last);\n \t}\n@@ -772,5 +772,5 @@ testnames (bool nested, int indent, int len, name first, name last)\n \t     \"\\\n %s}\\n\\\n \",\n-\t     spaces[indent - 2]);\n+\t     xspaces[indent - 2]);\n }"}, {"sha": "3cc2ac7724c30aa11e60ba5e30295b0b82e48a8e", "filename": "gcc/f/g77spec.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a74d78dd51d21fb465e6dd4dc64ee481b22e5a3f/gcc%2Ff%2Fg77spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a74d78dd51d21fb465e6dd4dc64ee481b22e5a3f/gcc%2Ff%2Fg77spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77spec.c?ref=a74d78dd51d21fb465e6dd4dc64ee481b22e5a3f", "patch": "@@ -92,8 +92,6 @@ static void (*g77_fn)();\n static int g77_newargc;\n static char **g77_newargv;\n \n-extern char *xmalloc PROTO((size_t));\n-\n extern char *version_string;\n \n /* --- This comes from gcc.c (2.8.1) verbatim: */"}, {"sha": "d7041c3bd913420b9599a5e6c4884fdcc5dcfc4b", "filename": "gcc/f/malloc.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a74d78dd51d21fb465e6dd4dc64ee481b22e5a3f/gcc%2Ff%2Fmalloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a74d78dd51d21fb465e6dd4dc64ee481b22e5a3f/gcc%2Ff%2Fmalloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fmalloc.c?ref=a74d78dd51d21fb465e6dd4dc64ee481b22e5a3f", "patch": "@@ -33,10 +33,6 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"proj.h\"\n #include \"malloc.h\"\n \n-/* Assume gcc/toplev.o is linked in.  */\n-void *xmalloc (unsigned size);\n-void *xrealloc (void *ptr, int size);\n-\n /* Externals defined here.  */\n \n struct _malloc_root_ malloc_root_"}]}