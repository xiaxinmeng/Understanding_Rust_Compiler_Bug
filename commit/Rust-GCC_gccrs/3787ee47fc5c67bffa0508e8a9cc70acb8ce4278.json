{"sha": "3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc4N2VlNDdmYzVjNjdiZmZhMDUwOGU4YTljYzcwYWNiOGNlNDI3OA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2017-07-12T23:07:50Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2017-07-12T23:07:50Z"}, "message": "re PR target/81193 (PowerPC GCC __builtin_cpu_is and __builtin_cpu_supports should warn about old libraries)\n\n[gcc]\n2017-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\tPR target/81193\n\t* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): If GLIBC\n\tprovides the hardware capability bits, define the macro\n\t__BUILTIN_CPU_SUPPORTS__.\n\t* config/rs6000/rs6000.c (cpu_expand_builtin): Generate a warning\n\tif GLIBC does not provide the hardware capability bits.  Add a\n\tgcc_unreachable call if the built-in cpu function is neither\n\t__builtin_cpu_is nor __builtin_cpu_supports.\n\t(rs6000_get_function_versions_dispatcher): Change the warning\n\tthat an old GLIBC is used which does not export the capability\n\tbits to be an error.\n\t* doc/extend.texi (target_clones attribute): Document the\n\trestriction that GLIBC 2.23 or newer is needed on the PowerPC.\n\t(PowerPC built-in functions): Document that GLIBC 2.23 or newer is\n\tneeded by __builtin_cpu_is and __builtin_cpu_supports.  Document\n\tthe macros defined by GCC if the newer GLIBC is available.\n\n[gcc/testsuite]\n2017-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\tPR target/81193\n\t* gcc.target/powerpc/bmi-andn-1.c: Add guard against using\n\t__builtin_cpu_supports with old GLIBC's.\n\t* gcc.target/powerpc/bmi-andn-2.c: Likewise.\n\t* gcc.target/powerpc/bmi-bextr-1.c: Likewise.\n\t* gcc.target/powerpc/bmi-bextr-2.c: Likewise.\n\t* gcc.target/powerpc/bmi-bextr-4.c: Likewise.\n\t* gcc.target/powerpc/bmi-bextr-5.c: Likewise.\n\t* gcc.target/powerpc/bmi-blsi-1.c: Likewise.\n\t* gcc.target/powerpc/bmi-blsi-2.c: Likewise.\n\t* gcc.target/powerpc/bmi-blsmsk-1.c: Likewise.\n\t* gcc.target/powerpc/bmi-blsmsk-2.c: Likewise.\n\t* gcc.target/powerpc/bmi-blsr-1.c: Likewise.\n\t* gcc.target/powerpc/bmi-blsr-2.c: Likewise.\n\t* gcc.target/powerpc/bmi-tzcnt-1.c: Likewise.\n\t* gcc.target/powerpc/bmi-tzcnt-2.c: Likewise.\n\t* gcc.target/powerpc/bmi2-bzhi32-1.c: Likewise.\n\t* gcc.target/powerpc/bmi2-bzhi64-1.c: Likewise.\n\t* gcc.target/powerpc/bmi2-mulx32-1.c: Likewise.\n\t* gcc.target/powerpc/bmi2-mulx32-2.c: Likewise.\n\t* gcc.target/powerpc/bmi2-mulx64-1.c: Likewise.\n\t* gcc.target/powerpc/bmi2-mulx64-2.c: Likewise.\n\t* gcc.target/powerpc/bmi2-pdep32-1.c: Likewise.\n\t* gcc.target/powerpc/bmi2-pdep64-1.c: Likewise.\n\t* gcc.target/powerpc/bmi2-pext32-1.c: Likewise.\n\t* gcc.target/powerpc/bmi2-pext64-1.c: Likewise.\n\t* gcc.target/powerpc/cpu-builtin-1.c: Likewise.\n\n[libgcc]\n2017-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\tPR target/81193\n\t* configure.ac (PowerPC float128 hardware support): Test whether\n\twe can use __builtin_cpu_supports before enabling the ifunc\n\thandler.\n\t* configure: Regenerate.\n\nFrom-SVN: r250165", "tree": {"sha": "77cf14d03bfbaab4f105ec33be51a615e6f4b6cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77cf14d03bfbaab4f105ec33be51a615e6f4b6cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/comments", "author": null, "committer": null, "parents": [{"sha": "1b68a156d636b8a67e13ac721718c1e1f213f969", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b68a156d636b8a67e13ac721718c1e1f213f969", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b68a156d636b8a67e13ac721718c1e1f213f969"}], "stats": {"total": 187, "additions": 155, "deletions": 32}, "files": [{"sha": "6e62befe6d1fc34184c33c82f46cc8fcdb215944", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,3 +1,22 @@\n+2017-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/81193\n+\t* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): If GLIBC\n+\tprovides the hardware capability bits, define the macro\n+\t__BUILTIN_CPU_SUPPORTS__.\n+\t* config/rs6000/rs6000.c (cpu_expand_builtin): Generate a warning\n+\tif GLIBC does not provide the hardware capability bits.  Add a\n+\tgcc_unreachable call if the built-in cpu function is neither\n+\t__builtin_cpu_is nor __builtin_cpu_supports.\n+\t(rs6000_get_function_versions_dispatcher): Change the warning\n+\tthat an old GLIBC is used which does not export the capability\n+\tbits to be an error.\n+\t* doc/extend.texi (target_clones attribute): Document the\n+\trestriction that GLIBC 2.23 or newer is needed on the PowerPC.\n+\t(PowerPC built-in functions): Document that GLIBC 2.23 or newer is\n+\tneeded by __builtin_cpu_is and __builtin_cpu_supports.  Document\n+\tthe macros defined by GCC if the newer GLIBC is available.\n+\n 2017-07-12  Jeff Law  <law@redhat.com>\n \n \t* config/riscv/riscv.c: Remove unnecessary includes.  Reorder"}, {"sha": "96521a2709341206b246c1253e9cb5b28f683bfa", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -644,6 +644,9 @@ rs6000_cpu_cpp_builtins (cpp_reader *pfile)\n     builtin_define (\"__FLOAT128_HARDWARE__\");\n   if (TARGET_LONG_DOUBLE_128 && FLOAT128_IBM_P (TFmode))\n     builtin_define (\"__ibm128=long double\");\n+#ifdef TARGET_LIBC_PROVIDES_HWCAP_IN_TCB\n+  builtin_define (\"__BUILTIN_CPU_SUPPORTS__\");\n+#endif\n \n   /* We needed to create a keyword if -mfloat128-type was used but not -mfloat,\n      so we used __ieee128.  If -mfloat128 was used, create a #define back to"}, {"sha": "af5b5f1a2f629c3f2ace2d6f21f2053679cdb6f3", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -15176,13 +15176,18 @@ cpu_expand_builtin (enum rs6000_builtins fcode, tree exp ATTRIBUTE_UNUSED,\n       emit_insn (gen_eqsi3 (scratch2, scratch1, const0_rtx));\n       emit_insn (gen_rtx_SET (target, gen_rtx_XOR (SImode, scratch2, const1_rtx)));\n     }\n+  else\n+    gcc_unreachable ();\n \n   /* Record that we have expanded a CPU builtin, so that we can later\n      emit a reference to the special symbol exported by LIBC to ensure we\n      do not link against an old LIBC that doesn't support this feature.  */\n   cpu_builtin_p = true;\n \n #else\n+  warning (0, \"%s needs GLIBC (2.23 and newer) that exports hardware \"\n+\t   \"capability bits\", rs6000_builtin_info[(size_t) fcode].name);\n+  \n   /* For old LIBCs, always return FALSE.  */\n   emit_move_insn (target, GEN_INT (0));\n #endif /* TARGET_LIBC_PROVIDES_HWCAP_IN_TCB */\n@@ -37284,10 +37289,10 @@ rs6000_get_function_versions_dispatcher (void *decl)\n   default_node = default_version_info->this_node;\n \n #ifndef TARGET_LIBC_PROVIDES_HWCAP_IN_TCB\n-  warning_at (DECL_SOURCE_LOCATION (default_node->decl), 0,\n-\t      \"target_clone needs GLIBC (2.23 and newer) to export hardware \"\n-\t      \"capability bits\");\n-#endif\n+  error_at (DECL_SOURCE_LOCATION (default_node->decl),\n+\t    \"target_clones attribute needs GLIBC (2.23 and newer) that \"\n+\t    \"exports hardware capability bits\");\n+#else\n \n   if (targetm.has_ifunc_p ())\n     {\n@@ -37320,6 +37325,7 @@ rs6000_get_function_versions_dispatcher (void *decl)\n \t\t\"multiversioning needs ifunc which is not supported \"\n \t\t\"on this target\");\n     }\n+#endif\n \n   return dispatch_decl;\n }"}, {"sha": "27363fc5a9232ace2e26b3582dea22d16e6ce78d", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 46, "deletions": 20, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -3282,7 +3282,8 @@ one compiled with @option{-msse4.1} and another with @option{-mavx}.\n On a PowerPC, you can compile a function with\n @code{target_clones(\"cpu=power9,default\")}.  GCC will create two\n function clones, one compiled with @option{-mcpu=power9} and another\n-with the default options.\n+with the default options.  GCC must be configured to use GLIBC 2.23 or\n+newer in order to use the @code{target_clones} attribute.\n \n It also creates a resolver function (see\n the @code{ifunc} attribute above) that dynamically selects a clone\n@@ -14945,8 +14946,18 @@ to maintain API compatibility with the x86 builtins.\n \n @deftypefn {Built-in Function} int __builtin_cpu_is (const char *@var{cpuname})\n This function returns a value of @code{1} if the run-time CPU is of type\n-@var{cpuname} and returns @code{0} otherwise. The following CPU names can be\n-detected:\n+@var{cpuname} and returns @code{0} otherwise\n+\n+The @code{__builtin_cpu_is} function requires GLIBC 2.23 or newer\n+which exports the hardware capability bits.  GCC defines the macro\n+@code{__BUILTIN_CPU_SUPPORTS__} if the @code{__builtin_cpu_supports}\n+built-in function is fully supported.\n+\n+If GCC was configured to use a GLIBC before 2.23, the built-in\n+function @code{__builtin_cpu_is} always returns a 0 and the compiler\n+issues a warning.\n+\n+The following CPU names can be detected:\n \n @table @samp\n @item power9\n@@ -14983,20 +14994,33 @@ IBM PowerPC Cell Broadband Engine Architecture CPU.\n \n Here is an example:\n @smallexample\n-if (__builtin_cpu_is (\"power8\"))\n-  @{\n-     do_power8 (); // POWER8 specific implementation.\n-  @}\n-else\n-  @{\n-     do_generic (); // Generic implementation.\n-  @}\n+#ifdef __BUILTIN_CPU_SUPPORTS__\n+  if (__builtin_cpu_is (\"power8\"))\n+    @{\n+       do_power8 (); // POWER8 specific implementation.\n+    @}\n+  else\n+#endif\n+    @{\n+       do_generic (); // Generic implementation.\n+    @}\n @end smallexample\n @end deftypefn\n \n @deftypefn {Built-in Function} int __builtin_cpu_supports (const char *@var{feature})\n This function returns a value of @code{1} if the run-time CPU supports the HWCAP\n-feature @var{feature} and returns @code{0} otherwise. The following features can be\n+feature @var{feature} and returns @code{0} otherwise.\n+\n+The @code{__builtin_cpu_supports} function requires GLIBC 2.23 or\n+newer which exports the hardware capability bits.  GCC defines the\n+macro @code{__BUILTIN_CPU_SUPPORTS__} if the\n+@code{__builtin_cpu_supports} built-in function is fully supported.\n+\n+If GCC was configured to use a GLIBC before 2.23, the built-in\n+function @code{__builtin_cpu_suports} always returns a 0 and the\n+compiler issues a warning.\n+\n+The following features can be\n detected:\n \n @table @samp\n@@ -15080,14 +15104,16 @@ CPU supports the vector-scalar extension.\n \n Here is an example:\n @smallexample\n-if (__builtin_cpu_supports (\"fpu\"))\n-  @{\n-     asm(\"fadd %0,%1,%2\" : \"=d\"(dst) : \"d\"(src1), \"d\"(src2));\n-  @}\n-else\n-  @{\n-     dst = __fadd (src1, src2); // Software FP addition function.\n-  @}\n+#ifdef __BUILTIN_CPU_SUPPORTS__\n+  if (__builtin_cpu_supports (\"fpu\"))\n+    @{\n+       asm(\"fadd %0,%1,%2\" : \"=d\"(dst) : \"d\"(src1), \"d\"(src2));\n+    @}\n+  else\n+#endif\n+    @{\n+       dst = __fadd (src1, src2); // Software FP addition function.\n+    @}\n @end smallexample\n @end deftypefn\n "}, {"sha": "b3b4f75f4ef702b9babf2e0c3215c63841a40bc6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,3 +1,33 @@\n+2017-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/81193\n+\t* gcc.target/powerpc/bmi-andn-1.c: Add guard against using\n+\t__builtin_cpu_supports with old GLIBC's.\n+\t* gcc.target/powerpc/bmi-andn-2.c: Likewise.\n+\t* gcc.target/powerpc/bmi-bextr-1.c: Likewise.\n+\t* gcc.target/powerpc/bmi-bextr-2.c: Likewise.\n+\t* gcc.target/powerpc/bmi-bextr-4.c: Likewise.\n+\t* gcc.target/powerpc/bmi-bextr-5.c: Likewise.\n+\t* gcc.target/powerpc/bmi-blsi-1.c: Likewise.\n+\t* gcc.target/powerpc/bmi-blsi-2.c: Likewise.\n+\t* gcc.target/powerpc/bmi-blsmsk-1.c: Likewise.\n+\t* gcc.target/powerpc/bmi-blsmsk-2.c: Likewise.\n+\t* gcc.target/powerpc/bmi-blsr-1.c: Likewise.\n+\t* gcc.target/powerpc/bmi-blsr-2.c: Likewise.\n+\t* gcc.target/powerpc/bmi-tzcnt-1.c: Likewise.\n+\t* gcc.target/powerpc/bmi-tzcnt-2.c: Likewise.\n+\t* gcc.target/powerpc/bmi2-bzhi32-1.c: Likewise.\n+\t* gcc.target/powerpc/bmi2-bzhi64-1.c: Likewise.\n+\t* gcc.target/powerpc/bmi2-mulx32-1.c: Likewise.\n+\t* gcc.target/powerpc/bmi2-mulx32-2.c: Likewise.\n+\t* gcc.target/powerpc/bmi2-mulx64-1.c: Likewise.\n+\t* gcc.target/powerpc/bmi2-mulx64-2.c: Likewise.\n+\t* gcc.target/powerpc/bmi2-pdep32-1.c: Likewise.\n+\t* gcc.target/powerpc/bmi2-pdep64-1.c: Likewise.\n+\t* gcc.target/powerpc/bmi2-pext32-1.c: Likewise.\n+\t* gcc.target/powerpc/bmi2-pext64-1.c: Likewise.\n+\t* gcc.target/powerpc/cpu-builtin-1.c: Likewise.\n+\n 2017-07-12  Carl Love  <cel@us.ibm.com>\n \n \t* gcc.target/powerpc/p9-xxbr-1.c (rev_bool_char, rev_bool_short,"}, {"sha": "3702bdd77feb5dc0e3544b5e12755b6aed714041", "filename": "gcc/testsuite/gcc.target/powerpc/bmi-andn-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-andn-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-andn-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-andn-1.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O3\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "a6f5d5084c9a28d9d46fc22e89779f122494d814", "filename": "gcc/testsuite/gcc.target/powerpc/bmi-andn-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-andn-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-andn-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-andn-2.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O3\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "45e5bdd8510a29e883d7001ffad2edb98bd14c21", "filename": "gcc/testsuite/gcc.target/powerpc/bmi-bextr-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-bextr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-bextr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-bextr-1.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -fno-inline\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "52f78df12676bb50d7a0b21d941b3025bad71a22", "filename": "gcc/testsuite/gcc.target/powerpc/bmi-bextr-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-bextr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-bextr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-bextr-2.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O3 -fno-inline\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "3ca5666503301e62500dc0ec15566a10173de921", "filename": "gcc/testsuite/gcc.target/powerpc/bmi-bextr-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-bextr-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-bextr-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-bextr-4.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O3 -fno-inline\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "e43e2da422a32f76b3dea4aaaa030a305b805f08", "filename": "gcc/testsuite/gcc.target/powerpc/bmi-bextr-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-bextr-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-bextr-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-bextr-5.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O3 -fno-inline\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "345a7eb9def298dc238caffea4f2441c3ba64c77", "filename": "gcc/testsuite/gcc.target/powerpc/bmi-blsi-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-blsi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-blsi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-blsi-1.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O3 -fno-inline\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "f2e1a58f5ed8493bfebed154f98ddd9523be490f", "filename": "gcc/testsuite/gcc.target/powerpc/bmi-blsi-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-blsi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-blsi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-blsi-2.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O3 -fno-inline\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "481b09f77ce114dcf7d4169656fdad0736229f03", "filename": "gcc/testsuite/gcc.target/powerpc/bmi-blsmsk-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-blsmsk-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-blsmsk-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-blsmsk-1.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O3 -fno-inline\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "3ba7e97dd47ef7e0cff5d6133d1e5aea3fec8fa1", "filename": "gcc/testsuite/gcc.target/powerpc/bmi-blsmsk-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-blsmsk-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-blsmsk-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-blsmsk-2.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O3 -fno-inline\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "c383b7914e24b212b426b49cf5edddeb63aa8501", "filename": "gcc/testsuite/gcc.target/powerpc/bmi-blsr-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-blsr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-blsr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-blsr-1.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O3 -fno-inline\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "61d962b91505dbf6f2ea4aaa91cea489a2d55289", "filename": "gcc/testsuite/gcc.target/powerpc/bmi-blsr-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-blsr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-blsr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-blsr-2.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O3 -fno-inline\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "25ba3dc238e6cd360001496503604b16a81a5d4f", "filename": "gcc/testsuite/gcc.target/powerpc/bmi-tzcnt-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-tzcnt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-tzcnt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-tzcnt-1.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O3 -fno-inline\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "1b80ccbdaa90825dd9c69a2b0326f3887813cbb5", "filename": "gcc/testsuite/gcc.target/powerpc/bmi-tzcnt-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-tzcnt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-tzcnt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi-tzcnt-2.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O3 -fno-inline\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "f0943d7f9741b3b05a27f347965b187cf55db93e", "filename": "gcc/testsuite/gcc.target/powerpc/bmi2-bzhi32-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-bzhi32-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-bzhi32-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-bzhi32-1.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O3\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "33f1748b44e61e91a90d76eb2acdb237d9f93899", "filename": "gcc/testsuite/gcc.target/powerpc/bmi2-bzhi64-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-bzhi64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-bzhi64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-bzhi64-1.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O3\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "870679c779ffe84f88090bf0278661f882b3bf2d", "filename": "gcc/testsuite/gcc.target/powerpc/bmi2-mulx32-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-mulx32-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-mulx32-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-mulx32-1.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O3\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include \"bmi2-check.h\""}, {"sha": "b8327741c3a052ffabdb1a9476198ee19ebaed48", "filename": "gcc/testsuite/gcc.target/powerpc/bmi2-mulx32-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-mulx32-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-mulx32-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-mulx32-2.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O3\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "b1e4a13c2afb265ab74f21f49a535cc823dfe085", "filename": "gcc/testsuite/gcc.target/powerpc/bmi2-mulx64-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-mulx64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-mulx64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-mulx64-1.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O3\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include \"bmi2-check.h\""}, {"sha": "d57f05503c521c2d631baceae2646c5e80f4b096", "filename": "gcc/testsuite/gcc.target/powerpc/bmi2-mulx64-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-mulx64-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-mulx64-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-mulx64-2.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O3\" } */\n /* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "a07567389d07f17636e755d29e26a9c7190da424", "filename": "gcc/testsuite/gcc.target/powerpc/bmi2-pdep32-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-pdep32-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-pdep32-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-pdep32-1.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -3,6 +3,7 @@\n /* { dg-require-effective-target lp64 } */\n /* { dg-require-effective-target vsx_hw } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power7\" } } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "1268239e61f04495be971f01ec6c06a6d9f8b5c7", "filename": "gcc/testsuite/gcc.target/powerpc/bmi2-pdep64-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-pdep64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-pdep64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-pdep64-1.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -3,6 +3,7 @@\n /* { dg-require-effective-target lp64 } */\n /* { dg-require-effective-target vsx_hw } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power7\" } } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "762ed1b0325dba4d93f8ed383b35272c83b0457c", "filename": "gcc/testsuite/gcc.target/powerpc/bmi2-pext32-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-pext32-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-pext32-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-pext32-1.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -3,6 +3,7 @@\n /* { dg-require-effective-target lp64 } */\n /* { dg-require-effective-target vsx_hw } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power7\" } } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "5e269ec47de5e294bc563be0be6827a1593d93a3", "filename": "gcc/testsuite/gcc.target/powerpc/bmi2-pext64-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-pext64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-pext64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbmi2-pext64-1.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -3,6 +3,7 @@\n /* { dg-require-effective-target lp64 } */\n /* { dg-require-effective-target vsx_hw } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power7\" } } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n #define NO_WARN_X86_INTRINSICS 1\n #include <x86intrin.h>"}, {"sha": "c13fed7efd49a8ad44d5334485e4198fc7e2c2a8", "filename": "gcc/testsuite/gcc.target/powerpc/cpu-builtin-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcpu-builtin-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcpu-builtin-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcpu-builtin-1.c?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile { target { powerpc*-*-* } } } */\n /* { dg-skip-if \"\" { powerpc*-*-darwin* } } */\n+/* { dg-require-effective-target ppc_cpu_supports_hw } */\n \n void\n use_cpu_is_builtins (unsigned int *p)"}, {"sha": "36e08471afbab0972fbf7e4f616f57240dcafeb8", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -1,3 +1,11 @@\n+2017-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/81193\n+\t* configure.ac (PowerPC float128 hardware support): Test whether\n+\twe can use __builtin_cpu_supports before enabling the ifunc\n+\thandler.\n+\t* configure: Regenerate.\n+\n 2017-07-10  Vineet Gupta <vgupta@synopsys.com>\n \n \t* config.host: Remove uclibc from arc target spec."}, {"sha": "15d34b27cc097f4674b293de0be3728676aed3f3", "filename": "libgcc/configure", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -4975,10 +4975,10 @@ esac\n esac\n \n case ${host} in\n-# At present, we cannot turn -mfloat128 on via #pragma GCC target,\n-# so just check if we have VSX (ISA 2.06) support to build the\n-# software libraries, and whether the assembler can handle xsaddqp\n-# for hardware support.\n+# At present, we cannot turn -mfloat128 on via #pragma GCC target, so just\n+# check if we have VSX (ISA 2.06) support to build the software libraries, and\n+# whether the assembler can handle xsaddqp for hardware support.  Also check if\n+# a new glibc is being used so that __builtin_cpu_supports can be used.\n powerpc*-*-linux*)\n   saved_CFLAGS=\"$CFLAGS\"\n   CFLAGS=\"$CFLAGS -mabi=altivec -mvsx -mfloat128\"\n@@ -5013,6 +5013,9 @@ else\n      #ifndef AT_PLATFORM\n      #error \"AT_PLATFORM is not defined\"\n      #endif\n+     #ifndef __BUILTIN_CPU_SUPPORTS__\n+     #error \"__builtin_cpu_supports is not available\"\n+     #endif\n      vector unsigned char add (vector unsigned char a, vector unsigned char b)\n      {\n        vector unsigned char ret;"}, {"sha": "da499716f8c85100bdbddf50c897ccdc1348d05f", "filename": "libgcc/configure.ac", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3787ee47fc5c67bffa0508e8a9cc70acb8ce4278/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=3787ee47fc5c67bffa0508e8a9cc70acb8ce4278", "patch": "@@ -376,10 +376,10 @@ esac\n esac\n \n case ${host} in\n-# At present, we cannot turn -mfloat128 on via #pragma GCC target,\n-# so just check if we have VSX (ISA 2.06) support to build the\n-# software libraries, and whether the assembler can handle xsaddqp\n-# for hardware support.\n+# At present, we cannot turn -mfloat128 on via #pragma GCC target, so just\n+# check if we have VSX (ISA 2.06) support to build the software libraries, and\n+# whether the assembler can handle xsaddqp for hardware support.  Also check if\n+# a new glibc is being used so that __builtin_cpu_supports can be used.\n powerpc*-*-linux*)\n   saved_CFLAGS=\"$CFLAGS\"\n   CFLAGS=\"$CFLAGS -mabi=altivec -mvsx -mfloat128\"\n@@ -398,6 +398,9 @@ powerpc*-*-linux*)\n      #ifndef AT_PLATFORM\n      #error \"AT_PLATFORM is not defined\"\n      #endif\n+     #ifndef __BUILTIN_CPU_SUPPORTS__\n+     #error \"__builtin_cpu_supports is not available\"\n+     #endif\n      vector unsigned char add (vector unsigned char a, vector unsigned char b)\n      {\n        vector unsigned char ret;"}]}