{"sha": "08a1cadc10b80f76033d18a8a2b6dfac53926bdc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhhMWNhZGMxMGI4MGY3NjAzM2QxOGE4YTJiNmRmYWM1MzkyNmJkYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-03-15T02:57:52Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-03-15T02:57:52Z"}, "message": "* c-cppbuiltin.c (c_cpp_builtins): Bump __cpp_range_based_for.\n\nFrom-SVN: r234207", "tree": {"sha": "628e0299b0d6ace8c2d7c8be91118c079cb61b7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/628e0299b0d6ace8c2d7c8be91118c079cb61b7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08a1cadc10b80f76033d18a8a2b6dfac53926bdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08a1cadc10b80f76033d18a8a2b6dfac53926bdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08a1cadc10b80f76033d18a8a2b6dfac53926bdc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08a1cadc10b80f76033d18a8a2b6dfac53926bdc/comments", "author": null, "committer": null, "parents": [{"sha": "26a8813fa33bf0812690f848e0ef5d432587a82f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26a8813fa33bf0812690f848e0ef5d432587a82f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26a8813fa33bf0812690f848e0ef5d432587a82f"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "620c8069e0d94cae13ff49d1c778e3c0b8009093", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08a1cadc10b80f76033d18a8a2b6dfac53926bdc/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08a1cadc10b80f76033d18a8a2b6dfac53926bdc/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=08a1cadc10b80f76033d18a8a2b6dfac53926bdc", "patch": "@@ -1,3 +1,7 @@\n+2016-03-14  Jason Merrill  <jason@redhat.com>\n+\n+\t* c-cppbuiltin.c (c_cpp_builtins): Bump __cpp_range_based_for.\n+\n 2016-03-09  Richard Biener  <rguenther@suse.de>\n \n \tPR c/70143"}, {"sha": "dc1f426c7a87b0a5dcc00d241270d24d8d46a744", "filename": "gcc/c-family/c-cppbuiltin.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08a1cadc10b80f76033d18a8a2b6dfac53926bdc/gcc%2Fc-family%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08a1cadc10b80f76033d18a8a2b6dfac53926bdc/gcc%2Fc-family%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.c?ref=08a1cadc10b80f76033d18a8a2b6dfac53926bdc", "patch": "@@ -871,7 +871,7 @@ c_cpp_builtins (cpp_reader *pfile)\n \t  cpp_define (pfile, \"__cpp_namespace_attributes=201411\");\n \t  cpp_define (pfile, \"__cpp_enumerator_attributes=201411\");\n \t  cpp_define (pfile, \"__cpp_nested_namespace_definitions=201411\");\n-\t  cpp_define (pfile, \"__cpp_fold_expressions=201411\");\n+\t  cpp_define (pfile, \"__cpp_fold_expressions=201603\");\n \t  cpp_define (pfile, \"__cpp_nontype_template_args=201411\");\n \t}\n       if (flag_concepts)"}, {"sha": "949d25da2477b7c47584546483d61640e3b98390", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08a1cadc10b80f76033d18a8a2b6dfac53926bdc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08a1cadc10b80f76033d18a8a2b6dfac53926bdc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=08a1cadc10b80f76033d18a8a2b6dfac53926bdc", "patch": "@@ -1,7 +1,7 @@\n 2016-03-14  Casey Carter  <casey@carter.net>\n \t    Jason Merrill  <jason@redhat.com>\n \n-\tP08184R0: Generalizing the Range-Based For Loop\n+\tP0184R0: Generalizing the Range-Based For Loop\n \t* parser.c (cp_convert_range_for): Set the type of __end separately.\n \t(cp_parser_perform_range_for_lookup): Allow different begin/end\n \ttypes if they are comparable."}]}