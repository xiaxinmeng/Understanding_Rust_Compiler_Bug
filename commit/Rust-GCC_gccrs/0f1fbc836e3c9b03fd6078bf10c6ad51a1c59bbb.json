{"sha": "0f1fbc836e3c9b03fd6078bf10c6ad51a1c59bbb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYxZmJjODM2ZTNjOWIwM2ZkNjA3OGJmMTBjNmFkNTFhMWM1OWJiYg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2014-09-19T15:24:56Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-09-19T15:24:56Z"}, "message": "simple-object-elf.c (simple_object_elf_write_ehdr): Correctly handle objects with more than SHN_LORESERVE sections.\n\n\t* simple-object-elf.c (simple_object_elf_write_ehdr): Correctly\n\thandle objects with more than SHN_LORESERVE sections.\n\t(simple_object_elf_write_shdr): Add sh_link parameter.\n\t(simple_object_elf_write_to_file): Correctly handle objects with\n\tmore than SHN_LORESERVE sections.\n\nFrom-SVN: r215394", "tree": {"sha": "0c675b8d2f0af407a8b37d404c1f9aa556efe958", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c675b8d2f0af407a8b37d404c1f9aa556efe958"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f1fbc836e3c9b03fd6078bf10c6ad51a1c59bbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f1fbc836e3c9b03fd6078bf10c6ad51a1c59bbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f1fbc836e3c9b03fd6078bf10c6ad51a1c59bbb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f1fbc836e3c9b03fd6078bf10c6ad51a1c59bbb/comments", "author": null, "committer": null, "parents": [{"sha": "4c52ada06072197bd6ec5ac1883ef08d6d87595e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c52ada06072197bd6ec5ac1883ef08d6d87595e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c52ada06072197bd6ec5ac1883ef08d6d87595e"}], "stats": {"total": 46, "additions": 37, "deletions": 9}, "files": [{"sha": "3845433378b6aad3c0e30c3c459cf6da52268750", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f1fbc836e3c9b03fd6078bf10c6ad51a1c59bbb/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f1fbc836e3c9b03fd6078bf10c6ad51a1c59bbb/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=0f1fbc836e3c9b03fd6078bf10c6ad51a1c59bbb", "patch": "@@ -1,3 +1,11 @@\n+2014-09-19  Ian Lance Taylor  <iant@google.com>\n+\n+\t* simple-object-elf.c (simple_object_elf_write_ehdr): Correctly\n+\thandle objects with more than SHN_LORESERVE sections.\n+\t(simple_object_elf_write_shdr): Add sh_link parameter.\n+\t(simple_object_elf_write_to_file): Correctly handle objects with\n+\tmore than SHN_LORESERVE sections.\n+\n 2014-08-29  Andrew Burgess  <aburgess@broadcom.com>\n \n \t* cp-demangle.c (d_dump): Only access field from s_fixed part of"}, {"sha": "8594cf99f417c5742066a39d62a9e41299c75de1", "filename": "libiberty/simple-object-elf.c", "status": "modified", "additions": 29, "deletions": 9, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f1fbc836e3c9b03fd6078bf10c6ad51a1c59bbb/libiberty%2Fsimple-object-elf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f1fbc836e3c9b03fd6078bf10c6ad51a1c59bbb/libiberty%2Fsimple-object-elf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsimple-object-elf.c?ref=0f1fbc836e3c9b03fd6078bf10c6ad51a1c59bbb", "patch": "@@ -698,6 +698,7 @@ simple_object_elf_write_ehdr (simple_object_write *sobj, int descriptor,\n   unsigned char buf[sizeof (Elf64_External_Ehdr)];\n   simple_object_write_section *section;\n   unsigned int shnum;\n+  unsigned int shstrndx;\n \n   fns = attrs->type_functions;\n   cl = attrs->ei_class;\n@@ -743,9 +744,17 @@ simple_object_elf_write_ehdr (simple_object_write *sobj, int descriptor,\n \t\t (cl == ELFCLASS32\n \t\t  ? sizeof (Elf32_External_Shdr)\n \t\t  : sizeof (Elf64_External_Shdr)));\n-  ELF_SET_FIELD (fns, cl, Ehdr, buf, e_shnum, Elf_Half, shnum);\n-  ELF_SET_FIELD (fns, cl, Ehdr, buf, e_shstrndx, Elf_Half,\n-\t\t shnum == 0 ? 0 : shnum - 1);\n+  ELF_SET_FIELD (fns, cl, Ehdr, buf, e_shnum, Elf_Half,\n+\t\t shnum >= SHN_LORESERVE ? 0 : shnum);\n+  if (shnum == 0)\n+    shstrndx = 0;\n+  else\n+    {\n+      shstrndx = shnum - 1;\n+      if (shstrndx >= SHN_LORESERVE)\n+\tshstrndx = SHN_XINDEX;\n+    }\n+  ELF_SET_FIELD (fns, cl, Ehdr, buf, e_shstrndx, Elf_Half, shstrndx);\n \n   return simple_object_internal_write (descriptor, 0, buf, ehdr_size,\n \t\t\t\t       errmsg, err);\n@@ -758,8 +767,8 @@ simple_object_elf_write_shdr (simple_object_write *sobj, int descriptor,\n \t\t\t      off_t offset, unsigned int sh_name,\n \t\t\t      unsigned int sh_type, unsigned int sh_flags,\n \t\t\t      unsigned int sh_offset, unsigned int sh_size,\n-\t\t\t      unsigned int sh_addralign, const char **errmsg,\n-\t\t\t      int *err)\n+\t\t\t      unsigned int sh_link, unsigned int sh_addralign,\n+\t\t\t      const char **errmsg, int *err)\n {\n   struct simple_object_elf_attributes *attrs =\n     (struct simple_object_elf_attributes *) sobj->data;\n@@ -781,7 +790,7 @@ simple_object_elf_write_shdr (simple_object_write *sobj, int descriptor,\n   ELF_SET_FIELD (fns, cl, Shdr, buf, sh_flags, Elf_Addr, sh_flags);\n   ELF_SET_FIELD (fns, cl, Shdr, buf, sh_offset, Elf_Addr, sh_offset);\n   ELF_SET_FIELD (fns, cl, Shdr, buf, sh_size, Elf_Addr, sh_size);\n-  /* sh_link left as zero.  */\n+  ELF_SET_FIELD (fns, cl, Shdr, buf, sh_link, Elf_Word, sh_link);\n   /* sh_info left as zero.  */\n   ELF_SET_FIELD (fns, cl, Shdr, buf, sh_addralign, Elf_Addr, sh_addralign);\n   /* sh_entsize left as zero.  */\n@@ -812,6 +821,8 @@ simple_object_elf_write_to_file (simple_object_write *sobj, int descriptor,\n   unsigned int shnum;\n   size_t shdr_offset;\n   size_t sh_offset;\n+  unsigned int first_sh_size;\n+  unsigned int first_sh_link;\n   size_t sh_name;\n   unsigned char zero;\n \n@@ -842,8 +853,17 @@ simple_object_elf_write_to_file (simple_object_write *sobj, int descriptor,\n   shdr_offset = ehdr_size;\n   sh_offset = shdr_offset + shnum * shdr_size;\n \n+  if (shnum < SHN_LORESERVE)\n+    first_sh_size = 0;\n+  else\n+    first_sh_size = shnum;\n+  if (shnum - 1 < SHN_LORESERVE)\n+    first_sh_link = 0;\n+  else\n+    first_sh_link = shnum - 1;\n   if (!simple_object_elf_write_shdr (sobj, descriptor, shdr_offset,\n-\t\t\t\t     0, 0, 0, 0, 0, 0, &errmsg, err))\n+\t\t\t\t     0, 0, 0, 0, first_sh_size, first_sh_link,\n+\t\t\t\t     0, &errmsg, err))\n     return errmsg;\n \n   shdr_offset += shdr_size;\n@@ -887,7 +907,7 @@ simple_object_elf_write_to_file (simple_object_write *sobj, int descriptor,\n \n       if (!simple_object_elf_write_shdr (sobj, descriptor, shdr_offset,\n \t\t\t\t\t sh_name, SHT_PROGBITS, 0, sh_offset,\n-\t\t\t\t\t sh_size, 1U << section->align,\n+\t\t\t\t\t sh_size, 0, 1U << section->align,\n \t\t\t\t\t &errmsg, err))\n \treturn errmsg;\n \n@@ -898,7 +918,7 @@ simple_object_elf_write_to_file (simple_object_write *sobj, int descriptor,\n \n   if (!simple_object_elf_write_shdr (sobj, descriptor, shdr_offset,\n \t\t\t\t     sh_name, SHT_STRTAB, 0, sh_offset,\n-\t\t\t\t     sh_name + strlen (\".shstrtab\") + 1,\n+\t\t\t\t     sh_name + strlen (\".shstrtab\") + 1, 0,\n \t\t\t\t     1, &errmsg, err))\n     return errmsg;\n "}]}