{"sha": "d90c0a5980ceedb40f9f7536c32f17856997435a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkwYzBhNTk4MGNlZWRiNDBmOWY3NTM2YzMyZjE3ODU2OTk3NDM1YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-09-25T06:47:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-09-25T06:47:43Z"}, "message": "re PR c++/63249 ([OpenMP] Spurious \u00bbset but not used\u00ab warnings when actually used in OpenMP target's array section's lower-bound and length)\n\n\tPR c++/63249\n\t* semantics.c (handle_omp_array_sections_1): Call mark_rvalue_use\n\ton low_bound and length.\n\n\t* g++.dg/gomp/pr63249.C: New test.\n\t* c-c++-common/gomp/pr63249.c: New test.\n\n2014-09-25  Thomas Schwinge  <thomas@codesourcery.com>\n\n\tPR c++/63249\n\t* c-parser.c (c_parser_omp_variable_list): Call mark_exp_read\n\ton low_bound and length.\n\nFrom-SVN: r215580", "tree": {"sha": "11854d3aa5d168c198966468dbfb18b3c2fd2f09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11854d3aa5d168c198966468dbfb18b3c2fd2f09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d90c0a5980ceedb40f9f7536c32f17856997435a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d90c0a5980ceedb40f9f7536c32f17856997435a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d90c0a5980ceedb40f9f7536c32f17856997435a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d90c0a5980ceedb40f9f7536c32f17856997435a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a16ee37946f575365bb39d238863422465902054", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a16ee37946f575365bb39d238863422465902054", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a16ee37946f575365bb39d238863422465902054"}], "stats": {"total": 83, "additions": 81, "deletions": 2}, "files": [{"sha": "cb69773247c17d15e782b266dfa97983a7f513e6", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90c0a5980ceedb40f9f7536c32f17856997435a/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90c0a5980ceedb40f9f7536c32f17856997435a/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=d90c0a5980ceedb40f9f7536c32f17856997435a", "patch": "@@ -1,3 +1,9 @@\n+2014-09-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/63249\n+\t* c-parser.c (c_parser_omp_variable_list): Call mark_exp_read\n+\ton low_bound and length.\n+\n 2014-09-24  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/61405"}, {"sha": "0d159fd3bf3448cc78e6b226621241171bfa215f", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90c0a5980ceedb40f9f7536c32f17856997435a/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90c0a5980ceedb40f9f7536c32f17856997435a/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=d90c0a5980ceedb40f9f7536c32f17856997435a", "patch": "@@ -9882,7 +9882,10 @@ c_parser_omp_variable_list (c_parser *parser,\n \n \t\t  c_parser_consume_token (parser);\n \t\t  if (!c_parser_next_token_is (parser, CPP_COLON))\n-\t\t    low_bound = c_parser_expression (parser).value;\n+\t\t    {\n+\t\t      low_bound = c_parser_expression (parser).value;\n+\t\t      mark_exp_read (low_bound);\n+\t\t    }\n \t\t  if (c_parser_next_token_is (parser, CPP_CLOSE_SQUARE))\n \t\t    length = integer_one_node;\n \t\t  else\n@@ -9895,7 +9898,10 @@ c_parser_omp_variable_list (c_parser *parser,\n \t\t\t  break;\n \t\t\t}\n \t\t      if (!c_parser_next_token_is (parser, CPP_CLOSE_SQUARE))\n-\t\t\tlength = c_parser_expression (parser).value;\n+\t\t\t{\n+\t\t\t  length = c_parser_expression (parser).value;\n+\t\t\t  mark_exp_read (length);\n+\t\t\t}\n \t\t    }\n \t\t  /* Look for the closing `]'.  */\n \t\t  if (!c_parser_require (parser, CPP_CLOSE_SQUARE,"}, {"sha": "2457ccdb734c95ecd1835910e7eaa026fc5c91d7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90c0a5980ceedb40f9f7536c32f17856997435a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90c0a5980ceedb40f9f7536c32f17856997435a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d90c0a5980ceedb40f9f7536c32f17856997435a", "patch": "@@ -1,3 +1,9 @@\n+2014-09-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/63249\n+\t* semantics.c (handle_omp_array_sections_1): Call mark_rvalue_use\n+\ton low_bound and length.\n+\n 2014-09-24  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* class.c, decl.c, optimize.c: Rename all instances of"}, {"sha": "debd78562fbc76950d62f7f62f99d134e9a68fb2", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90c0a5980ceedb40f9f7536c32f17856997435a/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90c0a5980ceedb40f9f7536c32f17856997435a/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=d90c0a5980ceedb40f9f7536c32f17856997435a", "patch": "@@ -4291,6 +4291,10 @@ handle_omp_array_sections_1 (tree c, tree t, vec<tree> &types,\n \t\tlength);\n       return error_mark_node;\n     }\n+  if (low_bound)\n+    low_bound = mark_rvalue_use (low_bound);\n+  if (length)\n+    length = mark_rvalue_use (length);\n   if (low_bound\n       && TREE_CODE (low_bound) == INTEGER_CST\n       && TYPE_PRECISION (TREE_TYPE (low_bound))"}, {"sha": "6a201b6b7428029bb031b59e19ed04422b544b58", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90c0a5980ceedb40f9f7536c32f17856997435a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90c0a5980ceedb40f9f7536c32f17856997435a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d90c0a5980ceedb40f9f7536c32f17856997435a", "patch": "@@ -1,3 +1,9 @@\n+2014-09-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/63249\n+\t* g++.dg/gomp/pr63249.C: New test.\n+\t* c-c++-common/gomp/pr63249.c: New test.\n+\n 2014-09-25  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/coarray/collectives_3.f90: New."}, {"sha": "878788ad7efb37bdee4f8ef860f27b935f00376c", "filename": "gcc/testsuite/c-c++-common/gomp/pr63249.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90c0a5980ceedb40f9f7536c32f17856997435a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr63249.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90c0a5980ceedb40f9f7536c32f17856997435a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr63249.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr63249.c?ref=d90c0a5980ceedb40f9f7536c32f17856997435a", "patch": "@@ -0,0 +1,16 @@\n+/* PR c++/63249 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wall -W -fopenmp\" } */\n+\n+int\n+foo (int *v, int A, int B)\t/* { dg-bogus \"set but not used\" } */\n+{\n+  int r = 0;\n+  int a = 2;\t\t\t/* { dg-bogus \"set but not used\" } */\n+  int b = 4;\t\t\t/* { dg-bogus \"set but not used\" } */\n+#pragma omp target map(to: v[a:b])\n+  r |= v[3];\n+#pragma omp target map(to: v[A:B])\n+  r |= v[3];\n+  return r;\n+}"}, {"sha": "80f763a4c5fd03421c8b7cef912a884d999f4168", "filename": "gcc/testsuite/g++.dg/gomp/pr63249.C", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90c0a5980ceedb40f9f7536c32f17856997435a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr63249.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90c0a5980ceedb40f9f7536c32f17856997435a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr63249.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr63249.C?ref=d90c0a5980ceedb40f9f7536c32f17856997435a", "patch": "@@ -0,0 +1,35 @@\n+// PR c++/63249\n+// { dg-do compile }\n+// { dg-options \"-Wall -W -fopenmp\" }\n+\n+template <int N>\n+int\n+foo (int *v, int A, int B)\t// { dg-bogus \"set but not used\" }\n+{\n+  int r = 0;\n+  int a = 2;\t\t\t// { dg-bogus \"set but not used\" }\n+  int b = 4;\t\t\t// { dg-bogus \"set but not used\" }\n+#pragma omp target map(to: v[a:b])\n+  r |= v[3];\n+#pragma omp target map(to: v[A:B])\n+  r |= v[3];\n+  return r;\n+}\n+\n+template <typename T>\n+int\n+bar (T *v, T A, T B)\t\t// { dg-bogus \"set but not used\" }\n+{\n+  T r = 0, a = 2, b = 4;\t// { dg-bogus \"set but not used\" }\n+#pragma omp target map(to: v[a:b])\n+  r |= v[3];\n+#pragma omp target map(to: v[A:B])\n+  r |= v[3];\n+  return r;\n+}\n+\n+int\n+baz (int *v, int A, int B)\n+{\n+  return foo<0> (v, A, B) + bar (v, A, B);\n+}"}]}