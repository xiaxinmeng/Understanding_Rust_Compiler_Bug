{"sha": "046d30f4e00a67db11604081259956883bc0ec1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ2ZDMwZjRlMDBhNjdkYjExNjA0MDgxMjU5OTU2ODgzYmMwZWMxZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-06-18T17:22:53Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-06-18T17:22:53Z"}, "message": "stl_list.h: Rename guard macro consistently with file name.\n\n2007-06-18  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/stl_list.h: Rename guard macro consistently with\n\tfile name.\n\t* include/bits/stl_algobase.h: Likewise.\n\t* include/bits/stl_map.h: Likewise.\n\t* include/bits/stl_queue.h: Likewise.\n\t* include/bits/stl_set.h: Likewise.\n\t* include/bits/stl_stack.h: Likewise.\n\t* include/bits/stl_iterator_base_types.h: Likewise.\n\t* include/bits/stl_multimap.h: Likewise.\n\t* include/bits/stl_pair.h: Likewise.\n\t* include/bits/stl_vector.h: Likewise.\n\t* include/bits/stl_deque.h: Likewise.\n\t* include/bits/stl_multiset.h: Likewise.\n\t* include/bits/stl_iterator_base_funcs.h: Likewise.\n\t* include/bits/stl_algo.h: Likewise.\n\t* include/bits/stl_iterator.h: Likewise.\n\t* include/bits/stl_tempbuf.h: Likewise.\n\t* include/bits/stl_bvector.h: Likewise.\n\t* include/bits/stl_function.h: Likewise.\n\t* include/bits/stl_tree.h: Likewise.\n\nFrom-SVN: r125815", "tree": {"sha": "839a0bca548970371e230f35b47a79321623b8a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/839a0bca548970371e230f35b47a79321623b8a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/046d30f4e00a67db11604081259956883bc0ec1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/046d30f4e00a67db11604081259956883bc0ec1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/046d30f4e00a67db11604081259956883bc0ec1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/046d30f4e00a67db11604081259956883bc0ec1e/comments", "author": null, "committer": null, "parents": [{"sha": "8b9d606b3978407e04da737409fa16792f879bf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b9d606b3978407e04da737409fa16792f879bf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b9d606b3978407e04da737409fa16792f879bf4"}], "stats": {"total": 150, "additions": 89, "deletions": 61}, "files": [{"sha": "1725e68143b37be0edd72735cd090af2ef6a28e5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -1,3 +1,26 @@\n+2007-06-18  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/stl_list.h: Rename guard macro consistently with\n+\tfile name.\n+\t* include/bits/stl_algobase.h: Likewise.\n+\t* include/bits/stl_map.h: Likewise.\n+\t* include/bits/stl_queue.h: Likewise.\n+\t* include/bits/stl_set.h: Likewise.\n+\t* include/bits/stl_stack.h: Likewise.\n+\t* include/bits/stl_iterator_base_types.h: Likewise.\n+\t* include/bits/stl_multimap.h: Likewise.\n+\t* include/bits/stl_pair.h: Likewise.\n+\t* include/bits/stl_vector.h: Likewise.\n+\t* include/bits/stl_deque.h: Likewise.\n+\t* include/bits/stl_multiset.h: Likewise.\n+\t* include/bits/stl_iterator_base_funcs.h: Likewise.\n+\t* include/bits/stl_algo.h: Likewise.\n+\t* include/bits/stl_iterator.h: Likewise.\n+\t* include/bits/stl_tempbuf.h: Likewise.\n+\t* include/bits/stl_bvector.h: Likewise.\n+\t* include/bits/stl_function.h: Likewise.\n+\t* include/bits/stl_tree.h: Likewise.\n+\n 2007-06-17  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* config/cpu/m68k/atomicity.h: Use __mcfisaa__, __mcfisaaplus__,"}, {"sha": "96b6602f5871c4be99d5b09f57775a6986ce1079", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -59,8 +59,8 @@\n  *  You should not attempt to use it directly.\n  */\n \n-#ifndef _ALGO_H\n-#define _ALGO_H 1\n+#ifndef _STL_ALGO_H\n+#define _STL_ALGO_H 1\n \n #include <bits/stl_heap.h>\n #include <bits/stl_tempbuf.h>  // for _Temporary_buffer\n@@ -5516,4 +5516,4 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n _GLIBCXX_END_NAMESPACE\n \n-#endif /* _ALGO_H */\n+#endif /* _STL_ALGO_H */"}, {"sha": "fd9592af6886941286e903ff5e03db855d9ea44f", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -59,8 +59,8 @@\n  *  You should not attempt to use it directly.\n  */\n \n-#ifndef _ALGOBASE_H\n-#define _ALGOBASE_H 1\n+#ifndef _STL_ALGOBASE_H\n+#define _STL_ALGOBASE_H 1\n \n #include <bits/c++config.h>\n #include <cstddef>"}, {"sha": "a792b744c1f5d397503fc694913076d644fa2da2", "filename": "libstdc++-v3/include/bits/stl_bvector.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_bvector.h?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -59,8 +59,8 @@\n  *  You should not attempt to use it directly.\n  */\n \n-#ifndef _BVECTOR_H\n-#define _BVECTOR_H 1\n+#ifndef _STL_BVECTOR_H\n+#define _STL_BVECTOR_H 1\n \n _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD)\n "}, {"sha": "890afc58d41da87b56f43879ac138cba1f93e9ba", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -59,8 +59,8 @@\n  *  You should not attempt to use it directly.\n  */\n \n-#ifndef _DEQUE_H\n-#define _DEQUE_H 1\n+#ifndef _STL_DEQUE_H\n+#define _STL_DEQUE_H 1\n \n #include <bits/concept_check.h>\n #include <bits/stl_iterator_base_types.h>\n@@ -1600,4 +1600,4 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD)\n \n _GLIBCXX_END_NESTED_NAMESPACE\n \n-#endif /* _DEQUE_H */\n+#endif /* _STL_DEQUE_H */"}, {"sha": "9867abe95f470c5f3356f8fff82fa125d358f84e", "filename": "libstdc++-v3/include/bits/stl_function.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_function.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_function.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_function.h?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -1,6 +1,7 @@\n // Functor implementations -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2004, 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -58,8 +59,8 @@\n  *  You should not attempt to use it directly.\n  */\n \n-#ifndef _FUNCTION_H\n-#define _FUNCTION_H 1\n+#ifndef _STL_FUNCTION_H\n+#define _STL_FUNCTION_H 1\n \n _GLIBCXX_BEGIN_NAMESPACE(std)\n \n@@ -752,4 +753,4 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n _GLIBCXX_END_NAMESPACE\n \n-#endif /* _FUNCTION_H */\n+#endif /* _STL_FUNCTION_H */"}, {"sha": "d7c092602341732474a14b08640c34ddd535c50e", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -63,8 +63,8 @@\n  *  supporting functions and overloaded operators.\n  */\n \n-#ifndef _ITERATOR_H\n-#define _ITERATOR_H 1\n+#ifndef _STL_ITERATOR_H\n+#define _STL_ITERATOR_H 1\n \n #include <bits/cpp_type_traits.h>\n #include <ext/type_traits.h>"}, {"sha": "dbdca22e6e934843387697dd67e36416941bcc41", "filename": "libstdc++-v3/include/bits/stl_iterator_base_funcs.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_funcs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_funcs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_funcs.h?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -1,6 +1,6 @@\n // Functions used by iterators -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -62,8 +62,8 @@\n  *  functions, such as distance() and advance().\n  */\n \n-#ifndef _ITERATOR_BASE_FUNCS_H\n-#define _ITERATOR_BASE_FUNCS_H 1\n+#ifndef _STL_ITERATOR_BASE_FUNCS_H\n+#define _STL_ITERATOR_BASE_FUNCS_H 1\n \n #pragma GCC system_header\n #include <bits/concept_check.h>\n@@ -179,4 +179,4 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n _GLIBCXX_END_NAMESPACE\n \n-#endif /* _ITERATOR_BASE_FUNCS_H */\n+#endif /* _STL_ITERATOR_BASE_FUNCS_H */"}, {"sha": "785abefdd34cc673f8b3bd3bf545c47f3ad79578", "filename": "libstdc++-v3/include/bits/stl_iterator_base_types.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_types.h?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -62,8 +62,8 @@\n  *  such as iterator_traits and struct iterator.\n  */\n \n-#ifndef _ITERATOR_BASE_TYPES_H\n-#define _ITERATOR_BASE_TYPES_H 1\n+#ifndef _STL_ITERATOR_BASE_TYPES_H\n+#define _STL_ITERATOR_BASE_TYPES_H 1\n \n #pragma GCC system_header\n \n@@ -170,5 +170,5 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n _GLIBCXX_END_NAMESPACE\n \n-#endif /* _ITERATOR_BASE_TYPES_H */\n+#endif /* _STL_ITERATOR_BASE_TYPES_H */\n "}, {"sha": "44327dab4e676f08f794079910b5f141173d3230", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -59,8 +59,8 @@\n  *  You should not attempt to use it directly.\n  */\n \n-#ifndef _LIST_H\n-#define _LIST_H 1\n+#ifndef _STL_LIST_H\n+#define _STL_LIST_H 1\n \n #include <bits/concept_check.h>\n \n@@ -1258,5 +1258,5 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD)\n \n _GLIBCXX_END_NESTED_NAMESPACE\n \n-#endif /* _LIST_H */\n+#endif /* _STL_LIST_H */\n "}, {"sha": "741b9e6c16f38e9ac6f04de75f1550748f1a78d9", "filename": "libstdc++-v3/include/bits/stl_map.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -59,8 +59,8 @@\n  *  You should not attempt to use it directly.\n  */\n \n-#ifndef _MAP_H\n-#define _MAP_H 1\n+#ifndef _STL_MAP_H\n+#define _STL_MAP_H 1\n \n #include <bits/functexcept.h>\n #include <bits/concept_check.h>\n@@ -737,4 +737,4 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD)\n \n _GLIBCXX_END_NESTED_NAMESPACE\n \n-#endif /* _MAP_H */\n+#endif /* _STL_MAP_H */"}, {"sha": "67d81cbd7c729b191db5b30f69f2fe780740b3e4", "filename": "libstdc++-v3/include/bits/stl_multimap.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -1,6 +1,7 @@\n // Multimap implementation -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2004, 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -58,8 +59,8 @@\n  *  You should not attempt to use it directly.\n  */\n \n-#ifndef _MULTIMAP_H\n-#define _MULTIMAP_H 1\n+#ifndef _STL_MULTIMAP_H\n+#define _STL_MULTIMAP_H 1\n \n #include <bits/concept_check.h>\n \n@@ -667,4 +668,4 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD)\n \n _GLIBCXX_END_NESTED_NAMESPACE\n \n-#endif /* _MULTIMAP_H */\n+#endif /* _STL_MULTIMAP_H */"}, {"sha": "3f88e5348938928bd8ba796ed2c25f4e00dbb579", "filename": "libstdc++-v3/include/bits/stl_multiset.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multiset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multiset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multiset.h?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -1,6 +1,7 @@\n // Multiset implementation -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2004, 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -58,8 +59,8 @@\n  *  You should not attempt to use it directly.\n  */\n \n-#ifndef _MULTISET_H\n-#define _MULTISET_H 1\n+#ifndef _STL_MULTISET_H\n+#define _STL_MULTISET_H 1\n \n #include <bits/concept_check.h>\n \n@@ -562,4 +563,4 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD)\n \n _GLIBCXX_END_NESTED_NAMESPACE\n \n-#endif /* _MULTISET_H */\n+#endif /* _STL_MULTISET_H */"}, {"sha": "bdc6723f748fb25c0560bb02c38ad2fde535faa7", "filename": "libstdc++-v3/include/bits/stl_pair.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -1,6 +1,7 @@\n // Pair implementation -*- C++ -*-\n \n-// Copyright (C) 2001, 2004, 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -58,8 +59,8 @@\n  *  You should not attempt to use it directly.\n  */\n \n-#ifndef _PAIR_H\n-#define _PAIR_H 1\n+#ifndef _STL_PAIR_H\n+#define _STL_PAIR_H 1\n \n _GLIBCXX_BEGIN_NAMESPACE(std)\n \n@@ -146,4 +147,4 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n _GLIBCXX_END_NAMESPACE\n \n-#endif /* _PAIR_H */\n+#endif /* _STL_PAIR_H */"}, {"sha": "469f9ec17be0691a5eea487cebb550417289efae", "filename": "libstdc++-v3/include/bits/stl_queue.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -1,6 +1,6 @@\n // Queue implementation -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -59,8 +59,8 @@\n  *  You should not attempt to use it directly.\n  */\n \n-#ifndef _QUEUE_H\n-#define _QUEUE_H 1\n+#ifndef _STL_QUEUE_H\n+#define _STL_QUEUE_H 1\n \n #include <bits/concept_check.h>\n #include <debug/debug.h>\n@@ -440,4 +440,4 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n _GLIBCXX_END_NAMESPACE\n \n-#endif /* _QUEUE_H */\n+#endif /* _STL_QUEUE_H */"}, {"sha": "d2d8a6d47c46fc093e40b7f67a9b2be815717e96", "filename": "libstdc++-v3/include/bits/stl_set.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_set.h?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -1,6 +1,7 @@\n // Set implementation -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2004, 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -58,8 +59,8 @@\n  *  You should not attempt to use it directly.\n  */\n \n-#ifndef _SET_H\n-#define _SET_H 1\n+#ifndef _STL_SET_H\n+#define _STL_SET_H 1\n \n #include <bits/concept_check.h>\n \n@@ -575,4 +576,4 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD)\n \n _GLIBCXX_END_NESTED_NAMESPACE\n \n-#endif /* _SET_H */\n+#endif /* _STL_SET_H */"}, {"sha": "4baca258208ea875a3d184bde114ab65fb7dfa1a", "filename": "libstdc++-v3/include/bits/stl_stack.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -1,6 +1,6 @@\n // Stack implementation -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -59,8 +59,8 @@\n  *  You should not attempt to use it directly.\n  */\n \n-#ifndef _STACK_H\n-#define _STACK_H 1\n+#ifndef _STL_STACK_H\n+#define _STL_STACK_H 1\n \n #include <bits/concept_check.h>\n #include <debug/debug.h>\n@@ -258,4 +258,4 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n _GLIBCXX_END_NAMESPACE\n \n-#endif /* _STACK_H */\n+#endif /* _STL_STACK_H */"}, {"sha": "21adc70c9b3c98460d58d3f01d325e56ba114f13", "filename": "libstdc++-v3/include/bits/stl_tempbuf.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tempbuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tempbuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tempbuf.h?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -59,8 +59,8 @@\n  *  You should not attempt to use it directly.\n  */\n \n-#ifndef _TEMPBUF_H\n-#define _TEMPBUF_H 1\n+#ifndef _STL_TEMPBUF_H\n+#define _STL_TEMPBUF_H 1\n \n #include <bits/stl_algobase.h>\n #include <bits/stl_construct.h>\n@@ -220,5 +220,5 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n _GLIBCXX_END_NAMESPACE\n \n-#endif /* _TEMPBUF_H */\n+#endif /* _STL_TEMPBUF_H */\n "}, {"sha": "8437c9a99526bfc251036ed93545cda85104c601", "filename": "libstdc++-v3/include/bits/stl_tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -61,8 +61,8 @@\n  *  You should not attempt to use it directly.\n  */\n \n-#ifndef _TREE_H\n-#define _TREE_H 1\n+#ifndef _STL_TREE_H\n+#define _STL_TREE_H 1\n \n #include <bits/stl_algobase.h>\n #include <bits/allocator.h>"}, {"sha": "c294f4e92f471b3c748bc067598fd3eebbf039de", "filename": "libstdc++-v3/include/bits/stl_vector.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/046d30f4e00a67db11604081259956883bc0ec1e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h?ref=046d30f4e00a67db11604081259956883bc0ec1e", "patch": "@@ -59,8 +59,8 @@\n  *  You should not attempt to use it directly.\n  */\n \n-#ifndef _VECTOR_H\n-#define _VECTOR_H 1\n+#ifndef _STL_VECTOR_H\n+#define _STL_VECTOR_H 1\n \n #include <bits/stl_iterator_base_funcs.h>\n #include <bits/functexcept.h>\n@@ -1008,4 +1008,4 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD)\n \n _GLIBCXX_END_NESTED_NAMESPACE\n \n-#endif /* _VECTOR_H */\n+#endif /* _STL_VECTOR_H */"}]}