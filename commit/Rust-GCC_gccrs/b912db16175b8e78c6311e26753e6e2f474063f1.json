{"sha": "b912db16175b8e78c6311e26753e6e2f474063f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkxMmRiMTYxNzViOGU3OGM2MzExZTI2NzUzZTZlMmY0NzQwNjNmMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T07:56:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T07:56:05Z"}, "message": "[multiple changes]\n\n2017-04-25  Arnaud Charlet  <charlet@adacore.com>\n\n\t* rtsfind.ads (SPARK_Implicit_Load): New procedure for forced\n\tloading of an entity.\n\t* rtsfind.adb (SPARK_Implicit_Load): Body with a pattern\n\tpreviously repeated in the analysis.\n\t* sem_ch9.adb (Analyze_Protected_Type_Declaration): use new\n\tprocedure SPARK_Implicit_Load.\t(Analyze_Task_Type_Declaration):\n\tuse new procedure SPARK_Implicit_Load.\n\t* sem_ch10.adb (Analyze_Compilation_Unit): Use new procedure\n\tSPARK_Implicit_Load.\n\n2017-04-25  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_util.adb (New_Copy_Tree): By default\n\tcopying of defining identifiers is prohibited because\n\tthis would introduce an entirely new entity into the\n\ttree. This patch introduces an exception to this general\n\trule: the declaration of constants and variables located in\n\tExpression_With_Action nodes.\n\t(Copy_Itype_With_Replacement): Renamed as Copy_Entity_With_Replacement.\n\t(In_Map): New subprogram.\n\t(Visit_Entity): New subprogram.\n\t(Visit_Node): Handle EWA_Level,\n\tEWA_Inner_Scope_Level, and take care of defining entities defined\n\tin Expression_With_Action nodes.\n\n2017-04-25  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch6.adb: minor comment edit.\n\t* sinfo.ads, sinfo.adb: New Null_Statement attribute for null\n\tprocedure specifications that come from source.\n\t* par-ch6.adb (P_Subprogram, case of a null procedure): Set new\n\tNull_Statement attribute.\n\t* par_sco.adb (Traverse_Declarations_Or_Statements): For a null\n\tprocedure, generate statement SCO for the generated NULL statement.\n\t* sem_ch6.adb (Analyze_Null_Procedure): Use null statement from\n\tparser, if available.\n\nFrom-SVN: r247136", "tree": {"sha": "3a79b81ad795953c9a971e517072177b9de216ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a79b81ad795953c9a971e517072177b9de216ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b912db16175b8e78c6311e26753e6e2f474063f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b912db16175b8e78c6311e26753e6e2f474063f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b912db16175b8e78c6311e26753e6e2f474063f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b912db16175b8e78c6311e26753e6e2f474063f1/comments", "author": null, "committer": null, "parents": [{"sha": "e57136da2fe3d4a82ad5c88f96cebebf2a007caa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e57136da2fe3d4a82ad5c88f96cebebf2a007caa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e57136da2fe3d4a82ad5c88f96cebebf2a007caa"}], "stats": {"total": 371, "additions": 288, "deletions": 83}, "files": [{"sha": "3df9685fc740084c876328583c7785456dbb284f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b912db16175b8e78c6311e26753e6e2f474063f1", "patch": "@@ -1,3 +1,42 @@\n+2017-04-25  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* rtsfind.ads (SPARK_Implicit_Load): New procedure for forced\n+\tloading of an entity.\n+\t* rtsfind.adb (SPARK_Implicit_Load): Body with a pattern\n+\tpreviously repeated in the analysis.\n+\t* sem_ch9.adb (Analyze_Protected_Type_Declaration): use new\n+\tprocedure SPARK_Implicit_Load.\t(Analyze_Task_Type_Declaration):\n+\tuse new procedure SPARK_Implicit_Load.\n+\t* sem_ch10.adb (Analyze_Compilation_Unit): Use new procedure\n+\tSPARK_Implicit_Load.\n+\n+2017-04-25  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_util.adb (New_Copy_Tree): By default\n+\tcopying of defining identifiers is prohibited because\n+\tthis would introduce an entirely new entity into the\n+\ttree. This patch introduces an exception to this general\n+\trule: the declaration of constants and variables located in\n+\tExpression_With_Action nodes.\n+\t(Copy_Itype_With_Replacement): Renamed as Copy_Entity_With_Replacement.\n+\t(In_Map): New subprogram.\n+\t(Visit_Entity): New subprogram.\n+\t(Visit_Node): Handle EWA_Level,\n+\tEWA_Inner_Scope_Level, and take care of defining entities defined\n+\tin Expression_With_Action nodes.\n+\n+2017-04-25  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch6.adb: minor comment edit.\n+\t* sinfo.ads, sinfo.adb: New Null_Statement attribute for null\n+\tprocedure specifications that come from source.\n+\t* par-ch6.adb (P_Subprogram, case of a null procedure): Set new\n+\tNull_Statement attribute.\n+\t* par_sco.adb (Traverse_Declarations_Or_Statements): For a null\n+\tprocedure, generate statement SCO for the generated NULL statement.\n+\t* sem_ch6.adb (Analyze_Null_Procedure): Use null statement from\n+\tparser, if available.\n+\n 2017-04-04  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* system-linux-s390.ads: Use Long_Integer'Size to define"}, {"sha": "cb90fd259cd6ee0bf9d4bc5e5ceb9642012f7d4d", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=b912db16175b8e78c6311e26753e6e2f474063f1", "patch": "@@ -5763,7 +5763,7 @@ package body Exp_Ch6 is\n       --  Ada 2005 (AI-348): Generate body for a null procedure. In most\n       --  cases this is superfluous because calls to it will be automatically\n       --  inlined, but we definitely need the body if preconditions for the\n-      --  procedure are present.\n+      --  procedure are present, or if performing coverage analysis.\n \n       elsif Nkind (Specification (N)) = N_Procedure_Specification\n         and then Null_Present (Specification (N))"}, {"sha": "b0f4b932f8ea8ae8f85a606632d49eef67bde433", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=b912db16175b8e78c6311e26753e6e2f474063f1", "patch": "@@ -607,6 +607,8 @@ package body Ch6 is\n                   Error_Msg_SP (\"only procedures can be null\");\n                else\n                   Set_Null_Present (Specification_Node);\n+                  Set_Null_Statement (Specification_Node,\n+                    New_Node (N_Null_Statement, Prev_Token_Ptr));\n                end if;\n \n                goto Subprogram_Declaration;"}, {"sha": "a3379dd0bc7314f73de781998c90e3314c9b2ba6", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=b912db16175b8e78c6311e26753e6e2f474063f1", "patch": "@@ -1812,13 +1812,15 @@ package body Par_SCO is\n                   Process_Decisions_Defer\n                     (Parameter_Specifications (Spec), 'X');\n \n-                  --  Case of a null procedure: generate a NULL statement SCO\n+                  --  Case of a null procedure: generate SCO for fictitious\n+                  --  NULL statement located at the NULL keyword in the\n+                  --  procedure specification.\n \n                   if Nkind (N) = N_Subprogram_Declaration\n                     and then Nkind (Spec) = N_Procedure_Specification\n                     and then Null_Present (Spec)\n                   then\n-                     Traverse_Degenerate_Subprogram (N);\n+                     Traverse_Degenerate_Subprogram (Null_Statement (Spec));\n \n                   --  Case of an expression function: generate a statement SCO\n                   --  for the expression (and then decision SCOs for any nested"}, {"sha": "39f4654e3e7c2b937b8a13a3b2d79aa821dec3c3", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=b912db16175b8e78c6311e26753e6e2f474063f1", "patch": "@@ -1646,4 +1646,18 @@ package body Rtsfind is\n       end loop;\n    end Set_RTU_Loaded;\n \n+   -------------------------\n+   -- SPARK_Implicit_Load --\n+   -------------------------\n+\n+   procedure SPARK_Implicit_Load (E : RE_Id) is\n+      Unused : Entity_Id;\n+\n+   begin\n+      pragma Assert (GNATprove_Mode);\n+\n+      --  Force loading of a predefined unit\n+      Unused := RTE (E);\n+   end SPARK_Implicit_Load;\n+\n end Rtsfind;"}, {"sha": "cbeb007b97087d74baee6e852987e5c02ef17c7b", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=b912db16175b8e78c6311e26753e6e2f474063f1", "patch": "@@ -3223,4 +3223,9 @@ package Rtsfind is\n    procedure Set_RTU_Loaded (N : Node_Id);\n    --  Register the predefined unit N as already loaded\n \n+   procedure SPARK_Implicit_Load (E : RE_Id);\n+   --  Force loading of the unit containing the entity E; only needed in\n+   --  GNATprove mode when processing code that implicitly references a\n+   --  given entity.\n+\n end Rtsfind;"}, {"sha": "e413079da19f0fcfac0a00c89eaea08445073e30", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=b912db16175b8e78c6311e26753e6e2f474063f1", "patch": "@@ -1145,8 +1145,7 @@ package body Sem_Ch10 is\n                                          N_Function_Instantiation)\n          then\n             declare\n-               Spec   : Node_Id;\n-               Unused : Entity_Id;\n+               Spec : Node_Id;\n \n             begin\n                case Nkind (Unit_Node) is\n@@ -1163,15 +1162,15 @@ package body Sem_Ch10 is\n \n                pragma Assert (Nkind (Spec) in N_Subprogram_Specification);\n \n-               --  Only subprogram with no parameters can act as \"main\", and if\n-               --  it is a function, it needs to return an integer.\n+               --  Main subprogram must have no parameters, and if it is a\n+               --  function, it must return an integer.\n \n                if No (Parameter_Specifications (Spec))\n                  and then (Nkind (Spec) = N_Procedure_Specification\n                              or else\n                            Is_Integer_Type (Etype (Result_Definition (Spec))))\n                then\n-                  Unused := RTE (RE_Interrupt_Priority);\n+                  SPARK_Implicit_Load (RE_Interrupt_Priority);\n                end if;\n             end;\n          end if;"}, {"sha": "de7c92a6dc7beeaa54150f0163d82bd7d418f54a", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=b912db16175b8e78c6311e26753e6e2f474063f1", "patch": "@@ -1370,6 +1370,7 @@ package body Sem_Ch6 is\n       Designator : Entity_Id;\n       Form       : Node_Id;\n       Null_Body  : Node_Id := Empty;\n+      Null_Stmt  : Node_Id := Null_Statement (Spec);\n       Prev       : Entity_Id;\n \n    begin\n@@ -1379,13 +1380,22 @@ package body Sem_Ch6 is\n       --  the first case the body is analyzed at the freeze point, in the other\n       --  it replaces the null procedure declaration.\n \n+      --  For a null procedure that comes from source, a NULL statement is\n+      --  provided by the parser, which carries the source location of the\n+      --  NULL keyword, and has Comes_From_Source set. For a null procedure\n+      --  from expansion, create one now.\n+\n+      if No (Null_Stmt) then\n+         Null_Stmt := Make_Null_Statement (Loc);\n+      end if;\n+\n       Null_Body :=\n         Make_Subprogram_Body (Loc,\n           Specification => New_Copy_Tree (Spec),\n           Declarations  => New_List,\n           Handled_Statement_Sequence =>\n             Make_Handled_Sequence_Of_Statements (Loc,\n-              Statements => New_List (Make_Null_Statement (Loc))));\n+              Statements => New_List (Null_Stmt)));\n \n       --  Create new entities for body and formals\n "}, {"sha": "a22e72742974a1231e9f4a49d74d67a0a881ea42", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 3, "deletions": 18, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=b912db16175b8e78c6311e26753e6e2f474063f1", "patch": "@@ -1169,12 +1169,7 @@ package body Sem_Ch9 is\n       --  force the loading of the Ada.Real_Time package.\n \n       if GNATprove_Mode then\n-         declare\n-            Unused : Entity_Id;\n-\n-         begin\n-            Unused := RTE (RO_RT_Time);\n-         end;\n+         SPARK_Implicit_Load (RO_RT_Time);\n       end if;\n    end Analyze_Delay_Relative;\n \n@@ -2263,12 +2258,7 @@ package body Sem_Ch9 is\n       --  calls originating from protected subprograms and entries.\n \n       if GNATprove_Mode then\n-         declare\n-            Unused : Entity_Id;\n-\n-         begin\n-            Unused := RTE (RE_Interrupt_Priority);\n-         end;\n+         SPARK_Implicit_Load (RE_Interrupt_Priority);\n       end if;\n    end Analyze_Protected_Type_Declaration;\n \n@@ -3215,12 +3205,7 @@ package body Sem_Ch9 is\n       --  calls originating from tasks.\n \n       if GNATprove_Mode then\n-         declare\n-            Unused : Entity_Id;\n-\n-         begin\n-            Unused := RTE (RE_Interrupt_Priority);\n-         end;\n+         SPARK_Implicit_Load (RE_Interrupt_Priority);\n       end if;\n    end Analyze_Task_Type_Declaration;\n "}, {"sha": "4203eac98c117eca4ef800283c7ac3e4f782f119", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 152, "deletions": 28, "changes": 180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=b912db16175b8e78c6311e26753e6e2f474063f1", "patch": "@@ -16227,6 +16227,17 @@ package body Sem_Util is\n       New_Sloc  : Source_Ptr := No_Location;\n       New_Scope : Entity_Id  := Empty) return Node_Id\n    is\n+      EWA_Level             : Nat := 0;\n+      --  By default copying of defining identifiers is prohibited because this\n+      --  would introduce an entirely new entity into the tree. The exception\n+      --  to this general rule are declaration of constants and variables\n+      --  located in Expression_With_Action nodes.\n+\n+      EWA_Inner_Scope_Level : Nat := 0;\n+      --  Level of internal scope of defined in EWAs. Used to avoid creating\n+      --  variables for declarations located in blocks or subprograms defined\n+      --  in Expression_With_Action nodes.\n+\n       ------------------------------------\n       -- Auxiliary Data and Subprograms --\n       ------------------------------------\n@@ -16297,21 +16308,30 @@ package body Sem_Util is\n         (Old_Elist : Elist_Id) return Elist_Id;\n       --  Called during second phase to copy element list doing replacements\n \n-      procedure Copy_Itype_With_Replacement (New_Itype : Entity_Id);\n-      --  Called during the second phase to process a copied Itype. The actual\n+      procedure Copy_Entity_With_Replacement (New_Entity : Entity_Id);\n+      --  Called during the second phase to process a copied Entity. The actual\n       --  copy happened during the first phase (so that we could make the entry\n       --  in the mapping), but we still have to deal with the descendants of\n-      --  the copied Itype and copy them where necessary.\n+      --  the copied Entity and copy them where necessary.\n \n       function Copy_List_With_Replacement (Old_List : List_Id) return List_Id;\n       --  Called during second phase to copy list doing replacements\n \n       function Copy_Node_With_Replacement (Old_Node : Node_Id) return Node_Id;\n       --  Called during second phase to copy node doing replacements\n \n+      function In_Map (E : Entity_Id) return Boolean;\n+      --  Return True if E is one of the old entities specified in the set of\n+      --  mappings to be applied to entities in the tree (ie. Map).\n+\n       procedure Visit_Elist (E : Elist_Id);\n       --  Called during first phase to visit all elements of an Elist\n \n+      procedure Visit_Entity (Old_Entity : Entity_Id);\n+      --  Called during first phase to visit subsidiary fields of a defining\n+      --  entity which is not an itype, and also create a copy and make an\n+      --  entry in the replacement map for the new copy.\n+\n       procedure Visit_Field (F : Union_Id; N : Node_Id);\n       --  Visit a single field, recursing to call Visit_Node or Visit_List if\n       --  the field is a syntactic descendant of the current node (i.e. its\n@@ -16420,51 +16440,51 @@ package body Sem_Util is\n          return New_Elist;\n       end Copy_Elist_With_Replacement;\n \n-      ---------------------------------\n-      -- Copy_Itype_With_Replacement --\n-      ---------------------------------\n+      ----------------------------------\n+      -- Copy_Entity_With_Replacement --\n+      ----------------------------------\n \n       --  This routine exactly parallels its phase one analog Visit_Itype,\n \n-      procedure Copy_Itype_With_Replacement (New_Itype : Entity_Id) is\n+      procedure Copy_Entity_With_Replacement (New_Entity : Entity_Id) is\n       begin\n          --  Translate Next_Entity, Scope, and Etype fields, in case they\n          --  reference entities that have been mapped into copies.\n \n-         Set_Next_Entity (New_Itype, Assoc (Next_Entity (New_Itype)));\n-         Set_Etype       (New_Itype, Assoc (Etype       (New_Itype)));\n+         Set_Next_Entity (New_Entity, Assoc (Next_Entity (New_Entity)));\n+         Set_Etype       (New_Entity, Assoc (Etype       (New_Entity)));\n \n          if Present (New_Scope) then\n-            Set_Scope    (New_Itype, New_Scope);\n+            Set_Scope    (New_Entity, New_Scope);\n          else\n-            Set_Scope    (New_Itype, Assoc (Scope       (New_Itype)));\n+            Set_Scope    (New_Entity, Assoc (Scope       (New_Entity)));\n          end if;\n \n          --  Copy referenced fields\n \n-         if Is_Discrete_Type (New_Itype) then\n-            Set_Scalar_Range (New_Itype,\n-              Copy_Node_With_Replacement (Scalar_Range (New_Itype)));\n+         if Is_Discrete_Type (New_Entity) then\n+            Set_Scalar_Range (New_Entity,\n+              Copy_Node_With_Replacement (Scalar_Range (New_Entity)));\n \n-         elsif Has_Discriminants (Base_Type (New_Itype)) then\n-            Set_Discriminant_Constraint (New_Itype,\n+         elsif Has_Discriminants (Base_Type (New_Entity)) then\n+            Set_Discriminant_Constraint (New_Entity,\n               Copy_Elist_With_Replacement\n-                (Discriminant_Constraint (New_Itype)));\n+                (Discriminant_Constraint (New_Entity)));\n \n-         elsif Is_Array_Type (New_Itype) then\n-            if Present (First_Index (New_Itype)) then\n-               Set_First_Index (New_Itype,\n+         elsif Is_Array_Type (New_Entity) then\n+            if Present (First_Index (New_Entity)) then\n+               Set_First_Index (New_Entity,\n                  First (Copy_List_With_Replacement\n-                         (List_Containing (First_Index (New_Itype)))));\n+                         (List_Containing (First_Index (New_Entity)))));\n             end if;\n \n-            if Is_Packed (New_Itype) then\n-               Set_Packed_Array_Impl_Type (New_Itype,\n+            if Is_Packed (New_Entity) then\n+               Set_Packed_Array_Impl_Type (New_Entity,\n                  Copy_Node_With_Replacement\n-                   (Packed_Array_Impl_Type (New_Itype)));\n+                   (Packed_Array_Impl_Type (New_Entity)));\n             end if;\n          end if;\n-      end Copy_Itype_With_Replacement;\n+      end Copy_Entity_With_Replacement;\n \n       --------------------------------\n       -- Copy_List_With_Replacement --\n@@ -16726,6 +16746,31 @@ package body Sem_Util is\n          return New_Node;\n       end Copy_Node_With_Replacement;\n \n+      ------------\n+      -- In_Map --\n+      ------------\n+\n+      function In_Map (E : Entity_Id) return Boolean is\n+         Elmt : Elmt_Id;\n+         Ent  : Entity_Id;\n+\n+      begin\n+         if Present (Map) then\n+            Elmt := First_Elmt (Map);\n+            while Present (Elmt) loop\n+               Ent := Node (Elmt);\n+\n+               if Ent = E then\n+                  return True;\n+               end if;\n+\n+               Next_Elmt (Elmt);\n+               Next_Elmt (Elmt);\n+            end loop;\n+         end if;\n+\n+         return False;\n+      end In_Map;\n       -------------------\n       -- New_Copy_Hash --\n       -------------------\n@@ -16752,6 +16797,44 @@ package body Sem_Util is\n          end if;\n       end Visit_Elist;\n \n+      ------------------\n+      -- Visit_Entity --\n+      ------------------\n+\n+      procedure Visit_Entity (Old_Entity : Entity_Id) is\n+         New_E : Entity_Id;\n+\n+      begin\n+         pragma Assert (not Is_Itype (Old_Entity));\n+         pragma Assert (Nkind (Old_Entity) in N_Entity);\n+\n+         --  Restrict entity creation to variable declarations. There is no\n+         --  need to create variables declared in inner scopes.\n+\n+         if not Ekind_In (Old_Entity, E_Constant, E_Variable)\n+           or else EWA_Inner_Scope_Level > 0\n+         then\n+            return;\n+         end if;\n+\n+         New_E := New_Copy (Old_Entity);\n+\n+         --  The new entity has all the attributes of the old one, and we\n+         --  just copy the contents of the entity. However, the back-end\n+         --  needs different names for debugging purposes, so we create a\n+         --  new internal name for it in all cases.\n+\n+         Set_Chars (New_E, New_Internal_Name ('T'));\n+\n+         --  Add new association to map\n+\n+         NCT_Assoc.Set (Old_Entity, New_E);\n+\n+         --  Visit descendants that eventually get copied\n+\n+         Visit_Field (Union_Id (Etype (Old_Entity)), Old_Entity);\n+      end Visit_Entity;\n+\n       -----------------\n       -- Visit_Field --\n       -----------------\n@@ -16931,9 +17014,19 @@ package body Sem_Util is\n \n       procedure Visit_Node (N : Node_Or_Entity_Id) is\n       begin\n+         if Nkind (N) = N_Expression_With_Actions then\n+            EWA_Level := EWA_Level + 1;\n+\n+         elsif EWA_Level > 0\n+           and then Nkind_In (N, N_Block_Statement,\n+                                 N_Subprogram_Body,\n+                                 N_Subprogram_Declaration)\n+         then\n+            EWA_Inner_Scope_Level := EWA_Inner_Scope_Level + 1;\n+\n          --  Handle case of an Itype, which must be copied\n \n-         if Nkind (N) in N_Entity and then Is_Itype (N) then\n+         elsif Nkind (N) in N_Entity and then Is_Itype (N) then\n \n             --  Nothing to do if already in the list. This can happen with an\n             --  Itype entity that appears more than once in the tree. Note that\n@@ -16944,6 +17037,18 @@ package body Sem_Util is\n             end if;\n \n             Visit_Itype (N);\n+\n+         --  Handle defining entities in Expression_With_Action nodes\n+\n+         elsif Nkind (N) in N_Entity and then EWA_Level > 0 then\n+\n+            --  Nothing to do if already in the hash table\n+\n+            if Present (NCT_Assoc.Get (Entity_Id (N))) then\n+               return;\n+            end if;\n+\n+            Visit_Entity (N);\n          end if;\n \n          --  Visit descendants\n@@ -16953,6 +17058,17 @@ package body Sem_Util is\n          Visit_Field (Field3 (N), N);\n          Visit_Field (Field4 (N), N);\n          Visit_Field (Field5 (N), N);\n+\n+         if EWA_Level > 0\n+           and then Nkind_In (N, N_Block_Statement,\n+                                 N_Subprogram_Body,\n+                                 N_Subprogram_Declaration)\n+         then\n+            EWA_Inner_Scope_Level := EWA_Inner_Scope_Level - 1;\n+\n+         elsif Nkind (N) = N_Expression_With_Actions then\n+            EWA_Level := EWA_Level - 1;\n+         end if;\n       end Visit_Node;\n \n    --  Start of processing for New_Copy_Tree\n@@ -16975,8 +17091,16 @@ package body Sem_Util is\n       begin\n          NCT_Assoc.Get_First (Old_E, New_E);\n          while Present (New_E) loop\n-            if Is_Itype (New_E) then\n-               Copy_Itype_With_Replacement (New_E);\n+\n+            --  Skip entities that were not created in the first phase (that\n+            --  is, old entities specified by the caller in the set of mappings\n+            --  to be applied to the tree).\n+\n+            if Is_Itype (New_E)\n+              or else No (Map)\n+              or else not In_Map (Old_E)\n+            then\n+               Copy_Entity_With_Replacement (New_E);\n             end if;\n \n             NCT_Assoc.Get_Next (Old_E, New_E);"}, {"sha": "400ac4219329095f7b2e226ec33ba52f400b4b5a", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 36, "deletions": 20, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=b912db16175b8e78c6311e26753e6e2f474063f1", "patch": "@@ -2472,16 +2472,6 @@ package body Sinfo is\n       return Flag18 (N);\n    end Non_Aliased_Prefix;\n \n-   function Null_Present\n-      (N : Node_Id) return Boolean is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_Component_List\n-        or else NT (N).Nkind = N_Procedure_Specification\n-        or else NT (N).Nkind = N_Record_Definition);\n-      return Flag13 (N);\n-   end Null_Present;\n-\n    function Null_Excluding_Subtype\n       (N : Node_Id) return Boolean is\n    begin\n@@ -2519,6 +2509,16 @@ package body Sinfo is\n       return Flag14 (N);\n    end Null_Exclusion_In_Return_Present;\n \n+   function Null_Present\n+      (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Component_List\n+        or else NT (N).Nkind = N_Procedure_Specification\n+        or else NT (N).Nkind = N_Record_Definition);\n+      return Flag13 (N);\n+   end Null_Present;\n+\n    function Null_Record_Present\n       (N : Node_Id) return Boolean is\n    begin\n@@ -2528,6 +2528,14 @@ package body Sinfo is\n       return Flag17 (N);\n    end Null_Record_Present;\n \n+   function Null_Statement\n+      (N : Node_Id) return Node_Id is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Procedure_Specification);\n+      return Node2 (N);\n+   end Null_Statement;\n+\n    function Object_Definition\n       (N : Node_Id) return Node_Id is\n    begin\n@@ -5774,16 +5782,6 @@ package body Sinfo is\n       Set_Flag18 (N, Val);\n    end Set_Non_Aliased_Prefix;\n \n-   procedure Set_Null_Present\n-      (N : Node_Id; Val : Boolean := True) is\n-   begin\n-      pragma Assert (False\n-        or else NT (N).Nkind = N_Component_List\n-        or else NT (N).Nkind = N_Procedure_Specification\n-        or else NT (N).Nkind = N_Record_Definition);\n-      Set_Flag13 (N, Val);\n-   end Set_Null_Present;\n-\n    procedure Set_Null_Excluding_Subtype\n       (N : Node_Id; Val : Boolean := True) is\n    begin\n@@ -5821,6 +5819,16 @@ package body Sinfo is\n       Set_Flag14 (N, Val);\n    end Set_Null_Exclusion_In_Return_Present;\n \n+   procedure Set_Null_Present\n+      (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Component_List\n+        or else NT (N).Nkind = N_Procedure_Specification\n+        or else NT (N).Nkind = N_Record_Definition);\n+      Set_Flag13 (N, Val);\n+   end Set_Null_Present;\n+\n    procedure Set_Null_Record_Present\n       (N : Node_Id; Val : Boolean := True) is\n    begin\n@@ -5830,6 +5838,14 @@ package body Sinfo is\n       Set_Flag17 (N, Val);\n    end Set_Null_Record_Present;\n \n+   procedure Set_Null_Statement\n+      (N : Node_Id; Val : Node_Id) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Procedure_Specification);\n+      Set_Node2 (N, Val);\n+   end Set_Null_Statement;\n+\n    procedure Set_Object_Definition\n       (N : Node_Id; Val : Node_Id) is\n    begin"}, {"sha": "a1741fb0d560d06f6790b1d0908d30d137daf0bf", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b912db16175b8e78c6311e26753e6e2f474063f1/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=b912db16175b8e78c6311e26753e6e2f474063f1", "patch": "@@ -5155,6 +5155,7 @@ package Sinfo is\n       --  N_Procedure_Specification\n       --  Sloc points to PROCEDURE\n       --  Defining_Unit_Name (Node1)\n+      --  Null_Statement (Node2-Sem) NULL statement for body, if Null_Present\n       --  Parameter_Specifications (List3) (set to No_List if no formal part)\n       --  Generic_Parent (Node5-Sem)\n       --  Null_Present (Flag13) set for null procedure case (Ada 2005 feature)\n@@ -9699,9 +9700,6 @@ package Sinfo is\n    function Non_Aliased_Prefix\n      (N : Node_Id) return Boolean;    -- Flag18\n \n-   function Null_Present\n-     (N : Node_Id) return Boolean;    -- Flag13\n-\n    function Null_Excluding_Subtype\n      (N : Node_Id) return Boolean;    -- Flag16\n \n@@ -9711,9 +9709,15 @@ package Sinfo is\n    function Null_Exclusion_In_Return_Present\n      (N : Node_Id) return Boolean;    -- Flag14\n \n+   function Null_Present\n+     (N : Node_Id) return Boolean;    -- Flag13\n+\n    function Null_Record_Present\n      (N : Node_Id) return Boolean;    -- Flag17\n \n+   function Null_Statement\n+     (N : Node_Id) return Node_Id;    -- Node2\n+\n    function Object_Definition\n      (N : Node_Id) return Node_Id;    -- Node4\n \n@@ -10755,9 +10759,6 @@ package Sinfo is\n    procedure Set_Non_Aliased_Prefix\n      (N : Node_Id; Val : Boolean := True);    -- Flag18\n \n-   procedure Set_Null_Present\n-     (N : Node_Id; Val : Boolean := True);    -- Flag13\n-\n    procedure Set_Null_Excluding_Subtype\n      (N : Node_Id; Val : Boolean := True);    -- Flag16\n \n@@ -10767,9 +10768,15 @@ package Sinfo is\n    procedure Set_Null_Exclusion_In_Return_Present\n      (N : Node_Id; Val : Boolean := True);    -- Flag14\n \n+   procedure Set_Null_Present\n+     (N : Node_Id; Val : Boolean := True);    -- Flag13\n+\n    procedure Set_Null_Record_Present\n      (N : Node_Id; Val : Boolean := True);    -- Flag17\n \n+   procedure Set_Null_Statement\n+     (N : Node_Id; Val : Node_Id);            -- Node2\n+\n    procedure Set_Object_Definition\n      (N : Node_Id; Val : Node_Id);            -- Node4\n \n@@ -11900,7 +11907,7 @@ package Sinfo is\n \n      N_Procedure_Specification =>\n        (1 => True,    --  Defining_Unit_Name (Node1)\n-        2 => False,   --  unused\n+        2 => False,   --  Null_Statement (Node2-Sem)\n         3 => True,    --  Parameter_Specifications (List3)\n         4 => False,   --  unused\n         5 => False),  --  Generic_Parent (Node5-Sem)\n@@ -13088,11 +13095,12 @@ package Sinfo is\n    pragma Inline (No_Side_Effect_Removal);\n    pragma Inline (No_Truncation);\n    pragma Inline (Non_Aliased_Prefix);\n-   pragma Inline (Null_Present);\n    pragma Inline (Null_Excluding_Subtype);\n    pragma Inline (Null_Exclusion_Present);\n    pragma Inline (Null_Exclusion_In_Return_Present);\n+   pragma Inline (Null_Present);\n    pragma Inline (Null_Record_Present);\n+   pragma Inline (Null_Statement);\n    pragma Inline (Object_Definition);\n    pragma Inline (Of_Present);\n    pragma Inline (Original_Discriminant);\n@@ -13441,6 +13449,7 @@ package Sinfo is\n    pragma Inline (Set_Null_Exclusion_In_Return_Present);\n    pragma Inline (Set_Null_Present);\n    pragma Inline (Set_Null_Record_Present);\n+   pragma Inline (Set_Null_Statement);\n    pragma Inline (Set_Object_Definition);\n    pragma Inline (Set_Of_Present);\n    pragma Inline (Set_Original_Discriminant);"}]}