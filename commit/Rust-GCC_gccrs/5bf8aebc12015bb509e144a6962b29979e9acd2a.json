{"sha": "5bf8aebc12015bb509e144a6962b29979e9acd2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJmOGFlYmMxMjAxNWJiNTA5ZTE0NGE2OTYyYjI5OTc5ZTlhY2QyYQ==", "commit": {"author": {"name": "Ranjit Mathew", "email": "rmathew@hotmail.com", "date": "2005-01-10T18:01:04Z"}, "committer": {"name": "Ranjit Mathew", "email": "rmathew@gcc.gnu.org", "date": "2005-01-10T18:01:04Z"}, "message": "re PR java/19277 (allows array.length++ although it is final)\n\n        PR java/19277\n        * check-init.c (check_init): Take care of references that do not\n        have an explicit final variable declaration (e.g. array length\n        access) for pre/post in/de-crement operators.\n\nFrom-SVN: r93144", "tree": {"sha": "18c2ff35f5a3bb1a432f042a7cd2a8fff92a19b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18c2ff35f5a3bb1a432f042a7cd2a8fff92a19b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bf8aebc12015bb509e144a6962b29979e9acd2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bf8aebc12015bb509e144a6962b29979e9acd2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bf8aebc12015bb509e144a6962b29979e9acd2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bf8aebc12015bb509e144a6962b29979e9acd2a/comments", "author": null, "committer": null, "parents": [{"sha": "3e636396c84f821afdcf405e88fe448228b96901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e636396c84f821afdcf405e88fe448228b96901", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e636396c84f821afdcf405e88fe448228b96901"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "183319ff325a9d9f3112a2d60d997c740ae18aa8", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bf8aebc12015bb509e144a6962b29979e9acd2a/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bf8aebc12015bb509e144a6962b29979e9acd2a/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=5bf8aebc12015bb509e144a6962b29979e9acd2a", "patch": "@@ -1,3 +1,10 @@\n+2005-01-10  Ranjit Mathew  <rmathew@hotmail.com>\n+\n+\tPR java/19277\n+\t* check-init.c (check_init): Take care of references that do not\n+\thave an explicit final variable declaration (e.g. array length\n+\taccess) for pre/post in/de-crement operators.\n+\n 2005-01-08  Mark Wielaard  <mark@klomp.org>\n \n \t* parse.y (process_imports): Allocate (and free) original_name only"}, {"sha": "6dc0deee7fdc8e45b4f5280b9858d21c34766707", "filename": "gcc/java/check-init.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bf8aebc12015bb509e144a6962b29979e9acd2a/gcc%2Fjava%2Fcheck-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bf8aebc12015bb509e144a6962b29979e9acd2a/gcc%2Fjava%2Fcheck-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fcheck-init.c?ref=5bf8aebc12015bb509e144a6962b29979e9acd2a", "patch": "@@ -1,5 +1,6 @@\n /* Code to test for \"definitive [un]assignment\".\n-   Copyright (C) 1999, 2000, 2001, 2003, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2003, 2004, 2005 Free Software Foundation,\n+   Inc.\n \n This file is part of GCC.\n \n@@ -832,7 +833,14 @@ check_init (tree exp, words before)\n     case POSTINCREMENT_EXPR:\n       tmp = get_variable_decl (TREE_OPERAND (exp, 0));\n       if (tmp != NULL_TREE && DECL_FINAL (tmp))\n-\tfinal_assign_error (DECL_NAME (tmp));      \n+\tfinal_assign_error (DECL_NAME (tmp));\n+      else if (TREE_CODE (tmp = TREE_OPERAND (exp, 0)) == COMPONENT_REF)\n+        {\n+          /* Take care of array length accesses too.  */\n+          tree decl = TREE_OPERAND (tmp, 1);\n+          if (DECL_FINAL (decl))\n+            final_assign_error (DECL_NAME (decl));\n+        }\n \n       /* Avoid needless recursion.  */\n       exp = TREE_OPERAND (exp, 0);"}]}