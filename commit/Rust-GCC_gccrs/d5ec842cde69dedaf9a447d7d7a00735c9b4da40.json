{"sha": "d5ec842cde69dedaf9a447d7d7a00735c9b4da40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVlYzg0MmNkZTY5ZGVkYWY5YTQ0N2Q3ZDdhMDA3MzVjOWI0ZGE0MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-07-22T03:45:30Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-07-22T03:45:30Z"}, "message": "call.c (build_over_call): Check unsafe_copy_elision_p even for trivial constructors.\n\n\t* call.c (build_over_call): Check unsafe_copy_elision_p even for\n\ttrivial constructors.\n\t* method.c (do_build_copy_constructor): Don't copy tail padding\n\teven in a trivial constructor.\n\nFrom-SVN: r238620", "tree": {"sha": "23d12829ccddf066e337f8c344f90a7bd4d4de0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23d12829ccddf066e337f8c344f90a7bd4d4de0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5ec842cde69dedaf9a447d7d7a00735c9b4da40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ec842cde69dedaf9a447d7d7a00735c9b4da40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5ec842cde69dedaf9a447d7d7a00735c9b4da40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5ec842cde69dedaf9a447d7d7a00735c9b4da40/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4114e6b1fe8bb10a42ce56263ad42cba98138254", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4114e6b1fe8bb10a42ce56263ad42cba98138254", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4114e6b1fe8bb10a42ce56263ad42cba98138254"}], "stats": {"total": 65, "additions": 55, "deletions": 10}, "files": [{"sha": "3d3e85fdc48a19d2ad25fcac15864533d44623d1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ec842cde69dedaf9a447d7d7a00735c9b4da40/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ec842cde69dedaf9a447d7d7a00735c9b4da40/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d5ec842cde69dedaf9a447d7d7a00735c9b4da40", "patch": "@@ -1,3 +1,10 @@\n+2016-07-21  Jason Merrill  <jason@redhat.com>\n+\n+\t* call.c (build_over_call): Check unsafe_copy_elision_p even for\n+\ttrivial constructors.\n+\t* method.c (do_build_copy_constructor): Don't copy tail padding\n+\teven in a trivial constructor.\n+\n 2016-07-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/71728"}, {"sha": "d917d9afed4612ecc399d266b10c6d674b8f1e6f", "filename": "gcc/cp/call.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ec842cde69dedaf9a447d7d7a00735c9b4da40/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ec842cde69dedaf9a447d7d7a00735c9b4da40/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=d5ec842cde69dedaf9a447d7d7a00735c9b4da40", "patch": "@@ -7271,6 +7271,9 @@ is_base_field_ref (tree t)\n static bool\n unsafe_copy_elision_p (tree target, tree exp)\n {\n+  /* Copy elision only happens with a TARGET_EXPR.  */\n+  if (TREE_CODE (exp) != TARGET_EXPR)\n+    return false;\n   tree type = TYPE_MAIN_VARIANT (TREE_TYPE (exp));\n   if (type == CLASSTYPE_AS_BASE (type))\n     return false;\n@@ -7726,9 +7729,8 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n \t  else if (trivial)\n \t    return force_target_expr (DECL_CONTEXT (fn), arg, complain);\n \t}\n-      else if (trivial\n-\t       || (TREE_CODE (arg) == TARGET_EXPR\n-\t\t   && !unsafe_copy_elision_p (fa, arg)))\n+      else if ((trivial || TREE_CODE (arg) == TARGET_EXPR)\n+\t       && !unsafe_copy_elision_p (fa, arg))\n \t{\n \t  tree to = cp_stabilize_reference (cp_build_indirect_ref (fa,\n \t\t\t\t\t\t\t\t   RO_NULL,"}, {"sha": "63aa53ea9cdc9e30fd31427117067bc7a5722bc1", "filename": "gcc/cp/method.c", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ec842cde69dedaf9a447d7d7a00735c9b4da40/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ec842cde69dedaf9a447d7d7a00735c9b4da40/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=d5ec842cde69dedaf9a447d7d7a00735c9b4da40", "patch": "@@ -542,14 +542,32 @@ do_build_copy_constructor (tree fndecl)\n   if (!inh)\n     parm = convert_from_reference (parm);\n \n-  if (trivial\n-      && is_empty_class (current_class_type))\n-    /* Don't copy the padding byte; it might not have been allocated\n-       if *this is a base subobject.  */;\n-  else if (trivial)\n+  if (trivial)\n     {\n-      tree t = build2 (INIT_EXPR, void_type_node, current_class_ref, parm);\n-      finish_expr_stmt (t);\n+      if (is_empty_class (current_class_type))\n+\t/* Don't copy the padding byte; it might not have been allocated\n+\t   if *this is a base subobject.  */;\n+      else if (tree_int_cst_equal (TYPE_SIZE (current_class_type),\n+\t\t\t\t   CLASSTYPE_SIZE (current_class_type)))\n+\t{\n+\t  tree t = build2 (INIT_EXPR, void_type_node, current_class_ref, parm);\n+\t  finish_expr_stmt (t);\n+\t}\n+      else\n+\t{\n+\t  /* We must only copy the non-tail padding parts.  */\n+\t  tree base_size = CLASSTYPE_SIZE_UNIT (current_class_type);\n+\t  base_size = size_binop (MINUS_EXPR, base_size, size_int (1));\n+\t  tree array_type = build_array_type (unsigned_char_type_node,\n+\t\t\t\t\t      build_index_type (base_size));\n+\t  tree alias_set = build_int_cst (TREE_TYPE (current_class_ptr), 0);\n+\t  tree lhs = build2 (MEM_REF, array_type,\n+\t\t\t     current_class_ptr, alias_set);\n+\t  tree rhs = build2 (MEM_REF, array_type,\n+\t\t\t     TREE_OPERAND (parm, 0), alias_set);\n+\t  tree t = build2 (INIT_EXPR, void_type_node, lhs, rhs);\n+\t  finish_expr_stmt (t);\n+\t}\n     }\n   else\n     {"}, {"sha": "43e26adaceab452e66779242c4d2fa2818f938d6", "filename": "gcc/testsuite/g++.dg/torture/tail-padding1.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5ec842cde69dedaf9a447d7d7a00735c9b4da40/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Ftail-padding1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5ec842cde69dedaf9a447d7d7a00735c9b4da40/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Ftail-padding1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Ftail-padding1.C?ref=d5ec842cde69dedaf9a447d7d7a00735c9b4da40", "patch": "@@ -0,0 +1,18 @@\n+// Test that initializing a non-POD base with a trivial copy ctor doesn't\n+// clobber tail padding.\n+\n+// { dg-do run }\n+\n+struct X { ~X() {} int n; char d; };\n+struct Y { Y(); char c[3]; };\n+struct Z : X, virtual Y { Z(); };\n+\n+X f() { X nrvo; __builtin_memset(&nrvo, 0, sizeof(X)); return nrvo; }\n+Z::Z() : Y(), X(f()) {}\n+Y::Y() { c[0] = 1; }\n+\n+int main() {\n+  Z z;\n+  if (z.c[0] != 1)\n+    __builtin_abort ();\n+}"}]}