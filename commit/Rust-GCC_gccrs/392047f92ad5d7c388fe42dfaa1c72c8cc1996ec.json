{"sha": "392047f92ad5d7c388fe42dfaa1c72c8cc1996ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkyMDQ3ZjkyYWQ1ZDdjMzg4ZmU0MmRmYWExYzcyYzhjYzE5OTZlYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-09-26T07:05:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-09-26T07:05:01Z"}, "message": "re PR debug/87428 (\"Missed\" inline instances cause bogus DWARF to be emitted)\n\n2018-09-26  Richard Biener  <rguenther@suse.de>\n\n\tPR debug/87428\n\tPR debug/87362\n\t* tree-inline.c (expand_call_inline): When the location\n\tof the call is UNKNOWN_LOCATION use DECL_SOURCE_LOCATION\n\tor BUILTINS_LOCATION for the BLOCK_SOURCE_LOCATION of\n\tthe inserted BLOCK to make inlined_function_outer_scope_p\n\trecognize it.\n\t* dwarf2out.c (add_call_src_coords_attributes): Do not add\n\tcoords for reserved locations.\n\nFrom-SVN: r264594", "tree": {"sha": "be2c8d41c2eb5a7a515dbb0ce88e4ddfed55a65c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be2c8d41c2eb5a7a515dbb0ce88e4ddfed55a65c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/392047f92ad5d7c388fe42dfaa1c72c8cc1996ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/392047f92ad5d7c388fe42dfaa1c72c8cc1996ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/392047f92ad5d7c388fe42dfaa1c72c8cc1996ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/392047f92ad5d7c388fe42dfaa1c72c8cc1996ec/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "201054a7f042f5f175605ca64accb2a812b27bfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/201054a7f042f5f175605ca64accb2a812b27bfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/201054a7f042f5f175605ca64accb2a812b27bfe"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "d3f3de2cf84d8c7cfa255f9f4df52bd18921b4a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/392047f92ad5d7c388fe42dfaa1c72c8cc1996ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/392047f92ad5d7c388fe42dfaa1c72c8cc1996ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=392047f92ad5d7c388fe42dfaa1c72c8cc1996ec", "patch": "@@ -1,3 +1,15 @@\n+2018-09-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/87428\n+\tPR debug/87362\n+\t* tree-inline.c (expand_call_inline): When the location\n+\tof the call is UNKNOWN_LOCATION use DECL_SOURCE_LOCATION\n+\tor BUILTINS_LOCATION for the BLOCK_SOURCE_LOCATION of\n+\tthe inserted BLOCK to make inlined_function_outer_scope_p\n+\trecognize it.\n+\t* dwarf2out.c (add_call_src_coords_attributes): Do not add\n+\tcoords for reserved locations.\n+\n 2018-09-25  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (*movcc_internal1): Use set_attr_alternative."}, {"sha": "3c10ec8bbccf87028c4fdff19f7a392daef429fd", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/392047f92ad5d7c388fe42dfaa1c72c8cc1996ec/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/392047f92ad5d7c388fe42dfaa1c72c8cc1996ec/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=392047f92ad5d7c388fe42dfaa1c72c8cc1996ec", "patch": "@@ -23907,6 +23907,10 @@ gen_label_die (tree decl, dw_die_ref context_die)\n static inline void\n add_call_src_coords_attributes (tree stmt, dw_die_ref die)\n {\n+  /* We can end up with BUILTINS_LOCATION here.  */\n+  if (RESERVED_LOCATION_P (BLOCK_SOURCE_LOCATION (stmt)))\n+    return;\n+\n   expanded_location s = expand_location (BLOCK_SOURCE_LOCATION (stmt));\n \n   if (dwarf_version >= 3 || !dwarf_strict)"}, {"sha": "b2cddc223120406f748e004d123837df55d674c5", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/392047f92ad5d7c388fe42dfaa1c72c8cc1996ec/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/392047f92ad5d7c388fe42dfaa1c72c8cc1996ec/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=392047f92ad5d7c388fe42dfaa1c72c8cc1996ec", "patch": "@@ -4527,10 +4527,16 @@ expand_call_inline (basic_block bb, gimple *stmt, copy_body_data *id)\n      not refer to them in any way to not break GC for locations.  */\n   if (gimple_block (stmt))\n     {\n+      /* We do want to assign a not UNKNOWN_LOCATION BLOCK_SOURCE_LOCATION\n+         to make inlined_function_outer_scope_p return true on this BLOCK.  */\n+      location_t loc = LOCATION_LOCUS (gimple_location (stmt));\n+      if (loc == UNKNOWN_LOCATION)\n+\tloc = LOCATION_LOCUS (DECL_SOURCE_LOCATION (fn));\n+      if (loc == UNKNOWN_LOCATION)\n+\tloc = BUILTINS_LOCATION;\n       id->block = make_node (BLOCK);\n       BLOCK_ABSTRACT_ORIGIN (id->block) = fn;\n-      BLOCK_SOURCE_LOCATION (id->block) \n-\t= LOCATION_LOCUS (gimple_location (stmt));\n+      BLOCK_SOURCE_LOCATION (id->block) = loc;\n       prepend_lexical_block (gimple_block (stmt), id->block);\n     }\n "}]}