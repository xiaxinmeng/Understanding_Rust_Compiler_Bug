{"sha": "59c92f760e95933407d1db1c086237ca39592b82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTljOTJmNzYwZTk1OTMzNDA3ZDFkYjFjMDg2MjM3Y2EzOTU5MmI4Mg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2007-06-17T13:06:02Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-06-17T13:06:02Z"}, "message": "m68k.h (ISA_HAS_FF1, [...]): New.\n\n\t* config/m68k/m68k.h (ISA_HAS_FF1, ISA_HAS_MVS_MVZ): New.\n\t* config/m68k/m68k.md: Use ISA_HAS_FF1 and ISA_HAS_MVS_MVZ as\n\tappropriate.\n\nFrom-SVN: r125772", "tree": {"sha": "9cb95bc628c4ca07fd0a58ac6b0bf93da8cf2f4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cb95bc628c4ca07fd0a58ac6b0bf93da8cf2f4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59c92f760e95933407d1db1c086237ca39592b82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59c92f760e95933407d1db1c086237ca39592b82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59c92f760e95933407d1db1c086237ca39592b82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59c92f760e95933407d1db1c086237ca39592b82/comments", "author": null, "committer": null, "parents": [{"sha": "724d7c55344659d3a83d80037719281ce4cdf8f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/724d7c55344659d3a83d80037719281ce4cdf8f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/724d7c55344659d3a83d80037719281ce4cdf8f8"}], "stats": {"total": 36, "additions": 23, "deletions": 13}, "files": [{"sha": "21cdb03c5c28d8b4807c5b1fdd36a97d3149259a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59c92f760e95933407d1db1c086237ca39592b82/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59c92f760e95933407d1db1c086237ca39592b82/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=59c92f760e95933407d1db1c086237ca39592b82", "patch": "@@ -1,3 +1,9 @@\n+2007-06-17  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* config/m68k/m68k.h (ISA_HAS_FF1, ISA_HAS_MVS_MVZ): New.\n+\t* config/m68k/m68k.md: Use ISA_HAS_FF1 and ISA_HAS_MVS_MVZ as\n+\tappropriate.\n+\n 2007-06-17  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* config/sparc/sparc.c (sparc_vis_init_builtins): Retrieve the"}, {"sha": "e84994b7f10c76242573740a8fe7bc49746e3150", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59c92f760e95933407d1db1c086237ca39592b82/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59c92f760e95933407d1db1c086237ca39592b82/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=59c92f760e95933407d1db1c086237ca39592b82", "patch": "@@ -245,6 +245,10 @@ Boston, MA 02110-1301, USA.  */\n #define TARGET_ISAB\t\t((m68k_cpu_flags & FL_ISA_B) != 0)\n #define TARGET_ISAC\t\t((m68k_cpu_flags & FL_ISA_C) != 0)\n \n+/* Some instructions are common to more than one ISA.  */\n+#define ISA_HAS_MVS_MVZ\t(TARGET_ISAB || TARGET_ISAC)\n+#define ISA_HAS_FF1\t(TARGET_ISAAPLUS || TARGET_ISAC)\n+\n #define TUNE_68000\t(m68k_tune == u68000)\n #define TUNE_68010\t(m68k_tune == u68010)\n #define TUNE_68000_10\t(TUNE_68000 || TUNE_68010)"}, {"sha": "5095398f158ba775021ee1033f29aa41edab0c03", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59c92f760e95933407d1db1c086237ca39592b82/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59c92f760e95933407d1db1c086237ca39592b82/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=59c92f760e95933407d1db1c086237ca39592b82", "patch": "@@ -1391,7 +1391,7 @@\n (define_insn \"*zero_extendhisi2_cf\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(zero_extend:SI (match_operand:HI 1 \"nonimmediate_src_operand\" \"rmS\")))]\n-  \"TARGET_ISAB\"\n+  \"ISA_HAS_MVS_MVZ\"\n   \"mvz%.w %1,%0\")\n \n (define_insn \"zero_extendhisi2\"\n@@ -1415,7 +1415,7 @@\n (define_insn \"*zero_extendqisi2_cfv4\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(zero_extend:SI (match_operand:QI 1 \"nonimmediate_src_operand\" \"dmS\")))]\n-  \"TARGET_ISAB\"\n+  \"ISA_HAS_MVS_MVZ\"\n   \"mvz%.b %1,%0\")\n \n (define_insn \"zero_extendqisi2\"\n@@ -1429,7 +1429,7 @@\n (define_split\n   [(set (match_operand 0 \"register_operand\" \"\")\n \t(zero_extend (match_operand 1 \"nonimmediate_src_operand\" \"\")))]\n-  \"!TARGET_ISAB\n+  \"!ISA_HAS_MVS_MVZ\n    && reload_completed\n    && reg_mentioned_p (operands[0], operands[1])\"\n   [(set (strict_low_part (match_dup 2))\n@@ -1445,7 +1445,7 @@\n (define_split\n   [(set (match_operand 0 \"register_operand\" \"\")\n \t(zero_extend (match_operand 1 \"nonimmediate_src_operand\" \"\")))]\n-  \"!TARGET_ISAB && reload_completed\"\n+  \"!ISA_HAS_MVS_MVZ && reload_completed\"\n   [(set (match_dup 0)\n \t(const_int 0))\n    (set (strict_low_part (match_dup 2))\n@@ -1463,7 +1463,7 @@\n {\n   CC_STATUS_INIT;\n   operands[2] = gen_rtx_REG (SImode, REGNO (operands[0]) + 1);\n-  if (TARGET_ISAB)\n+  if (ISA_HAS_MVS_MVZ)\n     return \"mvs%.b %1,%2\\;smi %0\\;extb%.l %0\";\n   if (TARGET_68020 || TARGET_COLDFIRE)\n     {\n@@ -1489,7 +1489,7 @@\n {\n   CC_STATUS_INIT;\n   operands[2] = gen_rtx_REG (SImode, REGNO (operands[0]) + 1);\n-  if (TARGET_ISAB)\n+  if (ISA_HAS_MVS_MVZ)\n     return \"mvs%.w %1,%2\\;smi %0\\;extb%.l %0\";\n   if (TARGET_68020 || TARGET_COLDFIRE)\n     return \"move%.w %1,%2\\;ext%.l %2\\;smi %0\\;extb%.l %0\";\n@@ -1567,14 +1567,14 @@\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d\")\n \t(sign_extend:SI\n \t (match_operand:HI 1 \"nonimmediate_src_operand\" \"rmS\")))]\n-  \"TARGET_ISAB\"\n+  \"ISA_HAS_MVS_MVZ\"\n   \"mvs%.w %1,%0\")\n \n (define_insn \"*68k_extendhisi2\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=*d,a\")\n \t(sign_extend:SI\n \t (match_operand:HI 1 \"nonimmediate_src_operand\" \"0,rmS\")))]\n-  \"!TARGET_ISAB\"\n+  \"!ISA_HAS_MVS_MVZ\"\n {\n   if (ADDRESS_REG_P (operands[0]))\n     return \"move%.w %1,%0\";\n@@ -1596,13 +1596,13 @@\n (define_insn \"*cfv4_extendqisi2\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d\")\n \t(sign_extend:SI (match_operand:QI 1 \"nonimmediate_operand\" \"rms\")))]\n-  \"TARGET_ISAB\"\n+  \"ISA_HAS_MVS_MVZ\"\n   \"mvs%.b %1,%0\")\n \n (define_insn \"*68k_extendqisi2\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d\")\n \t(sign_extend:SI (match_operand:QI 1 \"nonimmediate_operand\" \"0\")))]\n-  \"TARGET_68020 || (TARGET_COLDFIRE && !TARGET_ISAB)\"\n+  \"TARGET_68020 || (TARGET_COLDFIRE && !ISA_HAS_MVS_MVZ)\"\n   \"extb%.l %0\")\n \f\n ;; Conversions between float and double.\n@@ -3114,7 +3114,7 @@\n \t(umod:HI (match_dup 1) (match_dup 2)))]\n   \"!TARGET_COLDFIRE || TARGET_CF_HWDIV\"\n {\n-  if (TARGET_ISAB)\n+  if (ISA_HAS_MVS_MVZ)\n     output_asm_insn (MOTOROLA ?\n       \"mvz%.w %0,%0\\;divu%.w %2,%0\" :\n       \"mvz%.w %0,%0\\;divu %2,%0\",\n@@ -3238,7 +3238,7 @@\n \t\t(match_operand:SI 2 \"general_src_operand\" \"d,dmsK\")))]\n   \"TARGET_COLDFIRE\"\n {\n-  if (TARGET_ISAB\n+  if (ISA_HAS_MVS_MVZ\n       && DATA_REG_P (operands[0])\n       && GET_CODE (operands[2]) == CONST_INT)\n     {\n@@ -4005,7 +4005,7 @@\n (define_insn \"clzsi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n  \t(clz:SI (match_operand:SI 1 \"register_operand\" \"0\")))]\n-  \"TARGET_ISAAPLUS || TARGET_ISAC\"\n+  \"ISA_HAS_FF1\"\n   \"ff1 %0\")\n \f\n ;; one complement instructions"}]}