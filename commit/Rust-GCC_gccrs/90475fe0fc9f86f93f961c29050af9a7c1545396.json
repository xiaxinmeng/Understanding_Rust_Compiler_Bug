{"sha": "90475fe0fc9f86f93f961c29050af9a7c1545396", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA0NzVmZTBmYzlmODZmOTNmOTYxYzI5MDUwYWY5YTdjMTU0NTM5Ng==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2005-07-07T14:38:33Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2005-07-07T14:38:33Z"}, "message": "pt.c (type_unification_real): Remove allow_incomplete argument.\n\n\t* pt.c (type_unification_real): Remove allow_incomplete argument.\n\tRemove unreachable code.\n\t(fn_type_unification): Adjust call to type_unification_real.\n\t(unify): Likewise.\n\nFrom-SVN: r101714", "tree": {"sha": "793367d662238bb3bb1a40c3d5a99befb920d4ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/793367d662238bb3bb1a40c3d5a99befb920d4ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90475fe0fc9f86f93f961c29050af9a7c1545396", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90475fe0fc9f86f93f961c29050af9a7c1545396", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90475fe0fc9f86f93f961c29050af9a7c1545396", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90475fe0fc9f86f93f961c29050af9a7c1545396/comments", "author": null, "committer": null, "parents": [{"sha": "ca12deb43edfb4a855ee2ca1f804836da1fb5336", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca12deb43edfb4a855ee2ca1f804836da1fb5336", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca12deb43edfb4a855ee2ca1f804836da1fb5336"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "36a5e59283e3483b33e23373fb2a98dcda549dfb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90475fe0fc9f86f93f961c29050af9a7c1545396/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90475fe0fc9f86f93f961c29050af9a7c1545396/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=90475fe0fc9f86f93f961c29050af9a7c1545396", "patch": "@@ -1,3 +1,10 @@\n+2005-07-07  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* pt.c (type_unification_real): Remove allow_incomplete argument.\n+\tRemove unreachable code.\n+\t(fn_type_unification): Adjust call to type_unification_real.\n+\t(unify): Likewise.\n+\n 2005-07-05  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* Makefile.in (class.o, decl2.o): Adjust dependencies."}, {"sha": "d27e523400960adbe542d39cd05150d50795ec0a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90475fe0fc9f86f93f961c29050af9a7c1545396/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90475fe0fc9f86f93f961c29050af9a7c1545396/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=90475fe0fc9f86f93f961c29050af9a7c1545396", "patch": "@@ -109,7 +109,7 @@ static tree add_outermost_template_args (tree, tree);\n static bool check_instantiated_args (tree, tree, tsubst_flags_t);\n static int maybe_adjust_types_for_deduction (unification_kind_t, tree*, tree*);\n static int  type_unification_real (tree, tree, tree, tree,\n-\t\t\t\t   int, unification_kind_t, int);\n+\t\t\t\t   int, unification_kind_t);\n static void note_template_header (int);\n static tree convert_nontype_argument_function (tree, tree);\n static tree convert_nontype_argument (tree, tree);\n@@ -9167,7 +9167,6 @@ fn_type_unification (tree fn,\n \n   if (return_type)\n     {\n-      /* We've been given a return type to match, prepend it.  */\n       parms = tree_cons (NULL_TREE, TREE_TYPE (fntype), parms);\n       args = tree_cons (NULL_TREE, return_type, args);\n     }\n@@ -9178,7 +9177,7 @@ fn_type_unification (tree fn,\n      event.  */\n   result = type_unification_real (DECL_INNERMOST_TEMPLATE_PARMS (fn),\n \t\t\t\t  targs, parms, args, /*subr=*/0,\n-\t\t\t\t  strict, /*allow_incomplete*/1);\n+\t\t\t\t  strict);\n \n   if (result == 0)\n     /* All is well so far.  Now, check:\n@@ -9294,8 +9293,7 @@ type_unification_real (tree tparms,\n \t\t       tree xparms,\n \t\t       tree xargs,\n \t\t       int subr,\n-\t\t       unification_kind_t strict,\n-\t\t       int allow_incomplete)\n+\t\t       unification_kind_t strict)\n {\n   tree parm, arg;\n   int i;\n@@ -9426,8 +9424,6 @@ type_unification_real (tree tparms,\n \t      && !saw_undeduced++)\n \t    goto again;\n \n-\t  if (!allow_incomplete)\n-\t    error (\"incomplete type unification\");\n \t  return 2;\n \t}\n \n@@ -10253,8 +10249,7 @@ unify (tree tparms, tree targs, tree parm, tree arg, int strict)\n \t\t TREE_TYPE (arg), UNIFY_ALLOW_NONE))\n \treturn 1;\n       return type_unification_real (tparms, targs, TYPE_ARG_TYPES (parm),\n-\t\t\t\t    TYPE_ARG_TYPES (arg), 1,\n-\t\t\t\t    DEDUCE_EXACT, 0);\n+\t\t\t\t    TYPE_ARG_TYPES (arg), 1, DEDUCE_EXACT);\n \n     case OFFSET_TYPE:\n       /* Unify a pointer to member with a pointer to member function, which"}]}