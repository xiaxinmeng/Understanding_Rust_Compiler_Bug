{"sha": "9b55bf04b6da47b898ca202d3dc80d913b6a1c5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI1NWJmMDRiNmRhNDdiODk4Y2EyMDJkM2RjODBkOTEzYjZhMWM1Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-05-18T11:47:43Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-05-18T11:47:43Z"}, "message": "(output_move_strict{hi,qi}): New functions.\n\nFrom-SVN: r14078", "tree": {"sha": "9dc1b8c74803ebc7b35fb9fcbb3e7d674e06fea8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9dc1b8c74803ebc7b35fb9fcbb3e7d674e06fea8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b55bf04b6da47b898ca202d3dc80d913b6a1c5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b55bf04b6da47b898ca202d3dc80d913b6a1c5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b55bf04b6da47b898ca202d3dc80d913b6a1c5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b55bf04b6da47b898ca202d3dc80d913b6a1c5f/comments", "author": null, "committer": null, "parents": [{"sha": "a25cea96d7a298b968786665239b4bcf11ffaf6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a25cea96d7a298b968786665239b4bcf11ffaf6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a25cea96d7a298b968786665239b4bcf11ffaf6e"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "8f26871404a577fc8a16c09e306c30f0e8d024dd", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b55bf04b6da47b898ca202d3dc80d913b6a1c5f/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b55bf04b6da47b898ca202d3dc80d913b6a1c5f/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=9b55bf04b6da47b898ca202d3dc80d913b6a1c5f", "patch": "@@ -1556,6 +1556,32 @@ output_move_qimode (operands)\n   return \"move%.b %1,%0\";\n }\n \n+char *\n+output_move_stricthi (operands)\n+     rtx *operands;\n+{\n+  if (operands[1] == const0_rtx\n+      /* clr insns on 68000 read before writing.\n+\t This isn't so on the 68010, but we have no TARGET_68010.  */\n+      && ((TARGET_68020 || TARGET_5200)\n+\t  || !(GET_CODE (operands[0]) == MEM && MEM_VOLATILE_P (operands[0]))))\n+    return \"clr%.w %0\";\n+  return \"move%.w %1,%0\";\n+}\n+\n+char *\n+output_move_strictqi (operands)\n+     rtx *operands;\n+{\n+  if (operands[1] == const0_rtx\n+      /* clr insns on 68000 read before writing.\n+         This isn't so on the 68010, but we have no TARGET_68010.  */\n+      && ((TARGET_68020 || TARGET_5200)\n+          || !(GET_CODE (operands[0]) == MEM && MEM_VOLATILE_P (operands[0]))))\n+    return \"clr%.b %0\";\n+  return \"move%.b %1,%0\";\n+}\n+\n /* Return the best assembler insn template\n    for moving operands[1] into operands[0] as a fullword.  */\n "}]}