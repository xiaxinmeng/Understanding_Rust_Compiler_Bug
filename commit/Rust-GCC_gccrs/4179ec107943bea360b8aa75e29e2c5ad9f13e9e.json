{"sha": "4179ec107943bea360b8aa75e29e2c5ad9f13e9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE3OWVjMTA3OTQzYmVhMzYwYjhhYTc1ZTI5ZTJjNWFkOWYxM2U5ZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-02-12T15:13:02Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-02-12T15:13:02Z"}, "message": "libstdc++: Make \"nonexistent\" paths less predictable in filesystem tests\n\nThe helper function for creating new paths doesn't work well on Windows,\nbecause the PID of a process started by Wine is very consistent and so\nthe same path gets created each time.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/util/testsuite_fs.h (nonexistent_path): Add\n\trandom number to the path.", "tree": {"sha": "7b08c20a9e43e171d07017176dd9b38765f87732", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b08c20a9e43e171d07017176dd9b38765f87732"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4179ec107943bea360b8aa75e29e2c5ad9f13e9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4179ec107943bea360b8aa75e29e2c5ad9f13e9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4179ec107943bea360b8aa75e29e2c5ad9f13e9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4179ec107943bea360b8aa75e29e2c5ad9f13e9e/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1a821b93c45bfe7606b5dee8d160c7172b37e3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1a821b93c45bfe7606b5dee8d160c7172b37e3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1a821b93c45bfe7606b5dee8d160c7172b37e3e"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "e4d04dd7799e3fb8ba0c9d8199699020b7ba61b6", "filename": "libstdc++-v3/testsuite/util/testsuite_fs.h", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4179ec107943bea360b8aa75e29e2c5ad9f13e9e/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_fs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4179ec107943bea360b8aa75e29e2c5ad9f13e9e/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_fs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_fs.h?ref=4179ec107943bea360b8aa75e29e2c5ad9f13e9e", "patch": "@@ -34,8 +34,13 @@ namespace test_fs = std::experimental::filesystem;\n #include <fstream>\n #include <string>\n #include <cstdio>\n-#include <stdlib.h>\n-#include <unistd.h>\n+\n+#if defined(_GNU_SOURCE) || _XOPEN_SOURCE >= 500 || _POSIX_C_SOURCE >= 200112L\n+#include <stdlib.h> // mkstemp\n+#include <unistd.h> // unlink, close\n+#else\n+#include <random>   // std::random_device\n+#endif\n \n namespace __gnu_test\n {\n@@ -121,13 +126,13 @@ namespace __gnu_test\n     if (file.length() > 64)\n       file.resize(64);\n     char buf[128];\n-    static int counter;\n+    static unsigned counter = std::random_device{}();\n #if _GLIBCXX_USE_C99_STDIO\n     std::snprintf(buf, 128,\n #else\n     std::sprintf(buf,\n #endif\n-      \"filesystem-test.%d.%lu-%s\", counter++, (unsigned long) ::getpid(),\n+      \"filesystem-test.%u.%lu-%s\", counter++, (unsigned long) ::getpid(),\n       file.c_str());\n     p = buf;\n #endif"}]}