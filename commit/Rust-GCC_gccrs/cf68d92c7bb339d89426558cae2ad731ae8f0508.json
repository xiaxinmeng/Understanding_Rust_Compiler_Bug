{"sha": "cf68d92c7bb339d89426558cae2ad731ae8f0508", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y2OGQ5MmM3YmIzMzlkODk0MjY1NThjYWUyYWQ3MzFhZThmMDUwOA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-05-10T10:22:16Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-05-10T10:22:16Z"}, "message": "re PR c/70255 (change of the order of summation of floating point numbers despite no-associative-math)\n\n\tPR c/70255\n\t* c-decl.c (diagnose_mismatched_decls): Warn for optimize attribute\n\ton a declaration following the definition.\n\n\t* gcc.dg/attr-opt-1.c: New test.\n\nFrom-SVN: r236071", "tree": {"sha": "2484ab32479d623f763dc2a8064fdd7d61b77910", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2484ab32479d623f763dc2a8064fdd7d61b77910"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf68d92c7bb339d89426558cae2ad731ae8f0508", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf68d92c7bb339d89426558cae2ad731ae8f0508", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf68d92c7bb339d89426558cae2ad731ae8f0508", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf68d92c7bb339d89426558cae2ad731ae8f0508/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bf1abda157fc40b9020da82ea35c087f2a442a95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf1abda157fc40b9020da82ea35c087f2a442a95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf1abda157fc40b9020da82ea35c087f2a442a95"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "9387c73b35ee5113bb48d98703a5eaea3e7f41ae", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf68d92c7bb339d89426558cae2ad731ae8f0508/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf68d92c7bb339d89426558cae2ad731ae8f0508/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=cf68d92c7bb339d89426558cae2ad731ae8f0508", "patch": "@@ -1,3 +1,9 @@\n+2016-05-10  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/70255\n+\t* c-decl.c (diagnose_mismatched_decls): Warn for optimize attribute\n+\ton a declaration following the definition.\n+\n 2016-05-05  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-parser.c (c_parser_switch_statement): Add IF_P argument,"}, {"sha": "9c09536c18edc8a694446f127d48c3be4401fb5e", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf68d92c7bb339d89426558cae2ad731ae8f0508/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf68d92c7bb339d89426558cae2ad731ae8f0508/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=cf68d92c7bb339d89426558cae2ad731ae8f0508", "patch": "@@ -2228,6 +2228,18 @@ diagnose_mismatched_decls (tree newdecl, tree olddecl,\n \n   if (TREE_CODE (newdecl) == FUNCTION_DECL)\n     {\n+      tree a1 = lookup_attribute (\"optimize\", DECL_ATTRIBUTES (olddecl));\n+      tree a2 = lookup_attribute (\"optimize\", DECL_ATTRIBUTES (newdecl));\n+      /* An optimization attribute applied on a declaration after the\n+\t definition is likely not what the user wanted.  */\n+      if (a2 != NULL_TREE\n+\t  && DECL_SAVED_TREE (olddecl) != NULL_TREE\n+\t  && (a1 == NULL_TREE || !attribute_list_equal (a1, a2)))\n+\twarned |= warning (OPT_Wattributes,\n+\t\t\t   \"optimization attribute on %qD follows \"\n+\t\t\t   \"definition but the attribute doesn%'t match\",\n+\t\t\t   newdecl);\n+\n       /* Diagnose inline __attribute__ ((noinline)) which is silly.  */\n       if (DECL_DECLARED_INLINE_P (newdecl)\n \t  && lookup_attribute (\"noinline\", DECL_ATTRIBUTES (olddecl)))"}, {"sha": "4f3cc5dca70cc4b356777999fb437d06f9d74b5c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf68d92c7bb339d89426558cae2ad731ae8f0508/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf68d92c7bb339d89426558cae2ad731ae8f0508/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cf68d92c7bb339d89426558cae2ad731ae8f0508", "patch": "@@ -1,3 +1,8 @@\n+2016-05-10  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/70255\n+\t* gcc.dg/attr-opt-1.c: New test.\n+\n 2016-05-10  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/70497"}, {"sha": "4140fda7a2ad15e2fe5d4f9d19749b73ad12044e", "filename": "gcc/testsuite/gcc.dg/attr-opt-1.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf68d92c7bb339d89426558cae2ad731ae8f0508/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-opt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf68d92c7bb339d89426558cae2ad731ae8f0508/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-opt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-opt-1.c?ref=cf68d92c7bb339d89426558cae2ad731ae8f0508", "patch": "@@ -0,0 +1,37 @@\n+/* PR c/70255 */\n+/* { dg-do compile } */\n+\n+double\n+fn1 (double h, double l) /* { dg-message \"previous definition\" } */\n+{\n+  return h + l;\n+}\n+double fn1 (double, double) __attribute__ ((optimize (\"no-associative-math\"))); /* { dg-warning \"optimization attribute on .fn1. follows definition\" } */\n+\n+__attribute__ ((optimize (\"no-associative-math\"))) double\n+fn2 (double h, double l)\n+{\n+  return h + l;\n+}\n+double fn2 (double, double) __attribute__ ((optimize (\"no-associative-math\")));\n+\n+__attribute__ ((optimize (\"no-associative-math\"))) double\n+fn3 (double h, double l) /* { dg-message \"previous definition\" } */\n+{\n+  return h + l;\n+}\n+double fn3 (double, double) __attribute__ ((optimize (\"O2,no-associative-math\"))); /* { dg-warning \"optimization attribute on .fn3. follows definition\" } */\n+\n+__attribute__ ((optimize (\"no-associative-math,O2\"))) double\n+fn4 (double h, double l) /* { dg-message \"previous definition\" } */\n+{\n+  return h + l;\n+}\n+double fn4 (double, double) __attribute__ ((optimize (\"O2,no-associative-math\"))); /* { dg-warning \"optimization attribute on .fn4. follows definition\" } */\n+\n+__attribute__ ((optimize (\"no-reciprocal-math\"), optimize (\"no-associative-math\"))) int\n+fn5 (void)\n+{\n+  return 0;\n+}\n+int __attribute__ ((optimize (\"no-associative-math\"), optimize (\"no-reciprocal-math\"))) fn5 (void);"}]}