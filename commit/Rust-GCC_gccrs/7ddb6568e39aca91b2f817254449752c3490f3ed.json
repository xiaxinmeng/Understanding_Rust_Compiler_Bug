{"sha": "7ddb6568e39aca91b2f817254449752c3490f3ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RkYjY1NjhlMzlhY2E5MWIyZjgxNzI1NDQ0OTc1MmMzNDkwZjNlZA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2004-01-08T15:13:23Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2004-01-08T15:13:23Z"}, "message": "linux64.h (SUBSUBTARGET_OVERRIDE_OPTIONS): Ensure target_flags has MASK_POWERPC64 when -m64.\n\n\t* config/rs6000/linux64.h (SUBSUBTARGET_OVERRIDE_OPTIONS): Ensure\n\ttarget_flags has MASK_POWERPC64 when -m64.\n\t* config/rs6000/rs6000.c (processor_target_table): Add MASK_POWERPC64\n\tto 620, 630, power3, power4 and rs64a entries.\n\t* config/rs6000/rs6000.h (MASK_64BIT): Expand comment.\n\nFrom-SVN: r75550", "tree": {"sha": "0738a6663c426060c0e4177669659c319dac62c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0738a6663c426060c0e4177669659c319dac62c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ddb6568e39aca91b2f817254449752c3490f3ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ddb6568e39aca91b2f817254449752c3490f3ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ddb6568e39aca91b2f817254449752c3490f3ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ddb6568e39aca91b2f817254449752c3490f3ed/comments", "author": null, "committer": null, "parents": [{"sha": "2e89756b555877849e74a801f67a0f01282fea49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e89756b555877849e74a801f67a0f01282fea49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e89756b555877849e74a801f67a0f01282fea49"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "026920a80408bfd6ab528288e054f2827e275e6d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ddb6568e39aca91b2f817254449752c3490f3ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ddb6568e39aca91b2f817254449752c3490f3ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ddb6568e39aca91b2f817254449752c3490f3ed", "patch": "@@ -1,3 +1,11 @@\n+2004-01-09  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config/rs6000/linux64.h (SUBSUBTARGET_OVERRIDE_OPTIONS): Ensure\n+\ttarget_flags has MASK_POWERPC64 when -m64.\n+\t* config/rs6000/rs6000.c (processor_target_table): Add MASK_POWERPC64\n+\tto 620, 630, power3, power4 and rs64a entries.\n+\t* config/rs6000/rs6000.h (MASK_64BIT): Expand comment.\n+\n 2004-01-08  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* simplify-rtx.c (simplify_immed_subreg): Fix construction of"}, {"sha": "d56c106b5334fa222619505972d793fc00dd3865", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ddb6568e39aca91b2f817254449752c3490f3ed/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ddb6568e39aca91b2f817254449752c3490f3ed/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=7ddb6568e39aca91b2f817254449752c3490f3ed", "patch": "@@ -1,6 +1,7 @@\n /* Definitions of target machine for GNU compiler,\n    for 64 bit PowerPC linux.\n-   Copyright (C) 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001, 2002, 2003, 2004\n+   Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -89,6 +90,11 @@\n \t      target_flags &= ~MASK_PROTOTYPE;\t\t\t\\\n \t      error (INVALID_64BIT, \"prototype\");\t\t\\\n \t    }\t\t\t\t\t\t\t\\\n+          if ((target_flags & MASK_POWERPC64) == 0)\t\t\\\n+\t    {\t\t\t\t\t\t\t\\\n+\t      target_flags |= MASK_POWERPC64;\t\t\t\\\n+\t      error (\"-m64 requires a PowerPC64 cpu\");\t\t\\\n+\t    }\t\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\\"}, {"sha": "32f4f2d19d3f79cdfee73694f35b853337cf744c", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ddb6568e39aca91b2f817254449752c3490f3ed/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ddb6568e39aca91b2f817254449752c3490f3ed/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=7ddb6568e39aca91b2f817254449752c3490f3ed", "patch": "@@ -662,8 +662,10 @@ rs6000_override_options (const char *default_cpu)\n \t {\"603e\", PROCESSOR_PPC603, POWERPC_BASE_MASK | MASK_PPC_GFXOPT},\n \t {\"604\", PROCESSOR_PPC604, POWERPC_BASE_MASK | MASK_PPC_GFXOPT},\n \t {\"604e\", PROCESSOR_PPC604e, POWERPC_BASE_MASK | MASK_PPC_GFXOPT},\n-\t {\"620\", PROCESSOR_PPC620, POWERPC_BASE_MASK | MASK_PPC_GFXOPT},\n-\t {\"630\", PROCESSOR_PPC630, POWERPC_BASE_MASK | MASK_PPC_GFXOPT},\n+\t {\"620\", PROCESSOR_PPC620,\n+\t  POWERPC_BASE_MASK | MASK_PPC_GFXOPT | MASK_POWERPC64},\n+\t {\"630\", PROCESSOR_PPC630,\n+\t  POWERPC_BASE_MASK | MASK_PPC_GFXOPT | MASK_POWERPC64},\n \t {\"740\", PROCESSOR_PPC750, POWERPC_BASE_MASK | MASK_PPC_GFXOPT},\n \t {\"7400\", PROCESSOR_PPC7400, POWERPC_7400_MASK},\n \t {\"7450\", PROCESSOR_PPC7450, POWERPC_7400_MASK},\n@@ -684,8 +686,10 @@ rs6000_override_options (const char *default_cpu)\n \t {\"power\", PROCESSOR_POWER, MASK_POWER | MASK_MULTIPLE | MASK_STRING},\n \t {\"power2\", PROCESSOR_POWER,\n \t  MASK_POWER | MASK_POWER2 | MASK_MULTIPLE | MASK_STRING},\n-\t {\"power3\", PROCESSOR_PPC630, POWERPC_BASE_MASK | MASK_PPC_GFXOPT},\n-\t {\"power4\", PROCESSOR_POWER4, POWERPC_BASE_MASK | MASK_PPC_GFXOPT},\n+\t {\"power3\", PROCESSOR_PPC630,\n+\t  POWERPC_BASE_MASK | MASK_PPC_GFXOPT | MASK_POWERPC64},\n+\t {\"power4\", PROCESSOR_POWER4,\n+\t  POWERPC_BASE_MASK | MASK_PPC_GFXOPT | MASK_POWERPC64},\n \t {\"powerpc\", PROCESSOR_POWERPC, POWERPC_BASE_MASK},\n \t {\"powerpc64\", PROCESSOR_POWERPC64,\n \t  POWERPC_BASE_MASK | MASK_POWERPC64},\n@@ -695,7 +699,7 @@ rs6000_override_options (const char *default_cpu)\n \t  MASK_POWER | MASK_POWER2 | MASK_MULTIPLE | MASK_STRING},\n \t {\"rsc\", PROCESSOR_PPC601, MASK_POWER | MASK_MULTIPLE | MASK_STRING},\n \t {\"rsc1\", PROCESSOR_PPC601, MASK_POWER | MASK_MULTIPLE | MASK_STRING},\n-\t {\"rs64a\", PROCESSOR_RS64A, POWERPC_BASE_MASK},\n+\t {\"rs64a\", PROCESSOR_RS64A, POWERPC_BASE_MASK | MASK_POWERPC64},\n       };\n \n   const size_t ptt_size = ARRAY_SIZE (processor_target_table);"}, {"sha": "f09c6940c6c2b60e3f69fc28d4ac401e1a46d2de", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ddb6568e39aca91b2f817254449752c3490f3ed/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ddb6568e39aca91b2f817254449752c3490f3ed/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=7ddb6568e39aca91b2f817254449752c3490f3ed", "patch": "@@ -160,7 +160,10 @@ extern int target_flags;\n    function, and one less allocable register.  */\n #define MASK_MINIMAL_TOC\t0x00000200\n \n-/* Nonzero for the 64bit model: longs and pointers are 64 bits.  */\n+/* Nonzero for the 64 bit ABIs: longs and pointers are 64 bits.  The\n+   chip is running in \"64-bit mode\", in which CR0 is set in dot\n+   operations based on all 64 bits of the register, bdnz works on 64-bit\n+   ctr, lr is 64 bits, and so on.  Requires MASK_POWERPC64.  */\n #define MASK_64BIT\t\t0x00000400\n \n /* Disable use of FPRs.  */"}]}