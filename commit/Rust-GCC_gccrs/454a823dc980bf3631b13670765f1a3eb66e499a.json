{"sha": "454a823dc980bf3631b13670765f1a3eb66e499a", "node_id": "C_kwDOANBUbNoAKDQ1NGE4MjNkYzk4MGJmMzYzMWIxMzY3MDc2NWYxYTNlYjY2ZTQ5OWE", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-21T08:16:27Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-21T08:16:27Z"}, "message": "Revert \"gcc-changelog: temporarily disable check_line_start\"\n\nThis reverts commit 0275ff207027954d16e873ccdbd92f9881a14e72.", "tree": {"sha": "dfdb52c9f0eff15d0161089d6bb96335c212cc58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfdb52c9f0eff15d0161089d6bb96335c212cc58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/454a823dc980bf3631b13670765f1a3eb66e499a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/454a823dc980bf3631b13670765f1a3eb66e499a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/454a823dc980bf3631b13670765f1a3eb66e499a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/454a823dc980bf3631b13670765f1a3eb66e499a/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "139ffc7771b45ea5ef38d58b962976e3f269589c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/139ffc7771b45ea5ef38d58b962976e3f269589c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/139ffc7771b45ea5ef38d58b962976e3f269589c"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "3bd671011f20de8f5156f6374e831959405cb531", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454a823dc980bf3631b13670765f1a3eb66e499a/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454a823dc980bf3631b13670765f1a3eb66e499a/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=454a823dc980bf3631b13670765f1a3eb66e499a", "patch": "@@ -615,8 +615,6 @@ def check_for_broken_parentheses(self):\n                 self.errors.append(Error(msg, entry.parentheses_stack[-1]))\n \n     def check_line_start(self):\n-        # FIXME: temporarily disable\n-        return\n         for entry in self.changelog_entries:\n             for line in entry.lines:\n                 if line.startswith('\\t '):"}]}