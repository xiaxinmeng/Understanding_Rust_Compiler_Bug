{"sha": "5c3b86aff6041b487f09fe9c4aef6c34034ccd84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMzYjg2YWZmNjA0MWI0ODdmMDlmZTljNGFlZjZjMzQwMzRjY2Q4NA==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2005-07-13T14:30:08Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2005-07-13T14:30:08Z"}, "message": "Missed part of commit\n\nFrom-SVN: r101969", "tree": {"sha": "f1bcb1fff451beddc3d3454cce8b16e9a82fe5cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1bcb1fff451beddc3d3454cce8b16e9a82fe5cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c3b86aff6041b487f09fe9c4aef6c34034ccd84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c3b86aff6041b487f09fe9c4aef6c34034ccd84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c3b86aff6041b487f09fe9c4aef6c34034ccd84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c3b86aff6041b487f09fe9c4aef6c34034ccd84/comments", "author": null, "committer": null, "parents": [{"sha": "20c861589a94acba341dae22cc6a06f716c32c61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20c861589a94acba341dae22cc6a06f716c32c61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20c861589a94acba341dae22cc6a06f716c32c61"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "aedd4b56fa39a1837614f2efb66acfebae50e4f0", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c3b86aff6041b487f09fe9c4aef6c34034ccd84/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c3b86aff6041b487f09fe9c4aef6c34034ccd84/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=5c3b86aff6041b487f09fe9c4aef6c34034ccd84", "patch": "@@ -1294,15 +1294,14 @@ type_safe (unsigned int n, unsigned HOST_WIDE_INT *offset)\n   /* For things we've globbed to single variables, any offset into the\n      variable acts like the entire variable, so that it becomes offset\n      0.  */\n-  if (n == anything_id\n+  if (ninfo->is_special_var\n       || ninfo->is_artificial_var\n       || ninfo->is_unknown_size_var)\n     {\n       *offset = 0;\n       return true;\n     }\n-  return n > anything_id \n-    && (get_varinfo (n)->offset + *offset) < get_varinfo (n)->fullsize;\n+  return (get_varinfo (n)->offset + *offset) < get_varinfo (n)->fullsize;\n }\n \n /* Process a constraint C that represents *x = &y.  */"}]}