{"sha": "2301ca745e4332fce8abcd7bc790d69fabf1a423", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjMwMWNhNzQ1ZTQzMzJmY2U4YWJjZDdiYzc5MGQ2OWZhYmYxYTQyMw==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2015-03-25T05:53:55Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2015-03-25T05:53:55Z"}, "message": "arm.opt (print_tune_info): New option.\n\n\n\t* config/arm/arm.opt (print_tune_info): New option.\n\t* config/arm/arm.c (arm_print_tune_info): New function.\n\t(arm_file_start): Call arm_print_tune_info.\n\t* config/arm/arm-protos.h (struct tune_params): Add comment.\n\t* doc/invoke.texi (@item -mprint-tune-info): New item.\n\t(-mtune): mention it in ARM Option Summary.\n\nFrom-SVN: r221650", "tree": {"sha": "890b1f19d6797fd18a2243142c334c9af40d66d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/890b1f19d6797fd18a2243142c334c9af40d66d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2301ca745e4332fce8abcd7bc790d69fabf1a423", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2301ca745e4332fce8abcd7bc790d69fabf1a423", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2301ca745e4332fce8abcd7bc790d69fabf1a423", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2301ca745e4332fce8abcd7bc790d69fabf1a423/comments", "author": null, "committer": null, "parents": [{"sha": "fae00b3eee74b6bcad636a2a67bec4a48faa8f7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fae00b3eee74b6bcad636a2a67bec4a48faa8f7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fae00b3eee74b6bcad636a2a67bec4a48faa8f7f"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "0f69aa2def8f62969fb585d62e45944a9d4e4a61", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2301ca745e4332fce8abcd7bc790d69fabf1a423/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2301ca745e4332fce8abcd7bc790d69fabf1a423/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2301ca745e4332fce8abcd7bc790d69fabf1a423", "patch": "@@ -1,3 +1,12 @@\n+2015-03-25  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* config/arm/arm.opt (print_tune_info): New option.\n+\t* config/arm/arm.c (arm_print_tune_info): New function.\n+\t(arm_file_start): Call arm_print_tune_info.\n+\t* config/arm/arm-protos.h (struct tune_params): Add comment.\n+\t* doc/invoke.texi (@item -mprint-tune-info): New item.\n+\t(-mtune): mention it in ARM Option Summary.\n+\n 2015-03-25  DJ Delorie  <dj@redhat.com>\n \n \t* config/rl78/rl78.c (rl78_print_operand_1): Move 'p' test to"}, {"sha": "16eb85460555018c1d5286a7da3a71546fc4b006", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2301ca745e4332fce8abcd7bc790d69fabf1a423/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2301ca745e4332fce8abcd7bc790d69fabf1a423/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=2301ca745e4332fce8abcd7bc790d69fabf1a423", "patch": "@@ -264,6 +264,9 @@ enum arm_sched_autopref\n     ARM_SCHED_AUTOPREF_FULL\n   };\n \n+/* Dump function ARM_PRINT_TUNE_INFO should be updated whenever this\n+   structure is modified.  */\n+\n struct tune_params\n {\n   bool (*rtx_costs) (rtx, RTX_CODE, RTX_CODE, int *, bool);"}, {"sha": "50bd3ebab83e2f23c9ba04dad56fcd8f42b174d1", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2301ca745e4332fce8abcd7bc790d69fabf1a423/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2301ca745e4332fce8abcd7bc790d69fabf1a423/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=2301ca745e4332fce8abcd7bc790d69fabf1a423", "patch": "@@ -25633,6 +25633,59 @@ arm_emit_eabi_attribute (const char *name, int num, int val)\n   asm_fprintf (asm_out_file, \"\\n\");\n }\n \n+/* This function is used to print CPU tuning information as comment\n+   in assembler file.  Pointers are not printed for now.  */\n+\n+void\n+arm_print_tune_info (void)\n+{\n+  asm_fprintf (asm_out_file, \"\\t@.tune parameters\\n\");\n+  asm_fprintf (asm_out_file, \"\\t\\t@constant_limit:\\t%d\\n\",\n+\t       current_tune->constant_limit);\n+  asm_fprintf (asm_out_file, \"\\t\\t@max_insns_skipped:\\t%d\\n\",\n+\t       current_tune->max_insns_skipped);\n+  asm_fprintf (asm_out_file, \"\\t\\t@num_prefetch_slots:\\t%d\\n\",\n+\t       current_tune->num_prefetch_slots);\n+  asm_fprintf (asm_out_file, \"\\t\\t@l1_cache_size:\\t%d\\n\",\n+\t       current_tune->l1_cache_size);\n+  asm_fprintf (asm_out_file, \"\\t\\t@l1_cache_line_size:\\t%d\\n\",\n+\t       current_tune->l1_cache_line_size);\n+  asm_fprintf (asm_out_file, \"\\t\\t@prefer_constant_pool:\\t%d\\n\",\n+\t       (int) current_tune->prefer_constant_pool);\n+  asm_fprintf (asm_out_file, \"\\t\\t@branch_cost:\\t(s:speed, p:predictable)\\n\");\n+  asm_fprintf (asm_out_file, \"\\t\\t\\t\\ts&p\\tcost\\n\");\n+  asm_fprintf (asm_out_file, \"\\t\\t\\t\\t00\\t%d\\n\",\n+\t       current_tune->branch_cost (false, false));\n+  asm_fprintf (asm_out_file, \"\\t\\t\\t\\t01\\t%d\\n\",\n+\t       current_tune->branch_cost (false, true));\n+  asm_fprintf (asm_out_file, \"\\t\\t\\t\\t10\\t%d\\n\",\n+\t       current_tune->branch_cost (true, false));\n+  asm_fprintf (asm_out_file, \"\\t\\t\\t\\t11\\t%d\\n\",\n+\t       current_tune->branch_cost (true, true));\n+  asm_fprintf (asm_out_file, \"\\t\\t@prefer_ldrd_strd:\\t%d\\n\",\n+\t       (int) current_tune->prefer_ldrd_strd);\n+  asm_fprintf (asm_out_file, \"\\t\\t@logical_op_non_short_circuit:\\t[%d,%d]\\n\",\n+\t       (int) current_tune->logical_op_non_short_circuit[0],\n+\t       (int) current_tune->logical_op_non_short_circuit[1]);\n+  asm_fprintf (asm_out_file, \"\\t\\t@prefer_neon_for_64bits:\\t%d\\n\",\n+\t       (int) current_tune->prefer_neon_for_64bits);\n+  asm_fprintf (asm_out_file,\n+\t       \"\\t\\t@disparage_flag_setting_t16_encodings:\\t%d\\n\",\n+\t       (int) current_tune->disparage_flag_setting_t16_encodings);\n+  asm_fprintf (asm_out_file,\n+\t       \"\\t\\t@disparage_partial_flag_setting_t16_encodings:\\t%d\\n\",\n+\t       (int) current_tune\n+\t               ->disparage_partial_flag_setting_t16_encodings);\n+  asm_fprintf (asm_out_file, \"\\t\\t@string_ops_prefer_neon:\\t%d\\n\",\n+\t       (int) current_tune->string_ops_prefer_neon);\n+  asm_fprintf (asm_out_file, \"\\t\\t@max_insns_inline_memset:\\t%d\\n\",\n+\t       current_tune->max_insns_inline_memset);\n+  asm_fprintf (asm_out_file, \"\\t\\t@fuseable_ops:\\t%u\\n\",\n+\t       current_tune->fuseable_ops);\n+  asm_fprintf (asm_out_file, \"\\t\\t@sched_autopref:\\t%d\\n\",\n+\t       (int) current_tune->sched_autopref);\n+}\n+\n static void\n arm_file_start (void)\n {\n@@ -25684,6 +25737,9 @@ arm_file_start (void)\n \t  asm_fprintf (asm_out_file, \"\\t.cpu %s\\n\", truncated_name);\n \t}\n \n+      if (print_tune_info)\n+\tarm_print_tune_info ();\n+\n       if (TARGET_SOFT_FLOAT)\n \t{\n \t  fpu_name = \"softvfp\";"}, {"sha": "d4ff164c7ef43a71a380c20ba431db659ee30761", "filename": "gcc/config/arm/arm.opt", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2301ca745e4332fce8abcd7bc790d69fabf1a423/gcc%2Fconfig%2Farm%2Farm.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2301ca745e4332fce8abcd7bc790d69fabf1a423/gcc%2Fconfig%2Farm%2Farm.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.opt?ref=2301ca745e4332fce8abcd7bc790d69fabf1a423", "patch": "@@ -222,6 +222,12 @@ mtune=\n Target RejectNegative ToLower Joined Enum(processor_type) Var(arm_tune_option) Init(arm_none)\n Tune code for the given processor\n \n+mprint-tune-info\n+Target Report RejectNegative Var(print_tune_info) Init(0)\n+Print CPU tuning information as comment in assembler file.  This is\n+an option used only for regression testing of the compiler and not\n+intended for ordinary use in compiling code.\n+\n ; Other processor_type values are loaded from arm-tables.opt\n ; but that is a generated file and this is an odd-one-out.\n EnumValue"}, {"sha": "9749727c13f23658c2bcbc6211cc502c50a65ac1", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2301ca745e4332fce8abcd7bc790d69fabf1a423/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2301ca745e4332fce8abcd7bc790d69fabf1a423/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=2301ca745e4332fce8abcd7bc790d69fabf1a423", "patch": "@@ -550,6 +550,7 @@ Objective-C and Objective-C++ Dialects}.\n -mfp16-format=@var{name}\n -mthumb-interwork  -mno-thumb-interwork @gol\n -mcpu=@var{name}  -march=@var{name}  -mfpu=@var{name}  @gol\n+-mtune=@var{name} -mprint-tune-info @gol\n -mstructure-size-boundary=@var{n} @gol\n -mabort-on-noreturn @gol\n -mlong-calls  -mno-long-calls @gol\n@@ -13474,6 +13475,13 @@ should be considered deprecated.\n Restricts generation of IT blocks to conform to the rules of ARMv8.\n IT blocks can only contain a single 16-bit instruction from a select\n set of instructions. This option is on by default for ARMv8 Thumb mode.\n+\n+@item -mprint-tune-info\n+@opindex mprint-tune-info\n+Print CPU tuning information as comment in assembler file.  This is\n+an option used only for regression testing of the compiler and not\n+intended for ordinary use in compiling code.  This option is disabled\n+by default.\n @end table\n \n @node AVR Options"}]}