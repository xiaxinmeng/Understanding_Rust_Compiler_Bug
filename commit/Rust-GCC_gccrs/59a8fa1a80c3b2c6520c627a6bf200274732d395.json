{"sha": "59a8fa1a80c3b2c6520c627a6bf200274732d395", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlhOGZhMWE4MGMzYjJjNjUyMGM2MjdhNmJmMjAwMjc0NzMyZDM5NQ==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-02-03T12:29:32Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-02-06T15:45:51Z"}, "message": "Support Self used within impl blocks\n\nThis is simply a type reference so we can use the name resolver to resolve\nSelf as a type reference back to the Type used for the impl block.\n\nFixes #204", "tree": {"sha": "111e1da00bbea7d6e0d21c2aebe07089e21823bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/111e1da00bbea7d6e0d21c2aebe07089e21823bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59a8fa1a80c3b2c6520c627a6bf200274732d395", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59a8fa1a80c3b2c6520c627a6bf200274732d395", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59a8fa1a80c3b2c6520c627a6bf200274732d395", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59a8fa1a80c3b2c6520c627a6bf200274732d395/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7098b373172354a9d68d319fdbfcc07f99970914", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7098b373172354a9d68d319fdbfcc07f99970914", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7098b373172354a9d68d319fdbfcc07f99970914"}], "stats": {"total": 74, "additions": 68, "deletions": 6}, "files": [{"sha": "5ed98a90624f659aeeff3153ebedc399a136f958", "filename": "gcc/rust/resolve/rust-ast-resolve-item.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a8fa1a80c3b2c6520c627a6bf200274732d395/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a8fa1a80c3b2c6520c627a6bf200274732d395/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.h?ref=59a8fa1a80c3b2c6520c627a6bf200274732d395", "patch": "@@ -115,8 +115,18 @@ class ResolveItem : public ResolverBase\n \n   void visit (AST::InherentImpl &impl_block)\n   {\n+    NodeId resolved_node = ResolveType::go (impl_block.get_type ().get (),\n+\t\t\t\t\t    impl_block.get_node_id ());\n+    if (resolved_node == UNKNOWN_NODEID)\n+      return;\n+\n+    resolver->get_type_scope ().insert (\n+      \"Self\", resolved_node, impl_block.get_type ()->get_locus_slow ());\n+\n     for (auto &impl_item : impl_block.get_impl_items ())\n       impl_item->accept_vis (*this);\n+\n+    resolver->get_type_scope ().peek ()->clear_name (\"Self\", resolved_node);\n   }\n \n private:"}, {"sha": "2e4e8e77ba1c2642fefcadb801147dbda6188f0e", "filename": "gcc/rust/resolve/rust-ast-resolve-toplevel.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a8fa1a80c3b2c6520c627a6bf200274732d395/gcc%2Frust%2Fresolve%2Frust-ast-resolve-toplevel.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a8fa1a80c3b2c6520c627a6bf200274732d395/gcc%2Frust%2Fresolve%2Frust-ast-resolve-toplevel.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-toplevel.h?ref=59a8fa1a80c3b2c6520c627a6bf200274732d395", "patch": "@@ -110,10 +110,6 @@ class ResolveTopLevel : public ResolverBase\n \n   void visit (AST::InherentImpl &impl_block)\n   {\n-    if (!ResolveType::go (impl_block.get_type ().get (),\n-\t\t\t  impl_block.get_node_id ()))\n-      return;\n-\n     for (auto &impl_item : impl_block.get_impl_items ())\n       ResolveToplevelImplItem::go (impl_item.get (),\n \t\t\t\t   impl_block.get_type ().get ());"}, {"sha": "ec8ee87c21e8d7a259b0a44b0b557864f44db0e1", "filename": "gcc/rust/resolve/rust-ast-resolve-type.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a8fa1a80c3b2c6520c627a6bf200274732d395/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a8fa1a80c3b2c6520c627a6bf200274732d395/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.h?ref=59a8fa1a80c3b2c6520c627a6bf200274732d395", "patch": "@@ -28,14 +28,14 @@ namespace Resolver {\n class ResolveType : public ResolverBase\n {\n public:\n-  static bool go (AST::Type *type, NodeId parent)\n+  static NodeId go (AST::Type *type, NodeId parent)\n   {\n     ResolveType resolver (parent);\n     type->accept_vis (resolver);\n     if (!resolver.ok)\n       rust_error_at (type->get_locus_slow (), \"unresolved type\");\n \n-    return resolver.ok;\n+    return resolver.resolved_node;\n   };\n \n   void visit (AST::BareFunctionType &fntype)"}, {"sha": "ea0e4f51e602c4f4b01f845b6a77359951b09a25", "filename": "gcc/rust/resolve/rust-name-resolver.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a8fa1a80c3b2c6520c627a6bf200274732d395/gcc%2Frust%2Fresolve%2Frust-name-resolver.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a8fa1a80c3b2c6520c627a6bf200274732d395/gcc%2Frust%2Fresolve%2Frust-name-resolver.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-name-resolver.h?ref=59a8fa1a80c3b2c6520c627a6bf200274732d395", "patch": "@@ -71,6 +71,19 @@ class Rib\n     return true;\n   }\n \n+  void clear_name (std::string ident, NodeId id)\n+  {\n+    mappings.erase (ident);\n+    for (auto &it : decls_within_rib)\n+      {\n+\tif (it.first == id)\n+\t  {\n+\t    decls_within_rib.erase (it);\n+\t    break;\n+\t  }\n+      }\n+  }\n+\n   CrateNum get_crate_num () const { return crate_num; }\n   NodeId get_node_id () const { return node_id; }\n "}, {"sha": "3093a6c0f1c7aa3f57d5b8261cf5487c6987e8ff", "filename": "gcc/testsuite/rust.test/compilable/impl_block3.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a8fa1a80c3b2c6520c627a6bf200274732d395/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Fimpl_block3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a8fa1a80c3b2c6520c627a6bf200274732d395/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Fimpl_block3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Fimpl_block3.rs?ref=59a8fa1a80c3b2c6520c627a6bf200274732d395", "patch": "@@ -0,0 +1,31 @@\n+struct Point {\n+    x: f64,\n+    y: f64,\n+}\n+\n+impl Point {\n+    fn origin() -> Point {\n+        Point { x: 0.0, y: 0.0 }\n+    }\n+\n+    fn new(x: f64, y: f64) -> Point {\n+        Point { x: x, y: y }\n+    }\n+}\n+\n+struct Rectangle {\n+    p1: Point,\n+    p2: Point,\n+}\n+\n+impl Rectangle {\n+    fn from(p1: Point, p2: Point) -> Self {\n+        Self { p1, p2 }\n+    }\n+}\n+\n+fn main() {\n+    let p1 = Point::origin();\n+    let p2 = Point::new(3.0, 4.0);\n+    let rect = Rectangle::from(p1, p2);\n+}"}, {"sha": "373d6dd5a607865943964a84c34eca16d8269435", "filename": "gcc/testsuite/rust.test/compilable/self_type1.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a8fa1a80c3b2c6520c627a6bf200274732d395/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Fself_type1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a8fa1a80c3b2c6520c627a6bf200274732d395/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Fself_type1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Fself_type1.rs?ref=59a8fa1a80c3b2c6520c627a6bf200274732d395", "patch": "@@ -0,0 +1,12 @@\n+struct Foo(i32, bool);\n+\n+impl Foo {\n+    fn new(a: i32, b: bool) -> Self {\n+        Self(a, b)\n+    }\n+}\n+\n+fn main() {\n+    let a;\n+    a = Foo::new(1, true);\n+}"}]}