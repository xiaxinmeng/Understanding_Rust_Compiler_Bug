{"sha": "a0fa549732f1a6ab26c7b904472a8f7d241dae39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBmYTU0OTczMmYxYTZhYjI2YzdiOTA0NDcyYThmN2QyNDFkYWUzOQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-05-23T10:22:35Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-23T10:22:35Z"}, "message": "[Ada] Crash on predicate involving qualified expression in instance\n\nThis patch inhibits the generation of freeze nodes when pre-analyzing the\ndomain of iteration of an Ada2012 loop that appears as a quantified\nexpression in a predicate for an array type. This prevents a back-end\nabort on an invisible freeze node that would otherwise appear in an\nunexpanded code sequence.\n\nThe following must compile quietly:\n\n----\nwith Id_Manager;\n\npackage My_Id_Manager is new Id_Manager (Max_Id_Type   => 100_000,\n                                         Max_Key_Count => 100);\n----\ngeneric\n   Max_Id_Type   : Positive;\n   Max_Key_Count : Positive;\n\npackage Id_Manager is\n   type Unique_Id_Type is new Integer range 0 .. Max_Id_Type;\n\n   Undefined_Id : constant Unique_Id_Type := 0;\n\n   type Key_Count is new Integer range 0 .. Max_Key_Count;\n   subtype Key_Index is Key_Count range 1 .. Key_Count'Last;\n\n   type Key_Array is array (Key_Index range <>) of Unique_Id_Type\n     with Predicate => Key_Array'First = 1;\n\n   type Id_Manager_State (Capacity : Key_Count) is private;\n\n   procedure Display_Objects (TheObject : Id_Manager_State);\n\nprivate\n   type Id_Manager_State (Capacity : Key_Count) is record\n      Id_Key   : Key_Array (1 .. Capacity) := (others => Undefined_Id);\n      Key_Size : Key_Count                 := 0;\n   end record;\nend Id_Manager;\n----\npackage body Id_Manager is\n   procedure Display_Objects (TheObject : Id_Manager_State) is\n   begin\n      for Item of TheObject.Id_Key loop\n         null;\n      end loop;\n   end Display_Objects;\nend Id_Manager;\n\n2018-05-23  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch5.adb (Preanalyze_Range): The pre-analysis of the domain of\n\titeration of an Ada2012 loop is performed to determine the type of the\n\tdomain, but full analysis is performed once the loop is rewritten as a\n\twhile-loop during expansion. The pre-analysis suppresses expansion; it\n\tmust also suppress the generation of freeze nodes, which may otherwise\n\tappear in the wrong scope before rewritting.\n\nFrom-SVN: r260582", "tree": {"sha": "42ea2601ade6aa0de1df48cb406eef64797222d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42ea2601ade6aa0de1df48cb406eef64797222d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0fa549732f1a6ab26c7b904472a8f7d241dae39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0fa549732f1a6ab26c7b904472a8f7d241dae39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0fa549732f1a6ab26c7b904472a8f7d241dae39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0fa549732f1a6ab26c7b904472a8f7d241dae39/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0f3668cdee0255ce993f4309448329ca40bfe3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0f3668cdee0255ce993f4309448329ca40bfe3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0f3668cdee0255ce993f4309448329ca40bfe3c"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "b99ca1a5b4e9432198f4221abef65c097afdcc64", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0fa549732f1a6ab26c7b904472a8f7d241dae39/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0fa549732f1a6ab26c7b904472a8f7d241dae39/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a0fa549732f1a6ab26c7b904472a8f7d241dae39", "patch": "@@ -1,3 +1,12 @@\n+2018-05-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch5.adb (Preanalyze_Range): The pre-analysis of the domain of\n+\titeration of an Ada2012 loop is performed to determine the type of the\n+\tdomain, but full analysis is performed once the loop is rewritten as a\n+\twhile-loop during expansion. The pre-analysis suppresses expansion; it\n+\tmust also suppress the generation of freeze nodes, which may otherwise\n+\tappear in the wrong scope before rewritting.\n+\n 2018-05-23  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_elab.adb: Update the section on suppressing elaboration warnings."}, {"sha": "2a1f222dfc4d9037a0f3586eecdafb455fd31a39", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0fa549732f1a6ab26c7b904472a8f7d241dae39/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0fa549732f1a6ab26c7b904472a8f7d241dae39/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=a0fa549732f1a6ab26c7b904472a8f7d241dae39", "patch": "@@ -4076,6 +4076,17 @@ package body Sem_Ch5 is\n       Full_Analysis := False;\n       Expander_Mode_Save_And_Set (False);\n \n+      --  In addition to the above we must ecplicity suppress the\n+      --  generation of freeze nodes which might otherwise be generated\n+      --  during resolution of the range (e.g. if given by an attribute\n+      --  that will freeze its prefix).\n+\n+      Set_Must_Not_Freeze (R_Copy);\n+\n+      if Nkind (R_Copy) = N_Attribute_Reference then\n+         Set_Must_Not_Freeze (Prefix (R_Copy));\n+      end if;\n+\n       Analyze (R_Copy);\n \n       if Nkind (R_Copy) in N_Subexpr and then Is_Overloaded (R_Copy) then"}]}