{"sha": "802561b2cc6cd4e4f59815f7de199026de62a650", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAyNTYxYjJjYzZjZDRlNGY1OTgxNWY3ZGUxOTkwMjZkZTYyYTY1MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-10-23T19:06:37Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-10-23T19:06:37Z"}, "message": "PR c++/77369 - wrong noexcept handling in C++14 and below\n\n\t* tree.c (strip_typedefs): Canonicalize TYPE_RAISES_EXCEPTIONS.\n\nFrom-SVN: r254022", "tree": {"sha": "d13759d2a3934d2bd328ea9ef4273a5ac58e9f73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d13759d2a3934d2bd328ea9ef4273a5ac58e9f73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/802561b2cc6cd4e4f59815f7de199026de62a650", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/802561b2cc6cd4e4f59815f7de199026de62a650", "html_url": "https://github.com/Rust-GCC/gccrs/commit/802561b2cc6cd4e4f59815f7de199026de62a650", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/802561b2cc6cd4e4f59815f7de199026de62a650/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "52c91d3aaf983110034f894a555e3ebb9c4fa3e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52c91d3aaf983110034f894a555e3ebb9c4fa3e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52c91d3aaf983110034f894a555e3ebb9c4fa3e6"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "9514e9c1c27892b9a9051564891f7181237d01b5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/802561b2cc6cd4e4f59815f7de199026de62a650/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/802561b2cc6cd4e4f59815f7de199026de62a650/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=802561b2cc6cd4e4f59815f7de199026de62a650", "patch": "@@ -1,3 +1,8 @@\n+2017-10-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/77369 - wrong noexcept handling in C++14 and below\n+\t* tree.c (strip_typedefs): Canonicalize TYPE_RAISES_EXCEPTIONS.\n+\n 2017-10-20  Nathan Sidwell  <nathan@acm.org>\n \n \t* class.c (layout_class_type): Cleanup as-base creation, determine"}, {"sha": "48d40945af397de533d039474d325a8152a6ead3", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/802561b2cc6cd4e4f59815f7de199026de62a650/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/802561b2cc6cd4e4f59815f7de199026de62a650/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=802561b2cc6cd4e4f59815f7de199026de62a650", "patch": "@@ -1439,7 +1439,11 @@ strip_typedefs (tree t, bool *remove_attributes)\n \t  is_variant = true;\n \n \ttype = strip_typedefs (TREE_TYPE (t), remove_attributes);\n-\tchanged = type != TREE_TYPE (t) || is_variant;\n+\ttree canon_spec = (flag_noexcept_type\n+\t\t\t   ? canonical_eh_spec (TYPE_RAISES_EXCEPTIONS (t))\n+\t\t\t   : NULL_TREE);\n+\tchanged = (type != TREE_TYPE (t) || is_variant\n+\t\t   || TYPE_RAISES_EXCEPTIONS (t) != canon_spec);\n \n \tfor (arg_node = TYPE_ARG_TYPES (t);\n \t     arg_node;\n@@ -1498,9 +1502,8 @@ strip_typedefs (tree t, bool *remove_attributes)\n \t\t\t\t\ttype_memfn_rqual (t));\n \t  }\n \n-\tif (TYPE_RAISES_EXCEPTIONS (t))\n-\t  result = build_exception_variant (result,\n-\t\t\t\t\t    TYPE_RAISES_EXCEPTIONS (t));\n+\tif (canon_spec)\n+\t  result = build_exception_variant (result, canon_spec);\n \tif (TYPE_HAS_LATE_RETURN_TYPE (t))\n \t  TYPE_HAS_LATE_RETURN_TYPE (result) = 1;\n       }"}, {"sha": "c4c0e7dd466f9c64c80c6d6a6d8e18ff1590954a", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept31.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/802561b2cc6cd4e4f59815f7de199026de62a650/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/802561b2cc6cd4e4f59815f7de199026de62a650/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept31.C?ref=802561b2cc6cd4e4f59815f7de199026de62a650", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/77369\n+// { dg-do compile { target c++11 } }\n+\n+template<typename F> int caller(F f) noexcept(noexcept(f())) { f(); return 0; }\n+\n+void func1() noexcept { }\n+\n+void func2() { throw 1; }\n+\n+int instantiate_caller_with_func1 = caller(func1);\n+\n+static_assert( !noexcept(caller(func2)), \"\" );"}, {"sha": "b51d7af2b11ffaba0c0baebd217d6fde1d8937f9", "filename": "gcc/testsuite/g++.dg/cpp1z/noexcept-type13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/802561b2cc6cd4e4f59815f7de199026de62a650/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/802561b2cc6cd4e4f59815f7de199026de62a650/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnoexcept-type13.C?ref=802561b2cc6cd4e4f59815f7de199026de62a650", "patch": "@@ -5,7 +5,7 @@\n void foo () throw () {}\t\t// { dg-bogus \"mangled name\" }\n \n template <class T>\n-T bar (T x) { return x; }\t// { dg-warning \"mangled name\" \"\" { target c++14_down } }\n+T bar (T x) { return x; }\n \n void baz () {\t\t\t// { dg-bogus \"mangled name\" }\n   return (bar (foo)) ();"}]}