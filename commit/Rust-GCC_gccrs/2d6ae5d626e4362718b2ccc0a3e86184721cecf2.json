{"sha": "2d6ae5d626e4362718b2ccc0a3e86184721cecf2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ2YWU1ZDYyNmU0MzYyNzE4YjJjY2MwYTNlODYxODQ3MjFjZWNmMg==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2006-01-17T00:24:11Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2006-01-17T00:24:11Z"}, "message": "pa.md: Disparage copies between general and floating-point registers in 32-bit move...\n\n\t* pa.md: Disparage copies between general and floating-point registers\n\tin 32-bit move patterns.\n\nFrom-SVN: r109788", "tree": {"sha": "fa72edea7603b3c61774f7de83b57e8b647112e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa72edea7603b3c61774f7de83b57e8b647112e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d6ae5d626e4362718b2ccc0a3e86184721cecf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d6ae5d626e4362718b2ccc0a3e86184721cecf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d6ae5d626e4362718b2ccc0a3e86184721cecf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d6ae5d626e4362718b2ccc0a3e86184721cecf2/comments", "author": null, "committer": null, "parents": [{"sha": "ee62fc6e350683472c8a53c1342f09a6e96fa937", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee62fc6e350683472c8a53c1342f09a6e96fa937", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee62fc6e350683472c8a53c1342f09a6e96fa937"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "bc7f0018efb29e78e0cecb969f2dc39b39db34e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d6ae5d626e4362718b2ccc0a3e86184721cecf2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d6ae5d626e4362718b2ccc0a3e86184721cecf2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d6ae5d626e4362718b2ccc0a3e86184721cecf2", "patch": "@@ -1,3 +1,8 @@\n+2006-01-16  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* pa.md: Disparage copies between general and floating-point registers\n+\tin 32-bit move patterns.\n+\n 2006-01-16  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR testsuite/25741"}, {"sha": "b8131a8cf8f6d88a9b5e2d13802844c0372d25bd", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d6ae5d626e4362718b2ccc0a3e86184721cecf2/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d6ae5d626e4362718b2ccc0a3e86184721cecf2/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=2d6ae5d626e4362718b2ccc0a3e86184721cecf2", "patch": "@@ -2307,9 +2307,9 @@\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"move_dest_operand\"\n-\t\t\t  \"=r,r,r,r,r,r,Q,!*q,!r,!*f,*f,T,r,f\")\n+\t\t\t  \"=r,r,r,r,r,r,Q,!*q,!r,!*f,*f,T,!r,!f\")\n \t(match_operand:SI 1 \"move_src_operand\"\n-\t\t\t  \"A,r,J,N,K,RQ,rM,!rM,!*q,!*fM,RT,*f,f,r\"))]\n+\t\t\t  \"A,r,J,N,K,RQ,rM,!rM,!*q,!*fM,RT,*f,!f,!r\"))]\n   \"(register_operand (operands[0], SImode)\n     || reg_or_0_operand (operands[1], SImode))\n    && !TARGET_SOFT_FLOAT\n@@ -3869,9 +3869,9 @@\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"move_dest_operand\"\n-\t\t\t  \"=f,*r,Q,?o,?Q,f,*r,*r,r,f\")\n+\t\t\t  \"=f,*r,Q,?o,?Q,f,*r,*r,!r,!f\")\n \t(match_operand:DF 1 \"reg_or_0_or_nonsymb_mem_operand\"\n-\t\t\t  \"fG,*rG,f,*r,*r,RQ,o,RQ,f,r\"))]\n+\t\t\t  \"fG,*rG,f,*r,*r,RQ,o,RQ,!f,!r\"))]\n   \"(register_operand (operands[0], DFmode)\n     || reg_or_0_operand (operands[1], DFmode))\n    && !(GET_CODE (operands[1]) == CONST_DOUBLE\n@@ -4043,9 +4043,9 @@\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"move_dest_operand\"\n-\t\t\t  \"=r,?o,?Q,r,r,r,f\")\n+\t\t\t  \"=r,?o,?Q,r,r,!r,!f\")\n \t(match_operand:DF 1 \"reg_or_0_or_nonsymb_mem_operand\"\n-\t\t\t  \"rG,r,r,o,RQ,f,r\"))]\n+\t\t\t  \"rG,r,r,o,RQ,!f,!r\"))]\n   \"(register_operand (operands[0], DFmode)\n     || reg_or_0_operand (operands[1], DFmode))\n    && !TARGET_64BIT\n@@ -4185,9 +4185,9 @@\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"move_dest_operand\"\n-\t\t\t  \"=r,o,Q,r,r,r,*f,*f,T,r,f\")\n+\t\t\t  \"=r,o,Q,r,r,r,*f,*f,T,!r,!f\")\n \t(match_operand:DI 1 \"general_operand\"\n-\t\t\t  \"rM,r,r,o*R,Q,i,*fM,RT,*f,f,r\"))]\n+\t\t\t  \"rM,r,r,o*R,Q,i,*fM,RT,*f,!f,!r\"))]\n   \"(register_operand (operands[0], DImode)\n     || reg_or_0_operand (operands[1], DImode))\n    && !TARGET_64BIT\n@@ -4414,9 +4414,9 @@\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"move_dest_operand\"\n-\t\t\t  \"=f,!*r,f,*r,Q,Q,r,f\")\n+\t\t\t  \"=f,!*r,f,*r,Q,Q,!r,!f\")\n \t(match_operand:SF 1 \"reg_or_0_or_nonsymb_mem_operand\"\n-\t\t\t  \"fG,!*rG,RQ,RQ,f,*rG,f,r\"))]\n+\t\t\t  \"fG,!*rG,RQ,RQ,f,*rG,!f,!r\"))]\n   \"(register_operand (operands[0], SFmode)\n     || reg_or_0_operand (operands[1], SFmode))\n    && !TARGET_SOFT_FLOAT"}]}