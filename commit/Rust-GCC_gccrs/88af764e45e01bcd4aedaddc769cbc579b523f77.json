{"sha": "88af764e45e01bcd4aedaddc769cbc579b523f77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhhZjc2NGU0NWUwMWJjZDRhZWRhZGRjNzY5Y2JjNTc5YjUyM2Y3Nw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2005-01-27T22:33:14Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2005-01-27T22:33:14Z"}, "message": "tree-into-ssa.c (ssa_rewrite_initialize_block): Do not register definitions of SSA_NAMEs which are not being rewritten.\n\n        * tree-into-ssa.c (ssa_rewrite_initialize_block): Do not register\n        definitions of SSA_NAMEs which are not being rewritten.\n        (rewrite_ssa_into_ssa): Only initialize the current definition\n        of an SSA_NAME if that SSA_NAME has been marked for rewriting.\n        If checking is enabled, assert that SSA_NAME_AUX is clear for all\n        SSA_NAMEs before returning.\n\nFrom-SVN: r94343", "tree": {"sha": "c6dada1d99e1b7a3443b25b4839959ff5cc19ff5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6dada1d99e1b7a3443b25b4839959ff5cc19ff5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88af764e45e01bcd4aedaddc769cbc579b523f77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88af764e45e01bcd4aedaddc769cbc579b523f77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88af764e45e01bcd4aedaddc769cbc579b523f77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88af764e45e01bcd4aedaddc769cbc579b523f77/comments", "author": null, "committer": null, "parents": [{"sha": "e4652e3759f0df3174957dd0593b7df877599cc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4652e3759f0df3174957dd0593b7df877599cc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4652e3759f0df3174957dd0593b7df877599cc9"}], "stats": {"total": 31, "additions": 17, "deletions": 14}, "files": [{"sha": "6689e89996e6c0083746b280644cd8c86445fda0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88af764e45e01bcd4aedaddc769cbc579b523f77/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88af764e45e01bcd4aedaddc769cbc579b523f77/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88af764e45e01bcd4aedaddc769cbc579b523f77", "patch": "@@ -1,3 +1,12 @@\n+2005-01-27  Jeff Law  <law@redhat.com>\n+\n+\t* tree-into-ssa.c (ssa_rewrite_initialize_block): Do not register\n+\tdefinitions of SSA_NAMEs which are not being rewritten.\n+\t(rewrite_ssa_into_ssa): Only initialize the current definition\n+\tof an SSA_NAME if that SSA_NAME has been marked for rewriting.\n+\tIf checking is enabled, assert that SSA_NAME_AUX is clear for all\n+\tSSA_NAMEs before returning.\n+\n 2005-01-27  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* c-common.def, c-dump.c, c-gimplify.c, c-objc-common.c,"}, {"sha": "778157ac2bf9bba0866d9b5554c3e31e83cb3637", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88af764e45e01bcd4aedaddc769cbc579b523f77/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88af764e45e01bcd4aedaddc769cbc579b523f77/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=88af764e45e01bcd4aedaddc769cbc579b523f77", "patch": "@@ -1,5 +1,5 @@\n /* Rewrite a program in Normal form into SSA.\n-   Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n    Contributed by Diego Novillo <dnovillo@redhat.com>\n \n This file is part of GCC.\n@@ -775,11 +775,8 @@ ssa_rewrite_initialize_block (struct dom_walk_data *walk_data, basic_block bb)\n \n \t  if (abnormal_phi)\n \t    SSA_NAME_OCCURS_IN_ABNORMAL_PHI (new_name) = 1;\n+\t  ssa_register_new_def (result, new_name);\n \t}\n-      else\n-\tnew_name = result;\n-\n-      ssa_register_new_def (result, new_name);\n     }\n }\n \n@@ -1654,7 +1651,6 @@ rewrite_ssa_into_ssa (void)\n   struct mark_def_sites_global_data mark_def_sites_global_data;\n   unsigned i;\n   sbitmap snames_to_rename;\n-  tree name;\n   bitmap to_rename;\n   bitmap_iterator bi;\n   \n@@ -1699,6 +1695,7 @@ rewrite_ssa_into_ssa (void)\n   EXECUTE_IF_SET_IN_BITMAP (to_rename, 0, i, bi)\n     {\n       SET_BIT (snames_to_rename, i);\n+      set_current_def (ssa_name (i), NULL_TREE);\n     }\n \n   mark_def_sites_global_data.kills = sbitmap_alloc (num_ssa_names);\n@@ -1722,10 +1719,6 @@ rewrite_ssa_into_ssa (void)\n   /* We no longer need this bitmap, clear and free it.  */\n   sbitmap_free (mark_def_sites_global_data.kills);\n \n-  for (i = 1; i < num_ssa_names; i++)\n-    if (ssa_name (i))\n-      set_current_def (ssa_name (i), NULL_TREE);\n-\n   /* Insert PHI nodes at dominance frontiers of definition blocks.  */\n   insert_phi_nodes (dfs, to_rename);\n \n@@ -1785,15 +1778,16 @@ rewrite_ssa_into_ssa (void)\n \n   htab_delete (def_blocks);\n \n+#ifdef ENABLE_CHECKING\n   for (i = 1; i < num_ssa_names; i++)\n     {\n-      name = ssa_name (i);\n-      if (!name || !SSA_NAME_AUX (name))\n+      tree name = ssa_name (i);\n+      if (!name)\n \tcontinue;\n \n-      free (SSA_NAME_AUX (name));\n-      SSA_NAME_AUX (name) = NULL;\n+      gcc_assert (SSA_NAME_AUX (name) == NULL);\n     }\n+#endif\n \n   BITMAP_XFREE (to_rename);\n   "}]}