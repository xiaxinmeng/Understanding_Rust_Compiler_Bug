{"sha": "42e508b45d21b195109424f62f454fa619f1cc29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJlNTA4YjQ1ZDIxYjE5NTEwOTQyNGY2MmY0NTRmYTYxOWYxY2MyOQ==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2018-05-30T08:58:00Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-30T08:58:00Z"}, "message": "[Ada] Add support for Define_Switch with a callback in GNAT.Command_Line\n\nAdd support for Define_Switch with a callback in GNAT.Command_Line.\n\nThe callback is called for every instance of the switch found on the\ncommand line. This make it possible to have full control over the\nswitch value and chain multiple actions if needed.\n\n2018-05-30  Pascal Obry  <obry@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/g-comlin.ads (Value_Callback, Define_Switch): New.\n\t* libgnat/g-comlin.adb: Add corresponding implementation.\n\nFrom-SVN: r260940", "tree": {"sha": "a87aa0628e5e9ab69e979ea746f01e0c3b04ebdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a87aa0628e5e9ab69e979ea746f01e0c3b04ebdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42e508b45d21b195109424f62f454fa619f1cc29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42e508b45d21b195109424f62f454fa619f1cc29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42e508b45d21b195109424f62f454fa619f1cc29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42e508b45d21b195109424f62f454fa619f1cc29/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7cc6d416ae9fa0e476523d30ab403fa3fd5970c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cc6d416ae9fa0e476523d30ab403fa3fd5970c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cc6d416ae9fa0e476523d30ab403fa3fd5970c2"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "80abf0ccd4c2a273faae0eae198affba75b9ddac", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e508b45d21b195109424f62f454fa619f1cc29/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e508b45d21b195109424f62f454fa619f1cc29/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=42e508b45d21b195109424f62f454fa619f1cc29", "patch": "@@ -1,3 +1,8 @@\n+2018-05-30  Pascal Obry  <obry@adacore.com>\n+\n+\t* libgnat/g-comlin.ads (Value_Callback, Define_Switch): New.\n+\t* libgnat/g-comlin.adb: Add corresponding implementation.\n+\n 2018-05-30  Gary Dismukes  <dismukes@adacore.com>\n \n \t* sem_res.adb, sem_util.adb: Fix several typos."}, {"sha": "24677f15069aaa6780760a212c5d6bdd1a99a036", "filename": "gcc/ada/libgnat/g-comlin.adb", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e508b45d21b195109424f62f454fa619f1cc29/gcc%2Fada%2Flibgnat%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e508b45d21b195109424f62f454fa619f1cc29/gcc%2Fada%2Flibgnat%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-comlin.adb?ref=42e508b45d21b195109424f62f454fa619f1cc29", "patch": "@@ -1474,6 +1474,29 @@ package body GNAT.Command_Line is\n       end if;\n    end Define_Switch;\n \n+   -------------------\n+   -- Define_Switch --\n+   -------------------\n+\n+   procedure Define_Switch\n+     (Config      : in out Command_Line_Configuration;\n+      Callback    : not null Value_Callback;\n+      Switch      : String := \"\";\n+      Long_Switch : String := \"\";\n+      Help        : String := \"\";\n+      Section     : String := \"\";\n+      Argument    : String := \"ARG\")\n+   is\n+      Def : Switch_Definition (Switch_Callback);\n+   begin\n+      if Switch /= \"\" or else Long_Switch /= \"\" then\n+         Initialize_Switch_Def\n+           (Def, Switch, Long_Switch, Help, Section, Argument);\n+         Def.Callback := Callback;\n+         Add (Config, Def);\n+      end if;\n+   end Define_Switch;\n+\n    --------------------\n    -- Define_Section --\n    --------------------\n@@ -3403,6 +3426,10 @@ package body GNAT.Command_Line is\n                   Local_Config.Switches (Index).String_Output.all :=\n                     new String'(Parameter);\n                   return;\n+\n+               when Switch_Callback =>\n+                  Local_Config.Switches (Index).Callback (Switch, Parameter);\n+                  return;\n             end case;\n          end if;\n \n@@ -3471,7 +3498,7 @@ package body GNAT.Command_Line is\n \n       for S in Local_Config.Switches'Range loop\n          case Local_Config.Switches (S).Typ is\n-            when Switch_Untyped =>\n+            when Switch_Untyped | Switch_Callback =>\n                null;   --  Nothing to do\n \n             when Switch_Boolean =>"}, {"sha": "1afa57b6d82975d8d27357e35f482c3afe0e6be7", "filename": "gcc/ada/libgnat/g-comlin.ads", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e508b45d21b195109424f62f454fa619f1cc29/gcc%2Fada%2Flibgnat%2Fg-comlin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e508b45d21b195109424f62f454fa619f1cc29/gcc%2Fada%2Flibgnat%2Fg-comlin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-comlin.ads?ref=42e508b45d21b195109424f62f454fa619f1cc29", "patch": "@@ -678,6 +678,20 @@ package GNAT.Command_Line is\n    --  so that you can specify the default value directly in the declaration\n    --  of the variable). The switch must accept an argument.\n \n+   type Value_Callback is access procedure (Switch, Value : String);\n+\n+   procedure Define_Switch\n+     (Config      : in out Command_Line_Configuration;\n+      Callback    : not null Value_Callback;\n+      Switch      : String := \"\";\n+      Long_Switch : String := \"\";\n+      Help        : String := \"\";\n+      Section     : String := \"\";\n+      Argument    : String := \"ARG\");\n+   --  Call Callback for each instance of Switch. The callback is given the\n+   --  actual switch and the corresponding value. The switch must accept\n+   --  an argument.\n+\n    procedure Set_Usage\n      (Config   : in out Command_Line_Configuration;\n       Usage    : String := \"[switches] [arguments]\";\n@@ -1111,7 +1125,8 @@ private\n    type Switch_Type is (Switch_Untyped,\n                         Switch_Boolean,\n                         Switch_Integer,\n-                        Switch_String);\n+                        Switch_String,\n+                        Switch_Callback);\n \n    type Switch_Definition (Typ : Switch_Type := Switch_Untyped) is record\n       Switch      : GNAT.OS_Lib.String_Access;\n@@ -1135,6 +1150,8 @@ private\n             Integer_Default : Integer;\n          when Switch_String =>\n             String_Output   : access GNAT.Strings.String_Access;\n+         when Switch_Callback =>\n+            Callback        : Value_Callback;\n       end case;\n    end record;\n    type Switch_Definitions is array (Natural range <>) of Switch_Definition;"}]}