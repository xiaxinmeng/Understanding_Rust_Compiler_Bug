{"sha": "8e1e74a162c751014b43d609207aaf75ed4dd428", "node_id": "C_kwDOANBUbNoAKDhlMWU3NGExNjJjNzUxMDE0YjQzZDYwOTIwN2FhZjc1ZWQ0ZGQ0Mjg", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2021-08-30T12:25:50Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-04T08:45:07Z"}, "message": "[Ada] Fix latent problem in Sem_Ch8.Build_Class_Wide_Wrapper\n\ngcc/ada/\n\n\t* sem_ch8.adb (Build_Class_Wide_Wrapper): Fix handling of\n\tclass-wide subtypes; required to handle chains of\n\tinstantiations. Adding also code to identify these wrappers and\n\tproperly resolve instantiations where the wrapper and a tagged\n\ttype primitive are visible.\n\t* einfo.ads (Is_Class_Wide_Wrapper): Adding documentation.\n\t* gen_il-fields.ads (Opt_Field_Enum): Adding\n\tIs_Class_Wide_Wrapper.\n\t* gen_il-gen-gen_entities.adb (Root_Entity_Type): Adding\n\tsemantic flag Is_Class_Wide_Wrapper.", "tree": {"sha": "ffae93de10aeff8b3dc00027090aa08ce8107a7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffae93de10aeff8b3dc00027090aa08ce8107a7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e1e74a162c751014b43d609207aaf75ed4dd428", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1e74a162c751014b43d609207aaf75ed4dd428", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e1e74a162c751014b43d609207aaf75ed4dd428", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1e74a162c751014b43d609207aaf75ed4dd428/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c36774bcc38ba51fc9091d92a079e5b2d4aab759", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c36774bcc38ba51fc9091d92a079e5b2d4aab759", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c36774bcc38ba51fc9091d92a079e5b2d4aab759"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "0239a702659b3b746eaeac243f45049256724690", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1e74a162c751014b43d609207aaf75ed4dd428/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1e74a162c751014b43d609207aaf75ed4dd428/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=8e1e74a162c751014b43d609207aaf75ed4dd428", "patch": "@@ -2429,6 +2429,11 @@ package Einfo is\n --    Is_Class_Wide_Type (synthesized)\n --       Applies to all entities, true for class wide types and subtypes\n \n+--    Is_Class_Wide_Wrapper\n+--       Defined in subprogram entities. Indicates that it has been created as\n+--       a wrapper in a generic/instance scenario involving a formal type and\n+--       a generic primitive operation when the actual is a class-wide type.\n+\n --    Is_Compilation_Unit\n --       Defined in all entities. Set if the entity is a package or subprogram\n --       entity for a compilation unit other than a subunit (since we treat\n@@ -5562,6 +5567,7 @@ package Einfo is\n    --    Ignore_SPARK_Mode_Pragmas\n    --    Is_Abstract_Subprogram               (non-generic case only)\n    --    Is_Called                            (non-generic case only)\n+   --    Is_Class_Wide_Wrapper\n    --    Is_Constructor\n    --    Is_CUDA_Kernel                       (non-generic case only)\n    --    Is_DIC_Procedure                     (non-generic case only)\n@@ -5734,6 +5740,7 @@ package Einfo is\n    --    Default_Expressions_Processed\n    --    Has_Nested_Subprogram\n    --    Ignore_SPARK_Mode_Pragmas\n+   --    Is_Class_Wide_Wrapper\n    --    Is_Elaboration_Checks_OK_Id\n    --    Is_Elaboration_Warnings_OK_Id\n    --    Is_Intrinsic_Subprogram\n@@ -5924,6 +5931,7 @@ package Einfo is\n    --    Is_Abstract_Subprogram               (non-generic case only)\n    --    Is_Asynchronous\n    --    Is_Called                            (non-generic case only)\n+   --    Is_Class_Wide_Wrapper\n    --    Is_Constructor\n    --    Is_CUDA_Kernel\n    --    Is_DIC_Procedure                     (non-generic case only)"}, {"sha": "f3f3ca42703252e9215347f971d39098699695aa", "filename": "gcc/ada/gen_il-fields.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1e74a162c751014b43d609207aaf75ed4dd428/gcc%2Fada%2Fgen_il-fields.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1e74a162c751014b43d609207aaf75ed4dd428/gcc%2Fada%2Fgen_il-fields.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-fields.ads?ref=8e1e74a162c751014b43d609207aaf75ed4dd428", "patch": "@@ -680,6 +680,7 @@ package Gen_IL.Fields is\n       Is_Checked_Ghost_Entity,\n       Is_Child_Unit,\n       Is_Class_Wide_Equivalent_Type,\n+      Is_Class_Wide_Wrapper,\n       Is_Compilation_Unit,\n       Is_Completely_Hidden,\n       Is_Concurrent_Record_Type,"}, {"sha": "1fa7f0b46eecdcfec9bc15996c4f7f88790ad3f6", "filename": "gcc/ada/gen_il-gen-gen_entities.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1e74a162c751014b43d609207aaf75ed4dd428/gcc%2Fada%2Fgen_il-gen-gen_entities.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1e74a162c751014b43d609207aaf75ed4dd428/gcc%2Fada%2Fgen_il-gen-gen_entities.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen-gen_entities.adb?ref=8e1e74a162c751014b43d609207aaf75ed4dd428", "patch": "@@ -126,6 +126,7 @@ begin -- Gen_IL.Gen.Gen_Entities\n         Sm (Is_Character_Type, Flag),\n         Sm (Is_Checked_Ghost_Entity, Flag),\n         Sm (Is_Child_Unit, Flag),\n+        Sm (Is_Class_Wide_Wrapper, Flag),\n         Sm (Is_Class_Wide_Equivalent_Type, Flag),\n         Sm (Is_Compilation_Unit, Flag),\n         Sm (Is_Concurrent_Record_Type, Flag),"}, {"sha": "494ec648f46e838b33fd23c019efd18f96b40550", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e1e74a162c751014b43d609207aaf75ed4dd428/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e1e74a162c751014b43d609207aaf75ed4dd428/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=8e1e74a162c751014b43d609207aaf75ed4dd428", "patch": "@@ -2539,8 +2539,8 @@ package body Sem_Ch8 is\n               and then Is_Class_Wide_Type (Get_Instance_Of (Etype (Formal)))\n             then\n                Formal_Typ := Etype (Formal);\n-               Actual_Typ := Get_Instance_Of (Formal_Typ);\n-               Root_Typ   := Etype (Actual_Typ);\n+               Actual_Typ := Base_Type (Get_Instance_Of (Formal_Typ));\n+               Root_Typ   := Root_Type (Actual_Typ);\n                exit;\n             end if;\n \n@@ -2590,6 +2590,15 @@ package body Sem_Ch8 is\n             elsif CW_Prim_Op = Root_Prim_Op then\n                Prim_Op := Root_Prim_Op;\n \n+            --  The two subprograms are legal but the class-wide subprogram is\n+            --  a class-wide wrapper built for a previous instantiation; the\n+            --  wrapper has precedence.\n+\n+            elsif Present (Alias (CW_Prim_Op))\n+              and then Is_Class_Wide_Wrapper (Ultimate_Alias (CW_Prim_Op))\n+            then\n+               Prim_Op := CW_Prim_Op;\n+\n             --  Otherwise both candidate subprograms are user-defined and\n             --  ambiguous.\n \n@@ -2688,6 +2697,8 @@ package body Sem_Ch8 is\n             Set_Corresponding_Body (Spec_Decl, Defining_Entity (Body_Decl));\n          end if;\n \n+         Set_Is_Class_Wide_Wrapper (Wrap_Id);\n+\n          --  If the operator carries an Eliminated pragma, indicate that the\n          --  wrapper is also to be eliminated, to prevent spurious error when\n          --  using gnatelim on programs that include box-initialization of"}]}