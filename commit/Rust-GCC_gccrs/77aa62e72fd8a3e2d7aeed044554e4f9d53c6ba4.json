{"sha": "77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdhYTYyZTcyZmQ4YTNlMmQ3YWVlZDA0NDU1NGU0ZjlkNTNjNmJhNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-06T09:15:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-06T09:15:15Z"}, "message": "[multiple changes]\n\n2011-09-06  Vincent Celier  <celier@adacore.com>\n\n\t* projects.texi: Add menus and @node lines.\n\n2011-09-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch6.adb (Expand_Inlined_Call): Handle properly the case\n\twhere the return type is an unconstrained array and the context\n\tis an assignment. Optimize the case when the target of the\n\tassignment is a selected component.\n\n2011-09-06  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-solita.adb: Update comments.\n\n2011-09-06  Pascal Obry  <obry@adacore.com>\n\n\t* s-linux.ads, s-linux-alpha.ads, s-linux-hppa.ads, s-linux-mipsel.ads,\n\ts-linux-sparc.ads: Remove hard coded and now wrong definitions.\n\t* s-oscons-tmplt.c: Add support for generating pthread related\n\ttypes size on GNU/Linux as done for Darwin.\n\t* s-osinte-linux.ads: Use s-oscons to define the pthread types.\n\nFrom-SVN: r178573", "tree": {"sha": "2324b2ae83960239267906442bbd67e1705da8fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2324b2ae83960239267906442bbd67e1705da8fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/comments", "author": null, "committer": null, "parents": [{"sha": "886b5a18d51ec949a7d22cabd3017e0bd795779d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/886b5a18d51ec949a7d22cabd3017e0bd795779d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/886b5a18d51ec949a7d22cabd3017e0bd795779d"}], "stats": {"total": 259, "additions": 145, "deletions": 114}, "files": [{"sha": "36fd824ec0479da7b6ba69fbc39787468b04d9e1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4", "patch": "@@ -1,3 +1,26 @@\n+2011-09-06  Vincent Celier  <celier@adacore.com>\n+\n+\t* projects.texi: Add menus and @node lines.\n+\n+2011-09-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_Inlined_Call): Handle properly the case\n+\twhere the return type is an unconstrained array and the context\n+\tis an assignment. Optimize the case when the target of the\n+\tassignment is a selected component.\n+\n+2011-09-06  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-solita.adb: Update comments.\n+\n+2011-09-06  Pascal Obry  <obry@adacore.com>\n+\n+\t* s-linux.ads, s-linux-alpha.ads, s-linux-hppa.ads, s-linux-mipsel.ads,\n+\ts-linux-sparc.ads: Remove hard coded and now wrong definitions.\n+\t* s-oscons-tmplt.c: Add support for generating pthread related\n+\ttypes size on GNU/Linux as done for Darwin.\n+\t* s-osinte-linux.ads: Use s-oscons to define the pthread types.\n+\n 2011-09-06  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch6.adb: Fix minor typo."}, {"sha": "c9749ff1a6218bf6ba3c60c53c6f90cef361873d", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4", "patch": "@@ -4031,12 +4031,20 @@ package body Exp_Ch6 is\n \n             Insert_After (Parent (Entity (N)), Blk);\n \n+         --  If the context is an assignment, and the left-hand side is\n+         --  free of side-effects, the replacement is also safe.\n+         --  Can this be generalized further???\n+\n          elsif Nkind (Parent (N)) = N_Assignment_Statement\n            and then\n             (Is_Entity_Name (Name (Parent (N)))\n                or else\n                   (Nkind (Name (Parent (N))) = N_Explicit_Dereference\n-                    and then Is_Entity_Name (Prefix (Name (Parent (N))))))\n+                   and then Is_Entity_Name (Prefix (Name (Parent (N)))))\n+\n+               or else\n+               (Nkind (Name (Parent (N))) = N_Selected_Component\n+                   and then Is_Entity_Name (Prefix (Name (Parent (N))))))\n          then\n             --  Replace assignment with the block\n \n@@ -4201,14 +4209,19 @@ package body Exp_Ch6 is\n          Set_Declarations (Blk, New_List);\n       end if;\n \n-      --  For the unconstrained case, capture the name of the local\n-      --  variable that holds the result. This must be the first declaration\n+      --  For the unconstrained case, capture the name of the local variable\n+      --  that holds the result. This must be the first declaration\n       --  in the block, because its bounds cannot depend on local variables.\n       --  Otherwise there is no way to declare the result outside of the\n       --  block. Needless to say, in general the bounds will depend on the\n       --  actuals in the call.\n+      --  If the context is an assignment statement, as is the case for the\n+      --  expansion of an extended return, the left-hand side provides bounds\n+      --  even if the return type is unconstrained.\n \n-      if Is_Unc then\n+      if Is_Unc\n+        and then Nkind (Parent (N)) /= N_Assignment_Statement\n+      then\n          Targ1 := Defining_Identifier (First (Declarations (Blk)));\n       end if;\n \n@@ -4372,6 +4385,12 @@ package body Exp_Ch6 is\n          then\n             Targ := Name (Parent (N));\n \n+         elsif Nkind (Parent (N)) = N_Assignment_Statement\n+           and then Nkind (Name (Parent (N))) = N_Selected_Component\n+           and then Is_Entity_Name (Prefix (Name (Parent (N))))\n+         then\n+            Targ := New_Copy_Tree (Name (Parent (N)));\n+\n          elsif Nkind (Parent (N)) = N_Object_Declaration\n            and then Is_Limited_Type (Etype (Subp))\n          then\n@@ -4388,7 +4407,9 @@ package body Exp_Ch6 is\n             --  eventually be possible to remove that temporary and use the\n             --  result variable directly.\n \n-            if Is_Unc then\n+            if Is_Unc\n+              and then Nkind (Parent (N)) /= N_Assignment_Statement\n+            then\n                Decl :=\n                  Make_Object_Declaration (Loc,\n                    Defining_Identifier => Temp,"}, {"sha": "d6130411409a4bc18b1cb285acdbcecf874d54a4", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4", "patch": "@@ -2131,7 +2131,19 @@ meant to solve a few specific use cases that cannot be solved directly\n using standard projects. This section will go over a few of these use\n cases to try and explain what you can use aggregate projects for.\n \n+@menu\n+* Building all main units from a single project tree::\n+* Building a set of projects with a single command::\n+* Define a build environment::\n+* Performance improvements in builder::\n+* Syntax of aggregate projects::\n+* package Builder in aggregate projects::\n+@end menu\n+\n+@c -----------------------------------------------------------\n+@node Building all main units from a single project tree\n @subsection Building all main units from a single project tree\n+@c -----------------------------------------------------------\n \n Most often, an application is organized into modules and submodules,\n which are very conveniently represented as a project tree or graph\n@@ -2184,7 +2196,10 @@ aggregate project, you will need to add \"p.gpr\" in the list of project\n files for the aggregate project, or the main unit will not be built when\n building the aggregate project.\n \n+@c ---------------------------------------------------------\n+@node Building a set of projects with a single command\n @subsection Building a set of projects with a single command\n+@c ---------------------------------------------------------\n \n One other case is when you have multiple applications and libraries\n that are build independently from each other (but they can be build in\n@@ -2223,7 +2238,10 @@ with Annex E.\n    Aggregate projects can be used to build multiple partitions\n @end smallexample\n \n+@c ---------------------------------------------\n+@node Define a build environment\n @subsection Define a build environment\n+@c ---------------------------------------------\n \n The environment variables at the time you launch gprbuild or gprbuild\n will influence the view these tools have of the project (PATH to find\n@@ -2278,7 +2296,10 @@ project MyProject is\n end MyProject;\n @end smallexample\n \n+@c --------------------------------------------\n+@node Performance improvements in builder\n @subsection Performance improvements in builder\n+@c --------------------------------------------\n \n The loading of aggregate projects is optimized in gprbuild and\n gnatmake, so that all files are searched for only once on the disk\n@@ -2294,7 +2315,10 @@ can be compiled in parallel (through the usual -j switch) and this can\n be done while maximizing the use of CPUs (compared to launching\n multiple gprbuild and gnatmake commands in parallel).\n \n+@c -------------------------------------\n+@node Syntax of aggregate projects\n @subsection Syntax of aggregate projects\n+@c -------------------------------------\n \n An aggregate project follows the general syntax of project files. The\n recommended extension is still @file{.gpr}. However, a special\n@@ -2492,7 +2516,10 @@ P, which in particular might impact the list of source files in P.\n \n @end table\n \n+@c ----------------------------------------------\n+@node package Builder in aggregate projects\n @subsection package Builder in aggregate projects\n+@c ----------------------------------------------\n \n As we mentioned before, only the package Builder can be specified in\n an aggregate project. In this package, only the following attributes\n@@ -2628,7 +2655,15 @@ project files (so possibly built with different compiler options) and\n yet create a single library (static or relocatable) out of the\n corresponding object files.\n \n+@menu\n+* Building aggregate library projects::\n+* Syntax of aggregate library projects::\n+@end menu\n+\n+@c ---------------------------------------------\n+@node Building aggregate library projects\n @subsection Building aggregate library projects\n+@c ---------------------------------------------\n \n For example, we can define an aggregate project Agg that groups A, B\n and C:\n@@ -2674,7 +2709,10 @@ With the above aggregate library Builder package, the @code{-fPIC}\n option will be passed to the compiler when building any source code\n from projects @file{a.gpr}, @file{b.gpr} and @file{c.gpr}.\n \n+@c ---------------------------------------------\n+@node Syntax of aggregate library projects\n @subsection Syntax of aggregate library projects\n+@c ---------------------------------------------\n \n An aggregate library project follows the general syntax of project\n files. The recommended extension is still @file{.gpr}. However, a special"}, {"sha": "d31a10c4e2eebdd2ad0c5d20b934d0cb31648e42", "filename": "gcc/ada/s-linux-alpha.ads", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fs-linux-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fs-linux-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-linux-alpha.ads?ref=77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---             Copyright (C) 2009, Free Software Foundation, Inc.           --\n+--             Copyright (C) 2009-2011, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -111,9 +111,4 @@ package System.Linux is\n    SA_SIGINFO  : constant := 16#40#;\n    SA_ONSTACK  : constant := 16#01#;\n \n-   type pthread_mutex_t is record\n-      dum0, dum1, dum2, dum3, dum4 : Interfaces.C.unsigned_long;\n-   end record;\n-   pragma Convention (C, pthread_mutex_t);\n-\n end System.Linux;"}, {"sha": "d25dcebdb33310467c8e23e3a7690f2e2f3dda26", "filename": "gcc/ada/s-linux-hppa.ads", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fs-linux-hppa.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fs-linux-hppa.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-linux-hppa.ads?ref=77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 2008-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2008-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -103,26 +103,4 @@ package System.Linux is\n    SA_SIGINFO : constant := 16#10#;\n    SA_ONSTACK : constant := 16#01#;\n \n-   type lock_array is array (1 .. 4) of Integer;\n-   type atomic_lock_t is record\n-      lock : lock_array;\n-   end record;\n-   pragma Convention (C, atomic_lock_t);\n-   for atomic_lock_t'Alignment use 16;\n-\n-   type struct_pthread_fast_lock is record\n-      spinlock : atomic_lock_t;\n-      status   : Long_Integer;\n-   end record;\n-   pragma Convention (C, struct_pthread_fast_lock);\n-\n-   type pthread_mutex_t is record\n-      m_reserved : Integer;\n-      m_count    : Integer;\n-      m_owner    : System.Address;\n-      m_kind     : Integer;\n-      m_lock     : struct_pthread_fast_lock;\n-   end record;\n-   pragma Convention (C, pthread_mutex_t);\n-\n end System.Linux;"}, {"sha": "f1b119d0f11de09dca4e137257c284ee79824de5", "filename": "gcc/ada/s-linux-mipsel.ads", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fs-linux-mipsel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fs-linux-mipsel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-linux-mipsel.ads?ref=77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---             Copyright (C) 2009, Free Software Foundation, Inc.           --\n+--             Copyright (C) 2009-2011, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -100,19 +100,4 @@ package System.Linux is\n    SA_SIGINFO  : constant := 16#04#;\n    SA_ONSTACK  : constant := 16#08000000#;\n \n-   type struct_pthread_fast_lock is record\n-      status   : Long_Integer;\n-      spinlock : Integer;\n-   end record;\n-   pragma Convention (C, struct_pthread_fast_lock);\n-\n-   type pthread_mutex_t is record\n-      m_reserved : Integer;\n-      m_count    : Integer;\n-      m_owner    : System.Address;\n-      m_kind     : Integer;\n-      m_lock     : struct_pthread_fast_lock;\n-   end record;\n-   pragma Convention (C, pthread_mutex_t);\n-\n end System.Linux;"}, {"sha": "756d69d8f30dbde83f0ea68c3f274fe96d8cf0ad", "filename": "gcc/ada/s-linux-sparc.ads", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fs-linux-sparc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fs-linux-sparc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-linux-sparc.ads?ref=77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---             Copyright (C) 2009, Free Software Foundation, Inc.           --\n+--             Copyright (C) 2009-2011, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -109,11 +109,4 @@ package System.Linux is\n    SA_SIGINFO  : constant := 16#200#;\n    SA_ONSTACK  : constant := 16#001#;\n \n-   type pthread_mutex_t is record\n-      L1, L2, L3, L4 : Interfaces.C.long;\n-      I1, I2 : Interfaces.C.int;\n-   end record;\n-   pragma Convention (C, pthread_mutex_t);\n-   --  24 bytes for 32-bit and 40 bytes for 64-bit, aligned like 'long'\n-\n end System.Linux;"}, {"sha": "c8a7ad1744e7c0a8e3d8d8741d7d51dd0fc99760", "filename": "gcc/ada/s-linux.ads", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fs-linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fs-linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-linux.ads?ref=77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 2008-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2008-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -101,19 +101,4 @@ package System.Linux is\n    SA_SIGINFO  : constant := 16#04#;\n    SA_ONSTACK  : constant := 16#08000000#;\n \n-   type struct_pthread_fast_lock is record\n-      status   : Long_Integer;\n-      spinlock : Integer;\n-   end record;\n-   pragma Convention (C, struct_pthread_fast_lock);\n-\n-   type pthread_mutex_t is record\n-      m_reserved : Integer;\n-      m_count    : Integer;\n-      m_owner    : System.Address;\n-      m_kind     : Integer;\n-      m_lock     : struct_pthread_fast_lock;\n-   end record;\n-   pragma Convention (C, pthread_mutex_t);\n-\n end System.Linux;"}, {"sha": "168301d053509a7c50df6608bea53a7a47e89d58", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 28, "deletions": 16, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4", "patch": "@@ -163,6 +163,10 @@ pragma Style_Checks (\"M32766\");\n # include <_types.h>\n #endif\n \n+#ifdef __linux__\n+# include <pthread.h>\n+#endif\n+\n #ifdef NATIVE\n #include <stdio.h>\n \n@@ -1351,42 +1355,50 @@ CND(WSAEDISCON,         \"Disconnected\")\n    putchar ('\\n');\n #endif\n \n-#if defined (__APPLE__) || defined (DUMMY)\n+#if defined (__APPLE__) || defined (__linux__) || defined (DUMMY)\n /*\n \n-   -------------------------------\n-   -- Darwin-specific constants --\n-   -------------------------------\n-\n-   --  These constants may be used only within the Darwin version of the GNAT\n-   --  runtime library.\n+   --  Sizes of pthread data types\n */\n \n-#define PTHREAD_SIZE __PTHREAD_SIZE__\n+#if defined (__APPLE__) || defined (DUMMY)\n+#define PTHREAD_SIZE            __PTHREAD_SIZE__\n+#define PTHREAD_ATTR_SIZE       __PTHREAD_ATTR_SIZE__\n+#define PTHREAD_MUTEXATTR_SIZE  __PTHREAD_MUTEXATTR_SIZE__\n+#define PTHREAD_MUTEX_SIZE      __PTHREAD_MUTEX_SIZE__\n+#define PTHREAD_CONDATTR_SIZE   __PTHREAD_CONDATTR_SIZE__\n+#define PTHREAD_COND_SIZE       __PTHREAD_COND_SIZE__\n+#define PTHREAD_RWLOCKATTR_SIZE __PTHREAD_RWLOCKATTR_SIZE__\n+#define PTHREAD_RWLOCK_SIZE     __PTHREAD_RWLOCK_SIZE__\n+#define PTHREAD_ONCE_SIZE       __PTHREAD_ONCE_SIZE__\n+#else\n+#define PTHREAD_SIZE           (sizeof (pthread_t))\n+#define PTHREAD_ATTR_SIZE       __SIZEOF_PTHREAD_ATTR_T\n+#define PTHREAD_MUTEXATTR_SIZE  __SIZEOF_PTHREAD_MUTEXATTR_T\n+#define PTHREAD_MUTEX_SIZE      __SIZEOF_PTHREAD_MUTEX_T\n+#define PTHREAD_CONDATTR_SIZE   __SIZEOF_PTHREAD_CONDATTR_T\n+#define PTHREAD_COND_SIZE       __SIZEOF_PTHREAD_COND_T\n+#define PTHREAD_RWLOCKATTR_SIZE __SIZEOF_PTHREAD_RWLOCKATTR_T\n+#define PTHREAD_RWLOCK_SIZE     __SIZEOF_PTHREAD_RWLOCK_T\n+#define PTHREAD_ONCE_SIZE       (sizeof (pthread_once_t))\n+#endif\n+\n CND(PTHREAD_SIZE, \"Pad in pthread_t\")\n \n-#define PTHREAD_ATTR_SIZE __PTHREAD_ATTR_SIZE__\n CND(PTHREAD_ATTR_SIZE, \"Pad in pthread_attr_t\")\n \n-#define PTHREAD_MUTEXATTR_SIZE __PTHREAD_MUTEXATTR_SIZE__\n CND(PTHREAD_MUTEXATTR_SIZE, \"Pad in pthread_mutexattr_t\")\n \n-#define PTHREAD_MUTEX_SIZE __PTHREAD_MUTEX_SIZE__\n CND(PTHREAD_MUTEX_SIZE, \"Pad in pthread_mutex_t\")\n \n-#define PTHREAD_CONDATTR_SIZE __PTHREAD_CONDATTR_SIZE__\n CND(PTHREAD_CONDATTR_SIZE, \"Pad in pthread_condattr_t\")\n \n-#define PTHREAD_COND_SIZE __PTHREAD_COND_SIZE__\n CND(PTHREAD_COND_SIZE, \"Pad in pthread_cond_t\")\n \n-#define PTHREAD_RWLOCKATTR_SIZE __PTHREAD_RWLOCKATTR_SIZE__\n CND(PTHREAD_RWLOCKATTR_SIZE, \"Pad in pthread_rwlockattr_t\")\n \n-#define PTHREAD_RWLOCK_SIZE __PTHREAD_RWLOCK_SIZE__\n CND(PTHREAD_RWLOCK_SIZE, \"Pad in pthread_rwlock_t\")\n \n-#define PTHREAD_ONCE_SIZE __PTHREAD_ONCE_SIZE__\n CND(PTHREAD_ONCE_SIZE, \"Pad in pthread_once_t\")\n \n #endif"}, {"sha": "3f83db84a053e66f9b989bbf1077b7bd05663d97", "filename": "gcc/ada/s-osinte-linux.ads", "status": "modified", "additions": 19, "deletions": 22, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fs-osinte-linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fs-osinte-linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-linux.ads?ref=77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4", "patch": "@@ -41,6 +41,7 @@\n with Ada.Unchecked_Conversion;\n with Interfaces.C;\n with System.Linux;\n+with System.OS_Constants;\n \n package System.OS_Interface is\n    pragma Preelaborate;\n@@ -557,35 +558,31 @@ private\n    end record;\n    pragma Convention (C, timespec);\n \n-   type pthread_attr_t is record\n-      detachstate   : int;\n-      schedpolicy   : int;\n-      schedparam    : struct_sched_param;\n-      inheritsched  : int;\n-      scope         : int;\n-      guardsize     : size_t;\n-      stackaddr_set : int;\n-      stackaddr     : System.Address;\n-      stacksize     : size_t;\n-   end record;\n+   type unsigned_long_long_t is mod 2 ** 64;\n+   --  Local type only used to get it's 'Alignment below\n+\n+   type pthread_attr_t is\n+     array (1 .. OS_Constants.PTHREAD_ATTR_SIZE) of unsigned_char;\n    pragma Convention (C, pthread_attr_t);\n+   for pthread_attr_t'Alignment use Interfaces.C.unsigned_long'Alignment;\n \n-   type pthread_condattr_t is record\n-      dummy : int;\n-   end record;\n+   type pthread_condattr_t is\n+     array (1 .. OS_Constants.PTHREAD_CONDATTR_SIZE) of unsigned_char;\n    pragma Convention (C, pthread_condattr_t);\n+   for pthread_condattr_t'Alignment use Interfaces.C.int'Alignment;\n \n-   type pthread_mutexattr_t is record\n-      mutexkind : int;\n-   end record;\n+   type pthread_mutexattr_t is\n+     array (1 .. OS_Constants.PTHREAD_MUTEXATTR_SIZE) of unsigned_char;\n    pragma Convention (C, pthread_mutexattr_t);\n+   for pthread_mutexattr_t'Alignment use Interfaces.C.int'Alignment;\n \n-   type pthread_mutex_t is new System.Linux.pthread_mutex_t;\n-\n-   type unsigned_long_long_t is mod 2 ** 64;\n-   --  Local type only used to get it's 'Alignment below\n+   type pthread_mutex_t is\n+     array (1 .. OS_Constants.PTHREAD_MUTEX_SIZE) of unsigned_char;\n+   pragma Convention (C, pthread_mutex_t);\n+   for pthread_mutex_t'Alignment use Interfaces.C.unsigned_long'Alignment;\n \n-   type pthread_cond_t is array (0 .. 47) of unsigned_char;\n+   type pthread_cond_t is\n+     array (1 .. OS_Constants.PTHREAD_COND_SIZE) of unsigned_char;\n    pragma Convention (C, pthread_cond_t);\n    for pthread_cond_t'Alignment use unsigned_long_long_t'Alignment;\n "}, {"sha": "666a6d5c5219030a1c0c57fd0e9d9d7be6b1154e", "filename": "gcc/ada/s-solita.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fs-solita.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4/gcc%2Fada%2Fs-solita.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-solita.adb?ref=77aa62e72fd8a3e2d7aeed044554e4f9d53c6ba4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -153,6 +153,10 @@ package body System.Soft_Links.Tasking is\n       --  We can only be here because we are terminating the environment task.\n       --  Task termination for the rest of the tasks is handled in the\n       --  Task_Wrapper.\n+      --  We do not want to enable this check and e.g. call System.OS_Lib.Abort\n+      --  here because some restricted run-times may not have system.os_lib\n+      --  (e.g. JVM), and calling abort may do more harm than good to the\n+      --  main application.\n \n       pragma Assert (Self_Id = STPO.Environment_Task);\n \n@@ -212,7 +216,7 @@ package body System.Soft_Links.Tasking is\n          SSL.Task_Termination_Handler := Task_Termination_Handler_T'Access;\n \n          --  No need to create a new Secondary Stack, since we will use the\n-         --  default one created in s-secsta.adb\n+         --  default one created in s-secsta.adb.\n \n          SSL.Set_Sec_Stack_Addr     (SSL.Get_Sec_Stack_Addr_NT);\n          SSL.Set_Jmpbuf_Address     (SSL.Get_Jmpbuf_Address_NT);"}]}