{"sha": "088c7e1b0c52db7fa81623ab5b0795a89b41f054", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg4YzdlMWIwYzUyZGI3ZmE4MTYyM2FiNWIwNzk1YTg5YjQxZjA1NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T13:33:18Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T13:33:18Z"}, "message": "[multiple changes]\n\n2015-05-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Constrain_Concurrent): If the context is a\n\ttype declaration, generate an Itype_Reference for the anonymous\n\tsubtype, to force elaboration at this point in gigi.\n\n2015-05-22  Gary Dismukes  <dismukes@adacore.com>\n\n\t* layout.adb, einfo.ads, sem_ch12.adb, freeze.adb, sem_util.ads,\n\texp_ch4.adb, sem_ch6.adb: Minor reformatting and typo fixes.\n\nFrom-SVN: r223573", "tree": {"sha": "296f5bef49f057c5b475241727dddb811da1d7a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/296f5bef49f057c5b475241727dddb811da1d7a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/088c7e1b0c52db7fa81623ab5b0795a89b41f054", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/088c7e1b0c52db7fa81623ab5b0795a89b41f054", "html_url": "https://github.com/Rust-GCC/gccrs/commit/088c7e1b0c52db7fa81623ab5b0795a89b41f054", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/088c7e1b0c52db7fa81623ab5b0795a89b41f054/comments", "author": null, "committer": null, "parents": [{"sha": "f8d851c6f796b81366e0c968c2e85a9b98a95ce8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8d851c6f796b81366e0c968c2e85a9b98a95ce8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8d851c6f796b81366e0c968c2e85a9b98a95ce8"}], "stats": {"total": 44, "additions": 31, "deletions": 13}, "files": [{"sha": "4a6f27753032d893e39d8bb222bc28c67c931de0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/088c7e1b0c52db7fa81623ab5b0795a89b41f054/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/088c7e1b0c52db7fa81623ab5b0795a89b41f054/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=088c7e1b0c52db7fa81623ab5b0795a89b41f054", "patch": "@@ -1,3 +1,14 @@\n+2015-05-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Constrain_Concurrent): If the context is a\n+\ttype declaration, generate an Itype_Reference for the anonymous\n+\tsubtype, to force elaboration at this point in gigi.\n+\n+2015-05-22  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* layout.adb, einfo.ads, sem_ch12.adb, freeze.adb, sem_util.ads,\n+\texp_ch4.adb, sem_ch6.adb: Minor reformatting and typo fixes.\n+\n 2015-05-22  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_res.adb (Resolve_Actuals): If the call is to an overridden"}, {"sha": "fcb37fa54b6d0a21b18471c88d4b47b3b09061d4", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/088c7e1b0c52db7fa81623ab5b0795a89b41f054/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/088c7e1b0c52db7fa81623ab5b0795a89b41f054/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=088c7e1b0c52db7fa81623ab5b0795a89b41f054", "patch": "@@ -2085,11 +2085,11 @@ package Einfo is\n --       to multiple subprogram entities).\n \n --    Incomplete_Actuals (Elist24)\n---       Defined on package entities that are instances. Indicates the actusl\n---       types in the instantiation that are limited views. IF this list is\n+--       Defined on package entities that are instances. Indicates the actuals\n+--       types in the instantiation that are limited views. If this list is\n --       not empty, the instantiation, which appears in a package declaration,\n --       is relocated to the corresponding package body, which must have a\n---       corresponding non-limited with_clause.\n+--       corresponding nonlimited with_clause.\n \n --    In_Package_Body (Flag48)\n --       Defined in package entities. Set on the entity that denotes the\n@@ -2207,7 +2207,7 @@ package Einfo is\n --       keyword. For Ada 2012, also applies to formal parameters.\n \n --    Is_Atomic (Flag85)\n---       Defined in all type entities, and also in constants, components and\n+--       Defined in all type entities, and also in constants, components, and\n --       variables. Set if a pragma Atomic or Shared applies to the entity.\n --       In the case of private and incomplete types, this flag is set in\n --       both the partial view and the full view.\n@@ -3187,7 +3187,7 @@ package Einfo is\n --       rather than testing this flag.\n \n --    Is_Volatile_Full_Access (Flag285)\n---       Defined in all type entities, and also in constants, components and\n+--       Defined in all type entities, and also in constants, components, and\n --       variables. Set if a pragma Volatile_Full_Access applies to the entity.\n --       In the case of private and incomplete types, this flag is set in\n --       both the partial view and the full view."}, {"sha": "7bd3c6be15770554311a4bf809dbe1a744d50e09", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/088c7e1b0c52db7fa81623ab5b0795a89b41f054/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/088c7e1b0c52db7fa81623ab5b0795a89b41f054/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=088c7e1b0c52db7fa81623ab5b0795a89b41f054", "patch": "@@ -7523,9 +7523,9 @@ package body Exp_Ch4 is\n \n       Optimize_Length_Comparison (N);\n \n-      --  One more special case, if we have a comparison of X'Result = expr\n+      --  One more special case: if we have a comparison of X'Result = expr\n       --  in floating-point, then if not already there, change expr to be\n-      --  f'Machine (expr) to eliminate suprise from extra precision.\n+      --  f'Machine (expr) to eliminate surprise from extra precision.\n \n       if Is_Floating_Point_Type (Typl)\n         and then Nkind (Original_Node (Lhs)) = N_Attribute_Reference"}, {"sha": "64367614ede9d08d528ea739ae824f5c64f4dc6d", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/088c7e1b0c52db7fa81623ab5b0795a89b41f054/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/088c7e1b0c52db7fa81623ab5b0795a89b41f054/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=088c7e1b0c52db7fa81623ab5b0795a89b41f054", "patch": "@@ -944,7 +944,7 @@ package body Freeze is\n \n                   --  We do not know the packed size for an atomic/VFA type\n                   --  or component, or an independent type or component, or a\n-                  --  by reference type or aliased component (because packing\n+                  --  by-reference type or aliased component (because packing\n                   --  does not touch these).\n \n                   if        Is_Atomic_Or_VFA (Ctyp)\n@@ -1037,7 +1037,7 @@ package body Freeze is\n                                             (Packed_Array_Impl_Type (Ctyp)))\n                      then\n                         --  Packed size unknown if we have an atomic/VFA type\n-                        --  or a by reference type, since the back end knows\n+                        --  or a by-reference type, since the back end knows\n                         --  how these are layed out.\n \n                         if Is_Atomic_Or_VFA (Ctyp)"}, {"sha": "0c7a77778687456806a86ad1391f761139674a1c", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/088c7e1b0c52db7fa81623ab5b0795a89b41f054/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/088c7e1b0c52db7fa81623ab5b0795a89b41f054/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=088c7e1b0c52db7fa81623ab5b0795a89b41f054", "patch": "@@ -2928,7 +2928,7 @@ package body Layout is\n             return;\n          end if;\n \n-         --  No effect if any component is atomic/VFA or is a by reference type\n+         --  No effect if any component is atomic/VFA or is a by-reference type\n \n          declare\n             Ent : Entity_Id;"}, {"sha": "b5c8888bb6aee30616a658f2c2420d94f4566402", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/088c7e1b0c52db7fa81623ab5b0795a89b41f054/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/088c7e1b0c52db7fa81623ab5b0795a89b41f054/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=088c7e1b0c52db7fa81623ab5b0795a89b41f054", "patch": "@@ -833,7 +833,7 @@ package body Sem_Ch12 is\n    --\n    --  If Inst is present, it is the entity of the package instance. This\n    --  entity is marked as having a limited_view actual when some actual is\n-   --  a limited view. This is used to place the instance body properly..\n+   --  a limited view. This is used to place the instance body properly.\n \n    procedure Remove_Parent (In_Body : Boolean := False);\n    --  Reverse effect after instantiation of child is complete"}, {"sha": "f0abad3a9501e55f034c21b19c5fd3ac8609fbad", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/088c7e1b0c52db7fa81623ab5b0795a89b41f054/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/088c7e1b0c52db7fa81623ab5b0795a89b41f054/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=088c7e1b0c52db7fa81623ab5b0795a89b41f054", "patch": "@@ -12901,6 +12901,13 @@ package body Sem_Ch3 is\n \n          if No (Def_Id) then\n             Def_Id := Create_Itype (E_Void, Related_Nod, Related_Id, Suffix);\n+\n+            --  Elaborate itype now, as it may be used in a subsequent\n+            --  synchronized operation in another scope.\n+\n+            if Nkind (Related_Nod) = N_Full_Type_Declaration then\n+               Build_Itype_Reference (Def_Id, Related_Nod);\n+            end if;\n          end if;\n \n          Constrain_Discriminated_Type (Def_Id, SI, Related_Nod);"}, {"sha": "d92e5baceb908ca52ddba4fdf85223d585e20008", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/088c7e1b0c52db7fa81623ab5b0795a89b41f054/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/088c7e1b0c52db7fa81623ab5b0795a89b41f054/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=088c7e1b0c52db7fa81623ab5b0795a89b41f054", "patch": "@@ -6521,7 +6521,7 @@ package body Sem_Ch6 is\n          return Ctype <= Mode_Conformant\n            or else Subtypes_Statically_Match (Type_1, Full_View (Type_2));\n \n-      --  In Ada2012, incomplete types (including limited views) can appear\n+      --  In Ada 2012, incomplete types (including limited views) can appear\n       --  as actuals in instantiations.\n \n       elsif Is_Incomplete_Type (Type_1)"}, {"sha": "cf74bf75dbc15e26bebe2d1829d36842f1099c3b", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/088c7e1b0c52db7fa81623ab5b0795a89b41f054/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/088c7e1b0c52db7fa81623ab5b0795a89b41f054/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=088c7e1b0c52db7fa81623ab5b0795a89b41f054", "patch": "@@ -1170,7 +1170,7 @@ package Sem_Util is\n \n    function Is_Atomic_Or_VFA_Object (N : Node_Id) return Boolean;\n    --  Determines if the given node is an atomic object (Is_Atomic_Object true)\n-   --  or else is an object for which  VFA is present.\n+   --  or else is an object for which VFA is present.\n \n    function Is_Attribute_Result (N : Node_Id) return Boolean;\n    --  Determine whether node N denotes attribute 'Result"}]}