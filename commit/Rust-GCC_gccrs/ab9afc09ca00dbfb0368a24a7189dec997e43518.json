{"sha": "ab9afc09ca00dbfb0368a24a7189dec997e43518", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI5YWZjMDljYTAwZGJmYjAzNjhhMjRhNzE4OWRlYzk5N2U0MzUxOA==", "commit": {"author": {"name": "Andris Pavenis", "email": "andris.pavenis@iki.fi", "date": "2015-12-18T04:54:40Z"}, "committer": {"name": "Andris Pavenis", "email": "andris@gcc.gnu.org", "date": "2015-12-18T04:54:40Z"}, "message": "Update typedefs for integer types in config/i386/djgpp-stdint.h\n\n\t* config/i386/djgpp-stdint.h: update typedefs for integer types\n\nFrom-SVN: r231804", "tree": {"sha": "6d86b474ffe6a59e092e22d01333d2b6d281a6aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d86b474ffe6a59e092e22d01333d2b6d281a6aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab9afc09ca00dbfb0368a24a7189dec997e43518", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab9afc09ca00dbfb0368a24a7189dec997e43518", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab9afc09ca00dbfb0368a24a7189dec997e43518", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab9afc09ca00dbfb0368a24a7189dec997e43518/comments", "author": {"login": "apavenis", "id": 33935463, "node_id": "MDQ6VXNlcjMzOTM1NDYz", "avatar_url": "https://avatars.githubusercontent.com/u/33935463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apavenis", "html_url": "https://github.com/apavenis", "followers_url": "https://api.github.com/users/apavenis/followers", "following_url": "https://api.github.com/users/apavenis/following{/other_user}", "gists_url": "https://api.github.com/users/apavenis/gists{/gist_id}", "starred_url": "https://api.github.com/users/apavenis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apavenis/subscriptions", "organizations_url": "https://api.github.com/users/apavenis/orgs", "repos_url": "https://api.github.com/users/apavenis/repos", "events_url": "https://api.github.com/users/apavenis/events{/privacy}", "received_events_url": "https://api.github.com/users/apavenis/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a6c8ffaade827fdc35d14f2db71943e9a87ac55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a6c8ffaade827fdc35d14f2db71943e9a87ac55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a6c8ffaade827fdc35d14f2db71943e9a87ac55"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "34de124d8149037590412a4e09098b4902210ec1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab9afc09ca00dbfb0368a24a7189dec997e43518/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab9afc09ca00dbfb0368a24a7189dec997e43518/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab9afc09ca00dbfb0368a24a7189dec997e43518", "patch": "@@ -1,3 +1,7 @@\n+2015-12-18  Andris Pavenis <andris.pavenis@iki.fi>\n+\n+\t* config/i386/djgpp-stdint.h: update typedefs for integer types\n+\n 2015-12-17  Jeff Law  <law@redhat.com>\n \n \t* passes.def: Put the split-paths pass immediately before the"}, {"sha": "36642e36eef995fec6301100bff8f0fa5a1dcbca", "filename": "gcc/config/i386/djgpp-stdint.h", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab9afc09ca00dbfb0368a24a7189dec997e43518/gcc%2Fconfig%2Fi386%2Fdjgpp-stdint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab9afc09ca00dbfb0368a24a7189dec997e43518/gcc%2Fconfig%2Fi386%2Fdjgpp-stdint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdjgpp-stdint.h?ref=ab9afc09ca00dbfb0368a24a7189dec997e43518", "patch": "@@ -22,21 +22,21 @@ along with GCC; see the file COPYING3.  If not see\n /* Exact-width integer types */\n \n #define INT8_TYPE \"signed char\"\n-#define INT16_TYPE \"signed short int\"\n-#define INT32_TYPE \"signed long int\"\n-#define INT64_TYPE \"signed long long int\"\n+#define INT16_TYPE \"short int\"\n+#define INT32_TYPE \"int\"\n+#define INT64_TYPE \"long long int\"\n \n #define UINT8_TYPE \"unsigned char\"\n #define UINT16_TYPE \"short unsigned int\"\n-#define UINT32_TYPE \"long unsigned int\"\n+#define UINT32_TYPE \"unsigned int\"\n #define UINT64_TYPE \"long long unsigned int\"\n \n /* Minimum-width integer types */\n \n #define INT_LEAST8_TYPE \"signed char\"\n-#define INT_LEAST16_TYPE \"signed short int\"\n-#define INT_LEAST32_TYPE \"signed int\"\n-#define INT_LEAST64_TYPE \"signed long long int\"\n+#define INT_LEAST16_TYPE \"short int\"\n+#define INT_LEAST32_TYPE \"int\"\n+#define INT_LEAST64_TYPE \"long long int\"\n \n #define UINT_LEAST8_TYPE \"unsigned char\"\n #define UINT_LEAST16_TYPE \"short unsigned int\"\n@@ -46,12 +46,12 @@ along with GCC; see the file COPYING3.  If not see\n /* Fastest minimum-width integer types */\n \n #define INT_FAST8_TYPE \"signed char\"\n-#define INT_FAST16_TYPE \"signed int\"\n-#define INT_FAST32_TYPE \"signed int\"\n-#define INT_FAST64_TYPE \"long long signed int\"\n+#define INT_FAST16_TYPE \"short int\"\n+#define INT_FAST32_TYPE \"int\"\n+#define INT_FAST64_TYPE \"long long int\"\n \n #define UINT_FAST8_TYPE \"unsigned char\"\n-#define UINT_FAST16_TYPE \"unsigned int\"\n+#define UINT_FAST16_TYPE \"short unsigned int\"\n #define UINT_FAST32_TYPE \"unsigned int\"\n #define UINT_FAST64_TYPE \"long long unsigned int\"\n "}]}