{"sha": "270fc4e8985e59e395874665b91a9d83f7d384ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjcwZmM0ZTg5ODVlNTllMzk1ODc0NjY1YjkxYTlkODNmN2QzODRiYQ==", "commit": {"author": {"name": "Craig Burley", "email": "burley@gnu.org", "date": "1998-05-18T10:26:16Z"}, "committer": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-05-18T10:26:16Z"}, "message": "(ffecom_convert_narrow_, ffecom_convert_widen_):\n\nBe even more persnickety in checking for internal bugs.\nAlso, if precision isn't changing, just return the expr.\n(ffecom_expr_): Add ltkt variable for clarity.\n\nFrom-SVN: r19836", "tree": {"sha": "d3d5f56744a69bd4e58c62c195044b0c4d468942", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3d5f56744a69bd4e58c62c195044b0c4d468942"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/270fc4e8985e59e395874665b91a9d83f7d384ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/270fc4e8985e59e395874665b91a9d83f7d384ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/270fc4e8985e59e395874665b91a9d83f7d384ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/270fc4e8985e59e395874665b91a9d83f7d384ba/comments", "author": null, "committer": null, "parents": [{"sha": "76ead72b8020b3382bea844e354d6cef15895f4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76ead72b8020b3382bea844e354d6cef15895f4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76ead72b8020b3382bea844e354d6cef15895f4a"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "6e0f12715afab0ab771027da17bf96636b0e15a9", "filename": "gcc/f/com.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/270fc4e8985e59e395874665b91a9d83f7d384ba/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/270fc4e8985e59e395874665b91a9d83f7d384ba/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=270fc4e8985e59e395874665b91a9d83f7d384ba", "patch": "@@ -948,8 +948,14 @@ ffecom_convert_narrow_ (type, expr)\n   if (code == RECORD_TYPE)\n     {\n       assert (TREE_CODE (TREE_TYPE (e)) == RECORD_TYPE);\n+      /* Check that at least the first field name agrees.  */\n+      assert (DECL_NAME (TYPE_FIELDS (type))\n+\t      == DECL_NAME (TYPE_FIELDS (TREE_TYPE (e))));\n       assert (TYPE_PRECISION (TREE_TYPE (TYPE_FIELDS (type)))\n \t      <= TYPE_PRECISION (TREE_TYPE (TYPE_FIELDS (TREE_TYPE (e)))));\n+      if (TYPE_PRECISION (TREE_TYPE (TYPE_FIELDS (type)))\n+\t  == TYPE_PRECISION (TREE_TYPE (TYPE_FIELDS (TREE_TYPE (e)))))\n+\treturn e;\n       return fold (ffecom_convert_to_complex_ (type, e));\n     }\n \n@@ -1012,8 +1018,14 @@ ffecom_convert_widen_ (type, expr)\n   if (code == RECORD_TYPE)\n     {\n       assert (TREE_CODE (TREE_TYPE (e)) == RECORD_TYPE);\n+      /* Check that at least the first field name agrees.  */\n+      assert (DECL_NAME (TYPE_FIELDS (type))\n+\t      == DECL_NAME (TYPE_FIELDS (TREE_TYPE (e))));\n       assert (TYPE_PRECISION (TREE_TYPE (TYPE_FIELDS (type)))\n \t      >= TYPE_PRECISION (TREE_TYPE (TYPE_FIELDS (TREE_TYPE (e)))));\n+      if (TYPE_PRECISION (TREE_TYPE (TYPE_FIELDS (type)))\n+\t  == TYPE_PRECISION (TREE_TYPE (TYPE_FIELDS (TREE_TYPE (e)))))\n+\treturn e;\n       return fold (ffecom_convert_to_complex_ (type, e));\n     }\n \n@@ -3062,6 +3074,7 @@ ffecom_expr_ (ffebld expr, tree dest_tree, ffebld dest,\n \tffebld right = ffebld_right (expr);\n \tffecomGfrt code;\n \tffeinfoKindtype rtkt;\n+\tffeinfoKindtype ltkt;\n \n \tswitch (ffeinfo_basictype (ffebld_info (right)))\n \t  {\n@@ -3073,6 +3086,7 @@ ffecom_expr_ (ffebld expr, tree dest_tree, ffebld dest,\n \t\t  return item;\n \t      }\n \n+\t    ltkt = FFEINFO_kindtypeINTEGER1;\n \t    rtkt = FFEINFO_kindtypeINTEGER1;\n \t    switch (ffeinfo_basictype (ffebld_info (left)))\n \t      {\n@@ -3083,6 +3097,7 @@ ffecom_expr_ (ffebld expr, tree dest_tree, ffebld dest,\n \t\t\t== FFEINFO_kindtypeINTEGER4))\n \t\t  {\n \t\t    code = FFECOM_gfrtPOW_QQ;\n+\t\t    ltkt = FFEINFO_kindtypeINTEGER4;\n \t\t    rtkt = FFEINFO_kindtypeINTEGER4;\n \t\t  }\n \t\telse\n@@ -3110,10 +3125,10 @@ ffecom_expr_ (ffebld expr, tree dest_tree, ffebld dest,\n \t\tcode = FFECOM_gfrtPOW_CI;\t/* Overlapping result okay. */\n \t\tbreak;\n \t      }\n-\t    if (ffeinfo_kindtype (ffebld_info (left)) != rtkt)\n+\t    if (ffeinfo_kindtype (ffebld_info (left)) != ltkt)\n \t      left = ffeexpr_convert (left, NULL, NULL,\n \t\t\t\t      FFEINFO_basictypeINTEGER,\n-\t\t\t\t      rtkt, 0,\n+\t\t\t\t      ltkt, 0,\n \t\t\t\t      FFETARGET_charactersizeNONE,\n \t\t\t\t      FFEEXPR_contextLET);\n \t    if (ffeinfo_kindtype (ffebld_info (right)) != rtkt)"}]}