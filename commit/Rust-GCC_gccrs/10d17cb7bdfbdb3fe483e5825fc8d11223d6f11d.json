{"sha": "10d17cb7bdfbdb3fe483e5825fc8d11223d6f11d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBkMTdjYjdiZGZiZGIzZmU0ODNlNTgyNWZjOGQxMTIyM2Q2ZjExZA==", "commit": {"author": {"name": "Alan Modra", "email": "alan@linuxcare.com.au", "date": "2001-02-01T01:11:28Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2001-02-01T01:11:28Z"}, "message": "pa.c (hppa_encode_label): Correct size of alloca buffer so we don't overrun it.\n\n        * pa.c (hppa_encode_label): Correct size of alloca buffer\n        so we don't overrun it.  Correct leading `*' case.\n        * pa.h (STRIP_NAME_ENCODING): Simplify now that we don't\n        need to handle `*@'.\n        (FUNCTION_NAME_P): Likewise.\n\nFrom-SVN: r39385", "tree": {"sha": "19af920b9d131f1e5786eb184ab5037f276e7beb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19af920b9d131f1e5786eb184ab5037f276e7beb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10d17cb7bdfbdb3fe483e5825fc8d11223d6f11d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d17cb7bdfbdb3fe483e5825fc8d11223d6f11d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10d17cb7bdfbdb3fe483e5825fc8d11223d6f11d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d17cb7bdfbdb3fe483e5825fc8d11223d6f11d/comments", "author": null, "committer": null, "parents": [{"sha": "c3e5f9fa0950345682777df997a08437a39849d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3e5f9fa0950345682777df997a08437a39849d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3e5f9fa0950345682777df997a08437a39849d2"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "f9c693afdc75aeceafda6274a63db2d6af93a9d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d17cb7bdfbdb3fe483e5825fc8d11223d6f11d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d17cb7bdfbdb3fe483e5825fc8d11223d6f11d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10d17cb7bdfbdb3fe483e5825fc8d11223d6f11d", "patch": "@@ -1,3 +1,11 @@\n+2001-01-31  Alan Modra <alan@linuxcare.com.au>\n+\n+\t* pa.c (hppa_encode_label): Correct size of alloca buffer\n+\tso we don't overrun it.  Correct leading `*' case.\n+\t* pa.h (STRIP_NAME_ENCODING): Simplify now that we don't\n+\tneed to handle `*@'.\n+\t(FUNCTION_NAME_P): Likewise.\n+\n 2001-01-31  Richard Henderson  <rth@redhat.com>\n \n \t* config.gcc (alpha-osf5): Use float-i128.h."}, {"sha": "738afbeb34445bb3d81c0389e42a81141d225765", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d17cb7bdfbdb3fe483e5825fc8d11223d6f11d/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d17cb7bdfbdb3fe483e5825fc8d11223d6f11d/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=10d17cb7bdfbdb3fe483e5825fc8d11223d6f11d", "patch": "@@ -5965,18 +5965,17 @@ hppa_encode_label (sym)\n      rtx sym;\n {\n   const char *str = XSTR (sym, 0);\n-  int len = strlen (str);\n-  char *newstr = alloca (len + 1);\n+  int len = strlen (str) + 1;\n+  char *newstr, *p;\n \n+  p = newstr = alloca (len + 1);\n   if (str[0] == '*')\n-    *newstr++ = *str++;\n-  strcpy (newstr + 1, str);\n-  *newstr = '@';\n-\n-  /* Prepending '@' increases the length of the string.  That's important\n-     to note since we're going to allocate persistent storage for the\n-     new string.  */\n-  len++;\n+    {\n+      str++;\n+      len--;\n+    }\n+  *p++ = '@';\n+  strcpy (p, str);\n \n   XSTR (sym,0) = ggc_alloc_string (newstr, len);\n }"}, {"sha": "a5c7a32d955ae93bb889e595cda409b5efc8bcb6", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d17cb7bdfbdb3fe483e5825fc8d11223d6f11d/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d17cb7bdfbdb3fe483e5825fc8d11223d6f11d/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=10d17cb7bdfbdb3fe483e5825fc8d11223d6f11d", "patch": "@@ -1488,8 +1488,7 @@ do { \t\t\t\t\t\t\t\t\t\\\n    || (TREE_CODE_CLASS (TREE_CODE (DECL)) == 'c'\t\t\t\\\n        && !(TREE_CODE (DECL) == STRING_CST && flag_writable_strings)))\n \n-#define FUNCTION_NAME_P(NAME) \\\n-(*(NAME) == '@' || (*(NAME) == '*' && *((NAME) + 1) == '@'))\n+#define FUNCTION_NAME_P(NAME)  (*(NAME) == '@')\n \n #define ENCODE_SECTION_INFO(DECL)\\\n do\t\t\t\t\t\t\t\\\n@@ -1511,9 +1510,8 @@ while (0)\n    This is sort of inverse to ENCODE_SECTION_INFO.  */\n \n #define STRIP_NAME_ENCODING(VAR,SYMBOL_NAME)\t\\\n-  (VAR) = ((SYMBOL_NAME)  + ((SYMBOL_NAME)[0] == '*' ?\t\\\n-\t\t\t     1 + (SYMBOL_NAME)[1] == '@'\\\n-\t\t\t     : (SYMBOL_NAME)[0] == '@'))\n+  (VAR) = ((SYMBOL_NAME)\t\t\t\\\n+\t   + (*(SYMBOL_NAME) == '*' || *(SYMBOL_NAME) == '@'))\n \n /* Specify the machine mode that this machine uses\n    for the index in the tablejump instruction.  */"}]}