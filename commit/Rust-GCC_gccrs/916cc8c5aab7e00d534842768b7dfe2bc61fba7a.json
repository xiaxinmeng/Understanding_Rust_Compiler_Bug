{"sha": "916cc8c5aab7e00d534842768b7dfe2bc61fba7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE2Y2M4YzVhYWI3ZTAwZDUzNDg0Mjc2OGI3ZGZlMmJjNjFmYmE3YQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1994-06-04T11:17:23Z"}, "committer": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1994-06-04T11:17:23Z"}, "message": "(all patterns explicitly mentioning regs): Output the target dependent prefix before the register name.\n\n(all patterns explicitly mentioning regs): Output the target dependent\nprefix before the register name.\n(all patterns with asm comments): Output the target dependent comment\ncharacter.\n\nFrom-SVN: r7443", "tree": {"sha": "399a7706586730da0d9914c211100b1042653304", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/399a7706586730da0d9914c211100b1042653304"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/916cc8c5aab7e00d534842768b7dfe2bc61fba7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/916cc8c5aab7e00d534842768b7dfe2bc61fba7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/916cc8c5aab7e00d534842768b7dfe2bc61fba7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/916cc8c5aab7e00d534842768b7dfe2bc61fba7a/comments", "author": null, "committer": null, "parents": [{"sha": "1d5473cbe489734cc1bc5427a74a8c6937126fa9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d5473cbe489734cc1bc5427a74a8c6937126fa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d5473cbe489734cc1bc5427a74a8c6937126fa9"}], "stats": {"total": 48, "additions": 24, "deletions": 24}, "files": [{"sha": "2c9a8aeefc32cd4095c6f222fa1885444f52e9a2", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/916cc8c5aab7e00d534842768b7dfe2bc61fba7a/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/916cc8c5aab7e00d534842768b7dfe2bc61fba7a/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=916cc8c5aab7e00d534842768b7dfe2bc61fba7a", "patch": "@@ -1894,7 +1894,7 @@\n \t{\n \t  /* ... so modify the operands here.  */\n \t  operands[1] = XEXP (operands[1], 0);\n-\t  output_asm_insn (\\\"sub%?\\\\t%0, pc, #(8 + . - %a1) & ~4095\\\",\n+\t  output_asm_insn (\\\"sub%?\\\\t%0, %|pc, #(8 + . - %a1) & ~4095\\\",\n \t\t\t   operands);\n \t  output_asm_insn (\\\"ldr%?\\\\t%0, [%0, #- ((4 + . - %a1) & 4095)]\\\",\n \t\t\t   operands);\n@@ -1903,7 +1903,7 @@\n \t{\n \t  /* ... and here.  */\n \t  operands[1] = XEXP (operands[1], 0);\n-\t  output_asm_insn (\\\"ldr%?\\\\t%0, [pc, %1 - . - 8]\\\", operands);\n+\t  output_asm_insn (\\\"ldr%?\\\\t%0, [%|pc, %1 - . - 8]\\\", operands);\n \t}\n       return \\\"\\\";\n \n@@ -2139,8 +2139,8 @@\n    mnf%?s\\\\t%0, #%N1\n    ldf%?s\\\\t%0, %1\n    stf%?s\\\\t%1, %0\n-   str%?\\\\t%1, [sp, #-4]!\\;ldf%?s\\\\t%0, [sp], #4\n-   stf%?s\\\\t%1, [sp, #-4]!\\;ldr%?\\\\t%0, [sp], #4\n+   str%?\\\\t%1, [%|sp, #-4]!\\;ldf%?s\\\\t%0, [%|sp], #4\n+   stf%?s\\\\t%1, [%|sp, #-4]!\\;ldr%?\\\\t%0, [%|sp], #4\n    mov%?\\\\t%0, %1\n    ldr%?\\\\t%0, %1\\\\t%@ float\n    str%?\\\\t%1, %0\\\\t%@ float\"\n@@ -3252,27 +3252,27 @@\n \t(match_operand:SI 0 \"s_register_operand\" \"r\"))\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n   \"\"\n-  \"mov%?\\\\tpc, %0\\\\t%@ table jump, label %l1\")\n+  \"mov%?\\\\t%|pc, %0\\\\t%@ table jump, label %l1\")\n \n (define_insn \"\"\n   [(set (pc)\n \t(match_operand:SI 0 \"memory_operand\" \"m\"))\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n   \"\"\n-  \"ldr%?\\\\tpc, %0\\\\t%@ table jump, label %l1\"\n+  \"ldr%?\\\\t%|pc, %0\\\\t%@ table jump, label %l1\"\n [(set_attr \"type\" \"load\")])\n \n (define_insn \"indirect_jump\"\n   [(set (pc)\n \t(match_operand:SI 0 \"s_register_operand\" \"r\"))]\n   \"\"\n-  \"mov%?\\\\tpc, %0\\\\t%@ indirect jump\")\n+  \"mov%?\\\\t%|pc, %0\\\\t%@ indirect jump\")\n \n (define_insn \"\"\n   [(set (pc)\n \t(match_operand:SI 0 \"memory_operand\" \"m\"))]\n   \"\"\n-  \"ldr%?\\\\tpc, %0\\\\t%@ indirect jump\"\n+  \"ldr%?\\\\t%|pc, %0\\\\t%@ indirect jump\"\n [(set_attr \"type\" \"load\")])\n \f\n ;; Misc insns\n@@ -3500,8 +3500,8 @@\n \t\t(match_operand:SI 1 \"s_register_operand\" \"0,?r\")))]\n   \"\"\n   \"@\n-  orr%d2\\\\t%0, %1, #1\n-  mov%D2\\\\t%0, %1\\;orr%d2\\\\t%0, %1, #1\"\n+   orr%d2\\\\t%0, %1, #1\n+   mov%D2\\\\t%0, %1\\;orr%d2\\\\t%0, %1, #1\"\n [(set_attr \"conds\" \"use\")\n  (set_attr \"length\" \"4,8\")])\n \n@@ -4284,8 +4284,8 @@\n    (clobber (reg 24))]\n   \"\"\n   \"@\n-  cmp\\\\t%4, %5\\;mvn%D6\\\\t%0, %1\\;%I7%d6\\\\t%0, %2, %3\n-  cmn\\\\t%4, #%n5\\;mvn%D6\\\\t%0, %1\\;%I7%d6\\\\t%0, %2, %3\"\n+   cmp\\\\t%4, %5\\;mvn%D6\\\\t%0, %1\\;%I7%d6\\\\t%0, %2, %3\n+   cmn\\\\t%4, #%n5\\;mvn%D6\\\\t%0, %1\\;%I7%d6\\\\t%0, %2, %3\"\n [(set_attr \"conds\" \"clob\")\n  (set_attr \"length\" \"12\")])\n \n@@ -5029,18 +5029,18 @@\n   if (TARGET_6)\n     {\n       if (backward)\n-\toutput_asm_insn (\\\"sub%?\\\\tlr, pc, #(8 + . -%l2)\\\", operands);\n+\toutput_asm_insn (\\\"sub%?\\\\t%|lr, %|pc, #(8 + . -%l2)\\\", operands);\n       else\n-\toutput_asm_insn (\\\"add%?\\\\tlr, pc, #(%l2 - . -8)\\\", operands);\n+\toutput_asm_insn (\\\"add%?\\\\t%|lr, %|pc, #(%l2 - . -8)\\\", operands);\n     }\n   else\n #endif\n     {\n-      output_asm_insn (\\\"mov%?\\\\tlr, pc\\\\t%@ protect cc\\\", operands);\n+      output_asm_insn (\\\"mov%?\\\\t%|lr, %|pc\\\\t%@ protect cc\\\", operands);\n       if (backward)\n-\toutput_asm_insn (\\\"sub%?\\\\tlr, lr, #(4 + . -%l2)\\\", operands);\n+\toutput_asm_insn (\\\"sub%?\\\\t%|lr, %|lr, #(4 + . -%l2)\\\", operands);\n       else\n-\toutput_asm_insn (\\\"add%?\\\\tlr, lr, #(%l2 - . -4)\\\", operands);\n+\toutput_asm_insn (\\\"add%?\\\\t%|lr, %|lr, #(%l2 - . -4)\\\", operands);\n     }\n   return \\\"b%?\\\\t%a0\\\";\n }\"\n@@ -5075,18 +5075,18 @@\n   if (TARGET_6)\n     {\n       if (backward)\n-\toutput_asm_insn (\\\"sub%?\\\\tlr, pc, #(8 + . -%l3)\\\", operands);\n+\toutput_asm_insn (\\\"sub%?\\\\t%|lr, %|pc, #(8 + . -%l3)\\\", operands);\n       else\n-\toutput_asm_insn (\\\"add%?\\\\tlr, pc, #(%l3 - . -8)\\\", operands);\n+\toutput_asm_insn (\\\"add%?\\\\t%|lr, %|pc, #(%l3 - . -8)\\\", operands);\n     }\n   else\n #endif\n     {\n-      output_asm_insn (\\\"mov%?\\\\tlr, pc\\\\t%@ protect cc\\\", operands);\n+      output_asm_insn (\\\"mov%?\\\\t%|lr, %|pc\\\\t%@ protect cc\\\", operands);\n       if (backward)\n-\toutput_asm_insn (\\\"sub%?\\\\tlr, lr, #(4 + . -%l3)\\\", operands);\n+\toutput_asm_insn (\\\"sub%?\\\\t%|lr, %|lr, #(4 + . -%l3)\\\", operands);\n       else\n-\toutput_asm_insn (\\\"add%?\\\\tlr, lr, #(%l3 - . -4)\\\", operands);\n+\toutput_asm_insn (\\\"add%?\\\\t%|lr, %|lr, #(%l3 - . -4)\\\", operands);\n     }\n   return \\\"b%?\\\\t%a1\\\";\n }\"\n@@ -5226,8 +5226,8 @@\n \t\t\t  (match_operand:SI 2 \"s_register_operand\" \"r,r\"))))]\n   \"\"\n   \"@\n-  mvn%D4\\\\t%0, %2\n-  mov%d4\\\\t%0, %1\\;mvn%D4\\\\t%0, %2\"\n+   mvn%D4\\\\t%0, %2\n+   mov%d4\\\\t%0, %1\\;mvn%D4\\\\t%0, %2\"\n [(set_attr \"conds\" \"use\")\n  (set_attr \"length\" \"4,8\")])\n "}]}