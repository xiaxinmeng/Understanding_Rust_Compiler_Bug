{"sha": "8cf08dad4d4a9a6af03bc27de2501de9a3748d31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNmMDhkYWQ0ZDRhOWE2YWYwM2JjMjdkZTI1MDFkZTlhMzc0OGQzMQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2008-09-22T15:37:12Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2008-09-22T15:37:12Z"}, "message": "expr.c (rules): Add new rule for gnu.java.lang.VMCPStringBuilder.toString.\n\n2008-09-22  Andrew Haley  <aph@redhat.com>\n\n        * expr.c (rules): Add new rule for\n        gnu.java.lang.VMCPStringBuilder.toString.\n        (rewrite_rule.new_classname): New field.\n        (maybe_rewrite_invocation): Use new_classname field instead of\n        DECL_CONTEXT (*method_p).\n        Allow rewrite_arglist to be NULL.\n\nFrom-SVN: r140553", "tree": {"sha": "6caca83c362c2710b20b4b08e2bec18a9d4b7e3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6caca83c362c2710b20b4b08e2bec18a9d4b7e3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cf08dad4d4a9a6af03bc27de2501de9a3748d31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cf08dad4d4a9a6af03bc27de2501de9a3748d31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cf08dad4d4a9a6af03bc27de2501de9a3748d31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cf08dad4d4a9a6af03bc27de2501de9a3748d31/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7fd30be84b511123c09d99ad9ed40733b5f68c37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fd30be84b511123c09d99ad9ed40733b5f68c37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fd30be84b511123c09d99ad9ed40733b5f68c37"}], "stats": {"total": 40, "additions": 31, "deletions": 9}, "files": [{"sha": "0e59b21ae04c863f36a7f3d1c38fab5eaedc72c4", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cf08dad4d4a9a6af03bc27de2501de9a3748d31/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cf08dad4d4a9a6af03bc27de2501de9a3748d31/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=8cf08dad4d4a9a6af03bc27de2501de9a3748d31", "patch": "@@ -1,3 +1,12 @@\n+2008-09-22  Andrew Haley  <aph@redhat.com>\n+\n+\t* expr.c (rules): Add new rule for\n+\tgnu.java.lang.VMCPStringBuilder.toString.\n+\t(rewrite_rule.new_classname): New field.\n+\t(maybe_rewrite_invocation): Use new_classname field instead of\n+\tDECL_CONTEXT (*method_p).\n+\tAllow rewrite_arglist to be NULL.\n+\n 2008-09-17  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \t* lang.c (LANG_HOOKS_GET_CALLEE_FNDECL): Don't define."}, {"sha": "e1c008242482e81ff3ac0c8de8c5cbf610ef3c77", "filename": "gcc/java/expr.c", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cf08dad4d4a9a6af03bc27de2501de9a3748d31/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cf08dad4d4a9a6af03bc27de2501de9a3748d31/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=8cf08dad4d4a9a6af03bc27de2501de9a3748d31", "patch": "@@ -2075,6 +2075,7 @@ typedef struct\n   const char *classname;\n   const char *method;\n   const char *signature;\n+  const char *new_classname;\n   const char *new_signature;\n   int flags;\n   tree (*rewrite_arglist) (tree arglist);\n@@ -2109,20 +2110,27 @@ rewrite_arglist_getclass (tree arglist)\n \n static rewrite_rule rules[] =\n   {{\"java.lang.Class\", \"getClassLoader\", \"()Ljava/lang/ClassLoader;\", \n-    \"(Ljava/lang/Class;)Ljava/lang/ClassLoader;\", \n+    \"java.lang.Class\", \"(Ljava/lang/Class;)Ljava/lang/ClassLoader;\", \n     ACC_FINAL|ACC_PRIVATE, rewrite_arglist_getclass},\n+\n    {\"java.lang.Class\", \"forName\", \"(Ljava/lang/String;)Ljava/lang/Class;\",\n-    \"(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;\",\n+    \"java.lang.Class\", \"(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;\",\n     ACC_FINAL|ACC_PRIVATE|ACC_STATIC, rewrite_arglist_getclass},\n+\n    {\"gnu.classpath.VMStackWalker\", \"getCallingClass\", \"()Ljava/lang/Class;\",\n-    \"(Lgnu/gcj/RawData;)Ljava/lang/Class;\",\n+    \"gnu.classpath.VMStackWalker\", \"(Lgnu/gcj/RawData;)Ljava/lang/Class;\",\n     ACC_FINAL|ACC_PRIVATE|ACC_STATIC, rewrite_arglist_getcaller},\n+\n    {\"gnu.classpath.VMStackWalker\", \"getCallingClassLoader\", \n     \"()Ljava/lang/ClassLoader;\",\n-    \"(Lgnu/gcj/RawData;)Ljava/lang/ClassLoader;\",\n+    \"gnu.classpath.VMStackWalker\", \"(Lgnu/gcj/RawData;)Ljava/lang/ClassLoader;\",\n     ACC_FINAL|ACC_PRIVATE|ACC_STATIC, rewrite_arglist_getcaller},\n \n-   {NULL, NULL, NULL, NULL, 0, NULL}};\n+   {\"gnu.java.lang.VMCPStringBuilder\", \"toString\", \"([CII)Ljava/lang/String;\", \n+    \"java.lang.String\", \"([CII)Ljava/lang/String;\",\n+    ACC_FINAL|ACC_PRIVATE|ACC_STATIC, NULL},\n+\n+   {NULL, NULL, NULL, NULL, NULL, 0, NULL}};\n \n /* True if this method is special, i.e. it's a private method that\n    should be exported from a DSO.  */\n@@ -2163,20 +2171,25 @@ maybe_rewrite_invocation (tree *method_p, tree *arg_list_p,\n \t  if (get_identifier (p->method) == method\n \t      && get_identifier (p->signature) == *method_signature_p)\n \t    {\n-\t      tree maybe_method\n-\t\t= lookup_java_method (DECL_CONTEXT (*method_p),\n+\t      tree maybe_method;\n+\t      tree destination_class \n+\t\t= lookup_class (get_identifier (p->new_classname));\n+\t      gcc_assert (destination_class);\n+\t      maybe_method\n+\t\t= lookup_java_method (destination_class,\n \t\t\t\t      method,\n \t\t\t\t      get_identifier (p->new_signature));\n \t      if (! maybe_method && ! flag_verify_invocations)\n \t\t{\n \t\t  maybe_method\n-\t\t    = add_method (DECL_CONTEXT (*method_p), p->flags, \n+\t\t    = add_method (destination_class, p->flags, \n \t\t\t\t  method, get_identifier (p->new_signature));\n \t\t  DECL_EXTERNAL (maybe_method) = 1;\n \t\t}\n \t      *method_p = maybe_method;\n \t      gcc_assert (*method_p);\n-\t      *arg_list_p = p->rewrite_arglist (*arg_list_p);\n+\t      if (p->rewrite_arglist)\n+\t\t*arg_list_p = p->rewrite_arglist (*arg_list_p);\n \t      *method_signature_p = get_identifier (p->new_signature);\n \t      *special = integer_one_node;\n "}]}