{"sha": "d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ0NzZiZTI1OWJiNWI3ZTRmMGVhZjdhYWYxZTAzMWQ0MDdiMGMzNg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-01-23T20:47:03Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-01-23T20:47:03Z"}, "message": "Warning fixes:\n\n        * Makefile.in (parse.o): Depend on $(CONFIG_H) and\n        $(srcdir)/../system.h.\n        (class.o): Depend on $(PARSE_H) and $(srcdir)/../output.h.\n        (jcf-parse.o): Depend on $(srcdir)/../toplev.h.\n        (jcf-write.o): Likewise.\n        (jv-scan.o): Depend on $(CONFIG_H) and $(srcdir)/../system.h.\n        (mangle.o): Depend on $(srcdir)/../toplev.h.\n        (parse-scan.o): Depend on $(CONFIG_H) and $(srcdir)/../system.h.\n        (zextract.o): Depend on $(CONFIG_H) and $(srcdir)/../system.h.\n        * class.c: Include output.h and parse.h.\n        (mangled_classname): Add the `const' keyword to a char*.\n        (find_named_method): Hide unused function definition.\n        (build_utf8_ref): Change type of variable `c' to unsigned char.\n        Use ISALPHA/ISDIGIT instead of isalpha/isdigit.\n        (build_class_ref): Add the `const' keyword to a char*.\n        (layout_class_method): Remove unused variable `buf'.\n        * decl.c (find_local_variable): Remove unused variable `rtl'.\n        (pushdecl): Likewise for variables `different_binding_level' and\n        `oldglobal'.\n        (pushlevel): Mark parameter `unused' with ATTRIBUTE_UNUSED.\n        (maybe_build_cleanup): Likewise for parameter `decl'.\n        * except.c (expand_start_java_handler): Mark parameter `range'\n        with ATTRIBUTE_UNUSED.\n        * expr.c: Include except.h.\n        (pop_type): Remove unused variable `i'.\n        (pop_value): Likewise for variables `n_words' and `i'.\n        (expand_java_arrayload): Likewise for variable `convert'.\n        (java_lang_expand_expr): Likewise for variables `op0', `type',\n        `mode', `unsignedp', `node' and `elements'.\n        (expand_byte_code): Likewise for variables `prev_eh_ranges' and\n        `eh_ranges'.\n        (process_jvm_instruction): Add a `const' qualifier to a char*.\n        * gjavah.c (output_directory): Add the `const' keyword to a char*.\n        (temp_directory): Likewise.\n        (print_c_decl): Likewise.\n        (print_method_info): Likewise.\n        (decode_signature_piece): Likewise.\n        (print_mangled_classname): Likewise.\n        * java-except.h: Provide prototypes for maybe_start_try,\n        maybe_end_try and add_handler.\n        * java-tree.h (mangled_classname): Add the `const' keyword to a char*.\n        (parse_error_context): Likewise.  Also add ATTRIBUTE_PRINTF_2.\n        (pushdecl_top_level, alloc_class_constant, unicode_mangling_length,\n        init_expr_processing, push_super_field, init_class_processing,\n        can_widen_reference_to, class_depth, verify_jvm_instructions,\n        maybe_pushlevels, maybe_poplevels, process_jvm_instruction,\n        set_local_type, merge_type_state, push_type, load_type_state,\n        add_interface, find_in_current_zip, append_gpp_mangled_classtype,\n        emit_unicode_mangled_name): Add prototypes.\n        * jcf-dump.c (print_constant): Add the `const' keyword to a char*.\n        (print_signature_type): Use ISDIGIT, not isdigit.\n        (print_signature): Remove unused variable `j'.\n        * jcf-io.c (jcf_filbuf_from_stdio): Cast the result of `fread' to\n        int when comparing against one.\n        * jcf-parse.c: Include toplev.h.\n        * jcf-write.c: Likewise.  Don't include <string.h> or <sys/stat.h>.\n        (localvar_free): Remove unused variable `i'.\n        (generate_bytecode_conditional): Likewise for variable `kind'.\n        * jv-scan.c: Include config.h and system.h.  Remove redundant\n        OS header and gansidecl.h includes.\n        (warning): Add the `const' keyword to a char*.  Also add\n        ATTRIBUTE_PRINTF_1 to the prototype.  Check ANSI_PROTOTYPES, not\n        __STDC__, when determining whether to use ANSI-isms.\n        (fatal): Likewise.  Also add ATTRIBUTE_UNUSED.\n        (xmalloc): Don't redundantly prototype here.\n        (main): Remove unused parameter `envp'.  Also fix the arguments\n        passed to function `fatal' to match the format specifier.\n        * lang.c (java_tree_code_name): Add the `const' keyword to a char*.\n        * mangle.c: Include toplev.h.\n        (emit_unicode_mangled_name): Declare parameter `len'.\n        * parse.y (parse_warning_context): Add the `const' keyword to a\n        char*.  Also add ATTRIBUTE_PRINTF_2 to the prototype.  Check\n        `ANSI_PROTOTYPES' not `__STDC__' for whether to use ANSI-isms.\n        (issue_warning_error_from_context): Add the `const' keyword to\n        a char*.\n        (parse_error_context): Likewise.  Also check `ANSI_PROTOTYPES'\n        not `__STDC__' for whether to use ANSI-isms.\n        * typeck.c (incomplete_type_error): Mark parameters `value' and\n        `type' with ATTRIBUTE_UNUSED.\n        (parse_signature_type): Use ISDIGIT, not isdigit.\n        * verify.c (check_pending_block): Add the `const' keyword to a char*.\n        (verify_jvm_instructions): Likewise.  Remove unused variables\n        `field_name' and `default_val'.\n        * zextract.c: Include config.h and system.h.  Remove redundant\n        OS header includes.\n        * zipfile.h: Prototype `read_zip_archive'.\n\nFrom-SVN: r24835", "tree": {"sha": "ec0cc34264a0b8871c2a1ba09637989c11d5f8d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec0cc34264a0b8871c2a1ba09637989c11d5f8d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/comments", "author": null, "committer": null, "parents": [{"sha": "9b3142b340baab707d4e4c45f70fb566f15019de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b3142b340baab707d4e4c45f70fb566f15019de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b3142b340baab707d4e4c45f70fb566f15019de"}], "stats": {"total": 1207, "additions": 663, "deletions": 544}, "files": [{"sha": "9b67b0ab46e4e21c18a00596071f704ce592e34f", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 108, "deletions": 0, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -1,3 +1,111 @@\n+Sat Jan 23 23:02:43 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (parse.o): Depend on $(CONFIG_H) and\n+\t$(srcdir)/../system.h.\n+\t(class.o): Depend on $(PARSE_H) and $(srcdir)/../output.h.\n+\t(jcf-parse.o): Depend on $(srcdir)/../toplev.h.\n+\t(jcf-write.o): Likewise.\n+\t(jv-scan.o): Depend on $(CONFIG_H) and $(srcdir)/../system.h.\n+\t(mangle.o): Depend on $(srcdir)/../toplev.h.\n+\t(parse-scan.o): Depend on $(CONFIG_H) and $(srcdir)/../system.h.\n+\t(zextract.o): Depend on $(CONFIG_H) and $(srcdir)/../system.h.\n+\n+\t* class.c: Include output.h and parse.h.\n+\t(mangled_classname): Add the `const' keyword to a char*.\n+\t(find_named_method): Hide unused function definition.\n+\t(build_utf8_ref): Change type of variable `c' to unsigned char.\n+\tUse ISALPHA/ISDIGIT instead of isalpha/isdigit.\n+\t(build_class_ref): Add the `const' keyword to a char*.\n+\t(layout_class_method): Remove unused variable `buf'.\n+\n+\t* decl.c (find_local_variable): Remove unused variable `rtl'.\n+\t(pushdecl): Likewise for variables `different_binding_level' and\n+\t`oldglobal'.\n+\t(pushlevel): Mark parameter `unused' with ATTRIBUTE_UNUSED.\n+\t(maybe_build_cleanup): Likewise for parameter `decl'.\n+\n+\t* except.c (expand_start_java_handler): Mark parameter `range'\n+\twith ATTRIBUTE_UNUSED.\n+\n+\t* expr.c: Include except.h.\n+\t(pop_type): Remove unused variable `i'.\n+\t(pop_value): Likewise for variables `n_words' and `i'.\n+\t(expand_java_arrayload): Likewise for variable `convert'.\n+\t(java_lang_expand_expr): Likewise for variables `op0', `type',\n+\t`mode', `unsignedp', `node' and `elements'.\n+\t(expand_byte_code): Likewise for variables `prev_eh_ranges' and\n+\t`eh_ranges'.\n+\t(process_jvm_instruction): Add a `const' qualifier to a char*.\n+\n+\t* gjavah.c (output_directory): Add the `const' keyword to a char*.\n+\t(temp_directory): Likewise.\n+\t(print_c_decl): Likewise.\n+\t(print_method_info): Likewise.\n+\t(decode_signature_piece): Likewise.\n+\t(print_mangled_classname): Likewise.\n+\n+\t* java-except.h: Provide prototypes for maybe_start_try,\n+\tmaybe_end_try and add_handler.\n+\n+\t* java-tree.h (mangled_classname): Add the `const' keyword to a char*.\n+\t(parse_error_context): Likewise.  Also add ATTRIBUTE_PRINTF_2.\n+\t(pushdecl_top_level, alloc_class_constant, unicode_mangling_length,\n+\tinit_expr_processing, push_super_field, init_class_processing,\n+\tcan_widen_reference_to, class_depth, verify_jvm_instructions,\n+\tmaybe_pushlevels, maybe_poplevels, process_jvm_instruction,\n+\tset_local_type, merge_type_state, push_type, load_type_state,\n+\tadd_interface, find_in_current_zip, append_gpp_mangled_classtype,\n+\temit_unicode_mangled_name): Add prototypes.\n+\n+\t* jcf-dump.c (print_constant): Add the `const' keyword to a char*.\n+\t(print_signature_type): Use ISDIGIT, not isdigit.\n+\t(print_signature): Remove unused variable `j'.\n+\n+\t* jcf-io.c (jcf_filbuf_from_stdio): Cast the result of `fread' to\n+\tint when comparing against one.\n+\n+\t* jcf-parse.c: Include toplev.h.\n+\n+\t* jcf-write.c: Likewise.  Don't include <string.h> or <sys/stat.h>.\n+\t(localvar_free): Remove unused variable `i'.\n+\t(generate_bytecode_conditional): Likewise for variable `kind'.\n+\n+\t* jv-scan.c: Include config.h and system.h.  Remove redundant\n+\tOS header and gansidecl.h includes.\n+\t(warning): Add the `const' keyword to a char*.  Also add\n+\tATTRIBUTE_PRINTF_1 to the prototype.  Check ANSI_PROTOTYPES, not\n+\t__STDC__, when determining whether to use ANSI-isms.\n+\t(fatal): Likewise.  Also add ATTRIBUTE_UNUSED.\n+\t(xmalloc): Don't redundantly prototype here.\n+\t(main): Remove unused parameter `envp'.  Also fix the arguments\n+\tpassed to function `fatal' to match the format specifier.\n+\n+\t* lang.c (java_tree_code_name): Add the `const' keyword to a char*.\n+\n+\t* mangle.c: Include toplev.h.\n+\t(emit_unicode_mangled_name): Declare parameter `len'.\n+\n+\t* parse.y (parse_warning_context): Add the `const' keyword to a\n+\tchar*.  Also add ATTRIBUTE_PRINTF_2 to the prototype.  Check\n+\t`ANSI_PROTOTYPES' not `__STDC__' for whether to use ANSI-isms.\n+\t(issue_warning_error_from_context): Add the `const' keyword to\n+\ta char*.\n+\t(parse_error_context): Likewise.  Also check `ANSI_PROTOTYPES'\n+\tnot `__STDC__' for whether to use ANSI-isms.\n+\n+\t* typeck.c (incomplete_type_error): Mark parameters `value' and\n+\t`type' with ATTRIBUTE_UNUSED.\n+\t(parse_signature_type): Use ISDIGIT, not isdigit.\n+\n+\t* verify.c (check_pending_block): Add the `const' keyword to a char*.\n+\t(verify_jvm_instructions): Likewise.  Remove unused variables\n+\t`field_name' and `default_val'.\n+\t\n+\t* zextract.c: Include config.h and system.h.  Remove redundant\n+\tOS header includes.\n+\t\n+\t* zipfile.h: Prototype `read_zip_archive'.\n+\n Thu Jan 21 16:00:06 1999  Andrew Haley  <aph@cygnus.com>\n \n \t* typeck.c (convert): Allow conversions to void type: some"}, {"sha": "adf3ce71002bdab495d7c4fe4f433648f385442c", "filename": "gcc/java/Makefile.in", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMakefile.in?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -273,13 +273,14 @@ clean:  mostlyclean\n \n force:\n \n-parse.o: $(PARSE_C) jcf-reader.c\n+parse.o: $(PARSE_C) jcf-reader.c $(CONFIG_H) $(srcdir)/../system.h\n jcf-dump.o: jcf-reader.c jcf.h javaop.h javaop.def\n gjavah.o: jcf-reader.c jcf.h javaop.h\n buffer.o : buffer.c $(CONFIG_H) buffer.h $(srcdir)/../gansidecl.h \\\n   $(srcdir)/../system.h $(srcdir)/../toplev.h\n-class.o : class.c $(CONFIG_H) $(JAVA_TREE_H) $(RTL_H) jcf.h \\\n-  $(srcdir)/../gansidecl.h $(srcdir)/../toplev.h $(srcdir)/../system.h\n+class.o : class.c $(CONFIG_H) $(JAVA_TREE_H) $(RTL_H) jcf.h $(PARSE_H) \\\n+  $(srcdir)/../gansidecl.h $(srcdir)/../toplev.h $(srcdir)/../system.h \\\n+  $(srcdir)/../output.h\n constants.o : constants.c $(CONFIG_H) $(JAVA_TREE_H) jcf.h \\\n   $(srcdir)/../toplev.h $(srcdir)/../system.h\n decl.o : decl.c $(CONFIG_H) $(JAVA_TREE_H) jcf.h \\\n@@ -294,16 +295,20 @@ expr.o : expr.c $(CONFIG_H) $(JAVA_TREE_H) jcf.h $(srcdir)/../real.h \\\n jcf-depend.o: jcf-depend.c $(CONFIG_H) $(srcdir)/../system.h jcf.h\n jcf-io.o: jcf-io.c $(CONFIG_H) $(srcdir)/../system.h\n jcf-parse.o : jcf-parse.c $(CONFIG_H) $(JAVA_TREE_H) $(srcdir)/../flags.h \\\n-  $(srcdir)/../input.h java-except.h $(srcdir)/../system.h\n+  $(srcdir)/../input.h java-except.h $(srcdir)/../system.h \\\n+  $(srcdir)/../toplev.h\n jcf-write.o : jcf-write.c $(CONFIG_H) $(JAVA_TREE_H) jcf.h $(RTL_H) \\\n-  java-opcodes.h parse.h buffer.h $(srcdir)/../system.h\n+  java-opcodes.h parse.h buffer.h $(srcdir)/../system.h $(srcdir)/../toplev.h\n+jv-scan.o : $(CONFIG_H) $(srcdir)/../system.h\n jvgenmain.o : jvgenmain.c $(CONFIG_H) $(srcdir)/../system.h\n lang.o : lang.c $(CONFIG_H) $(JAVA_TREE_H) jcf.h $(srcdir)/../input.h \\\n   $(srcdir)/../toplev.h $(srcdir)/../system.h\n-mangle.o : mangle.c $(CONFIG_H) jcf.h $(srcdir)/../system.h\n+mangle.o : mangle.c $(CONFIG_H) jcf.h $(srcdir)/../system.h \\\n+  $(srcdir)/../toplev.h\n+parse-scan.o : $(CONFIG_H) $(srcdir)/../system.h\n typeck.o : typeck.c $(CONFIG_H) $(JAVA_TREE_H) jcf.h convert.h \\\n   $(srcdir)/../toplev.h $(srcdir)/../system.h\n verify.o : verify.c $(CONFIG_H) $(JAVA_TREE_H) jcf.h javaop.h java-opcodes.h \\\n   java-except.h $(srcdir)/../toplev.h $(srcdir)/../system.h\n-zextract.o: zextract.c zipfile.h\n+zextract.o: zextract.c $(CONFIG_H) $(srcdir)/../system.h zipfile.h\n "}, {"sha": "2ee7726c475e5dca41ad9e633b1c983e877b4e15", "filename": "gcc/java/class.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -33,6 +33,8 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"jcf.h\"\n #include \"obstack.h\"\n #include \"toplev.h\"\n+#include \"output.h\"\n+#include \"parse.h\"\n \n static tree mangle_class_field PROTO ((tree class));\n \n@@ -95,8 +97,8 @@ identifier_subst (old_id, prefix, old_char, new_char, suffix)\n \n tree\n mangled_classname (prefix, type)\n-     char *prefix;\n-     tree type;\n+  const char *prefix;\n+  tree type;\n {\n   tree ident = TYPE_NAME (type);\n   if (TREE_CODE (ident) != IDENTIFIER_NODE)\n@@ -354,6 +356,7 @@ add_interface (this_class, interface_class)\n   add_interface_do (basetype_vec, interface_class, i);\n }\n \n+#if 0\n /* Return the address of a pointer to the first FUNCTION_DECL\n    in the list (*LIST) whose DECL_NAME is NAME. */\n \n@@ -366,6 +369,7 @@ find_named_method (list, name)\n     list = &TREE_CHAIN (*list);\n   return list;\n }\n+#endif\n \n tree\n build_java_method_type (fntype, this_class, access_flags)\n@@ -566,10 +570,10 @@ build_utf8_ref (name)\n   buf_ptr = &buf[strlen (buf)];\n   while (--name_len >= 0)\n     {\n-      char c = *name_ptr++;\n+      unsigned char c = *name_ptr++;\n       if (c & 0x80)\n \tcontinue;\n-      if (!isalpha(c) && !isdigit(c))\n+      if (!ISALPHA(c) && !ISDIGIT(c))\n \tc = '_';\n       *buf_ptr++ = c;\n       if (buf_ptr >= buf + 50)\n@@ -639,7 +643,7 @@ build_class_ref (type)\n \t  char buffer[25];\n \t  if (flag_emit_class_files)\n \t    {\n-\t      char *prim_class_name;\n+\t      const char *prim_class_name;\n \t      tree prim_class;\n \t      if (type == char_type_node)\n \t\tprim_class_name = \"java.lang.Character\";\n@@ -1499,7 +1503,6 @@ layout_class_method (this_class, super_class, method_decl, dtable_count)\n      tree this_class, super_class, method_decl, dtable_count;\n {\n   char *ptr;\n-  char buf[8];\n   char *asm_name;\n   tree arg, arglist, t;\n   int method_name_needs_escapes = 0;"}, {"sha": "48430ed8acd54360dc72d925110c8aa22a39d989", "filename": "gcc/java/decl.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -113,7 +113,6 @@ find_local_variable (index, type, pc)\n      tree type;\n      int pc;\n {\n-  struct rtx_def *rtl = NULL;\n   tree decl = TREE_VEC_ELT (decl_map, index);\n   tree best = NULL_TREE;\n   while (decl != NULL_TREE)\n@@ -888,7 +887,6 @@ pushdecl (x)\n     {\n       char *file;\n       int line;\n-      int different_binding_level = 0;\n \n       t = lookup_name_current_level (name);\n       if (t != 0 && t == error_mark_node)\n@@ -928,7 +926,6 @@ pushdecl (x)\n \t{\n \t  /* Here to install a non-global value.  */\n \t  tree oldlocal = IDENTIFIER_LOCAL_VALUE (name);\n-\t  tree oldglobal = IDENTIFIER_GLOBAL_VALUE (name);\n \t  IDENTIFIER_LOCAL_VALUE (name) = x;\n \n #if 0\n@@ -1047,7 +1044,7 @@ make_binding_level ()\n \n void\n pushlevel (unused)\n-     int unused;\n+  int unused ATTRIBUTE_UNUSED;\n {\n   register struct binding_level *newlevel = NULL_BINDING_LEVEL;\n \n@@ -1378,7 +1375,7 @@ copy_lang_decl (node)\n \n tree\n maybe_build_cleanup (decl)\n-     tree decl;\n+  tree decl ATTRIBUTE_UNUSED;\n {\n   /* There are no cleanups in Java (I think).  */\n   return NULL_TREE;"}, {"sha": "460909fc62d9fbf79c41709666e733b201391458", "filename": "gcc/java/except.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexcept.c?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -184,7 +184,7 @@ add_handler (start_pc, end_pc, handler, type)\n /* if there are any handlers for this range, issue start of region */\n void\n expand_start_java_handler (range)\n-     struct eh_range *range;\n+  struct eh_range *range ATTRIBUTE_UNUSED;\n {\n   expand_eh_region_start ();\n }"}, {"sha": "77cd45e80881fffea97b110a10aefae4608bbbd1", "filename": "gcc/java/expr.c", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -37,6 +37,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"java-except.h\"\n #include \"parse.h\"\n #include \"toplev.h\"\n+#include \"except.h\"\n \n static tree operand_type[59];\n extern struct obstack permanent_obstack;\n@@ -242,7 +243,6 @@ pop_type (type)\n      tree type;\n {\n   int n_words;\n-  int i;\n   tree t;\n   if (TREE_CODE (type) == RECORD_TYPE)\n     type = promote_type (type);\n@@ -356,8 +356,6 @@ tree\n pop_value (type)\n      tree type;\n {\n-  int n_words = 1 + TYPE_IS_WIDE (type);\n-  int i;\n   type = pop_type (type);\n   if (quick_stack)\n     {\n@@ -846,7 +844,6 @@ expand_java_arrayload (lhs_type_node )\n     tree lhs_type_node;\n {\n   tree load_node;\n-  int convert;\n   tree index_node = pop_value (int_type_node);\n   tree array_node = pop_value (ptr_type_node);\n \n@@ -1747,18 +1744,14 @@ java_lang_expand_expr (exp, target, tmode, modifier)\n      enum machine_mode tmode;\n      enum expand_modifier modifier;\n {\n-  register rtx op0;\n-  tree type = TREE_TYPE (exp);\n-  register enum machine_mode mode = TYPE_MODE (type);\n-  int unsignedp = TREE_UNSIGNED (type);\n-  tree node, current;\n+  tree current;\n   int has_finally_p;\n \n   switch (TREE_CODE (exp))\n     {\n     case NEW_ARRAY_INIT:\n       {\n-\trtx tmp, elements;\n+\trtx tmp;\n \ttree array_type = TREE_TYPE (TREE_TYPE (exp));\n \ttree element_type = TYPE_ARRAY_ELEMENT (array_type);\n \ttree data_fld = TREE_CHAIN (TREE_CHAIN (TYPE_FIELDS (array_type)));\n@@ -1942,8 +1935,6 @@ expand_byte_code (jcf, method)\n   int i;\n   int saw_index;\n   unsigned char *linenumber_pointer;\n-  struct eh_range *prev_eh_ranges = NULL_EH_RANGE;\n-  struct eh_range *eh_ranges;\n \n #undef RET /* Defined by config/i386/i386.h */\n #undef AND /* Causes problems with opcodes for iand and land. */\n@@ -2190,7 +2181,7 @@ process_jvm_instruction (PC, byte_ops, length)\n      unsigned char* byte_ops;\n      long length;\n { \n-  char *opname; /* Temporary ??? */\n+  const char *opname; /* Temporary ??? */\n   int oldpc = PC; /* PC at instruction start. */\n \n   /* If the instruction is at the beginning of a exception handler,"}, {"sha": "7e20d697ee81a888d8238870edf74658e3912658", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -42,10 +42,10 @@ FILE *out = NULL;\n static int found_error = 0;\n \n /* Directory to place resulting files in. Set by -d option. */\n-char *output_directory = \"\";\n+const char *output_directory = \"\";\n \n /* Directory to place temporary file.  Set by -td option.  Currently unused. */\n-char *temp_directory = \"/tmp\";\n+const char *temp_directory = \"/tmp\";\n \n /* Number of friend functions we have to declare.  */\n static int friend_count;\n@@ -100,7 +100,7 @@ static struct method_name *method_name_list;\n \n static void print_field_info PROTO ((FILE *, JCF*, int, int, JCF_u2));\n static void print_method_info PROTO ((FILE *, JCF*, int, int, JCF_u2));\n-static void print_c_decl PROTO ((FILE*, JCF*, int, int, JCF_u2, int, char *));\n+static void print_c_decl PROTO ((FILE*, JCF*, int, int, JCF_u2, int, const char *));\n static void decompile_method PROTO ((FILE *, JCF *, int));\n \n JCF_u2 current_field_name;\n@@ -423,7 +423,7 @@ DEFUN(print_method_info, (stream, jcf, name_index, sig_index, flags),\n {\n   unsigned char *str;\n   int length, is_init = 0;\n-  char *override = NULL;\n+  const char *override = NULL;\n \n   method_declared = 0;\n   method_access = flags;\n@@ -557,7 +557,7 @@ decode_signature_piece (stream, signature, limit, need_space)\n      unsigned char *signature, *limit;\n      int *need_space;\n {\n-  char *ctype;\n+  const char *ctype;\n \n   switch (signature[0])\n     {\n@@ -649,7 +649,7 @@ DEFUN(print_c_decl, (stream, jcf, name_index, signature_index, flags, is_init,\n \t\t     name_override),\n       FILE* stream AND JCF* jcf\n       AND int name_index AND int signature_index AND JCF_u2 flags\n-      AND int is_init AND char *name_override)\n+      AND int is_init AND const char *name_override)\n {\n   if (JPOOL_TAG (jcf, signature_index) != CONSTANT_Utf8)\n     {\n@@ -734,7 +734,7 @@ DEFUN(print_c_decl, (stream, jcf, name_index, signature_index, flags, is_init,\n \n void\n DEFUN(print_mangled_classname, (stream, jcf, prefix, index),\n-      FILE *stream AND JCF *jcf AND char *prefix AND int index)\n+      FILE *stream AND JCF *jcf AND const char *prefix AND int index)\n {\n   int name_index = JPOOL_USHORT1 (jcf, index);\n   fputs (prefix, stream);"}, {"sha": "30516f2fe61c75f135ac51096a416b91031728a5", "filename": "gcc/java/java-except.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fjava-except.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fjava-except.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-except.h?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -65,3 +65,9 @@ extern void method_init_exceptions PROTO ((void));\n \n extern void emit_handlers PROTO ((void));\n \n+extern void maybe_start_try PROTO ((int));\n+\n+extern void maybe_end_try PROTO ((int));\n+\n+extern int add_handler PROTO ((int, int, tree, tree));\n+"}, {"sha": "2d713e95cc031f2c6972677c70512f56ac1c74ab", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -512,7 +512,7 @@ extern tree find_stack_slot PROTO ((int index, tree type));\n extern tree build_prim_array_type PROTO ((tree, HOST_WIDE_INT));\n extern tree build_java_array_type PROTO ((tree, HOST_WIDE_INT));\n extern int is_compiled_class PROTO ((tree));\n-extern tree mangled_classname PROTO ((char*, tree));\n+extern tree mangled_classname PROTO ((const char*, tree));\n extern tree lookup_label PROTO ((int));\n extern tree pop_type PROTO ((tree));\n extern void pop_argument_types PROTO ((tree));\n@@ -561,13 +561,35 @@ extern void emit_register_classes PROTO (());\n extern void lang_init_source PROTO ((int));\n extern void write_classfile PROTO ((tree));\n extern char *print_int_node PROTO ((tree));\n-extern void parse_error_context VPROTO ((tree cl, char *msg, ...));\n+extern void parse_error_context PVPROTO ((tree cl, const char *, ...))\n+  ATTRIBUTE_PRINTF_2;\n extern tree build_primtype_type_ref PROTO ((char *));\n extern tree java_get_real_method_name PROTO ((tree));\n extern void finish_class PROTO ((tree));\n extern void java_layout_seen_class_methods PROTO (());\n extern void check_for_initialization PROTO ((tree));\n \n+extern tree pushdecl_top_level PROTO ((tree));\n+extern int alloc_class_constant PROTO ((tree));\n+extern int unicode_mangling_length PROTO ((char *, int));\n+extern void init_expr_processing PROTO ((void));\n+extern void push_super_field PROTO ((tree, tree));\n+extern void init_class_processing PROTO ((void));\n+extern int can_widen_reference_to PROTO ((tree, tree));\n+extern int class_depth PROTO ((tree));\n+extern int verify_jvm_instructions PROTO ((struct JCF *, unsigned char *, long));\n+extern void maybe_pushlevels PROTO ((int));\n+extern void maybe_poplevels PROTO ((int));\n+extern int process_jvm_instruction PROTO ((int, unsigned char *, long));\n+extern void set_local_type PROTO ((int, tree));\n+extern int merge_type_state PROTO ((tree));\n+extern void push_type PROTO ((tree));\n+extern void load_type_state PROTO ((tree));\n+extern void add_interface PROTO ((tree, tree));\n+extern int find_in_current_zip PROTO ((char *, int, struct JCF **));\n+extern void append_gpp_mangled_classtype PROTO ((struct obstack *, char *));\n+extern void emit_unicode_mangled_name PROTO ((struct obstack *, char *, int));\n+\n /* Access flags etc for a method (a FUNCTION_DECL): */\n \n #define METHOD_PUBLIC(DECL) DECL_LANG_FLAG_1 (DECL)"}, {"sha": "6f29b6501af2a2a21948045a203c5a7cd074e2bd", "filename": "gcc/java/jcf-dump.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fjcf-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fjcf-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-dump.c?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -364,7 +364,7 @@ DEFUN(print_constant, (out, jcf, index, verbosity),\n {\n   int j, n;\n   jlong num;\n-  char *str;\n+  const char *str;\n   int kind = JPOOL_TAG (jcf, index);\n   switch (kind)\n     {\n@@ -518,7 +518,7 @@ DEFUN(print_signature_type, (stream, ptr, limit),\n     {\n     case '[':\n       array_size = -1;\n-      for ((*ptr)++; (*ptr) < limit && isdigit (**ptr); (*ptr)++)\n+      for ((*ptr)++; (*ptr) < limit && ISDIGIT (**ptr); (*ptr)++)\n \t{\n \t  int digit = \n \t    array_size = (array_size < 0 ? 0 : 10 * array_size) + *(*ptr) - '0';\n@@ -578,7 +578,6 @@ DEFUN(print_signature, (stream, jcf, signature_index, int options),\n     print_constant_terse (out, jcf, signature_index, CONSTANT_Utf8);\n   else\n     {\n-      int j;\n       const unsigned char *str = JPOOL_UTF_DATA (jcf, signature_index);\n       int length = JPOOL_UTF_LENGTH (jcf, signature_index);\n       const unsigned char *limit;"}, {"sha": "8cea2ab095fb7473fb33caf56fa1561a6c4ff928", "filename": "gcc/java/jcf-io.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fjcf-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fjcf-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-io.c?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -79,7 +79,7 @@ DEFUN(jcf_filbuf_from_stdio, (jcf, count),\n   count -= jcf->read_end - jcf->read_ptr;\n   if (count <= 0)\n     return 0;\n-  if (fread (jcf->read_end, 1, count, file) != count)\n+  if ((int) fread (jcf->read_end, 1, count, file) != count)\n     jcf_unexpected_eof (jcf, count);\n   jcf->read_end += count;\n   return 0;"}, {"sha": "240f638cc6c776c8b609a3abf27d2ee245b958be", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -32,6 +32,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"java-except.h\"\n #include \"input.h\"\n #include \"java-tree.h\"\n+#include \"toplev.h\"\n \n /* A CONSTANT_Utf8 element is converted to an IDENTIFIER_NODE at parse time. */\n #define JPOOL_UTF(JCF, INDEX) CPOOL_UTF(&(JCF)->cpool, INDEX)"}, {"sha": "2897e427d73b17d7c4a84af005ca77960c9f3c05", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -23,7 +23,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n #include \"config.h\"\n #include \"system.h\"\n-#include <string.h>\n #include \"tree.h\"\n #include \"java-tree.h\"\n #include \"jcf.h\"\n@@ -33,8 +32,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"java-opcodes.h\"\n #include \"parse.h\" /* for BLOCK_EXPR_BODY */\n #include \"buffer.h\"\n-\n-#include <sys/stat.h>\n+#include \"toplev.h\"\n \n #ifndef DIR_SEPARATOR\n #define DIR_SEPARATOR '/'\n@@ -550,7 +548,6 @@ localvar_free (decl, state)\n   register struct localvar_info **ptr = &localvar_buffer [index];\n   register struct localvar_info *info = *ptr;\n   int wide = TYPE_IS_WIDE (TREE_TYPE (decl));\n-  int i;\n \n   info->end_label = end_label;\n \n@@ -1054,7 +1051,6 @@ generate_bytecode_conditional (exp, true_label, false_label,\n      int true_branch_first;\n      struct jcf_partial *state;\n {\n-  int kind;\n   tree exp0, exp1, type;\n   int save_SP = state->code_SP;\n   enum java_opcode op, negop;"}, {"sha": "661ca85b793b2bd4b9721c05dbb3a04c2ae45dfb", "filename": "gcc/java/jv-scan.c", "status": "modified", "additions": 20, "deletions": 28, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fjv-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fjv-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjv-scan.c?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -19,22 +19,15 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include <stdio.h>\n-#include <stdlib.h>\n-#ifdef __STDC__\n-#include <stdarg.h>\n-#else\n-#include <varargs.h>\n-#endif\n+#include \"config.h\"\n+#include \"system.h\"\n \n-#include \"gansidecl.h\"\t\t/* Definitions of PROTO and VPROTO */\n #include \"obstack.h\"\t\t/* We use obstacks in lex.c */\n \n-void fatal VPROTO((char *s, ...));\n-void warning VPROTO((char *s, ...));\n+void fatal VPROTO((const char *s, ...)) ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n+void warning VPROTO((const char *s, ...)) ATTRIBUTE_PRINTF_1;\n void gcc_obstack_init PROTO ((struct obstack *obstack));\n extern void reset_report PROTO ((void));\n-extern PTR xmalloc PROTO((size_t));\n \n #define JC1_LITE\n #include \"parse.h\"\n@@ -55,10 +48,9 @@ int flag_list_filename = 0;\n \n /* jc1-lite main entry point */\n int\n-main (argc, argv, envp)\n-     int argc;\n-     char **argv;\n-     char **envp;\n+main (argc, argv)\n+  int argc;\n+  char **argv;\n {\n   int i = 1;\n   char *output_file = NULL;\n@@ -109,10 +101,10 @@ main (argc, argv, envp)\n   /* Check on bad usage */\n   if (flag_find_main && flag_dump_class)\n     fatal (\"Options `--print-main' and `--list-class' can't be turned on \"\n-\t   \"at the same time\", argv [0]);\n+\t   \"at the same time\");\n \n   if (output_file && !(out = fopen (output_file, \"w\")))\n-    fatal (\"Can't open output file `%s'\", argv [0], output_file);\n+    fatal (\"Can't open output file `%s'\", output_file);\n \n   ft = ftell (out);\n \n@@ -134,7 +126,7 @@ main (argc, argv, envp)\n \t    reset_report ();\n \t  }\n \telse\n-\t  fatal (\"File not found `%s'\", argv [0], argv [i]);\n+\t  fatal (\"File not found `%s'\", argv [i]);\n       }\n \n   /* Flush and close */\n@@ -150,17 +142,17 @@ main (argc, argv, envp)\n    functions */\n \n void\n-fatal VPROTO((char *s, ...))\n+fatal VPROTO((const char *s, ...))\n {\n-#ifndef __STDC__\n-  char *s;\n+#ifndef ANSI_PROTOTYPES\n+  const char *s;\n #endif\n   va_list ap;\n \n   VA_START (ap, s);\n \n-#ifndef __STDC__\n-  s = va_arg (ap, char *);\n+#ifndef ANSI_PROTOTYPES\n+  s = va_arg (ap, const char *);\n #endif\n \n   fprintf (stderr, \"%s: error: \", exec_name);\n@@ -171,17 +163,17 @@ fatal VPROTO((char *s, ...))\n }\n \n void\n-warning VPROTO((char *s, ...))\n+warning VPROTO((const char *s, ...))\n {\n-#ifndef __STDC__\n-  char *s;\n+#ifndef ANSI_PROTOTYPES\n+  const char *s;\n #endif\n   va_list ap;\n \n   VA_START (ap, s);\n \n-#ifndef __STDC__\n-  s = va_arg (ap, char *);\n+#ifndef ANSI_PROTOTYPES\n+  s = va_arg (ap, const char *);\n #endif\n \n   fprintf (stderr, \"%s: warning: \", exec_name);"}, {"sha": "82b47279d34bbaa94559e095c040f50d39204f5c", "filename": "gcc/java/lang.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -65,7 +65,7 @@ int java_tree_code_length[] = {\n    Used for printing out the tree and error messages.  */\n #define DEFTREECODE(SYM, NAME, TYPE, LEN) NAME,\n \n-char *java_tree_code_name[] = {\n+const char *java_tree_code_name[] = {\n   \"@@dummy\",\n #include \"java-tree.def\"\n };"}, {"sha": "a6d48e933fd2bf5715d353dee662b31d036aea51", "filename": "gcc/java/mangle.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fmangle.c?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -29,6 +29,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"system.h\"\n #include \"jcf.h\"\n #include \"obstack.h\"\n+#include \"toplev.h\"\n \n /* Assuming (NAME, LEN) is a Utf8-encoding string, calculate\n    the length of the string as mangled (a la g++) including Unicode escapes.\n@@ -70,6 +71,7 @@ void\n emit_unicode_mangled_name (obstack, name, len)\n      struct obstack *obstack;\n      char *name;\n+     int len;\n {\n   unsigned char *ptr;\n   unsigned char *limit = (unsigned char *)name + len;"}, {"sha": "934bf4f9a7b8e109f2eb92a27c5ce6bdfc001569", "filename": "gcc/java/parse.c", "status": "modified", "additions": 439, "deletions": 438, "changes": 877, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -162,8 +162,9 @@ static tree lookup_java_method2 PROTO ((tree, tree, int));\n static tree method_header PROTO ((int, tree, tree, tree));\n static void fix_method_argument_names PROTO ((tree ,tree));\n static tree method_declarator PROTO ((tree, tree));\n-static void parse_warning_context VPROTO ((tree cl, char *msg, ...));\n-static void issue_warning_error_from_context PROTO ((tree, char *msg, va_list));\n+static void parse_warning_context PVPROTO ((tree cl, const char *msg, ...))\n+  ATTRIBUTE_PRINTF_2;\n+static void issue_warning_error_from_context PROTO ((tree, const char *msg, va_list));\n static tree parse_jdk1_1_error PROTO ((char *));\n static void complete_class_report_errors PROTO ((jdep *));\n static int process_imports PROTO ((void));\n@@ -361,7 +362,7 @@ static tree wfl_to_string = NULL_TREE;\n /* The \"java.lang\" import qualified name.  */\n static tree java_lang_id = NULL_TREE;\n \n-#line 289 \"./parse.y\"\n+#line 290 \"./parse.y\"\n typedef union {\n   tree node;\n   int sub_token;\n@@ -665,56 +666,56 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   439,   445,   447,   448,   449,   450,   451,   455,   457,   460,\n-   462,   463,   466,   468,   471,   475,   479,   483,   489,   491,\n-   493,   495,   500,   502,   505,   509,   514,   519,   521,   522,\n-   523,   524,   525,   526,   527,   530,   535,   541,   543,   546,\n-   549,   551,   555,   557,   560,   587,   589,   593,   606,   608,\n-   612,   619,   620,   622,   632,   637,   652,   656,   659,   662,\n-   665,   667,   669,   671,   675,   677,   679,   681,   685,   687,\n-   689,   696,   702,   707,   711,   714,   718,   720,   723,   725,\n-   726,   727,   731,   733,   734,   736,   741,   744,   754,   757,\n-   759,   763,   766,   773,   779,   787,   789,   791,   793,   795,\n-   799,   801,   805,   812,   813,   817,   820,   822,   824,   826,\n-   828,   830,   832,   834,   841,   844,   846,   855,   857,   861,\n-   866,   871,   875,   880,   882,   884,   891,   893,   895,   899,\n-   902,   904,   908,   910,   911,   916,   921,   927,   935,   942,\n-   945,   948,   952,   955,   959,   968,   970,   972,   977,   984,\n-   992,   994,   998,  1006,  1017,  1021,  1024,  1027,  1030,  1033,\n-  1036,  1039,  1042,  1044,  1048,  1054,  1059,  1061,  1065,  1068,\n-  1072,  1074,  1077,  1079,  1080,  1082,  1086,  1090,  1096,  1101,\n-  1104,  1106,  1110,  1116,  1120,  1125,  1128,  1132,  1137,  1145,\n-  1147,  1150,  1152,  1154,  1158,  1162,  1165,  1169,  1171,  1172,\n-  1173,  1174,  1175,  1185,  1187,  1188,  1189,  1190,  1193,  1195,\n-  1196,  1197,  1198,  1199,  1200,  1201,  1202,  1203,  1204,  1207,\n-  1212,  1223,  1230,  1234,  1245,  1255,  1261,  1267,  1273,  1275,\n-  1281,  1283,  1289,  1291,  1293,  1295,  1297,  1301,  1303,  1304,\n-  1305,  1306,  1307,  1308,  1311,  1314,  1316,  1318,  1322,  1327,\n-  1332,  1338,  1348,  1354,  1356,  1358,  1365,  1368,  1370,  1372,\n-  1376,  1378,  1381,  1385,  1387,  1390,  1397,  1403,  1405,  1407,\n-  1411,  1419,  1422,  1424,  1426,  1430,  1435,  1444,  1449,  1452,\n-  1459,  1461,  1463,  1467,  1470,  1479,  1486,  1488,  1492,  1505,\n-  1507,  1513,  1519,  1523,  1525,  1529,  1532,  1534,  1538,  1541,\n-  1543,  1545,  1549,  1552,  1554,  1556,  1560,  1563,  1565,  1567,\n-  1571,  1577,  1579,  1583,  1590,  1592,  1594,  1596,  1600,  1608,\n-  1611,  1613,  1615,  1619,  1621,  1628,  1636,  1653,  1655,  1657,\n-  1661,  1667,  1672,  1674,  1677,  1679,  1681,  1683,  1684,  1685,\n-  1686,  1690,  1692,  1694,  1699,  1701,  1703,  1705,  1707,  1711,\n-  1714,  1719,  1721,  1726,  1727,  1728,  1729,  1730,  1732,  1734,\n-  1736,  1738,  1740,  1744,  1746,  1749,  1755,  1760,  1764,  1767,\n-  1769,  1771,  1775,  1777,  1779,  1781,  1785,  1788,  1792,  1798,\n-  1800,  1808,  1835,  1837,  1841,  1846,  1854,  1858,  1861,  1863,\n-  1874,  1885,  1890,  1899,  1901,  1905,  1908,  1910,  1915,  1920,\n-  1925,  1932,  1934,  1935,  1936,  1939,  1944,  1949,  1951,  1952,\n-  1954,  1956,  1957,  1959,  1963,  1966,  1970,  1973,  1977,  1979,\n-  1981,  1983,  1984,  1986,  1990,  1999,  2001,  2003,  2016,  2018,\n-  2024,  2026,  2028,  2032,  2034,  2039,  2044,  2049,  2051,  2053,\n-  2057,  2059,  2064,  2069,  2071,  2075,  2077,  2082,  2087,  2092,\n-  2094,  2096,  2100,  2102,  2107,  2112,  2117,  2122,  2124,  2126,\n-  2128,  2130,  2132,  2136,  2138,  2143,  2148,  2150,  2154,  2156,\n-  2161,  2165,  2167,  2172,  2176,  2178,  2183,  2187,  2189,  2194,\n-  2198,  2200,  2205,  2209,  2211,  2216,  2222,  2224,  2228,  2230,\n-  2233,  2236,  2244,  2246,  2247,  2250,  2252,  2255,  2259\n+   440,   446,   448,   449,   450,   451,   452,   456,   458,   461,\n+   463,   464,   467,   469,   472,   476,   480,   484,   490,   492,\n+   494,   496,   501,   503,   506,   510,   515,   520,   522,   523,\n+   524,   525,   526,   527,   528,   531,   536,   542,   544,   547,\n+   550,   552,   556,   558,   561,   588,   590,   594,   607,   609,\n+   613,   620,   621,   623,   633,   638,   653,   657,   660,   663,\n+   666,   668,   670,   672,   676,   678,   680,   682,   686,   688,\n+   690,   697,   703,   708,   712,   715,   719,   721,   724,   726,\n+   727,   728,   732,   734,   735,   737,   742,   745,   755,   758,\n+   760,   764,   767,   774,   780,   788,   790,   792,   794,   796,\n+   800,   802,   806,   813,   814,   818,   821,   823,   825,   827,\n+   829,   831,   833,   835,   842,   845,   847,   856,   858,   862,\n+   867,   872,   876,   881,   883,   885,   892,   894,   896,   900,\n+   903,   905,   909,   911,   912,   917,   922,   928,   936,   943,\n+   946,   949,   953,   956,   960,   969,   971,   973,   978,   985,\n+   993,   995,   999,  1007,  1018,  1022,  1025,  1028,  1031,  1034,\n+  1037,  1040,  1043,  1045,  1049,  1055,  1060,  1062,  1066,  1069,\n+  1073,  1075,  1078,  1080,  1081,  1083,  1087,  1091,  1097,  1102,\n+  1105,  1107,  1111,  1117,  1121,  1126,  1129,  1133,  1138,  1146,\n+  1148,  1151,  1153,  1155,  1159,  1163,  1166,  1170,  1172,  1173,\n+  1174,  1175,  1176,  1186,  1188,  1189,  1190,  1191,  1194,  1196,\n+  1197,  1198,  1199,  1200,  1201,  1202,  1203,  1204,  1205,  1208,\n+  1213,  1224,  1231,  1235,  1246,  1256,  1262,  1268,  1274,  1276,\n+  1282,  1284,  1290,  1292,  1294,  1296,  1298,  1302,  1304,  1305,\n+  1306,  1307,  1308,  1309,  1312,  1315,  1317,  1319,  1323,  1328,\n+  1333,  1339,  1349,  1355,  1357,  1359,  1366,  1369,  1371,  1373,\n+  1377,  1379,  1382,  1386,  1388,  1391,  1398,  1404,  1406,  1408,\n+  1412,  1420,  1423,  1425,  1427,  1431,  1436,  1445,  1450,  1453,\n+  1460,  1462,  1464,  1468,  1471,  1480,  1487,  1489,  1493,  1506,\n+  1508,  1514,  1520,  1524,  1526,  1530,  1533,  1535,  1539,  1542,\n+  1544,  1546,  1550,  1553,  1555,  1557,  1561,  1564,  1566,  1568,\n+  1572,  1578,  1580,  1584,  1591,  1593,  1595,  1597,  1601,  1609,\n+  1612,  1614,  1616,  1620,  1622,  1629,  1637,  1654,  1656,  1658,\n+  1662,  1668,  1673,  1675,  1678,  1680,  1682,  1684,  1685,  1686,\n+  1687,  1691,  1693,  1695,  1700,  1702,  1704,  1706,  1708,  1712,\n+  1715,  1720,  1722,  1727,  1728,  1729,  1730,  1731,  1733,  1735,\n+  1737,  1739,  1741,  1745,  1747,  1750,  1756,  1761,  1765,  1768,\n+  1770,  1772,  1776,  1778,  1780,  1782,  1786,  1789,  1793,  1799,\n+  1801,  1809,  1836,  1838,  1842,  1847,  1855,  1859,  1862,  1864,\n+  1875,  1886,  1891,  1900,  1902,  1906,  1909,  1911,  1916,  1921,\n+  1926,  1933,  1935,  1936,  1937,  1940,  1945,  1950,  1952,  1953,\n+  1955,  1957,  1958,  1960,  1964,  1967,  1971,  1974,  1978,  1980,\n+  1982,  1984,  1985,  1987,  1991,  2000,  2002,  2004,  2017,  2019,\n+  2025,  2027,  2029,  2033,  2035,  2040,  2045,  2050,  2052,  2054,\n+  2058,  2060,  2065,  2070,  2072,  2076,  2078,  2083,  2088,  2093,\n+  2095,  2097,  2101,  2103,  2108,  2113,  2118,  2123,  2125,  2127,\n+  2129,  2131,  2133,  2137,  2139,  2144,  2149,  2151,  2155,  2157,\n+  2162,  2166,  2168,  2173,  2177,  2179,  2184,  2188,  2190,  2195,\n+  2199,  2201,  2206,  2210,  2212,  2217,  2223,  2225,  2229,  2231,\n+  2234,  2237,  2245,  2247,  2248,  2251,  2253,  2256,  2260\n };\n #endif\n \n@@ -2250,7 +2251,7 @@ static const short yycheck[] = {     3,\n #define YYPURE 1\n \n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/cygnus/gnupro-98r2/share/bison.simple\"\n+#line 3 \"/usr/local/gnu/share/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -2443,7 +2444,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/cygnus/gnupro-98r2/share/bison.simple\"\n+#line 196 \"/usr/local/gnu/share/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -2748,66 +2749,66 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 441 \"./parse.y\"\n+#line 442 \"./parse.y\"\n {;\n     break;}\n case 18:\n-#line 485 \"./parse.y\"\n+#line 486 \"./parse.y\"\n { \n \t\t  yyval.node = build_java_array_type (yyvsp[-2].node, -1);\n \t\t  CLASS_LOADED_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 19:\n-#line 490 \"./parse.y\"\n+#line 491 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 20:\n-#line 492 \"./parse.y\"\n+#line 493 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 21:\n-#line 494 \"./parse.y\"\n+#line 495 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 22:\n-#line 496 \"./parse.y\"\n+#line 497 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 26:\n-#line 511 \"./parse.y\"\n+#line 512 \"./parse.y\"\n { yyval.node = make_qualified_name (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 28:\n-#line 520 \"./parse.y\"\n+#line 521 \"./parse.y\"\n {yyval.node = NULL;;\n     break;}\n case 36:\n-#line 532 \"./parse.y\"\n+#line 533 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 37:\n-#line 536 \"./parse.y\"\n+#line 537 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 40:\n-#line 548 \"./parse.y\"\n+#line 549 \"./parse.y\"\n { ctxp->package = EXPR_WFL_NODE (yyvsp[-1].node); ;\n     break;}\n case 41:\n-#line 550 \"./parse.y\"\n+#line 551 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 42:\n-#line 552 \"./parse.y\"\n+#line 553 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 45:\n-#line 562 \"./parse.y\"\n+#line 563 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-1].node), node, last_name;\n \t\t  int   i = IDENTIFIER_LENGTH (name)-1;\n@@ -2835,15 +2836,15 @@ case 45:\n \t\t;\n     break;}\n case 46:\n-#line 588 \"./parse.y\"\n+#line 589 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 47:\n-#line 590 \"./parse.y\"\n+#line 591 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 48:\n-#line 595 \"./parse.y\"\n+#line 596 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-3].node);\n \t\t  /* Don't import java.lang.* twice. */\n@@ -2857,40 +2858,40 @@ case 48:\n \t\t;\n     break;}\n case 49:\n-#line 607 \"./parse.y\"\n+#line 608 \"./parse.y\"\n {yyerror (\"'*' expected\"); RECOVER;;\n     break;}\n case 50:\n-#line 609 \"./parse.y\"\n+#line 610 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 51:\n-#line 614 \"./parse.y\"\n+#line 615 \"./parse.y\"\n {\n \t\t  maybe_generate_finit ();\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 53:\n-#line 621 \"./parse.y\"\n+#line 622 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 54:\n-#line 623 \"./parse.y\"\n+#line 624 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Class or interface declaration expected\");\n \t\t;\n     break;}\n case 55:\n-#line 634 \"./parse.y\"\n+#line 635 \"./parse.y\"\n {\n \t\t  yyval.value = (1 << yyvsp[0].value);\n \t\t;\n     break;}\n case 56:\n-#line 638 \"./parse.y\"\n+#line 639 \"./parse.y\"\n {\n \t\t  int acc = (1 << yyvsp[0].value);\n \t\t  if (yyval.value & acc)\n@@ -2904,116 +2905,116 @@ case 56:\n \t\t;\n     break;}\n case 57:\n-#line 654 \"./parse.y\"\n+#line 655 \"./parse.y\"\n { create_class (yyvsp[-4].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 58:\n-#line 656 \"./parse.y\"\n+#line 657 \"./parse.y\"\n { \n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 59:\n-#line 660 \"./parse.y\"\n+#line 661 \"./parse.y\"\n { create_class (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 60:\n-#line 662 \"./parse.y\"\n+#line 663 \"./parse.y\"\n { \t\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 61:\n-#line 666 \"./parse.y\"\n+#line 667 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 62:\n-#line 668 \"./parse.y\"\n+#line 669 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 63:\n-#line 670 \"./parse.y\"\n+#line 671 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); DRECOVER(class1);;\n     break;}\n case 64:\n-#line 672 \"./parse.y\"\n+#line 673 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 65:\n-#line 676 \"./parse.y\"\n+#line 677 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 66:\n-#line 678 \"./parse.y\"\n+#line 679 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 67:\n-#line 680 \"./parse.y\"\n+#line 681 \"./parse.y\"\n {yyerror (\"'{' expected\"); ctxp->class_err=1;;\n     break;}\n case 68:\n-#line 682 \"./parse.y\"\n+#line 683 \"./parse.y\"\n {yyerror (\"Missing super class name\"); ctxp->class_err=1;;\n     break;}\n case 69:\n-#line 686 \"./parse.y\"\n+#line 687 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 70:\n-#line 688 \"./parse.y\"\n+#line 689 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 71:\n-#line 690 \"./parse.y\"\n+#line 691 \"./parse.y\"\n {\n \t\t  ctxp->class_err=1;\n \t\t  yyerror (\"Missing interface name\"); \n \t\t;\n     break;}\n case 72:\n-#line 698 \"./parse.y\"\n+#line 699 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 73:\n-#line 703 \"./parse.y\"\n+#line 704 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 74:\n-#line 708 \"./parse.y\"\n+#line 709 \"./parse.y\"\n {yyerror (\"Missing interface name\"); RECOVER;;\n     break;}\n case 75:\n-#line 713 \"./parse.y\"\n+#line 714 \"./parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 76:\n-#line 715 \"./parse.y\"\n+#line 716 \"./parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 82:\n-#line 728 \"./parse.y\"\n+#line 729 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"instance initializer\"); ;\n     break;}\n case 85:\n-#line 735 \"./parse.y\"\n+#line 736 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner classe declaration\"); ;\n     break;}\n case 86:\n-#line 737 \"./parse.y\"\n+#line 738 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 87:\n-#line 743 \"./parse.y\"\n+#line 744 \"./parse.y\"\n { register_fields (0, yyvsp[-2].node, yyvsp[-1].node); ;\n     break;}\n case 88:\n-#line 745 \"./parse.y\"\n+#line 746 \"./parse.y\"\n {\n \t\t  check_modifiers \n \t\t    (\"Illegal modifier `%s' for field declaration\",\n@@ -3023,19 +3024,19 @@ case 88:\n \t\t;\n     break;}\n case 90:\n-#line 758 \"./parse.y\"\n+#line 759 \"./parse.y\"\n { yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 91:\n-#line 760 \"./parse.y\"\n+#line 761 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 92:\n-#line 765 \"./parse.y\"\n+#line 766 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 93:\n-#line 767 \"./parse.y\"\n+#line 768 \"./parse.y\"\n { \n \t\t  if (java_error_count)\n \t\t    yyvsp[0].node = NULL_TREE;\n@@ -3044,101 +3045,101 @@ case 93:\n \t\t;\n     break;}\n case 94:\n-#line 774 \"./parse.y\"\n+#line 775 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing variable initializer\");\n \t\t  yyval.node = build_tree_list (yyvsp[-2].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 95:\n-#line 780 \"./parse.y\"\n+#line 781 \"./parse.y\"\n {\n \t\t  yyerror (\"';' expected\");\n \t\t  yyval.node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 97:\n-#line 790 \"./parse.y\"\n+#line 791 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 98:\n-#line 792 \"./parse.y\"\n+#line 793 \"./parse.y\"\n {yyerror (\"Invalid declaration\"); DRECOVER(vdi);;\n     break;}\n case 99:\n-#line 794 \"./parse.y\"\n+#line 795 \"./parse.y\"\n {yyerror (\"']' expected\"); DRECOVER(vdi);;\n     break;}\n case 100:\n-#line 796 \"./parse.y\"\n+#line 797 \"./parse.y\"\n {yyerror (\"Unbalanced ']'\"); DRECOVER(vdi);;\n     break;}\n case 103:\n-#line 807 \"./parse.y\"\n+#line 808 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 104:\n-#line 812 \"./parse.y\"\n+#line 813 \"./parse.y\"\n { complete_method_declaration (yyvsp[0].node); ;\n     break;}\n case 105:\n-#line 814 \"./parse.y\"\n+#line 815 \"./parse.y\"\n {YYNOT_TWICE yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 106:\n-#line 819 \"./parse.y\"\n+#line 820 \"./parse.y\"\n { yyval.node = method_header (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 107:\n-#line 821 \"./parse.y\"\n+#line 822 \"./parse.y\"\n { yyval.node = method_header (0, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 108:\n-#line 823 \"./parse.y\"\n+#line 824 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 109:\n-#line 825 \"./parse.y\"\n+#line 826 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 110:\n-#line 827 \"./parse.y\"\n+#line 828 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 111:\n-#line 829 \"./parse.y\"\n+#line 830 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 112:\n-#line 831 \"./parse.y\"\n+#line 832 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 113:\n-#line 833 \"./parse.y\"\n+#line 834 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 114:\n-#line 835 \"./parse.y\"\n+#line 836 \"./parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, return type required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 115:\n-#line 843 \"./parse.y\"\n+#line 844 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 116:\n-#line 845 \"./parse.y\"\n+#line 846 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 117:\n-#line 847 \"./parse.y\"\n+#line 848 \"./parse.y\"\n {\n \t\t  EXPR_WFL_LINECOL (wfl_operator) = yyvsp[-1].operator.location;\n \t\t  TREE_PURPOSE (yyvsp[-2].node) = \n@@ -3149,169 +3150,169 @@ case 117:\n \t\t;\n     break;}\n case 118:\n-#line 856 \"./parse.y\"\n+#line 857 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER(method_declarator);;\n     break;}\n case 119:\n-#line 858 \"./parse.y\"\n+#line 859 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 120:\n-#line 863 \"./parse.y\"\n+#line 864 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number = 1;\n \t\t;\n     break;}\n case 121:\n-#line 867 \"./parse.y\"\n+#line 868 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 122:\n-#line 872 \"./parse.y\"\n+#line 873 \"./parse.y\"\n {yyerror (\"Missing formal parameter term\"); RECOVER;;\n     break;}\n case 123:\n-#line 877 \"./parse.y\"\n+#line 878 \"./parse.y\"\n {\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 124:\n-#line 881 \"./parse.y\"\n+#line 882 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"final parameters\"); ;\n     break;}\n case 125:\n-#line 883 \"./parse.y\"\n+#line 884 \"./parse.y\"\n {yyerror (\"Missing identifier\"); RECOVER;;\n     break;}\n case 126:\n-#line 885 \"./parse.y\"\n+#line 886 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-2].value));\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t;\n     break;}\n case 127:\n-#line 892 \"./parse.y\"\n+#line 893 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 128:\n-#line 894 \"./parse.y\"\n+#line 895 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 129:\n-#line 896 \"./parse.y\"\n+#line 897 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 130:\n-#line 901 \"./parse.y\"\n+#line 902 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, yyvsp[0].node); ;\n     break;}\n case 131:\n-#line 903 \"./parse.y\"\n+#line 904 \"./parse.y\"\n { yyval.node = tree_cons (yyvsp[0].node, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 132:\n-#line 905 \"./parse.y\"\n+#line 906 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 135:\n-#line 912 \"./parse.y\"\n+#line 913 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 136:\n-#line 918 \"./parse.y\"\n+#line 919 \"./parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 137:\n-#line 922 \"./parse.y\"\n+#line 923 \"./parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 138:\n-#line 929 \"./parse.y\"\n+#line 930 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[0].value));\n \t\t;\n     break;}\n case 139:\n-#line 937 \"./parse.y\"\n+#line 938 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 140:\n-#line 942 \"./parse.y\"\n+#line 943 \"./parse.y\"\n { complete_method_declaration (yyvsp[0].node); ;\n     break;}\n case 141:\n-#line 947 \"./parse.y\"\n+#line 948 \"./parse.y\"\n { yyval.node = method_header (0, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 142:\n-#line 949 \"./parse.y\"\n+#line 950 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-2].value, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 143:\n-#line 954 \"./parse.y\"\n+#line 955 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 144:\n-#line 956 \"./parse.y\"\n+#line 957 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 145:\n-#line 964 \"./parse.y\"\n+#line 965 \"./parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY (yyvsp[0].node) = empty_stmt_node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 146:\n-#line 969 \"./parse.y\"\n+#line 970 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 147:\n-#line 971 \"./parse.y\"\n+#line 972 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 148:\n-#line 973 \"./parse.y\"\n+#line 974 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 149:\n-#line 979 \"./parse.y\"\n+#line 980 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-3].node, NULL_TREE); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-3].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 150:\n-#line 985 \"./parse.y\"\n+#line 986 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-4].node, yyvsp[-2].node); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-4].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 151:\n-#line 993 \"./parse.y\"\n+#line 994 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 152:\n-#line 995 \"./parse.y\"\n+#line 996 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 153:\n-#line 1000 \"./parse.y\"\n+#line 1001 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (this_identifier_node, \n \t\t\t\t\t     input_filename, 0, 0);\n@@ -3320,7 +3321,7 @@ case 153:\n \t\t;\n     break;}\n case 154:\n-#line 1007 \"./parse.y\"\n+#line 1008 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (super_identifier_node,\n \t\t\t\t\t     input_filename, 0, 0);\n@@ -3329,168 +3330,168 @@ case 154:\n \t\t;\n     break;}\n case 155:\n-#line 1019 \"./parse.y\"\n+#line 1020 \"./parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 156:\n-#line 1021 \"./parse.y\"\n+#line 1022 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 157:\n-#line 1025 \"./parse.y\"\n+#line 1026 \"./parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 158:\n-#line 1027 \"./parse.y\"\n+#line 1028 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 159:\n-#line 1031 \"./parse.y\"\n+#line 1032 \"./parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 160:\n-#line 1033 \"./parse.y\"\n+#line 1034 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 161:\n-#line 1037 \"./parse.y\"\n+#line 1038 \"./parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 162:\n-#line 1039 \"./parse.y\"\n+#line 1040 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 163:\n-#line 1043 \"./parse.y\"\n+#line 1044 \"./parse.y\"\n {yyerror (\"(here)'{' expected\"); RECOVER;;\n     break;}\n case 164:\n-#line 1045 \"./parse.y\"\n+#line 1046 \"./parse.y\"\n {yyerror (\"(there)'{' expected\"); RECOVER;;\n     break;}\n case 165:\n-#line 1050 \"./parse.y\"\n+#line 1051 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 166:\n-#line 1055 \"./parse.y\"\n+#line 1056 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 167:\n-#line 1060 \"./parse.y\"\n+#line 1061 \"./parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 168:\n-#line 1062 \"./parse.y\"\n+#line 1063 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 169:\n-#line 1067 \"./parse.y\"\n+#line 1068 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 170:\n-#line 1069 \"./parse.y\"\n+#line 1070 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 175:\n-#line 1081 \"./parse.y\"\n+#line 1082 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 176:\n-#line 1083 \"./parse.y\"\n+#line 1084 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 178:\n-#line 1092 \"./parse.y\"\n+#line 1093 \"./parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 179:\n-#line 1097 \"./parse.y\"\n+#line 1098 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 180:\n-#line 1103 \"./parse.y\"\n+#line 1104 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 181:\n-#line 1105 \"./parse.y\"\n+#line 1106 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 182:\n-#line 1107 \"./parse.y\"\n+#line 1108 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-3].operator.location, yyvsp[-2].node); ;\n     break;}\n case 183:\n-#line 1112 \"./parse.y\"\n+#line 1113 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), \n \t\t\t\t  yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 184:\n-#line 1117 \"./parse.y\"\n+#line 1118 \"./parse.y\"\n {\n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 185:\n-#line 1121 \"./parse.y\"\n+#line 1122 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 186:\n-#line 1127 \"./parse.y\"\n+#line 1128 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 187:\n-#line 1129 \"./parse.y\"\n+#line 1130 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 188:\n-#line 1134 \"./parse.y\"\n+#line 1135 \"./parse.y\"\n { enter_block (); ;\n     break;}\n case 189:\n-#line 1139 \"./parse.y\"\n+#line 1140 \"./parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  yyval.node = exit_block ();\n \t\t;\n     break;}\n case 193:\n-#line 1153 \"./parse.y\"\n+#line 1154 \"./parse.y\"\n { java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 194:\n-#line 1155 \"./parse.y\"\n+#line 1156 \"./parse.y\"\n { parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 196:\n-#line 1164 \"./parse.y\"\n+#line 1165 \"./parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 197:\n-#line 1166 \"./parse.y\"\n+#line 1167 \"./parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 203:\n-#line 1176 \"./parse.y\"\n+#line 1177 \"./parse.y\"\n { \n \t\t  /* If the for loop is unlabeled, we must return the\n \t\t     block it was defined it. It our last chance to\n@@ -3500,11 +3501,11 @@ case 203:\n \t\t;\n     break;}\n case 220:\n-#line 1209 \"./parse.y\"\n+#line 1210 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 221:\n-#line 1214 \"./parse.y\"\n+#line 1215 \"./parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3514,27 +3515,27 @@ case 221:\n \t\t;\n     break;}\n case 222:\n-#line 1225 \"./parse.y\"\n+#line 1226 \"./parse.y\"\n { \n \t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n \t\t  pop_labeled_block ();\n \t\t  POP_LABELED_BLOCK ();\n \t\t;\n     break;}\n case 223:\n-#line 1231 \"./parse.y\"\n+#line 1232 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 224:\n-#line 1236 \"./parse.y\"\n+#line 1237 \"./parse.y\"\n { \n \t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n \t\t  pop_labeled_block ();\n \t\t  POP_LABELED_BLOCK ();\n \t\t;\n     break;}\n case 225:\n-#line 1247 \"./parse.y\"\n+#line 1248 \"./parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3545,105 +3546,105 @@ case 225:\n \t\t;\n     break;}\n case 226:\n-#line 1256 \"./parse.y\"\n+#line 1257 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 227:\n-#line 1262 \"./parse.y\"\n+#line 1263 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 228:\n-#line 1268 \"./parse.y\"\n+#line 1269 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 229:\n-#line 1274 \"./parse.y\"\n+#line 1275 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 230:\n-#line 1276 \"./parse.y\"\n+#line 1277 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 231:\n-#line 1282 \"./parse.y\"\n+#line 1283 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 232:\n-#line 1284 \"./parse.y\"\n+#line 1285 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 233:\n-#line 1290 \"./parse.y\"\n+#line 1291 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 234:\n-#line 1292 \"./parse.y\"\n+#line 1293 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 235:\n-#line 1294 \"./parse.y\"\n+#line 1295 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 236:\n-#line 1296 \"./parse.y\"\n+#line 1297 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 237:\n-#line 1298 \"./parse.y\"\n+#line 1299 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 245:\n-#line 1313 \"./parse.y\"\n+#line 1314 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 246:\n-#line 1315 \"./parse.y\"\n+#line 1316 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 247:\n-#line 1317 \"./parse.y\"\n+#line 1318 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 248:\n-#line 1319 \"./parse.y\"\n+#line 1320 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 249:\n-#line 1324 \"./parse.y\"\n+#line 1325 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 250:\n-#line 1329 \"./parse.y\"\n+#line 1330 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 251:\n-#line 1334 \"./parse.y\"\n+#line 1335 \"./parse.y\"\n {\n \t\t  enter_block ();\n \t\t;\n     break;}\n case 252:\n-#line 1338 \"./parse.y\"\n+#line 1339 \"./parse.y\"\n { \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n \t\t     I.e. make the last statment also have its own\n@@ -3654,112 +3655,112 @@ case 252:\n \t\t;\n     break;}\n case 253:\n-#line 1350 \"./parse.y\"\n+#line 1351 \"./parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 254:\n-#line 1355 \"./parse.y\"\n+#line 1356 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 255:\n-#line 1357 \"./parse.y\"\n+#line 1358 \"./parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 256:\n-#line 1359 \"./parse.y\"\n+#line 1360 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 257:\n-#line 1367 \"./parse.y\"\n+#line 1368 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 258:\n-#line 1369 \"./parse.y\"\n+#line 1370 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 259:\n-#line 1371 \"./parse.y\"\n+#line 1372 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 260:\n-#line 1373 \"./parse.y\"\n+#line 1374 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 266:\n-#line 1392 \"./parse.y\"\n+#line 1393 \"./parse.y\"\n { \n \t\t  tree lab = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-2].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 267:\n-#line 1398 \"./parse.y\"\n+#line 1399 \"./parse.y\"\n { \n \t\t  tree lab = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-1].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 268:\n-#line 1404 \"./parse.y\"\n+#line 1405 \"./parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 269:\n-#line 1406 \"./parse.y\"\n+#line 1407 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 270:\n-#line 1408 \"./parse.y\"\n+#line 1409 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 271:\n-#line 1413 \"./parse.y\"\n+#line 1414 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 272:\n-#line 1421 \"./parse.y\"\n+#line 1422 \"./parse.y\"\n { yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 273:\n-#line 1423 \"./parse.y\"\n+#line 1424 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 274:\n-#line 1425 \"./parse.y\"\n+#line 1426 \"./parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 275:\n-#line 1427 \"./parse.y\"\n+#line 1428 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 276:\n-#line 1432 \"./parse.y\"\n+#line 1433 \"./parse.y\"\n { yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 277:\n-#line 1437 \"./parse.y\"\n+#line 1438 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 278:\n-#line 1446 \"./parse.y\"\n+#line 1447 \"./parse.y\"\n { yyval.node = complete_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 279:\n-#line 1451 \"./parse.y\"\n+#line 1452 \"./parse.y\"\n { yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 280:\n-#line 1453 \"./parse.y\"\n+#line 1454 \"./parse.y\"\n { \n \t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3768,23 +3769,23 @@ case 280:\n \t\t;\n     break;}\n case 281:\n-#line 1460 \"./parse.y\"\n+#line 1461 \"./parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 282:\n-#line 1462 \"./parse.y\"\n+#line 1463 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 283:\n-#line 1464 \"./parse.y\"\n+#line 1465 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 284:\n-#line 1469 \"./parse.y\"\n+#line 1470 \"./parse.y\"\n { yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 285:\n-#line 1471 \"./parse.y\"\n+#line 1472 \"./parse.y\"\n { \n \t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3793,23 +3794,23 @@ case 285:\n \t\t;\n     break;}\n case 286:\n-#line 1481 \"./parse.y\"\n+#line 1482 \"./parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 287:\n-#line 1487 \"./parse.y\"\n+#line 1488 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 288:\n-#line 1489 \"./parse.y\"\n+#line 1490 \"./parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 289:\n-#line 1494 \"./parse.y\"\n+#line 1495 \"./parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -3822,176 +3823,176 @@ case 289:\n \t\t;\n     break;}\n case 290:\n-#line 1506 \"./parse.y\"\n+#line 1507 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 291:\n-#line 1508 \"./parse.y\"\n+#line 1509 \"./parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 292:\n-#line 1514 \"./parse.y\"\n+#line 1515 \"./parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 293:\n-#line 1520 \"./parse.y\"\n+#line 1521 \"./parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 294:\n-#line 1524 \"./parse.y\"\n+#line 1525 \"./parse.y\"\n {yyval.node = empty_stmt_node;;\n     break;}\n case 295:\n-#line 1526 \"./parse.y\"\n+#line 1527 \"./parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 296:\n-#line 1531 \"./parse.y\"\n+#line 1532 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 297:\n-#line 1533 \"./parse.y\"\n+#line 1534 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 298:\n-#line 1535 \"./parse.y\"\n+#line 1536 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 299:\n-#line 1540 \"./parse.y\"\n+#line 1541 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 300:\n-#line 1542 \"./parse.y\"\n+#line 1543 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 301:\n-#line 1544 \"./parse.y\"\n+#line 1545 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 302:\n-#line 1546 \"./parse.y\"\n+#line 1547 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 303:\n-#line 1551 \"./parse.y\"\n+#line 1552 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 304:\n-#line 1553 \"./parse.y\"\n+#line 1554 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 305:\n-#line 1555 \"./parse.y\"\n+#line 1556 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 306:\n-#line 1557 \"./parse.y\"\n+#line 1558 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 307:\n-#line 1562 \"./parse.y\"\n+#line 1563 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 308:\n-#line 1564 \"./parse.y\"\n+#line 1565 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 309:\n-#line 1566 \"./parse.y\"\n+#line 1567 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 310:\n-#line 1568 \"./parse.y\"\n+#line 1569 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 311:\n-#line 1573 \"./parse.y\"\n+#line 1574 \"./parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 312:\n-#line 1578 \"./parse.y\"\n+#line 1579 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 313:\n-#line 1580 \"./parse.y\"\n+#line 1581 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 314:\n-#line 1585 \"./parse.y\"\n+#line 1586 \"./parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 315:\n-#line 1591 \"./parse.y\"\n+#line 1592 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 316:\n-#line 1593 \"./parse.y\"\n+#line 1594 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 317:\n-#line 1595 \"./parse.y\"\n+#line 1596 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 318:\n-#line 1597 \"./parse.y\"\n+#line 1598 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 319:\n-#line 1602 \"./parse.y\"\n+#line 1603 \"./parse.y\"\n {\n \t\t  if ((1 << yyvsp[0].value) != ACC_SYNCHRONIZED)\n \t\t    fatal (\"synchronized was '%d' - yyparse\", (1 << yyvsp[0].value));\n \t\t;\n     break;}\n case 320:\n-#line 1610 \"./parse.y\"\n+#line 1611 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 321:\n-#line 1612 \"./parse.y\"\n+#line 1613 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 322:\n-#line 1614 \"./parse.y\"\n+#line 1615 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 323:\n-#line 1616 \"./parse.y\"\n+#line 1617 \"./parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 325:\n-#line 1622 \"./parse.y\"\n+#line 1623 \"./parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 326:\n-#line 1630 \"./parse.y\"\n+#line 1631 \"./parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 327:\n-#line 1638 \"./parse.y\"\n+#line 1639 \"./parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -4009,187 +4010,187 @@ case 327:\n \t\t;\n     break;}\n case 328:\n-#line 1654 \"./parse.y\"\n+#line 1655 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 329:\n-#line 1656 \"./parse.y\"\n+#line 1657 \"./parse.y\"\n {yyerror (\"Missing term or ')' expected\"); DRECOVER (2);;\n     break;}\n case 330:\n-#line 1658 \"./parse.y\"\n+#line 1659 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER (1);;\n     break;}\n case 331:\n-#line 1663 \"./parse.y\"\n+#line 1664 \"./parse.y\"\n { \n \t\t  yyval.node = build (FINALLY_EXPR, NULL_TREE,\n \t\t\t      create_label_decl (generate_name ()), yyvsp[0].node);\n \t\t;\n     break;}\n case 332:\n-#line 1668 \"./parse.y\"\n+#line 1669 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 336:\n-#line 1680 \"./parse.y\"\n+#line 1681 \"./parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 337:\n-#line 1682 \"./parse.y\"\n+#line 1683 \"./parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 342:\n-#line 1691 \"./parse.y\"\n+#line 1692 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"named class literals\"); ;\n     break;}\n case 343:\n-#line 1693 \"./parse.y\"\n+#line 1694 \"./parse.y\"\n { yyval.node = build_class_ref (yyvsp[-2].node); ;\n     break;}\n case 344:\n-#line 1695 \"./parse.y\"\n+#line 1696 \"./parse.y\"\n { yyval.node = build_class_ref (void_type_node); ;\n     break;}\n case 345:\n-#line 1700 \"./parse.y\"\n+#line 1701 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 346:\n-#line 1702 \"./parse.y\"\n+#line 1703 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 347:\n-#line 1704 \"./parse.y\"\n+#line 1705 \"./parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 348:\n-#line 1706 \"./parse.y\"\n+#line 1707 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 349:\n-#line 1708 \"./parse.y\"\n+#line 1709 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 350:\n-#line 1713 \"./parse.y\"\n+#line 1714 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 351:\n-#line 1715 \"./parse.y\"\n+#line 1716 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 352:\n-#line 1720 \"./parse.y\"\n+#line 1721 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 353:\n-#line 1722 \"./parse.y\"\n+#line 1723 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 358:\n-#line 1731 \"./parse.y\"\n+#line 1732 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 359:\n-#line 1733 \"./parse.y\"\n+#line 1734 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 360:\n-#line 1735 \"./parse.y\"\n+#line 1736 \"./parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 361:\n-#line 1737 \"./parse.y\"\n+#line 1738 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 362:\n-#line 1739 \"./parse.y\"\n+#line 1740 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 363:\n-#line 1741 \"./parse.y\"\n+#line 1742 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 366:\n-#line 1751 \"./parse.y\"\n+#line 1752 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 367:\n-#line 1756 \"./parse.y\"\n+#line 1757 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 368:\n-#line 1761 \"./parse.y\"\n+#line 1762 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 369:\n-#line 1766 \"./parse.y\"\n+#line 1767 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 370:\n-#line 1768 \"./parse.y\"\n+#line 1769 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 371:\n-#line 1770 \"./parse.y\"\n+#line 1771 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 372:\n-#line 1772 \"./parse.y\"\n+#line 1773 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 373:\n-#line 1776 \"./parse.y\"\n+#line 1777 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 374:\n-#line 1778 \"./parse.y\"\n+#line 1779 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 375:\n-#line 1780 \"./parse.y\"\n+#line 1781 \"./parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 376:\n-#line 1782 \"./parse.y\"\n+#line 1783 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 377:\n-#line 1787 \"./parse.y\"\n+#line 1788 \"./parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 378:\n-#line 1789 \"./parse.y\"\n+#line 1790 \"./parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 379:\n-#line 1794 \"./parse.y\"\n+#line 1795 \"./parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 380:\n-#line 1799 \"./parse.y\"\n+#line 1800 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 381:\n-#line 1801 \"./parse.y\"\n+#line 1802 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 382:\n-#line 1810 \"./parse.y\"\n+#line 1811 \"./parse.y\"\n { \n \t\t  int allocate = 0;\n \t\t  /* If not initialized, allocate memory for the osb\n@@ -4217,19 +4218,19 @@ case 382:\n \t\t;\n     break;}\n case 383:\n-#line 1836 \"./parse.y\"\n+#line 1837 \"./parse.y\"\n { CURRENT_OSB (ctxp)++; ;\n     break;}\n case 384:\n-#line 1838 \"./parse.y\"\n+#line 1839 \"./parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 385:\n-#line 1843 \"./parse.y\"\n+#line 1844 \"./parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 386:\n-#line 1847 \"./parse.y\"\n+#line 1848 \"./parse.y\"\n {\n \t\t  tree super_wfl = \n \t\t    build_wfl_node (super_identifier_node, \n@@ -4239,19 +4240,19 @@ case 386:\n \t\t;\n     break;}\n case 387:\n-#line 1855 \"./parse.y\"\n+#line 1856 \"./parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 388:\n-#line 1860 \"./parse.y\"\n+#line 1861 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 389:\n-#line 1862 \"./parse.y\"\n+#line 1863 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 390:\n-#line 1864 \"./parse.y\"\n+#line 1865 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-4].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4264,7 +4265,7 @@ case 390:\n \t\t;\n     break;}\n case 391:\n-#line 1875 \"./parse.y\"\n+#line 1876 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-5].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4277,121 +4278,121 @@ case 391:\n \t\t;\n     break;}\n case 392:\n-#line 1886 \"./parse.y\"\n+#line 1887 \"./parse.y\"\n { \n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-2].node, NULL_TREE, yyvsp[-4].operator.location, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 393:\n-#line 1891 \"./parse.y\"\n+#line 1892 \"./parse.y\"\n {\n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-3].node, yyvsp[-1].node, yyvsp[-5].operator.location, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 394:\n-#line 1900 \"./parse.y\"\n+#line 1901 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 395:\n-#line 1902 \"./parse.y\"\n+#line 1903 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 396:\n-#line 1907 \"./parse.y\"\n+#line 1908 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 397:\n-#line 1909 \"./parse.y\"\n+#line 1910 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 398:\n-#line 1911 \"./parse.y\"\n+#line 1912 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 399:\n-#line 1916 \"./parse.y\"\n+#line 1917 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 400:\n-#line 1921 \"./parse.y\"\n+#line 1922 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 401:\n-#line 1926 \"./parse.y\"\n+#line 1927 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 406:\n-#line 1941 \"./parse.y\"\n+#line 1942 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 407:\n-#line 1946 \"./parse.y\"\n+#line 1947 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 410:\n-#line 1953 \"./parse.y\"\n+#line 1954 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 411:\n-#line 1955 \"./parse.y\"\n+#line 1956 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 413:\n-#line 1958 \"./parse.y\"\n+#line 1959 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 414:\n-#line 1960 \"./parse.y\"\n+#line 1961 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 415:\n-#line 1965 \"./parse.y\"\n+#line 1966 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 416:\n-#line 1967 \"./parse.y\"\n+#line 1968 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 417:\n-#line 1972 \"./parse.y\"\n+#line 1973 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 418:\n-#line 1974 \"./parse.y\"\n+#line 1975 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 420:\n-#line 1980 \"./parse.y\"\n+#line 1981 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 421:\n-#line 1982 \"./parse.y\"\n+#line 1983 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 423:\n-#line 1985 \"./parse.y\"\n+#line 1986 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 424:\n-#line 1987 \"./parse.y\"\n+#line 1988 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 425:\n-#line 1992 \"./parse.y\"\n+#line 1993 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4401,15 +4402,15 @@ case 425:\n \t\t;\n     break;}\n case 426:\n-#line 2000 \"./parse.y\"\n+#line 2001 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 427:\n-#line 2002 \"./parse.y\"\n+#line 2003 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 428:\n-#line 2004 \"./parse.y\"\n+#line 2005 \"./parse.y\"\n { \n \t\t  char *ptr;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4424,275 +4425,275 @@ case 428:\n \t\t;\n     break;}\n case 429:\n-#line 2017 \"./parse.y\"\n+#line 2018 \"./parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 430:\n-#line 2019 \"./parse.y\"\n+#line 2020 \"./parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 431:\n-#line 2025 \"./parse.y\"\n+#line 2026 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 432:\n-#line 2027 \"./parse.y\"\n+#line 2028 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 433:\n-#line 2029 \"./parse.y\"\n+#line 2030 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 435:\n-#line 2035 \"./parse.y\"\n+#line 2036 \"./parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 436:\n-#line 2040 \"./parse.y\"\n+#line 2041 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 437:\n-#line 2045 \"./parse.y\"\n+#line 2046 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 438:\n-#line 2050 \"./parse.y\"\n+#line 2051 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 439:\n-#line 2052 \"./parse.y\"\n+#line 2053 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 440:\n-#line 2054 \"./parse.y\"\n+#line 2055 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 442:\n-#line 2060 \"./parse.y\"\n+#line 2061 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 443:\n-#line 2065 \"./parse.y\"\n+#line 2066 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 444:\n-#line 2070 \"./parse.y\"\n+#line 2071 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 445:\n-#line 2072 \"./parse.y\"\n+#line 2073 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 447:\n-#line 2078 \"./parse.y\"\n+#line 2079 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 448:\n-#line 2083 \"./parse.y\"\n+#line 2084 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 449:\n-#line 2088 \"./parse.y\"\n+#line 2089 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 450:\n-#line 2093 \"./parse.y\"\n+#line 2094 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 451:\n-#line 2095 \"./parse.y\"\n+#line 2096 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 452:\n-#line 2097 \"./parse.y\"\n+#line 2098 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 454:\n-#line 2103 \"./parse.y\"\n+#line 2104 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 455:\n-#line 2108 \"./parse.y\"\n+#line 2109 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 456:\n-#line 2113 \"./parse.y\"\n+#line 2114 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 457:\n-#line 2118 \"./parse.y\"\n+#line 2119 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 458:\n-#line 2123 \"./parse.y\"\n+#line 2124 \"./parse.y\"\n { yyval.node = build_binop (INSTANCEOF_EXPR, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 459:\n-#line 2125 \"./parse.y\"\n+#line 2126 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 460:\n-#line 2127 \"./parse.y\"\n+#line 2128 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 461:\n-#line 2129 \"./parse.y\"\n+#line 2130 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 462:\n-#line 2131 \"./parse.y\"\n+#line 2132 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 463:\n-#line 2133 \"./parse.y\"\n+#line 2134 \"./parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 465:\n-#line 2139 \"./parse.y\"\n+#line 2140 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 466:\n-#line 2144 \"./parse.y\"\n+#line 2145 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 467:\n-#line 2149 \"./parse.y\"\n+#line 2150 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 468:\n-#line 2151 \"./parse.y\"\n+#line 2152 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 470:\n-#line 2157 \"./parse.y\"\n+#line 2158 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 471:\n-#line 2162 \"./parse.y\"\n+#line 2163 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 473:\n-#line 2168 \"./parse.y\"\n+#line 2169 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 474:\n-#line 2173 \"./parse.y\"\n+#line 2174 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 476:\n-#line 2179 \"./parse.y\"\n+#line 2180 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 477:\n-#line 2184 \"./parse.y\"\n+#line 2185 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 479:\n-#line 2190 \"./parse.y\"\n+#line 2191 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 480:\n-#line 2195 \"./parse.y\"\n+#line 2196 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 482:\n-#line 2201 \"./parse.y\"\n+#line 2202 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 483:\n-#line 2206 \"./parse.y\"\n+#line 2207 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 485:\n-#line 2212 \"./parse.y\"\n+#line 2213 \"./parse.y\"\n {\n \t\t  yyval.node = build (CONDITIONAL_EXPR, NULL_TREE, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-3].operator.location;\n \t\t;\n     break;}\n case 486:\n-#line 2217 \"./parse.y\"\n+#line 2218 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 487:\n-#line 2223 \"./parse.y\"\n+#line 2224 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 488:\n-#line 2225 \"./parse.y\"\n+#line 2226 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 491:\n-#line 2235 \"./parse.y\"\n+#line 2236 \"./parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 492:\n-#line 2237 \"./parse.y\"\n+#line 2238 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -4701,7 +4702,7 @@ case 492:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/cygnus/gnupro-98r2/share/bison.simple\"\n+#line 498 \"/usr/local/gnu/share/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -4897,7 +4898,7 @@ case 492:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2263 \"./parse.y\"\n+#line 2264 \"./parse.y\"\n \n \f\n \n@@ -5085,7 +5086,7 @@ yyerror (msg)\n static void\n issue_warning_error_from_context (cl, msg, ap)\n      tree cl;\n-     char *msg;\n+     const char *msg;\n      va_list ap;\n {\n   char *saved, *saved_input_filename;\n@@ -5113,18 +5114,18 @@ issue_warning_error_from_context (cl, msg, ap)\n /* Issue an error message at a current source line CL */\n \n void\n-parse_error_context VPROTO ((tree cl, char *msg, ...))\n+parse_error_context VPROTO ((tree cl, const char *msg, ...))\n {\n-#ifndef __STDC__\n+#ifndef ANSI_PROTOTYPES\n   tree cl;\n-  char *msg;\n+  const char *msg;\n #endif\n   va_list ap;\n \n   VA_START (ap, msg);\n-#ifndef __STDC__\n+#ifndef ANSI_PROTOTYPES\n   cl = va_arg (ap, tree);\n-  msg = va_arg (ap, char *);\n+  msg = va_arg (ap, const char *);\n #endif\n   issue_warning_error_from_context (cl, msg, ap);\n   va_end (ap);\n@@ -5133,18 +5134,18 @@ parse_error_context VPROTO ((tree cl, char *msg, ...))\n /* Issue a warning at a current source line CL */\n \n static void\n-parse_warning_context VPROTO ((tree cl, char *msg, ...))\n+parse_warning_context VPROTO ((tree cl, const char *msg, ...))\n {\n-#ifndef __STDC__\n+#ifndef ANSI_PROTOTYPES\n   tree cl;\n-  char *msg;\n+  const char *msg;\n #endif\n   va_list ap;\n \n   VA_START (ap, msg);\n-#ifndef __STDC__\n+#ifndef ANSI_PROTOTYPES\n   cl = va_arg (ap, tree);\n-  msg = va_arg (ap, char *);\n+  msg = va_arg (ap, const char *);\n #endif\n \n   force_error = do_warning = 1;\n@@ -11612,7 +11613,7 @@ patch_binop (node, wfl_op1, wfl_op2)\n \t{\n           tree utype = unsigned_type (prom_type);\n           op1 = convert (utype, op1);\n-          TREE_SET_CODE (node, RSHIFT_EXPR);\n+\t  TREE_SET_CODE (node, RSHIFT_EXPR);\n           TREE_OPERAND (node, 0) = op1;\n           TREE_OPERAND (node, 1) = op2;\n           TREE_TYPE (node) = utype;"}, {"sha": "73c56b1de74969cd9b1800e23e4fe16e5fa5d185", "filename": "gcc/java/parse.y", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -86,8 +86,9 @@ static tree lookup_java_method2 PROTO ((tree, tree, int));\n static tree method_header PROTO ((int, tree, tree, tree));\n static void fix_method_argument_names PROTO ((tree ,tree));\n static tree method_declarator PROTO ((tree, tree));\n-static void parse_warning_context VPROTO ((tree cl, char *msg, ...));\n-static void issue_warning_error_from_context PROTO ((tree, char *msg, va_list));\n+static void parse_warning_context PVPROTO ((tree cl, const char *msg, ...))\n+  ATTRIBUTE_PRINTF_2;\n+static void issue_warning_error_from_context PROTO ((tree, const char *msg, va_list));\n static tree parse_jdk1_1_error PROTO ((char *));\n static void complete_class_report_errors PROTO ((jdep *));\n static int process_imports PROTO ((void));\n@@ -2447,7 +2448,7 @@ yyerror (msg)\n static void\n issue_warning_error_from_context (cl, msg, ap)\n      tree cl;\n-     char *msg;\n+     const char *msg;\n      va_list ap;\n {\n   char *saved, *saved_input_filename;\n@@ -2475,18 +2476,18 @@ issue_warning_error_from_context (cl, msg, ap)\n /* Issue an error message at a current source line CL */\n \n void\n-parse_error_context VPROTO ((tree cl, char *msg, ...))\n+parse_error_context VPROTO ((tree cl, const char *msg, ...))\n {\n-#ifndef __STDC__\n+#ifndef ANSI_PROTOTYPES\n   tree cl;\n-  char *msg;\n+  const char *msg;\n #endif\n   va_list ap;\n \n   VA_START (ap, msg);\n-#ifndef __STDC__\n+#ifndef ANSI_PROTOTYPES\n   cl = va_arg (ap, tree);\n-  msg = va_arg (ap, char *);\n+  msg = va_arg (ap, const char *);\n #endif\n   issue_warning_error_from_context (cl, msg, ap);\n   va_end (ap);\n@@ -2495,18 +2496,18 @@ parse_error_context VPROTO ((tree cl, char *msg, ...))\n /* Issue a warning at a current source line CL */\n \n static void\n-parse_warning_context VPROTO ((tree cl, char *msg, ...))\n+parse_warning_context VPROTO ((tree cl, const char *msg, ...))\n {\n-#ifndef __STDC__\n+#ifndef ANSI_PROTOTYPES\n   tree cl;\n-  char *msg;\n+  const char *msg;\n #endif\n   va_list ap;\n \n   VA_START (ap, msg);\n-#ifndef __STDC__\n+#ifndef ANSI_PROTOTYPES\n   cl = va_arg (ap, tree);\n-  msg = va_arg (ap, char *);\n+  msg = va_arg (ap, const char *);\n #endif\n \n   force_error = do_warning = 1;"}, {"sha": "18ee3748483891f9b2b894c206d51fb5a2501542", "filename": "gcc/java/typeck.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Ftypeck.c?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -151,8 +151,8 @@ convert_to_boolean (type, expr)\n \n void\n incomplete_type_error (value, type)\n-     tree value;\n-     tree type;\n+  tree value ATTRIBUTE_UNUSED;\n+  tree type ATTRIBUTE_UNUSED;\n {\n   error (\"internal error - use of undefined type\");\n }\n@@ -464,7 +464,7 @@ parse_signature_type (ptr, limit)\n     case 'Z':  (*ptr)++;  return boolean_type_node;\n     case 'V':  (*ptr)++;  return void_type_node;\n     case '[':\n-      for ((*ptr)++; (*ptr) < limit && isdigit (**ptr); ) (*ptr)++;\n+      for ((*ptr)++; (*ptr) < limit && ISDIGIT (**ptr); ) (*ptr)++;\n       type = parse_signature_type (ptr, limit);\n       type = build_java_array_type (type, -1); \n       break;"}, {"sha": "dfbddb2a69b0f72b974371193c234191f57db0bf", "filename": "gcc/java/verify.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fverify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fverify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fverify.c?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -61,7 +61,7 @@ push_pending_label (target_label)\n    Merge the type state etc.\n    Return NULL on sucess, or an error message on failure. */\n \n-static char *\n+static const char *\n check_pending_block (target_label)\n      tree target_label;\n {\n@@ -332,7 +332,7 @@ verify_jvm_instructions (jcf, byte_ops, length)\n   int PC;\n   int oldpc; /* PC of start of instruction. */\n   int prevpc;  /* If >= 0, PC of previous instruction. */\n-  char *message;\n+  const char *message;\n   int i;\n   register unsigned char *p;\n   struct eh_range *prev_eh_ranges = NULL_EH_RANGE;\n@@ -724,7 +724,6 @@ verify_jvm_instructions (jcf, byte_ops, length)\n \t    int index = IMMEDIATE_u2;\n \t    tree self_type = get_class_constant\n \t      (jcf, COMPONENT_REF_CLASS_INDEX (&current_jcf->cpool, index));\n-\t    tree field_name = COMPONENT_REF_NAME (&current_jcf->cpool, index);\n \t    tree field_signature = COMPONENT_REF_SIGNATURE (&current_jcf->cpool, index);\n \t    tree field_type = get_type_from_signature (field_signature);\n \t    if (is_putting)\n@@ -963,7 +962,7 @@ verify_jvm_instructions (jcf, byte_ops, length)\n \n \tcase OPCODE_tableswitch:\n \t  {\n-\t    jint default_val, low, high;\n+\t    jint low, high;\n \n \t    pop_type (int_type_node);\n \t    while (PC%4)"}, {"sha": "10cf18dd32d0d9f7f2a4351b6556384dc128e2f1", "filename": "gcc/java/zextract.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fzextract.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fzextract.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fzextract.c?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -25,19 +25,14 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n /* Written by Per Bothner <bothner@cygnus.com>, February 1996. */\n \n+#include \"config.h\"\n+#include \"system.h\"\n #include \"zipfile.h\"\n \n-\n /* This stuff is partly based on the 28 August 1994 public release of the\n Info-ZIP group's portable UnZip zipfile-extraction program (and related\n utilities). */\n \n-#include <stdio.h>\n-#ifdef __STDC__\n-#include <stdlib.h>\n-#endif\n-#include <errno.h>       /* used in mapname() */\n-\n /*************/\n /*  Defines  */\n /*************/"}, {"sha": "0d955a30bb958d85a10e50c24715c37f53097b1c", "filename": "gcc/java/zipfile.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fzipfile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36/gcc%2Fjava%2Fzipfile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fzipfile.h?ref=d4476be259bb5b7e4f0eaf7aaf1e031d407b0c36", "patch": "@@ -58,3 +58,4 @@ extern struct ZipFileCache *SeenZipFiles;\n #define ZIPMAGIC 0x504b0304\t\n \n extern ZipFile * opendir_in_zip ();\n+extern int read_zip_archive PROTO ((ZipFile *));"}]}