{"sha": "19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "node_id": "C_kwDOANBUbNoAKDE5ZTdlYWU1YjkxN2Q3ODJkMjBkNTlmM2NiZTNjMzQ0YTA2YWFmYjc", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-09-10T15:18:47Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-25T15:07:19Z"}, "message": "[Ada] Renamed_Or_Alias cleanup\n\ngcc/ada/\n\n\t* einfo-utils.ads, einfo-utils.adb (Alias, Set_Alias,\n\tRenamed_Entity, Set_Renamed_Entity, Renamed_Object,\n\tSet_Renamed_Object): Add assertions that reflect how these are\n\tsupposed to be used and what they are supposed to return.\n\t(Renamed_Entity_Or_Object): New getter.\n\t(Set_Renamed_Object_Of_Possibly_Void): Setter that allows N to\n\tbe E_Void.\n\t* checks.adb (Ensure_Valid): Use Renamed_Entity_Or_Object\n\tbecause this is called for both cases.\n\t* exp_dbug.adb (Debug_Renaming_Declaration): Use\n\tRenamed_Entity_Or_Object because this is called for both cases.\n\tAdd assertions.\n\t* exp_util.adb (Possible_Bit_Aligned_Component): Likewise.\n\t* freeze.adb (Freeze_All_Ent): Likewise.\n\t* sem_ch5.adb (Within_Function): Likewise.\n\t* exp_attr.adb (Calculate_Header_Size): Call Renamed_Entity\n\tinstead of Renamed_Object.\n\t* exp_ch11.adb (Expand_N_Raise_Statement): Likewise.\n\t* repinfo.adb (Find_Declaration): Likewise.\n\t* sem_ch10.adb (Same_Unit, Process_Spec_Clauses,\n\tAnalyze_With_Clause, Install_Parents): Likewise.\n\t* sem_ch12.adb (Build_Local_Package, Needs_Body_Instantiated,\n\tBuild_Subprogram_Renaming, Check_Formal_Package_Instance,\n\tCheck_Generic_Actuals, In_Enclosing_Instance,\n\tDenotes_Formal_Package, Process_Nested_Formal,\n\tCheck_Initialized_Types, Map_Formal_Package_Entities,\n\tRestore_Nested_Formal): Likewise.\n\t* sem_ch6.adb (Report_Conflict): Likewise.\n\t* sem_ch8.adb (Analyze_Exception_Renaming,\n\tAnalyze_Generic_Renaming, Analyze_Package_Renaming,\n\tIs_Primitive_Operator_In_Use, Declared_In_Actual,\n\tNote_Redundant_Use): Likewise.\n\t* sem_warn.adb (Find_Package_Renaming): Likewise.\n\t* sem_elab.adb (Ultimate_Variable): Call Renamed_Object instead\n\tof Renamed_Entity.\n\t* exp_ch6.adb (Get_Function_Id): Call\n\tSet_Renamed_Object_Of_Possibly_Void, because the defining\n\tidentifer is still E_Void at this point.\n\t* sem_util.adb (Function_Call_Or_Allocator_Level): Likewise.\n\tRemove redundant (unreachable) code.\n\t(Is_Object_Renaming, Is_Valid_Renaming): Call Renamed_Object\n\tinstead of Renamed_Entity.\n\t(Get_Fullest_View): Call Renamed_Entity instead of\n\tRenamed_Object.\n\t(Copy_Node_With_Replacement): Call\n\tSet_Renamed_Object_Of_Possibly_Void because the defining entity\n\tis sometimes E_Void.\n\t* exp_ch5.adb (Expand_N_Assignment_Statement): Protect a call to\n\tRenamed_Object with Is_Object to avoid assertion failure.\n\t* einfo.ads: Minor comment fixes.\n\t* inline.adb: Minor comment fixes.\n\t* tbuild.ads: Minor comment fixes.", "tree": {"sha": "9ce172ecdff263011b199d8930143ca5fb481a51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ce172ecdff263011b199d8930143ca5fb481a51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb20000c9f7fbe58e6630196dbfdf0a2ac440c34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb20000c9f7fbe58e6630196dbfdf0a2ac440c34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb20000c9f7fbe58e6630196dbfdf0a2ac440c34"}], "stats": {"total": 375, "additions": 228, "deletions": 147}, "files": [{"sha": "6823f0695ff799f0946910783e2781be622b1959", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -6676,8 +6676,9 @@ package body Checks is\n       elsif not Comes_From_Source (Expr)\n         and then not\n           (Nkind (Expr) = N_Identifier\n-            and then Present (Renamed_Object (Entity (Expr)))\n-            and then Comes_From_Source (Renamed_Object (Entity (Expr))))\n+            and then Present (Renamed_Entity_Or_Object (Entity (Expr)))\n+            and then\n+              Comes_From_Source (Renamed_Entity_Or_Object (Entity (Expr))))\n         and then not Force_Validity_Checks\n         and then (Nkind (Expr) /= N_Unchecked_Type_Conversion\n                     or else Kill_Range_Check (Expr))"}, {"sha": "eb90d181190474efe2049f8a308ab297456ce2f3", "filename": "gcc/ada/einfo-utils.adb", "status": "modified", "additions": 69, "deletions": 6, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Feinfo-utils.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Feinfo-utils.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo-utils.adb?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -43,24 +43,87 @@ package body Einfo.Utils is\n    --  Determine whether abstract state State_Id has particular option denoted\n    --  by the name Option_Nam.\n \n-   -----------------------------------\n-   -- Renamings of Renamed_Or_Alias --\n-   -----------------------------------\n+   -------------------------------------------\n+   -- Aliases/Renamings of Renamed_Or_Alias --\n+   -------------------------------------------\n \n    function Alias (N : Entity_Id) return Node_Id is\n    begin\n-      pragma Assert\n-        (Is_Overloadable (N) or else Ekind (N) = E_Subprogram_Type);\n-      return Renamed_Or_Alias (N);\n+      return Val : constant Node_Id := Renamed_Or_Alias (N) do\n+         pragma Assert\n+           (Is_Overloadable (N) or else Ekind (N) = E_Subprogram_Type);\n+         pragma Assert (Val in N_Entity_Id | N_Empty_Id);\n+      end return;\n    end Alias;\n \n    procedure Set_Alias (N : Entity_Id; Val : Node_Id) is\n    begin\n       pragma Assert\n         (Is_Overloadable (N) or else Ekind (N) = E_Subprogram_Type);\n+      pragma Assert (Val in N_Entity_Id | N_Empty_Id);\n+\n       Set_Renamed_Or_Alias (N, Val);\n    end Set_Alias;\n \n+   function Renamed_Entity (N : Entity_Id) return Node_Id is\n+   begin\n+      return Val : constant Node_Id := Renamed_Or_Alias (N) do\n+         pragma Assert (not Is_Object (N) or else Etype (N) = Any_Type);\n+         pragma Assert (Val in N_Entity_Id | N_Empty_Id);\n+      end return;\n+   end Renamed_Entity;\n+\n+   procedure Set_Renamed_Entity (N : Entity_Id; Val : Node_Id) is\n+   begin\n+      pragma Assert (not Is_Object (N));\n+      pragma Assert (Val in N_Entity_Id);\n+\n+      Set_Renamed_Or_Alias (N, Val);\n+   end Set_Renamed_Entity;\n+\n+   function Renamed_Object (N : Entity_Id) return Node_Id is\n+   begin\n+      return Val : constant Node_Id := Renamed_Or_Alias (N) do\n+         --  Formal_Kind uses the entity, not a name of it. This happens\n+         --  in front-end inlining, which also sets to Empty. Also in\n+         --  Exp_Ch9, where formals are renamed for the benefit of gdb.\n+\n+         if Ekind (N) not in Formal_Kind then\n+            pragma Assert (Is_Object (N));\n+            pragma Assert (Val in N_Subexpr_Id | N_Empty_Id);\n+            null;\n+         end if;\n+      end return;\n+   end Renamed_Object;\n+\n+   procedure Set_Renamed_Object (N : Entity_Id; Val : Node_Id) is\n+   begin\n+      if Ekind (N) not in Formal_Kind then\n+         pragma Assert (Is_Object (N));\n+         pragma Assert (Val in N_Subexpr_Id | N_Empty_Id);\n+         null;\n+      end if;\n+\n+      Set_Renamed_Or_Alias (N, Val);\n+   end Set_Renamed_Object;\n+\n+   function Renamed_Entity_Or_Object (N : Entity_Id) return Node_Id is\n+   begin\n+      if Is_Object (N) then\n+         return Renamed_Object (N);\n+      else\n+         return Renamed_Entity (N);\n+      end if;\n+   end Renamed_Entity_Or_Object;\n+\n+   procedure Set_Renamed_Object_Of_Possibly_Void\n+     (N : Entity_Id; Val : Node_Id)\n+   is\n+   begin\n+      pragma Assert (Val in N_Subexpr_Id);\n+      Set_Renamed_Or_Alias (N, Val);\n+   end Set_Renamed_Object_Of_Possibly_Void;\n+\n    ----------------\n    -- Has_Option --\n    ----------------"}, {"sha": "c82b469d43035746f3b214f957d908de4338acc5", "filename": "gcc/ada/einfo-utils.ads", "status": "modified", "additions": 28, "deletions": 14, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Feinfo-utils.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Feinfo-utils.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo-utils.ads?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -27,32 +27,46 @@ with Einfo.Entities; use Einfo.Entities;\n \n package Einfo.Utils is\n \n-   -----------------------------------\n-   -- Renamings of Renamed_Or_Alias --\n-   -----------------------------------\n+   -------------------------------------------\n+   -- Aliases/Renamings of Renamed_Or_Alias --\n+   -------------------------------------------\n \n    --  See the comment in einfo.ads, \"Renaming and Aliasing\", which is somewhat\n-   --  incorrect. In fact, the compiler uses Alias, Renamed_Entity, and\n-   --  Renamed_Object more-or-less interchangeably, so we rename them here.\n-   --  Alias isn't really renamed, because we want an assertion in the body.\n+   --  incorrect. Each of the following calls [Set_]Renamed_Or_Alias. Alias and\n+   --  Renamed_Entity are fields of nonobject Entity_Ids, and the value of the\n+   --  field is Entity_Id. Alias is only for callable entities and subprogram\n+   --  types. We sometimes call Set_Renamed_Entity and then expect Alias to\n+   --  return the value set. Renamed_Object is a field of Entity_Ids that are\n+   --  objects, and it returns an expression, because you can rename things\n+   --  like \"X.all(J).Y\". Renamings of entries and subprograms can also be\n+   --  expressions, but those use different mechanisms; the fields here are not\n+   --  used.\n \n    function Alias (N : Entity_Id) return Node_Id;\n    procedure Set_Alias (N : Entity_Id; Val : Node_Id);\n-   function Renamed_Entity\n-     (N : Entity_Id) return Node_Id renames Renamed_Or_Alias;\n-   procedure Set_Renamed_Entity\n-     (N : Entity_Id; Val : Node_Id) renames Set_Renamed_Or_Alias;\n-   function Renamed_Object\n-     (N : Entity_Id) return Node_Id renames Renamed_Or_Alias;\n-   procedure Set_Renamed_Object\n-     (N : Entity_Id; Val : Node_Id) renames Set_Renamed_Or_Alias;\n+   function Renamed_Entity (N : Entity_Id) return Node_Id;\n+   procedure Set_Renamed_Entity (N : Entity_Id; Val : Node_Id);\n+   function Renamed_Object (N : Entity_Id) return Node_Id;\n+   procedure Set_Renamed_Object (N : Entity_Id; Val : Node_Id);\n+\n+   function Renamed_Entity_Or_Object (N : Entity_Id) return Node_Id;\n+   --  This getter is used when we don't know statically whether we want to\n+   --  call Renamed_Entity or Renamed_Object.\n+\n+   procedure Set_Renamed_Object_Of_Possibly_Void\n+     (N : Entity_Id; Val : Node_Id);\n+   --  Set_Renamed_Object doesn't allow Void; this is used in the rare cases\n+   --  where we set the field of an entity that might be Void. It might be a\n+   --  good idea to get rid of calls to this.\n \n    pragma Inline (Alias);\n    pragma Inline (Set_Alias);\n    pragma Inline (Renamed_Entity);\n    pragma Inline (Set_Renamed_Entity);\n    pragma Inline (Renamed_Object);\n    pragma Inline (Set_Renamed_Object);\n+   pragma Inline (Renamed_Entity_Or_Object);\n+   pragma Inline (Set_Renamed_Object_Of_Possibly_Void);\n \n    -------------------\n    -- Type Synonyms --"}, {"sha": "51cb0144ebfa250597730e8ed9589edeecccf6b5", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -4762,7 +4762,7 @@ package Einfo is\n \n --  Several entity attributes relate to renaming constructs, and to the use of\n --  different names to refer to the same entity. The following is a summary of\n---  these constructs and their prefered uses.\n+--  these constructs and their preferred uses.\n \n --  There are three related attributes:\n \n@@ -4775,7 +4775,7 @@ package Einfo is\n \n --  a) Renamed_Entity applies to entities in renaming declarations that rename\n --  an entity, so the value of the attribute IS an entity. This applies to\n---  generic renamings, package renamings, exception renamings, and subprograms\n+--  generic renamings, package renamings, exception renamings, and subprogram\n --  renamings that rename a subprogram (rather than an attribute, an entry, a\n --  protected operation, etc).\n \n@@ -4797,9 +4797,9 @@ package Einfo is\n --  in a few cases we need to use a loop to trace a chain of object renamings\n --  where all of them happen to be entities. So:\n \n---    X : integer;\n---    Y : integer renames X;   -- renamed object is the identifier X\n---    Z : integer renames Y;   -- renamed object is the identifier Y\n+--    X : Integer;\n+--    Y : Integer renames X;   -- renamed object is the identifier X\n+--    Z : Integer renames Y;   -- renamed object is the identifier Y\n \n --  The front-end does not store explicitly the fact that Z renames X.\n "}, {"sha": "19d8286a759a13ed00fd3ebf2721ff255b133eda", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -3898,8 +3898,8 @@ package body Exp_Attr is\n          if Ptyp = Standard_Exception_Type then\n             Id_Kind := RTE (RE_Exception_Id);\n \n-            if Present (Renamed_Object (Entity (Pref))) then\n-               Set_Entity (Pref, Renamed_Object (Entity (Pref)));\n+            if Present (Renamed_Entity (Entity (Pref))) then\n+               Set_Entity (Pref, Renamed_Entity (Entity (Pref)));\n             end if;\n \n             Rewrite (N,"}, {"sha": "d27ac6a5c17ceea0b991f4515b337eeeb4f24ab2", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -1667,8 +1667,8 @@ package body Exp_Ch11 is\n             --  If the exception is a renaming, use the exception that it\n             --  renames (which might be a predefined exception, e.g.).\n \n-            if Present (Renamed_Object (Id)) then\n-               Id := Renamed_Object (Id);\n+            if Present (Renamed_Entity (Id)) then\n+               Id := Renamed_Entity (Id);\n             end if;\n \n             --  Build a C-compatible string in case of no exception handlers,"}, {"sha": "47c6b800eb0c73ca7a3a305013c1f9c680936fd5", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -2387,6 +2387,7 @@ package body Exp_Ch5 is\n             Ent := Name (N);\n             while Nkind (Ent) in N_Has_Entity\n               and then Present (Entity (Ent))\n+              and then Is_Object (Entity (Ent))\n               and then Present (Renamed_Object (Entity (Ent)))\n             loop\n                Ent := Renamed_Object (Entity (Ent));"}, {"sha": "6015993fbc59016b262bf2c6bc94dafe315987ed", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -9707,7 +9707,9 @@ package body Exp_Ch6 is\n          --  At this point, Defining_Identifier (Obj_Decl) is no longer equal\n          --  to Obj_Def_Id.\n \n-         Set_Renamed_Object (Defining_Identifier (Obj_Decl), Call_Deref);\n+         pragma Assert (Ekind (Defining_Identifier (Obj_Decl)) = E_Void);\n+         Set_Renamed_Object_Of_Possibly_Void\n+           (Defining_Identifier (Obj_Decl), Call_Deref);\n \n          --  If the original entity comes from source, then mark the new\n          --  entity as needing debug information, even though it's defined"}, {"sha": "19d546e926dbcd7377a7b1dfe0914f8df0f3adef", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -290,6 +290,11 @@ package body Exp_Dbug is\n    --------------------------------\n \n    function Debug_Renaming_Declaration (N : Node_Id) return Node_Id is\n+      pragma Assert\n+        (Nkind (N) in N_Object_Renaming_Declaration\n+                    | N_Package_Renaming_Declaration\n+                    | N_Exception_Renaming_Declaration);\n+\n       Loc : constant Source_Ptr := Sloc (N);\n       Ent : constant Node_Id    := Defining_Entity (N);\n       Nam : constant Node_Id    := Name (N);\n@@ -410,15 +415,15 @@ package body Exp_Dbug is\n                | N_Identifier\n             =>\n                if No (Entity (Ren))\n-                 or else not Present (Renamed_Object (Entity (Ren)))\n+                 or else not Present (Renamed_Entity_Or_Object (Entity (Ren)))\n                then\n                   exit;\n                end if;\n \n                --  This is a renaming of a renaming: traverse until the final\n                --  renaming to see if anything is packed along the way.\n \n-               Ren := Renamed_Object (Entity (Ren));\n+               Ren := Renamed_Entity_Or_Object (Entity (Ren));\n \n             when N_Selected_Component =>\n                declare"}, {"sha": "861442bde354f54dd615edfe4569f7faaffa5f45", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -11257,6 +11257,7 @@ package body Exp_Util is\n \n          when others =>\n             if Is_Entity_Name (N)\n+              and then Is_Object (Entity (N))\n               and then Present (Renamed_Object (Entity (N)))\n             then\n                return"}, {"sha": "50481563e7c5d6ba8bde5e2609dc8802a00da287", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -2337,7 +2337,7 @@ package body Freeze is\n             --  created for entry parameters must be frozen.\n \n             if Ekind (E) = E_Package\n-              and then No (Renamed_Object (E))\n+              and then No (Renamed_Entity (E))\n               and then not Is_Child_Unit (E)\n               and then not Is_Frozen (E)\n             then"}, {"sha": "16a9894606df2dac210080043ebe89549a98a225", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -327,8 +327,8 @@ package body Inline is\n    --    Unreferenced\n \n    procedure Reset_Actual_Mapping_For_Inlined_Call (Subp : Entity_Id);\n-   --  Reset the Renamed_Object flags on the formals of Subp, which can be set\n-   --  by a call to Establish_Actual_Mapping_For_Inlined_Call.\n+   --  Reset the Renamed_Object field to Empty on all formals of Subp, which\n+   --  can be set by a call to Establish_Actual_Mapping_For_Inlined_Call.\n \n    ------------------------------\n    -- Deferred Cleanup Actions --"}, {"sha": "f1ab718baf0bd064923c8ba8ceb2c143f79bc169", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -571,7 +571,7 @@ package body Repinfo is\n                --  as for some Java bindings and for generic instances).\n \n                if Ekind (E) = E_Package then\n-                  if No (Renamed_Object (E)) then\n+                  if No (Renamed_Entity (E)) then\n                      List_Entities (E, Bytes_Big_Endian);\n                   end if;\n "}, {"sha": "6305bdb73719e36b12577ed590fc537a7407812a", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -341,8 +341,8 @@ package body Sem_Ch10 is\n             function Same_Unit (N : Node_Id; P : Entity_Id) return Boolean is\n             begin\n                return Entity (N) = P\n-                 or else (Present (Renamed_Object (P))\n-                           and then Entity (N) = Renamed_Object (P));\n+                 or else (Present (Renamed_Entity (P))\n+                           and then Entity (N) = Renamed_Entity (P));\n             end Same_Unit;\n \n          --  Start of processing for Process_Body_Clauses\n@@ -1102,14 +1102,14 @@ package body Sem_Ch10 is\n                   then\n                      Style_Check := False;\n \n-                     if Present (Renamed_Object (Nam)) then\n+                     if Present (Renamed_Entity (Nam)) then\n                         Un :=\n                           Load_Unit\n                             (Load_Name  =>\n                                Get_Body_Name\n                                  (Get_Unit_Name\n                                    (Unit_Declaration_Node\n-                                     (Renamed_Object (Nam)))),\n+                                     (Renamed_Entity (Nam)))),\n                              Required   => False,\n                              Subunit    => False,\n                              Error_Node => N,\n@@ -2870,7 +2870,7 @@ package body Sem_Ch10 is\n             --  been analyzed.\n \n             Analyze (Parent (Parent (Entity (Pref))));\n-            pragma Assert (Renamed_Object (Entity (Pref)) = Par_Name);\n+            pragma Assert (Renamed_Entity (Entity (Pref)) = Par_Name);\n             Par_Name := Entity (Pref);\n          end if;\n \n@@ -4173,7 +4173,7 @@ package body Sem_Ch10 is\n            (\"parent unit must be package or generic package\", Lib_Unit);\n          raise Unrecoverable_Error;\n \n-      elsif Present (Renamed_Object (P_Name)) then\n+      elsif Present (Renamed_Entity (P_Name)) then\n          Error_Msg_N (\"parent unit cannot be a renaming\", Lib_Unit);\n          raise Unrecoverable_Error;\n "}, {"sha": "d46d65c391429551251129d34c4c22d6313a50f7", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 42, "deletions": 41, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -2935,7 +2935,7 @@ package body Sem_Ch12 is\n \n       --  Check for a formal package that is a package renaming\n \n-      if Present (Renamed_Object (Gen_Unit)) then\n+      if Present (Renamed_Entity (Gen_Unit)) then\n \n          --  Indicate that unit is used, before replacing it with renamed\n          --  entity for use below.\n@@ -2945,7 +2945,7 @@ package body Sem_Ch12 is\n             Generate_Reference  (Gen_Unit, N);\n          end if;\n \n-         Gen_Unit := Renamed_Object (Gen_Unit);\n+         Gen_Unit := Renamed_Entity (Gen_Unit);\n       end if;\n \n       if Ekind (Gen_Unit) /= E_Generic_Package then\n@@ -3117,7 +3117,7 @@ package body Sem_Ch12 is\n          Set_Etype (Renaming_In_Par, Standard_Void_Type);\n          Set_Scope (Renaming_In_Par, Parent_Instance);\n          Set_Parent (Renaming_In_Par, Parent (Formal));\n-         Set_Renamed_Object (Renaming_In_Par, Formal);\n+         Set_Renamed_Entity (Renaming_In_Par, Formal);\n          Append_Entity (Renaming_In_Par, Parent_Instance);\n       end if;\n \n@@ -4287,9 +4287,9 @@ package body Sem_Ch12 is\n          Set_Is_Instantiated (Gen_Unit);\n          Generate_Reference  (Gen_Unit, N);\n \n-         if Present (Renamed_Object (Gen_Unit)) then\n-            Set_Is_Instantiated (Renamed_Object (Gen_Unit));\n-            Generate_Reference  (Renamed_Object (Gen_Unit), N);\n+         if Present (Renamed_Entity (Gen_Unit)) then\n+            Set_Is_Instantiated (Renamed_Entity (Gen_Unit));\n+            Generate_Reference  (Renamed_Entity (Gen_Unit), N);\n          end if;\n       end if;\n \n@@ -4312,10 +4312,10 @@ package body Sem_Ch12 is\n \n       --  If generic is a renaming, get original generic unit\n \n-      if Present (Renamed_Object (Gen_Unit))\n-        and then Ekind (Renamed_Object (Gen_Unit)) = E_Generic_Package\n+      if Present (Renamed_Entity (Gen_Unit))\n+        and then Ekind (Renamed_Entity (Gen_Unit)) = E_Generic_Package\n       then\n-         Gen_Unit := Renamed_Object (Gen_Unit);\n+         Gen_Unit := Renamed_Entity (Gen_Unit);\n       end if;\n \n       --  Verify that there are no circular instantiations\n@@ -5692,10 +5692,10 @@ package body Sem_Ch12 is\n \n          --  If renaming, get original unit\n \n-         if Present (Renamed_Object (Gen_Unit))\n-           and then Is_Generic_Subprogram (Renamed_Object (Gen_Unit))\n+         if Present (Renamed_Entity (Gen_Unit))\n+           and then Is_Generic_Subprogram (Renamed_Entity (Gen_Unit))\n          then\n-            Gen_Unit := Renamed_Object (Gen_Unit);\n+            Gen_Unit := Renamed_Entity (Gen_Unit);\n             Set_Is_Instantiated (Gen_Unit);\n             Generate_Reference  (Gen_Unit, N);\n          end if;\n@@ -6856,9 +6856,9 @@ package body Sem_Ch12 is\n          elsif Ekind (E1) = E_Package then\n             Check_Mismatch\n               (Ekind (E1) /= Ekind (E2)\n-                or else (Present (Renamed_Object (E2))\n-                          and then Renamed_Object (E1) /=\n-                                     Renamed_Object (E2)));\n+                or else (Present (Renamed_Entity (E2))\n+                          and then Renamed_Entity (E1) /=\n+                                     Renamed_Entity (E2)));\n \n          elsif Is_Overloadable (E1) then\n             --  Verify that the actual subprograms match. Note that actuals\n@@ -6929,7 +6929,7 @@ package body Sem_Ch12 is\n       E := First_Entity (P_Id);\n       while Present (E) loop\n          if Ekind (E) = E_Package then\n-            if Renamed_Object (E) = P_Id then\n+            if Renamed_Entity (E) = P_Id then\n                exit;\n \n             elsif Nkind (Parent (E)) /= N_Package_Renaming_Declaration then\n@@ -7128,7 +7128,7 @@ package body Sem_Ch12 is\n             --  formal part are also visible. Otherwise, ignore the entity\n             --  created to validate the actuals.\n \n-            if Renamed_Object (E) = Instance then\n+            if Renamed_Entity (E) = Instance then\n                exit;\n \n             elsif Nkind (Parent (E)) /= N_Package_Renaming_Declaration then\n@@ -7144,10 +7144,10 @@ package body Sem_Ch12 is\n               and then not Is_Generic_Formal (E)\n             then\n                if Box_Present (Parent (Associated_Formal_Package (E))) then\n-                  Check_Generic_Actuals (Renamed_Object (E), True);\n+                  Check_Generic_Actuals (Renamed_Entity (E), True);\n \n                else\n-                  Check_Generic_Actuals (Renamed_Object (E), False);\n+                  Check_Generic_Actuals (Renamed_Entity (E), False);\n                end if;\n \n                Set_Is_Hidden (E, False);\n@@ -7380,9 +7380,9 @@ package body Sem_Ch12 is\n          Inst_Par := Entity (Prefix (Gen_Id));\n \n          if Ekind (Inst_Par) = E_Package\n-           and then Present (Renamed_Object (Inst_Par))\n+           and then Present (Renamed_Entity (Inst_Par))\n          then\n-            Inst_Par := Renamed_Object (Inst_Par);\n+            Inst_Par := Renamed_Entity (Inst_Par);\n          end if;\n \n          if Ekind (Inst_Par) = E_Package then\n@@ -7584,7 +7584,8 @@ package body Sem_Ch12 is\n \n                E := First_Entity (Entity (Prefix (Gen_Id)));\n                while Present (E) loop\n-                  if Present (Renamed_Entity (E))\n+                  if not Is_Object (E)\n+                    and then Present (Renamed_Entity (E))\n                     and then\n                       Renamed_Entity (E) = Renamed_Entity (Entity (Gen_Id))\n                   then\n@@ -7621,8 +7622,8 @@ package body Sem_Ch12 is\n \n             if Is_Generic_Unit (E)\n               and then Nkind (Parent (E)) in N_Generic_Renaming_Declaration\n-              and then Is_Child_Unit (Renamed_Object (E))\n-              and then Is_Generic_Unit (Scope (Renamed_Object (E)))\n+              and then Is_Child_Unit (Renamed_Entity (E))\n+              and then Is_Generic_Unit (Scope (Renamed_Entity (E)))\n               and then Nkind (Name (Parent (E))) = N_Expanded_Name\n             then\n                Rewrite (Gen_Id, New_Copy_Tree (Name (Parent (E))));\n@@ -8691,10 +8692,10 @@ package body Sem_Ch12 is\n             if Ekind (E1) = E_Package\n               and then Nkind (Parent (E1)) = N_Package_Renaming_Declaration\n             then\n-               if Renamed_Object (E1) = Pack then\n+               if Renamed_Entity (E1) = Pack then\n                   return True;\n \n-               elsif E1 = P or else Renamed_Object (E1) = P then\n+               elsif E1 = P or else Renamed_Entity (E1) = P then\n                   return False;\n \n                elsif Is_Actual_Of_Previous_Formal (E1) then\n@@ -8744,10 +8745,10 @@ package body Sem_Ch12 is\n             then\n                null;\n \n-            elsif Renamed_Object (E) = Par then\n+            elsif Renamed_Entity (E) = Par then\n                return False;\n \n-            elsif Renamed_Object (E) = Pack then\n+            elsif Renamed_Entity (E) = Pack then\n                return True;\n \n             elsif Is_Actual_Of_Previous_Formal (E) then\n@@ -10079,7 +10080,7 @@ package body Sem_Ch12 is\n          then\n             --  If this is the renaming for the parent instance, done\n \n-            if Renamed_Object (E) = Par then\n+            if Renamed_Entity (E) = Par then\n                exit;\n \n             --  The visibility of a formal of an enclosing generic is already\n@@ -10089,7 +10090,7 @@ package body Sem_Ch12 is\n                null;\n \n             elsif Present (Associated_Formal_Package (E)) then\n-               Check_Generic_Actuals (Renamed_Object (E), True);\n+               Check_Generic_Actuals (Renamed_Entity (E), True);\n                Set_Is_Hidden (E, False);\n \n                --  Find formal package in generic unit that corresponds to\n@@ -10699,8 +10700,8 @@ package body Sem_Ch12 is\n          --  The actual may be a renamed package, or an outer generic formal\n          --  package whose instantiation is converted into a renaming.\n \n-         if Present (Renamed_Object (Actual_Pack)) then\n-            Actual_Pack := Renamed_Object (Actual_Pack);\n+         if Present (Renamed_Entity (Actual_Pack)) then\n+            Actual_Pack := Renamed_Entity (Actual_Pack);\n          end if;\n \n          if Nkind (Analyzed_Formal) = N_Formal_Package_Declaration then\n@@ -11798,7 +11799,7 @@ package body Sem_Ch12 is\n \n                while Present (Actual) loop\n                   exit when Ekind (Actual) = E_Package\n-                    and then Present (Renamed_Object (Actual));\n+                    and then Present (Renamed_Entity (Actual));\n \n                   if Chars (Actual) = Chars (Formal)\n                     and then not Is_Scalar_Type (Actual)\n@@ -14791,7 +14792,7 @@ package body Sem_Ch12 is\n                   Set_Instance_Of (Base_Type (E1), Base_Type (E2));\n                end if;\n \n-               if Ekind (E1) = E_Package and then No (Renamed_Object (E1)) then\n+               if Ekind (E1) = E_Package and then No (Renamed_Entity (E1)) then\n                   Map_Formal_Package_Entities (E1, E2);\n                end if;\n             end if;\n@@ -15347,11 +15348,11 @@ package body Sem_Ch12 is\n       ---------------------------\n \n       procedure Restore_Nested_Formal (Formal : Entity_Id) is\n+         pragma Assert (Ekind (Formal) = E_Package);\n          Ent : Entity_Id;\n-\n       begin\n-         if Present (Renamed_Object (Formal))\n-           and then Denotes_Formal_Package (Renamed_Object (Formal), True)\n+         if Present (Renamed_Entity (Formal))\n+           and then Denotes_Formal_Package (Renamed_Entity (Formal), True)\n          then\n             return;\n \n@@ -15490,20 +15491,20 @@ package body Sem_Ch12 is\n             --  visible on exit from the instance, and therefore nothing needs\n             --  to be done either, except to keep it accessible.\n \n-            if Is_Package and then Renamed_Object (E) = Pack_Id then\n+            if Is_Package and then Renamed_Entity (E) = Pack_Id then\n                exit;\n \n             elsif Nkind (Parent (E)) /= N_Package_Renaming_Declaration then\n                null;\n \n             elsif\n-              Denotes_Formal_Package (Renamed_Object (E), True, Pack_Id)\n+              Denotes_Formal_Package (Renamed_Entity (E), True, Pack_Id)\n             then\n                Set_Is_Hidden (E, False);\n \n             else\n                declare\n-                  Act_P : constant Entity_Id := Renamed_Object (E);\n+                  Act_P : constant Entity_Id := Renamed_Entity (E);\n                   Id    : Entity_Id;\n \n                begin\n@@ -15512,7 +15513,7 @@ package body Sem_Ch12 is\n                     and then Id /= First_Private_Entity (Act_P)\n                   loop\n                      exit when Ekind (Id) = E_Package\n-                                 and then Renamed_Object (Id) = Act_P;\n+                                 and then Renamed_Entity (Id) = Act_P;\n \n                      Set_Is_Hidden (Id, True);\n                      Set_Is_Potentially_Use_Visible (Id, In_Use (Act_P));"}, {"sha": "e62161abbdbcd0e3ae95d73aedbcd87c7d19702d", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -682,6 +682,7 @@ package body Sem_Ch5 is\n                Ent := Lhs;\n                while Nkind (Ent) in N_Has_Entity\n                  and then Present (Entity (Ent))\n+                 and then Is_Object (Entity (Ent))\n                  and then Present (Renamed_Object (Entity (Ent)))\n                loop\n                   Ent := Renamed_Object (Entity (Ent));"}, {"sha": "c608c77530bac62bdf81aa1b1b754d6db2552866", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -11981,11 +11981,11 @@ package body Sem_Ch6 is\n          --  renaming declaration becomes hidden.\n \n          if Ekind (E) = E_Package\n-           and then Present (Renamed_Object (E))\n-           and then Renamed_Object (E) = Current_Scope\n-           and then Nkind (Parent (Renamed_Object (E))) =\n+           and then Present (Renamed_Entity (E))\n+           and then Renamed_Entity (E) = Current_Scope\n+           and then Nkind (Parent (Renamed_Entity (E))) =\n                                                      N_Package_Specification\n-           and then Present (Generic_Parent (Parent (Renamed_Object (E))))\n+           and then Present (Generic_Parent (Parent (Renamed_Entity (E))))\n          then\n             Set_Is_Hidden (E);\n             Set_Is_Immediately_Visible (E, False);"}, {"sha": "a7b3a16664dc8529b255569742f9ac33e47d1cde", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -576,10 +576,10 @@ package body Sem_Ch8 is\n         and then Present (Entity (Nam))\n         and then Ekind (Entity (Nam)) = E_Exception\n       then\n-         if Present (Renamed_Object (Entity (Nam))) then\n-            Set_Renamed_Object (Id, Renamed_Object (Entity (Nam)));\n+         if Present (Renamed_Entity (Entity (Nam))) then\n+            Set_Renamed_Entity (Id, Renamed_Entity (Entity (Nam)));\n          else\n-            Set_Renamed_Object (Id, Entity (Nam));\n+            Set_Renamed_Entity (Id, Entity (Nam));\n          end if;\n \n          --  The exception renaming declaration may become Ghost if it renames\n@@ -706,10 +706,10 @@ package body Sem_Ch8 is\n          Error_Msg_N (\"invalid generic unit name\", Name (N));\n \n       else\n-         if Present (Renamed_Object (Old_P)) then\n-            Set_Renamed_Object (New_P, Renamed_Object (Old_P));\n+         if Present (Renamed_Entity (Old_P)) then\n+            Set_Renamed_Entity (New_P, Renamed_Entity (Old_P));\n          else\n-            Set_Renamed_Object (New_P, Old_P);\n+            Set_Renamed_Entity (New_P, Old_P);\n          end if;\n \n          --  The generic renaming declaration may become Ghost if it renames a\n@@ -1658,10 +1658,10 @@ package body Sem_Ch8 is\n          Mutate_Ekind (New_P, E_Package);\n          Set_Etype (New_P, Standard_Void_Type);\n \n-         if Present (Renamed_Object (Old_P)) then\n-            Set_Renamed_Object (New_P, Renamed_Object (Old_P));\n+         if Present (Renamed_Entity (Old_P)) then\n+            Set_Renamed_Entity (New_P, Renamed_Entity (Old_P));\n          else\n-            Set_Renamed_Object (New_P, Old_P);\n+            Set_Renamed_Entity (New_P, Old_P);\n          end if;\n \n          --  The package renaming declaration may become Ghost if it renames a\n@@ -5008,9 +5008,9 @@ package body Sem_Ch8 is\n                Next_Entity (Id);\n             end loop;\n \n-            if Present (Renamed_Object (Pack)) then\n-               Set_In_Use (Renamed_Object (Pack), False);\n-               Set_Current_Use_Clause (Renamed_Object (Pack), Empty);\n+            if Present (Renamed_Entity (Pack)) then\n+               Set_In_Use (Renamed_Entity (Pack), False);\n+               Set_Current_Use_Clause (Renamed_Entity (Pack), Empty);\n             end if;\n \n             if Chars (Pack) = Name_System\n@@ -5224,22 +5224,22 @@ package body Sem_Ch8 is\n          ------------------------\n \n          function Declared_In_Actual (Pack : Entity_Id) return Boolean is\n+            pragma Assert (Ekind (Pack) = E_Package);\n             Act : Entity_Id;\n-\n          begin\n             if No (Associated_Formal_Package (Pack)) then\n                return False;\n \n             else\n                Act := First_Entity (Pack);\n                while Present (Act) loop\n-                  if Renamed_Object (Pack) = Scop then\n+                  if Renamed_Entity (Pack) = Scop then\n                      return True;\n \n                   --  Check for end of list of actuals\n \n                   elsif Ekind (Act) = E_Package\n-                    and then Renamed_Object (Act) = Pack\n+                    and then Renamed_Entity (Act) = Pack\n                   then\n                      return False;\n \n@@ -6056,9 +6056,9 @@ package body Sem_Ch8 is\n \n                if Scope (E) = Scope (E2)\n                  and then Ekind (E) = E_Package\n-                 and then Present (Renamed_Object (E))\n-                 and then Is_Generic_Instance (Renamed_Object (E))\n-                 and then In_Open_Scopes (Renamed_Object (E))\n+                 and then Present (Renamed_Entity (E))\n+                 and then Is_Generic_Instance (Renamed_Entity (E))\n+                 and then In_Open_Scopes (Renamed_Entity (E))\n                  and then Comes_From_Source (N)\n                then\n                   Set_Is_Immediately_Visible (E, False);\n@@ -6389,9 +6389,9 @@ package body Sem_Ch8 is\n       --  original package.\n \n       if Ekind (P_Name) = E_Package\n-        and then Present (Renamed_Object (P_Name))\n+        and then Present (Renamed_Entity (P_Name))\n       then\n-         P_Name := Renamed_Object (P_Name);\n+         P_Name := Renamed_Entity (P_Name);\n \n          if From_Limited_With (P_Name)\n            and then not Unit_Is_Visible (Cunit (Get_Source_Unit (P_Name)))\n@@ -7196,9 +7196,9 @@ package body Sem_Ch8 is\n                Scop := Entity (Prefix (Nam));\n \n                if Ekind (Scop) = E_Package\n-                 and then Present (Renamed_Object (Scop))\n+                 and then Present (Renamed_Entity (Scop))\n                then\n-                  Scop := Renamed_Object (Scop);\n+                  Scop := Renamed_Entity (Scop);\n                end if;\n \n                --  Operator is visible if prefix of expanded name denotes\n@@ -9882,8 +9882,8 @@ package body Sem_Ch8 is\n          --  When a renaming exists we must check it for redundancy. The\n          --  original package would have already been seen at this point.\n \n-         if Present (Renamed_Object (Entity (Pack_Name))) then\n-            P := Renamed_Object (Entity (Pack_Name));\n+         if Present (Renamed_Entity (Entity (Pack_Name))) then\n+            P := Renamed_Entity (Entity (Pack_Name));\n          else\n             P := Entity (Pack_Name);\n          end if;\n@@ -9949,10 +9949,10 @@ package body Sem_Ch8 is\n       --  also in use (the flags on both entities must remain consistent, and a\n       --  subsequent use of either of them should be recognized as redundant).\n \n-      if Present (Renamed_Object (P)) then\n-         Set_In_Use (Renamed_Object (P));\n-         Set_Current_Use_Clause (Renamed_Object (P), N);\n-         Real_P := Renamed_Object (P);\n+      if Present (Renamed_Entity (P)) then\n+         Set_In_Use (Renamed_Entity (P));\n+         Set_Current_Use_Clause (Renamed_Entity (P), N);\n+         Real_P := Renamed_Entity (P);\n       else\n          Real_P := P;\n       end if;"}, {"sha": "c9067081bf2ef3c1a9243d1f5b744bf5693e91d1", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -3815,14 +3815,14 @@ package body Sem_Elab is\n       -----------------------\n \n       function Ultimate_Variable (Var_Id : Entity_Id) return Entity_Id is\n+         pragma Assert (Ekind (Var_Id) = E_Variable);\n          Ren_Id : Entity_Id;\n-\n       begin\n          Ren_Id := Var_Id;\n-         while Present (Renamed_Entity (Ren_Id))\n-           and then Nkind (Renamed_Entity (Ren_Id)) in N_Entity\n+         while Present (Renamed_Object (Ren_Id))\n+           and then Nkind (Renamed_Object (Ren_Id)) in N_Entity\n          loop\n-            Ren_Id := Renamed_Entity (Ren_Id);\n+            Ren_Id := Renamed_Object (Ren_Id);\n          end loop;\n \n          return Ren_Id;"}, {"sha": "193afc5222fd4a507879038cb8a88cb5649f6195", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 12, "deletions": 19, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -723,17 +723,11 @@ package body Sem_Util is\n             --  Note: We check if the original node of the renaming comes\n             --  from source because the node may have been rewritten.\n \n-            elsif Present (Renamed_Object (E))\n-              and then Comes_From_Source (Original_Node (Renamed_Object (E)))\n+            elsif Present (Renamed_Entity_Or_Object (E))\n+              and then Comes_From_Source\n+                (Original_Node (Renamed_Entity_Or_Object (E)))\n             then\n-               return Accessibility_Level (Renamed_Object (E));\n-\n-            --  Move up renamed entities\n-\n-            elsif Present (Renamed_Entity (E))\n-              and then Comes_From_Source (Original_Node (Renamed_Entity (E)))\n-            then\n-               return Accessibility_Level (Renamed_Entity (E));\n+               return Accessibility_Level (Renamed_Entity_Or_Object (E));\n \n             --  Named access types get their level from their associated type\n \n@@ -7369,7 +7363,7 @@ package body Sem_Util is\n       function Is_Valid_Renaming (N : Node_Id) return Boolean is\n       begin\n          if Is_Object_Renaming (N)\n-           and then not Is_Valid_Renaming (Renamed_Entity (Entity (N)))\n+           and then not Is_Valid_Renaming (Renamed_Object (Entity (N)))\n          then\n             return False;\n          end if;\n@@ -7561,12 +7555,12 @@ package body Sem_Util is\n       elsif Is_Object_Renaming (A1)\n         and then Is_Valid_Renaming (A1)\n       then\n-         return Denotes_Same_Object (Renamed_Entity (Entity (A1)), A2);\n+         return Denotes_Same_Object (Renamed_Object (Entity (A1)), A2);\n \n       elsif Is_Object_Renaming (A2)\n         and then Is_Valid_Renaming (A2)\n       then\n-         return Denotes_Same_Object (A1, Renamed_Entity (Entity (A2)));\n+         return Denotes_Same_Object (A1, Renamed_Object (Entity (A2)));\n \n       else\n          return False;\n@@ -10888,8 +10882,8 @@ package body Sem_Util is\n    function Get_Generic_Entity (N : Node_Id) return Entity_Id is\n       Ent : constant Entity_Id := Entity (Name (N));\n    begin\n-      if Present (Renamed_Object (Ent)) then\n-         return Renamed_Object (Ent);\n+      if Present (Renamed_Entity (Ent)) then\n+         return Renamed_Entity (Ent);\n       else\n          return Ent;\n       end if;\n@@ -11406,10 +11400,8 @@ package body Sem_Util is\n    ------------------------\n \n    function Get_Renamed_Entity (E : Entity_Id) return Entity_Id is\n-      R : Entity_Id;\n-\n+      R : Entity_Id := E;\n    begin\n-      R := E;\n       while Present (Renamed_Entity (R)) loop\n          R := Renamed_Entity (R);\n       end loop;\n@@ -24097,7 +24089,8 @@ package body Sem_Util is\n             --  declaration.\n \n             elsif Nkind (N) = N_Object_Renaming_Declaration then\n-               Set_Renamed_Object (Defining_Entity (Result), Name (Result));\n+               Set_Renamed_Object_Of_Possibly_Void\n+                 (Defining_Entity (Result), Name (Result));\n \n             --  Update the First_Real_Statement attribute of a replicated\n             --  handled sequence of statements."}, {"sha": "85945bb9b6059316381c7a383e0a687a80f51cb1", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -2408,12 +2408,12 @@ package body Sem_Warn is\n \n             E1 := First_Entity (P);\n             while Present (E1) loop\n-               if Ekind (E1) = E_Package and then Renamed_Object (E1) = L then\n+               if Ekind (E1) = E_Package and then Renamed_Entity (E1) = L then\n                   Is_Visible_Renaming := not Is_Hidden (E1);\n                   return E1;\n \n                elsif Ekind (E1) = E_Package\n-                 and then No (Renamed_Object (E1))\n+                 and then No (Renamed_Entity (E1))\n                  and then not Is_Generic_Instance (E1)\n                then\n                   R := Find_Package_Renaming (E1, L);"}, {"sha": "5199e6db13380fdb75890aea4cc6a74a0bd19583", "filename": "gcc/ada/tbuild.ads", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Ftbuild.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e7eae5b917d782d20d59f3cbe3c344a06aafb7/gcc%2Fada%2Ftbuild.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.ads?ref=19e7eae5b917d782d20d59f3cbe3c344a06aafb7", "patch": "@@ -312,11 +312,10 @@ package Tbuild is\n      (Def_Id : Entity_Id;\n       Loc    : Source_Ptr) return Node_Id;\n    --  New_Occurrence_Of creates an N_Identifier node that is an occurrence of\n-   --  the defining identifier Def_Id. The Entity and Etype of the result are\n-   --  set from the given defining identifier as follows: Entity is a copy of\n-   --  Def_Id. Etype is a copy of Def_Id for types, and a copy of the Etype of\n-   --  Def_Id for other entities. Note that Is_Static_Expression is set if this\n-   --  call creates an occurrence of an enumeration literal.\n+   --  the defining identifier Def_Id. The Entity of the result is Def_Id. The\n+   --  Etype of the result is Def_Id for types, and Etype (Def_Id) otherwise.\n+   --  Is_Static_Expression is set if this call creates an occurrence of an\n+   --  enumeration literal.\n \n    function New_Suffixed_Name\n      (Related_Id : Name_Id;"}]}