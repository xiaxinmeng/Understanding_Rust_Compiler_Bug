{"sha": "71999fde2a454d1fa149e63825d8edbe0748c911", "node_id": "C_kwDOANBUbNoAKDcxOTk5ZmRlMmE0NTRkMWZhMTQ5ZTYzODI1ZDhlZGJlMDc0OGM5MTE", "commit": {"author": {"name": "Philipp Fent", "email": "fent@in.tum.de", "date": "2022-04-25T12:03:31Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-04-25T12:32:04Z"}, "message": "libstdc++: Add pretty printer for std::initializer_list\n\nRe-using the std::span printer, this now shows the contents of the\ninitializer list instead of the pointer and length members.\n\nSigned-off-by: Philipp Fent <fent@in.tum.de>\n\nlibstdc++-v3/ChangeLog:\n\n\t* python/libstdcxx/v6/printers.py (StdSpanPrinter._iterator):\n\tRename as iterator.\n\t(StdInitializerListPrinter): Define new printer.\n\t(build_libstdcxx_dictionary): Register new printer.\n\t* testsuite/libstdc++-prettyprinters/cxx11.cc: Check printer for\n\tinitializer_list.", "tree": {"sha": "ff6a87cb294117a3d5a0b70de6d392a3dc3badfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff6a87cb294117a3d5a0b70de6d392a3dc3badfb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71999fde2a454d1fa149e63825d8edbe0748c911", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71999fde2a454d1fa149e63825d8edbe0748c911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71999fde2a454d1fa149e63825d8edbe0748c911", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71999fde2a454d1fa149e63825d8edbe0748c911/comments", "author": {"login": "pfent", "id": 5686284, "node_id": "MDQ6VXNlcjU2ODYyODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5686284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfent", "html_url": "https://github.com/pfent", "followers_url": "https://api.github.com/users/pfent/followers", "following_url": "https://api.github.com/users/pfent/following{/other_user}", "gists_url": "https://api.github.com/users/pfent/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfent/subscriptions", "organizations_url": "https://api.github.com/users/pfent/orgs", "repos_url": "https://api.github.com/users/pfent/repos", "events_url": "https://api.github.com/users/pfent/events{/privacy}", "received_events_url": "https://api.github.com/users/pfent/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cc26f3037a18b9a958b4ac2a1363149a7fccd39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cc26f3037a18b9a958b4ac2a1363149a7fccd39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cc26f3037a18b9a958b4ac2a1363149a7fccd39"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "c31134bcdd282d9a1f8fbec1d9acf01674639ad2", "filename": "libstdc++-v3/python/libstdcxx/v6/printers.py", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71999fde2a454d1fa149e63825d8edbe0748c911/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71999fde2a454d1fa149e63825d8edbe0748c911/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py?ref=71999fde2a454d1fa149e63825d8edbe0748c911", "patch": "@@ -1657,7 +1657,7 @@ def to_string (self):\n class StdSpanPrinter:\n     \"Print a std::span\"\n \n-    class _iterator(Iterator):\n+    class iterator(Iterator):\n         def __init__(self, begin, size):\n             self.count = 0\n             self.begin = begin\n@@ -1686,7 +1686,24 @@ def to_string(self):\n         return '%s of length %d' % (self.typename, self.size)\n \n     def children(self):\n-        return self._iterator(self.val['_M_ptr'], self.size)\n+        return self.iterator(self.val['_M_ptr'], self.size)\n+\n+    def display_hint(self):\n+        return 'array'\n+\n+class StdInitializerListPrinter:\n+    \"Print a std::initializer_list\"\n+\n+    def __init__(self, typename, val):\n+        self.typename = typename\n+        self.val = val\n+        self.size = val['_M_len']\n+\n+    def to_string(self):\n+        return '%s of length %d' % (self.typename, self.size)\n+\n+    def children(self):\n+        return StdSpanPrinter.iterator(self.val['_M_array'], self.size)\n \n     def display_hint(self):\n         return 'array'\n@@ -2156,6 +2173,9 @@ def build_libstdcxx_dictionary ():\n     libstdcxx_printer.add_version('std::tr1::', 'unordered_multiset',\n                                   Tr1UnorderedSetPrinter)\n \n+    libstdcxx_printer.add_version('std::', 'initializer_list',\n+                                  StdInitializerListPrinter)\n+\n     # std::regex components\n     libstdcxx_printer.add_version('std::__detail::', '_State',\n                                   StdRegexStatePrinter)"}, {"sha": "621d13bd0626788c2fca3121a24faf1f9d706042", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/cxx11.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71999fde2a454d1fa149e63825d8edbe0748c911/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx11.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71999fde2a454d1fa149e63825d8edbe0748c911/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx11.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx11.cc?ref=71999fde2a454d1fa149e63825d8edbe0748c911", "patch": "@@ -25,6 +25,7 @@\n #include <memory>\n #include <iostream>\n #include <future>\n+#include <initializer_list>\n #include \"../util/testsuite_allocator.h\" // NullablePointer\n \n typedef std::tuple<int, int> ExTuple;\n@@ -191,6 +192,11 @@ main()\n   std::error_code ecfut0 = std::make_error_code(std::future_errc{});\n   // { dg-final { note-test ecfut0 {std::error_code = {\"future\": 0}} } }\n \n+  std::initializer_list<int> emptyIl = {};\n+  // { dg-final { note-test emptyIl {std::initializer_list of length 0} } }\n+  std::initializer_list<int> il = {3, 4};\n+  // { dg-final { note-test il {std::initializer_list of length 2 = {3, 4}} } }\n+\n   placeholder(\"\"); // Mark SPOT\n   use(efl);\n   use(fl);"}]}