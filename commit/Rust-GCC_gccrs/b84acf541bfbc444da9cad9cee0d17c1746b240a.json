{"sha": "b84acf541bfbc444da9cad9cee0d17c1746b240a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg0YWNmNTQxYmZiYzQ0NGRhOWNhZDljZWUwZDE3YzE3NDZiMjQwYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-11-23T13:24:19Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-11-23T13:24:19Z"}, "message": "re PR target/56788 (_mm_frcz_sd and _mm_frcz_ss ignore their second argument)\n\n\tPR target/56788\n\t* config/i386/i386.c (bdesc_multi_arg) <IX86_BUILTIN_VFRCZSS>:\n\tDeclare as MULTI_ARG_1_SF instruction.\n\t<IX86_BUILTIN_VFRCZSD>: Decleare as MULTI_ARG_1_DF instruction.\n\t* config/i386/sse.md (*xop_vmfrcz<mode>2): Rename\n\tfrom *xop_vmfrcz_<mode>.\n\t* config/i386/xopintrin.h (_mm_frcz_ss): Use __builtin_ia32_movss\n\tto merge scalar result with __A.\n\t(_mm_frcz_sd): Use __builtin_ia32_movsd to merge scalar\n\tresult with __A.\n\nFrom-SVN: r205306", "tree": {"sha": "886bd7898647f2eb6610f93a385f23e3dc9914c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/886bd7898647f2eb6610f93a385f23e3dc9914c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b84acf541bfbc444da9cad9cee0d17c1746b240a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b84acf541bfbc444da9cad9cee0d17c1746b240a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b84acf541bfbc444da9cad9cee0d17c1746b240a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b84acf541bfbc444da9cad9cee0d17c1746b240a/comments", "author": null, "committer": null, "parents": [{"sha": "66c14933d176de277020532295606e73c3b78162", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66c14933d176de277020532295606e73c3b78162", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66c14933d176de277020532295606e73c3b78162"}], "stats": {"total": 44, "additions": 28, "deletions": 16}, "files": [{"sha": "331cbbb717f938422f7f69a7d893a3c648dbba26", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b84acf541bfbc444da9cad9cee0d17c1746b240a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b84acf541bfbc444da9cad9cee0d17c1746b240a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b84acf541bfbc444da9cad9cee0d17c1746b240a", "patch": "@@ -1,3 +1,16 @@\n+2013-11-23  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/56788\n+\t* config/i386/i386.c (bdesc_multi_arg) <IX86_BUILTIN_VFRCZSS>:\n+\tDeclare as MULTI_ARG_1_SF instruction.\n+\t<IX86_BUILTIN_VFRCZSD>: Decleare as MULTI_ARG_1_DF instruction.\n+\t* config/i386/sse.md (*xop_vmfrcz<mode>2): Rename\n+\tfrom *xop_vmfrcz_<mode>.\n+\t* config/i386/xopintrin.h (_mm_frcz_ss): Use __builtin_ia32_movss\n+\tto merge scalar result with __A.\n+\t(_mm_frcz_sd): Use __builtin_ia32_movsd to merge scalar\n+\tresult with __A.\n+\n 2013-11-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gimplify.h (recalculate_side_effects): Delete.\n@@ -87,16 +100,14 @@\n \t(get_adjustment_for_base): Use operator enum.\n \t(sra_ipa_modify_expr): Rename to ipa_modify_expr and move to\n \tipa-prop.c.\n-\t(sra_ipa_modify_assign): Rename sra_ipa_modify_expr to\n-\tipa_modify_expr.\n+\t(sra_ipa_modify_assign): Rename sra_ipa_modify_expr to ipa_modify_expr.\n \t(ipa_sra_modify_function_body): Same.  No longer static.\n \t(sra_ipa_reset_debug_stmts): Use operator enum.\n \t(modify_function): Do not pass prefix argument.\n \n 2013-11-22  Jakub Jelinek  <jakub@redhat.com>\n \n-\t* ubsan.c (ubsan_source_location): Don't crash on\n-\tunknown locations.\n+\t* ubsan.c (ubsan_source_location): Don't crash on unknown locations.\n \t(ubsan_pass): Ignore clobber stmts.\n \n \t* sanitizer.def (BUILT_IN_UBSAN_HANDLE_MISSING_RETURN): New built-in.\n@@ -136,8 +147,7 @@\n \t(cond_arg_set_in_b): Remove.\n \t(record_temporary_equivalences_from_stmts_at_dest): New bitmap\n \targuments and a boolean indicating if we have passed a backedge.\n-\tIf we have passed a backedge, then perform invalidations as\n-\tneeded.\n+\tIf we have passed a backedge, then perform invalidations as needed.\n \t(thread_around_empty_blocks): If we have seen a backedge, then\n \tuse the dummy simplify routine.\n \t(thread_through_normal_block): Likewise.  Pass bitmaps and\n@@ -418,7 +428,8 @@\n 2013-11-22  Tejas Belagod  <tejas.belagod@arm.com>\n \n \t* config/aarch64/aarch64-simd.md (vec_pack_trunc_<mode>,\n-\tvec_pack_trunc_v2df, vec_pack_trunc_df): Swap source ops for big-endian.\n+\tvec_pack_trunc_v2df, vec_pack_trunc_df): Swap source ops for\n+\tbig-endian.\n \n 2013-11-22  Tejas Belagod  <tejas.belagod@arm.com>\n "}, {"sha": "23d833e25cdb3e9188dd7b96e5862ed31ee1c617", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b84acf541bfbc444da9cad9cee0d17c1746b240a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b84acf541bfbc444da9cad9cee0d17c1746b240a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b84acf541bfbc444da9cad9cee0d17c1746b240a", "patch": "@@ -29189,8 +29189,8 @@ static const struct builtin_description bdesc_multi_arg[] =\n   { OPTION_MASK_ISA_XOP, CODE_FOR_xop_shlv8hi3,         \"__builtin_ia32_vpshlw\",      IX86_BUILTIN_VPSHLW,      UNKNOWN,      (int)MULTI_ARG_2_HI },\n   { OPTION_MASK_ISA_XOP, CODE_FOR_xop_shlv16qi3,        \"__builtin_ia32_vpshlb\",      IX86_BUILTIN_VPSHLB,      UNKNOWN,      (int)MULTI_ARG_2_QI },\n \n-  { OPTION_MASK_ISA_XOP, CODE_FOR_xop_vmfrczv4sf2,       \"__builtin_ia32_vfrczss\",     IX86_BUILTIN_VFRCZSS,     UNKNOWN,      (int)MULTI_ARG_2_SF },\n-  { OPTION_MASK_ISA_XOP, CODE_FOR_xop_vmfrczv2df2,       \"__builtin_ia32_vfrczsd\",     IX86_BUILTIN_VFRCZSD,     UNKNOWN,      (int)MULTI_ARG_2_DF },\n+  { OPTION_MASK_ISA_XOP, CODE_FOR_xop_vmfrczv4sf2,       \"__builtin_ia32_vfrczss\",     IX86_BUILTIN_VFRCZSS,     UNKNOWN,      (int)MULTI_ARG_1_SF },\n+  { OPTION_MASK_ISA_XOP, CODE_FOR_xop_vmfrczv2df2,       \"__builtin_ia32_vfrczsd\",     IX86_BUILTIN_VFRCZSD,     UNKNOWN,      (int)MULTI_ARG_1_DF },\n   { OPTION_MASK_ISA_XOP, CODE_FOR_xop_frczv4sf2,         \"__builtin_ia32_vfrczps\",     IX86_BUILTIN_VFRCZPS,     UNKNOWN,      (int)MULTI_ARG_1_SF },\n   { OPTION_MASK_ISA_XOP, CODE_FOR_xop_frczv2df2,         \"__builtin_ia32_vfrczpd\",     IX86_BUILTIN_VFRCZPD,     UNKNOWN,      (int)MULTI_ARG_1_DF },\n   { OPTION_MASK_ISA_XOP, CODE_FOR_xop_frczv8sf2,         \"__builtin_ia32_vfrczps256\",  IX86_BUILTIN_VFRCZPS256,  UNKNOWN,      (int)MULTI_ARG_1_SF2 },"}, {"sha": "7a47f27e94ee71abf3b2ceb9febde8c812fd23c2", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b84acf541bfbc444da9cad9cee0d17c1746b240a/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b84acf541bfbc444da9cad9cee0d17c1746b240a/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=b84acf541bfbc444da9cad9cee0d17c1746b240a", "patch": "@@ -13193,7 +13193,6 @@\n   [(set_attr \"type\" \"ssecvt1\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-;; scalar insns\n (define_expand \"xop_vmfrcz<mode>2\"\n   [(set (match_operand:VF_128 0 \"register_operand\")\n \t(vec_merge:VF_128\n@@ -13203,11 +13202,9 @@\n \t  (match_dup 3)\n \t  (const_int 1)))]\n   \"TARGET_XOP\"\n-{\n-  operands[3] = CONST0_RTX (<MODE>mode);\n-})\n+  \"operands[3] = CONST0_RTX (<MODE>mode);\")\n \n-(define_insn \"*xop_vmfrcz_<mode>\"\n+(define_insn \"*xop_vmfrcz<mode>2\"\n   [(set (match_operand:VF_128 0 \"register_operand\" \"=x\")\n \t(vec_merge:VF_128\n \t  (unspec:VF_128"}, {"sha": "49cea8ec64559b6a3fe0c36badfcd195c48a4387", "filename": "gcc/config/i386/xopintrin.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b84acf541bfbc444da9cad9cee0d17c1746b240a/gcc%2Fconfig%2Fi386%2Fxopintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b84acf541bfbc444da9cad9cee0d17c1746b240a/gcc%2Fconfig%2Fi386%2Fxopintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxopintrin.h?ref=b84acf541bfbc444da9cad9cee0d17c1746b240a", "patch": "@@ -747,13 +747,17 @@ _mm_frcz_pd (__m128d __A)\n extern __inline __m128 __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n _mm_frcz_ss (__m128 __A, __m128 __B)\n {\n-  return (__m128) __builtin_ia32_vfrczss ((__v4sf)__A, (__v4sf)__B);\n+  return (__m128) __builtin_ia32_movss ((__v4sf)__A,\n+\t\t\t\t\t(__v4sf)\n+\t\t\t\t\t__builtin_ia32_vfrczss ((__v4sf)__B));\n }\n \n extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n _mm_frcz_sd (__m128d __A, __m128d __B)\n {\n-  return (__m128d) __builtin_ia32_vfrczsd ((__v2df)__A, (__v2df)__B);\n+  return (__m128d) __builtin_ia32_movsd ((__v2df)__A,\n+\t\t\t\t\t (__v2df)\n+\t\t\t\t\t __builtin_ia32_vfrczsd ((__v2df)__B));\n }\n \n extern __inline __m256 __attribute__((__gnu_inline__, __always_inline__, __artificial__))"}]}