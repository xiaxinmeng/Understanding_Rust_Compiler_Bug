{"sha": "5f6c8a56a726b191f7a603caa0b7dc65f2e3e5bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY2YzhhNTZhNzI2YjE5MWY3YTYwM2NhYTBiN2RjNjVmMmUzZTViZg==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2005-03-16T16:25:47Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2005-03-16T16:25:47Z"}, "message": "re PR tree-optimization/20489 (ICE: address taken, but ADDRESSABLE bit not set)\n\n2005-03-16  Daniel Berlin  <dberlin@dberlin.org>\n\n\tFix PR tree-optimization/20489\n\n\t* tree-ssa-alias.c (push_fields_onto_fieldstack): DTRT\n\tfor empty structures.\n\nFrom-SVN: r96562", "tree": {"sha": "7eb8e3be798ca8c365afb184477ef01de61338df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7eb8e3be798ca8c365afb184477ef01de61338df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f6c8a56a726b191f7a603caa0b7dc65f2e3e5bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f6c8a56a726b191f7a603caa0b7dc65f2e3e5bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f6c8a56a726b191f7a603caa0b7dc65f2e3e5bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f6c8a56a726b191f7a603caa0b7dc65f2e3e5bf/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f718710e8da82c6987d02a28461a8b32b4e0afb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f718710e8da82c6987d02a28461a8b32b4e0afb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f718710e8da82c6987d02a28461a8b32b4e0afb2"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "0714aee8c2184e05fa32b8caf214e3fab99e4c60", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f6c8a56a726b191f7a603caa0b7dc65f2e3e5bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f6c8a56a726b191f7a603caa0b7dc65f2e3e5bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f6c8a56a726b191f7a603caa0b7dc65f2e3e5bf", "patch": "@@ -1,3 +1,10 @@\n+2005-03-16  Daniel Berlin  <dberlin@dberlin.org>\n+\t\n+\tFix PR tree-optimization/20489\n+\n+\t* tree-ssa-alias.c (push_fields_onto_fieldstack): DTRT\n+\tfor empty structures.\n+\n 2005-03-16  Daniel Berlin  <dberlin@dberlin.org>\n \n \tFix PR tree-optimization/20490"}, {"sha": "0a1a569d2627e199436502997c417cb4248c44e7", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr20489.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f6c8a56a726b191f7a603caa0b7dc65f2e3e5bf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr20489.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f6c8a56a726b191f7a603caa0b7dc65f2e3e5bf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr20489.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr20489.C?ref=5f6c8a56a726b191f7a603caa0b7dc65f2e3e5bf", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+struct A\n+{\n+\t~A();\n+};\n+\n+/* If we don't create SFT's for the \"empty\" structure A, bad things\n+   will happen, and we will fail verification.  */\n+struct B\n+{\n+\tint i;\n+\tA a;\n+\n+\tvoid foo() {}\n+};\n+\n+void bar()\n+{\n+\tB().foo();\n+}"}, {"sha": "315463fa2e5a093b5ce98eb79c7b7cccf8c9d635", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f6c8a56a726b191f7a603caa0b7dc65f2e3e5bf/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f6c8a56a726b191f7a603caa0b7dc65f2e3e5bf/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=5f6c8a56a726b191f7a603caa0b7dc65f2e3e5bf", "patch": "@@ -2729,8 +2729,21 @@ push_fields_onto_fieldstack (tree type, VEC(fieldoff_t) **fieldstack,\n \tcontinue;\n       if (var_can_have_subvars (field))\n \t{\n+\t  size_t before = VEC_length (fieldoff_t, *fieldstack);\n \t  push_fields_onto_fieldstack (TREE_TYPE (field), fieldstack, \n \t\t\t\t       offset + bitpos_of_field (field));\n+      /* Empty structures may have actual size, like in C++. So see if we\n+\t actually end up pushing a field, and if not, if the size is non-zero,\n+\t push the field onto the stack */\n+\t  if (before == VEC_length (fieldoff_t, *fieldstack)\n+\t      && DECL_SIZE (field)\n+\t      && !integer_zerop (DECL_SIZE (field)))\n+\t    {\n+\t      pair = xmalloc (sizeof (struct fieldoff));\n+\t      pair->field = field;\n+\t      pair->offset = offset + bitpos_of_field (field);\n+\t      VEC_safe_push (fieldoff_t, *fieldstack, pair);\n+\t    }\n \t}\n       else\n \t{"}]}