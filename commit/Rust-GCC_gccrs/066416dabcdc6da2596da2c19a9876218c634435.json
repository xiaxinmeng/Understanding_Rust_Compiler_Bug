{"sha": "066416dabcdc6da2596da2c19a9876218c634435", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY2NDE2ZGFiY2RjNmRhMjU5NmRhMmMxOWE5ODc2MjE4YzYzNDQzNQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2016-12-15T15:54:53Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2016-12-15T15:54:53Z"}, "message": "[arm] Add isa features to FPU descriptions\n\nSimilar to the new CPU and architecture ISA feature lists, we now add\nsimilar capabilities to each FPU description.  We don't use these yet,\nthat will come in later patches.  These follow the same style as the\nnewly modified flag sets, but use slightly different defaults that\nmore accurately reflect the ISA specifications.\n\n\t* arm-isa.h (isa_feature): Add bits for VFPv4, FPv5, fp16conv,\n\tfP_dbl, fp_d32 and fp_crypto.\n\t(ISA_ALL_FPU): Add all the new bits.\n\t(ISA_VFPv2, ISA_VFPv3, ISA_VFPv4, ISA_FPv5): New macros.\n\t(ISA_FP_ARMv8, ISA_FP_DBL, ISA_FP_D32, ISA_NEON, ISA_CRYPTO): Likewise.\n\t* arm-fpus.def: Add ISA features to all FPUs.\n\t* arm.h: (arm_fpu_desc): Add new field for ISA bits.\n\t* arm.c (all_fpus): Initialize it.\n\t* arm-tables.opt: Regenerated.\n\nFrom-SVN: r243709", "tree": {"sha": "d569d01e12b38f32edf957d26a8f5915986f23bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d569d01e12b38f32edf957d26a8f5915986f23bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/066416dabcdc6da2596da2c19a9876218c634435", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/066416dabcdc6da2596da2c19a9876218c634435", "html_url": "https://github.com/Rust-GCC/gccrs/commit/066416dabcdc6da2596da2c19a9876218c634435", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/066416dabcdc6da2596da2c19a9876218c634435/comments", "author": null, "committer": null, "parents": [{"sha": "c17c0c7a524d2b1eb96cf0edc8a72299fea7b252", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c17c0c7a524d2b1eb96cf0edc8a72299fea7b252", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c17c0c7a524d2b1eb96cf0edc8a72299fea7b252"}], "stats": {"total": 71, "additions": 42, "deletions": 29}, "files": [{"sha": "4bcf816e83399664a2b2b28ddf4867d7cf6554f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/066416dabcdc6da2596da2c19a9876218c634435/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/066416dabcdc6da2596da2c19a9876218c634435/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=066416dabcdc6da2596da2c19a9876218c634435", "patch": "@@ -1,3 +1,15 @@\n+2016-12-15  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm-isa.h (isa_feature): Add bits for VFPv4, FPv5, fp16conv,\n+\tfP_dbl, fp_d32 and fp_crypto.\n+\t(ISA_ALL_FPU): Add all the new bits.\n+\t(ISA_VFPv2, ISA_VFPv3, ISA_VFPv4, ISA_FPv5): New macros.\n+\t(ISA_FP_ARMv8, ISA_FP_DBL, ISA_FP_D32, ISA_NEON, ISA_CRYPTO): Likewise.\n+\t* arm-fpus.def: Add ISA features to all FPUs.\n+\t* arm.h: (arm_fpu_desc): Add new field for ISA bits.\n+\t* arm.c (all_fpus): Initialize it.\n+\t* arm-tables.opt: Regenerated.\n+\n 2016-12-15  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.h (FPU_FL_VFPv2) New feature bit."}, {"sha": "1be718fa2cd25dd861b0a5001bd54674ef80b715", "filename": "gcc/config/arm/arm-fpus.def", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/066416dabcdc6da2596da2c19a9876218c634435/gcc%2Fconfig%2Farm%2Farm-fpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/066416dabcdc6da2596da2c19a9876218c634435/gcc%2Fconfig%2Farm%2Farm-fpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-fpus.def?ref=066416dabcdc6da2596da2c19a9876218c634435", "patch": "@@ -19,31 +19,31 @@\n \n /* Before using #include to read this file, define a macro:\n \n-      ARM_FPU(NAME, FEATURES)\n+      ARM_FPU(NAME, ISA, FEATURES)\n \n    The arguments are the fields of struct arm_fpu_desc.\n \n    genopt.sh assumes no whitespace up to the first \",\" in each entry.  */\n \n-ARM_FPU(\"vfp\",\t\t\tFPU_VFPv2 | FPU_DBL)\n-ARM_FPU(\"vfpv2\",\t\tFPU_VFPv2 | FPU_DBL)\n-ARM_FPU(\"vfpv3\",\t\tFPU_VFPv3 | FPU_D32)\n-ARM_FPU(\"vfpv3-fp16\",\t\tFPU_VFPv3 | FPU_D32 | FPU_FP16)\n-ARM_FPU(\"vfpv3-d16\",\t\tFPU_VFPv3 | FPU_DBL)\n-ARM_FPU(\"vfpv3-d16-fp16\", \tFPU_VFPv3 | FPU_DBL | FPU_FP16)\n-ARM_FPU(\"vfpv3xd\",\t\tFPU_VFPv3)\n-ARM_FPU(\"vfpv3xd-fp16\",\t\tFPU_VFPv3 | FPU_FP16)\n-ARM_FPU(\"neon\",\t\t\tFPU_VFPv3 | FPU_NEON)\n-ARM_FPU(\"neon-vfpv3\",\t\tFPU_VFPv3 | FPU_NEON)\n-ARM_FPU(\"neon-fp16\",\t\tFPU_VFPv3 | FPU_NEON | FPU_FP16)\n-ARM_FPU(\"vfpv4\",\t\tFPU_VFPv4 | FPU_D32 | FPU_FP16)\n-ARM_FPU(\"vfpv4-d16\",\t\tFPU_VFPv4 | FPU_DBL | FPU_FP16)\n-ARM_FPU(\"fpv4-sp-d16\",\t\tFPU_VFPv4 | FPU_FP16)\n-ARM_FPU(\"fpv5-sp-d16\",\t\tFPU_VFPv5 | FPU_FP16)\n-ARM_FPU(\"fpv5-d16\",\t\tFPU_VFPv5 | FPU_DBL | FPU_FP16)\n-ARM_FPU(\"neon-vfpv4\",\t\tFPU_VFPv4 | FPU_NEON | FPU_FP16)\n-ARM_FPU(\"fp-armv8\",\t\tFPU_ARMv8 | FPU_D32 | FPU_FP16)\n-ARM_FPU(\"neon-fp-armv8\", \tFPU_ARMv8 | FPU_NEON | FPU_FP16)\n-ARM_FPU(\"crypto-neon-fp-armv8\", FPU_ARMv8 | FPU_CRYPTO | FPU_FP16)\n+ARM_FPU(\"vfp\",\t\t\tISA_FEAT(ISA_VFPv2) ISA_FEAT(ISA_FP_DBL),\t\t\t     FPU_VFPv2 | FPU_DBL)\n+ARM_FPU(\"vfpv2\",\t\tISA_FEAT(ISA_VFPv2) ISA_FEAT(ISA_FP_DBL),\t\t\t     FPU_VFPv2 | FPU_DBL)\n+ARM_FPU(\"vfpv3\",\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_FP_D32),\t\t\t     FPU_VFPv3 | FPU_D32)\n+ARM_FPU(\"vfpv3-fp16\",\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_FP_D32) ISA_FEAT(isa_bit_fp16conv), FPU_VFPv3 | FPU_D32 | FPU_FP16)\n+ARM_FPU(\"vfpv3-d16\",\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_FP_DBL),\t\t\t     FPU_VFPv3 | FPU_DBL)\n+ARM_FPU(\"vfpv3-d16-fp16\",\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_FP_DBL) ISA_FEAT(isa_bit_fp16conv), FPU_VFPv3 | FPU_DBL | FPU_FP16)\n+ARM_FPU(\"vfpv3xd\",\t\tISA_FEAT(ISA_VFPv3),\t\t\t\t\t\t     FPU_VFPv3)\n+ARM_FPU(\"vfpv3xd-fp16\",\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(isa_bit_fp16conv),\t\t\t     FPU_VFPv3 | FPU_FP16)\n+ARM_FPU(\"neon\",\t\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_NEON),\t\t\t\t     FPU_VFPv3 | FPU_NEON)\n+ARM_FPU(\"neon-vfpv3\",\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_NEON),\t\t\t\t     FPU_VFPv3 | FPU_NEON)\n+ARM_FPU(\"neon-fp16\",\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_NEON) ISA_FEAT(isa_bit_fp16conv),   FPU_VFPv3 | FPU_NEON | FPU_FP16)\n+ARM_FPU(\"vfpv4\",\t\tISA_FEAT(ISA_VFPv4) ISA_FEAT(ISA_FP_D32),\t\t\t     FPU_VFPv4 | FPU_D32 | FPU_FP16)\n+ARM_FPU(\"neon-vfpv4\",\t\tISA_FEAT(ISA_VFPv4) ISA_FEAT(ISA_NEON),\t\t\t\t     FPU_VFPv4 | FPU_NEON | FPU_FP16)\n+ARM_FPU(\"vfpv4-d16\",\t\tISA_FEAT(ISA_VFPv4) ISA_FEAT(ISA_FP_DBL),\t\t\t     FPU_VFPv4 | FPU_DBL | FPU_FP16)\n+ARM_FPU(\"fpv4-sp-d16\",\t\tISA_FEAT(ISA_VFPv4),\t\t\t\t\t\t     FPU_VFPv4 | FPU_FP16)\n+ARM_FPU(\"fpv5-sp-d16\",\t\tISA_FEAT(ISA_FPv5),\t\t\t\t\t\t     FPU_VFPv5 | FPU_FP16)\n+ARM_FPU(\"fpv5-d16\",\t\tISA_FEAT(ISA_FPv5) ISA_FEAT(ISA_FP_DBL),\t\t\t     FPU_VFPv5 | FPU_DBL | FPU_FP16)\n+ARM_FPU(\"fp-armv8\",\t\tISA_FEAT(ISA_FP_ARMv8) ISA_FEAT(ISA_FP_D32),\t\t\t     FPU_ARMv8 | FPU_D32 | FPU_FP16)\n+ARM_FPU(\"neon-fp-armv8\",\tISA_FEAT(ISA_FP_ARMv8) ISA_FEAT(ISA_NEON),\t\t\t     FPU_ARMv8 | FPU_NEON | FPU_FP16)\n+ARM_FPU(\"crypto-neon-fp-armv8\", ISA_FEAT(ISA_FP_ARMv8) ISA_FEAT(ISA_CRYPTO),\t\t\t     FPU_ARMv8 | FPU_CRYPTO | FPU_FP16)\n /* Compatibility aliases.  */\n-ARM_FPU(\"vfp3\",\t\t\tFPU_VFPv3 | FPU_D32)\n+ARM_FPU(\"vfp3\",\t\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_FP_D32),\t\t\t     FPU_VFPv3 | FPU_D32)"}, {"sha": "faa00aaa6f409bf6e54e3a0b082d4781e3e72f0d", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/066416dabcdc6da2596da2c19a9876218c634435/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/066416dabcdc6da2596da2c19a9876218c634435/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=066416dabcdc6da2596da2c19a9876218c634435", "patch": "@@ -504,19 +504,19 @@ EnumValue\n Enum(arm_fpu) String(vfpv4) Value(11)\n \n EnumValue\n-Enum(arm_fpu) String(vfpv4-d16) Value(12)\n+Enum(arm_fpu) String(neon-vfpv4) Value(12)\n \n EnumValue\n-Enum(arm_fpu) String(fpv4-sp-d16) Value(13)\n+Enum(arm_fpu) String(vfpv4-d16) Value(13)\n \n EnumValue\n-Enum(arm_fpu) String(fpv5-sp-d16) Value(14)\n+Enum(arm_fpu) String(fpv4-sp-d16) Value(14)\n \n EnumValue\n-Enum(arm_fpu) String(fpv5-d16) Value(15)\n+Enum(arm_fpu) String(fpv5-sp-d16) Value(15)\n \n EnumValue\n-Enum(arm_fpu) String(neon-vfpv4) Value(16)\n+Enum(arm_fpu) String(fpv5-d16) Value(16)\n \n EnumValue\n Enum(arm_fpu) String(fp-armv8) Value(17)"}, {"sha": "bc246c919db806698cd11657fa48707dec7bd4ea", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/066416dabcdc6da2596da2c19a9876218c634435/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/066416dabcdc6da2596da2c19a9876218c634435/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=066416dabcdc6da2596da2c19a9876218c634435", "patch": "@@ -2323,8 +2323,8 @@ char arm_arch_name[] = \"__ARM_ARCH_PROFILE__\";\n \n const struct arm_fpu_desc all_fpus[] =\n {\n-#define ARM_FPU(NAME, FEATURES) \\\n-  { NAME, FEATURES },\n+#define ARM_FPU(NAME, ISA, FEATURES)\t\t\\\n+  { NAME, {ISA isa_nobit}, FEATURES },\n #include \"arm-fpus.def\"\n #undef ARM_FPU\n };"}, {"sha": "908e7638333f0f43d36942ed5b417837ab6c4592", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/066416dabcdc6da2596da2c19a9876218c634435/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/066416dabcdc6da2596da2c19a9876218c634435/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=066416dabcdc6da2596da2c19a9876218c634435", "patch": "@@ -363,6 +363,7 @@ typedef unsigned long arm_fpu_feature_set;\n extern const struct arm_fpu_desc\n {\n   const char *name;\n+  enum isa_feature isa_bits[isa_num_bits];\n   arm_fpu_feature_set features;\n } all_fpus[];\n "}]}