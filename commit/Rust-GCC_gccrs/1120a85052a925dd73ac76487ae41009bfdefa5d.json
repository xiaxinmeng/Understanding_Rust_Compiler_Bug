{"sha": "1120a85052a925dd73ac76487ae41009bfdefa5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEyMGE4NTA1MmE5MjVkZDczYWM3NjQ4N2FlNDEwMDliZmRlZmE1ZA==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2014-09-26T13:43:34Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2014-09-26T13:43:34Z"}, "message": "Fix -freport-bug patch.\n\n\tgcc/\n\t* gcc.c (try_generate_repro): Remove argument \"prog\".  Change all\n\tusers.\n\t(run_attempt): Handle errors of \"pex_run\" invocation.\n\nFixes bootstrap failure/compiler warnings:\n\n    [...]\n    ../../master/gcc/gcc.c: In function 'attempt_status run_attempt(const char**, const char*, const char*, int, int)':\n    ../../master/gcc/gcc.c:6319:15: error: variable 'errmsg' set but not used [-Werror=unused-but-set-variable]\n       const char *errmsg;\n                   ^\n    ../../master/gcc/gcc.c: At global scope:\n    ../../master/gcc/gcc.c:6412:33: error: unused parameter 'prog' [-Werror=unused-parameter]\n     try_generate_repro (const char *prog, const char **argv)\n                                     ^\n    cc1plus: all warnings being treated as errors\n    Makefile:1040: recipe for target 'gcc.o' failed\n    make[3]: *** [gcc.o] Error 1\n    make[3]: Leaving directory '/media/erich/home/thomas/tmp/gcc/hurd/master.build/gcc'\n    Makefile:4285: recipe for target 'all-stage2-gcc' failed\n    make[2]: *** [all-stage2-gcc] Error 2\n    make[2]: Leaving directory '/media/erich/home/thomas/tmp/gcc/hurd/master.build'\n    Makefile:21561: recipe for target 'stage2-bubble' failed\n    make[1]: *** [stage2-bubble] Error 2\n    make[1]: Leaving directory '/media/erich/home/thomas/tmp/gcc/hurd/master.build'\n    Makefile:892: recipe for target 'all' failed\n    make: *** [all] Error 2\n\nFrom-SVN: r215644", "tree": {"sha": "aa69c4578dc33a5ad9cde2b7702b2a2d6837a03d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa69c4578dc33a5ad9cde2b7702b2a2d6837a03d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1120a85052a925dd73ac76487ae41009bfdefa5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1120a85052a925dd73ac76487ae41009bfdefa5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1120a85052a925dd73ac76487ae41009bfdefa5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1120a85052a925dd73ac76487ae41009bfdefa5d/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a3125fc2339aea0f552800ae4a052af49e16e54e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3125fc2339aea0f552800ae4a052af49e16e54e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3125fc2339aea0f552800ae4a052af49e16e54e"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "623fb7d6ae3ab505ecaa208297043bd734e8c698", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1120a85052a925dd73ac76487ae41009bfdefa5d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1120a85052a925dd73ac76487ae41009bfdefa5d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1120a85052a925dd73ac76487ae41009bfdefa5d", "patch": "@@ -1,3 +1,9 @@\n+2014-09-26  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* gcc.c (try_generate_repro): Remove argument \"prog\".  Change all\n+\tusers.\n+\t(run_attempt): Handle errors of \"pex_run\" invocation.\n+\n 2014-09-26  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* config/aarch64/aarch64-linux.h (ASAN_CC1_SPEC): Define."}, {"sha": "47c4e283bcd07366c75debbc7276bb58198e9f98", "filename": "gcc/gcc.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1120a85052a925dd73ac76487ae41009bfdefa5d/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1120a85052a925dd73ac76487ae41009bfdefa5d/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=1120a85052a925dd73ac76487ae41009bfdefa5d", "patch": "@@ -253,7 +253,7 @@ static void init_gcc_specs (struct obstack *, const char *, const char *,\n static const char *convert_filename (const char *, int, int);\n #endif\n \n-static void try_generate_repro (const char *prog, const char **argv);\n+static void try_generate_repro (const char **argv);\n static const char *getenv_spec_function (int, const char **);\n static const char *if_exists_spec_function (int, const char **);\n static const char *if_exists_else_spec_function (int, const char **);\n@@ -2918,7 +2918,7 @@ execute (void)\n \t\t&& i == 0\n \t\t&& (p = strrchr (commands[0].argv[0], DIR_SEPARATOR))\n \t\t&& ! strncmp (p + 1, \"cc1\", 3))\n-\t      try_generate_repro (commands[0].prog, commands[0].argv);\n+\t      try_generate_repro (commands[0].argv);\n \t    if (WEXITSTATUS (status) > greatest_status)\n \t      greatest_status = WEXITSTATUS (status);\n \t    ret_code = -1;\n@@ -6332,6 +6332,16 @@ run_attempt (const char **new_argv, const char *out_temp,\n   errmsg = pex_run (pex, pex_flags, new_argv[0],\n \t\t    CONST_CAST2 (char *const *, const char **, &new_argv[1]), out_temp,\n \t\t    err_temp, &err);\n+  if (errmsg != NULL)\n+    {\n+      if (err == 0)\n+\tfatal_error (errmsg);\n+      else\n+\t{\n+\t  errno = err;\n+\t  pfatal_with_name (errmsg);\n+\t}\n+    }\n \n   if (!pex_get_status (pex, 1, &exit_status))\n     goto out;\n@@ -6409,7 +6419,7 @@ append_text (char *file, const char *str)\n    and preprocessed source code.  */\n \n static void\n-try_generate_repro (const char *prog, const char **argv)\n+try_generate_repro (const char **argv)\n {\n   int i, nargs, out_arg = -1, quiet = 0, attempt;\n   const char **new_argv;"}]}