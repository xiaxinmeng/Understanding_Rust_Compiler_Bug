{"sha": "d0405259e6be52fe612f8665fef12c4dbd2da0da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA0MDUyNTllNmJlNTJmZTYxMmY4NjY1ZmVmMTJjNGRiZDJkYTBkYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2005-01-18T06:17:55Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2005-01-18T06:17:55Z"}, "message": "re PR target/19424 (Error: suffix or operands invalid for `movlps')\n\n\tPR target/19424\n\t* config/i386/mmx.md (*movv2sf_internal_rex64, *movv2sf_internal):\n\tAdd movaps alternative for xmm reg->reg move.\n\nFrom-SVN: r93814", "tree": {"sha": "f302051dced985ae3470c70aee8e0f50dcf9cd44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f302051dced985ae3470c70aee8e0f50dcf9cd44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0405259e6be52fe612f8665fef12c4dbd2da0da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0405259e6be52fe612f8665fef12c4dbd2da0da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0405259e6be52fe612f8665fef12c4dbd2da0da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0405259e6be52fe612f8665fef12c4dbd2da0da/comments", "author": null, "committer": null, "parents": [{"sha": "f2fd382112219f61042c6521d4b288888d52f8bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2fd382112219f61042c6521d4b288888d52f8bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2fd382112219f61042c6521d4b288888d52f8bc"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "8e635506c871c88fd0fd269c2de1d4214798783d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0405259e6be52fe612f8665fef12c4dbd2da0da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0405259e6be52fe612f8665fef12c4dbd2da0da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0405259e6be52fe612f8665fef12c4dbd2da0da", "patch": "@@ -1,3 +1,9 @@\n+2005-01-18  Uros Bizjak  <uros@kss-loka.si>\n+\n+\tPR target/19424\n+\t* config/i386/mmx.md (*movv2sf_internal_rex64, *movv2sf_internal):\n+\tAdd movaps alternative for xmm reg->reg move.\n+\n 2005-01-17  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-dom.c (tree_ssa_dominator_optimize): Clear SSA_NAME_VALUE"}, {"sha": "ccee83d57dd6a4d0381e167e61ca43bc8a1ba4fe", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0405259e6be52fe612f8665fef12c4dbd2da0da/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0405259e6be52fe612f8665fef12c4dbd2da0da/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=d0405259e6be52fe612f8665fef12c4dbd2da0da", "patch": "@@ -121,9 +121,9 @@\n \n (define_insn \"*movv2sf_internal_rex64\"\n   [(set (match_operand:V2SF 0 \"nonimmediate_operand\"\n-\t\t\t\t\"=rm,r,*y ,*y ,m ,*y,Y ,x,x ,m,r,x\")\n+\t\t\t\t\"=rm,r,*y ,*y ,m ,*y,Y ,x,x,x,m,r,x\")\n         (match_operand:V2SF 1 \"vector_move_operand\"\n-\t\t\t\t\"Cr ,m ,C ,*ym,*y,Y ,*y,C,xm,x,x,r\"))]\n+\t\t\t\t\"Cr ,m ,C ,*ym,*y,Y ,*y,C,x,m,x,x,r\"))]\n   \"TARGET_64BIT && TARGET_MMX\n    && (GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\"\n   \"@\n@@ -135,18 +135,19 @@\n     movdq2q\\t{%1, %0|%0, %1}\n     movq2dq\\t{%1, %0|%0, %1}\n     xorps\\t%0, %0\n+    movaps\\t{%1, %0|%0, %1}\n     movlps\\t{%1, %0|%0, %1}\n     movlps\\t{%1, %0|%0, %1}\n     movd\\t{%1, %0|%0, %1}\n     movd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"imov,imov,mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,ssemov,ssemov,ssemov,ssemov,ssemov\")\n-   (set_attr \"mode\" \"DI,DI,DI,DI,DI,DI,DI,V4SF,V2SF,V2SF,DI,DI\")])\n+  [(set_attr \"type\" \"imov,imov,mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,ssemov,ssemov,ssemov,ssemov,ssemov,ssemov\")\n+   (set_attr \"mode\" \"DI,DI,DI,DI,DI,DI,DI,V4SF,V4SF,V2SF,V2SF,DI,DI\")])\n \n (define_insn \"*movv2sf_internal\"\n   [(set (match_operand:V2SF 0 \"nonimmediate_operand\"\n-\t\t\t\t\t\"=*y,*y ,m,*y,*Y,*x,*x ,m ,?r ,?m\")\n+\t\t\t\t\t\"=*y,*y ,m,*y,*Y,*x,*x,*x,m ,?r ,?m\")\n         (match_operand:V2SF 1 \"vector_move_operand\"\n-\t\t\t\t\t\"C ,*ym,*y,*Y,*y,C ,*xm,*x,irm,r\"))]\n+\t\t\t\t\t\"C ,*ym,*y,*Y,*y,C ,*x,m ,*x,irm,r\"))]\n   \"TARGET_MMX\n    && (GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\"\n   \"@\n@@ -156,12 +157,13 @@\n     movdq2q\\t{%1, %0|%0, %1}\n     movq2dq\\t{%1, %0|%0, %1}\n     xorps\\t%0, %0\n+    movaps\\t{%1, %0|%0, %1}\n     movlps\\t{%1, %0|%0, %1}\n     movlps\\t{%1, %0|%0, %1}\n     #\n     #\"\n-  [(set_attr \"type\" \"mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,ssemov,ssemov,ssemov,*,*\")\n-   (set_attr \"mode\" \"DI,DI,DI,DI,DI,V4SF,V2SF,V2SF,DI,DI\")])\n+  [(set_attr \"type\" \"mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,ssemov,ssemov,ssemov,ssemov,*,*\")\n+   (set_attr \"mode\" \"DI,DI,DI,DI,DI,V4SF,V4SF,V2SF,V2SF,DI,DI\")])\n \n ;; %%% This multiword shite has got to go.\n (define_split"}]}