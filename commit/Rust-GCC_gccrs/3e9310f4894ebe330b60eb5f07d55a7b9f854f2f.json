{"sha": "3e9310f4894ebe330b60eb5f07d55a7b9f854f2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U5MzEwZjQ4OTRlYmUzMzBiNjBlYjVmMDdkNTVhN2I5Zjg1NGYyZg==", "commit": {"author": {"name": "Maxim Kuvyrkov", "email": "maxim@kugelworks.com", "date": "2013-12-07T08:47:21Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2013-12-07T08:47:21Z"}, "message": "Cleanup definitions of libc-related target hooks.\n\n\t* config/bfin/uclinux.h, config/c6x/uclinux-elf.h,\n\t* config/lm32/uclinux-elf.h, config/m68k/uclinux.h,\n\t* config/moxie/uclinux.h (TARGET_LIBC_HAS_FUNCTION): Move definitions\n\tto linux.h.\n\t* config/linux-android.h (TARGET_HAS_IFUNC_P): Move definition\n\tto linux.h.\n\t* config/linux.h (TARGET_LIBC_HAS_FUNCTION, TARGET_HAS_IFUNC_P):\n\tDefine appropriately for Linux and uClinux targets.\n\nFrom-SVN: r205780", "tree": {"sha": "4cb5f17950d5d331b440312114e361ecb5adec94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cb5f17950d5d331b440312114e361ecb5adec94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f/comments", "author": null, "committer": null, "parents": [{"sha": "cc0c3bf9a4bad4df72deb36c7f95270a0c7f36d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc0c3bf9a4bad4df72deb36c7f95270a0c7f36d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc0c3bf9a4bad4df72deb36c7f95270a0c7f36d3"}], "stats": {"total": 62, "additions": 45, "deletions": 17}, "files": [{"sha": "ec5e34f5228b200ff99a9b8b7799249c6257faac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e9310f4894ebe330b60eb5f07d55a7b9f854f2f", "patch": "@@ -1,3 +1,14 @@\n+2013-12-07  Maxim Kuvyrkov  <maxim@kugelworks.com>\n+\n+\t* config/bfin/uclinux.h, config/c6x/uclinux-elf.h,\n+\t* config/lm32/uclinux-elf.h, config/m68k/uclinux.h,\n+\t* config/moxie/uclinux.h (TARGET_LIBC_HAS_FUNCTION): Move definitions\n+\tto linux.h.\n+\t* config/linux-android.h (TARGET_HAS_IFUNC_P): Move definition\n+\tto linux.h.\n+\t* config/linux.h (TARGET_LIBC_HAS_FUNCTION, TARGET_HAS_IFUNC_P):\n+\tDefine appropriately for Linux and uClinux targets.\n+\n 2013-12-07  Maxim Kuvyrkov  <maxim@kugelworks.com>\n \n \t* config/linux.c (linux_has_ifunc_p): Use correct test."}, {"sha": "10a52f353e77cb2146ad1d3d69828929126b6789", "filename": "gcc/config/bfin/uclinux.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f/gcc%2Fconfig%2Fbfin%2Fuclinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f/gcc%2Fconfig%2Fbfin%2Fuclinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fuclinux.h?ref=3e9310f4894ebe330b60eb5f07d55a7b9f854f2f", "patch": "@@ -36,6 +36,3 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_SUPPORTS_SYNC_CALLS 1\n \n #define SUBTARGET_FDPIC_NOT_SUPPORTED\n-\n-#undef TARGET_LIBC_HAS_FUNCTION\n-#define TARGET_LIBC_HAS_FUNCTION no_c99_libc_has_function"}, {"sha": "928c2b9ec061400346c26365585c25d84957198d", "filename": "gcc/config/c6x/uclinux-elf.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f/gcc%2Fconfig%2Fc6x%2Fuclinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f/gcc%2Fconfig%2Fc6x%2Fuclinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Fuclinux-elf.h?ref=3e9310f4894ebe330b60eb5f07d55a7b9f854f2f", "patch": "@@ -61,6 +61,3 @@\n \t\t    : \"=a\" (_beg)\t\t\t\t\t\\\n \t\t    : \"0\" (_beg), \"b\" (_end), \"b\" (_scno));\t\\\n }\n-\n-#undef TARGET_LIBC_HAS_FUNCTION\n-#define TARGET_LIBC_HAS_FUNCTION no_c99_libc_has_function"}, {"sha": "2c87c846cd73e6f63374652a1de292ad0e389482", "filename": "gcc/config/linux-android.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f/gcc%2Fconfig%2Flinux-android.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f/gcc%2Fconfig%2Flinux-android.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux-android.h?ref=3e9310f4894ebe330b60eb5f07d55a7b9f854f2f", "patch": "@@ -57,6 +57,3 @@\n \n #define ANDROID_ENDFILE_SPEC \\\n   \"%{shared: crtend_so%O%s;: crtend_android%O%s}\"\n-\n-#undef TARGET_HAS_IFUNC_P\n-#define TARGET_HAS_IFUNC_P linux_has_ifunc_p"}, {"sha": "d7ca300c8db2088b138378ca5d31589e5c2b8f10", "filename": "gcc/config/linux.h", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f/gcc%2Fconfig%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f/gcc%2Fconfig%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux.h?ref=3e9310f4894ebe330b60eb5f07d55a7b9f854f2f", "patch": "@@ -99,7 +99,31 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #undef TARGET_HAS_BIONIC\n #define TARGET_HAS_BIONIC (OPTION_BIONIC)\n \n+#if (DEFAULT_LIBC == LIBC_UCLIBC) && defined (SINGLE_LIBC) /* uClinux */\n+/* This is a *uclinux* target.  We don't define below macros to normal linux\n+   versions, because doing so would require *uclinux* targets to include\n+   linux.c, linux-protos.h, linux.opt, etc.  We could, alternatively, add\n+   these files to *uclinux* targets, but that would only pollute option list\n+   (add -mglibc, etc.) without adding any useful support.  */\n+\n+/* Define TARGET_LIBC_HAS_FUNCTION for *uclinux* targets to\n+   no_c99_libc_has_function, because uclibc does not, normally, have\n+   c99 runtime.  If, in special cases, uclibc does have c99 runtime,\n+   this should be defined to a new hook.  Also please note that for targets\n+   like *-linux-uclibc that similar check will also need to be added to\n+   linux_libc_has_function.  */\n+# undef TARGET_LIBC_HAS_FUNCTION\n+# define TARGET_LIBC_HAS_FUNCTION no_c99_libc_has_function\n+\n+#else /* !uClinux, i.e., normal Linux */\n+\n+/* IFUNCs are supportted by glibc, but not by uClibc or Bionic.  */\n+# undef TARGET_HAS_IFUNC_P\n+# define TARGET_HAS_IFUNC_P linux_has_ifunc_p\n+\n /* Determine what functions are present at the runtime;\n    this includes full c99 runtime and sincos.  */\n-#undef TARGET_LIBC_HAS_FUNCTION\n-#define TARGET_LIBC_HAS_FUNCTION linux_libc_has_function\n+# undef TARGET_LIBC_HAS_FUNCTION\n+# define TARGET_LIBC_HAS_FUNCTION linux_libc_has_function\n+\n+#endif"}, {"sha": "f2a94f19a237d2d3a3a792ebabdbdc3ef8961e6e", "filename": "gcc/config/lm32/uclinux-elf.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f/gcc%2Fconfig%2Flm32%2Fuclinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f/gcc%2Fconfig%2Flm32%2Fuclinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flm32%2Fuclinux-elf.h?ref=3e9310f4894ebe330b60eb5f07d55a7b9f854f2f", "patch": "@@ -76,6 +76,3 @@\n \n #undef  CC1_SPEC\n #define CC1_SPEC \"%{G*} %{!fno-PIC:-fPIC}\"\n-\n-#undef TARGET_LIBC_HAS_FUNCTION\n-#define TARGET_LIBC_HAS_FUNCTION no_c99_libc_has_function"}, {"sha": "8d7431265471a1a5587f6bcbcc1881b81f7f2aa0", "filename": "gcc/config/m68k/uclinux.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f/gcc%2Fconfig%2Fm68k%2Fuclinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f/gcc%2Fconfig%2Fm68k%2Fuclinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fuclinux.h?ref=3e9310f4894ebe330b60eb5f07d55a7b9f854f2f", "patch": "@@ -67,6 +67,3 @@ along with GCC; see the file COPYING3.  If not see\n    sections.  */\n #undef M68K_OFFSETS_MUST_BE_WITHIN_SECTIONS_P\n #define M68K_OFFSETS_MUST_BE_WITHIN_SECTIONS_P 1\n-\n-#undef TARGET_LIBC_HAS_FUNCTION\n-#define TARGET_LIBC_HAS_FUNCTION no_c99_libc_has_function"}, {"sha": "a29d38075c8987089bd9bd05822deeff2eeee5e7", "filename": "gcc/config/moxie/uclinux.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f/gcc%2Fconfig%2Fmoxie%2Fuclinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e9310f4894ebe330b60eb5f07d55a7b9f854f2f/gcc%2Fconfig%2Fmoxie%2Fuclinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fuclinux.h?ref=3e9310f4894ebe330b60eb5f07d55a7b9f854f2f", "patch": "@@ -32,3 +32,11 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #undef TARGET_LIBC_HAS_FUNCTION\n #define TARGET_LIBC_HAS_FUNCTION no_c99_libc_has_function\n+\n+/* Like the definition in gcc.c, but for purposes of uClinux, every link is\n+   static.  */\n+#define MFWRAP_SPEC \" %{fmudflap|fmudflapth: \\\n+ --wrap=malloc --wrap=free --wrap=calloc --wrap=realloc\\\n+ --wrap=mmap --wrap=munmap --wrap=alloca\\\n+ %{fmudflapth: --wrap=pthread_create\\\n+}} %{fmudflap|fmudflapth: --wrap=main}\""}]}