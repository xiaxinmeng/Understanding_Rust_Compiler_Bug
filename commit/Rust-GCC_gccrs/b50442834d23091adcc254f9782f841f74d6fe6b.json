{"sha": "b50442834d23091adcc254f9782f841f74d6fe6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjUwNDQyODM0ZDIzMDkxYWRjYzI1NGY5NzgyZjg0MWY3NGQ2ZmU2Yg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2003-03-11T21:26:12Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2003-03-11T21:26:12Z"}, "message": "rs6000.c (rs6000_override_options): Disable string instructions for e500.\n\n2003-03-11  Aldy Hernandez  <aldyh@redhat.com>\n\n        * config/rs6000/rs6000.c (rs6000_override_options): Disable string\n        instructions for e500.\n\nFrom-SVN: r64188", "tree": {"sha": "431b6ba8fef32f0cea682afbbe947d8add24f0df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/431b6ba8fef32f0cea682afbbe947d8add24f0df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b50442834d23091adcc254f9782f841f74d6fe6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b50442834d23091adcc254f9782f841f74d6fe6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b50442834d23091adcc254f9782f841f74d6fe6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b50442834d23091adcc254f9782f841f74d6fe6b/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd6a5007071b8507492dbbed2abb2d4e6a6f431d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd6a5007071b8507492dbbed2abb2d4e6a6f431d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd6a5007071b8507492dbbed2abb2d4e6a6f431d"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "c05eeb63634be2f972ffa7db3c7273ad9f76edf5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b50442834d23091adcc254f9782f841f74d6fe6b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b50442834d23091adcc254f9782f841f74d6fe6b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b50442834d23091adcc254f9782f841f74d6fe6b", "patch": "@@ -1,3 +1,8 @@\n+2003-03-11  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * config/rs6000/rs6000.c (rs6000_override_options): Disable string\n+        instructions for e500.\n+\n 2003-03-11  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* Makefile.in: Update."}, {"sha": "38a2e3212f85284644548b48cb2bc8741d869722", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b50442834d23091adcc254f9782f841f74d6fe6b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b50442834d23091adcc254f9782f841f74d6fe6b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=b50442834d23091adcc254f9782f841f74d6fe6b", "patch": "@@ -698,6 +698,11 @@ rs6000_override_options (default_cpu)\n   SUBSUBTARGET_OVERRIDE_OPTIONS;\n #endif\n \n+  /* The e500 does not have string instructions, and we set\n+     MASK_STRING above when optimizing for size.  */\n+  if (TARGET_SPE && (target_flags & MASK_STRING) != 0)\n+    target_flags = target_flags & ~MASK_STRING;\n+\n   /* Handle -m(no-)longcall option.  This is a bit of a cheap hack,\n      using TARGET_OPTIONS to handle a toggle switch, but we're out of\n      bits in target_flags so TARGET_SWITCHES cannot be used."}]}