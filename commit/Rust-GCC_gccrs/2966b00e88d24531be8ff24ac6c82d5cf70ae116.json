{"sha": "2966b00e88d24531be8ff24ac6c82d5cf70ae116", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk2NmIwMGU4OGQyNDUzMWJlOGZmMjRhYzZjODJkNWNmNzBhZTExNg==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-05-28T16:00:00Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-05-28T16:00:00Z"}, "message": "* config/arm/arm.c (arm_output_epilogue): Remove redundant code.\n\nFrom-SVN: r82361", "tree": {"sha": "a967c56fe5903307b9d9058d2e75f11218d8b716", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a967c56fe5903307b9d9058d2e75f11218d8b716"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2966b00e88d24531be8ff24ac6c82d5cf70ae116", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2966b00e88d24531be8ff24ac6c82d5cf70ae116", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2966b00e88d24531be8ff24ac6c82d5cf70ae116", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2966b00e88d24531be8ff24ac6c82d5cf70ae116/comments", "author": null, "committer": null, "parents": [{"sha": "3c7ad43e58196cebcb3e912b4c35b38bf74a1e19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c7ad43e58196cebcb3e912b4c35b38bf74a1e19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c7ad43e58196cebcb3e912b4c35b38bf74a1e19"}], "stats": {"total": 21, "additions": 6, "deletions": 15}, "files": [{"sha": "1ff5cd7c0dfa9338e8f92995dee0bc0ad0de28cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2966b00e88d24531be8ff24ac6c82d5cf70ae116/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2966b00e88d24531be8ff24ac6c82d5cf70ae116/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2966b00e88d24531be8ff24ac6c82d5cf70ae116", "patch": "@@ -1,3 +1,7 @@\n+2004-05-28  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/arm.c (arm_output_epilogue): Remove redundant code.\n+\n 2004-05-28  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/arm.c (thumb_force_lr_save): New function."}, {"sha": "6bbe8f6809888ff37083088ba8848873f8379680", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2966b00e88d24531be8ff24ac6c82d5cf70ae116/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2966b00e88d24531be8ff24ac6c82d5cf70ae116/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=2966b00e88d24531be8ff24ac6c82d5cf70ae116", "patch": "@@ -9704,6 +9704,7 @@ arm_output_epilogue (rtx sibling)\n \t}\n     }\n \n+  /* We may have already restored PC directly from the stack.  */\n   if (! really_return\n     || (ARM_FUNC_TYPE (func_type) == ARM_FT_NORMAL\n \t&& current_function_pretend_args_size == 0\n@@ -9714,8 +9715,6 @@ arm_output_epilogue (rtx sibling)\n   switch ((int) ARM_FUNC_TYPE (func_type))\n     {\n     case ARM_FT_EXCEPTION_HANDLER:\n-      /* Even in 26-bit mode we do a mov (rather than a movs)\n-\t because we don't have the PSR bits set in the address.  */\n       asm_fprintf (f, \"\\tmov\\t%r, %r\\n\", PC_REGNUM, EXCEPTION_LR_REGNUM);\n       break;\n \n@@ -9733,19 +9732,7 @@ arm_output_epilogue (rtx sibling)\n       break;\n \n     default:\n-      if (frame_pointer_needed)\n-\t/* If we used the frame pointer then the return address\n-\t   will have been loaded off the stack directly into the\n-\t   PC, so there is no need to issue a MOV instruction\n-\t   here.  */\n-\t;\n-      else if (current_function_pretend_args_size == 0\n-\t       && (saved_regs_mask & (1 << LR_REGNUM)))\n-\t/* Similarly we may have been able to load LR into the PC\n-\t   even if we did not create a stack frame.  */\n-\t;\n-      else\n-\tasm_fprintf (f, \"\\tmov\\t%r, %r\\n\", PC_REGNUM, LR_REGNUM);\n+      asm_fprintf (f, \"\\tmov\\t%r, %r\\n\", PC_REGNUM, LR_REGNUM);\n       break;\n     }\n "}]}