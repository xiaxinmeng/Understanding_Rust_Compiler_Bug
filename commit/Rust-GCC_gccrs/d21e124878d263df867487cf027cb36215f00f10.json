{"sha": "d21e124878d263df867487cf027cb36215f00f10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIxZTEyNDg3OGQyNjNkZjg2NzQ4N2NmMDI3Y2IzNjIxNWYwMGYxMA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-10-16T15:56:49Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-10-16T15:56:49Z"}, "message": "re PR middle-end/67966 (ICE in convert_move, at expr.c:282)\n\n\tPR middle-end/67966\n\t* gnat.dg/pack21.adb: New test.\n\t* gnat.dg/pack22.adb: Likewise.\n\t* gnat.dg/pack22_pkg.ad[sb]: New helper.\n\nFrom-SVN: r228917", "tree": {"sha": "a60ece2268b2f201c67f02699769ab06e1df87d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a60ece2268b2f201c67f02699769ab06e1df87d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d21e124878d263df867487cf027cb36215f00f10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d21e124878d263df867487cf027cb36215f00f10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d21e124878d263df867487cf027cb36215f00f10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d21e124878d263df867487cf027cb36215f00f10/comments", "author": null, "committer": null, "parents": [{"sha": "fe29811c31bcbe41b4808e2d021f6ab1282a269e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe29811c31bcbe41b4808e2d021f6ab1282a269e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe29811c31bcbe41b4808e2d021f6ab1282a269e"}], "stats": {"total": 141, "additions": 137, "deletions": 4}, "files": [{"sha": "8f71c0b1456aa1172e1b42630cbd6b6d9a30fa1a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d21e124878d263df867487cf027cb36215f00f10/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d21e124878d263df867487cf027cb36215f00f10/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d21e124878d263df867487cf027cb36215f00f10", "patch": "@@ -1,10 +1,17 @@\n+2015-10-16  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR middle-end/67966\n+\t* gnat.dg/pack21.adb: New test.\n+\t* gnat.dg/pack22.adb: Likewise.\n+\t* gnat.dg/pack22_pkg.ad[sb]: New helper.\n+\n 2015-10-16  Christian Bruel  <christian.bruel@st.com>\n \n \tPR target/67745\n-        * gcc.target/arm/no-align.c: New test.\n-        * gcc.target/arm/attr-align1.c: New test.\n-        * gcc.target/arm/attr-align2.c: New test.\n-        * gcc.target/arm/attr-align3.c: New test.\n+\t* gcc.target/arm/no-align.c: New test.\n+\t* gcc.target/arm/attr-align1.c: New test.\n+\t* gcc.target/arm/attr-align2.c: New test.\n+\t* gcc.target/arm/attr-align3.c: New test.\n \n 2015-10-11  Jan Hubicka  <hubicka@ucw.cz>\n "}, {"sha": "3749f445400a81421a79283fd30ca94f88f33d51", "filename": "gcc/testsuite/gnat.dg/pack21.adb", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d21e124878d263df867487cf027cb36215f00f10/gcc%2Ftestsuite%2Fgnat.dg%2Fpack21.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d21e124878d263df867487cf027cb36215f00f10/gcc%2Ftestsuite%2Fgnat.dg%2Fpack21.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpack21.adb?ref=d21e124878d263df867487cf027cb36215f00f10", "patch": "@@ -0,0 +1,29 @@\n+-- { dg-do compile }\n+-- { dg-options \"-gnatws\" }\n+\n+procedure Pack21 is\n+\n+  type Enum is (ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX,\n+                SEVEN, EIGHT, NINE, TEN, ELEVEN, TWELVE,\n+                THIRTEEN, FOURTEEN, FIFTEEN);\n+\n+  type Rec1 is record\n+    I1 : INTEGER range 0 .. 800;\n+    I2 : INTEGER range 0 .. 15 := 0;\n+    E  : Enum;\n+  end record;\n+  pragma PACK (Rec1);\n+\n+  type Rec2 is record\n+    F : Rec1;\n+  end record;\n+\n+  for Rec2 use record\n+    F at 0 range 2 .. 19;\n+  end record;\n+\n+  R1, R2 : Rec2;\n+\n+begin\n+  null;\n+end;"}, {"sha": "e84948abd2b1be84549bb547c6ffaaf76d9cfd09", "filename": "gcc/testsuite/gnat.dg/pack22.adb", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d21e124878d263df867487cf027cb36215f00f10/gcc%2Ftestsuite%2Fgnat.dg%2Fpack22.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d21e124878d263df867487cf027cb36215f00f10/gcc%2Ftestsuite%2Fgnat.dg%2Fpack22.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpack22.adb?ref=d21e124878d263df867487cf027cb36215f00f10", "patch": "@@ -0,0 +1,19 @@\n+-- { dg-do compile }\r\n+-- { dg-options \"-O -gnatws\" }\r\n+\r\n+with Pack22_Pkg; use Pack22_Pkg;\r\n+\r\n+procedure Pack22 is\r\n+\r\n+   package Role_Map is new Bit_Map_Generic;\r\n+\r\n+   type Role_List is new Role_Map.List;\r\n+   Roles_1 : Role_List;\r\n+   Roles_2 : Role_List;\r\n+   Roles_3 : Role_List;\r\n+\r\n+begin\r\n+   Temp_buffer := (others => 1);\r\n+   Temp_Buffer(2) := (0);\r\n+   Roles_1 := Roles_2 xor Roles_3;\r\n+end;\r"}, {"sha": "7531a1702a5a107a6c9ce9f69a28779acbddfe9b", "filename": "gcc/testsuite/gnat.dg/pack22_pkg.adb", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d21e124878d263df867487cf027cb36215f00f10/gcc%2Ftestsuite%2Fgnat.dg%2Fpack22_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d21e124878d263df867487cf027cb36215f00f10/gcc%2Ftestsuite%2Fgnat.dg%2Fpack22_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpack22_pkg.adb?ref=d21e124878d263df867487cf027cb36215f00f10", "patch": "@@ -0,0 +1,16 @@\n+package body Pack22_Pkg is\r\n+\r\n+   package body Bit_Map_Generic is\r\n+\r\n+      function \"xor\" (L, R : List) return List is\r\n+         Temp : List;\r\n+         for Temp'address use Temp_buffer'address;\r\n+      begin\r\n+         Temp.Bits := L.Bits xor R.Bits;\r\n+         Temp.Counter.Counter := 0;\r\n+         return Temp;\r\n+      end;\r\n+\r\n+   end Bit_Map_Generic;\r\n+\r\n+end Pack22_Pkg;\r"}, {"sha": "74053b38eb6b3fa82be553edcf11adaf4c158485", "filename": "gcc/testsuite/gnat.dg/pack22_pkg.ads", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d21e124878d263df867487cf027cb36215f00f10/gcc%2Ftestsuite%2Fgnat.dg%2Fpack22_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d21e124878d263df867487cf027cb36215f00f10/gcc%2Ftestsuite%2Fgnat.dg%2Fpack22_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpack22_pkg.ads?ref=d21e124878d263df867487cf027cb36215f00f10", "patch": "@@ -0,0 +1,62 @@\n+package Pack22_Pkg is\r\n+\r\n+   type byte is mod 256;\r\n+   Temp_buffer : array (0..8) of byte:= (others => 0);\r\n+   for Temp_buffer'Alignment use 2;\r\n+\r\n+   subtype Id is Short_integer;\r\n+\r\n+   generic\r\n+      Dummy : Integer := 0;\r\n+   package Bit_Map_Generic is\r\n+\r\n+      type List is private;\r\n+      function \"xor\" (L, R : List) return List;\r\n+\r\n+   private\r\n+      type Offset_T is range 0 .. Id'Last;\r\n+      type Counter_T is new short_integer;\r\n+      for Counter_T'Size use 16;\r\n+\r\n+      type Bit_List is array (Id range <>) of Boolean;\r\n+      pragma Pack (Bit_List);\r\n+\r\n+      type List_Counter_T (Is_Defined : Boolean := True) is\r\n+         record\r\n+            Dummy : Boolean := False;\r\n+            case Is_Defined is\r\n+               when True =>\r\n+                  Counter : Counter_T := 0;\r\n+               when False =>\r\n+                  null;\r\n+            end case;\r\n+         end record;\r\n+      for List_Counter_T use\r\n+         record\r\n+            Is_Defined at 0 range 0 .. 7;\r\n+            Dummy at 1 range 0 .. 7;\r\n+            Counter at 2 range 0 .. 15;\r\n+         end record;\r\n+\r\n+      type List is\r\n+         record\r\n+            Offset : Offset_T := Offset_T (1) - 1;\r\n+            Counter : List_Counter_T;\r\n+            Bits : Bit_List (1 .. 6);\r\n+         end record;\r\n+      for List use\r\n+         record\r\n+            Offset at 0 range 0 .. 15;\r\n+            Counter at 2 range 0 .. 31;\r\n+         end record;\r\n+\r\n+      type Iterator is\r\n+         record\r\n+            No_More_Id : Boolean := True;\r\n+            Current_Id : Id;\r\n+            The_List : List;\r\n+         end record;\r\n+\r\n+   end Bit_Map_Generic;\r\n+\r\n+end Pack22_Pkg;\r"}]}