{"sha": "9b7bc465c49bd8772041a0fd7467368d2b764d39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI3YmM0NjVjNDliZDg3NzIwNDFhMGZkNzQ2NzM2OGQyYjc2NGQzOQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2002-05-01T06:52:30Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2002-05-01T06:52:30Z"}, "message": "altivec-7.c: New.\n\n2002-05-01  Aldy Hernandez  <aldyh@redhat.com>\n\n        * gcc.dg/altivec-7.c: New.\n\n        * config/rs6000/altivec.h: Cleanup.\n\nFrom-SVN: r52988", "tree": {"sha": "9a8013622dbe5baeac3087265ce99397840d353f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a8013622dbe5baeac3087265ce99397840d353f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b7bc465c49bd8772041a0fd7467368d2b764d39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b7bc465c49bd8772041a0fd7467368d2b764d39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b7bc465c49bd8772041a0fd7467368d2b764d39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b7bc465c49bd8772041a0fd7467368d2b764d39/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "072a15d99be4d2c69d727aa2e8bef83951ea1243", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/072a15d99be4d2c69d727aa2e8bef83951ea1243", "html_url": "https://github.com/Rust-GCC/gccrs/commit/072a15d99be4d2c69d727aa2e8bef83951ea1243"}], "stats": {"total": 233, "additions": 196, "deletions": 37}, "files": [{"sha": "ee4572cde85d22a0b6f1f418565ef338e1a1b184", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7bc465c49bd8772041a0fd7467368d2b764d39/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7bc465c49bd8772041a0fd7467368d2b764d39/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b7bc465c49bd8772041a0fd7467368d2b764d39", "patch": "@@ -1,3 +1,9 @@\n+2002-05-01  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * gcc.dg/altivec-7.c: New.\n+\n+        * config/rs6000/altivec.h: Cleanup.\n+\n 2002-04-30  Aldy Hernandez  <aldyh@redhat.com>\n \n         * doc/invoke.texi (Option Summary): Add -mvrsave=."}, {"sha": "c9f5a472eb5e122e333814d707b23a914335cdfd", "filename": "gcc/config/rs6000/altivec.h", "status": "modified", "additions": 141, "deletions": 37, "changes": 178, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7bc465c49bd8772041a0fd7467368d2b764d39/gcc%2Fconfig%2Frs6000%2Faltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7bc465c49bd8772041a0fd7467368d2b764d39/gcc%2Fconfig%2Frs6000%2Faltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.h?ref=9b7bc465c49bd8772041a0fd7467368d2b764d39", "patch": "@@ -45,8 +45,8 @@ Boston, MA 02111-1307, USA.  */\n #define vector __vector\n \n #define bool signed\n-#define pixel short\n-#define __pixel short\n+#define pixel unsigned short\n+#define __pixel unsigned short\n \n /* Dummy prototype.  */\n extern int __altivec_link_error_invalid_argument ();\n@@ -1203,6 +1203,12 @@ vec_ld (int a1, signed int *a2)\n   return (vector signed int) __builtin_altivec_lvx (a1, (void *) a2);\n }\n \n+inline vector signed int\n+vec_ld (int a1, signed long *a2)\n+{\n+  return (vector signed int) __builtin_altivec_lvx (a1, (void *) a2);\n+}\n+\n inline vector unsigned int\n vec_ld (int a1, vector unsigned int *a2)\n {\n@@ -1215,6 +1221,12 @@ vec_ld (int a1, unsigned int *a2)\n   return (vector unsigned int) __builtin_altivec_lvx (a1, (void *) a2);\n }\n \n+inline vector unsigned int\n+vec_ld (int a1, unsigned long *a2)\n+{\n+  return (vector unsigned int) __builtin_altivec_lvx (a1, (void *) a2);\n+}\n+\n inline vector signed short\n vec_ld (int a1, vector signed short *a2)\n {\n@@ -1307,6 +1319,18 @@ vec_lde (int a1, unsigned int *a2)\n   return (vector unsigned int) __builtin_altivec_lvewx (a1, (void *) a2);\n }\n \n+inline vector signed int\n+vec_lde (int a1, signed long *a2)\n+{\n+  return (vector signed int) __builtin_altivec_lvewx (a1, (void *) a2);\n+}\n+\n+inline vector unsigned int\n+vec_lde (int a1, unsigned long *a2)\n+{\n+  return (vector unsigned int) __builtin_altivec_lvewx (a1, (void *) a2);\n+}\n+\n /* vec_lvewx */\n \n inline vector float\n@@ -1327,6 +1351,18 @@ vec_lvewx (int a1, unsigned int *a2)\n   return (vector unsigned int) __builtin_altivec_lvewx (a1, (void *) a2);\n }\n \n+inline vector signed int\n+vec_lvewx (int a1, signed long *a2)\n+{\n+  return (vector signed int) __builtin_altivec_lvewx (a1, (void *) a2);\n+}\n+\n+inline vector unsigned int\n+vec_lvewx (int a1, unsigned long *a2)\n+{\n+  return (vector unsigned int) __builtin_altivec_lvewx (a1, (void *) a2);\n+}\n+\n /* vec_lvehx */\n \n inline vector signed short\n@@ -1381,6 +1417,12 @@ vec_ldl (int a1, signed int *a2)\n   return (vector signed int) __builtin_altivec_lvxl (a1, (void *) a2);\n }\n \n+inline vector signed int\n+vec_ldl (int a1, signed long *a2)\n+{\n+  return (vector signed int) __builtin_altivec_lvxl (a1, (void *) a2);\n+}\n+\n inline vector unsigned int\n vec_ldl (int a1, vector unsigned int *a2)\n {\n@@ -1393,6 +1435,12 @@ vec_ldl (int a1, unsigned int *a2)\n   return (vector unsigned int) __builtin_altivec_lvxl (a1, (void *) a2);\n }\n \n+inline vector unsigned int\n+vec_ldl (int a1, unsigned long *a2)\n+{\n+  return (vector unsigned int) __builtin_altivec_lvxl (a1, (void *) a2);\n+}\n+\n inline vector signed short\n vec_ldl (int a1, vector signed short *a2)\n {\n@@ -2557,10 +2605,10 @@ vec_vpkuhum (vector unsigned short a1, vector unsigned short a2)\n \n /* vec_packpx */\n \n-inline vector signed short\n+inline vector unsigned short\n vec_packpx (vector unsigned int a1, vector unsigned int a2)\n {\n-  return (vector signed short) __builtin_altivec_vpkpx ((vector signed int) a1, (vector signed int) a2);\n+  return (vector unsigned short) __builtin_altivec_vpkpx ((vector signed int) a1, (vector signed int) a2);\n }\n \n /* vec_packs */\n@@ -4321,6 +4369,12 @@ vec_unpackh (vector signed short a1)\n   return (vector signed int) __builtin_altivec_vupkhsh ((vector signed short) a1);\n }\n \n+inline vector unsigned int\n+vec_unpackh (vector unsigned short a1)\n+{\n+  return (vector unsigned int) __builtin_altivec_vupkhpx ((vector signed short) a1);\n+}\n+\n /* vec_vupkhsh */\n \n inline vector signed int\n@@ -4332,7 +4386,7 @@ vec_vupkhsh (vector signed short a1)\n /* vec_vupkhpx */\n \n inline vector unsigned int\n-vec_vupkhpx (vector signed short a1)\n+vec_vupkhpx (vector unsigned short a1)\n {\n   return (vector unsigned int) __builtin_altivec_vupkhpx ((vector signed short) a1);\n }\n@@ -4354,7 +4408,7 @@ vec_unpackl (vector signed char a1)\n }\n \n inline vector unsigned int\n-vec_vupklpx (vector signed short a1)\n+vec_unpackl (vector unsigned short a1)\n {\n   return (vector unsigned int) __builtin_altivec_vupklpx ((vector signed short) a1);\n }\n@@ -4365,6 +4419,14 @@ vec_unpackl (vector signed short a1)\n   return (vector signed int) __builtin_altivec_vupklsh ((vector signed short) a1);\n }\n \n+/* vec_vupklpx */\n+\n+inline vector unsigned int\n+vec_vupklpx (vector unsigned short a1)\n+{\n+  return (vector unsigned int) __builtin_altivec_vupklpx ((vector signed short) a1);\n+}\n+\n /* vec_upklsh */\n \n inline vector signed int\n@@ -5595,7 +5657,7 @@ struct __vec_step_help<vector float>\n   static const int _S_elem = 4;\n };\n \n-#define vec_step(t)  __vec_step_help<t>::_S_elem\n+#define vec_step(t)  __vec_step_help<typeof(t)>::_S_elem\n \n #else /* not C++ */\n \n@@ -5623,13 +5685,13 @@ struct __vec_step_help<vector float>\n   __altivec_link_error_invalid_argument ())))\n \n #define vec_step(t) \\\n-  __ch (__builtin_types_compatible_p (t, vector signed int), 4,\t\t\\\n-  __ch (__builtin_types_compatible_p (t, vector unsigned int), 4,\t\\\n-  __ch (__builtin_types_compatible_p (t, vector signed short), 8,\t\\\n-  __ch (__builtin_types_compatible_p (t, vector unsigned short), 8,\t\\\n-  __ch (__builtin_types_compatible_p (t, vector signed char), 16,\t\\\n-  __ch (__builtin_types_compatible_p (t, vector unsigned char), 16,\t\\\n-  __ch (__builtin_types_compatible_p (t, vector float), 4,\t\t\\\n+  __ch (__builtin_types_compatible_p (typeof (t), vector signed int), 4,      \\\n+  __ch (__builtin_types_compatible_p (typeof (t), vector unsigned int), 4,    \\\n+  __ch (__builtin_types_compatible_p (typeof (t), vector signed short), 8,    \\\n+  __ch (__builtin_types_compatible_p (typeof (t), vector unsigned short), 8,  \\\n+  __ch (__builtin_types_compatible_p (typeof (t), vector signed char), 16,    \\\n+  __ch (__builtin_types_compatible_p (typeof (t), vector unsigned char), 16,  \\\n+  __ch (__builtin_types_compatible_p (typeof (t), vector float), 4,           \\\n   __altivec_link_error_invalid_argument ())))))))\n \n #define vec_vaddubm(a1, a2) \\\n@@ -5813,8 +5875,10 @@ __ch (__bin_args_eq (vector float, (a1), vector unsigned int, (a2)), \\\n       ((vector float) __builtin_altivec_vandc ((vector signed int) (a1), (vector signed int) (a2))), \\\n __ch (__bin_args_eq (vector unsigned int, (a1), vector float, (a2)), \\\n       ((vector float) __builtin_altivec_vandc ((vector signed int) (a1), (vector signed int) (a2))), \\\n-__ch (__bin_args_eq (vector unsigned int, (a1), vector unsigned int, (a2)), \\\n-      ((vector unsigned int) __builtin_altivec_vandc ((vector signed int) (a1), (vector signed int) (a2))), \\\n+__ch (__bin_args_eq (vector signed int, (a1), vector float, (a2)), \\\n+      ((vector float) __builtin_altivec_vandc ((vector signed int) (a1), (vector signed int) (a2))), \\\n+__ch (__bin_args_eq (vector float, (a1), vector signed int, (a2)), \\\n+      ((vector float) __builtin_altivec_vandc ((vector signed int) (a1), (vector signed int) (a2))), \\\n __ch (__bin_args_eq (vector signed int, (a1), vector unsigned int, (a2)), \\\n       ((vector unsigned int) __builtin_altivec_vandc ((vector signed int) (a1), (vector signed int) (a2))), \\\n __ch (__bin_args_eq (vector signed int, (a1), vector signed int, (a2)), \\\n@@ -5826,9 +5890,9 @@ __ch (__bin_args_eq (vector unsigned int, (a1), vector unsigned int, (a2)), \\\n __ch (__bin_args_eq (vector unsigned short, (a1), vector unsigned short, (a2)), \\\n       ((vector unsigned short) __builtin_altivec_vandc ((vector signed int) (a1), (vector signed int) (a2))), \\\n __ch (__bin_args_eq (vector signed short, (a1), vector unsigned short, (a2)), \\\n-      ((vector signed short) __builtin_altivec_vandc ((vector signed int) (a1), (vector signed int) (a2))), \\\n+      ((vector unsigned short) __builtin_altivec_vandc ((vector signed int) (a1), (vector signed int) (a2))), \\\n __ch (__bin_args_eq (vector unsigned short, (a1), vector signed short, (a2)), \\\n-      ((vector signed short) __builtin_altivec_vandc ((vector signed int) (a1), (vector signed int) (a2))), \\\n+      ((vector unsigned short) __builtin_altivec_vandc ((vector signed int) (a1), (vector signed int) (a2))), \\\n __ch (__bin_args_eq (vector unsigned short, (a1), vector unsigned short, (a2)), \\\n       ((vector signed short) __builtin_altivec_vandc ((vector signed int) (a1), (vector signed int) (a2))), \\\n __ch (__bin_args_eq (vector signed short, (a1), vector signed short, (a2)), \\\n@@ -5851,7 +5915,7 @@ __ch (__bin_args_eq (vector signed char, (a1), vector signed char, (a2)), \\\n       ((vector signed char) __builtin_altivec_vandc ((vector signed int) (a1), (vector signed int) (a2))), \\\n __ch (__bin_args_eq (vector unsigned char, (a1), vector signed char, (a2)), \\\n       ((vector signed char) __builtin_altivec_vandc ((vector signed int) (a1), (vector signed int) (a2))), \\\n-    __altivec_link_error_invalid_argument ()))))))))))))))))))))))\n+    __altivec_link_error_invalid_argument ())))))))))))))))))))))))\n \n #define vec_avg(a1, a2) \\\n __ch (__bin_args_eq (vector unsigned char, (a1), vector unsigned char, (a2)), \\\n@@ -6096,6 +6160,10 @@ __ch (__un_args_eq (unsigned int *, (b)), \\\n       ((vector unsigned int) __builtin_altivec_lvx ((a), (b))), \\\n __ch (__un_args_eq (unsigned int [], (b)), \\\n       ((vector unsigned int) __builtin_altivec_lvx ((a), (b))), \\\n+__ch (__un_args_eq (unsigned long *, (b)), \\\n+      ((vector unsigned int) __builtin_altivec_lvx ((a), (b))), \\\n+__ch (__un_args_eq (unsigned long [], (b)), \\\n+      ((vector unsigned int) __builtin_altivec_lvx ((a), (b))), \\\n __ch (__un_args_eq (vector signed int *, (b)), \\\n       ((vector signed int) __builtin_altivec_lvx ((a), (b))), \\\n __ch (__un_args_eq (vector signed int [], (b)), \\\n@@ -6104,6 +6172,10 @@ __ch (__un_args_eq (signed int *, (b)), \\\n       ((vector signed int) __builtin_altivec_lvx ((a), (b))), \\\n __ch (__un_args_eq (signed int [], (b)), \\\n       ((vector signed int) __builtin_altivec_lvx ((a), (b))), \\\n+__ch (__un_args_eq (signed long *, (b)), \\\n+      ((vector signed int) __builtin_altivec_lvx ((a), (b))), \\\n+__ch (__un_args_eq (signed long [], (b)), \\\n+      ((vector signed int) __builtin_altivec_lvx ((a), (b))), \\\n __ch (__un_args_eq (vector float *, (b)), \\\n       ((vector float) __builtin_altivec_lvx ((a), (b))), \\\n __ch (__un_args_eq (vector float [], (b)), \\\n@@ -6112,7 +6184,7 @@ __ch (__un_args_eq (float *, (b)), \\\n       ((vector float) __builtin_altivec_lvx ((a), (b))), \\\n __ch (__un_args_eq (float [], (b)), \\\n       ((vector float) __builtin_altivec_lvx ((a), (b))), \\\n-__altivec_link_error_invalid_argument ()))))))))))))))))))))))))))))\n+__altivec_link_error_invalid_argument ()))))))))))))))))))))))))))))))))\n \n #define vec_lde(a, b) \\\n __ch (__un_args_eq (unsigned char *, (b)), \\\n@@ -6131,6 +6203,14 @@ __ch (__un_args_eq (signed short *, (b)), \\\n       ((vector signed short) __builtin_altivec_lvehx ((a), (b))), \\\n __ch (__un_args_eq (signed short [], (b)), \\\n       ((vector signed short) __builtin_altivec_lvehx ((a), (b))), \\\n+__ch (__un_args_eq (unsigned long *, (b)), \\\n+      ((vector unsigned int) __builtin_altivec_lvewx ((a), (b))), \\\n+__ch (__un_args_eq (unsigned long [], (b)), \\\n+      ((vector unsigned int) __builtin_altivec_lvewx ((a), (b))), \\\n+__ch (__un_args_eq (signed long *, (b)), \\\n+      ((vector signed int) __builtin_altivec_lvewx ((a), (b))), \\\n+__ch (__un_args_eq (signed long [], (b)), \\\n+      ((vector signed int) __builtin_altivec_lvewx ((a), (b))), \\\n __ch (__un_args_eq (unsigned int *, (b)), \\\n       ((vector unsigned int) __builtin_altivec_lvewx ((a), (b))), \\\n __ch (__un_args_eq (unsigned int [], (b)), \\\n@@ -6143,7 +6223,7 @@ __ch (__un_args_eq (float *, (b)), \\\n       ((vector float) __builtin_altivec_lvewx ((a), (b))), \\\n __ch (__un_args_eq (float [], (b)), \\\n       ((vector float) __builtin_altivec_lvewx ((a), (b))), \\\n-__altivec_link_error_invalid_argument ()))))))))))))))\n+__altivec_link_error_invalid_argument ()))))))))))))))))))\n \n #define vec_lvewx(a, b) \\\n __ch (__un_args_eq (unsigned int *, (b)), \\\n@@ -6154,11 +6234,19 @@ __ch (__un_args_eq (signed int *, (b)), \\\n       ((vector signed int) __builtin_altivec_lvewx ((a), (b))), \\\n __ch (__un_args_eq (signed int [], (b)), \\\n       ((vector signed int) __builtin_altivec_lvewx ((a), (b))), \\\n+__ch (__un_args_eq (unsigned long *, (b)), \\\n+      ((vector unsigned int) __builtin_altivec_lvewx ((a), (b))), \\\n+__ch (__un_args_eq (unsigned long [], (b)), \\\n+      ((vector unsigned int) __builtin_altivec_lvewx ((a), (b))), \\\n+__ch (__un_args_eq (signed long *, (b)), \\\n+      ((vector signed int) __builtin_altivec_lvewx ((a), (b))), \\\n+__ch (__un_args_eq (signed long [], (b)), \\\n+      ((vector signed int) __builtin_altivec_lvewx ((a), (b))), \\\n __ch (__un_args_eq (float *, (b)), \\\n       ((vector float) __builtin_altivec_lvewx ((a), (b))), \\\n __ch (__un_args_eq (float [], (b)), \\\n       ((vector float) __builtin_altivec_lvewx ((a), (b))), \\\n-__altivec_link_error_invalid_argument ()))))))\n+__altivec_link_error_invalid_argument ()))))))))))\n \n #define vec_lvehx(a, b) \\\n __ch (__un_args_eq (unsigned short *, (b)), \\\n@@ -6223,6 +6311,10 @@ __ch (__un_args_eq (unsigned int *, (b)), \\\n       ((vector unsigned int) __builtin_altivec_lvxl ((a), (b))), \\\n __ch (__un_args_eq (unsigned int [], (b)), \\\n       ((vector unsigned int) __builtin_altivec_lvxl ((a), (b))), \\\n+__ch (__un_args_eq (unsigned long *, (b)), \\\n+      ((vector unsigned int) __builtin_altivec_lvxl ((a), (b))), \\\n+__ch (__un_args_eq (unsigned long [], (b)), \\\n+      ((vector unsigned int) __builtin_altivec_lvxl ((a), (b))), \\\n __ch (__un_args_eq (vector signed int *, (b)), \\\n       ((vector signed int) __builtin_altivec_lvxl ((a), (b))), \\\n __ch (__un_args_eq (vector signed int [], (b)), \\\n@@ -6231,6 +6323,10 @@ __ch (__un_args_eq (signed int *, (b)), \\\n       ((vector signed int) __builtin_altivec_lvxl ((a), (b))), \\\n __ch (__un_args_eq (signed int [], (b)), \\\n       ((vector signed int) __builtin_altivec_lvxl ((a), (b))), \\\n+__ch (__un_args_eq (signed long *, (b)), \\\n+      ((vector signed int) __builtin_altivec_lvxl ((a), (b))), \\\n+__ch (__un_args_eq (signed long [], (b)), \\\n+      ((vector signed int) __builtin_altivec_lvxl ((a), (b))), \\\n __ch (__un_args_eq (vector float *, (b)), \\\n       ((vector float) __builtin_altivec_lvxl ((a), (b))), \\\n __ch (__un_args_eq (vector float [], (b)), \\\n@@ -6239,7 +6335,7 @@ __ch (__un_args_eq (float *, (b)), \\\n       ((vector float) __builtin_altivec_lvxl ((a), (b))), \\\n __ch (__un_args_eq (float [], (b)), \\\n       ((vector float) __builtin_altivec_lvxl ((a), (b))), \\\n-__altivec_link_error_invalid_argument ()))))))))))))))))))))))))))))\n+__altivec_link_error_invalid_argument ()))))))))))))))))))))))))))))))))\n \n #define vec_loge(a1) __builtin_altivec_vlogefp ((a1))\n \n@@ -6524,7 +6620,7 @@ __ch (__tern_args_eq (vector signed char, (a1), vector unsigned char, (a2), vect\n       ((vector signed int) __builtin_altivec_vmsummbm ((vector signed char) (a1), (vector signed char) (a2), (vector signed int) (a3))), \\\n __altivec_link_error_invalid_argument ())\n \n-#define vec_msumubm(a1, a2, a3) \\\n+#define vec_vmsumubm(a1, a2, a3) \\\n __ch (__tern_args_eq (vector unsigned char, (a1), vector unsigned char, (a2), vector unsigned int, (a3)), \\\n       ((vector unsigned int) __builtin_altivec_vmsumubm ((vector signed char) (a1), (vector signed char) (a2), (vector signed int) (a3))), \\\n __altivec_link_error_invalid_argument ())\n@@ -6613,7 +6709,7 @@ __ch (__bin_args_eq (vector unsigned short, (a1), vector unsigned short, (a2)),\n       ((vector unsigned int) __builtin_altivec_vmulouh ((vector signed short) (a1), (vector signed short) (a2))), \\\n __altivec_link_error_invalid_argument ())\n \n-#define vec_mulosb(a1, a2) \\\n+#define vec_vmulosb(a1, a2) \\\n __ch (__bin_args_eq (vector signed char, (a1), vector signed char, (a2)), \\\n       ((vector signed short) __builtin_altivec_vmulosb ((vector signed char) (a1), (vector signed char) (a2))), \\\n __altivec_link_error_invalid_argument ())\n@@ -6703,7 +6799,10 @@ __ch (__bin_args_eq (vector unsigned short, (a1), vector unsigned short, (a2)),\n       ((vector unsigned char) __builtin_altivec_vpkuhum ((vector signed short) (a1), (vector signed short) (a2))), \\\n __altivec_link_error_invalid_argument ()))\n \n-#define vec_packpx(a1, a2) __builtin_altivec_vpkpx ((a1), (a2))\n+#define vec_packpx(a1, a2) \\\n+__ch (__bin_args_eq (vector unsigned int, (a1), vector unsigned int, (a2)), \\\n+  (vector unsigned short) __builtin_altivec_vpkpx ((vector signed int) (a1), (vector signed int) (a2)), \\\n+__altivec_link_error_invalid_argument ())\n \n #define vec_packs(a1, a2) \\\n __ch (__bin_args_eq (vector unsigned short, (a1), vector unsigned short, (a2)), \\\n@@ -7277,7 +7376,10 @@ __ch (__bin_args_eq (vector unsigned char, (a1), vector unsigned char, (a2)), \\\n       ((vector unsigned char) __builtin_altivec_vsububm ((vector signed char) (a1), (vector signed char) (a2))), \\\n __altivec_link_error_invalid_argument ()))))\n \n-#define vec_subc(a1, a2) ((vector unsigned int) __builtin_altivec_vsubcuw ((vector unsigned int) (a1), (vector unsigned int) (a2)))\n+#define vec_subc(a1, a2) \\\n+__ch (__bin_args_eq (vector unsigned int, (a1), vector unsigned int, (a2)), \\\n+  ((vector unsigned int) __builtin_altivec_vsubcuw ((vector signed int) (a1), (vector signed int) (a2))), \\\n+__altivec_link_error_invalid_argument ())\n \n #define vec_subs(a1, a2) \\\n __ch (__bin_args_eq (vector signed char, (a1), vector unsigned char, (a2)), \\\n@@ -7381,7 +7483,7 @@ __altivec_link_error_invalid_argument ())\n #define vec_unpackh(a1) \\\n __ch (__un_args_eq (vector signed char, (a1)), \\\n       ((vector signed short) __builtin_altivec_vupkhsb ((vector signed char) (a1))), \\\n-__ch (__un_args_eq (vector signed short, (a1)), \\\n+__ch (__un_args_eq (vector unsigned short, (a1)), \\\n       ((vector unsigned int) __builtin_altivec_vupkhpx ((vector signed short) (a1))), \\\n __ch (__un_args_eq (vector signed short, (a1)), \\\n       ((vector signed int) __builtin_altivec_vupkhsh ((vector signed short) (a1))), \\\n@@ -7393,7 +7495,7 @@ __ch (__un_args_eq (vector signed short, (a1)), \\\n __altivec_link_error_invalid_argument ())\n \n #define vec_vupkhpx(a1) \\\n-__ch (__un_args_eq (vector signed short, (a1)), \\\n+__ch (__un_args_eq (vector unsigned short, (a1)), \\\n       ((vector unsigned int) __builtin_altivec_vupkhpx ((vector signed short) (a1))), \\\n __altivec_link_error_invalid_argument ())\n \n@@ -7405,7 +7507,7 @@ __altivec_link_error_invalid_argument ())\n #define vec_unpackl(a1) \\\n __ch (__un_args_eq (vector signed char, (a1)), \\\n       ((vector signed short) __builtin_altivec_vupklsb ((vector signed char) (a1))), \\\n-__ch (__un_args_eq (vector signed short, (a1)), \\\n+__ch (__un_args_eq (vector unsigned short, (a1)), \\\n       ((vector unsigned int) __builtin_altivec_vupklpx ((vector signed short) (a1))), \\\n __ch (__un_args_eq (vector signed short, (a1)), \\\n       ((vector signed int) __builtin_altivec_vupklsh ((vector signed short) (a1))), \\\n@@ -7417,7 +7519,7 @@ __ch (__un_args_eq (vector signed short, (a1)), \\\n __altivec_link_error_invalid_argument ())\n \n #define vec_vupklpx(a1) \\\n-__ch (__un_args_eq (vector signed short, (a1)), \\\n+__ch (__un_args_eq (vector unsigned short, (a1)), \\\n       ((vector unsigned int) __builtin_altivec_vupklpx ((vector signed short) (a1))), \\\n __altivec_link_error_invalid_argument ())\n \n@@ -7433,10 +7535,12 @@ __ch (__bin_args_eq (vector float, ((a1)), vector unsigned int, ((a2))), \\\n       ((vector float) __builtin_altivec_vxor ((vector signed int) ((a1)), (vector signed int) ((a2)))), \\\n __ch (__bin_args_eq (vector unsigned int, ((a1)), vector float, ((a2))), \\\n       ((vector float) __builtin_altivec_vxor ((vector signed int) ((a1)), (vector signed int) ((a2)))), \\\n+__ch (__bin_args_eq (vector signed int, ((a1)), vector float, ((a2))), \\\n+      ((vector float) __builtin_altivec_vxor ((vector signed int) ((a1)), (vector signed int) ((a2)))), \\\n+__ch (__bin_args_eq (vector float, ((a1)), vector signed int, ((a2))), \\\n+      ((vector float) __builtin_altivec_vxor ((vector signed int) ((a1)), (vector signed int) ((a2)))), \\\n __ch (__bin_args_eq (vector signed int, ((a1)), vector signed int, ((a2))), \\\n       ((vector signed int) __builtin_altivec_vxor ((vector signed int) ((a1)), (vector signed int) ((a2)))), \\\n-__ch (__bin_args_eq (vector unsigned int, ((a1)), vector unsigned int, ((a2))), \\\n-      ((vector unsigned int) __builtin_altivec_vxor ((vector signed int) ((a1)), (vector signed int) ((a2)))), \\\n __ch (__bin_args_eq (vector signed int, ((a1)), vector unsigned int, ((a2))), \\\n       ((vector unsigned int) __builtin_altivec_vxor ((vector signed int) ((a1)), (vector signed int) ((a2)))), \\\n __ch (__bin_args_eq (vector unsigned int, ((a1)), vector signed int, ((a2))), \\\n@@ -7446,9 +7550,9 @@ __ch (__bin_args_eq (vector unsigned int, ((a1)), vector unsigned int, ((a2))),\n __ch (__bin_args_eq (vector unsigned short, ((a1)), vector unsigned short, ((a2))), \\\n       ((vector unsigned short) __builtin_altivec_vxor ((vector signed int) ((a1)), (vector signed int) ((a2)))), \\\n __ch (__bin_args_eq (vector signed short, ((a1)), vector unsigned short, ((a2))), \\\n-      ((vector signed short) __builtin_altivec_vxor ((vector signed int) ((a1)), (vector signed int) ((a2)))), \\\n+      ((vector unsigned short) __builtin_altivec_vxor ((vector signed int) ((a1)), (vector signed int) ((a2)))), \\\n __ch (__bin_args_eq (vector unsigned short, ((a1)), vector signed short, ((a2))), \\\n-      ((vector signed short) __builtin_altivec_vxor ((vector signed int) ((a1)), (vector signed int) ((a2)))), \\\n+      ((vector unsigned short) __builtin_altivec_vxor ((vector signed int) ((a1)), (vector signed int) ((a2)))), \\\n __ch (__bin_args_eq (vector unsigned short, ((a1)), vector unsigned short, ((a2))), \\\n       ((vector signed short) __builtin_altivec_vxor ((vector signed int) ((a1)), (vector signed int) ((a2)))), \\\n __ch (__bin_args_eq (vector signed short, ((a1)), vector signed short, ((a2))), \\\n@@ -7470,8 +7574,8 @@ __ch (__bin_args_eq (vector unsigned char, ((a1)), vector unsigned char, ((a2)))\n __ch (__bin_args_eq (vector signed char, ((a1)), vector unsigned char, ((a2))), \\\n       ((vector signed char) __builtin_altivec_vxor ((vector signed int) ((a1)), (vector signed int) ((a2)))), \\\n __ch (__bin_args_eq (vector unsigned char, ((a1)), vector signed char, ((a2))), \\\n-      ((vector signed char) __builtin_altivec_vxor ((vector signed int) ((a1)), (vector signed int) ((a2)))), \\\n-    __altivec_link_error_invalid_argument ()))))))))))))))))))))))\n+      ((vector unsigned char) __builtin_altivec_vxor ((vector signed int) ((a1)), (vector signed int) ((a2)))), \\\n+    __altivec_link_error_invalid_argument ())))))))))))))))))))))))\n \n /* Predicates.  */\n "}, {"sha": "3e14731d41ca7ed0efe959e9915b994fb5a248b9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7bc465c49bd8772041a0fd7467368d2b764d39/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7bc465c49bd8772041a0fd7467368d2b764d39/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9b7bc465c49bd8772041a0fd7467368d2b764d39", "patch": "@@ -1,3 +1,7 @@\n+2002-05-01  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * gcc.dg/altivec-7.c: New.\n+\n 2002-04-29  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.dg/parse/typedef1.C: New test."}, {"sha": "7e118d960cae91f2e89131996bfdddf3b178a58a", "filename": "gcc/testsuite/gcc.dg/altivec-7.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7bc465c49bd8772041a0fd7467368d2b764d39/gcc%2Ftestsuite%2Fgcc.dg%2Faltivec-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7bc465c49bd8772041a0fd7467368d2b764d39/gcc%2Ftestsuite%2Fgcc.dg%2Faltivec-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Faltivec-7.c?ref=9b7bc465c49bd8772041a0fd7467368d2b764d39", "patch": "@@ -0,0 +1,45 @@\n+/* Origin: Aldy Hernandez  <aldyh@redhat.com>  */\n+\n+/* { dg-do compile { target powerpc-*-* } } */\n+/* { dg-options \"-maltivec\" } */\n+\n+#include <altivec.h>\n+\n+long **longp;\n+int *var_int;\n+unsigned long **ulongp;\n+vector pixel *varpixel;\n+vector signed char *vecchar;\n+vector signed long *vecint;\n+vector signed short *vecshort;\n+vector unsigned char *vecuchar;\n+vector unsigned long *vecuint;\n+vector unsigned short *vecushort;\n+vector float *vecfloat;\n+\n+int main ()\n+{\n+  *vecfloat++ = vec_andc(vecint[0], vecfloat[1]);\n+  *vecfloat++ = vec_andc(vecfloat[0], vecint[1]);\n+  *vecfloat++ = vec_vxor(vecint[0], vecfloat[1]);\n+  *vecfloat++ = vec_vxor(vecfloat[0], vecint[1]);\n+  *varpixel++ = vec_packpx(vecuint[0], vecuint[1]);\n+  *varpixel++ = vec_vpkpx(vecuint[0], vecuint[1]);\n+  *vecshort++ = vec_vmulosb(vecchar[0], vecchar[1]);\n+  *vecint++ = vec_ld(var_int[0], longp[1]);\n+  *vecint++ = vec_lde(var_int[0], longp[1]);\n+  *vecint++ = vec_ldl(var_int[0], longp[1]);\n+  *vecint++ = vec_lvewx(var_int[0], longp[1]);\n+  *vecint++ = vec_unpackh(vecshort[0]);\n+  *vecint++ = vec_unpackl(vecshort[0]);\n+  *vecushort++ = vec_andc(vecshort[0], vecushort[1]);\n+  *vecushort++ = vec_andc(vecushort[0], vecshort[1]);\n+  *vecushort++ = vec_vxor(vecshort[0], vecushort[1]);\n+  *vecushort++ = vec_vxor(vecushort[0], vecshort[1]);\n+  *vecuint++ = vec_ld(var_int[0], ulongp[1]);\n+  *vecuint++ = vec_lvx(var_int[0], ulongp[1]);\n+  *vecuint++ = vec_vmsumubm(vecuchar[0], vecuchar[1], vecuint[2]);\n+  *vecuchar++ = vec_xor(vecuchar[0], vecchar[1]);\n+\n+  return 0;\n+}"}]}