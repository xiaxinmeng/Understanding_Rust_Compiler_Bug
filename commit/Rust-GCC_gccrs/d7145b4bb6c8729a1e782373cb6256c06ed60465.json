{"sha": "d7145b4bb6c8729a1e782373cb6256c06ed60465", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcxNDViNGJiNmM4NzI5YTFlNzgyMzczY2I2MjU2YzA2ZWQ2MDQ2NQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2021-03-31T09:35:29Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2021-03-31T09:35:29Z"}, "message": "Small refactoring of cgraph_node::release_body\n\n\tPR lto/99447\n\t* cgraph.c (cgraph_node::release_body): Remove all callers and\n\treferences.\n\t* cgraphclones.c (cgraph_node::materialize_clone): Do not do it here.\n\t* cgraphunit.c (cgraph_node::expand): And here.", "tree": {"sha": "ac5434e0f577133bb748f64406e070cb172afdbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac5434e0f577133bb748f64406e070cb172afdbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7145b4bb6c8729a1e782373cb6256c06ed60465", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7145b4bb6c8729a1e782373cb6256c06ed60465", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7145b4bb6c8729a1e782373cb6256c06ed60465", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7145b4bb6c8729a1e782373cb6256c06ed60465/comments", "author": null, "committer": null, "parents": [{"sha": "c3c616747a615589d38aff92981eacbf932eb5c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c616747a615589d38aff92981eacbf932eb5c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3c616747a615589d38aff92981eacbf932eb5c6"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "b77c676a58a96430a4ca11ea09976fe8f8de8bd1", "filename": "gcc/cgraph.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7145b4bb6c8729a1e782373cb6256c06ed60465/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7145b4bb6c8729a1e782373cb6256c06ed60465/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=d7145b4bb6c8729a1e782373cb6256c06ed60465", "patch": "@@ -1860,6 +1860,9 @@ cgraph_node::release_body (bool keep_arguments)\n       lto_free_function_in_decl_state_for_node (this);\n       lto_file_data = NULL;\n     }\n+  gcc_assert (!clones);\n+  remove_callees ();\n+  remove_all_references ();\n }\n \n /* Remove function from symbol table.  */"}, {"sha": "9f86463b42dbef4f138931c3272e36b485640c62", "filename": "gcc/cgraphclones.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7145b4bb6c8729a1e782373cb6256c06ed60465/gcc%2Fcgraphclones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7145b4bb6c8729a1e782373cb6256c06ed60465/gcc%2Fcgraphclones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.c?ref=d7145b4bb6c8729a1e782373cb6256c06ed60465", "patch": "@@ -1143,11 +1143,7 @@ cgraph_node::materialize_clone ()\n   /* Function is no longer clone.  */\n   remove_from_clone_tree ();\n   if (!this_clone_of->analyzed && !this_clone_of->clones)\n-    {\n-      this_clone_of->release_body ();\n-      this_clone_of->remove_callees ();\n-      this_clone_of->remove_all_references ();\n-    }\n+    this_clone_of->release_body ();\n }\n \n #include \"gt-cgraphclones.h\""}, {"sha": "0b70e4d4fde8bacf48359d7f0144239950eccc4c", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7145b4bb6c8729a1e782373cb6256c06ed60465/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7145b4bb6c8729a1e782373cb6256c06ed60465/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=d7145b4bb6c8729a1e782373cb6256c06ed60465", "patch": "@@ -1892,10 +1892,6 @@ cgraph_node::expand (void)\n      comdat groups.  */\n   assemble_thunks_and_aliases ();\n   release_body ();\n-  /* Eliminate all call edges.  This is important so the GIMPLE_CALL no longer\n-     points to the dead function body.  */\n-  remove_callees ();\n-  remove_all_references ();\n }\n \n /* Node comparator that is responsible for the order that corresponds"}]}