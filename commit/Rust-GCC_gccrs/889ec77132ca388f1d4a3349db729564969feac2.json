{"sha": "889ec77132ca388f1d4a3349db729564969feac2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg5ZWM3NzEzMmNhMzg4ZjFkNGEzMzQ5ZGI3Mjk1NjQ5NjlmZWFjMg==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-06-06T22:09:47Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-06-06T22:09:47Z"}, "message": "In gcc/cp/: 2011-06-06 Nicola Pero <nicola.pero@meta-innovation.com>,\n\nIn gcc/cp/:\n2011-06-06  Nicola Pero  <nicola.pero@meta-innovation.com>,\n\n\tPR obj-c++/48275\n\t* parser.c (cp_parser_objc_at_property_declaration): Allow setter\n\tand getter names to use all the allowed method names.\n\nIn gcc/testsuite/:\n2011-06-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\tPR objc-++/48275\n\t* obj-c++.dg/property/cxx-property-1.mm: New.\t\n\t* obj-c++.dg/property/cxx-property-2.mm: New.\n\nFrom-SVN: r174726", "tree": {"sha": "a941dba39e61627d0d4887a796b9d97673b3dab4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a941dba39e61627d0d4887a796b9d97673b3dab4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/889ec77132ca388f1d4a3349db729564969feac2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/889ec77132ca388f1d4a3349db729564969feac2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/889ec77132ca388f1d4a3349db729564969feac2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/889ec77132ca388f1d4a3349db729564969feac2/comments", "author": null, "committer": null, "parents": [{"sha": "a651bcbe5e945d5e6f4f9597b400040bed984460", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a651bcbe5e945d5e6f4f9597b400040bed984460", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a651bcbe5e945d5e6f4f9597b400040bed984460"}], "stats": {"total": 62, "additions": 55, "deletions": 7}, "files": [{"sha": "c3826e5559c11964b78427ddbfa87aed4aab267b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/889ec77132ca388f1d4a3349db729564969feac2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/889ec77132ca388f1d4a3349db729564969feac2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=889ec77132ca388f1d4a3349db729564969feac2", "patch": "@@ -1,3 +1,9 @@\n+2011-06-06  Nicola Pero  <nicola.pero@meta-innovation.com>,\n+\n+\tPR obj-c++/48275\n+\t* parser.c (cp_parser_objc_at_property_declaration): Allow setter\n+\tand getter names to use all the allowed method names.\n+\n 2011-06-06  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/49298"}, {"sha": "1d182a396b169bcb4141d20c71f8a5ed94d29789", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/889ec77132ca388f1d4a3349db729564969feac2/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/889ec77132ca388f1d4a3349db729564969feac2/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=889ec77132ca388f1d4a3349db729564969feac2", "patch": "@@ -23187,7 +23187,7 @@ cp_parser_objc_at_property_declaration (cp_parser *parser)\n \t\t  break;\n \t\t}\n \t      cp_lexer_consume_token (parser->lexer); /* eat the = */\n-\t      if (cp_lexer_next_token_is_not (parser->lexer, CPP_NAME))\n+\t      if (!cp_parser_objc_selector_p (cp_lexer_peek_token (parser->lexer)->type))\n \t\t{\n \t\t  cp_parser_error (parser, \"expected identifier\");\n \t\t  syntax_error = true;\n@@ -23196,10 +23196,12 @@ cp_parser_objc_at_property_declaration (cp_parser *parser)\n \t      if (keyword == RID_SETTER)\n \t\t{\n \t\t  if (property_setter_ident != NULL_TREE)\n-\t\t    cp_parser_error (parser, \"the %<setter%> attribute may only be specified once\");\n+\t\t    {\n+\t\t      cp_parser_error (parser, \"the %<setter%> attribute may only be specified once\");\n+\t\t      cp_lexer_consume_token (parser->lexer);\n+\t\t    }\n \t\t  else\n-\t\t    property_setter_ident = cp_lexer_peek_token (parser->lexer)->u.value;\n-\t\t  cp_lexer_consume_token (parser->lexer);\n+\t\t    property_setter_ident = cp_parser_objc_selector (parser);\n \t\t  if (cp_lexer_next_token_is_not (parser->lexer, CPP_COLON))\n \t\t    cp_parser_error (parser, \"setter name must terminate with %<:%>\");\n \t\t  else\n@@ -23208,10 +23210,12 @@ cp_parser_objc_at_property_declaration (cp_parser *parser)\n \t      else\n \t\t{\n \t\t  if (property_getter_ident != NULL_TREE)\n-\t\t    cp_parser_error (parser, \"the %<getter%> attribute may only be specified once\");\n+\t\t    {\n+\t\t      cp_parser_error (parser, \"the %<getter%> attribute may only be specified once\");\n+\t\t      cp_lexer_consume_token (parser->lexer);\n+\t\t    }\n \t\t  else\n-\t\t    property_getter_ident = cp_lexer_peek_token (parser->lexer)->u.value;\n-\t\t  cp_lexer_consume_token (parser->lexer);\n+\t\t    property_getter_ident = cp_parser_objc_selector (parser);\n \t\t}\n \t      break;\n \t    default:"}, {"sha": "889ba09d7006a02082a8c8adbacd7a68d2ae563b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/889ec77132ca388f1d4a3349db729564969feac2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/889ec77132ca388f1d4a3349db729564969feac2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=889ec77132ca388f1d4a3349db729564969feac2", "patch": "@@ -1,3 +1,9 @@\n+2011-06-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\tPR objc-++/48275\n+\t* obj-c++.dg/property/cxx-property-1.mm: New.\t\n+\t* obj-c++.dg/property/cxx-property-2.mm: New.\n+\n 2011-06-06  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/regress/ptrmem1.C: New."}, {"sha": "3c6f93e2a42119f0c97763bd9f20fd97e10b4256", "filename": "gcc/testsuite/obj-c++.dg/property/cxx-property-1.mm", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/889ec77132ca388f1d4a3349db729564969feac2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fcxx-property-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/889ec77132ca388f1d4a3349db729564969feac2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fcxx-property-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fcxx-property-1.mm?ref=889ec77132ca388f1d4a3349db729564969feac2", "patch": "@@ -0,0 +1,10 @@\n+/* Testcase from PR obj-c++/48275.  */\n+/* { dg-do compile } */\n+\n+@interface Test\n+{\n+        int ns;\n+}\n+@property (getter=namespace) int ns;\n+\n+@end"}, {"sha": "4e085b3982493b9addb2026e7b60d86f5c19539c", "filename": "gcc/testsuite/obj-c++.dg/property/cxx-property-2.mm", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/889ec77132ca388f1d4a3349db729564969feac2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fcxx-property-2.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/889ec77132ca388f1d4a3349db729564969feac2/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fcxx-property-2.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproperty%2Fcxx-property-2.mm?ref=889ec77132ca388f1d4a3349db729564969feac2", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+\n+/* All these C++ keywords are acceptable in ObjC method names, hence\n+   should be accepted for property getters and setters.  */\n+\n+@interface Test\n+{\n+  Class isa;\n+}\n+@property (getter=namespace) int p0;\n+@property (setter=namespace:) int p1;\n+@property (getter=and) int p2;\n+@property (setter=and:) int p3;\n+@property (getter=class) int p4;\n+@property (setter=class:) int p5;\n+@property (getter=new) int p6;\n+@property (setter=new:) int p7;\n+@property (getter=delete) int p8;\n+@property (setter=delete:) int p9;\n+@property (getter=delete) int p10;\n+@property (setter=delete:) int p11;\n+@end"}]}