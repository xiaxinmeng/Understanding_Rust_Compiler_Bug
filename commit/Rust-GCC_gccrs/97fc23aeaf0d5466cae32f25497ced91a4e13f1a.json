{"sha": "97fc23aeaf0d5466cae32f25497ced91a4e13f1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdmYzIzYWVhZjBkNTQ2NmNhZTMyZjI1NDk3Y2VkOTFhNGUxM2YxYQ==", "commit": {"author": {"name": "Basile Starynkevitch", "email": "bstarynk@gcc.gnu.org", "date": "2009-05-31T14:59:41Z"}, "committer": {"name": "Basile Starynkevitch", "email": "bstarynk@gcc.gnu.org", "date": "2009-05-31T14:59:41Z"}, "message": "ggcplug.c: moved comment.\n\n\n2009-05-31  Basile Starynkevitch  <basile@starynkevitch.net>\n\n\t* gcc/testsuite/gcc.dg/plugin/ggcplug.c: moved comment.\n\t(plugin_init): fixed typo, declared i, returned 0 at end.\n\n\t[also moved an entry from gcc/ChangeLog to gcc/testsuite/ChangeLog]\n\nFrom-SVN: r148015", "tree": {"sha": "fb0f865ebfd45c85456aa58ff10afe9ff29d7cce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb0f865ebfd45c85456aa58ff10afe9ff29d7cce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97fc23aeaf0d5466cae32f25497ced91a4e13f1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97fc23aeaf0d5466cae32f25497ced91a4e13f1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97fc23aeaf0d5466cae32f25497ced91a4e13f1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97fc23aeaf0d5466cae32f25497ced91a4e13f1a/comments", "author": null, "committer": null, "parents": [{"sha": "405e8b492d09dc293d7e9b0e6292e506c5f31344", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/405e8b492d09dc293d7e9b0e6292e506c5f31344", "html_url": "https://github.com/Rust-GCC/gccrs/commit/405e8b492d09dc293d7e9b0e6292e506c5f31344"}], "stats": {"total": 38, "additions": 25, "deletions": 13}, "files": [{"sha": "40dca074956702bff7f6d90debd7ce841e50c35a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97fc23aeaf0d5466cae32f25497ced91a4e13f1a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97fc23aeaf0d5466cae32f25497ced91a4e13f1a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=97fc23aeaf0d5466cae32f25497ced91a4e13f1a", "patch": "@@ -660,10 +660,6 @@\n \t(Interacting with the GCC Garbage Collector): Added new section.\n \t(Giving information about a plugin): Added new section for\n \tPLUGIN_INFO.\n-\t* testsuite/gcc.dg/plugin/plugin.exp: Added ggcplug.c test plugin\n-\twith ggcplug-test-1.c for testing PLUGIN_GGC_MARKING etc...\n-\t* testsuite/gcc.dg/plugin/ggcplug-test-1.c: Added new file.\n-\t* testsuite/gcc.dg/plugin/ggcplug.c: Added new file.\n \t* ggc.h (ggc_register_root_tab): Added declaration.\n \t* gcc-plugin.h (PLUGIN_GGC_START, PLUGIN_GGC_MARKING)\n \t(PLUGIN_GGC_END, PLUGIN_REGISTER_GGC_ROOTS): Added new events."}, {"sha": "10af18ea0da5bf4b3c754ec953d7c441b4d436d9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97fc23aeaf0d5466cae32f25497ced91a4e13f1a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97fc23aeaf0d5466cae32f25497ced91a4e13f1a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=97fc23aeaf0d5466cae32f25497ced91a4e13f1a", "patch": "@@ -1,3 +1,9 @@\n+\n+2009-05-31  Basile Starynkevitch  <basile@starynkevitch.net>\n+\n+\t* gcc.dg/plugin/ggcplug.c: moved comment.\n+\t(plugin_init): fixed typo, declared i, returned 0 at end.\n+\n 2009-05-31  Ira Rosen  <irar@il.ibm.com>\n \n \tPR testsuite/40244\n@@ -132,9 +138,9 @@\n \tpatterns to reflect frontend changes.\n \t* gfortran.dg/vector_subscript_4.f90: Likewise.\n \n-2009-05-27  Olivier Hainque  <hainque@adacore.com>\t\n+2009-05-27  Olivier Hainque  <hainque@adacore.com>\n \t    Eric Botcazou  <botcazou@adacore.com>\n-    \n+\n \t* gcc.c-torture/execute/align-nest.c: New testcase.\n \t* gnat.dg/misaligned_nest.adb: New testcase.\n \n@@ -160,6 +166,13 @@\n \t* gfortran.dg/c_f_pointer_shape_tests_4.f03:  New file.\n \t* gfortran.dg/c_f_pointer_shape_tests_4_driver.c:  New file.\n \n+2009-05-26  Basile Starynkevitch  <basile@starynkevitch.net>\n+\n+\t* testsuite/gcc.dg/plugin/plugin.exp: Added ggcplug.c test plugin\n+\twith ggcplug-test-1.c for testing PLUGIN_GGC_MARKING etc...\n+\t* testsuite/gcc.dg/plugin/ggcplug-test-1.c: Added new file.\n+\t* testsuite/gcc.dg/plugin/ggcplug.c: Added new file.\n+\n 2009-05-26  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/40246"}, {"sha": "f90e77bcf728ffad0dfefcba943671af008942d2", "filename": "gcc/testsuite/gcc.dg/plugin/ggcplug.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97fc23aeaf0d5466cae32f25497ced91a4e13f1a/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fggcplug.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97fc23aeaf0d5466cae32f25497ced91a4e13f1a/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fggcplug.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fggcplug.c?ref=97fc23aeaf0d5466cae32f25497ced91a4e13f1a", "patch": "@@ -14,11 +14,6 @@\n #include \"gcc-plugin.h\"\n \n \n-/* The initialization routine exposed to and called by GCC. The spec of this\n-   function is defined in gcc/gcc-plugin.h.\n-\n-   Note that this function needs to be named exactly \"plugin_init\".  */\n-\n \n /* our callback is the same for all PLUGIN_GGC_START,\n    PLUGIN_GGC_MARKING, PLUGIN_GGC_END events; it just increments the\n@@ -35,12 +30,18 @@ static const struct ggc_root_tab our_xtratab[] = {\n   LAST_GGC_ROOT_TAB\n };\n \n+\n+/* The initialization routine exposed to and called by GCC. The spec of this\n+   function is defined in gcc/gcc-plugin.h.\n+\n+   Note that this function needs to be named exactly \"plugin_init\".  */\n int\n-plugin_init ((struct plugin_name_args *plugin_info,\n+plugin_init (struct plugin_name_args *plugin_info,\n \t      struct plugin_gcc_version *version)\n {\n   const char *plugin_name = plugin_info->base_name;\n   int argc = plugin_info->argc;\n+  int i = 0;\n   struct plugin_argument *argv = plugin_info->argv;\n   if (!plugin_default_version_check (version, version))\n     return 1;\n@@ -97,7 +98,9 @@ plugin_init ((struct plugin_name_args *plugin_info,\n \t\t\t       (void *) our_xtratab);\n \t}\n     }\n-}\n+  /* plugin initialization succeeded */\n+  return 0;\n+ }\n \n static void\n increment_callback (void *gcc_data, void *user_data)"}]}