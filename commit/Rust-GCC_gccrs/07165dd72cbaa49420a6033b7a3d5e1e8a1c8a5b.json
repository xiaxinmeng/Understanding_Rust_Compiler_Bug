{"sha": "07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDcxNjVkZDcyY2JhYTQ5NDIwYTYwMzNiN2EzZDVlMWU4YTFjOGE1Yg==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-08-08T11:31:34Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-08-08T11:31:34Z"}, "message": "gcc/\n        * common/config/i386/i386-common.c\n\t(OPTION_MASK_ISA_AVX512DQ_SET): Define.\n\t(OPTION_MASK_ISA_AVX512DQ_UNSET): Ditto.\n\t(ix86_handle_option): Handle OPT_mavx512dq.\n\t* config/i386/cpuid.h (bit_AVX512DQ): Define.\n\t* config/i386/driver-i386.c (host_detect_local_cpu): Detect avx512dq,\n\tset -mavx512dq accordingly.\n\t* config/i386/i386-c.c (ix86_target_macros_internal): Handle\n\tOPTION_MASK_ISA_AVX512DQ.\n\t* config/i386/i386.c (ix86_target_string): Handle -mavx512dq.\n\t(ix86_option_override_internal): Define PTA_AVX512DQ, handle\n\tPTA_AVX512DQ and OPTION_MASK_ISA_AVX512DQ.\n\t(ix86_valid_target_attribute_inner_p): Handle OPT_mavx512dq.\n\t* config/i386/i386.h (TARGET_AVX512DQ): Define.\n\t(TARGET_AVX512DQ_P(x)): Ditto.\n\t* config/i386/i386.opt: Add mavx512dq.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r213757", "tree": {"sha": "f689b8aaf5f751ef3be594f8bf73d3b99c26ed1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f689b8aaf5f751ef3be594f8bf73d3b99c26ed1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b/comments", "author": null, "committer": null, "parents": [{"sha": "7c581d613cc56bf1ca8752ad1b6f4575fe8cb492", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c581d613cc56bf1ca8752ad1b6f4575fe8cb492", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c581d613cc56bf1ca8752ad1b6f4575fe8cb492"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "72919eee91556fb08aa670f51c080754abf0883a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b", "patch": "@@ -1,3 +1,29 @@\n+2014-08-08  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+        * common/config/i386/i386-common.c\n+\t(OPTION_MASK_ISA_AVX512DQ_SET): Define.\n+\t(OPTION_MASK_ISA_AVX512DQ_UNSET): Ditto.\n+\t(ix86_handle_option): Handle OPT_mavx512dq.\n+\t* config/i386/cpuid.h (bit_AVX512DQ): Define.\n+\t* config/i386/driver-i386.c (host_detect_local_cpu): Detect avx512dq,\n+\tset -mavx512dq accordingly.\n+\t* config/i386/i386-c.c (ix86_target_macros_internal): Handle\n+\tOPTION_MASK_ISA_AVX512DQ.\n+\t* config/i386/i386.c (ix86_target_string): Handle -mavx512dq.\n+\t(ix86_option_override_internal): Define PTA_AVX512DQ, handle\n+\tPTA_AVX512DQ and OPTION_MASK_ISA_AVX512DQ.\n+\t(ix86_valid_target_attribute_inner_p): Handle OPT_mavx512dq.\n+\t* config/i386/i386.h (TARGET_AVX512DQ): Define.\n+\t(TARGET_AVX512DQ_P(x)): Ditto.\n+\t* config/i386/i386.opt: Add mavx512dq.\n+\n 2014-08-08  Richard Biener  <rguenther@suse.de>\n \n \t* builtins.c (c_getstr, readonly_data_expr, init_target_chars,"}, {"sha": "3db1535e5e4a4e96bba73b97c6343348a9b314a5", "filename": "gcc/common/config/i386/i386-common.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c?ref=07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b", "patch": "@@ -65,6 +65,8 @@ along with GCC; see the file COPYING3.  If not see\n   (OPTION_MASK_ISA_AVX512PF | OPTION_MASK_ISA_AVX512F_SET)\n #define OPTION_MASK_ISA_AVX512ER_SET \\\n   (OPTION_MASK_ISA_AVX512ER | OPTION_MASK_ISA_AVX512F_SET)\n+#define OPTION_MASK_ISA_AVX512DQ_SET \\\n+  (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512F_SET)\n #define OPTION_MASK_ISA_RTM_SET OPTION_MASK_ISA_RTM\n #define OPTION_MASK_ISA_PRFCHW_SET OPTION_MASK_ISA_PRFCHW\n #define OPTION_MASK_ISA_RDSEED_SET OPTION_MASK_ISA_RDSEED\n@@ -156,6 +158,7 @@ along with GCC; see the file COPYING3.  If not see\n #define OPTION_MASK_ISA_AVX512CD_UNSET OPTION_MASK_ISA_AVX512CD\n #define OPTION_MASK_ISA_AVX512PF_UNSET OPTION_MASK_ISA_AVX512PF\n #define OPTION_MASK_ISA_AVX512ER_UNSET OPTION_MASK_ISA_AVX512ER\n+#define OPTION_MASK_ISA_AVX512DQ_UNSET OPTION_MASK_ISA_AVX512DQ\n #define OPTION_MASK_ISA_RTM_UNSET OPTION_MASK_ISA_RTM\n #define OPTION_MASK_ISA_PRFCHW_UNSET OPTION_MASK_ISA_PRFCHW\n #define OPTION_MASK_ISA_RDSEED_UNSET OPTION_MASK_ISA_RDSEED\n@@ -393,6 +396,19 @@ ix86_handle_option (struct gcc_options *opts,\n \t}\n       return true;\n \n+    case OPT_mavx512dq:\n+      if (value)\n+\t{\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512DQ_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX512DQ_SET;\n+\t}\n+      else\n+\t{\n+\t  opts->x_ix86_isa_flags &= ~OPTION_MASK_ISA_AVX512DQ_UNSET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX512DQ_UNSET;\n+\t}\n+      return true;\n+\n     case OPT_mfma:\n       if (value)\n \t{"}, {"sha": "dc650530f6942acf42e2ac194fedf0fa0b90e2a9", "filename": "gcc/config/i386/cpuid.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b/gcc%2Fconfig%2Fi386%2Fcpuid.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b/gcc%2Fconfig%2Fi386%2Fcpuid.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcpuid.h?ref=07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b", "patch": "@@ -73,6 +73,7 @@\n #define bit_BMI2\t(1 << 8)\n #define bit_RTM\t(1 << 11)\n #define bit_AVX512F\t(1 << 16)\n+#define bit_AVX512DQ\t(1 << 17)\n #define bit_RDSEED\t(1 << 18)\n #define bit_ADX\t(1 << 19)\n #define bit_CLFLUSHOPT\t(1 << 23)"}, {"sha": "b74a742c45e395f2a7429b69e0e005a2f2544555", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b", "patch": "@@ -411,6 +411,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n   unsigned int has_avx512er = 0, has_avx512pf = 0, has_avx512cd = 0;\n   unsigned int has_avx512f = 0, has_sha = 0, has_prefetchwt1 = 0;\n   unsigned int has_clflushopt = 0, has_xsavec = 0, has_xsaves = 0;\n+  unsigned int has_avx512dq = 0;\n \n   bool arch;\n \n@@ -489,6 +490,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       has_avx512cd = ebx & bit_AVX512CD;\n       has_sha = ebx & bit_SHA;\n       has_clflushopt = ebx & bit_CLFLUSHOPT;\n+      has_avx512dq = ebx & bit_AVX512DQ;\n \n       has_prefetchwt1 = ecx & bit_PREFETCHWT1;\n     }\n@@ -901,6 +903,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       const char *clflushopt = has_clflushopt ? \" -mclflushopt\" : \" -mno-clflushopt\";\n       const char *xsavec = has_xsavec ? \" -mxsavec\" : \" -mno-xsavec\";\n       const char *xsaves = has_xsaves ? \" -mxsaves\" : \" -mno-xsaves\";\n+      const char *avx512dq = has_avx512dq ? \" -mavx512dq\" : \" -mno-avx512dq\";\n \n       options = concat (options, mmx, mmx3dnow, sse, sse2, sse3, ssse3,\n \t\t\tsse4a, cx16, sahf, movbe, aes, sha, pclmul,\n@@ -909,7 +912,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \t\t\thle, rdrnd, f16c, fsgsbase, rdseed, prfchw, adx,\n \t\t\tfxsr, xsave, xsaveopt, avx512f, avx512er,\n \t\t\tavx512cd, avx512pf, prefetchwt1, clflushopt,\n-\t\t\txsavec, xsaves, NULL);\n+\t\t\txsavec, xsaves, avx512dq, NULL);\n     }\n \n done:"}, {"sha": "c0c0f3d88a88ab74872ea4812a8586caa58dd5cb", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b", "patch": "@@ -345,6 +345,8 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     def_or_undef (parse_in, \"__AVX512CD__\");\n   if (isa_flag & OPTION_MASK_ISA_AVX512PF)\n     def_or_undef (parse_in, \"__AVX512PF__\");\n+  if (isa_flag & OPTION_MASK_ISA_AVX512DQ)\n+    def_or_undef (parse_in, \"__AVX512DQ__\");\n   if (isa_flag & OPTION_MASK_ISA_FMA)\n     def_or_undef (parse_in, \"__FMA__\");\n   if (isa_flag & OPTION_MASK_ISA_RTM)"}, {"sha": "aae1cfdf8e9fdf2809c4b8d2593c983b6303caa2", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b", "patch": "@@ -2592,6 +2592,7 @@ ix86_target_string (HOST_WIDE_INT isa, int flags, const char *arch,\n     { \"-mavx512er\",\tOPTION_MASK_ISA_AVX512ER },\n     { \"-mavx512cd\",\tOPTION_MASK_ISA_AVX512CD },\n     { \"-mavx512pf\",\tOPTION_MASK_ISA_AVX512PF },\n+    { \"-mavx512dq\",\tOPTION_MASK_ISA_AVX512DQ },\n     { \"-msse4a\",\tOPTION_MASK_ISA_SSE4A },\n     { \"-msse4.2\",\tOPTION_MASK_ISA_SSE4_2 },\n     { \"-msse4.1\",\tOPTION_MASK_ISA_SSE4_1 },\n@@ -3122,6 +3123,7 @@ ix86_option_override_internal (bool main_args_p,\n #define PTA_CLFLUSHOPT\t\t(HOST_WIDE_INT_1 << 47)\n #define PTA_XSAVEC\t\t(HOST_WIDE_INT_1 << 48)\n #define PTA_XSAVES\t\t(HOST_WIDE_INT_1 << 49)\n+#define PTA_AVX512DQ\t\t(HOST_WIDE_INT_1 << 50)\n \n #define PTA_CORE2 \\\n   (PTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3 | PTA_SSSE3 \\\n@@ -3689,6 +3691,9 @@ ix86_option_override_internal (bool main_args_p,\n \tif (processor_alias_table[i].flags & PTA_XSAVES\n \t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_XSAVES))\n \t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_XSAVES;\n+\tif (processor_alias_table[i].flags & PTA_AVX512DQ\n+\t    && !(opts->x_ix86_isa_flags_explicit & OPTION_MASK_ISA_AVX512DQ))\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512DQ;\n \tif (processor_alias_table[i].flags & (PTA_PREFETCH_SSE | PTA_SSE))\n \t  x86_prefetch_sse = true;\n \n@@ -4545,6 +4550,7 @@ ix86_valid_target_attribute_inner_p (tree args, char *p_strings[],\n     IX86_ATTR_ISA (\"avx512pf\",\tOPT_mavx512pf),\n     IX86_ATTR_ISA (\"avx512er\",\tOPT_mavx512er),\n     IX86_ATTR_ISA (\"avx512cd\",\tOPT_mavx512cd),\n+    IX86_ATTR_ISA (\"avx512dq\",\tOPT_mavx512dq),\n     IX86_ATTR_ISA (\"mmx\",\tOPT_mmmx),\n     IX86_ATTR_ISA (\"pclmul\",\tOPT_mpclmul),\n     IX86_ATTR_ISA (\"popcnt\",\tOPT_mpopcnt),"}, {"sha": "d2498795de2c984c6525df3b5ae7ce197ba7c055", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b", "patch": "@@ -71,6 +71,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_AVX512ER_P(x)\tTARGET_ISA_AVX512ER_P(x)\n #define TARGET_AVX512CD\tTARGET_ISA_AVX512CD\n #define TARGET_AVX512CD_P(x)\tTARGET_ISA_AVX512CD_P(x)\n+#define TARGET_AVX512DQ\tTARGET_ISA_AVX512DQ\n+#define TARGET_AVX512DQ_P(x)\tTARGET_ISA_AVX512DQ_P(x)\n #define TARGET_FMA\tTARGET_ISA_FMA\n #define TARGET_FMA_P(x)\tTARGET_ISA_FMA_P(x)\n #define TARGET_SSE4A\tTARGET_ISA_SSE4A"}, {"sha": "daeb15070267f24e59f84933f659d5b8b6606cd3", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=07165dd72cbaa49420a6033b7a3d5e1e8a1c8a5b", "patch": "@@ -641,6 +641,10 @@ mavx512cd\n Target Report Mask(ISA_AVX512CD) Var(ix86_isa_flags) Save\n Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512CD built-in functions and code generation\n \n+mavx512dq\n+Target Report Mask(ISA_AVX512DQ) Var(ix86_isa_flags) Save\n+Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512DQ built-in functions and code generation\n+\n mfma\n Target Report Mask(ISA_FMA) Var(ix86_isa_flags) Save\n Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX and FMA built-in functions and code generation"}]}