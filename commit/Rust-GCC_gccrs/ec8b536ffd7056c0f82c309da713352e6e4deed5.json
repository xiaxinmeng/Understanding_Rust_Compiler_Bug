{"sha": "ec8b536ffd7056c0f82c309da713352e6e4deed5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM4YjUzNmZmZDcwNTZjMGY4MmMzMDlkYTcxMzM1MmU2ZTRkZWVkNQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-11-13T14:05:59Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-11-13T14:05:59Z"}, "message": "re PR c/68320 (internal compiler error: in declspecs_add_type)\n\n\tPR c/68320\n\t* c-parser.c (c_parser_for_statement): Treat unknown tokens as IDs.\n\n\t* gcc.dg/pr68320.c: New test.\n\nFrom-SVN: r230322", "tree": {"sha": "a1f241dd49d24e20370cd90bdbacb20866c65451", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1f241dd49d24e20370cd90bdbacb20866c65451"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec8b536ffd7056c0f82c309da713352e6e4deed5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec8b536ffd7056c0f82c309da713352e6e4deed5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec8b536ffd7056c0f82c309da713352e6e4deed5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec8b536ffd7056c0f82c309da713352e6e4deed5/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "20e8b68f101fe3439f5af27a0ac9a7abb805f5c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20e8b68f101fe3439f5af27a0ac9a7abb805f5c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20e8b68f101fe3439f5af27a0ac9a7abb805f5c4"}], "stats": {"total": 85, "additions": 81, "deletions": 4}, "files": [{"sha": "8824f1845cb3bcebdeed00fd5e1b0ccf3f642262", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8b536ffd7056c0f82c309da713352e6e4deed5/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8b536ffd7056c0f82c309da713352e6e4deed5/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=ec8b536ffd7056c0f82c309da713352e6e4deed5", "patch": "@@ -1,3 +1,8 @@\n+2015-11-13  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/68320\n+\t* c-parser.c (c_parser_for_statement): Treat unknown tokens as IDs.\n+\n 2015-11-13  David Malcolm  <dmalcolm@redhat.com>\n \n \t* c-typeck.c: Include spellcheck.h."}, {"sha": "82d5ce5f9ffcfdf6d4bf5c76103ef568531851e1", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8b536ffd7056c0f82c309da713352e6e4deed5/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8b536ffd7056c0f82c309da713352e6e4deed5/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=ec8b536ffd7056c0f82c309da713352e6e4deed5", "patch": "@@ -5757,12 +5757,12 @@ c_parser_for_statement (c_parser *parser, bool ivdep)\n     {\n       c_token *token = c_parser_peek_token (parser);\n       tree decl = lookup_name (token->value);\n-      if (decl == NULL_TREE)\n-\t;\n+      if (decl == NULL_TREE || VAR_P (decl))\n+\t/* If DECL is null, we don't know what this token might be.  Treat\n+\t   it as an ID for better diagnostics; we'll error later on.  */\n+\ttoken->id_kind = C_ID_ID;\n       else if (TREE_CODE (decl) == TYPE_DECL)\n \ttoken->id_kind = C_ID_TYPENAME;\n-      else if (VAR_P (decl))\n-\ttoken->id_kind = C_ID_ID;\n     }\n \n   token_indent_info next_tinfo"}, {"sha": "35e568c882bcbe3c7e75dc1c9ff7d1b0589f8f36", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8b536ffd7056c0f82c309da713352e6e4deed5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8b536ffd7056c0f82c309da713352e6e4deed5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ec8b536ffd7056c0f82c309da713352e6e4deed5", "patch": "@@ -1,3 +1,8 @@\n+2015-11-13  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/68320\n+\t* gcc.dg/pr68320.c: New test.\n+\n 2015-11-13  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* c-c++-common/goacc/data-default-1.c: Correct expected"}, {"sha": "7060af8993eb7b128dd4886462213e48d8566bcf", "filename": "gcc/testsuite/gcc.dg/pr68320.c", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec8b536ffd7056c0f82c309da713352e6e4deed5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68320.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec8b536ffd7056c0f82c309da713352e6e4deed5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68320.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68320.c?ref=ec8b536ffd7056c0f82c309da713352e6e4deed5", "patch": "@@ -0,0 +1,67 @@\n+/* PR c/68320 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+void\n+fn1 (void)\n+{\n+  for (typedef int T;;) /* { dg-error \"declaration of non-variable\" } */\n+    if (1)\n+      ;\n+  T x; /* { dg-error \"unknown type name\" } */\n+}\n+\n+void\n+fn2 (int i)\n+{\n+  for (typedef int T;;) /* { dg-error \"declaration of non-variable\" } */\n+    if (1)\n+      i = 5;\n+  T x; /* { dg-error \"unknown type name\" } */\n+}\n+\n+void\n+fn3 (void)\n+{\n+  for (typedef int T;;) /* { dg-error \"declaration of non-variable\" } */\n+    if (1)\n+      {\n+      }\n+  T *x; /* { dg-error \"unknown type name\" } */\n+}\n+\n+void\n+fn4 (void)\n+{\n+  for (typedef int T;;) /* { dg-error \"declaration of non-variable\" } */\n+    if (1)\n+      ;\n+  T, T; /* { dg-error \"undeclared\" } */\n+}\n+\n+void\n+fn5 (void)\n+{\n+  for (typedef int T;;) /* { dg-error \"declaration of non-variable\" } */\n+    if (1)\n+      ;\n+  T = 10; /* { dg-error \"undeclared\" } */\n+}\n+\n+void\n+fn6 (void)\n+{\n+  for (typedef int T;;) /* { dg-error \"declaration of non-variable\" } */\n+    if (1)\n+      ;\n+  T[0]; /* { dg-error \"undeclared\" } */\n+}\n+\n+void\n+fn7 (void)\n+{\n+  for (typedef int T;;) /* { dg-error \"declaration of non-variable\" } */\n+    if (1)\n+      ;\n+  T (); /* { dg-warning \"implicit declaration\" } */\n+}"}]}