{"sha": "ba1defa540feb70b515dd5d19ec8193d4bc37325", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmExZGVmYTU0MGZlYjcwYjUxNWRkNWQxOWVjODE5M2Q0YmMzNzMyNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenth@gcc.gnu.org", "date": "2005-04-15T20:35:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2005-04-15T20:35:26Z"}, "message": "re PR fortran/14569 ([4.0 only] should not warn about truncated comment lines)\n\n2005-04-15  Richard Guenther  <rguenth@gcc.gnu.org>\n\n\tPR fortran/14569\n\t* gfortran.h (gfc_linebuf): Add truncated field.\n\t* parse.c (next_statement): Handle warning for truncated\n\tlines.\n\t* scanner.c (load_line): Return if line was truncated.\n\tNo longer warn for truncated lines.  Remove unused parameters.\n\t(load_file): Store load_line return value to linebuf.\n\t(gfc_error_recovery): Do not advance line at the end.\n\nFrom-SVN: r98210", "tree": {"sha": "a87dbb76a3b350867698fa6a6d1a17b4d4d0a473", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a87dbb76a3b350867698fa6a6d1a17b4d4d0a473"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba1defa540feb70b515dd5d19ec8193d4bc37325", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba1defa540feb70b515dd5d19ec8193d4bc37325", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba1defa540feb70b515dd5d19ec8193d4bc37325", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba1defa540feb70b515dd5d19ec8193d4bc37325/comments", "author": null, "committer": null, "parents": [{"sha": "472573f9f92704b3a9bb861bbb31e2ef8d14ff53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/472573f9f92704b3a9bb861bbb31e2ef8d14ff53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/472573f9f92704b3a9bb861bbb31e2ef8d14ff53"}], "stats": {"total": 53, "additions": 32, "deletions": 21}, "files": [{"sha": "b3f0b1c3b170475ee27e7c2bd9bd21bd91d960fd", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba1defa540feb70b515dd5d19ec8193d4bc37325/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba1defa540feb70b515dd5d19ec8193d4bc37325/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ba1defa540feb70b515dd5d19ec8193d4bc37325", "patch": "@@ -1,3 +1,14 @@\n+2005-04-15  Richard Guenther  <rguenth@gcc.gnu.org>\n+\n+\tPR fortran/14569\n+\t* gfortran.h (gfc_linebuf): Add truncated field.\n+\t* parse.c (next_statement): Handle warning for truncated\n+\tlines.\n+\t* scanner.c (load_line): Return if line was truncated.\n+\tNo longer warn for truncated lines.  Remove unused parameters.\n+\t(load_file): Store load_line return value to linebuf.\n+\t(gfc_error_recovery): Do not advance line at the end.\n+\n 2005-04-14  Steven G. Kargl  <kargls@comcast.net>\n \n \t* gfortran.h (gfc_real_info): Add subnormal struct member."}, {"sha": "c266d589c0c2547e0e162267ea423f993c6c44d0", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba1defa540feb70b515dd5d19ec8193d4bc37325/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba1defa540feb70b515dd5d19ec8193d4bc37325/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=ba1defa540feb70b515dd5d19ec8193d4bc37325", "patch": "@@ -481,6 +481,8 @@ typedef struct gfc_linebuf\n   struct gfc_file *file;\n   struct gfc_linebuf *next;\n \n+  int truncated;\n+\n   char line[1];\n } gfc_linebuf;\n "}, {"sha": "94bf6d0d28d7fa27bbd1cb14907471c56a1fa8e5", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba1defa540feb70b515dd5d19ec8193d4bc37325/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba1defa540feb70b515dd5d19ec8193d4bc37325/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=ba1defa540feb70b515dd5d19ec8193d4bc37325", "patch": "@@ -479,7 +479,13 @@ next_statement (void)\n       gfc_buffer_error (1);\n \n       if (gfc_at_eol ())\n-\tgfc_advance_line ();\n+\t{\n+\t  if (gfc_option.warn_line_truncation\n+\t      && gfc_current_locus.lb->truncated)\n+\t    gfc_warning_now (\"Line truncated at %C\");\n+\n+\t  gfc_advance_line ();\n+\t}\n \n       gfc_skip_comments ();\n "}, {"sha": "5748ef38934cbb9035803fa8259053eeb75e08dc", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 12, "deletions": 20, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba1defa540feb70b515dd5d19ec8193d4bc37325/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba1defa540feb70b515dd5d19ec8193d4bc37325/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=ba1defa540feb70b515dd5d19ec8193d4bc37325", "patch": "@@ -631,21 +631,17 @@ gfc_error_recovery (void)\n \t  if (c == delim)\n \t    break;\n \t  if (c == '\\n')\n-\t    goto done;\n+\t    return;\n \t  if (c == '\\\\')\n \t    {\n \t      c = next_char ();\n \t      if (c == '\\n')\n-\t\tgoto done;\n+\t\treturn;\n \t    }\n \t}\n       if (gfc_at_eof ())\n \tbreak;\n     }\n-\n-done:\n-  if (c == '\\n')\n-    gfc_advance_line ();\n }\n \n \n@@ -677,12 +673,14 @@ gfc_gobble_whitespace (void)\n    need be.\n    In fixed mode, we expand a tab that occurs within the statement\n    label region to expand to spaces that leave the next character in\n-   the source region.  */\n+   the source region.\n+   load_line returns wether the line was truncated.  */\n \n-static void\n-load_line (FILE * input, char **pbuf, char *filename, int linenum)\n+static int\n+load_line (FILE * input, char **pbuf)\n {\n-  int c, maxlen, i, trunc_flag, preprocessor_flag;\n+  int c, maxlen, i, preprocessor_flag;\n+  int trunc_flag = 0;\n   static int buflen = 0;\n   char *buffer;\n \n@@ -767,15 +765,6 @@ load_line (FILE * input, char **pbuf, char *filename, int linenum)\n \t      c = fgetc (input);\n \t      if (c == '\\n' || c == EOF)\n \t\tbreak;\n-\n-\t      if (gfc_option.warn_line_truncation\n-\t\t  && trunc_flag\n-\t\t  && !gfc_is_whitespace (c))\n-\t\t{\n-\t\t  gfc_warning_now (\"%s:%d: Line is being truncated\",\n-\t\t\t\t   filename, linenum);\n-\t\t  trunc_flag = 0;\n-\t\t}\n \t    }\n \n \t  ungetc ('\\n', input);\n@@ -791,6 +780,8 @@ load_line (FILE * input, char **pbuf, char *filename, int linenum)\n       *buffer++ = ' ';\n \n   *buffer = '\\0';\n+\n+  return trunc_flag;\n }\n \n \n@@ -1034,7 +1025,7 @@ load_file (char *filename, bool initial)\n \n   for (;;) \n     {\n-      load_line (input, &line, filename, current_file->line);\n+      int trunc = load_line (input, &line);\n \n       len = strlen (line);\n       if (feof (input) && len == 0)\n@@ -1066,6 +1057,7 @@ load_file (char *filename, bool initial)\n       b->linenum = current_file->line++;\n #endif\n       b->file = current_file;\n+      b->truncated = trunc;\n       strcpy (b->line, line);\n \n       if (line_head == NULL)"}]}