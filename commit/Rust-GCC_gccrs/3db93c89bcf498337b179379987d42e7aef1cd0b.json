{"sha": "3db93c89bcf498337b179379987d42e7aef1cd0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RiOTNjODliY2Y0OTgzMzdiMTc5Mzc5OTg3ZDQyZTdhZWYxY2QwYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-02-16T15:34:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-02-16T15:34:28Z"}, "message": "re PR rtl-optimization/52208 (Useless store)\n\n\tPR rtl-optimization/52208\n\t* ira-costs.c (scan_one_insn): Don't decrease mem_cost\n\tfor MEMs with REG_EQUIV, if the MEM isn't general_operand.\n\nFrom-SVN: r184310", "tree": {"sha": "3b3d3f1e75c66f654e5766a8981e1f3f9e0f9992", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b3d3f1e75c66f654e5766a8981e1f3f9e0f9992"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3db93c89bcf498337b179379987d42e7aef1cd0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3db93c89bcf498337b179379987d42e7aef1cd0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3db93c89bcf498337b179379987d42e7aef1cd0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3db93c89bcf498337b179379987d42e7aef1cd0b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e20f6b4bde8a93aefb4bb2a9b3946a24edeea5ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e20f6b4bde8a93aefb4bb2a9b3946a24edeea5ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e20f6b4bde8a93aefb4bb2a9b3946a24edeea5ef"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "4ba6cbf9b6dda0764f9b2c3b1d339df0e6c1caa6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3db93c89bcf498337b179379987d42e7aef1cd0b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3db93c89bcf498337b179379987d42e7aef1cd0b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3db93c89bcf498337b179379987d42e7aef1cd0b", "patch": "@@ -1,5 +1,9 @@\n 2012-02-16  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/52208\n+\t* ira-costs.c (scan_one_insn): Don't decrease mem_cost\n+\tfor MEMs with REG_EQUIV, if the MEM isn't general_operand.\n+\n \tPR tree-optimization/52255\n \t* tree-vect-loop-manip.c (slpeel_tree_peel_loop_to_edge): If\n \tloop->header has virtual PHI, but exit_e->dest doesn't, add"}, {"sha": "34e6ef9346bb82024293581bf301d54787ca7418", "filename": "gcc/ira-costs.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3db93c89bcf498337b179379987d42e7aef1cd0b/gcc%2Fira-costs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3db93c89bcf498337b179379987d42e7aef1cd0b/gcc%2Fira-costs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-costs.c?ref=3db93c89bcf498337b179379987d42e7aef1cd0b", "patch": "@@ -1,5 +1,5 @@\n /* IRA hard register and memory cost calculation for allocnos or pseudos.\n-   Copyright (C) 2006, 2007, 2008, 2009, 2010, 2011\n+   Copyright (C) 2006, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Vladimir Makarov <vmakarov@redhat.com>.\n \n@@ -1306,14 +1306,21 @@ scan_one_insn (rtx insn)\n \n      Similarly if we're loading other constants from memory (constant\n      pool, TOC references, small data areas, etc) and this is the only\n-     assignment to the destination pseudo.  */\n+     assignment to the destination pseudo.\n+\n+     Don't do this if SET_SRC (set) isn't a general operand, if it is\n+     a memory requiring special instructions to load it, decreasing\n+     mem_cost might result in it being loaded using the specialized\n+     instruction into a register, then stored into stack and loaded\n+     again from the stack.  See PR52208.  */\n   if (set != 0 && REG_P (SET_DEST (set)) && MEM_P (SET_SRC (set))\n       && (note = find_reg_note (insn, REG_EQUIV, NULL_RTX)) != NULL_RTX\n       && ((MEM_P (XEXP (note, 0)))\n \t  || (CONSTANT_P (XEXP (note, 0))\n \t      && targetm.legitimate_constant_p (GET_MODE (SET_DEST (set)),\n \t\t\t\t\t\tXEXP (note, 0))\n-\t      && REG_N_SETS (REGNO (SET_DEST (set))) == 1)))\n+\t      && REG_N_SETS (REGNO (SET_DEST (set))) == 1))\n+      && general_operand (SET_SRC (set), GET_MODE (SET_SRC (set))))\n     {\n       enum reg_class cl = GENERAL_REGS;\n       rtx reg = SET_DEST (set);"}]}