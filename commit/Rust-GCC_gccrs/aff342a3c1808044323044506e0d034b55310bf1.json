{"sha": "aff342a3c1808044323044506e0d034b55310bf1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZmMzQyYTNjMTgwODA0NDMyMzA0NDUwNmUwZDAzNGI1NTMxMGJmMQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2019-09-06T12:51:44Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2019-09-06T12:51:44Z"}, "message": "[PATCH] Deprecate -frepo option.\n\nhttps://gcc.gnu.org/ml/gcc-patches/2019-09/msg00379.html\n\tPR c++/91125\n\t* cp-tree.h (IDENTIFIER_REPO_CHOSEN, DECL_REPO_AVAILABLE_P): Delete.\n\t(struct lang_decl_base): Remove repo_available_p.\n\t* decl.c (duplicate_decls): Don't copy DECL_REPO_AVAILABLE_P.\n\nFrom-SVN: r275456", "tree": {"sha": "26c27602656535f48839d2c922811d793227fbca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26c27602656535f48839d2c922811d793227fbca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aff342a3c1808044323044506e0d034b55310bf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aff342a3c1808044323044506e0d034b55310bf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aff342a3c1808044323044506e0d034b55310bf1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aff342a3c1808044323044506e0d034b55310bf1/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0c2096fbada36fa26778bc02b32555150050d85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0c2096fbada36fa26778bc02b32555150050d85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0c2096fbada36fa26778bc02b32555150050d85"}], "stats": {"total": 26, "additions": 8, "deletions": 18}, "files": [{"sha": "48582cea2f21bd377bf42f0288d011ae402e8647", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aff342a3c1808044323044506e0d034b55310bf1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aff342a3c1808044323044506e0d034b55310bf1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=aff342a3c1808044323044506e0d034b55310bf1", "patch": "@@ -1,7 +1,11 @@\n 2019-09-06  Nathan Sidwell  <nathan@acm.org>\n \n-\tReserve TREE_LANG_FLAG_3 for modules.\n-\tgcc/cp/\n+\tPR c++/91125\n+\t* cp-tree.h (IDENTIFIER_REPO_CHOSEN, DECL_REPO_AVAILABLE_P): Delete.\n+\t(struct lang_decl_base): Remove repo_available_p.\n+\t* decl.c (duplicate_decls): Don't copy DECL_REPO_AVAILABLE_P.\n+\n+\t(Reserve TREE_LANG_FLAG_3 for modules.\n \t* cp-tree.h (DECL_CONSTRUCTION_VTABLE_P): Delete.\n \t(DECL_NON_TRIVIALLY_INITIALIZED_P): Move to TREE_LANG_FLAG_6.\n \t* class.c (build_ctor_vtbl_group): Don't set"}, {"sha": "95e5eda7e87ced9bac476a6d4fd066ddc63743c5", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aff342a3c1808044323044506e0d034b55310bf1/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aff342a3c1808044323044506e0d034b55310bf1/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=aff342a3c1808044323044506e0d034b55310bf1", "patch": "@@ -465,8 +465,7 @@ extern GTY(()) tree cp_global_trees[CPTI_MAX];\n       FUNCTION_RVALUE_QUALIFIED (in FUNCTION_TYPE, METHOD_TYPE)\n       CALL_EXPR_REVERSE_ARGS (in CALL_EXPR, AGGR_INIT_EXPR)\n       CONSTRUCTOR_PLACEHOLDER_BOUNDARY (in CONSTRUCTOR)\n-   6: IDENTIFIER_REPO_CHOSEN (in IDENTIFIER_NODE)\n-      TYPE_MARKED_P (in _TYPE)\n+   6: TYPE_MARKED_P (in _TYPE)\n       DECL_NON_TRIVIALLY_INITIALIZED_P (in VAR_DECL)\n       RANGE_FOR_IVDEP (in RANGE_FOR_STMT)\n       CALL_EXPR_OPERATOR_SYNTAX (in CALL_EXPR, AGGR_INIT_EXPR)\n@@ -1112,12 +1111,6 @@ enum cp_identifier_kind {\n #define IDENTIFIER_VIRTUAL_P(NODE) \\\n   TREE_LANG_FLAG_5 (IDENTIFIER_NODE_CHECK (NODE))\n \n-/* True iff NAME is the DECL_ASSEMBLER_NAME for an entity with vague\n-   linkage which the prelinker has assigned to this translation\n-   unit.  */\n-#define IDENTIFIER_REPO_CHOSEN(NAME) \\\n-  (TREE_LANG_FLAG_6 (IDENTIFIER_NODE_CHECK (NAME)))\n-\n /* True if this identifier is a reserved word.  C_RID_CODE (node) is\n    then the RID_* value of the keyword.  Value 1.  */\n #define IDENTIFIER_KEYWORD_P(NODE)\t\t\\\n@@ -2590,7 +2583,6 @@ struct GTY(()) lang_decl_base {\n   unsigned use_template : 2;\n   unsigned not_really_extern : 1;\t   /* var or fn */\n   unsigned initialized_in_class : 1;\t   /* var or fn */\n-  unsigned repo_available_p : 1;\t   /* var or fn */\n   unsigned threadprivate_or_deleted_p : 1; /* var or fn */\n   unsigned anticipated_p : 1;\t\t   /* fn, type or template */\n   /* anticipated_p reused as DECL_OMP_PRIVATIZED_MEMBER in var */\n@@ -2601,7 +2593,7 @@ struct GTY(()) lang_decl_base {\n   unsigned concept_p : 1;                  /* applies to vars and functions */\n   unsigned var_declared_inline_p : 1;\t   /* var */\n   unsigned dependent_init_p : 1;\t   /* var */\n-  /* 1 spare bit */\n+  /* 2 spare bits */\n };\n \n /* True for DECL codes which have template info and access.  */\n@@ -3162,11 +3154,6 @@ struct GTY(()) lang_decl {\n #define DECL_EXTERN_C_FUNCTION_P(NODE) \\\n   (DECL_NON_THUNK_FUNCTION_P (NODE) && DECL_EXTERN_C_P (NODE))\n \n-/* True iff DECL is an entity with vague linkage whose definition is\n-   available in this translation unit.  */\n-#define DECL_REPO_AVAILABLE_P(NODE) \\\n-  (DECL_LANG_SPECIFIC (NODE)->u.base.repo_available_p)\n-\n /* True if DECL is declared 'constexpr'.  */\n #define DECL_DECLARED_CONSTEXPR_P(DECL) \\\n   DECL_LANG_FLAG_8 (VAR_OR_FUNCTION_DECL_CHECK (STRIP_TEMPLATE (DECL)))"}, {"sha": "88e2c3beb2bcc51d31868948f199c548296cc4e8", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aff342a3c1808044323044506e0d034b55310bf1/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aff342a3c1808044323044506e0d034b55310bf1/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=aff342a3c1808044323044506e0d034b55310bf1", "patch": "@@ -2388,7 +2388,6 @@ duplicate_decls (tree newdecl, tree olddecl, bool newdecl_is_friend)\n       /* Don't really know how much of the language-specific\n \t values we should copy from old to new.  */\n       DECL_IN_AGGR_P (newdecl) = DECL_IN_AGGR_P (olddecl);\n-      DECL_REPO_AVAILABLE_P (newdecl) = DECL_REPO_AVAILABLE_P (olddecl);\n       DECL_INITIALIZED_IN_CLASS_P (newdecl)\n \t|= DECL_INITIALIZED_IN_CLASS_P (olddecl);\n "}]}