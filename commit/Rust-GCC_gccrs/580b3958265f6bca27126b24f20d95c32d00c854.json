{"sha": "580b3958265f6bca27126b24f20d95c32d00c854", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTgwYjM5NTgyNjVmNmJjYTI3MTI2YjI0ZjIwZDk1YzMyZDAwYzg1NA==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-08-16T20:35:21Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-08-16T20:35:21Z"}, "message": "c-decl.c (grokdeclarator): Allow for function definition where innermost declarator has attributes.\n\n\t* c-decl.c (grokdeclarator): Allow for function definition where\n\tinnermost declarator has attributes.\n\ntestsuite:\n\t* gcc.dg/funcdef-attr-1.c: New test.\n\nFrom-SVN: r86075", "tree": {"sha": "1956edd1a7728d948fb52e28f45a268e9d0f1b4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1956edd1a7728d948fb52e28f45a268e9d0f1b4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/580b3958265f6bca27126b24f20d95c32d00c854", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/580b3958265f6bca27126b24f20d95c32d00c854", "html_url": "https://github.com/Rust-GCC/gccrs/commit/580b3958265f6bca27126b24f20d95c32d00c854", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/580b3958265f6bca27126b24f20d95c32d00c854/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93f90be62c1d84539017ab6d73b061993b367f54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93f90be62c1d84539017ab6d73b061993b367f54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93f90be62c1d84539017ab6d73b061993b367f54"}], "stats": {"total": 38, "additions": 33, "deletions": 5}, "files": [{"sha": "991177702ab68324b15e8711f94b8a2d7389f283", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/580b3958265f6bca27126b24f20d95c32d00c854/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/580b3958265f6bca27126b24f20d95c32d00c854/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=580b3958265f6bca27126b24f20d95c32d00c854", "patch": "@@ -1,3 +1,8 @@\n+2004-08-16  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* c-decl.c (grokdeclarator): Allow for function definition where\n+\tinnermost declarator has attributes.\n+\n 2004-08-16  Fariborz Jahanian <fjahanian@apple.com>\n \n \t* except.c (get_exception_filter, build_post_landing_pads,"}, {"sha": "e867ebb6c7227b92237f8c0e2701385d3b606c5c", "filename": "gcc/c-decl.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/580b3958265f6bca27126b24f20d95c32d00c854/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/580b3958265f6bca27126b24f20d95c32d00c854/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=580b3958265f6bca27126b24f20d95c32d00c854", "patch": "@@ -4176,12 +4176,17 @@ grokdeclarator (tree declarator, tree declspecs,\n \t}\n       else if (TREE_CODE (declarator) == CALL_EXPR)\n \t{\n-\t  /* Say it's a definition only for the CALL_EXPR closest to\n-\t     the identifier.  */\n-\t  bool really_funcdef = (funcdef_flag\n-\t\t\t\t && (TREE_CODE (TREE_OPERAND (declarator, 0))\n-\t\t\t\t     == IDENTIFIER_NODE));\n+\t  /* Say it's a definition only for the declarator closest to\n+\t     the identifier, apart possibly from some attributes.  */\n+\t  bool really_funcdef = false;\n \t  tree arg_types;\n+\t  if (funcdef_flag)\n+\t    {\n+\t      tree t = TREE_OPERAND (declarator, 0);\n+\t      while (TREE_CODE (t) == TREE_LIST)\n+\t\tt = TREE_VALUE (t);\n+\t      really_funcdef = (TREE_CODE (t) == IDENTIFIER_NODE);\n+\t    }\n \n \t  /* Declaring a function type.\n \t     Make sure we have a valid type for the function to return.  */"}, {"sha": "80561d3ad0d9c7d12c867a5ee53c2cd1381403d8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/580b3958265f6bca27126b24f20d95c32d00c854/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/580b3958265f6bca27126b24f20d95c32d00c854/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=580b3958265f6bca27126b24f20d95c32d00c854", "patch": "@@ -1,3 +1,7 @@\n+2004-08-16  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* gcc.dg/funcdef-attr-1.c: New test.\n+\n 2004-08-16  Janis Johnson  <janis187@us.ibm.com>\n \n \t* gcc.dg/altivec-17.c: New test."}, {"sha": "17249a0cb9e91b8696ef6abf29e9f273898c3abc", "filename": "gcc/testsuite/gcc.dg/funcdef-attr-1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/580b3958265f6bca27126b24f20d95c32d00c854/gcc%2Ftestsuite%2Fgcc.dg%2Ffuncdef-attr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/580b3958265f6bca27126b24f20d95c32d00c854/gcc%2Ftestsuite%2Fgcc.dg%2Ffuncdef-attr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffuncdef-attr-1.c?ref=580b3958265f6bca27126b24f20d95c32d00c854", "patch": "@@ -0,0 +1,14 @@\n+/* The declarator in a function definition should be able to take the\n+   form of an attributed function declarator, not just a plain\n+   function declarator.  This was formerly allowed by some of the code\n+   but then the wrong constraint checks were made because other code\n+   didn't recognise the declarator as being that of the function\n+   definition.  */\n+/* Origin: Joseph Myers <jsm@polyomino.org.uk>.  */\n+\n+int (__attribute__((const)) x) (a, b)\n+     int a;\n+     int b;\n+{\n+  return a + b;\n+}"}]}