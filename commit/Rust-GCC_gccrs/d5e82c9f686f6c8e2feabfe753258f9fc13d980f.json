{"sha": "d5e82c9f686f6c8e2feabfe753258f9fc13d980f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVlODJjOWY2ODZmNmM4ZTJmZWFiZmU3NTMyNThmOWZjMTNkOTgwZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-11-29T08:05:03Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-11-29T08:05:03Z"}, "message": "re PR tree-optimization/92704 (ICE: Segmentation fault (in process_bb))\n\n2019-11-29  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/92704\n\t* tree-if-conv.c (combine_blocks): Deal with virtual PHIs\n\tin loops performing only loads.\n\n\t* gcc.dg/torture/pr92704.c: New testcase.\n\nFrom-SVN: r278828", "tree": {"sha": "363be524c513dea66ba05c50050f4acbe8e50312", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/363be524c513dea66ba05c50050f4acbe8e50312"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5e82c9f686f6c8e2feabfe753258f9fc13d980f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5e82c9f686f6c8e2feabfe753258f9fc13d980f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5e82c9f686f6c8e2feabfe753258f9fc13d980f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5e82c9f686f6c8e2feabfe753258f9fc13d980f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "34b43828f840640f8275712867fc52ef6c2714dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34b43828f840640f8275712867fc52ef6c2714dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34b43828f840640f8275712867fc52ef6c2714dd"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "1ef3bc2de74c7d663f72e210c2711922fe9d6129", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5e82c9f686f6c8e2feabfe753258f9fc13d980f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5e82c9f686f6c8e2feabfe753258f9fc13d980f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5e82c9f686f6c8e2feabfe753258f9fc13d980f", "patch": "@@ -1,3 +1,9 @@\n+2019-11-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/92704\n+\t* tree-if-conv.c (combine_blocks): Deal with virtual PHIs\n+\tin loops performing only loads.\n+\n 2019-11-29  Julian Brown  <julian@codesourcery.com>\n \n \t* builtin-types.def (BT_DFLOAT32_PTR, BT_DFLOAT64_PTR,"}, {"sha": "b787896dd572025a3db7bd8251b1a5af9a0f7cd5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5e82c9f686f6c8e2feabfe753258f9fc13d980f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5e82c9f686f6c8e2feabfe753258f9fc13d980f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d5e82c9f686f6c8e2feabfe753258f9fc13d980f", "patch": "@@ -1,3 +1,8 @@\n+2019-11-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/92704\n+\t* gcc.dg/torture/pr92704.c: New testcase.\n+\n 2019-11-29  Joseph Myers  <joseph@codesourcery.com>\n \n \t* objc.dg/attributes/gnu2x-attr-syntax-1.m: New test."}, {"sha": "79994a39b54bcc62cb31c4d69adb18aea0db8330", "filename": "gcc/testsuite/gcc.dg/torture/pr92704.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5e82c9f686f6c8e2feabfe753258f9fc13d980f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr92704.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5e82c9f686f6c8e2feabfe753258f9fc13d980f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr92704.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr92704.c?ref=d5e82c9f686f6c8e2feabfe753258f9fc13d980f", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-fexceptions -fnon-call-exceptions -fno-tree-dce -ftree-loop-if-convert\" } */\n+int zr, yx;\n+\n+void __attribute__ ((simd))\n+oj (int rd, int q7)\n+{\n+  int wo = (__UINTPTR_TYPE__)&rd;\n+\n+  while (q7 < 1)\n+    {\n+      int kv;\n+      short int v3;\n+\n+      for (v3 = 0; v3 < 82; v3 += 3)\n+        {\n+        }\n+\n+      kv = zr ? 0 : v3;\n+      yx = kv < rd;\n+      zr = zr && yx;\n+      ++q7;\n+    }\n+}"}, {"sha": "d2e40d43373951535958646af45d6633e20920c6", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5e82c9f686f6c8e2feabfe753258f9fc13d980f/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5e82c9f686f6c8e2feabfe753258f9fc13d980f/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=d5e82c9f686f6c8e2feabfe753258f9fc13d980f", "patch": "@@ -2624,6 +2624,11 @@ combine_blocks (class loop *loop)\n       vphi = get_virtual_phi (bb);\n       if (vphi)\n \t{\n+\t  /* When there's just loads inside the loop a stray virtual\n+\t     PHI merging the uses can appear, update last_vdef from\n+\t     it.  */\n+\t  if (!last_vdef)\n+\t    last_vdef = gimple_phi_arg_def (vphi, 0);\n \t  imm_use_iterator iter;\n \t  use_operand_p use_p;\n \t  gimple *use_stmt;\n@@ -2655,6 +2660,10 @@ combine_blocks (class loop *loop)\n \t      if (gimple_vdef (stmt))\n \t\tlast_vdef = gimple_vdef (stmt);\n \t    }\n+\t  else\n+\t    /* If this is the first load we arrive at update last_vdef\n+\t       so we handle stray PHIs correctly.  */\n+\t    last_vdef = gimple_vuse (stmt);\n \t  if (predicated[i])\n \t    {\n \t      ssa_op_iter i;"}]}