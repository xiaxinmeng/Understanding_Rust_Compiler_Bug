{"sha": "9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFmYjkxYjJkMWFlYWJmNDlhMmI3NjU1NmVjNmZlMThkZDU3OTBmOQ==", "commit": {"author": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2019-07-22T15:33:58Z"}, "committer": {"name": "Andrea Corallo", "email": "akrl@gcc.gnu.org", "date": "2019-07-22T15:33:58Z"}, "message": "[jit] check result_type in gcc_jit_context_new_unary_op\n\n2019-07-22  Andrea Corallo <andrea.corallo@arm.com>\n\n\t* jit-recording.c (unary_op_reproducer_strings): Make it extern.\n\t(binary_op_reproducer_strings): Likewise.\n\t* jit-recording.h (unary_op_reproducer_strings): Likewise.\n\t(binary_op_reproducer_strings): Likewise.\n\t* libgccjit.c (gcc_jit_context_new_unary_op): Check result_type to be a\n\tnumeric type.\n\t* libgccjit.c (gcc_jit_context_new_binary_op): Improve error message.\n\n2019-07-22  Andrea Corallo <andrea.corallo@arm.com>\n\n\t* jit.dg/test-error-gcc_jit_context_new_unary_op-bad-res-type.c:\n\tNew testcase.\n\t* jit.dg/test-error-gcc_jit_context_new_binary_op-bad-res-type.c:\n\tAdjust error message.\n\nFrom-SVN: r273700", "tree": {"sha": "d309013fcabc632b20a4d484f748d686a4766c0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d309013fcabc632b20a4d484f748d686a4766c0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9/comments", "author": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1c4547f16138b69f955fdc24c9523e7f8d28aa15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c4547f16138b69f955fdc24c9523e7f8d28aa15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c4547f16138b69f955fdc24c9523e7f8d28aa15"}], "stats": {"total": 82, "additions": 74, "deletions": 8}, "files": [{"sha": "af3f6b70917f2929517a525e5789173e9f70213d", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9", "patch": "@@ -1,3 +1,13 @@\n+2019-07-22  Andrea Corallo <andrea.corallo@arm.com>\n+\n+\t* jit-recording.c (unary_op_reproducer_strings): Make it extern.\n+\t(binary_op_reproducer_strings): Likewise.\n+\t* jit-recording.h (unary_op_reproducer_strings): Likewise.\n+\t(binary_op_reproducer_strings): Likewise.\n+\t* libgccjit.c (gcc_jit_context_new_unary_op): Check result_type to be a\n+\tnumeric type.\n+\t* libgccjit.c (gcc_jit_context_new_binary_op): Improve error message.\n+\n 2019-07-04  Andrea Corallo <andrea.corallo@arm.com>\n \n \t* libgccjit.c (gcc_jit_context_new_binary_op): Check result_type to be a"}, {"sha": "2f75395989c141e6f8243df916473c0b2ef67a56", "filename": "gcc/jit/jit-recording.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9/gcc%2Fjit%2Fjit-recording.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9/gcc%2Fjit%2Fjit-recording.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fjit-recording.c?ref=9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9", "patch": "@@ -4888,7 +4888,7 @@ recording::unary_op::make_debug_string ()\n \t\t\t      m_a->get_debug_string ());\n }\n \n-static const char * const unary_op_reproducer_strings[] = {\n+const char * const unary_op_reproducer_strings[] = {\n   \"GCC_JIT_UNARY_OP_MINUS\",\n   \"GCC_JIT_UNARY_OP_BITWISE_NEGATE\",\n   \"GCC_JIT_UNARY_OP_LOGICAL_NEGATE\",\n@@ -4968,7 +4968,7 @@ recording::binary_op::make_debug_string ()\n \t\t\t      m_b->get_debug_string_parens (prec));\n }\n \n-static const char * const binary_op_reproducer_strings[] = {\n+const char * const binary_op_reproducer_strings[] = {\n   \"GCC_JIT_BINARY_OP_PLUS\",\n   \"GCC_JIT_BINARY_OP_MINUS\",\n   \"GCC_JIT_BINARY_OP_MULT\","}, {"sha": "4bd346e0131d3ba78dd5bb26f9e1329017a6b19f", "filename": "gcc/jit/jit-recording.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9/gcc%2Fjit%2Fjit-recording.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9/gcc%2Fjit%2Fjit-recording.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fjit-recording.h?ref=9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9", "patch": "@@ -30,6 +30,9 @@ namespace gcc {\n \n namespace jit {\n \n+extern const char * const unary_op_reproducer_strings[];\n+extern const char * const binary_op_reproducer_strings[];\n+\n class result;\n class dump;\n class reproducer;"}, {"sha": "eec2f00c59ee1091c0618420d76796119dc61168", "filename": "gcc/jit/libgccjit.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9/gcc%2Fjit%2Flibgccjit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9/gcc%2Fjit%2Flibgccjit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Flibgccjit.c?ref=9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9", "patch": "@@ -1336,6 +1336,13 @@ gcc_jit_context_new_unary_op (gcc_jit_context *ctxt,\n     \"unrecognized value for enum gcc_jit_unary_op: %i\",\n     op);\n   RETURN_NULL_IF_FAIL (result_type, ctxt, loc, \"NULL result_type\");\n+  RETURN_NULL_IF_FAIL_PRINTF3 (\n+    result_type->is_numeric (), ctxt, loc,\n+    \"gcc_jit_unary_op %s with operand %s \"\n+    \"has non-numeric result_type: %s\",\n+    gcc::jit::unary_op_reproducer_strings[op],\n+    rvalue->get_debug_string (),\n+    result_type->get_debug_string ());\n   RETURN_NULL_IF_FAIL (rvalue, ctxt, loc, \"NULL rvalue\");\n \n   return (gcc_jit_rvalue *)ctxt->new_unary_op (loc, op, result_type, rvalue);\n@@ -1387,9 +1394,10 @@ gcc_jit_context_new_binary_op (gcc_jit_context *ctxt,\n     b->get_type ()->get_debug_string ());\n   RETURN_NULL_IF_FAIL_PRINTF4 (\n     result_type->is_numeric (), ctxt, loc,\n-    \"gcc_jit_binary_op %i with operands a: %s b: %s \"\n-    \"has non numeric result_type: %s\",\n-    op, a->get_debug_string (), b->get_debug_string (),\n+    \"gcc_jit_binary_op %s with operands a: %s b: %s \"\n+    \"has non-numeric result_type: %s\",\n+    gcc::jit::binary_op_reproducer_strings[op],\n+    a->get_debug_string (), b->get_debug_string (),\n     result_type->get_debug_string ());\n \n   return (gcc_jit_rvalue *)ctxt->new_binary_op (loc, op, result_type, a, b);"}, {"sha": "d45620e4817f45b2cdffe06b9cfee95a445d3ad1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9", "patch": "@@ -1,3 +1,10 @@\n+2019-07-22  Andrea Corallo <andrea.corallo@arm.com>\n+\n+\t* jit.dg/test-error-gcc_jit_context_new_unary_op-bad-res-type.c:\n+\tNew testcase.\n+\t* jit.dg/test-error-gcc_jit_context_new_binary_op-bad-res-type.c:\n+\tAdjust error message.\n+\n 2019-07-22  Paul A. Clarke  <pc@us.ibm.com>\n \n \t* gcc.target/powerpc/sse4_1-check.h: New."}, {"sha": "fbbb2e704d3b5a9352a0ab2ce4f9725e7a8085f1", "filename": "gcc/testsuite/jit.dg/test-error-gcc_jit_context_new_binary_op-bad-res-type.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9/gcc%2Ftestsuite%2Fjit.dg%2Ftest-error-gcc_jit_context_new_binary_op-bad-res-type.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9/gcc%2Ftestsuite%2Fjit.dg%2Ftest-error-gcc_jit_context_new_binary_op-bad-res-type.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fjit.dg%2Ftest-error-gcc_jit_context_new_binary_op-bad-res-type.c?ref=9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9", "patch": "@@ -35,7 +35,7 @@ verify_code (gcc_jit_context *ctxt, gcc_jit_result *result)\n \n   /* Verify that the correct error message was emitted.\t */\n   CHECK_STRING_VALUE (gcc_jit_context_get_first_error (ctxt),\n-\t\t      \"gcc_jit_context_new_binary_op: gcc_jit_binary_op 1 with\"\n-\t\t      \" operands a: (int)1 b: (int)2 has non numeric \"\n-\t\t      \"result_type: void *\");\n+\t\t      \"gcc_jit_context_new_binary_op: gcc_jit_binary_op \"\n+\t\t      \"GCC_JIT_BINARY_OP_MINUS with operands a: \"\n+\t\t      \"(int)1 b: (int)2 has non-numeric result_type: void *\");\n }"}, {"sha": "fae722abaa0e351cb467631a6ade1b908f5bf781", "filename": "gcc/testsuite/jit.dg/test-error-gcc_jit_context_new_unary_op-bad-res-type.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9/gcc%2Ftestsuite%2Fjit.dg%2Ftest-error-gcc_jit_context_new_unary_op-bad-res-type.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9/gcc%2Ftestsuite%2Fjit.dg%2Ftest-error-gcc_jit_context_new_unary_op-bad-res-type.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fjit.dg%2Ftest-error-gcc_jit_context_new_unary_op-bad-res-type.c?ref=9afb91b2d1aeabf49a2b76556ec6fe18dd5790f9", "patch": "@@ -0,0 +1,38 @@\n+#include <stdlib.h>\n+#include <stdio.h>\n+\n+#include \"libgccjit.h\"\n+\n+#include \"harness.h\"\n+\n+/* Try to create an unary operator with invalid result type.  */\n+\n+void\n+create_code (gcc_jit_context *ctxt, void *user_data)\n+{\n+  gcc_jit_type *int_type =\n+    gcc_jit_context_get_type (ctxt, GCC_JIT_TYPE_INT);\n+  gcc_jit_type *void_ptr_type =\n+    gcc_jit_context_get_type (ctxt, GCC_JIT_TYPE_VOID_PTR);\n+\n+  gcc_jit_context_new_unary_op (\n+    ctxt,\n+    NULL,\n+    GCC_JIT_UNARY_OP_LOGICAL_NEGATE,\n+    void_ptr_type,\n+    gcc_jit_context_new_rvalue_from_int (ctxt,\n+\t\t\t\t\t int_type,\n+\t\t\t\t\t 1));\n+}\n+\n+void\n+verify_code (gcc_jit_context *ctxt, gcc_jit_result *result)\n+{\n+  CHECK_VALUE (result, NULL);\n+\n+  /* Verify that the correct error message was emitted.\t */\n+  CHECK_STRING_VALUE (gcc_jit_context_get_first_error (ctxt),\n+\t\t      \"gcc_jit_context_new_unary_op: gcc_jit_unary_op \"\n+\t\t      \"GCC_JIT_UNARY_OP_LOGICAL_NEGATE with operand \"\n+\t\t      \"(int)1 has non-numeric result_type: void *\");\n+}"}]}