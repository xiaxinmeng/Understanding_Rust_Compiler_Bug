{"sha": "a7ffc1ef6e38c01037c8894a6bc1889d6f875444", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdmZmMxZWY2ZTM4YzAxMDM3Yzg4OTRhNmJjMTg4OWQ2Zjg3NTQ0NA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-05-18T00:16:40Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-05-18T00:16:40Z"}, "message": "Daily bump.", "tree": {"sha": "ff8dfcd77746bfd9af8b1fe1edb5bfb6e76faab6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff8dfcd77746bfd9af8b1fe1edb5bfb6e76faab6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7ffc1ef6e38c01037c8894a6bc1889d6f875444", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ffc1ef6e38c01037c8894a6bc1889d6f875444", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7ffc1ef6e38c01037c8894a6bc1889d6f875444", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/comments", "author": null, "committer": null, "parents": [{"sha": "3f476de7fd274f619a0b04c2e2f7077ee8ab17a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f476de7fd274f619a0b04c2e2f7077ee8ab17a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f476de7fd274f619a0b04c2e2f7077ee8ab17a5"}], "stats": {"total": 313, "additions": 312, "deletions": 1}, "files": [{"sha": "0566890b56a60f7fa0ddec8968777f64a19e32f7", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=a7ffc1ef6e38c01037c8894a6bc1889d6f875444", "patch": "@@ -1,3 +1,7 @@\n+2021-05-17  Serge Belyshev  <belyshev@depni.sinp.msu.ru>\n+\n+\t* MAINTAINERS (Write After Approval): Add myself.\n+\n 2021-05-12  Marcel Vollweiler  <marcel@codesourcery.com>\n \n \t* MAINTAINERS (Write After Approval): Add myself."}, {"sha": "b97710f675c527d7c85cbd15596912e5947d3b7f", "filename": "contrib/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=a7ffc1ef6e38c01037c8894a6bc1889d6f875444", "patch": "@@ -1,3 +1,16 @@\n+2021-05-17  Richard Biener  <rguenther@suse.de>\n+\n+\t* download_prerequisites: Update mpfr version to 3.1.6.\n+\t* prerequisites.md5: Update.\n+\t* prerequisites.sha512: Likewise.\n+\n+2021-05-17  Richard Biener  <rguenther@suse.de>\n+\n+\tRevert:\n+\t2021-05-14  Martin Liska  <mliska@suse.cz>\n+\n+\t* download_prerequisites: Use version 4.1.0.\n+\n 2021-05-14  Martin Liska  <mliska@suse.cz>\n \n \t* download_prerequisites: Use version 4.1.0."}, {"sha": "fe5132dc668065a01852d853ad1e9c6eb1752ef8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7ffc1ef6e38c01037c8894a6bc1889d6f875444", "patch": "@@ -1,3 +1,118 @@\n+2021-05-17  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/100512\n+\t* gimple-range-cache.cc (ranger_cache::set_global_range): Mark const\n+\tand non-zero pointer ranges as invariant.\n+\t* gimple-range.cc (gimple_ranger::range_of_stmt): Remove pointer\n+\tprocessing from here.\n+\n+2021-05-17  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR target/100497\n+\t* config/nvptx/nvptx-protos.h (nvptx_output_atomic_insn): Declare\n+\t* config/nvptx/nvptx.c (nvptx_output_barrier)\n+\t(nvptx_output_atomic_insn): New function.\n+\t(nvptx_print_operand): Add support for 'B'.\n+\t* config/nvptx/nvptx.md: Use nvptx_output_atomic_insn for atomic\n+\tinsns.\n+\n+2021-05-17  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR tree-optimization/100349\n+\t* vr-values.c (bounds_of_var_in_loop): Bail if scev returns\n+\t  NULL.\n+\n+2021-05-17  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* config/aarch64/driver-aarch64.c (DEFAULT_ARCH): New.\n+\t(host_detect_local_cpu): Use it.\n+\n+2021-05-17  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/invoke.texi: Add 2 missing dots.\n+\n+2021-05-17  Marius Hillenbrand  <mhillen@linux.ibm.com>\n+\n+\tPR bootstrap/100552\n+\t* configure.ac: Replace pattern substitution with call to sed.\n+\t* configure: Regenerate.\n+\n+2021-05-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/100582\n+\t* tree.c (array_at_struct_end_p): Get to the base of the\n+\treference before looking for the underlying decl.\n+\n+2021-05-17  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* genoutput.c (validate_insn_alternatives) Make \"wrong number of\n+\talternatives\" message more specific, and remove assumption on where\n+\tthe problem is.\n+\n+2021-05-17  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* config/arm/iterators.md (V16): New iterator.\n+\t(VH_cvtto): New iterator.\n+\t(v_cmp_result): Added V4HF and V8HF support.\n+\t* config/arm/vec-common.md (vec_cmp<mode><v_cmp_result>): Use VDQWH.\n+\t(vcond<mode><mode>): Likewise.\n+\t(vcond_mask_<mode><v_cmp_result>): Likewise.\n+\t(vcond<VH_cvtto><mode>): New expander.\n+\n+2021-05-17  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* config/arm/arm-protos.h (arm_expand_vector_compare): Update\n+\tprototype.\n+\t* config/arm/arm.c (arm_expand_vector_compare): Add support for\n+\tMVE.\n+\t(arm_expand_vcond): Likewise.\n+\t* config/arm/iterators.md (supf): Remove VCMPNEQ_S, VCMPEQQ_S,\n+\tVCMPEQQ_N_S, VCMPNEQ_N_S.\n+\t(VCMPNEQ, VCMPEQQ, VCMPEQQ_N, VCMPNEQ_N): Remove.\n+\t* config/arm/mve.md (@mve_vcmp<mve_cmp_op>q_<mode>): Add '@' prefix.\n+\t(@mve_vcmp<mve_cmp_op>q_f<mode>): Likewise.\n+\t(@mve_vcmp<mve_cmp_op>q_n_f<mode>): Likewise.\n+\t(@mve_vpselq_<supf><mode>): Likewise.\n+\t(@mve_vpselq_f<mode>\"): Likewise.\n+\t* config/arm/neon.md (vec_cmp<mode><v_cmp_result): Enable for MVE\n+\tand move to vec-common.md.\n+\t(vec_cmpu<mode><mode>): Likewise.\n+\t(vcond<mode><mode>): Likewise.\n+\t(vcond<V_cvtto><mode>): Likewise.\n+\t(vcondu<mode><v_cmp_result>): Likewise.\n+\t(vcond_mask_<mode><v_cmp_result>): Likewise.\n+\t* config/arm/unspecs.md (VCMPNEQ_U, VCMPNEQ_S, VCMPEQQ_S)\n+\t(VCMPEQQ_N_S, VCMPNEQ_N_S, VCMPEQQ_U, CMPEQQ_N_U, VCMPNEQ_N_U)\n+\t(VCMPGEQ_N_S, VCMPGEQ_S, VCMPGTQ_N_S, VCMPGTQ_S, VCMPLEQ_N_S)\n+\t(VCMPLEQ_S, VCMPLTQ_N_S, VCMPLTQ_S, VCMPCSQ_N_U, VCMPCSQ_U)\n+\t(VCMPHIQ_N_U, VCMPHIQ_U): Remove.\n+\t* config/arm/vec-common.md (vec_cmp<mode><v_cmp_result): Moved\n+\tfrom neon.md.\n+\t(vec_cmpu<mode><mode>): Likewise.\n+\t(vcond<mode><mode>): Likewise.\n+\t(vcond<V_cvtto><mode>): Likewise.\n+\t(vcondu<mode><v_cmp_result>): Likewise.\n+\t(vcond_mask_<mode><v_cmp_result>): Likewise. Added unsafe math\n+\tcondition.\n+\n+2021-05-17  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/100549\n+\t* config/i386/i386.c (ix86_gimple_fold_builtin): Use\n+\tgsi_insert_seq_before instead.\n+\n+2021-05-17  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* doc/sourcebuild.texi (arm_qbit_ok): Rename into...\n+\t(arm_sat_ok): ...this.\n+\n+2021-05-17  Martin Liska  <mliska@suse.cz>\n+\n+\t* lto-wrapper.c (merge_flto_options): Factor out a new function.\n+\t(merge_and_complain): Use it.\n+\t(run_gcc): Merge also linker command line -flto=foo argument\n+\twith IL files.\n+\n 2021-05-16  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* config/arm/arm.h (CPP_SPEC): Remove error message about"}, {"sha": "7fa5a770779d42b0338ec59fa0f20dcc6f02e919", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=a7ffc1ef6e38c01037c8894a6bc1889d6f875444", "patch": "@@ -1 +1 @@\n-20210517\n+20210518"}, {"sha": "cc1019cf9bc3f77c2f8de404c5600f8278fc296e", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=a7ffc1ef6e38c01037c8894a6bc1889d6f875444", "patch": "@@ -1,3 +1,8 @@\n+2021-05-17  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* c-common.c (braced_list_to_string): Return CTOR unchanged\n+\tif host and target character sizes don't match.\n+\n 2021-05-14  Martin Liska  <mliska@suse.cz>\n \n \t* c.opt: Add Warning keyword for 2 options."}, {"sha": "7d34f7c14785ffa408923927522c90a57efea3dc", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=a7ffc1ef6e38c01037c8894a6bc1889d6f875444", "patch": "@@ -1,3 +1,9 @@\n+2021-05-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c/100625\n+\t* gimple-parser.c (c_parser_gimple_label): Avoid building\n+\ta GIMPLE label with NULL label decl.\n+\n 2021-05-13  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/100550"}, {"sha": "45af840a03a317bc3d77afe70568f39125481738", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a7ffc1ef6e38c01037c8894a6bc1889d6f875444", "patch": "@@ -1,3 +1,9 @@\n+2021-05-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR c++/100635\n+\t* call.c (convert_like_internal): Print different diagnostic if\n+\tthe lvalue reference is const.\n+\n 2021-05-14  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/95870"}, {"sha": "54fa0ee50b126673030607a583ab35e5298757c9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a7ffc1ef6e38c01037c8894a6bc1889d6f875444", "patch": "@@ -1,3 +1,15 @@\n+2021-05-17  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/98411\n+\t* trans-decl.c (gfc_finish_var_decl): Add check for explicit SAVE\n+\tattribute.\n+\n+2021-05-17  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/100633\n+\t* resolve.c (gfc_resolve_code): Reject nonintrinsic assignments in\n+\tOMP WORKSHARE.\n+\n 2021-05-14  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* dump-parse-tree.c (show_omp_node, show_code_node): Handle"}, {"sha": "914153450ad92cb9bb6b05488265b4e4be4cc469", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a7ffc1ef6e38c01037c8894a6bc1889d6f875444", "patch": "@@ -1,3 +1,96 @@\n+2021-05-17  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/100512\n+\t* gcc.dg/pr100512.c: New.\n+\n+2021-05-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* g++.dg/conversion/pr100635.C: New test.\n+\n+2021-05-17  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/98411\n+\t* gfortran.dg/pr98411.f90: New test.\n+\n+2021-05-17  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* gcc.dg/pr100349.c: New test.\n+\n+2021-05-17  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* gcc.target/aarch64/cpunative/info_16: New test.\n+\t* gcc.target/aarch64/cpunative/info_17: New test.\n+\t* gcc.target/aarch64/cpunative/native_cpu_16.c: New test.\n+\t* gcc.target/aarch64/cpunative/native_cpu_17.c: New test.\n+\n+2021-05-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c/100625\n+\t* gcc.dg/gimplefe-error-9.c: New testcase.\n+\n+2021-05-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/100582\n+\t* gcc.target/i386/pr100582.c: New testcase.\n+\n+2021-05-17  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/arm/simd/mve-compare-3.c: New test with GCC vectors.\n+\t* gcc.target/arm/simd/mve-vcmp-f16.c: New test for\n+\tauto-vectorization.\n+\t* gcc.target/arm/armv8_2-fp16-arith-1.c: Adjust since we now\n+\tvectorize float16_t vectors.\n+\n+2021-05-17  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/arm/simd/mve-compare-1.c: New test with GCC vectors.\n+\t* gcc.target/arm/simd/mve-compare-2.c: New test with GCC vectors.\n+\t* gcc.target/arm/simd/mve-compare-scalar-1.c: New test with GCC\n+\tvectors.\n+\t* gcc.target/arm/simd/mve-vcmp-f32.c: New test for\n+\tauto-vectorization.\n+\t* gcc.target/arm/simd/mve-vcmp.c: New test for auto-vectorization.\n+\n+2021-05-17  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/100549\n+\t* gcc.target/i386/pr100549.c: New test.\n+\n+2021-05-17  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/arm/simd/mve-vadd-scalar-1.c: New.\n+\n+2021-05-17  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/arm/simd/mve-vadd-1.c: New.\n+\n+2021-05-17  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/arm/simd/mve-vsub_1.c: Factorize and add __fp16 test.\n+\n+2021-05-17  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/arm/simd/mve-vshr.c: Add more scan-assembler-times.\n+\n+2021-05-17  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/arm/acle/saturation.c: Use arm_sat_ok effective\n+\ttarget.\n+\t* lib/target-supports.exp\n+\t(check_effective_target_arm_qbit_ok_nocache): Rename into...\n+\t(check_effective_target_arm_sat_ok_nocache): ... this. Check\n+\t__ARM_FEATURE_SAT and use armv6.\n+\n+2021-05-17  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/100633\n+\t* gfortran.dg/gomp/workshare-59.f90: New test.\n+\n+2021-05-17  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\tPR debug/100515\n+\t* gcc.dg/debug/dwarf2/pr100515.c: Require openmp effective-target.\n+\n 2021-05-16  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* g++.dg/ext/attrib63.C: Add -Wno-psabi option."}, {"sha": "8caeda027401c5076d6381abf6ee82bad5cb3c47", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=a7ffc1ef6e38c01037c8894a6bc1889d6f875444", "patch": "@@ -1,3 +1,9 @@\n+2021-05-17  Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\n+\t* task.c (omp_fulfill_event): Call gomp_team_barrier_set_task_pending\n+\tif new tasks generated.\n+\t* testsuite/libgomp.c-c++-common/task-detach-13.c: New.\n+\n 2021-05-14  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* testsuite/libgomp.fortran/parallel-master.f90: New test."}, {"sha": "91ba01720858155d6735aaf6ffaf20d18932684e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ffc1ef6e38c01037c8894a6bc1889d6f875444/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a7ffc1ef6e38c01037c8894a6bc1889d6f875444", "patch": "@@ -1,3 +1,54 @@\n+2021-05-17  Thomas Rodgers  <rodgert@twrodgers.com>\n+\n+\t* include/bits/atomic_wait.h (__waiter::_M_do_wait_v): loop\n+\tuntil value change observed.\n+\t(__waiter_base::_M_laundered): New member.\n+\t(__waiter_base::_M_notify): Check _M_laundered to determine\n+\twhether to wake one or all.\n+\t(__detail::__atomic_compare): Return true if call to\n+\t__builtin_memcmp() == 0.\n+\t(__waiter_base::_S_do_spin_v): Adjust predicate.\n+\t* testsuite/29_atomics/atomic/wait_notify/100334.cc: New\n+\ttest.\n+\n+2021-05-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/100630\n+\t* include/experimental/bits/fs_path.h (__is_constructible_from):\n+\tTest construction from a const lvalue, not an rvalue.\n+\t* testsuite/27_io/filesystem/path/construct/100630.cc: New test.\n+\t* testsuite/experimental/filesystem/path/construct/100630.cc:\n+\tNew test.\n+\n+2021-05-17  Antony Polukhin  <antoshkka@gmail.com>\n+\n+\tPR libstdc++/89728\n+\t* include/bits/locale_facets.h (ctype<basic_string<C,T,A>>):\n+\tDeclare (but do not define) partial specialization.\n+\t* testsuite/22_locale/ctype/is/string/89728_neg.cc: New test.\n+\n+2021-05-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/thread (jthread::_S_create): Fix static assert\n+\tmessage.\n+\t* testsuite/30_threads/jthread/95989.cc: Re-enable test.\n+\t* testsuite/30_threads/jthread/jthread.cc: Do not require\n+\tpthread effective target.\n+\t* testsuite/30_threads/jthread/2.cc: Moved to...\n+\t* testsuite/30_threads/jthread/version.cc: ...here.\n+\n+2021-05-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/Makefile.am: Simplify doxygen recipes and use --latex_cmd.\n+\t* doc/Makefile.in: Regenerate.\n+\t* doc/doxygen/user.cfg.in (LATEX_CMD_NAME): Add placeholder\n+\tvalue.\n+\t* scripts/run_doxygen (print_usage): Always print to stdout and\n+\tdo not exit.\n+\t(fail): New function for exiting on error.\n+\t(parse_options): Handle --latex_cmd. Do not treat --help the\n+\tsame as errors. Simplify handling of required arguments.\n+\n 2021-05-12  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/25_algorithms/pstl/alg_nonmodifying/find_end.cc:"}]}