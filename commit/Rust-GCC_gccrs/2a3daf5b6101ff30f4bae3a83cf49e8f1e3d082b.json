{"sha": "2a3daf5b6101ff30f4bae3a83cf49e8f1e3d082b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmEzZGFmNWI2MTAxZmYzMGY0YmFlM2E4M2NmNDllOGYxZTNkMDgyYg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2019-08-29T19:47:19Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2019-08-29T19:47:19Z"}, "message": "* config/i386/i386-features.c\n\t(general_scalar_chain::compute_convert_gain):\n\tCorrect cost for double-word shifts.\n\t(general_scalar_to_vector_candidate_p): Reject count operands\n\tgreater or equal to mode bitsize.\n\nFrom-SVN: r275055", "tree": {"sha": "c7427e373daa9fded7f2e6858761e2bb0222c579", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7427e373daa9fded7f2e6858761e2bb0222c579"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a3daf5b6101ff30f4bae3a83cf49e8f1e3d082b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a3daf5b6101ff30f4bae3a83cf49e8f1e3d082b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a3daf5b6101ff30f4bae3a83cf49e8f1e3d082b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a3daf5b6101ff30f4bae3a83cf49e8f1e3d082b/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d1041899c2d24d0e001f8a48035881c7d4553aa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1041899c2d24d0e001f8a48035881c7d4553aa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1041899c2d24d0e001f8a48035881c7d4553aa2"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "e09649766e321c0d9a6722abf4ce4925da01a021", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a3daf5b6101ff30f4bae3a83cf49e8f1e3d082b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a3daf5b6101ff30f4bae3a83cf49e8f1e3d082b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a3daf5b6101ff30f4bae3a83cf49e8f1e3d082b", "patch": "@@ -1,3 +1,11 @@\n+2019-08-29  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386-features.c\n+\t(general_scalar_chain::compute_convert_gain):\n+\tCorrect cost for double-word shifts.\n+\t(general_scalar_to_vector_candidate_p): Reject count operands\n+\tgreater or equal to mode bitsize.\n+\n 2019-08-29  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (inline_secondary_memory_needed): Return true"}, {"sha": "454eeaebef9f2a2e3b2abf00cd66abd7f5327943", "filename": "gcc/config/i386/i386-features.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a3daf5b6101ff30f4bae3a83cf49e8f1e3d082b/gcc%2Fconfig%2Fi386%2Fi386-features.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a3daf5b6101ff30f4bae3a83cf49e8f1e3d082b/gcc%2Fconfig%2Fi386%2Fi386-features.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-features.c?ref=2a3daf5b6101ff30f4bae3a83cf49e8f1e3d082b", "patch": "@@ -549,11 +549,18 @@ general_scalar_chain::compute_convert_gain ()\n \t       || GET_CODE (src) == ASHIFTRT\n \t       || GET_CODE (src) == LSHIFTRT)\n \t{\n+\t  if (m == 2)\n+\t    {\n+\t      if (INTVAL (XEXP (src, 1)) >= 32)\n+\t\tigain += ix86_cost->add;\n+\t      else\n+\t\tigain += ix86_cost->shift_const;\n+\t    }\n+\n+\t  igain += ix86_cost->shift_const - ix86_cost->sse_op;\n+\n \t  if (CONST_INT_P (XEXP (src, 0)))\n \t    igain -= vector_const_cost (XEXP (src, 0));\n-\t  igain += m * ix86_cost->shift_const - ix86_cost->sse_op;\n-\t  if (INTVAL (XEXP (src, 1)) >= 32)\n-\t    igain -= COSTS_N_INSNS (1);\n \t}\n       else if (GET_CODE (src) == PLUS\n \t       || GET_CODE (src) == MINUS\n@@ -1359,7 +1366,7 @@ general_scalar_to_vector_candidate_p (rtx_insn *insn, enum machine_mode mode)\n     case ASHIFT:\n     case LSHIFTRT:\n       if (!CONST_INT_P (XEXP (src, 1))\n-\t  || !IN_RANGE (INTVAL (XEXP (src, 1)), 0, 63))\n+\t  || !IN_RANGE (INTVAL (XEXP (src, 1)), 0, GET_MODE_BITSIZE (mode)-1))\n \treturn false;\n       break;\n "}]}