{"sha": "c54d30fae2e101b5b4ac7e88e159216cfa9b9afa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU0ZDMwZmFlMmUxMDFiNWI0YWM3ZTg4ZTE1OTIxNmNmYTliOWFmYQ==", "commit": {"author": {"name": "Bryce McKinlay", "email": "mckinlay@redhat.com", "date": "2004-11-30T00:38:57Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2004-11-30T00:38:57Z"}, "message": "re PR libgcj/18699 (SIGSEGV in GC_local_gcj_malloc)\n\n2004-11-29  Bryce McKinlay  <mckinlay@redhat.com>\n\n        PR libgcj/18699\n        Revert patches of 2004-11-26 and 2004-11-27.\n\nFrom-SVN: r91505", "tree": {"sha": "a79c5437aaf5543dbb2ab0466e765c08b414b31e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a79c5437aaf5543dbb2ab0466e765c08b414b31e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c54d30fae2e101b5b4ac7e88e159216cfa9b9afa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c54d30fae2e101b5b4ac7e88e159216cfa9b9afa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c54d30fae2e101b5b4ac7e88e159216cfa9b9afa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c54d30fae2e101b5b4ac7e88e159216cfa9b9afa/comments", "author": null, "committer": null, "parents": [{"sha": "1ac0ac8b905ca91a7b5b8af907237133d65f2a5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ac0ac8b905ca91a7b5b8af907237133d65f2a5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ac0ac8b905ca91a7b5b8af907237133d65f2a5c"}], "stats": {"total": 328, "additions": 166, "deletions": 162}, "files": [{"sha": "eb7c8b22c334eec966b4d1fd1b01ab5a2888830d", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54d30fae2e101b5b4ac7e88e159216cfa9b9afa/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54d30fae2e101b5b4ac7e88e159216cfa9b9afa/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=c54d30fae2e101b5b4ac7e88e159216cfa9b9afa", "patch": "@@ -1,3 +1,8 @@\n+2004-11-29  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\tPR libgcj/18699\n+\tRevert patches of 2004-11-26 and 2004-11-27.\n+\n 2004-11-29  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* configure: Regenerate for libtool change."}, {"sha": "b950a0706c4fd345584dc9c93fd880ad85623baa", "filename": "boehm-gc/configure", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54d30fae2e101b5b4ac7e88e159216cfa9b9afa/boehm-gc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54d30fae2e101b5b4ac7e88e159216cfa9b9afa/boehm-gc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure?ref=c54d30fae2e101b5b4ac7e88e159216cfa9b9afa", "patch": "@@ -4317,7 +4317,14 @@ irix5* | irix6*)\n \n # This must be Linux ELF.\n linux-gnu*)\n-  lt_cv_deplibs_check_method=pass_all\n+  case $host_cpu in\n+  alpha* | mips* | hppa* | i*86 | powerpc* | sparc* | ia64* | sh* )\n+    lt_cv_deplibs_check_method=pass_all ;;\n+  *)\n+    # glibc up to 2.1.1 does not perform some relocations on ARM\n+    lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [LM]SB (shared object|dynamic lib )' ;;\n+  esac\n+  lt_cv_file_magic_test_file=`echo /lib/libc.so* /lib/libc-*.so`\n   ;;\n \n netbsd* | knetbsd*-gnu)\n@@ -4712,7 +4719,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 4715 \"configure\"' > conftest.$ac_ext\n+  echo '#line 4722 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -6580,7 +6587,7 @@ else\n   multilib_arg=\n fi\n \n-                    ac_config_headers=\"$ac_config_headers include/config.h include/gc_config.h\"\n+          ac_config_headers=\"$ac_config_headers include/gc_config.h\"\n \n \n                     ac_config_files=\"$ac_config_files Makefile include/Makefile\"\n@@ -7177,7 +7184,6 @@ do\n   \"include/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES include/Makefile\" ;;\n   \"default-1\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS default-1\" ;;\n   \"depfiles\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS depfiles\" ;;\n-  \"include/config.h\" ) CONFIG_HEADERS=\"$CONFIG_HEADERS include/config.h\" ;;\n   \"include/gc_config.h\" ) CONFIG_HEADERS=\"$CONFIG_HEADERS include/gc_config.h\" ;;\n   *) { { echo \"$as_me:$LINENO: error: invalid argument: $ac_config_target\" >&5\n echo \"$as_me: error: invalid argument: $ac_config_target\" >&2;}"}, {"sha": "7d1c6e3df1b36b96e0c3b9452156a23cb7397903", "filename": "boehm-gc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54d30fae2e101b5b4ac7e88e159216cfa9b9afa/boehm-gc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54d30fae2e101b5b4ac7e88e159216cfa9b9afa/boehm-gc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure.ac?ref=c54d30fae2e101b5b4ac7e88e159216cfa9b9afa", "patch": "@@ -468,7 +468,7 @@ else\n   multilib_arg=\n fi\n \n-AC_CONFIG_HEADERS([include/config.h include/gc_config.h])\n+AC_CONFIG_HEADERS([include/gc_config.h])\n \n AC_CONFIG_FILES(Makefile include/Makefile)\n AC_OUTPUT"}, {"sha": "ba593b23ee0071530fc032a3b8afc79eb24d50cc", "filename": "boehm-gc/include/config.h.in", "status": "removed", "additions": 0, "deletions": 152, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ac0ac8b905ca91a7b5b8af907237133d65f2a5c/boehm-gc%2Finclude%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ac0ac8b905ca91a7b5b8af907237133d65f2a5c/boehm-gc%2Finclude%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fconfig.h.in?ref=1ac0ac8b905ca91a7b5b8af907237133d65f2a5c", "patch": "@@ -1,152 +0,0 @@\n-/* include/config.h.in.  Generated from configure.ac by autoheader.  */\n-\n-/* allows all pointers to the interior of objects to be recognized */\n-#undef ALL_INTERIOR_POINTERS\n-\n-/* include code for GC_malloc_atomic_uncollectable */\n-#undef ATOMIC_UNCOLLECTABLE\n-\n-/* No description */\n-#undef DATASTART_IS_ETEXT\n-\n-/* Make sure that all objects have debug headers */\n-#undef DBG_HDRS_ALL\n-\n-/* No description */\n-#undef DGUX_THREADS\n-\n-/* Target is ECOS */\n-#undef ECOS\n-\n-/* support AIX threads */\n-#undef GC_AIX_THREADS\n-\n-/* support for Mac OS X pthreads */\n-#undef GC_DARWIN_THREADS\n-\n-/* support for DB/UX on I386 threads */\n-#undef GC_DGUX386_THREADS\n-\n-/* support FreeBSD threads */\n-#undef GC_FREEBSD_THREADS\n-\n-/* include support for gcj */\n-#undef GC_GCJ_SUPPORT\n-\n-/* enables support for HP/UX 11 pthreads */\n-#undef GC_HPUX_THREADS\n-\n-/* support for Irix pthreads */\n-#undef GC_IRIX_THREADS\n-\n-/* support for Xavier Leroy's Linux threads */\n-#undef GC_LINUX_THREADS\n-\n-/* support for Tru64 pthreads */\n-#undef GC_OSF1_THREADS\n-\n-/* support for Solaris pthreads */\n-#undef GC_SOLARIS_PTHREADS\n-\n-/* support for Solaris (thr_) threads */\n-#undef GC_SOLARIS_THREADS\n-\n-/* support for win32 threads */\n-#undef GC_WIN32_THREADS\n-\n-/* Define to 1 if you have the <inttypes.h> header file. */\n-#undef HAVE_INTTYPES_H\n-\n-/* Define to 1 if you have the <memory.h> header file. */\n-#undef HAVE_MEMORY_H\n-\n-/* Define to 1 if you have the <stdint.h> header file. */\n-#undef HAVE_STDINT_H\n-\n-/* Define to 1 if you have the <stdlib.h> header file. */\n-#undef HAVE_STDLIB_H\n-\n-/* Define to 1 if you have the <strings.h> header file. */\n-#undef HAVE_STRINGS_H\n-\n-/* Define to 1 if you have the <string.h> header file. */\n-#undef HAVE_STRING_H\n-\n-/* Define to 1 if you have the <sys/stat.h> header file. */\n-#undef HAVE_SYS_STAT_H\n-\n-/* Define to 1 if you have the <sys/types.h> header file. */\n-#undef HAVE_SYS_TYPES_H\n-\n-/* Define to 1 if you have the <unistd.h> header file. */\n-#undef HAVE_UNISTD_H\n-\n-/* make it somewhat safer to finalize objects out of order */\n-#undef JAVA_FINALIZATION\n-\n-/* Add code to save back pointers */\n-#undef KEEP_BACK_PTRS\n-\n-/* Enable GC_PRINT_BACK_HEIGHT environment variable */\n-#undef MAKE_BACK_GRAPH\n-\n-/* removes GC_dump */\n-#undef NO_DEBUGGING\n-\n-/* cause some or all of the heap to not have execute permission */\n-#undef NO_EXECUTE_PERMISSION\n-\n-/* Define to 1 if your C compiler doesn't accept -c and -o together. */\n-#undef NO_MINUS_C_MINUS_O\n-\n-/* does not disable signals */\n-#undef NO_SIGNALS\n-\n-/* use empty GC_disable_signals and GC_enable_signals */\n-#undef NO_SIGSET\n-\n-/* Define to the address where bug reports for this package should be sent. */\n-#undef PACKAGE_BUGREPORT\n-\n-/* Define to the full name of this package. */\n-#undef PACKAGE_NAME\n-\n-/* Define to the full name and version of this package. */\n-#undef PACKAGE_STRING\n-\n-/* Define to the one symbol short name of this package. */\n-#undef PACKAGE_TARNAME\n-\n-/* Define to the version of this package. */\n-#undef PACKAGE_VERSION\n-\n-/* allow the marker to run in multiple threads */\n-#undef PARALLEL_MARK\n-\n-/* number of call frames saved with objects allocated through the debugging\n-   interface */\n-#undef SAVE_CALL_COUNT\n-\n-/* disables statistics printing */\n-#undef SILENT\n-\n-/* PROC_VDB in Solaris 2.5 gives wrong values for dirty bits */\n-#undef SOLARIS25_PROC_VDB_BUG_FIXED\n-\n-/* No description */\n-#undef STACKBASE\n-\n-/* Define to 1 if you have the ANSI C header files. */\n-#undef STDC_HEADERS\n-\n-/* Avoid Solaris 5.3 dynamic library bug */\n-#undef SUNOS53_SHARED_LIB\n-\n-/* define GC_local_malloc() & GC_local_malloc_atomic() */\n-#undef THREAD_LOCAL_ALLOC\n-\n-/* POSIX version of C Source */\n-#undef _POSIX_C_SOURCE\n-\n-/* Use reentrant code */\n-#undef _REENTRANT"}, {"sha": "e1f2aa8f80fe75b154125e46eece81f4bc4b572e", "filename": "boehm-gc/include/gc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54d30fae2e101b5b4ac7e88e159216cfa9b9afa/boehm-gc%2Finclude%2Fgc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54d30fae2e101b5b4ac7e88e159216cfa9b9afa/boehm-gc%2Finclude%2Fgc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fgc.h?ref=c54d30fae2e101b5b4ac7e88e159216cfa9b9afa", "patch": "@@ -30,7 +30,7 @@\n \n # define _GC_H\n \n-# include <config.h>\n+# include <gc_config.h>\n # include \"gc_config_macros.h\"\n \n # if defined(__STDC__) || defined(__cplusplus)"}, {"sha": "60ffb9741b60fe816668f9488b07425d106938bb", "filename": "boehm-gc/include/gc_config.h.in", "status": "modified", "additions": 149, "deletions": 4, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54d30fae2e101b5b4ac7e88e159216cfa9b9afa/boehm-gc%2Finclude%2Fgc_config.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54d30fae2e101b5b4ac7e88e159216cfa9b9afa/boehm-gc%2Finclude%2Fgc_config.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fgc_config.h.in?ref=c54d30fae2e101b5b4ac7e88e159216cfa9b9afa", "patch": "@@ -1,7 +1,152 @@\n-/* gc_config.h. This autoconf header contains macro definitions that are\n-used by GC clients, such as libjava. \n+/* include/gc_config.h.in.  Generated from configure.ac by autoheader.  */\n \n-This file is not generated by autoheader. We only want to define what we\n-really need in order to avoid namespace pollution. */\n+/* allows all pointers to the interior of objects to be recognized */\n+#undef ALL_INTERIOR_POINTERS\n \n+/* include code for GC_malloc_atomic_uncollectable */\n+#undef ATOMIC_UNCOLLECTABLE\n+\n+/* No description */\n+#undef DATASTART_IS_ETEXT\n+\n+/* Make sure that all objects have debug headers */\n+#undef DBG_HDRS_ALL\n+\n+/* No description */\n+#undef DGUX_THREADS\n+\n+/* Target is ECOS */\n+#undef ECOS\n+\n+/* support AIX threads */\n+#undef GC_AIX_THREADS\n+\n+/* support for Mac OS X pthreads */\n+#undef GC_DARWIN_THREADS\n+\n+/* support for DB/UX on I386 threads */\n+#undef GC_DGUX386_THREADS\n+\n+/* support FreeBSD threads */\n+#undef GC_FREEBSD_THREADS\n+\n+/* include support for gcj */\n+#undef GC_GCJ_SUPPORT\n+\n+/* enables support for HP/UX 11 pthreads */\n+#undef GC_HPUX_THREADS\n+\n+/* support for Irix pthreads */\n+#undef GC_IRIX_THREADS\n+\n+/* support for Xavier Leroy's Linux threads */\n+#undef GC_LINUX_THREADS\n+\n+/* support for Tru64 pthreads */\n+#undef GC_OSF1_THREADS\n+\n+/* support for Solaris pthreads */\n+#undef GC_SOLARIS_PTHREADS\n+\n+/* support for Solaris (thr_) threads */\n+#undef GC_SOLARIS_THREADS\n+\n+/* support for win32 threads */\n+#undef GC_WIN32_THREADS\n+\n+/* Define to 1 if you have the <inttypes.h> header file. */\n+#undef HAVE_INTTYPES_H\n+\n+/* Define to 1 if you have the <memory.h> header file. */\n+#undef HAVE_MEMORY_H\n+\n+/* Define to 1 if you have the <stdint.h> header file. */\n+#undef HAVE_STDINT_H\n+\n+/* Define to 1 if you have the <stdlib.h> header file. */\n+#undef HAVE_STDLIB_H\n+\n+/* Define to 1 if you have the <strings.h> header file. */\n+#undef HAVE_STRINGS_H\n+\n+/* Define to 1 if you have the <string.h> header file. */\n+#undef HAVE_STRING_H\n+\n+/* Define to 1 if you have the <sys/stat.h> header file. */\n+#undef HAVE_SYS_STAT_H\n+\n+/* Define to 1 if you have the <sys/types.h> header file. */\n+#undef HAVE_SYS_TYPES_H\n+\n+/* Define to 1 if you have the <unistd.h> header file. */\n+#undef HAVE_UNISTD_H\n+\n+/* make it somewhat safer to finalize objects out of order */\n+#undef JAVA_FINALIZATION\n+\n+/* Add code to save back pointers */\n+#undef KEEP_BACK_PTRS\n+\n+/* Enable GC_PRINT_BACK_HEIGHT environment variable */\n+#undef MAKE_BACK_GRAPH\n+\n+/* removes GC_dump */\n+#undef NO_DEBUGGING\n+\n+/* cause some or all of the heap to not have execute permission */\n+#undef NO_EXECUTE_PERMISSION\n+\n+/* Define to 1 if your C compiler doesn't accept -c and -o together. */\n+#undef NO_MINUS_C_MINUS_O\n+\n+/* does not disable signals */\n+#undef NO_SIGNALS\n+\n+/* use empty GC_disable_signals and GC_enable_signals */\n+#undef NO_SIGSET\n+\n+/* Define to the address where bug reports for this package should be sent. */\n+#undef PACKAGE_BUGREPORT\n+\n+/* Define to the full name of this package. */\n+#undef PACKAGE_NAME\n+\n+/* Define to the full name and version of this package. */\n+#undef PACKAGE_STRING\n+\n+/* Define to the one symbol short name of this package. */\n+#undef PACKAGE_TARNAME\n+\n+/* Define to the version of this package. */\n+#undef PACKAGE_VERSION\n+\n+/* allow the marker to run in multiple threads */\n+#undef PARALLEL_MARK\n+\n+/* number of call frames saved with objects allocated through the debugging\n+   interface */\n+#undef SAVE_CALL_COUNT\n+\n+/* disables statistics printing */\n+#undef SILENT\n+\n+/* PROC_VDB in Solaris 2.5 gives wrong values for dirty bits */\n+#undef SOLARIS25_PROC_VDB_BUG_FIXED\n+\n+/* No description */\n+#undef STACKBASE\n+\n+/* Define to 1 if you have the ANSI C header files. */\n+#undef STDC_HEADERS\n+\n+/* Avoid Solaris 5.3 dynamic library bug */\n+#undef SUNOS53_SHARED_LIB\n+\n+/* define GC_local_malloc() & GC_local_malloc_atomic() */\n #undef THREAD_LOCAL_ALLOC\n+\n+/* POSIX version of C Source */\n+#undef _POSIX_C_SOURCE\n+\n+/* Use reentrant code */\n+#undef _REENTRANT"}]}