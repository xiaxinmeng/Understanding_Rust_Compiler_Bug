{"sha": "b4917c98f0b2659f7a1136465a9439939feb8da8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ5MTdjOThmMGIyNjU5ZjdhMTEzNjQ2NWE5NDM5OTM5ZmViOGRhOA==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2014-12-11T23:11:03Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2014-12-11T23:11:03Z"}, "message": "aarch64-protos.h (tune_params): Add align field.\n\n2014-12-11  Andrew Pinski  <apinski@cavium.com>\n\n        * config/aarch64/aarch64-protos.h (tune_params): Add align field.\n        * config/aarch64/aarch64.c (generic_tunings): Specify align.\n        (cortexa53_tunings): Likewise.\n        (cortexa57_tunings): Likewise.\n        (thunderx_tunings): Likewise.\n        (aarch64_override_options): Set align_loops, align_jumps,\n        align_functions based on what the tuning struct.\n\nFrom-SVN: r218645", "tree": {"sha": "60817803ae9220ff596c2dc283fbdec1565edec1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60817803ae9220ff596c2dc283fbdec1565edec1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4917c98f0b2659f7a1136465a9439939feb8da8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4917c98f0b2659f7a1136465a9439939feb8da8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4917c98f0b2659f7a1136465a9439939feb8da8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4917c98f0b2659f7a1136465a9439939feb8da8/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0c94b59f472bf9379ebbc12b1074a7e9ab2e6be9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c94b59f472bf9379ebbc12b1074a7e9ab2e6be9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c94b59f472bf9379ebbc12b1074a7e9ab2e6be9"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "7478b0f02b2d7ea9499fb7673b80b28bd0d15e4e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4917c98f0b2659f7a1136465a9439939feb8da8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4917c98f0b2659f7a1136465a9439939feb8da8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4917c98f0b2659f7a1136465a9439939feb8da8", "patch": "@@ -1,3 +1,13 @@\n+2014-12-11  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* config/aarch64/aarch64-protos.h (tune_params): Add align field.\n+\t* config/aarch64/aarch64.c (generic_tunings): Specify align.\n+\t(cortexa53_tunings): Likewise.\n+\t(cortexa57_tunings): Likewise.\n+\t(thunderx_tunings): Likewise.\n+\t(aarch64_override_options): Set align_loops, align_jumps,\n+\talign_functions based on what the tuning struct.\n+\n 2014-12-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* doc/md.texi (Insn Lengths): Fix description of (pc)."}, {"sha": "234efcb32705ddc07a0dd1e1edeae5e6f4ed49d3", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4917c98f0b2659f7a1136465a9439939feb8da8/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4917c98f0b2659f7a1136465a9439939feb8da8/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=b4917c98f0b2659f7a1136465a9439939feb8da8", "patch": "@@ -170,6 +170,7 @@ struct tune_params\n   const struct cpu_vector_cost *const vec_costs;\n   const int memmov_cost;\n   const int issue_rate;\n+  const int align;\n   const unsigned int fuseable_ops;\n   const int int_reassoc_width;\n   const int fp_reassoc_width;"}, {"sha": "226a808a01ad43af72e20fcd2de44b5ab069b6fe", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4917c98f0b2659f7a1136465a9439939feb8da8/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4917c98f0b2659f7a1136465a9439939feb8da8/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=b4917c98f0b2659f7a1136465a9439939feb8da8", "patch": "@@ -323,6 +323,7 @@ static const struct tune_params generic_tunings =\n   &generic_vector_cost,\n   NAMED_PARAM (memmov_cost, 4),\n   NAMED_PARAM (issue_rate, 2),\n+  NAMED_PARAM (align, 4),\n   NAMED_PARAM (fuseable_ops, AARCH64_FUSE_NOTHING),\n   2,\t/* int_reassoc_width.  */\n   4,\t/* fp_reassoc_width.  */\n@@ -337,6 +338,7 @@ static const struct tune_params cortexa53_tunings =\n   &generic_vector_cost,\n   NAMED_PARAM (memmov_cost, 4),\n   NAMED_PARAM (issue_rate, 2),\n+  NAMED_PARAM (align, 8),\n   NAMED_PARAM (fuseable_ops, (AARCH64_FUSE_MOV_MOVK | AARCH64_FUSE_ADRP_ADD\n                              | AARCH64_FUSE_MOVK_MOVK | AARCH64_FUSE_ADRP_LDR)),\n   2,\t/* int_reassoc_width.  */\n@@ -352,6 +354,7 @@ static const struct tune_params cortexa57_tunings =\n   &cortexa57_vector_cost,\n   NAMED_PARAM (memmov_cost, 4),\n   NAMED_PARAM (issue_rate, 3),\n+  NAMED_PARAM (align, 8),\n   NAMED_PARAM (fuseable_ops, (AARCH64_FUSE_MOV_MOVK | AARCH64_FUSE_ADRP_ADD | AARCH64_FUSE_MOVK_MOVK)),\n   2,\t/* int_reassoc_width.  */\n   4,\t/* fp_reassoc_width.  */\n@@ -366,6 +369,7 @@ static const struct tune_params thunderx_tunings =\n   &generic_vector_cost,\n   NAMED_PARAM (memmov_cost, 6),\n   NAMED_PARAM (issue_rate, 2),\n+  NAMED_PARAM (align, 8),\n   NAMED_PARAM (fuseable_ops, AARCH64_FUSE_CMP_BRANCH),\n   2,\t/* int_reassoc_width.  */\n   4,\t/* fp_reassoc_width.  */\n@@ -6762,6 +6766,18 @@ aarch64_override_options (void)\n #endif\n     }\n \n+  /* If not opzimizing for size, set the default\n+     alignment to what the target wants */\n+  if (!optimize_size)\n+    {\n+      if (align_loops <= 0)\n+\talign_loops = aarch64_tune_params->align;\n+      if (align_jumps <= 0)\n+\talign_jumps = aarch64_tune_params->align;\n+      if (align_functions <= 0)\n+\talign_functions = aarch64_tune_params->align;\n+    }\n+\n   aarch64_override_options_after_change ();\n }\n "}]}