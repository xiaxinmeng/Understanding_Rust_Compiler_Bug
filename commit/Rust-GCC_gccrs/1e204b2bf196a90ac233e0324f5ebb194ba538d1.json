{"sha": "1e204b2bf196a90ac233e0324f5ebb194ba538d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUyMDRiMmJmMTk2YTkwYWMyMzNlMDMyNGY1ZWJiMTk0YmE1MzhkMQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2007-10-24T20:55:28Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-10-24T20:55:28Z"}, "message": "pr11001-*.c: Remove -m32 from compile flags.\n\n        * gcc.target/i386/pr11001-*.c: Remove -m32 from compile flags.\n        Add -w to compile flags to suppress \"call-clobbered register\" warnings\n        and remove dg-warning directives.\n\nFrom-SVN: r129612", "tree": {"sha": "d64e78083987b55b1a5b6044b4b6b9b37f783a79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d64e78083987b55b1a5b6044b4b6b9b37f783a79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e204b2bf196a90ac233e0324f5ebb194ba538d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e204b2bf196a90ac233e0324f5ebb194ba538d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e204b2bf196a90ac233e0324f5ebb194ba538d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e204b2bf196a90ac233e0324f5ebb194ba538d1/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6580453213b42eb13b446341692a7e39f68112da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6580453213b42eb13b446341692a7e39f68112da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6580453213b42eb13b446341692a7e39f68112da"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "fa36f524d1a094025155a3de42b839d586cd0471", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e204b2bf196a90ac233e0324f5ebb194ba538d1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e204b2bf196a90ac233e0324f5ebb194ba538d1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1e204b2bf196a90ac233e0324f5ebb194ba538d1", "patch": "@@ -1,3 +1,9 @@\n+2007-10-24  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/pr11001-*.c: Remove -m32 from compile flags.\n+\tAdd -w to compile flags to suppress \"call-clobbered register\" warnings\n+\tand remove dg-warning directives.\n+\n 2007-10-24  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.dg/sms-2.c: Cleanup sms dump file."}, {"sha": "c63f8486957be5ab7145e2d45be2b8a12403f628", "filename": "gcc/testsuite/gcc.target/i386/pr11001-memcpy-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e204b2bf196a90ac233e0324f5ebb194ba538d1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-memcpy-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e204b2bf196a90ac233e0324f5ebb194ba538d1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-memcpy-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-memcpy-1.c?ref=1e204b2bf196a90ac233e0324f5ebb194ba538d1", "patch": "@@ -1,6 +1,6 @@\n /* Ensure that we don't use 'rep movX' in the presence of register globals.  */\n /* { dg-do compile } */\n-/* { dg-options \"-Os -m32\" } */\n+/* { dg-options \"-Os -w\" } */\n \n extern void *memcpy (void *, const void *, __SIZE_TYPE__);\n "}, {"sha": "ae1c3a8862e4ad5c2c4bfa390aa216ac1e3c80a0", "filename": "gcc/testsuite/gcc.target/i386/pr11001-memcpy-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e204b2bf196a90ac233e0324f5ebb194ba538d1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-memcpy-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e204b2bf196a90ac233e0324f5ebb194ba538d1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-memcpy-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-memcpy-2.c?ref=1e204b2bf196a90ac233e0324f5ebb194ba538d1", "patch": "@@ -1,6 +1,6 @@\n /* Ensure that we don't use 'rep movX' in the presence of register globals.  */\n /* { dg-do compile } */\n-/* { dg-options \"-Os -m32\" } */\n+/* { dg-options \"-Os -w\" } */\n \n extern void *memcpy (void *, const void *, __SIZE_TYPE__);\n "}, {"sha": "0f5bd561dc51edfe679c5946ef94e2d783e319ba", "filename": "gcc/testsuite/gcc.target/i386/pr11001-memcpy-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e204b2bf196a90ac233e0324f5ebb194ba538d1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-memcpy-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e204b2bf196a90ac233e0324f5ebb194ba538d1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-memcpy-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-memcpy-3.c?ref=1e204b2bf196a90ac233e0324f5ebb194ba538d1", "patch": "@@ -1,10 +1,10 @@\n /* Ensure that we don't use 'rep movX' in the presence of register globals.  */\n /* { dg-do compile } */\n-/* { dg-options \"-Os -m32\" } */\n+/* { dg-options \"-Os -w\" } */\n \n extern void *memcpy (void *, const void *, __SIZE_TYPE__);\n \n-register int regvar asm(\"%ecx\"); /* { dg-warning \"call-clobbered register\" } */\n+register int regvar asm(\"%ecx\");\n \n int foo[10];\n int bar[10];"}, {"sha": "e44d32fb4ef54c8b571959fce74744dcf57793e5", "filename": "gcc/testsuite/gcc.target/i386/pr11001-memset-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e204b2bf196a90ac233e0324f5ebb194ba538d1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-memset-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e204b2bf196a90ac233e0324f5ebb194ba538d1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-memset-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-memset-1.c?ref=1e204b2bf196a90ac233e0324f5ebb194ba538d1", "patch": "@@ -1,10 +1,10 @@\n /* Ensure that we don't use 'rep stoX' in the presence of register globals.  */\n /* { dg-do compile } */\n-/* { dg-options \"-Os -m32\" } */\n+/* { dg-options \"-Os -w\" } */\n \n extern void *memset (void *, int, __SIZE_TYPE__);\n \n-register int regvar asm(\"%eax\"); /* { dg-warning \"call-clobbered register\" } */\n+register int regvar asm(\"%eax\");\n \n int foo[10];\n int bar[10];"}, {"sha": "1bdfb865632eb9c78c277477cf019a90dafe7bb6", "filename": "gcc/testsuite/gcc.target/i386/pr11001-memset-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e204b2bf196a90ac233e0324f5ebb194ba538d1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-memset-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e204b2bf196a90ac233e0324f5ebb194ba538d1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-memset-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-memset-3.c?ref=1e204b2bf196a90ac233e0324f5ebb194ba538d1", "patch": "@@ -1,6 +1,6 @@\n /* Ensure that we don't use 'rep stoX' in the presence of register globals.  */\n /* { dg-do compile } */\n-/* { dg-options \"-Os -m32\" } */\n+/* { dg-options \"-Os -w\" } */\n \n extern void *memset (void *, int, __SIZE_TYPE__);\n "}, {"sha": "6e159e4453ec9d3843abfb14a60d93901c67a0f7", "filename": "gcc/testsuite/gcc.target/i386/pr11001-strlen-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e204b2bf196a90ac233e0324f5ebb194ba538d1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-strlen-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e204b2bf196a90ac233e0324f5ebb194ba538d1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-strlen-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-strlen-1.c?ref=1e204b2bf196a90ac233e0324f5ebb194ba538d1", "patch": "@@ -1,6 +1,6 @@\n /* Ensure that we don't use 'repnz scasb' in the presence of register globals.  */\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -m32\" } */\n+/* { dg-options \"-O1 -w\" } */\n \n extern __SIZE_TYPE__ strlen (const char *);\n extern void *malloc (__SIZE_TYPE__);"}, {"sha": "e03adb25f51677f3e7cb9d01cfaf83a4757f3517", "filename": "gcc/testsuite/gcc.target/i386/pr11001-strlen-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e204b2bf196a90ac233e0324f5ebb194ba538d1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-strlen-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e204b2bf196a90ac233e0324f5ebb194ba538d1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-strlen-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-strlen-2.c?ref=1e204b2bf196a90ac233e0324f5ebb194ba538d1", "patch": "@@ -1,11 +1,11 @@\n /* Ensure that we don't use 'repnz scasb' in the presence of register globals.  */\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -m32\" } */\n+/* { dg-options \"-O1 -w\" } */\n \n extern __SIZE_TYPE__ strlen (const char *);\n extern void *malloc (__SIZE_TYPE__);\n \n-register int regvar asm(\"%eax\"); /* { dg-warning \"call-clobbered register\" } */\n+register int regvar asm(\"%eax\");\n \n char *\n do_copy (char *str)"}, {"sha": "c7a379ae0588a80cb6586db89a275d1c1919d78a", "filename": "gcc/testsuite/gcc.target/i386/pr11001-strlen-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e204b2bf196a90ac233e0324f5ebb194ba538d1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-strlen-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e204b2bf196a90ac233e0324f5ebb194ba538d1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-strlen-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr11001-strlen-3.c?ref=1e204b2bf196a90ac233e0324f5ebb194ba538d1", "patch": "@@ -1,11 +1,11 @@\n /* Ensure that we don't use 'repnz scasb' in the presence of register globals.  */\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -m32\" } */\n+/* { dg-options \"-O1 -w\" } */\n \n extern __SIZE_TYPE__ strlen (const char *);\n extern void *malloc (__SIZE_TYPE__);\n \n-register int regvar asm(\"%ecx\"); /* { dg-warning \"call-clobbered register\" } */\n+register int regvar asm(\"%ecx\");\n \n char *\n do_copy (char *str)"}]}