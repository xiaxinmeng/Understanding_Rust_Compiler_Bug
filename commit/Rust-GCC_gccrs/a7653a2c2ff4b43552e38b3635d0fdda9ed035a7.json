{"sha": "a7653a2c2ff4b43552e38b3635d0fdda9ed035a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc2NTNhMmMyZmY0YjQzNTUyZTM4YjM2MzVkMGZkZGE5ZWQwMzVhNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-17T13:05:04Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-17T13:05:04Z"}, "message": "({,non_}short_cint_operand): Use (unsigned HOST_WIDE_INT).\n\n(non_add_cint_operand, includes_rshift_p): Likewise.\n\nFrom-SVN: r13661", "tree": {"sha": "a6f74994dd1277b0baa03c3754f9b206ce1eb1b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6f74994dd1277b0baa03c3754f9b206ce1eb1b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7653a2c2ff4b43552e38b3635d0fdda9ed035a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7653a2c2ff4b43552e38b3635d0fdda9ed035a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7653a2c2ff4b43552e38b3635d0fdda9ed035a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7653a2c2ff4b43552e38b3635d0fdda9ed035a7/comments", "author": null, "committer": null, "parents": [{"sha": "4c8cc616fa702df12354cc06b39f059f9f1c56f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c8cc616fa702df12354cc06b39f059f9f1c56f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c8cc616fa702df12354cc06b39f059f9f1c56f8"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "949181676eae16d0835212ffd7c202c0b9b3abd0", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7653a2c2ff4b43552e38b3635d0fdda9ed035a7/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7653a2c2ff4b43552e38b3635d0fdda9ed035a7/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=a7653a2c2ff4b43552e38b3635d0fdda9ed035a7", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines used for code generation on IBM RS/6000.\n-   Copyright (C) 1991, 1993, 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n This file is part of GNU CC.\n@@ -446,7 +446,7 @@ short_cint_operand (op, mode)\n      enum machine_mode mode;\n {\n   return (GET_CODE (op) == CONST_INT\n-\t  && (unsigned) (INTVAL (op) + 0x8000) < 0x10000);\n+\t  && (unsigned HOST_WIDE_INT) (INTVAL (op) + 0x8000) < 0x10000);\n }\n \n /* Similar for a unsigned D field.  */\n@@ -467,7 +467,7 @@ non_short_cint_operand (op, mode)\n      enum machine_mode mode;\n {\n   return (GET_CODE (op) == CONST_INT\n-\t  && (unsigned) (INTVAL (op) + 0x8000) >= 0x10000);\n+\t  && (unsigned HOST_WIDE_INT) (INTVAL (op) + 0x8000) >= 0x10000);\n }\n \n /* Returns 1 if OP is a register that is not special (i.e., not MQ,\n@@ -791,7 +791,7 @@ non_add_cint_operand (op, mode)\n      enum machine_mode mode;\n {\n   return (GET_CODE (op) == CONST_INT\n-\t  && (unsigned) (INTVAL (op) + 0x8000) >= 0x10000\n+\t  && (unsigned HOST_WIDE_INT) (INTVAL (op) + 0x8000) >= 0x10000\n \t  && (INTVAL (op) & 0xffff) != 0);\n }\n \n@@ -1893,7 +1893,7 @@ includes_rshift_p (shiftop, andop)\n      register rtx shiftop;\n      register rtx andop;\n {\n-  unsigned shift_mask = ~(unsigned)0;\n+  unsigned HOST_WIDE_INT shift_mask = ~(unsigned HOST_WIDE_INT) 0;\n \n   shift_mask >>= INTVAL (shiftop);\n "}]}