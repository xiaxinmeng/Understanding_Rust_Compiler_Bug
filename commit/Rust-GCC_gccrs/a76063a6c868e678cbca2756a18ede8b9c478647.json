{"sha": "a76063a6c868e678cbca2756a18ede8b9c478647", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc2MDYzYTZjODY4ZTY3OGNiY2EyNzU2YTE4ZWRlOGI5YzQ3ODY0Nw==", "commit": {"author": {"name": "Clinton Popetz", "email": "cpopetz@cygnus.com", "date": "2000-02-04T17:51:11Z"}, "committer": {"name": "Clinton Popetz", "email": "cpopetz@gcc.gnu.org", "date": "2000-02-04T17:51:11Z"}, "message": "jump.c (mark_jump_label): Add in_mem param, check SYMBOL_REFs when in_mem is set.\n\n\t* jump.c (mark_jump_label): Add in_mem param, check SYMBOL_REFs\n\twhen in_mem is set.  Update all callers.\n\nFrom-SVN: r31787", "tree": {"sha": "e960e8c55c7db3b4cc4e62e384b4c2324148892a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e960e8c55c7db3b4cc4e62e384b4c2324148892a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a76063a6c868e678cbca2756a18ede8b9c478647", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a76063a6c868e678cbca2756a18ede8b9c478647", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a76063a6c868e678cbca2756a18ede8b9c478647", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a76063a6c868e678cbca2756a18ede8b9c478647/comments", "author": null, "committer": null, "parents": [{"sha": "2e3af27c586bb8452c337b24a224a86c4f85e3f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e3af27c586bb8452c337b24a224a86c4f85e3f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e3af27c586bb8452c337b24a224a86c4f85e3f5"}], "stats": {"total": 38, "additions": 25, "deletions": 13}, "files": [{"sha": "7257d35258cd3e25494250a6d304b1b5c6668ce7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76063a6c868e678cbca2756a18ede8b9c478647/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76063a6c868e678cbca2756a18ede8b9c478647/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a76063a6c868e678cbca2756a18ede8b9c478647", "patch": "@@ -1,3 +1,8 @@\n+2000-02-04  Clinton Popetz  <cpopetz@cygnus.com>\n+\n+\t* jump.c (mark_jump_label): Add in_mem param, check SYMBOL_REFs\n+\twhen in_mem is set.  Update all callers.\n+\n 2000-02-04  Richard Henderson  <rth@cygnus.com>\n \n \t* i386/openbsd.h (INT_ASM_OP): Define."}, {"sha": "ad213bc2f63c12161f1109fae2f9dc7104f56708", "filename": "gcc/jump.c", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a76063a6c868e678cbca2756a18ede8b9c478647/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a76063a6c868e678cbca2756a18ede8b9c478647/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=a76063a6c868e678cbca2756a18ede8b9c478647", "patch": "@@ -118,7 +118,7 @@ static void find_cross_jump\t\tPARAMS ((rtx, rtx, int, rtx *, rtx *));\n static void do_cross_jump\t\tPARAMS ((rtx, rtx, rtx));\n static int jump_back_p\t\t\tPARAMS ((rtx, rtx));\n static int tension_vector_labels\tPARAMS ((rtx, int));\n-static void mark_jump_label\t\tPARAMS ((rtx, rtx, int));\n+static void mark_jump_label\t\tPARAMS ((rtx, rtx, int, int));\n static void delete_computation\t\tPARAMS ((rtx));\n static void delete_from_jump_chain\tPARAMS ((rtx));\n static int delete_labelref_insn\t\tPARAMS ((rtx, rtx, int));\n@@ -2272,7 +2272,7 @@ mark_all_labels (f, cross_jump)\n   for (insn = f; insn; insn = NEXT_INSN (insn))\n     if (GET_RTX_CLASS (GET_CODE (insn)) == 'i')\n       {\n-\tmark_jump_label (PATTERN (insn), insn, cross_jump);\n+\tmark_jump_label (PATTERN (insn), insn, cross_jump, 0);\n \tif (! INSN_DELETED_P (insn) && GET_CODE (insn) == JUMP_INSN)\n \t  {\n \t    if (JUMP_LABEL (insn) != 0 && simplejump_p (insn))\n@@ -2771,7 +2771,7 @@ duplicate_loop_exit_test (loop_start)\n \t  if (reg_map)\n \t    replace_regs (PATTERN (copy), reg_map, max_reg, 1);\n \t  \n-\t  mark_jump_label (PATTERN (copy), copy, 0);\n+\t  mark_jump_label (PATTERN (copy), copy, 0, 0);\n \t  \n \t  /* Copy all REG_NOTES except REG_LABEL since mark_jump_label will\n \t     make them.  */\n@@ -2789,7 +2789,7 @@ duplicate_loop_exit_test (loop_start)\n \t  copy = emit_jump_insn_before (copy_insn (PATTERN (insn)), loop_start);\n \t  if (reg_map)\n \t    replace_regs (PATTERN (copy), reg_map, max_reg, 1);\n-\t  mark_jump_label (PATTERN (copy), copy, 0);\n+\t  mark_jump_label (PATTERN (copy), copy, 0, 0);\n \t  if (REG_NOTES (insn))\n \t    {\n \t      REG_NOTES (copy) = copy_insn_1 (REG_NOTES (insn));\n@@ -2832,7 +2832,7 @@ duplicate_loop_exit_test (loop_start)\n       if (! first_copy)\n \tfirst_copy = copy;\n \n-      mark_jump_label (PATTERN (copy), copy, 0);\n+      mark_jump_label (PATTERN (copy), copy, 0, 0);\n       if (INSN_UID (copy) < max_jump_chain\n \t  && INSN_UID (JUMP_LABEL (copy)) < max_jump_chain)\n \t{\n@@ -3862,10 +3862,11 @@ tension_vector_labels (x, idx)\n    two labels distinct if they are separated by only USE or CLOBBER insns.  */\n \n static void\n-mark_jump_label (x, insn, cross_jump)\n+mark_jump_label (x, insn, cross_jump, in_mem)\n      register rtx x;\n      rtx insn;\n      int cross_jump;\n+     int in_mem;\n {\n   register RTX_CODE code = GET_CODE (x);\n   register int i;\n@@ -3878,17 +3879,22 @@ mark_jump_label (x, insn, cross_jump)\n     case REG:\n     case SUBREG:\n     case CONST_INT:\n-    case SYMBOL_REF:\n     case CONST_DOUBLE:\n     case CLOBBER:\n     case CALL:\n       return;\n \n     case MEM:\n+      in_mem = 1;\n+      break;\n+\n+    case SYMBOL_REF:\n+      if (!in_mem)\n+        return;\n+\n       /* If this is a constant-pool reference, see if it is a label.  */\n-      if (GET_CODE (XEXP (x, 0)) == SYMBOL_REF\n-\t  && CONSTANT_POOL_ADDRESS_P (XEXP (x, 0)))\n-\tmark_jump_label (get_pool_constant (XEXP (x, 0)), insn, cross_jump);\n+      if (CONSTANT_POOL_ADDRESS_P (x))\n+        mark_jump_label (get_pool_constant (x), insn, cross_jump, in_mem);\n       break;\n \n     case LABEL_REF:\n@@ -3974,7 +3980,8 @@ mark_jump_label (x, insn, cross_jump)\n \t  int eltnum = code == ADDR_DIFF_VEC ? 1 : 0;\n \n \t  for (i = 0; i < XVECLEN (x, eltnum); i++)\n-\t    mark_jump_label (XVECEXP (x, eltnum, i), NULL_RTX, cross_jump);\n+\t    mark_jump_label (XVECEXP (x, eltnum, i), NULL_RTX, \n+                    cross_jump, in_mem);\n \t}\n       return;\n       \n@@ -3986,12 +3993,12 @@ mark_jump_label (x, insn, cross_jump)\n   for (i = GET_RTX_LENGTH (code) - 1; i >= 0; i--)\n     {\n       if (fmt[i] == 'e')\n-\tmark_jump_label (XEXP (x, i), insn, cross_jump);\n+\tmark_jump_label (XEXP (x, i), insn, cross_jump, in_mem);\n       else if (fmt[i] == 'E')\n \t{\n \t  register int j;\n \t  for (j = 0; j < XVECLEN (x, i); j++)\n-\t    mark_jump_label (XVECEXP (x, i, j), insn, cross_jump);\n+\t    mark_jump_label (XVECEXP (x, i, j), insn, cross_jump, in_mem);\n \t}\n     }\n }"}]}