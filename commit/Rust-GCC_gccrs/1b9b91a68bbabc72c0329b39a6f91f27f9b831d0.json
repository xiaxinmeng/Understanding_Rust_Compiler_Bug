{"sha": "1b9b91a68bbabc72c0329b39a6f91f27f9b831d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI5YjkxYTY4YmJhYmM3MmMwMzI5YjM5YTZmOTFmMjdmOWI4MzFkMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-11T21:36:02Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-11T21:36:02Z"}, "message": "re PR c++/46803 (libstdc++ build errors on invalid OpenBSD system header attributes)\n\n\tPR c++/46803\n\t* c-common.c (attribute_takes_identifier_p): Assume that an\n\tunknown attribute takes an identifier.\n\nFrom-SVN: r170885", "tree": {"sha": "4f65d86af58a76be50feefe3ae8a1be9647ab615", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f65d86af58a76be50feefe3ae8a1be9647ab615"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b9b91a68bbabc72c0329b39a6f91f27f9b831d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b9b91a68bbabc72c0329b39a6f91f27f9b831d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b9b91a68bbabc72c0329b39a6f91f27f9b831d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b9b91a68bbabc72c0329b39a6f91f27f9b831d0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a4e2bd5562ee6f41bbe85e70641baad81a44273", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a4e2bd5562ee6f41bbe85e70641baad81a44273", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a4e2bd5562ee6f41bbe85e70641baad81a44273"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "35ca9a3767a53c95743e2dc63d5fc354a8ac2e01", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b9b91a68bbabc72c0329b39a6f91f27f9b831d0/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b9b91a68bbabc72c0329b39a6f91f27f9b831d0/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=1b9b91a68bbabc72c0329b39a6f91f27f9b831d0", "patch": "@@ -1,3 +1,9 @@\n+2011-03-11  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/46803\n+\t* c-common.c (attribute_takes_identifier_p): Assume that an\n+\tunknown attribute takes an identifier.\n+\n 2011-03-07  Nathan Froyd  <froydnj@codesourcery.com>\n \n \tPR c/47786"}, {"sha": "32b9a70d72d852911fdd47cc1508139be01c044a", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b9b91a68bbabc72c0329b39a6f91f27f9b831d0/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b9b91a68bbabc72c0329b39a6f91f27f9b831d0/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=1b9b91a68bbabc72c0329b39a6f91f27f9b831d0", "patch": "@@ -5665,9 +5665,14 @@ c_init_attributes (void)\n bool\n attribute_takes_identifier_p (const_tree attr_id)\n {\n-  if (is_attribute_p (\"mode\", attr_id)\n-      || is_attribute_p (\"format\", attr_id)\n-      || is_attribute_p (\"cleanup\", attr_id))\n+  struct attribute_spec *spec = lookup_attribute_spec (attr_id);\n+  if (spec == NULL)\n+    /* Unknown attribute that we'll end up ignoring, return true so we\n+       don't complain about an identifier argument.  */\n+    return true;\n+  else if (!strcmp (\"mode\", spec->name)\n+\t   || !strcmp (\"format\", spec->name)\n+\t   || !strcmp (\"cleanup\", spec->name))\n     return true;\n   else\n     return targetm.attribute_takes_identifier_p (attr_id);"}, {"sha": "6734535f7bbb1ac73883609fd219e3ee266f399d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b9b91a68bbabc72c0329b39a6f91f27f9b831d0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b9b91a68bbabc72c0329b39a6f91f27f9b831d0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b9b91a68bbabc72c0329b39a6f91f27f9b831d0", "patch": "@@ -1,5 +1,7 @@\n 2011-03-11  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/ext/attrib40.C: New.\n+\n \t* g++.dg/cpp0x/regress/array1.C: New.\n \n 2011-03-11  Richard Guenther  <rguenther@suse.de>"}, {"sha": "9c3f761596db6e5d837202d97934105fdb0b72e0", "filename": "gcc/testsuite/g++.dg/ext/attrib40.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b9b91a68bbabc72c0329b39a6f91f27f9b831d0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib40.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b9b91a68bbabc72c0329b39a6f91f27f9b831d0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib40.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib40.C?ref=1b9b91a68bbabc72c0329b39a6f91f27f9b831d0", "patch": "@@ -0,0 +1,4 @@\n+// PR c++/46803\n+\n+int strftime(char *, int, const char *, const struct tm *)\n+        __attribute__ ((__bounded__(__string__,1,2))); // { dg-warning \"ignored\" }"}]}