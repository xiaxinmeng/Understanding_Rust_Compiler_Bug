{"sha": "8fddbce4ab902f855472c30dd1c8bb713854e3c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZkZGJjZTRhYjkwMmY4NTU0NzJjMzBkZDFjOGJiNzEzODU0ZTNjNA==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@normalesup.org", "date": "2011-03-02T14:57:57Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-03-02T14:57:57Z"}, "message": "re PR libstdc++/47913 ([C++0x] improve ratio_add to overflow less often)\n\n2011-03-02  Marc Glisse  <marc.glisse@normalesup.org>\n\n\tPR libstdc++/47913\n\t* include/std/ratio (ratio_add): Avoid denominator overflow.\n\t* testsuite/20_util/ratio/operations/47913.cc: New.\n\nFrom-SVN: r170616", "tree": {"sha": "a31aaed4cbda3c591759e1f60f825767aebffa4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a31aaed4cbda3c591759e1f60f825767aebffa4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fddbce4ab902f855472c30dd1c8bb713854e3c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fddbce4ab902f855472c30dd1c8bb713854e3c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fddbce4ab902f855472c30dd1c8bb713854e3c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fddbce4ab902f855472c30dd1c8bb713854e3c4/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "34161e98f7d52dcd069e70d7ce0b4f4c901eaa1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34161e98f7d52dcd069e70d7ce0b4f4c901eaa1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34161e98f7d52dcd069e70d7ce0b4f4c901eaa1b"}], "stats": {"total": 64, "additions": 58, "deletions": 6}, "files": [{"sha": "c2c86d6caeab99cb55211615e6f4662773a16a65", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fddbce4ab902f855472c30dd1c8bb713854e3c4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fddbce4ab902f855472c30dd1c8bb713854e3c4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8fddbce4ab902f855472c30dd1c8bb713854e3c4", "patch": "@@ -1,3 +1,9 @@\n+2011-03-02  Marc Glisse  <marc.glisse@normalesup.org>\n+\n+\tPR libstdc++/47913\n+\t* include/std/ratio (ratio_add): Avoid denominator overflow.\n+\t* testsuite/20_util/ratio/operations/47913.cc: New.\n+\n 2011-02-28  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/20_util/hash/chi2_quality.cc: Use C++0x mode on simulators."}, {"sha": "30bce162e16755e22db7789f63103038ed9c5b5c", "filename": "libstdc++-v3/include/std/ratio", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fddbce4ab902f855472c30dd1c8bb713854e3c4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fratio", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fddbce4ab902f855472c30dd1c8bb713854e3c4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fratio", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fratio?ref=8fddbce4ab902f855472c30dd1c8bb713854e3c4", "patch": "@@ -177,15 +177,19 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     struct ratio_add\n     {\n     private:\n-      static const intmax_t __gcd =\n+      static constexpr intmax_t __gcd =\n         __static_gcd<_R1::den, _R2::den>::value;\n+      static constexpr intmax_t __n = __safe_add<\n+        __safe_multiply<_R1::num, (_R2::den / __gcd)>::value,\n+        __safe_multiply<_R2::num, (_R1::den / __gcd)>::value>::value;\n+\n+      // The new numerator may have common factors with the denominator,\n+      // but they have to also be factors of __gcd.\n+      static constexpr intmax_t __gcd2 = __static_gcd<__n, __gcd>::value;\n       \n     public:\n-      typedef ratio<\n-        __safe_add<\n-          __safe_multiply<_R1::num, (_R2::den / __gcd)>::value,\n-          __safe_multiply<_R2::num, (_R1::den / __gcd)>::value>::value,\n-        __safe_multiply<_R1::den, (_R2::den / __gcd)>::value> type;\n+      typedef ratio<__n / __gcd2,\n+        __safe_multiply<_R1::den / __gcd2, _R2::den / __gcd>::value> type;\n \n       static constexpr intmax_t num = type::num;\n       static constexpr intmax_t den = type::den;"}, {"sha": "4105a710d91b91bcfa2c16cdc4f534d5f073952a", "filename": "libstdc++-v3/testsuite/20_util/ratio/operations/47913.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fddbce4ab902f855472c30dd1c8bb713854e3c4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2F47913.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fddbce4ab902f855472c30dd1c8bb713854e3c4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2F47913.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2F47913.cc?ref=8fddbce4ab902f855472c30dd1c8bb713854e3c4", "patch": "@@ -0,0 +1,42 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// Copyright (C) 2011 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License\n+// along with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <ratio>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/47913\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  const intmax_t m = (intmax_t)1 << (4 * sizeof(intmax_t) - 1);\n+  typedef ratio_add<ratio<1, (m - 1) * (m - 2)>,\n+                    ratio<1, (m - 3) * (m - 2)> > ra_type;\n+\n+  VERIFY( ra_type::num == 2 );\n+  VERIFY( ra_type::den == (m - 1) * (m - 3) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}