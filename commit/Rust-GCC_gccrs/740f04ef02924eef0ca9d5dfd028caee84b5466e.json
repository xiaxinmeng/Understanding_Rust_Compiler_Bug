{"sha": "740f04ef02924eef0ca9d5dfd028caee84b5466e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQwZjA0ZWYwMjkyNGVlZjBjYTlkNWRmZDAyOGNhZWU4NGI1NDY2ZQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2005-11-11T20:19:21Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2005-11-11T20:19:21Z"}, "message": "PR libgfortran/24699, 24700, 24719, 24785\n\n2005-11-09  Jerry DeLisle <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/24699, 24700, 24719, 24785\n\t* io/transfer.c (read_sf): Remove incorrect statement that was\n\tclearing bytes_left.\n\t(formatted_transfer_scalar): Add handling of end-of-record\n\tcondition, setting values correctly to backup.  Handle x format\n\twhen doing non-advancing write.\n\t(st_read): Initialize current_record.\n\nFrom-SVN: r106797", "tree": {"sha": "8526bde3a2a55760899d986b6ecad5e002d2d004", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8526bde3a2a55760899d986b6ecad5e002d2d004"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/740f04ef02924eef0ca9d5dfd028caee84b5466e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/740f04ef02924eef0ca9d5dfd028caee84b5466e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/740f04ef02924eef0ca9d5dfd028caee84b5466e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/740f04ef02924eef0ca9d5dfd028caee84b5466e/comments", "author": null, "committer": null, "parents": [{"sha": "77633f4cd05047cd8b46887e4708086deb58cd7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77633f4cd05047cd8b46887e4708086deb58cd7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77633f4cd05047cd8b46887e4708086deb58cd7c"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "ae256ccc5bcdb8249499a12c219f313a843b1192", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/740f04ef02924eef0ca9d5dfd028caee84b5466e/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/740f04ef02924eef0ca9d5dfd028caee84b5466e/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=740f04ef02924eef0ca9d5dfd028caee84b5466e", "patch": "@@ -212,7 +212,6 @@ read_sf (int *length)\n \t      return NULL;\n \t    }\n \n-\t  current_unit->bytes_left = 0;\n \t  *length = n;\n \t  sf_seen_eor = 1;\n \t  break;\n@@ -550,6 +549,7 @@ formatted_transfer_scalar (bt type, void *p, int len, size_t size)\n \n       /* Now discharge T, TR and X movements to the right.  This is delayed\n \t until a data producing format to suppress trailing spaces.  */\n+\t \n       t = f->format;\n       if (g.mode == WRITING && skips != 0\n \t&& ((n>0 && (  t == FMT_I  || t == FMT_B  || t == FMT_O\n@@ -771,8 +771,15 @@ formatted_transfer_scalar (bt type, void *p, int len, size_t size)\n \t  skips = f->u.n + skips;\n \t  pending_spaces = pos - max_pos;\n \n-\t  /* Writes occur just before the switch on f->format, above, so that\n-\t     trailing blanks are suppressed.  */\n+\t  /* Writes occur just before the switch on f->format, above, so\n+\t     that trailing blanks are suppressed, unless we are doing a\n+\t     non-advancing write in which case we want to output the blanks\n+\t     now.  */\n+\t  if (g.mode == WRITING && advance_status == ADVANCE_NO)\n+\t    {\n+\t      write_x (skips, pending_spaces);\n+\t      skips = pending_spaces = 0;\n+\t    }\n \t  if (g.mode == READING)\n \t    read_x (f->u.n);\n \n@@ -804,14 +811,22 @@ formatted_transfer_scalar (bt type, void *p, int len, size_t size)\n \t     trailing blanks are suppressed.  */\n \t  if (g.mode == READING)\n \t    {\n-\t      if (skips > 0)\n-\t\tread_x (skips);\n+\t      /* Adjust everything for end-of-record condition */\n+\t      if (sf_seen_eor && !is_internal_unit())\n+\t\t{\n+\t\t  current_unit->bytes_left--;\n+\t\t  bytes_used = pos;\n+\t\t  sf_seen_eor = 0;\n+\t\t  skips--;\n+\t\t}\n \t      if (skips < 0)\n \t\t{\n \t\t  move_pos_offset (current_unit->s, skips);\n \t\t  current_unit->bytes_left -= (gfc_offset)skips;\n \t\t  skips = pending_spaces = 0;\n \t\t}\n+\t      else\n+\t\tread_x (skips);\n \t    }\n \n \t  break;\n@@ -1936,11 +1951,13 @@ st_read (void)\n \t  {\n \t    generate_error (ERROR_END, NULL);\n \t    current_unit->endfile = AFTER_ENDFILE;\n+\t    current_unit->current_record = 0;\n \t  }\n \tbreak;\n \n       case AFTER_ENDFILE:\n \tgenerate_error (ERROR_ENDFILE, NULL);\n+\tcurrent_unit->current_record = 0;\n \tbreak;\n       }\n }"}]}