{"sha": "4b1d78b48a8b83b6016f7570c2aa49eb2f13143d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIxZDc4YjQ4YThiODNiNjAxNmY3NTcwYzJhYTQ5ZWIyZjEzMTQzZA==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@linux-m68k.org", "date": "2014-07-17T08:40:15Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2014-07-17T08:40:15Z"}, "message": "Summary: Generate canonical infinity for the Motorola extended real format\n\n* real.c (encode_ieee_extended_motorola): Clear integer bit in the\ninfinity format.\n\nFrom-SVN: r212744", "tree": {"sha": "a2204c3cb7ba518a1e3520081612e359fafd92bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2204c3cb7ba518a1e3520081612e359fafd92bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b1d78b48a8b83b6016f7570c2aa49eb2f13143d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b1d78b48a8b83b6016f7570c2aa49eb2f13143d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b1d78b48a8b83b6016f7570c2aa49eb2f13143d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b1d78b48a8b83b6016f7570c2aa49eb2f13143d/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cfe309a158dcd4ab2c2839c2f2a4e413300fa75a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfe309a158dcd4ab2c2839c2f2a4e413300fa75a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfe309a158dcd4ab2c2839c2f2a4e413300fa75a"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "c1b2a285886436eb1c3d5a57b84e62de890e4404", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1d78b48a8b83b6016f7570c2aa49eb2f13143d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1d78b48a8b83b6016f7570c2aa49eb2f13143d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b1d78b48a8b83b6016f7570c2aa49eb2f13143d", "patch": "@@ -1,3 +1,8 @@\n+2014-07-17  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* real.c (encode_ieee_extended_motorola): Clear integer bit in the\n+\tinfinity format.\n+\n 2014-07-17  Richard Biener  <rguenther@suse.de>\n \n \tPR rtl-optimization/61801"}, {"sha": "1c2f709c9d01a68c112e02d7d7a9eeaa55383903", "filename": "gcc/real.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1d78b48a8b83b6016f7570c2aa49eb2f13143d/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1d78b48a8b83b6016f7570c2aa49eb2f13143d/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=4b1d78b48a8b83b6016f7570c2aa49eb2f13143d", "patch": "@@ -3481,6 +3481,11 @@ encode_ieee_extended_motorola (const struct real_format *fmt, long *buf,\n   long intermed[3];\n   encode_ieee_extended (fmt, intermed, r);\n \n+  if (r->cl == rvc_inf)\n+    /* For infinity clear the explicit integer bit again, so that the\n+       format matches the canonical infinity generated by the FPU.  */\n+    intermed[1] = 0;\n+\n   /* Motorola chips are assumed always to be big-endian.  Also, the\n      padding in a Motorola extended real goes between the exponent and\n      the mantissa.  At this point the mantissa is entirely within"}]}