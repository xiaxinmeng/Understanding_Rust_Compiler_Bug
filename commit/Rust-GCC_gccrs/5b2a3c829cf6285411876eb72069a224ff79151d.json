{"sha": "5b2a3c829cf6285411876eb72069a224ff79151d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIyYTNjODI5Y2Y2Mjg1NDExODc2ZWI3MjA2OWEyMjRmZjc5MTUxZA==", "commit": {"author": {"name": "Walter Lee", "email": "walt@tilera.com", "date": "2013-03-25T23:59:38Z"}, "committer": {"name": "Walter Lee", "email": "walt@gcc.gnu.org", "date": "2013-03-25T23:59:38Z"}, "message": "tilegx.c (expand_set_cint64_one_inst): Inline tests for constraint J, K, N, P.\n\n       * config/tilegx/tilegx.c (expand_set_cint64_one_inst): Inline\n       tests for constraint J, K, N, P.\n\nFrom-SVN: r197074", "tree": {"sha": "17fc992445ce76d6934c83b36a2af3c8dcac3e69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17fc992445ce76d6934c83b36a2af3c8dcac3e69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b2a3c829cf6285411876eb72069a224ff79151d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b2a3c829cf6285411876eb72069a224ff79151d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b2a3c829cf6285411876eb72069a224ff79151d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b2a3c829cf6285411876eb72069a224ff79151d/comments", "author": {"login": "walt-tilera", "id": 6602917, "node_id": "MDQ6VXNlcjY2MDI5MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/6602917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/walt-tilera", "html_url": "https://github.com/walt-tilera", "followers_url": "https://api.github.com/users/walt-tilera/followers", "following_url": "https://api.github.com/users/walt-tilera/following{/other_user}", "gists_url": "https://api.github.com/users/walt-tilera/gists{/gist_id}", "starred_url": "https://api.github.com/users/walt-tilera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/walt-tilera/subscriptions", "organizations_url": "https://api.github.com/users/walt-tilera/orgs", "repos_url": "https://api.github.com/users/walt-tilera/repos", "events_url": "https://api.github.com/users/walt-tilera/events{/privacy}", "received_events_url": "https://api.github.com/users/walt-tilera/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "192ea533bec3909472c092822e1ca4b379dd6b2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/192ea533bec3909472c092822e1ca4b379dd6b2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/192ea533bec3909472c092822e1ca4b379dd6b2e"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "fd59b8ebf9c8de4f26531db21c01524f8016ef5b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b2a3c829cf6285411876eb72069a224ff79151d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b2a3c829cf6285411876eb72069a224ff79151d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b2a3c829cf6285411876eb72069a224ff79151d", "patch": "@@ -1,3 +1,8 @@\n+2013-03-25  Walter Lee  <walt@tilera.com>\n+\n+\t* config/tilegx/tilegx.c (expand_set_cint64_one_inst): Inline\n+\ttests for constraint J, K, N, P.\n+\n 2013-03-25  Walter Lee  <walt@tilera.com>\n \n \t* config/tilegx/tilegx.c (tilegx_asm_preferred_eh_data_format):"}, {"sha": "d4136214327f911ebe7a4a36a4de966055fe9479", "filename": "gcc/config/tilegx/tilegx.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b2a3c829cf6285411876eb72069a224ff79151d/gcc%2Fconfig%2Ftilegx%2Ftilegx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b2a3c829cf6285411876eb72069a224ff79151d/gcc%2Fconfig%2Ftilegx%2Ftilegx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilegx%2Ftilegx.c?ref=5b2a3c829cf6285411876eb72069a224ff79151d", "patch": "@@ -1429,14 +1429,16 @@ expand_set_cint64_one_inst (rtx dest_reg,\n     }\n   else if (!three_wide_only)\n     {\n-      rtx imm_op = GEN_INT (val);\n-\n-      if (satisfies_constraint_J (imm_op)\n-\t  || satisfies_constraint_K (imm_op)\n-\t  || satisfies_constraint_N (imm_op)\n-\t  || satisfies_constraint_P (imm_op))\n+      /* Test for the following constraints: J, K, N, P.  We avoid\n+\t generating an rtx and using existing predicates because we\n+\t can be testing and rejecting a lot of constants, and GEN_INT\n+\t is O(N).  */\n+      if ((val >= -32768 && val <= 65535)\n+\t  || ((val == (val & 0xFF) * 0x0101010101010101LL))\n+\t  || (val == ((trunc_int_for_mode (val, QImode) & 0xFFFF)\n+\t\t      * 0x0001000100010001LL)))\n \t{\n-\t  emit_move_insn (dest_reg, imm_op);\n+\t  emit_move_insn (dest_reg, GEN_INT (val));\n \t  return true;\n \t}\n     }"}]}