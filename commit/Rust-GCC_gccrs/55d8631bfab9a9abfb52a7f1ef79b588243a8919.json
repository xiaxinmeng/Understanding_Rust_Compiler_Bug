{"sha": "55d8631bfab9a9abfb52a7f1ef79b588243a8919", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVkODYzMWJmYWI5YTlhYmZiNTJhN2YxZWY3OWI1ODgyNDNhODkxOQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-01-07T08:36:16Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-01-07T08:36:16Z"}, "message": "re PR fortran/55763 (Issues with some simpler CLASS(*) programs)\n\n2012-01-07  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/55763\n        * resolve.c (resolve_select_type): Reject intrinsic types for\n        a non-unlimited-polymorphic selector.\n\n2012-01-07  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/55763\n        * gfortran.dg/select_type_32.f90: New.\n\nFrom-SVN: r194962", "tree": {"sha": "f99d0a7046c7f966d4961c0524aab97a55725570", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f99d0a7046c7f966d4961c0524aab97a55725570"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55d8631bfab9a9abfb52a7f1ef79b588243a8919", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55d8631bfab9a9abfb52a7f1ef79b588243a8919", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55d8631bfab9a9abfb52a7f1ef79b588243a8919", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55d8631bfab9a9abfb52a7f1ef79b588243a8919/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9bdae0133df72dab6604c2b9b25f6411e4c41e8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bdae0133df72dab6604c2b9b25f6411e4c41e8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bdae0133df72dab6604c2b9b25f6411e4c41e8b"}], "stats": {"total": 50, "additions": 45, "deletions": 5}, "files": [{"sha": "72661108e4f24a3d8d82c80dff58117fcbff9655", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55d8631bfab9a9abfb52a7f1ef79b588243a8919/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55d8631bfab9a9abfb52a7f1ef79b588243a8919/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=55d8631bfab9a9abfb52a7f1ef79b588243a8919", "patch": "@@ -1,3 +1,9 @@\n+2012-01-07  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/55763\n+\t* resolve.c (resolve_select_type): Reject intrinsic types for\n+\ta non-unlimited-polymorphic selector.\n+\n 2013-01-06  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/PR53876"}, {"sha": "70bfae614b3f84119a6e199b3ac3876a8cf229d5", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55d8631bfab9a9abfb52a7f1ef79b588243a8919/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55d8631bfab9a9abfb52a7f1ef79b588243a8919/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=55d8631bfab9a9abfb52a7f1ef79b588243a8919", "patch": "@@ -8388,12 +8388,16 @@ resolve_select_type (gfc_code *code, gfc_namespace *old_ns)\n \t}\n \n       /* Check F03:C816.  */\n-      if ((c->ts.type == BT_DERIVED || c->ts.type == BT_CLASS)\n-\t  && !selector_type->attr.unlimited_polymorphic\n-\t  && !gfc_type_is_extension_of (selector_type, c->ts.u.derived))\n+      if (c->ts.type != BT_UNKNOWN && !selector_type->attr.unlimited_polymorphic\n+\t  && ((c->ts.type != BT_DERIVED && c->ts.type != BT_CLASS)\n+\t      || !gfc_type_is_extension_of (selector_type, c->ts.u.derived)))\n \t{\n-\t  gfc_error (\"Derived type '%s' at %L must be an extension of '%s'\",\n-\t\t     c->ts.u.derived->name, &c->where, selector_type->name);\n+\t  if (c->ts.type == BT_DERIVED || c->ts.type == BT_CLASS)\n+\t    gfc_error (\"Derived type '%s' at %L must be an extension of '%s'\",\n+\t\t       c->ts.u.derived->name, &c->where, selector_type->name);\n+\t  else\n+\t    gfc_error (\"Unexpected intrinsic type '%s' at %L\",\n+\t\t       gfc_basic_typename (c->ts.type), &c->where);\n \t  error++;\n \t  continue;\n \t}"}, {"sha": "0d36ca2cf39afdbcdb1ad9dc236dfe37461a332e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55d8631bfab9a9abfb52a7f1ef79b588243a8919/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55d8631bfab9a9abfb52a7f1ef79b588243a8919/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=55d8631bfab9a9abfb52a7f1ef79b588243a8919", "patch": "@@ -1,3 +1,8 @@\n+2012-01-07  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/55763\n+\t* gfortran.dg/select_type_32.f90: New.\n+\n 2013-01-04  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/52343"}, {"sha": "5e366398acb7b78c698801c52c46034de2281094", "filename": "gcc/testsuite/gfortran.dg/select_type_32.f90", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55d8631bfab9a9abfb52a7f1ef79b588243a8919/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_32.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55d8631bfab9a9abfb52a7f1ef79b588243a8919/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_32.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_type_32.f90?ref=55d8631bfab9a9abfb52a7f1ef79b588243a8919", "patch": "@@ -0,0 +1,25 @@\n+! { dg-do compile }\n+!\n+! PR fortran/55763\n+!\n+! Contributed by Harald Anlauf\n+!\n+\n+module gfcbug122\n+  implicit none\n+  type myobj\n+     class(*), allocatable :: x\n+   contains\n+     procedure :: print\n+  end type myobj\n+contains\n+  subroutine print(this)\n+    class(myobj) :: this\n+    select type (this)\n+    type is (integer) ! { dg-error \"Unexpected intrinsic type 'INTEGER'\" }\n+    type is (real) ! { dg-error \"Unexpected intrinsic type 'REAL'\" }\n+    type is (complex) ! { dg-error \"Unexpected intrinsic type 'COMPLEX'\" }\n+    type is (character(len=*)) ! { dg-error \"Unexpected intrinsic type 'CHARACTER'\" }\n+    end select\n+  end subroutine print\n+end module gfcbug122"}]}