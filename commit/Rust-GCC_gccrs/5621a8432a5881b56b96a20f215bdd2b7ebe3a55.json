{"sha": "5621a8432a5881b56b96a20f215bdd2b7ebe3a55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYyMWE4NDMyYTU4ODFiNTZiOTZhMjBmMjE1YmRkMmI3ZWJlM2E1NQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2012-07-21T08:39:13Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2012-07-21T08:39:13Z"}, "message": "mips.c (mips_get_unaligned_mem): Copy *op after calling adjust_address.\n\n2012-07-21  Andrew Pinski  <apinski@cavium.com>\n\n\t* config/mips/mips.c (mips_get_unaligned_mem): Copy *op after calling\n\tadjust_address.\n\nFrom-SVN: r189738", "tree": {"sha": "632eec063ea9fe6df630f0e4445f9bf4f2d02a57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/632eec063ea9fe6df630f0e4445f9bf4f2d02a57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5621a8432a5881b56b96a20f215bdd2b7ebe3a55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5621a8432a5881b56b96a20f215bdd2b7ebe3a55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5621a8432a5881b56b96a20f215bdd2b7ebe3a55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5621a8432a5881b56b96a20f215bdd2b7ebe3a55/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3622ef30cb6b1e46742519307056cad8b0787294", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3622ef30cb6b1e46742519307056cad8b0787294", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3622ef30cb6b1e46742519307056cad8b0787294"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "fec3d36a271929b03ca14067f96599f091bc8a65", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5621a8432a5881b56b96a20f215bdd2b7ebe3a55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5621a8432a5881b56b96a20f215bdd2b7ebe3a55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5621a8432a5881b56b96a20f215bdd2b7ebe3a55", "patch": "@@ -1,3 +1,8 @@\n+2012-07-21  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* config/mips/mips.c (mips_get_unaligned_mem): Copy *op after calling\n+\tadjust_address.\n+\n 2012-07-20  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \t* config/mips/mips.md (define_attr sync_*): Move before \"type\"."}, {"sha": "498dc27797a240eedcbf661548b6267ca64f1c22", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5621a8432a5881b56b96a20f215bdd2b7ebe3a55/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5621a8432a5881b56b96a20f215bdd2b7ebe3a55/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=5621a8432a5881b56b96a20f215bdd2b7ebe3a55", "patch": "@@ -7217,9 +7217,10 @@ mips_get_unaligned_mem (rtx *op, HOST_WIDE_INT width, HOST_WIDE_INT bitpos,\n   if (MEM_ALIGN (*op) >= width)\n     return false;\n \n-  /* Adjust *OP to refer to the whole field.  This also has the effect\n-     of legitimizing *OP's address for BLKmode, possibly simplifying it.  */\n-  *op = adjust_address (*op, BLKmode, 0);\n+  /* Create a copy of *OP that refers to the whole field.  This also has\n+     the effect of legitimizing *OP's address for BLKmode, possibly\n+     simplifying it.  */\n+  *op = copy_rtx (adjust_address (*op, BLKmode, 0));\n   set_mem_size (*op, width / BITS_PER_UNIT);\n \n   /* Get references to both ends of the field.  We deliberately don't"}]}