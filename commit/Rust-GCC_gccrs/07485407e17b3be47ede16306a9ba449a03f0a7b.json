{"sha": "07485407e17b3be47ede16306a9ba449a03f0a7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc0ODU0MDdlMTdiM2JlNDdlZGUxNjMwNmE5YmE0NDlhMDNmMGE3Yg==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@google.com", "date": "2009-04-17T21:45:56Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2009-04-17T21:45:56Z"}, "message": "omp-low.c (create_omp_child_function): Set DECL_CONTEXT for DECL.\n\n\n\t* omp-low.c (create_omp_child_function): Set DECL_CONTEXT\n\tfor DECL.\n\t* cgraphunit.c (cgraph_build_static_cdtor): Likewise.\n\t* tree-dfa.c (find_referenced_vars_in): Factor out of ...\n\t(find_vars_r): ... here.\n\t* tree-flow.h (find_referenced_vars_in): Declare.\n\t* tree-ssa-pre.c (create_expression_by_pieces): Assert\n\tthat AVAIL_OUT exists for BLOCK.\n\t* Makefile.in (CGRAPH_H): Add dependency on cif-code.def\n\t(tree-loop-distribution.o): Fix dependency on TREE_VECTORIZER_H.\n\t(tree-parloops.o): Likewise.\n\ntestsuite/ChangeLog\n\n\t* gcc.c-torture/execute/builtins/strlen-3.c: Fix ODR\n\tviolation for variable 'inside_main'.\n\nFrom-SVN: r146295", "tree": {"sha": "35617d27227f8f0332b1eb102297803c6dd769e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35617d27227f8f0332b1eb102297803c6dd769e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07485407e17b3be47ede16306a9ba449a03f0a7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07485407e17b3be47ede16306a9ba449a03f0a7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07485407e17b3be47ede16306a9ba449a03f0a7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07485407e17b3be47ede16306a9ba449a03f0a7b/comments", "author": {"login": "dnovillo", "id": 7295335, "node_id": "MDQ6VXNlcjcyOTUzMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7295335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnovillo", "html_url": "https://github.com/dnovillo", "followers_url": "https://api.github.com/users/dnovillo/followers", "following_url": "https://api.github.com/users/dnovillo/following{/other_user}", "gists_url": "https://api.github.com/users/dnovillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnovillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnovillo/subscriptions", "organizations_url": "https://api.github.com/users/dnovillo/orgs", "repos_url": "https://api.github.com/users/dnovillo/repos", "events_url": "https://api.github.com/users/dnovillo/events{/privacy}", "received_events_url": "https://api.github.com/users/dnovillo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4e53d196cc0400d7cd1b90804987be4f14d6e2f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e53d196cc0400d7cd1b90804987be4f14d6e2f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e53d196cc0400d7cd1b90804987be4f14d6e2f1"}], "stats": {"total": 78, "additions": 56, "deletions": 22}, "files": [{"sha": "985926f8b0c585bafdf6dfd2001417b6d11f73c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07485407e17b3be47ede16306a9ba449a03f0a7b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07485407e17b3be47ede16306a9ba449a03f0a7b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=07485407e17b3be47ede16306a9ba449a03f0a7b", "patch": "@@ -1,3 +1,17 @@\n+2009-04-17  Diego Novillo  <dnovillo@google.com>\n+\n+\t* omp-low.c (create_omp_child_function): Set DECL_CONTEXT\n+\tfor DECL.\n+\t* cgraphunit.c (cgraph_build_static_cdtor): Likewise.\n+\t* tree-dfa.c (find_referenced_vars_in): Factor out of ...\n+\t(find_vars_r): ... here.\n+\t* tree-flow.h (find_referenced_vars_in): Declare.\n+\t* tree-ssa-pre.c (create_expression_by_pieces): Assert\n+\tthat AVAIL_OUT exists for BLOCK.\n+\t* Makefile.in (CGRAPH_H): Add dependency on cif-code.def\n+\t(tree-loop-distribution.o): Fix dependency on TREE_VECTORIZER_H.\n+\t(tree-parloops.o): Likewise.\n+\n 2009-04-17  Simon Baldwin  <simonb@google.com>\n \n \t* toplev.c (default_tree_printer): Add handling for %E format."}, {"sha": "91a2c92df7ece00f3b26cf65736407fbff345a5f", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07485407e17b3be47ede16306a9ba449a03f0a7b/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07485407e17b3be47ede16306a9ba449a03f0a7b/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=07485407e17b3be47ede16306a9ba449a03f0a7b", "patch": "@@ -832,7 +832,7 @@ CFGLOOP_H = cfgloop.h $(BASIC_BLOCK_H) $(RTL_H) vecprim.h double-int.h\n IPA_UTILS_H = ipa-utils.h $(TREE_H) $(CGRAPH_H)\n IPA_REFERENCE_H = ipa-reference.h $(BITMAP_H) $(TREE_H)\n IPA_TYPE_ESCAPE_H = ipa-type-escape.h $(TREE_H)\n-CGRAPH_H = cgraph.h $(TREE_H) $(BASIC_BLOCK_H)\n+CGRAPH_H = cgraph.h $(TREE_H) $(BASIC_BLOCK_H) cif-code.def\n DF_H = df.h $(BITMAP_H) $(BASIC_BLOCK_H) alloc-pool.h $(TIMEVAR_H)\n RESOURCE_H = resource.h hard-reg-set.h $(DF_H)\n DDG_H = ddg.h sbitmap.h $(DF_H)\n@@ -2399,11 +2399,11 @@ tree-loop-distribution.o: tree-loop-distribution.c $(CONFIG_H) $(SYSTEM_H) coret\n    $(TM_H) $(GGC_H) $(OPTABS_H) $(TREE_H) $(RTL_H) $(BASIC_BLOCK_H) \\\n    $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_DUMP_H) $(TIMEVAR_H) $(CFGLOOP_H) \\\n    $(TREE_PASS_H) $(TREE_DATA_REF_H) $(SCEV_H) $(EXPR_H) \\\n-   $(TARGET_H) tree-chrec.h langhooks.h tree-vectorizer.h\n+   $(TARGET_H) tree-chrec.h langhooks.h $(TREE_VECTORIZER_H)\n tree-parloops.o: tree-parloops.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_FLOW_H) $(TREE_H) $(RTL_H) $(CFGLOOP_H) $(TREE_DATA_REF_H) $(GGC_H) \\\n    $(DIAGNOSTIC_H) $(TREE_PASS_H) $(SCEV_H) langhooks.h gt-tree-parloops.h \\\n-   tree-vectorizer.h\n+   $(TREE_VECTORIZER_H)\n tree-stdarg.o: tree-stdarg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(FUNCTION_H) $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_PASS_H) \\\n    tree-stdarg.h $(TARGET_H) langhooks.h"}, {"sha": "859eaddfc6ed851e2ef2512c0e14cb601b5971c1", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07485407e17b3be47ede16306a9ba449a03f0a7b/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07485407e17b3be47ede16306a9ba449a03f0a7b/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=07485407e17b3be47ede16306a9ba449a03f0a7b", "patch": "@@ -1369,6 +1369,7 @@ cgraph_build_static_cdtor (char which, tree body, int priority)\n   resdecl = build_decl (RESULT_DECL, NULL_TREE, void_type_node);\n   DECL_ARTIFICIAL (resdecl) = 1;\n   DECL_RESULT (decl) = resdecl;\n+  DECL_CONTEXT (resdecl) = decl;\n \n   allocate_struct_function (decl, false);\n "}, {"sha": "3e6d91cc5926de0f2f8a3110f441abd41a7ee3b3", "filename": "gcc/omp-low.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07485407e17b3be47ede16306a9ba449a03f0a7b/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07485407e17b3be47ede16306a9ba449a03f0a7b/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=07485407e17b3be47ede16306a9ba449a03f0a7b", "patch": "@@ -1577,6 +1577,7 @@ create_omp_child_function (omp_context *ctx, bool task_copy)\n   t = build_decl (RESULT_DECL, NULL_TREE, void_type_node);\n   DECL_ARTIFICIAL (t) = 1;\n   DECL_IGNORED_P (t) = 1;\n+  DECL_CONTEXT (t) = decl;\n   DECL_RESULT (decl) = t;\n \n   t = build_decl (PARM_DECL, get_identifier (\".omp_data_i\"), ptr_type_node);"}, {"sha": "c426912318255197c1888651c643ca025ab2b532", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07485407e17b3be47ede16306a9ba449a03f0a7b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07485407e17b3be47ede16306a9ba449a03f0a7b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=07485407e17b3be47ede16306a9ba449a03f0a7b", "patch": "@@ -1,3 +1,8 @@\n+2009-04-17  Diego Novillo  <dnovillo@google.com>\n+\n+\t* gcc.c-torture/execute/builtins/strlen-3.c: Fix ODR\n+\tviolation for variable 'inside_main'.\n+\n 2009-04-17  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* gfortran.fortran-torture/execute/getarg_1.x: New file."}, {"sha": "666ca21b94f4bf4520609d0294f05f8d9fc46823", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/strlen-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07485407e17b3be47ede16306a9ba449a03f0a7b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrlen-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07485407e17b3be47ede16306a9ba449a03f0a7b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrlen-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrlen-3.c?ref=07485407e17b3be47ede16306a9ba449a03f0a7b", "patch": "@@ -10,7 +10,7 @@ extern char *strcpy (char *, const char *);\n static const char bar[] = \"Hello, World!\";\n static const char baz[] = \"hello, world?\";\n static const char larger[20] = \"short string\";\n-extern volatile int inside_main;\n+extern int inside_main;\n \n int l1 = 1;\n int x = 6;"}, {"sha": "1bd54cd99a3c93c13027e9139f2398588435d90d", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 29, "deletions": 18, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07485407e17b3be47ede16306a9ba449a03f0a7b/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07485407e17b3be47ede16306a9ba449a03f0a7b/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=07485407e17b3be47ede16306a9ba449a03f0a7b", "patch": "@@ -88,26 +88,10 @@ find_referenced_vars (void)\n   FOR_EACH_BB (bb)\n     {\n       for (si = gsi_start_bb (bb); !gsi_end_p (si); gsi_next (&si))\n-\t{\n-\t  size_t i;\n-\t  gimple stmt = gsi_stmt (si);\n-\t  for (i = 0; i < gimple_num_ops (stmt); i++)\n-\t    walk_tree (gimple_op_ptr (stmt, i), find_vars_r, NULL, NULL);\n-\t}\n+\tfind_referenced_vars_in (gsi_stmt (si));\n \n       for (si = gsi_start_phis (bb); !gsi_end_p (si); gsi_next (&si))\n-\t{\n-\t  gimple phi = gsi_stmt (si);\n-\t  size_t i, len = gimple_phi_num_args (phi);\n-\n-\t  walk_tree (gimple_phi_result_ptr (phi), find_vars_r, NULL, NULL);\n-\n-\t  for (i = 0; i < len; i++)\n-\t    {\n-\t      tree arg = gimple_phi_arg_def (phi, i);\n-\t      walk_tree (&arg, find_vars_r, NULL, NULL);\n-\t    }\n-\t}\n+\tfind_referenced_vars_in (gsi_stmt (si));\n     }\n \n   return 0;\n@@ -498,6 +482,33 @@ find_vars_r (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n   return NULL_TREE;\n }\n \n+/* Find referenced variables in STMT.  In contrast with\n+   find_new_referenced_vars, this function will not mark newly found\n+   variables for renaming.  */\n+\n+void\n+find_referenced_vars_in (gimple stmt)\n+{\n+  size_t i;\n+\n+  if (gimple_code (stmt) != GIMPLE_PHI)\n+    {\n+      for (i = 0; i < gimple_num_ops (stmt); i++)\n+\twalk_tree (gimple_op_ptr (stmt, i), find_vars_r, NULL, NULL);\n+    }\n+  else\n+    {\n+      walk_tree (gimple_phi_result_ptr (stmt), find_vars_r, NULL, NULL);\n+\n+      for (i = 0; i < gimple_phi_num_args (stmt); i++)\n+\t{\n+\t  tree arg = gimple_phi_arg_def (stmt, i);\n+\t  walk_tree (&arg, find_vars_r, NULL, NULL);\n+\t}\n+    }\n+}\n+\n+\n /* Lookup UID in the referenced_vars hashtable and return the associated\n    variable.  */\n "}, {"sha": "d78baf459238cbc9f018a29057d8cfb27f4cd6c1", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07485407e17b3be47ede16306a9ba449a03f0a7b/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07485407e17b3be47ede16306a9ba449a03f0a7b/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=07485407e17b3be47ede16306a9ba449a03f0a7b", "patch": "@@ -616,6 +616,7 @@ extern tree gimple_default_def (struct function *, tree);\n extern bool stmt_references_abnormal_ssa_name (gimple);\n extern tree get_ref_base_and_extent (tree, HOST_WIDE_INT *,\n \t\t\t\t     HOST_WIDE_INT *, HOST_WIDE_INT *);\n+extern void find_referenced_vars_in (gimple);\n \n /* In tree-phinodes.c  */\n extern void reserve_phi_args_for_new_edge (basic_block);"}, {"sha": "f63124fe570b90affaa1604845eb68796a4b7b37", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07485407e17b3be47ede16306a9ba449a03f0a7b/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07485407e17b3be47ede16306a9ba449a03f0a7b/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=07485407e17b3be47ede16306a9ba449a03f0a7b", "patch": "@@ -3003,6 +3003,7 @@ create_expression_by_pieces (basic_block block, pre_expr expr,\n \t      add_to_value (VN_INFO (forcedname)->value_id, nameexpr);\n \t      if (!in_fre)\n \t\tbitmap_value_replace_in_set (NEW_SETS (block), nameexpr);\n+\t      gcc_assert (AVAIL_OUT (block));\n \t      bitmap_value_replace_in_set (AVAIL_OUT (block), nameexpr);\n \t    }\n \t  mark_symbols_for_renaming (stmt);"}]}