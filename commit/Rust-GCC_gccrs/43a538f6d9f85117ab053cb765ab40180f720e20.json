{"sha": "43a538f6d9f85117ab053cb765ab40180f720e20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNhNTM4ZjZkOWY4NTExN2FiMDUzY2I3NjVhYjQwMTgwZjcyMGUyMA==", "commit": {"author": {"name": "Marc Espie", "email": "espie@cvs.openbsd.org", "date": "1999-02-18T12:38:23Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-02-18T12:38:23Z"}, "message": "openbsd.h: New file.\n\n\t* config/alpha/openbsd.h: New file.\n\t* config/alpha/xm-openbsd.h: New file.\n\nFrom-SVN: r25283", "tree": {"sha": "bbc4966cec4a479fea425212f16ebecd3069a2f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbc4966cec4a479fea425212f16ebecd3069a2f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43a538f6d9f85117ab053cb765ab40180f720e20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43a538f6d9f85117ab053cb765ab40180f720e20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43a538f6d9f85117ab053cb765ab40180f720e20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43a538f6d9f85117ab053cb765ab40180f720e20/comments", "author": null, "committer": null, "parents": [{"sha": "cb9b3d379779eb1fcc7fc5c3b2405bf6f321115f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb9b3d379779eb1fcc7fc5c3b2405bf6f321115f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb9b3d379779eb1fcc7fc5c3b2405bf6f321115f"}], "stats": {"total": 151, "additions": 151, "deletions": 0}, "files": [{"sha": "83748fd809d7255d427873f7c3e905744d812249", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43a538f6d9f85117ab053cb765ab40180f720e20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43a538f6d9f85117ab053cb765ab40180f720e20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43a538f6d9f85117ab053cb765ab40180f720e20", "patch": "@@ -1,5 +1,7 @@\n Thu Feb 18 13:15:56 1999  Marc Espie <espie@cvs.openbsd.org>\n \n+\t* alpha/openbsd.h: New file.\n+\t* alpha/xm-openbsd.h: New file.\n \t* sparc/openbsd.h: New file.\n \t* sparc/xm-openbsd.h: New file.\n \t* m68k/openbsd.h: New file."}, {"sha": "60591d554f56598ea62b07471f0ecbdce4144498", "filename": "gcc/config/alpha/openbsd.h", "status": "added", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43a538f6d9f85117ab053cb765ab40180f720e20/gcc%2Fconfig%2Falpha%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43a538f6d9f85117ab053cb765ab40180f720e20/gcc%2Fconfig%2Falpha%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fopenbsd.h?ref=43a538f6d9f85117ab053cb765ab40180f720e20", "patch": "@@ -0,0 +1,126 @@\n+/* Configuration file for an alpha OpenBSD target.\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* We settle for little endian for now.  */\n+#define TARGET_ENDIAN_DEFAULT 0\n+\n+#include <alpha/alpha.h>\n+\n+#define OBSD_NO_DYNAMIC_LIBRARIES\n+#define OBSD_HAS_DECLARE_FUNCTION_NAME\n+#define OBSD_HAS_DECLARE_FUNCTION_SIZE\n+#define OBSD_HAS_DECLARE_OBJECT\n+\n+/* alpha ecoff supports only weak aliases, see below.  */\n+#define ASM_WEAKEN_LABEL(FILE,NAME) ASM_OUTPUT_WEAK_ALIAS (FILE,NAME,0)\n+\n+#include <openbsd.h>\n+\n+/* Controlling the compilation driver.  */\n+\n+/* alpha needs __start.  */\n+#undef LINK_SPEC\n+#define LINK_SPEC \\\n+  \"%{!nostdlib:%{!r*:%{!e*:-e __start}}} -dc -dp %{assert*}\"\n+\n+/* run-time target specifications */\n+#define CPP_PREDEFINES \"-D__unix__ -D__ANSI_COMPAT -Asystem(unix) \\\n+-D__OpenBSD__ -D__alpha__ -D__alpha\"\n+\n+/* Layout of source language data types.  */\n+\n+/* This must agree with <machine/ansi.h> */\n+#undef SIZE_TYPE\n+#define SIZE_TYPE \"long unsigned int\"\n+\n+#undef PTRDIFF_TYPE\n+#define PTRDIFF_TYPE \"long int\"\n+\n+#undef WCHAR_TYPE\n+#define WCHAR_TYPE \"int\"\n+\n+#undef WCHAR_TYPE_SIZE\n+#define WCHAR_TYPE_SIZE 32\n+\n+\f\n+#undef PREFERRED_DEBUGGING_TYPE\n+#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n+\n+#define LOCAL_LABEL_PREFIX\t\".\"\n+\n+/* We don't have an init section yet.  */\n+#undef HAS_INIT_SECTION\n+\n+/* collect2 support (assembler format: macros for initialization).  */\n+\n+/* Don't tell collect2 we use COFF as we don't have (yet ?) a dynamic ld\n+   library with the proper functions to handle this -> collect2 will\n+   default to using nm.  */\n+#undef OBJECT_FORMAT_COFF\n+#undef EXTENDED_COFF\n+\n+/* Assembler format: exception region output.  */\n+\n+/* All configurations that don't use elf must be explicit about not using\n+   dwarf unwind information. egcs doesn't try too hard to check internal\n+   configuration files...  */\n+#ifdef INCOMING_RETURN_ADDR_RTX\n+#undef DWARF2_UNWIND_INFO\n+#define DWARF2_UNWIND_INFO 0\n+#endif\n+\n+/* Assembler format: file framework.  */\n+\n+/* Taken from alpha/osf.h. This used to be common to all alpha\n+   configurations, but elf has departed from it.\n+   Check alpha/alpha.h, alpha/osf.h for it when egcs is upgraded.  */\n+#ifndef ASM_FILE_START\n+#define ASM_FILE_START(FILE)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  alpha_write_verstamp (FILE);\t\t\t\t\t\\\n+  fprintf (FILE, \"\\t.set noreorder\\n\");\t\t\t\t\\\n+  fprintf (FILE, \"\\t.set volatile\\n\");                          \\\n+  fprintf (FILE, \"\\t.set noat\\n\");\t\t\t\t\\\n+  if (TARGET_SUPPORT_ARCH)\t\t\t\t\t\\\n+    fprintf (FILE, \"\\t.arch %s\\n\",\t\t\t\t\\\n+             alpha_cpu == PROCESSOR_EV6 ? \"ev6\"\t\t\t\\\n+\t     : (alpha_cpu == PROCESSOR_EV5\t\t\t\\\n+\t\t? (TARGET_MAX ? \"pca56\" : TARGET_BWX ? \"ev56\" : \"ev5\") \\\n+\t\t: \"ev4\"));\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+  ASM_OUTPUT_SOURCE_FILENAME (FILE, main_input_filename);\t\\\n+}\n+#endif\n+\n+/* Assembler format: label output.  */\n+\n+#define ASM_OUTPUT_WEAK_ALIAS(FILE,NAME,VALUE)\t\\\n+ do {\t\t\t\t\t\t\\\n+  fputs (\"\\t.weakext\\t\", FILE);\t\t\t\\\n+  assemble_name (FILE, NAME);\t\t\t\\\n+  if (VALUE)\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      fputs (\" , \", FILE);\t\t\t\\\n+      assemble_name (FILE, VALUE);\t\t\\\n+    }\t\t\t\t\t\t\\\n+  fputc ('\\n', FILE);\t\t\t\t\\\n+ } while (0)\n+\n+"}, {"sha": "50f436695a71d32f6ffef1ee06d9597f78bfa9f1", "filename": "gcc/config/alpha/xm-openbsd.h", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43a538f6d9f85117ab053cb765ab40180f720e20/gcc%2Fconfig%2Falpha%2Fxm-openbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43a538f6d9f85117ab053cb765ab40180f720e20/gcc%2Fconfig%2Falpha%2Fxm-openbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fxm-openbsd.h?ref=43a538f6d9f85117ab053cb765ab40180f720e20", "patch": "@@ -0,0 +1,23 @@\n+/* Configuration file for an host running alpha OpenBSD.\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#include <xm-openbsd.h>\n+#include <alpha/xm-alpha.h>\n+"}]}