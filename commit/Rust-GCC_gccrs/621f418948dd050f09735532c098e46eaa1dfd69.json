{"sha": "621f418948dd050f09735532c098e46eaa1dfd69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIxZjQxODk0OGRkMDUwZjA5NzM1NTMyYzA5OGU0NmVhYTFkZmQ2OQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-06-28T15:42:01Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-06-28T15:42:01Z"}, "message": "re PR c++/44535 (g++ -O[ 23] generates undefined symbol)\n\n2010-06-28  Martin Jambor  <mjambor@suse.cz>\n\n\tPR c++/44535\n\t* gimple-fold.c (get_first_base_binfo_with_virtuals): New function.\n\t(gimple_get_relevant_ref_binfo): Use get_first_base_binfo_with_virtuals\n\tinstead of BINFO_BASE_BINFO.\n\n\t* testsuite/g++.dg/torture/pr44535.C: New test.\n\nFrom-SVN: r161498", "tree": {"sha": "745ee01b97de27435cfc7d6c86ecfc573129a1f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/745ee01b97de27435cfc7d6c86ecfc573129a1f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/621f418948dd050f09735532c098e46eaa1dfd69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/621f418948dd050f09735532c098e46eaa1dfd69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/621f418948dd050f09735532c098e46eaa1dfd69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/621f418948dd050f09735532c098e46eaa1dfd69/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fe2ef088e065f9e15311b221db3fcbf864dfb250", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe2ef088e065f9e15311b221db3fcbf864dfb250", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe2ef088e065f9e15311b221db3fcbf864dfb250"}], "stats": {"total": 66, "additions": 64, "deletions": 2}, "files": [{"sha": "1b4f2d154bbda090d666f0b9c24369693b500a92", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/621f418948dd050f09735532c098e46eaa1dfd69/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/621f418948dd050f09735532c098e46eaa1dfd69/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=621f418948dd050f09735532c098e46eaa1dfd69", "patch": "@@ -1,3 +1,10 @@\n+2010-06-28  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR c++/44535\n+\t* gimple-fold.c (get_first_base_binfo_with_virtuals): New function.\n+\t(gimple_get_relevant_ref_binfo): Use get_first_base_binfo_with_virtuals\n+\tinstead of BINFO_BASE_BINFO.\n+\n 2010-06-28  Michael Matz  <matz@suse.de>\n \n \tPR middle-end/44592"}, {"sha": "491611fa782c18b82489d8ec3e9abc8d4de80964", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/621f418948dd050f09735532c098e46eaa1dfd69/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/621f418948dd050f09735532c098e46eaa1dfd69/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=621f418948dd050f09735532c098e46eaa1dfd69", "patch": "@@ -1476,6 +1476,22 @@ gimple_fold_builtin (gimple stmt)\n   return result;\n }\n \n+/* Return the first of the base binfos of BINFO that has virtual functions.  */\n+\n+static tree\n+get_first_base_binfo_with_virtuals (tree binfo)\n+{\n+  int i;\n+  tree base_binfo;\n+\n+  for (i = 0; BINFO_BASE_ITERATE (binfo, i, base_binfo); i++)\n+    if (BINFO_VIRTUALS (base_binfo))\n+      return base_binfo;\n+\n+  return NULL_TREE;\n+}\n+\n+\n /* Search for a base binfo of BINFO that corresponds to TYPE and return it if\n    it is found or NULL_TREE if it is not.  */\n \n@@ -1531,8 +1547,8 @@ gimple_get_relevant_ref_binfo (tree ref, tree known_binfo)\n \t      || BINFO_N_BASE_BINFOS (binfo) == 0)\n \t    return NULL_TREE;\n \n-\t  base_binfo = BINFO_BASE_BINFO (binfo, 0);\n-\t  if (BINFO_TYPE (base_binfo) != TREE_TYPE (field))\n+\t  base_binfo = get_first_base_binfo_with_virtuals (binfo);\n+\t  if (base_binfo && BINFO_TYPE (base_binfo) != TREE_TYPE (field))\n \t    {\n \t      tree d_binfo;\n "}, {"sha": "3326446bb881b6b9cbda6320bf9fe1833d62b35d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/621f418948dd050f09735532c098e46eaa1dfd69/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/621f418948dd050f09735532c098e46eaa1dfd69/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=621f418948dd050f09735532c098e46eaa1dfd69", "patch": "@@ -1,3 +1,8 @@\n+2010-06-28  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR c++/44535\n+\t* g++.dg/torture/pr44535.C: New test.\n+\n 2010-06-28  Michael Matz  <matz@suse.de>\n \n \tPR middle-end/44592"}, {"sha": "9126f3997fb109ada1015a3f0151f339ebfb6c56", "filename": "gcc/testsuite/g++.dg/torture/pr44535.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/621f418948dd050f09735532c098e46eaa1dfd69/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr44535.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/621f418948dd050f09735532c098e46eaa1dfd69/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr44535.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr44535.C?ref=621f418948dd050f09735532c098e46eaa1dfd69", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+\n+namespace FOO {\n+\n+template <typename T>\n+class A\n+{\n+public:\n+    void Enum();\n+    virtual void OnProv() = 0;\n+    virtual ~A() { }\n+};\n+typedef A<char> B;\n+\n+template<typename T>\n+void A<T>::Enum ()\n+{\n+    OnProv ();\n+}\n+} // namespace FOO\n+\n+class C {};\n+\n+class D: public C, public FOO::B {\n+public:\n+    void OnProv() {}\n+};\n+\n+int main(int argc, char *argv[])\n+{\n+    D x;\n+    x.Enum();\n+    return 0;\n+}"}]}