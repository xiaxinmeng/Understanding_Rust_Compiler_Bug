{"sha": "b1e8be10601e9394f9cb4873e46d83ab04d2dab2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFlOGJlMTA2MDFlOTM5NGY5Y2I0ODczZTQ2ZDgzYWIwNGQyZGFiMg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-09-18T00:03:26Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-09-18T00:03:26Z"}, "message": "tree-pass.h, [...]: Revert last change.\n\n        * tree-pass.h, tree-flow.h, tree-ssa-dce.c: Revert last change.\n        * tree-ssa-loop.c (pass_vect_dce): Remove.\n        * passes.c (init_optimization_passes): Add pass_dce as a sub-pass\n        of pass_vectorize.\n\nFrom-SVN: r104382", "tree": {"sha": "7f27a2447a866f4286914f3aa9e9e17820c5201a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f27a2447a866f4286914f3aa9e9e17820c5201a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1e8be10601e9394f9cb4873e46d83ab04d2dab2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1e8be10601e9394f9cb4873e46d83ab04d2dab2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1e8be10601e9394f9cb4873e46d83ab04d2dab2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1e8be10601e9394f9cb4873e46d83ab04d2dab2/comments", "author": null, "committer": null, "parents": [{"sha": "5e839bc82015c2659f230cf1141ec868cf5d449c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e839bc82015c2659f230cf1141ec868cf5d449c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e839bc82015c2659f230cf1141ec868cf5d449c"}], "stats": {"total": 39, "additions": 12, "deletions": 27}, "files": [{"sha": "20db797d9e01d3e71b56d5b7c38501d1368d9117", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1e8be10601e9394f9cb4873e46d83ab04d2dab2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1e8be10601e9394f9cb4873e46d83ab04d2dab2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1e8be10601e9394f9cb4873e46d83ab04d2dab2", "patch": "@@ -1,3 +1,10 @@\n+2005-09-17  Richard Henderson  <rth@redhat.com>\n+\n+\t* tree-pass.h, tree-flow.h, tree-ssa-dce.c: Revert last change.\n+\t* tree-ssa-loop.c (pass_vect_dce): Remove.\n+\t* passes.c (init_optimization_passes): Add pass_dce as a sub-pass\n+\tof pass_vectorize.\n+\n 2005-09-17  Richard Henderson  <rth@redhat.com>\n \n \t* tree-pass.h (pass_vect_dce): Declare."}, {"sha": "6a35b1750a7cbe14e62c320f0b15c6aa049a40c4", "filename": "gcc/passes.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1e8be10601e9394f9cb4873e46d83ab04d2dab2/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1e8be10601e9394f9cb4873e46d83ab04d2dab2/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=b1e8be10601e9394f9cb4873e46d83ab04d2dab2", "patch": "@@ -567,7 +567,6 @@ init_optimization_passes (void)\n   NEXT_PASS (pass_iv_canon);\n   NEXT_PASS (pass_if_conversion);\n   NEXT_PASS (pass_vectorize);\n-  NEXT_PASS (pass_vect_dce);\n   /* NEXT_PASS (pass_may_alias) cannot be done again because the\n      vectorizer creates alias relations that are not supported by\n      pass_may_alias.  */\n@@ -577,6 +576,10 @@ init_optimization_passes (void)\n   NEXT_PASS (pass_tree_loop_done);\n   *p = NULL;\n \n+  p = &pass_vectorize.sub;\n+  NEXT_PASS (pass_dce);\n+  *p = NULL;\n+\n   p = &pass_loop2.sub;\n   NEXT_PASS (pass_rtl_loop_init);\n   NEXT_PASS (pass_rtl_move_loop_invariants);"}, {"sha": "fa5c1d692df115cb36322bfe80e4d811b8996f61", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1e8be10601e9394f9cb4873e46d83ab04d2dab2/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1e8be10601e9394f9cb4873e46d83ab04d2dab2/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=b1e8be10601e9394f9cb4873e46d83ab04d2dab2", "patch": "@@ -707,9 +707,6 @@ struct tree_niter_desc\n \t\t\t   the loop), then the information would be lost.  */\n };\n \n-/* In tree-ssa-dce.c */\n-void tree_ssa_dce (void);\n-\n /* In tree-vectorizer.c */\n void vectorize_loops (struct loops *);\n "}, {"sha": "57dc029438eeea05da849250a3cebb600819dc22", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1e8be10601e9394f9cb4873e46d83ab04d2dab2/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1e8be10601e9394f9cb4873e46d83ab04d2dab2/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=b1e8be10601e9394f9cb4873e46d83ab04d2dab2", "patch": "@@ -234,7 +234,6 @@ extern struct tree_opt_pass pass_empty_loop;\n extern struct tree_opt_pass pass_record_bounds;\n extern struct tree_opt_pass pass_if_conversion;\n extern struct tree_opt_pass pass_vectorize;\n-extern struct tree_opt_pass pass_vect_dce;\n extern struct tree_opt_pass pass_complete_unroll;\n extern struct tree_opt_pass pass_iv_optimize;\n extern struct tree_opt_pass pass_tree_loop_done;"}, {"sha": "8902d2a2e0a398153013feaeb998018ce42a6f17", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1e8be10601e9394f9cb4873e46d83ab04d2dab2/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1e8be10601e9394f9cb4873e46d83ab04d2dab2/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=b1e8be10601e9394f9cb4873e46d83ab04d2dab2", "patch": "@@ -935,7 +935,7 @@ perform_tree_ssa_dce (bool aggressive)\n }\n \n /* Pass entry points.  */\n-void\n+static void\n tree_ssa_dce (void)\n {\n   perform_tree_ssa_dce (/*aggressive=*/false);"}, {"sha": "34126b16fa0401ef6b560f7921b64a6b9ff1d6ed", "filename": "gcc/tree-ssa-loop.c", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1e8be10601e9394f9cb4873e46d83ab04d2dab2/gcc%2Ftree-ssa-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1e8be10601e9394f9cb4873e46d83ab04d2dab2/gcc%2Ftree-ssa-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop.c?ref=b1e8be10601e9394f9cb4873e46d83ab04d2dab2", "patch": "@@ -214,27 +214,6 @@ struct tree_opt_pass pass_vectorize =\n   0\t\t\t\t\t/* letter */\n };\n \n-struct tree_opt_pass pass_vect_dce =\n-{\n-  \"vect_dce\",\t\t\t\t/* name */\n-  gate_tree_vectorize,\t\t\t/* gate */\n-  tree_ssa_dce,\t\t\t\t/* execute */\n-  NULL,\t\t\t\t\t/* sub */\n-  NULL,\t\t\t\t\t/* next */\n-  0,\t\t\t\t\t/* static_pass_number */\n-  TV_TREE_DCE,\t\t\t\t/* tv_id */\n-  PROP_cfg | PROP_ssa | PROP_alias,\t/* properties_required */\n-  0,\t\t\t\t\t/* properties_provided */\n-  0,\t\t\t\t\t/* properties_destroyed */\n-  0,\t\t\t\t\t/* todo_flags_start */\n-  TODO_dump_func \n-    | TODO_update_ssa_no_phi \n-    | TODO_cleanup_cfg\n-    | TODO_ggc_collect\n-    | TODO_verify_ssa,\t\t\t/* todo_flags_finish */\n-  0\t\t\t\t\t/* letter */\n-};\n-\n /* Loop nest optimizations.  */\n \n static void"}]}