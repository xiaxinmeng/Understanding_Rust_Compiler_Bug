{"sha": "4c9c8227aebebb538fe503925cbd07d2656fb071", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM5YzgyMjdhZWJlYmI1MzhmZTUwMzkyNWNiZDA3ZDI2NTZmYjA3MQ==", "commit": {"author": {"name": "Charles Hannum", "email": "mycroft@gnu.org", "date": "1992-01-14T11:50:17Z"}, "committer": {"name": "Charles Hannum", "email": "mycroft@gnu.org", "date": "1992-01-14T11:50:17Z"}, "message": "entered into RCS\n\nFrom-SVN: r183", "tree": {"sha": "2d85897cc56f0979931883c16faa808d1387d141", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d85897cc56f0979931883c16faa808d1387d141"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c9c8227aebebb538fe503925cbd07d2656fb071", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c9c8227aebebb538fe503925cbd07d2656fb071", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c9c8227aebebb538fe503925cbd07d2656fb071", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c9c8227aebebb538fe503925cbd07d2656fb071/comments", "author": null, "committer": null, "parents": [{"sha": "355ddfc72eb4772f34198f583f35d6b7bc630472", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/355ddfc72eb4772f34198f583f35d6b7bc630472", "html_url": "https://github.com/Rust-GCC/gccrs/commit/355ddfc72eb4772f34198f583f35d6b7bc630472"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "6433d470ffbd6427493d23e98605d00f8a18cb41", "filename": "gcc/integrate.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c9c8227aebebb538fe503925cbd07d2656fb071/gcc%2Fintegrate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c9c8227aebebb538fe503925cbd07d2656fb071/gcc%2Fintegrate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.h?ref=4c9c8227aebebb538fe503925cbd07d2656fb071", "patch": "@@ -63,6 +63,8 @@ struct inline_remap\n      this inline instance.  These pseudos are then marked as being equivalent\n      to the appropriate address and substituted if valid.  */\n   rtx *const_equiv_map;\n+  /* Number of entries in const_equiv_map and const_arg_map.  */\n+  int const_equiv_map_size;\n   /* This is incremented for each new basic block.\n      It is used to store in const_age_map to record the domain of validity\n      of each entry in const_equiv_map."}]}