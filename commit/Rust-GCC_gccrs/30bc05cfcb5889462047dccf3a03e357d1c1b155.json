{"sha": "30bc05cfcb5889462047dccf3a03e357d1c1b155", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBiYzA1Y2ZjYjU4ODk0NjIwNDdkY2NmM2EwM2UzNTdkMWMxYjE1NQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-05-31T21:36:42Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-05-31T21:36:42Z"}, "message": "libgo: support for sparc64 GNU/Linux\n    \n    Fix lfstack code to work with sparc64 GNU/Linux address map.\n    \n    Force alignment of epollevent.  To make this work reliably, pass\n    GOARCH explicitly to mkrsysinfo.sh.\n    \n    Patch by Vladimir Mezentsev.\n    \n    Reviewed-on: https://go-review.googlesource.com/44494\n\nFrom-SVN: r248765", "tree": {"sha": "0fea5b7dccff8cf496f7083cd291e2be2d36d71a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fea5b7dccff8cf496f7083cd291e2be2d36d71a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30bc05cfcb5889462047dccf3a03e357d1c1b155", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30bc05cfcb5889462047dccf3a03e357d1c1b155", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30bc05cfcb5889462047dccf3a03e357d1c1b155", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30bc05cfcb5889462047dccf3a03e357d1c1b155/comments", "author": null, "committer": null, "parents": [{"sha": "4f14911c80fe5e57068a98bf8f65aef0a27a9494", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f14911c80fe5e57068a98bf8f65aef0a27a9494", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f14911c80fe5e57068a98bf8f65aef0a27a9494"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "33259da299fb43d3bde75fd3724dfbfa1d576f52", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30bc05cfcb5889462047dccf3a03e357d1c1b155/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30bc05cfcb5889462047dccf3a03e357d1c1b155/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=30bc05cfcb5889462047dccf3a03e357d1c1b155", "patch": "@@ -1,4 +1,4 @@\n-884df09c3da0f39309ab13f2ad401628fb933050\n+e5870eac67d4d5b1f86bdbfb13dadf4d5723f71d\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "0f9881ffaa4e122d311d82e9b2d565090d1faf70", "filename": "libgo/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30bc05cfcb5889462047dccf3a03e357d1c1b155/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30bc05cfcb5889462047dccf3a03e357d1c1b155/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=30bc05cfcb5889462047dccf3a03e357d1c1b155", "patch": "@@ -531,7 +531,7 @@ s-version: Makefile\n \n runtime_sysinfo.go: s-runtime_sysinfo; @true\n s-runtime_sysinfo: $(srcdir)/mkrsysinfo.sh gen-sysinfo.go\n-\tGOOS=$(GOOS) $(SHELL) $(srcdir)/mkrsysinfo.sh\n+\tGOARCH=$(GOARCH) GOOS=$(GOOS) $(SHELL) $(srcdir)/mkrsysinfo.sh\n \t$(SHELL) $(srcdir)/mvifdiff.sh tmp-runtime_sysinfo.go runtime_sysinfo.go\n \t$(STAMP) $@\n "}, {"sha": "2452f967252ba14abfbc8de9737672b50d70c220", "filename": "libgo/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30bc05cfcb5889462047dccf3a03e357d1c1b155/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30bc05cfcb5889462047dccf3a03e357d1c1b155/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=30bc05cfcb5889462047dccf3a03e357d1c1b155", "patch": "@@ -3081,7 +3081,7 @@ s-version: Makefile\n \n runtime_sysinfo.go: s-runtime_sysinfo; @true\n s-runtime_sysinfo: $(srcdir)/mkrsysinfo.sh gen-sysinfo.go\n-\tGOOS=$(GOOS) $(SHELL) $(srcdir)/mkrsysinfo.sh\n+\tGOARCH=$(GOARCH) GOOS=$(GOOS) $(SHELL) $(srcdir)/mkrsysinfo.sh\n \t$(SHELL) $(srcdir)/mvifdiff.sh tmp-runtime_sysinfo.go runtime_sysinfo.go\n \t$(STAMP) $@\n "}, {"sha": "b314a3ba2169a776f15b945e96b500b32b28a3a0", "filename": "libgo/go/runtime/lfstack_64bit.go", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30bc05cfcb5889462047dccf3a03e357d1c1b155/libgo%2Fgo%2Fruntime%2Flfstack_64bit.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30bc05cfcb5889462047dccf3a03e357d1c1b155/libgo%2Fgo%2Fruntime%2Flfstack_64bit.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Flfstack_64bit.go?ref=30bc05cfcb5889462047dccf3a03e357d1c1b155", "patch": "@@ -32,9 +32,18 @@ const (\n \t// bottom, because node must be pointer-aligned, giving a total of 19 bits\n \t// of count.\n \tcntBits = 64 - addrBits + 3\n+\n+\t// On sparc64-linux, user addresses are 52-bit numbers sign extended to 64.\n+\t// We shift the address left 12 to eliminate the sign extended part and make\n+\t// room in the bottom for the count.\n+\tsparcLinuxAddrBits = 52\n+\tsparcLinuxCntBits  = 64 - sparcLinuxAddrBits + 3\n )\n \n func lfstackPack(node *lfnode, cnt uintptr) uint64 {\n+\tif GOARCH == \"sparc64\" && GOOS == \"linux\" {\n+\t\treturn uint64(uintptr(unsafe.Pointer(node)))<<(64-sparcLinuxAddrBits) | uint64(cnt&(1<<sparcLinuxCntBits-1))\n+\t}\n \treturn uint64(uintptr(unsafe.Pointer(node)))<<(64-addrBits) | uint64(cnt&(1<<cntBits-1))\n }\n \n@@ -44,5 +53,8 @@ func lfstackUnpack(val uint64) *lfnode {\n \t\t// val before unpacking.\n \t\treturn (*lfnode)(unsafe.Pointer(uintptr(int64(val) >> cntBits << 3)))\n \t}\n+\tif GOARCH == \"sparc64\" && GOOS == \"linux\" {\n+\t\treturn (*lfnode)(unsafe.Pointer(uintptr(int64(val) >> sparcLinuxCntBits << 3)))\n+\t}\n \treturn (*lfnode)(unsafe.Pointer(uintptr(val >> cntBits << 3)))\n }"}, {"sha": "6ab80e625d933260a624510765fd006450cf13d8", "filename": "libgo/mkrsysinfo.sh", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30bc05cfcb5889462047dccf3a03e357d1c1b155/libgo%2Fmkrsysinfo.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30bc05cfcb5889462047dccf3a03e357d1c1b155/libgo%2Fmkrsysinfo.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmkrsysinfo.sh?ref=30bc05cfcb5889462047dccf3a03e357d1c1b155", "patch": "@@ -83,7 +83,11 @@ if grep '^const _epoll_data_offset ' ${OUT} >/dev/null 2>&1; then\n   if test \"$val\" = \"4\"; then\n       echo 'type epollevent struct { events uint32; data [8]byte }' >> ${OUT}\n   elif test \"$val\" = \"8\"; then\n-      echo 'type epollevent struct { events uint32; pad [4]byte; data [8]byte }' >> ${OUT}\n+      if test \"$GOARCH\" = \"sparc64\" -a \"$GOOS\" = \"linux\"; then\n+          echo 'type epollevent struct { events uint32; pad [4]byte; data [8]byte; _align [0]int64 }' >> ${OUT}\n+      else\n+          echo 'type epollevent struct { events uint32; pad [4]byte; data [8]byte }' >> ${OUT}\n+      fi\n   else\n       echo 1>&2 \"unknown epoll data offset value ${val}\"\n       exit 1"}]}