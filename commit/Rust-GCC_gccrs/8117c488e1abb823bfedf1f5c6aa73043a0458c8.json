{"sha": "8117c488e1abb823bfedf1f5c6aa73043a0458c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODExN2M0ODhlMWFiYjgyM2JmZWRmMWY1YzZhYTczMDQzYTA0NThjOA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2005-03-10T15:04:39Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2005-03-10T15:04:39Z"}, "message": "re PR target/20375 (C++ ICE in assign_parm_find_entry_rtl)\n\n\tPR c++/20375\n\t* function.c (struct assign_parm_data_one): Remove last_named\n\tfield.\n\t(assign_parm_find_data_types): Don't determine last_named.\n\tReorder named_parm determination.\n\t(assign_parms): Only setup varargs on the last non-varadic\n\tparameter.\ntestsuite:\n\tPR c++/20375\n\t* g++.dg/other/stdarg3.C: New.\n\nFrom-SVN: r96237", "tree": {"sha": "b6a71076da1f307f0ad5e99e7cc94e2fbca803aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6a71076da1f307f0ad5e99e7cc94e2fbca803aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8117c488e1abb823bfedf1f5c6aa73043a0458c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8117c488e1abb823bfedf1f5c6aa73043a0458c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8117c488e1abb823bfedf1f5c6aa73043a0458c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8117c488e1abb823bfedf1f5c6aa73043a0458c8/comments", "author": null, "committer": null, "parents": [{"sha": "004c400a00547ee5ca992b393705f561811590ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/004c400a00547ee5ca992b393705f561811590ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/004c400a00547ee5ca992b393705f561811590ce"}], "stats": {"total": 70, "additions": 41, "deletions": 29}, "files": [{"sha": "e6a7c4ef2183f12ce9dfedc1186e5bbf1fed731c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8117c488e1abb823bfedf1f5c6aa73043a0458c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8117c488e1abb823bfedf1f5c6aa73043a0458c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8117c488e1abb823bfedf1f5c6aa73043a0458c8", "patch": "@@ -1,3 +1,13 @@\n+2005-03-10  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/20375\n+\t* function.c (struct assign_parm_data_one): Remove last_named\n+\tfield.\n+\t(assign_parm_find_data_types): Don't determine last_named.\n+\tReorder named_parm determination.\n+\t(assign_parms): Only setup varargs on the last non-varadic\n+\tparameter.\n+\n 2005-03-10  Kazuhiro Inaoka  <inaoka.lazuhiro@renesas.com>\n \n \t* config/m32r/m32r.md (load_sda_base_32): New pattern.  Loads"}, {"sha": "49029a937b7231190351657e298b406a471d74d0", "filename": "gcc/function.c", "status": "modified", "additions": 10, "deletions": 29, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8117c488e1abb823bfedf1f5c6aa73043a0458c8/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8117c488e1abb823bfedf1f5c6aa73043a0458c8/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=8117c488e1abb823bfedf1f5c6aa73043a0458c8", "patch": "@@ -1992,7 +1992,6 @@ struct assign_parm_data_one\n   struct locate_and_pad_arg_data locate;\n   int partial;\n   BOOL_BITFIELD named_arg : 1;\n-  BOOL_BITFIELD last_named : 1;\n   BOOL_BITFIELD passed_pointer : 1;\n   BOOL_BITFIELD on_stack : 1;\n   BOOL_BITFIELD loaded_in_reg : 1;\n@@ -2136,24 +2135,15 @@ assign_parm_find_data_types (struct assign_parm_data_all *all, tree parm,\n \n   memset (data, 0, sizeof (*data));\n \n-  /* Set LAST_NAMED if this is last named arg before last anonymous args.  */\n-  if (current_function_stdarg)\n-    {\n-      tree tem;\n-      for (tem = TREE_CHAIN (parm); tem; tem = TREE_CHAIN (tem))\n-\tif (DECL_NAME (tem))\n-\t  break;\n-      if (tem == 0)\n-\tdata->last_named = true;\n-    }\n-\n-  /* Set NAMED_ARG if this arg should be treated as a named arg.  For\n-     most machines, if this is a varargs/stdarg function, then we treat\n-     the last named arg as if it were anonymous too.  */\n-  if (targetm.calls.strict_argument_naming (&all->args_so_far))\n-    data->named_arg = 1;\n+  /* NAMED_ARG is a mis-nomer.  We really mean 'non-varadic'. */\n+  if (!current_function_stdarg)\n+    data->named_arg = 1;  /* No varadic parms.  */\n+  else if (TREE_CHAIN (parm))\n+    data->named_arg = 1;  /* Not the last non-varadic parm. */\n+  else if (targetm.calls.strict_argument_naming (&all->args_so_far))\n+    data->named_arg = 1;  /* Only varadic ones are unnamed.  */\n   else\n-    data->named_arg = !data->last_named;\n+    data->named_arg = 0;  /* Treat as varadic.  */\n \n   nominal_type = TREE_TYPE (parm);\n   passed_type = DECL_ARG_TYPE (parm);\n@@ -3055,7 +3045,6 @@ assign_parms (tree fndecl)\n   struct assign_parm_data_all all;\n   tree fnargs, parm;\n   rtx internal_arg_pointer;\n-  int varargs_setup = 0;\n \n   /* If the reg that the virtual arg pointer will be translated into is\n      not a fixed reg or is the stack pointer, make a copy of the virtual\n@@ -3090,16 +3079,8 @@ assign_parms (tree fndecl)\n \t  continue;\n \t}\n \n-      /* Handle stdargs.  LAST_NAMED is a slight mis-nomer; it's also true\n-\t for the unnamed dummy argument following the last named argument.\n-\t See ABI silliness wrt strict_argument_naming and NAMED_ARG.  So\n-\t we only want to do this when we get to the actual last named\n-\t argument, which will be the first time LAST_NAMED gets set.  */\n-      if (data.last_named && !varargs_setup)\n-\t{\n-\t  varargs_setup = true;\n-\t  assign_parms_setup_varargs (&all, &data, false);\n-\t}\n+      if (current_function_stdarg && !TREE_CHAIN (parm))\n+\tassign_parms_setup_varargs (&all, &data, false);\n \n       /* Find out where the parameter arrives in this function.  */\n       assign_parm_find_entry_rtl (&all, &data);"}, {"sha": "8454c08cc60db248b839db05f98219311f4ca26d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8117c488e1abb823bfedf1f5c6aa73043a0458c8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8117c488e1abb823bfedf1f5c6aa73043a0458c8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8117c488e1abb823bfedf1f5c6aa73043a0458c8", "patch": "@@ -1,3 +1,8 @@\n+2005-03-10  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/20375\n+\t* g++.dg/other/stdarg3.C: New.\n+\n 2005-03-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/18384, c++/18327"}, {"sha": "3d11dffae1f34ead2208a01dbe09716705a7e88a", "filename": "gcc/testsuite/g++.dg/other/stdarg3.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8117c488e1abb823bfedf1f5c6aa73043a0458c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fstdarg3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8117c488e1abb823bfedf1f5c6aa73043a0458c8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fstdarg3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fstdarg3.C?ref=8117c488e1abb823bfedf1f5c6aa73043a0458c8", "patch": "@@ -0,0 +1,16 @@\n+// Copyright (C) 2005 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 8 Mar 2005 <nathan@codesourcery.com>\n+\n+// PR 20375: ICE\n+// Origin: Joseph S. Myers <jsm28@gcc.gnu.org>\n+// { dg-options \"-mlp64\" { target \"ia64-*-*\" } }\n+\n+union U\n+{\n+  void *m[7];\n+};\n+\n+struct C;\n+\n+void f(struct C *c, float f, union U, ...)\n+{ }"}]}