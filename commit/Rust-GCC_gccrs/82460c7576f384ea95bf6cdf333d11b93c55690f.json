{"sha": "82460c7576f384ea95bf6cdf333d11b93c55690f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI0NjBjNzU3NmYzODRlYTk1YmY2Y2RmMzMzZDExYjkzYzU1NjkwZg==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2006-06-15T13:30:17Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "2006-06-15T13:30:17Z"}, "message": "re PR middle-end/27793 (num_ssa_names inconsistent or immediate use iterator wrong)\n\n\n2006-06-15  Andrew MacLeod  <amacleod@redhat.com>\n\t\n\tPR middle-end/27793\n\t* tree-dfa.c (referenced_vars_dup_list): Remove.\n\t(find_referenced_vars): Remove assert.\n\t(referenced_var_check_and_insert): Replace dup list with assert.\n\t* tree-ssa.c (delete_tree_ssa): Remove dup list processing.\n\t* tree-flow.h (referenced_vars_dup_list): Remove extern decl.\n\nFrom-SVN: r114678", "tree": {"sha": "4343e6b952861e4881431830cb7fcf4aeddf46db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4343e6b952861e4881431830cb7fcf4aeddf46db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82460c7576f384ea95bf6cdf333d11b93c55690f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82460c7576f384ea95bf6cdf333d11b93c55690f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82460c7576f384ea95bf6cdf333d11b93c55690f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82460c7576f384ea95bf6cdf333d11b93c55690f/comments", "author": null, "committer": null, "parents": [{"sha": "da4340a1ac90357925a7606b39e94fef133ecd13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da4340a1ac90357925a7606b39e94fef133ecd13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da4340a1ac90357925a7606b39e94fef133ecd13"}], "stats": {"total": 47, "additions": 11, "deletions": 36}, "files": [{"sha": "9abc3e8fbe6d4d4fd055b6117a35decb8eb1e1d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82460c7576f384ea95bf6cdf333d11b93c55690f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82460c7576f384ea95bf6cdf333d11b93c55690f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=82460c7576f384ea95bf6cdf333d11b93c55690f", "patch": "@@ -1,3 +1,12 @@\n+2006-06-15  Andrew MacLeod  <amacleod@redhat.com>\n+\t\n+\tPR middle-end/27793\n+\t* tree-dfa.c (referenced_vars_dup_list): Remove.\n+\t(find_referenced_vars): Remove assert.\n+\t(referenced_var_check_and_insert): Replace dup list with assert.\n+\t* tree-ssa.c (delete_tree_ssa): Remove dup list processing.\n+\t* tree-flow.h (referenced_vars_dup_list): Remove extern decl.\n+\n 2006-06-15  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-structalias.c (alias_get_name): Avoid creating"}, {"sha": "f0049edeec226494a9f85cae06ffdadde82cf9cb", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 2, "deletions": 23, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82460c7576f384ea95bf6cdf333d11b93c55690f/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82460c7576f384ea95bf6cdf333d11b93c55690f/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=82460c7576f384ea95bf6cdf333d11b93c55690f", "patch": "@@ -75,8 +75,6 @@ static tree find_vars_r (tree *, int *, void *);\n \n /* Array of all variables referenced in the function.  */\n htab_t referenced_vars;\n-/* List of referenced variables with duplicate UID's.  */\n-VEC(tree,gc) *referenced_vars_dup_list;\n \n /* Default definition for this symbols.  If set for symbol, it\n    means that the first reference to this variable in the function is a\n@@ -102,7 +100,6 @@ find_referenced_vars (void)\n   basic_block bb;\n   block_stmt_iterator si;\n \n-  gcc_assert (VEC_length (tree, referenced_vars_dup_list) == 0);\n   FOR_EACH_BB (bb)\n     for (si = bsi_start (bb); !bsi_end_p (si); bsi_next (&si))\n       {\n@@ -640,27 +637,9 @@ referenced_var_check_and_insert (tree to)\n \n   if (h)\n     {\n-      unsigned u;\n-      tree t = NULL_TREE;\n-\n       /* DECL_UID has already been entered in the table.  Verify that it is\n-\t the same entry as TO.  */\n-      gcc_assert (h->to != NULL);\n-      if (h->to == to)\n-        return false;\n-\n-      /* PRs 26757 and 27793.  Maintain a list of duplicate variable pointers\n-\t with the same DECL_UID.  There isn't usually very many.\n-\t TODO.  Once the C++ front end doesn't create duplicate DECL UID's, this\n-\t code can be removed.  */\n-      for (u = 0; u < VEC_length (tree, referenced_vars_dup_list); u++)\n-\t{\n-\t  t = VEC_index (tree, referenced_vars_dup_list, u);\n-\t  if (t == to)\n-\t    break;\n-\t}\n-      if (t != to)\n-\tVEC_safe_push (tree, gc, referenced_vars_dup_list, to);\n+\t the same entry as TO.  See PR 27793.  */\n+      gcc_assert (h->to == to);\n       return false;\n     }\n "}, {"sha": "eee6fa434b015ae49f08df901382292f16f4d85a", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82460c7576f384ea95bf6cdf333d11b93c55690f/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82460c7576f384ea95bf6cdf333d11b93c55690f/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=82460c7576f384ea95bf6cdf333d11b93c55690f", "patch": "@@ -419,8 +419,6 @@ typedef struct\n \n /* Array of all variables referenced in the function.  */\n extern GTY((param_is (struct int_tree_map))) htab_t referenced_vars;\n-/* List of referenced variables in the function with duplicate UID's.  */\n-extern VEC(tree,gc) *referenced_vars_dup_list;\n \n /* Default defs for undefined symbols. */\n extern GTY((param_is (struct int_tree_map))) htab_t default_defs;"}, {"sha": "14466124318b8556a10ecdd2e3be16bbf177395d", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82460c7576f384ea95bf6cdf333d11b93c55690f/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82460c7576f384ea95bf6cdf333d11b93c55690f/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=82460c7576f384ea95bf6cdf333d11b93c55690f", "patch": "@@ -853,7 +853,6 @@ delete_tree_ssa (void)\n   block_stmt_iterator bsi;\n   referenced_var_iterator rvi;\n   tree var;\n-  unsigned u;\n \n   /* Release any ssa_names still in use.  */\n   for (i = 0; i < num_ssa_names; i++)\n@@ -888,16 +887,6 @@ delete_tree_ssa (void)\n       ggc_free (var->common.ann);\n       var->common.ann = NULL;\n     }\n-\n-  /* Remove any referenced variables which had duplicate UID's.  */\n-  for (u = 0; u < VEC_length (tree, referenced_vars_dup_list); u++)\n-    {\n-      var = VEC_index (tree, referenced_vars_dup_list, u);\n-      ggc_free (var->common.ann);\n-      var->common.ann = NULL;\n-    }\n-  VEC_free (tree, gc, referenced_vars_dup_list);\n-\n   htab_delete (referenced_vars);\n   referenced_vars = NULL;\n "}]}