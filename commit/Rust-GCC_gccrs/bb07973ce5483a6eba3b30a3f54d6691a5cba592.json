{"sha": "bb07973ce5483a6eba3b30a3f54d6691a5cba592", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIwNzk3M2NlNTQ4M2E2ZWJhM2IzMGEzZjU0ZDY2OTFhNWNiYTU5Mg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2005-04-26T07:16:48Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-04-26T07:16:48Z"}, "message": "AccessControlContext.java: Reformated.\n\n2005-04-26  Michael Koch  <konqueror@gmx.de>\n\n\t* java/security/AccessControlContext.java:\n\tReformated.\n\t(protectedDomains): Renamed from 'protectionDomain'.\n\t* java/security/AccessController.java:\n\tReformatted.\n\nFrom-SVN: r98766", "tree": {"sha": "dce94437c97686576b1d08ca140be54f3352aab1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dce94437c97686576b1d08ca140be54f3352aab1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb07973ce5483a6eba3b30a3f54d6691a5cba592", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb07973ce5483a6eba3b30a3f54d6691a5cba592", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb07973ce5483a6eba3b30a3f54d6691a5cba592", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb07973ce5483a6eba3b30a3f54d6691a5cba592/comments", "author": null, "committer": null, "parents": [{"sha": "6f3a3283f29f4c0286f485f3f21fd424884c527e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f3a3283f29f4c0286f485f3f21fd424884c527e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f3a3283f29f4c0286f485f3f21fd424884c527e"}], "stats": {"total": 52, "additions": 29, "deletions": 23}, "files": [{"sha": "e976ea91adfde6746ce6824e1e9cb5dd57d8b496", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb07973ce5483a6eba3b30a3f54d6691a5cba592/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb07973ce5483a6eba3b30a3f54d6691a5cba592/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=bb07973ce5483a6eba3b30a3f54d6691a5cba592", "patch": "@@ -1,3 +1,11 @@\n+2005-04-26  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/security/AccessControlContext.java:\n+\tReformated.\n+\t(protectedDomains): Renamed from 'protectionDomain'.\n+\t* java/security/AccessController.java:\n+\tReformatted.\n+\n 2005-04-26  Jeroen Frijters  <jeroen@frijters.net>\n \n \t* gnu/java/security/action/GetSecurityPropertyAction.java"}, {"sha": "0224a7aea976b7b4437053dab4d6f882f8c2e981", "filename": "libjava/java/security/AccessControlContext.java", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb07973ce5483a6eba3b30a3f54d6691a5cba592/libjava%2Fjava%2Fsecurity%2FAccessControlContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb07973ce5483a6eba3b30a3f54d6691a5cba592/libjava%2Fjava%2Fsecurity%2FAccessControlContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FAccessControlContext.java?ref=bb07973ce5483a6eba3b30a3f54d6691a5cba592", "patch": "@@ -53,7 +53,7 @@\n  */\n public final class AccessControlContext\n {\n-  private ProtectionDomain protectionDomain[];\n+  private ProtectionDomain[] protectionDomains;\n   private DomainCombiner combiner;\n \n   /**\n@@ -63,30 +63,30 @@\n    *\n    * @param context The ProtectionDomains to use\n    */\n-  public AccessControlContext(ProtectionDomain[]context)\n+  public AccessControlContext(ProtectionDomain[] context)\n   {\n     int i, j, k, count = context.length, count2 = 0;\n     for (i = 0, j = 0; i < count; i++)\n       {\n \tfor (k = 0; k < i; k++)\n-\t  if (context[k] == protectionDomain[i])\n+\t  if (context[k] == protectionDomains[i])\n \t    break;\n \tif (k != i)\t\t//it means previous loop did not complete\n \t  continue;\n \n \tcount2++;\n       }\n \n-    protectionDomain = new ProtectionDomain[count2];\n+    protectionDomains = new ProtectionDomain[count2];\n     for (i = 0, j = 0; i < count2; i++)\n       {\n \tfor (k = 0; k < i; k++)\n-\t  if (context[k] == protectionDomain[i])\n+\t  if (context[k] == protectionDomains[i])\n \t    break;\n \tif (k != i)\t\t//it means previous loop did not complete\n \t  continue;\n \n-\tprotectionDomain[j++] = context[i];\n+\tprotectionDomains[j++] = context[i];\n       }\n   }\n \n@@ -99,7 +99,7 @@ public AccessControlContext(ProtectionDomain[]context)\n   public AccessControlContext(AccessControlContext acc,\n \t\t\t      DomainCombiner combiner)\n   {\n-    this(acc.protectionDomain);\n+    this(acc.protectionDomains);\n     this.combiner = combiner;\n   }\n \n@@ -123,8 +123,8 @@ public DomainCombiner getDomainCombiner()\n    */\n   public void checkPermission(Permission perm) throws AccessControlException\n   {\n-    for (int i = 0; i < protectionDomain.length; i++)\n-      if (protectionDomain[i].implies(perm) == true)\n+    for (int i = 0; i < protectionDomains.length; i++)\n+      if (protectionDomains[i].implies(perm) == true)\n \treturn;\n \n     throw new AccessControlException(\"Permission not granted\");\n@@ -146,13 +146,13 @@ public boolean equals(Object obj)\n       {\n \tAccessControlContext acc = (AccessControlContext) obj;\n \n-\tif (acc.protectionDomain.length != protectionDomain.length)\n+\tif (acc.protectionDomains.length != protectionDomains.length)\n \t  return false;\n \n-\tfor (int i = 0; i < protectionDomain.length; i++)\n-\t  if (acc.protectionDomain[i] != protectionDomain[i])\n+\tfor (int i = 0; i < protectionDomains.length; i++)\n+\t  if (acc.protectionDomains[i] != protectionDomains[i])\n \t    return false;\n-\treturn true;\n+        return true;\n       }\n     return false;\n   }\n@@ -165,8 +165,8 @@ public boolean equals(Object obj)\n   public int hashCode()\n   {\n     int h = 0;\n-    for (int i = 0; i < protectionDomain.length; i++)\n-      h ^= protectionDomain[i].hashCode();\n+    for (int i = 0; i < protectionDomains.length; i++)\n+      h ^= protectionDomains[i].hashCode();\n \n     return h;\n   }"}, {"sha": "a268e18815a49114d8d8cf73bf49a01434e89a23", "filename": "libjava/java/security/AccessController.java", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb07973ce5483a6eba3b30a3f54d6691a5cba592/libjava%2Fjava%2Fsecurity%2FAccessController.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb07973ce5483a6eba3b30a3f54d6691a5cba592/libjava%2Fjava%2Fsecurity%2FAccessController.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FAccessController.java?ref=bb07973ce5483a6eba3b30a3f54d6691a5cba592", "patch": "@@ -113,7 +113,7 @@ public static Object doPrivileged(PrivilegedAction action)\n    * @return the result of the <code>action.run()</code> method.\n    */\n   public static Object doPrivileged(PrivilegedAction action,\n-\t\t\t\t    AccessControlContext context)\n+                                    AccessControlContext context)\n   {\n     return action.run();\n   }\n@@ -137,14 +137,13 @@ public static Object doPrivileged(PrivilegedAction action,\n   public static Object doPrivileged(PrivilegedExceptionAction action)\n     throws PrivilegedActionException\n   {\n-\n     try\n       {\n-\treturn action.run();\n+        return action.run();\n       }\n     catch (Exception e)\n       {\n-\tthrow new PrivilegedActionException(e);\n+        throw new PrivilegedActionException(e);\n       }\n   }\n \n@@ -167,17 +166,16 @@ public static Object doPrivileged(PrivilegedExceptionAction action)\n    * is thrown in the <code>run()</code> method.\n    */\n   public static Object doPrivileged(PrivilegedExceptionAction action,\n-\t\t\t\t    AccessControlContext context)\n+                                    AccessControlContext context)\n     throws PrivilegedActionException\n   {\n-\n     try\n       {\n-\treturn action.run();\n+        return action.run();\n       }\n     catch (Exception e)\n       {\n-\tthrow new PrivilegedActionException(e);\n+        throw new PrivilegedActionException(e);\n       }\n   }\n "}]}