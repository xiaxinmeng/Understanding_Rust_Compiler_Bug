{"sha": "7ae14d313336615d8dc5323902ec4f4278573a52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FlMTRkMzEzMzM2NjE1ZDhkYzUzMjM5MDJlYzRmNDI3ODU3M2E1Mg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-06-28T17:25:48Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-06-28T17:25:48Z"}, "message": "i386.md (addti3, [...]): Remove FLAGS_REG clobber from expander pattern.\n\n\t* config/i386/i386.md (addti3, adddi3, addsi3, addhi3, addqi3):\n\tRemove FLAGS_REG clobber from expander pattern.\n\t(subti3, subdi3, subsi3, subhi3, subqi3): Ditto.\n\t(anddi3, andsi3, andhi3, andqi3): Ditto.\n\t(iordi3, iorsi3, iorhi3, iorqi3): Ditto.\n\t(xordi3, xorsi3, xorhi3, xorqi3): Ditto.\n\t(negti2, negdi2, negsi2, neghi2, negqi2): Ditto.\n\t(ashlsi3, ashlhi3, ashlqi3): Ditto.\n\t(ashrsi3, ashrhi3, ashrqi3): Ditto.\n\t(lshrsi3, lshrhi3, lshrqi3): Ditto.\n\t(rotldi3, rotlsi3, rotlhi3, rotlqi3): Ditto.\n\t(rotrdi3, rotrsi3, rotrhi3, rotrqi3): Ditto.\n\nFrom-SVN: r137229", "tree": {"sha": "71355df4359dab733c92fb28aae3c3dc0a3bb923", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71355df4359dab733c92fb28aae3c3dc0a3bb923"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ae14d313336615d8dc5323902ec4f4278573a52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ae14d313336615d8dc5323902ec4f4278573a52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ae14d313336615d8dc5323902ec4f4278573a52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ae14d313336615d8dc5323902ec4f4278573a52/comments", "author": null, "committer": null, "parents": [{"sha": "d2595e54343ddee9c4fffac6351753aee5442019", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2595e54343ddee9c4fffac6351753aee5442019", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2595e54343ddee9c4fffac6351753aee5442019"}], "stats": {"total": 213, "additions": 90, "deletions": 123}, "files": [{"sha": "5ce26bca89c4b41a001e2a8221585c3dbdb0ca02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae14d313336615d8dc5323902ec4f4278573a52/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae14d313336615d8dc5323902ec4f4278573a52/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ae14d313336615d8dc5323902ec4f4278573a52", "patch": "@@ -1,3 +1,18 @@\n+2008-06-28 Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (addti3, adddi3, addsi3, addhi3, addqi3):\n+\tRemove FLAGS_REG clobber from expander pattern.\n+\t(subti3, subdi3, subsi3, subhi3, subqi3): Ditto.\n+\t(anddi3, andsi3, andhi3, andqi3): Ditto.\n+\t(iordi3, iorsi3, iorhi3, iorqi3): Ditto.\n+\t(xordi3, xorsi3, xorhi3, xorqi3): Ditto.\n+\t(negti2, negdi2, negsi2, neghi2, negqi2): Ditto.\n+\t(ashlsi3, ashlhi3, ashlqi3): Ditto.\n+\t(ashrsi3, ashrhi3, ashrqi3): Ditto.\n+\t(lshrsi3, lshrhi3, lshrqi3): Ditto.\n+\t(rotldi3, rotlsi3, rotlhi3, rotlqi3): Ditto.\n+\t(rotrdi3, rotrsi3, rotrhi3, rotrqi3): Ditto.\n+\n 2008-06-28  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-structalias.c (callused_id, var_callused,\n@@ -78,8 +93,8 @@\n \n 2008-06-27  Jakub Jelinek  <jakub@redhat.com>\n \n-\t* gimplify.c (omp_is_private): Don't return true if decl\n-\tis not already private on #pragma omp for or #pragma omp parallel for.\n+\t* gimplify.c (omp_is_private): Don't return true if decl is not\n+\talready private on #pragma omp for or #pragma omp parallel for.\n \n \tPR debug/36617\n \t* tree-cfg.c (struct move_stmt_d): Replace block field with\n@@ -152,8 +167,7 @@\n \t* config/mips/mips-protos.h (mips_split_const_insns): Declare.\n \t* config/mips/mips.c (mips_split_const_insns): New function.\n \t* config/mips/mips.md (move_type): New attribute.\n-\t(mode): Move attribute definition earlier in file.  Add \"TI\"\n-\tand \"TF\".\n+\t(mode): Move attribute definition earlier in file.  Add \"TI\" and \"TF\".\n \t(dword_mode): New attribute.\n \t(type): Avoid long line.  Map \"move_type\"s to \"type\"s,\n \tchoosing \"multi\" for doubleword moves if appropriate.\n@@ -228,16 +242,14 @@\n \t* config/arc/arc.c (arc_init): Likewise.\n \t* config/arm/arm.c (neon_builtin_compare,\n \tlocate_neon_builtin_icode): Likewise.\n-\t* config/arm/pe.c (arm_mark_dllexport, arm_pe_unique_section):\n-\tLikewise.\n+\t* config/arm/pe.c (arm_mark_dllexport, arm_pe_unique_section): Likewise.\n \t* config/bfin/bfin.c (bfin_init_machine_status,\n \tbfin_optimize_loop): Likewise.\n \t* config/bfin/bfin.h (TARGET_CPU_CPP_BUILTINS): Likewise.\n \t* config/cris/cris.c (cris_init_expanders): Likewise.\n \t* config/darwin-c.c (frameworks_in_use, add_framework): Likewise.\n \t* config/darwin.c (machopic_indirection_eq,\n-\tmachopic_indirection_name, machopic_output_indirection):\n-\tLikewise.\n+\tmachopic_indirection_name, machopic_output_indirection): Likewise.\n \t* config/frv/frv.c (frv_init_machine_status, frv_compare_insns,\n \tfrv_io_check_address, frv_io_handle_set, frv_io_handle_use_1,\n \tfrv_optimize_membar): Likewise.\n@@ -254,15 +266,14 @@\n \t* config/m68hc11/m68hc11.c (m68hc11_encode_label): Likewise.\n \t* config/m68k/m68k.c (m68k_handle_option,\n \tm68k_sched_md_init_global): Likewise.\n-\t* config/mcore/mcore.c (mcore_mark_dllexport,\n-\tmcore_mark_dllimport, mcore_unique_section): Likewise.\n+\t* config/mcore/mcore.c (mcore_mark_dllexport, mcore_mark_dllimport,\n+\tmcore_unique_section): Likewise.\n \t* config/mips/mips.c (mips_block_move_straight,\n-\tmips16_rewrite_pool_refs, mips_sim_wait_regs_2,\n-\tmips_sim_record_set): Likewise.\n+\tmips16_rewrite_pool_refs, mips_sim_wait_regs_2, mips_sim_record_set):\n+\tLikewise.\n \t* config/mmix/mmix.c (mmix_init_machine_status,\n \tmmix_encode_section_info): Likewise.\n-\t* config/pa/pa.c (pa_init_machine_status, hppa_encode_label):\n-\tLikewise.\n+\t* config/pa/pa.c (pa_init_machine_status, hppa_encode_label): Likewise.\n \t* config/rs6000/rs6000.c (rs6000_init_machine_status,\n \tprint_operand_address, output_toc, redefine_groups,\n \trs6000_elf_encode_section_info, machopic_output_stub): Likewise."}, {"sha": "6c3729a722fab99a7b07df7d2722f3649c8e0cde", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 65, "deletions": 109, "changes": 174, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ae14d313336615d8dc5323902ec4f4278573a52/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ae14d313336615d8dc5323902ec4f4278573a52/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=7ae14d313336615d8dc5323902ec4f4278573a52", "patch": "@@ -5462,8 +5462,7 @@\n (define_expand \"addti3\"\n   [(set (match_operand:TI 0 \"nonimmediate_operand\" \"\")\n \t(plus:TI (match_operand:TI 1 \"nonimmediate_operand\" \"\")\n-\t\t (match_operand:TI 2 \"x86_64_general_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t (match_operand:TI 2 \"x86_64_general_operand\" \"\")))]\n   \"TARGET_64BIT\"\n   \"ix86_expand_binary_operator (PLUS, TImode, operands); DONE;\")\n \n@@ -5499,8 +5498,7 @@\n (define_expand \"adddi3\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n \t(plus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"\")\n-\t\t (match_operand:DI 2 \"x86_64_general_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t (match_operand:DI 2 \"x86_64_general_operand\" \"\")))]\n   \"\"\n   \"ix86_expand_binary_operator (PLUS, DImode, operands); DONE;\")\n \n@@ -5676,10 +5674,9 @@\n    (set_attr \"mode\" \"QI\")])\n \n (define_expand \"addsi3\"\n-  [(parallel [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n-\t\t   (plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n-\t\t\t    (match_operand:SI 2 \"general_operand\" \"\")))\n-\t      (clobber (reg:CC FLAGS_REG))])]\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n+\t(plus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n+\t\t (match_operand:SI 2 \"general_operand\" \"\")))]\n   \"\"\n   \"ix86_expand_binary_operator (PLUS, SImode, operands); DONE;\")\n \n@@ -6563,10 +6560,9 @@\n    (set_attr \"mode\" \"SI\")])\n \n (define_expand \"addhi3\"\n-  [(parallel [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n-\t\t   (plus:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n-\t\t\t    (match_operand:HI 2 \"general_operand\" \"\")))\n-\t      (clobber (reg:CC FLAGS_REG))])]\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n+\t(plus:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n+\t\t (match_operand:HI 2 \"general_operand\" \"\")))]\n   \"TARGET_HIMODE_MATH\"\n   \"ix86_expand_binary_operator (PLUS, HImode, operands); DONE;\")\n \n@@ -6818,10 +6814,9 @@\n    (set_attr \"mode\" \"HI\")])\n \n (define_expand \"addqi3\"\n-  [(parallel [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n-\t\t   (plus:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n-\t\t\t    (match_operand:QI 2 \"general_operand\" \"\")))\n-\t      (clobber (reg:CC FLAGS_REG))])]\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n+\t(plus:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n+\t\t (match_operand:QI 2 \"general_operand\" \"\")))]\n   \"TARGET_QIMODE_MATH\"\n   \"ix86_expand_binary_operator (PLUS, QImode, operands); DONE;\")\n \n@@ -7233,10 +7228,9 @@\n ;; %%% splits for subditi3\n \n (define_expand \"subti3\"\n-  [(parallel [(set (match_operand:TI 0 \"nonimmediate_operand\" \"\")\n-\t\t   (minus:TI (match_operand:TI 1 \"nonimmediate_operand\" \"\")\n-\t\t\t     (match_operand:TI 2 \"x86_64_general_operand\" \"\")))\n-\t      (clobber (reg:CC FLAGS_REG))])]\n+  [(set (match_operand:TI 0 \"nonimmediate_operand\" \"\")\n+\t(minus:TI (match_operand:TI 1 \"nonimmediate_operand\" \"\")\n+\t\t  (match_operand:TI 2 \"x86_64_general_operand\" \"\")))]\n   \"TARGET_64BIT\"\n   \"ix86_expand_binary_operator (MINUS, TImode, operands); DONE;\")\n \n@@ -7266,10 +7260,9 @@\n ;; %%% splits for subsidi3\n \n (define_expand \"subdi3\"\n-  [(parallel [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n-\t\t   (minus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"\")\n-\t\t\t     (match_operand:DI 2 \"x86_64_general_operand\" \"\")))\n-\t      (clobber (reg:CC FLAGS_REG))])]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n+\t(minus:DI (match_operand:DI 1 \"nonimmediate_operand\" \"\")\n+\t\t  (match_operand:DI 2 \"x86_64_general_operand\" \"\")))]\n   \"\"\n   \"ix86_expand_binary_operator (MINUS, DImode, operands); DONE;\")\n \n@@ -7394,10 +7387,9 @@\n    (set_attr \"mode\" \"SI\")])\n \n (define_expand \"subsi3\"\n-  [(parallel [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n-\t\t   (minus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n-\t\t\t     (match_operand:SI 2 \"general_operand\" \"\")))\n-\t      (clobber (reg:CC FLAGS_REG))])]\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n+\t(minus:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n+\t\t  (match_operand:SI 2 \"general_operand\" \"\")))]\n   \"\"\n   \"ix86_expand_binary_operator (MINUS, SImode, operands); DONE;\")\n \n@@ -7479,10 +7471,9 @@\n    (set_attr \"mode\" \"DI\")])\n \n (define_expand \"subhi3\"\n-  [(parallel [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n-\t\t   (minus:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n-\t\t\t     (match_operand:HI 2 \"general_operand\" \"\")))\n-\t      (clobber (reg:CC FLAGS_REG))])]\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n+\t(minus:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n+\t\t  (match_operand:HI 2 \"general_operand\" \"\")))]\n   \"TARGET_HIMODE_MATH\"\n   \"ix86_expand_binary_operator (MINUS, HImode, operands); DONE;\")\n \n@@ -7523,10 +7514,9 @@\n    (set_attr \"mode\" \"HI\")])\n \n (define_expand \"subqi3\"\n-  [(parallel [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n-\t\t   (minus:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n-\t\t\t     (match_operand:QI 2 \"general_operand\" \"\")))\n-\t      (clobber (reg:CC FLAGS_REG))])]\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n+\t(minus:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n+\t\t  (match_operand:QI 2 \"general_operand\" \"\")))]\n   \"TARGET_QIMODE_MATH\"\n   \"ix86_expand_binary_operator (MINUS, QImode, operands); DONE;\")\n \n@@ -8849,8 +8839,7 @@\n (define_expand \"anddi3\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n \t(and:DI (match_operand:DI 1 \"nonimmediate_operand\" \"\")\n-\t\t(match_operand:DI 2 \"x86_64_szext_general_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t(match_operand:DI 2 \"x86_64_szext_general_operand\" \"\")))]\n   \"TARGET_64BIT\"\n   \"ix86_expand_binary_operator (AND, DImode, operands); DONE;\")\n \n@@ -8914,8 +8903,7 @@\n (define_expand \"andsi3\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n \t(and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n-\t\t(match_operand:SI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t(match_operand:SI 2 \"general_operand\" \"\")))]\n   \"\"\n   \"ix86_expand_binary_operator (AND, SImode, operands); DONE;\")\n \n@@ -9036,8 +9024,7 @@\n (define_expand \"andhi3\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n \t(and:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n-\t\t(match_operand:HI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t(match_operand:HI 2 \"general_operand\" \"\")))]\n   \"TARGET_HIMODE_MATH\"\n   \"ix86_expand_binary_operator (AND, HImode, operands); DONE;\")\n \n@@ -9081,8 +9068,7 @@\n (define_expand \"andqi3\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n \t(and:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n-\t\t(match_operand:QI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t(match_operand:QI 2 \"general_operand\" \"\")))]\n   \"TARGET_QIMODE_MATH\"\n   \"ix86_expand_binary_operator (AND, QImode, operands); DONE;\")\n \n@@ -9322,8 +9308,7 @@\n (define_expand \"iordi3\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n \t(ior:DI (match_operand:DI 1 \"nonimmediate_operand\" \"\")\n-\t\t(match_operand:DI 2 \"x86_64_general_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t(match_operand:DI 2 \"x86_64_general_operand\" \"\")))]\n   \"TARGET_64BIT\"\n   \"ix86_expand_binary_operator (IOR, DImode, operands); DONE;\")\n \n@@ -9369,8 +9354,7 @@\n (define_expand \"iorsi3\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n \t(ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n-\t\t(match_operand:SI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t(match_operand:SI 2 \"general_operand\" \"\")))]\n   \"\"\n   \"ix86_expand_binary_operator (IOR, SImode, operands); DONE;\")\n \n@@ -9462,8 +9446,7 @@\n (define_expand \"iorhi3\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n \t(ior:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n-\t\t(match_operand:HI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t(match_operand:HI 2 \"general_operand\" \"\")))]\n   \"TARGET_HIMODE_MATH\"\n   \"ix86_expand_binary_operator (IOR, HImode, operands); DONE;\")\n \n@@ -9505,8 +9488,7 @@\n (define_expand \"iorqi3\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n \t(ior:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n-\t\t(match_operand:QI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t(match_operand:QI 2 \"general_operand\" \"\")))]\n   \"TARGET_QIMODE_MATH\"\n   \"ix86_expand_binary_operator (IOR, QImode, operands); DONE;\")\n \n@@ -9695,8 +9677,7 @@\n (define_expand \"xordi3\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n \t(xor:DI (match_operand:DI 1 \"nonimmediate_operand\" \"\")\n-\t\t(match_operand:DI 2 \"x86_64_general_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t(match_operand:DI 2 \"x86_64_general_operand\" \"\")))]\n   \"TARGET_64BIT\"\n   \"ix86_expand_binary_operator (XOR, DImode, operands); DONE;\")\n \n@@ -9741,8 +9722,7 @@\n (define_expand \"xorsi3\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n \t(xor:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n-\t\t(match_operand:SI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t(match_operand:SI 2 \"general_operand\" \"\")))]\n   \"\"\n   \"ix86_expand_binary_operator (XOR, SImode, operands); DONE;\")\n \n@@ -9835,8 +9815,7 @@\n (define_expand \"xorhi3\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n \t(xor:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n-\t\t(match_operand:HI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t(match_operand:HI 2 \"general_operand\" \"\")))]\n   \"TARGET_HIMODE_MATH\"\n   \"ix86_expand_binary_operator (XOR, HImode, operands); DONE;\")\n \n@@ -9878,8 +9857,7 @@\n (define_expand \"xorqi3\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n \t(xor:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n-\t\t(match_operand:QI 2 \"general_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t(match_operand:QI 2 \"general_operand\" \"\")))]\n   \"TARGET_QIMODE_MATH\"\n   \"ix86_expand_binary_operator (XOR, QImode, operands); DONE;\")\n \n@@ -10127,9 +10105,8 @@\n ;; Negation instructions\n \n (define_expand \"negti2\"\n-  [(parallel [(set (match_operand:TI 0 \"nonimmediate_operand\" \"\")\n-\t\t   (neg:TI (match_operand:TI 1 \"nonimmediate_operand\" \"\")))\n-\t      (clobber (reg:CC FLAGS_REG))])]\n+  [(set (match_operand:TI 0 \"nonimmediate_operand\" \"\")\n+\t(neg:TI (match_operand:TI 1 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_64BIT\"\n   \"ix86_expand_unary_operator (NEG, TImode, operands); DONE;\")\n \n@@ -10163,9 +10140,8 @@\n   \"split_ti (&operands[0], 2, &operands[0], &operands[2]);\")\n \n (define_expand \"negdi2\"\n-  [(parallel [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n-\t\t   (neg:DI (match_operand:DI 1 \"nonimmediate_operand\" \"\")))\n-\t      (clobber (reg:CC FLAGS_REG))])]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n+\t(neg:DI (match_operand:DI 1 \"nonimmediate_operand\" \"\")))]\n   \"\"\n   \"ix86_expand_unary_operator (NEG, DImode, operands); DONE;\")\n \n@@ -10224,9 +10200,8 @@\n \n \n (define_expand \"negsi2\"\n-  [(parallel [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n-\t\t   (neg:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")))\n-\t      (clobber (reg:CC FLAGS_REG))])]\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n+\t(neg:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")))]\n   \"\"\n   \"ix86_expand_unary_operator (NEG, SImode, operands); DONE;\")\n \n@@ -10284,9 +10259,8 @@\n    (set_attr \"mode\" \"SI\")])\n \n (define_expand \"neghi2\"\n-  [(parallel [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n-\t\t   (neg:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")))\n-\t      (clobber (reg:CC FLAGS_REG))])]\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n+\t(neg:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_HIMODE_MATH\"\n   \"ix86_expand_unary_operator (NEG, HImode, operands); DONE;\")\n \n@@ -10311,9 +10285,8 @@\n    (set_attr \"mode\" \"HI\")])\n \n (define_expand \"negqi2\"\n-  [(parallel [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n-\t\t   (neg:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")))\n-\t      (clobber (reg:CC FLAGS_REG))])]\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n+\t(neg:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_QIMODE_MATH\"\n   \"ix86_expand_unary_operator (NEG, QImode, operands); DONE;\")\n \n@@ -11179,8 +11152,7 @@\n (define_expand \"ashlsi3\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n \t(ashift:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n-\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n   \"ix86_expand_binary_operator (ASHIFT, SImode, operands); DONE;\")\n \n@@ -11454,8 +11426,7 @@\n (define_expand \"ashlhi3\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n \t(ashift:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n-\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"TARGET_HIMODE_MATH\"\n   \"ix86_expand_binary_operator (ASHIFT, HImode, operands); DONE;\")\n \n@@ -11620,8 +11591,7 @@\n (define_expand \"ashlqi3\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n \t(ashift:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n-\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"TARGET_QIMODE_MATH\"\n   \"ix86_expand_binary_operator (ASHIFT, QImode, operands); DONE;\")\n \n@@ -12108,8 +12078,7 @@\n (define_expand \"ashrsi3\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n \t(ashiftrt:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n-\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n   \"ix86_expand_binary_operator (ASHIFTRT, SImode, operands); DONE;\")\n \n@@ -12265,8 +12234,7 @@\n (define_expand \"ashrhi3\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n \t(ashiftrt:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n-\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"TARGET_HIMODE_MATH\"\n   \"ix86_expand_binary_operator (ASHIFTRT, HImode, operands); DONE;\")\n \n@@ -12366,8 +12334,7 @@\n (define_expand \"ashrqi3\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n \t(ashiftrt:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n-\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"TARGET_QIMODE_MATH\"\n   \"ix86_expand_binary_operator (ASHIFTRT, QImode, operands); DONE;\")\n \n@@ -12691,8 +12658,7 @@\n (define_expand \"lshrsi3\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n \t(lshiftrt:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n-\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n   \"ix86_expand_binary_operator (LSHIFTRT, SImode, operands); DONE;\")\n \n@@ -12849,8 +12815,7 @@\n (define_expand \"lshrhi3\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n \t(lshiftrt:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n-\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"TARGET_HIMODE_MATH\"\n   \"ix86_expand_binary_operator (LSHIFTRT, HImode, operands); DONE;\")\n \n@@ -12950,8 +12915,7 @@\n (define_expand \"lshrqi3\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n \t(lshiftrt:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n-\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"TARGET_QIMODE_MATH\"\n   \"ix86_expand_binary_operator (LSHIFTRT, QImode, operands); DONE;\")\n \n@@ -13080,8 +13044,7 @@\n (define_expand \"rotldi3\"\n   [(set (match_operand:DI 0 \"shiftdi_operand\" \"\")\n \t(rotate:DI (match_operand:DI 1 \"shiftdi_operand\" \"\")\n-\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n  \"\"\n {\n   if (TARGET_64BIT)\n@@ -13151,8 +13114,7 @@\n (define_expand \"rotlsi3\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n \t(rotate:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n-\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n   \"ix86_expand_binary_operator (ROTATE, SImode, operands); DONE;\")\n \n@@ -13211,8 +13173,7 @@\n (define_expand \"rotlhi3\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n \t(rotate:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n-\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"TARGET_HIMODE_MATH\"\n   \"ix86_expand_binary_operator (ROTATE, HImode, operands); DONE;\")\n \n@@ -13255,8 +13216,7 @@\n (define_expand \"rotlqi3\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n \t(rotate:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n-\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"TARGET_QIMODE_MATH\"\n   \"ix86_expand_binary_operator (ROTATE, QImode, operands); DONE;\")\n \n@@ -13316,8 +13276,7 @@\n (define_expand \"rotrdi3\"\n   [(set (match_operand:DI 0 \"shiftdi_operand\" \"\")\n \t(rotate:DI (match_operand:DI 1 \"shiftdi_operand\" \"\")\n-\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n  \"\"\n {\n   if (TARGET_64BIT)\n@@ -13387,8 +13346,7 @@\n (define_expand \"rotrsi3\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n \t(rotatert:SI (match_operand:SI 1 \"nonimmediate_operand\" \"\")\n-\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n   \"ix86_expand_binary_operator (ROTATERT, SImode, operands); DONE;\")\n \n@@ -13450,8 +13408,7 @@\n (define_expand \"rotrhi3\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n \t(rotatert:HI (match_operand:HI 1 \"nonimmediate_operand\" \"\")\n-\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"TARGET_HIMODE_MATH\"\n   \"ix86_expand_binary_operator (ROTATERT, HImode, operands); DONE;\")\n \n@@ -13494,8 +13451,7 @@\n (define_expand \"rotrqi3\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n \t(rotatert:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n-\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n-   (clobber (reg:CC FLAGS_REG))]\n+\t\t     (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"TARGET_QIMODE_MATH\"\n   \"ix86_expand_binary_operator (ROTATERT, QImode, operands); DONE;\")\n "}]}