{"sha": "143490432941699e07a38d49a04179dd696b524c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQzNDkwNDMyOTQxNjk5ZTA3YTM4ZDQ5YTA0MTc5ZGQ2OTZiNTI0Yw==", "commit": {"author": {"name": "SimplyTheOther", "email": "simplytheother@gmail.com", "date": "2020-07-08T13:49:19Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T21:13:18Z"}, "message": "Added OpenRISC target hook (or at least provisional one)", "tree": {"sha": "90f38f5aed0b5800e62d971aeab69369fc0079b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90f38f5aed0b5800e62d971aeab69369fc0079b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/143490432941699e07a38d49a04179dd696b524c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/143490432941699e07a38d49a04179dd696b524c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/143490432941699e07a38d49a04179dd696b524c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/143490432941699e07a38d49a04179dd696b524c/comments", "author": {"login": "SimplyTheOther", "id": 19371469, "node_id": "MDQ6VXNlcjE5MzcxNDY5", "avatar_url": "https://avatars.githubusercontent.com/u/19371469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimplyTheOther", "html_url": "https://github.com/SimplyTheOther", "followers_url": "https://api.github.com/users/SimplyTheOther/followers", "following_url": "https://api.github.com/users/SimplyTheOther/following{/other_user}", "gists_url": "https://api.github.com/users/SimplyTheOther/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimplyTheOther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimplyTheOther/subscriptions", "organizations_url": "https://api.github.com/users/SimplyTheOther/orgs", "repos_url": "https://api.github.com/users/SimplyTheOther/repos", "events_url": "https://api.github.com/users/SimplyTheOther/events{/privacy}", "received_events_url": "https://api.github.com/users/SimplyTheOther/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76376bd72660f3b6471c93affcd00057a6014551", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76376bd72660f3b6471c93affcd00057a6014551", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76376bd72660f3b6471c93affcd00057a6014551"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "680ab0544b6ba94c48d3a8745c38a30f9ae34343", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143490432941699e07a38d49a04179dd696b524c/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143490432941699e07a38d49a04179dd696b524c/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=143490432941699e07a38d49a04179dd696b524c", "patch": "@@ -530,6 +530,7 @@ nvptx-*-*)\n \t;;\n or1k*-*-*)\n \tcpu_type=or1k\n+\trust_target_objs=\"or1k-rust.o\"\n \t;;\n powerpc*-*-*)\n \tcpu_type=rs6000"}, {"sha": "5358930f7261627223915aeb0305d368933c926b", "filename": "gcc/config/or1k/or1k-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143490432941699e07a38d49a04179dd696b524c/gcc%2Fconfig%2For1k%2For1k-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143490432941699e07a38d49a04179dd696b524c/gcc%2Fconfig%2For1k%2For1k-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2For1k%2For1k-protos.h?ref=143490432941699e07a38d49a04179dd696b524c", "patch": "@@ -28,6 +28,9 @@ extern void or1k_expand_move (machine_mode, rtx, rtx);\n extern void or1k_expand_compare (rtx *);\n extern void or1k_expand_call (rtx, rtx, rtx, bool);\n \n+/* Routines implemented in or1k-rust.c  */\n+extern void or1k_rust_target_cpu_info (void);\n+\n #ifdef RTX_CODE\n void or1k_expand_atomic_compare_and_swap (rtx operands[]);\n void or1k_expand_atomic_compare_and_swap_qihi (rtx operands[]);"}, {"sha": "f6472acf403c201f01bc07a3218e94cba78d30ce", "filename": "gcc/config/or1k/or1k-rust.c", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143490432941699e07a38d49a04179dd696b524c/gcc%2Fconfig%2For1k%2For1k-rust.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143490432941699e07a38d49a04179dd696b524c/gcc%2Fconfig%2For1k%2For1k-rust.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2For1k%2For1k-rust.c?ref=143490432941699e07a38d49a04179dd696b524c", "patch": "@@ -0,0 +1,58 @@\n+/* Subroutines for the Rust front end for the OpenRISC architecture.\n+   Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"tm_p.h\"\n+#include \"rust/rust-target.h\"\n+#include \"rust/rust-target-def.h\"\n+\n+/* Implement TARGET_RUST_CPU_INFO for OpenRISC targets.  */\n+\n+void or1k_rust_target_cpu_info(void) {\n+    rust_add_target_info(\"target_arch\", \"or1k\");\n+\n+    // names derived from llvm fork\n+    if (!(TARGET_SOFT_MUL)) \n+        rust_add_target_info(\"target_feature\", \"mul\");\n+    if (!(TARGET_SOFT_DIV))\n+        rust_add_target_info(\"target_feature\", \"div\");\n+    if (TARGET_ROR) \n+        rust_add_target_info(\"target_feature\", \"ror\");\n+    if (TARGET_CMOV)\n+        rust_add_target_info(\"target_feature\", \"cmov\");\n+    /* TODO: add options for addc (add with carry), ffl1 (find first/last one), interrupts (use \n+     * l.lwa/l.swa for atomic RMW ops) if can find gcc equivalents.  */\n+    if (TARGET_SEXT)\n+        rust_add_target_info(\"target_feature\", \"ext\");\n+\n+    // below are options not in llvm but derived from gcc, as they seemed potentially useful\n+    if (TARGET_HARD_FLOAT)\n+        rust_add_target_info(\"target_feature\", \"hard-float\");\n+    if (TARGET_DOUBLE_FLOAT)\n+        rust_add_target_info(\"target_feature\", \"double-float\");\n+    if (TARGET_FP_UNORDERED)\n+        rust_add_target_info(\"target_feature\", \"unordered-float\");\n+    if (TARGET_RORI) \n+        rust_add_target_info(\"target_feature\", \"rori\");\n+    if (TARGET_SFIMM)\n+        rust_add_target_info(\"target_feature\", \"sfimm\");\n+    if (TARGET_SHFTIMM) \n+        rust_add_target_info(\"target_feature\", \"shftimm\");\n+}"}, {"sha": "9ce84f5f96bda74ee7d1057b41e4ed5229195c16", "filename": "gcc/config/or1k/or1k.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143490432941699e07a38d49a04179dd696b524c/gcc%2Fconfig%2For1k%2For1k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143490432941699e07a38d49a04179dd696b524c/gcc%2Fconfig%2For1k%2For1k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2For1k%2For1k.h?ref=143490432941699e07a38d49a04179dd696b524c", "patch": "@@ -35,6 +35,8 @@\n     }\t\t\t\t\t\t\\\n   while (0)\n \n+#define TARGET_RUST_CPU_INFO or1k_rust_target_cpu_info\n+\n /* Storage layout.  */\n \n #define DEFAULT_SIGNED_CHAR 1"}, {"sha": "240302690fd83e6d89a5b6865af74e0eb1419bfd", "filename": "gcc/config/or1k/t-or1k", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143490432941699e07a38d49a04179dd696b524c/gcc%2Fconfig%2For1k%2Ft-or1k", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143490432941699e07a38d49a04179dd696b524c/gcc%2Fconfig%2For1k%2Ft-or1k", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2For1k%2Ft-or1k?ref=143490432941699e07a38d49a04179dd696b524c", "patch": "@@ -20,3 +20,7 @@\n \n comma=,\n MULTILIB_OPTIONS = $(subst $(comma), ,$(TM_MULTILIB_CONFIG))\n+\n+or1k-rust.o: $(srcdir)/config/or1k/or1k-rust.c \\\n+  $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}]}