{"sha": "573dbd5175dbf16a3b4551ec55800febf0d1b617", "node_id": "C_kwDOANBUbNoAKDU3M2RiZDUxNzVkYmYxNmEzYjQ1NTFlYzU1ODAwZmViZjBkMWI2MTc", "commit": {"author": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-03-22T01:45:58Z"}, "committer": {"name": "Gaius Mulley", "email": "gaiusmod2@gmail.com", "date": "2023-03-22T01:45:58Z"}, "message": "PR modula2/107630 Remove M2LINK and remove some cross linking\n\nRemove M2LINK.def.  Pass the user forced module initialization string as\na parameter to M2RTS.ConstructModules.  This patch allows\n-fm2-whole-program to link successfully using dynamic libraries.\n\ngcc/m2/ChangeLog:\n\n\tPR modula2/107630\n\t* Make-lang.in (m2/stage2/cc1gm2$(exeext)): Remove\n\tm2/gm2-libs-boot/M2LINK.o.\n\t(m2/stage1/cc1gm2$(exeext)): Ditto.\n\t(GM2-LIBS-BOOT-DEFS): Remove M2LINK.def.\n\t(GM2-LIBS-DEFS): Ditto.\n\t(m2/mc-boot/$(SRC_PREFIX)%.o): Replace CXX_FLAGS with CXXFLAGS.\n\t(m2/mc-boot-ch/$(SRC_PREFIX)%.o): Ditto.\n\t(m2/mc-boot/main.o): Ditto.\n\t(mcflex.o): Add $(CFLAGS).\n\t(m2/gm2-libs-boot/M2LINK.o): Remove rule.\n\t* gm2-compiler/M2GCCDeclare.def (DeclareM2linkGlobals): Remove.\n\t* gm2-compiler/M2GCCDeclare.mod: (M2LinkEntry): Remove.\n\t(M2LinkIndex): Remove.\n\t(DoVariableDeclaration): Remove initial and call to\n\tAddEntryM2Link.\n\t(AddEntryM2Link): Remove.\n\t(GetEntryM2Link): Remove.\n\t(DeclareM2linkGlobals): Remove.\n\t(DetectM2LinkInitial): Remove.\n\t(InitM2LinkModule): Remove.\n\t* gm2-compiler/M2GenGCC.mod (CodeFinallyEnd): Remove call to\n\tDeclareM2linkGlobals.\n\t* gm2-compiler/M2Quads.mod (BuildM2InitFunction): Add extra\n\tparameter containing runtime module override to ConstructModules.\n\t* gm2-compiler/M2Scaffold.mod: Update comment describing\n\tConstructModules.\n\t* gm2-gcc/m2decl.cc (m2decl_DeclareM2linkForcedModuleInitOrder):\n\tRemove.\n\t* gm2-libs-iso/M2RTS.def (ConstructModules): Add overrideliborder\n\tparameter.\n\t* gm2-libs-iso/M2RTS.mod: Add overrideliborder parameter.\n\t* gm2-libs/M2Dependent.def (ConstructModules): Add overrideliborder\n\tparameter.\n\t* gm2-libs/M2Dependent.mod (ConstructModules): Add overrideliborder\n\tparameter.\n\t* gm2-libs/M2RTS.def (ConstructModules): Add overrideliborder parameter.\n\t* gm2-libs/M2RTS.mod (ConstructModules): Add overrideliborder\n\tparameter.\n\t* gm2-libs/M2LINK.def: Removed.\n\nlibgm2/ChangeLog:\n\n\t* libm2pim/Makefile.am (M2DEFS): Remove M2LINK.def.\n\t* libm2pim/Makefile.in: Rebuild.\n\nSigned-off-by: Gaius Mulley <gaiusmod2@gmail.com>", "tree": {"sha": "d7358f15c164995df2f4398918975320fab56588", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7358f15c164995df2f4398918975320fab56588"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/573dbd5175dbf16a3b4551ec55800febf0d1b617", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/573dbd5175dbf16a3b4551ec55800febf0d1b617", "html_url": "https://github.com/Rust-GCC/gccrs/commit/573dbd5175dbf16a3b4551ec55800febf0d1b617", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/573dbd5175dbf16a3b4551ec55800febf0d1b617/comments", "author": null, "committer": null, "parents": [{"sha": "031785270ab84d7291b200d8e3e345cd36239ad5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/031785270ab84d7291b200d8e3e345cd36239ad5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/031785270ab84d7291b200d8e3e345cd36239ad5"}], "stats": {"total": 318, "additions": 73, "deletions": 245}, "files": [{"sha": "3fc691b685e85b59309c8d756f30f08567618c9a", "filename": "gcc/m2/Make-lang.in", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FMake-lang.in?ref=573dbd5175dbf16a3b4551ec55800febf0d1b617", "patch": "@@ -516,28 +516,27 @@ cc1gm2$(exeext): m2/stage1/cc1gm2$(exeext) $(m2.prev)\n \n m2/stage2/cc1gm2$(exeext): m2/stage1/cc1gm2$(exeext) m2/gm2-compiler/m2flex.o $(P) \\\n                             $(GM2_C_OBJS) $(BACKEND) $(LIBDEPS) $(GM2_LIBS) \\\n-                            m2/gm2-gcc/rtegraph.o plugin/m2rte$(soext) m2/gm2-libs-boot/M2LINK.o\n+                            m2/gm2-gcc/rtegraph.o plugin/m2rte$(soext)\n \t-test -d $(@D) || $(mkinstalldirs) $(@D)\n \t@$(call LINK_PROGRESS,$(INDEX.m2),start)\n \t+$(LLINKER) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(GM2_C_OBJS) m2/gm2-compiler/m2flex.o \\\n                             attribs.o \\\n                               $(GM2_LIBS) \\\n-                              $(BACKEND) $(LIBS) m2/gm2-gcc/rtegraph.o m2/gm2-libs-boot/M2LINK.o \\\n+                              $(BACKEND) $(LIBS) m2/gm2-gcc/rtegraph.o \\\n                               $(BACKENDLIBS) $(LIBSTDCXX) -lm\n \t@$(call LINK_PROGRESS,$(INDEX.m2),end)\n \n m2/stage1/cc1gm2$(exeext): gm2$(exeext) m2/gm2-compiler-boot/m2flex.o \\\n                             $(P) $(GM2_C_OBJS) $(BACKEND) $(LIBDEPS) \\\n                             $(GM2_LIBS_BOOT) $(MC_LIBS) \\\n                             m2/gm2-gcc/rtegraph.o plugin/m2rte$(soext) \\\n-                            m2/gm2-libs-boot/M2LINK.o \\\n                             $(m2.prev)\n \t-test -d $(@D) || $(mkinstalldirs) $(@D)\n \t@$(call LINK_PROGRESS,$(INDEX.m2),start)\n \t+$(LLINKER) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(GM2_C_OBJS) m2/gm2-compiler-boot/m2flex.o \\\n                             attribs.o \\\n                              $(GM2_LIBS_BOOT) $(MC_LIBS) \\\n-                             m2/gm2-gcc/rtegraph.o m2/gm2-libs-boot/M2LINK.o \\\n+                             m2/gm2-gcc/rtegraph.o \\\n                              $(BACKEND) $(LIBS) $(BACKENDLIBS)\n \t@$(call LINK_PROGRESS,$(INDEX.m2),end)\n \n@@ -613,7 +612,6 @@ GM2-LIBS-BOOT-DEFS = \\\n    Indexing.def \\\n    M2Dependent.def \\\n    M2EXCEPTION.def \\\n-   M2LINK.def \\\n    M2RTS.def \\\n    NumberIO.def \\\n    PushBackInput.def \\\n@@ -878,7 +876,6 @@ GM2-LIBS-DEFS = \\\n    LegacyReal.def \\\n    M2Dependent.def \\\n    M2EXCEPTION.def \\\n-   M2LINK.def \\\n    M2RTS.def \\\n    MathLib0.def \\\n    MemUtils.def \\\n@@ -1352,23 +1349,23 @@ m2/boot-bin/mc$(exeext): $(BUILD-MC-BOOT-O) $(BUILD-MC-INTERFACE-O) \\\n \n m2/mc-boot/$(SRC_PREFIX)%.o: m2/mc-boot/$(SRC_PREFIX)%.cc m2/gm2-libs/gm2-libs-host.h\n \t-test -d $(@D) || $(mkinstalldirs) $(@D)\n-\t$(CXX) $(CXX_FLAGS) -g -c -I. -I$(srcdir)/m2/mc-boot-ch -I$(srcdir)/m2/mc-boot -I$(srcdir)/../include -I$(srcdir) $(INCLUDES) $< -o $@\n+\t$(CXX) $(CXXFLAGS) -g -c -I. -I$(srcdir)/m2/mc-boot-ch -I$(srcdir)/m2/mc-boot -I$(srcdir)/../include -I$(srcdir) $(INCLUDES) $< -o $@\n \n m2/mc-boot-ch/$(SRC_PREFIX)%.o: m2/mc-boot-ch/$(SRC_PREFIX)%.c m2/gm2-libs/gm2-libs-host.h\n \t-test -d $(@D) || $(mkinstalldirs) $(@D)\n-\t$(CXX) $(CXX_FLAGS) -DHAVE_CONFIG_H -g -c -I. -Im2/gm2-libs -I$(srcdir)/../include -I$(srcdir) $(INCLUDES) -Im2/gm2-libs $< -o $@\n+\t$(CXX) $(CXXFLAGS) -DHAVE_CONFIG_H -g -c -I. -Im2/gm2-libs -I$(srcdir)/../include -I$(srcdir) $(INCLUDES) -Im2/gm2-libs $< -o $@\n \n m2/mc-boot-ch/$(SRC_PREFIX)%.o: m2/mc-boot-ch/$(SRC_PREFIX)%.cc m2/gm2-libs/gm2-libs-host.h\n \t-test -d $(@D) || $(mkinstalldirs) $(@D)\n-\t$(CXX) $(CXX_FLAGS) -DHAVE_CONFIG_H -g -c -I. -Im2/gm2-libs -I$(srcdir)/../include -I$(srcdir) $(INCLUDES) -Im2/gm2-libs $< -o $@\n+\t$(CXX) $(CXXFLAGS) -DHAVE_CONFIG_H -g -c -I. -Im2/gm2-libs -I$(srcdir)/../include -I$(srcdir) $(INCLUDES) -Im2/gm2-libs $< -o $@\n \n m2/mc-boot/main.o: $(M2LINK) $(srcdir)/m2/init/mcinit\n \t-test -d $(@D) || $(mkinstalldirs) $(@D)\n \tunset CC ; $(M2LINK) -s --langc++ --exit --name m2/mc-boot/main.cc $(srcdir)/m2/init/mcinit\n-\t$(CXX) $(CXX_FLAGS) -g -c -I. -I$(srcdir)/../include -I$(srcdir) $(INCLUDES) m2/mc-boot/main.cc -o $@\n+\t$(CXX) $(CXXFLAGS) -g -c -I. -I$(srcdir)/../include -I$(srcdir) $(INCLUDES) m2/mc-boot/main.cc -o $@\n \n mcflex.o: mcflex.c m2/gm2-libs/gm2-libs-host.h\n-\t$(CC) -I$(srcdir)/m2/mc -g -c $< -o $@   # remember that mcReserved.h is copied into m2/mc\n+\t$(CC) $(CFLAGS) -I$(srcdir)/m2/mc -g -c $< -o $@   # remember that mcReserved.h is copied into m2/mc\n \n mcflex.c: $(srcdir)/m2/mc/mc.flex\n \tflex -t $< > $@\n@@ -1404,10 +1401,6 @@ m2/gm2-libs-boot/wrapc.o: $(srcdir)/m2/gm2-libs-ch/wrapc.c m2/gm2-libs-boot/$(SR\n \t-test -d $(@D) || $(mkinstalldirs) $(@D)\n \t$(CXX) -c -DHAVE_CONFIG_H $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot -Im2/gm2-libs $(INCLUDES) $< -o $@\n \n-m2/gm2-libs-boot/M2LINK.o: $(srcdir)/m2/gm2-libs-ch/M2LINK.c m2/gm2-libs-boot/$(SRC_PREFIX)M2LINK.h m2/gm2-libs/gm2-libs-host.h\n-\t-test -d $(@D) || $(mkinstalldirs) $(@D)\n-\t$(CXX) -c -DHAVE_CONFIG_H $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot -Im2/gm2-libs $(INCLUDES) $< -o $@\n-\n m2/gm2-libs-boot/UnixArgs.o: $(srcdir)/m2/gm2-libs-ch/UnixArgs.cc m2/gm2-libs-boot/$(SRC_PREFIX)UnixArgs.h m2/gm2-libs/gm2-libs-host.h\n \t-test -d $(@D) || $(mkinstalldirs) $(@D)\n \t$(CXX) -c -DIN_GCC $(CFLAGS) -Im2/gm2-libs -I$(srcdir)/m2 -Im2 -I. -Im2/gm2-libs-boot $(INCLUDES) $< -o $@"}, {"sha": "38ca33f1486a44f9b43d53a1a736e7a98c2c2f25", "filename": "gcc/m2/gm2-compiler/M2GCCDeclare.def", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-compiler%2FM2GCCDeclare.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-compiler%2FM2GCCDeclare.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2GCCDeclare.def?ref=573dbd5175dbf16a3b4551ec55800febf0d1b617", "patch": "@@ -26,7 +26,6 @@ DEFINITION MODULE M2GCCDeclare ;\n     Author     : Gaius Mulley\n     System     : UNIX (gm2)\n     Date       : Sat Jul 17 10:28:43 1999\n-    Last edit  : Sat Jul 17 10:28:43 1999\n     Description: declares Modula-2 types to GCC,\n                  only declares a type once all subcomponents are known.\n *)\n@@ -40,7 +39,6 @@ EXPORT QUALIFIED FoldConstants,\n                  InitDeclarations, StartDeclareScope, EndDeclareScope,\n                  DeclareModuleVariables, IsProcedureGccNested,\n                  DeclareProcedure, PoisonSymbols, DeclareParameters,\n-                 DeclareM2linkGlobals,\n                  CompletelyResolved, MarkExported, PrintSym,\n                  ConstantKnownAndUsed,\n                  PutToBeSolvedByQuads,\n@@ -145,15 +143,6 @@ PROCEDURE DeclareProcedure (sym: WORD) ;\n PROCEDURE DeclareModuleVariables (sym: CARDINAL) ;\n \n \n-(*\n-   DeclareM2linkGlobals - will create M2LINK.StaticInitialization\n-                          and M2LINK.ForcedModuleInitOrder providing\n-                          they have not already been created.\n-*)\n-\n-PROCEDURE DeclareM2linkGlobals (tokenno: CARDINAL) ;\n-\n-\n (*\n    IsProcedureGccNested - returns TRUE if procedure, sym, will be considered\n                           as nested by GCC."}, {"sha": "3b1fc18dabe43e6dc30b4f5bcbf4018deef372ed", "filename": "gcc/m2/gm2-compiler/M2GCCDeclare.mod", "status": "modified", "additions": 8, "deletions": 127, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-compiler%2FM2GCCDeclare.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-compiler%2FM2GCCDeclare.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2GCCDeclare.mod?ref=573dbd5175dbf16a3b4551ec55800febf0d1b617", "patch": "@@ -154,9 +154,9 @@ FROM m2linemap IMPORT location_t, BuiltinsLocation ;\n FROM m2decl IMPORT BuildIntegerConstant, BuildStringConstant, BuildCStringConstant,\n                    BuildStartFunctionDeclaration,\n                    BuildParameterDeclaration, BuildEndFunctionDeclaration,\n-                   DeclareKnownVariable, GetBitsPerBitset, BuildPtrToTypeString,\n-                   DeclareM2linkStaticInitialization,\n-                   DeclareM2linkForcedModuleInitOrder ;\n+                   DeclareKnownVariable, GetBitsPerBitset, BuildPtrToTypeString ;\n+(*                   DeclareM2linkStaticInitialization,\n+                   DeclareM2linkForcedModuleInitOrder ; *)\n \n FROM m2type IMPORT MarkFunctionReferenced, BuildStartRecord, BuildStartVarient, BuildStartFunctionType,\n                    BuildStartFieldVarient, BuildStartVarient, BuildStartType, BuildStartArrayType,\n@@ -205,14 +205,6 @@ CONST\n    Progress  = FALSE ;\n    EnableSSA = FALSE ;\n \n-TYPE\n-   M2LinkEntry = POINTER TO RECORD\n-                               var    : CARDINAL ;\n-                               gcc    : Tree ;\n-                               varname,\n-                               modname: Name ;\n-                            END ;\n-\n VAR\n    ToBeSolvedByQuads,               (* constants which must be solved *)\n                                     (* by processing the quadruples.  *)\n@@ -240,7 +232,6 @@ VAR\n    EnumerationIndex    : Index ;\n    action              : IsAction ;\n    enumDeps            : BOOLEAN ;\n-   M2LinkIndex         : Index ;    (* Array of M2LinkEntry.          *)\n \n \n PROCEDURE mystop ; BEGIN END mystop ;\n@@ -3170,9 +3161,9 @@ PROCEDURE DoVariableDeclaration (var, module: CARDINAL; name: ADDRESS;\n                                  isTemporary, isGlobal: BOOLEAN;\n                                  scope: Tree) ;\n VAR\n-   type, initial: Tree ;\n-   varType      : CARDINAL ;\n-   location     : location_t ;\n+   type    : Tree ;\n+   varType : CARDINAL ;\n+   location: location_t ;\n BEGIN\n    IF IsComponent (var)\n    THEN\n@@ -3209,92 +3200,15 @@ BEGIN\n    END ;\n    location := TokenToLocation (GetDeclaredMod (var)) ;\n    (* The M2LINK module global variables are a special case and have initializers.  *)\n-   initial := DetectM2LinkInitial (location, var, module) ;\n    PreAddModGcc (var, DeclareKnownVariable (location,\n                                             name, type,\n                                             isExported, isImported, isTemporary,\n-                                            isGlobal, scope, initial)) ;\n-   IF initial # NIL\n-   THEN\n-      (* Remember special case has been created.  *)\n-      AddEntryM2Link (var, module, Mod2Gcc (var))\n-   END ;\n+                                            isGlobal, scope, NIL)) ;\n    WatchRemoveList (var, todolist) ;\n    WatchIncludeList (var, fullydeclared)\n END DoVariableDeclaration ;\n \n \n-(*\n-   AddEntryM2Link - remember module_var has been created.\n-*)\n-\n-PROCEDURE AddEntryM2Link (var, module: CARDINAL; gcc: Tree) ;\n-VAR\n-   entry: M2LinkEntry ;\n-BEGIN\n-   IF M2LinkIndex = NIL\n-   THEN\n-      M2LinkIndex := InitIndex (1)\n-   END ;\n-   NEW (entry) ;\n-   entry^.var := var ;\n-   entry^.gcc := gcc ;\n-   entry^.varname := GetSymName (var) ;\n-   entry^.modname := GetSymName (module) ;\n-   IncludeIndiceIntoIndex (M2LinkIndex, entry)\n-END AddEntryM2Link ;\n-\n-\n-(*\n-   GetEntryM2Link - return the gcc tree matching varname modname.\n-*)\n-\n-PROCEDURE GetEntryM2Link (varname, modname: Name) : Tree ;\n-VAR\n-   entry : M2LinkEntry ;\n-   high, i: CARDINAL ;\n-BEGIN\n-   IF M2LinkIndex # NIL\n-   THEN\n-      i := 1 ;\n-      high := HighIndice (M2LinkIndex) ;\n-      WHILE i <= high DO\n-         entry := GetIndice (M2LinkIndex, i) ;\n-         IF (entry^.varname = varname) AND (entry^.modname = modname)\n-         THEN\n-            RETURN entry^.gcc\n-         END ;\n-         INC (i)\n-      END\n-   END ;\n-   RETURN NIL\n-END GetEntryM2Link ;\n-\n-\n-(*\n-   DeclareM2linkGlobals - will create M2LINK.StaticInitialization\n-                          and M2LINK.ForcedModuleInitOrder providing\n-                          they have not already been created.\n-*)\n-\n-PROCEDURE DeclareM2linkGlobals (tokenno: CARDINAL) ;\n-VAR\n-   m2link: Name ;\n-BEGIN\n-   m2link := MakeKey ('M2LINK') ;\n-   IF GetEntryM2Link (MakeKey ('StaticInitialization'), m2link) = NIL\n-   THEN\n-      Assert (DeclareM2linkStaticInitialization (TokenToLocation (tokenno),\n-                                                 VAL (INTEGER, ScaffoldStatic)) # NIL)\n-   END ;\n-   IF GetEntryM2Link (MakeKey ('ForcedModuleInitOrder'), m2link) = NIL\n-   THEN\n-      Assert (DeclareM2linkForcedModuleInitOrder (TokenToLocation (tokenno),\n-                                                  GetRuntimeModuleOverride ()) # NIL)\n-   END ;\n-END DeclareM2linkGlobals ;\n-\n-\n (*\n    IsGlobal - is the variable not in a procedure scope.\n *)\n@@ -3343,28 +3257,6 @@ BEGIN\n END DeclareVariable ;\n \n \n-(*\n-   DetectM2LinkInitial -\n-*)\n-\n-PROCEDURE DetectM2LinkInitial (location: location_t; variable, decl: CARDINAL) : Tree ;\n-BEGIN\n-   IF (decl # NulSym) AND WholeProgram AND (GetSymName (decl) = MakeKey ('M2LINK'))\n-   THEN\n-      IF GetSymName (variable) = MakeKey ('StaticInitialization')\n-      THEN\n-         RETURN BuildIntegerConstant (VAL (INTEGER, ScaffoldStatic))\n-      ELSIF GetSymName (variable) = MakeKey ('ForcedModuleInitOrder')\n-      THEN\n-         RETURN BuildPtrToTypeString (location,\n-                                      GetRuntimeModuleOverride (),\n-                                      Mod2Gcc (GetSType (variable)))\n-      END\n-   END ;\n-   RETURN NIL\n-END DetectM2LinkInitial ;\n-\n-\n (*\n    DeclareVariableWholeProgram - declares a global variable to GCC when using -fm2-whole-program.\n *)\n@@ -6294,16 +6186,6 @@ BEGIN\n END ConstantKnownAndUsed ;\n \n \n-(*\n-   InitM2LinkModule -\n-*)\n-\n-PROCEDURE InitM2LinkModule ;\n-BEGIN\n-   M2LinkIndex := NIL\n-END InitM2LinkModule ;\n-\n-\n (*\n    InitDeclarations - initializes default types and the source filename.\n *)\n@@ -6329,6 +6211,5 @@ BEGIN\n    EnumerationIndex := InitIndex(1) ;\n    IncludeElementIntoSet(WatchList, 8) ;\n    HaveInitDefaultTypes := FALSE ;\n-   recursionCaught := FALSE ;\n-   InitM2LinkModule\n+   recursionCaught := FALSE\n END M2GCCDeclare."}, {"sha": "445c68ee90d330f5483ede1736b29f830b68ccdf", "filename": "gcc/m2/gm2-compiler/M2GenGCC.mod", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-compiler%2FM2GenGCC.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-compiler%2FM2GenGCC.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2GenGCC.mod?ref=573dbd5175dbf16a3b4551ec55800febf0d1b617", "patch": "@@ -149,8 +149,7 @@ FROM M2GCCDeclare IMPORT WalkAction,\n                          CompletelyResolved,\n                          PoisonSymbols, GetTypeMin, GetTypeMax,\n                          IsProcedureGccNested, DeclareParameters,\n-                         ConstantKnownAndUsed, PrintSym,\n-                         DeclareM2linkGlobals ;\n+                         ConstantKnownAndUsed, PrintSym ;\n \n FROM M2Range IMPORT CodeRangeCheck, FoldRangeCheck, CodeErrorCheck, GetMinMax ;\n \n@@ -1163,17 +1162,7 @@ BEGIN\n       GetModuleCtors (moduleSym, ctor, init, fini, dep) ;\n       finishFunctionDecl (location, Mod2Gcc (fini)) ;\n       BuildEndFunctionCode (location, Mod2Gcc (fini),\n-                            IsModuleWithinProcedure (moduleSym)) ;\n-      IF ScaffoldMain OR (NOT cflag)\n-      THEN\n-         IF CompilingMainModule AND\n-            (ScaffoldDynamic OR ScaffoldStatic OR ScaffoldMain) AND\n-            (moduleSym = GetMainModule ())\n-         THEN\n-            qprintf0 (\"        generating scaffold m2link information\\n\");\n-            DeclareM2linkGlobals (tokenpos)\n-         END\n-      END\n+                            IsModuleWithinProcedure (moduleSym))\n    END\n END CodeFinallyEnd ;\n "}, {"sha": "4dffb63dda7d93c977eb5eaf5e5569daf5777f90", "filename": "gcc/m2/gm2-compiler/M2Quads.mod", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Quads.mod?ref=573dbd5175dbf16a3b4551ec55800febf0d1b617", "patch": "@@ -209,7 +209,8 @@ FROM M2Options IMPORT NilChecking,\n                       GenerateLineDebug, Exceptions,\n                       Profiling, Coding, Optimizing,\n                       ScaffoldDynamic, ScaffoldStatic, cflag,\n-                      ScaffoldMain, SharedFlag, WholeProgram ;\n+                      ScaffoldMain, SharedFlag, WholeProgram,\n+                      GetRuntimeModuleOverride ;\n \n FROM M2Pass IMPORT IsPassCodeGeneration, IsNoPass ;\n \n@@ -2531,7 +2532,8 @@ BEGIN\n       (* int\n          _M2_init (int argc, char *argv[], char *envp[])\n          {\n-            M2RTS_ConstructModules (module_name, libname, argc, argv, envp);\n+            M2RTS_ConstructModules (module_name, libname,\n+                                    overrideliborder, argc, argv, envp);\n          }  *)\n       PushT (initFunction) ;\n       BuildProcedureStart ;\n@@ -2566,10 +2568,17 @@ BEGIN\n             PushT(1) ;\n             BuildAdrFunction ;\n \n+            PushTF(Adr, Address) ;\n+            PushTtok (MakeConstLitString (tok,\n+                                          makekey (GetRuntimeModuleOverride ())),\n+                      tok) ;\n+            PushT(1) ;\n+            BuildAdrFunction ;\n+\n             PushTtok (SafeRequestSym (tok, MakeKey (\"argc\")), tok) ;\n             PushTtok (SafeRequestSym (tok, MakeKey (\"argv\")), tok) ;\n             PushTtok (SafeRequestSym (tok, MakeKey (\"envp\")), tok) ;\n-            PushT (5) ;\n+            PushT (6) ;\n             BuildProcedureCall (tok) ;\n          END\n       ELSIF ScaffoldStatic"}, {"sha": "706db052d36787787c1fc55fb4c826c549a92235", "filename": "gcc/m2/gm2-compiler/M2Scaffold.mod", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-compiler%2FM2Scaffold.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-compiler%2FM2Scaffold.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-compiler%2FM2Scaffold.mod?ref=573dbd5175dbf16a3b4551ec55800febf0d1b617", "patch": "@@ -87,7 +87,7 @@ VAR\n \n static void _M2_init (int argc, char *argv[], char *envp[])\n {\n-  M2RTS_ConstructModules (module_name, libname, argc, argv, envp);\n+  M2RTS_ConstructModules (module_name, libname, overrideliborder, argc, argv, envp);\n }\n \n "}, {"sha": "4fb646e2dab966deb398214231f7e51ec33b349d", "filename": "gcc/m2/gm2-gcc/m2decl.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2decl.cc?ref=573dbd5175dbf16a3b4551ec55800febf0d1b617", "patch": "@@ -40,7 +40,7 @@ extern GTY (()) tree current_function_decl;\n static GTY (()) tree param_type_list;\n static GTY (()) tree param_list = NULL_TREE; /* Ready for the next time we\n                                                 call/define a function.  */\n-\n+#if 0\n tree\n m2decl_DeclareM2linkStaticInitialization (location_t location,\n \t\t\t\t\t  int ScaffoldStatic)\n@@ -71,6 +71,7 @@ m2decl_DeclareM2linkForcedModuleInitOrder (location_t location,\n   m2block_popGlobalScope ();\n   return forced_order;\n }\n+#endif\n \n \n /* DeclareKnownVariable declares a variable to GCC.  */"}, {"sha": "4fd6c9f5976f98ca55234a13983401466544aadf", "filename": "gcc/m2/gm2-libs-iso/M2RTS.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-libs-iso%2FM2RTS.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-libs-iso%2FM2RTS.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-iso%2FM2RTS.def?ref=573dbd5175dbf16a3b4551ec55800febf0d1b617", "patch": "@@ -34,6 +34,7 @@ TYPE\n \n \n PROCEDURE ConstructModules (applicationmodule, libname: ADDRESS;\n+                            overrideliborder: ADDRESS;\n                             argc: INTEGER; argv, envp: ADDRESS) ;\n \n PROCEDURE DeconstructModules (applicationmodule, libname: ADDRESS;"}, {"sha": "42e5c328fc26ed68d0bc6d5c508370c3353ad4b8", "filename": "gcc/m2/gm2-libs-iso/M2RTS.mod", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-libs-iso%2FM2RTS.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-libs-iso%2FM2RTS.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs-iso%2FM2RTS.mod?ref=573dbd5175dbf16a3b4551ec55800febf0d1b617", "patch": "@@ -72,9 +72,11 @@ VAR\n *)\n \n PROCEDURE ConstructModules (applicationmodule, libname: ADDRESS;\n+                            overrideliborder: ADDRESS;\n                             argc: INTEGER; argv, envp: ADDRESS) ;\n BEGIN\n    M2Dependent.ConstructModules (applicationmodule, libname,\n+                                 overrideliborder,\n                                  argc, argv, envp)\n END ConstructModules ;\n "}, {"sha": "004492504ef88c4c2e25eff65e1b6d903b330b4f", "filename": "gcc/m2/gm2-libs/M2Dependent.def", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-libs%2FM2Dependent.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-libs%2FM2Dependent.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs%2FM2Dependent.def?ref=573dbd5175dbf16a3b4551ec55800febf0d1b617", "patch": "@@ -33,7 +33,8 @@ TYPE\n    ArgCVEnvP = PROCEDURE (INTEGER, ADDRESS, ADDRESS) ;\n \n \n-PROCEDURE ConstructModules (applicationmodule, libname: ADDRESS;\n+PROCEDURE ConstructModules (applicationmodule, libname,\n+                            overrideliborder: ADDRESS;\n                             argc: INTEGER; argv, envp: ADDRESS) ;\n \n PROCEDURE DeconstructModules (applicationmodule, libname: ADDRESS;"}, {"sha": "d3d2c50d0642c5d7419bca08655bf60ba1284da7", "filename": "gcc/m2/gm2-libs/M2Dependent.mod", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-libs%2FM2Dependent.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-libs%2FM2Dependent.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs%2FM2Dependent.mod?ref=573dbd5175dbf16a3b4551ec55800febf0d1b617", "patch": "@@ -29,7 +29,7 @@ IMPLEMENTATION MODULE M2Dependent ;\n \n FROM libc IMPORT abort, exit, write, getenv, printf, snprintf, strncpy ;\n (* FROM Builtins IMPORT strncmp, strcmp ;  not available during bootstrap.  *)\n-FROM M2LINK IMPORT ForcedModuleInitOrder, StaticInitialization, PtrToChar ;\n+(* FROM M2LINK IMPORT ForcedModuleInitOrder, StaticInitialization, PtrToChar ; *)\n FROM ASCII IMPORT nul, nl ;\n FROM SYSTEM IMPORT ADR, SIZE ;\n FROM Storage IMPORT ALLOCATE ;\n@@ -39,6 +39,8 @@ IMPORT M2RTS ;\n \n \n TYPE\n+   PtrToChar = POINTER TO CHAR ;\n+\n    DependencyState = (unregistered, unordered, started, ordered, user) ;\n \n    DependencyList = RECORD\n@@ -62,15 +64,16 @@ TYPE\n                             END ;\n \n VAR\n-   Modules        : ARRAY DependencyState OF ModuleChain ;\n+   Modules              : ARRAY DependencyState OF ModuleChain ;\n+   DynamicInitialization,\n    Initialized,\n    WarningTrace,\n    ModuleTrace,\n    HexTrace,\n    DependencyTrace,\n    PreTrace,\n    PostTrace,\n-   ForceTrace     : BOOLEAN ;\n+   ForceTrace           : BOOLEAN ;\n \n \n (*\n@@ -455,18 +458,15 @@ END ResolveDependant ;\n (*\n    RequestDependant - used to specify that modulename is dependant upon\n                       module dependantmodule.  It only takes effect\n-                      if we are not using StaticInitialization.\n+                      if we are using DynamicInitialization.\n *)\n \n PROCEDURE RequestDependant (modulename, libname,\n                             dependantmodule, dependantlibname: ADDRESS) ;\n BEGIN\n    CheckInitialized ;\n-   IF NOT StaticInitialization\n-   THEN\n-      PerformRequestDependant (modulename, libname,\n-                               dependantmodule, dependantlibname)\n-   END\n+   PerformRequestDependant (modulename, libname,\n+                            dependantmodule, dependantlibname)\n END RequestDependant ;\n \n \n@@ -676,7 +676,7 @@ END ForceModule ;\n                        the dynamic ordering with the preference.\n *)\n \n-PROCEDURE ForceDependencies ;\n+PROCEDURE ForceDependencies (overrideliborder: ADDRESS) ;\n VAR\n    len,\n    modlen,\n@@ -685,10 +685,10 @@ VAR\n    libname,\n    pc, start: PtrToChar ;\n BEGIN\n-   IF ForcedModuleInitOrder # NIL\n+   IF overrideliborder # NIL\n    THEN\n-      traceprintf2 (ForceTrace, \"user forcing order: %s\\n\", ForcedModuleInitOrder) ;\n-      pc := ForcedModuleInitOrder ;\n+      traceprintf2 (ForceTrace, \"user forcing order: %s\\n\", overrideliborder) ;\n+      pc := overrideliborder ;\n       start := pc ;\n       len := 0 ;\n       modname := NIL ;\n@@ -762,13 +762,15 @@ END CheckApplication ;\n                       module constructor in turn.\n *)\n \n-PROCEDURE ConstructModules (applicationmodule, libname: ADDRESS;\n+PROCEDURE ConstructModules (applicationmodule, libname,\n+                            overrideliborder: ADDRESS;\n                             argc: INTEGER; argv, envp: ADDRESS) ;\n VAR\n    mptr: ModuleChain ;\n    nulp: ArgCVEnvP ;\n BEGIN\n    CheckInitialized ;\n+   DynamicInitialization := TRUE ;  (* This procedure is only called if we desire dynamic initialization.  *)\n    traceprintf3 (ModuleTrace, \"application module: %s [%s]\\n\",\n                  applicationmodule, libname);\n    mptr := LookupModule (unordered, applicationmodule, libname) ;\n@@ -781,7 +783,7 @@ BEGIN\n    ResolveDependencies (applicationmodule, libname) ;\n    traceprintf (PreTrace, \"Post resolving dependents\\n\");\n    DumpModuleData (PostTrace) ;\n-   ForceDependencies ;\n+   ForceDependencies (overrideliborder) ;\n    traceprintf (ForceTrace, \"After user forcing ordering\\n\");\n    DumpModuleData (ForceTrace) ;\n    CheckApplication ;\n@@ -885,20 +887,17 @@ VAR\n    mptr: ModuleChain ;\n BEGIN\n    CheckInitialized ;\n-   IF NOT StaticInitialization\n+   mptr := LookupModule (unordered, modulename, libname) ;\n+   IF mptr = NIL\n    THEN\n-      mptr := LookupModule (unordered, modulename, libname) ;\n-      IF mptr = NIL\n-      THEN\n-         traceprintf3 (ModuleTrace, \"module: %s [%s] registering\",\n-                       modulename, libname);\n-         moveTo (unordered,\n-                 CreateModule (modulename, libname, init, fini, dependencies)) ;\n-         traceprintf (ModuleTrace, \"\\n\") ;\n-      ELSE\n-         warning3 (\"module: %s [%s] (ignoring duplicate registration)\\n\",\n-                   modulename, libname)\n-      END\n+      traceprintf3 (ModuleTrace, \"module: %s [%s] registering\",\n+                    modulename, libname);\n+      moveTo (unordered,\n+              CreateModule (modulename, libname, init, fini, dependencies)) ;\n+      traceprintf (ModuleTrace, \"\\n\") ;\n+   ELSE\n+      warning3 (\"module: %s [%s] (ignoring duplicate registration)\\n\",\n+                modulename, libname)\n    END\n END RegisterModule ;\n \n@@ -1001,7 +1000,8 @@ BEGIN\n    SetupDebugFlags ;\n    FOR state := MIN (DependencyState) TO MAX (DependencyState) DO\n       Modules[state] := NIL\n-   END\n+   END ;\n+   DynamicInitialization := FALSE\n END Init ;\n \n "}, {"sha": "b0ef0b6e2d3118ccf493550b93d81634020e16ce", "filename": "gcc/m2/gm2-libs/M2LINK.def", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/031785270ab84d7291b200d8e3e345cd36239ad5/gcc%2Fm2%2Fgm2-libs%2FM2LINK.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/031785270ab84d7291b200d8e3e345cd36239ad5/gcc%2Fm2%2Fgm2-libs%2FM2LINK.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs%2FM2LINK.def?ref=031785270ab84d7291b200d8e3e345cd36239ad5", "patch": "@@ -1,41 +0,0 @@\n-(* M2LINK.def defines the linking mode used in Modula-2.\n-\n-Copyright (C) 2022-2023 Free Software Foundation, Inc.\n-Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.\n-\n-This file is part of GNU Modula-2.\n-\n-GNU Modula-2 is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3, or (at your option)\n-any later version.\n-\n-GNU Modula-2 is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  *)\n-\n-DEFINITION MODULE FOR \"C\" M2LINK ;\n-\n-\n-TYPE\n-   PtrToChar = POINTER TO CHAR ;\n-\n-(* These variables are set by the compiler in the program module\n-   according to linking command line options.  *)\n-\n-VAR\n-   ForcedModuleInitOrder: PtrToChar ;\n-   StaticInitialization : BOOLEAN ;\n-\n-\n-END M2LINK."}, {"sha": "7a859f86713d6c40c1174295f1d898a58b215904", "filename": "gcc/m2/gm2-libs/M2RTS.def", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-libs%2FM2RTS.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-libs%2FM2RTS.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs%2FM2RTS.def?ref=573dbd5175dbf16a3b4551ec55800febf0d1b617", "patch": "@@ -33,7 +33,8 @@ TYPE\n    ArgCVEnvP = PROCEDURE (INTEGER, ADDRESS, ADDRESS) ;\n \n \n-PROCEDURE ConstructModules (applicationmodule, libname: ADDRESS;\n+PROCEDURE ConstructModules (applicationmodule, libname,\n+                            overrideliborder: ADDRESS;\n                             argc: INTEGER; argv, envp: ADDRESS) ;\n \n PROCEDURE DeconstructModules (applicationmodule, libname: ADDRESS;"}, {"sha": "dec1d5f0c29b3c75a920935e5354fd49e05efc4f", "filename": "gcc/m2/gm2-libs/M2RTS.mod", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-libs%2FM2RTS.mod", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/573dbd5175dbf16a3b4551ec55800febf0d1b617/gcc%2Fm2%2Fgm2-libs%2FM2RTS.mod", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-libs%2FM2RTS.mod?ref=573dbd5175dbf16a3b4551ec55800febf0d1b617", "patch": "@@ -71,9 +71,11 @@ VAR\n *)\n \n PROCEDURE ConstructModules (applicationmodule, libname: ADDRESS;\n+                            overrideliborder: ADDRESS;\n                             argc: INTEGER; argv, envp: ADDRESS) ;\n BEGIN\n    M2Dependent.ConstructModules (applicationmodule, libname,\n+                                 overrideliborder,\n                                  argc, argv, envp)\n END ConstructModules ;\n "}, {"sha": "53042681a74c7071d11dc7ebf0a1c4a52a5e097e", "filename": "libgm2/libm2pim/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/573dbd5175dbf16a3b4551ec55800febf0d1b617/libgm2%2Flibm2pim%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/573dbd5175dbf16a3b4551ec55800febf0d1b617/libgm2%2Flibm2pim%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgm2%2Flibm2pim%2FMakefile.am?ref=573dbd5175dbf16a3b4551ec55800febf0d1b617", "patch": "@@ -136,7 +136,7 @@ M2DEFS = Args.def   ASCII.def \\\n          LegacyReal.def  libc.def \\\n          libm.def  LMathLib0.def \\\n          M2Dependent.def \\\n-         M2EXCEPTION.def  M2LINK.def \\\n+         M2EXCEPTION.def \\\n          M2RTS.def \\\n          MathLib0.def  MemUtils.def \\\n          NumberIO.def  PushBackInput.def \\"}, {"sha": "b77a628715c94d06de9f519dc820ce2d8273cd1f", "filename": "libgm2/libm2pim/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/573dbd5175dbf16a3b4551ec55800febf0d1b617/libgm2%2Flibm2pim%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/573dbd5175dbf16a3b4551ec55800febf0d1b617/libgm2%2Flibm2pim%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgm2%2Flibm2pim%2FMakefile.in?ref=573dbd5175dbf16a3b4551ec55800febf0d1b617", "patch": "@@ -504,7 +504,7 @@ FLAGS_TO_PASS = $(AM_MAKEFLAGS)\n @BUILD_PIMLIB_TRUE@         LegacyReal.def  libc.def \\\n @BUILD_PIMLIB_TRUE@         libm.def  LMathLib0.def \\\n @BUILD_PIMLIB_TRUE@         M2Dependent.def \\\n-@BUILD_PIMLIB_TRUE@         M2EXCEPTION.def  M2LINK.def \\\n+@BUILD_PIMLIB_TRUE@         M2EXCEPTION.def \\\n @BUILD_PIMLIB_TRUE@         M2RTS.def \\\n @BUILD_PIMLIB_TRUE@         MathLib0.def  MemUtils.def \\\n @BUILD_PIMLIB_TRUE@         NumberIO.def  PushBackInput.def \\"}]}