{"sha": "a8ac57d39a94ed71958990947357e0839ff1bd8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThhYzU3ZDM5YTk0ZWQ3MTk1ODk5MDk0NzM1N2UwODM5ZmYxYmQ4Yg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-09-22T22:26:59Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-09-22T22:26:59Z"}, "message": "Include bytetypes.h.\n\n(bc_emit_bytecode): Likewise.\n(bc_emit_instruction) [! __GNUC__]: Don't really use bc-typecd.def.\n\nFrom-SVN: r5422", "tree": {"sha": "08443a94e9239b3f8203667b7edd7f3acab7a64a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08443a94e9239b3f8203667b7edd7f3acab7a64a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8ac57d39a94ed71958990947357e0839ff1bd8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8ac57d39a94ed71958990947357e0839ff1bd8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8ac57d39a94ed71958990947357e0839ff1bd8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8ac57d39a94ed71958990947357e0839ff1bd8b/comments", "author": null, "committer": null, "parents": [{"sha": "a68c7608605db2769b8c691f748673198a517002", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a68c7608605db2769b8c691f748673198a517002", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a68c7608605db2769b8c691f748673198a517002"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "3b552581f0d87fa5dbaf272a0f2841e2052573ad", "filename": "gcc/bc-emit.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8ac57d39a94ed71958990947357e0839ff1bd8b/gcc%2Fbc-emit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8ac57d39a94ed71958990947357e0839ff1bd8b/gcc%2Fbc-emit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbc-emit.c?ref=a8ac57d39a94ed71958990947357e0839ff1bd8b", "patch": "@@ -27,6 +27,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"real.h\"\n #include \"obstack.h\"\n #include \"bytecode.h\"\n+#include \"bytetypes.h\"\n #include \"bc-emit.h\"\n #include \"bc-opcode.h\"\n #include \"bc-typecd.h\"\n@@ -886,8 +887,8 @@ bc_emit_bytecode (bytecode)\n \tmax_stack_depth = stack_depth;\n     }\n \n-#ifdef VALIDATE_STACK\n-  VALIDATE_STACK ();\n+#ifdef VALIDATE_STACK_FOR_BC\n+  VALIDATE_STACK_FOR_BC ();\n #endif\n }\n \n@@ -924,17 +925,22 @@ bc_emit_instruction (va_alist)\n \n       switch (arityvec[instruction].literals[nliteral])\n \t{\n+/* This conditional is a kludge, but it's necessary\n+   because TYPE might be long long.  */\n+#ifdef __GNUC__\n \t  /* Expand definitions into case statements */\n #define DEFTYPECODE(CODE, NAME, MODE, TYPE)\t\t\t\t\\\n \tcase CODE:\t\t\t\t\t\t\t\\\n-\t  { TYPE temp = va_arg (arguments, TYPE); \t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    TYPE temp = va_arg (arguments, TYPE); \t\t\t\\\n \t    bc_emit_bytecode_const ((void *) &temp, sizeof temp); \t\\\n \t    PRLIT (TYPE, &temp); }\t\t\t\t\t\\\n \t  break;\n \n #include \"bc-typecd.def\"\n \n #undef DEFTYPECODE\n+#endif /* __GNUC__ */\n \n \tdefault:\n \t  abort ();"}]}