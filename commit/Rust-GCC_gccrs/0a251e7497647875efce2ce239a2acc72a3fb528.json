{"sha": "0a251e7497647875efce2ce239a2acc72a3fb528", "node_id": "C_kwDOANBUbNoAKDBhMjUxZTc0OTc2NDc4NzVlZmNlMmNlMjM5YTJhY2M3MmEzZmI1Mjg", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-02-02T00:17:43Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-02-02T00:17:43Z"}, "message": "Daily bump.", "tree": {"sha": "430d628bf5984817b67dc73178a2f89929a843da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/430d628bf5984817b67dc73178a2f89929a843da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a251e7497647875efce2ce239a2acc72a3fb528", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a251e7497647875efce2ce239a2acc72a3fb528", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a251e7497647875efce2ce239a2acc72a3fb528", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a251e7497647875efce2ce239a2acc72a3fb528/comments", "author": null, "committer": null, "parents": [{"sha": "277dd6ea416718ba5493023b5a4660ecdbaf936c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/277dd6ea416718ba5493023b5a4660ecdbaf936c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/277dd6ea416718ba5493023b5a4660ecdbaf936c"}], "stats": {"total": 496, "additions": 495, "deletions": 1}, "files": [{"sha": "11c0f4677cdf60d755cfacd6b3c5a75ffbf14e0d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a251e7497647875efce2ce239a2acc72a3fb528/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a251e7497647875efce2ce239a2acc72a3fb528/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a251e7497647875efce2ce239a2acc72a3fb528", "patch": "@@ -1,3 +1,97 @@\n+2023-02-01  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* common/config/aarch64/aarch64-common.cc\n+\t(struct aarch64_option_extension): Add native_detect and document struct\n+\ta bit more.\n+\t(all_extensions): Set new field native_detect.\n+\t* config/aarch64/aarch64.cc (struct aarch64_option_extension): Delete\n+\tunused struct.\n+\n+2023-02-01  Martin Liska  <mliska@suse.cz>\n+\n+\t* ipa-devirt.cc (odr_types_equivalent_p): Respect *warned\n+\tvalue if set.\n+\n+2023-02-01  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/108356\n+\t* gimple-range-cache.cc (ranger_cache::range_on_edge): Always\n+\tdo a search of the DOM tree for a range.\n+\n+2023-02-01  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/108509\n+\t* cgraphunit.cc (walk_polymorphic_call_targets): Insert\n+\tony non-null values.\n+\t* ipa.cc (walk_polymorphic_call_targets): Likewise.\n+\n+2023-02-01  Martin Liska  <mliska@suse.cz>\n+\n+\tPR driver/108572\n+\t* gcc.cc (LINK_COMPRESS_DEBUG_SPEC): Report error only for\n+\t-gz=zstd.\n+\n+2023-02-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/108573\n+\t* ree.cc (combine_reaching_defs): Don't return false for paradoxical\n+\tsubregs in DEBUG_INSNs.\n+\n+2023-02-01  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* compare-elim.cc (find_flags_uses_in_insn): Guard use of SET_SRC.\n+\n+2023-02-01  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* config/s390/s390.cc (s390_restore_gpr_p): New function.\n+\t(s390_preserve_gpr_arg_in_range_p): New function.\n+\t(s390_preserve_gpr_arg_p): New function.\n+\t(s390_preserve_fpr_arg_p): New function.\n+\t(s390_register_info_stdarg_fpr): Rename to ...\n+\t(s390_register_info_arg_fpr): ... this. Add -mpreserve-args handling.\n+\t(s390_register_info_stdarg_gpr): Rename to ...\n+\t(s390_register_info_arg_gpr): ... this. Add -mpreserve-args handling.\n+\t(s390_register_info): Use the renamed functions above.\n+\t(s390_optimize_register_info): Likewise.\n+\t(save_fpr): Generate CFI for -mpreserve-args.\n+\t(save_gprs): Generate CFI for -mpreserve-args. Drop return value.\n+\t(s390_emit_prologue): Adjust to changed calling convention of save_gprs.\n+\t(s390_optimize_prologue): Likewise.\n+\t* config/s390/s390.opt: New option -mpreserve-args\n+\n+2023-02-01  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* config/s390/s390.cc (save_gprs): Use gen_frame_mem.\n+\t(restore_gprs): Likewise.\n+\t(s390_emit_stack_tie): Make the stack_tie to be dependent on the\n+\tframe pointer if a frame-pointer is used.\n+\t(s390_emit_prologue): Emit stack_tie when frame-pointer is needed.\n+\t* config/s390/s390.md (stack_tie): Add a register operand and\n+\trename to ...\n+\t(@stack_tie<mode>): ... this.\n+\n+2023-02-01  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* dwarf2cfi.cc (dwarf2out_frame_debug_cfa_restore): Add\n+\tEMIT_CFI parameter.\n+\t(dwarf2out_frame_debug): Add case for REG_CFA_NORESTORE.\n+\t* reg-notes.def (REG_CFA_NOTE): New reg note definition.\n+\n+2023-02-01  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/108500\n+\t* dominance.cc (assign_dfs_numbers): Replace recursive DFS\n+\twith tree traversal algorithm.\n+\n+2023-02-01  Jason Merrill  <jason@redhat.com>\n+\n+\t* doc/invoke.texi: Document -Wno-changes-meaning.\n+\n+2023-02-01  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* doc/invoke.texi (Static Analyzer Options): Add notes about\n+\tlimitations of -fanalyzer.\n+\n 2023-01-31  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n \n \t* config/riscv/constraints.md (vj): New."}, {"sha": "05457af72933cd3687c8a1fdf9ad89a051a518d0", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a251e7497647875efce2ce239a2acc72a3fb528/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a251e7497647875efce2ce239a2acc72a3fb528/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=0a251e7497647875efce2ce239a2acc72a3fb528", "patch": "@@ -1 +1 @@\n-20230201\n+20230202"}, {"sha": "c0e514a7f1d30000b985022a20fbab0f78835c18", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a251e7497647875efce2ce239a2acc72a3fb528/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a251e7497647875efce2ce239a2acc72a3fb528/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=0a251e7497647875efce2ce239a2acc72a3fb528", "patch": "@@ -1,3 +1,9 @@\n+2023-02-01  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/108616\n+\t* pending-diagnostic.cc (fixup_location_in_macro_p): Add \"alloca\"\n+\tto macros that we shouldn't unwind inside.\n+\n 2023-01-26  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/108524"}, {"sha": "e2ccd67746982712a83dc0f2269f6877ae54eb86", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a251e7497647875efce2ce239a2acc72a3fb528/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a251e7497647875efce2ce239a2acc72a3fb528/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=0a251e7497647875efce2ce239a2acc72a3fb528", "patch": "@@ -1,3 +1,7 @@\n+2023-02-01  Jason Merrill  <jason@redhat.com>\n+\n+\t* c.opt: Add -Wno-changes-meaning.\n+\n 2023-01-31  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/107593"}, {"sha": "68236b75e4f666d6d2dd9f7e5e0f96e64ff63cd4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a251e7497647875efce2ce239a2acc72a3fb528/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a251e7497647875efce2ce239a2acc72a3fb528/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0a251e7497647875efce2ce239a2acc72a3fb528", "patch": "@@ -1,3 +1,21 @@\n+2023-02-01  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/107755\n+\t* call.cc (build_new_op): Don't call warn_logical_operator when\n+\tprocessing a template.\n+\n+2023-02-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/108607\n+\t* constexpr.cc (cxx_eval_constant_expression): Handle OMP_*\n+\tand OACC_* constructs as non-constant.\n+\t(potential_constant_expression_1): Handle OMP_SCAN and OMP_SCOPE.\n+\n+2023-02-01  Jason Merrill  <jason@redhat.com>\n+\n+\t* class.cc (note_name_declared_in_class): Change from permerror to\n+\t-Wchanges-meaning pedwarn, forcing -pedantic-errors for most cases.\n+\n 2023-01-31  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/108559"}, {"sha": "40270579f9acb6bc40ba08b5aab571c402adea50", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a251e7497647875efce2ce239a2acc72a3fb528/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a251e7497647875efce2ce239a2acc72a3fb528/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0a251e7497647875efce2ce239a2acc72a3fb528", "patch": "@@ -1,3 +1,14 @@\n+2023-02-01  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/108609\n+\t* expr.cc (find_array_section): Add check to prevent interpreting an\n+\tmpz non-integer constant as an integer.\n+\n+2023-02-01  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* openmp.cc (resolve_omp_clauses): Check also for\n+\tpower of two.\n+\n 2023-01-29  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/108450"}, {"sha": "22d46538b7490966a8acaed1be3e16bf05362a6d", "filename": "gcc/m2/ChangeLog", "status": "modified", "additions": 202, "deletions": 0, "changes": 202, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a251e7497647875efce2ce239a2acc72a3fb528/gcc%2Fm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a251e7497647875efce2ce239a2acc72a3fb528/gcc%2Fm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FChangeLog?ref=0a251e7497647875efce2ce239a2acc72a3fb528", "patch": "@@ -1,3 +1,205 @@\n+2023-02-01  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* Make-lang.in (GM2_FLAGS): Add -fno-return -Wreturn-type.\n+\t(GM2_ISO_FLAGS): Add -fno-return -Wreturn-type.\n+\t* Make-maintainer.in (GM2PATH): Split into separate -I components.\n+\t(MC-LIB-DEFS): Add RTentity.def.\n+\t(m2/boot-bin/mc-devel$(exeext)): Changed -I$(GM2PATH) to\n+\t$(GM2PATH).\n+\t(m2/boot-bin/mc-opt$(exeext)): Separate -I paths.\n+\t(m2/mc/decl.o): Separate -I paths.\n+\t(gm2-bootstrap): Separate -I paths.\n+\t(m2/mc-boot-gen/$(SRC_PREFIX)%.h): Separate -I paths.\n+\t(m2/mc-boot-gen/$(SRC_PREFIX)decl.c): Separate -I paths.\n+\t(m2/mc-boot-gen/$(SRC_PREFIX)%.c): Separate -I paths.\n+\t(gm2.verifyparanoid): Separate -I paths.\n+\t(gm2.verifystage12): Separate -I paths.\n+\t* gm2-compiler/M2ALU.mod (GetConstructorElement): Add default\n+\tReturn NulSym.  Remove return from the error case.\n+\t* gm2-compiler/M2Base.mod (ComplexToScalar): Return RType\n+\tfrom the error case.\n+\t(MixMetaTypes):  Return MakeError as a default.\n+\t* gm2-compiler/M2GCCDeclare.mod (GetTypeMin): Return NulSym\n+\tfrom the error case.\n+\t(GetTypeMax): Return NulSym from the error case.\n+\t* gm2-compiler/M2GenGCC.mod (IsExportedGcc): Replace Assert\n+\tby InternalError.\n+\t* gm2-compiler/M2Quads.mod (GetItemPointedTo): Add InternalError.\n+\t(GetTypeMin): Add InternalError.\n+\t(GetTypeMax): Add InternalError.\n+\t* gm2-compiler/M2System.mod (InitSystem): Call\n+\tPutProcedureNoReturn on Throw.\n+\t* gm2-gcc/m2except.cc (m2except_InitExceptions): fn_throw_tree\n+\tdeclare as noreturn.  fn_rethrow_tree declare as noreturn.\n+\t* gm2-libs-coroutines/Debug.def (Halt): Add noreturn attribute.\n+\t* gm2-libs-coroutines/SYSTEM.def (THROW): Add noreturn attribute.\n+\t* gm2-libs-iso/ClientSocket.mod (dorbytes): Add return FALSE.\n+\t* gm2-libs-iso/EXCEPTIONS.def (RAISE): Add noreturn attribute.\n+\t* gm2-libs-iso/IOLink.def (RAISEdevException): Add noreturn attribute.\n+\t* gm2-libs-iso/M2RTS.def (HALT): Add noreturn attribute.\n+\t(Halt): Ditto.\n+\t(HaltC): Ditto.\n+\t(ErrorMessage): Ditto.\n+\t(AssignmentException): Ditto.\n+\t(ReturnException): Ditto.\n+\t(IncException): Ditto.\n+\t(DecException): Ditto.\n+\t(InclException): Ditto.\n+\t(ExclException): Ditto.\n+\t(ShiftException): Ditto.\n+\t(RotateException): Ditto.\n+\t(StaticArraySubscriptException): Ditto.\n+\t(DynamicArraySubscriptException): Ditto.\n+\t(ForLoopBeginException): Ditto.\n+\t(ForLoopToException): Ditto.\n+\t(ForLoopEndException): Ditto.\n+\t(PointerNilException): Ditto.\n+\t(NoReturnException): Ditto.\n+\t(CaseException): Ditto.\n+\t(WholeNonPosDivException): Ditto.\n+\t(WholeNonPosModException): Ditto.\n+\t(WholeZeroDivException): Ditto.\n+\t(WholeZeroRemException): Ditto.\n+\t(WholeValueException): Ditto.\n+\t(RealValueException): Ditto.\n+\t(ParameterException): Ditto.\n+\t(NoException): Ditto.\n+\t* gm2-libs-iso/SYSTEM.def (THROW): Ditto.\n+\t* gm2-libs-iso/TermFile.mod (dorbytes): Add default return FALSE.\n+\t* gm2-libs-min/M2RTS.def: Add noreturn attribute.\n+\t* gm2-libs/FIO.mod (BufferedRead): Return -1.\n+\t(getFileName): Return NIL.\n+\t(getFileNameLength): Return 0.\n+\t* gm2-libs/M2RTS.def (HaltC): Add noreturn attribute.\n+\t(AssignmentException): Ditto.\n+\t(ReturnException): Ditto.\n+\t(IncException): Ditto.\n+\t(DecException): Ditto.\n+\t(InclException): Ditto.\n+\t(ExclException): Ditto.\n+\t(ShiftException): Ditto.\n+\t(RotateException): Ditto.\n+\t(StaticArraySubscriptException): Ditto.\n+\t(DynamicArraySubscriptException): Ditto.\n+\t(ForLoopBeginException): Ditto.\n+\t(ForLoopToException): Ditto.\n+\t(ForLoopEndException): Ditto.\n+\t(PointerNilException): Ditto.\n+\t(NoReturnException): Ditto.\n+\t(CaseException): Ditto.\n+\t(WholeNonPosDivException): Ditto.\n+\t(WholeNonPosModException): Ditto.\n+\t(WholeZeroDivException): Ditto.\n+\t(WholeZeroRemException): Ditto.\n+\t(WholeValueException): Ditto.\n+\t(RealValueException): Ditto.\n+\t(ParameterException): Ditto.\n+\t(NoException): Ditto.\n+\t* gm2-libs/RTExceptions.def (Raise): Ditto.\n+\t* gm2-libs/RTExceptions.mod (InvokeHandler): Ditto.\n+\t* gm2-libs/SYSTEM.def (THROW): Ditto.\n+\t* m2.flex (_M2_m2flex_fini): Remamed to...\n+\t(_M2_m2flex_finish): ...here.\n+\t* mc-boot-ch/GBuiltins.c (_M2_Builtins_finish): Remamed to...\n+\t(_M2_Builtins_fini): ...this.\n+\t* mc-boot-ch/GRTco.c (_M2_RTco_finish): Remamed to...\n+\t(_M2_RTco_fini): ...this.\n+\t* mc-boot-ch/GSYSTEM.c (_M2_SYSTEM_finish): Remamed to...\n+\t(_M2_SYSTEM_fini): ...this.\n+\t* mc-boot-ch/GSelective.c (_M2_Selective_finish): Remamed to...\n+\t(_M2_Selective_fini): ...this.\n+\t* mc-boot-ch/GSysExceptions.c (_M2_SysExceptions_init): Add\n+\tparameters.\n+\t(_M2_SysExceptions_finish): Remamed to...\n+\t(_M2_SysExceptions_fini): ...this.\n+\t* mc-boot-ch/GUnixArgs.cc (_M2_UnixArgs_finish): Remamed to...\n+\t(_M2_UnixArgs_fini): ...this.\n+\t(_M2_UnixArgs_ctor::_M2_UnixArgs_ctor): Change parameter\n+\tto _M2_UnixArgs_fini.\n+\t* mc-boot-ch/Gdtoa.c (_M2_dtoa_finish): Remamed to...\n+\t(_M2_dtoa_fini): ...this.\n+\t* mc-boot-ch/Gerrno.c (_M2_errno_finish): Remamed to...\n+\t(_M2_errno_fini): ...this.\n+\t* mc-boot-ch/Gldtoa.c (_M2_ldtoa_finish): Remamed to...\n+\t(_M2_ldtoa_fini): ...this.\n+\t* mc-boot-ch/Gtermios.cc (_M2_termios_init): Add parameters.\n+\t(_M2_termios_finish): Remamed to...\n+\t(_M2_termios_fini): ...this.\n+\t* mc-boot-ch/Gwrapc.c (_M2_wrapc_init): Add parameters.\n+\t(_M2_wrapc_finish): Remamed to...\n+\t(_M2_wrapc_fini): ...this.\n+\t* mc-boot/GASCII.c: Rebuild.\n+\t* mc-boot/GArgs.c: Rebuild.\n+\t* mc-boot/GAssertion.c: Rebuild.\n+\t* mc-boot/GBreak.c: Rebuild.\n+\t* mc-boot/GCmdArgs.c: Rebuild.\n+\t* mc-boot/GDebug.c: Rebuild.\n+\t* mc-boot/GDynamicStrings.c: Rebuild.\n+\t* mc-boot/GEnvironment.c: Rebuild.\n+\t* mc-boot/GFIO.c: Rebuild.\n+\t* mc-boot/GFormatStrings.c: Rebuild.\n+\t* mc-boot/GFpuIO.c: Rebuild.\n+\t* mc-boot/GIO.c: Rebuild.\n+\t* mc-boot/GIndexing.c: Rebuild.\n+\t* mc-boot/GM2Dependent.c: Rebuild.\n+\t* mc-boot/GM2EXCEPTION.c: Rebuild.\n+\t* mc-boot/GM2RTS.c: Rebuild.\n+\t* mc-boot/GM2RTS.h: Rebuild.\n+\t* mc-boot/GMemUtils.c: Rebuild.\n+\t* mc-boot/GNumberIO.c: Rebuild.\n+\t* mc-boot/GPushBackInput.c: Rebuild.\n+\t* mc-boot/GRTExceptions.c: Rebuild.\n+\t* mc-boot/GRTExceptions.h: Rebuild.\n+\t* mc-boot/GRTco.h: Rebuild.\n+\t* mc-boot/GRTint.c: Rebuild.\n+\t* mc-boot/GSArgs.c: Rebuild.\n+\t* mc-boot/GSFIO.c: Rebuild.\n+\t* mc-boot/GStdIO.c: Rebuild.\n+\t* mc-boot/GStorage.c: Rebuild.\n+\t* mc-boot/GStrCase.c: Rebuild.\n+\t* mc-boot/GStrIO.c: Rebuild.\n+\t* mc-boot/GStrLib.c: Rebuild.\n+\t* mc-boot/GStringConvert.c: Rebuild.\n+\t* mc-boot/GSysStorage.c: Rebuild.\n+\t* mc-boot/GTimeString.c: Rebuild.\n+\t* mc-boot/Galists.c: Rebuild.\n+\t* mc-boot/Gdecl.c: Rebuild.\n+\t* mc-boot/Gkeyc.c: Rebuild.\n+\t* mc-boot/Glists.c: Rebuild.\n+\t* mc-boot/GmcComment.c: Rebuild.\n+\t* mc-boot/GmcComp.c: Rebuild.\n+\t* mc-boot/GmcDebug.c: Rebuild.\n+\t* mc-boot/GmcError.c: Rebuild.\n+\t* mc-boot/GmcFileName.c: Rebuild.\n+\t* mc-boot/GmcLexBuf.c: Rebuild.\n+\t* mc-boot/GmcMetaError.c: Rebuild.\n+\t* mc-boot/GmcOptions.c: Rebuild.\n+\t* mc-boot/GmcPreprocess.c: Rebuild.\n+\t* mc-boot/GmcPretty.c: Rebuild.\n+\t* mc-boot/GmcPrintf.c: Rebuild.\n+\t* mc-boot/GmcQuiet.c: Rebuild.\n+\t* mc-boot/GmcReserved.c: Rebuild.\n+\t* mc-boot/GmcSearch.c: Rebuild.\n+\t* mc-boot/GmcStack.c: Rebuild.\n+\t* mc-boot/GmcStream.c: Rebuild.\n+\t* mc-boot/Gmcp1.c: Rebuild.\n+\t* mc-boot/Gmcp2.c: Rebuild.\n+\t* mc-boot/Gmcp3.c: Rebuild.\n+\t* mc-boot/Gmcp4.c: Rebuild.\n+\t* mc-boot/Gmcp5.c: Rebuild.\n+\t* mc-boot/GnameKey.c: Rebuild.\n+\t* mc-boot/GsymbolKey.c: Rebuild.\n+\t* mc-boot/Gtop.c: Rebuild.\n+\t* mc-boot/Gvarargs.c: Rebuild.\n+\t* mc-boot/Gwlists.c: Rebuild.\n+\t* mc-boot/GRTentity.h: New file.\n+\t* mc/decl.mod (scaffoldStatic): Change _finish to _fini.\n+\t* mc/mc.flex (_M2_mcflex_fini): New function.\n+\t(_M2_mcflex_finish): Remove function.\n+\t* tools-src/mklink.c (GenerateFinishCalls): Change\n+\t_finish to _fini.\n+\t(GeneratePrototypes): Change _finish to _fini.\n+\n 2023-01-31  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \t* Make-lang.in (gm2-libs.texi-check): Rename"}, {"sha": "19e289b6dc3243d5411c8c9180d60410ecdaf3a4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a251e7497647875efce2ce239a2acc72a3fb528/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a251e7497647875efce2ce239a2acc72a3fb528/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0a251e7497647875efce2ce239a2acc72a3fb528", "patch": "@@ -1,3 +1,102 @@\n+2023-02-01  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/108609\n+\t* gfortran.dg/pr108527.f90: Adjust test pattern.\n+\n+2023-02-01  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* gcc.target/aarch64/cpunative/info_19: New test.\n+\t* gcc.target/aarch64/cpunative/info_20: New test.\n+\t* gcc.target/aarch64/cpunative/info_21: New test.\n+\t* gcc.target/aarch64/cpunative/info_22: New test.\n+\t* gcc.target/aarch64/cpunative/native_cpu_19.c: New test.\n+\t* gcc.target/aarch64/cpunative/native_cpu_20.c: New test.\n+\t* gcc.target/aarch64/cpunative/native_cpu_21.c: New test.\n+\t* gcc.target/aarch64/cpunative/native_cpu_22.c: New test.\n+\n+2023-02-01  Siddhesh Poyarekar  <siddhesh@gotplt.org>\n+\n+\t* gcc.dg/builtin-dynamic-object-size-0.c: Move FAIL and nfail\n+\tinto...\n+\t* gcc.dg/builtin-object-size-common.h: ... new file.\n+\t* g++.dg/ext/builtin-object-size1.C: Include\n+\tbuiltin-object-size-common.h.  Replace all abort with FAIL.\n+\t(main): Call DONE.\n+\t* g++.dg/ext/builtin-object-size2.C: Likewise.\n+\t* gcc.dg/builtin-object-size-1.c: Likewise.\n+\t* gcc.dg/builtin-object-size-12.c: Likewise.\n+\t* gcc.dg/builtin-object-size-13.c: Likewise.\n+\t* gcc.dg/builtin-object-size-15.c: Likewise.\n+\t* gcc.dg/builtin-object-size-2.c: Likewise.\n+\t* gcc.dg/builtin-object-size-3.c: Likewise.\n+\t* gcc.dg/builtin-object-size-4.c: Likewise.\n+\t* gcc.dg/builtin-object-size-6.c: Likewise.\n+\t* gcc.dg/builtin-object-size-7.c: Likewise.\n+\t* gcc.dg/builtin-object-size-8.c: Likewise.\n+\t* gcc.dg/pr101836.c: Likewise.\n+\t* gcc.dg/strict-flex-array-3.c: Likewise.\n+\n+2023-02-01  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/108356\n+\t* gcc.dg/pr108356.c: New.\n+\n+2023-02-01  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/108509\n+\t* g++.dg/ipa/pr108509.C: New test.\n+\n+2023-02-01  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/107755\n+\t* g++.dg/warn/Wlogical-op-4.C: New test.\n+\n+2023-02-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/108573\n+\t* gcc.dg/pr108573.c: New test.\n+\n+2023-02-01  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* g++.dg/gomp/attrs-10.C: Update warning strings for aarch64.\n+\t* g++.dg/gomp/declare-simd-8.C: Add expected warning for aarch64.\n+\n+2023-02-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/108607\n+\t* g++.dg/gomp/pr108607.C: New test.\n+\n+2023-02-01  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* gcc.target/s390/preserve-args-1.c: New test.\n+\t* gcc.target/s390/preserve-args-2.c: New test.\n+\t* gcc.target/s390/preserve-args-3.c: New file.\n+\n+2023-02-01  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/warn/changes-meaning2.C: New test.\n+\t* g++.dg/warn/changes-meaning3.C: New test.\n+\n+2023-02-01  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcc.dg/analyzer/call-summaries-2.c: Add\n+\tdg-require-effective-target alloca.\n+\t* gcc.dg/analyzer/imprecise-floating-point-1.c: Likewise.\n+\t* gcc.dg/analyzer/infinite-recursion-alloca.c: Likewise.\n+\t* gcc.dg/analyzer/malloc-callbacks.c: Likewise.\n+\t* gcc.dg/analyzer/out-of-bounds-5.c: Likewise.  Remove includes\n+\tof <stdio.h> and <alloca.h>.  Use \"__builtin_free\" rather than\n+\t\"free\", to match uses of \"__builtin_malloc\".\n+\t* gcc.dg/analyzer/putenv-1.c: Add dg-require-effective-target\n+\talloca.\n+\t* gcc.dg/analyzer/write-to-string-literal-5.c: Likewise.\n+\n+2023-02-01  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/108616\n+\t* gcc.dg/analyzer/allocation-size-multiline-3.c: New test.\n+\t* gcc.dg/analyzer/test-alloca.h: New test.\n+\n 2023-01-31  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/108559"}, {"sha": "2df1f503cd4d5fa3be1ebfff4fc5f6c6916dd3ef", "filename": "libgm2/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a251e7497647875efce2ce239a2acc72a3fb528/libgm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a251e7497647875efce2ce239a2acc72a3fb528/libgm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgm2%2FChangeLog?ref=0a251e7497647875efce2ce239a2acc72a3fb528", "patch": "@@ -1,3 +1,20 @@\n+2023-02-01  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\tPR modula2/108612\n+\tPR modula2/108551\n+\t* libm2cor/Makefile.am (libm2cor_la_M2FLAGS): Add -Wreturn-type\n+\t-fcase.\n+\t* libm2cor/Makefile.in: Rebuild.\n+\t* libm2iso/Makefile.am (libm2iso_la_M2FLAGS): Add -Wreturn-type\n+\t-fcase.\n+\t* libm2iso/Makefile.in: Rebuild.\n+\t* libm2log/Makefile.am (libm2log_la_M2FLAGS): Add -Wreturn-type\n+\t-fcase.\n+\t* libm2log/Makefile.in: Rebuild.\n+\t* libm2pim/Makefile.am (libm2pim_la_M2FLAGS): Add -Wreturn-type\n+\t-fcase.\n+\t* libm2pim/Makefile.in: Rebuild.\n+\n 2023-01-31  Richard Biener  <rguenther@suse.de>\n \n \tPR modula2/108462"}, {"sha": "d277a2d546a441893c01214d1308f5974fc558a5", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a251e7497647875efce2ce239a2acc72a3fb528/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a251e7497647875efce2ce239a2acc72a3fb528/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=0a251e7497647875efce2ce239a2acc72a3fb528", "patch": "@@ -1,3 +1,15 @@\n+2023-02-01  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* testsuite/libgomp.fortran/allocate-3.f90: Fix ALIGN\n+\tusage, remove unused -fdump-tree-original.\n+\t* testsuite/libgomp.fortran/allocate-4.f90: New.\n+\n+2023-02-01  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* libgomp.texi (5.0 Impl. Status): Update 'requires' and 'ancestor'.\n+\t(GCN): Add item about 'omp requires'.\n+\t(nvptx): Likewise; add item about reverse offload.\n+\n 2023-01-27  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/108558"}, {"sha": "d3dd0c732843dd50c720e94ae8258dc6ab0d965b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a251e7497647875efce2ce239a2acc72a3fb528/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a251e7497647875efce2ce239a2acc72a3fb528/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0a251e7497647875efce2ce239a2acc72a3fb528", "patch": "@@ -1,3 +1,34 @@\n+2023-02-01  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* src/c++11/random.cc (random_device::_M_fini): Do not try to\n+\tclose the file handle if the target doesn't support the\n+\t/dev/random and /dev/urandom files.\n+\n+2023-02-01  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* config/os/generic/error_constants.h (errc::value_too_large)\n+\t[__AVR__]: Define.\n+\t* src/c++11/system_error.cc\n+\t(system_category::default_error_condition) [__AVR__]: Only match\n+\trecognize values equal to EDOM, ERANGE, ENOSYS and EINTR.\n+\t* src/c++17/fs_ops.cc (fs::current_path) [__AVR__]: Do not check\n+\tfor ENOENT etc. in switch.\n+\t(fs::remove_all) [__AVR__]: Likewise.\n+\t* src/filesystem/ops-common.h [__AVR__]: Do not use POSIX open,\n+\tclose etc.\n+\n+2023-02-01  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* acinclude.m4 (GLIBCXX_ZONEINFO_DIR) [avr-*-*, msp430-*-*]: Set\n+\tembed_zoneinfo=no\n+\t* configure: Regenerate.\n+\n+2023-02-01  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR testsuite/108632\n+\t* testsuite/std/time/hh_mm_ss/1.cc (size): Add empty\n+\tstruct at end of S0.\n+\n 2023-01-30  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/xml/manual/shared_ptr.xml: Move links from both"}]}