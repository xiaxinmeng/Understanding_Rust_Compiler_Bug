{"sha": "16ba97b9eb8b1db41b9aa1fdaae764653698cf26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZiYTk3YjllYjhiMWRiNDFiOWFhMWZkYWFlNzY0NjUzNjk4Y2YyNg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2018-02-16T18:17:09Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2018-02-16T18:17:09Z"}, "message": "re PR rtl-optimization/70023 (ICE: in assign_by_spills, at lra-assigns.c:1417/8 with -fschedule-insns)\n\n2018-02-16  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/70023\n\t* lra-constraints.c (inherit_in_ebb): Take hard reg mode of\n\tsrc_regno into account.\n\n2018-02-16  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/70023\n\t* gcc.target/i386/pr70023.c: New.\n\nFrom-SVN: r257751", "tree": {"sha": "aab26e3a1041c2cd8abc6151c1d44047bb4b00de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aab26e3a1041c2cd8abc6151c1d44047bb4b00de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16ba97b9eb8b1db41b9aa1fdaae764653698cf26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16ba97b9eb8b1db41b9aa1fdaae764653698cf26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16ba97b9eb8b1db41b9aa1fdaae764653698cf26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16ba97b9eb8b1db41b9aa1fdaae764653698cf26/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "71a21b9eacacd3875408f38971177e7ecc960386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71a21b9eacacd3875408f38971177e7ecc960386", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71a21b9eacacd3875408f38971177e7ecc960386"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "4a1a36fd4a4bafbfb7d6d7077c9c0ca37ee5f423", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ba97b9eb8b1db41b9aa1fdaae764653698cf26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ba97b9eb8b1db41b9aa1fdaae764653698cf26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16ba97b9eb8b1db41b9aa1fdaae764653698cf26", "patch": "@@ -1,3 +1,9 @@\n+2018-02-16  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/70023\n+\t* lra-constraints.c (inherit_in_ebb): Take hard reg mode of\n+\tsrc_regno into account.\n+\n 2018-02-16  Carl Love  <cel@us.ibm.com>\n \n \t* config/rs6000/altivec.h: Remove vec_vextract4b and vec_vinsert4b."}, {"sha": "d730f36fba0fac47ba3c17e01c9f3ffe0a9883c6", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ba97b9eb8b1db41b9aa1fdaae764653698cf26/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ba97b9eb8b1db41b9aa1fdaae764653698cf26/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=16ba97b9eb8b1db41b9aa1fdaae764653698cf26", "patch": "@@ -6346,7 +6346,13 @@ inherit_in_ebb (rtx_insn *head, rtx_insn *tail)\n \t\t\t\t\t\t PSEUDO_REGNO_MODE (src_regno),\n \t\t\t\t\t\t reg_renumber[src_regno]);\n \t\t\t}\n-\t\t      add_next_usage_insn (src_regno, use_insn, reloads_num);\n+\t\t      if (src_regno >= FIRST_PSEUDO_REGISTER)\n+\t\t\tadd_next_usage_insn (src_regno, use_insn, reloads_num);\n+\t\t      else\n+\t\t\t{\n+\t\t\t  for (i = 0; i < hard_regno_nregs (src_regno, reg->biggest_mode); i++)\n+\t\t\t    add_next_usage_insn (src_regno + i, use_insn, reloads_num);\n+\t\t\t}\n \t\t    }\n \t\t}\n \t  /* Process used call regs.  */"}, {"sha": "e5aebb10baf9591babf82b211ae38832011841bb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ba97b9eb8b1db41b9aa1fdaae764653698cf26/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ba97b9eb8b1db41b9aa1fdaae764653698cf26/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=16ba97b9eb8b1db41b9aa1fdaae764653698cf26", "patch": "@@ -1,3 +1,8 @@\n+2018-02-16  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/70023\n+\t* gcc.target/i386/pr70023.c: New.\n+\n 2018-02-16  Carl Love  <cel@us.ibm.com>\n \n \t* gcc.target/powerpc/p9-vinsert4b-1.c: Remove test file for non-ABI"}, {"sha": "57660e2b0114d379777e90f4f60db45d0abd9dba", "filename": "gcc/testsuite/gcc.target/i386/pr70023.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ba97b9eb8b1db41b9aa1fdaae764653698cf26/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70023.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ba97b9eb8b1db41b9aa1fdaae764653698cf26/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70023.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70023.c?ref=16ba97b9eb8b1db41b9aa1fdaae764653698cf26", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O -fno-sched-critical-path-heuristic -fschedule-insns -m8bit-idiv -w\" } */\n+\n+typedef int v8si __attribute__ ((vector_size (32)));\n+typedef __int128 i128;\n+\n+i128\n+foo(int u16_0, int u64_0, i128 u128_0, i128 u128_1, v8si v32u32_0, v8si v32u32_1, v8si v32u64_1)\n+{\n+  v32u32_0[6] <<= u128_1 & 31;\n+  v32u32_0 &= (v8si){v32u64_1[2], v32u32_1[6], 0xc5a661b, 0, 2};\n+  u128_1 += 0x16fe7853d732;\n+  v32u32_1 /= (v8si){v32u32_0[5], u128_1, 0x92d} | 1;\n+  return u128_0 + v32u32_1[1];\n+}"}]}