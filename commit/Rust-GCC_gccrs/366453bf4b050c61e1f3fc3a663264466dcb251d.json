{"sha": "366453bf4b050c61e1f3fc3a663264466dcb251d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY2NDUzYmY0YjA1MGM2MWUxZjNmYzNhNjYzMjY0NDY2ZGNiMjUxZA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-03-07T05:21:41Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-03-07T05:21:41Z"}, "message": "system.h (const, inline): Move the stage2 handling of these keywords-as-macros from here...\n\n        * system.h (const, inline): Move the stage2 handling of these\n        keywords-as-macros from here...\n        * gansidecl.h (const, inline): ...to here.\n(This became necessary after using `const' in config directory headers,\nwhich get included before system.h does.  If we're going to reset these\nkeywords, we must do so before absolutely any other header file.)\n\nFrom-SVN: r25626", "tree": {"sha": "efe3d1eb875964faf4d81b429208086fe8886d6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efe3d1eb875964faf4d81b429208086fe8886d6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/366453bf4b050c61e1f3fc3a663264466dcb251d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/366453bf4b050c61e1f3fc3a663264466dcb251d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/366453bf4b050c61e1f3fc3a663264466dcb251d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/366453bf4b050c61e1f3fc3a663264466dcb251d/comments", "author": null, "committer": null, "parents": [{"sha": "b26caacda9dc52ede6cfc5ceb70419a6e4d9c905", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b26caacda9dc52ede6cfc5ceb70419a6e4d9c905", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b26caacda9dc52ede6cfc5ceb70419a6e4d9c905"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "0675c0301c0cfa4fa562daf268cdcf51763fe276", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/366453bf4b050c61e1f3fc3a663264466dcb251d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/366453bf4b050c61e1f3fc3a663264466dcb251d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=366453bf4b050c61e1f3fc3a663264466dcb251d", "patch": "@@ -1,3 +1,10 @@\n+Sun Mar  7 08:05:27 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* system.h (const, inline): Move the stage2 handling of these\n+ \tkeywords-as-macros from here...\n+\n+\t* gansidecl.h (const, inline): ...to here.\n+\n Sun Mar  7 02:44:15 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* recog.c (push_operand, pop_operand): VOIDmode needn't match modes."}, {"sha": "cf7762fad6aceb089e28f9d9255a6401559e3c75", "filename": "gcc/gansidecl.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/366453bf4b050c61e1f3fc3a663264466dcb251d/gcc%2Fgansidecl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/366453bf4b050c61e1f3fc3a663264466dcb251d/gcc%2Fgansidecl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgansidecl.h?ref=366453bf4b050c61e1f3fc3a663264466dcb251d", "patch": "@@ -34,6 +34,19 @@ Boston, MA 02111-1307, USA.  */\n #define VPROTO(ARGS) VPARAMS(ARGS)\n #define PVPROTO(ARGS) PARAMS(ARGS)\n \n+/* Autoconf will possibly define the `inline' or `const' keywords as\n+   macros, however this is only valid for the stage1 compiler.  If we\n+   detect a modern version of gcc, unconditionally reset the values.\n+   This makes sure the right thing happens in stage2 and later.  We\n+   need to do this very early; i.e. before any systems header files or\n+   gcc header files in case they use these keywords.  Otherwise\n+   conflicts might occur. */\n+#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 7)\n+# undef const\n+# undef inline\n+# define inline __inline__  /* Modern gcc can use `__inline__' freely. */\n+#endif /* GCC >= 2.7 */\n+\n #if __GNUC__ < 2 || (__GNUC__ == 2 && __GNUC_MINOR__ < 7)\n # define __attribute__(x)\n #endif"}, {"sha": "e668a9e950ba3a3eab2bda4821bbb522e706315b", "filename": "gcc/system.h", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/366453bf4b050c61e1f3fc3a663264466dcb251d/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/366453bf4b050c61e1f3fc3a663264466dcb251d/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=366453bf4b050c61e1f3fc3a663264466dcb251d", "patch": "@@ -22,18 +22,6 @@ Boston, MA 02111-1307, USA.  */\n #ifndef __GCC_SYSTEM_H__\n #define __GCC_SYSTEM_H__\n \n-/* Autoconf will possibly define the `inline' or `const' keywords as\n-   macros, however this is only valid for the stage1 compiler.  If we\n-   detect a modern version of gcc, unconditionally reset the values.\n-   This makes sure the right thing happens in stage2 and later.  We\n-   need to do this before any header files in case they use these\n-   keywords or conflicts might occur. */\n-#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 7)\n-# undef const\n-# undef inline\n-# define inline __inline__  /* Modern gcc can use `__inline__' freely. */\n-#endif /* GCC >= 2.7 */\n-\n /* We must include stdarg.h/varargs.h before stdio.h. */\n #ifdef ANSI_PROTOTYPES\n #include <stdarg.h>"}]}