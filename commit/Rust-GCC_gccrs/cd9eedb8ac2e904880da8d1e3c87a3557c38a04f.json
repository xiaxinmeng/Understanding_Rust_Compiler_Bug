{"sha": "cd9eedb8ac2e904880da8d1e3c87a3557c38a04f", "node_id": "C_kwDOANBUbNoAKGNkOWVlZGI4YWMyZTkwNDg4MGRhOGQxZTNjODdhMzU1N2MzOGEwNGY", "commit": {"author": {"name": "Srinath Parvathaneni", "email": "srinath.parvathaneni@arm.com", "date": "2022-11-11T14:45:41Z"}, "committer": {"name": "Srinath Parvathaneni", "email": "srinath.parvathaneni@arm.com", "date": "2022-11-11T14:53:08Z"}, "message": "aarch64: Add support for Cortex-A715 CPU.\n\nThis patch adds support for Cortex-A715 CPU.\n\nRegards,\nSrinath.\n\ngcc/ChangeLog:\n\n2022-11-09  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n\n\t* config/aarch64/aarch64-cores.def (AARCH64_CORE): Add Cortex-A715\n\tCPU.\n\t* config/aarch64/aarch64-tune.md: Regenerate.\n\t* doc/gcc/gcc-command-options/machine-dependent-options/aarch64-options.rst:\n\tDocument Cortex-A715 CPU.", "tree": {"sha": "cf5e3ed249ee5ef5d0a9ee96366c9901a4d16de7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf5e3ed249ee5ef5d0a9ee96366c9901a4d16de7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd9eedb8ac2e904880da8d1e3c87a3557c38a04f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd9eedb8ac2e904880da8d1e3c87a3557c38a04f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd9eedb8ac2e904880da8d1e3c87a3557c38a04f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd9eedb8ac2e904880da8d1e3c87a3557c38a04f/comments", "author": {"login": "sripar01", "id": 115715849, "node_id": "U_kgDOBuWvCQ", "avatar_url": "https://avatars.githubusercontent.com/u/115715849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sripar01", "html_url": "https://github.com/sripar01", "followers_url": "https://api.github.com/users/sripar01/followers", "following_url": "https://api.github.com/users/sripar01/following{/other_user}", "gists_url": "https://api.github.com/users/sripar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/sripar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sripar01/subscriptions", "organizations_url": "https://api.github.com/users/sripar01/orgs", "repos_url": "https://api.github.com/users/sripar01/repos", "events_url": "https://api.github.com/users/sripar01/events{/privacy}", "received_events_url": "https://api.github.com/users/sripar01/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sripar01", "id": 115715849, "node_id": "U_kgDOBuWvCQ", "avatar_url": "https://avatars.githubusercontent.com/u/115715849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sripar01", "html_url": "https://github.com/sripar01", "followers_url": "https://api.github.com/users/sripar01/followers", "following_url": "https://api.github.com/users/sripar01/following{/other_user}", "gists_url": "https://api.github.com/users/sripar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/sripar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sripar01/subscriptions", "organizations_url": "https://api.github.com/users/sripar01/orgs", "repos_url": "https://api.github.com/users/sripar01/repos", "events_url": "https://api.github.com/users/sripar01/events{/privacy}", "received_events_url": "https://api.github.com/users/sripar01/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81de4037454275f8ed6d858fbc129e832c6147ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81de4037454275f8ed6d858fbc129e832c6147ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81de4037454275f8ed6d858fbc129e832c6147ef"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "380bd8d90fdc7bddea2c8465522a30f938c2ffc5", "filename": "gcc/config/aarch64/aarch64-cores.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9eedb8ac2e904880da8d1e3c87a3557c38a04f/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9eedb8ac2e904880da8d1e3c87a3557c38a04f/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def?ref=cd9eedb8ac2e904880da8d1e3c87a3557c38a04f", "patch": "@@ -167,6 +167,8 @@ AARCH64_CORE(\"cortex-a510\",  cortexa510, cortexa55, V9A,  (SVE2_BITPERM, MEMTAG,\n \n AARCH64_CORE(\"cortex-a710\",  cortexa710, cortexa57, V9A,  (SVE2_BITPERM, MEMTAG, I8MM, BF16), neoversen2, 0x41, 0xd47, -1)\n \n+AARCH64_CORE(\"cortex-a715\",  cortexa715, cortexa57, V9A,  (SVE2_BITPERM, MEMTAG, I8MM, BF16), neoversen2, 0x41, 0xd4d, -1)\n+\n AARCH64_CORE(\"cortex-x2\",  cortexx2, cortexa57, V9A,  (SVE2_BITPERM, MEMTAG, I8MM, BF16), neoversen2, 0x41, 0xd48, -1)\n \n AARCH64_CORE(\"neoverse-n2\", neoversen2, cortexa57, V9A, (I8MM, BF16, SVE2_BITPERM, RNG, MEMTAG, PROFILE), neoversen2, 0x41, 0xd49, -1)"}, {"sha": "f5b1482ba357d14f36e13ca3c4358865d4238e9a", "filename": "gcc/config/aarch64/aarch64-tune.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9eedb8ac2e904880da8d1e3c87a3557c38a04f/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9eedb8ac2e904880da8d1e3c87a3557c38a04f/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md?ref=cd9eedb8ac2e904880da8d1e3c87a3557c38a04f", "patch": "@@ -1,5 +1,5 @@\n ;; -*- buffer-read-only: t -*-\n ;; Generated automatically by gentune.sh from aarch64-cores.def\n (define_attr \"tune\"\n-\t\"cortexa34,cortexa35,cortexa53,cortexa57,cortexa72,cortexa73,thunderx,thunderxt88p1,thunderxt88,octeontx,octeontxt81,octeontxt83,thunderxt81,thunderxt83,ampere1,emag,xgene1,falkor,qdf24xx,exynosm1,phecda,thunderx2t99p1,vulcan,thunderx2t99,cortexa55,cortexa75,cortexa76,cortexa76ae,cortexa77,cortexa78,cortexa78ae,cortexa78c,cortexa65,cortexa65ae,cortexx1,ares,neoversen1,neoversee1,octeontx2,octeontx2t98,octeontx2t96,octeontx2t93,octeontx2f95,octeontx2f95n,octeontx2f95mm,a64fx,tsv110,thunderx3t110,zeus,neoversev1,neoverse512tvb,saphira,cortexa57cortexa53,cortexa72cortexa53,cortexa73cortexa35,cortexa73cortexa53,cortexa75cortexa55,cortexa76cortexa55,cortexr82,cortexa510,cortexa710,cortexx2,neoversen2,demeter,neoversev2\"\n+\t\"cortexa34,cortexa35,cortexa53,cortexa57,cortexa72,cortexa73,thunderx,thunderxt88p1,thunderxt88,octeontx,octeontxt81,octeontxt83,thunderxt81,thunderxt83,ampere1,emag,xgene1,falkor,qdf24xx,exynosm1,phecda,thunderx2t99p1,vulcan,thunderx2t99,cortexa55,cortexa75,cortexa76,cortexa76ae,cortexa77,cortexa78,cortexa78ae,cortexa78c,cortexa65,cortexa65ae,cortexx1,ares,neoversen1,neoversee1,octeontx2,octeontx2t98,octeontx2t96,octeontx2t93,octeontx2f95,octeontx2f95n,octeontx2f95mm,a64fx,tsv110,thunderx3t110,zeus,neoversev1,neoverse512tvb,saphira,cortexa57cortexa53,cortexa72cortexa53,cortexa73cortexa35,cortexa73cortexa53,cortexa75cortexa55,cortexa76cortexa55,cortexr82,cortexa510,cortexa710,cortexa715,cortexx2,neoversen2,demeter,neoversev2\"\n \t(const (symbol_ref \"((enum attr_tune) aarch64_tune)\")))"}, {"sha": "2e1bd6dbfb1fcff53dd562ec5e8923d0a21cf715", "filename": "gcc/doc/gcc/gcc-command-options/machine-dependent-options/aarch64-options.rst", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9eedb8ac2e904880da8d1e3c87a3557c38a04f/gcc%2Fdoc%2Fgcc%2Fgcc-command-options%2Fmachine-dependent-options%2Faarch64-options.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9eedb8ac2e904880da8d1e3c87a3557c38a04f/gcc%2Fdoc%2Fgcc%2Fgcc-command-options%2Fmachine-dependent-options%2Faarch64-options.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcc%2Fgcc-command-options%2Fmachine-dependent-options%2Faarch64-options.rst?ref=cd9eedb8ac2e904880da8d1e3c87a3557c38a04f", "patch": "@@ -258,7 +258,8 @@ These options are defined for AArch64 implementations:\n   :samp:`cortex-a73.cortex-a35`, :samp:`cortex-a73.cortex-a53`,\n   :samp:`cortex-a75.cortex-a55`, :samp:`cortex-a76.cortex-a55`,\n   :samp:`cortex-r82`, :samp:`cortex-x1`, :samp:`cortex-x2`,\n-  :samp:`cortex-a510`, :samp:`cortex-a710`, :samp:`ampere1`, :samp:`native`.\n+  :samp:`cortex-a510`, :samp:`cortex-a710`, :samp:`cortex-a715`, :samp:`ampere1`,\n+  :samp:`native`.\n \n   The values :samp:`cortex-a57.cortex-a53`, :samp:`cortex-a72.cortex-a53`,\n   :samp:`cortex-a73.cortex-a35`, :samp:`cortex-a73.cortex-a53`,"}]}