{"sha": "06302a02c05eeaeea9e8597dfc6ed3d0e0085357", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYzMDJhMDJjMDVlZWFlZWE5ZTg1OTdkZmM2ZWQzZDBlMDA4NTM1Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-10-27T15:50:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-10-27T15:50:50Z"}, "message": "re PR c/41842 (ICE on invalid variable length array declaration)\n\n\tPR c/41842\n\t* c-typeck.c (convert_arguments): Return -1 if any of the arguments is\n\terror_mark_node.\n\n\t* gcc.dg/pr41842.c: New test.\n\nFrom-SVN: r153599", "tree": {"sha": "522ccf534520423c5fa756e2c5fe5d52a6ed93a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/522ccf534520423c5fa756e2c5fe5d52a6ed93a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06302a02c05eeaeea9e8597dfc6ed3d0e0085357", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06302a02c05eeaeea9e8597dfc6ed3d0e0085357", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06302a02c05eeaeea9e8597dfc6ed3d0e0085357", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06302a02c05eeaeea9e8597dfc6ed3d0e0085357/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b57d8e6f0c9b54102f8c96798e652283ca603814", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b57d8e6f0c9b54102f8c96798e652283ca603814", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b57d8e6f0c9b54102f8c96798e652283ca603814"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "d8518c07ddada6e397857965912714b636544ae4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06302a02c05eeaeea9e8597dfc6ed3d0e0085357/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06302a02c05eeaeea9e8597dfc6ed3d0e0085357/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=06302a02c05eeaeea9e8597dfc6ed3d0e0085357", "patch": "@@ -1,3 +1,9 @@\n+2009-10-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/41842\n+\t* c-typeck.c (convert_arguments): Return -1 if any of the arguments is\n+\terror_mark_node.\n+\n 2009-10-27  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-complex.c (expand_complex_div_wide): Check for"}, {"sha": "9b1f09c459329099c0b6efc1e403cb62db515247", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06302a02c05eeaeea9e8597dfc6ed3d0e0085357/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06302a02c05eeaeea9e8597dfc6ed3d0e0085357/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=06302a02c05eeaeea9e8597dfc6ed3d0e0085357", "patch": "@@ -2739,6 +2739,7 @@ convert_arguments (tree typelist, VEC(tree,gc) *values,\n {\n   tree typetail, val;\n   unsigned int parmnum;\n+  bool error_args = false;\n   const bool type_generic = fundecl\n     && lookup_attribute (\"type generic\", TYPE_ATTRIBUTES(TREE_TYPE (fundecl)));\n   bool type_generic_remove_excess_precision = false;\n@@ -3008,6 +3009,8 @@ convert_arguments (tree typelist, VEC(tree,gc) *values,\n \tparmval = default_conversion (val);\n \n       VEC_replace (tree, values, parmnum, parmval);\n+      if (parmval == error_mark_node)\n+\terror_args = true;\n \n       if (typetail)\n \ttypetail = TREE_CHAIN (typetail);\n@@ -3021,7 +3024,7 @@ convert_arguments (tree typelist, VEC(tree,gc) *values,\n       return -1;\n     }\n \n-  return parmnum;\n+  return error_args ? -1 : (int) parmnum;\n }\n \f\n /* This is the entry point used by the parser to build unary operators"}, {"sha": "1ded94269f70fca08f30c5e7bc3002bc31e7e88b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06302a02c05eeaeea9e8597dfc6ed3d0e0085357/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06302a02c05eeaeea9e8597dfc6ed3d0e0085357/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=06302a02c05eeaeea9e8597dfc6ed3d0e0085357", "patch": "@@ -1,3 +1,8 @@\n+2009-10-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/41842\n+\t* gcc.dg/pr41842.c: New test.\n+\n 2009-10-27  Revital Eres  <eres@il.ibm.com>\n \n \tPR tree-optimization/40648"}, {"sha": "fa7edd11eccc0f0484d5fb8a3f9c0ae528c0f0bc", "filename": "gcc/testsuite/gcc.dg/pr41842.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06302a02c05eeaeea9e8597dfc6ed3d0e0085357/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41842.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06302a02c05eeaeea9e8597dfc6ed3d0e0085357/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41842.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41842.c?ref=06302a02c05eeaeea9e8597dfc6ed3d0e0085357", "patch": "@@ -0,0 +1,8 @@\n+/* PR c/41842 */\n+/* { dg-do compile } */\n+\n+void\n+f ()\n+{\n+  char x[g (h)];\t/* { dg-error \"undeclared|for each function\" } */\n+}"}]}