{"sha": "57694e401114cd1f5271bd329b614bdbf5e9bfe1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc2OTRlNDAxMTE0Y2QxZjUyNzFiZDMyOWI2MTRiZGJmNWU5YmZlMQ==", "commit": {"author": {"name": "Matt Kraai", "email": "kraai@alumni.cmu.edu", "date": "2002-06-27T17:19:06Z"}, "committer": {"name": "Matt Kraai", "email": "kraai@gcc.gnu.org", "date": "2002-06-27T17:19:06Z"}, "message": "install.texi: Change ` bit' to `-bit'.\n\n\t* doc/install.texi: Change ` bit' to `-bit'.\n\t* doc/md.texi: Change `-bits' to `-bit'.\n\t* doc/tm.texi: Change `-bits' to ` bits'.\n\nFrom-SVN: r55033", "tree": {"sha": "c48e1c46524687e5ae9b21fbf7d5016b62cf99a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c48e1c46524687e5ae9b21fbf7d5016b62cf99a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57694e401114cd1f5271bd329b614bdbf5e9bfe1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57694e401114cd1f5271bd329b614bdbf5e9bfe1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57694e401114cd1f5271bd329b614bdbf5e9bfe1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57694e401114cd1f5271bd329b614bdbf5e9bfe1/comments", "author": null, "committer": null, "parents": [{"sha": "c635a1ec844af64c920e115dde6901f37cbf00af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c635a1ec844af64c920e115dde6901f37cbf00af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c635a1ec844af64c920e115dde6901f37cbf00af"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "ca5317d09cda27307336c5580c484db577e22981", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57694e401114cd1f5271bd329b614bdbf5e9bfe1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57694e401114cd1f5271bd329b614bdbf5e9bfe1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=57694e401114cd1f5271bd329b614bdbf5e9bfe1", "patch": "@@ -1,3 +1,9 @@\n+2002-06-27  Matt Kraai  <kraai@alumni.cmu.edu>\n+\n+\t* doc/install.texi: Change ` bit' to `-bit'.\n+\t* doc/md.texi: Change `-bits' to `-bit'.\n+\t* doc/tm.texi: Change `-bits' to ` bits'.\n+\n 2002-06-27  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* gcse.c (hoist_code): Rewrite to only get list of dominated"}, {"sha": "046cc81c15b95a3f4caadd5df2dea158d21817f7", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57694e401114cd1f5271bd329b614bdbf5e9bfe1/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57694e401114cd1f5271bd329b614bdbf5e9bfe1/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=57694e401114cd1f5271bd329b614bdbf5e9bfe1", "patch": "@@ -2693,7 +2693,7 @@ its maximum of 262144 bytes.  If you have root access, you can use the\n GCC does not correctly pass/return structures which are\n smaller than 16 bytes and which are not 8 bytes.  The problem is very\n involved and difficult to fix.  It affects a number of other targets also,\n-but IRIX 6 is affected the most, because it is a 64 bit target, and 4 byte\n+but IRIX 6 is affected the most, because it is a 64-bit target, and 4 byte\n structures are common.  The exact problem is that structures are being padded\n at the wrong end, e.g.@: a 4 byte structure is loaded into the lower 4 bytes\n of the register when it should be loaded into the upper 4 bytes of the\n@@ -2843,7 +2843,7 @@ S/390 system running Linux for S/390@.\n <hr>\n @end html\n @heading @anchor{s390x-*-linux*}s390x-*-linux*\n-zSeries system (64 Bit) running Linux for zSeries@.\n+zSeries system (64-bit) running Linux for zSeries@.\n \n @html\n </p>\n@@ -3124,7 +3124,7 @@ respects, this target is the same as the\n </p>\n <hr>\n @end html\n-@heading @anchor{windows}Microsoft Windows (32 bit)\n+@heading @anchor{windows}Microsoft Windows (32-bit)\n \n A port of GCC 2.95.x is included with the\n @uref{http://www.cygwin.com/,,Cygwin environment}."}, {"sha": "7c33f3230fb9579f493699125e37e5adf7ebdb1e", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57694e401114cd1f5271bd329b614bdbf5e9bfe1/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57694e401114cd1f5271bd329b614bdbf5e9bfe1/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=57694e401114cd1f5271bd329b614bdbf5e9bfe1", "patch": "@@ -1932,7 +1932,7 @@ A constant in the range supported by @code{movrcc} instructions\n \n @item N\n Same as @samp{K}, except that it verifies that bits that are not in the\n-lower 32-bits range are all zero.  Must be used instead of @samp{K} for\n+lower 32-bit range are all zero.  Must be used instead of @samp{K} for\n modes wider than @code{SImode}\n \n @item G"}, {"sha": "daebec717a6f006751f04763b077dd7c175648f5", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57694e401114cd1f5271bd329b614bdbf5e9bfe1/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57694e401114cd1f5271bd329b614bdbf5e9bfe1/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=57694e401114cd1f5271bd329b614bdbf5e9bfe1", "patch": "@@ -2550,9 +2550,9 @@ A C expression that is true if, for a register in\n @code{CLASS_CANNOT_CHANGE_MODE}, the requested mode punning is invalid.\n \n For the example, loading 32-bit integer or floating-point objects into\n-floating-point registers on the Alpha extends them to 64-bits.\n+floating-point registers on the Alpha extends them to 64 bits.\n Therefore loading a 64-bit object and then storing it as a 32-bit object\n-does not store the low-order 32-bits, as would be the case for a normal\n+does not store the low-order 32 bits, as would be the case for a normal\n register.  Therefore, @file{alpha.h} defines @code{CLASS_CANNOT_CHANGE_MODE}\n as @code{FLOAT_REGS} and @code{CLASS_CANNOT_CHANGE_MODE_P} restricts\n mode changes to same-size modes."}]}