{"sha": "7c26172cf755ee765e45e8c0b3a8313a86995fe8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MyNjE3MmNmNzU1ZWU3NjVlNDVlOGMwYjNhODMxM2E4Njk5NWZlOA==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2013-09-04T10:52:35Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2013-09-04T10:52:35Z"}, "message": "c-pretty-print.h (c_pretty_printer::simple_type_specifier): Now a virtual member function.\n\nc-family/\n\t* c-pretty-print.h (c_pretty_printer::simple_type_specifier): Now\n\ta virtual member function.\n\t(pp_simple_type_specifier): Remove.\n\t(pp_c_type_specifier): Likewise.\n\t* c-pretty-print.c (c_pretty_printer::simple_type_specifier):\n\tRename from pp_c_type_specifier.  Adjust.\n\t(c_pretty_printer::c_pretty_printer): Do not assign to\n\tsimple_type_specifier.\ncp/\n\t* cxx-pretty-print.h (cxx_pretty_printer::simple_type_specifier):\n\tDeclare as overrider.\n\t* cxx-pretty-print.c (cxx_pretty_printer::simple_type_specifier):\n\tRename from pp_cxx_simple_type_specifier.\n\t(cxx_pretty_printer::cxx_pretty_printer): Do not assign to\n\tsimple_type_specifier.\n\nFrom-SVN: r202247", "tree": {"sha": "0fe4c66827ae72052a1e69520bb44f84627eeace", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fe4c66827ae72052a1e69520bb44f84627eeace"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c26172cf755ee765e45e8c0b3a8313a86995fe8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c26172cf755ee765e45e8c0b3a8313a86995fe8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c26172cf755ee765e45e8c0b3a8313a86995fe8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c26172cf755ee765e45e8c0b3a8313a86995fe8/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5f3783a66971f26fd9b6e6e1fbfc6b9c030a7c6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f3783a66971f26fd9b6e6e1fbfc6b9c030a7c6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f3783a66971f26fd9b6e6e1fbfc6b9c030a7c6f"}], "stats": {"total": 98, "additions": 59, "deletions": 39}, "files": [{"sha": "2a0c4061198a5930a2701689257c25fa8f0dd047", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c26172cf755ee765e45e8c0b3a8313a86995fe8/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c26172cf755ee765e45e8c0b3a8313a86995fe8/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=7c26172cf755ee765e45e8c0b3a8313a86995fe8", "patch": "@@ -1,3 +1,14 @@\n+2013-09-04  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* c-pretty-print.h (c_pretty_printer::simple_type_specifier): Now\n+\ta virtual member function.\n+\t(pp_simple_type_specifier): Remove.\n+\t(pp_c_type_specifier): Likewise.\n+\t* c-pretty-print.c (c_pretty_printer::simple_type_specifier):\n+\tRename from pp_c_type_specifier.  Adjust.\n+\t(c_pretty_printer::c_pretty_printer): Do not assign to\n+\tsimple_type_specifier.\n+\n 2013-09-03  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* c-pretty-print.h (c_pretty_printer::type_id): Now a virtual"}, {"sha": "d0283e8af4d427fa79035f26cb3b3cae9bfc47ac", "filename": "gcc/c-family/c-pretty-print.c", "status": "modified", "additions": 28, "deletions": 26, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c26172cf755ee765e45e8c0b3a8313a86995fe8/gcc%2Fc-family%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c26172cf755ee765e45e8c0b3a8313a86995fe8/gcc%2Fc-family%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pretty-print.c?ref=7c26172cf755ee765e45e8c0b3a8313a86995fe8", "patch": "@@ -305,7 +305,10 @@ pp_c_pointer (c_pretty_printer *pp, tree t)\n     }\n }\n \n-/* type-specifier:\n+/* simple-type-specifier:\n+     type-specifier\n+\n+   type-specifier:\n       void\n       char\n       short\n@@ -328,17 +331,17 @@ pp_c_pointer (c_pretty_printer *pp, tree t)\n       __vector__   */\n \n void\n-pp_c_type_specifier (c_pretty_printer *pp, tree t)\n+c_pretty_printer::simple_type_specifier (tree t)\n {\n   const enum tree_code code = TREE_CODE (t);\n   switch (code)\n     {\n     case ERROR_MARK:\n-      pp->translate_string (\"<type-error>\");\n+      translate_string (\"<type-error>\");\n       break;\n \n     case IDENTIFIER_NODE:\n-      pp_c_identifier (pp, IDENTIFIER_POINTER (t));\n+      pp_c_identifier (this, IDENTIFIER_POINTER (t));\n       break;\n \n     case VOID_TYPE:\n@@ -349,7 +352,7 @@ pp_c_type_specifier (c_pretty_printer *pp, tree t)\n       if (TYPE_NAME (t))\n \t{\n \t  t = TYPE_NAME (t);\n-\t  pp_c_type_specifier (pp, t);\n+\t  simple_type_specifier (t);\n \t}\n       else\n \t{\n@@ -360,64 +363,64 @@ pp_c_type_specifier (c_pretty_printer *pp, tree t)\n \t    t = c_common_type_for_mode (TYPE_MODE (t), TYPE_UNSIGNED (t));\n \t  if (TYPE_NAME (t))\n \t    {\n-\t      pp_c_type_specifier (pp, t);\n+\t      simple_type_specifier (t);\n \t      if (TYPE_PRECISION (t) != prec)\n \t\t{\n-\t\t  pp_colon (pp);\n-\t\t  pp_decimal_int (pp, prec);\n+\t\t  pp_colon (this);\n+\t\t  pp_decimal_int (this, prec);\n \t\t}\n \t    }\n \t  else\n \t    {\n \t      switch (code)\n \t\t{\n \t\tcase INTEGER_TYPE:\n-\t\t  pp->translate_string (TYPE_UNSIGNED (t)\n-                                        ? \"<unnamed-unsigned:\"\n-                                        : \"<unnamed-signed:\");\n+\t\t  translate_string (TYPE_UNSIGNED (t)\n+                                    ? \"<unnamed-unsigned:\"\n+                                    : \"<unnamed-signed:\");\n \t\t  break;\n \t\tcase REAL_TYPE:\n-\t\t  pp->translate_string (\"<unnamed-float:\");\n+\t\t  translate_string (\"<unnamed-float:\");\n \t\t  break;\n \t\tcase FIXED_POINT_TYPE:\n-\t\t  pp->translate_string (\"<unnamed-fixed:\");\n+\t\t  translate_string (\"<unnamed-fixed:\");\n \t\t  break;\n \t\tdefault:\n \t\t  gcc_unreachable ();\n \t\t}\n-\t      pp_decimal_int (pp, prec);\n-\t      pp_greater (pp);\n+\t      pp_decimal_int (this, prec);\n+\t      pp_greater (this);\n \t    }\n \t}\n       break;\n \n     case TYPE_DECL:\n       if (DECL_NAME (t))\n-\tpp->id_expression (t);\n+\tid_expression (t);\n       else\n-\tpp->translate_string (\"<typedef-error>\");\n+\ttranslate_string (\"<typedef-error>\");\n       break;\n \n     case UNION_TYPE:\n     case RECORD_TYPE:\n     case ENUMERAL_TYPE:\n       if (code == UNION_TYPE)\n-\tpp_c_ws_string (pp, \"union\");\n+\tpp_c_ws_string (this, \"union\");\n       else if (code == RECORD_TYPE)\n-\tpp_c_ws_string (pp, \"struct\");\n+\tpp_c_ws_string (this, \"struct\");\n       else if (code == ENUMERAL_TYPE)\n-\tpp_c_ws_string (pp, \"enum\");\n+\tpp_c_ws_string (this, \"enum\");\n       else\n-\tpp->translate_string (\"<tag-error>\");\n+\ttranslate_string (\"<tag-error>\");\n \n       if (TYPE_NAME (t))\n-\tpp->id_expression (TYPE_NAME (t));\n+\tid_expression (TYPE_NAME (t));\n       else\n-\tpp->translate_string (\"<anonymous>\");\n+\ttranslate_string (\"<anonymous>\");\n       break;\n \n     default:\n-      pp_unsupported_tree (pp, t);\n+      pp_unsupported_tree (this, t);\n       break;\n     }\n }\n@@ -483,7 +486,7 @@ pp_c_specifier_qualifier_list (c_pretty_printer *pp, tree t)\n       break;\n \n     default:\n-      pp_simple_type_specifier (pp, t);\n+      pp->simple_type_specifier (t);\n       break;\n     }\n   if ((pp->flags & pp_c_flag_gnu_v3) && code != POINTER_TYPE)\n@@ -2328,7 +2331,6 @@ c_pretty_printer::c_pretty_printer ()\n   type_specifier_seq        = pp_c_specifier_qualifier_list;\n   ptr_operator              = pp_c_pointer;\n   parameter_list            = pp_c_parameter_type_list;\n-  simple_type_specifier     = pp_c_type_specifier;\n }\n \n "}, {"sha": "aa046e51dad458951f28179a96acb8b1e17023e4", "filename": "gcc/c-family/c-pretty-print.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c26172cf755ee765e45e8c0b3a8313a86995fe8/gcc%2Fc-family%2Fc-pretty-print.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c26172cf755ee765e45e8c0b3a8313a86995fe8/gcc%2Fc-family%2Fc-pretty-print.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pretty-print.h?ref=7c26172cf755ee765e45e8c0b3a8313a86995fe8", "patch": "@@ -69,6 +69,7 @@ struct c_pretty_printer : pretty_printer\n \n   virtual void declaration (tree);\n   virtual void declaration_specifiers (tree);\n+  virtual void simple_type_specifier (tree);\n   virtual void function_specifier (tree);\n   virtual void storage_class_specifier (tree);\n   virtual void declarator (tree);\n@@ -88,7 +89,6 @@ struct c_pretty_printer : pretty_printer\n   c_pretty_print_fn type_specifier_seq;\n   c_pretty_print_fn ptr_operator;\n   c_pretty_print_fn parameter_list;\n-  c_pretty_print_fn simple_type_specifier;\n };\n \n #define pp_c_tree_identifier(PPI, ID)              \\\n@@ -97,7 +97,6 @@ struct c_pretty_printer : pretty_printer\n #define pp_type_specifier_seq(PP, D)    (PP)->type_specifier_seq (PP, D)\n #define pp_ptr_operator(PP, D)          (PP)->ptr_operator (PP, D)\n #define pp_parameter_list(PP, T)        (PP)->parameter_list (PP, T)\n-#define pp_simple_type_specifier(PP, T) (PP)->simple_type_specifier (PP, T)\n \n void pp_c_whitespace (c_pretty_printer *);\n void pp_c_left_paren (c_pretty_printer *);\n@@ -124,7 +123,6 @@ void pp_c_cv_qualifiers (c_pretty_printer *pp, int qualifiers, bool func_type);\n void pp_c_type_qualifier_list (c_pretty_printer *, tree);\n void pp_c_parameter_type_list (c_pretty_printer *, tree);\n void pp_c_specifier_qualifier_list (c_pretty_printer *, tree);\n-void pp_c_type_specifier (c_pretty_printer *, tree);\n /* Expressions.  */\n void pp_c_logical_or_expression (c_pretty_printer *, tree);\n void pp_c_expression_list (c_pretty_printer *, tree);"}, {"sha": "db4cd660af3752ef8680a0b29d188d8bc62e1268", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c26172cf755ee765e45e8c0b3a8313a86995fe8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c26172cf755ee765e45e8c0b3a8313a86995fe8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7c26172cf755ee765e45e8c0b3a8313a86995fe8", "patch": "@@ -1,3 +1,12 @@\n+2013-09-04  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* cxx-pretty-print.h (cxx_pretty_printer::simple_type_specifier):\n+\tDeclare as overrider.\n+\t* cxx-pretty-print.c (cxx_pretty_printer::simple_type_specifier):\n+\tRename from pp_cxx_simple_type_specifier.\n+\t(cxx_pretty_printer::cxx_pretty_printer): Do not assign to\n+\tsimple_type_specifier.\n+\n 2013-09-03  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/58305"}, {"sha": "4578a5b0b059b93f61cd11d45b528bb3ea904897", "filename": "gcc/cp/cxx-pretty-print.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c26172cf755ee765e45e8c0b3a8313a86995fe8/gcc%2Fcp%2Fcxx-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c26172cf755ee765e45e8c0b3a8313a86995fe8/gcc%2Fcp%2Fcxx-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.c?ref=7c26172cf755ee765e45e8c0b3a8313a86995fe8", "patch": "@@ -1249,32 +1249,32 @@ cxx_pretty_printer::declaration_specifiers (tree t)\n       double\n       void  */\n \n-static void\n-pp_cxx_simple_type_specifier (cxx_pretty_printer *pp, tree t)\n+void\n+cxx_pretty_printer::simple_type_specifier (tree t)\n {\n   switch (TREE_CODE (t))\n     {\n     case RECORD_TYPE:\n     case UNION_TYPE:\n     case ENUMERAL_TYPE:\n-      pp_cxx_qualified_id (pp, t);\n+      pp_cxx_qualified_id (this, t);\n       break;\n \n     case TEMPLATE_TYPE_PARM:\n     case TEMPLATE_TEMPLATE_PARM:\n     case TEMPLATE_PARM_INDEX:\n     case BOUND_TEMPLATE_TEMPLATE_PARM:\n-      pp_cxx_unqualified_id (pp, t);\n+      pp_cxx_unqualified_id (this, t);\n       break;\n \n     case TYPENAME_TYPE:\n-      pp_cxx_ws_string (pp, \"typename\");\n-      pp_cxx_nested_name_specifier (pp, TYPE_CONTEXT (t));\n-      pp_cxx_unqualified_id (pp, TYPE_NAME (t));\n+      pp_cxx_ws_string (this, \"typename\");\n+      pp_cxx_nested_name_specifier (this, TYPE_CONTEXT (t));\n+      pp_cxx_unqualified_id (this, TYPE_NAME (t));\n       break;\n \n     default:\n-      pp_c_type_specifier (pp, t);\n+      c_pretty_printer::simple_type_specifier (t);\n       break;\n     }\n }\n@@ -1300,7 +1300,7 @@ pp_cxx_type_specifier_seq (cxx_pretty_printer *pp, tree t)\n     case TYPE_DECL:\n     case BOUND_TEMPLATE_TEMPLATE_PARM:\n       pp_cxx_cv_qualifier_seq (pp, t);\n-      pp_cxx_simple_type_specifier (pp, t);\n+      pp->simple_type_specifier (t);\n       break;\n \n     case METHOD_TYPE:\n@@ -2427,5 +2427,4 @@ cxx_pretty_printer::cxx_pretty_printer ()\n \n   type_specifier_seq = (pp_fun) pp_cxx_type_specifier_seq;\n   parameter_list = (pp_fun) pp_cxx_parameter_declaration_clause;\n-  simple_type_specifier = (pp_fun) pp_cxx_simple_type_specifier;\n }"}, {"sha": "819bbacae7584dcddcbb56e6533f2aaac8a1efd0", "filename": "gcc/cp/cxx-pretty-print.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c26172cf755ee765e45e8c0b3a8313a86995fe8/gcc%2Fcp%2Fcxx-pretty-print.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c26172cf755ee765e45e8c0b3a8313a86995fe8/gcc%2Fcp%2Fcxx-pretty-print.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.h?ref=7c26172cf755ee765e45e8c0b3a8313a86995fe8", "patch": "@@ -46,6 +46,7 @@ struct cxx_pretty_printer : c_pretty_printer\n   void statement (tree);\n   void declaration (tree);\n   void declaration_specifiers (tree);\n+  void simple_type_specifier (tree);\n   void function_specifier (tree);\n   void declarator (tree);\n   void direct_declarator (tree);"}]}