{"sha": "8448880117087e77aaf6bcfc4398f4b0442db1b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ0ODg4MDExNzA4N2U3N2FhZjZiY2ZjNDM5OGY0YjA0NDJkYjFiMQ==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2014-12-18T15:20:11Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2014-12-18T15:20:11Z"}, "message": "[AArch64] Simplify+improve patterns for ushr(d?)_n_u64 intrinsic\n\ngcc/:\n\t* config/aarch64/aarch64-simd.md (aarch64_lshr_simddi): Handle shift\n\tby 64 by moving const0_rtx.\n\t(aarch64_ushr_simddi): Delete.\n\n\t* config/aarch64/aarch64.md (enum unspec): Delete UNSPEC_USHR64.\n\ngcc/testsuite/:\n\n        * gcc.target/aarch64/ushr64_1.c: Remove scan-assembler \"ushr...64\".\n\nFrom-SVN: r218868", "tree": {"sha": "6748c14b1a0f6ce0386167928ed111a611610ecc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6748c14b1a0f6ce0386167928ed111a611610ecc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8448880117087e77aaf6bcfc4398f4b0442db1b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8448880117087e77aaf6bcfc4398f4b0442db1b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8448880117087e77aaf6bcfc4398f4b0442db1b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8448880117087e77aaf6bcfc4398f4b0442db1b1/comments", "author": null, "committer": null, "parents": [{"sha": "b5b34d375969883ecb2de5d4912603faebc83299", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5b34d375969883ecb2de5d4912603faebc83299", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5b34d375969883ecb2de5d4912603faebc83299"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "1fd5b4f6f1a2ed0ebb811e1d0c191e6ad55cebde", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8448880117087e77aaf6bcfc4398f4b0442db1b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8448880117087e77aaf6bcfc4398f4b0442db1b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8448880117087e77aaf6bcfc4398f4b0442db1b1", "patch": "@@ -1,3 +1,11 @@\n+2014-12-18  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* config/aarch64/aarch64-simd.md (aarch64_lshr_simddi): Handle shift\n+\tby 64 by moving const0_rtx.\n+\t(aarch64_ushr_simddi): Delete.\n+\n+\t* config/aarch64/aarch64.md (enum unspec): Delete UNSPEC_USHR64.\n+\n 2014-12-18  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* config/aarch64/aarch64.md (enum \"unspec\"): Remove UNSPEC_SSHR64."}, {"sha": "52a1c3ba792adcaeaec9be4d8ada0f81bfa4714a", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8448880117087e77aaf6bcfc4398f4b0442db1b1/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8448880117087e77aaf6bcfc4398f4b0442db1b1/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=8448880117087e77aaf6bcfc4398f4b0442db1b1", "patch": "@@ -756,24 +756,13 @@\n   \"TARGET_SIMD\"\n   {\n     if (INTVAL (operands[2]) == 64)\n-      emit_insn (gen_aarch64_ushr_simddi (operands[0], operands[1]));\n+      emit_move_insn (operands[0], const0_rtx);\n     else\n       emit_insn (gen_lshrdi3 (operands[0], operands[1], operands[2]));\n     DONE;\n   }\n )\n \n-;; SIMD shift by 64.  This pattern is a special case as standard pattern does\n-;; not handle NEON shifts by 64.\n-(define_insn \"aarch64_ushr_simddi\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=w\")\n-        (unspec:DI\n-          [(match_operand:DI 1 \"register_operand\" \"w\")] UNSPEC_USHR64))]\n-  \"TARGET_SIMD\"\n-  \"ushr\\t%d0, %d1, 64\"\n-  [(set_attr \"type\" \"neon_shift_imm\")]\n-)\n-\n (define_expand \"vec_set<mode>\"\n   [(match_operand:VDQ_BHSI 0 \"register_operand\")\n    (match_operand:<VEL> 1 \"register_operand\")"}, {"sha": "12532c1675fa6e6a1e335be127ed3a8902e44b52", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8448880117087e77aaf6bcfc4398f4b0442db1b1/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8448880117087e77aaf6bcfc4398f4b0442db1b1/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=8448880117087e77aaf6bcfc4398f4b0442db1b1", "patch": "@@ -117,7 +117,6 @@\n     UNSPEC_TLS\n     UNSPEC_TLSDESC\n     UNSPEC_USHL_2S\n-    UNSPEC_USHR64\n     UNSPEC_VSTRUCTDUMMY\n     UNSPEC_SP_SET\n     UNSPEC_SP_TEST"}, {"sha": "f7e72ed7a848c2933c3c10826b99fa267cf433a6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8448880117087e77aaf6bcfc4398f4b0442db1b1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8448880117087e77aaf6bcfc4398f4b0442db1b1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8448880117087e77aaf6bcfc4398f4b0442db1b1", "patch": "@@ -1,3 +1,7 @@\n+2014-12-18  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* gcc.target/aarch64/ushr64_1.c: Remove scan-assembler \"ushr...64\".\n+\n 2014-12-18  Martin Liska  <mliska@suse.cz>\n \n \t* g++.dg/ipa/pr64146.C: New test."}, {"sha": "ee494894f6fb6f9cb354d836121a7bc6d0d2cdb6", "filename": "gcc/testsuite/gcc.target/aarch64/ushr64_1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8448880117087e77aaf6bcfc4398f4b0442db1b1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fushr64_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8448880117087e77aaf6bcfc4398f4b0442db1b1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fushr64_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fushr64_1.c?ref=8448880117087e77aaf6bcfc4398f4b0442db1b1", "patch": "@@ -42,7 +42,6 @@ test_vshrd_n_u64_0 (uint64_t passed, uint64_t expected)\n   return vshrd_n_u64 (passed, 0) != expected;\n }\n \n-/* { dg-final { scan-assembler-times \"ushr\\\\td\\[0-9\\]+, d\\[0-9\\]+, 64\" 2 } } */\n /* { dg-final { (scan-assembler-times \"ushr\\\\td\\[0-9\\]+, d\\[0-9\\]+, 4\" 2)  || \\\n    (scan-assembler-times \"lsr\\\\tx\\[0-9\\]+, x\\[0-9\\]+, 4\" 2) } } */\n /* { dg-final { scan-assembler-not \"ushr\\\\td\\[0-9\\]+, d\\[0-9\\]+, 0\" } } */"}]}