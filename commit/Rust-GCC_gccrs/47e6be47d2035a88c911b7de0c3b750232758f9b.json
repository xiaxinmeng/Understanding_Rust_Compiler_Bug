{"sha": "47e6be47d2035a88c911b7de0c3b750232758f9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdlNmJlNDdkMjAzNWE4OGM5MTFiN2RlMGMzYjc1MDIzMjc1OGY5Yg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-01-04T08:11:13Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-01-04T08:11:13Z"}, "message": "Warning fixes:\n\n        * mips-tdump.c (st_to_string, sc_to_string, glevel_to_string,\n        lang_to_string, type_to_string): Make return type const char*.\n        (print_symbol): Apply `const' keyword to a char*.\n        (print_file_desc): Cast structure member `crfd' to ulong when\n        comparing against one.\n        * mips-tfile.c (pfatal_with_name): Apply `const' keyword to char*.\n        (fatal, error): Add ATTRIBUTE_PRINTF_1 to prototypes.\n        (progname, input_name): Apply `const' keyword to a char*.\n        Don't redundantly include sys/stat.h.\n        (alloc_info): Apply `const' keyword to a char*.\n        (st_to_string, sc_to_string): Likewise.\n        (hash_string): Cast variable `hash_string' to a symint_t when\n        comparing against one.\n        (add_string): Cast PAGE_USIZE to Ptrdiff_t when comparing against one.\n        Likewise cast it to long when comparing against one.\n        (add_local_symbol): Apply `const' keyword to a char*.\n        (add_ext_symbol): Likewise.\n        (add_unknown_tag): Likewise.\n        (add_procedure): Cast a printf-style field width to an int.\n        (add_file): Cast PAGE_USIZE to long when comparing against one\n        (parse_begin): Cast a printf-style field width to an int.\n        (parse_bend): Likewise.\n        (parse_def): Likewise.\n        (parse_end): Likewise.\n        (mark_stabs): Mark parameter `start' with ATTRIBUTE_UNUSED.\n        (parse_stabs_common): Fix format specifier.\n        (parse_input): Change type of variable `i' to Size_t.\n        (write_object): Fix arguments to match format specifiers.\n        Cast variable `num_write' to long when comparing against one.\n        (read_seek): Cast variable `sys_read' to symint_t when comparing\n        against one.  Fix arguments to match format specifiers.  Cast\n        variable `size' to long when comparing against one.\n        (copy_object): Cast result of `sizeof' to int when comparing\n        against one.  Fix arguments to match format specifiers.  Cast\n        variable `ifd' to long when comparing against a signed value.\n        Likewise, likewise.\n\nFrom-SVN: r24479", "tree": {"sha": "46ef80d4c0cd8a7381791500ac467cb657ed6d73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46ef80d4c0cd8a7381791500ac467cb657ed6d73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47e6be47d2035a88c911b7de0c3b750232758f9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47e6be47d2035a88c911b7de0c3b750232758f9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47e6be47d2035a88c911b7de0c3b750232758f9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47e6be47d2035a88c911b7de0c3b750232758f9b/comments", "author": null, "committer": null, "parents": [{"sha": "736b02fdfa3d7c93a3693e2fa41acf6d3d65df8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/736b02fdfa3d7c93a3693e2fa41acf6d3d65df8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/736b02fdfa3d7c93a3693e2fa41acf6d3d65df8c"}], "stats": {"total": 185, "additions": 115, "deletions": 70}, "files": [{"sha": "9388cbbec7c7c220277dadc19972f3500991d302", "filename": "gcc/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47e6be47d2035a88c911b7de0c3b750232758f9b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47e6be47d2035a88c911b7de0c3b750232758f9b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47e6be47d2035a88c911b7de0c3b750232758f9b", "patch": "@@ -1,3 +1,43 @@\n+Mon Jan  4 11:01:48 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* mips-tdump.c (st_to_string, sc_to_string, glevel_to_string,\n+\tlang_to_string, type_to_string): Make return type const char*.\n+\t(print_symbol): Apply `const' keyword to a char*.\n+\t(print_file_desc): Cast structure member `crfd' to ulong when\n+\tcomparing against one.\n+\n+\t* mips-tfile.c (pfatal_with_name): Apply `const' keyword to char*.\n+\t(fatal, error): Add ATTRIBUTE_PRINTF_1 to prototypes.\n+\t(progname, input_name): Apply `const' keyword to a char*.\n+\tDon't redundantly include sys/stat.h.\n+\t(alloc_info): Apply `const' keyword to a char*.\n+\t(st_to_string, sc_to_string): Likewise.\n+\t(hash_string): Cast variable `hash_string' to a symint_t when\n+\tcomparing against one.\n+\t(add_string): Cast PAGE_USIZE to Ptrdiff_t when comparing against one.\n+\tLikewise cast it to long when comparing against one.\n+\t(add_local_symbol): Apply `const' keyword to a char*.\n+\t(add_ext_symbol): Likewise.\n+\t(add_unknown_tag): Likewise.\n+\t(add_procedure): Cast a printf-style field width to an int.\n+\t(add_file): Cast PAGE_USIZE to long when comparing against one\n+\t(parse_begin): Cast a printf-style field width to an int.\n+\t(parse_bend): Likewise.\n+\t(parse_def): Likewise.\n+\t(parse_end): Likewise.\n+\t(mark_stabs): Mark parameter `start' with ATTRIBUTE_UNUSED.\n+\t(parse_stabs_common): Fix format specifier.\n+\t(parse_input): Change type of variable `i' to Size_t.\n+\t(write_object): Fix arguments to match format specifiers.\n+\tCast variable `num_write' to long when comparing against one.\n+\t(read_seek): Cast variable `sys_read' to symint_t when comparing\n+ \tagainst one.  Fix arguments to match format specifiers.  Cast\n+\tvariable `size' to long when comparing against one.\n+\t(copy_object): Cast result of `sizeof' to int when comparing\n+\tagainst one.  Fix arguments to match format specifiers.  Cast\n+\tvariable `ifd' to long when comparing against a signed value.\n+\tLikewise, likewise.\n+\t\n Mon Jan  4 10:30:33 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* c-common.c (decl_attributes): Allow applying attribute `unused'"}, {"sha": "5877c56b7c8500b37099de21714954ce3edcf550", "filename": "gcc/mips-tdump.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47e6be47d2035a88c911b7de0c3b750232758f9b/gcc%2Fmips-tdump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47e6be47d2035a88c911b7de0c3b750232758f9b/gcc%2Fmips-tdump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tdump.c?ref=47e6be47d2035a88c911b7de0c3b750232758f9b", "patch": "@@ -78,7 +78,7 @@ xmalloc (size)\n   return value;\n }\n \n-/* Do to size_t being defined in sys/types.h and different\n+/* Due to size_t being defined in sys/types.h and different\n    in stddef.h, we have to do this by hand.....  Note, these\n    types are correct for MIPS based systems, and may not be\n    correct for other systems.  */\n@@ -269,11 +269,11 @@ void  print_file_desc\t__proto((FDR *, int));\n void  print_symbol\t__proto((SYMR *, int, char *, AUXU *, int, FDR *));\n void  print_aux\t\t__proto((AUXU, int, int));\n void  emit_aggregate\t__proto((char *, AUXU, AUXU, const char *, FDR *));\n-char *st_to_string\t__proto((st_t));\n-char *sc_to_string\t__proto((sc_t));\n-char *glevel_to_string\t__proto((glevel_t));\n-char *lang_to_string\t__proto((lang_t));\n-char *type_to_string\t__proto((AUXU *, int, FDR *));\n+const char *st_to_string\t__proto((st_t));\n+const char *sc_to_string\t__proto((sc_t));\n+const char *glevel_to_string\t__proto((glevel_t));\n+const char *lang_to_string\t__proto((lang_t));\n+const char *type_to_string\t__proto((AUXU *, int, FDR *));\n \n #ifndef __alpha\n # ifdef NEED_DECLARATION_MALLOC\n@@ -336,7 +336,7 @@ read_seek (ptr, size, offset, context)\n \f\n /* Convert language code to string format.  */\n \n-char *\n+const char *\n lang_to_string (lang)\n      lang_t lang;\n {\n@@ -359,7 +359,7 @@ lang_to_string (lang)\n \f\n /* Convert storage class to string.  */\n \n-char *\n+const char *\n sc_to_string(storage_class)\n      sc_t storage_class;\n {\n@@ -397,7 +397,7 @@ sc_to_string(storage_class)\n \f\n /* Convert symbol type to string.  */\n \n-char *\n+const char *\n st_to_string(symbol_type)\n      st_t symbol_type;\n {\n@@ -438,7 +438,7 @@ st_to_string(symbol_type)\n \f\n /* Convert debug level to string.  */\n \n-char *\n+const char *\n glevel_to_string (g_level)\n      glevel_t g_level;\n {\n@@ -456,7 +456,7 @@ glevel_to_string (g_level)\n \f\n /* Convert the type information to string format.  */\n \n-char *\n+const char *\n type_to_string (aux_ptr, index, fdp)\n      AUXU *aux_ptr;\n      int index;\n@@ -1025,7 +1025,7 @@ print_symbol (sym_ptr, number, strbase, aux_base, ifd, fdp)\n \t       scope_ptr != (scope_t *) 0;\n \t       scope_ptr = scope_ptr->prev)\n \t    {\n-\t      char *class;\n+\t      const char *class;\n \t      if (scope_ptr->st == st_Proc || scope_ptr->st == st_StaticProc)\n \t\tclass = \"func.\";\n \t      else if (scope_ptr->st == st_File)\n@@ -1057,7 +1057,7 @@ print_symbol (sym_ptr, number, strbase, aux_base, ifd, fdp)\n   if (MIPS_IS_STAB(sym_ptr))\n     {\n       register int i = sizeof(stab_names) / sizeof(stab_names[0]);\n-      char *stab_name = \"stab\";\n+      const char *stab_name = \"stab\";\n       short code = MIPS_UNMARK_STAB(sym_ptr->index);\n       while (--i >= 0)\n \tif (stab_names[i].code == code)\n@@ -1275,7 +1275,7 @@ print_file_desc (fdp, number)\n \t      (ulong) fdp->rfdBase);\n \n       rfd_ptr = rfile_desc + fdp->rfdBase;\n-      for (i = 0; i < fdp->crfd; i++)\n+      for (i = 0; i < (ulong) fdp->crfd; i++)\n \t{\n \t  printf (\"\\t#%-5ld %11ld, 0x%08lx\\n\", i, *rfd_ptr, *rfd_ptr);\n \t  rfd_ptr++;"}, {"sha": "eb47bc61714bf632141dd6abe43ce52541171e40", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 61, "deletions": 56, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47e6be47d2035a88c911b7de0c3b750232758f9b/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47e6be47d2035a88c911b7de0c3b750232758f9b/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=47e6be47d2035a88c911b7de0c3b750232758f9b", "patch": "@@ -633,22 +633,22 @@ typedef const PTR_T CPTR_T;\n    so they can't be static.  */\n \n extern void\tpfatal_with_name\n-\t\t\t\t__proto((char *));\n+\t\t\t\t__proto((const char *));\n extern void\tfancy_abort\t__proto((void));\n        void\tbotch\t\t__proto((const char *));\n extern void\txfree\t\t__proto((PTR));\n \n-extern void\tfatal\t\tPVPROTO((const char *format, ...));\n-extern void\terror\t\tPVPROTO((const char *format, ...));\n+extern void\tfatal\t\tPVPROTO((const char *format, ...)) ATTRIBUTE_PRINTF_1;\n+extern void\terror\t\tPVPROTO((const char *format, ...)) ATTRIBUTE_PRINTF_1;\n \f\n #ifndef MIPS_DEBUGGING_INFO\n \n static int\t line_number;\n static int\t cur_line_start;\n static int\t debug;\n static int\t had_errors;\n-static char\t*progname;\n-static char\t*input_name;\n+static const char *progname;\n+static const char *input_name;\n \n int\n main ()\n@@ -666,7 +666,6 @@ main ()\n #undef index\n \n #include <signal.h>\n-#include <sys/stat.h>\n \n #ifndef CROSS_COMPILE\n #include <a.out.h>\n@@ -1158,7 +1157,7 @@ typedef union page {\n \n /* Structure holding allocation information for small sized structures.  */\n typedef struct alloc_info {\n-  char\t\t*alloc_name;\t/* name of this allocation type (must be first) */\n+  const char\t*alloc_name;\t/* name of this allocation type (must be first) */\n   page_t\t*cur_page;\t/* current page being allocated from */\n   small_free_t\t free_list;\t/* current free list if any */\n   int\t\t unallocated;\t/* number of elements unallocated on page */\n@@ -1555,7 +1554,7 @@ static long\tmax_file_offset\t= 0;\t\t/* maximum file offset */\n static FILE    *object_stream\t= (FILE *) 0;\t/* file desc. to output .o */\n static FILE    *obj_in_stream\t= (FILE *) 0;\t/* file desc. to input .o */\n static char    *progname\t= (char *) 0;\t/* program name for errors */\n-static char    *input_name\t= \"stdin\";\t/* name of input file */\n+static const char *input_name\t= \"stdin\";\t/* name of input file */\n static char    *object_name\t= (char *) 0;\t/* tmp. name of object file */\n static char    *obj_in_name\t= (char *) 0;\t/* name of input object file */\n static char    *cur_line_start\t= (char *) 0;\t/* current line read in */\n@@ -1647,8 +1646,8 @@ STATIC void\tupdate_headers\t__proto((void));\n \n STATIC void\twrite_varray\t__proto((varray_t *, off_t, const char *));\n STATIC void\twrite_object\t__proto((void));\n-STATIC char    *st_to_string\t__proto((st_t));\n-STATIC char    *sc_to_string\t__proto((sc_t));\n+STATIC const char *st_to_string\t__proto((st_t));\n+STATIC const char *sc_to_string\t__proto((sc_t));\n STATIC char    *read_line\t__proto((void));\n STATIC void\tparse_input\t__proto((void));\n STATIC void\tmark_stabs\t__proto((const char *));\n@@ -1789,7 +1788,7 @@ hash_string (text, hash_len, hash_tbl, ret_hash_index)\n     *ret_hash_index = hi;\n \n   for (ptr = hash_tbl[hi]; ptr != (shash_t *) 0; ptr = ptr->next)\n-    if (hash_len == ptr->len\n+    if ((symint_t) hash_len == ptr->len\n \t&& first_ch == ptr->string[0]\n \t&& memcmp ((CPTR_T) text, (CPTR_T) ptr->string, hash_len) == 0)\n       break;\n@@ -1814,15 +1813,15 @@ add_string (vp, hash_tbl, start, end_p1, ret_hash)\n   register shash_t *hash_ptr;\n   symint_t hi;\n \n-  if (len >= PAGE_USIZE)\n+  if (len >= (Ptrdiff_t) PAGE_USIZE)\n     fatal (\"String too big (%ld bytes)\", (long) len);\n \n   hash_ptr = hash_string (start, len, hash_tbl, &hi);\n   if (hash_ptr == (shash_t *) 0)\n     {\n       register char *p;\n \n-      if (vp->objects_last_page + len >= PAGE_USIZE)\n+      if (vp->objects_last_page + len >= (long) PAGE_USIZE)\n \t{\n \t  vp->num_allocated\n \t    = ((vp->num_allocated + PAGE_USIZE - 1) / PAGE_USIZE) * PAGE_USIZE;\n@@ -2009,8 +2008,8 @@ add_local_symbol (str_start, str_end_p1, type, storage, value, indx)\n       && (debug > 2 || type == st_Block || type == st_End\n \t  || type == st_Proc || type == st_StaticProc))\n     {\n-      char *sc_str = sc_to_string (storage);\n-      char *st_str = st_to_string (type);\n+      const char *sc_str = sc_to_string (storage);\n+      const char *st_str = st_to_string (type);\n       int depth = cur_file_ptr->nested_scopes + (scope_delta < 0);\n \n       fprintf (stderr,\n@@ -2049,8 +2048,8 @@ add_ext_symbol (str_start, str_end_p1, type, storage, value, indx, ifd)\n \n   if (debug > 1)\n     {\n-      char *sc_str = sc_to_string (storage);\n-      char *st_str = st_to_string (type);\n+      const char *sc_str = sc_to_string (storage);\n+      const char *st_str = st_to_string (type);\n \n       fprintf (stderr,\n \t       \"\\tesym\\tv= %10ld, ifd= %2d, sc= %-12s\",\n@@ -2358,7 +2357,7 @@ add_unknown_tag (ptag)\n \n   if (debug > 1)\n     {\n-      char *agg_type\t= \"{unknown aggregate type}\";\n+      const char *agg_type = \"{unknown aggregate type}\";\n       switch (ptag->basic_type)\n \t{\n \tcase bt_Struct:\tagg_type = \"struct\";\tbreak;\n@@ -2452,7 +2451,8 @@ add_procedure (func_start, func_end_p1)\n     }\n \n   if (cur_oproc_ptr == (PDR *) 0)\n-    error (\"Did not find a PDR block for %.*s\", func_end_p1 - func_start, func_start);\n+    error (\"Did not find a PDR block for %.*s\",\n+\t   (int) (func_end_p1 - func_start), func_start);\n \n   /* Determine the start of symbols.  */\n   new_proc_ptr->isym = file_ptr->symbols.num_allocated;\n@@ -2519,7 +2519,7 @@ add_file (file_start, file_end_p1)\n \t\t  &zero_bytes[0],\n \t\t  (shash_t **) 0);\n \n-      if (file_end_p1 - file_start > PAGE_USIZE-2)\n+      if (file_end_p1 - file_start > (long) PAGE_USIZE-2)\n \tfatal (\"Filename goes over one page boundary.\");\n \n       /* Push the start of the filename. We assume that the filename\n@@ -2588,7 +2588,7 @@ add_bytes (vp, input_ptr, nitems)\n \f\n /* Convert storage class to string.  */\n \n-STATIC char *\n+STATIC const char *\n sc_to_string(storage_class)\n      sc_t storage_class;\n {\n@@ -2626,7 +2626,7 @@ sc_to_string(storage_class)\n \f\n /* Convert symbol type to string.  */\n \n-STATIC char *\n+STATIC const char *\n st_to_string(symbol_type)\n      st_t symbol_type;\n {\n@@ -2769,13 +2769,15 @@ parse_begin (start)\n \n   if (hash_ptr == (shash_t *) 0)\n     {\n-      error (\"Label %.*s not found for #.begin\", end_p1 - start, start);\n+      error (\"Label %.*s not found for #.begin\",\n+\t     (int) (end_p1 - start), start);\n       return;\n     }\n \n   if (cur_oproc_begin == (SYMR *) 0)\n     {\n-      error (\"Procedure table %.*s not found for #.begin\", end_p1 - start, start);\n+      error (\"Procedure table %.*s not found for #.begin\",\n+\t     (int) (end_p1 - start), start);\n       return;\n     }\n \n@@ -2819,13 +2821,14 @@ parse_bend (start)\n \n   if (hash_ptr == (shash_t *) 0)\n     {\n-      error (\"Label %.*s not found for #.bend\", end_p1 - start, start);\n+      error (\"Label %.*s not found for #.bend\", (int) (end_p1 - start), start);\n       return;\n     }\n \n   if (cur_oproc_begin == (SYMR *) 0)\n     {\n-      error (\"Procedure table %.*s not found for #.bend\", end_p1 - start, start);\n+      error (\"Procedure table %.*s not found for #.bend\",\n+\t     (int) (end_p1 - start), start);\n       return;\n     }\n \n@@ -3281,7 +3284,7 @@ parse_def (name_start)\n \t  if (tag_start == (char *) 0)\n \t    {\n \t      error (\"No tag specified for %.*s\",\n-\t\t     name_end_p1 - name_start,\n+\t\t     (int) (name_end_p1 - name_start),\n \t\t     name_start);\n \t      return;\n \t    }\n@@ -3471,7 +3474,8 @@ parse_end (start)\n     value = cur_oproc_end->value;\n \n   else\n-    error (\"Cannot find .end block for %.*s\", end_func_p1 - start_func, start_func);\n+    error (\"Cannot find .end block for %.*s\",\n+\t   (int) (end_func_p1 - start_func), start_func);\n \n   (void) add_local_symbol (start_func, end_func_p1,\n \t\t\t   st_End, sc_Text,\n@@ -3552,7 +3556,7 @@ parse_file (start)\n \n static void\n mark_stabs (start)\n-     const char *start;\t\t\t/* Start of directive (ignored) */\n+  const char *start ATTRIBUTE_UNUSED;\t/* Start of directive (ignored) */\n {\n   if (!stabs_seen)\n     {\n@@ -3650,7 +3654,7 @@ parse_stabs_common (string_start, string_end, rest)\n       dummy_symr.index = code;\n       if (dummy_symr.index != code)\n \t{\n-\t  error (\"Line number (%d) for .stabs/.stabn directive cannot fit in index field (20 bits)\",\n+\t  error (\"Line number (%lu) for .stabs/.stabn directive cannot fit in index field (20 bits)\",\n \t\t code);\n \n \t  return;\n@@ -3825,7 +3829,7 @@ STATIC void\n parse_input __proto((void))\n {\n   register char *p;\n-  register int i;\n+  register Size_t i;\n   register thead_t *ptag_head;\n   register tag_t *ptag;\n   register tag_t *ptag_next;\n@@ -4142,7 +4146,7 @@ write_object __proto((void))\n \n   else if (sys_write != sizeof (symbolic_header))\n     fatal (\"Wrote %d bytes to %s, system returned %d\",\n-\t   sizeof (symbolic_header),\n+\t   (int) sizeof (symbolic_header),\n \t   object_name,\n \t   sys_write);\n \n@@ -4175,8 +4179,8 @@ write_object __proto((void))\n \tpfatal_with_name (object_name);\n \n       else if (sys_write != symbolic_header.cbLine)\n-\tfatal (\"Wrote %d bytes to %s, system returned %d\",\n-\t       symbolic_header.cbLine,\n+\tfatal (\"Wrote %ld bytes to %s, system returned %ld\",\n+\t       (long) symbolic_header.cbLine,\n \t       object_name,\n \t       sys_write);\n \n@@ -4210,7 +4214,7 @@ write_object __proto((void))\n \tpfatal_with_name (object_name);\n \n       else if (sys_write != num_write)\n-\tfatal (\"Wrote %d bytes to %s, system returned %d\",\n+\tfatal (\"Wrote %ld bytes to %s, system returned %ld\",\n \t       num_write,\n \t       object_name,\n \t       sys_write);\n@@ -4303,7 +4307,7 @@ write_object __proto((void))\n \n \t  else if (sys_write != sizeof (FDR))\n \t    fatal (\"Wrote %d bytes to %s, system returned %d\",\n-\t\t   sizeof (FDR),\n+\t\t   (int) sizeof (FDR),\n \t\t   object_name,\n \t\t   sys_write);\n \n@@ -4337,8 +4341,8 @@ write_object __proto((void))\n       if (sys_write <= 0)\n \tpfatal_with_name (object_name);\n \n-      else if (sys_write != num_write)\n-\tfatal (\"Wrote %d bytes to %s, system returned %d\",\n+      else if (sys_write != (long)num_write)\n+\tfatal (\"Wrote %lu bytes to %s, system returned %ld\",\n \t       num_write,\n \t       object_name,\n \t       sys_write);\n@@ -4393,9 +4397,9 @@ read_seek (size, offset, str)\n \t  if (sys_read <= 0)\n \t    pfatal_with_name (obj_in_name);\n \n-\t  if (sys_read != difference)\n-\t    fatal (\"Wanted to read %d bytes from %s, system returned %d\",\n-\t\t   size,\n+\t  if ((symint_t)sys_read != difference)\n+\t    fatal (\"Wanted to read %lu bytes from %s, system returned %ld\",\n+\t\t   (unsigned long) size,\n \t\t   obj_in_name,\n \t\t   sys_read);\n \t}\n@@ -4407,9 +4411,9 @@ read_seek (size, offset, str)\n   if (sys_read <= 0)\n     pfatal_with_name (obj_in_name);\n \n-  if (sys_read != size)\n-    fatal (\"Wanted to read %d bytes from %s, system returned %d\",\n-\t   size,\n+  if (sys_read != (long) size)\n+    fatal (\"Wanted to read %lu bytes from %s, system returned %ld\",\n+\t   (unsigned long) size,\n \t   obj_in_name,\n \t   sys_read);\n \n@@ -4457,16 +4461,16 @@ copy_object __proto((void))\n   else if (sys_read == 0 && feof (obj_in_stream))\n     return;\t\t\t/* create a .T file sans file header */\n \n-  else if (sys_read < sizeof (struct filehdr))\n+  else if (sys_read < (int) sizeof (struct filehdr))\n     fatal (\"Wanted to read %d bytes from %s, system returned %d\",\n-\t   sizeof (struct filehdr),\n+\t   (int) sizeof (struct filehdr),\n \t   obj_in_name,\n \t   sys_read);\n \n \n   if (orig_file_header.f_nsyms != sizeof (HDRR))\n     fatal (\"%s symbolic header wrong size (%d bytes, should be %d)\",\n-\t   input_name, orig_file_header.f_nsyms, sizeof (HDRR));\n+\t   input_name, orig_file_header.f_nsyms, (int) sizeof (HDRR));\n \n \n   /* Read in the current symbolic header.  */\n@@ -4481,9 +4485,9 @@ copy_object __proto((void))\n   if (sys_read < 0)\n     pfatal_with_name (object_name);\n \n-  else if (sys_read < sizeof (struct filehdr))\n+  else if (sys_read < (int) sizeof (struct filehdr))\n     fatal (\"Wanted to read %d bytes from %s, system returned %d\",\n-\t   sizeof (struct filehdr),\n+\t   (int) sizeof (struct filehdr),\n \t   obj_in_name,\n \t   sys_read);\n \n@@ -4622,7 +4626,7 @@ copy_object __proto((void))\n \t\t\t     (sc_t) eptr->asym.sc,\n \t\t\t     eptr->asym.value,\n \t\t\t     (symint_t) ((eptr->asym.index == indexNil) ? indexNil : 0),\n-\t\t\t     (ifd < orig_sym_hdr.ifdMax) ? remap_file_number[ ifd ] : ifd);\n+\t\t\t     ((long) ifd < orig_sym_hdr.ifdMax) ? remap_file_number[ ifd ] : ifd);\n     }\n \n \n@@ -4774,7 +4778,8 @@ copy_object __proto((void))\n        remaining > 0;\n        remaining -= num_write)\n     {\n-      num_write = (remaining <= sizeof (buffer)) ? remaining : sizeof (buffer);\n+      num_write =\n+\t(remaining <= (int) sizeof (buffer)) ? remaining : sizeof (buffer);\n       sys_read = fread ((PTR_T) buffer, 1, num_write, obj_in_stream);\n       if (sys_read <= 0)\n \tpfatal_with_name (obj_in_name);\n@@ -4820,13 +4825,13 @@ main (argc, argv)\n #if !defined(__SABER__) && !defined(lint)\n   if (sizeof (efdr_t) > PAGE_USIZE)\n     fatal (\"Efdr_t has a sizeof %d bytes, when it should be less than %d\",\n-\t   sizeof (efdr_t),\n-\t   PAGE_USIZE);\n+\t   (int) sizeof (efdr_t),\n+\t   (int) PAGE_USIZE);\n \n   if (sizeof (page_t) != PAGE_USIZE)\n     fatal (\"Page_t has a sizeof %d bytes, when it should be %d\",\n-\t   sizeof (page_t),\n-\t   PAGE_USIZE);\n+\t   (int) sizeof (page_t),\n+\t   (int) PAGE_USIZE);\n \n #endif\n \n@@ -5055,7 +5060,7 @@ catch_signal (signum)\n \n void\n pfatal_with_name (msg)\n-     char *msg;\n+  const char *msg;\n {\n   int save_errno = errno;\t\t/* just in case....  */\n   if (line_number > 0)"}]}