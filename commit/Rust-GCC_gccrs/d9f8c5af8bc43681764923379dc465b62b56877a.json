{"sha": "d9f8c5af8bc43681764923379dc465b62b56877a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDlmOGM1YWY4YmM0MzY4MTc2NDkyMzM3OWRjNDY1YjYyYjU2ODc3YQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-04-06T13:42:24Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-04-06T13:42:24Z"}, "message": "Cherry-pick upstream r299036 from libsanitizer (PR sanitizer/80166).\n\n2017-04-06  Martin Liska  <mliska@suse.cz>\n\n\tPR sanitizer/80166\n\t* sanitizer_common/sanitizer_common_interceptors.inc (INTERCEPTOR):\n\tCherry-pick upstream r299036.\n2017-04-06  Martin Liska  <mliska@suse.cz>\n\n\tPR sanitizer/80166\n\t* gcc.dg/asan/pr80166.c: New test.\n\nFrom-SVN: r246730", "tree": {"sha": "bc786c4ef7e28f7d3edd576fc6f983b0029dbabc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc786c4ef7e28f7d3edd576fc6f983b0029dbabc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9f8c5af8bc43681764923379dc465b62b56877a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9f8c5af8bc43681764923379dc465b62b56877a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9f8c5af8bc43681764923379dc465b62b56877a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9f8c5af8bc43681764923379dc465b62b56877a/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b68991f4df584c31d976f5a4ece641bcbe6129a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b68991f4df584c31d976f5a4ece641bcbe6129a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b68991f4df584c31d976f5a4ece641bcbe6129a"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "32f5507a33273d852cc3ef9bef4ea2ddbf794706", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9f8c5af8bc43681764923379dc465b62b56877a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9f8c5af8bc43681764923379dc465b62b56877a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d9f8c5af8bc43681764923379dc465b62b56877a", "patch": "@@ -1,3 +1,8 @@\n+2017-04-06  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/80166\n+\t* gcc.dg/asan/pr80166.c: New test.\n+\n 2017-04-06  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR tree-optimization/79390"}, {"sha": "629dd23a31ca76817ddfdd3ca6d85f34bea0935a", "filename": "gcc/testsuite/gcc.dg/asan/pr80166.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9f8c5af8bc43681764923379dc465b62b56877a/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr80166.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9f8c5af8bc43681764923379dc465b62b56877a/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr80166.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr80166.c?ref=d9f8c5af8bc43681764923379dc465b62b56877a", "patch": "@@ -0,0 +1,24 @@\n+/* PR sanitizer/80166 */\n+/* { dg-do run } */\n+\n+#include <sys/types.h>\n+#include <unistd.h>\n+\n+int\n+main (int argc, char **argv)\n+{\n+  gid_t groups;\n+  int r = getgroups (0, &groups);\n+  if (r < 0)\n+    __builtin_abort ();\n+\n+  r = getgroups (-1, &groups);\n+  if (r != -1)\n+    __builtin_abort ();\n+\n+  r = getgroups (-1, NULL);\n+  if (r != -1)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}, {"sha": "106e168007c8948b0f804a038d826ffe167d840a", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9f8c5af8bc43681764923379dc465b62b56877a/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9f8c5af8bc43681764923379dc465b62b56877a/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=d9f8c5af8bc43681764923379dc465b62b56877a", "patch": "@@ -1,3 +1,9 @@\n+2017-04-06  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/80166\n+\t* sanitizer_common/sanitizer_common_interceptors.inc (INTERCEPTOR):\n+\tCherry-pick upstream r299036.\n+\n 2017-03-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/78158"}, {"sha": "195014022a045774fa631e07a7795431377ec7f9", "filename": "libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9f8c5af8bc43681764923379dc465b62b56877a/libsanitizer%2Fsanitizer_common%2Fsanitizer_common_interceptors.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9f8c5af8bc43681764923379dc465b62b56877a/libsanitizer%2Fsanitizer_common%2Fsanitizer_common_interceptors.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_common_interceptors.inc?ref=d9f8c5af8bc43681764923379dc465b62b56877a", "patch": "@@ -3350,7 +3350,8 @@ INTERCEPTOR(int, getgroups, int size, u32 *lst) {\n   // its metadata. See\n   // https://github.com/google/sanitizers/issues/321.\n   int res = REAL(getgroups)(size, lst);\n-  if (res && lst) COMMON_INTERCEPTOR_WRITE_RANGE(ctx, lst, res * sizeof(*lst));\n+  if (res >= 0 && lst && size > 0)\n+    COMMON_INTERCEPTOR_WRITE_RANGE(ctx, lst, res * sizeof(*lst));\n   return res;\n }\n #define INIT_GETGROUPS COMMON_INTERCEPT_FUNCTION(getgroups);"}]}