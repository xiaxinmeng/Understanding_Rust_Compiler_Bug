{"sha": "87b6d63a2aa9c748637414c76c53a707d4d6372d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdiNmQ2M2EyYWE5Yzc0ODYzNzQxNGM3NmM1M2E3MDdkNGQ2MzcyZA==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2000-05-09T21:16:48Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-05-09T21:16:48Z"}, "message": "disable hpux8_bogus_inlines on SCO\n\nFrom-SVN: r33806", "tree": {"sha": "4d168b5698461fc654bef7e1b35727d00ef7166d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d168b5698461fc654bef7e1b35727d00ef7166d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87b6d63a2aa9c748637414c76c53a707d4d6372d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87b6d63a2aa9c748637414c76c53a707d4d6372d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87b6d63a2aa9c748637414c76c53a707d4d6372d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87b6d63a2aa9c748637414c76c53a707d4d6372d/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dcfa0bc8ce126809bea0ba39e916c08115da9121", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcfa0bc8ce126809bea0ba39e916c08115da9121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcfa0bc8ce126809bea0ba39e916c08115da9121"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "7f855b79f377d1a03a77bb02b3e04291a42dea1e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87b6d63a2aa9c748637414c76c53a707d4d6372d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87b6d63a2aa9c748637414c76c53a707d4d6372d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87b6d63a2aa9c748637414c76c53a707d4d6372d", "patch": "@@ -111,6 +111,7 @@ Tue May  9 20:52:43 2000  Denis Chertykov  <denisc@overta.ru>\n \n \t* fixinc/check.tpl:  Template for checking fixes\n \t* fixinc/inclhack.def:  Added 'test_text' for many fixes\n+\tdisable hpux8_bogus_inlines on SCO\n \t* fixinc/fixinc.sco:  Oh, yes, we don't need this any more.\n \n Tue May  9 16:30:27 MET DST 2000  Jan Hubicka  <jh@suse.cz>"}, {"sha": "8819c37d21cbc700201d272277c55233a6839873", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 25, "deletions": 10, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87b6d63a2aa9c748637414c76c53a707d4d6372d/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87b6d63a2aa9c748637414c76c53a707d4d6372d/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=87b6d63a2aa9c748637414c76c53a707d4d6372d", "patch": "@@ -825,7 +825,7 @@ tSCC zAlpha_GetoptList[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zAlpha_GetoptSelect0[] =\n-       \"getopt\\\\(int, char \\\\*\\\\[\";\n+       \"getopt\\\\(int, char \\\\*\\\\[\\\\], *char \\\\*\\\\)\";\n \n #define    ALPHA_GETOPT_TEST_CT  1\n tTestDesc aAlpha_GetoptTests[] = {\n@@ -1159,7 +1159,7 @@ tSCC zBad_LvalList[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zBad_LvalSelect0[] =\n-       \"^[ \\t]*#[ \\t]*pragma[ \\t][ \\t]*extern_prefix\";\n+       \"^[ \\t]*#[ \\t]*pragma[ \\t]+extern_prefix\";\n \n #define    BAD_LVAL_TEST_CT  1\n tTestDesc aBad_LvalTests[] = {\n@@ -1169,7 +1169,7 @@ tTestDesc aBad_LvalTests[] = {\n  *  Fix Command Arguments for Bad_Lval\n  */\n const char* apzBad_LvalPatch[] = { \"sed\",\n-    \"-e\", \"s/^[ \\t]*#[ \\t]*define[ \\t]*\\\\([^(]*\\\\)\\\\(([^)]*)\\\\)[ \\t]*\\\\(_.\\\\)\\\\1\\\\2[ \\t]*$/#define \\\\1 \\\\3\\\\1/\",\n+    \"-e\", \"s/^[ \\t]*#[ \\t]*define[ \\t]+\\\\([^(]*\\\\)\\\\(([^)]*)\\\\)[ \\t]*\\\\(_.\\\\)\\\\1\\\\2[ \\t]*$/#define \\\\1 \\\\3\\\\1/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1200,7 +1200,7 @@ tSCC zBroken_Assert_StdioSelect0[] =\n  *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zBroken_Assert_StdioBypass0[] =\n-       \"include.*stdio.h\";\n+       \"include.*stdio\\\\.h\";\n \n #define    BROKEN_ASSERT_STDIO_TEST_CT  2\n tTestDesc aBroken_Assert_StdioTests[] = {\n@@ -1243,7 +1243,7 @@ tSCC zBroken_Assert_StdlibSelect0[] =\n  *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zBroken_Assert_StdlibBypass0[] =\n-       \"include.*stdlib.h\";\n+       \"include.*stdlib\\\\.h\";\n \n #define    BROKEN_ASSERT_STDLIB_TEST_CT  2\n tTestDesc aBroken_Assert_StdlibTests[] = {\n@@ -1491,8 +1491,16 @@ tSCC zHpux_MaxintList[] =\n  *  Machine/OS name selection pattern\n  */\n #define apzHpux_MaxintMachs (const char**)NULL\n-#define HPUX_MAXINT_TEST_CT  0\n-#define aHpux_MaxintTests   (tTestDesc*)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zHpux_MaxintSelect0[] =\n+       \"^#[ \\t]*define[ \\t]*MAXINT[ \\t]\";\n+\n+#define    HPUX_MAXINT_TEST_CT  1\n+tTestDesc aHpux_MaxintTests[] = {\n+  { TT_EGREP,    zHpux_MaxintSelect0, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Hpux_Maxint\n@@ -1563,8 +1571,15 @@ tSCC zHpux8_Bogus_InlinesList[] =\n tSCC zHpux8_Bogus_InlinesSelect0[] =\n        \"inline\";\n \n-#define    HPUX8_BOGUS_INLINES_TEST_CT  1\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zHpux8_Bogus_InlinesBypass0[] =\n+       \"The Santa Cruz Operation\";\n+\n+#define    HPUX8_BOGUS_INLINES_TEST_CT  2\n tTestDesc aHpux8_Bogus_InlinesTests[] = {\n+  { TT_NEGREP,   zHpux8_Bogus_InlinesBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zHpux8_Bogus_InlinesSelect0, (regex_t*)NULL }, };\n \n /*\n@@ -1634,7 +1649,7 @@ tSCC zIsc_Omits_With_StdcList[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zIsc_Omits_With_StdcSelect0[] =\n-       \"defined(__STDC__) && !defined(_POSIX_SOURCE)\";\n+       \"!defined(__STDC__) && !defined(_POSIX_SOURCE)\";\n \n #define    ISC_OMITS_WITH_STDC_TEST_CT  1\n tTestDesc aIsc_Omits_With_StdcTests[] = {\n@@ -4668,7 +4683,7 @@ extern char *\\tsprintf();\\\\\\n\\\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          103\n+#define REGEX_COUNT          105\n #define MACH_LIST_SIZE_LIMIT 279\n #define FIX_COUNT            118\n "}, {"sha": "a54737f0f244e692de4b2ad946798c36151bbdf9", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87b6d63a2aa9c748637414c76c53a707d4d6372d/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87b6d63a2aa9c748637414c76c53a707d4d6372d/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=87b6d63a2aa9c748637414c76c53a707d4d6372d", "patch": "@@ -908,6 +908,7 @@ fix = {\n     hackname = hpux8_bogus_inlines;\n     files    = math.h;\n     select   = inline;\n+    bypass   = 'The Santa Cruz Operation';\n     sed = \"s@inline int abs(int [a-z][a-z]*) {.*}@extern \\\"C\\\" int abs(int);@\";\n     sed = \"s@inline double abs(double [a-z][a-z]*) {.*}@@\";\n     sed = \"s@inline int sqr(int [a-z][a-z]*) {.*}@@\";"}]}