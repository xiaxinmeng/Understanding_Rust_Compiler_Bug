{"sha": "295e70472859075e8cc0c8b00ff1f13aac57a628", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk1ZTcwNDcyODU5MDc1ZThjYzBjOGIwMGZmMWYxM2FhYzU3YTYyOA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-06-01T12:40:47Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-06-01T12:40:47Z"}, "message": "Change use to type-based pool allocator in\n\n\t* df-problems.c (df_chain_create):Use new type-based pool allocator.\n\t(df_chain_unlink_1) Likewise.\n\t(df_chain_unlink) Likewise.\n\t(df_chain_remove_problem) Likewise.\n\t(df_chain_alloc) Likewise.\n\t(df_chain_free) Likewise.\n\t* df.h (struct dataflow) Likewise.\n\nFrom-SVN: r223953", "tree": {"sha": "e4baafc4f2eb2a2db56240f8ada32cd5f00acd44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4baafc4f2eb2a2db56240f8ada32cd5f00acd44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/295e70472859075e8cc0c8b00ff1f13aac57a628", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/295e70472859075e8cc0c8b00ff1f13aac57a628", "html_url": "https://github.com/Rust-GCC/gccrs/commit/295e70472859075e8cc0c8b00ff1f13aac57a628", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/295e70472859075e8cc0c8b00ff1f13aac57a628/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a78a26f11e2e95d4bb43f1782f891d8210d03e0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a78a26f11e2e95d4bb43f1782f891d8210d03e0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a78a26f11e2e95d4bb43f1782f891d8210d03e0d"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "561dac3316163dad5d4fb7d81a5c9671ec3927b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295e70472859075e8cc0c8b00ff1f13aac57a628/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295e70472859075e8cc0c8b00ff1f13aac57a628/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=295e70472859075e8cc0c8b00ff1f13aac57a628", "patch": "@@ -1,3 +1,13 @@\n+2015-06-01  Martin Liska  <mliska@suse.cz>\n+\n+\t* df-problems.c (df_chain_create):Use new type-based pool allocator.\n+\t(df_chain_unlink_1) Likewise.\n+\t(df_chain_unlink) Likewise.\n+\t(df_chain_remove_problem) Likewise.\n+\t(df_chain_alloc) Likewise.\n+\t(df_chain_free) Likewise.\n+\t* df.h (struct dataflow) Likewise.\n+\n 2015-06-01  Martin Liska  <mliska@suse.cz>\n \n \t* cselib.c (new_elt_list):Use new type-based pool allocator."}, {"sha": "7700157515d0e75099eec7de3121fece1914d82b", "filename": "gcc/df-problems.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295e70472859075e8cc0c8b00ff1f13aac57a628/gcc%2Fdf-problems.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295e70472859075e8cc0c8b00ff1f13aac57a628/gcc%2Fdf-problems.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-problems.c?ref=295e70472859075e8cc0c8b00ff1f13aac57a628", "patch": "@@ -1879,7 +1879,7 @@ struct df_link *\n df_chain_create (df_ref src, df_ref dst)\n {\n   struct df_link *head = DF_REF_CHAIN (src);\n-  struct df_link *link = (struct df_link *) pool_alloc (df_chain->block_pool);\n+  struct df_link *link = df_chain->block_pool->allocate ();\n \n   DF_REF_CHAIN (src) = link;\n   link->next = head;\n@@ -1904,7 +1904,7 @@ df_chain_unlink_1 (df_ref ref, df_ref target)\n \t    prev->next = chain->next;\n \t  else\n \t    DF_REF_CHAIN (ref) = chain->next;\n-\t  pool_free (df_chain->block_pool, chain);\n+\t  df_chain->block_pool->remove (chain);\n \t  return;\n \t}\n       prev = chain;\n@@ -1924,7 +1924,7 @@ df_chain_unlink (df_ref ref)\n       struct df_link *next = chain->next;\n       /* Delete the other side if it exists.  */\n       df_chain_unlink_1 (chain->ref, ref);\n-      pool_free (df_chain->block_pool, chain);\n+      df_chain->block_pool->remove (chain);\n       chain = next;\n     }\n   DF_REF_CHAIN (ref) = NULL;\n@@ -1956,7 +1956,7 @@ df_chain_remove_problem (void)\n \n   /* Wholesale destruction of the old chains.  */\n   if (df_chain->block_pool)\n-    free_alloc_pool (df_chain->block_pool);\n+    delete df_chain->block_pool;\n \n   EXECUTE_IF_SET_IN_BITMAP (df_chain->out_of_date_transfer_functions, 0, bb_index, bi)\n     {\n@@ -2010,8 +2010,8 @@ static void\n df_chain_alloc (bitmap all_blocks ATTRIBUTE_UNUSED)\n {\n   df_chain_remove_problem ();\n-  df_chain->block_pool = create_alloc_pool (\"df_chain_block pool\",\n-\t\t\t\t\t sizeof (struct df_link), 50);\n+  df_chain->block_pool = new pool_allocator<df_link> (\"df_chain_block pool\",\n+\t\t\t\t\t\t      50);\n   df_chain->optional_p = true;\n }\n \n@@ -2146,7 +2146,7 @@ df_chain_finalize (bitmap all_blocks)\n static void\n df_chain_free (void)\n {\n-  free_alloc_pool (df_chain->block_pool);\n+  delete df_chain->block_pool;\n   BITMAP_FREE (df_chain->out_of_date_transfer_functions);\n   free (df_chain);\n }"}, {"sha": "8a5b21fa275fdc4a0da519f0379c189b17c69e13", "filename": "gcc/df.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295e70472859075e8cc0c8b00ff1f13aac57a628/gcc%2Fdf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295e70472859075e8cc0c8b00ff1f13aac57a628/gcc%2Fdf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf.h?ref=295e70472859075e8cc0c8b00ff1f13aac57a628", "patch": "@@ -305,7 +305,7 @@ struct dataflow\n   unsigned int block_info_size;\n \n   /* The pool to allocate the block_info from. */\n-  alloc_pool block_pool;\n+  pool_allocator<df_link> *block_pool;\n \n   /* The lr and live problems have their transfer functions recomputed\n      only if necessary.  This is possible for them because, the"}]}