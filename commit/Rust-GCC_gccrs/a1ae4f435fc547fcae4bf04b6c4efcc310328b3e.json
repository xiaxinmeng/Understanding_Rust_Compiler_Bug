{"sha": "a1ae4f435fc547fcae4bf04b6c4efcc310328b3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFhZTRmNDM1ZmM1NDdmY2FlNGJmMDRiNmM0ZWZjYzMxMDMyOGIzZQ==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael.morin@sfr.fr", "date": "2011-09-08T15:18:20Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-09-08T15:18:20Z"}, "message": "trans-array.h (gfc_get_temp_ss): New prototype.\n\n2011-09-08  Mikael Morin  <mikael.morin@sfr.fr>\n\n\t* trans-array.h (gfc_get_temp_ss): New prototype.\n\t* trans-array.c (gfc_get_temp_ss): New function.\n\t(gfc_conv_resolve_dependencies): Re-use gfc_get_temp_ss.\n\t(gfc_conv_expr_descriptor): Ditto.\n\t* trans-expr.c (gfc_conv_subref_array_arg): Ditto.\n\nFrom-SVN: r178696", "tree": {"sha": "3fe0a789a4305072f3743a49b20ff9f34193c138", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fe0a789a4305072f3743a49b20ff9f34193c138"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1ae4f435fc547fcae4bf04b6c4efcc310328b3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ae4f435fc547fcae4bf04b6c4efcc310328b3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1ae4f435fc547fcae4bf04b6c4efcc310328b3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ae4f435fc547fcae4bf04b6c4efcc310328b3e/comments", "author": null, "committer": null, "parents": [{"sha": "66877276157c3ac8210d943054620d509b8ff5c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66877276157c3ac8210d943054620d509b8ff5c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66877276157c3ac8210d943054620d509b8ff5c4"}], "stats": {"total": 70, "additions": 41, "deletions": 29}, "files": [{"sha": "9a76522c91b17965ddefab0a6f3dcdba76e0421a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ae4f435fc547fcae4bf04b6c4efcc310328b3e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ae4f435fc547fcae4bf04b6c4efcc310328b3e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a1ae4f435fc547fcae4bf04b6c4efcc310328b3e", "patch": "@@ -1,3 +1,11 @@\n+2011-09-08  Mikael Morin  <mikael.morin@sfr.fr>\n+\n+\t* trans-array.h (gfc_get_temp_ss): New prototype.\n+\t* trans-array.c (gfc_get_temp_ss): New function.\n+\t(gfc_conv_resolve_dependencies): Re-use gfc_get_temp_ss.\n+\t(gfc_conv_expr_descriptor): Ditto.\n+\t* trans-expr.c (gfc_conv_subref_array_arg): Ditto.\n+\n 2011-09-08  Mikael Morin  <mikael.morin@sfr.fr>\n \n \t* trans-array.h (gfc_get_array_ss): New prototype."}, {"sha": "5f02c873604b1132b7bf96a7de3157b2845454fb", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 27, "deletions": 19, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ae4f435fc547fcae4bf04b6c4efcc310328b3e/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ae4f435fc547fcae4bf04b6c4efcc310328b3e/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=a1ae4f435fc547fcae4bf04b6c4efcc310328b3e", "patch": "@@ -534,6 +534,24 @@ gfc_get_array_ss (gfc_ss *next, gfc_expr *expr, int dimen, gfc_ss_type type)\n }\n \n \n+/* Creates and initializes a temporary type gfc_ss struct.  */\n+\n+gfc_ss *\n+gfc_get_temp_ss (tree type, tree string_length, int dimen)\n+{\n+  gfc_ss *ss;\n+\n+  ss = gfc_get_ss ();\n+  ss->next = gfc_ss_terminator;\n+  ss->type = GFC_SS_TEMP;\n+  ss->string_length = string_length;\n+  ss->data.temp.dimen = dimen;\n+  ss->data.temp.type = type;\n+\n+  return ss;\n+}\n+\n+\n /* Free all the SS associated with a loop.  */\n \n void\n@@ -3821,13 +3839,9 @@ gfc_conv_resolve_dependencies (gfc_loopinfo * loop, gfc_ss * dest,\n       if (GFC_ARRAY_TYPE_P (base_type)\n \t  || GFC_DESCRIPTOR_TYPE_P (base_type))\n \tbase_type = gfc_get_element_type (base_type);\n-      loop->temp_ss = gfc_get_ss ();\n-      loop->temp_ss->type = GFC_SS_TEMP;\n-      loop->temp_ss->data.temp.type = base_type;\n-      loop->temp_ss->string_length = dest->string_length;\n-      loop->temp_ss->data.temp.dimen = loop->dimen;\n+      loop->temp_ss = gfc_get_temp_ss (base_type, dest->string_length,\n+\t\t\t\t       loop->dimen);\n       loop->temp_ss->data.temp.codimen = loop->codimen;\n-      loop->temp_ss->next = gfc_ss_terminator;\n       gfc_add_ss_to_loop (loop, loop->temp_ss);\n     }\n   else\n@@ -5874,21 +5888,15 @@ gfc_conv_expr_descriptor (gfc_se * se, gfc_expr * expr, gfc_ss * ss)\n \n   if (need_tmp)\n     {\n-      /* Tell the scalarizer to make a temporary.  */\n-      loop.temp_ss = gfc_get_ss ();\n-      loop.temp_ss->type = GFC_SS_TEMP;\n-      loop.temp_ss->next = gfc_ss_terminator;\n-\n-      if (expr->ts.type == BT_CHARACTER\n-\t    && !expr->ts.u.cl->backend_decl)\n+      if (expr->ts.type == BT_CHARACTER && !expr->ts.u.cl->backend_decl)\n \tget_array_charlen (expr, se);\n \n-      loop.temp_ss->data.temp.type = gfc_typenode_for_spec (&expr->ts);\n-\n-      if (expr->ts.type == BT_CHARACTER)\n-\tloop.temp_ss->string_length = expr->ts.u.cl->backend_decl;\n-      else\n-\tloop.temp_ss->string_length = NULL;\n+      /* Tell the scalarizer to make a temporary.  */\n+      loop.temp_ss = gfc_get_temp_ss (gfc_typenode_for_spec (&expr->ts),\n+\t\t\t\t      ((expr->ts.type == BT_CHARACTER)\n+\t\t\t\t       ? expr->ts.u.cl->backend_decl\n+\t\t\t\t       : NULL),\n+\t\t\t\t      loop.dimen);\n \n       se->string_length = loop.temp_ss->string_length;\n       loop.temp_ss->data.temp.dimen = loop.dimen;"}, {"sha": "e2718b2147d9590646f4b1e674e39a00d4dd4608", "filename": "gcc/fortran/trans-array.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ae4f435fc547fcae4bf04b6c4efcc310328b3e/gcc%2Ffortran%2Ftrans-array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ae4f435fc547fcae4bf04b6c4efcc310328b3e/gcc%2Ffortran%2Ftrans-array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.h?ref=a1ae4f435fc547fcae4bf04b6c4efcc310328b3e", "patch": "@@ -89,6 +89,8 @@ void gfc_mark_ss_chain_used (gfc_ss *, unsigned);\n void gfc_free_ss_chain (gfc_ss *);\n /* Allocate a new array type ss.  */\n gfc_ss *gfc_get_array_ss (gfc_ss *, gfc_expr *, int, gfc_ss_type);\n+/* Allocate a new temporary type ss.  */\n+gfc_ss *gfc_get_temp_ss (tree, tree, int);\n \n /* Calculates the lower bound and stride of array sections.  */\n void gfc_conv_ss_startstride (gfc_loopinfo *);"}, {"sha": "0e85060dd24638ded8d448799c8bcc6eec241000", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ae4f435fc547fcae4bf04b6c4efcc310328b3e/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ae4f435fc547fcae4bf04b6c4efcc310328b3e/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=a1ae4f435fc547fcae4bf04b6c4efcc310328b3e", "patch": "@@ -2395,18 +2395,12 @@ gfc_conv_subref_array_arg (gfc_se * parmse, gfc_expr * expr, int g77,\n \t\t|| GFC_DESCRIPTOR_TYPE_P (base_type))\n     base_type = gfc_get_element_type (base_type);\n \n-  loop.temp_ss = gfc_get_ss ();;\n-  loop.temp_ss->type = GFC_SS_TEMP;\n-  loop.temp_ss->data.temp.type = base_type;\n-\n-  if (expr->ts.type == BT_CHARACTER)\n-    loop.temp_ss->string_length = expr->ts.u.cl->backend_decl;\n-  else\n-    loop.temp_ss->string_length = NULL;\n+  loop.temp_ss = gfc_get_temp_ss (base_type, ((expr->ts.type == BT_CHARACTER)\n+\t\t\t\t\t      ? expr->ts.u.cl->backend_decl\n+\t\t\t\t\t      : NULL),\n+\t\t\t\t  loop.dimen);\n \n   parmse->string_length = loop.temp_ss->string_length;\n-  loop.temp_ss->data.temp.dimen = loop.dimen;\n-  loop.temp_ss->next = gfc_ss_terminator;\n \n   /* Associate the SS with the loop.  */\n   gfc_add_ss_to_loop (&loop, loop.temp_ss);"}]}