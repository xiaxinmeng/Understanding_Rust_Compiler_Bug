{"sha": "34ce7f7a9a64dd69dd6a77dfd4a77406c3c71014", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRjZTdmN2E5YTY0ZGQ2OWRkNmE3N2RmZDRhNzc0MDZjM2M3MTAxNA==", "commit": {"author": {"name": "Cl\u00e9ment Chigot", "email": "clement.chigot@atos.net", "date": "2021-08-12T17:17:15Z"}, "committer": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-08-15T17:26:27Z"}, "message": "aix: 64 bit AIX TLS libpthread dependency.\n\n64bit XCOFF files will generated TLS access, with local-exec or\nglobal-exec models, by an access to R13. Thus, there isn't\nany reference to a TLS symbol.\n\nThe problem is that it allows programs with TLS to be compiled and\nlinked even without -pthread. Most of the time, it will result in\na segfault when trying to access a TLS variable. But sometimes, it\nmight create a memory corruption.\n\nThis patch forces a reference to __tls_get_addr() to ensure link\nwill fail without -pthread.\n\ngcc/ChangeLog:\n2021-08-11  Cl\u00e9ment Chigot  <clement.chigot@atos.net>\n\n\t* config/rs6000/rs6000.c (xcoff_tls_exec_model_detected): New.\n\t(rs6000_legitimize_tls_address_aix): Use it.\n\t(rs6000_xcoff_file_end): Add \".ref __tls_get_addr\" when\n\txcoff_tls_exec_model_detected is true.", "tree": {"sha": "693b86639899af4c92e6b5c28062f734a47e23a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/693b86639899af4c92e6b5c28062f734a47e23a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34ce7f7a9a64dd69dd6a77dfd4a77406c3c71014", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34ce7f7a9a64dd69dd6a77dfd4a77406c3c71014", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34ce7f7a9a64dd69dd6a77dfd4a77406c3c71014", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34ce7f7a9a64dd69dd6a77dfd4a77406c3c71014/comments", "author": null, "committer": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "882f1d58bfa56737ff2de84c3cd1e0acfc318b86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/882f1d58bfa56737ff2de84c3cd1e0acfc318b86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/882f1d58bfa56737ff2de84c3cd1e0acfc318b86"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "e073b26b43079fe770020bbb1bbdd320d893fdba", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34ce7f7a9a64dd69dd6a77dfd4a77406c3c71014/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34ce7f7a9a64dd69dd6a77dfd4a77406c3c71014/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=34ce7f7a9a64dd69dd6a77dfd4a77406c3c71014", "patch": "@@ -127,6 +127,9 @@ scalar_int_mode rs6000_pmode;\n bool rs6000_passes_ieee128 = false;\n #endif\n \n+/* Track use of r13 in 64bit AIX TLS.  */\n+static bool xcoff_tls_exec_model_detected = false;\n+\n /* Generate the manged name (i.e. U10__float128) used in GCC 8.1, and not the\n    name used in current releases (i.e. u9__ieee128).  */\n static bool ieee128_mangling_gcc_8_1;\n@@ -9397,7 +9400,10 @@ rs6000_legitimize_tls_address_aix (rtx addr, enum tls_model model)\n       emit_insn (gen_tls_get_tpointer (tlsreg));\n     }\n   else\n-    tlsreg = gen_rtx_REG (DImode, 13);\n+    {\n+      tlsreg = gen_rtx_REG (DImode, 13);\n+      xcoff_tls_exec_model_detected = true;\n+    }\n \n   /* Load the TOC value into temporary register.  */\n   tmpreg = gen_reg_rtx (Pmode);\n@@ -21122,6 +21128,12 @@ rs6000_xcoff_file_end (void)\n   fputs (TARGET_32BIT\n \t ? \"\\t.long _section_.text\\n\" : \"\\t.llong _section_.text\\n\",\n \t asm_out_file);\n+\n+  if (xcoff_tls_exec_model_detected)\n+    {\n+      /* Add a .ref to __tls_get_addr to force libpthread dependency.  */\n+      fputs (\"\\t.extern __tls_get_addr\\n\\t.ref __tls_get_addr\\n\", asm_out_file);\n+    }\n }\n \n struct declare_alias_data"}]}