{"sha": "c09663eabfb84ac56ddd8d44abcab3f4902c83bd", "node_id": "C_kwDOANBUbNoAKGMwOTY2M2VhYmZiODRhYzU2ZGRkOGQ0NGFiY2FiM2Y0OTAyYzgzYmQ", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@arm.com", "date": "2022-09-29T13:34:11Z"}, "committer": {"name": "Christophe Lyon", "email": "christophe.lyon@arm.com", "date": "2022-09-30T11:55:50Z"}, "message": "testsuite: [arm] Relax expected register names in MVE tests\n\nThese two tests have hardcoded q0 as destination/source of load/store\ninstructions, but this register is actually used only under\n-mfloat-abi=hard. When using -mfloat-abi=softfp, other registers\n(eg. q3) can be used to transfer function arguments from core\nregisters to MVE registers, making the expected regexp fail.\n\nThis small patch replaces q0 with q[0-7] to accept any 'q' register.\nIn several places where we had q[0-9]+, replace it with q[0-7] as MVE\nonly has q0-q7 registers.\n\nOK for trunk?\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/arm/mve/mve_load_memory_modes.c: Update expected\n\tregisters.\n\t* gcc.target/arm/mve/mve_store_memory_modes.c: Likewise.", "tree": {"sha": "23c95576f705a5d5bfecc0ff85c6b242408e603d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23c95576f705a5d5bfecc0ff85c6b242408e603d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c09663eabfb84ac56ddd8d44abcab3f4902c83bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c09663eabfb84ac56ddd8d44abcab3f4902c83bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c09663eabfb84ac56ddd8d44abcab3f4902c83bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c09663eabfb84ac56ddd8d44abcab3f4902c83bd/comments", "author": null, "committer": null, "parents": [{"sha": "44510e44e717d9c05b0c5d197a73676a9427e32f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44510e44e717d9c05b0c5d197a73676a9427e32f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44510e44e717d9c05b0c5d197a73676a9427e32f"}], "stats": {"total": 116, "additions": 58, "deletions": 58}, "files": [{"sha": "816980d1203714c22f85c045880ff7d97dda0fae", "filename": "gcc/testsuite/gcc.target/arm/mve/mve_load_memory_modes.c", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09663eabfb84ac56ddd8d44abcab3f4902c83bd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fmve_load_memory_modes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09663eabfb84ac56ddd8d44abcab3f4902c83bd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fmve_load_memory_modes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fmve_load_memory_modes.c?ref=c09663eabfb84ac56ddd8d44abcab3f4902c83bd", "patch": "@@ -7,7 +7,7 @@\n /*\n **off_load8_0:\n **\t...\n-**\tvldrb.8\tq0, \\[r0, #16\\]\n+**\tvldrb.8\tq[0-7], \\[r0, #16\\]\n **\t...\n */\n int8x16_t off_load8_0 (int8_t * a)\n@@ -18,7 +18,7 @@ int8x16_t off_load8_0 (int8_t * a)\n /*\n **off_load8_1:\n **\t...\n-**\tvldrb.u16\tq0, \\[r0, #1\\]\n+**\tvldrb.u16\tq[0-7], \\[r0, #1\\]\n **\t...\n */\n uint16x8_t off_load8_1 (uint8_t * a)\n@@ -29,7 +29,7 @@ uint16x8_t off_load8_1 (uint8_t * a)\n /*\n **off_load8_2:\n **\t...\n-**\tvldrb.s32\tq0, \\[r0, #127\\]\n+**\tvldrb.s32\tq[0-7], \\[r0, #127\\]\n **\t...\n */\n int32x4_t off_load8_2 (int8_t * a)\n@@ -40,7 +40,7 @@ int32x4_t off_load8_2 (int8_t * a)\n /*\n **off_load8_3:\n **\t...\n-**\tvldrb.8\tq0, \\[r0, #-127\\]\n+**\tvldrb.8\tq[0-7], \\[r0, #-127\\]\n **\t...\n */\n uint8x16_t off_load8_3 (uint8_t * a)\n@@ -51,7 +51,7 @@ uint8x16_t off_load8_3 (uint8_t * a)\n /*\n **not_off_load8_0:\n **\t...\n-**\tvldrb.8\tq0, \\[r[0-9]+\\]\n+**\tvldrb.8\tq[0-7], \\[r[0-7]+\\]\n **\t...\n */\n int8x16_t not_off_load8_0 (int8_t * a)\n@@ -62,7 +62,7 @@ int8x16_t not_off_load8_0 (int8_t * a)\n /*\n **off_loadfp16_0:\n **\t...\n-**\tvldrh.16\tq0, \\[r0, #-244\\]\n+**\tvldrh.16\tq[0-7], \\[r0, #-244\\]\n **\t...\n */\n float16x8_t off_loadfp16_0 (float16_t *a)\n@@ -73,7 +73,7 @@ float16x8_t off_loadfp16_0 (float16_t *a)\n /*\n **off_load16_0:\n **\t...\n-**\tvldrh.16\tq0, \\[r0, #-2\\]\n+**\tvldrh.16\tq[0-7], \\[r0, #-2\\]\n **\t...\n */\n uint16x8_t off_load16_0 (uint16_t * a)\n@@ -84,7 +84,7 @@ uint16x8_t off_load16_0 (uint16_t * a)\n /*\n **off_load16_1:\n **\t...\n-**\tvldrh.u32\tq0, \\[r0, #254\\]\n+**\tvldrh.u32\tq[0-7], \\[r0, #254\\]\n **\t...\n */\n uint32x4_t off_load16_1 (uint16_t * a)\n@@ -95,7 +95,7 @@ uint32x4_t off_load16_1 (uint16_t * a)\n /*\n **not_off_load16_0:\n **\t...\n-**\tvldrh.16\tq0, \\[r[0-9]+\\]\n+**\tvldrh.16\tq[0-7], \\[r[0-7]+\\]\n **\t...\n */\n int16x8_t not_off_load16_0 (int8_t * a)\n@@ -106,7 +106,7 @@ int16x8_t not_off_load16_0 (int8_t * a)\n /*\n **not_off_load16_1:\n **\t...\n-**\tvldrh.u32\tq0, \\[r[0-9]+\\]\n+**\tvldrh.u32\tq[0-7], \\[r[0-7]+\\]\n **\t...\n */\n uint32x4_t not_off_load16_1 (uint16_t * a)\n@@ -117,7 +117,7 @@ uint32x4_t not_off_load16_1 (uint16_t * a)\n /*\n **off_loadfp32_0:\n **\t...\n-**\tvldrw.32\tq0, \\[r0, #24\\]\n+**\tvldrw.32\tq[0-7], \\[r0, #24\\]\n **\t...\n */\n float32x4_t off_loadfp32_0 (float32_t *a)\n@@ -128,7 +128,7 @@ float32x4_t off_loadfp32_0 (float32_t *a)\n /*\n **off_load32_0:\n **\t...\n-**\tvldrw.32\tq0, \\[r0, #4\\]\n+**\tvldrw.32\tq[0-7], \\[r0, #4\\]\n **\t...\n */\n uint32x4_t off_load32_0 (uint32_t * a)\n@@ -139,7 +139,7 @@ uint32x4_t off_load32_0 (uint32_t * a)\n /*\n **off_load32_1:\n **\t...\n-**\tvldrw.32\tq0, \\[r0, #-508\\]\n+**\tvldrw.32\tq[0-7], \\[r0, #-508\\]\n **\t...\n */\n int32x4_t off_load32_1 (int32_t * a)\n@@ -149,7 +149,7 @@ int32x4_t off_load32_1 (int32_t * a)\n /*\n **pre_load8_0:\n **\t...\n-**\tvldrb.8\tq[0-9]+, \\[r0, #16\\]!\n+**\tvldrb.8\tq[0-7], \\[r0, #16\\]!\n **\t...\n */\n int8_t* pre_load8_0 (int8_t * a, int8x16_t *v)\n@@ -162,7 +162,7 @@ int8_t* pre_load8_0 (int8_t * a, int8x16_t *v)\n /*\n **pre_load8_1:\n **\t...\n-**\tvldrb.u16\tq[0-9]+, \\[r0, #4\\]!\n+**\tvldrb.u16\tq[0-7], \\[r0, #4\\]!\n **\t...\n */\n uint8_t* pre_load8_1 (uint8_t * a, uint16x8_t *v)\n@@ -175,7 +175,7 @@ uint8_t* pre_load8_1 (uint8_t * a, uint16x8_t *v)\n /*\n **pre_loadfp16_0:\n **\t...\n-**\tvldrh.16\tq[0-9]+, \\[r0, #128\\]!\n+**\tvldrh.16\tq[0-7], \\[r0, #128\\]!\n **\t...\n */\n float16_t* pre_loadfp16_0 (float16_t *a, float16x8_t *v)\n@@ -188,7 +188,7 @@ float16_t* pre_loadfp16_0 (float16_t *a, float16x8_t *v)\n /*\n **pre_load16_0:\n **\t...\n-**\tvldrh.16\tq[0-9]+, \\[r0, #-254\\]!\n+**\tvldrh.16\tq[0-7], \\[r0, #-254\\]!\n **\t...\n */\n int16_t* pre_load16_0 (int16_t * a, int16x8_t *v)\n@@ -201,7 +201,7 @@ int16_t* pre_load16_0 (int16_t * a, int16x8_t *v)\n /*\n **pre_load16_1:\n **\t...\n-**\tvldrh.s32\tq[0-9]+, \\[r0, #52\\]!\n+**\tvldrh.s32\tq[0-7], \\[r0, #52\\]!\n **\t...\n */\n int16_t* pre_load16_1 (int16_t * a, int32x4_t *v)\n@@ -214,7 +214,7 @@ int16_t* pre_load16_1 (int16_t * a, int32x4_t *v)\n /*\n **pre_loadfp32_0:\n **\t...\n-**\tvldrw.32\tq[0-9]+, \\[r0, #-72\\]!\n+**\tvldrw.32\tq[0-7], \\[r0, #-72\\]!\n **\t...\n */\n float32_t* pre_loadfp32_0 (float32_t *a, float32x4_t *v)\n@@ -228,7 +228,7 @@ float32_t* pre_loadfp32_0 (float32_t *a, float32x4_t *v)\n /*\n **pre_load32_0:\n **\t...\n-**\tvldrw.32\tq[0-9]+, \\[r0, #-4\\]!\n+**\tvldrw.32\tq[0-7], \\[r0, #-4\\]!\n **\t...\n */\n uint32_t* pre_load32_0 (uint32_t * a, uint32x4_t *v)\n@@ -242,7 +242,7 @@ uint32_t* pre_load32_0 (uint32_t * a, uint32x4_t *v)\n /*\n **post_load8_0:\n **\t...\n-**\tvldrb.8\tq[0-9]+, \\[r0\\], #26\n+**\tvldrb.8\tq[0-7], \\[r0\\], #26\n **\t...\n */\n uint8_t* post_load8_0 (uint8_t * a, uint8x16_t *v)\n@@ -255,7 +255,7 @@ uint8_t* post_load8_0 (uint8_t * a, uint8x16_t *v)\n /*\n **post_load8_1:\n **\t...\n-**\tvldrb.s16\tq[0-9]+, \\[r0\\], #-1\n+**\tvldrb.s16\tq[0-7], \\[r0\\], #-1\n **\t...\n */\n int8_t* post_load8_1 (int8_t * a, int16x8_t *v)\n@@ -268,7 +268,7 @@ int8_t* post_load8_1 (int8_t * a, int16x8_t *v)\n /*\n **post_load8_2:\n **\t...\n-**\tvldrb.8\tq[0-9]+, \\[r0\\], #26\n+**\tvldrb.8\tq[0-7], \\[r0\\], #26\n **\t...\n */\n uint8_t* post_load8_2 (uint8_t * a, uint8x16_t *v)\n@@ -281,7 +281,7 @@ uint8_t* post_load8_2 (uint8_t * a, uint8x16_t *v)\n /*\n **post_load8_3:\n **\t...\n-**\tvldrb.s16\tq[0-9]+, \\[r0\\], #-1\n+**\tvldrb.s16\tq[0-7], \\[r0\\], #-1\n **\t...\n */\n int8_t* post_load8_3 (int8_t * a, int16x8_t *v)\n@@ -294,7 +294,7 @@ int8_t* post_load8_3 (int8_t * a, int16x8_t *v)\n /*\n **post_loadfp16_0:\n **\t...\n-**\tvldrh.16\tq[0-9]+, \\[r0\\], #-24\n+**\tvldrh.16\tq[0-7], \\[r0\\], #-24\n **\t...\n */\n float16_t* post_loadfp16_0 (float16_t *a, float16x8_t *v)\n@@ -307,7 +307,7 @@ float16_t* post_loadfp16_0 (float16_t *a, float16x8_t *v)\n /*\n **post_load16_0:\n **\t...\n-**\tvldrh.16\tq[0-9]+, \\[r0\\], #-126\n+**\tvldrh.16\tq[0-7], \\[r0\\], #-126\n **\t...\n */\n uint16_t* post_load16_0 (uint16_t * a, uint16x8_t *v)\n@@ -320,7 +320,7 @@ uint16_t* post_load16_0 (uint16_t * a, uint16x8_t *v)\n /*\n **post_load16_1:\n **\t...\n-**\tvldrh.u32\tq[0-9]+, \\[r0\\], #16\n+**\tvldrh.u32\tq[0-7], \\[r0\\], #16\n **\t...\n */\n uint16_t* post_load16_1 (uint16_t * a, uint32x4_t *v)\n@@ -333,7 +333,7 @@ uint16_t* post_load16_1 (uint16_t * a, uint32x4_t *v)\n /*\n **post_loadfp32_0:\n **\t...\n-**\tvldrw.32\tq[0-9]+, \\[r0\\], #4\n+**\tvldrw.32\tq[0-7], \\[r0\\], #4\n **\t...\n */\n float32_t* post_loadfp32_0 (float32_t *a, float32x4_t *v)\n@@ -346,7 +346,7 @@ float32_t* post_loadfp32_0 (float32_t *a, float32x4_t *v)\n /*\n **post_load32_0:\n **\t...\n-**\tvldrw.32\tq[0-9]+, \\[r0\\], #-16\n+**\tvldrw.32\tq[0-7], \\[r0\\], #-16\n **\t...\n */\n int32_t* post_load32_0 (int32_t * a, int32x4_t *v)"}, {"sha": "11df1144064c2cc20d629f970f25e6436cc70f05", "filename": "gcc/testsuite/gcc.target/arm/mve/mve_store_memory_modes.c", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09663eabfb84ac56ddd8d44abcab3f4902c83bd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fmve_store_memory_modes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09663eabfb84ac56ddd8d44abcab3f4902c83bd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fmve_store_memory_modes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fmve_store_memory_modes.c?ref=c09663eabfb84ac56ddd8d44abcab3f4902c83bd", "patch": "@@ -7,7 +7,7 @@\n /*\n **off_store8_0:\n **\t...\n-**\tvstrb.8\tq0, \\[r0, #16\\]\n+**\tvstrb.8\tq[0-7], \\[r0, #16\\]\n **\t...\n */\n uint8_t *off_store8_0 (uint8_t * a, uint8x16_t v)\n@@ -19,7 +19,7 @@ uint8_t *off_store8_0 (uint8_t * a, uint8x16_t v)\n /*\n **off_store8_1:\n **\t...\n-**\tvstrb.16\tq0, \\[r0, #-1\\]\n+**\tvstrb.16\tq[0-7], \\[r0, #-1\\]\n **\t...\n */\n int8_t *off_store8_1 (int8_t * a, int16x8_t v)\n@@ -31,7 +31,7 @@ int8_t *off_store8_1 (int8_t * a, int16x8_t v)\n /*\n **off_store8_2:\n **\t...\n-**\tvstrb.32\tq0, \\[r0, #-127\\]\n+**\tvstrb.32\tq[0-7], \\[r0, #-127\\]\n **\t...\n */\n uint8_t *off_store8_2 (uint8_t * a, uint32x4_t v)\n@@ -43,7 +43,7 @@ uint8_t *off_store8_2 (uint8_t * a, uint32x4_t v)\n /*\n **off_store8_3:\n **\t...\n-**\tvstrb.8\tq0, \\[r0, #127\\]\n+**\tvstrb.8\tq[0-7], \\[r0, #127\\]\n **\t...\n */\n int8_t *off_store8_3 (int8_t * a, int8x16_t v)\n@@ -55,7 +55,7 @@ int8_t *off_store8_3 (int8_t * a, int8x16_t v)\n /*\n **not_off_store8_0:\n **\t...\n-**\tvstrb.8\tq0, \\[r[0-9]+\\]\n+**\tvstrb.8\tq[0-7], \\[r[0-7]+\\]\n **\t...\n */\n uint8_t *not_off_store8_0 (uint8_t * a, uint8x16_t v)\n@@ -67,7 +67,7 @@ uint8_t *not_off_store8_0 (uint8_t * a, uint8x16_t v)\n /*\n **off_storefp16_0:\n **\t...\n-**\tvstrh.16\tq0, \\[r0, #250\\]\n+**\tvstrh.16\tq[0-7], \\[r0, #250\\]\n **\t...\n */\n float16_t *off_storefp16_0 (float16_t *a, float16x8_t v)\n@@ -79,7 +79,7 @@ float16_t *off_storefp16_0 (float16_t *a, float16x8_t v)\n /*\n **off_store16_0:\n **\t...\n-**\tvstrh.16\tq0, \\[r0, #4\\]\n+**\tvstrh.16\tq[0-7], \\[r0, #4\\]\n **\t...\n */\n int16_t *off_store16_0 (int16_t * a, int16x8_t v)\n@@ -91,7 +91,7 @@ int16_t *off_store16_0 (int16_t * a, int16x8_t v)\n /*\n **off_store16_1:\n **\t...\n-**\tvstrh.32\tq0, \\[r0, #-254\\]\n+**\tvstrh.32\tq[0-7], \\[r0, #-254\\]\n **\t...\n */\n int16_t *off_store16_1 (int16_t * a, int32x4_t v)\n@@ -103,7 +103,7 @@ int16_t *off_store16_1 (int16_t * a, int32x4_t v)\n /*\n **not_off_store16_0:\n **\t...\n-**\tvstrh.16\tq0, \\[r[0-9]+\\]\n+**\tvstrh.16\tq[0-7], \\[r[0-7]+\\]\n **\t...\n */\n uint8_t *not_off_store16_0 (uint8_t * a, uint16x8_t v)\n@@ -115,7 +115,7 @@ uint8_t *not_off_store16_0 (uint8_t * a, uint16x8_t v)\n /*\n **not_off_store16_1:\n **\t...\n-**\tvstrh.32\tq0, \\[r[0-9]+\\]\n+**\tvstrh.32\tq[0-7], \\[r[0-7]+\\]\n **\t...\n */\n int16_t *not_off_store16_1 (int16_t * a, int32x4_t v)\n@@ -127,7 +127,7 @@ int16_t *not_off_store16_1 (int16_t * a, int32x4_t v)\n /*\n **off_storefp32_0:\n **\t...\n-**\tvstrw.32\tq0, \\[r0, #-412\\]\n+**\tvstrw.32\tq[0-7], \\[r0, #-412\\]\n **\t...\n */\n float32_t *off_storefp32_0 (float32_t *a, float32x4_t v)\n@@ -139,7 +139,7 @@ float32_t *off_storefp32_0 (float32_t *a, float32x4_t v)\n /*\n **off_store32_0:\n **\t...\n-**\tvstrw.32\tq0, \\[r0, #-4\\]\n+**\tvstrw.32\tq[0-7], \\[r0, #-4\\]\n **\t...\n */\n int32_t *off_store32_0 (int32_t * a, int32x4_t v)\n@@ -151,7 +151,7 @@ int32_t *off_store32_0 (int32_t * a, int32x4_t v)\n /*\n **off_store32_1:\n **\t...\n-**\tvstrw.32\tq0, \\[r0, #508\\]\n+**\tvstrw.32\tq[0-7], \\[r0, #508\\]\n **\t...\n */\n uint32_t *off_store32_1 (uint32_t * a, uint32x4_t v)\n@@ -163,7 +163,7 @@ uint32_t *off_store32_1 (uint32_t * a, uint32x4_t v)\n /*\n **pre_store8_0:\n **\t...\n-**\tvstrb.8\tq[0-9]+, \\[r0, #-16\\]!\n+**\tvstrb.8\tq[0-7], \\[r0, #-16\\]!\n **\t...\n */\n uint8_t* pre_store8_0 (uint8_t * a, uint8x16_t v)\n@@ -176,7 +176,7 @@ uint8_t* pre_store8_0 (uint8_t * a, uint8x16_t v)\n /*\n **pre_store8_1:\n **\t...\n-**\tvstrb.16\tq[0-9]+, \\[r0, #4\\]!\n+**\tvstrb.16\tq[0-7], \\[r0, #4\\]!\n **\t...\n */\n int8_t* pre_store8_1 (int8_t * a, int16x8_t v)\n@@ -189,7 +189,7 @@ int8_t* pre_store8_1 (int8_t * a, int16x8_t v)\n /*\n **pre_storefp16_0:\n **\t...\n-**\tvstrh.16\tq0, \\[r0, #8\\]!\n+**\tvstrh.16\tq[0-7], \\[r0, #8\\]!\n **\t...\n */\n float16_t *pre_storefp16_0 (float16_t *a, float16x8_t v)\n@@ -202,7 +202,7 @@ float16_t *pre_storefp16_0 (float16_t *a, float16x8_t v)\n /*\n **pre_store16_0:\n **\t...\n-**\tvstrh.16\tq[0-9]+, \\[r0, #254\\]!\n+**\tvstrh.16\tq[0-7], \\[r0, #254\\]!\n **\t...\n */\n uint16_t* pre_store16_0 (uint16_t * a, uint16x8_t v)\n@@ -215,7 +215,7 @@ uint16_t* pre_store16_0 (uint16_t * a, uint16x8_t v)\n /*\n **pre_store16_1:\n **\t...\n-**\tvstrh.32\tq[0-9]+, \\[r0, #-52\\]!\n+**\tvstrh.32\tq[0-7], \\[r0, #-52\\]!\n **\t...\n */\n int16_t* pre_store16_1 (int16_t * a, int32x4_t v)\n@@ -228,7 +228,7 @@ int16_t* pre_store16_1 (int16_t * a, int32x4_t v)\n /*\n **pre_storefp32_0:\n **\t...\n-**\tvstrw.32\tq0, \\[r0, #-4\\]!\n+**\tvstrw.32\tq[0-7], \\[r0, #-4\\]!\n **\t...\n */\n float32_t *pre_storefp32_0 (float32_t *a, float32x4_t v)\n@@ -241,7 +241,7 @@ float32_t *pre_storefp32_0 (float32_t *a, float32x4_t v)\n /*\n **pre_store32_0:\n **\t...\n-**\tvstrw.32\tq[0-9]+, \\[r0, #4\\]!\n+**\tvstrw.32\tq[0-7], \\[r0, #4\\]!\n **\t...\n */\n int32_t* pre_store32_0 (int32_t * a, int32x4_t v)\n@@ -255,7 +255,7 @@ int32_t* pre_store32_0 (int32_t * a, int32x4_t v)\n /*\n **post_store8_0:\n **\t...\n-**\tvstrb.8\tq[0-9]+, \\[r0\\], #-26\n+**\tvstrb.8\tq[0-7], \\[r0\\], #-26\n **\t...\n */\n int8_t* post_store8_0 (int8_t * a, int8x16_t v)\n@@ -268,7 +268,7 @@ int8_t* post_store8_0 (int8_t * a, int8x16_t v)\n /*\n **post_store8_1:\n **\t...\n-**\tvstrb.16\tq[0-9]+, \\[r0\\], #1\n+**\tvstrb.16\tq[0-7], \\[r0\\], #1\n **\t...\n */\n uint8_t* post_store8_1 (uint8_t * a, uint16x8_t v)\n@@ -281,7 +281,7 @@ uint8_t* post_store8_1 (uint8_t * a, uint16x8_t v)\n /*\n **post_store8_2:\n **\t...\n-**\tvstrb.8\tq[0-9]+, \\[r0\\], #-26\n+**\tvstrb.8\tq[0-7], \\[r0\\], #-26\n **\t...\n */\n int8_t* post_store8_2 (int8_t * a, int8x16_t v)\n@@ -294,7 +294,7 @@ int8_t* post_store8_2 (int8_t * a, int8x16_t v)\n /*\n **post_store8_3:\n **\t...\n-**\tvstrb.16\tq[0-9]+, \\[r0\\], #7\n+**\tvstrb.16\tq[0-7], \\[r0\\], #7\n **\t...\n */\n uint8_t* post_store8_3 (uint8_t * a, uint16x8_t v)\n@@ -307,7 +307,7 @@ uint8_t* post_store8_3 (uint8_t * a, uint16x8_t v)\n /*\n **post_storefp16_0:\n **\t...\n-**\tvstrh.16\tq[0-9]+, \\[r0\\], #-16\n+**\tvstrh.16\tq[0-7], \\[r0\\], #-16\n **\t...\n */\n float16_t *post_storefp16_0 (float16_t *a, float16x8_t v)\n@@ -320,7 +320,7 @@ float16_t *post_storefp16_0 (float16_t *a, float16x8_t v)\n /*\n **post_store16_0:\n **\t...\n-**\tvstrh.16\tq[0-9]+, \\[r0\\], #126\n+**\tvstrh.16\tq[0-7], \\[r0\\], #126\n **\t...\n */\n int16_t* post_store16_0 (int16_t * a, int16x8_t v)\n@@ -333,7 +333,7 @@ int16_t* post_store16_0 (int16_t * a, int16x8_t v)\n /*\n **post_store16_1:\n **\t...\n-**\tvstrh.32\tq[0-9]+, \\[r0\\], #-16\n+**\tvstrh.32\tq[0-7], \\[r0\\], #-16\n **\t...\n */\n uint16_t* post_store16_1 (uint16_t * a, uint32x4_t v)\n@@ -346,7 +346,7 @@ uint16_t* post_store16_1 (uint16_t * a, uint32x4_t v)\n /*\n **post_storefp32_0:\n **\t...\n-**\tvstrw.32\tq[0-9]+, \\[r0\\], #-16\n+**\tvstrw.32\tq[0-7], \\[r0\\], #-16\n **\t...\n */\n float32_t* post_storefp32_0 (float32_t * a, float32x4_t v)\n@@ -359,7 +359,7 @@ float32_t* post_storefp32_0 (float32_t * a, float32x4_t v)\n /*\n **post_store32_0:\n **\t...\n-**\tvstrw.32\tq[0-9]+, \\[r0\\], #16\n+**\tvstrw.32\tq[0-7], \\[r0\\], #16\n **\t...\n */\n int32_t* post_store32_0 (int32_t * a, int32x4_t v)"}]}