{"sha": "36d0dada6773d7fd7c5ace64c90e723930a3b81e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZkMGRhZGE2NzczZDdmZDdjNWFjZTY0YzkwZTcyMzkzMGEzYjgxZQ==", "commit": {"author": {"name": "Michael Weghorn", "email": "m.weghorn@posteo.de", "date": "2019-06-19T22:57:06Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-06-19T22:57:06Z"}, "message": "Have std::vector printer's iterator return bool for vector<bool>\n\nHave the pretty-printer for 'std::vector<bool>' return a\nvalue of type 'bool' rather than an 'int'.\n\nThis way, the type is clear and that can be used for better\ndisplay and a 'gdb.Value' constructed from the returned value\nwill have type 'bool' again, not e.g. 'long long' as happened\npreviously (at least with GDB 8.2.1 on amd64).\n\n2019-06-19  Michael Weghorn  <m.weghorn@posteo.de>\n\t    Jonathan Wakely  <jwakely@redhat.com>\n\n\tPR libstdc++/90945\n\t* python/libstdcxx/v6/printers.py (StdVectorPrinter._iterator): Use\n\tvalues of type bool for vector<bool> elements.\n\t* testsuite/libstdc++-prettyprinters/simple.cc: Test vector<bool>.\n\t* testsuite/libstdc++-prettyprinters/simple11.cc: Likewise.\n\nCo-Authored-By: Jonathan Wakely <jwakely@redhat.com>\n\nFrom-SVN: r272490", "tree": {"sha": "ab74e6ba1f45dcc88d0e4ce6879ba03c6171d02e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab74e6ba1f45dcc88d0e4ce6879ba03c6171d02e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36d0dada6773d7fd7c5ace64c90e723930a3b81e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36d0dada6773d7fd7c5ace64c90e723930a3b81e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36d0dada6773d7fd7c5ace64c90e723930a3b81e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36d0dada6773d7fd7c5ace64c90e723930a3b81e/comments", "author": {"login": "michaelweghorn", "id": 6560939, "node_id": "MDQ6VXNlcjY1NjA5Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/6560939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelweghorn", "html_url": "https://github.com/michaelweghorn", "followers_url": "https://api.github.com/users/michaelweghorn/followers", "following_url": "https://api.github.com/users/michaelweghorn/following{/other_user}", "gists_url": "https://api.github.com/users/michaelweghorn/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelweghorn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelweghorn/subscriptions", "organizations_url": "https://api.github.com/users/michaelweghorn/orgs", "repos_url": "https://api.github.com/users/michaelweghorn/repos", "events_url": "https://api.github.com/users/michaelweghorn/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelweghorn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fd9e8482e73ca8ed74ad390e507f9f922ccc5ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fd9e8482e73ca8ed74ad390e507f9f922ccc5ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fd9e8482e73ca8ed74ad390e507f9f922ccc5ce"}], "stats": {"total": 41, "additions": 34, "deletions": 7}, "files": [{"sha": "a481420781db287b96708d2f14824c1b355b943a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d0dada6773d7fd7c5ace64c90e723930a3b81e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d0dada6773d7fd7c5ace64c90e723930a3b81e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=36d0dada6773d7fd7c5ace64c90e723930a3b81e", "patch": "@@ -1,3 +1,12 @@\n+2019-06-19  Michael Weghorn  <m.weghorn@posteo.de>\n+\t    Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/90945\n+\t* python/libstdcxx/v6/printers.py (StdVectorPrinter._iterator): Use\n+\tvalues of type bool for vector<bool> elements.\n+\t* testsuite/libstdc++-prettyprinters/simple.cc: Test vector<bool>.\n+\t* testsuite/libstdc++-prettyprinters/simple11.cc: Likewise.\n+\n 2019-06-19  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/90920 partially revert r263433"}, {"sha": "cd79a1fa6e68150e870c8134755896ad40982b1e", "filename": "libstdc++-v3/python/libstdcxx/v6/printers.py", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d0dada6773d7fd7c5ace64c90e723930a3b81e/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d0dada6773d7fd7c5ace64c90e723930a3b81e/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py?ref=36d0dada6773d7fd7c5ace64c90e723930a3b81e", "patch": "@@ -362,16 +362,12 @@ def __next__(self):\n             if self.bitvec:\n                 if self.item == self.finish and self.so >= self.fo:\n                     raise StopIteration\n-                elt = self.item.dereference()\n-                if elt & (1 << self.so):\n-                    obit = 1\n-                else:\n-                    obit = 0\n+                elt = bool(self.item.dereference() & (1 << self.so))\n                 self.so = self.so + 1\n                 if self.so >= self.isize:\n                     self.item = self.item + 1\n                     self.so = 0\n-                return ('[%d]' % count, obit)\n+                return ('[%d]' % count, elt)\n             else:\n                 if self.item == self.finish:\n                     raise StopIteration\n@@ -382,7 +378,7 @@ def __next__(self):\n     def __init__(self, typename, val):\n         self.typename = strip_versioned_namespace(typename)\n         self.val = val\n-        self.is_bool = val.type.template_argument(0).code  == gdb.TYPE_CODE_BOOL\n+        self.is_bool = val.type.template_argument(0).code == gdb.TYPE_CODE_BOOL\n \n     def children(self):\n         return self._iterator(self.val['_M_impl']['_M_start'],\n@@ -422,6 +418,8 @@ def to_string(self):\n             return 'non-dereferenceable iterator for std::vector'\n         return str(self.val['_M_current'].dereference())\n \n+# TODO add printer for vector<bool>'s _Bit_iterator and _Bit_const_iterator\n+\n class StdTuplePrinter:\n     \"Print a std::tuple\"\n "}, {"sha": "04c1ef683a68c675cd6d5ba16c06a4985e4acb82", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/simple.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d0dada6773d7fd7c5ace64c90e723930a3b81e/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fsimple.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d0dada6773d7fd7c5ace64c90e723930a3b81e/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fsimple.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fsimple.cc?ref=36d0dada6773d7fd7c5ace64c90e723930a3b81e", "patch": "@@ -116,6 +116,16 @@ main()\n   std::vector<int>::iterator viter0;\n // { dg-final { note-test viter0 {non-dereferenceable iterator for std::vector} } }\n \n+  std::vector<bool> vb;\n+  vb.reserve(100);\n+  vb.push_back(true);\n+  vb.push_back(true);\n+  vb.push_back(false);\n+  vb.push_back(false);\n+  vb.push_back(true);\n+  vb.erase(vb.begin());\n+// { dg-final { regexp-test vb {std::(__debug::)?vector<bool> of length 4, capacity 128 = \\\\{true, false, false, true\\\\}} } }\n+\n   __gnu_cxx::slist<int> sll;\n   sll.push_front(23);\n   sll.push_front(47);"}, {"sha": "ace217cc9e8cce3bd78bfc7797a2ef1305c616a1", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/simple11.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36d0dada6773d7fd7c5ace64c90e723930a3b81e/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fsimple11.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36d0dada6773d7fd7c5ace64c90e723930a3b81e/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fsimple11.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fsimple11.cc?ref=36d0dada6773d7fd7c5ace64c90e723930a3b81e", "patch": "@@ -109,6 +109,16 @@ main()\n   std::vector<int>::iterator viter0;\n // { dg-final { note-test viter0 {non-dereferenceable iterator for std::vector} } }\n \n+  std::vector<bool> vb;\n+  vb.reserve(100);\n+  vb.push_back(true);\n+  vb.push_back(true);\n+  vb.push_back(false);\n+  vb.push_back(false);\n+  vb.push_back(true);\n+  vb.erase(vb.begin());\n+// { dg-final { regexp-test vb {std::(__debug::)?vector<bool> of length 4, capacity 128 = \\\\{true, false, false, true\\\\}} } }\n+\n   __gnu_cxx::slist<int> sll;\n   sll.push_front(23);\n   sll.push_front(47);"}]}