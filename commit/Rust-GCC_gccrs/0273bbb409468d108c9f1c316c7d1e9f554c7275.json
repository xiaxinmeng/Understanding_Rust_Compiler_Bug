{"sha": "0273bbb409468d108c9f1c316c7d1e9f554c7275", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI3M2JiYjQwOTQ2OGQxMDhjOWYxYzMxNmM3ZDFlOWY1NTRjNzI3NQ==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2006-02-15T09:39:28Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-15T09:39:28Z"}, "message": "expect.c (__gnat_expect_portable_execvp): New implementation.\n\n2006-02-13  Pascal Obry  <obry@adacore.com>\n\n\t* expect.c (__gnat_expect_portable_execvp): New implementation. The\n\tprevious implementation was using the C runtime spawnve routine but\n\tthe corresponding wait was using directly the Win32 API. This was\n\tcausing some times a lock when waiting for an event using\n\tWaitForSingleObject in __gnat_waitpid. This new implementation uses\n\tthe Win32 CreateProcess routine. Avoiding mixing C runtime and Win32\n\tAPI fixes this problem.\n\nFrom-SVN: r111066", "tree": {"sha": "38f6bb932b194a9cf72a72ab305f4c9b4bbca977", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38f6bb932b194a9cf72a72ab305f4c9b4bbca977"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0273bbb409468d108c9f1c316c7d1e9f554c7275", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0273bbb409468d108c9f1c316c7d1e9f554c7275", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0273bbb409468d108c9f1c316c7d1e9f554c7275", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0273bbb409468d108c9f1c316c7d1e9f554c7275/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d48e258e71954c337635c94cc21c8d046a7e1042", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d48e258e71954c337635c94cc21c8d046a7e1042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d48e258e71954c337635c94cc21c8d046a7e1042"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "6d2cf86e3226594ad5fd44ee1754fdc1b53e0993", "filename": "gcc/ada/expect.c", "status": "modified", "additions": 55, "deletions": 1, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0273bbb409468d108c9f1c316c7d1e9f554c7275/gcc%2Fada%2Fexpect.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0273bbb409468d108c9f1c316c7d1e9f554c7275/gcc%2Fada%2Fexpect.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpect.c?ref=0273bbb409468d108c9f1c316c7d1e9f554c7275", "patch": "@@ -114,7 +114,61 @@ __gnat_expect_fork (void)\n void\n __gnat_expect_portable_execvp (int *pid, char *cmd, char *argv[])\n {\n-  *pid = (int) spawnve (_P_NOWAIT, cmd, argv, NULL);\n+  BOOL result;\n+  STARTUPINFO SI;\n+  PROCESS_INFORMATION PI;\n+  SECURITY_ATTRIBUTES SA;\n+  int csize = 1;\n+  char *full_command;\n+  int k;\n+\n+  /* compute the total command line length.  */\n+  k = 0;\n+  while (argv[k])\n+    {\n+      csize += strlen (argv[k]) + 1;\n+      k++;\n+    }\n+\n+  full_command = (char *) malloc (csize);\n+  full_command[0] = '\\0';\n+\n+  /* Startup info. */\n+  SI.cb          = sizeof (STARTUPINFO);\n+  SI.lpReserved  = NULL;\n+  SI.lpReserved2 = NULL;\n+  SI.lpDesktop   = NULL;\n+  SI.cbReserved2 = 0;\n+  SI.lpTitle     = NULL;\n+  SI.dwFlags     = 0;\n+  SI.wShowWindow = SW_HIDE;\n+\n+  /* Security attributes. */\n+  SA.nLength = sizeof (SECURITY_ATTRIBUTES);\n+  SA.bInheritHandle = TRUE;\n+  SA.lpSecurityDescriptor = NULL;\n+\n+  k = 0;\n+  while (argv[k])\n+    {\n+      strcat (full_command, argv[k]);\n+      strcat (full_command, \" \");\n+      k++;\n+    }\n+\n+  result = CreateProcess\n+\t     (NULL, (char *) full_command, &SA, NULL, TRUE,\n+              GetPriorityClass (GetCurrentProcess()), NULL, NULL, &SI, &PI);\n+\n+  free (full_command);\n+\n+  if (result == TRUE)\n+    {\n+      CloseHandle (PI.hThread);\n+      *pid = (int) PI.hProcess;\n+    }\n+  else\n+    *pid = -1;\n }\n \n int"}]}