{"sha": "00b365d5804abd82373216e807ef46de8e24ca02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBiMzY1ZDU4MDRhYmQ4MjM3MzIxNmU4MDdlZjQ2ZGU4ZTI0Y2EwMg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-09-30T17:11:38Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-09-30T17:11:38Z"}, "message": "re PR c++/16564 (g++ seems to go into an infinite loop after errors)\n\ncp/\n2014-09-30  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n       PR c++/16564\n       * error.c (print_instantiation_context): Delete.\n       * typeck2.c (build_x_arrow): Record location when pushing\n       template instantiation.\n       * pt.c (push_tinst_level): Make it a wrapper around ...\n       (push_tinst_level_loc): ... this. New function. Make excessive\n       template instantiation depth a fatal error. Record location. Use\n       bool as return type.\n       (instantiate_pending_templates): Make excessive\n       template instantiation depth a fatal error.\n       (problematic_instantiation_changed): Use bool as return type.\n       * cp-tree.h (print_instantiation_context): Delete.\n       (push_tinst_level): Update declaration.\n       (problematic_instantiation_changed): Likewise.\n       (push_tinst_level_loc): New.\n\ntestsuite/\n2014-09-30  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n       PR c++/16564\n       * lib/gcc.exp: Accept \"fatal error:\" as error prefix.\n       * lib/g++.exp: Likewise.\n       * lib/obj-c++.exp: Likewise.\n       * lib/objc.exp: Likewise.\n       * g++.dg/template/pr16564.C: New test.\n\n2014-09-30  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/16564\n\t* g++.dg/cpp0x/decltype26.C: Adjust.\n\t* g++.dg/cpp0x/decltype28.C: Likewise.\n\t* g++.dg/cpp0x/decltype29.C: Likewise.\n\t* g++.dg/cpp0x/decltype32.C: Likewise.\n\t* g++.dg/cpp0x/enum11.C: Likewise.\n\t* g++.dg/template/arrow1.C: Likewise.\n\t* g++.dg/template/pr23510.C: Likewise.\n\t* g++.dg/template/recurse.C: Likewise.\n\t* g++.dg/template/recurse2.C: Likewise.\n\t* g++.dg/template/vtable2.C: Likewise.\n\t* g++.old-deja/g++.pt/infinite1.C: Likewise.\n\nFrom-SVN: r215734", "tree": {"sha": "9acef52ef3e31182fbf7c847aa4b2170d4ccc46f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9acef52ef3e31182fbf7c847aa4b2170d4ccc46f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00b365d5804abd82373216e807ef46de8e24ca02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00b365d5804abd82373216e807ef46de8e24ca02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00b365d5804abd82373216e807ef46de8e24ca02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00b365d5804abd82373216e807ef46de8e24ca02/comments", "author": null, "committer": null, "parents": [{"sha": "75a0d320063941e878f65177f59d2c0e5515472a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75a0d320063941e878f65177f59d2c0e5515472a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75a0d320063941e878f65177f59d2c0e5515472a"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "7a34313e906bd073a9ec4ba62ff06f847f107216", "filename": "gcc/testsuite/g++.dg/template/pr16564.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00b365d5804abd82373216e807ef46de8e24ca02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr16564.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00b365d5804abd82373216e807ef46de8e24ca02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr16564.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr16564.C?ref=00b365d5804abd82373216e807ef46de8e24ca02", "patch": "@@ -0,0 +1,10 @@\n+// { dg-do compile }\n+template<typename> struct A\n+{\n+  A<A> a; /* { dg-error \"depth\" } */\n+  A() {}\n+};\n+\n+A<int> a;\n+\n+// { dg-prune-output \"compilation terminated\" }"}]}