{"sha": "4be9e9cbe4570993119a33c8376a385755085fc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJlOWU5Y2JlNDU3MDk5MzExOWEzM2M4Mzc2YTM4NTc1NTA4NWZjOA==", "commit": {"author": {"name": "Tom Rix", "email": "trix@redhat.com", "date": "2002-04-30T21:39:46Z"}, "committer": {"name": "Tom Rix", "email": "trix@gcc.gnu.org", "date": "2002-04-30T21:39:46Z"}, "message": "Add sanity check to regrename.c.\n\nFrom-SVN: r52974", "tree": {"sha": "50030524a13052e54d51d78e3d0cd5668a9ed0ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50030524a13052e54d51d78e3d0cd5668a9ed0ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4be9e9cbe4570993119a33c8376a385755085fc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4be9e9cbe4570993119a33c8376a385755085fc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4be9e9cbe4570993119a33c8376a385755085fc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4be9e9cbe4570993119a33c8376a385755085fc8/comments", "author": {"login": "trixirt", "id": 7824193, "node_id": "MDQ6VXNlcjc4MjQxOTM=", "avatar_url": "https://avatars.githubusercontent.com/u/7824193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trixirt", "html_url": "https://github.com/trixirt", "followers_url": "https://api.github.com/users/trixirt/followers", "following_url": "https://api.github.com/users/trixirt/following{/other_user}", "gists_url": "https://api.github.com/users/trixirt/gists{/gist_id}", "starred_url": "https://api.github.com/users/trixirt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trixirt/subscriptions", "organizations_url": "https://api.github.com/users/trixirt/orgs", "repos_url": "https://api.github.com/users/trixirt/repos", "events_url": "https://api.github.com/users/trixirt/events{/privacy}", "received_events_url": "https://api.github.com/users/trixirt/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1eeeb6a437b35a0a48b7758d33e2d33164ca52db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eeeb6a437b35a0a48b7758d33e2d33164ca52db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1eeeb6a437b35a0a48b7758d33e2d33164ca52db"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "1d0d6e863f92c412c61f0ddb25221c32017afd08", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4be9e9cbe4570993119a33c8376a385755085fc8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4be9e9cbe4570993119a33c8376a385755085fc8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4be9e9cbe4570993119a33c8376a385755085fc8", "patch": "@@ -1,3 +1,8 @@\n+2002-04-30  Tom Rix  <trix@redhat.com>\n+\n+\t* regrename.c (build_def_use, copyprop_hardreg_forward_1): Sanity \n+\tcheck which_alternative.\n+\n 2002-04-30  Kazu Hirata  <kazu@hxi.com>\n \n \t* cpplex.c: Fix comment formatting."}, {"sha": "6463879fd8670773a18f1c867afdba4ea46943d2", "filename": "gcc/regrename.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4be9e9cbe4570993119a33c8376a385755085fc8/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4be9e9cbe4570993119a33c8376a385755085fc8/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=4be9e9cbe4570993119a33c8376a385755085fc8", "patch": "@@ -786,7 +786,8 @@ build_def_use (bb)\n \n \t  icode = recog_memoized (insn);\n \t  extract_insn (insn);\n-\t  constrain_operands (1);\n+\t  if (! constrain_operands (1))\n+\t    fatal_insn_not_found (insn);\t\n \t  preprocess_constraints ();\n \t  alt = which_alternative;\n \t  n_ops = recog_data.n_operands;\n@@ -1546,7 +1547,8 @@ copyprop_hardreg_forward_1 (bb, vd)\n \n       set = single_set (insn);\n       extract_insn (insn);\n-      constrain_operands (1);\n+      if (! constrain_operands (1))\n+\tfatal_insn_not_found (insn);\t\n       preprocess_constraints ();\n       alt = which_alternative;\n       n_ops = recog_data.n_operands;"}]}