{"sha": "c067d9fe141912636b9d757fbd83ce7d73300bfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA2N2Q5ZmUxNDE5MTI2MzZiOWQ3NTdmYmQ4M2NlN2Q3MzMwMGJmZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-05-03T09:02:15Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-05-03T09:02:15Z"}, "message": "re PR c++/14283 (Diagnostic for invalid template-id could be improved)\n\n/cp\n2013-05-03  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/14283\n\t* parser.c (cp_parser_diagnose_invalid_type_name): Improve error\n\tmessages for template types and fix column numbers.\n\n/testsuite\n2013-05-03  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/14283\n\t* g++.dg/parse/error51.C: New.\n\t* g++.dg/parse/error15.C: Adjust column numbers.\n\nFrom-SVN: r198572", "tree": {"sha": "764662553646f9fc5bafdadec4e3dcda62ec1f92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/764662553646f9fc5bafdadec4e3dcda62ec1f92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c067d9fe141912636b9d757fbd83ce7d73300bfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c067d9fe141912636b9d757fbd83ce7d73300bfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c067d9fe141912636b9d757fbd83ce7d73300bfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c067d9fe141912636b9d757fbd83ce7d73300bfe/comments", "author": null, "committer": null, "parents": [{"sha": "79d944d29618c459e8470715ed0a38a0f2891c50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d944d29618c459e8470715ed0a38a0f2891c50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79d944d29618c459e8470715ed0a38a0f2891c50"}], "stats": {"total": 67, "additions": 54, "deletions": 13}, "files": [{"sha": "b9bdf3a49089973afb106f0ff67cab12d6cb5b0b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c067d9fe141912636b9d757fbd83ce7d73300bfe/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c067d9fe141912636b9d757fbd83ce7d73300bfe/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c067d9fe141912636b9d757fbd83ce7d73300bfe", "patch": "@@ -1,3 +1,9 @@\n+2013-05-03  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/14283\n+\t* parser.c (cp_parser_diagnose_invalid_type_name): Improve error\n+\tmessages for template types and fix column numbers.\n+\n 2013-05-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/57132"}, {"sha": "f87974ee0e2eb9cd546cc0ff4c47ac07fe24cfc9", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c067d9fe141912636b9d757fbd83ce7d73300bfe/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c067d9fe141912636b9d757fbd83ce7d73300bfe/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=c067d9fe141912636b9d757fbd83ce7d73300bfe", "patch": "@@ -2872,8 +2872,16 @@ cp_parser_diagnose_invalid_type_name (cp_parser *parser,\n   else if (parser->scope != error_mark_node)\n     {\n       if (TREE_CODE (parser->scope) == NAMESPACE_DECL)\n-\terror_at (location, \"%qE in namespace %qE does not name a type\",\n-\t\t  id, parser->scope);\n+\t{\n+\t  if (cp_lexer_next_token_is (parser->lexer, CPP_LESS))\n+\t    error_at (location_of (id),\n+\t\t      \"%qE in namespace %qE does not name a template type\",\n+\t\t      id, parser->scope);\n+\t  else\n+\t    error_at (location_of (id),\n+\t\t      \"%qE in namespace %qE does not name a type\",\n+\t\t      id, parser->scope);\n+\t}\n       else if (CLASS_TYPE_P (parser->scope)\n \t       && constructor_name_p (id, parser->scope))\n \t{\n@@ -2890,8 +2898,16 @@ cp_parser_diagnose_invalid_type_name (cp_parser *parser,\n \t\t  \"%qT is a dependent scope\",\n \t\t  parser->scope, id, parser->scope);\n       else if (TYPE_P (parser->scope))\n-\terror_at (location, \"%qE in %q#T does not name a type\",\n-\t\t  id, parser->scope);\n+\t{\n+\t  if (cp_lexer_next_token_is (parser->lexer, CPP_LESS))\n+\t    error_at (location_of (id),\n+\t\t      \"%qE in %q#T does not name a template type\",\n+\t\t      id, parser->scope);\n+\t  else\n+\t    error_at (location_of (id),\n+\t\t      \"%qE in %q#T does not name a type\",\n+\t\t      id, parser->scope);\n+\t}\n       else\n \tgcc_unreachable ();\n     }"}, {"sha": "88ac42033b719ba5eab70d409cb33795cc4ebded", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c067d9fe141912636b9d757fbd83ce7d73300bfe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c067d9fe141912636b9d757fbd83ce7d73300bfe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c067d9fe141912636b9d757fbd83ce7d73300bfe", "patch": "@@ -1,3 +1,9 @@\n+2013-05-03  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/14283\n+\t* g++.dg/parse/error51.C: New.\n+\t* g++.dg/parse/error15.C: Adjust column numbers.\n+\n 2013-05-02  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/57142"}, {"sha": "deba54aca106f6a4e859e3ca0d20789e533872cf", "filename": "gcc/testsuite/g++.dg/parse/error15.C", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c067d9fe141912636b9d757fbd83ce7d73300bfe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c067d9fe141912636b9d757fbd83ce7d73300bfe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror15.C?ref=c067d9fe141912636b9d757fbd83ce7d73300bfe", "patch": "@@ -11,19 +11,19 @@ namespace N\n }\n \n N::A f2;              // { dg-error \"1:invalid use of template-name 'N::A' without an argument list\" }\n-N::INVALID f3;        // { dg-error \"1:'INVALID' in namespace 'N' does not name a type\" }\n-N::C::INVALID f4;     // { dg-error \"1:'INVALID' in 'struct N::C' does not name a type\" }\n-N::K f6;              // { dg-error \"1:'K' in namespace 'N' does not name a type\" }\n+N::INVALID f3;        // { dg-error \"4:'INVALID' in namespace 'N' does not name a type\" }\n+N::C::INVALID f4;     // { dg-error \"7:'INVALID' in 'struct N::C' does not name a type\" }\n+N::K f6;              // { dg-error \"4:'K' in namespace 'N' does not name a type\" }\n typename N::A f7;\n // { dg-error \"13:invalid use of template-name 'N::A' without an argument list\" \"13\" { target *-*-* } 17 }\n // { dg-error \"17:invalid type in declaration before ';' token\" \"17\" { target *-*-* } 17 }\n \n struct B\n {\n   N::A f2;            // { dg-error \"3:invalid use of template-name 'N::A' without an argument list\" }\n-  N::INVALID f3;      // { dg-error \"3:'INVALID' in namespace 'N' does not name a type\" }\n-  N::C::INVALID f4;   // { dg-error \"3:'INVALID' in 'struct N::C' does not name a type\" }\n-  N::K f6;            // { dg-error \"3:'K' in namespace 'N' does not name a type\" }\n+  N::INVALID f3;      // { dg-error \"6:'INVALID' in namespace 'N' does not name a type\" }\n+  N::C::INVALID f4;   // { dg-error \"9:'INVALID' in 'struct N::C' does not name a type\" }\n+  N::K f6;            // { dg-error \"6:'K' in namespace 'N' does not name a type\" }\n   typename N::A f7;\n // { dg-error \"15:invalid use of template-name 'N::A' without an argument list\" \"15\" { target *-*-* } 27 }\n };\n@@ -32,9 +32,9 @@ template <int>\n struct C\n {\n   N::A f2;            // { dg-error \"3:invalid use of template-name 'N::A' without an argument list\" }\n-  N::INVALID f3;      // { dg-error \"3:'INVALID' in namespace 'N' does not name a type\" }\n-  N::C::INVALID f4;   // { dg-error \"3:'INVALID' in 'struct N::C' does not name a type\" }\n-  N::K f6;            // { dg-error \"3:'K' in namespace 'N' does not name a type\" }\n+  N::INVALID f3;      // { dg-error \"6:'INVALID' in namespace 'N' does not name a type\" }\n+  N::C::INVALID f4;   // { dg-error \"9:'INVALID' in 'struct N::C' does not name a type\" }\n+  N::K f6;            // { dg-error \"6:'K' in namespace 'N' does not name a type\" }\n   typename N::A f7;   // { dg-error \"15:invalid use of template-name 'N::A' without an argument list\" }\n };\n "}, {"sha": "e599304b6d86dfcd678c7894d5f8c6c5b7bf037b", "filename": "gcc/testsuite/g++.dg/parse/error51.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c067d9fe141912636b9d757fbd83ce7d73300bfe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror51.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c067d9fe141912636b9d757fbd83ce7d73300bfe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror51.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror51.C?ref=c067d9fe141912636b9d757fbd83ce7d73300bfe", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/14283\n+\n+struct A\n+{};\n+\n+namespace N\n+{}\n+\n+template <typename> struct C\n+{\n+  typedef A::template INVALID<void> X0;  // { dg-error \"23:'INVALID' in 'struct A' does not name a template type\" }\n+  typedef N::template INVALID<void> X1;  // { dg-error \"23:'INVALID' in namespace 'N' does not name a template type\" }\n+};"}]}