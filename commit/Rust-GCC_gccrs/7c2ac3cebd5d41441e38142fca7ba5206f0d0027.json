{"sha": "7c2ac3cebd5d41441e38142fca7ba5206f0d0027", "node_id": "C_kwDOANBUbNoAKDdjMmFjM2NlYmQ1ZDQxNDQxZTM4MTQyZmNhN2JhNTIwNmYwZDAwMjc", "commit": {"author": {"name": "Hafiz Abid Qadeer", "email": "abidh@codesourcery.com", "date": "2022-01-31T19:02:14Z"}, "committer": {"name": "Hafiz Abid Qadeer", "email": "abidh@codesourcery.com", "date": "2022-03-10T18:43:50Z"}, "message": "Fix multiple issue in the testcase allocate-1.f90.\n\n1. Thomas reported in\nhttps://gcc.gnu.org/pipermail/gcc-patches/2022-January/589039.html\nthat this testcase is randomly failing. The problem was fixed pool\nsize which was exhausted when there were a lot of threads. Fixed it\nby removing pool_size trait which causes default pool size to be used\nwhich should be big enough.\n\n2. Array indices have been changed to check the last element in the\narray.\n\n3. Remove a redundant assignment and move some code to better match\nC testcase.\n\nlibgomp/ChangeLog:\n\n\t* testsuite/libgomp.fortran/allocate-1.f90: Remove pool_size\n\ttrait.  Test last index in w and v array.  Remove redundant\n\tassignment to V(1).  Move alignment checks at the end of\n\tparallel region.", "tree": {"sha": "f6e255d60d1c958bb888101ed1b34fcbccff7232", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6e255d60d1c958bb888101ed1b34fcbccff7232"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c2ac3cebd5d41441e38142fca7ba5206f0d0027", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c2ac3cebd5d41441e38142fca7ba5206f0d0027", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c2ac3cebd5d41441e38142fca7ba5206f0d0027", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c2ac3cebd5d41441e38142fca7ba5206f0d0027/comments", "author": {"login": "abidh", "id": 4067533, "node_id": "MDQ6VXNlcjQwNjc1MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/4067533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abidh", "html_url": "https://github.com/abidh", "followers_url": "https://api.github.com/users/abidh/followers", "following_url": "https://api.github.com/users/abidh/following{/other_user}", "gists_url": "https://api.github.com/users/abidh/gists{/gist_id}", "starred_url": "https://api.github.com/users/abidh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abidh/subscriptions", "organizations_url": "https://api.github.com/users/abidh/orgs", "repos_url": "https://api.github.com/users/abidh/repos", "events_url": "https://api.github.com/users/abidh/events{/privacy}", "received_events_url": "https://api.github.com/users/abidh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "abidh", "id": 4067533, "node_id": "MDQ6VXNlcjQwNjc1MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/4067533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abidh", "html_url": "https://github.com/abidh", "followers_url": "https://api.github.com/users/abidh/followers", "following_url": "https://api.github.com/users/abidh/following{/other_user}", "gists_url": "https://api.github.com/users/abidh/gists{/gist_id}", "starred_url": "https://api.github.com/users/abidh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abidh/subscriptions", "organizations_url": "https://api.github.com/users/abidh/orgs", "repos_url": "https://api.github.com/users/abidh/repos", "events_url": "https://api.github.com/users/abidh/events{/privacy}", "received_events_url": "https://api.github.com/users/abidh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4602a494e94835f693a9230adb69ce92249ebf15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4602a494e94835f693a9230adb69ce92249ebf15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4602a494e94835f693a9230adb69ce92249ebf15"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "1547d2baeeff58b5c8136bdb57d60279325bcc81", "filename": "libgomp/testsuite/libgomp.fortran/allocate-1.f90", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c2ac3cebd5d41441e38142fca7ba5206f0d0027/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocate-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c2ac3cebd5d41441e38142fca7ba5206f0d0027/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocate-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocate-1.f90?ref=7c2ac3cebd5d41441e38142fca7ba5206f0d0027", "patch": "@@ -74,31 +74,30 @@ subroutine foo (x, p, q, h, fl)\n   if (x /= 42) then\n     stop 1\n   end if\n-  v(1) = 7\n-  if ( (and(fl, 2) /= 0) .and.          &\n-       ((is_64bit_aligned(x) == 0) .or. &\n-        (is_64bit_aligned(y) == 0) .or. &\n-        (is_64bit_aligned(v(1)) == 0))) then\n-      stop 2\n-  end if\n \n   !$omp barrier\n   y = 1;\n   x = x + 1\n   v(1) = 7\n-  v(41) = 8\n+  v(42) = 8\n   !$omp barrier\n   if (x /= 43 .or. y /= 1) then\n     stop 3\n   end if\n-  if (v(1) /= 7 .or. v(41) /= 8) then\n+  if (v(1) /= 7 .or. v(42) /= 8) then\n     stop 4\n   end if\n+  if ( (and(fl, 2) /= 0) .and.        &\n+     ((is_64bit_aligned(x) == 0) .or. &\n+      (is_64bit_aligned(y) == 0) .or. &\n+      (is_64bit_aligned(v(1)) == 0))) then\n+    stop 2\n+  end if\n   !$omp end parallel\n   !$omp teams\n   !$omp parallel private (y) firstprivate (x, w) allocate (h: x, y, w)\n \n-  if (x /= 42 .or. w(17) /= 17 .or. w(41) /= 41) then\n+  if (x /= 42 .or. w(17) /= 17 .or. w(42) /= 42) then\n     stop 5\n   end if\n   !$omp barrier\n@@ -314,13 +313,12 @@ program main\n   integer, dimension(4) :: p\n   integer, dimension(4) :: q\n \n-  type (omp_alloctrait) :: traits(3)\n+  type (omp_alloctrait) :: traits(2)\n   integer (omp_allocator_handle_kind) :: a\n \n   traits = [omp_alloctrait (omp_atk_alignment, 64), &\n-            omp_alloctrait (omp_atk_fallback, omp_atv_null_fb), &\n-            omp_alloctrait (omp_atk_pool_size, 8192)]\n-  a = omp_init_allocator (omp_default_mem_space, 3, traits)\n+            omp_alloctrait (omp_atk_fallback, omp_atv_null_fb)]\n+  a = omp_init_allocator (omp_default_mem_space, 2, traits)\n   if (a == omp_null_allocator) stop 1\n \n   call omp_set_default_allocator (omp_default_mem_alloc);"}]}