{"sha": "8c61f40011bf6868ab21970dc2eada32270bb65b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM2MWY0MDAxMWJmNjg2OGFiMjE5NzBkYzJlYWRhMzIyNzBiYjY1Yg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-08-13T11:48:34Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-08-13T11:48:34Z"}, "message": "ios_init.cc (ios_base::Init::~Init): Add back semicolon at the end of the _GLIBCXX_SYNCHRONIZATION_HAPPENS* macros...\n\n2010-08-12  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* src/ios_init.cc (ios_base::Init::~Init): Add back semicolon\n\tat the end of the _GLIBCXX_SYNCHRONIZATION_HAPPENS* macros,\n\tremoved by mistake.\n\t* include/tr1_impl/boost_sp_counted_base.h: Likewise.\n\t* include/ext/rc_string_base.h: Likewise.\n\t* include/bits/locale_classes.h: Likewise.\n\t* include/bits/basic_string.h: Likewise.\n\t* include/bits/ios_base.h: Likewise.\n\t* include/bits/c++config: Adjust comment.\n\nFrom-SVN: r163223", "tree": {"sha": "dcb693ebcc4d94b3e6ea0a2b16c4602f12c23de0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcb693ebcc4d94b3e6ea0a2b16c4602f12c23de0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c61f40011bf6868ab21970dc2eada32270bb65b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c61f40011bf6868ab21970dc2eada32270bb65b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c61f40011bf6868ab21970dc2eada32270bb65b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c61f40011bf6868ab21970dc2eada32270bb65b/comments", "author": null, "committer": null, "parents": [{"sha": "ec760bea7f3bcc143d02cc1288f69969407eb26b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec760bea7f3bcc143d02cc1288f69969407eb26b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec760bea7f3bcc143d02cc1288f69969407eb26b"}], "stats": {"total": 52, "additions": 32, "deletions": 20}, "files": [{"sha": "f7d66a4ee781dbca5bec15ef2ad6e31081c47ea1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c61f40011bf6868ab21970dc2eada32270bb65b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c61f40011bf6868ab21970dc2eada32270bb65b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8c61f40011bf6868ab21970dc2eada32270bb65b", "patch": "@@ -1,3 +1,15 @@\n+2010-08-13  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* src/ios_init.cc (ios_base::Init::~Init): Add back semicolon\n+\tat the end of the _GLIBCXX_SYNCHRONIZATION_HAPPENS_* macros,\n+\tremoved by mistake.\n+\t* include/tr1_impl/boost_sp_counted_base.h: Likewise.\n+\t* include/ext/rc_string_base.h: Likewise.\n+\t* include/bits/locale_classes.h: Likewise.\n+\t* include/bits/basic_string.h: Likewise.\n+\t* include/bits/ios_base.h: Likewise.\n+\t* include/bits/c++config: Adjust comment.\n+\n 2010-08-12  Kostya Serebryany <kcc@google.com>\n \t    Paolo Carlini  <paolo.carlini@oracle.com>\n "}, {"sha": "89004f7fb21000e2fddfdac0cd04255186e4d321", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c61f40011bf6868ab21970dc2eada32270bb65b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c61f40011bf6868ab21970dc2eada32270bb65b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=8c61f40011bf6868ab21970dc2eada32270bb65b", "patch": "@@ -234,11 +234,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n #endif\n \t    {\n \t      // Be race-detector-friendly.  For more info see bits/c++config.\n-\t      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount)\n+\t      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);\n \t      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,\n \t\t\t\t\t\t\t -1) <= 0)\n \t\t{\n-\t\t  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount)\n+\t\t  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);\n \t\t  _M_destroy(__a);\n \t\t}\n \t    }"}, {"sha": "19b55bc5b081a9af446aeb08892b72d4ce0f9160", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c61f40011bf6868ab21970dc2eada32270bb65b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c61f40011bf6868ab21970dc2eada32270bb65b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=8c61f40011bf6868ab21970dc2eada32270bb65b", "patch": "@@ -71,10 +71,10 @@\n // current implementation of the library) is atomic reference counting:\n //   void _M_remove_reference()\n //   {\n-//     _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount)\n+//     _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);\n //     if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount, -1) <= 0)\n //       {\n-//         _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount)\n+//         _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);\n //         _M_destroy(__a);\n //       }\n //   }"}, {"sha": "6749a731065f03f79ac015e559a1947263a61172", "filename": "libstdc++-v3/include/bits/ios_base.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c61f40011bf6868ab21970dc2eada32270bb65b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c61f40011bf6868ab21970dc2eada32270bb65b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h?ref=8c61f40011bf6868ab21970dc2eada32270bb65b", "patch": "@@ -476,11 +476,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       _M_remove_reference() \n       {\n         // Be race-detector-friendly.  For more info see bits/c++config.\n-        _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_refcount)\n+        _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_refcount);\n         int __res = __gnu_cxx::__exchange_and_add_dispatch(&_M_refcount, -1);\n         if (__res == 0)\n           {\n-            _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_refcount)\n+            _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_refcount);\n           }\n         return __res;\n       }"}, {"sha": "8a846bce0c6166a0c999ff8245705c37bb955d3a", "filename": "libstdc++-v3/include/bits/locale_classes.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c61f40011bf6868ab21970dc2eada32270bb65b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c61f40011bf6868ab21970dc2eada32270bb65b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h?ref=8c61f40011bf6868ab21970dc2eada32270bb65b", "patch": "@@ -403,10 +403,10 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     _M_remove_reference() const throw()\n     {\n       // Be race-detector-friendly.  For more info see bits/c++config.\n-      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_refcount)\n+      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_refcount);\n       if (__gnu_cxx::__exchange_and_add_dispatch(&_M_refcount, -1) == 1)\n \t{\n-          _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_refcount)\n+          _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_refcount);\n \t  __try\n \t    { delete this; }\n \t  __catch(...)\n@@ -512,10 +512,10 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     _M_remove_reference() throw()\n     {\n       // Be race-detector-friendly.  For more info see bits/c++config.\n-      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_refcount)\n+      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_refcount);\n       if (__gnu_cxx::__exchange_and_add_dispatch(&_M_refcount, -1) == 1)\n \t{\n-          _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_refcount)\n+          _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_refcount);\n \t  __try\n \t    { delete this; }\n \t  __catch(...)"}, {"sha": "9831037bb15a5aca1e4a18d78231796fa5525b80", "filename": "libstdc++-v3/include/ext/rc_string_base.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c61f40011bf6868ab21970dc2eada32270bb65b/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c61f40011bf6868ab21970dc2eada32270bb65b/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h?ref=8c61f40011bf6868ab21970dc2eada32270bb65b", "patch": "@@ -201,12 +201,12 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       {\n \t// Be race-detector-friendly.  For more info see bits/c++config.\n \t_GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_rep()->_M_info.\n-\t\t\t\t\t\t_M_refcount)\n+\t\t\t\t\t\t_M_refcount);\n \tif (__exchange_and_add_dispatch(&_M_rep()->_M_info._M_refcount,\n \t\t\t\t\t-1) <= 0)\n \t  {\n \t    _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_rep()->_M_info.\n-\t\t\t\t\t\t   _M_refcount)\n+\t\t\t\t\t\t   _M_refcount);\n \t    _M_rep()->_M_destroy(_M_get_allocator());\n \t  }\n       }  // XXX MT"}, {"sha": "11a2d052dfc569f59c4389d19884384fd0ecbf71", "filename": "libstdc++-v3/include/tr1_impl/boost_sp_counted_base.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c61f40011bf6868ab21970dc2eada32270bb65b/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fboost_sp_counted_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c61f40011bf6868ab21970dc2eada32270bb65b/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fboost_sp_counted_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fboost_sp_counted_base.h?ref=8c61f40011bf6868ab21970dc2eada32270bb65b", "patch": "@@ -140,10 +140,10 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       _M_release() // nothrow\n       {\n         // Be race-detector-friendly.  For more info see bits/c++config.\n-        _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_use_count)\n+        _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_use_count);\n \tif (__gnu_cxx::__exchange_and_add_dispatch(&_M_use_count, -1) == 1)\n \t  {\n-            _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_use_count)\n+            _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_use_count);\n \t    _M_dispose();\n \t    // There must be a memory barrier between dispose() and destroy()\n \t    // to ensure that the effects of dispose() are observed in the\n@@ -156,11 +156,11 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n \t      }\n \n             // Be race-detector-friendly.  For more info see bits/c++config.\n-            _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_weak_count)\n+            _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_weak_count);\n \t    if (__gnu_cxx::__exchange_and_add_dispatch(&_M_weak_count,\n \t\t\t\t\t\t       -1) == 1)\n               {\n-                _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_weak_count)\n+                _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_weak_count);\n \t        _M_destroy();\n               }\n \t  }\n@@ -174,10 +174,10 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       _M_weak_release() // nothrow\n       {\n         // Be race-detector-friendly. For more info see bits/c++config.\n-        _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_weak_count)\n+        _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_weak_count);\n \tif (__gnu_cxx::__exchange_and_add_dispatch(&_M_weak_count, -1) == 1)\n \t  {\n-            _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_weak_count)\n+            _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_weak_count);\n \t    if (_Mutex_base<_Lp>::_S_need_barriers)\n \t      {\n \t        // See _M_release(),"}, {"sha": "caf25ed80369ae03fef0a8efde53c04b924fafb3", "filename": "libstdc++-v3/src/ios_init.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c61f40011bf6868ab21970dc2eada32270bb65b/libstdc%2B%2B-v3%2Fsrc%2Fios_init.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c61f40011bf6868ab21970dc2eada32270bb65b/libstdc%2B%2B-v3%2Fsrc%2Fios_init.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fios_init.cc?ref=8c61f40011bf6868ab21970dc2eada32270bb65b", "patch": "@@ -123,10 +123,10 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   ios_base::Init::~Init()\n   {\n     // Be race-detector-friendly.  For more info see bits/c++config.\n-    _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_S_refcount)\n+    _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_S_refcount);\n     if (__gnu_cxx::__exchange_and_add_dispatch(&_S_refcount, -1) == 2)\n       {\n-        _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_S_refcount)\n+        _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_S_refcount);\n \t// Catch any exceptions thrown by basic_ostream::flush()\n \t__try\n \t  { "}]}