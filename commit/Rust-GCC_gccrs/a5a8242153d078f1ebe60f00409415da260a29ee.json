{"sha": "a5a8242153d078f1ebe60f00409415da260a29ee", "node_id": "C_kwDOANBUbNoAKGE1YTgyNDIxNTNkMDc4ZjFlYmU2MGYwMDQwOTQxNWRhMjYwYTI5ZWU", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-01-09T11:46:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-01-09T12:31:44Z"}, "message": "middle-end/69482 - not preserving volatile accesses\n\nThe following addresses a long standing issue with not preserving\naccesses to non-volatile objects through volatile qualified\npointers in the case that object gets expanded to a register.  The\nfix is to treat accesses to an object with a volatile qualified\naccess as forcing that object to memory.  This issue got more\nexposed recently so it regressed more since GCC 11.\n\n\tPR middle-end/69482\n\t* cfgexpand.cc (discover_nonconstant_array_refs_r): Volatile\n\tqualified accesses also force objects to memory.\n\n\t* gcc.target/i386/pr69482-1.c: New testcase.\n\t* gcc.target/i386/pr69482-2.c: Likewise.", "tree": {"sha": "14727901463d84d5f0759cc663254cc77db12ce8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14727901463d84d5f0759cc663254cc77db12ce8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5a8242153d078f1ebe60f00409415da260a29ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5a8242153d078f1ebe60f00409415da260a29ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5a8242153d078f1ebe60f00409415da260a29ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5a8242153d078f1ebe60f00409415da260a29ee/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb082e3293d45d928ae107d8f351b04be89d1bc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb082e3293d45d928ae107d8f351b04be89d1bc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb082e3293d45d928ae107d8f351b04be89d1bc2"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "25b1558dcb941ea491a19aeeb2cd8f4d2dbdf7c6", "filename": "gcc/cfgexpand.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a8242153d078f1ebe60f00409415da260a29ee/gcc%2Fcfgexpand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a8242153d078f1ebe60f00409415da260a29ee/gcc%2Fcfgexpand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.cc?ref=a5a8242153d078f1ebe60f00409415da260a29ee", "patch": "@@ -6291,6 +6291,15 @@ discover_nonconstant_array_refs_r (tree * tp, int *walk_subtrees,\n \n   if (IS_TYPE_OR_DECL_P (t))\n     *walk_subtrees = 0;\n+  else if (REFERENCE_CLASS_P (t) && TREE_THIS_VOLATILE (t))\n+    {\n+      t = get_base_address (t);\n+      if (t && DECL_P (t)\n+\t  && DECL_MODE (t) != BLKmode\n+\t  && !TREE_ADDRESSABLE (t))\n+\tbitmap_set_bit (forced_stack_vars, DECL_UID (t));\n+      *walk_subtrees = 0;\n+    }\n   else if (TREE_CODE (t) == ARRAY_REF || TREE_CODE (t) == ARRAY_RANGE_REF)\n     {\n       while (((TREE_CODE (t) == ARRAY_REF || TREE_CODE (t) == ARRAY_RANGE_REF)"}, {"sha": "f192261b104baefc10e61b4dfcc22dafa2d5eabe", "filename": "gcc/testsuite/gcc.target/i386/pr69482-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a8242153d078f1ebe60f00409415da260a29ee/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69482-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a8242153d078f1ebe60f00409415da260a29ee/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69482-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69482-1.c?ref=a5a8242153d078f1ebe60f00409415da260a29ee", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+static inline void memset_s(void* s, int n) {\n+  volatile unsigned char * p = s;\n+  for(int i = 0; i < n; ++i) {\n+    p[i] = 0;\n+  }\n+}\n+\n+void test() {\n+  unsigned char x[4];\n+  memset_s(x, sizeof x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"mov\" 4 } } */"}, {"sha": "58e89a79333643dee66b8e50e0268a14cf3ea44f", "filename": "gcc/testsuite/gcc.target/i386/pr69482-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a8242153d078f1ebe60f00409415da260a29ee/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69482-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a8242153d078f1ebe60f00409415da260a29ee/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69482-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69482-2.c?ref=a5a8242153d078f1ebe60f00409415da260a29ee", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+void bar ()\n+{\n+  int j;\n+  *(volatile int *)&j = 0;\n+}\n+\n+/* { dg-final { scan-assembler-times \"mov\" 1 } } */"}]}