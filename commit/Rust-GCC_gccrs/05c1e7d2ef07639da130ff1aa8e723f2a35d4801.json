{"sha": "05c1e7d2ef07639da130ff1aa8e723f2a35d4801", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVjMWU3ZDJlZjA3NjM5ZGExMzBmZjFhYThlNzIzZjJhMzVkNDgwMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-27T09:57:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-27T09:57:19Z"}, "message": "[multiple changes]\n\n2011-09-27  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* checks.adb (Apply_Scalar_Range_Check): Use Designated_Type\n\tinstead of Directly_Designated_Type in the indirect array case.\n\n2011-09-27  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_util.adb, exp_aggr.adb: Minor reformatting.\n\nFrom-SVN: r179256", "tree": {"sha": "d922078b984b4e2014b2e2f9a39b347876db9222", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d922078b984b4e2014b2e2f9a39b347876db9222"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05c1e7d2ef07639da130ff1aa8e723f2a35d4801", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05c1e7d2ef07639da130ff1aa8e723f2a35d4801", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05c1e7d2ef07639da130ff1aa8e723f2a35d4801", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05c1e7d2ef07639da130ff1aa8e723f2a35d4801/comments", "author": null, "committer": null, "parents": [{"sha": "65e78a74b676f392436fb36ee82fc0b5cc57f313", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65e78a74b676f392436fb36ee82fc0b5cc57f313", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65e78a74b676f392436fb36ee82fc0b5cc57f313"}], "stats": {"total": 81, "additions": 72, "deletions": 9}, "files": [{"sha": "d1fc22a42af9059db03d23f5519585a811bf04d0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05c1e7d2ef07639da130ff1aa8e723f2a35d4801/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05c1e7d2ef07639da130ff1aa8e723f2a35d4801/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=05c1e7d2ef07639da130ff1aa8e723f2a35d4801", "patch": "@@ -1,3 +1,12 @@\n+2011-09-27  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* checks.adb (Apply_Scalar_Range_Check): Use Designated_Type\n+\tinstead of Directly_Designated_Type in the indirect array case.\n+\n+2011-09-27  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_util.adb, exp_aggr.adb: Minor reformatting.\n+\n 2011-09-27  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sinfo.ads, par-ch3.adb: Minor comment update: aspect specification"}, {"sha": "e07d70e47be09bc7702a1846a96a84b9456dd55a", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05c1e7d2ef07639da130ff1aa8e723f2a35d4801/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05c1e7d2ef07639da130ff1aa8e723f2a35d4801/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=05c1e7d2ef07639da130ff1aa8e723f2a35d4801", "patch": "@@ -1879,7 +1879,7 @@ package body Checks is\n          Arr_Typ := Get_Actual_Subtype_If_Available (Arr);\n \n          if Is_Access_Type (Arr_Typ) then\n-            Arr_Typ := Directly_Designated_Type (Arr_Typ);\n+            Arr_Typ := Designated_Type (Arr_Typ);\n          end if;\n       end if;\n "}, {"sha": "d06d8b9fb54f1034aafc541ecc0689ed903656ca", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05c1e7d2ef07639da130ff1aa8e723f2a35d4801/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05c1e7d2ef07639da130ff1aa8e723f2a35d4801/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=05c1e7d2ef07639da130ff1aa8e723f2a35d4801", "patch": "@@ -4710,7 +4710,6 @@ package body Exp_Aggr is\n         and then Static_Elaboration_Desired (Current_Scope)\n       then\n          Convert_To_Positional (N, Max_Others_Replicate => 100);\n-\n       else\n          Convert_To_Positional (N);\n       end if;"}, {"sha": "295006a29c3ef2305f3066b721ab04fbbcb097e4", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 62, "deletions": 7, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05c1e7d2ef07639da130ff1aa8e723f2a35d4801/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05c1e7d2ef07639da130ff1aa8e723f2a35d4801/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=05c1e7d2ef07639da130ff1aa8e723f2a35d4801", "patch": "@@ -5917,13 +5917,68 @@ package body Exp_Util is\n          then\n             return False;\n \n-         --  The following test is the simplest way of solving a complex\n-         --  problem uncovered by B808-010: Side effect on loop bound that\n-         --  is a subcomponent of a global variable:\n-\n-         --    If a loop bound is a subcomponent of a global variable, a\n-         --    modification of that variable within the loop may incorrectly\n-         --    affect the execution of the loop.\n+         --  Note: The following test is the simplest way of solving a complex\n+         --  problem uncovered by the following test (Side effect on loop bound\n+         --  that is a subcomponent of a global variable:\n+\n+         --    with Text_Io; use Text_Io;\n+         --    procedure Tloop is\n+         --      type X is\n+         --        record\n+         --          V : Natural := 4;\n+         --          S : String (1..5) := (others => 'a');\n+         --        end record;\n+         --      X1 : X;\n+\n+         --      procedure Modi;\n+\n+         --      generic\n+         --        with procedure Action;\n+         --      procedure Loop_G (Arg : X; Msg : String)\n+\n+         --      procedure Loop_G (Arg : X; Msg : String) is\n+         --      begin\n+         --        Put_Line (\"begin loop_g \" & Msg & \" will loop till: \"\n+         --                  & Natural'Image (Arg.V));\n+         --        for Index in 1 .. Arg.V loop\n+         --          Text_Io.Put_Line\n+         --            (Natural'Image (Index) & \" \" & Arg.S (Index));\n+         --          if Index > 2 then\n+         --            Modi;\n+         --          end if;\n+         --        end loop;\n+         --        Put_Line (\"end loop_g \" & Msg);\n+         --      end;\n+\n+         --      procedure Loop1 is new Loop_G (Modi);\n+         --      procedure Modi is\n+         --      begin\n+         --        X1.V := 1;\n+         --        Loop1 (X1, \"from modi\");\n+         --      end;\n+         --\n+         --    begin\n+         --      Loop1 (X1, \"initial\");\n+         --    end;\n+\n+         --  The output of the above program should be:\n+\n+         --    begin loop_g initial will loop till:  4\n+         --     1 a\n+         --     2 a\n+         --     3 a\n+         --    begin loop_g from modi will loop till:  1\n+         --     1 a\n+         --    end loop_g from modi\n+         --     4 a\n+         --    begin loop_g from modi will loop till:  1\n+         --     1 a\n+         --    end loop_g from modi\n+         --    end loop_g initial\n+\n+         --  If a loop bound is a subcomponent of a global variable, a\n+         --  modification of that variable within the loop may incorrectly\n+         --  affect the execution of the loop.\n \n          elsif Nkind (Parent (Parent (N))) = N_Loop_Parameter_Specification\n            and then Within_In_Parameter (Prefix (N))"}]}