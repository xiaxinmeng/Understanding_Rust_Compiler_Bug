{"sha": "1fae9801e45958493870828b44c64726609c7500", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZhZTk4MDFlNDU5NTg0OTM4NzA4MjhiNDRjNjQ3MjY2MDljNzUwMA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-07-26T01:57:04Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-07-26T01:57:04Z"}, "message": "runtime, runtime/pprof: Fix runtime/pprof test to pass, enable it.\n\nFrom-SVN: r189878", "tree": {"sha": "327ba5fd7f5170e2e9e56e5a3503f6a733ffaed4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/327ba5fd7f5170e2e9e56e5a3503f6a733ffaed4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fae9801e45958493870828b44c64726609c7500", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fae9801e45958493870828b44c64726609c7500", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fae9801e45958493870828b44c64726609c7500", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fae9801e45958493870828b44c64726609c7500/comments", "author": null, "committer": null, "parents": [{"sha": "f34ee0b290fe3e188bcda2985c071b031381a67b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f34ee0b290fe3e188bcda2985c071b031381a67b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f34ee0b290fe3e188bcda2985c071b031381a67b"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "f59b0048495034c55c437f345bd4b52192116548", "filename": "libgo/Makefile.am", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fae9801e45958493870828b44c64726609c7500/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fae9801e45958493870828b44c64726609c7500/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=1fae9801e45958493870828b44c64726609c7500", "patch": "@@ -1794,7 +1794,7 @@ GOTESTFLAGS =\n \n # Check a package.\n CHECK = \\\n-\tGC=\"$(GOC) $(GOCFLAGS) -L `${PWD_COMMAND}` -L `${PWD_COMMAND}`/.libs\"; \\\n+\tGC=\"$(GOC) $(GOCFLAGS) $($(subst /,_,$@)_GOCFLAGS) -L `${PWD_COMMAND}` -L `${PWD_COMMAND}`/.libs\"; \\\n \texport GC; \\\n \tGOLIBS=\"$(MATH_LIBS) $(NET_LIBS)\"; \\\n \texport GOLIBS; \\\n@@ -3012,6 +3012,9 @@ runtime/pprof.lo: $(go_runtime_pprof_files)\n runtime/pprof/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: runtime/pprof/check\n+# At least for now, we need -static-libgo for this test, because\n+# otherwise we can't get the line numbers.\n+runtime_pprof_check_GOCFLAGS = -static-libgo\n \n @go_include@ sync/atomic.lo.dep\n sync/atomic.lo.dep: $(go_sync_atomic_files)\n@@ -3548,6 +3551,7 @@ TEST_PACKAGES = \\\n \tos/user/check \\\n \tpath/filepath/check \\\n \tregexp/syntax/check \\\n+\truntime/pprof/check \\\n \tsync/atomic/check \\\n \ttext/scanner/check \\\n \ttext/tabwriter/check \\"}, {"sha": "18f14141b47c8494ca10a234628e151cf6bf0ca9", "filename": "libgo/Makefile.in", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fae9801e45958493870828b44c64726609c7500/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fae9801e45958493870828b44c64726609c7500/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=1fae9801e45958493870828b44c64726609c7500", "patch": "@@ -2029,7 +2029,7 @@ GOTESTFLAGS =\n \n # Check a package.\n CHECK = \\\n-\tGC=\"$(GOC) $(GOCFLAGS) -L `${PWD_COMMAND}` -L `${PWD_COMMAND}`/.libs\"; \\\n+\tGC=\"$(GOC) $(GOCFLAGS) $($(subst /,_,$@)_GOCFLAGS) -L `${PWD_COMMAND}` -L `${PWD_COMMAND}`/.libs\"; \\\n \texport GC; \\\n \tGOLIBS=\"$(MATH_LIBS) $(NET_LIBS)\"; \\\n \texport GOLIBS; \\\n@@ -2089,6 +2089,9 @@ CHECK_DEPS = libgo.la libgobegin.a \\\n \t$(toolexeclibgotexttemplate_DATA) \\\n \t$(toolexeclibgounicode_DATA)\n \n+# At least for now, we need -static-libgo for this test, because\n+# otherwise we can't get the line numbers.\n+runtime_pprof_check_GOCFLAGS = -static-libgo\n \n # How to build a .gox file from a .lo file.\n BUILDGOX = \\\n@@ -2218,6 +2221,7 @@ TEST_PACKAGES = \\\n \tos/user/check \\\n \tpath/filepath/check \\\n \tregexp/syntax/check \\\n+\truntime/pprof/check \\\n \tsync/atomic/check \\\n \ttext/scanner/check \\\n \ttext/tabwriter/check \\"}, {"sha": "e933058e5580022224f9370126fcc4154c60a690", "filename": "libgo/go/runtime/pprof/pprof_test.go", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fae9801e45958493870828b44c64726609c7500/libgo%2Fgo%2Fruntime%2Fpprof%2Fpprof_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fae9801e45958493870828b44c64726609c7500/libgo%2Fgo%2Fruntime%2Fpprof%2Fpprof_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fpprof%2Fpprof_test.go?ref=1fae9801e45958493870828b44c64726609c7500", "patch": "@@ -71,7 +71,8 @@ func TestCPUProfile(t *testing.T) {\n \t\t\tif f == nil {\n \t\t\t\tcontinue\n \t\t\t}\n-\t\t\tif strings.Contains(f.Name(), \"ChecksumIEEE\") {\n+\t\t\tif strings.Contains(f.Name(), \"ChecksumIEEE\") ||\n+\t\t\t\t(strings.Contains(f.Name(), \"update\") && strings.Contains(f.Name(), \"crc32\")) {\n \t\t\t\tfound = true\n \t\t\t}\n \t\t}"}, {"sha": "9fbe86e0c51b2d01561926f818f5c5b52567dbd3", "filename": "libgo/runtime/go-signal.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fae9801e45958493870828b44c64726609c7500/libgo%2Fruntime%2Fgo-signal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fae9801e45958493870828b44c64726609c7500/libgo%2Fruntime%2Fgo-signal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-signal.c?ref=1fae9801e45958493870828b44c64726609c7500", "patch": "@@ -149,8 +149,7 @@ sig_handler (int sig)\n #ifdef SIGPROF\n   if (sig == SIGPROF)\n     {\n-      /* FIXME.  */\n-      runtime_sigprof (0, 0, nil, nil);\n+      runtime_sigprof ();\n       return;\n     }\n #endif"}, {"sha": "224dce95ba021b092d326680253067b737d149f6", "filename": "libgo/runtime/proc.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fae9801e45958493870828b44c64726609c7500/libgo%2Fruntime%2Fproc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fae9801e45958493870828b44c64726609c7500/libgo%2Fruntime%2Fproc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fproc.c?ref=1fae9801e45958493870828b44c64726609c7500", "patch": "@@ -1681,10 +1681,7 @@ static struct {\n \n // Called if we receive a SIGPROF signal.\n void\n-runtime_sigprof(uint8 *pc __attribute__ ((unused)),\n-\t\tuint8 *sp __attribute__ ((unused)),\n-\t\tuint8 *lr __attribute__ ((unused)),\n-\t\tG *gp __attribute__ ((unused)))\n+runtime_sigprof()\n {\n \tint32 n;\n "}, {"sha": "dc4fc0817f5254a3b6492d0c410a9ed1bd9b2e4d", "filename": "libgo/runtime/runtime.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fae9801e45958493870828b44c64726609c7500/libgo%2Fruntime%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fae9801e45958493870828b44c64726609c7500/libgo%2Fruntime%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fruntime.h?ref=1fae9801e45958493870828b44c64726609c7500", "patch": "@@ -451,7 +451,7 @@ const byte*\truntime_getenv(const char*);\n int32\truntime_atoi(const byte*);\n uint32\truntime_fastrand1(void);\n \n-void\truntime_sigprof(uint8 *pc, uint8 *sp, uint8 *lr, G *gp);\n+void\truntime_sigprof();\n void\truntime_resetcpuprofiler(int32);\n void\truntime_setcpuprofilerate(void(*)(uintptr*, int32), int32);\n void\truntime_usleep(uint32);"}]}