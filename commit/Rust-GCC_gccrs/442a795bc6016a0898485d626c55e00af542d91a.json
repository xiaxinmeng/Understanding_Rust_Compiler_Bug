{"sha": "442a795bc6016a0898485d626c55e00af542d91a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQyYTc5NWJjNjAxNmEwODk4NDg1ZDYyNmM1NWUwMGFmNTQyZDkxYQ==", "commit": {"author": {"name": "Thomas Fitzsimmons", "email": "fitzsim@redhat.com", "date": "2007-03-13T05:48:03Z"}, "committer": {"name": "Thomas Fitzsimmons", "email": "fitzsim@gcc.gnu.org", "date": "2007-03-13T05:48:03Z"}, "message": "Makefile.am (AM_CXXFLAGS): Define ECJ_JAR_FILE.\n\n2007-03-13  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n        * Makefile.am (AM_CXXFLAGS): Define ECJ_JAR_FILE.\n        * classpath/configure.ac: Add --with-ecj-jar configure option.\n        * classpath/gnu/classpath/Configuration.java.in (ECJ_JAR): New\n        field.\n        * classpath/INSTALL: Document --with-ecj-jar configure option and\n        ecj jar requirement for com.sun.tools.javac support.\n        * classpath/tools/Makefile.am: Build decendents of com and sun\n        directories.\n        * configure.ac: Substitute ECJ_JAR in stub Configuration.java.\n        * gnu/classpath/Configuration.java,\n        gnu/classpath/natConfiguration.cc (ecj): New method.\n        (ECJ_JAR): New field.\n        * scripts/makemake.tcl (scan_packages): Add com directory.\n        * sources.am (property_files): Add\n        classpath/resource/sun/rmi/rmic/messages.properties and\n        classpath/resource/com/sun/tools/javac/messages.properties.\n        * classpath/resource/com, classpath/resource/com/sun,\n        classpath/resource/com/sun/tools,\n        classpath/resource/com/sun/tools/javac, classpath/resource/sun,\n        classpath/resource/sun/rmi, classpath/resource/sun/rmi/rmic,\n        classpath/tools/classes/com, classpath/tools/classes/com/sun,\n        classpath/tools/classes/com/sun/javadoc,\n        classpath/tools/classes/com/sun/tools,\n        classpath/tools/classes/com/sun/tools/doclets,\n        classpath/tools/classes/sun, classpath/tools/classes/sun/rmi,\n        classpath/tools/classes/sun/rmi/rmic, classpath/tools/com,\n        classpath/tools/com/sun, classpath/tools/com/sun/javadoc,\n        classpath/tools/com/sun/tools,\n        classpath/tools/com/sun/tools/doclets,\n        classpath/tools/com/sun/tools/javac, classpath/tools/sun,\n        classpath/tools/sun/rmi, classpath/tools/sun/rmi/rmic: New\n        directories.\n        * classpath/resource/com/sun/tools/javac/messages.properties,\n        classpath/resource/sun/rmi/rmic/messages.properties,\n        classpath/tools/classes/com/sun/javadoc/ClassDoc.class,\n        classpath/tools/classes/com/sun/javadoc/ConstructorDoc.class,\n        classpath/tools/classes/com/sun/javadoc/Doc.class,\n        classpath/tools/classes/com/sun/javadoc/DocErrorReporter.class,\n        classpath/tools/classes/com/sun/javadoc/Doclet.class,\n        classpath/tools/classes/com/sun/javadoc/ExecutableMemberDoc.class,\n        classpath/tools/classes/com/sun/javadoc/FieldDoc.class,\n        classpath/tools/classes/com/sun/javadoc/MemberDoc.class,\n        classpath/tools/classes/com/sun/javadoc/MethodDoc.class,\n        classpath/tools/classes/com/sun/javadoc/PackageDoc.class,\n        classpath/tools/classes/com/sun/javadoc/ParamTag.class,\n        classpath/tools/classes/com/sun/javadoc/Parameter.class,\n        classpath/tools/classes/com/sun/javadoc/ProgramElementDoc.class,\n        classpath/tools/classes/com/sun/javadoc/RootDoc.class,\n        classpath/tools/classes/com/sun/javadoc/SeeTag.class,\n        classpath/tools/classes/com/sun/javadoc/SerialFieldTag.class,\n        classpath/tools/classes/com/sun/javadoc/SourcePosition.class,\n        classpath/tools/classes/com/sun/javadoc/Tag.class,\n        classpath/tools/classes/com/sun/javadoc/ThrowsTag.class,\n        classpath/tools/classes/com/sun/javadoc/Type.class,\n        classpath/tools/classes/com/sun/javadoc/TypeVariable.class,\n        classpath/tools/classes/com/sun/tools/doclets/Taglet.class,\n        classpath/tools/classes/sun/rmi/rmic/Main.class,\n        classpath/tools/classes/sun/rmi/rmic/Messages.class,\n        classpath/tools/com/sun/javadoc/ClassDoc.java,\n        classpath/tools/com/sun/javadoc/ConstructorDoc.java,\n        classpath/tools/com/sun/javadoc/Doc.java,\n        classpath/tools/com/sun/javadoc/DocErrorReporter.java,\n        classpath/tools/com/sun/javadoc/Doclet.java,\n        classpath/tools/com/sun/javadoc/ExecutableMemberDoc.java,\n        classpath/tools/com/sun/javadoc/FieldDoc.java,\n        classpath/tools/com/sun/javadoc/MemberDoc.java,\n        classpath/tools/com/sun/javadoc/MethodDoc.java,\n        classpath/tools/com/sun/javadoc/PackageDoc.java,\n        classpath/tools/com/sun/javadoc/ParamTag.java,\n        classpath/tools/com/sun/javadoc/Parameter.java,\n        classpath/tools/com/sun/javadoc/ProgramElementDoc.java,\n        classpath/tools/com/sun/javadoc/RootDoc.java,\n        classpath/tools/com/sun/javadoc/SeeTag.java,\n        classpath/tools/com/sun/javadoc/SerialFieldTag.java,\n        classpath/tools/com/sun/javadoc/SourcePosition.java,\n        classpath/tools/com/sun/javadoc/Tag.java,\n        classpath/tools/com/sun/javadoc/ThrowsTag.java,\n        classpath/tools/com/sun/javadoc/Type.java,\n        classpath/tools/com/sun/javadoc/TypeVariable.java,\n        classpath/tools/com/sun/tools/doclets/Taglet.java,\n        classpath/tools/com/sun/tools/javac/Main.java,\n        classpath/tools/com/sun/tools/javac/Messages.java,\n        classpath/tools/sun/rmi/rmic/Main.java,\n        classpath/tools/sun/rmi/rmic/Messages.java: New files.\n        * Makefile.in, classpath/Makefile.in, classpath/configure,\n        classpath/doc/Makefile.in, classpath/doc/api/Makefile.in,\n        classpath/examples/Makefile.in, classpath/external/Makefile.in,\n        classpath/external/jsr166/Makefile.in,\n        classpath/external/relaxngDatatype/Makefile.in,\n        classpath/external/sax/Makefile.in,\n        classpath/external/w3c_dom/Makefile.in,\n        classpath/include/Makefile.in, classpath/include/config.h.in,\n        classpath/lib/Makefile.in,\n        classpath/lib/gnu/classpath/Configuration.class,\n        classpath/native/Makefile.in, classpath/native/fdlibm/Makefile.in,\n        classpath/native/jawt/Makefile.in,\n        classpath/native/jni/Makefile.in,\n        classpath/native/jni/classpath/Makefile.in,\n        classpath/native/jni/gconf-peer/Makefile.in,\n        classpath/native/jni/gtk-peer/Makefile.in,\n        classpath/native/jni/java-io/Makefile.in,\n        classpath/native/jni/java-lang/Makefile.in,\n        classpath/native/jni/java-net/Makefile.in,\n        classpath/native/jni/java-nio/Makefile.in,\n        classpath/native/jni/java-util/Makefile.in,\n        classpath/native/jni/midi-alsa/Makefile.in,\n        classpath/native/jni/midi-dssi/Makefile.in,\n        classpath/native/jni/native-lib/Makefile.in,\n        classpath/native/jni/qt-peer/Makefile.in,\n        classpath/native/jni/xmlj/Makefile.in,\n        classpath/native/plugin/Makefile.in,\n        classpath/resource/Makefile.in, classpath/scripts/Makefile.in,\n        classpath/tools/Makefile.in, configure,\n        gnu/classpath/Configuration.h: Regenerate.\n\nFrom-SVN: r122876", "tree": {"sha": "990fd86bf6b013d5491baa12df0c10d63975e50c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/990fd86bf6b013d5491baa12df0c10d63975e50c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/442a795bc6016a0898485d626c55e00af542d91a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442a795bc6016a0898485d626c55e00af542d91a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/442a795bc6016a0898485d626c55e00af542d91a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/442a795bc6016a0898485d626c55e00af542d91a/comments", "author": null, "committer": null, "parents": [{"sha": "a10da70c668818c543ce76fd5f5ee22e5b5fcaac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a10da70c668818c543ce76fd5f5ee22e5b5fcaac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a10da70c668818c543ce76fd5f5ee22e5b5fcaac"}], "stats": {"total": 3261, "additions": 3254, "deletions": 7}, "files": [{"sha": "a7e76caee02f6ea3d4086c1fcccfea46965b9721", "filename": "libjava/ChangeLog", "status": "modified", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -1,3 +1,120 @@\n+2007-03-13  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* Makefile.am (AM_CXXFLAGS): Define ECJ_JAR_FILE.\n+\t* classpath/configure.ac: Add --with-ecj-jar configure option.\n+\t* classpath/gnu/classpath/Configuration.java.in (ECJ_JAR): New\n+\tfield.\n+\t* classpath/INSTALL: Document --with-ecj-jar configure option and\n+\tecj jar requirement for com.sun.tools.javac support.\n+\t* classpath/tools/Makefile.am: Build decendents of com and sun\n+\tdirectories.\n+\t* configure.ac: Substitute ECJ_JAR in stub Configuration.java.\n+\t* gnu/classpath/Configuration.java,\n+\tgnu/classpath/natConfiguration.cc (ecj): New method.\n+\t(ECJ_JAR): New field.\n+\t* scripts/makemake.tcl (scan_packages): Add com directory.\n+\t* sources.am (property_files): Add\n+\tclasspath/resource/sun/rmi/rmic/messages.properties and\n+\tclasspath/resource/com/sun/tools/javac/messages.properties.\n+\t* classpath/resource/com, classpath/resource/com/sun,\n+\tclasspath/resource/com/sun/tools,\n+\tclasspath/resource/com/sun/tools/javac, classpath/resource/sun,\n+\tclasspath/resource/sun/rmi, classpath/resource/sun/rmi/rmic,\n+\tclasspath/tools/classes/com, classpath/tools/classes/com/sun,\n+\tclasspath/tools/classes/com/sun/javadoc,\n+\tclasspath/tools/classes/com/sun/tools,\n+\tclasspath/tools/classes/com/sun/tools/doclets,\n+\tclasspath/tools/classes/sun, classpath/tools/classes/sun/rmi,\n+\tclasspath/tools/classes/sun/rmi/rmic, classpath/tools/com,\n+\tclasspath/tools/com/sun, classpath/tools/com/sun/javadoc,\n+\tclasspath/tools/com/sun/tools,\n+\tclasspath/tools/com/sun/tools/doclets,\n+\tclasspath/tools/com/sun/tools/javac, classpath/tools/sun,\n+\tclasspath/tools/sun/rmi, classpath/tools/sun/rmi/rmic: New\n+\tdirectories.\n+\t* classpath/resource/com/sun/tools/javac/messages.properties,\n+\tclasspath/resource/sun/rmi/rmic/messages.properties,\n+\tclasspath/tools/classes/com/sun/javadoc/ClassDoc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/ConstructorDoc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/Doc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/DocErrorReporter.class,\n+\tclasspath/tools/classes/com/sun/javadoc/Doclet.class,\n+\tclasspath/tools/classes/com/sun/javadoc/ExecutableMemberDoc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/FieldDoc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/MemberDoc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/MethodDoc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/PackageDoc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/ParamTag.class,\n+\tclasspath/tools/classes/com/sun/javadoc/Parameter.class,\n+\tclasspath/tools/classes/com/sun/javadoc/ProgramElementDoc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/RootDoc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/SeeTag.class,\n+\tclasspath/tools/classes/com/sun/javadoc/SerialFieldTag.class,\n+\tclasspath/tools/classes/com/sun/javadoc/SourcePosition.class,\n+\tclasspath/tools/classes/com/sun/javadoc/Tag.class,\n+\tclasspath/tools/classes/com/sun/javadoc/ThrowsTag.class,\n+\tclasspath/tools/classes/com/sun/javadoc/Type.class,\n+\tclasspath/tools/classes/com/sun/javadoc/TypeVariable.class,\n+\tclasspath/tools/classes/com/sun/tools/doclets/Taglet.class,\n+\tclasspath/tools/classes/sun/rmi/rmic/Main.class,\n+\tclasspath/tools/classes/sun/rmi/rmic/Messages.class,\n+\tclasspath/tools/com/sun/javadoc/ClassDoc.java,\n+\tclasspath/tools/com/sun/javadoc/ConstructorDoc.java,\n+\tclasspath/tools/com/sun/javadoc/Doc.java,\n+\tclasspath/tools/com/sun/javadoc/DocErrorReporter.java,\n+\tclasspath/tools/com/sun/javadoc/Doclet.java,\n+\tclasspath/tools/com/sun/javadoc/ExecutableMemberDoc.java,\n+\tclasspath/tools/com/sun/javadoc/FieldDoc.java,\n+\tclasspath/tools/com/sun/javadoc/MemberDoc.java,\n+\tclasspath/tools/com/sun/javadoc/MethodDoc.java,\n+\tclasspath/tools/com/sun/javadoc/PackageDoc.java,\n+\tclasspath/tools/com/sun/javadoc/ParamTag.java,\n+\tclasspath/tools/com/sun/javadoc/Parameter.java,\n+\tclasspath/tools/com/sun/javadoc/ProgramElementDoc.java,\n+\tclasspath/tools/com/sun/javadoc/RootDoc.java,\n+\tclasspath/tools/com/sun/javadoc/SeeTag.java,\n+\tclasspath/tools/com/sun/javadoc/SerialFieldTag.java,\n+\tclasspath/tools/com/sun/javadoc/SourcePosition.java,\n+\tclasspath/tools/com/sun/javadoc/Tag.java,\n+\tclasspath/tools/com/sun/javadoc/ThrowsTag.java,\n+\tclasspath/tools/com/sun/javadoc/Type.java,\n+\tclasspath/tools/com/sun/javadoc/TypeVariable.java,\n+\tclasspath/tools/com/sun/tools/doclets/Taglet.java,\n+\tclasspath/tools/com/sun/tools/javac/Main.java,\n+\tclasspath/tools/com/sun/tools/javac/Messages.java,\n+\tclasspath/tools/sun/rmi/rmic/Main.java,\n+\tclasspath/tools/sun/rmi/rmic/Messages.java: New files.\n+\t* Makefile.in, classpath/Makefile.in, classpath/configure,\n+\tclasspath/doc/Makefile.in, classpath/doc/api/Makefile.in,\n+\tclasspath/examples/Makefile.in, classpath/external/Makefile.in,\n+\tclasspath/external/jsr166/Makefile.in,\n+\tclasspath/external/relaxngDatatype/Makefile.in,\n+\tclasspath/external/sax/Makefile.in,\n+\tclasspath/external/w3c_dom/Makefile.in,\n+\tclasspath/include/Makefile.in, classpath/include/config.h.in,\n+\tclasspath/lib/Makefile.in,\n+\tclasspath/lib/gnu/classpath/Configuration.class,\n+\tclasspath/native/Makefile.in, classpath/native/fdlibm/Makefile.in,\n+\tclasspath/native/jawt/Makefile.in,\n+\tclasspath/native/jni/Makefile.in,\n+\tclasspath/native/jni/classpath/Makefile.in,\n+\tclasspath/native/jni/gconf-peer/Makefile.in,\n+\tclasspath/native/jni/gtk-peer/Makefile.in,\n+\tclasspath/native/jni/java-io/Makefile.in,\n+\tclasspath/native/jni/java-lang/Makefile.in,\n+\tclasspath/native/jni/java-net/Makefile.in,\n+\tclasspath/native/jni/java-nio/Makefile.in,\n+\tclasspath/native/jni/java-util/Makefile.in,\n+\tclasspath/native/jni/midi-alsa/Makefile.in,\n+\tclasspath/native/jni/midi-dssi/Makefile.in,\n+\tclasspath/native/jni/native-lib/Makefile.in,\n+\tclasspath/native/jni/qt-peer/Makefile.in,\n+\tclasspath/native/jni/xmlj/Makefile.in,\n+\tclasspath/native/plugin/Makefile.in,\n+\tclasspath/resource/Makefile.in, classpath/scripts/Makefile.in,\n+\tclasspath/tools/Makefile.in, configure,\n+\tgnu/classpath/Configuration.h: Regenerate.\n+\n 2007-03-12  Kyle Galloway  <kgallowa@redhat.com>\n \n \t* jvmti.cc (_Jv_JVMTI_GetArgumentsSize): Make wide type arrays count"}, {"sha": "59466f017fa096227f33e81d7cfa37b7bac31c0d", "filename": "libjava/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -139,6 +139,7 @@ AM_CXXFLAGS = \\\n \t-DGCJ_ENDORSED_DIRS=\"\\\"$(jardir)/gcj-endorsed\\\"\" \\\n \t-DGCJ_VERSIONED_LIBDIR=\"\\\"$(dbexecdir)\\\"\" \\\n \t-DPATH_SEPARATOR=\"\\\"$(CLASSPATH_SEPARATOR)\\\"\" \\\n+\t-DECJ_JAR_FILE=\"\\\"$(ECJ_JAR)\\\"\" \\\n \t-DLIBGCJ_DEFAULT_DATABASE=\"\\\"$(dbexecdir)/$(db_name)\\\"\" \\\n \t-DLIBGCJ_DEFAULT_DATABASE_PATH_TAIL=\"\\\"$(db_pathtail)\\\"\"\n "}, {"sha": "287c949d6db8e7a409988079922f1d1c369d0328", "filename": "libjava/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -849,6 +849,7 @@ AM_CXXFLAGS = \\\n \t-DGCJ_ENDORSED_DIRS=\"\\\"$(jardir)/gcj-endorsed\\\"\" \\\n \t-DGCJ_VERSIONED_LIBDIR=\"\\\"$(dbexecdir)\\\"\" \\\n \t-DPATH_SEPARATOR=\"\\\"$(CLASSPATH_SEPARATOR)\\\"\" \\\n+\t-DECJ_JAR_FILE=\"\\\"$(ECJ_JAR)\\\"\" \\\n \t-DLIBGCJ_DEFAULT_DATABASE=\"\\\"$(dbexecdir)/$(db_name)\\\"\" \\\n \t-DLIBGCJ_DEFAULT_DATABASE_PATH_TAIL=\"\\\"$(db_pathtail)\\\"\"\n \n@@ -7763,6 +7764,8 @@ property_files = \\\n   classpath/resource/java/util/iso4217.properties \\\n   classpath/resource/javax/imageio/plugins/jpeg/MessagesBundle.properties \\\n   classpath/resource/org/ietf/jgss/MessagesBundle.properties \\\n+  classpath/resource/sun/rmi/rmic/messages.properties \\\n+  classpath/resource/com/sun/tools/javac/messages.properties \\\n   classpath/resource/META-INF/services/java.util.prefs.PreferencesFactory.in \\\n   classpath/resource/META-INF/services/javax.sound.midi.spi.MidiDeviceProvider \\\n   classpath/resource/META-INF/services/javax.sound.midi.spi.MidiFileReader \\"}, {"sha": "50a524b6236c673cf1e4fe74c305d2f227d18d50", "filename": "libjava/classpath/INSTALL", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2FINSTALL", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2FINSTALL", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FINSTALL?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -111,6 +111,9 @@ Suggested Software\n \t  - fluidsynth: a real-time SoundFont 2 based soft-synth\n \t    http://www.fluidsynth.org/\n \n+\tFor enabling the com.sun.tools.javac support in tools.zip you\n+\twill a need jar file containing the Eclipse Java Compiler.\n+\tOtherwise com.sun.tools.javac will not be included in tools.zip.\n \n This package was designed to use the GNU standard for configuration\n and makefiles.  To build and install do the following:\n@@ -147,6 +150,8 @@ gives a complete list.\n                           path to the jay executable\n   --with-glibj-zip=ABS.PATH\n                           use prebuilt glibj.zip class library\n+  --with-ecj-jar=ABS.PATH specify jar file containing the Eclipse Java\n+                          Compiler\n \n For more flags run configure --help.\n "}, {"sha": "cc6247f685662614f185a94b94750619c2fa5409", "filename": "libjava/classpath/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -153,6 +153,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -164,6 +165,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "ad005c18fd3999b16dfebec2c6295b8ed197642d", "filename": "libjava/classpath/configure", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -312,7 +312,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os JAVA_MAINTAINER_MODE_TRUE JAVA_MAINTAINER_MODE_FALSE multi_basedir LIBVERSION CLASSPATH_MODULE CLASSPATH_CONVENIENCE INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar CREATE_COLLECTIONS_TRUE CREATE_COLLECTIONS_FALSE CREATE_JNI_LIBRARIES_TRUE CREATE_JNI_LIBRARIES_FALSE CREATE_CORE_JNI_LIBRARIES_TRUE CREATE_CORE_JNI_LIBRARIES_FALSE CREATE_GCONF_PEER_LIBRARIES_TRUE CREATE_GCONF_PEER_LIBRARIES_FALSE default_toolkit CREATE_XMLJ_LIBRARY_TRUE CREATE_XMLJ_LIBRARY_FALSE CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CPP EGREP CREATE_ALSA_LIBRARIES_TRUE CREATE_ALSA_LIBRARIES_FALSE CREATE_DSSI_LIBRARIES_TRUE CREATE_DSSI_LIBRARIES_FALSE CREATE_GTK_PEER_LIBRARIES_TRUE CREATE_GTK_PEER_LIBRARIES_FALSE CREATE_QT_PEER_LIBRARIES_TRUE CREATE_QT_PEER_LIBRARIES_FALSE CREATE_PLUGIN_TRUE CREATE_PLUGIN_FALSE toolexeclibdir nativeexeclibdir glibjdir VM_BINARY FOUND_CACAO_TRUE FOUND_CACAO_FALSE CREATE_JNI_HEADERS_TRUE CREATE_JNI_HEADERS_FALSE CREATE_WRAPPERS_TRUE CREATE_WRAPPERS_FALSE LN_S RANLIB ac_ct_RANLIB LIBTOOL CXX CXXFLAGS ac_ct_CXX CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE CXXCPP PERL COLLECTIONS_PREFIX LIBMAGIC LIBICONV LTLIBICONV WARNING_CFLAGS STRICT_WARNING_CFLAGS ERROR_CFLAGS PKG_CONFIG XML_CFLAGS XML_LIBS XSLT_CFLAGS XSLT_LIBS X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS GTK_CFLAGS GTK_LIBS FREETYPE2_CFLAGS FREETYPE2_LIBS PANGOFT2_CFLAGS PANGOFT2_LIBS XTEST_LIBS GCONF_CFLAGS GCONF_LIBS GDK_CFLAGS GDK_LIBS QT_CFLAGS QT_LIBS MOC MOZILLA_CFLAGS MOZILLA_LIBS GLIB_CFLAGS GLIB_LIBS PLUGIN_DIR USER_JAVAH USER_SPECIFIED_JAVAH_TRUE USER_SPECIFIED_JAVAH_FALSE CLASSPATH_INCLUDES GCJ JIKES JIKESENCODING JIKESWARNINGS KJC GCJX ECJ FOUND_GCJ_TRUE FOUND_GCJ_FALSE FOUND_JIKES_TRUE FOUND_JIKES_FALSE FOUND_ECJ_TRUE FOUND_ECJ_FALSE FOUND_KJC_TRUE FOUND_KJC_FALSE FOUND_GCJX_TRUE FOUND_GCJX_FALSE USER_CLASSLIB USER_SPECIFIED_CLASSLIB_TRUE USER_SPECIFIED_CLASSLIB_FALSE vm_classes MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBDEBUG INIT_LOAD_LIBRARY JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION REMOVE MKDIR CP DATE FIND ZIP FASTJAR INSTALL_GLIBJ_ZIP_TRUE INSTALL_GLIBJ_ZIP_FALSE INSTALL_CLASS_FILES_TRUE INSTALL_CLASS_FILES_FALSE BUILD_CLASS_FILES_TRUE BUILD_CLASS_FILES_FALSE EXAMPLESDIR GJDOC CREATE_API_DOCS_TRUE CREATE_API_DOCS_FALSE JAY JAY_SKELETON REGEN_PARSERS_TRUE REGEN_PARSERS_FALSE USE_PREBUILT_GLIBJ_ZIP_TRUE USE_PREBUILT_GLIBJ_ZIP_FALSE PATH_TO_GLIBJ_ZIP USE_ESCHER_TRUE USE_ESCHER_FALSE PATH_TO_ESCHER ENABLE_LOCAL_SOCKETS_TRUE ENABLE_LOCAL_SOCKETS_FALSE DEFAULT_PREFS_PEER LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os JAVA_MAINTAINER_MODE_TRUE JAVA_MAINTAINER_MODE_FALSE multi_basedir LIBVERSION CLASSPATH_MODULE CLASSPATH_CONVENIENCE INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar CREATE_COLLECTIONS_TRUE CREATE_COLLECTIONS_FALSE CREATE_JNI_LIBRARIES_TRUE CREATE_JNI_LIBRARIES_FALSE CREATE_CORE_JNI_LIBRARIES_TRUE CREATE_CORE_JNI_LIBRARIES_FALSE CREATE_GCONF_PEER_LIBRARIES_TRUE CREATE_GCONF_PEER_LIBRARIES_FALSE default_toolkit CREATE_XMLJ_LIBRARY_TRUE CREATE_XMLJ_LIBRARY_FALSE CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CPP EGREP CREATE_ALSA_LIBRARIES_TRUE CREATE_ALSA_LIBRARIES_FALSE CREATE_DSSI_LIBRARIES_TRUE CREATE_DSSI_LIBRARIES_FALSE CREATE_GTK_PEER_LIBRARIES_TRUE CREATE_GTK_PEER_LIBRARIES_FALSE CREATE_QT_PEER_LIBRARIES_TRUE CREATE_QT_PEER_LIBRARIES_FALSE CREATE_PLUGIN_TRUE CREATE_PLUGIN_FALSE toolexeclibdir nativeexeclibdir glibjdir VM_BINARY FOUND_CACAO_TRUE FOUND_CACAO_FALSE CREATE_JNI_HEADERS_TRUE CREATE_JNI_HEADERS_FALSE CREATE_WRAPPERS_TRUE CREATE_WRAPPERS_FALSE LN_S RANLIB ac_ct_RANLIB LIBTOOL CXX CXXFLAGS ac_ct_CXX CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE CXXCPP PERL COLLECTIONS_PREFIX LIBMAGIC LIBICONV LTLIBICONV WARNING_CFLAGS STRICT_WARNING_CFLAGS ERROR_CFLAGS PKG_CONFIG XML_CFLAGS XML_LIBS XSLT_CFLAGS XSLT_LIBS X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS GTK_CFLAGS GTK_LIBS FREETYPE2_CFLAGS FREETYPE2_LIBS PANGOFT2_CFLAGS PANGOFT2_LIBS XTEST_LIBS GCONF_CFLAGS GCONF_LIBS GDK_CFLAGS GDK_LIBS QT_CFLAGS QT_LIBS MOC MOZILLA_CFLAGS MOZILLA_LIBS GLIB_CFLAGS GLIB_LIBS PLUGIN_DIR USER_JAVAH USER_SPECIFIED_JAVAH_TRUE USER_SPECIFIED_JAVAH_FALSE CLASSPATH_INCLUDES GCJ JIKES JIKESENCODING JIKESWARNINGS KJC GCJX ECJ FOUND_GCJ_TRUE FOUND_GCJ_FALSE FOUND_JIKES_TRUE FOUND_JIKES_FALSE FOUND_ECJ_TRUE FOUND_ECJ_FALSE FOUND_KJC_TRUE FOUND_KJC_FALSE FOUND_GCJX_TRUE FOUND_GCJX_FALSE USER_CLASSLIB USER_SPECIFIED_CLASSLIB_TRUE USER_SPECIFIED_CLASSLIB_FALSE vm_classes MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBDEBUG INIT_LOAD_LIBRARY ECJ_JAR FOUND_ECJ_JAR_TRUE FOUND_ECJ_JAR_FALSE JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION REMOVE MKDIR CP DATE FIND ZIP FASTJAR INSTALL_GLIBJ_ZIP_TRUE INSTALL_GLIBJ_ZIP_FALSE INSTALL_CLASS_FILES_TRUE INSTALL_CLASS_FILES_FALSE BUILD_CLASS_FILES_TRUE BUILD_CLASS_FILES_FALSE EXAMPLESDIR GJDOC CREATE_API_DOCS_TRUE CREATE_API_DOCS_FALSE JAY JAY_SKELETON REGEN_PARSERS_TRUE REGEN_PARSERS_FALSE USE_PREBUILT_GLIBJ_ZIP_TRUE USE_PREBUILT_GLIBJ_ZIP_FALSE PATH_TO_GLIBJ_ZIP USE_ESCHER_TRUE USE_ESCHER_FALSE PATH_TO_ESCHER ENABLE_LOCAL_SOCKETS_TRUE ENABLE_LOCAL_SOCKETS_FALSE DEFAULT_PREFS_PEER LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -946,6 +946,8 @@ Optional Packages:\n   --with-ecj              bytecode compilation with ecj\n   --with-classpath        specify path to a classes.zip like file\n   --with-vm-classes       specify path to VM override source files\n+  --with-ecj-jar=ABS.PATH specify jar file containing the Eclipse Java\n+                          Compiler\n   --with-fastjar=PATH     define to use a fastjar style tool\n   --with-glibj            define what to install (zip|flat|both|none|build)\n                           [default=zip]\n@@ -5755,7 +5757,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 5758 \"configure\"' > conftest.$ac_ext\n+  echo '#line 5760 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -16115,6 +16117,28 @@ fi;\n \n \n \n+\n+# Check whether --with-ecj-jar or --without-ecj-jar was given.\n+if test \"${with_ecj_jar+set}\" = set; then\n+  withval=\"$with_ecj_jar\"\n+  ECJ_JAR=$withval\n+else\n+  if test -f $multi_basedir/ecj.jar; then\n+\t       ECJ_JAR='$(jardir)/ecj.jar'\n+\t     fi\n+fi;\n+\n+\n+\n+if test \"$ECJ_JAR\" != \"\"; then\n+  FOUND_ECJ_JAR_TRUE=\n+  FOUND_ECJ_JAR_FALSE='#'\n+else\n+  FOUND_ECJ_JAR_TRUE='#'\n+  FOUND_ECJ_JAR_FALSE=\n+fi\n+\n+\n # Check whether --enable-java-lang-system-explicit-initialization or --disable-java-lang-system-explicit-initialization was given.\n if test \"${enable_java_lang_system_explicit_initialization+set}\" = set; then\n   enableval=\"$enable_java_lang_system_explicit_initialization\"\n@@ -20252,6 +20276,13 @@ echo \"$as_me: error: conditional \\\"MAINTAINER_MODE\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n+if test -z \"${FOUND_ECJ_JAR_TRUE}\" && test -z \"${FOUND_ECJ_JAR_FALSE}\"; then\n+  { { echo \"$as_me:$LINENO: error: conditional \\\"FOUND_ECJ_JAR\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&5\n+echo \"$as_me: error: conditional \\\"FOUND_ECJ_JAR\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n if test -z \"${INSTALL_GLIBJ_ZIP_TRUE}\" && test -z \"${INSTALL_GLIBJ_ZIP_FALSE}\"; then\n   { { echo \"$as_me:$LINENO: error: conditional \\\"INSTALL_GLIBJ_ZIP\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&5\n@@ -21109,6 +21140,9 @@ s,@MAINTAINER_MODE_FALSE@,$MAINTAINER_MODE_FALSE,;t t\n s,@MAINT@,$MAINT,;t t\n s,@LIBDEBUG@,$LIBDEBUG,;t t\n s,@INIT_LOAD_LIBRARY@,$INIT_LOAD_LIBRARY,;t t\n+s,@ECJ_JAR@,$ECJ_JAR,;t t\n+s,@FOUND_ECJ_JAR_TRUE@,$FOUND_ECJ_JAR_TRUE,;t t\n+s,@FOUND_ECJ_JAR_FALSE@,$FOUND_ECJ_JAR_FALSE,;t t\n s,@JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@,$JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION,;t t\n s,@REMOVE@,$REMOVE,;t t\n s,@MKDIR@,$MKDIR,;t t"}, {"sha": "c9e03abafb974613f2056469d0a11825317a4572", "filename": "libjava/classpath/configure.ac", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure.ac?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -709,6 +709,28 @@ AC_ARG_ENABLE([load-library],\n AC_SUBST(INIT_LOAD_LIBRARY)\n \n \n+dnl -----------------------------------------------------------\n+dnl Specify the jar file containing the Eclipse Java Compiler.  If\n+dnl this option is not specified then the com.sun.tools.javac\n+dnl implementation will not be included in tools.zip.\n+dnl -----------------------------------------------------------\n+dnl GCJ LOCAL: default to $multi_basedir/ecj.jar\n+dnl In the default case where $multi_basedir/ecj.jar is found\n+dnl $(jardir)/ecj.jar will not expand properly in GNU Classpath's\n+dnl gnu/classpath/Configuration.java.  That is OK though since libjava's\n+dnl gnu/classpath/Configuration.java overrides GNU Classpath's and\n+dnl ECJ_JAR_FILE will be properly expanded in libjava's\n+dnl gnu/classpath/natConfiguration.cc.\n+AC_ARG_WITH([ecj-jar],\n+  \t    [AS_HELP_STRING([--with-ecj-jar=ABS.PATH],\n+  \t    [specify jar file containing the Eclipse Java Compiler])],\n+  \t    [ECJ_JAR=$withval],\n+\t    [if test -f $multi_basedir/ecj.jar; then\n+\t       ECJ_JAR='$(jardir)/ecj.jar'\n+\t     fi])\n+AC_SUBST(ECJ_JAR)\n+AM_CONDITIONAL(FOUND_ECJ_JAR, test \"$ECJ_JAR\" != \"\")\n+\n dnl -----------------------------------------------------------\n dnl Should the VM explicitly run class initialization subfunctions for\n dnl java.lang.System?   (default is false -- the subfunctions will be run "}, {"sha": "7ff3f75b6ea0e5970a3a3e4e10ef370824cb3d41", "filename": "libjava/classpath/doc/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -130,6 +130,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -141,6 +142,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "36f026185362f3e6ce805f036c333d27c5f1133a", "filename": "libjava/classpath/doc/api/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -119,6 +119,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -130,6 +131,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "8bc5a159fc21284bb8d93cd3b66a3e990e98f692", "filename": "libjava/classpath/examples/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fexamples%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fexamples%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -128,6 +128,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -139,6 +140,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "aabc4508d17f4ae9e632b43f126eb970b79a6420", "filename": "libjava/classpath/external/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fexternal%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fexternal%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -126,6 +126,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -137,6 +138,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "68b8933953dcd99c490e45a3ca11ebe63d432b27", "filename": "libjava/classpath/external/jsr166/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -117,6 +117,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -128,6 +129,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "f94e51a4ff2dfa44d1eda038e4c7547c75124519", "filename": "libjava/classpath/external/relaxngDatatype/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -117,6 +117,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -128,6 +129,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "8e3b10f3184f4077283fbf91ee8943fa7a634c1b", "filename": "libjava/classpath/external/sax/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -117,6 +117,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -128,6 +129,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "4c22e471bc038fa32c2bcd7ec751267e5feb467b", "filename": "libjava/classpath/external/w3c_dom/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -117,6 +117,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -128,6 +129,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "7fb8640933074d3f8863dda61e6771370f2441af", "filename": "libjava/classpath/gnu/classpath/Configuration.java.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FConfiguration.java.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FConfiguration.java.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FConfiguration.java.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -95,4 +95,10 @@ public interface Configuration\n    */\n   boolean JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = \n \t  @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@;\n+\n+  /**\n+   * The Eclipse Java Compiler jar file for use by the\n+   * com.sun.tools.javac implementation in tools.zip.\n+   */\n+  String ECJ_JAR = \"@ECJ_JAR@\";\n }"}, {"sha": "c18e5a2f513ca417818b647243d2d57b41a567c4", "filename": "libjava/classpath/include/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -118,6 +118,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -129,6 +130,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "6abf7972dfeb99a1987fce1f4d335b5dfe046ae1", "filename": "libjava/classpath/include/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Finclude%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Finclude%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fconfig.h.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -117,6 +117,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the <jack/jack.h> header file. */\n+#undef HAVE_JACK_JACK_H\n+\n /* Define to 1 if you have the `kevent' function. */\n #undef HAVE_KEVENT\n "}, {"sha": "d31e636db1a7f57b7c4aefd9b25cd69fccb0e6d5", "filename": "libjava/classpath/lib/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Flib%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Flib%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -122,6 +122,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -133,6 +134,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "b71a43a07bee956d6c8e35c4122fe1a53ff46095", "filename": "libjava/classpath/lib/gnu/classpath/Configuration.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Flib%2Fgnu%2Fclasspath%2FConfiguration.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Flib%2Fgnu%2Fclasspath%2FConfiguration.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fclasspath%2FConfiguration.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "43f4b738e4ff54b551c5f2c58c0cecf2c0be4ae8", "filename": "libjava/classpath/native/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -125,6 +125,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -136,6 +137,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "c7e71d98bad5d9f860a0df8be0f36be298445a22", "filename": "libjava/classpath/native/fdlibm/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Ffdlibm%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Ffdlibm%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Ffdlibm%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -144,6 +144,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -155,6 +156,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "71eac7405b226c65ace3a87e876f4effda3d5ae5", "filename": "libjava/classpath/native/jawt/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjawt%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjawt%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjawt%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -144,6 +144,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -155,6 +156,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "1890b42283d8b5fcebdfc76a35ac2ca0224fd3f4", "filename": "libjava/classpath/native/jni/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -125,6 +125,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -136,6 +137,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "50e717761834a08274f456a0f98e3e8ef1431e39", "filename": "libjava/classpath/native/jni/classpath/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fclasspath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fclasspath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fclasspath%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -135,6 +135,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -146,6 +147,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "3642c1d501f6966d13791f76e2fed2ce8b5a5d1c", "filename": "libjava/classpath/native/jni/gconf-peer/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fgconf-peer%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fgconf-peer%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fgconf-peer%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -145,6 +145,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -156,6 +157,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "ea5d7cf4f31fe25c8ddb36771917d9c58e719af5", "filename": "libjava/classpath/native/jni/gtk-peer/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fgtk-peer%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fgtk-peer%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fgtk-peer%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -184,6 +184,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -195,6 +196,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "2e741a9104e9a30b859b7a50b838ddc130636555", "filename": "libjava/classpath/native/jni/java-io/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-io%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-io%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-io%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -146,6 +146,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -157,6 +158,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "2bb1abdb201fe4172b1e875f81549051ffafb539", "filename": "libjava/classpath/native/jni/java-lang/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-lang%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-lang%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-lang%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -152,6 +152,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -163,6 +164,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "f66f6c78ddf42af9bb22509d810a90b9a72013ff", "filename": "libjava/classpath/native/jni/java-net/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-net%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-net%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-net%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -156,6 +156,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -167,6 +168,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "5e0fecf9e19dce1750a2f2262c6f36417961ca20", "filename": "libjava/classpath/native/jni/java-nio/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-nio%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-nio%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-nio%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -154,6 +154,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -165,6 +166,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "dc5987deafdd75949d9d3d38615ed7b5253b0b7d", "filename": "libjava/classpath/native/jni/java-util/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-util%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-util%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fjava-util%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -143,6 +143,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -154,6 +155,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "c8374b1428eab6913e3a0b0a8c3b4d439a008e18", "filename": "libjava/classpath/native/jni/midi-alsa/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fmidi-alsa%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fmidi-alsa%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fmidi-alsa%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -146,6 +146,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -157,6 +158,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "a282ca2f680969aab2948b5f88130ff189d3910c", "filename": "libjava/classpath/native/jni/midi-dssi/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fmidi-dssi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fmidi-dssi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fmidi-dssi%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -146,6 +146,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -157,6 +158,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "40a9c66ac2c0af3f68b623f76fcc0acfc7b6aa4b", "filename": "libjava/classpath/native/jni/native-lib/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fnative-lib%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fnative-lib%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fnative-lib%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -135,6 +135,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -146,6 +147,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "86673c3a6f82f0b9a46da2c972055371a3efa251", "filename": "libjava/classpath/native/jni/qt-peer/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fqt-peer%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fqt-peer%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fqt-peer%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -161,6 +161,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -172,6 +173,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "883968bebc8f7dfc5b2baf9574e41c2640372f14", "filename": "libjava/classpath/native/jni/xmlj/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fxmlj%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fjni%2Fxmlj%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fjni%2Fxmlj%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -145,6 +145,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -156,6 +157,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "41729c879e72f47ea9ea988618cec84e62297037", "filename": "libjava/classpath/native/plugin/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fplugin%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fnative%2Fplugin%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fnative%2Fplugin%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -143,6 +143,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -154,6 +155,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "897955656ea62cec11140b8336480cd91f57cd78", "filename": "libjava/classpath/resource/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fresource%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fresource%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fresource%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -128,6 +128,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -139,6 +140,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "58ba926f08995b3668a093b927a5463c8ce9c80c", "filename": "libjava/classpath/resource/com/sun/tools/javac/messages.properties", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fresource%2Fcom%2Fsun%2Ftools%2Fjavac%2Fmessages.properties", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fresource%2Fcom%2Fsun%2Ftools%2Fjavac%2Fmessages.properties", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fresource%2Fcom%2Fsun%2Ftools%2Fjavac%2Fmessages.properties?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,42 @@\n+# messages.properties -- English language messages\n+# Copyright (C) 2007 Free Software Foundation, Inc.\n+#\n+# This file is part of GNU Classpath.\n+#\n+# GNU Classpath is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+#\n+# GNU Classpath is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GNU Classpath; see the file COPYING.  If not, write to the\n+# Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+# 02110-1301 USA.\n+#\n+# Linking this library statically or dynamically with other modules is\n+# making a combined work based on this library.  Thus, the terms and\n+# conditions of the GNU General Public License cover the whole\n+# combination.\n+#\n+# As a special exception, the copyright holders of this library give you\n+# permission to link this library with independent modules to produce an\n+# executable, regardless of the license terms of these independent\n+# modules, and to copy and distribute the resulting executable under\n+# terms of your choice, provided that you also meet, for each linked\n+# independent module, the terms and conditions of the license of that\n+# module.  An independent module is a module which is not derived from\n+# or based on this library.  If you modify this library, you may extend\n+# this exception to your version of the library, but you are not\n+# obligated to do so.  If you do not wish to do so, delete this\n+# exception statement from your version.\n+\n+Main.FailedToRead:failed to read {0}\n+Main.MalformedURL:malformed URL for {0}\n+Main.FailedToLoad:failed to load {0} from {1}\n+Main.FailedConstructor:failed to find ecj constructor\n+Main.FailedCompile:failed to find ecj compile method"}, {"sha": "4c897fd5e67a98a7a6e99ffe9fc2923661a1620a", "filename": "libjava/classpath/resource/sun/rmi/rmic/messages.properties", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fresource%2Fsun%2Frmi%2Frmic%2Fmessages.properties", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fresource%2Fsun%2Frmi%2Frmic%2Fmessages.properties", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fresource%2Fsun%2Frmi%2Frmic%2Fmessages.properties?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,38 @@\n+# messages.properties -- English language messages\n+# Copyright (C) 2007 Free Software Foundation, Inc.\n+#\n+# This file is part of GNU Classpath.\n+#\n+# GNU Classpath is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+#\n+# GNU Classpath is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GNU Classpath; see the file COPYING.  If not, write to the\n+# Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+# 02110-1301 USA.\n+#\n+# Linking this library statically or dynamically with other modules is\n+# making a combined work based on this library.  Thus, the terms and\n+# conditions of the GNU General Public License cover the whole\n+# combination.\n+#\n+# As a special exception, the copyright holders of this library give you\n+# permission to link this library with independent modules to produce an\n+# executable, regardless of the license terms of these independent\n+# modules, and to copy and distribute the resulting executable under\n+# terms of your choice, provided that you also meet, for each linked\n+# independent module, the terms and conditions of the license of that\n+# module.  An independent module is a module which is not derived from\n+# or based on this library.  If you modify this library, you may extend\n+# this exception to your version of the library, but you are not\n+# obligated to do so.  If you do not wish to do so, delete this\n+# exception statement from your version.\n+\n+Main.InternalError:sun.rmi.rmic: failed to run rmic main method"}, {"sha": "dbeda952f4fe0b3246498f02391c146b1021a982", "filename": "libjava/classpath/scripts/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fscripts%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Fscripts%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fscripts%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -118,6 +118,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -129,6 +130,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@"}, {"sha": "22f0d026d7ba9cb3f91e7a80450e1a96e633b71e", "filename": "libjava/classpath/tools/Makefile.am", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2FMakefile.am?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -16,6 +16,16 @@ error dunno how to setup the JCOMPILER and compile\n endif\n endif\n \n+if FOUND_ECJ_JAR\n+COM_SUN_TOOLS_JAVAC = com/sun/tools/javac\n+ABS_COM_SUN_TOOLS_JAVAC = $(srcdir)/$(COM_SUN_TOOLS_JAVAC)\n+ABS_COM_SUN_TOOLS_JAVAC_SRCS = $(ABS_COM_SUN_TOOLS_JAVAC)/*.java\n+else\n+COM_SUN_TOOLS_JAVAC =\n+ABS_COM_SUN_TOOLS_JAVAC =\n+ABS_COM_SUN_TOOLS_JAVAC_SRCS =\n+endif\n+\n if CREATE_WRAPPERS\n bin_SCRIPTS =\n bin_PROGRAMS = gappletviewer gjarsigner gkeytool \\\n@@ -101,6 +111,10 @@ EXTRA_DIST = toolwrapper.c gappletviewer.in gjarsigner.in gkeytool.in \\\n \n # All our example java source files\n TOOLS_JAVA_FILES = $(srcdir)/gnu/classpath/tools/*/*.java \\\n+\t$(srcdir)/com/sun/javadoc/*.java \\\n+\t$(srcdir)/com/sun/tools/doclets/*.java \\\n+\t$(ABS_COM_SUN_TOOLS_JAVAC_SRCS) \\\n+\t$(srcdir)/sun/rmi/rmic/*.java \\\n \t$(srcdir)/external/asm/org/objectweb/asm/*.java \\\n \t$(srcdir)/external/asm/org/objectweb/asm/attrs/*.java \\\n \t$(srcdir)/external/asm/org/objectweb/asm/commons/*.java \\\n@@ -154,7 +168,12 @@ $(TOOLS_ZIP): $(TOOLS_JAVA_FILES)\n ##\t@rm -rf classes asm\n ##\tmkdir classes asm\n \tfind $(srcdir)/external/asm -name '*.java' -print > asm.lst\n-\tfind $(srcdir)/gnu/classpath/tools -name '*.java' -print > classes.lst\n+\tfind $(srcdir)/gnu/classpath/tools \\\n+\t     $(srcdir)/com/sun/javadoc \\\n+\t     $(srcdir)/com/sun/tools/doclets \\\n+\t     $(ABS_COM_SUN_TOOLS_JAVAC) \\\n+\t     $(srcdir)/sun/rmi/rmic \\\n+\t     -name '*.java' -print > classes.lst\n \tif [ -f $(top_builddir)/../vm-tools-packages ]; then \\\n \t    : > vm-tools.lst; \\\n \t    for pkg in `cat $(top_builddir)/../vm-tools-packages`; do \\\n@@ -170,7 +189,9 @@ if JAVA_MAINTAINER_MODE\n \t  $$AC -g -w -d $(srcdir)/asm @asm.lst\n \t$(JCOMPILER) -g -w -d $(srcdir)/classes @classes.lst @vm-tools.lst\n ## Copy over tools resource files.\n-\t@list=`cd $(top_srcdir)/resource && find gnu/classpath/tools -name \\*.properties -print`; \\\n+\t@list=`cd $(top_srcdir)/resource && find gnu/classpath/tools \\\n+\t       com/sun/javadoc com/sun/tools/doclets $(COM_SUN_TOOLS_JAVAC) \\\n+\t       sun/rmi/rmic -name \\*.properties -print`; \\\n \tfor p in $$list; do \\\n \t  dirname=classes/`dirname $$p`; \\\n \t  if ! test -d \"$$dirname\"; then mkdir -p \"$$dirname\"; fi; \\"}, {"sha": "884658378af932446a60953893b2aeb2465ca644", "filename": "libjava/classpath/tools/Makefile.in", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2FMakefile.in?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -220,6 +220,7 @@ ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n ECJ = @ECJ@\n+ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n ENABLE_LOCAL_SOCKETS_TRUE = @ENABLE_LOCAL_SOCKETS_TRUE@\n@@ -231,6 +232,8 @@ FIND = @FIND@\n FOUND_CACAO_FALSE = @FOUND_CACAO_FALSE@\n FOUND_CACAO_TRUE = @FOUND_CACAO_TRUE@\n FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n+FOUND_ECJ_JAR_FALSE = @FOUND_ECJ_JAR_FALSE@\n+FOUND_ECJ_JAR_TRUE = @FOUND_ECJ_JAR_TRUE@\n FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n FOUND_GCJX_FALSE = @FOUND_GCJX_FALSE@\n FOUND_GCJX_TRUE = @FOUND_GCJX_TRUE@\n@@ -395,6 +398,12 @@ GLIBJ_CLASSPATH = $(srcdir)/asm\n \n # Setup the compiler to use the GNU Classpath library we just build\n @FOUND_GCJ_TRUE@JCOMPILER = $(GCJ) -C -encoding UTF-8 -bootclasspath $(GLIBJ_BOOTCLASSPATH) -classpath $(GLIBJ_CLASSPATH):.\n+@FOUND_ECJ_JAR_FALSE@COM_SUN_TOOLS_JAVAC = \n+@FOUND_ECJ_JAR_TRUE@COM_SUN_TOOLS_JAVAC = com/sun/tools/javac\n+@FOUND_ECJ_JAR_FALSE@ABS_COM_SUN_TOOLS_JAVAC = \n+@FOUND_ECJ_JAR_TRUE@ABS_COM_SUN_TOOLS_JAVAC = $(srcdir)/$(COM_SUN_TOOLS_JAVAC)\n+@FOUND_ECJ_JAR_FALSE@ABS_COM_SUN_TOOLS_JAVAC_SRCS = \n+@FOUND_ECJ_JAR_TRUE@ABS_COM_SUN_TOOLS_JAVAC_SRCS = $(ABS_COM_SUN_TOOLS_JAVAC)/*.java\n @CREATE_WRAPPERS_TRUE@bin_SCRIPTS = \n @CREATE_WRAPPERS_TRUE@AM_CPPFLAGS = -Wall \\\n @CREATE_WRAPPERS_TRUE@\t-I$(top_srcdir)/include \\\n@@ -472,6 +481,10 @@ EXTRA_DIST = toolwrapper.c gappletviewer.in gjarsigner.in gkeytool.in \\\n \n # All our example java source files\n TOOLS_JAVA_FILES = $(srcdir)/gnu/classpath/tools/*/*.java \\\n+\t$(srcdir)/com/sun/javadoc/*.java \\\n+\t$(srcdir)/com/sun/tools/doclets/*.java \\\n+\t$(ABS_COM_SUN_TOOLS_JAVAC_SRCS) \\\n+\t$(srcdir)/sun/rmi/rmic/*.java \\\n \t$(srcdir)/external/asm/org/objectweb/asm/*.java \\\n \t$(srcdir)/external/asm/org/objectweb/asm/attrs/*.java \\\n \t$(srcdir)/external/asm/org/objectweb/asm/commons/*.java \\\n@@ -1078,7 +1091,12 @@ dist-hook:\n # so they get also included.\n $(TOOLS_ZIP): $(TOOLS_JAVA_FILES)\n \tfind $(srcdir)/external/asm -name '*.java' -print > asm.lst\n-\tfind $(srcdir)/gnu/classpath/tools -name '*.java' -print > classes.lst\n+\tfind $(srcdir)/gnu/classpath/tools \\\n+\t     $(srcdir)/com/sun/javadoc \\\n+\t     $(srcdir)/com/sun/tools/doclets \\\n+\t     $(ABS_COM_SUN_TOOLS_JAVAC) \\\n+\t     $(srcdir)/sun/rmi/rmic \\\n+\t     -name '*.java' -print > classes.lst\n \tif [ -f $(top_builddir)/../vm-tools-packages ]; then \\\n \t    : > vm-tools.lst; \\\n \t    for pkg in `cat $(top_builddir)/../vm-tools-packages`; do \\\n@@ -1091,7 +1109,9 @@ $(TOOLS_ZIP): $(TOOLS_JAVA_FILES)\n @JAVA_MAINTAINER_MODE_TRUE@\tAC=`echo $(JCOMPILER) | sed -e 's/UTF-8/ISO-8859-1/g'`; \\\n @JAVA_MAINTAINER_MODE_TRUE@\t  $$AC -g -w -d $(srcdir)/asm @asm.lst\n @JAVA_MAINTAINER_MODE_TRUE@\t$(JCOMPILER) -g -w -d $(srcdir)/classes @classes.lst @vm-tools.lst\n-@JAVA_MAINTAINER_MODE_TRUE@\t@list=`cd $(top_srcdir)/resource && find gnu/classpath/tools -name \\*.properties -print`; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t@list=`cd $(top_srcdir)/resource && find gnu/classpath/tools \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t       com/sun/javadoc com/sun/tools/doclets $(COM_SUN_TOOLS_JAVAC) \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t       sun/rmi/rmic -name \\*.properties -print`; \\\n @JAVA_MAINTAINER_MODE_TRUE@\tfor p in $$list; do \\\n @JAVA_MAINTAINER_MODE_TRUE@\t  dirname=classes/`dirname $$p`; \\\n @JAVA_MAINTAINER_MODE_TRUE@\t  if ! test -d \"$$dirname\"; then mkdir -p \"$$dirname\"; fi; \\"}, {"sha": "8f362399f69d1d643c07cabc47e9b167de17993f", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/ClassDoc.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FClassDoc.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FClassDoc.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FClassDoc.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "e9c221679e119f34bc67ba83373622da05a4b371", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/ConstructorDoc.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FConstructorDoc.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FConstructorDoc.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FConstructorDoc.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "8b98e630029bd4ee522c24dc645c87c331cd8849", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/Doc.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FDoc.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FDoc.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FDoc.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "2dec235674186007bdf5aa93eb40cc01d24ae22f", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/DocErrorReporter.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FDocErrorReporter.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FDocErrorReporter.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FDocErrorReporter.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "2def74479bf532dce9fb73c9b512eebe1ecedff4", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/Doclet.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FDoclet.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FDoclet.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FDoclet.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "84c69f1faf0fdd387391dc27654b114b27d7abbf", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/ExecutableMemberDoc.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FExecutableMemberDoc.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FExecutableMemberDoc.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FExecutableMemberDoc.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "da5da74ceb2c859b1d3ab013f9e6ceb47a3cdb45", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/FieldDoc.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FFieldDoc.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FFieldDoc.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FFieldDoc.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "50b630addeb6305beea43a15660bdcad97757a98", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/MemberDoc.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FMemberDoc.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FMemberDoc.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FMemberDoc.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "7789f8b556b177bedb8415eb1df3933cddf1f030", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/MethodDoc.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FMethodDoc.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FMethodDoc.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FMethodDoc.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "ba51efc34009ec20dae819b5d6828cce10979532", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/PackageDoc.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FPackageDoc.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FPackageDoc.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FPackageDoc.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "c8da5294dd4b88e8794620ed0fb854ffe5373a57", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/ParamTag.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FParamTag.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FParamTag.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FParamTag.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "beff569c90e8ab0c7e7b4a5d57711c4a55820063", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/Parameter.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FParameter.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FParameter.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FParameter.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "1ec3cbb25883a07e0445b20b5697fdafb9aa912f", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/ProgramElementDoc.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FProgramElementDoc.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FProgramElementDoc.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FProgramElementDoc.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "32409f6e91df2bc4bee7068e2f8fbb81a2eba230", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/RootDoc.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FRootDoc.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FRootDoc.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FRootDoc.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "f55cfde339c2a965fd5bc9b134a87c6dd7e70c71", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/SeeTag.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FSeeTag.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FSeeTag.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FSeeTag.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "f57ecac01371a31e3af2c5815dc1fe2478f6d826", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/SerialFieldTag.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FSerialFieldTag.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FSerialFieldTag.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FSerialFieldTag.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "a2825817f832d77196240255a254221979fb1149", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/SourcePosition.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FSourcePosition.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FSourcePosition.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FSourcePosition.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "efeeab1a3d5dd32110c8d50deb0dae90d1e4005d", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/Tag.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FTag.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FTag.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FTag.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "7d69e5693a357e62f63f51f93093e9e8df8f30f8", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/ThrowsTag.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FThrowsTag.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FThrowsTag.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FThrowsTag.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "e264003997c3830414cf5948b156543210650f88", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/Type.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FType.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FType.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FType.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "c9fc10f04c4a4b99177fa0e717f62706a1ce19e1", "filename": "libjava/classpath/tools/classes/com/sun/javadoc/TypeVariable.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FTypeVariable.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FTypeVariable.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Fjavadoc%2FTypeVariable.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "929a3d4080200b6dae080dbc248dc5e365c16e68", "filename": "libjava/classpath/tools/classes/com/sun/tools/doclets/Taglet.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Ftools%2Fdoclets%2FTaglet.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Ftools%2Fdoclets%2FTaglet.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fcom%2Fsun%2Ftools%2Fdoclets%2FTaglet.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "42ce06a00cd6e3571754225999d84d4abdbc9589", "filename": "libjava/classpath/tools/classes/sun/rmi/rmic/Main.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fsun%2Frmi%2Frmic%2FMain.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fsun%2Frmi%2Frmic%2FMain.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fsun%2Frmi%2Frmic%2FMain.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "87b8b987c83d426a1f7a36318a095874899c30f3", "filename": "libjava/classpath/tools/classes/sun/rmi/rmic/Messages.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fsun%2Frmi%2Frmic%2FMessages.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fclasses%2Fsun%2Frmi%2Frmic%2FMessages.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fsun%2Frmi%2Frmic%2FMessages.class?ref=442a795bc6016a0898485d626c55e00af542d91a"}, {"sha": "a4fa40a7cf7d1c480f01b5d96d94b949706bc48a", "filename": "libjava/classpath/tools/com/sun/javadoc/ClassDoc.java", "status": "added", "additions": 322, "deletions": 0, "changes": 322, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FClassDoc.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FClassDoc.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FClassDoc.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,322 @@\n+/* ClassDoc.java -- Document a Java class or interface\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+public interface ClassDoc extends ProgramElementDoc, Type\n+{\n+\n+/**\n+  * This method tests whether or not the class represented by this object\n+  * is abstract.\n+  *\n+  * @return <code>true</code> if the class is abstract, <code>false</code>,\n+  * otherwise.\n+  */\n+public abstract boolean\n+isAbstract();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not the class represented by this object\n+  * is serializable.  That is, whether or not the class implements the\n+  * <code>java.io.Serializable</code> interface.  This includes classes\n+  * which are externalizable.\n+  *\n+  * @return <code>true</code> if the class is serializable,\n+  * <code>false</code> otherwise.\n+  */\n+public abstract boolean\n+isSerializable();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not the class represented by this object\n+  * is externalizable.  That is, whether or not the class implements the\n+  * <code>java.io.Externalizable</code> interface.\n+  *\n+  * @return <code>true</code> if the class is externalizable,\n+  * <code>false</code> otherwise.\n+  */\n+public abstract boolean\n+isExternalizable();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the serialization methods for the class\n+  * represented by this object.  Is the custom readObject/writeObject\n+  * methods?\n+  *\n+  * @return The serialization methods for this class.\n+  */\n+public abstract MethodDoc[]\n+serializationMethods();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the list of fields that are serialized in this\n+  * class.  This will return either the list of fields with an\n+  * \"@serial\" declaration, or, if it exists, the\n+  * <code>serialPersistentField</code> field.\n+  *\n+  * @return The list of serializable fields.\n+  */\n+public abstract FieldDoc[]\n+serializableFields();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not the class represented by this object\n+  * specifically defines its serializable fields in a\n+  * <code>serialPersistentFields</code> field.\n+  *\n+  * @return <code>true</code> if this class explicitly defines its\n+  * serializable fields, <code>false</code> otherwise.\n+  */\n+public abstract boolean\n+definesSerializableFields();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the superclass of the class represented by this\n+  * object.\n+  *\n+  * @return The superclass of this class.\n+  */\n+public abstract ClassDoc\n+superclass();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not the class represented by this object is\n+  * a subclass of the specified class.\n+  *\n+  * @param cls The <code>ClassDoc</code> object of the class to test against.\n+  *\n+  * @return <code>true</code> if this class is a subclass of the specified\n+  * class, <code>false</code> otherwise.\n+  */\n+public abstract boolean\n+subclassOf(ClassDoc cls);\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns this list of interfaces implemented (or in the case\n+  * of interfaces, extended) by this class.  This list will only include\n+  * interfaces directly implemented by this class, not those inherited by\n+  * interfaced implemented in this class.\n+  *\n+  * @return The list of interfaces this class implements.\n+  */\n+public abstract ClassDoc[]\n+interfaces();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the list of fields that are visible to the user in\n+  * this class, or the list of all fields in this class.\n+  *\n+  * @param filtered if true, only return visible (included) fields;\n+  * otherwise, return all fields.\n+  *\n+  * @return The list of visible fields in this class, or the list of\n+  * all fields in this class.\n+  */\n+public abstract FieldDoc[]\n+fields(boolean filtered);\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the list of fields that are visible to the user in\n+  * this class.  Does this depend on the -private -protected, etc flags\n+  * passed to javadoc?\n+  *\n+  * @return The list of visible fields in this class.\n+  */\n+public abstract FieldDoc[]\n+fields();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns either the list of methods that are visible to\n+  * the user in the class represented by this object, or a list of all\n+  * methods, excluding constructor methods.\n+  *\n+  * @param filtered if true, only return visible (included) methods;\n+  * otherwise, return all methods.\n+  *\n+  * @return The list of all methods in this class, or the list of\n+  * visible methods in this class.\n+  */\n+public abstract MethodDoc[]\n+methods(boolean filtered);\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the list of methods that are visible to the user in\n+  * the class represented by this object, excluding constructor methods.\n+  *\n+  * @return The list of visible methods in this class.\n+  */\n+public abstract MethodDoc[]\n+methods();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns either the list of constructors that are\n+  * visible to the user in the class represented by this object, or\n+  * the list of all constructors.\n+  *\n+  * @param filtered if true, only return visible (included)\n+  * constructors; otherwise, return all constructors.\n+  *\n+  * @return The list of all constructors in this class, or the list\n+  * of visible constructors in this class.\n+  */\n+public abstract ConstructorDoc[]\n+constructors(boolean filtered);\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the list of constructors that are visible to the user\n+  * in the class represented by this object.\n+  *\n+  * @return The list visible constructors in this class.\n+  */\n+public abstract ConstructorDoc[]\n+constructors();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the list of inner classes that are visible to\n+  * the user within the class represented by this object.\n+  *\n+  * @return The list of visible inner classes for this object.\n+  */\n+public abstract ClassDoc[]\n+innerClasses();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the list of all inner classes within the class\n+  * represented by this object, or the list of visible inner classes\n+  * in this class.\n+  *\n+  * @param filtered if true, only return visible (included) inner\n+  * classes; otherwise, return all inner classes.\n+  *\n+  * @return The list of all inner classes for this object, or the list\n+  * of visible inner classes.\n+  */\n+public abstract ClassDoc[]\n+innerClasses(boolean filtered);\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns a <code>ClassDoc</code> for the named class.  The\n+  * following search order is used:\n+  * <p>\n+  * <ol>\n+  * <li>Fully qualified class name.\n+  * <li>Inner classes within this class.\n+  * <li>In the current package.\n+  * <li>In the imports for this class.\n+  * </ol>\n+  *\n+  * @param name The name of the class to find.\n+  *\n+  * @return The requested class, or <code>null</code> if the requested\n+  * class cannot be found.\n+  */\n+public abstract ClassDoc\n+findClass(String name);\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the list of classes that are imported.  This\n+  * excludes any imports of complete packages.\n+  *\n+  * @return The list of imported classes.\n+  */\n+public abstract ClassDoc[]\n+importedClasses();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the list of packages that are imported. This\n+  * excludes any individual class imports.\n+  *\n+  * @return The list of imported packages.\n+  */\n+public abstract PackageDoc[]\n+importedPackages();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the formal type parameters of this class.\n+  * The returned array is empty if the class does not represent a\n+  * parameterized type.\n+  *\n+  * @return The list of type parameters.\n+  * @since 1.5\n+  */\n+TypeVariable[]\n+typeParameters();\n+\n+} // interface ClassDoc\n+"}, {"sha": "e9db4591c79b1c7f3306031bd07a7bdb6cca199c", "filename": "libjava/classpath/tools/com/sun/javadoc/ConstructorDoc.java", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FConstructorDoc.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FConstructorDoc.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FConstructorDoc.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,57 @@\n+/* ConstructorDoc.java -- Document a Java class constructor\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+/**\n+  * This interface is used for documenting constructors.\n+  */\n+public interface ConstructorDoc extends ExecutableMemberDoc\n+{\n+\n+/**\n+  * This method returns the qualified name of the constructor. What is this\n+  * really?\n+  *\n+  * @return The qualified name of the constructor.\n+  */\n+public abstract String\n+qualifiedName();\n+\n+} // interface ConstructorDoc\n+"}, {"sha": "425c85718f287828757c2a2ebc10e9fe19342be7", "filename": "libjava/classpath/tools/com/sun/javadoc/Doc.java", "status": "added", "additions": 265, "deletions": 0, "changes": 265, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FDoc.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FDoc.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FDoc.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,265 @@\n+/* Doc.java -- Model of an item to document.\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+/**\n+  * This interface is the super-interface of all items that can have\n+  * Javadoc comments associated with them.\n+  */\n+public interface Doc extends java.io.Serializable, Comparable\n+{\n+\n+/**\n+  * This method returns the text of the comment for this item, with all\n+  * tags stripped.\n+  *\n+  * @return The comment text for this item.\n+  */\n+public abstract String\n+commentText();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns an array of all the tags in this item.\n+  *\n+  * @return An array of tags for this item.\n+  */\n+public abstract Tag[]\n+tags();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns an array of all the tags of the specified type\n+  * in this item.\n+  *\n+  * @param tagtype The name of the tag type to return.\n+  *\n+  * @return A list of all tags of the specified type.\n+  */\n+public abstract Tag[]\n+tags(String tagtype);\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns an array of all tags of the \"@see\" type.\n+  *\n+  * @return An array of tags of the \"@see\" type\n+  */\n+public abstract SeeTag[]\n+seeTags();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the comment text as an array of tags.  This will\n+  * include any inline tags, but no regular tags.  Regular text is returned\n+  * as a type of <code>Text</code>.  Inline \"@see\" tags are returned as\n+  * type <code>SeeTag</code>.\n+  *\n+  * @return The comment text as tags.\n+  */\n+public abstract Tag[]\n+inlineTags();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the first sentence of the comment text as an array\n+  * of tags.  This will include any inline tags, but no regular tags.\n+  * Regular text is returned as a type of <code>Text</code>. Inline \"@see\"\n+  * tags are returned as type <code>SeeTag</code>.\n+  *\n+  * @return An array of tags representing the first sentence of the comment\n+  * text.\n+  */\n+public abstract Tag[]\n+firstSentenceTags();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the text of the comment in an unprocessed format.\n+  * Any Javadoc tags will remain as written in the text.\n+  *\n+  * @return The unprocessed comment text.\n+  */\n+public abstract String\n+getRawCommentText();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method sets the unprocessed comment text for this item.\n+  *\n+  * @param rawtext The unprocessed comment text for this itme.\n+  */\n+public abstract void\n+setRawCommentText(String rawtext);\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the name of this item.\n+  *\n+  * @return The name of this item.\n+  */\n+public abstract String\n+name();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not this item is a field.\n+  *\n+  * @return <code>true</code> if this item is a field, <code>false</code>\n+  * otherwise.\n+  */\n+public abstract boolean\n+isField();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not this item is a method.\n+  *\n+  * @return <code>true</code> if this item is a method, <code>false</code>\n+  * otherwise.\n+  */\n+public abstract boolean\n+isMethod();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not this item is a constructor.\n+  *\n+  * @return <code>true</code> if this item is a constructor,\n+  * <code>false</code> otherwise.\n+  */\n+public abstract boolean\n+isConstructor();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not this item is an interface.\n+  *\n+  * @return <code>true</code> if this item is an interface,\n+  * <code>false</code> otherwise.\n+  */\n+public abstract boolean\n+isInterface();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not this item is an exception.\n+  *\n+  * @return <code>true</code> if this item is an exception,\n+  * <code>false</code> otherwise.\n+  */\n+public abstract boolean\n+isException();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not this item is an error.\n+  *\n+  * @return <code>true</code> if this item is an error,\n+  * <code>false</code> otherwise.\n+  */\n+public abstract boolean\n+isError();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not this item is a class.  Interfaces\n+  * do not count as classes.\n+  *\n+  * @return <code>true</code> if this item is a class,\n+  * <code>false</code> otherwise.\n+  */\n+public abstract boolean\n+isClass();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not this item is an ordinary class.  An\n+  * ordinary class is a class that is not an exception or an error.\n+  * Interfaces also do not count because they are not considered classes at\n+  * all.\n+  *\n+  * @return <code>true</code> if this item is an ordinary class,\n+  * <code>false</code> otherwise.\n+  */\n+public abstract boolean\n+isOrdinaryClass();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not this item is part of the active set,\n+  * whatever that is.\n+  *\n+  * @return <code>true</code> if this item is part of the active set,\n+  * <code>false</code> otherwise.\n+  */\n+public abstract boolean\n+isIncluded();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the location of the item within the Java\n+  * source code.\n+  *\n+  * @return an object describing the file, line and column where this\n+  * item is defined.\n+  */\n+public abstract SourcePosition\n+position();\n+\n+} // interface Doc\n+"}, {"sha": "c4d05e7006d1cc406288b967a36424cdd1c04e31", "filename": "libjava/classpath/tools/com/sun/javadoc/DocErrorReporter.java", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FDocErrorReporter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FDocErrorReporter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FDocErrorReporter.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,77 @@\n+/* DocErrorReporter.java -- Log errors/warnings during doc generation.\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+/**\n+  * This interface provides a mechanism for a doclet to log messages\n+  * during its run.\n+  */\n+public interface DocErrorReporter\n+{\n+\n+/**\n+  * This method prints the specified error message.\n+  *\n+  * @param err The error message to print.\n+  */\n+public abstract void\n+printError(String err);\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method prints the specified warning message.\n+  *\n+  * @param warn The warning message to print.\n+  */\n+public abstract void\n+printWarning(String warn);\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method prints the specifed message.\n+  *\n+  * @param msg The message to print.\n+  */\n+public abstract void\n+printNotice(String notice);\n+\n+} // interface DocErrorReporter\n+"}, {"sha": "7ce4b29ef967c90b6dbf6fb30bb471eaa497de9f", "filename": "libjava/classpath/tools/com/sun/javadoc/Doclet.java", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FDoclet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FDoclet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FDoclet.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,99 @@\n+/* Doclet.java -- Doclet API\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+/**\n+  * This class documents the method that must be implemented by a doclet.\n+  * It may be used as the superclass of a doclet, but this is not required.\n+  * As long as the doclet implements the <code>start</code> method, all is ok.\n+  */\n+public abstract class Doclet\n+{\n+\n+/**\n+  * This is the entry point to a doclet.  All doclets must implement this\n+  * method.\n+  *\n+  * @param rd The <code>RootDoc</code> instance for this javadoc run.\n+  *\n+  * @return <code>true</code> on success, <code>false</code> on failure.\n+  */\n+public static boolean\n+start(RootDoc root)\n+{\n+  return(false);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the number of arguments to the option, including\n+  * the option itself.  This is not required of doclets.\n+  *\n+  * @param opt The option to check.\n+  *\n+  * @return The number of arguments to the option, or zero if the option is\n+  * unknown, or a negative number if an error occurred.\n+  */\n+public static int\n+optionLength(String opt)\n+{\n+  return(0);\n+}\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method is called to verify that the options supplied by the caller\n+  * are valid.  This is not required of doclets.\n+  *\n+  * @param opts The list of options supplied by the user.\n+  * @param logger A mechanism for this method to report errors to the user.\n+  *\n+  * @return <code>true</code> if the options are valid, <code>false</code>\n+  * otherwise.\n+  */\n+public static boolean\n+validOptions(String[][] opts, DocErrorReporter logger)\n+{\n+  return(true);\n+}\n+\n+} // class Doclet\n+"}, {"sha": "8d4ddab6694d970caf8fba2c0c3da90483913b76", "filename": "libjava/classpath/tools/com/sun/javadoc/ExecutableMemberDoc.java", "status": "added", "additions": 138, "deletions": 0, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FExecutableMemberDoc.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FExecutableMemberDoc.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FExecutableMemberDoc.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,138 @@\n+/* ExecutableMemberDoc.java -- Document methods and constructors\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+/**\n+  * This is the super-interface for interfaces describing constructors and\n+  * methods.\n+  */\n+public interface ExecutableMemberDoc extends MemberDoc\n+{\n+\n+/**\n+  * This method returns a list of all the execeptions that are declared\n+  * to be thrown in this method or constructor.\n+  *\n+  * @return The list of exceptions for this method.\n+  */\n+public abstract ClassDoc[]\n+thrownExceptions();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not this method/constructor is native.\n+  *\n+  * @return <code>true</code> if the method is native, <code>false</code>\n+  * otherwise.\n+  */\n+public abstract boolean\n+isNative();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not this method/constructor is\n+  * synchronized.\n+  *\n+  * @return <code>true</code> if the method is synchronized,\n+  * <code>false</code> otherwise.\n+  */\n+public abstract boolean\n+isSynchronized();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the list of parameters for this method/constructor.\n+  *\n+  * @return The list of parameters for this method.\n+  */\n+public abstract Parameter[]\n+parameters();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the list of \"@throws\" and \"@exception\" tags in this\n+  * method/constructor.\n+  *\n+  * @return The list of exception doc tags.\n+  */\n+public abstract ThrowsTag[]\n+throwsTags();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method return the list of \"@param\" tags in this method/constructor.\n+  *\n+  * @return The list of parameter doc tags for this method.\n+  */\n+public abstract ParamTag[]\n+paramTags();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the signature of this method in pseudo-code format,\n+  * with fully qualified class references.  For example, the method\n+  * <code>read(String str, boolean bool)</code> would have the signature\n+  * <code>(java.lang.String, boolean)</code> returned by this method.\n+  *\n+  * @return The signature for this method.\n+  */\n+public abstract String\n+signature();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the signature of this method in pseudo-code format,\n+  * with uqualified class references.  For example, the method\n+  * <code>read(String str, boolean bool)</code> would have the signature\n+  * <code>(String, boolean)</code> returned by this method.\n+  *\n+  * @return The signature for this method.\n+  */\n+public abstract String\n+flatSignature();\n+\n+} // interface ExecutableMemberDoc\n+"}, {"sha": "a5e48c4c147577018478ee0d8ae8ed13b431a8f8", "filename": "libjava/classpath/tools/com/sun/javadoc/FieldDoc.java", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FFieldDoc.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FFieldDoc.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FFieldDoc.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,113 @@\n+/* FieldDoc.java -- Document a field\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+/**\n+  * This package is used for documenting fields.\n+  */\n+public interface FieldDoc extends MemberDoc\n+{\n+\n+/**\n+  * This method returns the type of this field.\n+  *\n+  * @return The type of this field.\n+  */\n+public abstract Type\n+type();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not the field is transient.\n+  *\n+  * @return <code>true</code> if the field is transient, <code>false</code>\n+  * otherwise.\n+  */\n+public abstract boolean\n+isTransient();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not the field is volatile.\n+  *\n+  * @return <code>true</code> if the field is volatile, <code>false</code>\n+  * otherwise.\n+  */\n+public abstract boolean\n+isVolatile();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns a list of all \"@serialField\" tags defined in this\n+  * field.\n+  *\n+  * @return The list of \"@serialField\" tags for this field.\n+  */\n+public abstract SerialFieldTag[]\n+serialFieldTags();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the value of this static field.\n+  *\n+  * @return The value of this static field.\n+  */\n+public abstract Object\n+constantValue();\n+\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the value of this static field converted to a\n+  * human-readable string.\n+  *\n+  * @return The value of this static field as a human-readable string.\n+  */\n+public abstract String\n+constantValueExpression();\n+\n+\n+\n+} // interface FieldDoc\n+"}, {"sha": "8448f12c59448026caf216b0aeb08c4a352c42e4", "filename": "libjava/classpath/tools/com/sun/javadoc/MemberDoc.java", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FMemberDoc.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FMemberDoc.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FMemberDoc.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,60 @@\n+/* MemberDoc.java -- Common ops for documenting fields, methods,\n+   and constructors\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+/**\n+  * This is the common super-interface for documentation about fields,\n+  * methods, and constructors.\n+  */\n+public interface MemberDoc extends ProgramElementDoc\n+{\n+\n+/**\n+  * This method tests whether the member in question was created implicitly\n+  * by the compiler.\n+  *\n+  * @return <code>true</code> if this member was synthesized by the compiler,\n+  * </code>false</code> otherwise.\n+  */\n+public abstract boolean\n+isSynthetic();\n+\n+} // interface MemberDoc\n+"}, {"sha": "a24b8ec09eb9d3afd3ae769e80278828fb456b46", "filename": "libjava/classpath/tools/com/sun/javadoc/MethodDoc.java", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FMethodDoc.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FMethodDoc.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FMethodDoc.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,80 @@\n+/* MethodDoc.java -- Document a method\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+/**\n+  * This interface is used for documenting ordinary (ie, non-constructor)\n+  * methods.\n+  */\n+public interface MethodDoc extends ExecutableMemberDoc\n+{\n+\n+/**\n+  * This method tests whether or not the method to be documented is abstract.\n+  *\n+  * @return <code>true</code> if the method is abstract, <code>false</code>\n+  * otherwise.\n+  */\n+public abstract boolean\n+isAbstract();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the return type of the method to be documented.\n+  *\n+  * @return The return type of the method to be documented.\n+  */\n+public abstract Type\n+returnType();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the class containing the method that this method is\n+  * overriding.\n+  *\n+  * @return The class containing the method that this method is overriding,\n+  * or <code>null</code> if this class is not overriding a method.\n+  */\n+public abstract ClassDoc\n+overriddenClass();\n+\n+} // interface MethodDoc\n+"}, {"sha": "d544acf5bb9ad996e4f85839ef3d7ccc66c6e469", "filename": "libjava/classpath/tools/com/sun/javadoc/PackageDoc.java", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FPackageDoc.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FPackageDoc.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FPackageDoc.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,109 @@\n+/* PackageDoc.java -- Document a package\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+public interface PackageDoc extends Doc\n+{\n+\n+/**\n+  * This method returns a list of all the classes and interfaces in\n+  * this package.  This list will included exceptions and errors.\n+  *\n+  * @return The list of classes and interfaces for this package.\n+  */\n+public abstract ClassDoc[]\n+allClasses();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the list of ordinary classes in this package.  This\n+  * list will not include any interface, exceptions or errors.\n+  *\n+  * @return The list of ordinary classes in this package.\n+  */\n+public abstract ClassDoc[]\n+ordinaryClasses();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the list of exceptions in this package.\n+  *\n+  * @return The list of exceptions in this package.\n+  */\n+public abstract ClassDoc[]\n+exceptions();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the list of errors in this package.\n+  *\n+  * @return The list of errors in this package.\n+  */\n+public abstract ClassDoc[]\n+errors();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the list of interfaces in this package.\n+  *\n+  * @return The list of interfaces in this package.\n+  */\n+public abstract ClassDoc[]\n+interfaces();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns a <code>ClassDoc</code> instance for the specified\n+  * class.\n+  *\n+  * @param name The name of the class to return.\n+  *\n+  * @return The requested <code>ClassDoc</code> or <code>null</code> if\n+  * this class not part of this javadoc run.\n+  */\n+public abstract ClassDoc\n+findClass(String cls);\n+\n+} // interface PackageDoc\n+"}, {"sha": "94358637e6636c73f53589d7cd04859a9d7bf1fd", "filename": "libjava/classpath/tools/com/sun/javadoc/ParamTag.java", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FParamTag.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FParamTag.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FParamTag.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,66 @@\n+/* ParamTag.java -- Documentation tag for method parameters\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+/**\n+  * This interface represents an \"@param\" tag.\n+  */\n+public interface ParamTag extends Tag\n+{\n+\n+/**\n+  * This method returns the comment text for the parameter.\n+  *\n+  * @return The comment text for the parameter.\n+  */\n+public abstract String\n+parameterComment();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the name of the parameter.\n+  *\n+  * @return The name of the parameter.\n+  */\n+public abstract String\n+parameterName();\n+\n+} // interface ParamTag\n+"}, {"sha": "a359a5d9e36b2e8dbbf5eb07f1fb953b4d278ab6", "filename": "libjava/classpath/tools/com/sun/javadoc/Parameter.java", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FParameter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FParameter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FParameter.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,88 @@\n+/* Parameter.java -- Information about parameters to methods.\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+/**\n+  * This interface models a parameter to a method.\n+  */\n+public interface Parameter extends java.io.Serializable\n+{\n+\n+/**\n+  * This method returns the type of the parameter.\n+  *\n+  * @return The parameter type.\n+  */\n+public abstract Type\n+type();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the name of the parameter.\n+  *\n+  * @return The parameter name.\n+  */\n+public abstract String\n+name();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the name of the type of the parameter as a\n+  * <code>String</code>.\n+  *\n+  * @return The name of the type of this parameter.\n+  */\n+public abstract String\n+typeName();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns this parameter as a <code>String</code> that\n+  * contains both the type name and parameter name.\n+  *\n+  * @return This parameter as a <code>String</code>.\n+  */\n+public abstract String\n+toString();\n+\n+} // interaface Parameter\n+"}, {"sha": "0d6dd4640189e1847eade26bed993dea99baa9c5", "filename": "libjava/classpath/tools/com/sun/javadoc/ProgramElementDoc.java", "status": "added", "additions": 170, "deletions": 0, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FProgramElementDoc.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FProgramElementDoc.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FProgramElementDoc.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,170 @@\n+/* ProgramElementDoc.java -- Common ops for all program elements.\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+/**\n+  * This is the comment super-interface of all items that are \"program\n+  * elements\".  This includes classes, interfaces, fields, constructors,\n+  * and methods.\n+  */\n+public interface ProgramElementDoc extends Doc\n+{\n+\n+/**\n+  * This method returns the class which contains this element.  If this\n+  * is a class that is not an inner class, <code>null</code> will be\n+  * returned.\n+  *\n+  * @returned The class element that contains this item, or <code>null</code>\n+  * if this item is a class that is not an inner class.\n+  */\n+public abstract ClassDoc\n+containingClass();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the package which contains this element.  If this\n+  * element is in the default generic package, then the name of the\n+  * package element returned will be \"\".\n+  *\n+  * @return The package element that contains this item.\n+  */\n+public abstract PackageDoc\n+containingPackage();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the fully qualified name of this element.\n+  *\n+  * @return The fully qualified name of this element.\n+  */\n+public abstract String\n+qualifiedName();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the modifier specificier number, which is what?\n+  *\n+  * @return The modifier for this element.\n+  */\n+public abstract int\n+modifierSpecifier();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns a string with the element modifiers.  For example,\n+  * the modifiers of a method declaration might be \"protected abstract\".\n+  *\n+  * @return The modifier string.\n+  */\n+public abstract String\n+modifiers();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not this element is public.\n+  *\n+  * @return <code>true</code> if this element is public, <code>false</code>\n+  * otherwise.\n+  */\n+public abstract boolean\n+isPublic();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not this element is protected.\n+  *\n+  * @return <code>true</code> if this element is protected, <code>false</code>\n+  * otherwise.\n+  */\n+public abstract boolean\n+isProtected();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not this element is private.\n+  *\n+  * @return <code>true</code> if this element is private, <code>false</code>\n+  * otherwise.\n+  */\n+public abstract boolean\n+isPrivate();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not this element is package private.\n+  *\n+  * @return <code>true</code> if this element is package private,\n+  * <code>false</code> otherwise.\n+  */\n+public abstract boolean\n+isPackagePrivate();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not this element is static.\n+  *\n+  * @return <code>true</code> if this element is static, <code>false</code>\n+  * otherwise.\n+  */\n+public abstract boolean\n+isStatic();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method tests whether or not this element is final.\n+  *\n+  * @return <code>true</code> if this element is final, <code>false</code>\n+  * otherwise.\n+  */\n+public abstract boolean\n+isFinal();\n+\n+} // interface ProgramElementDoc\n+"}, {"sha": "0642154087d0360d629d8800dc62a2da11b0c5b5", "filename": "libjava/classpath/tools/com/sun/javadoc/RootDoc.java", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FRootDoc.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FRootDoc.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FRootDoc.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,112 @@\n+/* RootDoc.java -- Information about a javadoc run.\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package com.sun.javadoc;\n+\n+/**\n+ * This interface is the root of the javadoc application. All the properties and\n+ * arguments are attached to the class that will implements this interface. You\n+ * can retrieve all the options of the tool with this interface.\n+ */\n+public interface RootDoc extends Doc, DocErrorReporter\n+{\n+\n+  /**\n+   * This method returns the command line element used to invoke this instance\n+   * of javadoc.\n+   * \n+   * @return The command line arguments for this run.\n+   */\n+  public abstract String[][] options();\n+\n+  /** ********************************************************************** */\n+\n+  /**\n+   * This method returns the list of packages that were specified on the command\n+   * line.\n+   * \n+   * @return The packages specified on the command line.\n+   */\n+  public abstract PackageDoc[] specifiedPackages();\n+\n+  /** ********************************************************************** */\n+\n+  /**\n+   * This method returns the list of classes that were specified on the command\n+   * line.\n+   * \n+   * @return The classes specified on the command line.\n+   */\n+  public abstract ClassDoc[] specifiedClasses();\n+\n+  /** ********************************************************************** */\n+\n+  /**\n+   * This method returns the list of classes and interfaces to be documented.\n+   * \n+   * @return The list of classes and interfaces to be documented.\n+   */\n+  public abstract ClassDoc[] classes();\n+\n+  /** ********************************************************************** */\n+\n+  /**\n+   * This method returns a <code>ClassDoc</code> instance for the name class\n+   * or interface.\n+   * \n+   * @param name\n+   *          The class or interface to look up.\n+   * @return The requested <code>ClassDoc</code>, or null if the specified\n+   *         class is not part of this javadoc run.\n+   */\n+  public abstract ClassDoc classNamed(String name);\n+\n+  /** ********************************************************************** */\n+\n+  /**\n+   * This method returns a <code>PackageDoc</code> instance for the named\n+   * package.\n+   * \n+   * @param name\n+   *          The package to look up.\n+   * @return The requested <code>PackageDoc</code>, or null if the specified\n+   *         package is not part of this javadoc run.\n+   */\n+  public abstract PackageDoc packageNamed(String name);\n+\n+} // interface RootDoc\n+"}, {"sha": "12a2e934b280929cef2daca8cebc28eb465309f4", "filename": "libjava/classpath/tools/com/sun/javadoc/SeeTag.java", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FSeeTag.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FSeeTag.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FSeeTag.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,109 @@\n+/* SeeTag.java -- Information about \"@see\" tags.\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+/**\n+  * This interface models an \"@see\" tag.\n+  */\n+public interface SeeTag extends Tag\n+{\n+\n+/**\n+  * This method returns the label for this tag.  What is this????\n+  *\n+  * @return The label for this tag.\n+  */\n+public abstract String\n+label();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the package of the referenced item.\n+  *\n+  * @return The package of the referenced item, or <code>null</code> if no\n+  * package is found.\n+  */\n+public abstract PackageDoc\n+referencedPackage();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the name of the class referenced in the tag.\n+  *\n+  * @return The name of the class referenced in the tag.\n+  */\n+public abstract String\n+referencedClassName();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns a <code>ClassDoc</code> instance for the class\n+  * referenced in the tag.\n+  *\n+  * @return A <code>ClassDoc</code> for the class referenced in the tag.\n+  */\n+public abstract ClassDoc\n+referencedClass();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the name of the member referenced in the tag.\n+  *\n+  * @return The name of the member referenced in the tag.\n+  */\n+public abstract String\n+referencedMemberName();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns a <code>MemberDoc</code> instance for the member\n+  * referenced in the tag.\n+  *\n+  * @return A <code>MemberDoc</code> for the member referenced in the tag.\n+  */\n+public abstract MemberDoc\n+referencedMember();\n+\n+} // interface SeeTag\n+"}, {"sha": "9f5fa9accc9d88bba39f70c94dc2bbffd06a9c47", "filename": "libjava/classpath/tools/com/sun/javadoc/SerialFieldTag.java", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FSerialFieldTag.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FSerialFieldTag.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FSerialFieldTag.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,102 @@\n+/* SerialFieldTag.java -- Information about the \"@serialField\" tag.\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+/**\n+  * This interface models the \"@serialField\" tag.\n+  */\n+public interface SerialFieldTag extends Tag, Comparable\n+{\n+\n+/**\n+  * This method returns the name of the field.\n+  *\n+  * @return The name of the field.\n+  */\n+public abstract String\n+fieldName();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the type name of the field.\n+  *\n+  * @return The type name of the field.\n+  */\n+public abstract String\n+fieldType();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns a <code>ClassDoc</code> instance for the type of\n+  * the field.  What about primitive types???\n+  *\n+  * @return A <code>ClassDoc</code> for the field type.\n+  */\n+public abstract ClassDoc\n+fieldTypeDoc();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the description of the field.\n+  *\n+  * @return The description of the field.\n+  */\n+public abstract String\n+description();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method compares this object with the specified object in order to\n+  * determine proper ordering.\n+  *\n+  * @param obj The object to compare against.\n+  *\n+  * @return A negative number if this object is less than the specified\n+  * object, zero if the objects are equal, or a positive number if this object\n+  * is greater than the specified object.\n+  */\n+public abstract int\n+compareTo(Object obj);\n+\n+} // interface SerialFieldTag\n+"}, {"sha": "fff25595f7b653e5330da1269de27743b8a1a20d", "filename": "libjava/classpath/tools/com/sun/javadoc/SourcePosition.java", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FSourcePosition.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FSourcePosition.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FSourcePosition.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,68 @@\n+/* SourcePosition.java -- Model of a location in a source file.\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+import java.io.File;\n+\n+/**\n+ *  Represents a location in a source file. This is used by {@link\n+ *  Doc} to specify at which location an item is defined.\n+ */\n+public interface SourcePosition\n+{\n+   /**\n+    *  Return a File object pointing to the source file.\n+    */\n+   public File file();\n+\n+   /**\n+    *  Return the 1-based line number within the source file.\n+    */\n+   public int line();\n+\n+   /**\n+    *  Return the 1-based column number within the source file.\n+    */\n+   public int column();\n+\n+   /**\n+    *  Return a string in the format \"file.toString():line\"\n+    */\n+   public String toString();\n+}"}, {"sha": "f032212732546b119cbfca7b1762b64d22563b7c", "filename": "libjava/classpath/tools/com/sun/javadoc/Tag.java", "status": "added", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FTag.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FTag.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FTag.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,107 @@\n+/* Tag.java -- Common operations on Javadoc tags.\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+/**\n+  * This is the super-interface for all Javadoc tags.\n+  */\n+public interface Tag extends java.io.Serializable\n+{\n+/**\n+  * This method returns the name of the tag.\n+  *\n+  * @return The name of the tag.\n+  */\n+public abstract String\n+name();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the kind of tag.  ????\n+  *\n+  * @return The kind of the tag.\n+  */\n+public abstract String\n+kind();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the text for this tag.\n+  *\n+  * @return The text for this tag.\n+  */\n+public abstract String\n+text();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the tag as a <code>String</code>.  What kind of\n+  * string?\n+  *\n+  * @return This tag as a <code>String</code>.\n+  */\n+public abstract String\n+toString();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the inline tags for this comment.\n+  *\n+  * @return The inline tags for this comment.\n+  */\n+public abstract Tag[]\n+inlineTags();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the first sentence of the doc comment as an array\n+  * of <code>Tag</code>'s.\n+  *\n+  * @return The first sentence of the comment as tags.\n+  */\n+public abstract Tag[]\n+firstSentenceTags();\n+\n+} // interface Tag\n+"}, {"sha": "72a43949e424463155def05fdb86c43fcb2c456a", "filename": "libjava/classpath/tools/com/sun/javadoc/ThrowsTag.java", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FThrowsTag.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FThrowsTag.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FThrowsTag.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,76 @@\n+/* ThrowsTag.java -- Information about \"@throws\" and \"@exception\" tags.\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+/**\n+  * This interface models an \"@exception\" or \"@throws\" tag.\n+  */\n+public interface ThrowsTag extends Tag\n+{\n+\n+/**\n+  * This method returns the name of the exception.\n+  *\n+  * @return The name of the exception.\n+  */\n+public abstract String\n+exceptionName();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the comment text of the exception.\n+  *\n+  * @return The comment text of the exception.\n+  */\n+public abstract String\n+exceptionComment();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the exception class as a <code>ClassDoc</code>.\n+  *\n+  * @return The exception class as a <code>ClassDoc</code>.\n+  */\n+public abstract ClassDoc\n+exception();\n+\n+} // interface ThrowsTag\n+"}, {"sha": "8d0bd145c940f73cf7c7f373bdec2e13d406f17a", "filename": "libjava/classpath/tools/com/sun/javadoc/Type.java", "status": "added", "additions": 120, "deletions": 0, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FType.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FType.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FType.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,120 @@\n+/* Type.java -- Documentation information about Java types.\n+   Copyright (C) 1999 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+/**\n+  * This class is used for holding information about Java types needed for\n+  * documentation.\n+  */\n+public interface Type extends java.io.Serializable\n+{\n+\n+/**\n+  * This method returns the unqualified name of the type, excluding any array\n+  * dimension information or brackets.\n+  *\n+  * @return The unqualified type name, sans array information or brackets.\n+  */\n+public abstract String\n+typeName();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the fully qualified name of the type, excluding any\n+  * array dimension information or brackets.\n+  *\n+  * @return The fully qualified type name, sans array information or brackets.\n+  */\n+public abstract String\n+qualifiedTypeName();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the array dimensions as brackets.\n+  *\n+  * @param The array dimensions.\n+  */\n+public abstract String\n+dimension();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns the unqualfied name of the type, and includes array\n+  * dimension information.\n+  *\n+  * @return The unqualified name of the type, including array dimension info.\n+  */\n+public abstract String\n+toString();\n+\n+/*************************************************************************/\n+\n+/**\n+  * This method returns this type as a <code>ClassDoc</object>.  This is not\n+  * a valid operation for primitive types.\n+  *\n+  * @return A <code>ClassDoc</code> for this type, or <code>null</code> if\n+  * this is a primitive type.\n+  */\n+public abstract ClassDoc\n+asClassDoc();\n+\n+/**\n+  * This method returns whether this type represents one of the\n+  * built-in Java primitive types.\n+  */\n+public abstract boolean\n+isPrimitive();\n+\n+/**\n+ * Returns this type as a <code>TypeVariable</code>, if it is an\n+ * instance of the <code>TypeVariable</code> class.  Otherwise,\n+ * it returns null.\n+ *\n+ * @return this cast to a <code>TypeVariable</code> instance, or null\n+ *         if this is not a type variable.\n+ */\n+TypeVariable\n+asTypeVariable();\n+\n+} // interface Type\n+"}, {"sha": "4f847d26bc7018a97e45996ee52bf21861abd0aa", "filename": "libjava/classpath/tools/com/sun/javadoc/TypeVariable.java", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FTypeVariable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FTypeVariable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Fjavadoc%2FTypeVariable.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,73 @@\n+/* TypeVariable.java -- Document a Java type variable.\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.javadoc;\n+\n+/**\n+ * This class represents a type variable, which is used to parameterize\n+ * the types used in a method or class.  For example,\n+ * <code>List&lt;E&gt;</code> has the type variable, <code>E</code>.  Type\n+ * variables may have explicit bounds, such as <code>&lt;T extends\n+ * Book&gt;</code>, which specifies that the type is a sub-class of\n+ * <code>Book</code>.\n+ *\n+ * @since 1.5\n+ * @author Andrew John Hughes (gnu_andrew@member.fsf.org)\n+ */ \n+public interface TypeVariable \n+  extends Type\n+{\n+\n+  /**\n+   * Returns the bounds of this type variable.  These are the types\n+   * represented in the <code>extends</code> clause.\n+   *\n+   * @return an array of types which specify the bounds of this variable.\n+   *         The array is empty if there are no explicit bounds.\n+   */\n+  Type[] bounds();\n+\n+  /**\n+   * Returns the class, interface, method or constructor in which this\n+   * type variable was declared.\n+   *\n+   * @return the owning program element for this type variable.\n+   */\n+  ProgramElementDoc owner();\n+\n+}"}, {"sha": "f4f348d67a85e27b016462099f39fe050976a722", "filename": "libjava/classpath/tools/com/sun/tools/doclets/Taglet.java", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Ftools%2Fdoclets%2FTaglet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Ftools%2Fdoclets%2FTaglet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Ftools%2Fdoclets%2FTaglet.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,63 @@\n+/* com.sun.tools.doclets.Taglet\n+   Copyright (C) 2001 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package com.sun.tools.doclets;\n+\n+import com.sun.javadoc.Tag;\n+\n+public interface Taglet {\n+\n+   public String getName();\n+\n+   public boolean inConstructor();\n+\n+   public boolean inField();\n+\n+   public boolean inMethod();\n+\n+   public boolean inOverview();\n+\n+   public boolean inPackage();\n+\n+   public boolean inType();\n+\n+   public boolean isInlineTag();\n+\n+   public String toString(Tag tag);\n+\n+   public String toString(Tag[] tagArray);\n+}"}, {"sha": "f67a2d7286f8e557889d42e965f9d1a04c47fef3", "filename": "libjava/classpath/tools/com/sun/tools/javac/Main.java", "status": "added", "additions": 155, "deletions": 0, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Ftools%2Fjavac%2FMain.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Ftools%2Fjavac%2FMain.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Ftools%2Fjavac%2FMain.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,155 @@\n+/* Main.java -- implement com.sun.tools.javac.Main\n+   Copyright (C) 2007 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.tools.javac;\n+\n+import gnu.classpath.Configuration;\n+import java.io.File;\n+import java.io.PrintWriter;\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.Method;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+import java.text.MessageFormat;\n+\n+public class Main\n+{\n+  static Constructor ecjConstructor = null;\n+  static Method ecjMethod = null;\n+\n+  static\n+  {\n+    String classname = \"org.eclipse.jdt.internal.compiler.batch.Main\";\n+    Class klass = null;\n+    try\n+      {\n+        klass = Class.forName(classname);\n+      }\n+    catch (ClassNotFoundException e)\n+      {\n+        File jar = new File(Configuration.ECJ_JAR);\n+        if (!jar.exists() || !jar.canRead())\n+          {\n+            String message\n+              = MessageFormat.format(Messages.getString(\"Main.FailedToRead\"),\n+                                     new Object[] { Configuration.ECJ_JAR });\n+            System.err.println(message);\n+          }\n+\n+        ClassLoader loader = null;\n+        try\n+          {\n+            loader = new URLClassLoader(new URL[] {jar.toURL()});\n+          }\n+        catch (MalformedURLException f)\n+          {\n+            String message\n+              = MessageFormat.format(Messages.getString(\"Main.MalformedURL\"),\n+                                     new Object[] { Configuration.ECJ_JAR });\n+            System.err.println(message);\n+            f.printStackTrace();\n+          }\n+\n+        try\n+          {\n+            klass = loader.loadClass(classname);\n+          }\n+        catch (ClassNotFoundException g)\n+          {\n+            String message\n+              = MessageFormat.format(Messages.getString(\"Main.FailedToLoad\"),\n+                                     new Object[] { classname,\n+                                                    Configuration.ECJ_JAR });\n+            System.err.println(message);\n+            g.printStackTrace();\n+          }\n+      }\n+\n+    try\n+      {\n+        ecjConstructor = klass.getConstructor(new Class[] {\n+                                                PrintWriter.class,\n+                                                PrintWriter.class,\n+                                                Boolean.TYPE});\n+      }\n+    catch (NoSuchMethodException h)\n+      {\n+        System.err.println(Messages.getString(\"Main.FailedConstructor\"));\n+        h.printStackTrace();\n+      }\n+\n+    try\n+      {\n+        ecjMethod = klass.getMethod(\"compile\", new Class[] {String[].class});\n+      }\n+    catch (NoSuchMethodException i)\n+      {\n+        System.err.println(Messages.getString(\"Main.FailedCompile\"));\n+        i.printStackTrace();\n+      }\n+  }\n+\n+  public static int compile(String[] args, PrintWriter p) throws Exception\n+  {\n+    /*\n+     * This code depends on the patch in Comment #10 in this bug\n+     * report:\n+     *\n+     * https://bugs.eclipse.org/bugs/show_bug.cgi?id=88364\n+     */\n+    Object ecjInstance = ecjConstructor.newInstance(new Object[]\n+        {\n+          p,\n+          new PrintWriter(System.err),\n+          Boolean.FALSE\n+        });\n+    return ((Boolean) ecjMethod.invoke(ecjInstance, new Object[]\n+        { args })).booleanValue() ? 0 : -1;\n+  }\n+\n+  public static int compile(String[] args) throws Exception\n+  {\n+    return compile(args, new PrintWriter(System.out));\n+  }\n+\n+  public static void main(String[] args) throws Exception\n+  {\n+    Runtime.getRuntime().exit(Main.compile(args));\n+  }\n+}"}, {"sha": "17f22ac4422ae7f3da5a120d81bae88d16cd7da5", "filename": "libjava/classpath/tools/com/sun/tools/javac/Messages.java", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Ftools%2Fjavac%2FMessages.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Ftools%2Fjavac%2FMessages.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fcom%2Fsun%2Ftools%2Fjavac%2FMessages.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,67 @@\n+/* Messages.java -- localization support for com.sun.tools.javac\n+   Copyright (C) 2007 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package com.sun.tools.javac;\n+\n+import java.util.MissingResourceException;\n+import java.util.ResourceBundle;\n+\n+public class Messages\n+{\n+  private static final String BUNDLE_NAME\n+    = \"com.sun.tools.javac.messages\"; //$NON-NLS-1$\n+\n+  private static final ResourceBundle RESOURCE_BUNDLE\n+    = ResourceBundle.getBundle(BUNDLE_NAME);\n+\n+  private Messages()\n+  {\n+  }\n+\n+  public static String getString(String key)\n+  {\n+    try\n+      {\n+        return RESOURCE_BUNDLE.getString(key);\n+      }\n+    catch (MissingResourceException e)\n+      {\n+        return '!' + key + '!';\n+      }\n+  }\n+}"}, {"sha": "7acc65696ace0f48b3fdb44499b47ba97002b323", "filename": "libjava/classpath/tools/sun/rmi/rmic/Main.java", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fsun%2Frmi%2Frmic%2FMain.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fsun%2Frmi%2Frmic%2FMain.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fsun%2Frmi%2Frmic%2FMain.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,60 @@\n+/* Main.java -- implement sun.rmi.rmic.Main\n+   Copyright (C) 2007 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package sun.rmi.rmic;\n+\n+import java.io.OutputStream;\n+\n+public class Main\n+{\n+  // Ant calls this. What to do with stream and string?\n+  public Main(OutputStream stream, String string) {}\n+\n+  public boolean compile(String[] args)\n+  {\n+    try\n+      {\n+        gnu.classpath.tools.rmic.Main.main(args);\n+      }\n+    catch (Exception e)\n+      {\n+        System.err.println(Messages.getString(\"Main.InternalError\"));\n+        e.printStackTrace();\n+      }\n+    return true;\n+  }\n+}"}, {"sha": "80f5513a8f5b8e71ee70d1cbd187aebba31106d4", "filename": "libjava/classpath/tools/sun/rmi/rmic/Messages.java", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fsun%2Frmi%2Frmic%2FMessages.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fclasspath%2Ftools%2Fsun%2Frmi%2Frmic%2FMessages.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fsun%2Frmi%2Frmic%2FMessages.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -0,0 +1,67 @@\n+/* Messages.java -- localization support for sun.rmi.rmic\n+   Copyright (C) 2007 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package sun.rmi.rmic;\n+\n+import java.util.MissingResourceException;\n+import java.util.ResourceBundle;\n+\n+public class Messages\n+{\n+  private static final String BUNDLE_NAME\n+    = \"sun.rmi.rmic.messages\"; //$NON-NLS-1$\n+\n+  private static final ResourceBundle RESOURCE_BUNDLE\n+    = ResourceBundle.getBundle(BUNDLE_NAME);\n+\n+  private Messages()\n+  {\n+  }\n+\n+  public static String getString(String key)\n+  {\n+    try\n+      {\n+        return RESOURCE_BUNDLE.getString(key);\n+      }\n+    catch (MissingResourceException e)\n+      {\n+        return '!' + key + '!';\n+      }\n+  }\n+}"}, {"sha": "8a81965a5ec7533152e5f83f3dcc77149b3abdec", "filename": "libjava/configure", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -14449,6 +14449,7 @@ if test ! -f gnu/classpath/Configuration.java; then\n       -e \"s,@default_toolkit@,$TOOLKIT,\" \\\n       -e \"s,@JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@,false,\" \\\n       -e \"s,@GTK_CAIRO_ENABLED@,false,\" \\\n+      -e \"s,@ECJ_JAR@,,\" \\\n \t< $srcdir/classpath/gnu/classpath/Configuration.java.in \\\n \t> gnu/classpath/Configuration.java\n   # We do not want to redirect the output of the grep below to /dev/null,"}, {"sha": "d21654ae00becac18bac76b3272d3b622a197ccd", "filename": "libjava/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -1285,6 +1285,7 @@ if test ! -f gnu/classpath/Configuration.java; then\n       -e \"s,@default_toolkit@,$TOOLKIT,\" \\\n       -e \"s,@JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@,false,\" \\\n       -e \"s,@GTK_CAIRO_ENABLED@,false,\" \\\n+      -e \"s,@ECJ_JAR@,,\" \\\n \t< $srcdir/classpath/gnu/classpath/Configuration.java.in \\\n \t> gnu/classpath/Configuration.java\n   # We do not want to redirect the output of the grep below to /dev/null,"}, {"sha": "34cd719eea0a4926274e637f827138a495f19380", "filename": "libjava/gnu/classpath/Configuration.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fgnu%2Fclasspath%2FConfiguration.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fgnu%2Fclasspath%2FConfiguration.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2FConfiguration.h?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -25,13 +25,15 @@ class gnu::classpath::Configuration : public ::java::lang::Object\n   static ::java::lang::String * classpath_home();\n   static jboolean debug();\n   static ::java::lang::String * toolkit();\n+  static ::java::lang::String * ecj();\n public:\n   static ::java::lang::String * CLASSPATH_HOME;\n   static ::java::lang::String * CLASSPATH_VERSION;\n   static jboolean DEBUG;\n   static const jboolean INIT_LOAD_LIBRARY = 0;\n   static ::java::lang::String * default_awt_peer_toolkit;\n   static const jboolean JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = 0;\n+  static ::java::lang::String * ECJ_JAR;\n   static ::java::lang::Class class$;\n };\n "}, {"sha": "6899b77c44e71dc6fcc904e0a10069dfea4025c3", "filename": "libjava/gnu/classpath/Configuration.java", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fgnu%2Fclasspath%2FConfiguration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fgnu%2Fclasspath%2FConfiguration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2FConfiguration.java?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -50,6 +50,7 @@ private Configuration()\n   private static native String classpath_home();\n   private static native boolean debug();\n   private static native String toolkit();\n+  private static native String ecj();\n \n   /**\n    * The value of CLASSPATH_HOME is the location that the classpath\n@@ -102,4 +103,10 @@ private Configuration()\n    * \n    */\n   public static final boolean JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = false;\n+\n+  /**\n+   * The Eclipse Java Compiler jar file for use by the\n+   * com.sun.tools.javac implementation in tools.zip.\n+   */\n+  public static final String ECJ_JAR = ecj();\n }"}, {"sha": "06f119c2b97f6afef2ed3228f5b88bfc32332872", "filename": "libjava/gnu/classpath/natConfiguration.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fgnu%2Fclasspath%2FnatConfiguration.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fgnu%2Fclasspath%2FnatConfiguration.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2FnatConfiguration.cc?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -37,3 +37,9 @@ gnu::classpath::Configuration::toolkit()\n {\n   return JvNewStringLatin1(AWT_TOOLKIT);\n }\n+\n+jstring\n+gnu::classpath::Configuration::ecj()\n+{\n+  return JvNewStringLatin1(ECJ_JAR_FILE);\n+}"}, {"sha": "0fc06fce15d2934a1879a0b88bdb71fee7ca534a", "filename": "libjava/scripts/makemake.tcl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fscripts%2Fmakemake.tcl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fscripts%2Fmakemake.tcl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fscripts%2Fmakemake.tcl?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -252,7 +252,7 @@ proc scan_directory {basedir subdir} {\n # Scan known packages beneath the base directory for .java source\n # files.\n proc scan_packages {basedir} {\n-  foreach subdir {gnu java javax org sun META-INF} {\n+  foreach subdir {gnu java javax org sun com META-INF} {\n     if {[file exists $basedir/$subdir]} {\n       scan_directory $basedir $subdir\n     }"}, {"sha": "713e4e7c697321b6a8d50d5784e00f7f7b06c6fd", "filename": "libjava/sources.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fsources.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/442a795bc6016a0898485d626c55e00af542d91a/libjava%2Fsources.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fsources.am?ref=442a795bc6016a0898485d626c55e00af542d91a", "patch": "@@ -8975,6 +8975,8 @@ property_files = \\\n   classpath/resource/java/util/iso4217.properties \\\n   classpath/resource/javax/imageio/plugins/jpeg/MessagesBundle.properties \\\n   classpath/resource/org/ietf/jgss/MessagesBundle.properties \\\n+  classpath/resource/sun/rmi/rmic/messages.properties \\\n+  classpath/resource/com/sun/tools/javac/messages.properties \\\n   classpath/resource/META-INF/services/java.util.prefs.PreferencesFactory.in \\\n   classpath/resource/META-INF/services/javax.sound.midi.spi.MidiDeviceProvider \\\n   classpath/resource/META-INF/services/javax.sound.midi.spi.MidiFileReader \\"}]}