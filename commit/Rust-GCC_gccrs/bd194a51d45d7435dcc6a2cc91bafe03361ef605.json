{"sha": "bd194a51d45d7435dcc6a2cc91bafe03361ef605", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQxOTRhNTFkNDVkNzQzNWRjYzZhMmNjOTFiYWZlMDMzNjFlZjYwNQ==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2019-06-18T22:14:43Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2019-06-18T22:14:43Z"}, "message": "Add missing results check in 'libgomp.fortran/allocatable3.f90'\n\n\tlibgomp/\n\t* testsuite/libgomp.fortran/allocatable3.f90: Add missing results\n\tcheck.\n\nFrom-SVN: r272449", "tree": {"sha": "a6ce7db277e446ff36e9f3a769a14c0785991841", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6ce7db277e446ff36e9f3a769a14c0785991841"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd194a51d45d7435dcc6a2cc91bafe03361ef605", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd194a51d45d7435dcc6a2cc91bafe03361ef605", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd194a51d45d7435dcc6a2cc91bafe03361ef605", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd194a51d45d7435dcc6a2cc91bafe03361ef605/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6652161ef3293e7c9d3ed6690a3e1c869424185f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6652161ef3293e7c9d3ed6690a3e1c869424185f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6652161ef3293e7c9d3ed6690a3e1c869424185f"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "ef6397f1d28b6469a488a4a97c42cfed2c114ddb", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd194a51d45d7435dcc6a2cc91bafe03361ef605/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd194a51d45d7435dcc6a2cc91bafe03361ef605/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=bd194a51d45d7435dcc6a2cc91bafe03361ef605", "patch": "@@ -1,3 +1,8 @@\n+2019-06-18  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.fortran/allocatable3.f90: Add missing results\n+\tcheck.\n+\n 2019-06-18  Cesar Philippidis  <cesar@codesourcery.com>\n \n \t* testsuite/libgomp.oacc-fortran/allocatable-array-1.f90: New"}, {"sha": "df69fff54919eb33378317e7aeb99ce3b74d2285", "filename": "libgomp/testsuite/libgomp.fortran/allocatable3.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd194a51d45d7435dcc6a2cc91bafe03361ef605/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd194a51d45d7435dcc6a2cc91bafe03361ef605/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable3.f90?ref=bd194a51d45d7435dcc6a2cc91bafe03361ef605", "patch": "@@ -18,4 +18,5 @@\n   l = l.or.any (a.ne.0)\n   deallocate (a)\n !$omp end parallel\n+  if (l.or.allocated (a)) STOP 2\n end"}]}