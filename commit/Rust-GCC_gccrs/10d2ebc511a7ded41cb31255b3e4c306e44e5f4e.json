{"sha": "10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBkMmViYzUxMWE3ZGVkNDFjYjMxMjU1YjNlNGMzMDZlNDRlNWY0ZQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2006-09-30T10:25:12Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2006-09-30T10:25:12Z"}, "message": "types_traits.hpp (store_extra_false_type): To false_type.\n\n2006-09-30  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/ext/pb_ds/detail/types_traits.hpp (store_extra_false_type):\n\tTo false_type.\n\t(store_extra_true_type): To true_type.\n\t(no_throw_copies_true_type): To true_type.\n\t(no_throw_copies_false_type): To false_type.\n\t* include/ext/pb_ds/detail/cc_hash_table_map_/\n\tinsert_no_store_hash_fn_imps.hpp: Same.\n\t* include/ext/pb_ds/detail/cc_hash_table_map_/\n\tresize_store_hash_fn_imps.hpp: Same.\n\t* include/ext/pb_ds/detail/cc_hash_table_map_/\n\tinsert_store_hash_fn_imps.hpp: Same.\n\t* include/ext/pb_ds/detail/cc_hash_table_map_/\n\tentry_list_fn_imps.hpp: Same.\n\t* include/ext/pb_ds/detail/cc_hash_table_map_/\n\tdebug_no_store_hash_fn_imps.hpp: Same.\n\t* include/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp: Same.\n\t* include/ext/pb_ds/detail/cc_hash_table_map_/\n\tdebug_store_hash_fn_imps.hpp: Same.\n\t* include/ext/pb_ds/detail/cc_hash_table_map_/\n\tresize_no_store_hash_fn_imps.hpp: Same.\n\t* include/ext/pb_ds/detail/gp_hash_table_map_/\n\tinsert_no_store_hash_fn_imps.hpp: Same.\n\t* include/ext/pb_ds/detail/gp_hash_table_map_/\n\tresize_store_hash_fn_imps.hpp: Same.\n\t* include/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp: Same.\n\t* include/ext/pb_ds/detail/gp_hash_table_map_/\n\tinsert_store_hash_fn_imps.hpp: Same.\n\t* include/ext/pb_ds/detail/gp_hash_table_map_/\n\tfind_no_store_hash_fn_imps.hpp: Same.\n\t* include/ext/pb_ds/detail/gp_hash_table_map_/\n\tdebug_no_store_hash_fn_imps.hpp: Same.\n\t* include/ext/pb_ds/detail/gp_hash_table_map_/\n\tdebug_store_hash_fn_imps.hpp: Same.\n\t* include/ext/pb_ds/detail/gp_hash_table_map_/\n\tresize_no_store_hash_fn_imps.hpp: Same.\n\t* include/ext/pb_ds/detail/list_update_map_/lu_map_.hpp: Same.\n\nFrom-SVN: r117329", "tree": {"sha": "b130745ab9d0a5f61ee5e86dbff04a2221b8242d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b130745ab9d0a5f61ee5e86dbff04a2221b8242d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/comments", "author": null, "committer": null, "parents": [{"sha": "beb5d0f44c0d60a05204f3661275ebb770038a6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beb5d0f44c0d60a05204f3661275ebb770038a6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beb5d0f44c0d60a05204f3661275ebb770038a6a"}], "stats": {"total": 145, "additions": 83, "deletions": 62}, "files": [{"sha": "21e0e1597e5684dfdb7d9610c06126f85a3e25e3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "patch": "@@ -1,11 +1,50 @@\n+2006-09-30  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/ext/pb_ds/detail/types_traits.hpp (store_extra_false_type):\n+\tTo false_type.\n+\t(store_extra_true_type): To true_type.\n+\t(no_throw_copies_true_type): To true_type.\n+\t(no_throw_copies_false_type): To false_type.\n+\t* include/ext/pb_ds/detail/cc_hash_table_map_/\n+\tinsert_no_store_hash_fn_imps.hpp: Same.\n+\t* include/ext/pb_ds/detail/cc_hash_table_map_/\n+\tresize_store_hash_fn_imps.hpp: Same.\n+\t* include/ext/pb_ds/detail/cc_hash_table_map_/\n+\tinsert_store_hash_fn_imps.hpp: Same.\n+\t* include/ext/pb_ds/detail/cc_hash_table_map_/\n+\tentry_list_fn_imps.hpp: Same.\n+\t* include/ext/pb_ds/detail/cc_hash_table_map_/\n+\tdebug_no_store_hash_fn_imps.hpp: Same.\n+\t* include/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp: Same.\n+\t* include/ext/pb_ds/detail/cc_hash_table_map_/\n+\tdebug_store_hash_fn_imps.hpp: Same.\n+\t* include/ext/pb_ds/detail/cc_hash_table_map_/\n+\tresize_no_store_hash_fn_imps.hpp: Same.\n+\t* include/ext/pb_ds/detail/gp_hash_table_map_/\n+\tinsert_no_store_hash_fn_imps.hpp: Same.\n+\t* include/ext/pb_ds/detail/gp_hash_table_map_/\n+\tresize_store_hash_fn_imps.hpp: Same.\n+\t* include/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp: Same.\n+\t* include/ext/pb_ds/detail/gp_hash_table_map_/\n+\tinsert_store_hash_fn_imps.hpp: Same.\n+\t* include/ext/pb_ds/detail/gp_hash_table_map_/\n+\tfind_no_store_hash_fn_imps.hpp: Same.\n+\t* include/ext/pb_ds/detail/gp_hash_table_map_/\n+\tdebug_no_store_hash_fn_imps.hpp: Same.\n+\t* include/ext/pb_ds/detail/gp_hash_table_map_/\n+\tdebug_store_hash_fn_imps.hpp: Same.\n+\t* include/ext/pb_ds/detail/gp_hash_table_map_/\n+\tresize_no_store_hash_fn_imps.hpp: Same.\n+\t* include/ext/pb_ds/detail/list_update_map_/lu_map_.hpp: Same.\n+\n 2006-09-29  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/ext/pb_ds/detail/cc_hash_table_map_/\n \tconstructor_destructor_no_store_hash_fn_imps.hpp: Formating fixes.\n \t* include/ext/pb_ds/detail/basic_tree_policy/\n \tnull_node_metadata.hpp: Same.\n \t* include/ext/pb_ds/detail/binary_heap_/const_point_iterator.hpp: Same.\n---\t* include/ext/pb_ds/detail/basic_types.hpp: Same.\n+\t* include/ext/pb_ds/detail/basic_types.hpp: Same.\n \t* include/ext/pb_ds/detail/list_update_policy/\n \tmtf_lu_policy_imp.hpp: Same.\n \t* include/ext/pb_ds/detail/list_update_policy/"}, {"sha": "c2b95e84ca7e92c67aa75230db077f804a80578c", "filename": "libstdc++-v3/include/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp", "status": "modified", "additions": 13, "deletions": 19, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fcc_ht_map_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fcc_ht_map_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fcc_ht_map_.hpp?ref=10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "patch": "@@ -136,10 +136,6 @@ namespace pb_ds\n       typedef typename traits_base::const_pointer const_pointer_;\n       typedef typename traits_base::reference reference_;\n       typedef typename traits_base::const_reference const_reference_;\n-      typedef typename traits_base::store_extra_false_type store_hash_false_type;\n-      typedef typename traits_base::store_extra_true_type store_hash_true_type;\n-      typedef typename traits_base::no_throw_copies_false_type no_throw_copies_false_type;\n-      typedef typename traits_base::no_throw_copies_true_type no_throw_copies_true_type;\n \n       struct entry : public traits_base::stored_value_type\n       {\n@@ -362,26 +358,26 @@ namespace pb_ds\n       resize_imp_no_exceptions(size_type, entry_pointer_array, size_type);\n \n       inline entry_pointer\n-      resize_imp_no_exceptions_reassign_pointer(entry_pointer, entry_pointer_array, store_hash_false_type);\n+      resize_imp_no_exceptions_reassign_pointer(entry_pointer, entry_pointer_array, false_type);\n \n       inline entry_pointer\n-      resize_imp_no_exceptions_reassign_pointer(entry_pointer, entry_pointer_array, store_hash_true_type);\n+      resize_imp_no_exceptions_reassign_pointer(entry_pointer, entry_pointer_array, true_type);\n \n       void\n       deallocate_links_in_list(entry_pointer);\n \n       inline entry_pointer\n-      get_entry(const_reference, no_throw_copies_false_type);\n+      get_entry(const_reference, false_type);\n \n       inline entry_pointer\n-      get_entry(const_reference, no_throw_copies_true_type);\n+      get_entry(const_reference, true_type);\n \n       inline void\n       rels_entry(entry_pointer);\n \n #ifdef PB_DS_DATA_TRUE_INDICATOR\n       inline mapped_reference\n-      subscript_imp(const_key_reference r_key, store_hash_false_type)\n+      subscript_imp(const_key_reference r_key, false_type)\n       {\n \t_GLIBCXX_DEBUG_ONLY(assert_valid();)\n         const size_type pos = ranged_hash_fn_base::operator()(r_key);\n@@ -407,7 +403,7 @@ namespace pb_ds\n       }\n \n       inline mapped_reference\n-      subscript_imp(const_key_reference r_key, store_hash_true_type)\n+      subscript_imp(const_key_reference r_key, true_type)\n       {\n \t_GLIBCXX_DEBUG_ONLY(assert_valid();)\n \tcomp_hash pos_hash_pair = ranged_hash_fn_base::operator()(r_key);\n@@ -434,10 +430,10 @@ namespace pb_ds\n #endif \n \n       inline std::pair<point_iterator, bool>\n-      insert_imp(const_reference, store_hash_false_type);\n+      insert_imp(const_reference, false_type);\n \n       inline std::pair<point_iterator, bool>\n-      insert_imp(const_reference, store_hash_true_type);\n+      insert_imp(const_reference, true_type);\n \n       inline pointer\n       insert_new_imp(const_reference r_val, size_type pos)\n@@ -478,7 +474,7 @@ namespace pb_ds\n       }\n \n       inline pointer\n-      find_key_pointer(const_key_reference r_key, store_hash_false_type)\n+      find_key_pointer(const_key_reference r_key, false_type)\n       {\n \tentry_pointer p_e = m_entries[ranged_hash_fn_base::operator()(r_key)];\n \tresize_base::notify_find_search_start();\n@@ -501,7 +497,7 @@ namespace pb_ds\n       }\n \n       inline pointer\n-      find_key_pointer(const_key_reference r_key, store_hash_true_type)\n+      find_key_pointer(const_key_reference r_key, true_type)\n       {\n \tcomp_hash pos_hash_pair = ranged_hash_fn_base::operator()(r_key);\n \tentry_pointer p_e = m_entries[pos_hash_pair.first];\n@@ -585,17 +581,15 @@ namespace pb_ds\n       assert_entry_pointer_array_valid(const entry_pointer_array) const;\n \n       void\n-      assert_entry_pointer_valid(const entry_pointer, \n-\t\t\t\t store_hash_true_type) const;\n+      assert_entry_pointer_valid(const entry_pointer, true_type) const;\n \n       void\n-      assert_entry_pointer_valid(const entry_pointer, \n-\t\t\t\t store_hash_false_type) const;\n+      assert_entry_pointer_valid(const entry_pointer, false_type) const;\n #endif \n \n #ifdef PB_DS_HT_MAP_TRACE_\n       void\n-      trace_list(const_entry_pointer p_l) const;\n+      trace_list(const_entry_pointer) const;\n #endif \n \n     private:"}, {"sha": "d179a3dc941a4c7bda264faf307d271e8578be05", "filename": "libstdc++-v3/include/ext/pb_ds/detail/cc_hash_table_map_/debug_no_store_hash_fn_imps.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fdebug_no_store_hash_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fdebug_no_store_hash_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fdebug_no_store_hash_fn_imps.hpp?ref=10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "patch": "@@ -49,7 +49,7 @@\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-assert_entry_pointer_valid(const entry_pointer p, store_hash_false_type) const\n+assert_entry_pointer_valid(const entry_pointer p, false_type) const\n { map_debug_base::check_key_exists(PB_DS_V2F(p->m_value)); }\n \n #endif "}, {"sha": "48dc555abea2d9975888353900b8d5b39be2c4e6", "filename": "libstdc++-v3/include/ext/pb_ds/detail/cc_hash_table_map_/debug_store_hash_fn_imps.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fdebug_store_hash_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fdebug_store_hash_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fdebug_store_hash_fn_imps.hpp?ref=10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "patch": "@@ -49,7 +49,7 @@\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-assert_entry_pointer_valid(const entry_pointer p_e, store_hash_true_type) const\n+assert_entry_pointer_valid(const entry_pointer p_e, true_type) const\n {\n   map_debug_base::check_key_exists(PB_DS_V2F(p_e->m_value));\n   comp_hash pos_hash_pair = ranged_hash_fn_base::operator()(PB_DS_V2F(p_e->m_value));"}, {"sha": "b8871630854efd96e28f33441a8fbd8defe9fe8b", "filename": "libstdc++-v3/include/ext/pb_ds/detail/cc_hash_table_map_/entry_list_fn_imps.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fentry_list_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fentry_list_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fentry_list_fn_imps.hpp?ref=10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "patch": "@@ -60,7 +60,7 @@ deallocate_links_in_list(entry_pointer p_e)\n PB_DS_CLASS_T_DEC\n inline typename PB_DS_CLASS_C_DEC::entry_pointer\n PB_DS_CLASS_C_DEC::\n-get_entry(const_reference r_val, no_throw_copies_true_type)\n+get_entry(const_reference r_val, true_type)\n {\n   // Following line might throw an exception.\n   entry_pointer p_e = s_entry_allocator.allocate(1);\n@@ -73,7 +73,7 @@ get_entry(const_reference r_val, no_throw_copies_true_type)\n PB_DS_CLASS_T_DEC\n inline typename PB_DS_CLASS_C_DEC::entry_pointer\n PB_DS_CLASS_C_DEC::\n-get_entry(const_reference r_val, no_throw_copies_false_type)\n+get_entry(const_reference r_val, false_type)\n {\n   // Following line might throw an exception.\n   entry_pointer p_e = s_entry_allocator.allocate(1);"}, {"sha": "fd158f921ad3a33fc54a12cbda7bb9241ba5b15d", "filename": "libstdc++-v3/include/ext/pb_ds/detail/cc_hash_table_map_/insert_no_store_hash_fn_imps.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Finsert_no_store_hash_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Finsert_no_store_hash_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Finsert_no_store_hash_fn_imps.hpp?ref=10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "patch": "@@ -48,7 +48,7 @@\n PB_DS_CLASS_T_DEC\n inline std::pair<typename PB_DS_CLASS_C_DEC::point_iterator, bool>\n PB_DS_CLASS_C_DEC::\n-insert_imp(const_reference r_val, store_hash_false_type)\n+insert_imp(const_reference r_val, false_type)\n {\n   _GLIBCXX_DEBUG_ONLY(assert_valid();)\n   const_key_reference r_key = PB_DS_V2F(r_val);"}, {"sha": "128e11fdc0fca5adcaa35830419cb125040343d0", "filename": "libstdc++-v3/include/ext/pb_ds/detail/cc_hash_table_map_/insert_store_hash_fn_imps.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Finsert_store_hash_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Finsert_store_hash_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Finsert_store_hash_fn_imps.hpp?ref=10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "patch": "@@ -48,7 +48,7 @@\n PB_DS_CLASS_T_DEC\n inline std::pair<typename PB_DS_CLASS_C_DEC::point_iterator, bool>\n PB_DS_CLASS_C_DEC::\n-insert_imp(const_reference r_val, store_hash_true_type)\n+insert_imp(const_reference r_val, true_type)\n {\n   _GLIBCXX_DEBUG_ONLY(assert_valid();)\n   const_key_reference key = PB_DS_V2F(r_val);"}, {"sha": "5fb7f9ddf0d663d6ca34eef029e10ec3ab2fa858", "filename": "libstdc++-v3/include/ext/pb_ds/detail/cc_hash_table_map_/resize_no_store_hash_fn_imps.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fresize_no_store_hash_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fresize_no_store_hash_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fresize_no_store_hash_fn_imps.hpp?ref=10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "patch": "@@ -48,7 +48,7 @@\n PB_DS_CLASS_T_DEC\n inline typename PB_DS_CLASS_C_DEC::entry_pointer\n PB_DS_CLASS_C_DEC::\n-resize_imp_no_exceptions_reassign_pointer(entry_pointer p_e, entry_pointer_array a_p_entries_resized, store_hash_false_type)\n+resize_imp_no_exceptions_reassign_pointer(entry_pointer p_e, entry_pointer_array a_p_entries_resized, false_type)\n {\n   const size_type hash_pos =\n     ranged_hash_fn_base::operator()(PB_DS_V2F(p_e->m_value));"}, {"sha": "387410599e551835d3fd8a606ad98d0d0f8d5215", "filename": "libstdc++-v3/include/ext/pb_ds/detail/cc_hash_table_map_/resize_store_hash_fn_imps.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fresize_store_hash_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fresize_store_hash_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fcc_hash_table_map_%2Fresize_store_hash_fn_imps.hpp?ref=10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "patch": "@@ -48,7 +48,7 @@\n PB_DS_CLASS_T_DEC\n inline typename PB_DS_CLASS_C_DEC::entry_pointer\n PB_DS_CLASS_C_DEC::\n-resize_imp_no_exceptions_reassign_pointer(entry_pointer p_e, entry_pointer_array a_p_entries_resized, store_hash_true_type)\n+resize_imp_no_exceptions_reassign_pointer(entry_pointer p_e, entry_pointer_array a_p_entries_resized, true_type)\n {\n   const comp_hash pos_hash_pair =\n     ranged_hash_fn_base::operator()(PB_DS_V2F(p_e->m_value), p_e->m_hash);"}, {"sha": "9d3d428e3afa5a57e164139c4f647e1e1596bdad", "filename": "libstdc++-v3/include/ext/pb_ds/detail/gp_hash_table_map_/debug_no_store_hash_fn_imps.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fdebug_no_store_hash_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fdebug_no_store_hash_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fdebug_no_store_hash_fn_imps.hpp?ref=10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "patch": "@@ -49,7 +49,7 @@\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-assert_entry_array_valid(const entry_array a_entries, store_hash_false_type) const\n+assert_entry_array_valid(const entry_array a_entries, false_type) const\n {\n   size_type iterated_num_used_e = 0;\n   for (size_type pos = 0; pos < m_num_e; ++pos)"}, {"sha": "a4d8b6c651aa8ee917e8213b3c911e31af4ab761", "filename": "libstdc++-v3/include/ext/pb_ds/detail/gp_hash_table_map_/debug_store_hash_fn_imps.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fdebug_store_hash_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fdebug_store_hash_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fdebug_store_hash_fn_imps.hpp?ref=10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "patch": "@@ -49,7 +49,7 @@\n PB_DS_CLASS_T_DEC\n void\n PB_DS_CLASS_C_DEC::\n-assert_entry_array_valid(const entry_array a_entries, store_hash_true_type) const\n+assert_entry_array_valid(const entry_array a_entries, true_type) const\n {\n   size_type iterated_num_used_e = 0;\n "}, {"sha": "a134f33aded0ee22553d3b8e2c4b697bfacec149", "filename": "libstdc++-v3/include/ext/pb_ds/detail/gp_hash_table_map_/find_no_store_hash_fn_imps.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Ffind_no_store_hash_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Ffind_no_store_hash_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Ffind_no_store_hash_fn_imps.hpp?ref=10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "patch": "@@ -48,5 +48,5 @@\n PB_DS_CLASS_T_DEC\n inline typename PB_DS_CLASS_C_DEC::pointer\n PB_DS_CLASS_C_DEC::\n-find_key_pointer(const_key_reference r_key, store_hash_false_type)\n+find_key_pointer(const_key_reference r_key, false_type)\n "}, {"sha": "4a2ae406bbd63eeb5f9680fd7093fef82fa2ee76", "filename": "libstdc++-v3/include/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fgp_ht_map_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fgp_ht_map_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fgp_ht_map_.hpp?ref=10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "patch": "@@ -127,8 +127,6 @@ namespace pb_ds\n     {\n     private:\n       typedef PB_DS_TYPES_TRAITS_C_DEC traits_base;\n-      typedef typename traits_base::store_extra_false_type store_hash_false_type;\n-      typedef typename traits_base::store_extra_true_type store_hash_true_type;\n       typedef typename traits_base::value_type value_type_;\n       typedef typename traits_base::pointer pointer_;\n       typedef typename traits_base::const_pointer const_pointer_;\n@@ -383,22 +381,22 @@ namespace pb_ds\n       resize_imp(entry_array, size_type);\n \n       inline void\n-      resize_imp_reassign(entry_pointer, entry_array, store_hash_false_type);\n+      resize_imp_reassign(entry_pointer, entry_array, false_type);\n \n       inline void\n-      resize_imp_reassign(entry_pointer, entry_array, store_hash_true_type);\n+      resize_imp_reassign(entry_pointer, entry_array, true_type);\n \n       inline size_type\n-      find_ins_pos(const_key_reference, store_hash_false_type);\n+      find_ins_pos(const_key_reference, false_type);\n \n       inline comp_hash\n-      find_ins_pos(const_key_reference, store_hash_true_type);\n+      find_ins_pos(const_key_reference, true_type);\n \n       inline std::pair<point_iterator, bool>\n-      insert_imp(const_reference, store_hash_false_type);\n+      insert_imp(const_reference, false_type);\n \n       inline std::pair<point_iterator, bool>\n-      insert_imp(const_reference, store_hash_true_type);\n+      insert_imp(const_reference, true_type);\n \n       inline pointer\n       insert_new_imp(const_reference r_val, size_type pos)\n@@ -450,7 +448,7 @@ namespace pb_ds\n \n #ifdef PB_DS_DATA_TRUE_INDICATOR\n       inline mapped_reference\n-      subscript_imp(const_key_reference key, store_hash_false_type)\n+      subscript_imp(const_key_reference key, false_type)\n       {\n \t_GLIBCXX_DEBUG_ONLY(assert_valid();)\n \n@@ -466,7 +464,7 @@ namespace pb_ds\n       }\n \n       inline mapped_reference\n-      subscript_imp(const_key_reference key, store_hash_true_type)\n+      subscript_imp(const_key_reference key, true_type)\n       {\n \t_GLIBCXX_DEBUG_ONLY(assert_valid();)\n \n@@ -483,7 +481,7 @@ namespace pb_ds\n #endif\n \n       inline pointer\n-      find_key_pointer(const_key_reference key, store_hash_false_type)\n+      find_key_pointer(const_key_reference key, false_type)\n       {\n \tconst size_type hash = ranged_probe_fn_base::operator()(key);\n \tsize_type i;\n@@ -529,7 +527,7 @@ namespace pb_ds\n       }\n \n       inline pointer\n-      find_key_pointer(const_key_reference key, store_hash_true_type)\n+      find_key_pointer(const_key_reference key, true_type)\n       {\n \tcomp_hash pos_hash_pair = ranged_probe_fn_base::operator()(key);\n \tsize_type i;\n@@ -640,10 +638,10 @@ namespace pb_ds\n \n #ifdef _GLIBCXX_DEBUG\n       void\n-      assert_entry_array_valid(const entry_array, store_hash_false_type) const;\n+      assert_entry_array_valid(const entry_array, false_type) const;\n \n       void\n-      assert_entry_array_valid(const entry_array, store_hash_true_type) const;\n+      assert_entry_array_valid(const entry_array, true_type) const;\n #endif \n \n       static entry_allocator \ts_entry_allocator;"}, {"sha": "48e7aa0f057129d80b36d1c35831187ca7dc73ea", "filename": "libstdc++-v3/include/ext/pb_ds/detail/gp_hash_table_map_/insert_no_store_hash_fn_imps.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Finsert_no_store_hash_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Finsert_no_store_hash_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Finsert_no_store_hash_fn_imps.hpp?ref=10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "patch": "@@ -48,7 +48,7 @@\n PB_DS_CLASS_T_DEC\n inline typename PB_DS_CLASS_C_DEC::size_type\n PB_DS_CLASS_C_DEC::\n-find_ins_pos(const_key_reference r_key, store_hash_false_type)\n+find_ins_pos(const_key_reference r_key, false_type)\n {\n   size_type hash = ranged_probe_fn_base::operator()(r_key);\n   size_type i;\n@@ -99,7 +99,7 @@ find_ins_pos(const_key_reference r_key, store_hash_false_type)\n PB_DS_CLASS_T_DEC\n inline std::pair<typename PB_DS_CLASS_C_DEC::point_iterator, bool>\n PB_DS_CLASS_C_DEC::\n-insert_imp(const_reference r_val, store_hash_false_type)\n+insert_imp(const_reference r_val, false_type)\n {\n   const_key_reference r_key = PB_DS_V2F(r_val);\n   const size_type pos = find_ins_pos(r_key, "}, {"sha": "9d794d6069aa971d9a21fa7c0e2fd9d6e8886e39", "filename": "libstdc++-v3/include/ext/pb_ds/detail/gp_hash_table_map_/insert_store_hash_fn_imps.hpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Finsert_store_hash_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Finsert_store_hash_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Finsert_store_hash_fn_imps.hpp?ref=10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "patch": "@@ -48,7 +48,7 @@\n PB_DS_CLASS_T_DEC\n inline typename PB_DS_CLASS_C_DEC::comp_hash\n PB_DS_CLASS_C_DEC::\n-find_ins_pos(const_key_reference r_key, store_hash_true_type)\n+find_ins_pos(const_key_reference r_key, true_type)\n {\n   _GLIBCXX_DEBUG_ONLY(PB_DS_CLASS_C_DEC::assert_valid();)\n   comp_hash pos_hash_pair = ranged_probe_fn_base::operator()(r_key);\n@@ -104,7 +104,7 @@ find_ins_pos(const_key_reference r_key, store_hash_true_type)\n PB_DS_CLASS_T_DEC\n inline std::pair<typename PB_DS_CLASS_C_DEC::point_iterator, bool>\n PB_DS_CLASS_C_DEC::\n-insert_imp(const_reference r_val, store_hash_true_type)\n+insert_imp(const_reference r_val, true_type)\n {\n   const_key_reference r_key = PB_DS_V2F(r_val);\n   comp_hash pos_hash_pair = find_ins_pos(r_key, "}, {"sha": "33f0da5f99ee719c55e6bdd2fb9c4379e880c14e", "filename": "libstdc++-v3/include/ext/pb_ds/detail/gp_hash_table_map_/resize_no_store_hash_fn_imps.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fresize_no_store_hash_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fresize_no_store_hash_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fresize_no_store_hash_fn_imps.hpp?ref=10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "patch": "@@ -49,7 +49,7 @@ PB_DS_CLASS_T_DEC\n inline void\n PB_DS_CLASS_C_DEC::\n resize_imp_reassign(entry_pointer p_e, entry_array a_entries_resized, \n-\t\t    store_hash_false_type)\n+\t\t    false_type)\n {\n   const_key_reference r_key = PB_DS_V2F(p_e->m_value);\n   size_type hash = ranged_probe_fn_base::operator()(r_key);"}, {"sha": "0cced8eca5aa99dd4e7100b0b658f26992fd6b8f", "filename": "libstdc++-v3/include/ext/pb_ds/detail/gp_hash_table_map_/resize_store_hash_fn_imps.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fresize_store_hash_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fresize_store_hash_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fgp_hash_table_map_%2Fresize_store_hash_fn_imps.hpp?ref=10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "patch": "@@ -49,7 +49,7 @@ PB_DS_CLASS_T_DEC\n inline void\n PB_DS_CLASS_C_DEC::\n resize_imp_reassign(entry_pointer p_e, entry_array a_entries_resized, \n-\t\t    store_hash_true_type)\n+\t\t    true_type)\n {\n   const_key_reference r_key = PB_DS_V2F(p_e->m_value);\n   size_type hash = ranged_probe_fn_base::operator()(r_key, p_e->m_hash);"}, {"sha": "e99dc735ab4d358a66a0e7790c9e13d17a55f3d5", "filename": "libstdc++-v3/include/ext/pb_ds/detail/list_update_map_/lu_map_.hpp", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Flist_update_map_%2Flu_map_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Flist_update_map_%2Flu_map_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Flist_update_map_%2Flu_map_.hpp?ref=10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "patch": "@@ -63,7 +63,6 @@ namespace pb_ds\n {\n   namespace detail\n   {\n-\n #define PB_DS_CLASS_T_DEC \\\n     template<typename Key, typename Mapped, class Eq_Fn, \\\n \t     class Allocator, class Update_Policy>\n@@ -152,10 +151,6 @@ namespace pb_ds\n       typedef PB_DS_MAP_DEBUG_BASE_C_DEC map_debug_base;\n #endif \n \n-      typedef typename traits_base:: no_throw_copies_false_type no_throw_copies_false_type;\n-\n-      typedef typename traits_base:: no_throw_copies_true_type no_throw_copies_true_type;\n-\n       typedef cond_dealtor<entry, Allocator> cond_dealtor_t;\n \n     public:"}, {"sha": "1a7d2b5d2dfb52ad06b2f5aa6ba8564f771c533f", "filename": "libstdc++-v3/include/ext/pb_ds/detail/types_traits.hpp", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftypes_traits.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftypes_traits.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Ftypes_traits.hpp?ref=10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "patch": "@@ -73,19 +73,14 @@ namespace pb_ds\n       typedef typename key_allocator::reference key_reference;\n       typedef typename key_allocator::const_reference const_key_reference;\n       typedef typename Alloc::size_type size_type;\n-      typedef false_type store_extra_false_type;\n-      typedef true_type store_extra_true_type;\n-      typedef false_type no_throw_copies_false_type;\n-      typedef true_type no_throw_copies_true_type;\n \n       integral_constant<int, Store_Extra> m_store_extra_indicator;\n       typename no_throw_copies<Key, Mapped>::indicator m_no_throw_copies_indicator;\n \n       // Extra value (used when the extra value is stored with each value).\n       typedef typename comp_hash_<size_type>::comp_hash comp_hash;\n     };\n-\n   } // namespace detail\n } // namespace pb_ds\n \n-#endif // #ifndef PB_DS_TYPES_TRAITS_HPP\n+#endif "}]}