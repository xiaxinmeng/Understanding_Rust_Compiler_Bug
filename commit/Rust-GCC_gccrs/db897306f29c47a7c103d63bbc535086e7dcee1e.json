{"sha": "db897306f29c47a7c103d63bbc535086e7dcee1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI4OTczMDZmMjljNDdhN2MxMDNkNjNiYmM1MzUwODZlN2RjZWUxZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-02-27T17:46:01Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-02-27T17:46:01Z"}, "message": "pt.c (add_to_template_args): Fix thinko.\n\n\t* pt.c (add_to_template_args): Fix thinko.\n\t(instantiate_class_template): Call it later.\n\nFrom-SVN: r18286", "tree": {"sha": "28527602b02e7ddd14b2383c964ef09636f82628", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28527602b02e7ddd14b2383c964ef09636f82628"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db897306f29c47a7c103d63bbc535086e7dcee1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db897306f29c47a7c103d63bbc535086e7dcee1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db897306f29c47a7c103d63bbc535086e7dcee1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db897306f29c47a7c103d63bbc535086e7dcee1e/comments", "author": null, "committer": null, "parents": [{"sha": "8d019cef1a2ecde418d34b58aece9b5a0be0586f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d019cef1a2ecde418d34b58aece9b5a0be0586f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d019cef1a2ecde418d34b58aece9b5a0be0586f"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "90b77ceb04012263142dd53d878bec0e07305cd3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db897306f29c47a7c103d63bbc535086e7dcee1e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db897306f29c47a7c103d63bbc535086e7dcee1e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=db897306f29c47a7c103d63bbc535086e7dcee1e", "patch": "@@ -1,5 +1,8 @@\n Fri Feb 27 11:17:50 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n+\t* pt.c (add_to_template_args): Fix thinko.\n+\t(instantiate_class_template): Call it later.\n+\n \t* pt.c (get_class_bindings): Add outer_args parm.\n \t(most_specialized_class): Likewise.\n \t(instantiate_class_template): Pass it."}, {"sha": "10d7f97bb030be0b3dbc967f9e330f0b459dbbeb", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db897306f29c47a7c103d63bbc535086e7dcee1e/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db897306f29c47a7c103d63bbc535086e7dcee1e/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=db897306f29c47a7c103d63bbc535086e7dcee1e", "patch": "@@ -308,7 +308,7 @@ add_to_template_args (args, extra_args)\n     {\n       int i;\n \n-      new_args = make_tree_vec (TREE_VEC_LENGTH (args) - 1);\n+      new_args = make_tree_vec (TREE_VEC_LENGTH (args) + 1);\n \n       for (i = 0; i < TREE_VEC_LENGTH (args); ++i)\n \tTREE_VEC_ELT (new_args, i) = TREE_VEC_ELT (args, i);\n@@ -2480,6 +2480,7 @@ lookup_template_class (d1, arglist, in_decl, context)\n \t    }\n \t}\n \n+      /* FIXME avoid duplication.  */\n       mangled_name = mangle_class_name_for_template (IDENTIFIER_POINTER (d1),\n \t\t\t\t\t\t     parmlist,\n \t\t\t\t\t\t     arglist,\n@@ -2996,9 +2997,6 @@ instantiate_class_template (type)\n     args = get_class_bindings (TREE_VALUE (t), TREE_PURPOSE (t),\n \t\t\t       args, outer_args);\n \n-  if (outer_args)\n-    args = add_to_template_args (outer_args, args);\n-\n   if (pedantic && uses_template_parms (args))\n     /* If there are still template parameters amongst the args, then\n        we can't instantiate the type; there's no telling whether or not one\n@@ -3014,6 +3012,9 @@ instantiate_class_template (type)\n   maybe_push_to_top_level (uses_template_parms (type));\n   pushclass (type, 0);\n \n+  if (outer_args)\n+    args = add_to_template_args (outer_args, args);\n+\n   if (flag_external_templates)\n     {\n       if (flag_alt_external_templates)"}]}