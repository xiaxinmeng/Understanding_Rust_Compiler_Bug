{"sha": "80008dc734f5117eb1da8d29fb4c5e61d97cb14f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAwMDhkYzczNGY1MTE3ZWIxZGE4ZDI5ZmI0YzVlNjFkOTdjYjE0Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-12-07T22:38:08Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-12-07T22:38:08Z"}, "message": "Formerly cpp.texi.~26~\n\nFrom-SVN: r13226", "tree": {"sha": "7b178bb2f3bbe060b8340a74371209069c577aef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b178bb2f3bbe060b8340a74371209069c577aef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80008dc734f5117eb1da8d29fb4c5e61d97cb14f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80008dc734f5117eb1da8d29fb4c5e61d97cb14f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80008dc734f5117eb1da8d29fb4c5e61d97cb14f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80008dc734f5117eb1da8d29fb4c5e61d97cb14f/comments", "author": null, "committer": null, "parents": [{"sha": "c2f006ec7778167cd349a905f6c5db3b74a0271c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2f006ec7778167cd349a905f6c5db3b74a0271c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2f006ec7778167cd349a905f6c5db3b74a0271c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "675da443775533db82eb52a92ccef02d09ad541d", "filename": "gcc/cpp.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80008dc734f5117eb1da8d29fb4c5e61d97cb14f/gcc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80008dc734f5117eb1da8d29fb4c5e61d97cb14f/gcc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpp.texi?ref=80008dc734f5117eb1da8d29fb4c5e61d97cb14f", "patch": "@@ -2330,7 +2330,7 @@ when you run @code{gcc} or @code{cpp}.  @xref{Invocation}.\n @findex #error\n The directive @samp{#error} causes the preprocessor to report a fatal\n error.  The rest of the line that follows @samp{#error} is used as the\n-error message.\n+error message.  The line must consist of complete tokens.\n \n You would use @samp{#error} inside of a conditional that detects a\n combination of parameters which you know the program does not properly\n@@ -2340,7 +2340,7 @@ properly on a Vax, you might write\n @smallexample\n @group\n #ifdef __vax__\n-#error Won't work on Vaxen.  See comments at get_last_object.\n+#error \"Won't work on Vaxen.  See comments at get_last_object.\"\n #endif\n @end group\n @end smallexample"}]}