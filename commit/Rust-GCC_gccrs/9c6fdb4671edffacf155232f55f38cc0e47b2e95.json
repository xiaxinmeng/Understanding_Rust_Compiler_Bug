{"sha": "9c6fdb4671edffacf155232f55f38cc0e47b2e95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM2ZmRiNDY3MWVkZmZhY2YxNTUyMzJmNTVmMzhjYzBlNDdiMmU5NQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2005-09-23T14:32:22Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-09-23T14:32:22Z"}, "message": "rs6000.md (neg-minus-mult): Set type to dmul.\n\n2005-09-23  David Edelsohn  <edelsohn@gnu.org>\n\t    Pete Steinmetz <steinmtz@us.ibm.com>\n\n\t* config/rs6000/rs6000.md (neg-minus-mult): Set type to dmul.\n\t(rldic.): Set type to \"compare\".\n\t(rldicr.): Same.\n\t(movsf_hardfloat): Set type to mtjmpr for MTCTR/MTLR.  Set type to\n\tmfjmpr for MFCTR/MFLR.\n\t(movdf_hardfloat64): Same.\n\t(movdf_softfloat64): Same.  Correct order of store and move types.\n\t(movti_string): Set type to store_ux/load_ux.\n\t(load_multiple): Set type to load_ux.\n\t(store_multiple): Set type to store_ux.\n\t(movmemsi): Set type to store_ux.\n\t(output_cbranch direct_return): Set type to jmpreg.\n\t(stmw): Set type to store_ux.\n\t(lmw): Set type to load_ux.\n\t* config/rs6000/40x.md (ppc403-store): Increase latency to 2.\n\t* config/rs6000/440.md (ppc440-store): Increase latency to 6.\n\t* config/rs6000/603.md (ppc603-store): Occupy LSU for 2 cycles.\n\t* config/rs6000/6xx.md (ppc604-store): Increase latency to 3.\n\t* config/rs6000/mpc.md (mpccore-store): Increase latency to 2.\n\t* config/rs6000/rios1.md (rios1-store): Increase latency to 2.\n\t(rios1-fpstore): Increase latency to 3.\n\t* config/rs6000/rios2.md (rios2-store): Increase latency to 2.\n\t* config/rs6000/rs64.md (rs64a-store): Increase latency to 2.\n\nCo-Authored-By: Pete Steinmetz <steinmtz@us.ibm.com>\n\nFrom-SVN: r104568", "tree": {"sha": "ff7ea57473cbb067ed9c9199689438b1c060c52c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff7ea57473cbb067ed9c9199689438b1c060c52c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c6fdb4671edffacf155232f55f38cc0e47b2e95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c6fdb4671edffacf155232f55f38cc0e47b2e95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c6fdb4671edffacf155232f55f38cc0e47b2e95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c6fdb4671edffacf155232f55f38cc0e47b2e95/comments", "author": null, "committer": null, "parents": [{"sha": "66684b7e9b8d1641edf0e612a9917434b98a0ef6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66684b7e9b8d1641edf0e612a9917434b98a0ef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66684b7e9b8d1641edf0e612a9917434b98a0ef6"}], "stats": {"total": 125, "additions": 77, "deletions": 48}, "files": [{"sha": "9327a19ea24565958ae6dab7fa93384ce2037df9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9c6fdb4671edffacf155232f55f38cc0e47b2e95", "patch": "@@ -1,3 +1,30 @@\n+2005-09-23  David Edelsohn  <edelsohn@gnu.org>\n+\t    Pete Steinmetz <steinmtz@us.ibm.com>\n+\n+\t* config/rs6000/rs6000.md (neg-minus-mult): Set type to dmul.\n+\t(rldic.): Set type to \"compare\".\n+\t(rldicr.): Same.\n+\t(movsf_hardfloat): Set type to mtjmpr for MTCTR/MTLR.  Set type to\n+\tmfjmpr for MFCTR/MFLR.\n+\t(movdf_hardfloat64): Same.\n+\t(movdf_softfloat64): Same.  Correct order of store and move types.\n+\t(movti_string): Set type to store_ux/load_ux.\n+\t(load_multiple): Set type to load_ux.\n+\t(store_multiple): Set type to store_ux.\n+\t(movmemsi): Set type to store_ux.\n+\t(output_cbranch direct_return): Set type to jmpreg.\n+\t(stmw): Set type to store_ux.\n+\t(lmw): Set type to load_ux.\n+\t* config/rs6000/40x.md (ppc403-store): Increase latency to 2.\n+\t* config/rs6000/440.md (ppc440-store): Increase latency to 6.\n+\t* config/rs6000/603.md (ppc603-store): Occupy LSU for 2 cycles.\n+\t* config/rs6000/6xx.md (ppc604-store): Increase latency to 3.\n+\t* config/rs6000/mpc.md (mpccore-store): Increase latency to 2.\n+\t* config/rs6000/rios1.md (rios1-store): Increase latency to 2.\n+\t(rios1-fpstore): Increase latency to 3.\n+\t* config/rs6000/rios2.md (rios2-store): Increase latency to 2.\n+\t* config/rs6000/rs64.md (rs64a-store): Increase latency to 2.\n+\n 2005-09-23  David Edelsohn  <edelsohn@gnu.org>\n \t    Andrew Pinski  <pinskia@physics.uc.edu>\n "}, {"sha": "94b6c459ae11b3b318792356393cfd3e910a3e5a", "filename": "gcc/config/rs6000/40x.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2Fconfig%2Frs6000%2F40x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2Fconfig%2Frs6000%2F40x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F40x.md?ref=9c6fdb4671edffacf155232f55f38cc0e47b2e95", "patch": "@@ -32,7 +32,7 @@\n        (eq_attr \"cpu\" \"ppc403,ppc405\"))\n   \"iu_40x\")\n \n-(define_insn_reservation \"ppc403-store\" 1\n+(define_insn_reservation \"ppc403-store\" 2\n   (and (eq_attr \"type\" \"store,store_ux,store_u\")\n        (eq_attr \"cpu\" \"ppc403,ppc405\"))\n   \"iu_40x\")"}, {"sha": "60e0f72dc16ceb9196c38ff5f0fdbd2f05fe9cfe", "filename": "gcc/config/rs6000/440.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2Fconfig%2Frs6000%2F440.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2Fconfig%2Frs6000%2F440.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F440.md?ref=9c6fdb4671edffacf155232f55f38cc0e47b2e95", "patch": "@@ -39,7 +39,7 @@\n        (eq_attr \"cpu\" \"ppc440\"))\n   \"ppc440_issue,ppc440_l_pipe\")\n \n-(define_insn_reservation \"ppc440-store\" 1\n+(define_insn_reservation \"ppc440-store\" 3\n   (and (eq_attr \"type\" \"store,store_ux,store_u\")\n        (eq_attr \"cpu\" \"ppc440\"))\n   \"ppc440_issue,ppc440_l_pipe\")"}, {"sha": "4721aca798caadaa69b7c850421b8510de0ef42b", "filename": "gcc/config/rs6000/603.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2Fconfig%2Frs6000%2F603.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2Fconfig%2Frs6000%2F603.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F603.md?ref=9c6fdb4671edffacf155232f55f38cc0e47b2e95", "patch": "@@ -46,7 +46,7 @@\n (define_insn_reservation \"ppc603-store\" 2\n   (and (eq_attr \"type\" \"store,store_ux,store_u,fpstore,fpstore_ux,fpstore_u\")\n        (eq_attr \"cpu\" \"ppc603\"))\n-  \"lsu_603\")\n+  \"lsu_603*2\")\n \n (define_insn_reservation \"ppc603-fpload\" 2\n   (and (eq_attr \"type\" \"fpload,fpload_ux,fpload_u\")"}, {"sha": "31aa6062070f3a01af1a5a01f93d29cc174dd575", "filename": "gcc/config/rs6000/6xx.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2Fconfig%2Frs6000%2F6xx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2Fconfig%2Frs6000%2F6xx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F6xx.md?ref=9c6fdb4671edffacf155232f55f38cc0e47b2e95", "patch": "@@ -58,7 +58,7 @@\n        (eq_attr \"cpu\" \"ppc604,ppc604e,ppc620,ppc630\"))\n   \"lsu_6xx\")\n \n-(define_insn_reservation \"ppc604-store\" 1\n+(define_insn_reservation \"ppc604-store\" 3\n   (and (eq_attr \"type\" \"store,fpstore,store_ux,store_u,fpstore_ux,fpstore_u\")\n        (eq_attr \"cpu\" \"ppc604,ppc604e,ppc620,ppc630\"))\n   \"lsu_6xx\")"}, {"sha": "75e475208d3dac1c633e5dd8075099d8d41f90eb", "filename": "gcc/config/rs6000/mpc.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2Fconfig%2Frs6000%2Fmpc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2Fconfig%2Frs6000%2Fmpc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fmpc.md?ref=9c6fdb4671edffacf155232f55f38cc0e47b2e95", "patch": "@@ -32,7 +32,7 @@\n        (eq_attr \"cpu\" \"mpccore\"))\n   \"lsu_mpc\")\n \n-(define_insn_reservation \"mpccore-store\" 1\n+(define_insn_reservation \"mpccore-store\" 2\n   (and (eq_attr \"type\" \"store,store_ux,store_u,fpstore,fpstore_ux,fpstore_u\")\n        (eq_attr \"cpu\" \"mpccore\"))\n   \"lsu_mpc\")"}, {"sha": "59b34c5f8d774bc87b3f2033b924713bef30906d", "filename": "gcc/config/rs6000/rios1.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2Fconfig%2Frs6000%2Frios1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2Fconfig%2Frs6000%2Frios1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frios1.md?ref=9c6fdb4671edffacf155232f55f38cc0e47b2e95", "patch": "@@ -31,7 +31,7 @@\n        (eq_attr \"cpu\" \"rios1,ppc601\"))\n   \"iu_rios1\")\n \n-(define_insn_reservation \"rios1-store\" 1\n+(define_insn_reservation \"rios1-store\" 2\n   (and (eq_attr \"type\" \"store,store_ux,store_u\")\n        (eq_attr \"cpu\" \"rios1,ppc601\"))\n   \"iu_rios1\")\n@@ -46,7 +46,7 @@\n        (eq_attr \"cpu\" \"ppc601\"))\n   \"iu_rios1\")\n \n-(define_insn_reservation \"rios1-fpstore\" 1\n+(define_insn_reservation \"rios1-fpstore\" 3\n   (and (eq_attr \"type\" \"fpstore,fpstore_ux,fpstore_u\")\n        (eq_attr \"cpu\" \"rios1,ppc601\"))\n   \"iu_rios1+fpu_rios1\")"}, {"sha": "b2f5cb282abb7f400735731fd3c267c303e6cb7f", "filename": "gcc/config/rs6000/rios2.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2Fconfig%2Frs6000%2Frios2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2Fconfig%2Frs6000%2Frios2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frios2.md?ref=9c6fdb4671edffacf155232f55f38cc0e47b2e95", "patch": "@@ -34,7 +34,7 @@\n        (eq_attr \"cpu\" \"rios2\"))\n   \"iu1_rios2|iu2_rios2\")\n \n-(define_insn_reservation \"rios2-store\" 1\n+(define_insn_reservation \"rios2-store\" 2\n   (and (eq_attr \"type\" \"store,store_ux,store_u,fpstore,fpstore_ux,fpstore_u\")\n        (eq_attr \"cpu\" \"rios2\"))\n   \"iu1_rios2|iu2_rios2\")"}, {"sha": "606023ef96aa6758684ecc291ccd6a412359d193", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 41, "deletions": 39, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=9c6fdb4671edffacf155232f55f38cc0e47b2e95", "patch": "@@ -4669,7 +4669,7 @@\n   \"! TARGET_POWERPC && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_FUSED_MADD\n    && ! HONOR_SIGNED_ZEROS (SFmode)\"\n   \"{fnms|fnmsub} %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"fp\")])\n+  [(set_attr \"type\" \"dmul\")])\n \n (define_expand \"sqrtsf2\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"\")\n@@ -6382,7 +6382,7 @@\n   \"@\n    rldic. %4,%1,%H2,%W3\n    #\"\n-  [(set_attr \"type\" \"delayed_compare\")\n+  [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -6416,7 +6416,7 @@\n   \"@\n    rldic. %0,%1,%H2,%W3\n    #\"\n-  [(set_attr \"type\" \"delayed_compare\")\n+  [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -6458,7 +6458,7 @@\n   \"@\n    rldicr. %4,%1,%H2,%S3\n    #\"\n-  [(set_attr \"type\" \"delayed_compare\")\n+  [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -6492,7 +6492,7 @@\n   \"@\n    rldicr. %0,%1,%H2,%S3\n    #\"\n-  [(set_attr \"type\" \"delayed_compare\")\n+  [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"4,8\")])\n \n (define_split\n@@ -6740,7 +6740,7 @@\n    #\n    #\n    #\"\n-  [(set_attr \"type\" \"compare,delayed_compare,delayed_compare,compare,compare,delayed_compare,delayed_compare,compare,compare,compare,compare,compare\")\n+  [(set_attr \"type\" \"compare,compare,compare,compare,compare,compare,compare,compare,compare,compare,compare,compare\")\n    (set_attr \"length\" \"4,4,4,4,4,8,8,8,8,8,8,12\")])\n \n (define_split\n@@ -6791,7 +6791,7 @@\n    #\n    #\n    #\"\n-  [(set_attr \"type\" \"compare,delayed_compare,delayed_compare,compare,compare,delayed_compare,delayed_compare,compare,compare,compare,compare,compare\")\n+  [(set_attr \"type\" \"compare,compare,compare,compare,compare,compare,compare,compare,compare,compare,compare,compare\")\n    (set_attr \"length\" \"4,4,4,4,4,8,8,8,8,8,8,12\")])\n \n (define_split\n@@ -7418,7 +7418,7 @@\n    {cror 0,0,0|nop}\n    #\n    #\"\n-  [(set_attr \"type\" \"*,load,store,fp,fpload,fpstore,*,mtjmpr,*,*,*,*\")\n+  [(set_attr \"type\" \"*,load,store,fp,fpload,fpstore,mtjmpr,*,mfjmpr,*,*,*\")\n    (set_attr \"length\" \"4,4,4,4,4,4,4,4,4,4,4,8\")])\n \n (define_insn \"*movsf_softfloat\"\n@@ -7440,7 +7440,7 @@\n    #\n    #\n    {cror 0,0,0|nop}\"\n-  [(set_attr \"type\" \"*,mtjmpr,*,*,load,store,*,*,*,*,*,*\")\n+  [(set_attr \"type\" \"*,mtjmpr,*,mfjmpr,load,store,*,*,*,*,*,*\")\n    (set_attr \"length\" \"4,4,4,4,4,4,4,4,4,4,8,4\")])\n \n \f\n@@ -7700,7 +7700,7 @@\n    #\n    #\n    #\"\n-  [(set_attr \"type\" \"*,load,store,fp,fpload,fpstore,mtjmpr,*,*,*,*,*\")\n+  [(set_attr \"type\" \"store,load,*,fp,fpload,fpstore,mtjmpr,mfjmpr,*,*,*,*\")\n    (set_attr \"length\" \"4,4,4,4,4,4,4,4,4,8,12,16\")])\n \n (define_insn \"*movdf_softfloat64\"\n@@ -7719,7 +7719,7 @@\n    #\n    #\n    {cror 0,0,0|nop}\"\n-  [(set_attr \"type\" \"load,store,*,*,*,*,*,*,*\")\n+  [(set_attr \"type\" \"load,store,*,mtjmpr,mfjmpr,*,*,*,*\")\n    (set_attr \"length\" \"4,4,4,4,4,8,12,16,4\")])\n \f\n (define_expand \"movtf\"\n@@ -8153,7 +8153,7 @@\n       return \\\"#\\\";\n     }\n }\"\n-  [(set_attr \"type\" \"store,store,*,load,load,*\")])\n+  [(set_attr \"type\" \"store_ux,store_ux,*,load_ux,load_ux,*\")])\n \n (define_insn \"*movti_ppc64\"\n   [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=r,o<>,r\")\n@@ -8254,7 +8254,7 @@\n   \"TARGET_STRING && XVECLEN (operands[0], 0) == 8\"\n   \"*\n { return rs6000_output_load_multiple (operands); }\"\n-  [(set_attr \"type\" \"load\")\n+  [(set_attr \"type\" \"load_ux\")\n    (set_attr \"length\" \"32\")])\n \n (define_insn \"*ldmsi7\"\n@@ -8276,7 +8276,7 @@\n   \"TARGET_STRING && XVECLEN (operands[0], 0) == 7\"\n   \"*\n { return rs6000_output_load_multiple (operands); }\"\n-  [(set_attr \"type\" \"load\")\n+  [(set_attr \"type\" \"load_ux\")\n    (set_attr \"length\" \"32\")])\n \n (define_insn \"*ldmsi6\"\n@@ -8296,7 +8296,7 @@\n   \"TARGET_STRING && XVECLEN (operands[0], 0) == 6\"\n   \"*\n { return rs6000_output_load_multiple (operands); }\"\n-  [(set_attr \"type\" \"load\")\n+  [(set_attr \"type\" \"load_ux\")\n    (set_attr \"length\" \"32\")])\n \n (define_insn \"*ldmsi5\"\n@@ -8314,7 +8314,7 @@\n   \"TARGET_STRING && XVECLEN (operands[0], 0) == 5\"\n   \"*\n { return rs6000_output_load_multiple (operands); }\"\n-  [(set_attr \"type\" \"load\")\n+  [(set_attr \"type\" \"load_ux\")\n    (set_attr \"length\" \"32\")])\n \n (define_insn \"*ldmsi4\"\n@@ -8330,7 +8330,7 @@\n   \"TARGET_STRING && XVECLEN (operands[0], 0) == 4\"\n   \"*\n { return rs6000_output_load_multiple (operands); }\"\n-  [(set_attr \"type\" \"load\")\n+  [(set_attr \"type\" \"load_ux\")\n    (set_attr \"length\" \"32\")])\n \n (define_insn \"*ldmsi3\"\n@@ -8344,7 +8344,7 @@\n   \"TARGET_STRING && XVECLEN (operands[0], 0) == 3\"\n   \"*\n { return rs6000_output_load_multiple (operands); }\"\n-  [(set_attr \"type\" \"load\")\n+  [(set_attr \"type\" \"load_ux\")\n    (set_attr \"length\" \"32\")])\n \n (define_expand \"store_multiple\"\n@@ -8421,7 +8421,7 @@\n \t  (match_operand:SI 10 \"gpc_reg_operand\" \"r\"))])]\n   \"TARGET_STRING && !TARGET_POWER && XVECLEN (operands[0], 0) == 9\"\n   \"{stsi|stswi} %2,%1,%O0\"\n-  [(set_attr \"type\" \"store\")])\n+  [(set_attr \"type\" \"store_ux\")])\n \n (define_insn \"*stmsi7\"\n   [(match_parallel 0 \"store_multiple_operation\"\n@@ -8442,7 +8442,7 @@\n \t  (match_operand:SI 9 \"gpc_reg_operand\" \"r\"))])]\n   \"TARGET_STRING && !TARGET_POWER && XVECLEN (operands[0], 0) == 8\"\n   \"{stsi|stswi} %2,%1,%O0\"\n-  [(set_attr \"type\" \"store\")])\n+  [(set_attr \"type\" \"store_ux\")])\n \n (define_insn \"*stmsi6\"\n   [(match_parallel 0 \"store_multiple_operation\"\n@@ -8461,7 +8461,7 @@\n \t  (match_operand:SI 8 \"gpc_reg_operand\" \"r\"))])]\n   \"TARGET_STRING && !TARGET_POWER && XVECLEN (operands[0], 0) == 7\"\n   \"{stsi|stswi} %2,%1,%O0\"\n-  [(set_attr \"type\" \"store\")])\n+  [(set_attr \"type\" \"store_ux\")])\n \n (define_insn \"*stmsi5\"\n   [(match_parallel 0 \"store_multiple_operation\"\n@@ -8478,7 +8478,7 @@\n \t  (match_operand:SI 7 \"gpc_reg_operand\" \"r\"))])]\n   \"TARGET_STRING && !TARGET_POWER && XVECLEN (operands[0], 0) == 6\"\n   \"{stsi|stswi} %2,%1,%O0\"\n-  [(set_attr \"type\" \"store\")])\n+  [(set_attr \"type\" \"store_ux\")])\n \n (define_insn \"*stmsi4\"\n   [(match_parallel 0 \"store_multiple_operation\"\n@@ -8493,7 +8493,7 @@\n \t  (match_operand:SI 6 \"gpc_reg_operand\" \"r\"))])]\n   \"TARGET_STRING && !TARGET_POWER && XVECLEN (operands[0], 0) == 5\"\n   \"{stsi|stswi} %2,%1,%O0\"\n-  [(set_attr \"type\" \"store\")])\n+  [(set_attr \"type\" \"store_ux\")])\n \n (define_insn \"*stmsi3\"\n   [(match_parallel 0 \"store_multiple_operation\"\n@@ -8506,7 +8506,7 @@\n \t  (match_operand:SI 5 \"gpc_reg_operand\" \"r\"))])]\n   \"TARGET_STRING && !TARGET_POWER && XVECLEN (operands[0], 0) == 4\"\n   \"{stsi|stswi} %2,%1,%O0\"\n-  [(set_attr \"type\" \"store\")])\n+  [(set_attr \"type\" \"store_ux\")])\n \f\n (define_expand \"setmemsi\"\n   [(parallel [(set (match_operand:BLK 0 \"\" \"\")\n@@ -8587,7 +8587,7 @@\n    && (REGNO (operands[1]) < 5 || REGNO (operands[1]) > 12)\n    && REGNO (operands[4]) == 5\"\n   \"{lsi|lswi} %4,%1,%2\\;{stsi|stswi} %4,%0,%2\"\n-  [(set_attr \"type\" \"load\")\n+  [(set_attr \"type\" \"store_ux\")\n    (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n@@ -8611,7 +8611,7 @@\n    && (REGNO (operands[1]) < 5 || REGNO (operands[1]) > 12)\n    && REGNO (operands[4]) == 5\"\n   \"{lsi|lswi} %4,%1,%2\\;{stsi|stswi} %4,%0,%2\"\n-  [(set_attr \"type\" \"load\")\n+  [(set_attr \"type\" \"store_ux\")\n    (set_attr \"length\" \"8\")])\n \n ;; Move up to 24 bytes at a time.  The fixed registers are needed because the\n@@ -8650,7 +8650,7 @@\n    && (REGNO (operands[1]) < 5 || REGNO (operands[1]) > 10)\n    && REGNO (operands[4]) == 5\"\n   \"{lsi|lswi} %4,%1,%2\\;{stsi|stswi} %4,%0,%2\"\n-  [(set_attr \"type\" \"load\")\n+  [(set_attr \"type\" \"store_ux\")\n    (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n@@ -8671,7 +8671,7 @@\n    && (REGNO (operands[1]) < 5 || REGNO (operands[1]) > 10)\n    && REGNO (operands[4]) == 5\"\n   \"{lsi|lswi} %4,%1,%2\\;{stsi|stswi} %4,%0,%2\"\n-  [(set_attr \"type\" \"load\")\n+  [(set_attr \"type\" \"store_ux\")\n    (set_attr \"length\" \"8\")])\n \n ;; Move up to 16 bytes at a time, using 4 fixed registers to avoid spill\n@@ -8706,7 +8706,7 @@\n    && (REGNO (operands[1]) < 5 || REGNO (operands[1]) > 8)\n    && REGNO (operands[4]) == 5\"\n   \"{lsi|lswi} %4,%1,%2\\;{stsi|stswi} %4,%0,%2\"\n-  [(set_attr \"type\" \"load\")\n+  [(set_attr \"type\" \"store_ux\")\n    (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n@@ -8725,7 +8725,7 @@\n    && (REGNO (operands[1]) < 5 || REGNO (operands[1]) > 8)\n    && REGNO (operands[4]) == 5\"\n   \"{lsi|lswi} %4,%1,%2\\;{stsi|stswi} %4,%0,%2\"\n-  [(set_attr \"type\" \"load\")\n+  [(set_attr \"type\" \"store_ux\")\n    (set_attr \"length\" \"8\")])\n \n ;; Move up to 8 bytes at a time.\n@@ -8749,7 +8749,7 @@\n   \"TARGET_STRING && TARGET_POWER && ! TARGET_POWERPC64\n    && INTVAL (operands[2]) > 4 && INTVAL (operands[2]) <= 8\"\n   \"{lsi|lswi} %4,%1,%2\\;{stsi|stswi} %4,%0,%2\"\n-  [(set_attr \"type\" \"load\")\n+  [(set_attr \"type\" \"store_ux\")\n    (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n@@ -8762,7 +8762,7 @@\n   \"TARGET_STRING && ! TARGET_POWER && ! TARGET_POWERPC64\n    && INTVAL (operands[2]) > 4 && INTVAL (operands[2]) <= 8\"\n   \"{lsi|lswi} %4,%1,%2\\;{stsi|stswi} %4,%0,%2\"\n-  [(set_attr \"type\" \"load\")\n+  [(set_attr \"type\" \"store_ux\")\n    (set_attr \"length\" \"8\")])\n \n ;; Move up to 4 bytes at a time.\n@@ -8786,7 +8786,7 @@\n   \"TARGET_STRING && TARGET_POWER\n    && INTVAL (operands[2]) > 0 && INTVAL (operands[2]) <= 4\"\n   \"{lsi|lswi} %4,%1,%2\\;{stsi|stswi} %4,%0,%2\"\n-  [(set_attr \"type\" \"load\")\n+  [(set_attr \"type\" \"store_ux\")\n    (set_attr \"length\" \"8\")])\n \n (define_insn \"\"\n@@ -8799,7 +8799,7 @@\n   \"TARGET_STRING && ! TARGET_POWER\n    && INTVAL (operands[2]) > 0 && INTVAL (operands[2]) <= 4\"\n   \"{lsi|lswi} %4,%1,%2\\;{stsi|stswi} %4,%0,%2\"\n-  [(set_attr \"type\" \"load\")\n+  [(set_attr \"type\" \"store_ux\")\n    (set_attr \"length\" \"8\")])\n \f\n ;; Define insns that do load or store with update.  Some of these we can\n@@ -12825,7 +12825,7 @@\n {\n   return output_cbranch (operands[0], NULL, 0, insn);\n }\"\n-  [(set_attr \"type\" \"branch\")\n+  [(set_attr \"type\" \"jmpreg\")\n    (set_attr \"length\" \"4\")])\n \n (define_insn \"\"\n@@ -12856,7 +12856,7 @@\n {\n   return output_cbranch (operands[0], NULL, 1, insn);\n }\"\n-  [(set_attr \"type\" \"branch\")\n+  [(set_attr \"type\" \"jmpreg\")\n    (set_attr \"length\" \"4\")])\n \n ;; Logic on condition register values.\n@@ -13327,7 +13327,8 @@\n \t\t   [(set (match_operand:SI 1 \"memory_operand\" \"=m\")\n        \t\t\t (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))])]\n   \"TARGET_MULTIPLE\"\n-  \"{stm|stmw} %2,%1\")\n+  \"{stm|stmw} %2,%1\"\n+  [(set_attr \"type\" \"store_ux\")])\n \n (define_insn \"*save_fpregs_<mode>\"\n   [(match_parallel 0 \"any_parallel_operand\"\n@@ -13402,14 +13403,15 @@\n \n ; The load-multiple instructions have similar properties.\n ; Note that \"load_multiple\" is a name known to the machine-independent\n-; code that actually corresponds to the powerpc load-string.\n+; code that actually corresponds to the PowerPC load-string.\n \n (define_insn \"*lmw\"\n   [(match_parallel 0 \"lmw_operation\"\n \t\t   [(set (match_operand:SI 1 \"gpc_reg_operand\" \"=r\")\n        \t\t\t (match_operand:SI 2 \"memory_operand\" \"m\"))])]\n   \"TARGET_MULTIPLE\"\n-  \"{lm|lmw} %1,%2\")\n+  \"{lm|lmw} %1,%2\"\n+  [(set_attr \"type\" \"load_ux\")])\n \n (define_insn \"*return_internal_<mode>\"\n   [(return)"}, {"sha": "71ec61de59bea08f3d1f11cc94198d5060ed718d", "filename": "gcc/config/rs6000/rs64.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2Fconfig%2Frs6000%2Frs64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c6fdb4671edffacf155232f55f38cc0e47b2e95/gcc%2Fconfig%2Frs6000%2Frs64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs64.md?ref=9c6fdb4671edffacf155232f55f38cc0e47b2e95", "patch": "@@ -31,7 +31,7 @@\n        (eq_attr \"cpu\" \"rs64a\"))\n   \"lsu_rs64\")\n \n-(define_insn_reservation \"rs64a-store\" 1\n+(define_insn_reservation \"rs64a-store\" 2\n   (and (eq_attr \"type\" \"store,store_ux,store_u,fpstore,fpstore_ux,fpstore_u\")\n        (eq_attr \"cpu\" \"rs64a\"))\n   \"lsu_rs64\")"}]}