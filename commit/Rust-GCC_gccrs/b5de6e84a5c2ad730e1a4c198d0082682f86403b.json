{"sha": "b5de6e84a5c2ad730e1a4c198d0082682f86403b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVkZTZlODRhNWMyYWQ3MzBlMWE0YzE5OGQwMDgyNjgyZjg2NDAzYg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2017-03-24T13:57:58Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2017-03-24T13:57:58Z"}, "message": "S/390: Move and rename vector check.\n\nMove the target support routine for the vector facility to the common\ncode file.  This is required to enable the generic vectorization tests\non S/390.  While doing this the too generic name for the check (vector)\nis changed to s390_vx.  The renaming required to modify all the\ntestcases currently using that check.\n\ngcc/testsuite/ChangeLog:\n\n2017-03-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* gcc.target/s390/s390.exp (check_effective_target_vector):\n\tInclude target-supports.exp and move target_vector check routine\n\t...\n\t* lib/target-supports.exp (check_effective_target_s390_vx): ... to\n\there and rename it.\n\t* gcc.target/s390/htm-builtins-z13-1.c: Rename effective target\n\tcheck from vector to s390_vx.\n\t* gcc.target/s390/target-attribute/tpragma-struct-vx-1.c: Likewise.\n\t* gcc.target/s390/target-attribute/tpragma-struct-vx-2.c: Likewise.\n\t* gcc.target/s390/vector/stpcpy-1.c: Likewise.\n\t* gcc.target/s390/vector/vec-abi-vararg-1.c: Likewise.\n\t* gcc.target/s390/vector/vec-clobber-1.c: Likewise.\n\t* gcc.target/s390/vector/vec-genbytemask-1.c: Likewise.\n\t* gcc.target/s390/vector/vec-genmask-1.c: Likewise.\n\t* gcc.target/s390/vector/vec-nopeel-1.c: Likewise.\n\t* gcc.target/s390/vector/vec-vrepi-1.c: Likewise.\n\nFrom-SVN: r246449", "tree": {"sha": "86a36ddb3c5492310472e4afcd763788233ecad2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86a36ddb3c5492310472e4afcd763788233ecad2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5de6e84a5c2ad730e1a4c198d0082682f86403b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5de6e84a5c2ad730e1a4c198d0082682f86403b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5de6e84a5c2ad730e1a4c198d0082682f86403b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5de6e84a5c2ad730e1a4c198d0082682f86403b/comments", "author": null, "committer": null, "parents": [{"sha": "590961cff2aefdba30048ac5edd228f19114e72c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/590961cff2aefdba30048ac5edd228f19114e72c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/590961cff2aefdba30048ac5edd228f19114e72c"}], "stats": {"total": 73, "additions": 48, "deletions": 25}, "files": [{"sha": "6cfa9f63313fd25c15d9afad27bdcd6d48c8087c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b5de6e84a5c2ad730e1a4c198d0082682f86403b", "patch": "@@ -1,3 +1,22 @@\n+2017-03-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* gcc.target/s390/s390.exp (check_effective_target_vector):\n+\tInclude target-supports.exp and move target_vector check routine\n+\t...\n+\t* lib/target-supports.exp (check_effective_target_s390_vx): ... to\n+\there and rename it.\n+\t* gcc.target/s390/htm-builtins-z13-1.c: Rename effective target\n+\tcheck from vector to s390_vx.\n+\t* gcc.target/s390/target-attribute/tpragma-struct-vx-1.c: Likewise.\n+\t* gcc.target/s390/target-attribute/tpragma-struct-vx-2.c: Likewise.\n+\t* gcc.target/s390/vector/stpcpy-1.c: Likewise.\n+\t* gcc.target/s390/vector/vec-abi-vararg-1.c: Likewise.\n+\t* gcc.target/s390/vector/vec-clobber-1.c: Likewise.\n+\t* gcc.target/s390/vector/vec-genbytemask-1.c: Likewise.\n+\t* gcc.target/s390/vector/vec-genmask-1.c: Likewise.\n+\t* gcc.target/s390/vector/vec-nopeel-1.c: Likewise.\n+\t* gcc.target/s390/vector/vec-vrepi-1.c: Likewise.\n+\n 2017-03-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* gcc.target/s390/vector/vec-init-2.c: New test."}, {"sha": "aaca1f47518f5d050c979c9ed57240d409791160", "filename": "gcc/testsuite/gcc.target/s390/htm-builtins-z13-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fhtm-builtins-z13-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fhtm-builtins-z13-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fhtm-builtins-z13-1.c?ref=b5de6e84a5c2ad730e1a4c198d0082682f86403b", "patch": "@@ -1,7 +1,7 @@\n /* Verify if VRs are saved and restored.  */\n \n /* { dg-do run } */\n-/* { dg-require-effective-target vector } */\n+/* { dg-require-effective-target s390_vx } */\n /* { dg-options \"-O3 -march=z13 -mzarch\" } */\n \n typedef int __attribute__((vector_size(16))) v4si;"}, {"sha": "d7a61f4f510b982e45adeec1641fdaccf9366f3f", "filename": "gcc/testsuite/gcc.target/s390/s390.exp", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp?ref=b5de6e84a5c2ad730e1a4c198d0082682f86403b", "patch": "@@ -26,6 +26,7 @@ if ![istarget s390*-*-*] then {\n \n # Load support procs.\n load_lib gcc-dg.exp\n+load_lib target-supports.exp\n \n # Return 1 if the the assembler understands .machine and .machinemode.  The\n # target attribute needs that feature to work.\n@@ -55,21 +56,6 @@ proc check_effective_target_htm { } {\n     }] \"-march=zEC12 -mzarch\" ] } { return 0 } else { return 1 }\n }\n \n-# Return 1 if vector (va - vector add) instructions are understood by\n-# the assembler and can be executed.  This also covers checking for\n-# the VX kernel feature.  A kernel without that feature does not\n-# enable the vector facility and the following check will die with a\n-# signal.\n-proc check_effective_target_vector { } {\n-    if { ![check_runtime s390_check_vector [subst {\n-\tint main (void)\n-\t{\n-\t    asm (\"va %%v24, %%v26, %%v28, 3\" : : : \"v24\", \"v26\", \"v28\");\n-\t    return 0;\n-\t}\n-    }] \"-march=z13 -mzarch\" ] } { return 0 } else { return 1 }\n-}\n-\n global s390_cached_flags\n set s390_cached_flags \"\"\n global s390_cached_value"}, {"sha": "a0f4d1c3f47fbc0858b3c94b36d4bf91fa233767", "filename": "gcc/testsuite/gcc.target/s390/target-attribute/tpragma-struct-vx-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Ftarget-attribute%2Ftpragma-struct-vx-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Ftarget-attribute%2Ftpragma-struct-vx-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Ftarget-attribute%2Ftpragma-struct-vx-1.c?ref=b5de6e84a5c2ad730e1a4c198d0082682f86403b", "patch": "@@ -2,7 +2,7 @@\n \n /* { dg-do run } */\n /* { dg-require-effective-target target_attribute } */\n-/* { dg-require-effective-target vector } */\n+/* { dg-require-effective-target s390_vx } */\n /* { dg-options \"-march=z900 -mno-vx -mzarch\" } */\n \n #define V16 __attribute__ ((vector_size(16)))"}, {"sha": "652b122aefddf4139a264b6305e21cd805fbf706", "filename": "gcc/testsuite/gcc.target/s390/target-attribute/tpragma-struct-vx-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Ftarget-attribute%2Ftpragma-struct-vx-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Ftarget-attribute%2Ftpragma-struct-vx-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Ftarget-attribute%2Ftpragma-struct-vx-2.c?ref=b5de6e84a5c2ad730e1a4c198d0082682f86403b", "patch": "@@ -2,7 +2,7 @@\n \n /* { dg-do run } */\n /* { dg-require-effective-target target_attribute } */\n-/* { dg-require-effective-target vector } */\n+/* { dg-require-effective-target s390_vx } */\n /* { dg-options \"-march=z13 -mvx -mzarch\" } */\n \n #define V16 __attribute__ ((vector_size(16)))"}, {"sha": "aed20e5b4019efc7b866e9dd4c862a60e74185eb", "filename": "gcc/testsuite/gcc.target/s390/vector/stpcpy-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fstpcpy-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fstpcpy-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fstpcpy-1.c?ref=b5de6e84a5c2ad730e1a4c198d0082682f86403b", "patch": "@@ -4,7 +4,7 @@\n    strings.  */\n \n /* { dg-do run } */\n-/* { dg-require-effective-target vector } */\n+/* { dg-require-effective-target s390_vx } */\n /* { dg-options \"-O3 -mzarch -march=z13\" } */\n \n #include <stdio.h>"}, {"sha": "9d4d5bda8eab6173448891b0c06cbe0b66fdafe9", "filename": "gcc/testsuite/gcc.target/s390/vector/vec-abi-vararg-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-abi-vararg-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-abi-vararg-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-abi-vararg-1.c?ref=b5de6e84a5c2ad730e1a4c198d0082682f86403b", "patch": "@@ -2,7 +2,7 @@\n    ABI.  */\n \n /* { dg-do run { target { s390*-*-* } } } */\n-/* { dg-require-effective-target vector } */\n+/* { dg-require-effective-target s390_vx } */\n /* { dg-options \"-O3 -mzarch -march=z13 --save-temps\" } */\n \n /* Make sure arguments are fetched from the argument overflow area.  */"}, {"sha": "c55cc68390e5b36e5338880ccdbe3e4ccee82514", "filename": "gcc/testsuite/gcc.target/s390/vector/vec-clobber-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-clobber-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-clobber-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-clobber-1.c?ref=b5de6e84a5c2ad730e1a4c198d0082682f86403b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run { target { s390*-*-* } } } */\n-/* { dg-require-effective-target vector } */\n+/* { dg-require-effective-target s390_vx } */\n /* { dg-options \"-O3 -mzarch -march=z13\" } */\n \n /* For FP zero checks we use the ltdbr instruction.  Since this is an"}, {"sha": "30ef05eb3f77f34fcf6dd56ae4c5225c10dc3d64", "filename": "gcc/testsuite/gcc.target/s390/vector/vec-genbytemask-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-genbytemask-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-genbytemask-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-genbytemask-1.c?ref=b5de6e84a5c2ad730e1a4c198d0082682f86403b", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O3 -mzarch -march=z13 --save-temps\" } */\n-/* { dg-require-effective-target vector } */\n+/* { dg-require-effective-target s390_vx } */\n /* { dg-require-effective-target int128 } */\n \n typedef unsigned char     uv16qi __attribute__((vector_size(16)));"}, {"sha": "f3030877ca5d370db0c083e3f2662eadab70bdb9", "filename": "gcc/testsuite/gcc.target/s390/vector/vec-genmask-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-genmask-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-genmask-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-genmask-1.c?ref=b5de6e84a5c2ad730e1a4c198d0082682f86403b", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O3 -mzarch -march=z13 --save-temps\" } */\n-/* { dg-require-effective-target vector } */\n+/* { dg-require-effective-target s390_vx } */\n \n typedef unsigned char     uv16qi __attribute__((vector_size(16)));\n typedef unsigned short     uv8hi __attribute__((vector_size(16)));"}, {"sha": "6c9a2e18b56905930d8ba078d155676255d5ed73", "filename": "gcc/testsuite/gcc.target/s390/vector/vec-nopeel-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-nopeel-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-nopeel-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-nopeel-1.c?ref=b5de6e84a5c2ad730e1a4c198d0082682f86403b", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3 -mzarch -march=z13\" } */\n-/* { dg-require-effective-target vector } */\n+/* { dg-require-effective-target s390_vx } */\n \n int\n foo (int * restrict a, int n)"}, {"sha": "bfb9974342f90f7c0b9762abcc3dd065bcfad841", "filename": "gcc/testsuite/gcc.target/s390/vector/vec-vrepi-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-vrepi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-vrepi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-vrepi-1.c?ref=b5de6e84a5c2ad730e1a4c198d0082682f86403b", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O3 -mzarch -march=z13 --save-temps\" } */\n-/* { dg-require-effective-target vector } */\n+/* { dg-require-effective-target s390_vx } */\n \n typedef unsigned char     uv16qi __attribute__((vector_size(16)));\n typedef unsigned short     uv8hi __attribute__((vector_size(16)));"}, {"sha": "290c527be095062fb980eb0288ae6d5c77486ed5", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5de6e84a5c2ad730e1a4c198d0082682f86403b/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=b5de6e84a5c2ad730e1a4c198d0082682f86403b", "patch": "@@ -8209,6 +8209,24 @@ proc check_effective_target_profile_update_atomic {} {\n     } \"-fprofile-update=atomic -fprofile-generate\"]\n }\n \n+# Return 1 if vector (va - vector add) instructions are understood by\n+# the assembler and can be executed.  This also covers checking for\n+# the VX kernel feature.  A kernel without that feature does not\n+# enable the vector facility and the following check will die with a\n+# signal.\n+proc check_effective_target_s390_vx { } {\n+    if ![istarget s390*-*-*] then {\n+\treturn 0;\n+    }\n+\n+    return [check_runtime s390_check_vx {\n+\tint main (void)\n+\t{\n+\t    asm (\"va %%v24, %%v26, %%v28, 3\" : : : \"v24\", \"v26\", \"v28\");\n+\t    return 0;\n+\t}\n+    } \"-march=z13 -mzarch\" ]\n+}\n #For versions of ARM architectures that have hardware div insn,\n #disable the divmod transform\n "}]}