{"sha": "8414dad54a8a5eed710f894bde5721631fd3f748", "node_id": "C_kwDOANBUbNoAKDg0MTRkYWQ1NGE4YTVlZWQ3MTBmODk0YmRlNTcyMTYzMWZkM2Y3NDg", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-05-16T13:44:41Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-05-16T13:53:16Z"}, "message": "libstdc++: Update C++23 status docs\n\nThese are the C++23 proposals supported in the gcc-12 branch.\n\nlibstdc++-v3/ChangeLog:\n\n\t* doc/xml/manual/status_cxx2023.xml: Update with gcc-12 support.\n\t* doc/html/*: Regenerate.", "tree": {"sha": "e2679f778c6c5d1e55885288fd81611df71c50be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2679f778c6c5d1e55885288fd81611df71c50be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8414dad54a8a5eed710f894bde5721631fd3f748", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8414dad54a8a5eed710f894bde5721631fd3f748", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8414dad54a8a5eed710f894bde5721631fd3f748", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8414dad54a8a5eed710f894bde5721631fd3f748/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "436186734481c38ccbd22becbd5aedb274bf5fa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/436186734481c38ccbd22becbd5aedb274bf5fa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/436186734481c38ccbd22becbd5aedb274bf5fa7"}], "stats": {"total": 473, "additions": 468, "deletions": 5}, "files": [{"sha": "8706d54b07a31772c5ca1f8ec8f77bf13df076b1", "filename": "libstdc++-v3/doc/html/manual/status.html", "status": "modified", "additions": 127, "deletions": 5, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8414dad54a8a5eed710f894bde5721631fd3f748/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8414dad54a8a5eed710f894bde5721631fd3f748/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html?ref=8414dad54a8a5eed710f894bde5721631fd3f748", "patch": "@@ -1757,7 +1757,31 @@\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2251r1.pdf\" target=\"_top\">\n         P2251R1\n         </a>\n-      </td><td align=\"center\"> Yes </td><td align=\"left\">\u00a0</td></tr><tr><td colspan=\"4\" align=\"left\">\n+      </td><td align=\"center\"> Yes </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> Repairing input range adaptors and counted_iterator </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2259r1.html\" target=\"_top\">\n+        P2259R1\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> Superior String Splitting </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2210r2.html\" target=\"_top\">\n+        P2210R2\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> What is a <code class=\"code\">view</code>? </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2415r2.html\" target=\"_top\">\n+        P2415R2\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_ranges &gt;= 202110L</code> </td></tr><tr><td align=\"left\"> Fix istream_view </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2432r1.pdf\" target=\"_top\">\n+        P2432R1\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> <code class=\"code\">starts_with</code> and <code class=\"code\">ends_with</code> </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p1659r3.html\" target=\"_top\">\n+        P1659R3\n+        </a>\n+      </td><td align=\"center\"> </td><td align=\"left\"> <code class=\"code\">__cpp_lib_ranges_starts_ends_with &gt;= 202106L</code> </td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> <code class=\"code\">zip</code> </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2321r2.html\" target=\"_top\">\n+        P2321R2\n+        </a>\n+      </td><td align=\"center\"> </td><td align=\"left\"> <code class=\"code\">__cpp_lib_ranges_zip &gt;= 202110L</code> </td></tr><tr><td colspan=\"4\" align=\"left\">\n         <span class=\"bold\"><strong>Compile-time programming</strong></span>\n       </td></tr><tr><td align=\"left\"> A proposal for a type trait to detect scoped enumerations </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p1048r1.pdf\" target=\"_top\">\n@@ -1767,13 +1791,67 @@\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p1682r3.html\" target=\"_top\">\n         P1682R3\n         </a>\n-      </td><td align=\"center\"> 11.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_to_underlying &gt;= 202102L</code> </td></tr><tr><td colspan=\"4\" align=\"left\">\n+      </td><td align=\"center\"> 11.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_to_underlying &gt;= 202102L</code> </td></tr><tr><td align=\"left\"> Missing constexpr in std::optional and std::variant </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2231r1.html\" target=\"_top\">\n+        P2231R1\n+        </a>\n+      </td><td align=\"center\">\n+\t<div class=\"informaltable\"><table class=\"informaltable\" border=\"0\"><colgroup><col /></colgroup><tbody><tr><td> 11.3 (<code class=\"code\">optional</code>) </td></tr><tr><td> 12.1 (<code class=\"code\">variant</code>) </td></tr></tbody></table></div>\n+      </td><td align=\"left\">\n+\t<div class=\"informaltable\"><table class=\"informaltable\" border=\"0\"><colgroup><col /></colgroup><tbody><tr><td> <code class=\"code\">__cpp_lib_constexpr_optional &gt;= 202106L</code> </td></tr><tr><td> <code class=\"code\">__cpp_lib_variant &gt;= 202106L</code> </td></tr></tbody></table></div>\n+      </td></tr><tr><td align=\"left\"> Making <code class=\"code\">std::unique_ptr</code> constexpr </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2273r3.pdf\" target=\"_top\">\n+        P2273R3\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_constexpr_memory &gt;= 202202L</code> </td></tr><tr><td align=\"left\"> Making <code class=\"code\">std::type_info::operator==</code> constexpr </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p1328r1.html\" target=\"_top\">\n+        P1328R1\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_constexpr_typeinfo &gt;= 202106L</code> </td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> constexpr for <code class=\"code\">&lt;cmath&gt;</code> and <code class=\"code\">&lt;cstdlib&gt;</code> </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p0533r9.pdf\" target=\"_top\">\n+        P0533R9\n+        </a>\n+      </td><td align=\"center\"> </td><td align=\"left\"> <code class=\"code\">__cpp_lib_constexpr_cmath &gt;= 202202L</code> </td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Deprecate std::aligned_storage and std::aligned_union </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p1413r3.pdf\" target=\"_top\">\n+        P1413R3\n+        </a>\n+      </td><td align=\"center\"> </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> A type trait to detect reference binding to temporary </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2255r2.html\" target=\"_top\">\n+        P2255R2\n+        </a>\n+      </td><td align=\"center\"> </td><td align=\"left\"> <code class=\"code\">__cpp_lib_reference_from_temporary &gt;= 202202L</code> </td></tr><tr><td colspan=\"4\" align=\"left\">\n         <span class=\"bold\"><strong>Strings and text</strong></span>\n       </td></tr><tr><td align=\"left\"> string contains function </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p1679r3.html\" target=\"_top\">\n         P1679R3\n         </a>\n-      </td><td align=\"center\"> 11.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_string_contains &gt;= 202011L</code> </td></tr><tr><td colspan=\"4\" align=\"left\">\n+      </td><td align=\"center\"> 11.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_string_contains &gt;= 202011L</code> </td></tr><tr><td align=\"left\"> Prohibit std::basic_string and std::basic_string_view construction from nullptr </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2166r1.html\" target=\"_top\">\n+        P2166R1\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> basic_string::resize_and_overwrite </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p1072r10.html\" target=\"_top\">\n+        P1072R10\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_resize_and_overwrite &gt;= 202110L</code> </td></tr><tr><td align=\"left\"> A strstream replacement using span&lt;charT&gt; as buffer </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p0448r4.pdf\" target=\"_top\">\n+        P0448R4\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_spanstream &gt;= 202106L</code> </td></tr><tr><td colspan=\"4\" align=\"left\">\n+        <span class=\"bold\"><strong>Containers</strong></span>\n+      </td></tr><tr><td align=\"left\"> Iterator pair constructors for stack and queue </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p1425r4.pdf\" target=\"_top\">\n+        P1425R4\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_adaptor_iterator_pair_constructor &gt;= 202106L</code> </td></tr><tr><td align=\"left\"> Stop overconstraining allocators in container deduction guides </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p1518r2.html\" target=\"_top\">\n+        P1518R2\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Heterogeneous erasure overloads for associative containers </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2077r3.html\" target=\"_top\">\n+        P2077R3\n+        </a>\n+      </td><td align=\"center\"> </td><td align=\"left\"> <code class=\"code\">__cpp_lib_associative_heterogeneous_erasure &gt;= 202110L</code> </td></tr><tr><td colspan=\"4\" align=\"left\">\n         <span class=\"bold\"><strong>Miscellaneous</strong></span>\n       </td></tr><tr><td align=\"left\"> Inheriting from <code class=\"code\">std::variant</code> </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2162r2.html\" target=\"_top\">\n@@ -1783,15 +1861,59 @@\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p1147r1.html\" target=\"_top\">\n         P1147R1\n         </a>\n-      </td><td align=\"center\"> 11.3 </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> Clarifying the status of the \"C headers\" </td><td align=\"left\">\n+      </td><td align=\"center\"> 11.3 </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> A Proposal to add stacktrace library </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p0881r7.html\" target=\"_top\">\n+        P0881R7\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_stacktrace &gt;= 202011L</code> </td></tr><tr><td align=\"left\"> Add a pmr alias for std::stacktrace </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2301r1.html\" target=\"_top\">\n+        P2301R1\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> <code class=\"code\">std::expected</code> </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p0323r12.html\" target=\"_top\">\n+        P0323R12\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_expected &gt;= 202202L</code> </td></tr><tr><td align=\"left\"> Monadic operations for std::optional </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p0798r8.html\" target=\"_top\">\n+        P0798R8\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_optional &gt;= 202110L</code> </td></tr><tr><td align=\"left\"> <code class=\"code\">move_only_function</code> </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p0288r9.html\" target=\"_top\">\n+        P0288R9\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_move_only_function &gt;= 202110L</code> </td></tr><tr><td align=\"left\"> <code class=\"code\">invoke_r</code> </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2136r3.html\" target=\"_top\">\n+        P2136R3\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_invoke_r &gt;= 202106L</code> </td></tr><tr><td align=\"left\"> Byteswapping for fun&amp;&amp;nuf </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p1272r4.html\" target=\"_top\">\n+        P1272R4\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_byteswap &gt;= 202110L</code> </td></tr><tr><td align=\"left\"> Function to mark unreachable code </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p0627r6.pdf\" target=\"_top\">\n+        P0627R6\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_unreachable &gt;= 202202L</code> </td></tr><tr><td align=\"left\"> Add a conditional noexcept specification to std::exchange </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2401r0.html\" target=\"_top\">\n+        P2401R0\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> Support C atomics in C++ </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p0943r6.html\" target=\"_top\">\n+        P0943R6\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\"> <code class=\"code\">__cpp_lib_stdatomic_h &gt;= 202011L</code> </td></tr><tr><td align=\"left\"> Clarifying the status of the \"C headers\" </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2340r1.html\" target=\"_top\">\n         P2340R1\n         </a>\n       </td><td align=\"center\"> Yes </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> Relax Requirements for time_point::clock </td><td align=\"left\">\n         <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2212r2.html\" target=\"_top\">\n         P2212R2\n         </a>\n-      </td><td align=\"center\"> Yes </td><td align=\"left\">\u00a0</td></tr></tbody></table></div></div><br class=\"table-break\" /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"status.iso.tr1\"></a>C++ TR1</h3></div></div></div><p>\n+      </td><td align=\"center\"> Yes </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> Removing Garbage Collection Support </td><td align=\"left\">\n+        <a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2186r2.html\" target=\"_top\">\n+        P2186R2\n+        </a>\n+      </td><td align=\"center\"> 12.1 </td><td align=\"left\">\u00a0</td></tr></tbody></table></div></div><br class=\"table-break\" /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"status.iso.tr1\"></a>C++ TR1</h3></div></div></div><p>\n This table is based on the table of contents of ISO/IEC DTR 19768,\n Doc No: N1836=05-0096, Date: 2005-06-24,\n \"Draft Technical Report on C++ Library Extensions\"."}, {"sha": "a6049e7b0d4bc548a732ba8c08c2e1cfee33add5", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2023.xml", "status": "modified", "additions": 341, "deletions": 0, "changes": 341, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8414dad54a8a5eed710f894bde5721631fd3f748/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2023.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8414dad54a8a5eed710f894bde5721631fd3f748/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2023.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2023.xml?ref=8414dad54a8a5eed710f894bde5721631fd3f748", "patch": "@@ -130,6 +130,74 @@ or any notes about the implementation.\n       <entry />\n     </row>\n \n+    <row>\n+      <entry> Repairing input range adaptors and counted_iterator </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2259r1.html\">\n+        P2259R1\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry />\n+    </row>\n+\n+    <row>\n+      <entry> Superior String Splitting </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2210r2.html\">\n+        P2210R2\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry />\n+    </row>\n+\n+    <row>\n+      <entry> What is a <code>view</code>? </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2415r2.html\">\n+        P2415R2\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry> <code>__cpp_lib_ranges &gt;= 202110L</code> </entry>\n+    </row>\n+\n+    <row>\n+      <entry> Fix istream_view </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2432r1.pdf\">\n+        P2432R1\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry />\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> <code>starts_with</code> and <code>ends_with</code> </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p1659r3.html\">\n+        P1659R3\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> </entry>\n+      <entry> <code>__cpp_lib_ranges_starts_ends_with &gt;= 202106L</code> </entry>\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> <code>zip</code> </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2321r2.html\">\n+        P2321R2\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> </entry>\n+      <entry> <code>__cpp_lib_ranges_zip &gt;= 202110L</code> </entry>\n+    </row>\n+\n     <row>\n       <entry namest=\"c1\" nameend=\"c4\" align=\"left\">\n         <emphasis role=\"bold\">Compile-time programming</emphasis>\n@@ -158,6 +226,85 @@ or any notes about the implementation.\n       <entry> <code>__cpp_lib_to_underlying &gt;= 202102L</code> </entry>\n     </row>\n \n+    <row>\n+      <entry> Missing constexpr in std::optional and std::variant </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2231r1.html\">\n+        P2231R1\n+        </link>\n+      </entry>\n+      <entry align=\"center\">\n+\t<informaltable colsep=\"0\" rowsep=\"0\" rowheader=\"norowheader\" frame=\"none\"><tgroup cols=\"1\"><tbody>\n+        <row><entry> 11.3 (<code>optional</code>) </entry></row>\n+        <row><entry> 12.1 (<code>variant</code>) </entry></row>\n+        </tbody></tgroup></informaltable>\n+      </entry>\n+      <entry>\n+\t<informaltable colsep=\"0\" rowsep=\"0\" rowheader=\"norowheader\" frame=\"none\"><tgroup cols=\"1\"><tbody>\n+        <row><entry> <code>__cpp_lib_constexpr_optional &gt;= 202106L</code> </entry></row>\n+        <row><entry> <code>__cpp_lib_variant &gt;= 202106L</code> </entry></row>\n+        </tbody></tgroup></informaltable>\n+      </entry>\n+    </row>\n+\n+    <row>\n+      <entry> Making <code>std::unique_ptr</code> constexpr </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2273r3.pdf\">\n+        P2273R3\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry> <code>__cpp_lib_constexpr_memory &gt;= 202202L</code> </entry>\n+    </row>\n+\n+    <row>\n+      <entry> Making <code>std::type_info::operator==</code> constexpr </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p1328r1.html\">\n+        P1328R1\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry> <code>__cpp_lib_constexpr_typeinfo &gt;= 202106L</code> </entry>\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> constexpr for <code>&lt;cmath&gt;</code> and <code>&lt;cstdlib&gt;</code> </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p0533r9.pdf\">\n+        P0533R9\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> </entry>\n+      <entry> <code>__cpp_lib_constexpr_cmath &gt;= 202202L</code> </entry>\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> Deprecate std::aligned_storage and std::aligned_union </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p1413r3.pdf\">\n+        P1413R3\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> </entry>\n+      <entry />\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> A type trait to detect reference binding to temporary </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2255r2.html\">\n+        P2255R2\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> </entry>\n+      <entry> <code>__cpp_lib_reference_from_temporary &gt;= 202202L</code> </entry>\n+    </row>\n+\n     <row>\n       <entry namest=\"c1\" nameend=\"c4\" align=\"left\">\n         <emphasis role=\"bold\">Strings and text</emphasis>\n@@ -175,6 +322,79 @@ or any notes about the implementation.\n       <entry> <code>__cpp_lib_string_contains &gt;= 202011L</code> </entry>\n     </row>\n \n+    <row>\n+      <entry> Prohibit std::basic_string and std::basic_string_view construction from nullptr </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2166r1.html\">\n+        P2166R1\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry />\n+    </row>\n+\n+    <row>\n+      <entry> basic_string::resize_and_overwrite </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p1072r10.html\">\n+        P1072R10\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry> <code>__cpp_lib_resize_and_overwrite &gt;= 202110L</code> </entry>\n+    </row>\n+\n+    <row>\n+      <entry> A strstream replacement using span&lt;charT&gt; as buffer </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p0448r4.pdf\">\n+        P0448R4\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry> <code>__cpp_lib_spanstream &gt;= 202106L</code> </entry>\n+    </row>\n+\n+    <row>\n+      <entry namest=\"c1\" nameend=\"c4\" align=\"left\">\n+        <emphasis role=\"bold\">Containers</emphasis>\n+      </entry>\n+    </row>\n+\n+    <row>\n+      <entry> Iterator pair constructors for stack and queue </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p1425r4.pdf\">\n+        P1425R4\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry> <code>__cpp_lib_adaptor_iterator_pair_constructor &gt;= 202106L</code> </entry>\n+    </row>\n+\n+    <row>\n+      <entry> Stop overconstraining allocators in container deduction guides </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p1518r2.html\">\n+        P1518R2\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry />\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> Heterogeneous erasure overloads for associative containers </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2077r3.html\">\n+        P2077R3\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> </entry>\n+      <entry> <code>__cpp_lib_associative_heterogeneous_erasure &gt;= 202110L</code> </entry>\n+    </row>\n+\n     <row>\n       <entry namest=\"c1\" nameend=\"c4\" align=\"left\">\n         <emphasis role=\"bold\">Miscellaneous</emphasis>\n@@ -200,9 +420,119 @@ or any notes about the implementation.\n         </link>\n       </entry>\n       <entry align=\"center\"> 11.3 </entry>\n+      <entry/>\n+    </row>\n+\n+    <row>\n+      <entry> A Proposal to add stacktrace library </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p0881r7.html\">\n+        P0881R7\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry> <code>__cpp_lib_stacktrace &gt;= 202011L</code> </entry>\n+    </row>\n+\n+    <row>\n+      <entry> Add a pmr alias for std::stacktrace </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2301r1.html\">\n+        P2301R1\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n       <entry />\n     </row>\n \n+    <row>\n+      <entry> <code>std::expected</code> </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p0323r12.html\">\n+        P0323R12\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry> <code>__cpp_lib_expected &gt;= 202202L</code> </entry>\n+    </row>\n+\n+    <row>\n+      <entry> Monadic operations for std::optional </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p0798r8.html\">\n+        P0798R8\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry> <code>__cpp_lib_optional &gt;= 202110L</code> </entry>\n+    </row>\n+\n+    <row>\n+      <entry> <code>move_only_function</code> </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p0288r9.html\">\n+        P0288R9\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry> <code>__cpp_lib_move_only_function &gt;= 202110L</code> </entry>\n+    </row>\n+\n+    <row>\n+      <entry> <code>invoke_r</code> </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2136r3.html\">\n+        P2136R3\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry> <code>__cpp_lib_invoke_r &gt;= 202106L</code> </entry>\n+    </row>\n+\n+    <row>\n+      <entry> Byteswapping for fun&amp;&amp;nuf </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p1272r4.html\">\n+        P1272R4\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry> <code>__cpp_lib_byteswap &gt;= 202110L</code> </entry>\n+    </row>\n+\n+    <row>\n+      <entry> Function to mark unreachable code </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p0627r6.pdf\">\n+        P0627R6\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry> <code>__cpp_lib_unreachable &gt;= 202202L</code> </entry>\n+    </row>\n+\n+    <row>\n+      <entry> Add a conditional noexcept specification to std::exchange </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2401r0.html\">\n+        P2401R0\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry />\n+    </row>\n+\n+    <row>\n+      <entry> Support C atomics in C++ </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p0943r6.html\">\n+        P0943R6\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry> <code>__cpp_lib_stdatomic_h &gt;= 202011L</code> </entry>\n+    </row>\n+\n     <row>\n       <entry> Clarifying the status of the \"C headers\" </entry>\n       <entry>\n@@ -225,6 +555,17 @@ or any notes about the implementation.\n       <entry />\n     </row>\n \n+    <row>\n+      <entry> Removing Garbage Collection Support </entry>\n+      <entry>\n+        <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2186r2.html\">\n+        P2186R2\n+        </link>\n+      </entry>\n+      <entry align=\"center\"> 12.1 </entry>\n+      <entry />\n+    </row>\n+\n   </tbody>\n </tgroup>\n </table>"}]}