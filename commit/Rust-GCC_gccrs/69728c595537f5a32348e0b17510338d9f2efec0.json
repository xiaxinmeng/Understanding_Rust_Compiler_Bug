{"sha": "69728c595537f5a32348e0b17510338d9f2efec0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk3MjhjNTk1NTM3ZjVhMzIzNDhlMGIxNzUxMDMzOGQ5ZjJlZmVjMA==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2021-08-28T23:55:27Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2021-08-29T00:01:59Z"}, "message": "Remove GetLocusFromImplItem visitor\n\nSimply use get_locus () on the ImplItem.\nBoth the generics7.rs and generics8.rs testcase still pass.", "tree": {"sha": "8b19a2081e62c09ad03e37ab842822b93f3056c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b19a2081e62c09ad03e37ab842822b93f3056c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69728c595537f5a32348e0b17510338d9f2efec0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69728c595537f5a32348e0b17510338d9f2efec0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69728c595537f5a32348e0b17510338d9f2efec0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69728c595537f5a32348e0b17510338d9f2efec0/comments", "author": null, "committer": null, "parents": [{"sha": "f16e3af9ad774cbdbb534fd68066582aefc6bf80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f16e3af9ad774cbdbb534fd68066582aefc6bf80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f16e3af9ad774cbdbb534fd68066582aefc6bf80"}], "stats": {"total": 45, "additions": 2, "deletions": 43}, "files": [{"sha": "9a2c7fe3c07f96f02c8e883a6aac3f8e92054a7c", "filename": "gcc/rust/typecheck/rust-hir-inherent-impl-overlap.h", "status": "modified", "additions": 2, "deletions": 43, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69728c595537f5a32348e0b17510338d9f2efec0/gcc%2Frust%2Ftypecheck%2Frust-hir-inherent-impl-overlap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69728c595537f5a32348e0b17510338d9f2efec0/gcc%2Frust%2Ftypecheck%2Frust-hir-inherent-impl-overlap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-inherent-impl-overlap.h?ref=69728c595537f5a32348e0b17510338d9f2efec0", "patch": "@@ -64,39 +64,6 @@ class ImplItemToName : public TypeCheckBase\n   std::string &result;\n };\n \n-class GetLocusFromImplItem : public TypeCheckBase\n-{\n-  using Rust::Resolver::TypeCheckBase::visit;\n-\n-public:\n-  static bool Resolve (HIR::ImplItem *query, Location &locus)\n-  {\n-    GetLocusFromImplItem resolver (locus);\n-    query->accept_vis (resolver);\n-    return resolver.ok;\n-  }\n-\n-  void visit (HIR::ConstantItem &constant) override\n-  {\n-    ok = true;\n-    locus = constant.get_locus ();\n-  }\n-\n-  void visit (HIR::Function &function) override\n-  {\n-    ok = true;\n-    locus = function.get_locus ();\n-  }\n-\n-private:\n-  GetLocusFromImplItem (Location &locus)\n-    : TypeCheckBase (), ok (false), locus (locus)\n-  {}\n-\n-  bool ok;\n-  Location &locus;\n-};\n-\n class OverlappingImplItemPass : public TypeCheckBase\n {\n   using Rust::Resolver::TypeCheckBase::visit;\n@@ -185,16 +152,8 @@ class OverlappingImplItemPass : public TypeCheckBase\n   void collision_detected (HIR::ImplItem *query, HIR::ImplItem *dup,\n \t\t\t   const std::string &name)\n   {\n-    Location qlocus; // query\n-    bool ok = GetLocusFromImplItem::Resolve (query, qlocus);\n-    rust_assert (ok);\n-\n-    Location dlocus; // dup\n-    ok = GetLocusFromImplItem::Resolve (dup, dlocus);\n-    rust_assert (ok);\n-\n-    RichLocation r (qlocus);\n-    r.add_range (dlocus);\n+    RichLocation r (query->get_locus ());\n+    r.add_range (dup->get_locus ());\n     rust_error_at (r, \"duplicate definitions with name %s\", name.c_str ());\n   }\n "}]}