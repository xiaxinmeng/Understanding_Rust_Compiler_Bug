{"sha": "79498ad8ba53725b8429deeb9eb81c66bc0c496d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk0OThhZDhiYTUzNzI1Yjg0MjlkZWViOWViODFjNjZiYzBjNDk2ZA==", "commit": {"author": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2018-04-22T08:19:38Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2018-04-22T08:19:38Z"}, "message": "[NDS32] Implement DATA_ALIGNMENT, LOCAL_ALIGNMENT and TARGET_CONSTANT_ALIGNMENT.\n\ngcc/\n\t* config/nds32/nds32-protos.h (nds32_data_alignment,\n\tnds32_local_alignment): Declare.\n\t* config/nds32/nds32.c (nds32_data_alignment, nds32_constant_alignment,\n\tnds32_local_alignment): New functions.\n\t(TARGET_CONSTANT_ALIGNMENT): Define.\n\t* config/nds32/nds32.h (DATA_ALIGNMENT, LOCAL_ALIGNMENT): Define.\n\nFrom-SVN: r259548", "tree": {"sha": "30cf7d8656f4f4789dbb8fb4a882260c15432d3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30cf7d8656f4f4789dbb8fb4a882260c15432d3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79498ad8ba53725b8429deeb9eb81c66bc0c496d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79498ad8ba53725b8429deeb9eb81c66bc0c496d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79498ad8ba53725b8429deeb9eb81c66bc0c496d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79498ad8ba53725b8429deeb9eb81c66bc0c496d/comments", "author": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "50256c75f49088898f6820944077e49202cac2da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50256c75f49088898f6820944077e49202cac2da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50256c75f49088898f6820944077e49202cac2da"}], "stats": {"total": 77, "additions": 77, "deletions": 0}, "files": [{"sha": "7c6fb7631c05444141a66c35383d6ee0e39123a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79498ad8ba53725b8429deeb9eb81c66bc0c496d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79498ad8ba53725b8429deeb9eb81c66bc0c496d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=79498ad8ba53725b8429deeb9eb81c66bc0c496d", "patch": "@@ -1,3 +1,12 @@\n+2018-04-22  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* config/nds32/nds32-protos.h (nds32_data_alignment,\n+\tnds32_local_alignment): Declare.\n+\t* config/nds32/nds32.c (nds32_data_alignment, nds32_constant_alignment,\n+\tnds32_local_alignment): New functions.\n+\t(TARGET_CONSTANT_ALIGNMENT): Define.\n+\t* config/nds32/nds32.h (DATA_ALIGNMENT, LOCAL_ALIGNMENT): Define.\n+\n 2018-04-22  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* config/nds32/nds32.c"}, {"sha": "2dce97ef91b8bd1aa4a78ec826b27bc334950a9f", "filename": "gcc/config/nds32/nds32-protos.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79498ad8ba53725b8429deeb9eb81c66bc0c496d/gcc%2Fconfig%2Fnds32%2Fnds32-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79498ad8ba53725b8429deeb9eb81c66bc0c496d/gcc%2Fconfig%2Fnds32%2Fnds32-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-protos.h?ref=79498ad8ba53725b8429deeb9eb81c66bc0c496d", "patch": "@@ -223,6 +223,8 @@ extern int nds32_can_use_return_insn (void);\n /* Auxiliary functions to decide output alignment or not.  */\n \n extern int nds32_target_alignment (rtx_insn *);\n+extern unsigned int nds32_data_alignment (tree, unsigned int);\n+extern unsigned int nds32_local_alignment (tree, unsigned int);\n \n /* Auxiliary functions to expand builtin functions.  */\n "}, {"sha": "a0012c0ccf3e21f938c41472536a501b0949dfac", "filename": "gcc/config/nds32/nds32.c", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79498ad8ba53725b8429deeb9eb81c66bc0c496d/gcc%2Fconfig%2Fnds32%2Fnds32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79498ad8ba53725b8429deeb9eb81c66bc0c496d/gcc%2Fconfig%2Fnds32%2Fnds32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.c?ref=79498ad8ba53725b8429deeb9eb81c66bc0c496d", "patch": "@@ -4812,6 +4812,63 @@ nds32_target_alignment (rtx_insn *label)\n     return 2;\n }\n \n+/* Return alignment for data.  */\n+unsigned int\n+nds32_data_alignment (tree data,\n+\t\t      unsigned int basic_align)\n+{\n+  if ((basic_align < BITS_PER_WORD)\n+      && (TREE_CODE (data) == ARRAY_TYPE\n+\t || TREE_CODE (data) == UNION_TYPE\n+\t || TREE_CODE (data) == RECORD_TYPE))\n+    return BITS_PER_WORD;\n+  else\n+    return basic_align;\n+}\n+\n+/* Return alignment for constant value.  */\n+static HOST_WIDE_INT\n+nds32_constant_alignment (const_tree constant,\n+\t\t\t  HOST_WIDE_INT basic_align)\n+{\n+  /* Make string literal and constant for constructor to word align.  */\n+  if (((TREE_CODE (constant) == STRING_CST\n+\t|| TREE_CODE (constant) == CONSTRUCTOR\n+\t|| TREE_CODE (constant) == UNION_TYPE\n+\t|| TREE_CODE (constant) == RECORD_TYPE\n+\t|| TREE_CODE (constant) == ARRAY_TYPE)\n+       && basic_align < BITS_PER_WORD))\n+    return BITS_PER_WORD;\n+  else\n+    return basic_align;\n+}\n+\n+/* Return alignment for local variable.  */\n+unsigned int\n+nds32_local_alignment (tree local ATTRIBUTE_UNUSED,\n+\t\t       unsigned int basic_align)\n+{\n+  bool at_least_align_to_word = false;\n+  /* Make local array, struct and union at least align to word for make\n+     sure it can unroll memcpy when initialize by constant.  */\n+  switch (TREE_CODE (local))\n+    {\n+    case ARRAY_TYPE:\n+    case RECORD_TYPE:\n+    case UNION_TYPE:\n+      at_least_align_to_word = true;\n+      break;\n+    default:\n+      at_least_align_to_word = false;\n+      break;\n+    }\n+  if (at_least_align_to_word\n+      && (basic_align < BITS_PER_WORD))\n+    return BITS_PER_WORD;\n+  else\n+    return basic_align;\n+}\n+\n bool\n nds32_split_double_word_load_store_p(rtx *operands, bool load_p)\n {\n@@ -4865,6 +4922,9 @@ nds32_use_blocks_for_constant_p (machine_mode mode,\n #undef TARGET_EXPAND_TO_RTL_HOOK\n #define TARGET_EXPAND_TO_RTL_HOOK nds32_expand_to_rtl_hook\n \n+#undef TARGET_CONSTANT_ALIGNMENT\n+#define TARGET_CONSTANT_ALIGNMENT nds32_constant_alignment\n+\n \f\n /* Layout of Source Language Data Types.  */\n "}, {"sha": "6c2f1f8f13ed807cbd11aa9233297688306bec23", "filename": "gcc/config/nds32/nds32.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79498ad8ba53725b8429deeb9eb81c66bc0c496d/gcc%2Fconfig%2Fnds32%2Fnds32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79498ad8ba53725b8429deeb9eb81c66bc0c496d/gcc%2Fconfig%2Fnds32%2Fnds32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.h?ref=79498ad8ba53725b8429deeb9eb81c66bc0c496d", "patch": "@@ -688,6 +688,12 @@ enum nds32_builtins\n \n #define BIGGEST_ALIGNMENT 64\n \n+#define DATA_ALIGNMENT(constant, basic_align) \\\n+  nds32_data_alignment (constant, basic_align)\n+\n+#define LOCAL_ALIGNMENT(type, basic_align) \\\n+  nds32_local_alignment (type, basic_align)\n+\n #define EMPTY_FIELD_BOUNDARY 32\n \n #define STRUCTURE_SIZE_BOUNDARY 8"}]}