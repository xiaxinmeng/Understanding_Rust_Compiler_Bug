{"sha": "956011be1f9a5369c4390bcccb5bb6198887e455", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU2MDExYmUxZjlhNTM2OWM0MzkwYmNjY2I1YmI2MTk4ODg3ZTQ1NQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-04-11T15:50:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-04-11T15:50:57Z"}, "message": "gimplify.c (gimple_fold_indirect_ref): Check host_integerp before calling tree_low_cst.\n\n2011-04-11  Richard Guenther  <rguenther@suse.de>\n\n\t* gimplify.c (gimple_fold_indirect_ref): Check host_integerp\n\tbefore calling tree_low_cst.\n\nFrom-SVN: r172263", "tree": {"sha": "74c24d546e7e1f8da54b8ac8e895851103d4fa2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74c24d546e7e1f8da54b8ac8e895851103d4fa2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/956011be1f9a5369c4390bcccb5bb6198887e455", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/956011be1f9a5369c4390bcccb5bb6198887e455", "html_url": "https://github.com/Rust-GCC/gccrs/commit/956011be1f9a5369c4390bcccb5bb6198887e455", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/956011be1f9a5369c4390bcccb5bb6198887e455/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "155e5d5f559fc3639da157b4c3a7ee41f62f43cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/155e5d5f559fc3639da157b4c3a7ee41f62f43cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/155e5d5f559fc3639da157b4c3a7ee41f62f43cb"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "ce35db2c85696a9be235b19eaf8f77efcc976893", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956011be1f9a5369c4390bcccb5bb6198887e455/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956011be1f9a5369c4390bcccb5bb6198887e455/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=956011be1f9a5369c4390bcccb5bb6198887e455", "patch": "@@ -1,3 +1,8 @@\n+2011-04-11  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gimplify.c (gimple_fold_indirect_ref): Check host_integerp\n+\tbefore calling tree_low_cst.\n+\n 2011-04-11  Richard Guenther  <rguenther@suse.de>\n \n \t* stor-layout.c (layout_type): Compute all array index size operations"}, {"sha": "9afd4ff27fe2b0b297a895448b812e681424aa96", "filename": "gcc/gimplify.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/956011be1f9a5369c4390bcccb5bb6198887e455/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/956011be1f9a5369c4390bcccb5bb6198887e455/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=956011be1f9a5369c4390bcccb5bb6198887e455", "patch": "@@ -4079,9 +4079,10 @@ gimple_fold_indirect_ref (tree t)\n       /* ((foo*)&vectorfoo)[1] -> BIT_FIELD_REF<vectorfoo,...> */\n       if (TREE_CODE (addr) == ADDR_EXPR\n \t  && TREE_CODE (TREE_TYPE (addrtype)) == VECTOR_TYPE\n-\t  && useless_type_conversion_p (type, TREE_TYPE (TREE_TYPE (addrtype))))\n+\t  && useless_type_conversion_p (type, TREE_TYPE (TREE_TYPE (addrtype)))\n+\t  && host_integerp (off, 1))\n \t{\n-          HOST_WIDE_INT offset = tree_low_cst (off, 0);\n+          unsigned HOST_WIDE_INT offset = tree_low_cst (off, 1);\n           tree part_width = TYPE_SIZE (type);\n           unsigned HOST_WIDE_INT part_widthi\n             = tree_low_cst (part_width, 0) / BITS_PER_UNIT;"}]}