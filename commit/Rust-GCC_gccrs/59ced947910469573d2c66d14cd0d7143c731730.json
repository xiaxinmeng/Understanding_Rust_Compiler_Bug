{"sha": "59ced947910469573d2c66d14cd0d7143c731730", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTljZWQ5NDc5MTA0Njk1NzNkMmM2NmQxNGNkMGQ3MTQzYzczMTczMA==", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "rafael.espindola@gmail.com", "date": "2005-12-12T23:12:14Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2005-12-12T23:12:14Z"}, "message": "tree-flow.h: Allow compilation with a C++ compiler.\n\n2005-12-11 Rafael \u00c1vila de Esp\u00edndola <rafael.espindola@gmail.com>\n\n        * tree-flow.h: Allow compilation with a C++ compiler.\n        (struct edge_prediction): Prefix all field names  with \"ep_\".\n        * predict.c (tree_predicted_by_p): Likewise for struct\n        edge_prediction.\n        (tree_predict_edge, combine_predictions_for_bb): Likewise.\n        (remove_predictions_associated_with_edge): Likewise.\n\nFrom-SVN: r108430", "tree": {"sha": "9f1e26c158496b99f5a493093554f848f41ba130", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f1e26c158496b99f5a493093554f848f41ba130"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59ced947910469573d2c66d14cd0d7143c731730", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59ced947910469573d2c66d14cd0d7143c731730", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59ced947910469573d2c66d14cd0d7143c731730", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59ced947910469573d2c66d14cd0d7143c731730/comments", "author": {"login": "espindola", "id": 42633, "node_id": "MDQ6VXNlcjQyNjMz", "avatar_url": "https://avatars.githubusercontent.com/u/42633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/espindola", "html_url": "https://github.com/espindola", "followers_url": "https://api.github.com/users/espindola/followers", "following_url": "https://api.github.com/users/espindola/following{/other_user}", "gists_url": "https://api.github.com/users/espindola/gists{/gist_id}", "starred_url": "https://api.github.com/users/espindola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/espindola/subscriptions", "organizations_url": "https://api.github.com/users/espindola/orgs", "repos_url": "https://api.github.com/users/espindola/repos", "events_url": "https://api.github.com/users/espindola/events{/privacy}", "received_events_url": "https://api.github.com/users/espindola/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d33df7e10db802a9c63eab5816b90882d3eda689", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d33df7e10db802a9c63eab5816b90882d3eda689", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d33df7e10db802a9c63eab5816b90882d3eda689"}], "stats": {"total": 52, "additions": 30, "deletions": 22}, "files": [{"sha": "7ba1eaa5e49a88f1e8ee8884326b0c0c47cb19a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59ced947910469573d2c66d14cd0d7143c731730/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59ced947910469573d2c66d14cd0d7143c731730/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=59ced947910469573d2c66d14cd0d7143c731730", "patch": "@@ -1,3 +1,11 @@\n+2005-12-11 Rafael \ufffdvila de Esp\ufffdndola <rafael.espindola@gmail.com>\n+\n+        * tree-flow.h: Allow compilation with a C++ compiler.\n+        (struct edge_prediction): Prefix all field names  with \"ep_\".\n+        * predict.c (tree_predicted_by_p): Likewise for struct edge_prediction.\n+        (tree_predict_edge, combine_predictions_for_bb): Likewise.\n+        (remove_predictions_associated_with_edge): Likewise.\n+\t\n 2005-12-12  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-dom.c (simplify_rhs_and_lookup_avail_expr): Remove"}, {"sha": "5cd3cb61bd38c3ab48c249d35428c07110263f94", "filename": "gcc/predict.c", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59ced947910469573d2c66d14cd0d7143c731730/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59ced947910469573d2c66d14cd0d7143c731730/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=59ced947910469573d2c66d14cd0d7143c731730", "patch": "@@ -172,8 +172,8 @@ bool\n tree_predicted_by_p (basic_block bb, enum br_predictor predictor)\n {\n   struct edge_prediction *i;\n-  for (i = bb->predictions; i; i = i->next)\n-    if (i->predictor == predictor)\n+  for (i = bb->predictions; i; i = i->ep_next)\n+    if (i->ep_predictor == predictor)\n       return true;\n   return false;\n }\n@@ -237,11 +237,11 @@ tree_predict_edge (edge e, enum br_predictor predictor, int probability)\n     {\n       struct edge_prediction *i = ggc_alloc (sizeof (struct edge_prediction));\n \n-      i->next = e->src->predictions;\n+      i->ep_next = e->src->predictions;\n       e->src->predictions = i;\n-      i->probability = probability;\n-      i->predictor = predictor;\n-      i->edge = e;\n+      i->ep_probability = probability;\n+      i->ep_predictor = predictor;\n+      i->ep_edge = e;\n     }\n }\n \n@@ -255,10 +255,10 @@ remove_predictions_associated_with_edge (edge e)\n       struct edge_prediction **prediction = &e->src->predictions;\n       while (*prediction)\n \t{\n-\t  if ((*prediction)->edge == e)\n-\t    *prediction = (*prediction)->next;\n+\t  if ((*prediction)->ep_edge == e)\n+\t    *prediction = (*prediction)->ep_next;\n \t  else\n-\t    prediction = &((*prediction)->next);\n+\t    prediction = &((*prediction)->ep_next);\n \t}\n     }\n }\n@@ -523,12 +523,12 @@ combine_predictions_for_bb (FILE *file, basic_block bb)\n \n   /* We implement \"first match\" heuristics and use probability guessed\n      by predictor with smallest index.  */\n-  for (pred = bb->predictions; pred; pred = pred->next)\n+  for (pred = bb->predictions; pred; pred = pred->ep_next)\n     {\n-      int predictor = pred->predictor;\n-      int probability = pred->probability;\n+      int predictor = pred->ep_predictor;\n+      int probability = pred->ep_probability;\n \n-      if (pred->edge != first)\n+      if (pred->ep_edge != first)\n \tprobability = REG_BR_PROB_BASE - probability;\n \n       found = true;\n@@ -569,12 +569,12 @@ combine_predictions_for_bb (FILE *file, basic_block bb)\n     combined_probability = best_probability;\n   dump_prediction (file, PRED_COMBINED, combined_probability, bb, true);\n \n-  for (pred = bb->predictions; pred; pred = pred->next)\n+  for (pred = bb->predictions; pred; pred = pred->ep_next)\n     {\n-      int predictor = pred->predictor;\n-      int probability = pred->probability;\n+      int predictor = pred->ep_predictor;\n+      int probability = pred->ep_probability;\n \n-      if (pred->edge != EDGE_SUCC (bb, 0))\n+      if (pred->ep_edge != EDGE_SUCC (bb, 0))\n \tprobability = REG_BR_PROB_BASE - probability;\n       dump_prediction (file, predictor, probability, bb,\n \t\t       !first_match || best_predictor == predictor);"}, {"sha": "62b8027ba62fc6ea392a6bf6480234930409594d", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59ced947910469573d2c66d14cd0d7143c731730/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59ced947910469573d2c66d14cd0d7143c731730/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=59ced947910469573d2c66d14cd0d7143c731730", "patch": "@@ -333,12 +333,12 @@ static inline tree default_def (tree);\n /*---------------------------------------------------------------------------\n                   Structure representing predictions in tree level.\n ---------------------------------------------------------------------------*/\n-struct edge_prediction GTY((chain_next (\"%h.next\")))\n+struct edge_prediction GTY((chain_next (\"%h.ep_next\")))\n {\n-  struct edge_prediction *next;\n-  edge edge;\n-  enum br_predictor predictor;\n-  int probability;\n+  struct edge_prediction *ep_next;\n+  edge ep_edge;\n+  enum br_predictor ep_predictor;\n+  int ep_probability;\n };\n \n /* Accessors for basic block annotations.  */"}]}