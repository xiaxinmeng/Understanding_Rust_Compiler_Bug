{"sha": "b6156cf232517d1ee6c8192b74a090655712c8c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYxNTZjZjIzMjUxN2QxZWU2YzgxOTJiNzRhMDkwNjU1NzEyYzhjMw==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2011-06-01T12:52:08Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2011-06-01T12:52:08Z"}, "message": "ipa-utils.c (searchc_env): New field allow_overwritable.\n\n2011-06-01  Martin Jambor  <mjambor@suse.cz>\n\n\t* ipa-utils.c (searchc_env): New field allow_overwritable.\n\t(searchc): do not ignore edges to overwritable nodes if indicated\n\tby env->allow_overwritable.\n\t(ipa_reduced_postorder): Set env.allow_overwritable.\n\nFrom-SVN: r174523", "tree": {"sha": "a47899351ddffe0b1cf21b848d366c52b797949b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a47899351ddffe0b1cf21b848d366c52b797949b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6156cf232517d1ee6c8192b74a090655712c8c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6156cf232517d1ee6c8192b74a090655712c8c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6156cf232517d1ee6c8192b74a090655712c8c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6156cf232517d1ee6c8192b74a090655712c8c3/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6c059f76e7d799efdcccdcd4790df14e84f962a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c059f76e7d799efdcccdcd4790df14e84f962a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c059f76e7d799efdcccdcd4790df14e84f962a7"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "add1fa2665495ae54b065ea6c0b1aa31f129c9cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6156cf232517d1ee6c8192b74a090655712c8c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6156cf232517d1ee6c8192b74a090655712c8c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6156cf232517d1ee6c8192b74a090655712c8c3", "patch": "@@ -1,3 +1,10 @@\n+2011-06-01  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* ipa-utils.c (searchc_env): New field allow_overwritable.\n+\t(searchc): do not ignore edges to overwritable nodes if indicated\n+\tby env->allow_overwritable.\n+\t(ipa_reduced_postorder): Set env.allow_overwritable.\n+\n 2011-06-01  Richard Guenther  <rguenther@suse.de>\n \n \t* tree.c (free_lang_data): Do not reset boolean_type_node nor"}, {"sha": "f60ce2fd0741b33a8c68d6ab42804cfeec953389", "filename": "gcc/ipa-utils.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6156cf232517d1ee6c8192b74a090655712c8c3/gcc%2Fipa-utils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6156cf232517d1ee6c8192b74a090655712c8c3/gcc%2Fipa-utils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-utils.c?ref=b6156cf232517d1ee6c8192b74a090655712c8c3", "patch": "@@ -67,6 +67,7 @@ struct searchc_env {\n   int order_pos;\n   splay_tree nodes_marked_new;\n   bool reduce;\n+  bool allow_overwritable;\n   int count;\n };\n \n@@ -101,11 +102,14 @@ searchc (struct searchc_env* env, struct cgraph_node *v,\n     {\n       struct ipa_dfs_info * w_info;\n       struct cgraph_node *w = edge->callee;\n+      enum availability avail = cgraph_function_body_availability (w);\n \n       if (ignore_edge && ignore_edge (edge))\n         continue;\n \n-      if (w->aux && cgraph_function_body_availability (edge->callee) > AVAIL_OVERWRITABLE)\n+      if (w->aux\n+\t  && (avail > AVAIL_OVERWRITABLE\n+\t      || (env->allow_overwritable && avail == AVAIL_OVERWRITABLE)))\n \t{\n \t  w_info = (struct ipa_dfs_info *) w->aux;\n \t  if (w_info->new_node)\n@@ -171,6 +175,7 @@ ipa_reduced_postorder (struct cgraph_node **order,\n   env.nodes_marked_new = splay_tree_new (splay_tree_compare_ints, 0, 0);\n   env.count = 1;\n   env.reduce = reduce;\n+  env.allow_overwritable = allow_overwritable;\n \n   for (node = cgraph_nodes; node; node = node->next)\n     {"}]}