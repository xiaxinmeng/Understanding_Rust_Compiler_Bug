{"sha": "09d26b3e0b11859bc9fa27f9a4b176da47bc7add", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDlkMjZiM2UwYjExODU5YmM5ZmEyN2Y5YTRiMTc2ZGE0N2JjN2FkZA==", "commit": {"author": {"name": "Marc Poulhi\u00e8s", "email": "dkm@kataplop.net", "date": "2021-06-06T13:08:03Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "dkm@kataplop.net", "date": "2021-06-19T12:49:09Z"}, "message": "Make 3 error messages slightly more informational\n\nAdd more context to some internal error messages (ie. not intended for user)", "tree": {"sha": "9eb9d8b2bde0de1c2b59e68016cf943cf4d405cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9eb9d8b2bde0de1c2b59e68016cf943cf4d405cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09d26b3e0b11859bc9fa27f9a4b176da47bc7add", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09d26b3e0b11859bc9fa27f9a4b176da47bc7add", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09d26b3e0b11859bc9fa27f9a4b176da47bc7add", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09d26b3e0b11859bc9fa27f9a4b176da47bc7add/comments", "author": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0c1c0b4001f68c2f4827e65ec23e21fedc2a88d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0c1c0b4001f68c2f4827e65ec23e21fedc2a88d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0c1c0b4001f68c2f4827e65ec23e21fedc2a88d"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "09652f1ef1c6b03069dd11f15e249adb3ab81309", "filename": "gcc/rust/backend/rust-compile-expr.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09d26b3e0b11859bc9fa27f9a4b176da47bc7add/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09d26b3e0b11859bc9fa27f9a4b176da47bc7add/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-expr.h?ref=09d26b3e0b11859bc9fa27f9a4b176da47bc7add", "patch": "@@ -183,8 +183,10 @@ class CompileExpr : public HIRCompileBase\n \t  if (!ctx->get_tyctx ()->lookup_type (\n \t\texpr.get_mappings ().get_hirid (), &tyty))\n \t    {\n-\t      rust_fatal_error (expr.get_locus (),\n-\t\t\t\t\"did not resolve type for this literal expr\");\n+\t      rust_fatal_error (\n+\t\texpr.get_locus (),\n+\t\t\"did not resolve type for this literal expr (HirId %d)\",\n+\t\texpr.get_mappings ().get_hirid ());\n \t      return;\n \t    }\n "}, {"sha": "136c0c20372ca71e7d715f71c3f243c4ddb53d64", "filename": "gcc/rust/typecheck/rust-hir-type-check-type.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09d26b3e0b11859bc9fa27f9a4b176da47bc7add/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09d26b3e0b11859bc9fa27f9a4b176da47bc7add/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.h?ref=09d26b3e0b11859bc9fa27f9a4b176da47bc7add", "patch": "@@ -118,18 +118,20 @@ class TypeCheckType : public TypeCheckBase\n   {\n     // lookup the Node this resolves to\n     NodeId ref;\n-    if (!resolver->lookup_resolved_type (path.get_mappings ().get_nodeid (),\n-\t\t\t\t\t &ref))\n+    auto nid = path.get_mappings ().get_nodeid ();\n+    if (!resolver->lookup_resolved_type (nid, &ref))\n       {\n \trust_fatal_error (path.get_locus (),\n-\t\t\t  \"Failed to resolve node id to HIR\");\n+\t\t\t  \"failed to resolve node '%d' to HIR\", nid);\n \treturn;\n       }\n \n     HirId hir_lookup;\n     if (!context->lookup_type_by_node_id (ref, &hir_lookup))\n       {\n-\trust_error_at (path.get_locus (), \"failed to lookup HIR node\");\n+\trust_error_at (path.get_locus (),\n+\t\t       \"failed to lookup HIR %d for node '%s'\", ref,\n+\t\t       path.as_string ().c_str ());\n \treturn;\n       }\n "}]}