{"sha": "e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTlhNzgwZWNlYzQ2MzlhYjBlMjk3NWE1M2MwOGU0ZGNmZDdmYWZjMg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-05-06T12:56:58Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-05-06T12:56:58Z"}, "message": "c-common.c: Convert to using ctype macros defined in system.h.\n\n        * c-common.c: Convert to using ctype macros defined in system.h.\n        * c-lex.c: Likewise.\n        * cccp.c: Likewise.\n        * collect2.c: Likewise.\n        * rs6000.c: Likewise.\n        * cpplib.c: Likewise.\n        * fix-header.c: Likewise.\n        * gcc.c: Likewise.\n        * gen-protos.c: Likewise.\n        * pexecute.c: Likewise.\n        * protoize.c: Likewise.\n        * rtl.c: Likewise.\n        * scan.c: Likewise.\n        * stmt.c: Likewise.\n        * tlink.c: Likewise.\n        * toplev.c: Likewise.\n\nFrom-SVN: r19579", "tree": {"sha": "4be0ba56ed3d601b4b5711c8247791d8c7acf4b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4be0ba56ed3d601b4b5711c8247791d8c7acf4b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/comments", "author": null, "committer": null, "parents": [{"sha": "d4c3e60e96683c90bd06f62da8157f84c9a3225c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4c3e60e96683c90bd06f62da8157f84c9a3225c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4c3e60e96683c90bd06f62da8157f84c9a3225c"}], "stats": {"total": 197, "additions": 109, "deletions": 88}, "files": [{"sha": "4b8024b6af7022c3cbcc6dd871cbcf0d5008c29f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "patch": "@@ -1,3 +1,22 @@\n+Wed May  6 15:37:27 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* c-common.c: Convert to using ctype macros defined in system.h.\n+\t* c-lex.c: Likewise.\n+\t* cccp.c: Likewise.\n+\t* collect2.c: Likewise.\n+\t* rs6000.c: Likewise.\n+\t* cpplib.c: Likewise.\n+\t* fix-header.c: Likewise.\n+\t* gcc.c: Likewise.\n+\t* gen-protos.c: Likewise.\n+\t* pexecute.c: Likewise.\n+\t* protoize.c: Likewise.\n+\t* rtl.c: Likewise.\n+\t* scan.c: Likewise.\n+\t* stmt.c: Likewise.\n+\t* tlink.c: Likewise.\n+\t* toplev.c: Likewise.\t\n+\n Wed May  6 14:44:14 1998  Gavin Koch  <gavin@cygnus.com>\n \n \t* config/mips/r3900.h (SUBTARGET_ASM_DEBUGGING_SPEC) : "}, {"sha": "d16bbc35acd328a265e856e6c1175650c914875b", "filename": "gcc/c-common.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "patch": "@@ -1356,7 +1356,7 @@ check_format_info (info, params)\n \t  suppressed = *format_chars == '*';\n \t  if (suppressed)\n \t    ++format_chars;\n-\t  while (isdigit (*format_chars))\n+\t  while (ISDIGIT (*format_chars))\n \t    ++format_chars;\n \t}\n       else if (info->format_type == strftime_format_type)\n@@ -1379,7 +1379,7 @@ check_format_info (info, params)\n \t\t  flag_chars[i] = 0;\n \t\t}\n \t    }\n-\t  while (isdigit ((unsigned char) *format_chars))\n+\t  while (ISDIGIT ((unsigned char) *format_chars))\n \t    {\n \t      wide = TRUE;\n               ++format_chars;\n@@ -1480,7 +1480,7 @@ check_format_info (info, params)\n \t    }\n \t  else\n \t    {\n-\t      while (isdigit (*format_chars))\n+\t      while (ISDIGIT (*format_chars))\n \t\t{\n \t\t  wide = TRUE;\n \t\t  ++format_chars;\n@@ -1490,7 +1490,7 @@ check_format_info (info, params)\n \t    {\n \t      precise = TRUE;\n \t      ++format_chars;\n-\t      if (*format_chars != '*' && !isdigit (*format_chars))\n+\t      if (*format_chars != '*' && !ISDIGIT (*format_chars))\n \t\twarning (\"`.' not followed by `*' or digit in format\");\n \t      /* \"...a...precision...may be indicated by an asterisk.\n \t\t In this case, an int argument supplies the...precision.\"  */\n@@ -1515,7 +1515,7 @@ check_format_info (info, params)\n \t\t}\n \t      else\n \t\t{\n-\t\t  while (isdigit (*format_chars))\n+\t\t  while (ISDIGIT (*format_chars))\n \t\t    ++format_chars;\n \t\t}\n \t    }"}, {"sha": "e433d2f9526026afba410fb986c862e611e8bcdd", "filename": "gcc/c-lex.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "patch": "@@ -1255,7 +1255,7 @@ yylex ()\n     case '$':\n     letter:\n       p = token_buffer;\n-      while (isalnum (c) || c == '_' || c == '$' || c == '@')\n+      while (ISALNUM (c) || c == '_' || c == '$' || c == '@')\n \t{\n \t  /* Make sure this char really belongs in an identifier.  */\n \t  if (c == '@' && ! doing_objc_thang)\n@@ -1367,7 +1367,7 @@ yylex ()\n \n \tnext_c = GETC ();\n \tUNGETC (next_c);\t/* Always undo this lookahead.  */\n-\tif (!isalnum (next_c) && next_c != '.')\n+\tif (!ISALNUM (next_c) && next_c != '.')\n \t  {\n \t    token_buffer[0] = (char)c,  token_buffer[1] = '\\0';\n \t    yylval.ttype = (c == '0') ? integer_zero_node : integer_one_node;\n@@ -1424,7 +1424,7 @@ yylex ()\n \t/* Read all the digits-and-decimal-points.  */\n \n \twhile (c == '.'\n-\t       || (isalnum (c) && c != 'l' && c != 'L'\n+\t       || (ISALNUM (c) && c != 'l' && c != 'L'\n \t\t   && c != 'u' && c != 'U'\n \t\t   && c != 'i' && c != 'I' && c != 'j' && c != 'J'\n \t\t   && (floatflag == NOT_FLOAT || ((c != 'f') && (c != 'F')))))\n@@ -1453,7 +1453,7 @@ yylex ()\n \t\t   only when it is followed by a digit.\n \t\t   Otherwise, unread the following non-digit\n \t\t   and use the '.' as a structural token.  */\n-\t\tif (p == token_buffer + 2 && !isdigit (c))\n+\t\tif (p == token_buffer + 2 && !ISDIGIT (c))\n \t\t  {\n \t\t    if (c == '.')\n \t\t      {\n@@ -1477,7 +1477,7 @@ yylex ()\n \t\t/* It is not a decimal point.\n \t\t   It should be a digit (perhaps a hex digit).  */\n \n-\t\tif (isdigit (c))\n+\t\tif (ISDIGIT (c))\n \t\t  {\n \t\t    c = c - '0';\n \t\t  }\n@@ -1559,9 +1559,9 @@ yylex ()\n \t\t    *p++ = c;\n \t\t    c = GETC();\n \t\t  }\n-\t\tif (! isdigit (c))\n+\t\tif (! ISDIGIT (c))\n \t\t  error (\"floating constant exponent has no digits\");\n-\t        while (isdigit (c))\n+\t        while (ISDIGIT (c))\n \t\t  {\n \t\t    if (p >= token_buffer + maxtoken - 3)\n \t\t      p = extend_token_buffer (p);\n@@ -1876,7 +1876,7 @@ yylex ()\n \tUNGETC (c);\n \t*p = 0;\n \n-\tif (isalnum (c) || c == '.' || c == '_' || c == '$'\n+\tif (ISALNUM (c) || c == '.' || c == '_' || c == '$'\n \t    || (!flag_traditional && (c == '-' || c == '+')\n \t\t&& (p[-1] == 'e' || p[-1] == 'E')))\n \t  error (\"missing white space after number `%s'\", token_buffer);\n@@ -1923,7 +1923,7 @@ yylex ()\n \t\t    && (unsigned) c >= (1 << width))\n \t\t  pedwarn (\"escape sequence out of range for character\");\n #ifdef MAP_CHARACTER\n-\t\tif (isprint (c))\n+\t\tif (ISPRINT (c))\n \t\t  c = MAP_CHARACTER (c);\n #endif\n \t      }"}, {"sha": "e0674df045cb28b2f9f1c5f25d844825ac41802f", "filename": "gcc/cccp.c", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "patch": "@@ -1750,15 +1750,15 @@ main (argc, argv)\n \n \tif (*vers == 'V')\n \t  vers++;\n-\tif (isdigit (*vers))\n+\tif (ISDIGIT (*vers))\n \t  {\n \t    vms_version_value = (*vers - '0') * 10000000;\n \t  }\n \tvers++;\n \tif (*vers == '.')\n \t  {\n \t    vers++;\n-\t    if (isdigit (*vers))\n+\t    if (ISDIGIT (*vers))\n \t      {\n \t\tvms_version_value += (*vers - '0') * 100000;\n \t      }\n@@ -2503,10 +2503,10 @@ get_lintcmd (ibp, limit, argstart, arglen, cmdlen)\n   if ((linsize >= 7) && !bcmp (ibp, \"VARARGS\", 7)) {\n     *cmdlen = 7;\n     ibp += 7; linsize -= 7;\n-    if ((linsize == 0) || ! isdigit (*ibp)) return \"VARARGS\";\n+    if ((linsize == 0) || ! ISDIGIT (*ibp)) return \"VARARGS\";\n \n     /* OK, read a number */\n-    for (numptr = *argstart = ibp; (numptr < limit) && isdigit (*numptr);\n+    for (numptr = *argstart = ibp; (numptr < limit) && ISDIGIT (*numptr);\n \t numptr++);\n     *arglen = numptr - *argstart;\n     return \"VARARGS\";\n@@ -4378,8 +4378,10 @@ do_include (buf, limit, op, keyword)\n      * code from case '<' is repeated here) and generates a warning.\n      * (Note: macro expansion of `xyz' takes precedence.)\n      */\n-    if (retried && isalpha(*(U_CHAR *) (--fbeg))) {\n-      while (fin != limit && (!isspace(*fin)))\n+    /* Note: The argument of ISALPHA() can be evaluated twice, so do\n+       the pre-decrement outside of the macro. */\n+    if (retried && (--fbeg, ISALPHA(*(U_CHAR *) (fbeg)))) {\n+      while (fin != limit && (!ISSPACE(*fin)))\n \t*fend++ = *fin++;\n       warning (\"VAX-C-style include specification found, use '#include <filename.h>' !\");\n       vaxc_include = 1;\n@@ -4673,7 +4675,7 @@ base_name (fname)\n   char *s = fname;\n   char *p;\n #if defined (__MSDOS__) || defined (_WIN32)\n-  if (isalpha (s[0]) && s[1] == ':') s += 2;\n+  if (ISALPHA (s[0]) && s[1] == ':') s += 2;\n #endif\n #ifdef VMS\n   if ((p = rindex (s, ':'))) s = p + 1;\t/* Skip device.  */\n@@ -4696,11 +4698,11 @@ absolute_filename (filename)\n      char *filename;\n {\n #if defined (__MSDOS__) || (defined (_WIN32) && !defined (__CYGWIN32__))\n-  if (isalpha (filename[0]) && filename[1] == ':') filename += 2;\n+  if (ISALPHA (filename[0]) && filename[1] == ':') filename += 2;\n #endif\n #if defined (__CYGWIN32__)\n   /* At present, any path that begins with a drive spec is absolute.  */\n-  if (isalpha (filename[0]) && filename[1] == ':') return 1;\n+  if (ISALPHA (filename[0]) && filename[1] == ':') return 1;\n #endif\n   if (filename[0] == '/') return 1;\n #ifdef DIR_SEPARATOR\n@@ -6628,7 +6630,7 @@ do_line (buf, limit, op, keyword)\n   bp = tem.buf;\n   SKIP_WHITE_SPACE (bp);\n \n-  if (!isdigit (*bp)) {\n+  if (!ISDIGIT (*bp)) {\n     error (\"invalid format `#line' directive\");\n     return 0;\n   }\n@@ -6643,7 +6645,7 @@ do_line (buf, limit, op, keyword)\n     pedwarn (\"line number out of range in `#line' directive\");\n \n   /* skip over the line number.  */\n-  while (isdigit (*bp))\n+  while (ISDIGIT (*bp))\n     bp++;\n \n #if 0 /* #line 10\"foo.c\" is supposed to be allowed.  */\n@@ -7128,7 +7130,7 @@ do_xifdef (buf, limit, op, keyword)\n     HASHNODE *hp;\n \n     if (! traditional) {\n-      if (isdigit (buf[0]))\n+      if (ISDIGIT (buf[0]))\n \tpedwarn (\"`#%s' argument starts with a digit\", keyword->name);\n       else if (end != limit)\n \tpedwarn (\"garbage at end of `#%s' argument\", keyword->name);\n@@ -7871,7 +7873,7 @@ quote_string (dst, src, srclen)\n     switch ((c = *src++))\n       {\n       default:\n-        if (isprint (c))\n+        if (ISPRINT (c))\n \t  *dst++ = c;\n \telse\n \t  {"}, {"sha": "0cba7ef144b1e14b709eee58d3fc26ce56241b1c", "filename": "gcc/collect2.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "patch": "@@ -565,7 +565,7 @@ dump_file (name)\n     {\n       int c;\n       while (c = getc (stream),\n-\t     c != EOF && (isalnum (c) || c == '_' || c == '$' || c == '.'))\n+\t     c != EOF && (ISALNUM (c) || c == '_' || c == '$' || c == '.'))\n \tobstack_1grow (&temporary_obstack, c);\n       if (obstack_object_size (&temporary_obstack) > 0)\n \t{\n@@ -1853,7 +1853,7 @@ write_c_file_stat (stream, name)\n   strncpy (prefix, p, q - p);\n   prefix[q - p] = 0;\n   for (q = prefix; *q; q++)\n-    if (!isalnum (*q))\n+    if (!ISALNUM (*q))\n       *q = '_';\n   if (debug)\n     fprintf (stderr, \"\\nwrite_c_file - output name is %s, prefix is %s\\n\",\n@@ -2169,7 +2169,7 @@ scan_prog_file (prog_name, which_pass)\n       name = p;\n       /* Find the end of the symbol name.\n \t Do not include `|', because Encore nm can tack that on the end.  */\n-      for (end = p; (ch2 = *end) != '\\0' && !isspace (ch2) && ch2 != '|';\n+      for (end = p; (ch2 = *end) != '\\0' && !ISSPACE (ch2) && ch2 != '|';\n \t   end++)\n \tcontinue;\n \n@@ -2303,7 +2303,7 @@ libcompare (d1, d2)\n   char *e2 = (*d2)->d_name + i2;\n \n   while (*e1 && *e2 && *e1 == '.' && *e2 == '.'\n-\t && e1[1] && isdigit (e1[1]) && e2[1] && isdigit (e2[1]))\n+\t && e1[1] && ISDIGIT (e1[1]) && e2[1] && ISDIGIT (e2[1]))\n     {\n       ++e1;\n       ++e2;\n@@ -2316,7 +2316,7 @@ libcompare (d1, d2)\n   if (*e1)\n     {\n       /* It has a valid numeric extension, prefer this one.  */\n-      if (*e1 == '.' && e1[1] && isdigit (e1[1]))\n+      if (*e1 == '.' && e1[1] && ISDIGIT (e1[1]))\n \treturn 1;\n       /* It has a invalid numeric extension, must prefer the other one.  */\n       else\n@@ -2325,7 +2325,7 @@ libcompare (d1, d2)\n   else if (*e2)\n     {\n       /* It has a valid numeric extension, prefer this one.  */\n-      if (*e2 == '.' && e2[1] && isdigit (e2[1]))\n+      if (*e2 == '.' && e2[1] && ISDIGIT (e2[1]))\n \treturn -1;\n       /* It has a invalid numeric extension, must prefer the other one.  */\n       else\n@@ -2609,7 +2609,7 @@ scan_libraries (prog_name)\n \n       /* Find the end of the symbol name.  */\n       for (end = p; \n-\t   (ch2 = *end) != '\\0' && ch2 != '\\n' && !isspace (ch2) && ch2 != '|';\n+\t   (ch2 = *end) != '\\0' && ch2 != '\\n' && !ISSPACE (ch2) && ch2 != '|';\n \t   end++)\n \tcontinue;\n       *end = '\\0';"}, {"sha": "7d4d1f1029496a41445f4f9d51d2ea7bd0459bf9", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "patch": "@@ -4450,7 +4450,7 @@ rs6000_gen_section_name (buf, filename, section_desc)\n \t  p += strlen (section_desc);\n         }\n \n-      else if (isalnum (*q))\n+      else if (ISALNUM (*q))\n         *p++ = *q;\n     }\n "}, {"sha": "5eec64ce06a565778fa506efc8e7a38b21eb0f7e", "filename": "gcc/cpplib.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "patch": "@@ -463,7 +463,7 @@ quote_string (pfile, src)\n     switch ((c = *src++))\n       {\n       default:\n-        if (isprint (c))\n+        if (ISPRINT (c))\n \t  CPP_PUTC_Q (pfile, c);\n \telse\n \t  {\n@@ -2770,7 +2770,7 @@ macroexpand (pfile, hp)\n \t\t      /* Escape these chars */\n \t\t      if (c == '\\\"' || (in_string && c == '\\\\'))\n \t\t\tCPP_PUTC (pfile, '\\\\');\n-\t\t      if (isprint (c))\n+\t\t      if (ISPRINT (c))\n \t\t\tCPP_PUTC (pfile, c);\n \t\t      else\n \t\t\t{\n@@ -3683,7 +3683,7 @@ do_line (pfile, keyword)\n   token = get_directive_token (pfile);\n \n   if (token != CPP_NUMBER\n-      || !isdigit(pfile->token_buffer[old_written]))\n+      || !ISDIGIT(pfile->token_buffer[old_written]))\n     {\n       cpp_error (pfile, \"invalid format `#line' command\");\n       goto bad_line_directive;\n@@ -4920,7 +4920,7 @@ cpp_get_token (pfile)\n \tcase '.':\n \t  NEWLINE_FIX;\n \t  c2 = PEEKC ();\n-\t  if (isdigit(c2))\n+\t  if (ISDIGIT(c2))\n \t    {\n \t      CPP_RESERVE(pfile, 2);\n \t      CPP_PUTC_Q (pfile, '.');"}, {"sha": "3456e531c13888cd8b676480b5af0c02312270aa", "filename": "gcc/fix-header.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Ffix-header.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Ffix-header.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffix-header.c?ref=e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "patch": "@@ -956,13 +956,13 @@ inf_scan_ident (s, c)\n      int c;\n {\n   s->ptr = s->base;\n-  if (isalpha (c) || c == '_')\n+  if (ISALPHA (c) || c == '_')\n     {\n       for (;;)\n \t{\n \t  SSTRING_PUT (s, c);\n \t  c = INF_GET ();\n-\t  if (c == EOF || !(isalnum (c) || c == '_'))\n+\t  if (c == EOF || !(ISALNUM (c) || c == '_'))\n \t    break;\n \t}\n     }\n@@ -1273,7 +1273,7 @@ main (argc, argv)\n \t  c = INF_GET ();\n \t  if (c == EOF)\n \t    break;\n-\t  if (isalpha (c) || c == '_')\n+\t  if (ISALPHA (c) || c == '_')\n \t    {\n \t      c = inf_scan_ident (&buf, c);\n \t      (void) INF_UNGET (c);"}, {"sha": "57f2f0fa982e340940d480fdb2a24769da9b42f7", "filename": "gcc/gcc.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "patch": "@@ -2768,21 +2768,21 @@ process_command (argc, argv)\n \t\tchar *v = compiler_version;\n \n \t\t/* Ignore leading non-digits.  i.e. \"foo-\" in \"foo-2.7.2\".  */\n-\t\twhile (! isdigit (*v))\n+\t\twhile (! ISDIGIT (*v))\n \t\t  v++;\n \n \t\tif (v > compiler_version && v[-1] != '-')\n \t\t  fatal (\"invalid version number format\");\n \n \t\t/* Set V after the first period.  */\n-\t\twhile (isdigit (*v))\n+\t\twhile (ISDIGIT (*v))\n \t\t  v++;\n \n \t\tif (*v != '.')\n \t\t  fatal (\"invalid version number format\");\n \n \t\tv++;\n-\t\twhile (isdigit (*v))\n+\t\twhile (ISDIGIT (*v))\n \t\t  v++;\n \n \t\tif (*v != 0 && *v != ' ' && *v != '.' && *v != '-')"}, {"sha": "f423b3ff86e7ee8ae859bb047c4858ff339b8be8", "filename": "gcc/gen-protos.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fgen-protos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fgen-protos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgen-protos.c?ref=e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "patch": "@@ -109,7 +109,7 @@ parse_fn_proto (start, end, fn)\n   ptr--;\n   while (*ptr == ' ' || *ptr == '\\t') ptr--;\n \n-  if (!isalnum (*ptr))\n+  if (!ISALNUM (*ptr))\n     {\n       if (verbose)\n \tfprintf (stderr, \"%s: Can't handle this complex prototype: %s\\n\",\n@@ -118,7 +118,7 @@ parse_fn_proto (start, end, fn)\n     }\n   name_end = ptr+1;\n \n-  while (isalnum (*ptr) || *ptr == '_') --ptr;\n+  while (ISALNUM (*ptr) || *ptr == '_') --ptr;\n   name_start = ptr+1;\n   while (*ptr == ' ' || *ptr == '\\t') ptr--;\n   ptr[1] = 0;"}, {"sha": "29148159202a930f86ac7d7e585c2e6f7cee3d0b", "filename": "gcc/pexecute.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fpexecute.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fpexecute.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpexecute.c?ref=e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "patch": "@@ -165,7 +165,7 @@ pexecute (program, argv, this_pname, temp_base, errmsg_fmt, errmsg_arg, flags)\n       char *cp;\n       for (cp = argv[i]; *cp; cp++)\n \t{\n-\t  if (*cp == '\"' || *cp == '\\'' || *cp == '\\\\' || isspace (*cp))\n+\t  if (*cp == '\"' || *cp == '\\'' || *cp == '\\\\' || ISSPACE (*cp))\n \t    fputc ('\\\\', argfile);\n \t  fputc (*cp, argfile);\n \t}"}, {"sha": "4b5b13f3a4282733e7093b5890b8c8ef2d2bc414", "filename": "gcc/protoize.c", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "patch": "@@ -845,7 +845,7 @@ static int\n is_id_char (ch)\n      char ch;\n {\n-  return (isalnum (ch) || (ch == '_') || (ch == '$'));\n+  return (ISALNUM (ch) || (ch == '_') || (ch == '$'));\n }\n \n /* Give a message indicating the proper way to invoke this program and then\n@@ -2021,12 +2021,12 @@ munge_compile_params (params_list)\n   temp_params[param_count++] = compiler_file_name;\n   for (;;)\n     {\n-      while (isspace (*params_list))\n+      while (ISSPACE (*params_list))\n         params_list++;\n       if (!*params_list)\n         break;\n       param = params_list;\n-      while (*params_list && !isspace (*params_list))\n+      while (*params_list && !ISSPACE (*params_list))\n         params_list++;\n       if (param[0] != '-')\n         temp_params[param_count++]\n@@ -2041,9 +2041,9 @@ munge_compile_params (params_list)\n               case 'c':\n                 break;\t\t/* Don't copy these.  */\n               case 'o':\n-                while (isspace (*params_list))\n+                while (ISSPACE (*params_list))\n                   params_list++;\n-                while (*params_list && !isspace (*params_list))\n+                while (*params_list && !ISSPACE (*params_list))\n                   params_list++;\n                 break;\n               default:\n@@ -2974,7 +2974,7 @@ static const char *\n forward_to_next_token_char (ptr)\n      const char *ptr;\n {\n-  for (++ptr; isspace (*ptr); check_source (++ptr < clean_text_limit, 0))\n+  for (++ptr; ISSPACE (*ptr); check_source (++ptr < clean_text_limit, 0))\n     continue;\n   return ptr;\n }\n@@ -3342,7 +3342,7 @@ edit_formals_lists (end_formals, f_list_count, def_dec_p)\n \n       next_end = start_formals - 1;\n       check_source (next_end > clean_read_ptr, 0);\n-      while (isspace (*next_end))\n+      while (ISSPACE (*next_end))\n         check_source (--next_end > clean_read_ptr, 0);\n       check_source (*next_end == ')', next_end);\n       check_source (--next_end > clean_read_ptr, 0);\n@@ -3362,7 +3362,7 @@ edit_formals_lists (end_formals, f_list_count, def_dec_p)\n       const char *func_name_limit;\n       size_t func_name_len;\n \n-      for (func_name_limit = start_formals-1; isspace (*func_name_limit); )\n+      for (func_name_limit = start_formals-1; ISSPACE (*func_name_limit); )\n         check_source (--func_name_limit > clean_read_ptr, 0);\n \n       for (func_name_start = func_name_limit++;\n@@ -3458,8 +3458,8 @@ find_rightmost_formals_list (clean_text_p)\n \n     while (*end_formals != ')')\n       {\n-\tif (isspace (*end_formals))\n-\t  while (isspace (*end_formals))\n+\tif (ISSPACE (*end_formals))\n+\t  while (ISSPACE (*end_formals))\n \t    check_source (--end_formals > clean_read_ptr, 0);\n \telse\n \t  check_source (--end_formals > clean_read_ptr, 0);\n@@ -3488,8 +3488,8 @@ find_rightmost_formals_list (clean_text_p)\n \n       while (*end_formals != ')')\n         {\n-          if (isspace (*end_formals))\n-            while (isspace (*end_formals))\n+          if (ISSPACE (*end_formals))\n+            while (ISSPACE (*end_formals))\n               check_source (--end_formals > clean_read_ptr, 0);\n           else\n             check_source (--end_formals > clean_read_ptr, 0);\n@@ -3507,7 +3507,7 @@ find_rightmost_formals_list (clean_text_p)\n          by an alphabetic character, while others *cannot* validly be followed\n          by such characters.  */\n \n-      if ((ch == '{') || isalpha (ch))\n+      if ((ch == '{') || ISALPHA (ch))\n         break;\n \n       /* At this point, we have found a right paren, but we know that it is\n@@ -3603,7 +3603,7 @@ add_local_decl (def_dec_p, clean_text_p)\n        We can now just scan backwards and find the left end of the existing\n        indentation string, and then copy it to the output buffer.  */\n \n-    for (sp = ep; isspace (*sp) && *sp != '\\n'; sp--)\n+    for (sp = ep; ISSPACE (*sp) && *sp != '\\n'; sp--)\n       continue;\n \n     /* Now write out the open { which began this block, and any following\n@@ -3684,7 +3684,7 @@ add_global_decls (file_p, clean_text_p)\n      header.  We will put in the added declarations just prior to that.  */\n \n   scan_p++;\n-  while (isspace (*scan_p))\n+  while (ISSPACE (*scan_p))\n     scan_p++;\n   scan_p--;\n \n@@ -3853,7 +3853,7 @@ edit_fn_definition (def_dec_p, clean_text_p)\n           {\n             have_newlines |= (*scan_orig == '\\n');\n             /* Leave identical whitespace alone.  */\n-            if (!isspace (*scan_orig))\n+            if (!ISSPACE (*scan_orig))\n               *((NONCONST char *)scan_orig) = ' '; /* identical - so whiteout */\n           }\n         else\n@@ -3897,7 +3897,7 @@ do_cleaning (new_clean_text_base, new_clean_text_limit)\n             scan_p += 2;\n             while (scan_p[1] != '/' || scan_p[0] != '*')\n               {\n-                if (!isspace (*scan_p))\n+                if (!ISSPACE (*scan_p))\n                   *scan_p = ' ';\n                 if (++scan_p >= new_clean_text_limit)\n                   abort ();\n@@ -3912,7 +3912,7 @@ do_cleaning (new_clean_text_base, new_clean_text_limit)\n             *scan_p = ' ';\n             while (scan_p[1] != '\\n' || scan_p[0] == '\\\\')\n               {\n-                if (!isspace (*scan_p))\n+                if (!ISSPACE (*scan_p))\n                   *scan_p = ' ';\n                 if (++scan_p >= new_clean_text_limit)\n                   abort ();\n@@ -3924,9 +3924,9 @@ do_cleaning (new_clean_text_base, new_clean_text_limit)\n             non_whitespace_since_newline = 1;\n             while (scan_p[1] != '\\'' || scan_p[0] == '\\\\')\n               {\n-                if (scan_p[0] == '\\\\' && !isspace (scan_p[1]))\n+                if (scan_p[0] == '\\\\' && !ISSPACE (scan_p[1]))\n                   scan_p[1] = ' ';\n-                if (!isspace (*scan_p))\n+                if (!ISSPACE (*scan_p))\n                   *scan_p = ' ';\n                 if (++scan_p >= new_clean_text_limit)\n                   abort ();\n@@ -3938,14 +3938,14 @@ do_cleaning (new_clean_text_base, new_clean_text_limit)\n             non_whitespace_since_newline = 1;\n             while (scan_p[1] != '\"' || scan_p[0] == '\\\\')\n               {\n-                if (scan_p[0] == '\\\\' && !isspace (scan_p[1]))\n+                if (scan_p[0] == '\\\\' && !ISSPACE (scan_p[1]))\n                   scan_p[1] = ' ';\n-                if (!isspace (*scan_p))\n+                if (!ISSPACE (*scan_p))\n                   *scan_p = ' ';\n                 if (++scan_p >= new_clean_text_limit)\n                   abort ();\n               }\n-\t    if (!isspace (*scan_p))\n+\t    if (!ISSPACE (*scan_p))\n \t      *scan_p = ' ';\n \t    scan_p++;\n             break;\n@@ -4038,12 +4038,12 @@ scan_for_missed_items (file_p)\n \n           last_r_paren = scan_p;\n \n-          for (ahead_p = scan_p + 1; isspace (*ahead_p); )\n+          for (ahead_p = scan_p + 1; ISSPACE (*ahead_p); )\n             check_source (++ahead_p < limit, limit);\n \n           scan_p = ahead_p - 1;\n \n-          if (isalpha (*ahead_p) || *ahead_p == '{')\n+          if (ISALPHA (*ahead_p) || *ahead_p == '{')\n             {\n               const char *last_l_paren;\n               const int lineno = identify_lineno (ahead_p);\n@@ -4057,7 +4057,7 @@ scan_for_missed_items (file_p)\n               do\n                 {\n                   last_l_paren = careful_find_l_paren (last_r_paren);\n-                  for (last_r_paren = last_l_paren-1; isspace (*last_r_paren); )\n+                  for (last_r_paren = last_l_paren-1; ISSPACE (*last_r_paren); )\n                     check_source (--last_r_paren >= backup_limit, backup_limit);\n                 }\n               while (*last_r_paren == ')');\n@@ -4696,7 +4696,7 @@ main (argc, argv)\n   {\n     const char *cp;\n \n-    for (cp = varargs_style_indicator; isalnum (*cp) || *cp == '_'; cp++)\n+    for (cp = varargs_style_indicator; ISALNUM (*cp) || *cp == '_'; cp++)\n       continue;\n     if (*cp != 0)\n       varargs_style_indicator = savestring (varargs_style_indicator,"}, {"sha": "712a9c5cc53bc44ebf64612e4d339735174c6649", "filename": "gcc/rtl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Frtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Frtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.c?ref=e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "patch": "@@ -561,15 +561,15 @@ atoll(p)\n   int neg = 0;\n   HOST_WIDE_INT tmp_wide;\n \n-  while (isspace(*p))\n+  while (ISSPACE(*p))\n     p++;\n   if (*p == '-')\n     neg = 1, p++;\n   else if (*p == '+')\n     p++;\n \n   tmp_wide = 0;\n-  while (isdigit(*p))\n+  while (ISDIGIT(*p))\n     {\n       HOST_WIDE_INT new_wide = tmp_wide*10 + (*p - '0');\n       if (new_wide < tmp_wide)"}, {"sha": "63e24708ff63fb11a8d8333bcc0fb218772d7920", "filename": "gcc/scan.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fscan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fscan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fscan.c?ref=e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "patch": "@@ -65,13 +65,13 @@ scan_ident (fp, s, c)\n      int c;\n {\n   s->ptr = s->base;\n-  if (isalpha(c) || c == '_')\n+  if (ISALPHA(c) || c == '_')\n     {\n       for (;;)\n \t{\n \t  SSTRING_PUT(s, c);\n \t  c = getc (fp);\n-\t  if (c == EOF || !(isalnum(c) || c == '_'))\n+\t  if (c == EOF || !(ISALNUM(c) || c == '_'))\n \t    break;\n \t}\n     }\n@@ -210,18 +210,18 @@ get_token (fp, s)\n     }\n   if (c == EOF)\n     return EOF;\n-  if (isdigit (c))\n+  if (ISDIGIT (c))\n     {\n       do\n \t{\n \t  SSTRING_PUT(s, c);\n \t  c = getc (fp);\n-\t} while (c != EOF && isdigit(c));\n+\t} while (c != EOF && ISDIGIT(c));\n       ungetc (c, fp);\n       c = INT_TOKEN;\n       goto done;\n     }\n-  if (isalpha (c) || c == '_')\n+  if (ISALPHA (c) || c == '_')\n     {\n       c = scan_ident (fp, s, c);\n       ungetc (c, fp);"}, {"sha": "98688aa9e557d4ebf0736b77a36e1f41688599c5", "filename": "gcc/stmt.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "patch": "@@ -5055,11 +5055,11 @@ estimate_case_costs (node)\n \n       for (i = 0; i < 128; i++)\n \t{\n-\t  if (isalnum (i))\n+\t  if (ISALNUM (i))\n \t    cost_table[i] = 16;\n-\t  else if (ispunct (i))\n+\t  else if (ISPUNCT (i))\n \t    cost_table[i] = 8;\n-\t  else if (iscntrl (i))\n+\t  else if (ISCNTRL (i))\n \t    cost_table[i] = -1;\n \t}\n "}, {"sha": "d5fa00cb6687c3b12728c9e662dd90fbfabeda8b", "filename": "gcc/tlink.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Ftlink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Ftlink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftlink.c?ref=e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "patch": "@@ -530,13 +530,13 @@ scan_linker_output (fname)\n       symbol *sym;\n       int end;\n       \n-      while (*p && isspace (*p))\n+      while (*p && ISSPACE (*p))\n \t++p;\n \n       if (! *p)\n \tcontinue;\n \n-      for (q = p; *q && ! isspace (*q); ++q)\n+      for (q = p; *q && ! ISSPACE (*q); ++q)\n \t;\n \n       /* Try the first word on the line.  */"}, {"sha": "eabff92640159df1a252c79fff54cd2d84ddedeb", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=e9a780ecec4639ab0e2975a53c08e4dcfd7fafc2", "patch": "@@ -1344,7 +1344,7 @@ v_message_with_decl (decl, prefix, s, ap)\n       while (*p)\n \t{\n \t  ++p;\n-\t  if (isalpha (*(p - 1) & 0xFF))\n+\t  if (ISALPHA (*(p - 1) & 0xFF))\n \t    break;\n \t}\n     }"}]}