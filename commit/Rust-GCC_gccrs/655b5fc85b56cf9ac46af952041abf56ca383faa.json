{"sha": "655b5fc85b56cf9ac46af952041abf56ca383faa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU1YjVmYzg1YjU2Y2Y5YWM0NmFmOTUyMDQxYWJmNTZjYTM4M2ZhYQ==", "commit": {"author": {"name": "Andre Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2017-05-05T15:41:28Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2017-05-05T15:41:28Z"}, "message": "[ARM] PR71607: Fix ICE when loading constant\n\n2017-05-05  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n            Prakhar Bahuguna  <prakhar.bahuguna@arm.com>\n\n    gcc/\n    PR target/71607\n    * config/arm/arm.md (use_literal_pool): Remove.\n    (64-bit immediate split): No longer takes cost into consideration\n    if arm_disable_literal_pool is enabled.\n    * config/arm/arm.c (arm_tls_referenced_p): Add diagnostic if TLS is\n    used when arm_disable_literal_pool is enabled.\n    (arm_max_const_double_inline_cost): Remove use of\n    arm_disable_literal_pool.\n    (push_minipool_fix): Add assert.\n    (arm_reorg): Add return if arm_disable_literal_pool is enabled.\n    * config/arm/vfp.md (no_literal_pool_df_immediate): New.\n    (no_literal_pool_sf_immediate): New.\n\n2017-05-05  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n        Thomas Preud'homme  <thomas.preudhomme@arm.com>\n        Prakhar Bahuguna  <prakhar.bahuguna@arm.com>\n\n    gcc/testsuite/\n    PR target/71607\n    * gcc.target/arm/thumb2-slow-flash-data.c: Renamed to ...\n    * gcc.target/arm/thumb2-slow-flash-data-1.c: ... this.\n    * gcc.target/arm/thumb2-slow-flash-data-2.c: New.\n    * gcc.target/arm/thumb2-slow-flash-data-3.c: New.\n    * gcc.target/arm/thumb2-slow-flash-data-4.c: New.\n    * gcc.target/arm/thumb2-slow-flash-data-5.c: New.\n    * gcc.target/arm/tls-disable-literal-pool.c: New.\n\nCo-Authored-By: Prakhar Bahuguna <prakhar.bahuguna@arm.com>\nCo-Authored-By: Thomas Preud'homme <thomas.preudhomme@arm.com>\n\nFrom-SVN: r247640", "tree": {"sha": "6c70cf286921835cf7edecf7e0e20bb126b8d15e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c70cf286921835cf7edecf7e0e20bb126b8d15e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/655b5fc85b56cf9ac46af952041abf56ca383faa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/655b5fc85b56cf9ac46af952041abf56ca383faa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/655b5fc85b56cf9ac46af952041abf56ca383faa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/655b5fc85b56cf9ac46af952041abf56ca383faa/comments", "author": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b6263c5df20b4ab1e4b88b95bde37d836b47dfc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6263c5df20b4ab1e4b88b95bde37d836b47dfc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6263c5df20b4ab1e4b88b95bde37d836b47dfc9"}], "stats": {"total": 204, "additions": 193, "deletions": 11}, "files": [{"sha": "ff1d4996df19cd03d62ada6b17a4fa66364592f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=655b5fc85b56cf9ac46af952041abf56ca383faa", "patch": "@@ -1,3 +1,19 @@\n+2017-05-05  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Prakhar Bahuguna  <prakhar.bahuguna@arm.com>\n+\n+\tPR target/71607\n+\t* config/arm/arm.md (use_literal_pool): Remove.\n+\t(64-bit immediate split): No longer takes cost into consideration\n+\tif arm_disable_literal_pool is enabled.\n+\t* config/arm/arm.c (arm_tls_referenced_p): Add diagnostic if TLS is\n+\tused when arm_disable_literal_pool is enabled.\n+\t(arm_max_const_double_inline_cost): Remove use of\n+\tarm_disable_literal_pool.\n+\t(push_minipool_fix): Add assert.\n+\t(arm_reorg): Add return if arm_disable_literal_pool is enabled.\n+\t* config/arm/vfp.md (no_literal_pool_df_immediate): New.\n+\t(no_literal_pool_sf_immediate): New.\n+\n 2017-05-05  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \tPR tree-optimization/80613"}, {"sha": "55bfcd227888df67ea1945369169c2c4ff0f467a", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=655b5fc85b56cf9ac46af952041abf56ca383faa", "patch": "@@ -8691,7 +8691,16 @@ arm_tls_referenced_p (rtx x)\n     {\n       const_rtx x = *iter;\n       if (GET_CODE (x) == SYMBOL_REF && SYMBOL_REF_TLS_MODEL (x) != 0)\n-\treturn true;\n+\t{\n+\t  /* ARM currently does not provide relocations to encode TLS variables\n+\t     into AArch32 instructions, only data, so there is no way to\n+\t     currently implement these if a literal pool is disabled.  */\n+\t  if (arm_disable_literal_pool)\n+\t    sorry (\"accessing thread-local storage is not currently supported \"\n+\t\t   \"with -mpure-code or -mslow-flash-data\");\n+\n+\t  return true;\n+\t}\n \n       /* Don't recurse into UNSPEC_TLS looking for TLS symbols; these are\n \t TLS offsets, not real symbol references.  */\n@@ -16399,6 +16408,7 @@ static void\n push_minipool_fix (rtx_insn *insn, HOST_WIDE_INT address, rtx *loc,\n \t\t   machine_mode mode, rtx value)\n {\n+  gcc_assert (!arm_disable_literal_pool);\n   Mfix * fix = (Mfix *) obstack_alloc (&minipool_obstack, sizeof (* fix));\n \n   fix->insn = insn;\n@@ -16450,10 +16460,6 @@ push_minipool_fix (rtx_insn *insn, HOST_WIDE_INT address, rtx *loc,\n int\n arm_max_const_double_inline_cost ()\n {\n-  /* Let the value get synthesized to avoid the use of literal pools.  */\n-  if (arm_disable_literal_pool)\n-    return 99;\n-\n   return ((optimize_size || arm_ld_sched) ? 3 : 4);\n }\n \n@@ -17400,6 +17406,11 @@ arm_reorg (void)\n   if (!optimize)\n     split_all_insns_noflow ();\n \n+  /* Make sure we do not attempt to create a literal pool even though it should\n+     no longer be necessary to create any.  */\n+  if (arm_disable_literal_pool)\n+    return ;\n+\n   minipool_fix_head = minipool_fix_tail = NULL;\n \n   /* The first insn must always be a note, or the code below won't"}, {"sha": "4a2b623e528256835958a510e2d32628477cb680", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=655b5fc85b56cf9ac46af952041abf56ca383faa", "patch": "@@ -233,10 +233,6 @@\n \t       (match_test \"arm_restrict_it\"))\n \t  (const_string \"no\")\n \n-\t  (and (eq_attr \"use_literal_pool\" \"yes\")\n-\t       (match_test \"arm_disable_literal_pool\"))\n-\t  (const_string \"no\")\n-\n \t  (eq_attr \"arch_enabled\" \"no\")\n \t  (const_string \"no\")]\n \t (const_string \"yes\")))\n@@ -5878,8 +5874,9 @@\n \t(match_operand:ANY64 1 \"immediate_operand\" \"\"))]\n   \"TARGET_32BIT\n    && reload_completed\n-   && (arm_const_double_inline_cost (operands[1])\n-       <= arm_max_const_double_inline_cost ())\"\n+   && (arm_disable_literal_pool\n+       || (arm_const_double_inline_cost (operands[1])\n+\t   <= arm_max_const_double_inline_cost ()))\"\n   [(const_int 0)]\n   \"\n   arm_split_constant (SET, SImode, curr_insn,"}, {"sha": "d8f77e2ffe4fdb7c952d6a5ac947d91f89ce259d", "filename": "gcc/config/arm/vfp.md", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Fconfig%2Farm%2Fvfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Fconfig%2Farm%2Fvfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp.md?ref=655b5fc85b56cf9ac46af952041abf56ca383faa", "patch": "@@ -2079,3 +2079,40 @@\n ;; fmdhr et al (VFPv1)\n ;; Support for xD (single precision only) variants.\n ;; fmrrs, fmsrr\n+\n+;; Split an immediate DF move to two immediate SI moves.\n+(define_insn_and_split \"no_literal_pool_df_immediate\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"\")\n+\t(match_operand:DF 1 \"const_double_operand\" \"\"))]\n+  \"TARGET_THUMB2 && arm_disable_literal_pool\n+  && !(TARGET_HARD_FLOAT && TARGET_VFP_DOUBLE\n+       && vfp3_const_double_rtx (operands[1]))\"\n+  \"#\"\n+  \"&& !reload_completed\"\n+  [(set (subreg:SI (match_dup 1) 0) (match_dup 2))\n+   (set (subreg:SI (match_dup 1) 4) (match_dup 3))\n+   (set (match_dup 0) (match_dup 1))]\n+  \"\n+  long buf[2];\n+  real_to_target (buf, CONST_DOUBLE_REAL_VALUE (operands[1]), DFmode);\n+  operands[2] = GEN_INT ((int) buf[0]);\n+  operands[3] = GEN_INT ((int) buf[1]);\n+  operands[1] = gen_reg_rtx (DFmode);\n+  \")\n+\n+;; Split an immediate SF move to one immediate SI move.\n+(define_insn_and_split \"no_literal_pool_sf_immediate\"\n+  [(set (match_operand:SF 0 \"s_register_operand\" \"\")\n+\t(match_operand:SF 1 \"const_double_operand\" \"\"))]\n+  \"TARGET_THUMB2 && arm_disable_literal_pool\n+  && !(TARGET_HARD_FLOAT && vfp3_const_double_rtx (operands[1]))\"\n+  \"#\"\n+  \"&& !reload_completed\"\n+  [(set (subreg:SI (match_dup 1) 0) (match_dup 2))\n+   (set (match_dup 0) (match_dup 1))]\n+  \"\n+  long buf;\n+  real_to_target (&buf, CONST_DOUBLE_REAL_VALUE (operands[1]), SFmode);\n+  operands[2] = GEN_INT ((int) buf);\n+  operands[1] = gen_reg_rtx (SFmode);\n+  \")"}, {"sha": "8606518de582d2bbc1b54dcd62f5dbe574c32047", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=655b5fc85b56cf9ac46af952041abf56ca383faa", "patch": "@@ -1,3 +1,16 @@\n+2017-05-05  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\t    Prakhar Bahuguna  <prakhar.bahuguna@arm.com>\n+\n+\tPR target/71607\n+\t* gcc.target/arm/thumb2-slow-flash-data.c: Renamed to ...\n+\t* gcc.target/arm/thumb2-slow-flash-data-1.c: ... this.\n+\t* gcc.target/arm/thumb2-slow-flash-data-2.c: New.\n+\t* gcc.target/arm/thumb2-slow-flash-data-3.c: New.\n+\t* gcc.target/arm/thumb2-slow-flash-data-4.c: New.\n+\t* gcc.target/arm/thumb2-slow-flash-data-5.c: New.\n+\t* gcc.target/arm/tls-disable-literal-pool.c: New.\n+\n 2017-05-05  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \tPR tree-optimization/80613"}, {"sha": "089a72b67f3af570dbbed248a64a18b8b4e89ba4", "filename": "gcc/testsuite/gcc.target/arm/thumb2-slow-flash-data-1.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-1.c?ref=655b5fc85b56cf9ac46af952041abf56ca383faa", "previous_filename": "gcc/testsuite/gcc.target/arm/thumb2-slow-flash-data.c"}, {"sha": "6e76043daeeab51bdac1052edc48502793cf4462", "filename": "gcc/testsuite/gcc.target/arm/thumb2-slow-flash-data-2.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-2.c?ref=655b5fc85b56cf9ac46af952041abf56ca383faa", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_cortex_m } */\n+/* { dg-require-effective-target arm_thumb2_ok } */\n+/* { dg-skip-if \"avoid conflicts with multilib options\" { *-*-* } { \"-mcpu=*\" } { \"-mcpu=cortex-m4\" \"-mcpu=cortex-m7\" } } */\n+/* { dg-skip-if \"do not override -mfloat-abi\" { *-*-* } { \"-mfloat-abi=*\" } { \"-mfloat-abi=hard\" } } */\n+/* { dg-options \"-march=armv7e-m -mfloat-abi=hard -O2 -mthumb -mslow-flash-data\" } */\n+\n+float f (float);\n+\n+const float max = 0.01f;\n+\n+int\n+g (float in)\n+{\n+  if (f (in) + f (in) < max)\n+    return 0;\n+  return 1;\n+}\n+\n+double foo (void)\n+{\n+  return 0xF1EC7A5239123AF;\n+}\n+\n+double bar (void)\n+{\n+  return 0.0f;\n+}"}, {"sha": "fe7a12bf99b6c0a3cdf1102ecfc018fc5ca0a347", "filename": "gcc/testsuite/gcc.target/arm/thumb2-slow-flash-data-3.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-3.c?ref=655b5fc85b56cf9ac46af952041abf56ca383faa", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_cortex_m } */\n+/* { dg-require-effective-target arm_thumb2_ok } */\n+/* { dg-skip-if \"avoid conflicts with multilib options\" { *-*-* } { \"-mcpu=*\" } { \"-mcpu=cortex-m4\" \"-mcpu=cortex-m7\" } } */\n+/* { dg-skip-if \"do not override -mfloat-abi\" { *-*-* } { \"-mfloat-abi=*\" } { \"-mfloat-abi=hard\" } } */\n+/* { dg-options \"-march=armv7e-m -mfloat-abi=hard -mthumb -mslow-flash-data\" } */\n+\n+/* From PR71607 */\n+\n+float b;\n+void fn1 ();\n+\n+float\n+fn2 ()\n+{\n+  return 1.1f;\n+}\n+\n+void\n+fn3 ()\n+{\n+  float a[2];\n+  a[1] = b;\n+  fn1 (a);\n+}"}, {"sha": "cc5aea4437f9cb709ffe256cbec8e79c2353773c", "filename": "gcc/testsuite/gcc.target/arm/thumb2-slow-flash-data-4.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-4.c?ref=655b5fc85b56cf9ac46af952041abf56ca383faa", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_cortex_m } */\n+/* { dg-require-effective-target arm_thumb2_ok } */\n+/* { dg-skip-if \"avoid conflicts with multilib options\" { *-*-* } { \"-mcpu=*\" } { \"-mcpu=cortex-m4\" \"-mcpu=cortex-m7\" } } */\n+/* { dg-skip-if \"do not override -mfloat-abi\" { *-*-* } { \"-mfloat-abi=*\" } { \"-mfloat-abi=hard\" } } */\n+/* { dg-options \"-march=armv7e-m -mfloat-abi=hard -O2 -mthumb -mslow-flash-data\" } */\n+\n+double __attribute__ ((target (\"fpu=fpv5-d16\")))\n+foo (void)\n+{\n+  return 1.0f;\n+}\n+\n+float __attribute__ ((target (\"fpu=fpv5-d16\")))\n+bar (void)\n+{\n+  return 1.0f;\n+}\n+\n+float __attribute__ ((target (\"fpu=fpv5-sp-d16\")))\n+baz (void)\n+{\n+  return 1.0f;\n+}\n+\n+/* { dg-final { scan-assembler-times \"#1\\\\.0e\\\\+0\" 3 } } */"}, {"sha": "b9161c4a4b4c85cb15c1c88e46b1d92f0bad341d", "filename": "gcc/testsuite/gcc.target/arm/thumb2-slow-flash-data-5.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb2-slow-flash-data-5.c?ref=655b5fc85b56cf9ac46af952041abf56ca383faa", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_cortex_m } */\n+/* { dg-require-effective-target arm_thumb2_ok } */\n+/* { dg-skip-if \"avoid conflicts with multilib options\" { *-*-* } { \"-mcpu=*\" } { \"-mcpu=cortex-m4\" \"-mcpu=cortex-m7\" } } */\n+/* { dg-skip-if \"do not override -mfloat-abi\" { *-*-* } { \"-mfloat-abi=*\" } { \"-mfloat-abi=hard\" } } */\n+/* { dg-options \"-march=armv7e-m -mfloat-abi=hard -O2 -mthumb -mslow-flash-data\" } */\n+\n+double __attribute__ ((target (\"fpu=fpv5-sp-d16\")))\n+foo (void)\n+{\n+  return 1.0f;\n+}\n+\n+/* { dg-final { scan-assembler-not \"#1\\\\.0e\\\\+0\" } } */"}, {"sha": "fe14a6b132c8d247a372474ad7a81d586a65ef38", "filename": "gcc/testsuite/gcc.target/arm/tls-disable-literal-pool.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ftls-disable-literal-pool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655b5fc85b56cf9ac46af952041abf56ca383faa/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ftls-disable-literal-pool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Ftls-disable-literal-pool.c?ref=655b5fc85b56cf9ac46af952041abf56ca383faa", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target tls } */\n+/* { dg-require-effective-target arm_cortex_m } */\n+/* { dg-require-effective-target arm_thumb2_ok } */\n+/* { dg-options \"-mslow-flash-data\" } */\n+\n+__thread int x = 0;\n+\n+int\n+bar ()\n+{\n+  return x;\n+}\n+\n+/* { dg-error \"accessing thread-local storage is not currently supported with -mpure-code or -mslow-flash-data\" \"\" { target *-*-* } 12 } */"}]}