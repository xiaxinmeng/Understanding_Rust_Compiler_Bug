{"sha": "090b4ea8eab716cb92c98dde56dc92754f29a64c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkwYjRlYThlYWI3MTZjYjkyYzk4ZGRlNTZkYzkyNzU0ZjI5YTY0Yw==", "commit": {"author": {"name": "Daniel Franke", "email": "franke.daniel@gmail.com", "date": "2007-07-08T22:58:45Z"}, "committer": {"name": "Daniel Franke", "email": "dfranke@gcc.gnu.org", "date": "2007-07-08T22:58:45Z"}, "message": "re PR fortran/29876 (ICE on bad operator in ONLY clause of USE statement)\n\ngcc/fortran:\n2007-07-08  Daniel Franke  <franke.daniel@gmail.com>\n\n\tPR fortran/29876\n\t* module.c (gfc_match_use): Do not set an non-existant \n\tintrinsic operator if a user-defined operator is found.\n\ngcc/testsuite:\n2007-07-08  Daniel Franke  <franke.daniel@gmail.com>\n\n\tPR fortran/29876\n\t* gfortran.dg/operator_6.f90: New test.\n\nFrom-SVN: r126472", "tree": {"sha": "efbd87b38bd0299a20f12423ad76335e4b4ad392", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efbd87b38bd0299a20f12423ad76335e4b4ad392"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/090b4ea8eab716cb92c98dde56dc92754f29a64c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/090b4ea8eab716cb92c98dde56dc92754f29a64c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/090b4ea8eab716cb92c98dde56dc92754f29a64c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/090b4ea8eab716cb92c98dde56dc92754f29a64c/comments", "author": {"login": "dfranke76", "id": 15729164, "node_id": "MDQ6VXNlcjE1NzI5MTY0", "avatar_url": "https://avatars.githubusercontent.com/u/15729164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfranke76", "html_url": "https://github.com/dfranke76", "followers_url": "https://api.github.com/users/dfranke76/followers", "following_url": "https://api.github.com/users/dfranke76/following{/other_user}", "gists_url": "https://api.github.com/users/dfranke76/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfranke76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfranke76/subscriptions", "organizations_url": "https://api.github.com/users/dfranke76/orgs", "repos_url": "https://api.github.com/users/dfranke76/repos", "events_url": "https://api.github.com/users/dfranke76/events{/privacy}", "received_events_url": "https://api.github.com/users/dfranke76/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "534fd53491fb0026b878d93321880698a2930c7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/534fd53491fb0026b878d93321880698a2930c7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/534fd53491fb0026b878d93321880698a2930c7f"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "63b0b7c69f3a5a5897d16b42195fba737b76ecf5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/090b4ea8eab716cb92c98dde56dc92754f29a64c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/090b4ea8eab716cb92c98dde56dc92754f29a64c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=090b4ea8eab716cb92c98dde56dc92754f29a64c", "patch": "@@ -1,3 +1,9 @@\n+2007-07-08  Daniel Franke  <franke.daniel@gmail.com>\n+\n+\tPR fortran/29876\n+\t* module.c (gfc_match_use): Do not set an non-existant \n+\tintrinsic operator if a user-defined operator is found.\n+\n 2007-07-08  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/24784"}, {"sha": "288f1f92a354f3d71540e96a814e7a7de16ff3c0", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/090b4ea8eab716cb92c98dde56dc92754f29a64c/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/090b4ea8eab716cb92c98dde56dc92754f29a64c/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=090b4ea8eab716cb92c98dde56dc92754f29a64c", "patch": "@@ -651,10 +651,6 @@ gfc_match_use (void)\n \t\t\t \"an external module name.\", module_name);\n \t      goto cleanup;\n \t    }\n-\n-\t  if (type == INTERFACE_USER_OP)\n-\t    new->operator = operator;\n-\n \t  break;\n \n \tcase INTERFACE_INTRINSIC_OP:"}, {"sha": "6fd21a579d099b5806fc78aee1e406b98b4421b6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/090b4ea8eab716cb92c98dde56dc92754f29a64c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/090b4ea8eab716cb92c98dde56dc92754f29a64c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=090b4ea8eab716cb92c98dde56dc92754f29a64c", "patch": "@@ -8,6 +8,11 @@\n \tPR libfortran/32217\n \t* gfortran.dg/unpack_zerosize_1.f90:  New test case.\n \n+2007-07-08  Daniel Franke  <franke.daniel@gmail.com>\n+\n+\tPR fortran/29876\n+\t* gfortran.dg/operator_6.f90: New test.\n+\n 2007-07-08  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/17711"}, {"sha": "f7b4693f58f6eee00cbff17c78359e6c51470c50", "filename": "gcc/testsuite/gfortran.dg/operator_6.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/090b4ea8eab716cb92c98dde56dc92754f29a64c/gcc%2Ftestsuite%2Fgfortran.dg%2Foperator_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/090b4ea8eab716cb92c98dde56dc92754f29a64c/gcc%2Ftestsuite%2Fgfortran.dg%2Foperator_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Foperator_6.f90?ref=090b4ea8eab716cb92c98dde56dc92754f29a64c", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+!\n+! PR fortran/29876 ICE on bad operator in ONLY clause of USE statement\n+! Testcase contributed by Francois-Xavier Coudert <fxcoudert@gcc.gnu.org>\n+!\n+module foo\n+end module foo\n+\n+program test\n+  use foo, only : operator(.none.)           ! { dg-error \"not found in module\" }\n+  end program test\n+! { dg-final { cleanup-modules \"foo\" } }"}]}