{"sha": "68e28cfd16e6810a7c07a4af34d5a195821859af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhlMjhjZmQxNmU2ODEwYTdjMDdhNGFmMzRkNWExOTU4MjE4NTlhZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-09-18T15:14:15Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-09-18T15:14:15Z"}, "message": "re PR rtl-optimization/54592 (Cannot fuse SSE move and add together)\n\n\tPR target/54592\n\t* config/i386/i386.c (ix86_rtx_costs): Limit > UNITS_PER_WORD\n\tAND/IOR/XOR cost calculation to MODE_INT class modes.\n\n\t* gcc.target/i386/pr54592.c: New test.\n\nFrom-SVN: r191430", "tree": {"sha": "b4681198fd6e41a70e213cdbc26037bd97912742", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4681198fd6e41a70e213cdbc26037bd97912742"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68e28cfd16e6810a7c07a4af34d5a195821859af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68e28cfd16e6810a7c07a4af34d5a195821859af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68e28cfd16e6810a7c07a4af34d5a195821859af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68e28cfd16e6810a7c07a4af34d5a195821859af/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b07a57e8cd8f14480f00da041212a84f1b3ab30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b07a57e8cd8f14480f00da041212a84f1b3ab30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b07a57e8cd8f14480f00da041212a84f1b3ab30"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "4b58a9b2835bd84528be07e57dc3f6ac96766723", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e28cfd16e6810a7c07a4af34d5a195821859af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e28cfd16e6810a7c07a4af34d5a195821859af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68e28cfd16e6810a7c07a4af34d5a195821859af", "patch": "@@ -1,3 +1,9 @@\n+2012-09-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/54592\n+\t* config/i386/i386.c (ix86_rtx_costs): Limit > UNITS_PER_WORD\n+\tAND/IOR/XOR cost calculation to MODE_INT class modes.\n+\n 2012-09-18 Thomas Quinot  <quinot@adacore.com>       \n \n \t* doc/invoke.texi: Document -fada-spec-parent."}, {"sha": "c82da8214a67b5eefa4d52c79ac8abdc2c9b4194", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e28cfd16e6810a7c07a4af34d5a195821859af/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e28cfd16e6810a7c07a4af34d5a195821859af/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=68e28cfd16e6810a7c07a4af34d5a195821859af", "patch": "@@ -32792,7 +32792,8 @@ ix86_rtx_costs (rtx x, int code_i, int outer_code_i, int opno, int *total,\n     case AND:\n     case IOR:\n     case XOR:\n-      if (GET_MODE_SIZE (mode) > UNITS_PER_WORD)\n+      if (GET_MODE_CLASS (mode) == MODE_INT\n+\t  && GET_MODE_SIZE (mode) > UNITS_PER_WORD)\n \t{\n \t  *total = (cost->add * 2\n \t\t    + (rtx_cost (XEXP (x, 0), outer_code, opno, speed)"}, {"sha": "40efded3f37c83d03436ce67842f5e09f669fd87", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e28cfd16e6810a7c07a4af34d5a195821859af/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e28cfd16e6810a7c07a4af34d5a195821859af/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=68e28cfd16e6810a7c07a4af34d5a195821859af", "patch": "@@ -1,5 +1,8 @@\n 2012-09-18  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/54592\n+\t* gcc.target/i386/pr54592.c: New test.\n+\n \tPR tree-optimization/54610\n \t* gcc.target/i386/pr54610.c: New test.\n "}, {"sha": "20dc11c23516869391d4da94e2a8802037607b8e", "filename": "gcc/testsuite/gcc.target/i386/pr54592.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e28cfd16e6810a7c07a4af34d5a195821859af/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54592.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e28cfd16e6810a7c07a4af34d5a195821859af/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54592.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr54592.c?ref=68e28cfd16e6810a7c07a4af34d5a195821859af", "patch": "@@ -0,0 +1,17 @@\n+/* PR target/54592 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -msse2\" } */\n+/* { dg-require-effective-target sse2 } */\n+\n+#include <emmintrin.h>\n+\n+void\n+func (__m128i * foo, size_t a, size_t b, int *dst)\n+{\n+  __m128i x = foo[a];\n+  __m128i y = foo[b];\n+  __m128i sum = _mm_add_epi32 (x, y);\n+  *dst = _mm_cvtsi128_si32 (sum);\n+}\n+\n+/* { dg-final { scan-assembler \"paddd\\[^\\n\\r\\]*(\\\\(\\[^\\n\\r\\]*\\\\)|XMMWORD PTR)\" } } */"}]}