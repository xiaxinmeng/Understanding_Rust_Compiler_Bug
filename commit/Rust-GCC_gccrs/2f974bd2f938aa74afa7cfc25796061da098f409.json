{"sha": "2f974bd2f938aa74afa7cfc25796061da098f409", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY5NzRiZDJmOTM4YWE3NGFmYTdjZmMyNTc5NjA2MWRhMDk4ZjQwOQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-10-29T20:47:00Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-10-29T20:47:00Z"}, "message": "atomicity.h: New file.\n\n\t* config/os/irix/bits/atomicity.h: New file.\n\t* config/os/irix/bits/os_defines.h (_POSIX_SOURCE): Undefine.\n\t(__off_t): Define.\n\t(__off64_t): Likewise.\n\t(__ssize_t): Likewise.\n\t(_G_USING_THUNKS): Define to zero.\n\nFrom-SVN: r37128", "tree": {"sha": "f6e165d3b2650fdb05282805cafc6006800c760c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6e165d3b2650fdb05282805cafc6006800c760c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f974bd2f938aa74afa7cfc25796061da098f409", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f974bd2f938aa74afa7cfc25796061da098f409", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f974bd2f938aa74afa7cfc25796061da098f409", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f974bd2f938aa74afa7cfc25796061da098f409/comments", "author": null, "committer": null, "parents": [{"sha": "526aba2811f2a0f3f4fd91d026995d2d46b62d43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/526aba2811f2a0f3f4fd91d026995d2d46b62d43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/526aba2811f2a0f3f4fd91d026995d2d46b62d43"}], "stats": {"total": 71, "additions": 69, "deletions": 2}, "files": [{"sha": "7fdf37b0cabd139fd032fef6e814a88d6c3ffff3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f974bd2f938aa74afa7cfc25796061da098f409/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f974bd2f938aa74afa7cfc25796061da098f409/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2f974bd2f938aa74afa7cfc25796061da098f409", "patch": "@@ -1,3 +1,12 @@\n+2000-10-29  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* config/os/irix/bits/atomicity.h: New file.\n+\t* config/os/irix/bits/os_defines.h (_POSIX_SOURCE): Undefine.\n+\t(__off_t): Define.\n+\t(__off64_t): Likewise.\n+\t(__ssize_t): Likewise.\n+\t(_G_USING_THUNKS): Define to zero.\n+\t\n 2000-10-28  Mark Mitchell  <mark@codesourcery.com>\n \n \t* src/string-inst.cc (basic_string<C>::npos): Explicitly"}, {"sha": "41847581cda7d5304cbe41bd21ab2fe2e8a23367", "filename": "libstdc++-v3/config/os/irix/bits/atomicity.h", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f974bd2f938aa74afa7cfc25796061da098f409/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f974bd2f938aa74afa7cfc25796061da098f409/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Fbits%2Fatomicity.h?ref=2f974bd2f938aa74afa7cfc25796061da098f409", "patch": "@@ -0,0 +1,42 @@\n+/* Low-level functions for atomic operations.  IRIX version.\n+   Copyright (C) 1997 Free Software Foundation, Inc.\n+   This file is part of the GNU C Library.\n+\n+   The GNU C Library is free software; you can redistribute it and/or\n+   modify it under the terms of the GNU Library General Public License as\n+   published by the Free Software Foundation; either version 2 of the\n+   License, or (at your option) any later version.\n+\n+   The GNU C Library is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   Library General Public License for more details.\n+\n+   You should have received a copy of the GNU Library General Public\n+   License along with the GNU C Library; see the file COPYING.LIB.  If not,\n+   write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n+   Boston, MA 02111-1307, USA.  */\n+\n+#ifndef _BITS_ATOMICITY_H\n+#define _BITS_ATOMICITY_H\t1\n+\n+#include <mutex.h>\n+\n+typedef unsigned long _Atomic_word;\n+\n+static inline _Atomic_word\n+__attribute__ ((__unused__))\n+__exchange_and_add (_Atomic_word* __mem, int __val)\n+{\n+  return test_then_add (__mem, __val);\n+}\n+\n+\n+static inline void\n+__attribute__ ((unused))\n+__atomic_add (_Atomic_word* __mem, int __val)\n+{\n+  test_then_add (__mem, __val);\n+}\n+\n+#endif /* atomicity.h */"}, {"sha": "f4988c1aaeb0b63e4a86347d30d4d2d5aa2671ef", "filename": "libstdc++-v3/config/os/irix/bits/os_defines.h", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f974bd2f938aa74afa7cfc25796061da098f409/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Fbits%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f974bd2f938aa74afa7cfc25796061da098f409/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Fbits%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Fbits%2Fos_defines.h?ref=2f974bd2f938aa74afa7cfc25796061da098f409", "patch": "@@ -29,12 +29,28 @@\n \n \n #ifndef _GLIBCPP_OS_DEFINES\n-#  define _GLIBCPP_OS_DEFINES\n-\n+#define _GLIBCPP_OS_DEFINES\n \n /* System-specific #define, typedefs, corrections, etc, go here.  This\n    file will come before all others. */\n \n+/* We need large file support.  There are two ways to turn it on:\n+   by defining either _LARGEFILE64_SOURCE or _SGI_SOURCE.  However,\n+   it does not actually work to define only the former, as then\n+   <sys/stat.h> is invalid: `st_blocks' is defined to be a macro,\n+   but then used as a field name.  So, we have to turn on \n+   _SGI_SOURCE.  That only works if _POSIX_SOURCE is turned off,\n+   so we have to explicitly turn it off.  (Some of the libio C files\n+   explicitly try to turn it on.)  _SGI_SOURCE is actually turned on \n+   implicitly via the command-line.  */\n+#undef _POSIX_SOURCE\n+\n+#define __off_t off_t\n+#define __off64_t off64_t\n+#define __ssize_t ssize_t\n+\n+/* GCC does not use thunks on IRIX.  */\n+#define _G_USING_THUNKS 0\n \n #endif\n "}]}