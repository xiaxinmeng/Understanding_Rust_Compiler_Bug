{"sha": "6a7d8936f3db515ba34e59e6974793f433498188", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE3ZDg5MzZmM2RiNTE1YmEzNGU1OWU2OTc0NzkzZjQzMzQ5ODE4OA==", "commit": {"author": {"name": "Roman Gareev", "email": "gareevroman@gmail.com", "date": "2014-07-30T13:18:16Z"}, "committer": {"name": "Roman Gareev", "email": "romangareev@gcc.gnu.org", "date": "2014-07-30T13:18:16Z"}, "message": "[gcc/]\n\n\t* graphite-isl-ast-to-gimple.c:\n\t(gcc_expression_from_isl_ast_expr_id): Add calling of fold_convert.\n\t(gcc_expression_from_isl_expression): Pass type to\n\tgcc_expression_from_isl_ast_expr_id.\n\nFrom-SVN: r213262", "tree": {"sha": "45e21cde83937b45a73ec51cdbb64cf684b44d42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45e21cde83937b45a73ec51cdbb64cf684b44d42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a7d8936f3db515ba34e59e6974793f433498188", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a7d8936f3db515ba34e59e6974793f433498188", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a7d8936f3db515ba34e59e6974793f433498188", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a7d8936f3db515ba34e59e6974793f433498188/comments", "author": {"login": "gareevroman", "id": 6114710, "node_id": "MDQ6VXNlcjYxMTQ3MTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6114710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gareevroman", "html_url": "https://github.com/gareevroman", "followers_url": "https://api.github.com/users/gareevroman/followers", "following_url": "https://api.github.com/users/gareevroman/following{/other_user}", "gists_url": "https://api.github.com/users/gareevroman/gists{/gist_id}", "starred_url": "https://api.github.com/users/gareevroman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gareevroman/subscriptions", "organizations_url": "https://api.github.com/users/gareevroman/orgs", "repos_url": "https://api.github.com/users/gareevroman/repos", "events_url": "https://api.github.com/users/gareevroman/events{/privacy}", "received_events_url": "https://api.github.com/users/gareevroman/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "480156b2a34bb7f979b7f4f1f7339cf1ad569c07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/480156b2a34bb7f979b7f4f1f7339cf1ad569c07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/480156b2a34bb7f979b7f4f1f7339cf1ad569c07"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "de722907770c614672a05ecf47cc5ee1dec71df4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a7d8936f3db515ba34e59e6974793f433498188/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a7d8936f3db515ba34e59e6974793f433498188/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a7d8936f3db515ba34e59e6974793f433498188", "patch": "@@ -1,3 +1,10 @@\n+2014-07-30  Roman Gareev  <gareevroman@gmail.com>\n+\n+\t* graphite-isl-ast-to-gimple.c:\n+\t(gcc_expression_from_isl_ast_expr_id): Add calling of fold_convert.\n+\t(gcc_expression_from_isl_expression): Pass type to\n+\tgcc_expression_from_isl_ast_expr_id.\n+\n 2014-07-30  Richard Biener  <rguenther@suse.de>\n \n \t* lto-streamer.h (lto_write_data): New function."}, {"sha": "fd04118140d0f9f6c58b142692dec08af4a2bc68", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a7d8936f3db515ba34e59e6974793f433498188/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a7d8936f3db515ba34e59e6974793f433498188/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=6a7d8936f3db515ba34e59e6974793f433498188", "patch": "@@ -122,10 +122,16 @@ gcc_expression_from_isl_expression (tree type, __isl_take isl_ast_expr *,\n \t\t\t\t    ivs_params &ip);\n \n /* Return the tree variable that corresponds to the given isl ast identifier\n- expression (an isl_ast_expr of type isl_ast_expr_id).  */\n+   expression (an isl_ast_expr of type isl_ast_expr_id).\n+\n+   FIXME: We should replace blind conversation of id's type with derivation\n+   of the optimal type when we get the corresponding isl support. Blindly\n+   converting type sizes may be problematic when we switch to smaller\n+   types.  */\n \n static tree\n-gcc_expression_from_isl_ast_expr_id (__isl_keep isl_ast_expr *expr_id,\n+gcc_expression_from_isl_ast_expr_id (tree type,\n+\t\t\t\t     __isl_keep isl_ast_expr *expr_id,\n \t\t\t\t     ivs_params &ip)\n {\n   gcc_assert (isl_ast_expr_get_type (expr_id) == isl_ast_expr_id);\n@@ -136,7 +142,7 @@ gcc_expression_from_isl_ast_expr_id (__isl_keep isl_ast_expr *expr_id,\n   gcc_assert (res != ip.end () &&\n               \"Could not map isl_id to tree expression\");\n   isl_ast_expr_free (expr_id);\n-  return res->second;\n+  return fold_convert (type, res->second);\n }\n \n /* Converts an isl_ast_expr_int expression E to a GCC expression tree of\n@@ -351,7 +357,7 @@ gcc_expression_from_isl_expression (tree type, __isl_take isl_ast_expr *expr,\n   switch (isl_ast_expr_get_type (expr))\n     {\n     case isl_ast_expr_id:\n-      return gcc_expression_from_isl_ast_expr_id (expr, ip);\n+      return gcc_expression_from_isl_ast_expr_id (type, expr, ip);\n \n     case isl_ast_expr_int:\n       return gcc_expression_from_isl_expr_int (type, expr);"}]}