{"sha": "9e73c69087510db9321f4f6d91280519a643ff55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU3M2M2OTA4NzUxMGRiOTMyMWY0ZjZkOTEyODA1MTlhNjQzZmY1NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-01-13T13:26:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-01-13T13:26:47Z"}, "message": "re PR debug/41371 (var-tracking is slow and memory hungry)\n\n\tPR debug/41371\n\t* var-tracking.c (values_to_unmark): New variable.\n\t(find_loc_in_1pdv): Clear VALUE_RECURSED_INTO of values in\n\tvalues_to_unmark vector.  Moved body to...\n\t(find_loc_in_1pdv_1): ... this.  Don't clear VALUE_RECURSED_INTO,\n\tinstead queue it into values_to_unmark vector.\n\t(vt_find_locations): Free values_to_unmark vector.\n\nFrom-SVN: r155858", "tree": {"sha": "fae80dc8dbd8c47b814e5717a77e62989818b18a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fae80dc8dbd8c47b814e5717a77e62989818b18a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e73c69087510db9321f4f6d91280519a643ff55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e73c69087510db9321f4f6d91280519a643ff55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e73c69087510db9321f4f6d91280519a643ff55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e73c69087510db9321f4f6d91280519a643ff55/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dc2f28c58b10c17fbc717178a9c99a77ba4ecf56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc2f28c58b10c17fbc717178a9c99a77ba4ecf56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc2f28c58b10c17fbc717178a9c99a77ba4ecf56"}], "stats": {"total": 50, "additions": 41, "deletions": 9}, "files": [{"sha": "5b291e651380c2597f9ec5e479b53f83612c92a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e73c69087510db9321f4f6d91280519a643ff55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e73c69087510db9321f4f6d91280519a643ff55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e73c69087510db9321f4f6d91280519a643ff55", "patch": "@@ -1,3 +1,13 @@\n+2010-01-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/41371\n+\t* var-tracking.c (values_to_unmark): New variable.\n+\t(find_loc_in_1pdv): Clear VALUE_RECURSED_INTO of values in\n+\tvalues_to_unmark vector.  Moved body to...\n+\t(find_loc_in_1pdv_1): ... this.  Don't clear VALUE_RECURSED_INTO,\n+\tinstead queue it into values_to_unmark vector.\n+\t(vt_find_locations): Free values_to_unmark vector.\n+\n 2010-01-13  Wolfgang Gellerich  <gellerich@de.ibm.com>\n \n \t* config/s390/s390.c (override_options): Set"}, {"sha": "0822fecab34af2e2ee7765362fba1439d71c722a", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 31, "deletions": 9, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e73c69087510db9321f4f6d91280519a643ff55/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e73c69087510db9321f4f6d91280519a643ff55/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=9e73c69087510db9321f4f6d91280519a643ff55", "patch": "@@ -1,5 +1,5 @@\n /* Variable tracking routines for the GNU compiler.\n-   Copyright (C) 2002, 2003, 2004, 2005, 2007, 2008, 2009\n+   Copyright (C) 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n \n    This file is part of GCC.\n@@ -2252,12 +2252,18 @@ dv_changed_p (decl_or_value dv)\n \t  : DECL_CHANGED (dv_as_decl (dv)));\n }\n \n-/* Return a location list node whose loc is rtx_equal to LOC, in the\n+/* Vector of VALUEs that should have VALUE_RECURSED_INTO bit cleared\n+   at the end of find_loc_in_1pdv.  Not a static variable in find_loc_in_1pdv\n+   to avoid constant allocation/freeing of it.  */\n+static VEC(rtx, heap) *values_to_unmark;\n+\n+/* Helper function for find_loc_in_1pdv.\n+   Return a location list node whose loc is rtx_equal to LOC, in the\n    location list of a one-part variable or value VAR, or in that of\n    any values recursively mentioned in the location lists.  */\n \n static location_chain\n-find_loc_in_1pdv (rtx loc, variable var, htab_t vars)\n+find_loc_in_1pdv_1 (rtx loc, variable var, htab_t vars)\n {\n   location_chain node;\n \n@@ -2285,18 +2291,33 @@ find_loc_in_1pdv (rtx loc, variable var, htab_t vars)\n \t  {\n \t    location_chain where;\n \t    VALUE_RECURSED_INTO (node->loc) = true;\n-\t    if ((where = find_loc_in_1pdv (loc, var, vars)))\n-\t      {\n-\t\tVALUE_RECURSED_INTO (node->loc) = false;\n-\t\treturn where;\n-\t      }\n-\t    VALUE_RECURSED_INTO (node->loc) = false;\n+\t    VEC_safe_push (rtx, heap, values_to_unmark, node->loc);\n+\t    if ((where = find_loc_in_1pdv_1 (loc, var, vars)))\n+\t      return where;\n \t  }\n       }\n \n   return NULL;\n }\n \n+/* Return a location list node whose loc is rtx_equal to LOC, in the\n+   location list of a one-part variable or value VAR, or in that of\n+   any values recursively mentioned in the location lists.  */\n+\n+static location_chain\n+find_loc_in_1pdv (rtx loc, variable var, htab_t vars)\n+{\n+  location_chain ret;\n+  unsigned int i;\n+  rtx value;\n+\n+  ret = find_loc_in_1pdv_1 (loc, var, vars);\n+  for (i = 0; VEC_iterate (rtx, values_to_unmark, i, value); i++)\n+    VALUE_RECURSED_INTO (value) = false;\n+  VEC_truncate (rtx, values_to_unmark, 0);\n+  return ret;\n+}\n+\n /* Hash table iteration argument passed to variable_merge.  */\n struct dfset_merge\n {\n@@ -5648,6 +5669,7 @@ vt_find_locations (void)\n     FOR_EACH_BB (bb)\n       gcc_assert (VTI (bb)->flooded);\n \n+  VEC_free (rtx, heap, values_to_unmark);\n   free (bb_order);\n   fibheap_delete (worklist);\n   fibheap_delete (pending);"}]}