{"sha": "6bdff197e6b8397129441e85a53fbb3c738c3d57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJkZmYxOTdlNmI4Mzk3MTI5NDQxZTg1YTUzZmJiM2M3MzhjM2Q1Nw==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2007-06-10T20:21:48Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2007-06-10T20:21:48Z"}, "message": "tree-ssa-structalias.c (set_uids_in_ptset): Add is_deref'd parameter, use it.\n\n2007-06-09  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* tree-ssa-structalias.c (set_uids_in_ptset): Add is_deref'd\n\tparameter, use it.\n\t(find_what_p_points_to): Pass new parameter to set_uids_in_ptset.\n\nFrom-SVN: r125603", "tree": {"sha": "38ee55d33e7de3cac90868910357066e402087c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38ee55d33e7de3cac90868910357066e402087c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bdff197e6b8397129441e85a53fbb3c738c3d57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bdff197e6b8397129441e85a53fbb3c738c3d57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bdff197e6b8397129441e85a53fbb3c738c3d57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bdff197e6b8397129441e85a53fbb3c738c3d57/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1bbf850280fd2a435aea5321ad3f79977dbc595c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bbf850280fd2a435aea5321ad3f79977dbc595c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bbf850280fd2a435aea5321ad3f79977dbc595c"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "e4b3495100628c24f7e372525e5e16f675b5eb95", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdff197e6b8397129441e85a53fbb3c738c3d57/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdff197e6b8397129441e85a53fbb3c738c3d57/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6bdff197e6b8397129441e85a53fbb3c738c3d57", "patch": "@@ -1,3 +1,9 @@\n+2007-06-09  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* tree-ssa-structalias.c (set_uids_in_ptset): Add is_deref'd\n+\tparameter, use it.\n+\t(find_what_p_points_to): Pass new parameter to set_uids_in_ptset.\n+\n 2007-06-09  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree-data-ref.c (dr_may_alias_p): Check that decl_a != decl_b,"}, {"sha": "6b470b3143f294ccf25a0ee1d7f6da49b2b0ef85", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdff197e6b8397129441e85a53fbb3c738c3d57/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdff197e6b8397129441e85a53fbb3c738c3d57/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=6bdff197e6b8397129441e85a53fbb3c738c3d57", "patch": "@@ -4290,10 +4290,12 @@ shared_bitmap_add (bitmap pt_vars)\n /* Set bits in INTO corresponding to the variable uids in solution set\n    FROM, which came from variable PTR.\n    For variables that are actually dereferenced, we also use type\n-   based alias analysis to prune the points-to sets.  */\n+   based alias analysis to prune the points-to sets.\n+   IS_DEREFED is true if PTR was directly dereferenced, which we use to\n+   help determine whether we are we are allowed to prune using TBAA.  */\n \n static void\n-set_uids_in_ptset (tree ptr, bitmap into, bitmap from)\n+set_uids_in_ptset (tree ptr, bitmap into, bitmap from, bool is_derefed)\n {\n   unsigned int i;\n   bitmap_iterator bi;\n@@ -4329,7 +4331,7 @@ set_uids_in_ptset (tree ptr, bitmap into, bitmap from)\n \t      if (sft)\n \t\t{\n \t\t  var_alias_set = get_alias_set (sft);\n-\t\t  if (!vi->directly_dereferenced\n+\t\t  if ((!is_derefed && !vi->directly_dereferenced)\n \t\t      || alias_sets_conflict_p (ptr_alias_set, var_alias_set))\n \t\t    bitmap_set_bit (into, DECL_UID (sft));\n \t\t}\n@@ -4343,7 +4345,7 @@ set_uids_in_ptset (tree ptr, bitmap into, bitmap from)\n \t      else\n \t\t{\n \t\t  var_alias_set = get_alias_set (vi->decl);\n-\t\t  if (!vi->directly_dereferenced\n+\t\t  if ((!is_derefed && !vi->directly_dereferenced)\n \t\t      || alias_sets_conflict_p (ptr_alias_set, var_alias_set))\n \t\t    bitmap_set_bit (into, DECL_UID (vi->decl));\n \t\t}\n@@ -4539,14 +4541,17 @@ find_what_p_points_to (tree p)\n \t  stats.points_to_sets_created++;\n \t  \n \t  /* Instead of using pt_anything, we instead merge in the SMT\n-\t     aliases for the underlying SMT.  */\n+\t     aliases for the underlying SMT.  In addition, if they\n+\t     could have pointed to anything, they could point to\n+\t     global memory.  */\n \t  if (was_pt_anything)\n \t    {\n \t      merge_smts_into (p, finished_solution);\n \t      pi->pt_global_mem = 1;\n \t    }\n \t  \n-\t  set_uids_in_ptset (vi->decl, finished_solution, vi->solution);\n+\t  set_uids_in_ptset (vi->decl, finished_solution, vi->solution,\n+\t\t\t     vi->directly_dereferenced);\n \t  result = shared_bitmap_lookup (finished_solution);\n \n \t  if (!result)"}]}