{"sha": "6ead1e9971df29c9e71b19d3f2faae33c78e13e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVhZDFlOTk3MWRmMjljOWU3MWIxOWQzZjJmYWFlMzNjNzhlMTNlMA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-07-31T23:47:19Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-07-31T23:47:19Z"}, "message": "[multiple changes]\n\n2000-07-31  Jakub Jelinek  <jakub@redhat.com>\n\n\t* cpplex.c (_cpp_get_line): If index is 0, return line 0 col 0.\n\t(_cpp_get_token): Don't macro expand a just pasted token if it\n\twas pasted at no_expand_level.\n\n\t* testsuite/gcc.dg/cpp/paste7.c: New test.\n\n2000-07-31  Zack Weinberg  <zack@wolery.cumb.org>\n\n\t* cppmacro.c (find_param, count_params, save_expansion):\n\tPermit 'defined' as a macro parameter name.\n\nFrom-SVN: r35394", "tree": {"sha": "09f352803e0788fc35ed3daa9f4930ebd0f0d29b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09f352803e0788fc35ed3daa9f4930ebd0f0d29b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ead1e9971df29c9e71b19d3f2faae33c78e13e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ead1e9971df29c9e71b19d3f2faae33c78e13e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ead1e9971df29c9e71b19d3f2faae33c78e13e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ead1e9971df29c9e71b19d3f2faae33c78e13e0/comments", "author": null, "committer": null, "parents": [{"sha": "ed39843b4149642ce7cabec509db61ef46e34b70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed39843b4149642ce7cabec509db61ef46e34b70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed39843b4149642ce7cabec509db61ef46e34b70"}], "stats": {"total": 62, "additions": 56, "deletions": 6}, "files": [{"sha": "a0cb0143e13eeb99b225d62a235a982f1844ee85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ead1e9971df29c9e71b19d3f2faae33c78e13e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ead1e9971df29c9e71b19d3f2faae33c78e13e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ead1e9971df29c9e71b19d3f2faae33c78e13e0", "patch": "@@ -1,3 +1,14 @@\n+2000-07-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* cpplex.c (_cpp_get_line): If index is 0, return line 0 col 0.\n+\t(_cpp_get_token): Don't macro expand a just pasted token if it\n+\twas pasted at no_expand_level.\n+\n+2000-07-31  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* cppmacro.c (find_param, count_params, save_expansion):\n+\tPermit 'defined' as a macro parameter name.\n+\n 2000-07-31  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* Makefile.in: Rename cpp to cpp0, tradcpp to tradcpp0, and"}, {"sha": "0ee0a3d9e155b6a60217c6b7212879b9f021a699", "filename": "gcc/cpplex.c", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ead1e9971df29c9e71b19d3f2faae33c78e13e0/gcc%2Fcpplex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ead1e9971df29c9e71b19d3f2faae33c78e13e0/gcc%2Fcpplex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplex.c?ref=6ead1e9971df29c9e71b19d3f2faae33c78e13e0", "patch": "@@ -3082,7 +3082,7 @@ const cpp_token *\n _cpp_get_token (pfile)\n      cpp_reader *pfile;\n {\n-  const cpp_token *token;\n+  const cpp_token *token, *old_token;\n   cpp_hashnode *node;\n \n   /* Loop until we hit a non-macro token.  */\n@@ -3111,6 +3111,8 @@ _cpp_get_token (pfile)\n \t be taken as a control macro.  */\n       pfile->potential_control_macro = 0;\n \n+      old_token = token;\n+\n       /* See if there's a token to paste with this one.  */\n       if (!pfile->paste_level)\n \ttoken = maybe_paste_with_next (pfile, token);\n@@ -3120,10 +3122,17 @@ _cpp_get_token (pfile)\n \treturn token;\n \n       /* Is macro expansion disabled in general, or are we in the\n-\t middle of a token paste?  */\n-      if (pfile->no_expand_level == pfile->cur_context || pfile->paste_level)\n+\t middle of a token paste, or was this token just pasted?\n+\t (Note we don't check token->flags & PASTED, because that\n+\t counts tokens that were pasted at some point in the past,\n+\t we're only interested in tokens that were pasted by this call\n+\t to maybe_paste_with_next.)  */\n+      if (pfile->no_expand_level == pfile->cur_context\n+\t  || pfile->paste_level\n+\t  || (token != old_token\n+\t      && pfile->no_expand_level + 1 == pfile->cur_context))\n \treturn token;\n- \n+\n       node = token->val.node;\n       if (node->type != T_MACRO)\n \treturn special_symbol (pfile, node, token);\n@@ -3337,6 +3346,13 @@ _cpp_get_line (pfile, pcol)\n   else\n     index = pfile->contexts[0].posn;\n \n+  if (index == 0)\n+    {\n+      if (pcol)\n+\t*pcol = 0;\n+      return 0;\n+    }\n+\n   cur_token = &pfile->token_list.tokens[index - 1];\n   if (pcol)\n     *pcol = cur_token->col;"}, {"sha": "8d53baf71f6fe647cf29d2051aa11dd4db5afb3b", "filename": "gcc/cppmacro.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ead1e9971df29c9e71b19d3f2faae33c78e13e0/gcc%2Fcppmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ead1e9971df29c9e71b19d3f2faae33c78e13e0/gcc%2Fcppmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppmacro.c?ref=6ead1e9971df29c9e71b19d3f2faae33c78e13e0", "patch": "@@ -72,7 +72,7 @@ find_param (first, token)\n   unsigned int param = 0;\n \n   for (; first < token && first->type != CPP_CLOSE_PAREN; first++)\n-    if (first->type == CPP_NAME)\n+    if (first->type == CPP_NAME || first->type == CPP_DEFINED)\n       {\n \tparam++;\n \tif (first->val.node == token->val.node)\n@@ -139,6 +139,8 @@ count_params (pfile, info)\n \tcase CPP_COMMENT:\n \t  continue;\t\t/* Ignore -C comments.  */\n \n+\tcase CPP_DEFINED:\t/* 'defined' may be used as a macro\n+\t\t\t\t   parameter name.  */\n \tcase CPP_NAME:\n \t  if (prev_ident)\n \t    {\n@@ -429,7 +431,7 @@ save_expansion (pfile, info)\n      dumping macro definitions.  They must go first.  */\n   if (list->params_len)\n     for (token = info->first_param; token < info->first; token++)\n-      if (token->type == CPP_NAME)\n+      if (token->type == CPP_NAME || token->type == CPP_DEFINED)\n \t{\n \t  /* Copy null too.  */\n \t  memcpy (buf, token->val.node->name, token->val.node->length + 1);\n@@ -443,6 +445,7 @@ save_expansion (pfile, info)\n \n       switch (token->type)\n \t{\n+\tcase CPP_DEFINED:\n \tcase CPP_NAME:\n \t  if (list->paramc == -1)\n \t    break;"}, {"sha": "62ce61ae939f29f722b50ac266e14235ec78a6f1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ead1e9971df29c9e71b19d3f2faae33c78e13e0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ead1e9971df29c9e71b19d3f2faae33c78e13e0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6ead1e9971df29c9e71b19d3f2faae33c78e13e0", "patch": "@@ -1,5 +1,6 @@\n 2000-07-31  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* testsuite/gcc.dg/cpp/paste7.c: New test.\n \t* gcc.dg/cpp/20000725-1.c: New test.\n \n 2000-07-31  Zack Weinberg  <zack@wolery.cumb.org>"}, {"sha": "ce29db8477db4122ab57f41b8d3ffe20620532a9", "filename": "gcc/testsuite/gcc.dg/cpp/paste7.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ead1e9971df29c9e71b19d3f2faae33c78e13e0/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpaste7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ead1e9971df29c9e71b19d3f2faae33c78e13e0/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpaste7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpaste7.c?ref=6ead1e9971df29c9e71b19d3f2faae33c78e13e0", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+\n+#define D_2 1, 2\n+#define C_2(X, I0, I1) X##_a = I0, X##_b = I1\n+#define B_2(X, I) C_2(X, I)\n+#define A(N, X) B_##N (X, D_##N)\n+\n+extern void abort(void);\n+extern void exit(int);\n+\n+int x_a, x_b;\n+\n+int main(void)\n+{\n+  A(2, x);\n+  if (x_a != 1 || x_b != 2)\n+    abort();\n+  exit(0);\n+}"}]}