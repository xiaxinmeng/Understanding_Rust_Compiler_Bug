{"sha": "739d93391d50bb0f7d338a5dff5cdcb5ab1c4191", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM5ZDkzMzkxZDUwYmIwZjdkMzM4YTVkZmY1Y2RjYjVhYjFjNDE5MQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2016-09-10T21:16:45Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2016-09-10T21:16:45Z"}, "message": "re PR fortran/77532 ([F03] ICE in check_dtio_interface1, at fortran/interface.c:4622)\n\n2016-09-10  Paul Thomas  <pault@gcc.gnu.org>\n\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/77532\n\t^ interface.c (check_dtio_arg_TKR_intent): Return after error.\n\t(check_dtio_interface1): Remove asserts, test for NULL and return\n\tif found.\n\n\tgfortran.dg/dtio_11.f90: new test.\n\nCo-Authored-By: Steven G. Kargl <kargl@gcc.gnu.org>\n\nFrom-SVN: r240074", "tree": {"sha": "82afde61b11343ec4a2a7d15853c6b4675dc34d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82afde61b11343ec4a2a7d15853c6b4675dc34d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/739d93391d50bb0f7d338a5dff5cdcb5ab1c4191", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/739d93391d50bb0f7d338a5dff5cdcb5ab1c4191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/739d93391d50bb0f7d338a5dff5cdcb5ab1c4191", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/739d93391d50bb0f7d338a5dff5cdcb5ab1c4191/comments", "author": null, "committer": null, "parents": [{"sha": "fb7c40dde327fe2729855d1472ed019f6b2e5547", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb7c40dde327fe2729855d1472ed019f6b2e5547", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb7c40dde327fe2729855d1472ed019f6b2e5547"}], "stats": {"total": 71, "additions": 65, "deletions": 6}, "files": [{"sha": "188871b17fb92590ded62defa7c3f8c61876c7ed", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/739d93391d50bb0f7d338a5dff5cdcb5ab1c4191/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/739d93391d50bb0f7d338a5dff5cdcb5ab1c4191/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=739d93391d50bb0f7d338a5dff5cdcb5ab1c4191", "patch": "@@ -1,3 +1,11 @@\n+2016-09-10  Paul Thomas  <pault@gcc.gnu.org>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/77532\n+\t^ interface.c (check_dtio_arg_TKR_intent): Return after error.\n+\t(check_dtio_interface1): Remove asserts, test for NULL and return\n+\tif found.\n+\n 2016-09-09  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/77420"}, {"sha": "45a9afe568568491e16430a47566dc8659bc211c", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/739d93391d50bb0f7d338a5dff5cdcb5ab1c4191/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/739d93391d50bb0f7d338a5dff5cdcb5ab1c4191/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=739d93391d50bb0f7d338a5dff5cdcb5ab1c4191", "patch": "@@ -4559,8 +4559,11 @@ check_dtio_arg_TKR_intent (gfc_symbol *fsym, bool typebound, bt type,\n \t\t\t   int kind, int rank, sym_intent intent)\n {\n   if (fsym->ts.type != type)\n-    gfc_error (\"DTIO dummy argument at %L must be of type %s\",\n-\t       &fsym->declared_at, gfc_basic_typename (type));\n+    {\n+      gfc_error (\"DTIO dummy argument at %L must be of type %s\",\n+\t\t &fsym->declared_at, gfc_basic_typename (type));\n+      return;\n+    }\n \n   if (fsym->ts.type != BT_CLASS && fsym->ts.type != BT_DERIVED\n       && fsym->ts.kind != kind)\n@@ -4606,20 +4609,23 @@ check_dtio_interface1 (gfc_symbol *derived, gfc_symtree *tb_io_st,\n     {\n       /* Typebound DTIO binding.  */\n       tb_io_proc = tb_io_st->n.tb;\n-      gcc_assert (tb_io_proc != NULL);\n+      if (tb_io_proc == NULL)\n+\treturn;\n+\n       gcc_assert (tb_io_proc->is_generic);\n       gcc_assert (tb_io_proc->u.generic->next == NULL);\n \n       specific_proc = tb_io_proc->u.generic->specific;\n-      gcc_assert (!specific_proc->is_generic);\n+      if (specific_proc == NULL || specific_proc->is_generic)\n+\treturn;\n \n       dtio_sub = specific_proc->u.specific->n.sym;\n     }\n   else\n     {\n       generic_proc = tb_io_st->n.sym;\n-      gcc_assert (generic_proc);\n-      gcc_assert (generic_proc->generic);\n+      if (generic_proc == NULL || generic_proc->generic == NULL)\n+\treturn;\n \n       for (intr = tb_io_st->n.sym->generic; intr; intr = intr->next)\n \t{"}, {"sha": "7acd162436680b1a9169c7867defe08eeef2bb1a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/739d93391d50bb0f7d338a5dff5cdcb5ab1c4191/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/739d93391d50bb0f7d338a5dff5cdcb5ab1c4191/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=739d93391d50bb0f7d338a5dff5cdcb5ab1c4191", "patch": "@@ -1,3 +1,9 @@\n+2016-09-10  Paul Thomas  <pault@gcc.gnu.org>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/77532\n+\tgfortran.dg/dtio_11.f90: new test.\n+\n 2016-09-10  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/77507"}, {"sha": "cf8dd365d3c000a8c312962407cc2c4e8a0700e9", "filename": "gcc/testsuite/gfortran.dg/dtio_11.f90", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/739d93391d50bb0f7d338a5dff5cdcb5ab1c4191/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/739d93391d50bb0f7d338a5dff5cdcb5ab1c4191/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdtio_11.f90?ref=739d93391d50bb0f7d338a5dff5cdcb5ab1c4191", "patch": "@@ -0,0 +1,39 @@\n+! { dg-do compile }\n+!\n+! Test fixes for PRs77532-4.\n+!\n+! Contributed by Gerhard Steinmetz  <gerhard.steinmetz.fortran@t-online.de>\n+!\n+! PR77532 - used to ICE\n+module m1\n+   type t\n+   end type\n+   interface read(unformatted)\n+   end interface\n+end\n+\n+! PR77533 - used to ICE after error\n+module m2\n+   type t\n+      type(unknown), pointer :: next ! { dg-error \"is a type that has not been declared\" }\n+   contains\n+      procedure :: s\n+      generic :: write(formatted) => s\n+   end type\n+contains\n+   subroutine s(x)\n+   end\n+end\n+\n+! PR77533 comment #1 - gave warning that\n+module m3\n+   type t\n+   contains\n+      procedure :: s ! { dg-error \"Non-polymorphic passed-object\" }\n+      generic :: write(formatted) => s\n+   end type\n+contains\n+   subroutine s(x) ! { dg-error \"must be of type CLASS\" }\n+      class(t), intent(in) : x ! { dg-error \"Invalid character in name\" }\n+   end\n+end"}]}