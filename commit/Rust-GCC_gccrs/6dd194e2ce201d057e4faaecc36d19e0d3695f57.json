{"sha": "6dd194e2ce201d057e4faaecc36d19e0d3695f57", "node_id": "C_kwDOANBUbNoAKDZkZDE5NGUyY2UyMDFkMDU3ZTRmYWFlY2MzNmQxOWUwZDM2OTVmNTc", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-06-07T06:54:13Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-06-07T06:54:13Z"}, "message": "PR c++/96442: Improved error recovery in enumerations.\n\nThis patch is a revised fix for PR c++/96442 providing a cleaner\nsolution, setting ENUM_UNDERLYING_TYPE to integer_type_node when\nissuing an error, so that this invariant holds during the parser's\nerror recovery.\n\n2022-06-07  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/cp/ChangeLog\n\tPR c++/96442\n\t* decl.cc (start_enum): When emitting a \"must be integral\" error,\n\tset ENUM_UNDERLYING_TYPE to integer_type_node, to avoid an ICE\n\tdownstream in build_enumeration.\n\ngcc/testsuite/ChangeLog\n\tPR c++/96442\n\t* g++.dg/parse/pr96442.C: New test case.", "tree": {"sha": "d3cc620903d9e6291540cf503496b036e71b015a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3cc620903d9e6291540cf503496b036e71b015a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6dd194e2ce201d057e4faaecc36d19e0d3695f57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dd194e2ce201d057e4faaecc36d19e0d3695f57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dd194e2ce201d057e4faaecc36d19e0d3695f57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dd194e2ce201d057e4faaecc36d19e0d3695f57/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4320bde42c6497b701e2e6b8f1c5069bed19818", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4320bde42c6497b701e2e6b8f1c5069bed19818", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4320bde42c6497b701e2e6b8f1c5069bed19818"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "7add82aa39e37f5949700fe26b12d37dcd88506d", "filename": "gcc/cp/decl.cc", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd194e2ce201d057e4faaecc36d19e0d3695f57/gcc%2Fcp%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd194e2ce201d057e4faaecc36d19e0d3695f57/gcc%2Fcp%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.cc?ref=6dd194e2ce201d057e4faaecc36d19e0d3695f57", "patch": "@@ -16314,8 +16314,11 @@ start_enum (tree name, tree enumtype, tree underlying_type,\n       else if (dependent_type_p (underlying_type))\n \tENUM_UNDERLYING_TYPE (enumtype) = underlying_type;\n       else\n-        error (\"underlying type %qT of %qT must be an integral type\", \n-               underlying_type, enumtype);\n+\t{\n+\t  error (\"underlying type %qT of %qT must be an integral type\", \n+\t\t underlying_type, enumtype);\n+\t  ENUM_UNDERLYING_TYPE (enumtype) = integer_type_node;\n+\t}\n     }\n \n   /* If into a template class, the returned enum is always the first"}, {"sha": "235bb1173d5c27f2f1f6c5c44ac1166586bdd0bb", "filename": "gcc/testsuite/g++.dg/parse/pr96442.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd194e2ce201d057e4faaecc36d19e0d3695f57/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr96442.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd194e2ce201d057e4faaecc36d19e0d3695f57/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr96442.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr96442.C?ref=6dd194e2ce201d057e4faaecc36d19e0d3695f57", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+enum struct a : struct {};\n+template <class b> enum class a : class c{};\n+enum struct a {b};\n+// { dg-excess-errors \"\" }"}]}