{"sha": "aeb76991de5a1a2d628685c01d66871459f8fc4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWViNzY5OTFkZTVhMWEyZDYyODY4NWMwMWQ2Njg3MTQ1OWY4ZmM0Zg==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@waitaki.otago.ac.nz", "date": "2001-10-23T00:28:56Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2001-10-23T00:28:56Z"}, "message": "linux_threads.c (GC_init_parallel): Do not declare as a static constructor.\n\n\t* linux_threads.c (GC_init_parallel): Do not declare as a static\n\tconstructor.\n\t* include/gc.h (GC_init): Declare here. Add description.\n\t* include/private/gc_priv.h (GC_init): Remove declaration.\n\nFrom-SVN: r46420", "tree": {"sha": "de56600c16419b970a38e8a7932d6f2c3e30d191", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de56600c16419b970a38e8a7932d6f2c3e30d191"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aeb76991de5a1a2d628685c01d66871459f8fc4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeb76991de5a1a2d628685c01d66871459f8fc4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeb76991de5a1a2d628685c01d66871459f8fc4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeb76991de5a1a2d628685c01d66871459f8fc4f/comments", "author": null, "committer": null, "parents": [{"sha": "b45bc005dc8978f353795c2886992df4a4e140f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b45bc005dc8978f353795c2886992df4a4e140f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b45bc005dc8978f353795c2886992df4a4e140f1"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "2d67f75489a2fafaf4a58aca7b155c392fb003fb", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeb76991de5a1a2d628685c01d66871459f8fc4f/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeb76991de5a1a2d628685c01d66871459f8fc4f/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=aeb76991de5a1a2d628685c01d66871459f8fc4f", "patch": "@@ -1,3 +1,10 @@\n+2001-10-22  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n+\n+\t* linux_threads.c (GC_init_parallel): Do not declare as a static\n+\tconstructor.\n+\t* include/gc.h (GC_init): Declare here. Add description.\n+\t* include/private/gc_priv.h (GC_init): Remove declaration.\n+\n 2001-10-16  Loren J. Rittle  <ljrittle@acm.org>\n \n \t* include/gc_pthread_redirects.h: Generalize test to use GC_PTHREADS."}, {"sha": "c73ecc0ae7a580f468f7888ee304a44c0a2f9150", "filename": "boehm-gc/include/gc.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeb76991de5a1a2d628685c01d66871459f8fc4f/boehm-gc%2Finclude%2Fgc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeb76991de5a1a2d628685c01d66871459f8fc4f/boehm-gc%2Finclude%2Fgc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fgc.h?ref=aeb76991de5a1a2d628685c01d66871459f8fc4f", "patch": "@@ -297,6 +297,14 @@ GC_API int GC_dont_precollect;  /* Don't collect as part of \t\t*/\n \t\t\t\t/* Wizards only.\t\t\t*/\n \n /* Public procedures */\n+\n+/* Initialize the collector.  This is only required when using thread-local\n+ * allocation, since unlike the regular allocation routines, GC_local_malloc\n+ * is not self-initializing.  If you use GC_local_malloc you should arrange\n+ * to call this somehow (e.g. from a constructor) before doing any allocation.\n+ */\n+GC_API void GC_init GC_PROTO((void));\n+\n /*\n  * general purpose allocation routines, with roughly malloc calling conv.\n  * The atomic versions promise that no relevant pointers are contained"}, {"sha": "92067d24e707091981f2974bb3ae3c7dac7dadc4", "filename": "boehm-gc/include/private/gc_priv.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeb76991de5a1a2d628685c01d66871459f8fc4f/boehm-gc%2Finclude%2Fprivate%2Fgc_priv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeb76991de5a1a2d628685c01d66871459f8fc4f/boehm-gc%2Finclude%2Fprivate%2Fgc_priv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fprivate%2Fgc_priv.h?ref=aeb76991de5a1a2d628685c01d66871459f8fc4f", "patch": "@@ -1629,7 +1629,6 @@ GC_bool GC_collect_or_expand GC_PROTO(( \\\n   \t\t\t\t/* blocks available.  Should be called\t*/\n   \t\t\t\t/* until the blocks are available or\t*/\n   \t\t\t\t/* until it fails by returning FALSE.\t*/\n-GC_API void GC_init GC_PROTO((void)); /* Initialize collector.\t\t*/\n \n #if defined(MSWIN32) || defined(MSWINCE)\n   void GC_deinit GC_PROTO((void));"}, {"sha": "b26988cef9e5d5b0158148b4b8149e9d09180c2c", "filename": "boehm-gc/linux_threads.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeb76991de5a1a2d628685c01d66871459f8fc4f/boehm-gc%2Flinux_threads.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeb76991de5a1a2d628685c01d66871459f8fc4f/boehm-gc%2Flinux_threads.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Flinux_threads.c?ref=aeb76991de5a1a2d628685c01d66871459f8fc4f", "patch": "@@ -204,11 +204,7 @@ GC_thread GC_lookup_thread(pthread_t id);\n \n static GC_bool parallel_initialized = FALSE;\n \n-# if defined(__GNUC__)\n-    void GC_init_parallel() __attribute__ ((constructor));\n-# else\n-    void GC_init_parallel();\n-# endif\n+void GC_init_parallel();\n \n # if defined(THREAD_LOCAL_ALLOC) && !defined(DBG_HDRS_ALL)\n "}]}