{"sha": "b97de419c269933d065a5b30ea2c828966eb30c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk3ZGU0MTljMjY5OTMzZDA2NWE1YjMwZWEyYzgyODk2NmViMzBjOA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2013-12-25T22:44:04Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2013-12-25T22:44:04Z"}, "message": "Remove target_cpu_default/cpu_names\n\nAdd processor names to processor_target_table and use it instead of\ntarget_cpu_default and cpu_names.\n\n\tPR target/59587\n\t* config/i386/i386.c (struct ptt): Add a field for processor\n\tname.\n\t(processor_target_table): Sync with processor_type.  Add\n\tprocessor names.\n\t(cpu_names): Removed.\n\t(ix86_option_override_internal): Default x_ix86_tune_string\n\tto processor_target_table[TARGET_CPU_DEFAULT].name.\n\t(ix86_function_specific_print): Assert arch and tune <\n\tPROCESSOR_max.  Use processor_target_table to print arch and\n\ttune names.\n\t* config/i386/i386.h (TARGET_CPU_DEFAULT): Default to\n\tPROCESSOR_GENERIC.\n\t(target_cpu_default): Removed.\n\t(processor_type): Reordered.\n\nFrom-SVN: r206202", "tree": {"sha": "766b102d9ba673a155504f35213060130819ee18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/766b102d9ba673a155504f35213060130819ee18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b97de419c269933d065a5b30ea2c828966eb30c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b97de419c269933d065a5b30ea2c828966eb30c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b97de419c269933d065a5b30ea2c828966eb30c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b97de419c269933d065a5b30ea2c828966eb30c8/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce2b81bfce5da65fc02acd319b3f0552d9fa9868", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce2b81bfce5da65fc02acd319b3f0552d9fa9868", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce2b81bfce5da65fc02acd319b3f0552d9fa9868"}], "stats": {"total": 202, "additions": 60, "deletions": 142}, "files": [{"sha": "b7740743301b0c6a2693edc2ae47ee8c7d049c69", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b97de419c269933d065a5b30ea2c828966eb30c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b97de419c269933d065a5b30ea2c828966eb30c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b97de419c269933d065a5b30ea2c828966eb30c8", "patch": "@@ -1,3 +1,21 @@\n+2013-12-25   H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/59587\n+\t* config/i386/i386.c (struct ptt): Add a field for processor\n+\tname.\n+\t(processor_target_table): Sync with processor_type.  Add\n+\tprocessor names.\n+\t(cpu_names): Removed.\n+\t(ix86_option_override_internal): Default x_ix86_tune_string\n+\tto processor_target_table[TARGET_CPU_DEFAULT].name.\n+\t(ix86_function_specific_print): Assert arch and tune <\n+\tPROCESSOR_max.  Use processor_target_table to print arch and\n+\ttune names.\n+\t* config/i386/i386.h (TARGET_CPU_DEFAULT): Default to\n+\tPROCESSOR_GENERIC.\n+\t(target_cpu_default): Removed.\n+\t(processor_type): Reordered.\n+\n 2013-12-25  Allan Sandfeld Jensen  <sandfeld@kde.org>\n \t    H.J. Lu  <hongjiu.lu@intel.com>\n "}, {"sha": "a6cc206750aa7162a738e23ee5b8026c6cd130de", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 32, "deletions": 84, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b97de419c269933d065a5b30ea2c828966eb30c8/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b97de419c269933d065a5b30ea2c828966eb30c8/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b97de419c269933d065a5b30ea2c828966eb30c8", "patch": "@@ -2375,6 +2375,7 @@ static tree ix86_veclibabi_acml (enum built_in_function, tree, tree);\n /* Processor target table, indexed by processor number */\n struct ptt\n {\n+  const char *const name;\t\t\t/* processor name  */\n   const struct processor_costs *cost;\t\t/* Processor costs */\n   const int align_loop;\t\t\t\t/* Default alignments.  */\n   const int align_loop_max_skip;\n@@ -2383,83 +2384,33 @@ struct ptt\n   const int align_func;\n };\n \n+/* This table must be in sync with enum processor_type in i386.h.  */ \n static const struct ptt processor_target_table[PROCESSOR_max] =\n {\n-  {&i386_cost, 4, 3, 4, 3, 4},\n-  {&i486_cost, 16, 15, 16, 15, 16},\n-  {&pentium_cost, 16, 7, 16, 7, 16},\n-  {&pentiumpro_cost, 16, 15, 16, 10, 16},\n-  {&geode_cost, 0, 0, 0, 0, 0},\n-  {&k6_cost, 32, 7, 32, 7, 32},\n-  {&athlon_cost, 16, 7, 16, 7, 16},\n-  {&pentium4_cost, 0, 0, 0, 0, 0},\n-  {&k8_cost, 16, 7, 16, 7, 16},\n-  {&nocona_cost, 0, 0, 0, 0, 0},\n-  /* Core 2  */\n-  {&core_cost, 16, 10, 16, 10, 16},\n-  /* Nehalem  */\n-  {&core_cost, 16, 10, 16, 10, 16},\n-  /* Sandy Bridge  */\n-  {&core_cost, 16, 10, 16, 10, 16},\n-  /* Haswell  */\n-  {&core_cost, 16, 10, 16, 10, 16},\n-  /* Bonnell  */\n-  {&atom_cost, 16, 15, 16, 7, 16},\n-  /* Silvermont  */\n-  {&slm_cost, 16, 15, 16, 7, 16},\n-  {&generic_cost, 16, 10, 16, 10, 16},\n-  {&amdfam10_cost, 32, 24, 32, 7, 32},\n-  {&bdver1_cost, 16, 10, 16, 7, 11},\n-  {&bdver2_cost, 16, 10, 16, 7, 11},\n-  {&bdver3_cost, 16, 10, 16, 7, 11},\n-  {&bdver4_cost, 16, 10, 16, 7, 11},\n-  {&btver1_cost, 16, 10, 16, 7, 11},\n-  {&btver2_cost, 16, 10, 16, 7, 11}\n-};\n-\n-static const char *const cpu_names[TARGET_CPU_DEFAULT_max] =\n-{\n-  \"generic\",\n-  \"i386\",\n-  \"i486\",\n-  \"pentium\",\n-  \"pentium-mmx\",\n-  \"pentiumpro\",\n-  \"pentium2\",\n-  \"pentium3\",\n-  \"pentium4\",\n-  \"pentium-m\",\n-  \"prescott\",\n-  \"nocona\",\n-  \"core2\",\n-  \"corei7\",\n-  \"corei7-avx\",\n-  \"core-avx2\",\n-  \"atom\",\n-  \"slm\",\n-  \"nehalem\",\n-  \"westmere\",\n-  \"sandybridge\",\n-  \"ivybridge\",\n-  \"haswell\",\n-  \"broadwell\",\n-  \"bonnell\",\n-  \"silvermont\",\n-  \"intel\",\n-  \"geode\",\n-  \"k6\",\n-  \"k6-2\",\n-  \"k6-3\",\n-  \"athlon\",\n-  \"athlon-4\",\n-  \"k8\",\n-  \"amdfam10\",\n-  \"bdver1\",\n-  \"bdver2\",\n-  \"bdver3\",\n-  \"bdver4\",\n-  \"btver1\",\n-  \"btver2\"\n+  {\"generic\", &generic_cost, 16, 10, 16, 10, 16},\n+  {\"i386\", &i386_cost, 4, 3, 4, 3, 4},\n+  {\"i486\", &i486_cost, 16, 15, 16, 15, 16},\n+  {\"pentium\", &pentium_cost, 16, 7, 16, 7, 16},\n+  {\"pentiumpro\", &pentiumpro_cost, 16, 15, 16, 10, 16},\n+  {\"pentium4\", &pentium4_cost, 0, 0, 0, 0, 0},\n+  {\"nocona\", &nocona_cost, 0, 0, 0, 0, 0},\n+  {\"core2\", &core_cost, 16, 10, 16, 10, 16},\n+  {\"nehalem\", &core_cost, 16, 10, 16, 10, 16},\n+  {\"sandybridge\", &core_cost, 16, 10, 16, 10, 16},\n+  {\"haswell\", &core_cost, 16, 10, 16, 10, 16},\n+  {\"bonnell\", &atom_cost, 16, 15, 16, 7, 16},\n+  {\"silvermont\", &slm_cost, 16, 15, 16, 7, 16},\n+  {\"geode\", &geode_cost, 0, 0, 0, 0, 0},\n+  {\"k6\", &k6_cost, 32, 7, 32, 7, 32},\n+  {\"athlon\", &athlon_cost, 16, 7, 16, 7, 16},\n+  {\"k8\", &k8_cost, 16, 7, 16, 7, 16},\n+  {\"amdfam10\", &amdfam10_cost, 32, 24, 32, 7, 32},\n+  {\"bdver1\", &bdver1_cost, 16, 10, 16, 7, 11},\n+  {\"bdver2\", &bdver2_cost, 16, 10, 16, 7, 11},\n+  {\"bdver3\", &bdver3_cost, 16, 10, 16, 7, 11},\n+  {\"bdver4\", &bdver4_cost, 16, 10, 16, 7, 11},\n+  {\"btver1\", &btver1_cost, 16, 10, 16, 7, 11},\n+  {\"btver2\", &btver2_cost, 16, 10, 16, 7, 11}\n };\n \f\n static bool\n@@ -3360,7 +3311,8 @@ ix86_option_override_internal (bool main_args_p,\n \topts->x_ix86_tune_string = opts->x_ix86_arch_string;\n       if (!opts->x_ix86_tune_string)\n \t{\n-\t  opts->x_ix86_tune_string = cpu_names[TARGET_CPU_DEFAULT];\n+\t  opts->x_ix86_tune_string\n+\t    = processor_target_table[TARGET_CPU_DEFAULT].name;\n \t  ix86_tune_defaulted = 1;\n \t}\n \n@@ -4411,19 +4363,15 @@ ix86_function_specific_print (FILE *file, int indent,\n     = ix86_target_string (ptr->x_ix86_isa_flags, ptr->x_target_flags,\n \t\t\t  NULL, NULL, ptr->x_ix86_fpmath, false);\n \n+  gcc_assert (ptr->arch < PROCESSOR_max);\n   fprintf (file, \"%*sarch = %d (%s)\\n\",\n \t   indent, \"\",\n-\t   ptr->arch,\n-\t   ((ptr->arch < TARGET_CPU_DEFAULT_max)\n-\t    ? cpu_names[ptr->arch]\n-\t    : \"<unknown>\"));\n+\t   ptr->arch, processor_target_table[ptr->arch].name);\n \n+  gcc_assert (ptr->tune < PROCESSOR_max);\n   fprintf (file, \"%*stune = %d (%s)\\n\",\n \t   indent, \"\",\n-\t   ptr->tune,\n-\t   ((ptr->tune < TARGET_CPU_DEFAULT_max)\n-\t    ? cpu_names[ptr->tune]\n-\t    : \"<unknown>\"));\n+\t   ptr->tune, processor_target_table[ptr->tune].name);\n \n   fprintf (file, \"%*sbranch_cost = %d\\n\", indent, \"\", ptr->branch_cost);\n "}, {"sha": "5976435a38967d69d549c167ed32ba7753cd52ce", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 10, "deletions": 58, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b97de419c269933d065a5b30ea2c828966eb30c8/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b97de419c269933d065a5b30ea2c828966eb30c8/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=b97de419c269933d065a5b30ea2c828966eb30c8", "patch": "@@ -247,10 +247,10 @@ extern const struct processor_costs ix86_size_cost;\n \n /* Macros used in the machine description to test the flags.  */\n \n-/* configure can arrange to make this 2, to force a 486.  */\n+/* configure can arrange to change it.  */\n \n #ifndef TARGET_CPU_DEFAULT\n-#define TARGET_CPU_DEFAULT TARGET_CPU_DEFAULT_generic\n+#define TARGET_CPU_DEFAULT PROCESSOR_GENERIC\n #endif\n \n #ifndef TARGET_FPMATH_DEFAULT\n@@ -607,55 +607,6 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n /* Target Pragmas.  */\n #define REGISTER_TARGET_PRAGMAS() ix86_register_pragmas ()\n \n-enum target_cpu_default\n-{\n-  TARGET_CPU_DEFAULT_generic = 0,\n-\n-  TARGET_CPU_DEFAULT_i386,\n-  TARGET_CPU_DEFAULT_i486,\n-  TARGET_CPU_DEFAULT_pentium,\n-  TARGET_CPU_DEFAULT_pentium_mmx,\n-  TARGET_CPU_DEFAULT_pentiumpro,\n-  TARGET_CPU_DEFAULT_pentium2,\n-  TARGET_CPU_DEFAULT_pentium3,\n-  TARGET_CPU_DEFAULT_pentium4,\n-  TARGET_CPU_DEFAULT_pentium_m,\n-  TARGET_CPU_DEFAULT_prescott,\n-  TARGET_CPU_DEFAULT_nocona,\n-  TARGET_CPU_DEFAULT_core2,\n-  TARGET_CPU_DEFAULT_corei7,\n-  TARGET_CPU_DEFAULT_corei7_avx,\n-  TARGET_CPU_DEFAULT_core_avx2,\n-  TARGET_CPU_DEFAULT_atom,\n-  TARGET_CPU_DEFAULT_slm,\n-  TARGET_CPU_DEFAULT_nehalem,\n-  TARGET_CPU_DEFAULT_westmere,\n-  TARGET_CPU_DEFAULT_sandybridge,\n-  TARGET_CPU_DEFAULT_ivybridge,\n-  TARGET_CPU_DEFAULT_haswell,\n-  TARGET_CPU_DEFAULT_broadwell,\n-  TARGET_CPU_DEFAULT_bonnell,\n-  TARGET_CPU_DEFAULT_silvermont,\n-  TARGET_CPU_DEFAULT_intel,\n-\n-  TARGET_CPU_DEFAULT_geode,\n-  TARGET_CPU_DEFAULT_k6,\n-  TARGET_CPU_DEFAULT_k6_2,\n-  TARGET_CPU_DEFAULT_k6_3,\n-  TARGET_CPU_DEFAULT_athlon,\n-  TARGET_CPU_DEFAULT_athlon_sse,\n-  TARGET_CPU_DEFAULT_k8,\n-  TARGET_CPU_DEFAULT_amdfam10,\n-  TARGET_CPU_DEFAULT_bdver1,\n-  TARGET_CPU_DEFAULT_bdver2,\n-  TARGET_CPU_DEFAULT_bdver3,\n-  TARGET_CPU_DEFAULT_bdver4,\n-  TARGET_CPU_DEFAULT_btver1,\n-  TARGET_CPU_DEFAULT_btver2,\n-\n-  TARGET_CPU_DEFAULT_max\n-};\n-\n #ifndef CC1_SPEC\n #define CC1_SPEC \"%(cc1_cpu) \"\n #endif\n@@ -2213,27 +2164,28 @@ do {\t\t\t\t\t\t\t\t\t\\\n    with x86-64 medium memory model */\n #define DEFAULT_LARGE_SECTION_THRESHOLD 65536\n \f\n-/* Which processor to tune code generation for.  */\n+/* Which processor to tune code generation for.  These must be in sync\n+   with processor_target_table in i386.c.  */ \n \n enum processor_type\n {\n-  PROCESSOR_I386 = 0,\t\t\t/* 80386 */\n+  PROCESSOR_GENERIC = 0,\n+  PROCESSOR_I386,\t\t\t/* 80386 */\n   PROCESSOR_I486,\t\t\t/* 80486DX, 80486SX, 80486DX[24] */\n   PROCESSOR_PENTIUM,\n   PROCESSOR_PENTIUMPRO,\n-  PROCESSOR_GEODE,\n-  PROCESSOR_K6,\n-  PROCESSOR_ATHLON,\n   PROCESSOR_PENTIUM4,\n-  PROCESSOR_K8,\n   PROCESSOR_NOCONA,\n   PROCESSOR_CORE2,\n   PROCESSOR_NEHALEM,\n   PROCESSOR_SANDYBRIDGE,\n   PROCESSOR_HASWELL,\n   PROCESSOR_BONNELL,\n   PROCESSOR_SILVERMONT,\n-  PROCESSOR_GENERIC,\n+  PROCESSOR_GEODE,\n+  PROCESSOR_K6,\n+  PROCESSOR_ATHLON,\n+  PROCESSOR_K8,\n   PROCESSOR_AMDFAM10,\n   PROCESSOR_BDVER1,\n   PROCESSOR_BDVER2,"}]}