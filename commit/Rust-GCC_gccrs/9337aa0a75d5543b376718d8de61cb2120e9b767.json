{"sha": "9337aa0a75d5543b376718d8de61cb2120e9b767", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMzN2FhMGE3NWQ1NTQzYjM3NjcxOGQ4ZGU2MWNiMjEyMGU5Yjc2Nw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-27T13:24:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-27T13:24:40Z"}, "message": "[multiple changes]\n\n2009-07-27  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Function_Return): Set Referenced on return\n\tobjects, since these are implicitly referenced by the return statement.\n\t* sem_warn.adb (Warn_On_Unreferenced_Entity): No longer a need to test\n\tIs_Return_Object in this procedure, as return objects will never make\n\tit here since they're now marked as Referenced.\n\n2009-07-27  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch2.adb, sem_util.adb, sem_util.ads: Minor reformnatting\n\nFrom-SVN: r150111", "tree": {"sha": "f2f6a4a1b6a1297ad50c0ca8b6f279abe368f380", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2f6a4a1b6a1297ad50c0ca8b6f279abe368f380"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9337aa0a75d5543b376718d8de61cb2120e9b767", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9337aa0a75d5543b376718d8de61cb2120e9b767", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9337aa0a75d5543b376718d8de61cb2120e9b767", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9337aa0a75d5543b376718d8de61cb2120e9b767/comments", "author": null, "committer": null, "parents": [{"sha": "75ba322d4b345347a789f169532e50c9bd388971", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ba322d4b345347a789f169532e50c9bd388971", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75ba322d4b345347a789f169532e50c9bd388971"}], "stats": {"total": 56, "additions": 39, "deletions": 17}, "files": [{"sha": "db01fc49e1855bcb9a22936783b160bc09a032ef", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9337aa0a75d5543b376718d8de61cb2120e9b767/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9337aa0a75d5543b376718d8de61cb2120e9b767/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9337aa0a75d5543b376718d8de61cb2120e9b767", "patch": "@@ -1,3 +1,15 @@\n+2009-07-27  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Function_Return): Set Referenced on return\n+\tobjects, since these are implicitly referenced by the return statement.\n+\t* sem_warn.adb (Warn_On_Unreferenced_Entity): No longer a need to test\n+\tIs_Return_Object in this procedure, as return objects will never make\n+\tit here since they're now marked as Referenced.\n+\n+2009-07-27  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch2.adb, sem_util.adb, sem_util.ads: Minor reformnatting\n+\n 2009-07-27  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch6.adb (Expand_Call): Reset Is_Known_Valid after call"}, {"sha": "e0be4042f11ebd859221bd7524178b861e13f19a", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9337aa0a75d5543b376718d8de61cb2120e9b767/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9337aa0a75d5543b376718d8de61cb2120e9b767/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=9337aa0a75d5543b376718d8de61cb2120e9b767", "patch": "@@ -384,15 +384,17 @@ package body Exp_Ch2 is\n         and then not Is_LHS (N)\n         and then not Is_Actual_Out_Parameter (N)\n         and then (Nkind (Parent (N)) /= N_Attribute_Reference\n-                  or else Attribute_Name (Parent (N)) /= Name_Valid)\n+                   or else Attribute_Name (Parent (N)) /= Name_Valid)\n       then\n          Write_Location (Sloc (N));\n          Write_Str (\": Read from scalar \"\"\");\n          Write_Name (Chars (N));\n          Write_Str (\"\"\"\");\n+\n          if Is_Known_Valid (E) then\n             Write_Str (\", Is_Known_Valid\");\n          end if;\n+\n          Write_Eol;\n       end if;\n "}, {"sha": "daefd11e4ace581a7107f96e04cdc2f48631fa47", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9337aa0a75d5543b376718d8de61cb2120e9b767/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9337aa0a75d5543b376718d8de61cb2120e9b767/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=9337aa0a75d5543b376718d8de61cb2120e9b767", "patch": "@@ -681,6 +681,11 @@ package body Sem_Ch6 is\n                end if;\n             end if;\n \n+            --  Mark the return object as referenced, since the return is an\n+            --  implicit reference of the object.\n+\n+            Set_Referenced (Defining_Identifier (Obj_Decl));\n+\n             Check_References (Stm_Entity);\n          end;\n       end if;"}, {"sha": "1786b51cee4a113b0efa646f91de0d669667b331", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9337aa0a75d5543b376718d8de61cb2120e9b767/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9337aa0a75d5543b376718d8de61cb2120e9b767/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=9337aa0a75d5543b376718d8de61cb2120e9b767", "patch": "@@ -5343,7 +5343,6 @@ package body Sem_Util is\n       Call   : Node_Id;\n    begin\n       Find_Actual (N, Formal, Call);\n-\n       return Present (Formal)\n         and then Ekind (Formal) = E_Out_Parameter;\n    end Is_Actual_Out_Parameter;\n@@ -6131,8 +6130,12 @@ package body Sem_Util is\n    -- Is_LHS --\n    ------------\n \n+   --  We seem to have a lot of overlapping functions that do similar things\n+   --  (testing for left hand sides or lvalues???). Anyway, since this one is\n+   --  purely syntactic, it should be in Sem_Aux I would think???\n+\n    function Is_LHS (N : Node_Id) return Boolean is\n-      P    : constant Node_Id := Parent (N);\n+      P : constant Node_Id := Parent (N);\n    begin\n       return Nkind (P) = N_Assignment_Statement\n         and then Name (P) = N;"}, {"sha": "5906d98677beed261b38e898a0b7f9300fca7861", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9337aa0a75d5543b376718d8de61cb2120e9b767/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9337aa0a75d5543b376718d8de61cb2120e9b767/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=9337aa0a75d5543b376718d8de61cb2120e9b767", "patch": "@@ -662,11 +662,10 @@ package Sem_Util is\n \n    function Is_Dependent_Component_Of_Mutable_Object\n      (Object : Node_Id) return Boolean;\n-   --  Returns True if Object is the name of a subcomponent that\n-   --  depends on discriminants of a variable whose nominal subtype\n-   --  is unconstrained and not indefinite, and the variable is\n-   --  not aliased. Otherwise returns False. The nodes passed\n-   --  to this function are assumed to denote objects.\n+   --  Returns True if Object is the name of a subcomponent that depends on\n+   --  discriminants of a variable whose nominal subtype is unconstrained and\n+   --  not indefinite, and the variable is not aliased. Otherwise returns\n+   --  False. The nodes passed to this function are assumed to denote objects.\n \n    function Is_Dereferenced (N : Node_Id) return Boolean;\n    --  N is a subexpression node of an access type. This function returns\n@@ -693,14 +692,13 @@ package Sem_Util is\n    --  point type T, i.e. if it is an exact multiple of Small.\n \n    function Is_Fully_Initialized_Type (Typ : Entity_Id) return Boolean;\n-   --  Typ is a type entity. This function returns true if this type is\n-   --  fully initialized, meaning that an object of the type is fully\n-   --  initialized. Note that initialization resulting from the use of\n-   --  pragma Normalized_Scalars does not count. Note that this is only\n-   --  used for the purpose of issuing warnings for objects that are\n-   --  potentially referenced uninitialized. This means that the result\n-   --  returned is not crucial, but probably should err on the side of\n-   --  thinking things are fully initialized if it does not know.\n+   --  Typ is a type entity. This function returns true if this type is fully\n+   --  initialized, meaning that an object of the type is fully initialized.\n+   --  Note that initialization resulting from use of pragma Normalized_Scalars\n+   --  does not count. Note that this is only used for the purpose of issuing\n+   --  warnings for objects that are potentially referenced uninitialized. This\n+   --  means that the result returned is not crucial, but should err on the\n+   --  side of thinking things are fully initialized if it does not know.\n \n    function Is_Inherited_Operation (E : Entity_Id) return Boolean;\n    --  E is a subprogram. Return True is E is an implicit operation inherited\n@@ -709,6 +707,9 @@ package Sem_Util is\n    function Is_LHS (N : Node_Id) return Boolean;\n    --  Returns True iff N is an identifier used as Name in an assignment\n    --  statement.\n+   --  Which is true, the spec or the body???\n+   --  The body does not restrict N to be an identifier, it can be any\n+   --  expression on the left side of an assignment ???\n \n    function Is_Library_Level_Entity (E : Entity_Id) return Boolean;\n    --  A library-level declaration is one that is accessible from Standard,"}, {"sha": "e917ccf7327dc131e1fb51e846ed87f40ab10006", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9337aa0a75d5543b376718d8de61cb2120e9b767/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9337aa0a75d5543b376718d8de61cb2120e9b767/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=9337aa0a75d5543b376718d8de61cb2120e9b767", "patch": "@@ -3904,7 +3904,6 @@ package body Sem_Warn is\n                then\n                   if Warn_On_Modified_Unread\n                     and then not Is_Imported (E)\n-                    and then not Is_Return_Object (E)\n                     and then not Is_Aliased (E)\n                     and then No (Renamed_Object (E))\n                   then"}]}