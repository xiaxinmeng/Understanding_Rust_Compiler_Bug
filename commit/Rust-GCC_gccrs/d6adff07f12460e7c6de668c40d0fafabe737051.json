{"sha": "d6adff07f12460e7c6de668c40d0fafabe737051", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZhZGZmMDdmMTI0NjBlN2M2ZGU2NjhjNDBkMGZhZmFiZTczNzA1MQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-04-07T14:03:55Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-04-07T14:03:55Z"}, "message": "re PR tree-optimization/60766 (Wrong optimization with -O2)\n\n2014-04-07  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/60766\n\t* tree-ssa-loop-ivopts.c (cand_value_at): Compute in an\n\tunsigned type.\n\t(may_eliminate_iv): Convert cand_value_at result to desired\n\ttype.\n\n\t* gcc.dg/torture/pr60766.c: New testcase.\n\nFrom-SVN: r209190", "tree": {"sha": "839f5648f4c5fbe2a97503797ffa6be8596a1707", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/839f5648f4c5fbe2a97503797ffa6be8596a1707"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6adff07f12460e7c6de668c40d0fafabe737051", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6adff07f12460e7c6de668c40d0fafabe737051", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6adff07f12460e7c6de668c40d0fafabe737051", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6adff07f12460e7c6de668c40d0fafabe737051/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9d7aea5fbc096600902e28e3203d67379f301f2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d7aea5fbc096600902e28e3203d67379f301f2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d7aea5fbc096600902e28e3203d67379f301f2b"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "b7743c71e7dfc635590310ee3f0cbe41c617b703", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6adff07f12460e7c6de668c40d0fafabe737051/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6adff07f12460e7c6de668c40d0fafabe737051/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6adff07f12460e7c6de668c40d0fafabe737051", "patch": "@@ -1,3 +1,11 @@\n+2014-04-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/60766\n+\t* tree-ssa-loop-ivopts.c (cand_value_at): Compute in an\n+\tunsigned type.\n+\t(may_eliminate_iv): Convert cand_value_at result to desired\n+\ttype.\n+\n 2014-04-07  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/60731"}, {"sha": "a75405d5414fa61343670f645daca397167ff30c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6adff07f12460e7c6de668c40d0fafabe737051/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6adff07f12460e7c6de668c40d0fafabe737051/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d6adff07f12460e7c6de668c40d0fafabe737051", "patch": "@@ -1,3 +1,8 @@\n+2014-04-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/60766\n+\t* gcc.dg/torture/pr60766.c: New testcase.\n+\n 2014-04-07  Jason Merrill  <jason@redhat.com>\n \n \t* lib/gcc-dg.exp (dg-build-dso): New."}, {"sha": "6f16e3b7408b1c50eadb08ce621d4050bb419067", "filename": "gcc/testsuite/gcc.dg/torture/pr60766.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6adff07f12460e7c6de668c40d0fafabe737051/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr60766.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6adff07f12460e7c6de668c40d0fafabe737051/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr60766.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr60766.c?ref=d6adff07f12460e7c6de668c40d0fafabe737051", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do run } */\n+\n+int m = 9;\n+\n+int main()\n+{\n+  int n, x;\n+\n+  n = m;\n+  for (x = 0; x <= n; x++)\n+    if (n == x + (x + 1) + (x + 2))\n+      return 0;\n+\n+  __builtin_abort();\n+}"}, {"sha": "8bc4e8fc791358f7cec292b7c1c4eed1b65b674d", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6adff07f12460e7c6de668c40d0fafabe737051/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6adff07f12460e7c6de668c40d0fafabe737051/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=d6adff07f12460e7c6de668c40d0fafabe737051", "patch": "@@ -4363,15 +4363,19 @@ cand_value_at (struct loop *loop, struct iv_cand *cand, gimple at, tree niter,\n   tree steptype = type;\n   if (POINTER_TYPE_P (type))\n     steptype = sizetype;\n+  steptype = unsigned_type_for (type);\n \n-  tree_to_aff_combination (iv->step, steptype, &step);\n+  tree_to_aff_combination (iv->step, TREE_TYPE (iv->step), &step);\n+  aff_combination_convert (&step, steptype);\n   tree_to_aff_combination (niter, TREE_TYPE (niter), &nit);\n   aff_combination_convert (&nit, steptype);\n   aff_combination_mult (&nit, &step, &delta);\n   if (stmt_after_increment (loop, cand, at))\n     aff_combination_add (&delta, &step);\n \n   tree_to_aff_combination (iv->base, type, val);\n+  if (!POINTER_TYPE_P (type))\n+    aff_combination_convert (val, steptype);\n   aff_combination_add (val, &delta);\n }\n \n@@ -4750,7 +4754,8 @@ may_eliminate_iv (struct ivopts_data *data,\n \n   cand_value_at (loop, cand, use->stmt, desc->niter, &bnd);\n \n-  *bound = aff_combination_to_tree (&bnd);\n+  *bound = fold_convert (TREE_TYPE (cand->iv->base),\n+\t\t\t aff_combination_to_tree (&bnd));\n   *comp = iv_elimination_compare (data, use);\n \n   /* It is unlikely that computing the number of iterations using division"}]}