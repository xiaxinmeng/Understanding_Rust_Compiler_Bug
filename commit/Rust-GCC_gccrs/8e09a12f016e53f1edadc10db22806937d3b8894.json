{"sha": "8e09a12f016e53f1edadc10db22806937d3b8894", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUwOWExMmYwMTZlNTNmMWVkYWRjMTBkYjIyODA2OTM3ZDNiODg5NA==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-08-08T14:26:37Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-08-08T14:26:37Z"}, "message": "[libgomp, nvptx] Fall back to cuLinkAddData/cuLinkCreate if _v2 not found\n\nCuda driver api functions cuLinkAddData and cuLinkCreate are available starting\nversion 5.5.  In version 6.5, they are remapped onto _v2 versions.\n\nThe dlopen interface of the libgomp nvptx plugin uses the _v2 versions, so it\nwon't work with a cuda driver with driver api version lower than 6.5.\n\nThis patch fixes the problem by testing for the presence of the _v2 versions,\nand falling back to the original versions in case of absence of the _v2\nversions.\n\nBuild on x86_64 with nvptx accelerator and reg-tested libgomp, both with and\nwithout --without-cuda-driver.\n\n2018-08-08  Tom de Vries  <tdevries@suse.de>\n\n\t* plugin/cuda-lib.def (cuLinkAddData_v2, cuLinkCreate_v2): Declare using\n\tCUDA_ONE_CALL_MAYBE_NULL.\n\t* plugin/plugin-nvptx.c (cuLinkAddData, cuLinkCreate): Undef and declare.\n\t(cuLinkAddData_v2, cuLinkCreate_v2): Declare.\n\t(link_ptx): Fall back to cuLinkAddData/cuLinkCreate if the _v2 versions\n\tare not found.\n\nFrom-SVN: r263408", "tree": {"sha": "5feb1173be84ed942075d7f1805f6ca45fb6fdf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5feb1173be84ed942075d7f1805f6ca45fb6fdf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e09a12f016e53f1edadc10db22806937d3b8894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e09a12f016e53f1edadc10db22806937d3b8894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e09a12f016e53f1edadc10db22806937d3b8894", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e09a12f016e53f1edadc10db22806937d3b8894/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cedd9bd016db29cc7f7f358125a89193d81dfa50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cedd9bd016db29cc7f7f358125a89193d81dfa50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cedd9bd016db29cc7f7f358125a89193d81dfa50"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "4aff6cd9a3325c2092edc0958b2cb8d04e16e5e9", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e09a12f016e53f1edadc10db22806937d3b8894/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e09a12f016e53f1edadc10db22806937d3b8894/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=8e09a12f016e53f1edadc10db22806937d3b8894", "patch": "@@ -1,3 +1,12 @@\n+2018-08-08  Tom de Vries  <tdevries@suse.de>\n+\n+\t* plugin/cuda-lib.def (cuLinkAddData_v2, cuLinkCreate_v2): Declare using\n+\tCUDA_ONE_CALL_MAYBE_NULL.\n+\t* plugin/plugin-nvptx.c (cuLinkAddData, cuLinkCreate): Undef and declare.\n+\t(cuLinkAddData_v2, cuLinkCreate_v2): Declare.\n+\t(link_ptx): Fall back to cuLinkAddData/cuLinkCreate if the _v2 versions\n+\tare not found.\n+\n 2018-08-08  Tom de Vries  <tdevries@suse.de>\n \n \t* plugin/cuda-lib.def (cuGetErrorString): Use CUDA_ONE_CALL_MAYBE_NULL."}, {"sha": "29028b504a052833905f2dae9ff33944cdbcc02b", "filename": "libgomp/plugin/cuda-lib.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e09a12f016e53f1edadc10db22806937d3b8894/libgomp%2Fplugin%2Fcuda-lib.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e09a12f016e53f1edadc10db22806937d3b8894/libgomp%2Fplugin%2Fcuda-lib.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fcuda-lib.def?ref=8e09a12f016e53f1edadc10db22806937d3b8894", "patch": "@@ -19,8 +19,10 @@ CUDA_ONE_CALL_MAYBE_NULL (cuGetErrorString)\n CUDA_ONE_CALL (cuInit)\n CUDA_ONE_CALL (cuLaunchKernel)\n CUDA_ONE_CALL (cuLinkAddData)\n+CUDA_ONE_CALL_MAYBE_NULL (cuLinkAddData_v2)\n CUDA_ONE_CALL (cuLinkComplete)\n CUDA_ONE_CALL (cuLinkCreate)\n+CUDA_ONE_CALL_MAYBE_NULL (cuLinkCreate_v2)\n CUDA_ONE_CALL (cuLinkDestroy)\n CUDA_ONE_CALL (cuMemAlloc)\n CUDA_ONE_CALL (cuMemAllocHost)"}, {"sha": "6799a264976d5102ebe0897c1ab8b53a4008fb30", "filename": "libgomp/plugin/plugin-nvptx.c", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e09a12f016e53f1edadc10db22806937d3b8894/libgomp%2Fplugin%2Fplugin-nvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e09a12f016e53f1edadc10db22806937d3b8894/libgomp%2Fplugin%2Fplugin-nvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-nvptx.c?ref=8e09a12f016e53f1edadc10db22806937d3b8894", "patch": "@@ -54,6 +54,18 @@ extern CUresult cuGetErrorString (CUresult, const char **);\n #define CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_MULTIPROCESSOR 82\n #endif\n \n+#if CUDA_VERSION >= 6050\n+#undef cuLinkCreate\n+#undef cuLinkAddData\n+CUresult cuLinkAddData (CUlinkState, CUjitInputType, void *, size_t,\n+\t\t\tconst char *, unsigned, CUjit_option *, void **);\n+CUresult cuLinkCreate (unsigned, CUjit_option *, void **, CUlinkState *);\n+#else\n+CUresult cuLinkAddData_v2 (CUlinkState, CUjitInputType, void *, size_t,\n+\t\t\t   const char *, unsigned, CUjit_option *, void **);\n+CUresult cuLinkCreate_v2 (unsigned, CUjit_option *, void **, CUlinkState *);\n+#endif\n+\n #define DO_PRAGMA(x) _Pragma (#x)\n \n #if PLUGIN_NVPTX_DYNAMIC\n@@ -938,16 +950,24 @@ link_ptx (CUmodule *module, const struct targ_ptx_obj *ptx_objs,\n       nopts++;\n     }\n \n-  CUDA_CALL (cuLinkCreate, nopts, opts, optvals, &linkstate);\n+  if (CUDA_CALL_EXISTS (cuLinkCreate_v2))\n+    CUDA_CALL (cuLinkCreate_v2, nopts, opts, optvals, &linkstate);\n+  else\n+    CUDA_CALL (cuLinkCreate, nopts, opts, optvals, &linkstate);\n \n   for (; num_objs--; ptx_objs++)\n     {\n       /* cuLinkAddData's 'data' argument erroneously omits the const\n \t qualifier.  */\n       GOMP_PLUGIN_debug (0, \"Loading:\\n---\\n%s\\n---\\n\", ptx_objs->code);\n-      r = CUDA_CALL_NOCHECK (cuLinkAddData, linkstate, CU_JIT_INPUT_PTX,\n-\t\t\t     (char *) ptx_objs->code, ptx_objs->size,\n-\t\t\t     0, 0, 0, 0);\n+      if (CUDA_CALL_EXISTS (cuLinkAddData_v2))\n+\tr = CUDA_CALL_NOCHECK (cuLinkAddData_v2, linkstate, CU_JIT_INPUT_PTX,\n+\t\t\t       (char *) ptx_objs->code, ptx_objs->size,\n+\t\t\t       0, 0, 0, 0);\n+      else\n+\tr = CUDA_CALL_NOCHECK (cuLinkAddData, linkstate, CU_JIT_INPUT_PTX,\n+\t\t\t       (char *) ptx_objs->code, ptx_objs->size,\n+\t\t\t       0, 0, 0, 0);\n       if (r != CUDA_SUCCESS)\n \t{\n \t  GOMP_PLUGIN_error (\"Link error log %s\\n\", &elog[0]);"}]}