{"sha": "cc8a9b8755bf92899be8a936b1a1229e06e942fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M4YTliODc1NWJmOTI4OTliZThhOTM2YjFhMTIyOWUwNmU5NDJmZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-08-06T15:48:37Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-08-06T15:48:37Z"}, "message": "alpha.c (alpha_reorg): If trap is the last active insn in the function, emit NOP after the insn.\n\n\t* config/alpha/alpha.c (alpha_reorg): If trap is the last active\n\tinsn in the function, emit NOP after the insn.\n\nFrom-SVN: r250901", "tree": {"sha": "6a040fac1a20a1c23878b0d8898689c8bbb5b634", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a040fac1a20a1c23878b0d8898689c8bbb5b634"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc8a9b8755bf92899be8a936b1a1229e06e942fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc8a9b8755bf92899be8a936b1a1229e06e942fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc8a9b8755bf92899be8a936b1a1229e06e942fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc8a9b8755bf92899be8a936b1a1229e06e942fd/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9fba2943f1e76245fda610fdb295b7077a5e799d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fba2943f1e76245fda610fdb295b7077a5e799d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fba2943f1e76245fda610fdb295b7077a5e799d"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "4ed00a29bb025f35ba63cb2b6a30b5018544713a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc8a9b8755bf92899be8a936b1a1229e06e942fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc8a9b8755bf92899be8a936b1a1229e06e942fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc8a9b8755bf92899be8a936b1a1229e06e942fd", "patch": "@@ -1,3 +1,8 @@\n+2017-08-06  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/alpha/alpha.c (alpha_reorg): If trap is the last active\n+\tinsn in the function, emit NOP after the insn.\n+\n 2017-08-06  Tom de Vries  <tom@codesourcery.com>\n \n \t* omp-expand.c (expand_oacc_for): Add missing edge probability for tile"}, {"sha": "341ec20d340f849edd129d64a59cc1bb023541e4", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc8a9b8755bf92899be8a936b1a1229e06e942fd/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc8a9b8755bf92899be8a936b1a1229e06e942fd/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=cc8a9b8755bf92899be8a936b1a1229e06e942fd", "patch": "@@ -9456,6 +9456,25 @@ And in the noreturn case:\n \n   if (current_function_has_exception_handlers ())\n     alpha_pad_function_end ();\n+\n+  /* CALL_PAL that implements trap insn, updates program counter to point\n+     after the insn.  In case trap is the last insn in the function,\n+     emit NOP to guarantee that PC remains inside function boundaries.\n+     This workaround is needed to get reliable backtraces.  */\n+  \n+  rtx_insn *insn = prev_active_insn (get_last_insn ());\n+\n+  if (insn && NONJUMP_INSN_P (insn))\n+    {\n+      rtx pat = PATTERN (insn);\n+      if (GET_CODE (pat) == PARALLEL)\n+\t{\n+\t  rtx vec = XVECEXP (pat, 0, 0);\n+\t  if (GET_CODE (vec) == TRAP_IF\n+\t      && XEXP (vec, 0) == const1_rtx)\n+\t    emit_insn_after (gen_unop (), insn);\n+\t}\n+    }\n }\n \f\n static void"}]}