{"sha": "6e8b7d9cd6c483e85dc243ac4edf561ca7d8f7ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU4YjdkOWNkNmM0ODNlODVkYzI0M2FjNGVkZjU2MWNhN2Q4ZjdlZg==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2013-10-11T18:53:52Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2013-10-11T18:53:52Z"}, "message": "vsx.md (*vsx_le_perm_load_v2di): Generalize to handle vector float as well.\n\n2013-10-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* config/rs6000/vsx.md (*vsx_le_perm_load_v2di): Generalize to\n\thandle vector float as well.\n\t(*vsx_le_perm_load_v4si): Likewise.\n\t(*vsx_le_perm_store_v2di): Likewise.\n\t(*vsx_le_perm_store_v4si): Likewise.\n\nFrom-SVN: r203458", "tree": {"sha": "4f8caa168d0b94cd841d8140af2cd58e4f83acfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f8caa168d0b94cd841d8140af2cd58e4f83acfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e8b7d9cd6c483e85dc243ac4edf561ca7d8f7ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e8b7d9cd6c483e85dc243ac4edf561ca7d8f7ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e8b7d9cd6c483e85dc243ac4edf561ca7d8f7ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e8b7d9cd6c483e85dc243ac4edf561ca7d8f7ef/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f200869abc9e4b4dc6e48425bc3cd22fa1799a67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f200869abc9e4b4dc6e48425bc3cd22fa1799a67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f200869abc9e4b4dc6e48425bc3cd22fa1799a67"}], "stats": {"total": 48, "additions": 28, "deletions": 20}, "files": [{"sha": "41e29dc534d1988ada7bb8b76dce1875c59a15f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e8b7d9cd6c483e85dc243ac4edf561ca7d8f7ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e8b7d9cd6c483e85dc243ac4edf561ca7d8f7ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e8b7d9cd6c483e85dc243ac4edf561ca7d8f7ef", "patch": "@@ -1,3 +1,11 @@\n+2013-10-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/vsx.md (*vsx_le_perm_load_v2di): Generalize to\n+\thandle vector float as well.\n+\t(*vsx_le_perm_load_v4si): Likewise.\n+\t(*vsx_le_perm_store_v2di): Likewise.\n+\t(*vsx_le_perm_store_v4si): Likewise.\n+\n 2013-10-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* config/rs6000/vector.md (vec_realign_load<mode>): Generate vperm"}, {"sha": "dfb9ab1978395f37e8d488aedb8d2c86c5052f9b", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e8b7d9cd6c483e85dc243ac4edf561ca7d8f7ef/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e8b7d9cd6c483e85dc243ac4edf561ca7d8f7ef/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=6e8b7d9cd6c483e85dc243ac4edf561ca7d8f7ef", "patch": "@@ -219,18 +219,18 @@\n \n ;; The patterns for LE permuted loads and stores come before the general\n ;; VSX moves so they match first.\n-(define_insn_and_split \"*vsx_le_perm_load_v2di\"\n-  [(set (match_operand:V2DI 0 \"vsx_register_operand\" \"=wa\")\n-        (match_operand:V2DI 1 \"memory_operand\" \"Z\"))]\n+(define_insn_and_split \"*vsx_le_perm_load_<mode>\"\n+  [(set (match_operand:VSX_D 0 \"vsx_register_operand\" \"=wa\")\n+        (match_operand:VSX_D 1 \"memory_operand\" \"Z\"))]\n   \"!BYTES_BIG_ENDIAN && TARGET_VSX\"\n   \"#\"\n   \"!BYTES_BIG_ENDIAN && TARGET_VSX\"\n   [(set (match_dup 2)\n-        (vec_select:V2DI\n+        (vec_select:<MODE>\n           (match_dup 1)\n           (parallel [(const_int 1) (const_int 0)])))\n    (set (match_dup 0)\n-        (vec_select:V2DI\n+        (vec_select:<MODE>\n           (match_dup 2)\n           (parallel [(const_int 1) (const_int 0)])))]\n   \"\n@@ -242,19 +242,19 @@\n   [(set_attr \"type\" \"vecload\")\n    (set_attr \"length\" \"8\")])\n \n-(define_insn_and_split \"*vsx_le_perm_load_v4si\"\n-  [(set (match_operand:V4SI 0 \"vsx_register_operand\" \"=wa\")\n-        (match_operand:V4SI 1 \"memory_operand\" \"Z\"))]\n+(define_insn_and_split \"*vsx_le_perm_load_<mode>\"\n+  [(set (match_operand:VSX_W 0 \"vsx_register_operand\" \"=wa\")\n+        (match_operand:VSX_W 1 \"memory_operand\" \"Z\"))]\n   \"!BYTES_BIG_ENDIAN && TARGET_VSX\"\n   \"#\"\n   \"!BYTES_BIG_ENDIAN && TARGET_VSX\"\n   [(set (match_dup 2)\n-        (vec_select:V4SI\n+        (vec_select:<MODE>\n           (match_dup 1)\n           (parallel [(const_int 2) (const_int 3)\n                      (const_int 0) (const_int 1)])))\n    (set (match_dup 0)\n-        (vec_select:V4SI\n+        (vec_select:<MODE>\n           (match_dup 2)\n           (parallel [(const_int 2) (const_int 3)\n                      (const_int 0) (const_int 1)])))]\n@@ -333,18 +333,18 @@\n   [(set_attr \"type\" \"vecload\")\n    (set_attr \"length\" \"8\")])\n \n-(define_insn_and_split \"*vsx_le_perm_store_v2di\"\n-  [(set (match_operand:V2DI 0 \"memory_operand\" \"=Z\")\n-        (match_operand:V2DI 1 \"vsx_register_operand\" \"+wa\"))]\n+(define_insn_and_split \"*vsx_le_perm_store_<mode>\"\n+  [(set (match_operand:VSX_D 0 \"memory_operand\" \"=Z\")\n+        (match_operand:VSX_D 1 \"vsx_register_operand\" \"+wa\"))]\n   \"!BYTES_BIG_ENDIAN && TARGET_VSX\"\n   \"#\"\n   \"!BYTES_BIG_ENDIAN && TARGET_VSX\"\n   [(set (match_dup 2)\n-        (vec_select:V2DI\n+        (vec_select:<MODE>\n           (match_dup 1)\n           (parallel [(const_int 1) (const_int 0)])))\n    (set (match_dup 0)\n-        (vec_select:V2DI\n+        (vec_select:<MODE>\n           (match_dup 2)\n           (parallel [(const_int 1) (const_int 0)])))]\n   \"\n@@ -356,19 +356,19 @@\n   [(set_attr \"type\" \"vecstore\")\n    (set_attr \"length\" \"8\")])\n \n-(define_insn_and_split \"*vsx_le_perm_store_v4si\"\n-  [(set (match_operand:V4SI 0 \"memory_operand\" \"=Z\")\n-        (match_operand:V4SI 1 \"vsx_register_operand\" \"+wa\"))]\n+(define_insn_and_split \"*vsx_le_perm_store_<mode>\"\n+  [(set (match_operand:VSX_W 0 \"memory_operand\" \"=Z\")\n+        (match_operand:VSX_W 1 \"vsx_register_operand\" \"+wa\"))]\n   \"!BYTES_BIG_ENDIAN && TARGET_VSX\"\n   \"#\"\n   \"!BYTES_BIG_ENDIAN && TARGET_VSX\"\n   [(set (match_dup 2)\n-        (vec_select:V4SI\n+        (vec_select:<MODE>\n           (match_dup 1)\n           (parallel [(const_int 2) (const_int 3)\n \t             (const_int 0) (const_int 1)])))\n    (set (match_dup 0)\n-        (vec_select:V4SI\n+        (vec_select:<MODE>\n           (match_dup 2)\n           (parallel [(const_int 2) (const_int 3)\n \t             (const_int 0) (const_int 1)])))]"}]}