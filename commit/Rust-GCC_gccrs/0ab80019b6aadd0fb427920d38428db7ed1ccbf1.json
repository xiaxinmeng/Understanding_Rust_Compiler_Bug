{"sha": "0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFiODAwMTliNmFhZGQwZmI0Mjc5MjBkMzg0MjhkYjdlZDFjY2JmMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-06-07T14:16:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-06-07T14:16:34Z"}, "message": "[multiple changes]\n\n2004-06-07  Robert Dewar  <dewar@gnat.com>\n\n\t* a-direct.ads, einfo.ads: Minor comment updates\n\n\t* s-taprop-lynxos.adb, s-taprop-tru64.adb, s-taprop-irix.adb,\n\ts-taprop-irix-athread.adb, s-taprop-hpux-dce.adb, s-taprop-linux.adb,\n\ts-taprop-dummy.adb, s-taprop-os2.adb, s-taprop-solaris.adb,\n\ts-taprop-vms.adb, s-taprop-mingw.adb, s-taprop-vxworks.adb,\n\ts-taprop-posix.adb, s-taprop.ads, exp_dbug.adb: Minor reformatting.\n\n\t* s-interr-sigaction.adb: Remove unreferenced variable\n\t(Attached_Interrupts).  Minor reformatting.\n\tAvoid use of variable I (replace by J).\n\n\t* par-ch10.adb: Fix text of one error message\n\n\t* checks.adb, checks.ads, cstand.adb, vms_data.ads, errout.ads,\n\texp_aggr.adb, exp_ch3.adb, exp_ch3.ads, exp_ch5.adb, exp_ch6.adb,\n\texp_ch9.adb, exp_code.adb, gnat1drv.adb, lib-load.adb, lib-writ.adb,\n\topt.adb, par.adb, opt.ads, par-ch11.adb, par-ch3.adb, par-ch4.adb,\n\tpar-ch5.adb, par-ch6.adb, par-ch8.adb, par-ch9.adb, par-prag.adb,\n\tpar-util.adb, scng.adb, sem_aggr.adb, sem_attr.adb, sem_cat.adb,\n        sem_ch10.adb, sem_ch10.adb, sem_ch11.adb, sem_ch12.adb, sem_ch2.adb,\n\tsem_ch3.adb, sem_ch3.ads, sem_ch4.adb, sem_ch5.adb, sem_ch6.adb,\n\tsem_ch7.adb, sem_ch8.adb, sem_ch9.adb, sem_eval.adb, sem_prag.adb,\n\tsem_res.adb, sem_type.adb, sem_util.adb, sinfo.ads, snames.adb,\n\tsnames.ads, snames.h, sprint.adb, switch-c.adb: Modifications for Ada\n\t2005 support.\n\n2004-06-07  Doug Rupp  <rupp@gnat.com>\n\n\t* mlib-tgt-vms.adb: Rename mlib-tgt-vms.adb mlib-tgt-vms-alpha.adb\n\n\t* s-vaflop-vms.adb: Rename s-vaflop-vms.adb to s-vaflop-vms-alpha.adb\n\n\t* mlib-tgt-vms-ia64.adb: New file.\n\n\t* Makefile.in: Rename mlib-tgt-vms.adb to mlib-tgt-vms-alpha.adb\n\tAdd mlib-tgt-vms-ia64.adb\n\tRename s-vaflop-vms.adb to s-vaflop-vms-alpha.adb.\n\tMove to alpha specific ifeq section.\n\tAdd VMS specific versions of symbols.adb\n\tRenaming of 5q vms files.\n\n\t* 5qsystem.ads renamed to system-vms_64.ads.\n\n2004-06-07  Vincent Celier  <celier@gnat.com>\n\n\t* a-calend.ads: Add a GNAT Note comment after function Time_Of to\n\texplain that when a time of day corresponding to the non existing hour\n\ton the day switching to DST is specified, Split may return a different\n\tvalue for Seconds.\n\n\t* gnatcmd.adb: Add processing of GNAT METRIC (for gnatmetric), similar\n\tto GNAT PRETTY.\n\n\t* g-os_lib.adb (OpenVMS): New Boolean value imported from System.\n\t(Normalize_Pathname): Only resolve VMS logical names when on VMS.\n\n\t* mlib-prj.adb (Build_Library): New flag Gtrasymobj_Needed, initialize\n\tto False.\n\tIf Gtrasymobj_Needed is True, add the full path of g-trasym.obj to\n\tthe linking options.\n\t(Build_Library.Check_Libs): On VMS, if there is a dependency on\n\tg-trasym.ads, set Gtrasymobj_Needed to True.\n\n\t* prj-attr.adb: Add new package Metrics for gnatmetric\n\n\t* prj-nmsc.adb (Record_Other_Sources): Put source file names in\n\tcanonical case to take into account files with upper case characters on\n\tWindows.\n\t(Ada_Check): Load the reference symbol file name in the name buffer to\n\tcheck it, not the symbol file name.\n\n\t* snames.ads, snames.adb: Add standard name Metrics (name of project\n\tfile package for gnatmetric).\n\n\t* vms_conv.ads: Add Metric to Comment_Type\n\n\t* vms_conv.adb (Initialize): Add component dor Metric in Command_List\n\n\t* vms_data.ads: Add qualifiers for GNAT METRIC\n\n\t* makegpr.adb (Link_Executables): Take into account the switches\n\tspecified in package Linker of the main project.\n\n2004-06-07  Thomas Quinot  <quinot@act-europe.fr>\n\n\t* bindgen.adb (Set_Unit_Number): Units is an instance of Table, and so\n\tthe index of the last element is Units.Last, not Units.Table'Last\n\t(which is usually not a valid index within the actually allocated\n\tstorage for the table).\n\n\t* exp_ch4.adb (Insert_Dereference_Action): Change predicate that\n\tdetermines whether to generate a call to a checked storage pool\n\tDereference action.\n\tGenerate such a call only for a dereference that either comes from\n\tsource, or is the result of rewriting a dereference that comes from\n\tsource.\n\n2004-06-07  Romain Berrendonner  <berrendo@act-europe.fr>\n\n\t* bindgen.adb (Gen_Output_File): Add support for GAP builds.\n\n2004-06-07  Eric Botcazou  <ebotcazou@act-europe.fr>\n\n\t(gnat_to_gnu_entity) <E_Array_Subtype>: For multi-dimensional arrays at\n\tfile level, elaborate the stride for inner dimensions in alignment\n\tunits, not bytes.\n\n\t* exp_ch5.adb: Correct wrong reference to Component_May_Be_Bit_Aligned\n\tin a comment.\n\n2004-06-07  Javier Miranda  <miranda@gnat.com>\n\n\t* exp_ch6.adb: Correct wrong modification in previous patch\n\n2004-06-07  Vasiliy Fofanov  <fofanov@act-europe.fr>\n\n\t* g-trasym.ads: Corrected comment to properly reflect level of support\n\ton VMS.\n\n2004-06-07  Hristian Kirtchev  <kirtchev@gnat.com>\n\n\t* lib-xref.adb (Generate_Reference): Add nested function Is_On_LHS. It\n\tincludes case of a variable referenced on the left hand side of an\n\tassignment, therefore remove redundant code. Variables and prefixes of\n\tindexed or selected components are now marked as referenced on left\n\thand side. Warnings are now properly emitted when variables or prefixes\n\tare assigned but not read.\n\n\t* sem_warn.adb (Output_Unreferenced_Messages): Add additional checks to\n\tleft hand side referenced variables. Private access types do not\n\tproduce the warning \"variable ... is assigned but never read\".\n\tAdd also additional checks to left hand side referenced variables.\n\tAliased, renamed objects and access types do not produce the warning\n\t\"variable ... is assigned but never read\" since other entities may read\n\tthe memory location.\n\n2004-06-07  Jerome Guitton  <guitton@act-europe.fr>\n\n\t* Makefile.in: In the powerpc/vxworks-specific section, restore\n\tEXTRA_GNATRTL_NONTASKING_OBJS and EXTRA_GNATRTL_TASKING_OBJS (removed\n\tby mistake).\n\n2004-06-07  Ed Schonberg  <schonberg@gnat.com>\n\n\t* sem_ch4.adb (Remove_Abstract_Operations): Refine the removal of\n\tpredefined operators.\n\tRemoves spurious type errors from g-trasym-vms.adb.\n\n\t* sem_res.adb (Rewrite_Renamed_Operator): If intrinsic operator is\n\tdistinct from the operator appearing in the source, call appropriate\n\troutine to insert conversions when needed, and complete resolution of\n\tnode.\n\t(Resolve_Intrinsic_Operator): Fix cut-and-paste bug on transfer of\n\tinterpretations for rewritten right operand.\n\t(Set_Mixed_Mode_Operand): Handle properly a universal real operand when\n\tthe other operand is overloaded and the context is a type conversion.\n\n2004-06-07  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n\n\t* ada-tree.def (BLOCK_STMT): Now has two operands.\n\t(BREAK_STMT): New.\n\n\t* ada-tree.h: (BLOCK_STMT_BLOCK): New macro.\n\n\t* gigi.h: (gnat_poplevel): Now returns a tree.\n\n\t* trans.c (end_block_stmt): Add arg; all callers changed.\n\t(tree_transform, case N_Case_Statement): Make a BLOCK_STMT for a WHEN.\n\t(start_block_stmt): Clear BLOCK_STMT_BLOCK.\n\t(add_stmt): Set TREE_TYPE.\n\t(gnat_expand_stmt, case BLOCK_STMT): Handle BLOCK_STMT_BLOCK.\n\t(gnat_expand_stmt, case BREAK_STMT): New case.\n\n\t* utils.c (gnat_poplevel): Return a BLOCK, if we made one.\n\n2004-06-07  Jose Ruiz  <ruiz@act-europe.fr>\n\n\t* s-stchop.adsm s-stchop.adb, s-stchop-vxworks.adb: Remove the\n\tprocedure Set_Stack_Size that is not needed.\n\n2004-06-07  Sergey Rybin  <rybin@act-europe.fr>\n\n\t* gnat_ugn.texi: Clarify the case when non-standard naming scheme is\n\tused for gnatpp input file and for the files upon which it depends\n\n2004-06-07  Ben Brosgol  <brosgol@gnat.com>\n\n\t* gnat_ugn.texi: Wordsmithing of \"GNAT and Libraries\" chapter\n\n2004-06-07  Arnaud Charlet  <charlet@act-europe.fr>\n\n\t* gnatvsn.ads: Bump version numbers appropriately.\n\tAdd new build type.\n\n2004-06-07  Pascal Obry  <obry@gnat.com>\n\n\t* gnat_ugn.texi: Improve comments about imported names and link names\n\ton Windows. Add a note about the requirement to use -k gnatdll's option\n\twhen working with a DLL which has stripped stdcall symbols (no @nn\n\tsuffix).\n\nFrom-SVN: r82691", "tree": {"sha": "9781ebfdbcccd836481f22c031cc751e46380720", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9781ebfdbcccd836481f22c031cc751e46380720"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/comments", "author": null, "committer": null, "parents": [{"sha": "15d0650c9ea92711fc51116a57d6516fccf88815", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15d0650c9ea92711fc51116a57d6516fccf88815", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15d0650c9ea92711fc51116a57d6516fccf88815"}], "stats": {"total": 5400, "additions": 3683, "deletions": 1717}, "files": [{"sha": "da33d279e4665d8956f8bde29b90056f4a3fa6fc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 204, "deletions": 0, "changes": 204, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -1,3 +1,207 @@\n+2004-06-07  Robert Dewar  <dewar@gnat.com>\n+\n+\t* a-direct.ads, einfo.ads: Minor comment updates\n+\n+\t* s-taprop-lynxos.adb, s-taprop-tru64.adb, s-taprop-irix.adb,\n+\ts-taprop-irix-athread.adb, s-taprop-hpux-dce.adb, s-taprop-linux.adb,\n+\ts-taprop-dummy.adb, s-taprop-os2.adb, s-taprop-solaris.adb,\n+\ts-taprop-vms.adb, s-taprop-mingw.adb, s-taprop-vxworks.adb,\n+\ts-taprop-posix.adb, s-taprop.ads, exp_dbug.adb: Minor reformatting.\n+\n+\t* s-interr-sigaction.adb: Remove unreferenced variable\n+\t(Attached_Interrupts).  Minor reformatting.\n+\tAvoid use of variable I (replace by J).\n+\n+\t* par-ch10.adb: Fix text of one error message\n+\n+\t* checks.adb, checks.ads, cstand.adb, vms_data.ads, errout.ads,\n+\texp_aggr.adb, exp_ch3.adb, exp_ch3.ads, exp_ch5.adb, exp_ch6.adb,\n+\texp_ch9.adb, exp_code.adb, gnat1drv.adb, lib-load.adb, lib-writ.adb,\n+\topt.adb, par.adb, opt.ads, par-ch11.adb, par-ch3.adb, par-ch4.adb,\n+\tpar-ch5.adb, par-ch6.adb, par-ch8.adb, par-ch9.adb, par-prag.adb,\n+\tpar-util.adb, scng.adb, sem_aggr.adb, sem_attr.adb, sem_cat.adb,\n+        sem_ch10.adb, sem_ch10.adb, sem_ch11.adb, sem_ch12.adb, sem_ch2.adb,\n+\tsem_ch3.adb, sem_ch3.ads, sem_ch4.adb, sem_ch5.adb, sem_ch6.adb,\n+\tsem_ch7.adb, sem_ch8.adb, sem_ch9.adb, sem_eval.adb, sem_prag.adb,\n+\tsem_res.adb, sem_type.adb, sem_util.adb, sinfo.ads, snames.adb,\n+\tsnames.ads, snames.h, sprint.adb, switch-c.adb: Modifications for Ada\n+\t2005 support.\n+\n+2004-06-07  Doug Rupp  <rupp@gnat.com>\n+\n+\t* mlib-tgt-vms.adb: Rename mlib-tgt-vms.adb mlib-tgt-vms-alpha.adb\n+\n+\t* s-vaflop-vms.adb: Rename s-vaflop-vms.adb to s-vaflop-vms-alpha.adb\n+\n+\t* mlib-tgt-vms-ia64.adb: New file.\n+\n+\t* Makefile.in: Rename mlib-tgt-vms.adb to mlib-tgt-vms-alpha.adb\n+\tAdd mlib-tgt-vms-ia64.adb\n+\tRename s-vaflop-vms.adb to s-vaflop-vms-alpha.adb.\n+\tMove to alpha specific ifeq section.\n+\tAdd VMS specific versions of symbols.adb\n+\tRenaming of 5q vms files.\n+\n+\t* 5qsystem.ads renamed to system-vms_64.ads.\n+\n+2004-06-07  Vincent Celier  <celier@gnat.com>\n+\n+\t* a-calend.ads: Add a GNAT Note comment after function Time_Of to\n+\texplain that when a time of day corresponding to the non existing hour\n+\ton the day switching to DST is specified, Split may return a different\n+\tvalue for Seconds.\n+\n+\t* gnatcmd.adb: Add processing of GNAT METRIC (for gnatmetric), similar\n+\tto GNAT PRETTY.\n+\n+\t* g-os_lib.adb (OpenVMS): New Boolean value imported from System.\n+\t(Normalize_Pathname): Only resolve VMS logical names when on VMS.\n+\n+\t* mlib-prj.adb (Build_Library): New flag Gtrasymobj_Needed, initialize\n+\tto False.\n+\tIf Gtrasymobj_Needed is True, add the full path of g-trasym.obj to\n+\tthe linking options.\n+\t(Build_Library.Check_Libs): On VMS, if there is a dependency on\n+\tg-trasym.ads, set Gtrasymobj_Needed to True.\n+\n+\t* prj-attr.adb: Add new package Metrics for gnatmetric\n+\n+\t* prj-nmsc.adb (Record_Other_Sources): Put source file names in\n+\tcanonical case to take into account files with upper case characters on\n+\tWindows.\n+\t(Ada_Check): Load the reference symbol file name in the name buffer to\n+\tcheck it, not the symbol file name.\n+\n+\t* snames.ads, snames.adb: Add standard name Metrics (name of project\n+\tfile package for gnatmetric).\n+\n+\t* vms_conv.ads: Add Metric to Comment_Type\n+\n+\t* vms_conv.adb (Initialize): Add component dor Metric in Command_List\n+\n+\t* vms_data.ads: Add qualifiers for GNAT METRIC\n+\n+\t* makegpr.adb (Link_Executables): Take into account the switches\n+\tspecified in package Linker of the main project.\n+\n+2004-06-07  Thomas Quinot  <quinot@act-europe.fr>\n+\n+\t* bindgen.adb (Set_Unit_Number): Units is an instance of Table, and so\n+\tthe index of the last element is Units.Last, not Units.Table'Last\n+\t(which is usually not a valid index within the actually allocated\n+\tstorage for the table).\n+\n+\t* exp_ch4.adb (Insert_Dereference_Action): Change predicate that\n+\tdetermines whether to generate a call to a checked storage pool\n+\tDereference action.\n+\tGenerate such a call only for a dereference that either comes from\n+\tsource, or is the result of rewriting a dereference that comes from\n+\tsource.\n+\n+2004-06-07  Romain Berrendonner  <berrendo@act-europe.fr>\n+\n+\t* bindgen.adb (Gen_Output_File): Add support for GAP builds.\n+\n+2004-06-07  Eric Botcazou  <ebotcazou@act-europe.fr>\n+\n+\t(gnat_to_gnu_entity) <E_Array_Subtype>: For multi-dimensional arrays at\n+\tfile level, elaborate the stride for inner dimensions in alignment\n+\tunits, not bytes.\n+\n+\t* exp_ch5.adb: Correct wrong reference to Component_May_Be_Bit_Aligned\n+\tin a comment.\n+\n+2004-06-07  Javier Miranda  <miranda@gnat.com>\n+\n+\t* exp_ch6.adb: Correct wrong modification in previous patch\n+\n+2004-06-07  Vasiliy Fofanov  <fofanov@act-europe.fr>\n+\n+\t* g-trasym.ads: Corrected comment to properly reflect level of support\n+\ton VMS.\n+\n+2004-06-07  Hristian Kirtchev  <kirtchev@gnat.com>\n+\n+\t* lib-xref.adb (Generate_Reference): Add nested function Is_On_LHS. It\n+\tincludes case of a variable referenced on the left hand side of an\n+\tassignment, therefore remove redundant code. Variables and prefixes of\n+\tindexed or selected components are now marked as referenced on left\n+\thand side. Warnings are now properly emitted when variables or prefixes\n+\tare assigned but not read.\n+\n+\t* sem_warn.adb (Output_Unreferenced_Messages): Add additional checks to\n+\tleft hand side referenced variables. Private access types do not\n+\tproduce the warning \"variable ... is assigned but never read\".\n+\tAdd also additional checks to left hand side referenced variables.\n+\tAliased, renamed objects and access types do not produce the warning\n+\t\"variable ... is assigned but never read\" since other entities may read\n+\tthe memory location.\n+\n+2004-06-07  Jerome Guitton  <guitton@act-europe.fr>\n+\n+\t* Makefile.in: In the powerpc/vxworks-specific section, restore\n+\tEXTRA_GNATRTL_NONTASKING_OBJS and EXTRA_GNATRTL_TASKING_OBJS (removed\n+\tby mistake).\n+\n+2004-06-07  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* sem_ch4.adb (Remove_Abstract_Operations): Refine the removal of\n+\tpredefined operators.\n+\tRemoves spurious type errors from g-trasym-vms.adb.\n+\n+\t* sem_res.adb (Rewrite_Renamed_Operator): If intrinsic operator is\n+\tdistinct from the operator appearing in the source, call appropriate\n+\troutine to insert conversions when needed, and complete resolution of\n+\tnode.\n+\t(Resolve_Intrinsic_Operator): Fix cut-and-paste bug on transfer of\n+\tinterpretations for rewritten right operand.\n+\t(Set_Mixed_Mode_Operand): Handle properly a universal real operand when\n+\tthe other operand is overloaded and the context is a type conversion.\n+\n+2004-06-07  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* ada-tree.def (BLOCK_STMT): Now has two operands.\n+\t(BREAK_STMT): New.\n+\n+\t* ada-tree.h: (BLOCK_STMT_BLOCK): New macro.\n+\n+\t* gigi.h: (gnat_poplevel): Now returns a tree.\n+\n+\t* trans.c (end_block_stmt): Add arg; all callers changed.\n+\t(tree_transform, case N_Case_Statement): Make a BLOCK_STMT for a WHEN.\n+\t(start_block_stmt): Clear BLOCK_STMT_BLOCK.\n+\t(add_stmt): Set TREE_TYPE.\n+\t(gnat_expand_stmt, case BLOCK_STMT): Handle BLOCK_STMT_BLOCK.\n+\t(gnat_expand_stmt, case BREAK_STMT): New case.\n+\n+\t* utils.c (gnat_poplevel): Return a BLOCK, if we made one.\n+\n+2004-06-07  Jose Ruiz  <ruiz@act-europe.fr>\n+\n+\t* s-stchop.adsm s-stchop.adb, s-stchop-vxworks.adb: Remove the\n+\tprocedure Set_Stack_Size that is not needed.\n+\n+2004-06-07  Sergey Rybin  <rybin@act-europe.fr>\n+\n+\t* gnat_ugn.texi: Clarify the case when non-standard naming scheme is\n+\tused for gnatpp input file and for the files upon which it depends\n+\n+2004-06-07  Ben Brosgol  <brosgol@gnat.com>\n+\n+\t* gnat_ugn.texi: Wordsmithing of \"GNAT and Libraries\" chapter\n+\n+2004-06-07  Arnaud Charlet  <charlet@act-europe.fr>\n+\n+\t* gnatvsn.ads: Bump version numbers appropriately.\n+\tAdd new build type.\n+\n+2004-06-07  Pascal Obry  <obry@gnat.com>\n+\n+\t* gnat_ugn.texi: Improve comments about imported names and link names\n+\ton Windows. Add a note about the requirement to use -k gnatdll's option\n+\twhen working with a DLL which has stripped stdcall symbols (no @nn\n+\tsuffix).\n+\n 2004-05-27  Vincent Celier  <celier@gnat.com>\n \n \t* vms_data.ads: Add new GNAT PRETTY qualifiers /NO_BACKUP and"}, {"sha": "9c54bd4967af06bdcf7ff9f8e59a98d13e1ac9dc", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -557,6 +557,9 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(targ))),)\n     s-tratas.adb<s-tratas-default.adb \\\n     s-tfsetr.adb<s-tfsetr-vxworks.adb \n   endif\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o\n+  EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o\n endif\n \n ifeq ($(strip $(filter-out sparc% wrs vx%,$(targ))),)\n@@ -1145,17 +1148,18 @@ endif\n ifeq ($(strip $(filter-out alpha% ia64 dec hp vms% openvms% alphavms%,$(targ))),)\n ifeq ($(strip $(filter-out ia64 hp vms% openvms%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS_AUX1 = \\\n-  s-auxdec.ads<5qauxdec.ads \\\n+  s-auxdec.ads<s-auxdec-vms_64.ads \\\n   s-crtl.ads<s-crtl-vms.ads \\\n   s-osinte.adb<s-osinte-vms-ia64.adb \\\n   s-osinte.ads<s-osinte-vms-ia64.ads \\\n-  system.ads<5qsystem.ads\n+  system.ads<system-vms_64.ads\n else\n ifeq ($(strip $(filter-out alpha% dec vms% openvms% alphavms%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS_AUX1 = \\\n   s-crtl.ads<s-crtl-vms.ads \\\n   s-osinte.adb<s-osinte-vms.adb \\\n   s-osinte.ads<s-osinte-vms.ads \\\n+  s-vaflop.adb<s-vaflop-vms-alpha.adb \\\n   system.ads<system-vms-zcx.ads\n endif\n endif\n@@ -1197,11 +1201,18 @@ endif\n   s-tpopde.ads<s-tpopde-vms.ads \\\n   s-traent.adb<s-traent-vms.adb \\\n   s-traent.ads<s-traent-vms.ads \\\n-  s-vaflop.adb<s-vaflop-vms.adb \\\n   $(LIBGNAT_TARGET_PAIRS_AUX1) \\\n   $(LIBGNAT_TARGET_PAIRS_AUX2)\n \n-  TOOLS_TARGET_PAIRS=mlib-tgt.adb<mlib-tgt-vms.adb\n+ifeq ($(strip $(filter-out ia64 hp vms% openvms%,$(targ))),)\n+  TOOLS_TARGET_PAIRS= \\ \n+  mlib-tgt.adb<mlib-tgt-vms-ia64.adb \\ \n+  symbols.adb<symbols-vms-ia64.adb\n+else\n+  TOOLS_TARGET_PAIRS= \\\n+  mlib-tgt.adb<mlib-tgt-vms-alpha.adb \\\n+  symbols.adb<symbols-vms-alpha.adb\n+endif\n \n   GNATLIB_SHARED=gnatlib-shared-vms\n ifeq ($(strip $(filter-out alpha% dec vms% openvms% alphavms%,$(targ))),)"}, {"sha": "700b554bce023ffbdd121bb9c840536993f98023", "filename": "gcc/ada/a-calend.ads", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fa-calend.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fa-calend.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend.ads?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -67,8 +67,21 @@ package Ada.Calendar is\n      (Year    : Year_Number;\n       Month   : Month_Number;\n       Day     : Day_Number;\n-      Seconds : Day_Duration := 0.0)\n-      return    Time;\n+      Seconds : Day_Duration := 0.0) return Time;\n+   --  GNAT Note: Normally when procedure Split is called on a Time value\n+   --  result of a call to function Time_Of, the out parameters of procedure\n+   --  Split are identical to the in parameters of function Time_Of. However,\n+   --  when a non-existent time of day is specified, the values for Seconds\n+   --  may or may not be different. This may happen when Daylight Saving Time\n+   --  (DST) is in effect, on the day when switching to DST, if Seconds\n+   --  specifies a time of day in the hour that does not exist. For example,\n+   --  in New York:\n+   --\n+   --    Time_Of (Year => 1998, Month => 4, Day => 5, Seconds => 10740.0)\n+   --\n+   --  will return a Time value T. If Split is called on T, the resulting\n+   --  Seconds may be 14340.0 (3:59:00) instead of 10740.0 (2:59:00 being\n+   --  a time that not exist).\n \n    function \"+\" (Left : Time;     Right : Duration) return Time;\n    function \"+\" (Left : Duration; Right : Time)     return Time;"}, {"sha": "d71e49357edbb3a9d29ac3ee23283e8e2387a122", "filename": "gcc/ada/a-direct.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fa-direct.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fa-direct.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direct.ads?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -1,5 +1,5 @@\n ------------------------------------------------------------------------------\n---                                                                          --\n+--                                                                        --\n --                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n --                      A D A . D I R E C T O R I E S                       --\n@@ -36,8 +36,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Ada0Y: Implementation of Ada.Directories (AI95-00248). Note that this\n---  unit is available without -gnatX. That seems reasonable, since you only\n+--  Ada 2005: Implementation of Ada.Directories (AI95-00248). Note that this\n+--  unit is available without -gnat05. That seems reasonable, since you only\n --  get it if you explicitly ask for it.\n \n --  External files may be classified as directories, special files, or ordinary\n@@ -137,7 +137,7 @@ package Ada.Directories is\n    --  all of its contents (possibly including other directories) are deleted.\n    --  The exception Name_Error is propagated if the string given as Directory\n    --  does not identify an existing directory. The exception Use_Error is\n-   --  propagatedi f the external environment does not support the deletion of\n+   --  propagated if the external environment does not support the deletion of\n    --  the directory or some portion of its contents with the given name (in\n    --  the absence of Name_Error). If Use_Error is propagated, it is\n    --  unspecified if a portion of the contents of the directory are deleted."}, {"sha": "719f15ec4be406de0187c06e19c22ed46e567b43", "filename": "gcc/ada/ada-tree.def", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fada-tree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fada-tree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fada-tree.def?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -94,8 +94,9 @@ DEFTREECODE (NULL_STMT, \"null_stmt\", 's', 0)\n DEFTREECODE (DECL_STMT, \"decl_stmt\", 's', 1)\n \n /* This represents a list of statements.  BLOCK_STMT_LIST is a list\n-   statement tree, chained via TREE_CHAIN.  */\n-DEFTREECODE (BLOCK_STMT, \"block_stmt\", 's', 1)\n+   statement tree, chained via TREE_CHAIN.  BLOCK_STMT_BLOCK, if nonzero,\n+   is the BLOCK node for these statements.  */\n+DEFTREECODE (BLOCK_STMT, \"block_stmt\", 's', 2)\n \n /* This is an IF statement.  IF_STMT_COND is the condition being tested,\n    IF_STMT_TRUE is the statement to be executed if the condition is\n@@ -117,3 +118,6 @@ DEFTREECODE (RETURN_STMT, \"return_stmt\", 's', 1)\n /* An \"asm\" statement.  The operands are ASM_STMT_TEMPLATE, ASM_STMT_OUTPUT,\n    ASM_STMT_ORIG_OUT, ASM_STMT_INPUT, and ASM_STMT_CLOBBER.  */\n DEFTREECODE (ASM_STMT, \"asm_stmt\", 's', 5)\n+\n+/* An analog to the C \"break\" statement.  */\n+DEFTREECODE (BREAK_STMT, \"break_stmt\", 's', 0)"}, {"sha": "6ab348e9d20bfe300bc0f839f57769466bed8a8f", "filename": "gcc/ada/ada-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fada-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fada-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fada-tree.h?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -300,6 +300,7 @@ struct lang_type GTY(())\n #define EXPR_STMT_EXPR(NODE)\tTREE_OPERAND_CHECK_CODE (NODE, EXPR_STMT, 0)\n #define DECL_STMT_VAR(NODE)\tTREE_OPERAND_CHECK_CODE (NODE, DECL_STMT, 0)\n #define BLOCK_STMT_LIST(NODE)\tTREE_OPERAND_CHECK_CODE (NODE, BLOCK_STMT, 0)\n+#define BLOCK_STMT_BLOCK(NODE)\tTREE_OPERAND_CHECK_CODE (NODE, BLOCK_STMT, 1)\n #define IF_STMT_COND(NODE)\tTREE_OPERAND_CHECK_CODE (NODE, IF_STMT, 0)\n #define IF_STMT_TRUE(NODE)\tTREE_OPERAND_CHECK_CODE (NODE, IF_STMT, 1)\n #define IF_STMT_ELSEIF(NODE)\tTREE_OPERAND_CHECK_CODE (NODE, IF_STMT, 2)"}, {"sha": "ec1670fc4da4bd089a4bd95f7b13596710948fd1", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -2024,6 +2024,7 @@ package body Bindgen is\n \n    procedure Gen_Output_File (Filename : String) is\n       Is_Public_Version : constant Boolean := Get_Gnat_Build_Type = Public;\n+      Is_GAP_Version    : constant Boolean := Get_Gnat_Build_Type = GAP;\n \n    begin\n       --  Acquire settings for Interrupt_State pragmas\n@@ -2057,7 +2058,7 @@ package body Bindgen is\n \n       --  Get the time stamp of the former bind for public version warning\n \n-      if Is_Public_Version then\n+      if Is_Public_Version or Is_GAP_Version then\n          Record_Time_From_Last_Bind;\n       end if;\n \n@@ -3096,7 +3097,7 @@ package body Bindgen is\n    ---------------------\n \n    procedure Set_Unit_Number (U : Unit_Id) is\n-      Num_Units : constant Nat := Nat (Units.Table'Last) - Nat (Unit_Id'First);\n+      Num_Units : constant Nat := Nat (Units.Last) - Nat (Unit_Id'First);\n       Unum      : constant Nat := Nat (U) - Nat (Unit_Id'First);\n \n    begin"}, {"sha": "565cf534add5ea05333f22d3c8b3a2e6986f51f7", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -2432,7 +2432,7 @@ package body Checks is\n          if Has_Null_Exclusion\n            and then not Is_Access_Type (Typ)\n          then\n-            Error_Msg_N (\"(Ada 0Y) must be an access type\", Related_Nod);\n+            Error_Msg_N (\"(Ada 2005) must be an access type\", Related_Nod);\n          end if;\n       end Check_Must_Be_Access;\n \n@@ -2450,7 +2450,7 @@ package body Checks is\n            and then Can_Never_Be_Null (Typ)\n          then\n             Error_Msg_N\n-              (\"(Ada 0Y) already a null-excluding type\", Related_Nod);\n+              (\"(Ada 2005) already a null-excluding type\", Related_Nod);\n          end if;\n       end Check_Already_Null_Excluding_Type;\n \n@@ -2472,17 +2472,17 @@ package body Checks is\n             case Msg_K is\n                when Components =>\n                   Error_Msg_N\n-                    (\"(Ada 0Y) null-excluding components must be initialized\",\n-                     Related_Nod);\n+                    (\"(Ada 2005) null-excluding components must be \" &\n+                     \"initialized\", Related_Nod);\n \n                when Formals =>\n                   Error_Msg_N\n-                    (\"(Ada 0Y) null-excluding formals must be initialized\",\n+                    (\"(Ada 2005) null-excluding formals must be initialized\",\n                      Related_Nod);\n \n                when Objects =>\n                   Error_Msg_N\n-                    (\"(Ada 0Y) null-excluding objects must be initialized\",\n+                    (\"(Ada 2005) null-excluding objects must be initialized\",\n                      Related_Nod);\n             end case;\n          end if;\n@@ -2502,17 +2502,17 @@ package body Checks is\n             case Msg_K is\n                when Components =>\n                   Error_Msg_N\n-                    (\"(Ada 0Y) NULL not allowed in null-excluding components\",\n-                     Expr);\n+                    (\"(Ada 2005) NULL not allowed in null-excluding \" &\n+                     \"components\", Expr);\n \n                when Formals =>\n                   Error_Msg_N\n-                    (\"(Ada 0Y) NULL not allowed in null-excluding formals\",\n+                    (\"(Ada 2005) NULL not allowed in null-excluding formals\",\n                      Expr);\n \n                when Objects =>\n                   Error_Msg_N\n-                    (\"(Ada 0Y) NULL not allowed in null-excluding objects\",\n+                    (\"(Ada 2005) NULL not allowed in null-excluding objects\",\n                      Expr);\n             end case;\n          end if;"}, {"sha": "2ec2c162d732d9facc820874e9bf59d085a81137", "filename": "gcc/ada/checks.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fchecks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fchecks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.ads?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -617,7 +617,7 @@ package Checks is\n    --  will be raised if the value is not valid.\n \n    procedure Null_Exclusion_Static_Checks (N : Node_Id);\n-   --  Ada 0Y (AI-231): Check bad usages of the null-exclusion issue\n+   --  Ada 2005 (AI-231): Check bad usages of the null-exclusion issue\n \n    procedure Remove_Checks (Expr : Node_Id);\n    --  Remove all checks from Expr except those that are only executed"}, {"sha": "61f2018270c2f03b6ed5efe3a5867f92d6e52750", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -1182,9 +1182,9 @@ package body CStand is\n       Build_Exception (S_Tasking_Error);\n \n       --  Numeric_Error is a normal exception in Ada 83, but in Ada 95\n-      --  it is a renaming of Constraint_Error\n+      --  it is a renaming of Constraint_Error. Is this test too early???\n \n-      if Ada_83 then\n+      if Ada_Version = Ada_83 then\n          Build_Exception (S_Numeric_Error);\n \n       else"}, {"sha": "e38fcf05d43b71a675076ea7e620fc544d43eacc", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -1971,14 +1971,28 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t   gnu_arr_type = TREE_TYPE (gnu_arr_type),\n \t\t   gnu_str_name = concat_id_with_name (gnu_str_name, \"ST\"))\n \t\t{\n+\t\t  tree eltype = TREE_TYPE (gnu_arr_type);\n+\n \t\t  TYPE_SIZE (gnu_arr_type)\n \t\t    = elaborate_expression_1 (gnat_entity, gnat_entity,\n \t\t\t\t\t      TYPE_SIZE (gnu_arr_type),\n \t\t\t\t\t      gnu_str_name, definition, 0);\n+\n+\t\t  /* ??? For now, store the size as a multiple of the\n+\t\t     alignment of the element type in bytes so that we\n+\t\t     can see the alignment from the tree.  */\n \t\t  TYPE_SIZE_UNIT (gnu_arr_type)\n-\t\t    = elaborate_expression_1\n-\t\t      (gnat_entity, gnat_entity, TYPE_SIZE_UNIT (gnu_arr_type),\n-\t\t       concat_id_with_name (gnu_str_name, \"U\"), definition, 0);\n+\t\t    = build_binary_op\n+\t\t      (MULT_EXPR, sizetype,\n+\t\t       elaborate_expression_1\n+\t\t       (gnat_entity, gnat_entity,\n+\t\t\tbuild_binary_op (EXACT_DIV_EXPR, sizetype,\n+\t\t\t\t\t TYPE_SIZE_UNIT (gnu_arr_type),\n+\t\t\t\t\t size_int (TYPE_ALIGN (eltype)\n+\t\t\t\t\t\t   / BITS_PER_UNIT)),\n+\t\t\tconcat_id_with_name (gnu_str_name, \"A_U\"),\n+\t\t\tdefinition, 0),\n+\t\t       size_int (TYPE_ALIGN (eltype) / BITS_PER_UNIT));\n \t\t}\n \t    }\n "}, {"sha": "57f97329602b35b709b6843d9403169ade8f689f", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -1162,7 +1162,7 @@ package Einfo is\n --       types, i.e. record types (Java classes) that hold pointers to each\n --       other. If such a type is an access type, it has no explicit freeze\n --       node, so that the back-end does not attempt to elaborate it.\n---       Currently this flag is also used to implement Ada0Y (AI-50217).\n+--       Currently this flag is also used to implement Ada 2005 (AI-50217).\n --       It will be renamed to From_Limited_With after removal of the current\n --       GNAT with_type clause???\n \n@@ -2396,7 +2396,7 @@ package Einfo is\n --       fide package with the limited-view list through the first_entity and\n --       first_private attributes. The elements of this list are the shadow\n --       entities created for the types and local packages that are declared\n---       in a package that appears in a limited_with clause (Ada0Y: AI-50217)\n+--       in a package appearing in a limited_with clause (Ada 2005: AI-50217)\n \n --    Lit_Indexes (Node15)\n --       Present in enumeration types and subtypes. Non-empty only for the\n@@ -2566,7 +2566,7 @@ package Einfo is\n \n --    Non_Limited_View (Node17)\n --       Present in incomplete types that are the shadow entities created\n---       when analyzing a limited_with_clause (Ada0Y: AI-50217). Points to\n+--       when analyzing a limited_with_clause (Ada 2005: AI-50217). Points to\n --       the defining entity in the original declaration.\n \n --    Nonzero_Is_True (Flag162) [base type only]"}, {"sha": "5bf33115cdc2eac127d570b058dabac9fa830e41", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -299,19 +299,24 @@ package Errout is\n    Gname4 : aliased constant String := \"gnatf\";\n    Vname4 : aliased constant String := \"REPORT_ERRORS=FULL\";\n \n+   Gname5 : aliased constant String := \"gnat05\";\n+   Vname5 : aliased constant String := \"05\";\n+\n    type Cstring_Ptr is access constant String;\n \n    Gnames : array (Nat range <>) of Cstring_Ptr :=\n               (Gname1'Access,\n                Gname2'Access,\n                Gname3'Access,\n-               Gname4'Access);\n+               Gname4'Access,\n+               Gname5'Access);\n \n    Vnames : array (Nat range <>) of Cstring_Ptr :=\n               (Vname1'Access,\n                Vname2'Access,\n                Vname3'Access,\n-               Vname4'Access);\n+               Vname4'Access,\n+               Vname5'Access);\n \n    -----------------------------------------------------\n    -- Global Values Used for Error Message Insertions --"}, {"sha": "1eddfd30b293f188fea9a87493f9c94e47ac9a52", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -74,7 +74,7 @@ package body Exp_Aggr is\n \n    function Has_Default_Init_Comps (N : Node_Id) return Boolean;\n    --  N is an aggregate (record or array). Checks the presence of default\n-   --  initialization (<>) in any component (Ada 0Y: AI-287)\n+   --  initialization (<>) in any component (Ada 2005: AI-287)\n \n    ------------------------------------------------------\n    -- Local subprograms for Record Aggregate Expansion --\n@@ -443,8 +443,8 @@ package body Exp_Aggr is\n       --\n       --  Otherwise we call Build_Code recursively.\n       --\n-      --  Ada 0Y (AI-287): In case of default initialized component, Expr is\n-      --  empty and we generate a call to the corresponding IP subprogram.\n+      --  Ada 2005 (AI-287): In case of default initialized component, Expr\n+      --  is empty and we generate a call to the corresponding IP subprogram.\n \n       function Gen_Loop (L, H : Node_Id; Expr : Node_Id) return List_Id;\n       --  Nodes L and H must be side-effect free expressions.\n@@ -671,7 +671,7 @@ package body Exp_Aggr is\n             Res : List_Id;\n \n          begin\n-            --  Ada 0Y (AI-287): Do nothing else in case of default\n+            --  Ada 2005 (AI-287): Do nothing else in case of default\n             --  initialized component.\n \n             if not Present (Expr) then\n@@ -739,7 +739,7 @@ package body Exp_Aggr is\n \n          Set_Assignment_OK (Indexed_Comp);\n \n-         --  Ada 0Y (AI-287): In case of default initialized component, Expr\n+         --  Ada 2005 (AI-287): In case of default initialized component, Expr\n          --  is not present (and therefore we also initialize Expr_Q to empty).\n \n          if not Present (Expr) then\n@@ -758,7 +758,7 @@ package body Exp_Aggr is\n \n          elsif Present (Next (First (New_Indices))) then\n \n-            --  Ada 0Y (AI-287): Do nothing in case of default initialized\n+            --  Ada 2005 (AI-287): Do nothing in case of default initialized\n             --  component because we have received the component type in\n             --  the formal parameter Ctype.\n \n@@ -792,7 +792,7 @@ package body Exp_Aggr is\n             end if;\n          end if;\n \n-         --  Ada 0Y (AI-287): We only analyze the expression in case of non\n+         --  Ada 2005 (AI-287): We only analyze the expression in case of non-\n          --  default initialized components (otherwise Expr_Q is not present).\n \n          if Present (Expr_Q)\n@@ -818,7 +818,7 @@ package body Exp_Aggr is\n             end if;\n          end if;\n \n-         --  Ada 0Y (AI-287): In case of default initialized component, call\n+         --  Ada 2005 (AI-287): In case of default initialized component, call\n          --  the initialization subprogram associated with the component type.\n \n          if not Present (Expr) then\n@@ -918,7 +918,7 @@ package body Exp_Aggr is\n          if Empty_Range (L, H) then\n             Append_To (S, Make_Null_Statement (Loc));\n \n-            --  Ada 0Y (AI-287): Nothing else need to be done in case of\n+            --  Ada 2005 (AI-287): Nothing else need to be done in case of\n             --  default initialized component.\n \n             if not Present (Expr) then\n@@ -1337,7 +1337,7 @@ package body Exp_Aggr is\n          if Present (Component_Associations (N)) then\n             Assoc := Last (Component_Associations (N));\n \n-            --  Ada 0Y (AI-287)\n+            --  Ada 2005 (AI-287)\n \n             if Box_Present (Assoc) then\n                Append_List (Gen_While (Add (Nb_Elements, To => Aggr_L),\n@@ -1632,8 +1632,8 @@ package body Exp_Aggr is\n              Selector_Name => Make_Identifier (Loc, Name_uController));\n          Set_Assignment_OK (Ref);\n \n-         --  Ada 0Y (AI-287): Give support to default initialization of limited\n-         --  types and components.\n+         --  Ada 2005 (AI-287): Give support to default initialization of\n+         --  limited types and components.\n \n          if (Nkind (Target) = N_Identifier\n               and then Present (Etype (Target))\n@@ -1790,7 +1790,7 @@ package body Exp_Aggr is\n                   Check_Ancestor_Discriminants (Entity (A));\n                end if;\n \n-            --  Ada 0Y (AI-287): If the ancestor part is a limited type,\n+            --  Ada 2005 (AI-287): If the ancestor part is a limited type,\n             --  a recursive call expands the ancestor.\n \n             elsif Is_Limited_Type (Etype (A)) then\n@@ -1924,15 +1924,15 @@ package body Exp_Aggr is\n       while Present (Comp) loop\n          Selector := Entity (First (Choices (Comp)));\n \n-         --  Ada 0Y (AI-287): Default initialization of a limited component\n+         --  Ada 2005 (AI-287): Default initialization of a limited component\n \n          if Box_Present (Comp)\n             and then Is_Limited_Type (Etype (Selector))\n          then\n-            --  Ada 0Y (AI-287): If the component type has tasks then generate\n-            --  the activation chain and master entities (except in case of an\n-            --  allocator because in that case these entities are generated\n-            --  by Build_Task_Allocate_Block_With_Init_Stmts).\n+            --  Ada 2005 (AI-287): If the component type has tasks then\n+            --  generate the activation chain and master entities (except\n+            --  in case of an allocator because in that case these entities\n+            --  are generated by Build_Task_Allocate_Block_With_Init_Stmts).\n \n             declare\n                Ctype            : constant Entity_Id := Etype (Selector);\n@@ -2868,7 +2868,7 @@ package body Exp_Aggr is\n    --  Start of processing for Convert_To_Positional\n \n    begin\n-      --  Ada 0Y (AI-287): Do not convert in case of default initialized\n+      --  Ada 2005 (AI-287): Do not convert in case of default initialized\n       --  components because in this case will need to call the corresponding\n       --  IP procedure.\n \n@@ -4120,7 +4120,7 @@ package body Exp_Aggr is\n \n             if Has_Default_Init_Comps (N) then\n \n-               --  Ada 0Y (AI-287): This case has not been analyzed???\n+               --  Ada 2005 (AI-287): This case has not been analyzed???\n \n                raise Program_Error;\n             end if;\n@@ -4333,8 +4333,8 @@ package body Exp_Aggr is\n       then\n          Convert_To_Assignments (N, Typ);\n \n-      --  Ada 0Y (AI-287): In case of default initialized components we convert\n-      --  the aggregate into assignments.\n+         --  Ada 2005 (AI-287): In case of default initialized components we\n+         --  convert the aggregate into assignments.\n \n       elsif Has_Default_Init_Comps (N) then\n          Convert_To_Assignments (N, Typ);"}, {"sha": "335a07ccd152ea84a103f5a8602a738eaca50b85", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -1107,7 +1107,7 @@ package body Exp_Ch3 is\n \n          Append_To (Args, Make_Identifier (Loc, Name_uChain));\n \n-         --  Ada 0Y (AI-287): In case of default initialized components\n+         --  Ada 2005 (AI-287): In case of default initialized components\n          --  with tasks, we generate a null string actual parameter.\n          --  This is just a workaround that must be improved later???\n \n@@ -1215,8 +1215,8 @@ package body Exp_Ch3 is\n                end if;\n             end if;\n \n-            --  Ada 0Y (AI-287) In case of default initialized components, we\n-            --  need to generate the corresponding selected component node\n+            --  Ada 2005 (AI-287) In case of default initialized components,\n+            --  we need to generate the corresponding selected component node\n             --  to access the discriminant value. In other cases this is not\n             --  required because we are inside the init proc and we use the\n             --  corresponding formal.\n@@ -1491,16 +1491,15 @@ package body Exp_Ch3 is\n             Exp := New_Copy_Tree (Original_Node (Exp));\n          end if;\n \n-         --  Ada 0Y (AI-231): Generate conversion to the null-excluding\n+         --  Ada 2005 (AI-231): Generate conversion to the null-excluding\n          --  type to force the corresponding run-time check\n \n-         if Extensions_Allowed\n+         if Ada_Version >= Ada_05\n            and then Can_Never_Be_Null (Etype (Id))  -- Lhs\n-           and then (Present (Etype (Exp))\n-                       and then not Can_Never_Be_Null (Etype (Exp)))\n+           and then Present (Etype (Exp))\n+           and then not Can_Never_Be_Null (Etype (Exp))\n          then\n-            Rewrite (Exp, Convert_To (Etype (Id),\n-                                      Relocate_Node (Exp)));\n+            Rewrite (Exp, Convert_To (Etype (Id), Relocate_Node (Exp)));\n             Analyze_And_Resolve (Exp, Etype (Id));\n          end if;\n \n@@ -3436,15 +3435,16 @@ package body Exp_Ch3 is\n \n             elsif Is_Access_Type (Typ) then\n \n-               --  Ada 0Y (AI-231): Generate conversion to the null-excluding\n+               --  Ada 2005 (AI-231): Generate conversion to the null-excluding\n                --  type to force the corresponding run-time check\n \n-               if Extensions_Allowed\n+               if Ada_Version >= Ada_05\n                  and then (Can_Never_Be_Null (Def_Id)\n-                           or else Can_Never_Be_Null (Typ))\n+                             or else Can_Never_Be_Null (Typ))\n                then\n-                  Rewrite (Expr_Q, Convert_To (Etype (Def_Id),\n-                                               Relocate_Node (Expr_Q)));\n+                  Rewrite\n+                    (Expr_Q,\n+                     Convert_To (Etype (Def_Id), Relocate_Node (Expr_Q)));\n                   Analyze_And_Resolve (Expr_Q, Etype (Def_Id));\n                end if;\n "}, {"sha": "7fc124aeb9a8be7c7a8e76601b32faef7a1981a0", "filename": "gcc/ada/exp_ch3.ads", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.ads?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 1992-2003 Free Software Foundation, Inc.         --\n+--           Copyright (C) 1992-2004 Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -58,8 +58,7 @@ package Exp_Ch3 is\n       In_Init_Proc      : Boolean := False;\n       Enclos_Type       : Entity_Id := Empty;\n       Discr_Map         : Elist_Id := New_Elmt_List;\n-      With_Default_Init : Boolean := False)\n-      return              List_Id;\n+      With_Default_Init : Boolean := False) return List_Id;\n    --  Builds a call to the initialization procedure of the Id entity. Id_Ref\n    --  is either a new reference to Id (for record fields), or an indexed\n    --  component (for array elements). Loc is the source location for the\n@@ -78,9 +77,9 @@ package Exp_Ch3 is\n    --  can appear within expressions in array bounds (not as stand-alone\n    --  identifiers) and a general replacement is necessary.\n    --\n-   --  Ada0Y (AI-287): With_Default_Init is used to indicate that the initia-\n-   --  lization call corresponds to a default initialized component of an\n-   --  aggregate.\n+   --  Ada 2005 (AI-287): With_Default_Init is used to indicate that the\n+   --  initialization call corresponds to a default initialized component\n+   --  of an aggregate.\n \n    procedure Freeze_Type (N : Node_Id);\n    --  This procedure executes the freezing actions associated with the given\n@@ -97,8 +96,7 @@ package Exp_Ch3 is\n \n    function Get_Simple_Init_Val\n      (T    : Entity_Id;\n-      Loc  : Source_Ptr)\n-      return Node_Id;\n+      Loc  : Source_Ptr) return Node_Id;\n    --  For a type which Needs_Simple_Initialization (see above), prepares\n    --  the tree for an expression representing the required initial value.\n    --  Loc is the source location used in constructing this tree which is"}, {"sha": "d59e0b942ace361c66d51be8dbf8b8b1bc1748f4", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 13, "deletions": 39, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -6354,9 +6354,18 @@ package body Exp_Ch4 is\n    is\n       Loc : constant Source_Ptr := Sloc (Nod);\n \n+      Result : Node_Id;\n+      C      : Entity_Id;\n+\n+      First_Time : Boolean := True;\n+\n       function Suitable_Element (C : Entity_Id) return Entity_Id;\n       --  Return the first field to compare beginning with C, skipping the\n-      --  inherited components\n+      --  inherited components.\n+\n+      ----------------------\n+      -- Suitable_Element --\n+      ----------------------\n \n       function Suitable_Element (C : Entity_Id) return Entity_Id is\n       begin\n@@ -6383,11 +6392,6 @@ package body Exp_Ch4 is\n          end if;\n       end Suitable_Element;\n \n-      Result : Node_Id;\n-      C      : Entity_Id;\n-\n-      First_Time : Boolean := True;\n-\n    --  Start of processing for Expand_Record_Equality\n \n    begin\n@@ -6430,7 +6434,6 @@ package body Exp_Ch4 is\n       C := Suitable_Element (First_Entity (Typ));\n \n       while Present (C) loop\n-\n          declare\n             New_Lhs : Node_Id;\n             New_Rhs : Node_Id;\n@@ -6440,7 +6443,6 @@ package body Exp_Ch4 is\n                First_Time := False;\n                New_Lhs := Lhs;\n                New_Rhs := Rhs;\n-\n             else\n                New_Lhs := New_Copy_Tree (Lhs);\n                New_Rhs := New_Copy_Tree (Rhs);\n@@ -6546,7 +6548,7 @@ package body Exp_Ch4 is\n       Loc  : constant Source_Ptr := Sloc (N);\n       Typ  : constant Entity_Id  := Etype (N);\n       Pool : constant Entity_Id  := Associated_Storage_Pool (Typ);\n-      Pnod : Node_Id             := Parent (N);\n+      Pnod : constant Node_Id    := Parent (N);\n \n       function Is_Checked_Storage_Pool (P : Entity_Id) return Boolean;\n       --  Return true if type of P is derived from Checked_Pool;\n@@ -6580,40 +6582,12 @@ package body Exp_Ch4 is\n    begin\n       pragma Assert (Nkind (Pnod) = N_Explicit_Dereference);\n \n-      --  Do not recursively add a dereference check for the\n-      --  attribute references contained within the generated check.\n-\n-      if not Comes_From_Source (Pnod)\n-        and then Nkind (Pnod) = N_Explicit_Dereference\n-        and then Nkind (Parent (Pnod)) = N_Attribute_Reference\n-        and then (Attribute_Name (Parent (Pnod)) = Name_Size\n-          or else Attribute_Name (Parent (Pnod)) = Name_Alignment)\n+      if not (Is_Checked_Storage_Pool (Pool)\n+              and then Comes_From_Source (Original_Node (Pnod)))\n       then\n          return;\n-\n-      elsif not Is_Checked_Storage_Pool (Pool) then\n-         return;\n       end if;\n \n-      --  Do not generate a dereference check for the object passed\n-      --  to an init proc: such a check is not desired (we know for\n-      --  sure that a valid dereference is passed to init procs,\n-      --  and the calls to 'Size and 'Alignment containent in the\n-      --  dereference check would be erroneous anyway if the init proc\n-      --  has not been executed yet.)\n-\n-      while Present (Pnod) loop\n-         if Nkind (Pnod) = N_Procedure_Call_Statement\n-           and then Is_Entity_Name (Name (Pnod))\n-           and then Is_Init_Proc (Name (Pnod))\n-         then\n-            return;\n-         end if;\n-\n-         Pnod := Parent (Pnod);\n-         exit when Nkind (Pnod) not in N_Subexpr;\n-      end loop;\n-\n       Insert_Action (N,\n         Make_Procedure_Call_Statement (Loc,\n           Name => New_Reference_To ("}, {"sha": "43fcf3b8bb174e1039932c9980cab9809e0a4eb4", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -109,7 +109,7 @@ package body Exp_Ch5 is\n    --  hand side of an assignment, and this function determines if there\n    --  is a record component reference where the record may be bit aligned\n    --  in a manner that causes trouble for the back end (see description\n-   --  of Sem_Util.Component_May_Be_Bit_Aligned for further details).\n+   --  of Exp_Util.Component_May_Be_Bit_Aligned for further details).\n \n    ------------------------------\n    -- Change_Of_Representation --\n@@ -1537,13 +1537,13 @@ package body Exp_Ch5 is\n            (Expression (Rhs), Designated_Type (Etype (Lhs)));\n       end if;\n \n-      --  Ada 0Y (AI-231): Generate conversion to the null-excluding\n+      --  Ada 2005 (AI-231): Generate conversion to the null-excluding\n       --  type to force the corresponding run-time check\n \n       if Is_Access_Type (Typ)\n-        and then ((Is_Entity_Name (Lhs)\n-                   and then Can_Never_Be_Null (Entity (Lhs)))\n-                   or else Can_Never_Be_Null (Etype (Lhs)))\n+        and then\n+          ((Is_Entity_Name (Lhs) and then Can_Never_Be_Null (Entity (Lhs)))\n+             or else Can_Never_Be_Null (Etype (Lhs)))\n       then\n          Rewrite (Rhs, Convert_To (Etype (Lhs),\n                                    Relocate_Node (Rhs)));"}, {"sha": "67d18dde16a4cb431f63e0038a18f34a335d2c19", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -1516,10 +1516,10 @@ package body Exp_Ch6 is\n          elsif Convention (Subp) = Convention_Java then\n             null;\n \n-         --  Ada 0Y (AI-231): do not force the check in case of Ada 0Y unless\n-         --  it is a null-excluding type\n+            --  Ada 2005 (AI-231): do not force the check in case of Ada 2005\n+            --  unless it is a null-excluding type\n \n-         elsif not Extensions_Allowed\n+         elsif Ada_Version < Ada_05\n            or else Can_Never_Be_Null (Etype (Prev))\n          then\n             Cond :="}, {"sha": "d93ed9ba0dca7e03d696be2922a1fd2986a838d2", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -1204,10 +1204,10 @@ package body Exp_Ch9 is\n    begin\n       S := Scope (E);\n \n-      --  Ada 0Y (AI-287): Do not set/get the has_master_entity reminder in\n-      --  internal scopes. Required for nested limited aggregates.\n+      --  Ada 2005 (AI-287): Do not set/get the has_master_entity reminder\n+      --  in internal scopes. Required for nested limited aggregates.\n \n-      if Extensions_Allowed then\n+      if Ada_Version >= Ada_05 then\n          while Is_Internal (S) loop\n             S := Scope (S);\n          end loop;\n@@ -1240,13 +1240,13 @@ package body Exp_Ch9 is\n       Insert_Before (P, Decl);\n       Analyze (Decl);\n \n-      --  Ada 0Y (AI-287): Set the has_master_entity reminder in the\n+      --  Ada 2005 (AI-287): Set the has_master_entity reminder in the\n       --  non-internal scope selected above.\n \n-      if not Extensions_Allowed then\n-         Set_Has_Master_Entity (Scope (E));\n-      else\n+      if Ada_Version >= Ada_05 then\n          Set_Has_Master_Entity (S);\n+      else\n+         Set_Has_Master_Entity (Scope (E));\n       end if;\n \n       --  Now mark the containing scope as a task master"}, {"sha": "c6065824e97d8b6b7f0868b5b0915c3ebf79481d", "filename": "gcc/ada/exp_ch9.ads", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_ch9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_ch9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.ads?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -168,10 +168,11 @@ package Exp_Ch9 is\n      (Actions    : List_Id;\n       N          : Node_Id;\n       Init_Stmts : List_Id);\n-   --  Ada0Y (AI-287): Similar to previous routine, but used to expand alloca-\n-   --  ted aggregates with default initialized components. Init_Stmts contains\n-   --  the list of statements required to initialize the allocated aggregate.\n-   --  It replaces the call to Init (Args) done by Build_Task_Allocate_Block.\n+   --  Ada 2005 (AI-287): Similar to previous routine, but used to expand\n+   --  allocated aggregates with default initialized components. Init_Stmts\n+   --  contains the list of statements required to initialize the allocated\n+   --  aggregate. It replaces the call to Init (Args) done by\n+   --  Build_Task_Allocate_Block.\n \n    function Concurrent_Ref (N : Node_Id) return Node_Id;\n    --  Given the name of a concurrent object (task or protected object), or"}, {"sha": "022fc61a3077fee4af712ebd5e0e99a7cade8be4", "filename": "gcc/ada/exp_code.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_code.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_code.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_code.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -165,7 +165,8 @@ package body Exp_Code is\n       --  are never static).\n \n       if Is_OK_Static_Expression (Temp)\n-        or else (Ada_83 and then Nkind (Temp) = N_String_Literal)\n+        or else (Ada_Version = Ada_83\n+                  and then Nkind (Temp) = N_String_Literal)\n       then\n          return Get_String_Node (Temp);\n "}, {"sha": "f2284d408e82f5f6146b089f552c4e73c1f7098a", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -631,8 +631,7 @@ package body Exp_Dbug is\n    -- Get_External_Name --\n    -----------------------\n \n-   procedure Get_External_Name (Entity : Entity_Id; Has_Suffix : Boolean)\n-   is\n+   procedure Get_External_Name (Entity : Entity_Id; Has_Suffix : Boolean) is\n       E    : Entity_Id := Entity;\n       Kind : Entity_Kind;\n "}, {"sha": "48963fbf40b1333d9e0d2abc1b6340ae43775946", "filename": "gcc/ada/g-os_lib.adb", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fg-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fg-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-os_lib.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -39,6 +39,14 @@ with System; use System;\n \n package body GNAT.OS_Lib is\n \n+   OpenVMS : Boolean;\n+   --  Note: OpenVMS should be a constant, but it cannot be, because it\n+   --        prevents bootstrapping on some platforms.\n+\n+   pragma Import (Ada, OpenVMS, \"system__openvms\");\n+   --  Needed to avoid doing useless checks when non on a VMS platform (see\n+   --  Normalize_Pathname).\n+\n    package SSL renames System.Soft_Links;\n \n    --  The following are used by Create_Temp_File\n@@ -1661,12 +1669,10 @@ package body GNAT.OS_Lib is\n       --  Resolving logical names from VMS.\n       --  If we have a Unix path on VMS such as /temp/..., and TEMP is a\n       --  logical name, we need to resolve this logical name.\n-      --  As we have no means to know if we are on VMS, we need to do that\n-      --  for absolute paths starting with '/'.\n       --  We find the directory, change to it, get the current directory,\n       --  and change the directory to this value.\n \n-      if Path_Buffer (1) = '/' then\n+      if OpenVMS and then Path_Buffer (1) = '/' then\n          declare\n             Cur_Dir : String := Get_Directory (\"\");\n             --  Save the current directory, so that we can change dir back to"}, {"sha": "3ff38b0fa22a3a6ccbe4ddf2ff8f0289f28bfe2d", "filename": "gcc/ada/g-trasym.ads", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fg-trasym.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fg-trasym.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-trasym.ads?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 1999-2003 Ada Core Technologies, Inc.            --\n+--           Copyright (C) 1999-2004 Ada Core Technologies, Inc.            --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,7 +34,7 @@\n --  Run-time symbolic traceback support\n \n --  Note: this is only available on selected targets. Currently it is\n---  supported on Sparc/Solaris, GNU/Linux, Windows NT, HP-UX and Tru64.\n+--  supported on Sparc/Solaris, GNU/Linux, Windows NT, HP-UX, VMS and Tru64.\n \n --  The routines provided in this package assume that your application has\n --  been compiled with debugging information turned on, since this information\n@@ -46,12 +46,14 @@\n --  need to be provided when launching the executable), and load then in\n --  memory, causing a significant cpu and memory overhead.\n \n---  This package is not intended to be used within a shared library,\n---  symbolic tracebacks are only supported for the main executable\n---  and not for shared libraries.\n+--  On all platforms except VMS, this package is not intended to be used\n+--  within a shared library, symbolic tracebacks are only supported for the\n+--  main executable and not for shared libraries.\n+--  You should consider using gdb to obtain symbolic traceback in such cases.\n \n---  You should consider using off-line symbolic traceback instead, using\n---  addr2line or gdb.\n+--  On VMS, there is no restriction on using this facility with shared\n+--  libraries. However, the OS should be at least v7.3-1 and OS patch\n+--  VMS731_TRACE-V0100 must be applied in order to use this package.\n \n with Ada.Exceptions; use Ada.Exceptions;\n "}, {"sha": "b9c1d2c4cb8fa2febc08f9ac1a80b9d82e93c063", "filename": "gcc/ada/gigi.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fgigi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fgigi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgigi.h?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -383,9 +383,10 @@ extern int global_bindings_p (void);\n    is in reverse order (it has to be so for back-end compatibility).  */\n extern tree getdecls (void);\n \n-/* Enter and exit a new binding level. */\n+/* Enter and exit a new binding level. We return the BLOCK node, if any\n+   when we exit a binding level.  */\n extern void gnat_pushlevel (void);\n-extern void gnat_poplevel (void);\n+extern tree gnat_poplevel (void);\n \n /* Insert BLOCK at the end of the list of subblocks of the\n    current binding level.  This is used when a BIND_EXPR is expanded,"}, {"sha": "b51edf27c0ee2cb616e7649457a0c67ce9541734", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -329,7 +329,7 @@ begin\n                --  a junk spec as not needing a body when it really does).\n \n                if Main_Kind = N_Package_Declaration\n-                 and then Ada_83\n+                 and then Ada_Version = Ada_83\n                  and then Operating_Mode = Generate_Code\n                  and then Distribution_Stub_Mode /= Generate_Caller_Stub_Body\n                  and then not Compilation_Errors"}, {"sha": "82f64a923966baf83718ad1b0f1e574a4d166189", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 198, "deletions": 160, "changes": 358, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -14413,8 +14413,12 @@ error message; no output file will be generated.\n If the compilation unit\n contained in the input source depends semantically upon units located\n outside the current directory, you have to provide the source search path\n-when invoking @command{gnatpp}; see the description of the @command{gnatpp}\n-switches below.\n+when invoking @command{gnatpp}, if these units are contained in files with\n+names that do not follow the GNAT file naming rules, you have to provide\n+the configuration file describing the corresponding naming scheme;\n+see the description of the @command{gnatpp}\n+switches below. Another possibility is to use a project file and to\n+call @command{gnatpp} through the @command{gnat} driver\n \n The @command{gnatpp} command has the form\n \n@@ -16306,10 +16310,11 @@ where @code{gnatclean} was invoked.\n @cindex Library, building, installing, using\n \n @noindent\n-This chapter addresses the issues related to building and using\n-libraries with GNAT. It also shows how the GNAT run-time library can be\n-recompiled. It is recommended that the user understands how to use the\n-@ref{GNAT Project Manager} facility before reading this chapter.\n+This chapter describes how to build and use\n+libraries with GNAT, and also shows how to recompile the GNAT run-time library.\n+You should be familiar with the\n+Project Manager facility (see @ref{GNAT Project Manager}) before reading this\n+chapter.\n \n @menu\n * Introduction to Libraries in GNAT::\n@@ -16327,34 +16332,41 @@ own main thread of execution, but rather provides certain services to the\n applications that use it. A library can be either statically linked with the\n application, in which case its code is directly included in the application,\n or, on platforms that support it, be dynamically linked, in which case\n-its code is shared by all applications making use of this library. GNAT\n-supports both types of libraries. In the static case, the compiled code can\n-be provided in different ways. The simplest way is to provide directly the\n-set of objects produced by the compiler during the compilation of the library.\n-It is also possible to group the objects into an archive using whatever\n-commands are provided by the operating system. For the later case, the objects\n-are grouped into a shared library.\n+its code is shared by all applications making use of this library.\n+\n+GNAT supports both types of libraries.\n+In the static case, the compiled code can be provided in different ways.\n+The simplest approach is to provide directly the\n+set of objects resulting from compilation of the library source files.\n+Alternatively, you can group the objects into an archive using whatever\n+commands are provided by the operating system. For the latter case,\n+the objects are grouped into a shared library.\n \n In the GNAT environment, a library has two types of components:\n @itemize @bullet\n @item\n Source files.\n @item\n-Compiled code and Ali files. See @ref{The Ada Library Information Files}.\n+Compiled code and @file{ALI} files.\n+See @ref{The Ada Library Information Files}.\n @end itemize\n \n @noindent\n-GNAT libraries can either completely expose their source files to the\n-compilation context of the user's application, or alternatively only expose\n-a limited set of source files, called interface units, in which case they are\n-called @ref{Stand-alone Ada Libraries}. In addition, GNAT provides full support\n-for foreign libraries which are only available in the object format.\n+A GNAT library may either completely expose its source files to the\n+compilation context of the user's application.\n+Alternatively, it may expose\n+a limited subset of its source files, called @emph{interface units},\n+in which case the library is referred to as a @emph{stand-alone library}\n+(see @ref{Stand-alone Ada Libraries}). In addition, GNAT fully supports\n+foreign libraries, which are only available in the object format.\n \n-Ada semantics requires that all compilation units comprising the application\n-are elaborated in the timely fashion. Where possible, GNAT provides facilities\n+All compilation units comprising\n+an application are elaborated, in an order partially defined by Ada language\n+semantics.\n+Where possible, GNAT provides facilities\n to ensure that compilation units of a library are automatically elaborated;\n however, there are cases where this must be responsibility of a user. This will\n-be addressed in greater detail further on.\n+be addressed in greater detail below.\n \n @node General Ada Libraries\n @section General Ada Libraries\n@@ -16369,65 +16381,69 @@ be addressed in greater detail further on.\n @subsection Building the library\n \n @noindent\n-The easiest way to build a library is to use the @ref{GNAT Project Manager},\n-which supports a special type of projects called @ref{Library Projects}.\n+The easiest way to build a library is to use the Project Manager,\n+which supports a special type of projects called Library Projects\n+(see @ref{Library Projects}).\n \n A project is considered a library project, when two project-level attributes\n are defined in it: @code{Library_Name} and @code{Library_Dir}. In order to\n control different aspects of library configuration, additional optional\n project-level attributes can be specified:\n-@itemize\n-@item @code{Library_Kind}\n+@table @code\n+@item Library_Kind\n This attribute controls whether the library is to be static or shared\n-@item @code{Library_Version}\n+\n+@item Library_Version\n This attribute specifies what is the library version; this value is used\n during dynamic linking of shared libraries to determine if the currently\n installed versions of the binaries are compatible.\n-@item @code{Library_Options}, @code{Library_GCC}\n+\n+@item Library_Options\n+@item Library_GCC\n These attributes specify additional low-level options to be used during\n library generation, and redefine the actual application used to generate\n library.\n-@end itemize\n+@end table\n \n @noindent\n-GNAT Project Manager takes full care of the library maintenance task,\n+The GNAT Project Manager takes full care of the library maintenance task,\n including recompilation of the source files for which objects do not exist\n or are not up to date, assembly of the library archive, and installation of\n-the library, i.e. the copy of associated source, object and ALI files to the\n-specific location.\n+the library, i.e. copying associated source, object and @file{ALI} files\n+to the specified location.\n \n-It is not entirely trivial to correctly do all the steps required to\n-produce a library. We recommend that you use @ref{GNAT Project Manager}\n+It is not entirely trivial to correctly perform all the steps required to\n+produce a library. We recommend that you use the GNAT Project Manager\n for this task. In special cases where this is not desired, the necessary\n steps are discussed below.\n \n There are various possibilities for compiling the units that make up the\n-library: for example with a Makefile @ref{Using the GNU make Utility},\n+library: for example with a Makefile (see @ref{Using the GNU make Utility})\n or with a conventional script.\n For simple libraries, it is also possible to create a\n dummy main program which depends upon all the packages that comprise the\n interface of the library. This dummy main program can then be given to\n-gnatmake, which will ensure that all necessary objects are built.\n+@command{gnatmake}, which will ensure that all necessary objects are built.\n \n-After this task is accomplished, the user should follow the standard procedure\n+After this task is accomplished, you should follow the standard procedure\n of the underlying operating system to produce the static or shared library.\n \n-Below is an example of such a dummy program and the generic commands used to\n-build an archive or a shared library.\n-\n+Here is an example of such a dummy program:\n @smallexample @c ada\n-@iftex\n-@leftskip=.7cm\n-@end iftex\n+@group\n with My_Lib.Service1;\n with My_Lib.Service2;\n with My_Lib.Service3;\n procedure My_Lib_Dummy is\n begin\n    null;\n end;\n+@end group\n @end smallexample\n \n+@noindent\n+Here are the generic commands that will build an archive or a shared library.\n+\n @smallexample\n # compiling the library\n $ gnatmake -c my_lib_dummy.adb\n@@ -16449,13 +16465,12 @@ $ rm *.o\n # Make the ALI files read-only so that gnatmake will not try to\n # regenerate the objects that are in the library\n $ chmod -w *.ali\n-\n @end smallexample\n \n @noindent\n-Please note that the library must have a name of the form libxxx.a or\n-libxxx.so in order to be accessed by the directive -lxxx at link\n-time.\n+Please note that the library must have a name of the form @file{libxxx.a} or\n+@file{libxxx.so} in order to be accessed by the directive @option{-lxxx}\n+at link time.\n \n @node Installing the library\n @subsection Installing the library\n@@ -16464,46 +16479,47 @@ time.\n In the GNAT model, installing a library consists in copying into a specific\n location the files that make up this library. When the library is built using\n projects, it is automatically installed in the location specified in the\n-project by means of the attribute @code{Library_Dir}, otherwise it is\n-responsibility of the user. GNAT also supports installing the sources in a\n-different directory from the other files (ALI, objects, archives) since the\n-source path and the object path can be specified separately.\n-\n-For general purpose libraries, it is possible for the system\n-administrator to put those libraries in the default compiler paths. To\n-achieve this, he must specify their location in the configuration files\n-@file{ada_source_path} and @file{ada_object_path} that must be located in\n-the GNAT\n+project by means of the attribute @code{Library_Dir},\n+otherwise the user must specify the destination.\n+GNAT also supports installing the sources in a\n+different directory from the other files (@file{ALI}, objects, archives)\n+since the source path and the object path can be specified separately.\n+\n+The system administrator can place general purpose libraries in the default\n+compiler paths, by specifying the libraries' location in the configuration\n+files @file{ada_source_path} and @file{ada_object_path}.\n+These configuration files must be located in the GNAT\n installation tree at the same place as the gcc spec file. The location of\n the gcc spec file can be determined as follows:\n @smallexample\n $ gcc -v\n @end smallexample\n \n @noindent\n-The configuration files mentioned above have simple format: each line in them\n-must contain one unique\n-directory name. Those names are added to the corresponding path\n+The configuration files mentioned above have a simple format: each line\n+must contain one unique directory name.\n+Those names are added to the corresponding path\n in their order of appearance in the file. The names can be either absolute\n-or relative, in the latter case, they are relative to where theses files\n+or relative; in the latter case, they are relative to where theses files\n are located.\n \n-@file{ada_source_path} and @file{ada_object_path} might actually not be\n+The files @file{ada_source_path} and @file{ada_object_path} might not be\n present in a\n GNAT installation, in which case, GNAT will look for its run-time library in\n-he directories @file{adainclude} for the sources and @file{adalib} for the\n-objects and @file{ALI} files. When the files exist, the compiler does not\n-look in @file{adainclude} and @file{adalib} at all, and thus the\n+the directories @file{adainclude} (for the sources) and @file{adalib} (for the\n+objects and @file{ALI} files). When the files exist, the compiler does not\n+look in @file{adainclude} and @file{adalib}, and thus the\n @file{ada_source_path} file\n must contain the location for the GNAT run-time sources (which can simply\n be @file{adainclude}). In the same way, the @file{ada_object_path} file must\n contain the location for the GNAT run-time objects (which can simply\n be @file{adalib}).\n \n-You can also specify a new default path to the runtime library at compilation\n-time with the switch @option{--RTS=rts-path}. You can easily choose and change\n-the runtime you want your program to be compiled with. This switch is\n-recognized by gcc, gnatmake, gnatbind, gnatls, gnatfind and gnatxref.\n+You can also specify a new default path to the run-time library at compilation\n+time with the switch @option{--RTS=rts-path}. You can thus choose / change\n+the run-time library you want your program to be compiled with. This switch is\n+recognized by @command{gcc}, @command{gnatmake}, @command{gnatbind},\n+@command{gnatls}, @command{gnatfind} and @command{gnatxref}.\n \n It is possible to install a library before or after the standard GNAT\n library, by reordering the lines in the configuration files. In general, a\n@@ -16517,14 +16533,14 @@ any part of it.\n @noindent\n Once again, the project facility greatly simplifies the addition of libraries\n to the compilation. If the project file for an application lists a library\n-project in its @code{with} clause, the project manager will ensure that the\n-library files are consistent, and are considered during compilation and\n-linking of the main application.\n+project in its @code{with} clause, the Project Manager will ensure that the\n+library files are consistent, and that they are considered during the\n+compilation and linking of the application.\n \n-Even if you have a third-party, non-Ada library, you can still use GNAT\n-Project facility to provide a wrapper for it. The following project for\n-example, when \"withed\" in your main project, will link with the third-party\n-library liba.a:\n+Even if you have a third-party, non-Ada library, you can still use GNAT's\n+Project Manager facility to provide a wrapper for it. The following project for\n+example, when @code{with}ed in your main project, will link with the\n+third-party library @file{liba.a}:\n \n @smallexample @c projectfile\n @group\n@@ -16540,12 +16556,12 @@ end Liba;\n @noindent\n In order to use an Ada library manually, you need to make sure that this\n library is on both your source and object path\n-@ref{Search Paths and the Run-Time Library (RTL)}\n-and @ref{Search Paths for gnatbind}. Furthermore, when the objects are grouped\n-in an archive or a shared library, the user needs to specify the desired\n+(see @ref{Search Paths and the Run-Time Library (RTL)},\n+and @ref{Search Paths for gnatbind}). Furthermore, when the objects are grouped\n+in an archive or a shared library, you need to specify the desired\n library at link time.\n \n-By means of example, you can use the library @file{mylib} installed in\n+For example, you can use the library @file{mylib} installed in\n @file{/dir/my_lib_src} and @file{/dir/my_lib_obj} with the following commands:\n \n @smallexample\n@@ -16554,10 +16570,11 @@ $ gnatmake -aI/dir/my_lib_src -aO/dir/my_lib_obj my_appl \\\n @end smallexample\n \n @noindent\n-This can be simplified down to the following:\n+This can be expressed more simply:\n @smallexample\n $ gnatmake my_appl\n @end smallexample\n+@noindent\n when the following conditions are met:\n @itemize @bullet\n @item\n@@ -16569,7 +16586,7 @@ variable @code{ADA_INCLUDE_PATH}, or by the administrator to the file\n variable @code{ADA_OBJECTS_PATH}, or by the administrator to the file\n @file{ada_object_path}\n @item\n-a pragma @code{Linker_Options}, has been added to one of the sources.\n+a pragma @code{Linker_Options} has been added to one of the sources.\n For example:\n \n @smallexample @c ada\n@@ -16583,50 +16600,55 @@ pragma Linker_Options (\"-lmy_lib\");\n @cindex Stand-alone library, building, using\n \n @menu\n-* Introduction to Stand-Alone Libraries::\n-* Building SAL::\n-* Creating SAL to be used in a non-Ada context::\n-* Restrictions in SALs::\n+* Introduction to Stand-alone Libraries::\n+* Building a Stand-alone Library::\n+* Creating a Stand-alone Library to be used in a non-Ada context::\n+* Restrictions in Stand-alone Libraries::\n @end menu\n \n-@node Introduction to Stand-Alone Libraries\n-@subsection Introduction to Stand-Alone Libraries\n+@node Introduction to Stand-alone Libraries\n+@subsection Introduction to Stand-alone Libraries\n \n @noindent\n A Stand-alone Library (SAL) is a library that contains the necessary code to\n-elaborate the Ada units that are included in the library. Different from\n-ordinary libraries, which consist of all sources, objects and ALI files of the\n-library, the SAL creator can specify a restricted subset of compilation units\n-comprising SAL to serve as a library interface. In this case, the fully\n-self-sufficient set of files of such library will normally consist of objects\n-archive, sources of interface units specs, and ALI files of interface units.\n-Note that if interface specs contain generics or inlined subprograms, body\n+elaborate the Ada units that are included in the library. In contrast with\n+an ordinary library, which consists of all sources, objects and @file{ALI}\n+files of the\n+library, a SAL may specify a restricted subset of compilation units\n+to serve as a library interface. In this case, the fully\n+self-sufficient set of files will normally consist of an objects\n+archive, the sources of interface units' specs, and the @file{ALI}\n+files of interface units.\n+If an interface spec contains a generic unit or an inlined subprogram,\n+the body's\n source must also be provided; if the units that must be provided in the source\n-form depend on other units, the source and ALIs of those must also be provided.\n+form depend on other units, the source and @file{ALI} files of those must\n+also be provided.\n \n-The main purpose of SAL is to minimize the recompilation overhead of client\n-applications when the new version of the library is installed. Specifically,\n+The main purpose of a SAL is to minimize the recompilation overhead of client\n+applications when a new version of the library is installed. Specifically,\n if the interface sources have not changed, client applications do not need to\n-be recompiled. If, furthermore, SAL is provided in the shared form and its\n-version, controlled by @code{Library_Version} attribute, is not changed, the\n-clients don't need to be relinked, either.\n+be recompiled. If, furthermore, a SAL is provided in the shared form and its\n+version, controlled by @code{Library_Version} attribute, is not changed,\n+then the clients do not need to be relinked.\n \n-SALs also allow the library providers to minimize amount of library source\n-text exposed to the clients, which might be necessary for different reasons.\n+SALs also allow the library providers to minimize the amount of library source\n+text exposed to the clients.  Such ``information hiding'' might be useful or\n+necessary for various reasons.\n \n-Stand-alone libraries are also well suited to be used in an executable which\n-main is not written in Ada.\n+Stand-alone libraries are also well suited to be used in an executable whose\n+main routine is not written in Ada.\n \n-@node Building SAL\n-@subsection Building SAL\n+@node Building a Stand-alone Library\n+@subsection Building a Stand-alone Library\n \n @noindent\n-GNAT Project facility provides a simple way of building and installing\n-stand-alone libraries, see @ref{Stand-alone Library Projects}.\n+GNAT's Project facility provides a simple way of building and installing\n+stand-alone libraries; see @ref{Stand-alone Library Projects}.\n To be a Stand-alone Library Project, in addition to the two attributes\n that make a project a Library Project (@code{Library_Name} and\n-@code{Library_Dir}, see @ref{Library Projects}), the attribute\n-@code{Library_Interface} must be defined.\n+@code{Library_Dir}; see @ref{Library Projects}), the attribute\n+@code{Library_Interface} must be defined.  For example:\n \n @smallexample @c projectfile\n @group\n@@ -16636,82 +16658,91 @@ that make a project a Library Project (@code{Library_Name} and\n @end group\n @end smallexample\n \n+@noindent\n Attribute @code{Library_Interface} has a non empty string list value,\n each string in the list designating a unit contained in an immediate source\n of the project file.\n \n When a Stand-alone Library is built, first the binder is invoked to build\n a package whose name depends on the library name\n-(^b~dummy.ads/b^B$DUMMY.ADS/B^ in the example above).\n+(@file{^b~dummy.ads/b^B$DUMMY.ADS/B^} in the example above).\n This binder-generated package includes initialization and\n finalization procedures whose\n-names depend on the library name (dummyinit and dummyfinal in the example\n+names depend on the library name (@code{dummyinit} and @code{dummyfinal}\n+in the example\n above). The object corresponding to this package is included in the library.\n \n-The user must ensure timely (e.g. prior to any use of interfaces in the SAL)\n-calling of these procedures if static SAL is built, or shared SAL is built\n-with project-level attribute @code{Library_Auto_Init} set to \"false\".\n+You must ensure timely (e.g., prior to any use of interfaces in the SAL)\n+calling of these procedures if a static SAL is built, or if a shared SAL\n+is built\n+with the project-level attribute @code{Library_Auto_Init} set to\n+@code{\"false\"}.\n \n For a Stand-Alone Library, only the @file{ALI} files of the Interface Units\n (those that are listed in attribute @code{Library_Interface}) are copied to\n the Library Directory. As a consequence, only the Interface Units may be\n imported from Ada units outside of the library. If other units are imported,\n the binding phase will fail.\n \n-The attribute @code{Library_Src_Dir}, may be specified for a\n+The attribute @code{Library_Src_Dir} may be specified for a\n Stand-Alone Library. @code{Library_Src_Dir} is a simple attribute that has a\n single string value. Its value must be the path (absolute or relative to the\n project directory) of an existing directory. This directory cannot be the\n object directory or one of the source directories, but it can be the same as\n the library directory. The sources of the Interface\n-Units of the library, necessary to an Ada client of the library, will be\n-copied to the designated directory, called Interface Copy directory.\n+Units of the library that are needed by an Ada client of the library will be\n+copied to the designated directory, called the Interface Copy directory.\n These sources includes the specs of the Interface Units, but they may also\n include bodies and subunits, when pragmas @code{Inline} or @code{Inline_Always}\n-are used, or when there is a generic units in the spec. Before the sources\n+are used, or when there is a generic unit in the spec. Before the sources\n are copied to the Interface Copy directory, an attempt is made to delete all\n files in the Interface Copy directory.\n \n-Building stand-alone libraries by hand is difficult. Below are listed the steps\n-necessary to be done by the user:\n+Building stand-alone libraries by hand is somewhat tedious, but for those\n+occasions when it is necessary here are the steps that you need to perform:\n @itemize @bullet\n @item\n-compile all library sources\n+Compile all library sources.\n+\n @item\n-invoke the binder with the switch -n (No Ada main program),\n-with all the ALI files of the interfaces, and\n-with the switch -L to give specific names to the init and final\n-procedure.\n+Invoke the binder with the switch @option{-n} (No Ada main program),\n+with all the @file{ALI} files of the interfaces, and\n+with the switch @option{-L} to give specific names to the @code{init}\n+and @code{final} procedures.  For example:\n @smallexample\n   gnatbind -n int1.ali int2.ali -Lsal1\n @end smallexample\n+\n @item\n-compile the binder generated file\n+Compile the binder generated file:\n @smallexample\n   gcc -c b~int2.adb\n @end smallexample\n+\n @item\n-link the dynamic library with all the necessary object files,\n-indicating to the linker the names of the init (and possibly\n-final) procedures for automatic initialization (and finalization).\n-The built library should be put in a directory different from\n+Link the dynamic library with all the necessary object files,\n+indicating to the linker the names of the @code{init} (and possibly\n+@code{final}) procedures for automatic initialization (and finalization).\n+The built library should be placed in a directory different from\n the object directory.\n+\n @item\n-copy the ALI files of the interface to the library directory,\n-add in the copy the indication that it is an interface to a SAL\n-(i.e. add a word @option{SL} on the line in ALI file that starts\n-with letter P) and make the modified copy of the ALI file read-only.\n+Copy the @code{ALI} files of the interface to the library directory,\n+add in this copy an indication that it is an interface to a SAL\n+(i.e. add a word @option{SL} on the line in the @file{ALI} file that starts\n+with letter ``P'') and make the modified copy of the @file{ALI} file\n+read-only.\n @end itemize\n \n @noindent\n Using SALs is not different from using other libraries\n (see @ref{Using the library}).\n \n-@node Creating SAL to be used in a non-Ada context\n-@subsection Creating SAL to be used in a non-Ada context\n+@node Creating a Stand-alone Library to be used in a non-Ada context\n+@subsection Creating a Stand-alone Library to be used in a non-Ada context\n \n @noindent\n-It is easy to adapt SAL build procedure discussed above for use of SAL in\n+It is easy to adapt the SAL build procedure discussed above for use of a SAL in\n a non-Ada context.\n \n The only extra step required is to ensure that library interface subprograms\n@@ -16734,8 +16765,8 @@ end Interface;\n \n @noindent\n On the foreign language side, you must provide a ``foreign'' view of the\n-library interface; remeber that it should contain elaboration routines in\n-addition to interface subrporams.\n+library interface; remember that it should contain elaboration routines in\n+addition to interface subprograms.\n \n The example below shows the content of @code{mylib_interface.h} (note\n that there is no rule for the naming of this file, any name can be used)\n@@ -16758,7 +16789,7 @@ example) are called before the library services are used. Any number of\n libraries can be used simultaneously, as long as the elaboration\n procedure of each library is called.\n \n-Below is an example of C program that uses our @code{mylib} library.\n+Below is an example of C program that uses the @code{mylib} library.\n \n @smallexample\n #include \"mylib_interface.h\"\n@@ -16781,13 +16812,14 @@ main (void)\n \n @noindent\n Note that invoking any library finalization procedure generated by\n-@code{gnatbind} shuts down the Ada run time permanently. Consequently, the\n+@code{gnatbind} shuts down the Ada run-time environment.\n+Consequently, the\n finalization of all Ada libraries must be performed at the end of the program.\n-No call to these libraries nor the Ada run time should be made past the\n-finalization phase.\n+No call to these libraries nor to the Ada run-time library should be made\n+after the finalization phase.\n \n-@node Restrictions in SALs\n-@subsection Restrictions in SALs\n+@node Restrictions in Stand-alone Libraries\n+@subsection Restrictions in Stand-alone Libraries\n \n @noindent\n The pragmas listed below should be used with caution inside libraries,\n@@ -16798,21 +16830,23 @@ as they can create incompatibilities with other Ada libraries:\n @item pragma @code{Task_Dispatching_Policy}\n @item pragma @code{Unreserve_All_Interrupts}\n @end itemize\n+\n+@noindent\n When using a library that contains such pragmas, the user must make sure\n that all libraries use the same pragmas with the same values. Otherwise,\n-a @code{Program_Error} will\n+@code{Program_Error} will\n be raised during the elaboration of the conflicting\n libraries. The usage of these pragmas and its consequences for the user\n should therefore be well documented.\n \n-Similarly, the traceback in exception occurrences mechanism should be\n+Similarly, the traceback in the exception occurrence mechanism should be\n enabled or disabled in a consistent manner across all libraries.\n-Otherwise, a Program_Error will be raised during the elaboration of the\n+Otherwise, Program_Error will be raised during the elaboration of the\n conflicting libraries.\n \n-If the @code{'Version} and @code{'Body_Version}\n-attributes are used inside a library, then it is necessary to\n-perform a @code{gnatbind} step that mentions all @file{ALI} files in all\n+If the @code{Version} or @code{Body_Version}\n+attributes are used inside a library, then you need to\n+perform a @code{gnatbind} step that specifies all @file{ALI} files in all\n libraries, so that version identifiers can be properly computed.\n In practice these attributes are rarely used, so this is unlikely\n to be a consideration.\n@@ -21288,12 +21322,14 @@ compared to other native thread libraries:\n @noindent\n On AIX, the resolver library initializes some internal structure on\n the first call to @code{get*by*} functions, which are used to implement\n-@code{GNAT.Sockets.Get_Host_By_Name} and @code{GNAT.Sockets.Get_Host_By_Addrss}.\n+@code{GNAT.Sockets.Get_Host_By_Name} and\n+@code{GNAT.Sockets.Get_Host_By_Addrss}.\n If such initialization occurs within an Ada task, and the stack size for\n the task is the default size, a stack overflow may occur.\n \n To avoid this overflow, the user should either ensure that the first call\n-to @code{GNAT.Sockets.Get_Host_By_Name} or @code{GNAT.Sockets.Get_Host_By_Addrss}\n+to @code{GNAT.Sockets.Get_Host_By_Name} or\n+@code{GNAT.Sockets.Get_Host_By_Addrss}\n occurs in the environment task, or use @code{pragma Storage_Size} to\n specify a sufficiently large size for the stack of the task that contains\n this call.\n@@ -26682,7 +26718,8 @@ $ dll2def API.dll > API.def\n to standard output the list of entry points in the DLL. Note that if\n some routines in the DLL have the @code{Stdcall} convention\n (@pxref{Windows Calling Conventions}) with stripped @code{@@}@i{nn}\n-suffix then you'll have to edit @file{api.def} to add it.\n+suffix then you'll have to edit @file{api.def} to add it, and specify\n+@code{-k} to @code{gnatdll} when creating the import library.\n \n @noindent\n Here are some hints to find the right @code{@@}@i{nn} suffix.\n@@ -27182,10 +27219,11 @@ object files needed to build the DLL.\n @item -k\n @cindex @option{-k} (@code{gnatdll})\n Removes the @code{@@}@i{nn} suffix from the import library's exported\n-names. You must specified this option if you want to use a\n-@code{Stdcall} function in a DLL for which the @code{@@}@i{nn} suffix\n-has been removed. This is the case for most of the Windows NT DLL for\n-example. This option has no effect when @option{-n} option is specified.\n+names, but keeps them for the link names. You must specify this\n+option if you want to use a @code{Stdcall} function in a DLL for which\n+the @code{@@}@i{nn} suffix has been removed. This is the case for most\n+of the Windows NT DLL for example. This option has no effect when\n+@option{-n} option is specified.\n \n @item -l @var{file}\n @cindex @option{-l} (@code{gnatdll})"}, {"sha": "0352d7c05cbd202d968f703b9edcdc44e67516bc", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -97,6 +97,7 @@ procedure GNATCmd is\n    Gnatls_String    : constant String_Access := new String'(\"gnatls\");\n    Pretty_String    : constant String_Access := new String'(\"pretty_printer\");\n    Gnatstub_String  : constant String_Access := new String'(\"gnatstub\");\n+   Metric_String    : constant String_Access := new String'(\"metrics\");\n    Xref_String      : constant String_Access := new String'(\"cross_reference\");\n \n    Packages_To_Check_By_Binder   : constant String_List_Access :=\n@@ -120,6 +121,9 @@ procedure GNATCmd is\n    Packages_To_Check_By_Gnatstub  : constant String_List_Access :=\n      new String_List'((Naming_String, Gnatstub_String));\n \n+   Packages_To_Check_By_Metric  : constant String_List_Access :=\n+     new String_List'((Naming_String, Metric_String));\n+\n    Packages_To_Check_By_Xref      : constant String_List_Access :=\n      new String_List'((Naming_String, Xref_String));\n \n@@ -151,8 +155,8 @@ procedure GNATCmd is\n    function Configuration_Pragmas_File return Name_Id;\n    --  Return an argument, if there is a configuration pragmas file to be\n    --  specified for Project, otherwise return No_Name.\n-   --  Used for gnatstub (GNAT STUB), gnatpp (GNAT PRETTY) and gnatelim\n-   --  (GNAT ELIM).\n+   --  Used for gnatstub (GNAT STUB), gnatpp (GNAT PRETTY), gnatelim\n+   --  (GNAT ELIM), and gnatmetric (GNAT METRIC).\n \n    procedure Delete_Temp_Config_Files;\n    --  Delete all temporary config files\n@@ -416,7 +420,7 @@ procedure GNATCmd is\n       end loop;\n \n       New_Line;\n-      Put_Line (\"Commands FIND, LIST, PRETTY, STUB and XREF accept \" &\n+      Put_Line (\"Commands FIND, LIST, PRETTY, STUB, NETRIC and XREF accept \" &\n                 \"project file switches -vPx, -Pprj and -Xnam=val\");\n       New_Line;\n    end Non_VMS_Usage;\n@@ -596,6 +600,7 @@ begin\n         or else The_Command = Xref\n         or else The_Command = Pretty\n         or else The_Command = Stub\n+        or else The_Command = Metric\n       then\n          case The_Command is\n             when Bind =>\n@@ -613,6 +618,9 @@ begin\n             when List =>\n                Tool_Package_Name := Name_Gnatls;\n                Packages_To_Check := Packages_To_Check_By_Gnatls;\n+            when Metric =>\n+               Tool_Package_Name := Name_Metrics;\n+               Packages_To_Check := Packages_To_Check_By_Metric;\n             when Pretty =>\n                Tool_Package_Name := Name_Pretty_Printer;\n                Packages_To_Check := Packages_To_Check_By_Pretty;\n@@ -825,9 +833,9 @@ begin\n \n                --  Packages Binder (for gnatbind), Cross_Reference (for\n                --  gnatxref), Linker (for gnatlink) Finder (for gnatfind),\n-               --  Pretty_Printer (for gnatpp) and Eliminate (for gnatelim)\n-               --  have an attributed Switches, an associative array, indexed\n-               --  by the name of the file.\n+               --  Pretty_Printer (for gnatpp) Eliminate (for gnatelim) and\n+               --  Metric (for gnatmetric) have an attributed Switches,\n+               --  an associative array, indexed by the name of the file.\n \n                --  They also have an attribute Default_Switches, indexed\n                --  by the name of the programming language.\n@@ -901,10 +909,11 @@ begin\n \n          Prj.Env.Set_Ada_Paths (Project, Including_Libraries => False);\n \n-         --  For gnatstub, gnatpp and gnatelim, create a configuration pragmas\n-         --  file, if necessary.\n+         --  For gnatstub, gnatmetric, gnatpp and gnatelim, create\n+         --  a configuration pragmas file, if necessary.\n \n          if The_Command = Pretty\n+           or else The_Command = Metric\n            or else The_Command = Stub\n            or else The_Command = Elim\n          then\n@@ -1328,10 +1337,11 @@ begin\n             end;\n          end if;\n \n-         --  For gnat pretty, if no file has been put on the command line,\n-         --  call gnatpp with all the sources of the main project.\n+         --  For gnat pretty and gnat metric, if no file has been put on the\n+         --  command line, call the tool with all the sources of the main\n+         --  project.\n \n-         if The_Command = Pretty then\n+         if The_Command = Pretty or else The_Command = Metric then\n             declare\n                Add_Sources : Boolean := True;\n                Unit_Data   : Prj.Com.Unit_Data;"}, {"sha": "a00e185f5fc875df6b56e789e36aec49dbb90ca9", "filename": "gcc/ada/gnatvsn.ads", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fgnatvsn.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fgnatvsn.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatvsn.ads?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -45,7 +45,7 @@ package Gnatvsn is\n    --  Static string identifying this version, that can be used as an argument\n    --  to e.g. pragma Ident.\n \n-   type Gnat_Build_Type is (FSF, Public);\n+   type Gnat_Build_Type is (FSF, Public, GAP);\n    --  See Get_Gnat_Build_Type below for the meaning of these values.\n \n    function Get_Gnat_Build_Type return Gnat_Build_Type;\n@@ -63,6 +63,9 @@ package Gnatvsn is\n    --       The binder will output informational messages, and the bug box\n    --       generated by the package Comperr will give appropriate bug\n    --       submission instructions.\n+   --\n+   --    GAP\n+   --       GNAT Academic Program, similar to Public.\n \n    Ver_Len_Max : constant := 32;\n    --  Longest possible length for Gnat_Version_String in this or any\n@@ -71,7 +74,7 @@ package Gnatvsn is\n    --  value should never be decreased in the future, but it would be\n    --  OK to increase it if absolutely necessary.\n \n-   Library_Version : constant String := \"3.4\";\n+   Library_Version : constant String := \"3.5\";\n    --  Library version. This value must be updated whenever any change to the\n    --  compiler affects the library formats in such a way as to obsolete\n    --  previously compiled library modules.\n@@ -82,7 +85,7 @@ package Gnatvsn is\n    Verbose_Library_Version : constant String := \"GNAT Lib v\" & Library_Version;\n    --  Version string stored in e.g. ALI files.\n \n-   ASIS_Version_Number : constant := 2;\n+   ASIS_Version_Number : constant := 4;\n    --  ASIS Version. This is used to check for consistency between the compiler\n    --  used to generate trees, and an ASIS application that is reading the\n    --  trees. It must be updated (incremented) whenever a change is made to"}, {"sha": "59879f0a431ad0fc9a300b2e0be9f11b21f0621d", "filename": "gcc/ada/lib-load.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Flib-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Flib-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -479,7 +479,7 @@ package body Lib.Load is\n          --  legitimately occurs (e.g. two package bodies that contain\n          --  inlined subprogram referenced by the other).\n \n-         --  Ada0Y (AI-50217): We also ignore limited_with clauses, because\n+         --  Ada 2005 (AI-50217): We also ignore limited_with clauses, because\n          --  their purpose is precisely to create legal circular structures.\n \n          if Loading (Unum)"}, {"sha": "df61c3f615440ffb4ad018b468a0712ae919df5c", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -220,7 +220,7 @@ package body Lib.Writ is\n          Item := First (Context_Items (Cunit));\n          while Present (Item) loop\n \n-            --  Ada0Y (AI-50217): limited with_clauses do not create\n+            --  Ada 2005 (AI-50217): limited with_clauses do not create\n             --  dependencies\n \n             if Nkind (Item) = N_With_Clause\n@@ -673,7 +673,7 @@ package body Lib.Writ is\n                --  a body or if a body is present in Ada 83 mode.\n \n                if Body_Required (Cunit)\n-                 or else (Ada_83\n+                 or else (Ada_Version = Ada_83\n                            and then Full_Source_Name (Body_Fname) /= No_File)\n                then\n                   Write_Info_Name (Body_Fname);"}, {"sha": "eb8d72554f17e9c9f73779895624439fe60b8c68", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 60, "deletions": 3, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -198,6 +198,63 @@ package body Lib.Xref is\n       Def  : Source_Ptr;\n       Ent  : Entity_Id;\n \n+      function Is_On_LHS (Node : Node_Id) return Boolean;\n+      --  Used to check if a node is on the left hand side of an\n+      --  assignment. The following cases are handled:\n+      --\n+      --   Variable  Node is a direct descendant of an assignment\n+      --             statement.\n+      --\n+      --   Prefix    Of an indexed or selected component that is\n+      --             present in a subtree rooted by an assignment\n+      --             statement. There is no restriction of nesting\n+      --             of components, thus cases such as A.B(C).D are\n+      --             handled properly.\n+\n+      ---------------\n+      -- Is_On_LHS --\n+      ---------------\n+\n+      --  Couldn't we use Is_Lvalue or whatever it is called ???\n+\n+      function Is_On_LHS (Node : Node_Id) return Boolean is\n+         N : Node_Id := Node;\n+\n+      begin\n+         --  Only identifiers are considered, is this necessary???\n+\n+         if Nkind (N) /= N_Identifier then\n+            return False;\n+         end if;\n+\n+         --  Reach the assignment statement subtree root. In the\n+         --  case of a variable being a direct descendant of an\n+         --  assignment statement, the loop is skiped.\n+\n+         while Nkind (Parent (N)) /= N_Assignment_Statement loop\n+\n+            --  Check whether the parent is a component and the\n+            --  current node is its prefix.\n+\n+            if (Nkind (Parent (N)) = N_Selected_Component\n+                  or else\n+                Nkind (Parent (N)) = N_Indexed_Component)\n+              and then Prefix (Parent (N)) = N\n+            then\n+               N := Parent (N);\n+            else\n+               return False;\n+            end if;\n+         end loop;\n+\n+         --  Parent (N) is an assignment statement, check whether\n+         --  N is its name.\n+\n+         return Name (Parent (N)) = N;\n+      end Is_On_LHS;\n+\n+   --  Start of processing for Generate_Reference\n+\n    begin\n       pragma Assert (Nkind (E) in N_Entity);\n \n@@ -243,11 +300,11 @@ package body Lib.Xref is\n          --  For a variable that appears on the left side of an\n          --  assignment statement, we set the Referenced_As_LHS\n          --  flag since this is indeed a left hand side.\n+         --  We also set the Referenced_As_LHS flag of a prefix\n+         --  of selected or indexed component.\n \n          if Ekind (E) = E_Variable\n-           and then Nkind (Parent (N)) = N_Assignment_Statement\n-           and then Name (Parent (N)) = N\n-           and then No (Renamed_Object (E))\n+           and then Is_On_LHS (N)\n          then\n             Set_Referenced_As_LHS (E);\n "}, {"sha": "5204206d481ef5aef9ba52f08c24560f166e000e", "filename": "gcc/ada/makegpr.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fmakegpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fmakegpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakegpr.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -3130,6 +3130,15 @@ package body Makegpr is\n                               Get_Name_String (Source.Object_Name),\n                               True);\n \n+                           --  Add the switches specified in package Linker of\n+                           --  the main project.\n+\n+                           Add_Switches\n+                             (Data      => Data,\n+                              Proc      => Linker,\n+                              Language  => Source.Language,\n+                              File_Name => Main_Id);\n+\n                            --  Add the switches specified in attribute\n                            --  Linker_Options of packages Linker.\n "}, {"sha": "97dee952dc65bed767a34dc1ac507c0117d3492b", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 37, "deletions": 12, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -71,6 +71,9 @@ package body MLib.Prj is\n    S_Dec_Ads : Name_Id := No_Name;\n    --  Name_Id for \"dec.ads\"\n \n+   G_Trasym_Ads : Name_Id := No_Name;\n+   --  Name_Id for \"g-trasym.ads\"\n+\n    No_Argument_List : aliased String_List := (1 .. 0 => null);\n    No_Argument      : constant String_List_Access := No_Argument_List'Access;\n \n@@ -308,6 +311,10 @@ package body MLib.Prj is\n       Libdecgnat_Needed : Boolean := False;\n       --  On OpenVMS, set to True if library needs to be linked with libdecgnat\n \n+      Gtrasymobj_Needed : Boolean := False;\n+      --  On OpenVMS, set to True if library needs to be linked with\n+      --  g-trasym.obj.\n+\n       Data : Project_Data := Projects.Table (For_Project);\n \n       Object_Directory_Path : constant String :=\n@@ -372,7 +379,8 @@ package body MLib.Prj is\n       --  to link with -lgnarl (this is the case when there is a dependency\n       --  on s-osinte.ads). On OpenVMS, set Libdecgnat_Needed if the ALI file\n       --  indicates that there is a need to link with -ldecgnat (this is the\n-      --  case when there is a dependency on dec.ads).\n+      --  case when there is a dependency on dec.ads), and set\n+      --  Gtrasymobj_Needed if there is a dependency on g-trasym.ads.\n \n       procedure Process (The_ALI : File_Name_Type);\n       --  Check if the closure of a library unit which is or should be in the\n@@ -506,7 +514,9 @@ package body MLib.Prj is\n \n       begin\n          if not Libgnarl_Needed or\n-           (Hostparm.OpenVMS and then (not Libdecgnat_Needed))\n+           (Hostparm.OpenVMS and then\n+              ((not Libdecgnat_Needed) or\n+               (not Gtrasymobj_Needed)))\n          then\n             --  Scan the ALI file\n \n@@ -531,10 +541,13 @@ package body MLib.Prj is\n                if ALI.Sdep.Table (Index).Sfile = S_Osinte_Ads then\n                   Libgnarl_Needed := True;\n \n-               elsif Hostparm.OpenVMS and then\n-                     ALI.Sdep.Table (Index).Sfile = S_Dec_Ads\n-               then\n-                  Libdecgnat_Needed := True;\n+               elsif Hostparm.OpenVMS then\n+                  if ALI.Sdep.Table (Index).Sfile = S_Dec_Ads then\n+                     Libdecgnat_Needed := True;\n+\n+                  elsif ALI.Sdep.Table (Index).Sfile = G_Trasym_Ads then\n+                     Gtrasymobj_Needed := True;\n+                  end if;\n                end if;\n             end loop;\n          end if;\n@@ -741,17 +754,23 @@ package body MLib.Prj is\n       --  of \"s-osinte.ads\".\n \n       if S_Osinte_Ads = No_Name then\n-         Name_Len := 12;\n-         Name_Buffer (1 .. Name_Len) := \"s-osinte.ads\";\n+         Name_Len := 0;\n+         Add_Str_To_Name_Buffer (\"s-osinte.ads\");\n          S_Osinte_Ads := Name_Find;\n       end if;\n \n       if S_Dec_Ads = No_Name then\n-         Name_Len := 7;\n-         Name_Buffer (1 .. Name_Len) := \"dec.ads\";\n+         Name_Len := 0;\n+         Add_Str_To_Name_Buffer (\"dec.ads\");\n          S_Dec_Ads := Name_Find;\n       end if;\n \n+      if G_Trasym_Ads = No_Name then\n+         Name_Len := 0;\n+         Add_Str_To_Name_Buffer (\"g-trasym.ads\");\n+         G_Trasym_Ads := Name_Find;\n+      end if;\n+\n       --  We work in the object directory\n \n       Change_Dir (Object_Directory_Path);\n@@ -1193,8 +1212,8 @@ package body MLib.Prj is\n                                       new String'(ALI_File);\n \n                                     --  Find out if for this ALI file,\n-                                    --  libgnarl or libdecgnat (on OpenVMS)\n-                                    --  is necessary.\n+                                    --  libgnarl or libdecgnat or g-trasym.obj\n+                                    --  (on OpenVMS) is necessary.\n \n                                     Check_Libs (ALI_File);\n \n@@ -1255,6 +1274,12 @@ package body MLib.Prj is\n             end if;\n          end if;\n \n+         if Gtrasymobj_Needed then\n+            Opts.Increment_Last;\n+            Opts.Table (Opts.Last) :=\n+              new String'(Lib_Directory & \"/g-trasym.obj\");\n+         end if;\n+\n          if Libdecgnat_Needed then\n             Opts.Increment_Last;\n             Opts.Table (Opts.Last) :="}, {"sha": "8637014a9c97ef4242397e236d462b6128aae55d", "filename": "gcc/ada/mlib-tgt-vms-alpha.adb", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fmlib-tgt-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fmlib-tgt-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-vms-alpha.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -3,7 +3,7 @@\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n --                             M L I B . T G T                              --\n---                              (VMS Version)                               --\n+--                           (Alpha VMS Version)                            --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n@@ -25,7 +25,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is the VMS version of the body\n+--  This is the Alpha VMS version of the body\n \n with Ada.Characters.Handling; use Ada.Characters.Handling;\n ", "previous_filename": "gcc/ada/mlib-tgt-vms.adb"}, {"sha": "7d868d0b3270291960d06e4d5e1f5c7b46f1905a", "filename": "gcc/ada/mlib-tgt-vms-ia64.adb", "status": "added", "additions": 736, "deletions": 0, "changes": 736, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fmlib-tgt-vms-ia64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fmlib-tgt-vms-ia64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-vms-ia64.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -0,0 +1,736 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                             M L I B . T G T                              --\n+--                         (Integrity VMS Version)                          --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--              Copyright (C) 2004, Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is the Integrity VMS version of the body\n+\n+with Ada.Characters.Handling; use Ada.Characters.Handling;\n+\n+with GNAT.Directory_Operations;  use GNAT.Directory_Operations;\n+with GNAT.OS_Lib;                use GNAT.OS_Lib;\n+\n+with MLib.Fil;\n+with MLib.Utl;\n+with Namet;             use Namet;\n+with Opt;               use Opt;\n+with Output;            use Output;\n+with Prj.Com;\n+with System;            use System;\n+with System.Case_Util;  use System.Case_Util;\n+\n+package body MLib.Tgt is\n+\n+   use GNAT;\n+\n+   Empty_Argument_List : aliased Argument_List := (1 .. 0 => null);\n+   Additional_Objects  : Argument_List_Access := Empty_Argument_List'Access;\n+   --  Used to add the generated auto-init object files for auto-initializing\n+   --  stand-alone libraries.\n+\n+   Macro_Name   : constant String := \"mcr gnu:[bin]gcc -c -x assembler\";\n+   --  The name of the command to invoke the macro-assembler\n+\n+   VMS_Options : Argument_List := (1 .. 1 => null);\n+\n+   Gnatsym_Name : constant String := \"gnatsym\";\n+\n+   Gnatsym_Path : String_Access;\n+\n+   Arguments : Argument_List_Access := null;\n+   Last_Argument : Natural := 0;\n+\n+   Success : Boolean := False;\n+\n+   Shared_Libgcc : aliased String := \"-shared-libgcc\";\n+\n+   No_Shared_Libgcc_Switch : aliased Argument_List := (1 .. 0 => null);\n+   Shared_Libgcc_Switch    : aliased Argument_List :=\n+                               (1 => Shared_Libgcc'Access);\n+   Link_With_Shared_Libgcc : Argument_List_Access :=\n+                               No_Shared_Libgcc_Switch'Access;\n+\n+   ------------------------------\n+   -- Target dependent section --\n+   ------------------------------\n+\n+   function Popen (Command, Mode : System.Address) return System.Address;\n+   pragma Import (C, Popen);\n+\n+   function Pclose (File : System.Address) return Integer;\n+   pragma Import (C, Pclose);\n+\n+   ---------------------\n+   -- Archive_Builder --\n+   ---------------------\n+\n+   function Archive_Builder return String is\n+   begin\n+      return \"ar\";\n+   end Archive_Builder;\n+\n+   -----------------------------\n+   -- Archive_Builder_Options --\n+   -----------------------------\n+\n+   function Archive_Builder_Options return String_List_Access is\n+   begin\n+      return new String_List'(1 => new String'(\"cr\"));\n+   end Archive_Builder_Options;\n+\n+   -----------------\n+   -- Archive_Ext --\n+   -----------------\n+\n+   function Archive_Ext return String is\n+   begin\n+      return \"olb\";\n+   end Archive_Ext;\n+\n+   ---------------------\n+   -- Archive_Indexer --\n+   ---------------------\n+\n+   function Archive_Indexer return String is\n+   begin\n+      return \"ranlib\";\n+   end Archive_Indexer;\n+\n+   ---------------------------\n+   -- Build_Dynamic_Library --\n+   ---------------------------\n+\n+   procedure Build_Dynamic_Library\n+     (Ofiles       : Argument_List;\n+      Foreign      : Argument_List;\n+      Afiles       : Argument_List;\n+      Options      : Argument_List;\n+      Interfaces   : Argument_List;\n+      Lib_Filename : String;\n+      Lib_Dir      : String;\n+      Symbol_Data  : Symbol_Record;\n+      Driver_Name  : Name_Id := No_Name;\n+      Lib_Address  : String  := \"\";\n+      Lib_Version  : String  := \"\";\n+      Relocatable  : Boolean := False;\n+      Auto_Init    : Boolean := False)\n+   is\n+      pragma Unreferenced (Foreign);\n+      pragma Unreferenced (Afiles);\n+      pragma Unreferenced (Lib_Address);\n+      pragma Unreferenced (Relocatable);\n+\n+      Lib_File : constant String :=\n+                   Lib_Dir & Directory_Separator & \"lib\" &\n+                     Fil.Ext_To (Lib_Filename, DLL_Ext);\n+\n+      Opts      : Argument_List := Options;\n+      Last_Opt  : Natural       := Opts'Last;\n+      Opts2     : Argument_List (Options'Range);\n+      Last_Opt2 : Natural       := Opts2'First - 1;\n+\n+      Inter : constant Argument_List := Interfaces;\n+\n+      function Is_Interface (Obj_File : String) return Boolean;\n+      --  For a Stand-Alone Library, returns True if Obj_File is the object\n+      --  file name of an interface of the SAL.\n+      --  For other libraries, always return True.\n+\n+      function Option_File_Name return String;\n+      --  Returns Symbol_File, if not empty. Otherwise, returns \"symvec.opt\"\n+\n+      function Version_String return String;\n+      --  Returns Lib_Version if not empty, otherwise returns \"1\".\n+      --  Fails gnatmake if Lib_Version is not the image of a positive number.\n+\n+      ------------------\n+      -- Is_Interface --\n+      ------------------\n+\n+      function Is_Interface (Obj_File : String) return Boolean is\n+         ALI : constant String :=\n+                 Fil.Ext_To\n+                  (Filename => To_Lower (Base_Name (Obj_File)),\n+                   New_Ext  => \"ali\");\n+\n+      begin\n+         if Inter'Length = 0 then\n+            return True;\n+\n+         elsif ALI'Length > 2 and then\n+               ALI (ALI'First .. ALI'First + 1) = \"b$\"\n+         then\n+            return True;\n+\n+         else\n+            for J in Inter'Range loop\n+               if Inter (J).all = ALI then\n+                  return True;\n+               end if;\n+            end loop;\n+\n+            return False;\n+         end if;\n+      end Is_Interface;\n+\n+      ----------------------\n+      -- Option_File_Name --\n+      ----------------------\n+\n+      function Option_File_Name return String is\n+      begin\n+         if Symbol_Data.Symbol_File = No_Name then\n+            return \"symvec.opt\";\n+         else\n+            Get_Name_String (Symbol_Data.Symbol_File);\n+            To_Lower (Name_Buffer (1 .. Name_Len));\n+            return Name_Buffer (1 .. Name_Len);\n+         end if;\n+      end Option_File_Name;\n+\n+      --------------------\n+      -- Version_String --\n+      --------------------\n+\n+      function Version_String return String is\n+         Version : Integer := 0;\n+      begin\n+         if Lib_Version = \"\" then\n+            return \"1\";\n+\n+         else\n+            begin\n+               Version := Integer'Value (Lib_Version);\n+\n+               if Version <= 0 then\n+                  raise Constraint_Error;\n+               end if;\n+\n+               return Lib_Version;\n+\n+            exception\n+               when Constraint_Error =>\n+                  Fail (\"illegal version \"\"\", Lib_Version,\n+                        \"\"\" (on VMS version must be a positive number)\");\n+                  return \"\";\n+            end;\n+         end if;\n+      end Version_String;\n+\n+      Opt_File_Name  : constant String := Option_File_Name;\n+      Version        : constant String := Version_String;\n+      For_Linker_Opt : String_Access;\n+\n+   --  Start of processing for Build_Dynamic_Library\n+\n+   begin\n+      --  Invoke gcc with -shared-libgcc, but only for GCC 3 or higher\n+\n+      if GCC_Version >= 3 then\n+         Link_With_Shared_Libgcc := Shared_Libgcc_Switch'Access;\n+      else\n+         Link_With_Shared_Libgcc := No_Shared_Libgcc_Switch'Access;\n+      end if;\n+\n+      --  Option file must end with \".opt\"\n+\n+      if Opt_File_Name'Length > 4\n+        and then\n+          Opt_File_Name (Opt_File_Name'Last - 3 .. Opt_File_Name'Last) = \".opt\"\n+      then\n+         For_Linker_Opt := new String'(\"--for-linker=\" & Opt_File_Name);\n+      else\n+         Fail (\"Options File \"\"\", Opt_File_Name, \"\"\" must end with .opt\");\n+      end if;\n+\n+      VMS_Options (VMS_Options'First) := For_Linker_Opt;\n+\n+      for J in Inter'Range loop\n+         To_Lower (Inter (J).all);\n+      end loop;\n+\n+      --  \"gnatsym\" is necessary for building the option file\n+\n+      if Gnatsym_Path = null then\n+         Gnatsym_Path := OS_Lib.Locate_Exec_On_Path (Gnatsym_Name);\n+\n+         if Gnatsym_Path = null then\n+            Fail (Gnatsym_Name, \" not found in path\");\n+         end if;\n+      end if;\n+\n+      --  For auto-initialization of a stand-alone library, we create\n+      --  a macro-assembly file and we invoke the macro-assembler.\n+\n+      if Auto_Init then\n+         declare\n+            Macro_File_Name : constant String := Lib_Filename & \"$init.asm\";\n+            Macro_File      : File_Descriptor;\n+            Init_Proc       : String := Lib_Filename & \"INIT\";\n+            Popen_Result    : System.Address;\n+            Pclose_Result   : Integer;\n+            Len             : Natural;\n+            OK              : Boolean := True;\n+\n+            Command  : constant String :=\n+                         Macro_Name & \" \" & Macro_File_Name & ASCII.NUL;\n+            --  The command to invoke the assembler on the generated auto-init\n+            --  assembly file.\n+\n+            Mode : constant String := \"r\" & ASCII.NUL;\n+            --  The mode for the invocation of Popen\n+\n+         begin\n+            To_Upper (Init_Proc);\n+\n+            if Verbose_Mode then\n+               Write_Str (\"Creating auto-init assembly file \"\"\");\n+               Write_Str (Macro_File_Name);\n+               Write_Line (\"\"\"\");\n+            end if;\n+\n+            --  Create and write the auto-init assembly file\n+\n+            declare\n+               First_Line : constant String :=\n+                 ASCII.HT &\n+                 \".type \" & Init_Proc & \"#, @function\" &\n+                 ASCII.LF;\n+               Second_Line : constant String :=\n+                 ASCII.HT &\n+                 \".global \" & Init_Proc & \"#\" &\n+                 ASCII.LF;\n+               Third_Line : constant String :=\n+                 ASCII.HT &\n+                 \".global LIB$INITIALIZE#\" &\n+                 ASCII.LF;\n+               Fourth_Line : constant String :=\n+                 ASCII.HT &\n+                 \".section LIB$INITIALIZE#,\"\"a\"\",@progbits\" &\n+                 ASCII.LF;\n+               Fifth_Line : constant String :=\n+                 ASCII.HT &\n+                 \"data4 @fptr(\" & Init_Proc & \"#)\" &\n+                  ASCII.LF;\n+\n+            begin\n+               Macro_File := Create_File (Macro_File_Name, Text);\n+               OK := Macro_File /= Invalid_FD;\n+\n+               if OK then\n+                  Len := Write\n+                    (Macro_File, First_Line (First_Line'First)'Address,\n+                     First_Line'Length);\n+                  OK := Len = First_Line'Length;\n+               end if;\n+\n+               if OK then\n+                  Len := Write\n+                    (Macro_File, Second_Line (Second_Line'First)'Address,\n+                     Second_Line'Length);\n+                  OK := Len = Second_Line'Length;\n+               end if;\n+\n+               if OK then\n+                  Len := Write\n+                    (Macro_File, Third_Line (Third_Line'First)'Address,\n+                     Third_Line'Length);\n+                  OK := Len = Third_Line'Length;\n+               end if;\n+\n+               if OK then\n+                  Len := Write\n+                    (Macro_File, Fourth_Line (Fourth_Line'First)'Address,\n+                     Fourth_Line'Length);\n+                  OK := Len = Fourth_Line'Length;\n+               end if;\n+\n+               if OK then\n+                  Len := Write\n+                    (Macro_File, Fifth_Line (Fifth_Line'First)'Address,\n+                     Fifth_Line'Length);\n+                  OK := Len = Fifth_Line'Length;\n+               end if;\n+\n+               if OK then\n+                  Close (Macro_File, OK);\n+               end if;\n+\n+               if not OK then\n+                  Fail (\"creation of auto-init assembly file \"\"\",\n+                        Macro_File_Name, \"\"\" failed\");\n+               end if;\n+            end;\n+\n+            --  Invoke the macro-assembler\n+\n+            if Verbose_Mode then\n+               Write_Str (\"Assembling auto-init assembly file \"\"\");\n+               Write_Str (Macro_File_Name);\n+               Write_Line (\"\"\"\");\n+            end if;\n+\n+            Popen_Result := Popen (Command (Command'First)'Address,\n+                                   Mode (Mode'First)'Address);\n+\n+            if Popen_Result = Null_Address then\n+               Fail (\"assembly of auto-init assembly file \"\"\",\n+                     Macro_File_Name, \"\"\" failed\");\n+            end if;\n+\n+            --  Wait for the end of execution of the macro-assembler\n+\n+            Pclose_Result := Pclose (Popen_Result);\n+\n+            if Pclose_Result < 0 then\n+               Fail (\"assembly of auto init assembly file \"\"\",\n+                     Macro_File_Name, \"\"\" failed\");\n+            end if;\n+\n+            --  Add the generated object file to the list of objects to be\n+            --  included in the library.\n+\n+            Additional_Objects :=\n+              new Argument_List'\n+                (1 => new String'(Lib_Filename & \"$init.obj\"));\n+         end;\n+      end if;\n+\n+      --  Allocate the argument list and put the symbol file name, the\n+      --  reference (if any) and the policy (if not autonomous).\n+\n+      Arguments := new Argument_List (1 .. Ofiles'Length + 8);\n+\n+      Last_Argument := 0;\n+\n+      --  Verbosity\n+\n+      if Verbose_Mode then\n+         Last_Argument := Last_Argument + 1;\n+         Arguments (Last_Argument) := new String'(\"-v\");\n+      end if;\n+\n+      --  Version number (major ID)\n+\n+      if Lib_Version /= \"\" then\n+         Last_Argument := Last_Argument + 1;\n+         Arguments (Last_Argument) := new String'(\"-V\");\n+         Last_Argument := Last_Argument + 1;\n+         Arguments (Last_Argument) := new String'(Version);\n+      end if;\n+\n+      --  Symbol file\n+\n+      Last_Argument := Last_Argument + 1;\n+      Arguments (Last_Argument) := new String'(\"-s\");\n+      Last_Argument := Last_Argument + 1;\n+      Arguments (Last_Argument) := new String'(Opt_File_Name);\n+\n+      --  Reference Symbol File\n+\n+      if Symbol_Data.Reference /= No_Name then\n+         Last_Argument := Last_Argument + 1;\n+         Arguments (Last_Argument) := new String'(\"-r\");\n+         Last_Argument := Last_Argument + 1;\n+         Arguments (Last_Argument) :=\n+           new String'(Get_Name_String (Symbol_Data.Reference));\n+      end if;\n+\n+      --  Policy\n+\n+      case Symbol_Data.Symbol_Policy is\n+         when Autonomous =>\n+            null;\n+\n+         when Compliant =>\n+            Last_Argument := Last_Argument + 1;\n+            Arguments (Last_Argument) := new String'(\"-c\");\n+\n+         when Controlled =>\n+            Last_Argument := Last_Argument + 1;\n+            Arguments (Last_Argument) := new String'(\"-C\");\n+      end case;\n+\n+      --  Add each relevant object file\n+\n+      for Index in Ofiles'Range loop\n+         if Is_Interface (Ofiles (Index).all) then\n+            Last_Argument := Last_Argument + 1;\n+            Arguments (Last_Argument) := new String'(Ofiles (Index).all);\n+         end if;\n+      end loop;\n+\n+      --  Spawn gnatsym\n+\n+      Spawn (Program_Name => Gnatsym_Path.all,\n+             Args         => Arguments (1 .. Last_Argument),\n+             Success      => Success);\n+\n+      if not Success then\n+         Fail (\"unable to create symbol file for library \"\"\",\n+               Lib_Filename, \"\"\"\");\n+      end if;\n+\n+      Free (Arguments);\n+\n+      --  Move all the -l switches from Opts to Opts2\n+\n+      declare\n+         Index : Natural := Opts'First;\n+         Opt   : String_Access;\n+\n+      begin\n+         while Index <= Last_Opt loop\n+            Opt := Opts (Index);\n+\n+            if Opt'Length > 2 and then\n+              Opt (Opt'First .. Opt'First + 1) = \"-l\"\n+            then\n+               if Index < Last_Opt then\n+                  Opts (Index .. Last_Opt - 1) :=\n+                    Opts (Index + 1 .. Last_Opt);\n+               end if;\n+\n+               Last_Opt := Last_Opt - 1;\n+\n+               Last_Opt2 := Last_Opt2 + 1;\n+               Opts2 (Last_Opt2) := Opt;\n+\n+            else\n+               Index := Index + 1;\n+            end if;\n+         end loop;\n+      end;\n+\n+      --  Invoke gcc to build the library\n+\n+      Utl.Gcc\n+        (Output_File => Lib_File,\n+         Objects     => Ofiles & Additional_Objects.all,\n+         Options     => VMS_Options,\n+         Options_2   => Link_With_Shared_Libgcc.all &\n+                        Opts (Opts'First .. Last_Opt) &\n+                        Opts2 (Opts2'First .. Last_Opt2),\n+         Driver_Name => Driver_Name);\n+\n+      --  The auto-init object file need to be deleted, so that it will not\n+      --  be included in the library as a regular object file, otherwise\n+      --  it will be included twice when the library will be built next\n+      --  time, which may lead to errors.\n+\n+      if Auto_Init then\n+         declare\n+            Auto_Init_Object_File_Name : constant String :=\n+                                           Lib_Filename & \"$init.obj\";\n+            Disregard : Boolean;\n+\n+         begin\n+            if Verbose_Mode then\n+               Write_Str (\"deleting auto-init object file \"\"\");\n+               Write_Str (Auto_Init_Object_File_Name);\n+               Write_Line (\"\"\"\");\n+            end if;\n+\n+            Delete_File (Auto_Init_Object_File_Name, Success => Disregard);\n+         end;\n+      end if;\n+   end Build_Dynamic_Library;\n+\n+   -------------------------\n+   -- Default_DLL_Address --\n+   -------------------------\n+\n+   function Default_DLL_Address return String is\n+   begin\n+      return \"\";\n+   end Default_DLL_Address;\n+\n+   -------------\n+   -- DLL_Ext --\n+   -------------\n+\n+   function DLL_Ext return String is\n+   begin\n+      return \"exe\";\n+   end DLL_Ext;\n+\n+   --------------------\n+   -- Dynamic_Option --\n+   --------------------\n+\n+   function Dynamic_Option return String is\n+   begin\n+      return \"-shared\";\n+   end Dynamic_Option;\n+\n+   -------------------\n+   -- Is_Object_Ext --\n+   -------------------\n+\n+   function Is_Object_Ext (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".obj\";\n+   end Is_Object_Ext;\n+\n+   --------------\n+   -- Is_C_Ext --\n+   --------------\n+\n+   function Is_C_Ext (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".c\";\n+   end Is_C_Ext;\n+\n+   --------------------\n+   -- Is_Archive_Ext --\n+   --------------------\n+\n+   function Is_Archive_Ext (Ext : String) return Boolean is\n+   begin\n+      return Ext = \".olb\" or else Ext = \".exe\";\n+   end Is_Archive_Ext;\n+\n+   -------------\n+   -- Libgnat --\n+   -------------\n+\n+   function Libgnat return String is\n+      Libgnat_A : constant String := \"libgnat.a\";\n+      Libgnat_Olb : constant String := \"libgnat.olb\";\n+\n+   begin\n+      Name_Len := Libgnat_A'Length;\n+      Name_Buffer (1 .. Name_Len) := Libgnat_A;\n+\n+      if Osint.Find_File (Name_Enter, Osint.Library) /= No_File then\n+         return Libgnat_A;\n+\n+      else\n+         return Libgnat_Olb;\n+      end if;\n+   end Libgnat;\n+\n+   ------------------------\n+   -- Library_Exists_For --\n+   ------------------------\n+\n+   function Library_Exists_For (Project : Project_Id) return Boolean is\n+   begin\n+      if not Projects.Table (Project).Library then\n+         Fail (\"INTERNAL ERROR: Library_Exists_For called \" &\n+               \"for non library project\");\n+         return False;\n+\n+      else\n+         declare\n+            Lib_Dir : constant String :=\n+              Get_Name_String (Projects.Table (Project).Library_Dir);\n+            Lib_Name : constant String :=\n+              Get_Name_String (Projects.Table (Project).Library_Name);\n+\n+         begin\n+            if Projects.Table (Project).Library_Kind = Static then\n+               return Is_Regular_File\n+                 (Lib_Dir & Directory_Separator & \"lib\" &\n+                  Fil.Ext_To (Lib_Name, Archive_Ext));\n+\n+            else\n+               return Is_Regular_File\n+                 (Lib_Dir & Directory_Separator & \"lib\" &\n+                  Fil.Ext_To (Lib_Name, DLL_Ext));\n+            end if;\n+         end;\n+      end if;\n+   end Library_Exists_For;\n+\n+   ---------------------------\n+   -- Library_File_Name_For --\n+   ---------------------------\n+\n+   function Library_File_Name_For (Project : Project_Id) return Name_Id is\n+   begin\n+      if not Projects.Table (Project).Library then\n+         Prj.Com.Fail (\"INTERNAL ERROR: Library_File_Name_For called \" &\n+                       \"for non library project\");\n+         return No_Name;\n+\n+      else\n+         declare\n+            Lib_Name : constant String :=\n+              Get_Name_String (Projects.Table (Project).Library_Name);\n+\n+         begin\n+            Name_Len := 3;\n+            Name_Buffer (1 .. Name_Len) := \"lib\";\n+\n+            if Projects.Table (Project).Library_Kind = Static then\n+               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, Archive_Ext));\n+\n+            else\n+               Add_Str_To_Name_Buffer (Fil.Ext_To (Lib_Name, DLL_Ext));\n+            end if;\n+\n+            return Name_Find;\n+         end;\n+      end if;\n+   end Library_File_Name_For;\n+\n+   ----------------\n+   -- Object_Ext --\n+   ----------------\n+\n+   function Object_Ext return String is\n+   begin\n+      return \"obj\";\n+   end Object_Ext;\n+\n+   ----------------\n+   -- PIC_Option --\n+   ----------------\n+\n+   function PIC_Option return String is\n+   begin\n+      return \"\";\n+   end PIC_Option;\n+\n+   -----------------------------------------------\n+   -- Standalone_Library_Auto_Init_Is_Supported --\n+   -----------------------------------------------\n+\n+   function Standalone_Library_Auto_Init_Is_Supported return Boolean is\n+   begin\n+      return True;\n+   end Standalone_Library_Auto_Init_Is_Supported;\n+\n+   ---------------------------\n+   -- Support_For_Libraries --\n+   ---------------------------\n+\n+   function Support_For_Libraries return Library_Support is\n+   begin\n+      return Full;\n+   end Support_For_Libraries;\n+\n+end MLib.Tgt;"}, {"sha": "69798078f92a0201a1f9526207fab35ee6010824", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -49,7 +49,7 @@ package body Opt is\n \n    procedure Register_Opt_Config_Switches is\n    begin\n-      Ada_83_Config                         := Ada_83;\n+      Ada_Version_Config                    := Ada_Version;\n       Dynamic_Elaboration_Checks_Config     := Dynamic_Elaboration_Checks;\n       Exception_Locations_Suppressed_Config := Exception_Locations_Suppressed;\n       Extensions_Allowed_Config             := Extensions_Allowed;\n@@ -65,8 +65,7 @@ package body Opt is\n \n    procedure Restore_Opt_Config_Switches (Save : Config_Switches_Type) is\n    begin\n-      Ada_83                         := Save.Ada_83;\n-      Ada_95                         := not Ada_83;\n+      Ada_Version                    := Save.Ada_Version;\n       Dynamic_Elaboration_Checks     := Save.Dynamic_Elaboration_Checks;\n       Exception_Locations_Suppressed := Save.Exception_Locations_Suppressed;\n       Extensions_Allowed             := Save.Extensions_Allowed;\n@@ -82,7 +81,7 @@ package body Opt is\n \n    procedure Save_Opt_Config_Switches (Save : out Config_Switches_Type) is\n    begin\n-      Save.Ada_83                         := Ada_83;\n+      Save.Ada_Version                    := Ada_Version;\n       Save.Dynamic_Elaboration_Checks     := Dynamic_Elaboration_Checks;\n       Save.Exception_Locations_Suppressed := Exception_Locations_Suppressed;\n       Save.Extensions_Allowed             := Extensions_Allowed;\n@@ -99,17 +98,15 @@ package body Opt is\n    procedure Set_Opt_Config_Switches (Internal_Unit : Boolean) is\n    begin\n       if Internal_Unit then\n-         Ada_83                     := False;\n-         Ada_95                     := True;\n+         Ada_Version                := Ada_Version_Default;\n          Dynamic_Elaboration_Checks := False;\n          Extensions_Allowed         := True;\n          External_Name_Exp_Casing   := As_Is;\n          External_Name_Imp_Casing   := Lowercase;\n          Use_VADS_Size              := False;\n \n       else\n-         Ada_83                     := Ada_83_Config;\n-         Ada_95                     := not Ada_83_Config;\n+         Ada_Version                := Ada_Version_Config;\n          Dynamic_Elaboration_Checks := Dynamic_Elaboration_Checks_Config;\n          Extensions_Allowed         := Extensions_Allowed_Config;\n          External_Name_Exp_Casing   := External_Name_Exp_Casing_Config;\n@@ -127,6 +124,7 @@ package body Opt is\n \n    procedure Tree_Read is\n       Tree_Version_String_Len : Nat;\n+      Ada_Version_Config_Val  : Nat;\n \n    begin\n       Tree_Read_Int  (Tree_ASIS_Version_Number);\n@@ -139,12 +137,14 @@ package body Opt is\n       Tree_Read_Bool (Verbose_Mode);\n       Tree_Read_Data (Warning_Mode'Address,\n                       Warning_Mode_Type'Object_Size / Storage_Unit);\n-      Tree_Read_Bool (Ada_83_Config);\n+      Tree_Read_Int  (Ada_Version_Config_Val);\n       Tree_Read_Bool (All_Errors_Mode);\n       Tree_Read_Bool (Assertions_Enabled);\n       Tree_Read_Bool (Enable_Overflow_Checks);\n       Tree_Read_Bool (Full_List);\n \n+      Ada_Version_Config := Ada_Version_Type'Val (Ada_Version_Config_Val);\n+\n       --  Read version string: we have to check the length first\n \n       Tree_Read_Int (Tree_Version_String_Len);\n@@ -198,7 +198,7 @@ package body Opt is\n       Tree_Write_Bool (Verbose_Mode);\n       Tree_Write_Data (Warning_Mode'Address,\n                        Warning_Mode_Type'Object_Size / Storage_Unit);\n-      Tree_Write_Bool (Ada_83_Config);\n+      Tree_Write_Int  (Ada_Version_Type'Pos (Ada_Version_Config));\n       Tree_Write_Bool (All_Errors_Mode);\n       Tree_Write_Bool (Assertions_Enabled);\n       Tree_Write_Bool (Enable_Overflow_Checks);"}, {"sha": "0bd4336e53bf724b3f7b070f76de39e3902f3a8d", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -60,15 +60,17 @@ package Opt is\n    --  GNATBIND, GNATLINK\n    --  Set True if binder file to be generated in Ada rather than C\n \n-   Ada_95 : Boolean := True;\n+   type Ada_Version_Type is (Ada_83, Ada_95, Ada_05);\n+   --  Versions of Ada for Ada_Version below. Note that these are ordered,\n+   --  so that tests like Ada_Version >= Ada_95 are legitimate and useful.\n+\n+   Ada_Version_Default : Ada_Version_Type := Ada_95;\n    --  GNAT\n-   --  Set True if operating in Ada 95 mode\n-   --  Set False if operating in Ada 83 mode\n+   --  Default Ada version if no switch given\n \n-   Ada_83 : Boolean := False;\n+   Ada_Version : Ada_Version_Type := Ada_Version_Default;\n    --  GNAT\n-   --  Set True if operating in Ada 83 mode\n-   --  Set False if operating in Ada 95 mode\n+   --  Current Ada version for compiler\n \n    Ada_Final_Suffix : constant String := \"final\";\n    Ada_Final_Name : String_Ptr := new String'(\"ada\" & Ada_Final_Suffix);\n@@ -369,7 +371,7 @@ package Opt is\n    Extensions_Allowed : Boolean := False;\n    --  GNAT\n    --  Set to True by switch -gnatX if GNAT specific language extensions\n-   --  are allowed. For example, \"with type\" is a GNAT extension.\n+   --  are allowed. For example, \"limited with\" is a GNAT extension.\n \n    type External_Casing_Type is (\n      As_Is,       -- External names cased as they appear in the Ada source\n@@ -488,7 +490,7 @@ package Opt is\n    --    'p'  PC (US, IBM page 437)\n    --    '8'  PC (European, IBM page 850)\n    --    'f'  Full upper set (all distinct)\n-   --    'n'  No upper characters (Ada/83 rules)\n+   --    'n'  No upper characters (Ada 83 rules)\n    --    'w'  Latin-1 plus wide characters allowed in identifiers\n    --\n    --  The setting affects the set of letters allowed in identifiers and the\n@@ -1090,15 +1092,15 @@ package Opt is\n    --  command line switches, or by the use of appropriate configuration\n    --  pragmas in the gnat.adc file.\n \n-   Ada_83_Config : Boolean;\n+   Ada_Version_Config : Ada_Version_Type;\n    --  GNAT\n-   --  This is the value of the configuration switch for Ada 83 mode, as set\n-   --  by the command line switch -gnat83, and possibly modified by the use\n-   --  of configuration pragmas Ada_95 and Ada_83 in the gnat.adc file. This\n-   --  switch is used to set the initial value for Ada_83 mode at the start\n+   --  This is the value of the configuration switch for the Ada 83 mode, as\n+   --  set by the command line switches -gnat83/95/05, and possibly modified\n+   --  by the use of configuration pragmas Ada_83/Ada95/Ada05. This switch\n+   --  is used to set the initial value for Ada_Version mode at the start\n    --  of analysis of a unit. Note however, that the setting of this flag\n    --  is ignored for internal and predefined units (which are always compiled\n-   --  in Ada 95 mode).\n+   --  in the most up to date version of Ada).\n \n    Dynamic_Elaboration_Checks_Config : Boolean := False;\n    --  GNAT\n@@ -1230,7 +1232,7 @@ package Opt is\n private\n \n    type Config_Switches_Type is record\n-      Ada_83                         : Boolean;\n+      Ada_Version                    : Ada_Version_Type;\n       Dynamic_Elaboration_Checks     : Boolean;\n       Exception_Locations_Suppressed : Boolean;\n       Extensions_Allowed             : Boolean;"}, {"sha": "50fa7e50cb48396e741d42aa738742ffa21f62b9", "filename": "gcc/ada/par-ch10.adb", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch10.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -514,7 +514,7 @@ package body Ch10 is\n             Unit_Node := Specification (Unit_Node);\n \n          elsif Nkind (Unit_Node) = N_Subprogram_Renaming_Declaration then\n-            if Ada_83 then\n+            if Ada_Version = Ada_83 then\n                Error_Msg_N\n                  (\"(Ada 83) library unit renaming not allowed\", Unit_Node);\n             end if;\n@@ -608,7 +608,7 @@ package body Ch10 is\n \n       --  Ada 83 error checks\n \n-      if Ada_83 then\n+      if Ada_Version = Ada_83 then\n \n          --  Check we did not with any child units\n \n@@ -763,7 +763,7 @@ package body Ch10 is\n \n    --  WITH_CLAUSE ::=\n    --  [LIMITED] [PRIVATE]  with library_unit_NAME {,library_unit_NAME};\n-   --  Note: the two qualifiers are ADA0Y extensions.\n+   --  Note: the two qualifiers are Ada 2005 extensions.\n \n    --  WITH_TYPE_CLAUSE ::=\n    --    with type type_NAME is access; | with type type_NAME is tagged;\n@@ -799,7 +799,7 @@ package body Ch10 is\n \n          --  Processing for WITH clause\n \n-         --  Ada0Y (AI-50217, AI-262): First check for LIMITED WITH,\n+         --  Ada 2005 (AI-50217, AI-262): First check for LIMITED WITH,\n          --  PRIVATE WITH, or both.\n \n          if Token = Tok_Limited then\n@@ -818,11 +818,10 @@ package body Ch10 is\n                Error_Msg_SC (\"unexpected LIMITED ignored\");\n             end if;\n \n-            if not Extensions_Allowed then\n-               Error_Msg_SP (\"`LIMITED WITH` is an Ada0X extension\");\n+            if Ada_Version < Ada_05 then\n+               Error_Msg_SP (\"LIMITED WITH is an Ada 2005 extension\");\n                Error_Msg_SP\n-                 (\"\\unit must be compiled with -gnatX switch\");\n-\n+                 (\"\\unit must be compiled with -gnat05 switch\");\n             end if;\n \n          elsif Token = Tok_Private then\n@@ -838,10 +837,10 @@ package body Ch10 is\n                Restore_Scan_State (Scan_State); -- to PRIVATE\n                return Item_List;\n \n-            elsif not Extensions_Allowed then\n-               Error_Msg_SP (\"`PRIVATE WITH` is an Ada0X extension\");\n+            elsif Ada_Version < Ada_05 then\n+               Error_Msg_SP (\"PRIVATE WITH is an Ada 2005 extension\");\n                Error_Msg_SP\n-                 (\"\\unit must be compiled with -gnatX switch\");\n+                 (\"\\unit must be compiled with -gnat05 switch\");\n             end if;\n \n          else\n@@ -854,10 +853,10 @@ package body Ch10 is\n \n             if Token = Tok_Type then\n \n-               --  WITH TYPE is an extension\n+               --  WITH TYPE is an GNAT specific extension\n \n                if not Extensions_Allowed then\n-                  Error_Msg_SP (\"`WITH TYPE` is a non-standard extension\");\n+                  Error_Msg_SP (\"`WITH TYPE` is a 'G'N'A'T extension\");\n                   Error_Msg_SP (\"\\unit must be compiled with -gnatX switch\");\n                end if;\n "}, {"sha": "5968b72f4fce3c7572d4929517ed4eb4ca33c96d", "filename": "gcc/ada/par-ch11.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch11.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -104,7 +104,7 @@ package body Ch11 is\n          Scan; -- past identifier\n \n          if Token = Tok_Colon then\n-            if Ada_83 then\n+            if Ada_Version = Ada_83 then\n                Error_Msg_SP (\"(Ada 83) choice parameter not allowed!\");\n             end if;\n "}, {"sha": "440f6468637b98c557072b802df2246dd8b0c7ea", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 50, "deletions": 50, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -388,7 +388,7 @@ package body Ch3 is\n          case Token is\n \n             when Tok_Access |\n-                 Tok_Not    => --  Ada 0Y (AI-231)\n+                 Tok_Not    => --  Ada 2005 (AI-231)\n                Typedef_Node := P_Access_Type_Definition;\n                TF_Semicolon;\n                exit;\n@@ -564,7 +564,7 @@ package body Ch3 is\n                --  LIMITED RECORD or LIMITED NULL RECORD\n \n                if Token = Tok_Record or else Token = Tok_Null then\n-                  if Ada_83 then\n+                  if Ada_Version = Ada_83 then\n                      Error_Msg_SP\n                        (\"(Ada 83) limited record declaration not allowed!\");\n                   end if;\n@@ -741,7 +741,7 @@ package body Ch3 is\n          Scan; -- past NEW\n       end if;\n \n-      Not_Null_Present := P_Null_Exclusion; --  Ada 0Y (AI-231)\n+      Not_Null_Present := P_Null_Exclusion; --  Ada 2005 (AI-231)\n       Set_Null_Exclusion_Present (Decl_Node, Not_Null_Present);\n \n       Set_Subtype_Indication\n@@ -765,18 +765,18 @@ package body Ch3 is\n          return False;\n \n       else\n-         if not Extensions_Allowed then\n+         if Ada_Version < Ada_05 then\n             Error_Msg_SP\n-              (\"null-excluding access is an Ada 0Y extension\");\n-            Error_Msg_SP (\"\\unit must be compiled with -gnatX switch\");\n+              (\"null-excluding access is an Ada 2005 extension\");\n+            Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n          end if;\n \n          Scan; --  past NOT\n \n          if Token = Tok_Null then\n             Scan; --  past NULL\n          else\n-            Error_Msg_SP (\"(Ada 0Y) missing NULL\");\n+            Error_Msg_SP (\"NULL expected\");\n          end if;\n \n          return True;\n@@ -826,7 +826,7 @@ package body Ch3 is\n          return Subtype_Mark;\n       else\n          if Not_Null_Present then\n-            Error_Msg_SP (\"(Ada 0Y) constrained null-exclusion not allowed\");\n+            Error_Msg_SP (\"constrained null-exclusion not allowed\");\n          end if;\n \n          Indic_Node := New_Node (N_Subtype_Indication, Sloc (Subtype_Mark));\n@@ -1280,7 +1280,7 @@ package body Ch3 is\n \n             if Present (Init_Expr) then\n                if Not_Null_Present then\n-                  Error_Msg_SP (\"(Ada 0Y) null-exclusion not allowed in \"\n+                  Error_Msg_SP (\"null-exclusion not allowed in \"\n                                 & \"numeric expression\");\n                end if;\n \n@@ -1309,7 +1309,7 @@ package body Ch3 is\n                     (Decl_Node, P_Array_Type_Definition);\n \n                else\n-                  Not_Null_Present := P_Null_Exclusion; --  Ada 0Y (AI-231)\n+                  Not_Null_Present := P_Null_Exclusion; --  Ada 2005 (AI-231)\n                   Set_Null_Exclusion_Present (Decl_Node, Not_Null_Present);\n \n                   Set_Object_Definition (Decl_Node,\n@@ -1357,7 +1357,7 @@ package body Ch3 is\n                  (Decl_Node, P_Array_Type_Definition);\n \n             else\n-               Not_Null_Present := P_Null_Exclusion; --  Ada 0Y (AI-231)\n+               Not_Null_Present := P_Null_Exclusion; --  Ada 2005 (AI-231)\n                Set_Null_Exclusion_Present (Decl_Node, Not_Null_Present);\n                Set_Object_Definition (Decl_Node,\n                   P_Subtype_Indication (Not_Null_Present));\n@@ -1369,7 +1369,7 @@ package body Ch3 is\n             Decl_Node := New_Node (N_Object_Declaration, Ident_Sloc);\n             Set_Object_Definition (Decl_Node, P_Array_Type_Definition);\n \n-         --  Ada 0Y (AI-254)\n+         --  Ada 2005 (AI-254)\n \n          elsif Token = Tok_Not then\n \n@@ -1381,14 +1381,14 @@ package body Ch3 is\n             --    ...\n             --  | DEFINING_IDENTIFIER : ACCESS_DEFINITION renames object_NAME;\n \n-            Not_Null_Present := P_Null_Exclusion; --  Ada 0Y (AI-231)\n+            Not_Null_Present := P_Null_Exclusion; --  Ada 2005 (AI-231)\n \n             if Token = Tok_Access then\n-               if not Extensions_Allowed then\n+               if Ada_Version < Ada_05 then\n                   Error_Msg_SP\n                     (\"generalized use of anonymous access types \" &\n-                     \"is an Ada 0Y extension\");\n-                  Error_Msg_SP (\"\\unit must be compiled with -gnatX switch\");\n+                     \"is an Ada 2005 extension\");\n+                  Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n                end if;\n \n                Acc_Node := P_Access_Definition (Not_Null_Present);\n@@ -1411,8 +1411,8 @@ package body Ch3 is\n                --  Object renaming declaration\n \n                if Token_Is_Renames then\n-                  Error_Msg_SP (\"(Ada 0Y) null-exclusion not allowed in \"\n-                                & \"object renamings\");\n+                  Error_Msg_SP\n+                    (\"null-exclusion not allowed in object renamings\");\n                   raise Error_Resync;\n \n                --  Object declaration\n@@ -1437,14 +1437,14 @@ package body Ch3 is\n                end if;\n             end if;\n \n-         --  Ada 0Y (AI-230): Access Definition case\n+         --  Ada 2005 (AI-230): Access Definition case\n \n          elsif Token = Tok_Access then\n-            if not Extensions_Allowed then\n+            if Ada_Version < Ada_05 then\n                Error_Msg_SP\n                  (\"generalized use of anonymous access types \" &\n-                  \"is an Ada 0Y extension\");\n-               Error_Msg_SP (\"\\unit must be compiled with -gnatX switch\");\n+                  \"is an Ada 2005 extension\");\n+               Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n             end if;\n \n             Acc_Node := P_Access_Definition (Null_Exclusion_Present => False);\n@@ -1601,7 +1601,7 @@ package body Ch3 is\n          Scan;\n       end if;\n \n-      Not_Null_Present := P_Null_Exclusion; --  Ada 0Y (AI-231)\n+      Not_Null_Present := P_Null_Exclusion; --  Ada 2005 (AI-231)\n       Set_Null_Exclusion_Present (Typedef_Node, Not_Null_Present);\n       Set_Subtype_Indication (Typedef_Node,\n          P_Subtype_Indication (Not_Null_Present));\n@@ -1915,7 +1915,7 @@ package body Ch3 is\n       Typedef_Node : Node_Id;\n \n    begin\n-      if Ada_83 then\n+      if Ada_Version = Ada_83 then\n          Error_Msg_SC (\"(Ada 83): modular types not allowed\");\n       end if;\n \n@@ -2044,7 +2044,7 @@ package body Ch3 is\n       Check_Simple_Expression_In_Ada_83 (Delta_Node);\n \n       if Token = Tok_Digits then\n-         if Ada_83 then\n+         if Ada_Version = Ada_83 then\n             Error_Msg_SC (\"(Ada 83) decimal fixed type not allowed!\");\n          end if;\n \n@@ -2246,16 +2246,16 @@ package body Ch3 is\n          Scan; -- past ALIASED\n       end if;\n \n-      Not_Null_Present := P_Null_Exclusion; --  Ada 0Y (AI-231/AI-254)\n+      Not_Null_Present := P_Null_Exclusion; --  Ada 2005 (AI-231/AI-254)\n \n-      --  Ada 0Y (AI-230): Access Definition case\n+      --  Ada 2005 (AI-230): Access Definition case\n \n       if Token = Tok_Access then\n-         if not Extensions_Allowed then\n+         if Ada_Version < Ada_05 then\n             Error_Msg_SP\n               (\"generalized use of anonymous access types \" &\n-               \"is an Ada 0Y extension\");\n-            Error_Msg_SP (\"\\unit must be compiled with -gnatX switch\");\n+               \"is an Ada 2005 extension\");\n+            Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n          end if;\n \n          if Aliased_Present then\n@@ -2415,7 +2415,7 @@ package body Ch3 is\n          Scan; -- past the left paren\n \n          if Token = Tok_Box then\n-            if Ada_83 then\n+            if Ada_Version = Ada_83 then\n                Error_Msg_SC (\"(Ada 83) unknown discriminant not allowed!\");\n             end if;\n \n@@ -2496,10 +2496,10 @@ package body Ch3 is\n                Specification_Node :=\n                  New_Node (N_Discriminant_Specification, Ident_Sloc);\n                Set_Defining_Identifier (Specification_Node, Idents (Ident));\n-               Not_Null_Present := P_Null_Exclusion;       --  Ada 0Y (AI-231)\n+               Not_Null_Present := P_Null_Exclusion; -- Ada 2005 (AI-231)\n \n                if Token = Tok_Access then\n-                  if Ada_83 then\n+                  if Ada_Version = Ada_83 then\n                      Error_Msg_SC\n                        (\"(Ada 83) access discriminant not allowed!\");\n                   end if;\n@@ -2512,7 +2512,7 @@ package body Ch3 is\n                   Set_Discriminant_Type\n                     (Specification_Node, P_Subtype_Mark);\n                   No_Constraint;\n-                  Set_Null_Exclusion_Present               --  Ada 0Y (AI-231)\n+                  Set_Null_Exclusion_Present  -- Ada 2005 (AI-231)\n                     (Specification_Node, Not_Null_Present);\n                end if;\n \n@@ -2995,16 +2995,16 @@ package body Ch3 is\n                Scan; -- past ALIASED\n             end if;\n \n-            Not_Null_Present := P_Null_Exclusion; --  Ada 0Y (AI-231/AI-254)\n+            Not_Null_Present := P_Null_Exclusion; -- Ada 2005 (AI-231/AI-254)\n \n-            --  Ada 0Y (AI-230): Access Definition case\n+            --  Ada 2005 (AI-230): Access Definition case\n \n             if Token = Tok_Access then\n-               if not Extensions_Allowed then\n+               if Ada_Version < Ada_05 then\n                   Error_Msg_SP\n-                    (\"Generalized use of anonymous access types \" &\n-                     \"is an Ada 0Y extension\");\n-                  Error_Msg_SP (\"\\unit must be compiled with -gnatX switch\");\n+                    (\"generalized use of anonymous access types \" &\n+                     \"is an Ada 2005 extension\");\n+                  Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n                end if;\n \n                if Aliased_Present then\n@@ -3288,7 +3288,7 @@ package body Ch3 is\n \n    --  PARAMETER_AND_RESULT_PROFILE ::= [FORMAL_PART] RETURN SUBTYPE_MARK\n \n-   --  Ada 0Y (AI-254): If Header_Already_Parsed then the caller has already\n+   --  Ada 2005 (AI-254): If Header_Already_Parsed then the caller has already\n    --  parsed the null_exclusion part and has also removed the ACCESS token;\n    --  otherwise the caller has just checked that the initial token is ACCESS\n \n@@ -3327,7 +3327,7 @@ package body Ch3 is\n \n    begin\n       if not Header_Already_Parsed then\n-         Not_Null_Present := P_Null_Exclusion;         --  Ada 0Y (AI-231)\n+         Not_Null_Present := P_Null_Exclusion;         --  Ada 2005 (AI-231)\n          Scan; -- past ACCESS\n       end if;\n \n@@ -3347,7 +3347,7 @@ package body Ch3 is\n       end if;\n \n       if Token = Tok_Procedure then\n-         if Ada_83 then\n+         if Ada_Version = Ada_83 then\n             Error_Msg_SC (\"(Ada 83) access to procedure not allowed!\");\n          end if;\n \n@@ -3359,7 +3359,7 @@ package body Ch3 is\n          Set_Protected_Present (Type_Def_Node, Prot_Flag);\n \n       elsif Token = Tok_Function then\n-         if Ada_83 then\n+         if Ada_Version = Ada_83 then\n             Error_Msg_SC (\"(Ada 83) access to function not allowed!\");\n          end if;\n \n@@ -3379,7 +3379,7 @@ package body Ch3 is\n          Set_Null_Exclusion_Present (Type_Def_Node, Not_Null_Present);\n \n          if Token = Tok_All or else Token = Tok_Constant then\n-            if Ada_83 then\n+            if Ada_Version = Ada_83 then\n                Error_Msg_SC (\"(Ada 83) access modifier not allowed!\");\n             end if;\n \n@@ -3445,11 +3445,11 @@ package body Ch3 is\n       Def_Node := New_Node (N_Access_Definition, Token_Ptr);\n       Scan; -- past ACCESS\n \n-      --  Ada 0Y (AI-254/AI-231)\n+      --  Ada 2005 (AI-254/AI-231)\n \n-      if Extensions_Allowed then\n+      if Ada_Version >= Ada_05 then\n \n-         --  Ada 0Y (AI-254): Access_To_Subprogram_Definition\n+         --  Ada 2005 (AI-254): Access_To_Subprogram_Definition\n \n          if Token = Tok_Protected\n            or else Token = Tok_Procedure\n@@ -3460,7 +3460,7 @@ package body Ch3 is\n             Set_Null_Exclusion_Present (Subp_Node, Null_Exclusion_Present);\n             Set_Access_To_Subprogram_Definition (Def_Node, Subp_Node);\n \n-         --  Ada 0Y (AI-231)\n+         --  Ada 2005 (AI-231)\n          --  [NULL_EXCLUSION] access [GENERAL_ACCESS_MODIFIER] SUBTYPE_MARK\n \n          else\n@@ -3482,7 +3482,7 @@ package body Ch3 is\n       --  Ada 95\n \n       else\n-         --  Ada 0Y (AI-254): The null-exclusion present is never present\n+         --  Ada 2005 (AI-254): The null-exclusion present is never present\n          --  in Ada 83 and Ada 95\n \n          pragma Assert (Null_Exclusion_Present = False);"}, {"sha": "c35cac7c0ed7acc0a1680daa54adf1c875beeaa3", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -1126,7 +1126,7 @@ package body Ch4 is\n    --  Error recovery: can raise Error_Resync\n \n    --  Note: POSITIONAL_ARRAY_AGGREGATE rule has been extended to give support\n-   --        to Ada0Y limited aggregates (AI-287)\n+   --        to Ada 2005 limited aggregates (AI-287)\n \n    function P_Aggregate_Or_Paren_Expr return Node_Id is\n       Aggregate_Node : Node_Id;\n@@ -1165,14 +1165,14 @@ package body Ch4 is\n             end if;\n          end if;\n \n-         --  Ada0Y (AI-287): The box notation is allowed only with named\n+         --  Ada 2005 (AI-287): The box notation is allowed only with named\n          --  notation because positional notation might be error prone. For\n          --  example, in \"(X, <>, Y, <>)\", there is no type associated with\n          --  the boxes, so you might not be leaving out the components you\n          --  thought you were leaving out.\n \n-         if Extensions_Allowed and then Token = Tok_Box then\n-            Error_Msg_SC (\"(Ada 0Y) box notation only allowed with \"\n+         if Ada_Version >= Ada_05 and then Token = Tok_Box then\n+            Error_Msg_SC (\"(Ada 2005) box notation only allowed with \"\n                           & \"named notation\");\n             Scan; --  past BOX\n             Aggregate_Node := New_Node (N_Aggregate, Lparen_Sloc);\n@@ -1192,7 +1192,7 @@ package body Ch4 is\n                return Error;\n             end if;\n \n-            if Ada_83 then\n+            if Ada_Version = Ada_83 then\n                Error_Msg_SC (\"(Ada 83) extension aggregate not allowed\");\n             end if;\n \n@@ -1389,7 +1389,7 @@ package body Ch4 is\n    --  Error recovery: can raise Error_Resync\n \n    --  Note: RECORD_COMPONENT_ASSOCIATION and ARRAY_COMPONENT_ASSOCIATION\n-   --        rules have been extended to give support to Ada0Y limited\n+   --        rules have been extended to give support to Ada 2005 limited\n    --        aggregates (AI-287)\n \n    function P_Record_Or_Array_Component_Association return Node_Id is\n@@ -1403,13 +1403,13 @@ package body Ch4 is\n \n       if Token = Tok_Box then\n \n-         --  Ada0Y (AI-287): The box notation is used to indicate the default\n-         --  initialization of limited aggregate components\n+         --  Ada 2005(AI-287): The box notation is used to indicate the\n+         --  default initialization of limited aggregate components\n \n-         if not Extensions_Allowed then\n+         if Ada_Version < Ada_05 then\n             Error_Msg_SP\n-              (\"(Ada 0Y) limited aggregates are an Ada0X extension\");\n-            Error_Msg_SP (\"\\unit must be compiled with -gnatX switch\");\n+              (\"limited aggregate is an Ada 2005 extension\");\n+            Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n          end if;\n \n          Set_Box_Present (Assoc_Node);\n@@ -2335,7 +2335,7 @@ package body Ch4 is\n       Alloc_Node := New_Node (N_Allocator, Token_Ptr);\n       T_New;\n \n-      --  Scan Null_Exclusion if present (Ada 0Y (AI-231))\n+      --  Scan Null_Exclusion if present (Ada 2005 (AI-231))\n \n       Null_Exclusion_Present := P_Null_Exclusion;\n       Set_Null_Exclusion_Present (Alloc_Node, Null_Exclusion_Present);"}, {"sha": "8a19316112b3dcb6be7be5e8ed7aa8c11505e9fd", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1979,7 +1979,7 @@ package body Ch5 is\n \n       --  Check for misplacement of later vs basic declarations in Ada 83\n \n-      if Ada_83 then\n+      if Ada_Version = Ada_83 then\n          Decl := First (Decls);\n \n          --  Loop through sequence of basic declarative items\n@@ -2002,7 +2002,7 @@ package body Ch5 is\n                   if Nkind (Decl) not in N_Later_Decl_Item\n                     and then Nkind (Decl) /= N_Pragma\n                   then\n-                     if Ada_83 then\n+                     if Ada_Version = Ada_83 then\n                         Error_Msg_Sloc := Body_Sloc;\n                         Error_Msg_N\n                           (\"(Ada 83) decl cannot appear after body#\", Decl);"}, {"sha": "48af5bada8f2a20c48043ff30e6c2ec1e80534f7", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -735,7 +735,7 @@ package body Ch6 is\n             Error_Msg_SP (\"child unit allowed only at library level\");\n             raise Error_Resync;\n \n-         elsif Ada_83 then\n+         elsif Ada_Version = Ada_83 then\n             Error_Msg_SP (\"(Ada 83) child unit not allowed!\");\n \n          end if;\n@@ -953,13 +953,13 @@ package body Ch6 is\n                Specification_Node :=\n                  New_Node (N_Parameter_Specification, Ident_Sloc);\n                Set_Defining_Identifier (Specification_Node, Idents (Ident));\n-               Not_Null_Present := P_Null_Exclusion;     --  Ada 0Y (AI-231)\n+               Not_Null_Present := P_Null_Exclusion;     --  Ada 2005 (AI-231)\n \n                if Token = Tok_Access then\n                   Set_Null_Exclusion_Present\n                     (Specification_Node, Not_Null_Present);\n \n-                  if Ada_83 then\n+                  if Ada_Version = Ada_83 then\n                      Error_Msg_SC (\"(Ada 83) access parameters not allowed\");\n                   end if;\n \n@@ -974,7 +974,7 @@ package body Ch6 is\n                      end if;\n \n                      P_Mode (Specification_Node);\n-                     Not_Null_Present := P_Null_Exclusion; --  Ada 0Y (AI-231)\n+                     Not_Null_Present := P_Null_Exclusion; -- Ada 2005 (AI-231)\n                   end if;\n \n                   Set_Null_Exclusion_Present"}, {"sha": "105937515d9ed9e571ad56ba0fedaa873ff42329", "filename": "gcc/ada/par-ch8.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch8.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -110,7 +110,7 @@ package body Ch8 is\n       Use_Node := New_Node (N_Use_Type_Clause, Prev_Token_Ptr);\n       Set_Subtype_Marks (Use_Node, New_List);\n \n-      if Ada_83 then\n+      if Ada_Version = Ada_83 then\n          Error_Msg_SC (\"(Ada 83) use type not allowed!\");\n       end if;\n "}, {"sha": "4c6da46763474dec27959bb9bb32fd88bffe363f", "filename": "gcc/ada/par-ch9.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch9.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -770,7 +770,7 @@ package body Ch9 is\n          --  Exception handlers not allowed in Ada 95 node\n \n          if Present (Exception_Handlers (Hand_Seq)) then\n-            if Ada_83 then\n+            if Ada_Version = Ada_83 then\n                Error_Msg_N\n                  (\"(Ada 83) exception handlers in accept not allowed\",\n                   First_Non_Pragma (Exception_Handlers (Hand_Seq)));\n@@ -1258,7 +1258,7 @@ package body Ch9 is\n          --  Else error\n \n          else\n-            if Ada_83 then\n+            if Ada_Version = Ada_83 then\n                Error_Msg_BC (\"OR or ELSE expected\");\n             else\n                Error_Msg_BC (\"OR or ELSE or THEN ABORT expected\");\n@@ -1578,7 +1578,7 @@ package body Ch9 is\n       Abortable_Part_Node := New_Node (N_Abortable_Part, Token_Ptr);\n       T_Abort; -- scan past ABORT\n \n-      if Ada_83 then\n+      if Ada_Version = Ada_83 then\n          Error_Msg_SP (\"(Ada 83) asynchronous select not allowed!\");\n       end if;\n "}, {"sha": "0754319b8ccfc25c44f2f2eb97e19f957221772c", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 25, "deletions": 9, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -241,24 +241,33 @@ begin\n       ------------\n \n       --  This pragma must be processed at parse time, since we want to set\n-      --  the Ada 83 and Ada 95 switches properly at parse time to recognize\n-      --  Ada 83 syntax or Ada 95 syntax as appropriate.\n+      --  the Ada version properly at parse time to recognize the appropriate\n+      --  Ada version syntax.\n \n       when Pragma_Ada_83 =>\n-         Ada_83 := True;\n-         Ada_95 := False;\n+         Ada_Version := Ada_83;\n \n       ------------\n       -- Ada_95 --\n       ------------\n \n       --  This pragma must be processed at parse time, since we want to set\n-      --  the Ada 83 and Ada_95 switches properly at parse time to recognize\n-      --  Ada 83 syntax or Ada 95 syntax as appropriate.\n+      --  the Ada version properly at parse time to recognize the appropriate\n+      --  Ada version syntax.\n \n       when Pragma_Ada_95 =>\n-         Ada_83 := False;\n-         Ada_95 := True;\n+         Ada_Version := Ada_95;\n+\n+      ------------\n+      -- Ada_05 --\n+      ------------\n+\n+      --  This pragma must be processed at parse time, since we want to set\n+      --  the Ada version properly at parse time to recognize the appropriate\n+      --  Ada version syntax.\n+\n+      when Pragma_Ada_05 =>\n+         Ada_Version := Ada_05;\n \n       -----------\n       -- Debug --\n@@ -307,7 +316,14 @@ begin\n          Check_Arg_Count (1);\n          Check_No_Identifier (Arg1);\n          Check_Arg_Is_On_Or_Off (Arg1);\n-         Opt.Extensions_Allowed := (Chars (Expression (Arg1)) = Name_On);\n+\n+         if Chars (Expression (Arg1)) = Name_On then\n+            Extensions_Allowed := True;\n+            Ada_Version := Ada_Version_Type'Last;\n+         else\n+            Extensions_Allowed := False;\n+            Ada_Version := Ada_Version_Type'Min (Ada_Version, Ada_95);\n+         end if;\n \n       ----------------\n       -- List (2.8) --"}, {"sha": "508877cafb63607ea900e0b7d9d0dd79efd6feb2", "filename": "gcc/ada/par-util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-util.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -195,7 +195,7 @@ package body Util is\n    procedure Check_Simple_Expression_In_Ada_83 (E : Node_Id) is\n    begin\n       if Expr_Form = EF_Non_Simple then\n-         if Ada_83 then\n+         if Ada_Version = Ada_83 then\n             Error_Msg_N (\"(Ada 83) this expression must be parenthesized!\", E);\n          end if;\n       end if;"}, {"sha": "23230235e3553795528d58153e0236ee78c6131b", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -576,12 +576,12 @@ function Par (Configuration_Pragmas : Boolean) return List_Id is\n \n       function P_Access_Definition\n         (Null_Exclusion_Present : Boolean) return Node_Id;\n-      --  Ada 0Y (AI-231/AI-254): The caller parses the null-exclusion part\n+      --  Ada 2005 (AI-231/AI-254): The caller parses the null-exclusion part\n       --  and indicates if it was present\n \n       function P_Access_Type_Definition\n         (Header_Already_Parsed : Boolean := False) return Node_Id;\n-      --  Ada 0Y (AI-254): The formal is used to indicate if the caller has\n+      --  Ada 2005 (AI-254): The formal is used to indicate if the caller has\n       --  parsed the null_exclusion part. In this case the caller has also\n       --  removed the ACCESS token\n \n@@ -597,12 +597,12 @@ function Par (Configuration_Pragmas : Boolean) return List_Id is\n       --  declaration of this type for details.\n \n       function P_Null_Exclusion return Boolean;\n-      --  Ada 0Y (AI-231): Parse the null-excluding part. True indicates\n+      --  Ada 2005 (AI-231): Parse the null-excluding part. True indicates\n       --  that the null-excluding part was present.\n \n       function P_Subtype_Indication\n         (Not_Null_Present : Boolean := False) return Node_Id;\n-      --  Ada 0Y (AI-231): The flag Not_Null_Present indicates that the\n+      --  Ada 2005 (AI-231): The flag Not_Null_Present indicates that the\n       --  null-excluding part has been scanned out and it was present.\n \n       function Init_Expr_Opt (P : Boolean := False) return Node_Id;\n@@ -624,7 +624,7 @@ function Par (Configuration_Pragmas : Boolean) return List_Id is\n          Not_Null_Present : Boolean := False) return Node_Id;\n       --  This version of P_Subtype_Indication is called when the caller has\n       --  already scanned out the subtype mark which is passed as a parameter.\n-      --  Ada 0Y (AI-231): The flag Not_Null_Present indicates that the\n+      --  Ada 2005 (AI-231): The flag Not_Null_Present indicates that the\n       --  null-excluding part has been scanned out and it was present.\n \n       function P_Subtype_Mark_Attribute (Type_Node : Node_Id) return Node_Id;"}, {"sha": "f473b6c881678334ccbe79035e8cddf63ec7211a", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -160,6 +160,12 @@ package body Prj.Attr is\n      \"Ladefault_switches#\" &\n      \"Lbswitches#\" &\n \n+   --  package Metrics\n+\n+     \"Pmetrics#\" &\n+     \"Ladefault_switches#\" &\n+     \"Lbswitches#\" &\n+\n    --  package Ide\n \n      \"Pide#\" &"}, {"sha": "c710a2bd0af8c47d4ce85bac970277df5290708a", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -1281,7 +1281,7 @@ package body Prj.Nmsc is\n                else\n                   Data.Symbol_Data.Reference := Lib_Ref_Symbol_File.Value;\n \n-                  Get_Name_String (Lib_Symbol_File.Value);\n+                  Get_Name_String (Lib_Ref_Symbol_File.Value);\n \n                   if Name_Len = 0 then\n                      Error_Msg\n@@ -4717,6 +4717,7 @@ package body Prj.Nmsc is\n                then\n                   Name_Len := Last;\n                   Name_Buffer (1 .. Name_Len) := Name_Str (1 .. Last);\n+                  Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n                   Canonical_Name := Name_Find;\n                   NL := Source_Names.Get (Canonical_Name);\n "}, {"sha": "daf4b4682f2973691915fe23479038f81d6c35f2", "filename": "gcc/ada/s-auxdec-vms_64.ads", "status": "added", "additions": 592, "deletions": 0, "changes": 592, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-auxdec-vms_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-auxdec-vms_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-auxdec-vms_64.ads?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -0,0 +1,592 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                       S Y S T E M . A U X _ D E C                        --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 1996-2004 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS For A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package contains definitions that are designed to be compatible\n+--  with the extra definitions in package System for DEC Ada implementations.\n+\n+--  These definitions can be used directly by withing this package, or merged\n+--  with System using pragma Extend_System (Aux_DEC)\n+\n+--  This is the IPF VMS 64 bit version.\n+\n+with Unchecked_Conversion;\n+\n+package System.Aux_DEC is\n+pragma Elaborate_Body (Aux_DEC);\n+\n+   subtype Short_Address is Address\n+     range -2 ** (32 - 1) .. +2 ** (32 - 1) - 1;\n+   for Short_Address'Object_Size use 32;\n+   --  This subtype allows addresses to be converted from 64 bits to 32 bits\n+   --  with an appropriate range check. Note that since this is a subtype of\n+   --  type System.Address, the same limitations apply to this subtype. Namely\n+   --  there are no visible arithmetic operations, and integer literals are\n+   --  not available.\n+\n+   Short_Memory_Size : constant := 2 ** 32;\n+   --  Defined for convenience of porting.\n+\n+   type Integer_8  is range -2 **  (8 - 1) .. +2 **  (8 - 1) - 1;\n+   for Integer_8'Size  use  8;\n+\n+   type Integer_16 is range -2 ** (16 - 1) .. +2 ** (16 - 1) - 1;\n+   for Integer_16'Size use 16;\n+\n+   type Integer_32 is range -2 ** (32 - 1) .. +2 ** (32 - 1) - 1;\n+   for Integer_32'Size use 32;\n+\n+   type Integer_64 is range -2 ** (64 - 1) .. +2 ** (64 - 1) - 1;\n+   for Integer_64'Size use 64;\n+\n+   type Largest_Integer is range Min_Int .. Max_Int;\n+\n+   type AST_Handler is limited private;\n+\n+   No_AST_Handler : constant AST_Handler;\n+\n+   type Type_Class is\n+     (Type_Class_Enumeration,\n+      Type_Class_Integer,\n+      Type_Class_Fixed_Point,\n+      Type_Class_Floating_Point,\n+      Type_Class_Array,\n+      Type_Class_Record,\n+      Type_Class_Access,\n+      Type_Class_Task,             -- also in Ada 95 protected\n+      Type_Class_Address);\n+\n+   function \"not\" (Left        : Largest_Integer) return Largest_Integer;\n+   function \"and\" (Left, Right : Largest_Integer) return Largest_Integer;\n+   function \"or\"  (Left, Right : Largest_Integer) return Largest_Integer;\n+   function \"xor\" (Left, Right : Largest_Integer) return Largest_Integer;\n+\n+   Address_Zero : constant Address;\n+   No_Addr      : constant Address;\n+   Address_Size : constant := Standard'Address_Size;\n+\n+   function \"+\" (Left : Address; Right : Integer) return Address;\n+   function \"+\" (Left : Integer; Right : Address) return Address;\n+   function \"-\" (Left : Address; Right : Address) return Integer;\n+   function \"-\" (Left : Address; Right : Integer) return Address;\n+\n+   generic\n+      type Target is private;\n+   function Fetch_From_Address (A : Address) return Target;\n+\n+   generic\n+      type Target is private;\n+   procedure Assign_To_Address (A : Address; T : Target);\n+\n+   --  Floating point type declarations for VAX floating point data types\n+\n+   pragma Warnings (Off);\n+\n+   type F_Float is digits 6;\n+   pragma Float_Representation (VAX_Float, F_Float);\n+\n+   type D_Float is digits 9;\n+   pragma Float_Representation (Vax_Float, D_Float);\n+\n+   type G_Float is digits 15;\n+   pragma Float_Representation (Vax_Float, G_Float);\n+\n+   --  Floating point type declarations for IEEE floating point data types\n+\n+   type IEEE_Single_Float is digits 6;\n+   pragma Float_Representation (IEEE_Float, IEEE_Single_Float);\n+\n+   type IEEE_Double_Float is digits 15;\n+   pragma Float_Representation (IEEE_Float, IEEE_Double_Float);\n+\n+   pragma Warnings (On);\n+\n+   Non_Ada_Error : exception;\n+\n+   --  Hardware-oriented types and functions\n+\n+   type Bit_Array is array (Integer range <>) of Boolean;\n+   pragma Pack (Bit_Array);\n+\n+   subtype Bit_Array_8  is Bit_Array (0 ..  7);\n+   subtype Bit_Array_16 is Bit_Array (0 .. 15);\n+   subtype Bit_Array_32 is Bit_Array (0 .. 31);\n+   subtype Bit_Array_64 is Bit_Array (0 .. 63);\n+\n+   type Unsigned_Byte is range 0 .. 255;\n+   for  Unsigned_Byte'Size use 8;\n+\n+   function \"not\" (Left        : Unsigned_Byte) return Unsigned_Byte;\n+   function \"and\" (Left, Right : Unsigned_Byte) return Unsigned_Byte;\n+   function \"or\"  (Left, Right : Unsigned_Byte) return Unsigned_Byte;\n+   function \"xor\" (Left, Right : Unsigned_Byte) return Unsigned_Byte;\n+\n+   function To_Unsigned_Byte (X : Bit_Array_8) return Unsigned_Byte;\n+   function To_Bit_Array_8   (X : Unsigned_Byte) return Bit_Array_8;\n+\n+   type Unsigned_Byte_Array is array (Integer range <>) of Unsigned_Byte;\n+\n+   type Unsigned_Word is range 0 .. 65535;\n+   for  Unsigned_Word'Size use 16;\n+\n+   function \"not\" (Left        : Unsigned_Word) return Unsigned_Word;\n+   function \"and\" (Left, Right : Unsigned_Word) return Unsigned_Word;\n+   function \"or\"  (Left, Right : Unsigned_Word) return Unsigned_Word;\n+   function \"xor\" (Left, Right : Unsigned_Word) return Unsigned_Word;\n+\n+   function To_Unsigned_Word (X : Bit_Array_16) return Unsigned_Word;\n+   function To_Bit_Array_16  (X : Unsigned_Word) return Bit_Array_16;\n+\n+   type Unsigned_Word_Array is array (Integer range <>) of Unsigned_Word;\n+\n+   type Unsigned_Longword is range -2_147_483_648 .. 2_147_483_647;\n+   for  Unsigned_Longword'Size use 32;\n+\n+   function \"not\" (Left        : Unsigned_Longword) return Unsigned_Longword;\n+   function \"and\" (Left, Right : Unsigned_Longword) return Unsigned_Longword;\n+   function \"or\"  (Left, Right : Unsigned_Longword) return Unsigned_Longword;\n+   function \"xor\" (Left, Right : Unsigned_Longword) return Unsigned_Longword;\n+\n+   function To_Unsigned_Longword (X : Bit_Array_32) return Unsigned_Longword;\n+   function To_Bit_Array_32 (X : Unsigned_Longword) return Bit_Array_32;\n+\n+   type Unsigned_Longword_Array is\n+      array (Integer range <>) of Unsigned_Longword;\n+\n+   type Unsigned_32 is range 0 .. 4_294_967_295;\n+   for  Unsigned_32'Size use 32;\n+\n+   function \"not\" (Left        : Unsigned_32) return Unsigned_32;\n+   function \"and\" (Left, Right : Unsigned_32) return Unsigned_32;\n+   function \"or\"  (Left, Right : Unsigned_32) return Unsigned_32;\n+   function \"xor\" (Left, Right : Unsigned_32) return Unsigned_32;\n+\n+   function To_Unsigned_32 (X : Bit_Array_32) return Unsigned_32;\n+   function To_Bit_Array_32 (X : Unsigned_32) return Bit_Array_32;\n+\n+   type Unsigned_Quadword is record\n+      L0 : Unsigned_Longword;\n+      L1 : Unsigned_Longword;\n+   end record;\n+\n+   for Unsigned_Quadword'Size      use 64;\n+   for Unsigned_Quadword'Alignment use\n+     Integer'Min (8, Standard'Maximum_Alignment);\n+\n+   function \"not\" (Left        : Unsigned_Quadword) return Unsigned_Quadword;\n+   function \"and\" (Left, Right : Unsigned_Quadword) return Unsigned_Quadword;\n+   function \"or\"  (Left, Right : Unsigned_Quadword) return Unsigned_Quadword;\n+   function \"xor\" (Left, Right : Unsigned_Quadword) return Unsigned_Quadword;\n+\n+   function To_Unsigned_Quadword (X : Bit_Array_64) return Unsigned_Quadword;\n+   function To_Bit_Array_64 (X : Unsigned_Quadword) return Bit_Array_64;\n+\n+   type Unsigned_Quadword_Array is\n+      array (Integer range <>) of Unsigned_Quadword;\n+\n+   function To_Address      (X : Integer)           return Address;\n+   pragma Pure_Function (To_Address);\n+\n+   function To_Address_Long (X : Unsigned_Longword) return Address;\n+   pragma Pure_Function (To_Address_Long);\n+\n+   function To_Integer      (X : Address)           return Integer;\n+\n+   function To_Unsigned_Longword (X : Address)     return Unsigned_Longword;\n+   function To_Unsigned_Longword (X : AST_Handler) return Unsigned_Longword;\n+\n+   --  Conventional names for static subtypes of type UNSIGNED_LONGWORD\n+\n+   subtype Unsigned_1  is Unsigned_Longword range 0 .. 2** 1-1;\n+   subtype Unsigned_2  is Unsigned_Longword range 0 .. 2** 2-1;\n+   subtype Unsigned_3  is Unsigned_Longword range 0 .. 2** 3-1;\n+   subtype Unsigned_4  is Unsigned_Longword range 0 .. 2** 4-1;\n+   subtype Unsigned_5  is Unsigned_Longword range 0 .. 2** 5-1;\n+   subtype Unsigned_6  is Unsigned_Longword range 0 .. 2** 6-1;\n+   subtype Unsigned_7  is Unsigned_Longword range 0 .. 2** 7-1;\n+   subtype Unsigned_8  is Unsigned_Longword range 0 .. 2** 8-1;\n+   subtype Unsigned_9  is Unsigned_Longword range 0 .. 2** 9-1;\n+   subtype Unsigned_10 is Unsigned_Longword range 0 .. 2**10-1;\n+   subtype Unsigned_11 is Unsigned_Longword range 0 .. 2**11-1;\n+   subtype Unsigned_12 is Unsigned_Longword range 0 .. 2**12-1;\n+   subtype Unsigned_13 is Unsigned_Longword range 0 .. 2**13-1;\n+   subtype Unsigned_14 is Unsigned_Longword range 0 .. 2**14-1;\n+   subtype Unsigned_15 is Unsigned_Longword range 0 .. 2**15-1;\n+   subtype Unsigned_16 is Unsigned_Longword range 0 .. 2**16-1;\n+   subtype Unsigned_17 is Unsigned_Longword range 0 .. 2**17-1;\n+   subtype Unsigned_18 is Unsigned_Longword range 0 .. 2**18-1;\n+   subtype Unsigned_19 is Unsigned_Longword range 0 .. 2**19-1;\n+   subtype Unsigned_20 is Unsigned_Longword range 0 .. 2**20-1;\n+   subtype Unsigned_21 is Unsigned_Longword range 0 .. 2**21-1;\n+   subtype Unsigned_22 is Unsigned_Longword range 0 .. 2**22-1;\n+   subtype Unsigned_23 is Unsigned_Longword range 0 .. 2**23-1;\n+   subtype Unsigned_24 is Unsigned_Longword range 0 .. 2**24-1;\n+   subtype Unsigned_25 is Unsigned_Longword range 0 .. 2**25-1;\n+   subtype Unsigned_26 is Unsigned_Longword range 0 .. 2**26-1;\n+   subtype Unsigned_27 is Unsigned_Longword range 0 .. 2**27-1;\n+   subtype Unsigned_28 is Unsigned_Longword range 0 .. 2**28-1;\n+   subtype Unsigned_29 is Unsigned_Longword range 0 .. 2**29-1;\n+   subtype Unsigned_30 is Unsigned_Longword range 0 .. 2**30-1;\n+   subtype Unsigned_31 is Unsigned_Longword range 0 .. 2**31-1;\n+\n+   --  Function for obtaining global symbol values\n+\n+   function Import_Value         (Symbol : String) return Unsigned_Longword;\n+   function Import_Address       (Symbol : String) return Address;\n+   function Import_Largest_Value (Symbol : String) return Largest_Integer;\n+\n+   pragma Import (Intrinsic, Import_Value);\n+   pragma Import (Intrinsic, Import_Address);\n+   pragma Import (Intrinsic, Import_Largest_Value);\n+\n+   --  For the following declarations, note that the declaration without\n+   --  a Retry_Count parameter means to retry infinitely. A value of zero\n+   --  for the Retry_Count parameter means do not retry.\n+\n+   --  Interlocked-instruction procedures\n+\n+   procedure Clear_Interlocked\n+     (Bit       : in out Boolean;\n+      Old_Value : out Boolean);\n+\n+   procedure Set_Interlocked\n+     (Bit       : in out Boolean;\n+      Old_Value : out Boolean);\n+\n+   type Aligned_Word is record\n+      Value : Short_Integer;\n+   end record;\n+\n+   for Aligned_Word'Alignment use\n+     Integer'Min (2, Standard'Maximum_Alignment);\n+\n+   procedure Clear_Interlocked\n+     (Bit          : in out Boolean;\n+      Old_Value    : out Boolean;\n+      Retry_Count  : in Natural;\n+      Success_Flag : out Boolean);\n+\n+   procedure Set_Interlocked\n+     (Bit          : in out Boolean;\n+      Old_Value    : out Boolean;\n+      Retry_Count  : in Natural;\n+      Success_Flag : out Boolean);\n+\n+   procedure Add_Interlocked\n+     (Addend       : in Short_Integer;\n+      Augend       : in out Aligned_Word;\n+      Sign         : out Integer);\n+\n+   type Aligned_Integer is record\n+      Value : Integer;\n+   end record;\n+\n+   for Aligned_Integer'Alignment use\n+     Integer'Min (4, Standard'Maximum_Alignment);\n+\n+   type Aligned_Long_Integer is record\n+      Value : Long_Integer;\n+   end record;\n+\n+   for Aligned_Long_Integer'Alignment use\n+     Integer'Min (8, Standard'Maximum_Alignment);\n+\n+   --  For the following declarations, note that the declaration without\n+   --  a Retry_Count parameter mean to retry infinitely. A value of zero\n+   --  for the Retry_Count means do not retry.\n+\n+   procedure Add_Atomic\n+     (To           : in out Aligned_Integer;\n+      Amount       : in Integer);\n+\n+   procedure Add_Atomic\n+     (To           : in out Aligned_Integer;\n+      Amount       : in Integer;\n+      Retry_Count  : in Natural;\n+      Old_Value    : out Integer;\n+      Success_Flag : out Boolean);\n+\n+   procedure Add_Atomic\n+     (To           : in out Aligned_Long_Integer;\n+      Amount       : in Long_Integer);\n+\n+   procedure Add_Atomic\n+     (To           : in out Aligned_Long_Integer;\n+      Amount       : in Long_Integer;\n+      Retry_Count  : in Natural;\n+      Old_Value    : out Long_Integer;\n+      Success_Flag : out Boolean);\n+\n+   procedure And_Atomic\n+     (To           : in out Aligned_Integer;\n+      From         : in Integer);\n+\n+   procedure And_Atomic\n+     (To           : in out Aligned_Integer;\n+      From         : in Integer;\n+      Retry_Count  : in Natural;\n+      Old_Value    : out Integer;\n+      Success_Flag : out Boolean);\n+\n+   procedure And_Atomic\n+     (To           : in out Aligned_Long_Integer;\n+      From         : in Long_Integer);\n+\n+   procedure And_Atomic\n+     (To           : in out Aligned_Long_Integer;\n+      From         : in Long_Integer;\n+      Retry_Count  : in Natural;\n+      Old_Value    : out Long_Integer;\n+      Success_Flag : out Boolean);\n+\n+   procedure Or_Atomic\n+     (To           : in out Aligned_Integer;\n+      From         : in Integer);\n+\n+   procedure Or_Atomic\n+     (To           : in out Aligned_Integer;\n+      From         : in Integer;\n+      Retry_Count  : in Natural;\n+      Old_Value    : out Integer;\n+      Success_Flag : out Boolean);\n+\n+   procedure Or_Atomic\n+     (To           : in out Aligned_Long_Integer;\n+      From         : in Long_Integer);\n+\n+   procedure Or_Atomic\n+     (To           : in out Aligned_Long_Integer;\n+      From         : in Long_Integer;\n+      Retry_Count  : in Natural;\n+      Old_Value    : out Long_Integer;\n+      Success_Flag : out Boolean);\n+\n+   type Insq_Status is\n+     (Fail_No_Lock, OK_Not_First, OK_First);\n+\n+   for Insq_Status use\n+     (Fail_No_Lock => -1,\n+      OK_Not_First => 0,\n+      OK_First     => +1);\n+\n+   type Remq_Status is (\n+     Fail_No_Lock,\n+     Fail_Was_Empty,\n+     OK_Not_Empty,\n+     OK_Empty);\n+\n+   for Remq_Status use\n+     (Fail_No_Lock   => -1,\n+      Fail_Was_Empty => 0,\n+      OK_Not_Empty   => +1,\n+      OK_Empty       => +2);\n+\n+   procedure Insqhi\n+     (Item   : in  Address;\n+      Header : in  Address;\n+      Status : out Insq_Status);\n+\n+   procedure Remqhi\n+     (Header : in  Address;\n+      Item   : out Address;\n+      Status : out Remq_Status);\n+\n+   procedure Insqti\n+     (Item   : in  Address;\n+      Header : in  Address;\n+      Status : out Insq_Status);\n+\n+   procedure Remqti\n+     (Header : in  Address;\n+      Item   : out Address;\n+      Status : out Remq_Status);\n+\n+private\n+\n+   Address_Zero : constant Address := Null_Address;\n+   No_Addr      : constant Address := Null_Address;\n+\n+   --  An AST_Handler value is from a typing point of view simply a pointer\n+   --  to a procedure taking a single 64bit parameter. However, this\n+   --  is a bit misleading, because the data that this pointer references is\n+   --  highly stylized. See body of System.AST_Handling for full details.\n+\n+   type AST_Handler is access procedure (Param : Long_Integer);\n+   No_AST_Handler : constant AST_Handler := null;\n+\n+   --  Other operators have incorrect profiles. It would be nice to make\n+   --  them intrinsic, since the backend can handle them, but the front\n+   --  end is not prepared to deal with them, so at least inline them.\n+\n+   pragma Inline_Always (\"+\");\n+   pragma Inline_Always (\"-\");\n+   pragma Inline_Always (\"not\");\n+   pragma Inline_Always (\"and\");\n+   pragma Inline_Always (\"or\");\n+   pragma Inline_Always (\"xor\");\n+\n+   --  Other inlined subprograms\n+\n+   pragma Inline_Always (Fetch_From_Address);\n+   pragma Inline_Always (Assign_To_Address);\n+\n+   --  Synchronization related subprograms. These are declared to have\n+   --  convention C so that the critical parameters are passed by reference.\n+   --  Without this, the parameters are passed by copy, creating load/store\n+   --  race conditions. We also inline them, since this seems more in the\n+   --  spirit of the original (hardware instrinsic) routines.\n+\n+   pragma Convention (C, Clear_Interlocked);\n+   pragma Inline_Always (Clear_Interlocked);\n+\n+   pragma Convention (C, Set_Interlocked);\n+   pragma Inline_Always (Set_Interlocked);\n+\n+   pragma Convention (C, Add_Interlocked);\n+   pragma Inline_Always (Add_Interlocked);\n+\n+   pragma Convention (C, Add_Atomic);\n+   pragma Inline_Always (Add_Atomic);\n+\n+   pragma Convention (C, And_Atomic);\n+   pragma Inline_Always (And_Atomic);\n+\n+   pragma Convention (C, Or_Atomic);\n+   pragma Inline_Always (Or_Atomic);\n+\n+   --  Provide proper unchecked conversion definitions for transfer\n+   --  functions. Note that we need this level of indirection because\n+   --  the formal parameter name is X and not Source (and this is indeed\n+   --  detectable by a program)\n+\n+   function To_Unsigned_Byte_A is new\n+     Unchecked_Conversion (Bit_Array_8, Unsigned_Byte);\n+\n+   function To_Unsigned_Byte (X : Bit_Array_8) return Unsigned_Byte\n+     renames To_Unsigned_Byte_A;\n+\n+   function To_Bit_Array_8_A is new\n+     Unchecked_Conversion (Unsigned_Byte, Bit_Array_8);\n+\n+   function To_Bit_Array_8 (X : Unsigned_Byte) return Bit_Array_8\n+     renames To_Bit_Array_8_A;\n+\n+   function To_Unsigned_Word_A is new\n+     Unchecked_Conversion (Bit_Array_16, Unsigned_Word);\n+\n+   function To_Unsigned_Word (X : Bit_Array_16) return Unsigned_Word\n+     renames To_Unsigned_Word_A;\n+\n+   function To_Bit_Array_16_A is new\n+     Unchecked_Conversion (Unsigned_Word, Bit_Array_16);\n+\n+   function To_Bit_Array_16 (X : Unsigned_Word) return Bit_Array_16\n+     renames To_Bit_Array_16_A;\n+\n+   function To_Unsigned_Longword_A is new\n+     Unchecked_Conversion (Bit_Array_32, Unsigned_Longword);\n+\n+   function To_Unsigned_Longword (X : Bit_Array_32) return Unsigned_Longword\n+     renames To_Unsigned_Longword_A;\n+\n+   function To_Bit_Array_32_A is new\n+     Unchecked_Conversion (Unsigned_Longword, Bit_Array_32);\n+\n+   function To_Bit_Array_32 (X : Unsigned_Longword) return Bit_Array_32\n+     renames To_Bit_Array_32_A;\n+\n+   function To_Unsigned_32_A is new\n+     Unchecked_Conversion (Bit_Array_32, Unsigned_32);\n+\n+   function To_Unsigned_32 (X : Bit_Array_32) return Unsigned_32\n+     renames To_Unsigned_32_A;\n+\n+   function To_Bit_Array_32_A is new\n+     Unchecked_Conversion (Unsigned_32, Bit_Array_32);\n+\n+   function To_Bit_Array_32 (X : Unsigned_32) return Bit_Array_32\n+     renames To_Bit_Array_32_A;\n+\n+   function To_Unsigned_Quadword_A is new\n+     Unchecked_Conversion (Bit_Array_64, Unsigned_Quadword);\n+\n+   function To_Unsigned_Quadword (X : Bit_Array_64) return Unsigned_Quadword\n+     renames To_Unsigned_Quadword_A;\n+\n+   function To_Bit_Array_64_A is new\n+     Unchecked_Conversion (Unsigned_Quadword, Bit_Array_64);\n+\n+   function To_Bit_Array_64 (X : Unsigned_Quadword) return Bit_Array_64\n+     renames To_Bit_Array_64_A;\n+\n+   pragma Warnings (Off);\n+   --  Turn warnings off. This is needed for systems with 64-bit integers,\n+   --  where some of these operations are of dubious meaning, but we do not\n+   --  want warnings when we compile on such systems.\n+\n+   function To_Address_A is new\n+     Unchecked_Conversion (Integer, Address);\n+   pragma Pure_Function (To_Address_A);\n+\n+   function To_Address (X : Integer) return Address\n+     renames To_Address_A;\n+   pragma Pure_Function (To_Address);\n+\n+   function To_Address_Long_A is new\n+     Unchecked_Conversion (Unsigned_Longword, Address);\n+   pragma Pure_Function (To_Address_Long_A);\n+\n+   function To_Address_Long (X : Unsigned_Longword) return Address\n+     renames To_Address_Long_A;\n+   pragma Pure_Function (To_Address_Long);\n+\n+   function To_Integer_A is new\n+     Unchecked_Conversion (Address, Integer);\n+\n+   function To_Integer (X : Address) return Integer\n+     renames To_Integer_A;\n+\n+   function To_Unsigned_Longword_A is new\n+     Unchecked_Conversion (Address, Unsigned_Longword);\n+\n+   function To_Unsigned_Longword (X : Address) return Unsigned_Longword\n+     renames To_Unsigned_Longword_A;\n+\n+   function To_Unsigned_Longword_A is new\n+     Unchecked_Conversion (AST_Handler, Unsigned_Longword);\n+\n+   function To_Unsigned_Longword (X : AST_Handler) return Unsigned_Longword\n+     renames To_Unsigned_Longword_A;\n+\n+   pragma Warnings (On);\n+\n+end System.Aux_DEC;"}, {"sha": "dc0fffd048a8a78b426cbd8159a4f99e6f22092c", "filename": "gcc/ada/s-interr-sigaction.adb", "status": "modified", "additions": 22, "deletions": 21, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-interr-sigaction.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-interr-sigaction.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr-sigaction.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -105,10 +105,9 @@ package body System.Interrupts is\n \n    type Server_Task_Access is access Server_Task;\n \n-   Attached_Interrupts : array (Interrupt_ID) of Boolean;\n-   Handlers            : array (Interrupt_ID) of Task_Id;\n-   Descriptors         : array (Interrupt_ID) of Handler_Desc;\n-   Interrupt_Count     : array (Interrupt_ID) of Integer := (others => 0);\n+   Handlers        : array (Interrupt_ID) of Task_Id;\n+   Descriptors     : array (Interrupt_ID) of Handler_Desc;\n+   Interrupt_Count : array (Interrupt_ID) of Integer := (others => 0);\n \n    pragma Volatile_Components (Interrupt_Count);\n \n@@ -149,8 +148,13 @@ package body System.Interrupts is\n \n    function TISR is new Unchecked_Conversion (Handler_Ptr, isr_address);\n \n+   --------------------\n+   -- Signal_Handler --\n+   --------------------\n+\n    procedure Signal_Handler (Sig : Interrupt_ID) is\n       Handler : Task_Id renames Handlers (Sig);\n+\n    begin\n       if Intr_Attach_Reset and then\n         intr_attach (int (Sig), TISR (Signal_Handler'Access)) = FUNC_ERR\n@@ -386,17 +390,15 @@ package body System.Interrupts is\n \n       if New_Handler = null then\n \n-         --  The null handler means we are detaching the handler.\n+         --  The null handler means we are detaching the handler\n \n-         Attached_Interrupts (Interrupt) := False;\n          Descriptors (Interrupt) :=\n            (Kind => Unknown, T => null, E => 0, H => null, Static => False);\n \n       else\n          Descriptors (Interrupt).Kind := Protected_Procedure;\n          Descriptors (Interrupt).H := New_Handler;\n          Descriptors (Interrupt).Static := Static;\n-         Attached_Interrupts (Interrupt) := True;\n       end if;\n    end Attach_Handler;\n \n@@ -408,7 +410,8 @@ package body System.Interrupts is\n      (Old_Handler : out Parameterless_Handler;\n       New_Handler : Parameterless_Handler;\n       Interrupt   : Interrupt_ID;\n-      Static      : Boolean := False) is\n+      Static      : Boolean := False)\n+   is\n    begin\n       if Is_Reserved (Interrupt) then\n          raise Program_Error;\n@@ -433,7 +436,8 @@ package body System.Interrupts is\n \n    procedure Detach_Handler\n      (Interrupt : Interrupt_ID;\n-      Static    : Boolean := False) is\n+      Static    : Boolean := False)\n+   is\n    begin\n       if Is_Reserved (Interrupt) then\n          raise Program_Error;\n@@ -449,7 +453,6 @@ package body System.Interrupts is\n            \"Trying to detach a static Interrupt Handler\");\n       end if;\n \n-      Attached_Interrupts (Interrupt) := False;\n       Descriptors (Interrupt) :=\n         (Kind => Unknown, T => null, E => 0, H => null, Static => False);\n \n@@ -537,7 +540,7 @@ package body System.Interrupts is\n       Int_Ref : System.Address)\n    is\n       Interrupt   : constant Interrupt_ID :=\n-        Interrupt_ID (Storage_Elements.To_Integer (Int_Ref));\n+                      Interrupt_ID (Storage_Elements.To_Integer (Int_Ref));\n \n       New_Task : Server_Task_Access;\n \n@@ -572,8 +575,6 @@ package body System.Interrupts is\n       --  make by the task before it terminates.\n \n       T.Interrupt_Entry := True;\n-\n-      Attached_Interrupts (Interrupt) := True;\n    end Bind_Interrupt_To_Entry;\n \n    ------------------------------\n@@ -582,14 +583,14 @@ package body System.Interrupts is\n \n    procedure Detach_Interrupt_Entries (T : Task_Id) is\n    begin\n-      for I in Interrupt_ID loop\n-         if not Is_Reserved (I) then\n-            if Descriptors (I).Kind = Task_Entry and then\n-              Descriptors (I).T = T then\n-               Attached_Interrupts (I) := False;\n-               Descriptors (I).Kind := Unknown;\n-\n-               if intr_attach (int (I), null) = FUNC_ERR then\n+      for J in Interrupt_ID loop\n+         if not Is_Reserved (J) then\n+            if Descriptors (J).Kind = Task_Entry\n+              and then Descriptors (J).T = T\n+            then\n+               Descriptors (J).Kind := Unknown;\n+\n+               if intr_attach (int (J), null) = FUNC_ERR then\n                   raise Program_Error;\n                end if;\n             end if;"}, {"sha": "3c3c84e89809486b8260fd686a8c9a63db49eb74", "filename": "gcc/ada/s-stchop-vxworks.adb", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-stchop-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-stchop-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stchop-vxworks.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -165,28 +165,6 @@ package body System.Stack_Checking.Operations is\n       return My_Stack; -- Never trust the cached value, but return local copy!\n    end Set_Stack_Info;\n \n-   --------------------\n-   -- Set_Stack_Size --\n-   --------------------\n-\n-   --  Specify the stack size for the current frame.\n-\n-   procedure Set_Stack_Size\n-     (Stack_Size : System.Storage_Elements.Storage_Offset)\n-   is\n-      My_Stack      : Stack_Access;\n-      Frame_Address : constant System.Address := My_Stack'Address;\n-\n-   begin\n-      My_Stack := Stack_Check (Frame_Address);\n-\n-      if Stack_Grows_Down then\n-         My_Stack.Limit := My_Stack.Base - Stack_Size;\n-      else\n-         My_Stack.Limit := My_Stack.Base + Stack_Size;\n-      end if;\n-   end Set_Stack_Size;\n-\n    -----------------\n    -- Stack_Check --\n    -----------------"}, {"sha": "0759941d638b66e328efd724faa23cf5cb429949", "filename": "gcc/ada/s-stchop.adb", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-stchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-stchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stchop.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -166,28 +166,6 @@ package body System.Stack_Checking.Operations is\n       return My_Stack; -- Never trust the cached value, but return local copy!\n    end Set_Stack_Info;\n \n-   --------------------\n-   -- Set_Stack_Size --\n-   --------------------\n-\n-   --  Specify the stack size for the current frame.\n-\n-   procedure Set_Stack_Size\n-     (Stack_Size : System.Storage_Elements.Storage_Offset)\n-   is\n-      My_Stack      : Stack_Access;\n-      Frame_Address : constant System.Address := My_Stack'Address;\n-\n-   begin\n-      My_Stack := Stack_Check (Frame_Address);\n-\n-      if Stack_Grows_Down then\n-         My_Stack.Limit := My_Stack.Base - Stack_Size;\n-      else\n-         My_Stack.Limit := My_Stack.Base + Stack_Size;\n-      end if;\n-   end Set_Stack_Size;\n-\n    -----------------\n    -- Stack_Check --\n    -----------------"}, {"sha": "11738f63c0b6781ff2a906f16bc9612fe2a32a55", "filename": "gcc/ada/s-stchop.ads", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-stchop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-stchop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stchop.ads?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -38,17 +38,11 @@ pragma Restrictions (No_Elaboration_Code);\n --  We want to guarantee the absence of elaboration code because the\n --  binder does not handle references to this package.\n \n-with System.Storage_Elements;\n-\n pragma Polling (Off);\n --  Turn off polling, we do not want polling to take place during stack\n --  checking operations. It causes infinite loops and other problems.\n \n package System.Stack_Checking.Operations is\n-   procedure Set_Stack_Size\n-     (Stack_Size : System.Storage_Elements.Storage_Offset);\n-   --  Specify the stack size for the current task.\n-\n    procedure Update_Stack_Cache (Stack : Stack_Access);\n    --  Set the stack cache for the current task. Note that this is only\n    --  for optimization purposes, nothing can be assumed about the"}, {"sha": "bd5d05800f5365526d728def7aa8e06675acf5a4", "filename": "gcc/ada/s-taprop-dummy.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-dummy.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-dummy.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-dummy.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -397,8 +397,7 @@ package body System.Task_Primitives.Operations is\n \n    function Suspend_Task\n      (T           : ST.Task_Id;\n-      Thread_Self : OSI.Thread_Id)\n-      return        Boolean\n+      Thread_Self : OSI.Thread_Id) return Boolean\n    is\n    begin\n       return False;\n@@ -410,8 +409,7 @@ package body System.Task_Primitives.Operations is\n \n    function Resume_Task\n      (T           : ST.Task_Id;\n-      Thread_Self : OSI.Thread_Id)\n-      return        Boolean\n+      Thread_Self : OSI.Thread_Id) return Boolean\n    is\n    begin\n       return False;"}, {"sha": "1789635f6851ff34e2d08cacae89ab4bcf9845d5", "filename": "gcc/ada/s-taprop-hpux-dce.adb", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-hpux-dce.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-hpux-dce.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-hpux-dce.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -970,8 +970,7 @@ package body System.Task_Primitives.Operations is\n \n    function Suspend_Task\n      (T           : ST.Task_Id;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n       pragma Unreferenced (T);\n       pragma Unreferenced (Thread_Self);\n@@ -986,8 +985,7 @@ package body System.Task_Primitives.Operations is\n \n    function Resume_Task\n      (T           : ST.Task_Id;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n       pragma Unreferenced (T);\n       pragma Unreferenced (Thread_Self);\n@@ -1006,8 +1004,8 @@ package body System.Task_Primitives.Operations is\n       Tmp_Set   : aliased sigset_t;\n       Result    : Interfaces.C.int;\n \n-      function State (Int : System.Interrupt_Management.Interrupt_ID)\n-                     return Character;\n+      function State\n+        (Int : System.Interrupt_Management.Interrupt_ID) return Character;\n       pragma Import (C, State, \"__gnat_get_interrupt_state\");\n       --  Get interrupt state.  Defined in a-init.c\n       --  The input argument is the interrupt number,"}, {"sha": "31965743c52d39b5de67a2f84869691afd89bb57", "filename": "gcc/ada/s-taprop-irix-athread.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-irix-athread.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-irix-athread.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-irix-athread.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -127,7 +127,6 @@ package body System.Task_Primitives.Operations is\n    procedure Initialize_Athread_Library;\n \n    function To_Task_Id is new Unchecked_Conversion (System.Address, Task_Id);\n-\n    function To_Address is new Unchecked_Conversion (Task_Id, System.Address);\n \n    -------------------\n@@ -829,7 +828,6 @@ package body System.Task_Primitives.Operations is\n \n    function Check_Exit (Self_ID : ST.Task_Id) return Boolean is\n       pragma Unreferenced (Self_ID);\n-\n    begin\n       return True;\n    end Check_Exit;"}, {"sha": "83fb530e7a22454cf29420fb76f55d2ba7748137", "filename": "gcc/ada/s-taprop-irix.adb", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-irix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-irix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-irix.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -958,7 +958,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Abort_Task (T : Task_Id) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_kill (T.Common.LL.Thread,\n         Signal (System.Interrupt_Management.Abort_Task_Interrupt));\n@@ -973,7 +972,6 @@ package body System.Task_Primitives.Operations is\n \n    function Check_Exit (Self_ID : ST.Task_Id) return Boolean is\n       pragma Unreferenced (Self_ID);\n-\n    begin\n       return True;\n    end Check_Exit;\n@@ -984,7 +982,6 @@ package body System.Task_Primitives.Operations is\n \n    function Check_No_Locks (Self_ID : ST.Task_Id) return Boolean is\n       pragma Unreferenced (Self_ID);\n-\n    begin\n       return True;\n    end Check_No_Locks;\n@@ -1022,12 +1019,10 @@ package body System.Task_Primitives.Operations is\n \n    function Suspend_Task\n      (T           : ST.Task_Id;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n       pragma Unreferenced (T);\n       pragma Unreferenced (Thread_Self);\n-\n    begin\n       return False;\n    end Suspend_Task;\n@@ -1038,12 +1033,10 @@ package body System.Task_Primitives.Operations is\n \n    function Resume_Task\n      (T           : ST.Task_Id;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n       pragma Unreferenced (T);\n       pragma Unreferenced (Thread_Self);\n-\n    begin\n       return False;\n    end Resume_Task;\n@@ -1058,8 +1051,8 @@ package body System.Task_Primitives.Operations is\n       Tmp_Set : aliased sigset_t;\n       Result  : Interfaces.C.int;\n \n-      function State (Int : System.Interrupt_Management.Interrupt_ID)\n-                     return Character;\n+      function State\n+        (Int : System.Interrupt_Management.Interrupt_ID) return Character;\n       pragma Import (C, State, \"__gnat_get_interrupt_state\");\n       --  Get interrupt state. Defined in a-init.c. The input argument is\n       --  the interrupt number, and the result is one of the following:"}, {"sha": "250bd8de779d88244db25c6ac14edaab1a5e0e5b", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -251,7 +251,6 @@ package body System.Task_Primitives.Operations is\n    procedure Stack_Guard (T : ST.Task_Id; On : Boolean) is\n       pragma Unreferenced (T);\n       pragma Unreferenced (On);\n-\n    begin\n       null;\n    end Stack_Guard;\n@@ -948,7 +947,6 @@ package body System.Task_Primitives.Operations is\n \n    function Check_Exit (Self_ID : ST.Task_Id) return Boolean is\n       pragma Unreferenced (Self_ID);\n-\n    begin\n       return True;\n    end Check_Exit;\n@@ -959,7 +957,6 @@ package body System.Task_Primitives.Operations is\n \n    function Check_No_Locks (Self_ID : ST.Task_Id) return Boolean is\n       pragma Unreferenced (Self_ID);\n-\n    begin\n       return True;\n    end Check_No_Locks;\n@@ -1015,8 +1012,8 @@ package body System.Task_Primitives.Operations is\n       Tmp_Set : aliased sigset_t;\n       Result  : Interfaces.C.int;\n \n-      function State (Int : System.Interrupt_Management.Interrupt_ID)\n-                     return Character;\n+      function State\n+        (Int : System.Interrupt_Management.Interrupt_ID) return Character;\n       pragma Import (C, State, \"__gnat_get_interrupt_state\");\n       --  Get interrupt state.  Defined in a-init.c\n       --  The input argument is the interrupt number,"}, {"sha": "2b2af90ca5e280a1e18880323e93cc9219e40eda", "filename": "gcc/ada/s-taprop-lynxos.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-lynxos.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-lynxos.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-lynxos.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -1076,8 +1076,7 @@ package body System.Task_Primitives.Operations is\n \n    function Suspend_Task\n      (T           : ST.Task_Id;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n       pragma Unreferenced (T);\n       pragma Unreferenced (Thread_Self);\n@@ -1110,8 +1109,7 @@ package body System.Task_Primitives.Operations is\n       Result  : Interfaces.C.int;\n \n       function State\n-        (Int  : System.Interrupt_Management.Interrupt_ID)\n-         return Character;\n+        (Int  : System.Interrupt_Management.Interrupt_ID) return Character;\n       pragma Import (C, State, \"__gnat_get_interrupt_state\");\n       --  Get interrupt state.  Defined in a-init.c\n       --  The input argument is the interrupt number,"}, {"sha": "7d7299f49707a716b4f94d6b9d2b2cf6b8f13ca1", "filename": "gcc/ada/s-taprop-mingw.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-mingw.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -400,7 +400,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Initialize_Lock (L : access RTS_Lock; Level : Lock_Level) is\n       pragma Unreferenced (Level);\n-\n    begin\n       InitializeCriticalSection (CRITICAL_SECTION (L.all)'Unrestricted_Access);\n    end Initialize_Lock;\n@@ -661,7 +660,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Wakeup (T : Task_Id; Reason : System.Tasking.Task_States) is\n       pragma Unreferenced (Reason);\n-\n    begin\n       Cond_Signal (T.Common.LL.CV'Access);\n    end Wakeup;\n@@ -961,7 +959,7 @@ package body System.Task_Primitives.Operations is\n    ----------------\n \n    procedure Abort_Task (T : Task_Id) is\n-   pragma Unreferenced (T);\n+      pragma Unreferenced (T);\n    begin\n       null;\n    end Abort_Task;\n@@ -1055,7 +1053,6 @@ package body System.Task_Primitives.Operations is\n \n    function Check_Exit (Self_ID : ST.Task_Id) return Boolean is\n       pragma Unreferenced (Self_ID);\n-\n    begin\n       return True;\n    end Check_Exit;\n@@ -1066,7 +1063,6 @@ package body System.Task_Primitives.Operations is\n \n    function Check_No_Locks (Self_ID : ST.Task_Id) return Boolean is\n       pragma Unreferenced (Self_ID);\n-\n    begin\n       return True;\n    end Check_No_Locks;"}, {"sha": "7556af3d025fe78b372c60fe0f1568d0c79a18fc", "filename": "gcc/ada/s-taprop-os2.adb", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-os2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-os2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-os2.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -202,7 +202,6 @@ package body System.Task_Primitives.Operations is\n    procedure Stack_Guard (T : ST.Task_Id; On : Boolean) is\n       pragma Unreferenced (T);\n       pragma Unreferenced (On);\n-\n    begin\n       null;\n    end Stack_Guard;\n@@ -222,6 +221,7 @@ package body System.Task_Primitives.Operations is\n \n    function Self return Task_Id is\n       Self_ID : Task_Id renames Thread_Local_Data_Ptr.Self_ID;\n+\n    begin\n       --  Check that the thread local data has been initialized.\n \n@@ -681,7 +681,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Wakeup (T : Task_Id; Reason : System.Tasking.Task_States) is\n       pragma Unreferenced (Reason);\n-\n    begin\n       Sem_Must_Not_Fail (DosPostEventSem (T.Common.LL.CV));\n    end Wakeup;\n@@ -748,7 +747,6 @@ package body System.Task_Primitives.Operations is\n       Loss_Of_Inheritance : Boolean := False)\n    is\n       pragma Unreferenced (Loss_Of_Inheritance);\n-\n    begin\n       T.Common.Current_Priority := Prio;\n       Set_Temporary_Priority (T, Prio);\n@@ -1031,7 +1029,6 @@ package body System.Task_Primitives.Operations is\n \n    function Check_No_Locks (Self_ID : ST.Task_Id) return Boolean is\n       TLD : constant Access_Thread_Local_Data := Thread_Local_Data_Ptr;\n-\n    begin\n       return Self_ID = TLD.Self_ID\n         and then TLD.Lock_Prio_Level = 0;\n@@ -1070,8 +1067,7 @@ package body System.Task_Primitives.Operations is\n \n    function Suspend_Task\n      (T           : ST.Task_Id;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n    begin\n       if Thread_Id (T.Common.LL.Thread) /= Thread_Self then\n@@ -1087,8 +1083,7 @@ package body System.Task_Primitives.Operations is\n \n    function Resume_Task\n      (T           : ST.Task_Id;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n    begin\n       if Thread_Id (T.Common.LL.Thread) /= Thread_Self then"}, {"sha": "0e84a75891baa875523502602f48dfc2e827570f", "filename": "gcc/ada/s-taprop-posix.adb", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-posix.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -688,7 +688,6 @@ package body System.Task_Primitives.Operations is\n    function Monotonic_Clock return Duration is\n       TS     : aliased timespec;\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := clock_gettime\n         (clock_id => CLOCK_REALTIME, tp => TS'Unchecked_Access);\n@@ -711,9 +710,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Wakeup (T : Task_Id; Reason : System.Tasking.Task_States) is\n       pragma Warnings (Off, Reason);\n-\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_cond_signal (T.Common.LL.CV'Access);\n       pragma Assert (Result = 0);\n@@ -1055,7 +1052,6 @@ package body System.Task_Primitives.Operations is\n \n    function Check_Exit (Self_ID : ST.Task_Id) return Boolean is\n       pragma Warnings (Off, Self_ID);\n-\n    begin\n       return True;\n    end Check_Exit;\n@@ -1066,7 +1062,6 @@ package body System.Task_Primitives.Operations is\n \n    function Check_No_Locks (Self_ID : ST.Task_Id) return Boolean is\n       pragma Warnings (Off, Self_ID);\n-\n    begin\n       return True;\n    end Check_No_Locks;\n@@ -1104,12 +1099,10 @@ package body System.Task_Primitives.Operations is\n \n    function Suspend_Task\n      (T           : ST.Task_Id;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n       pragma Warnings (Off, T);\n       pragma Warnings (Off, Thread_Self);\n-\n    begin\n       return False;\n    end Suspend_Task;\n@@ -1120,12 +1113,10 @@ package body System.Task_Primitives.Operations is\n \n    function Resume_Task\n      (T           : ST.Task_Id;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n       pragma Warnings (Off, T);\n       pragma Warnings (Off, Thread_Self);\n-\n    begin\n       return False;\n    end Resume_Task;\n@@ -1140,8 +1131,8 @@ package body System.Task_Primitives.Operations is\n       Tmp_Set : aliased sigset_t;\n       Result  : Interfaces.C.int;\n \n-      function State (Int : System.Interrupt_Management.Interrupt_ID)\n-                     return Character;\n+      function State\n+        (Int : System.Interrupt_Management.Interrupt_ID) return Character;\n       pragma Import (C, State, \"__gnat_get_interrupt_state\");\n       --  Get interrupt state.  Defined in a-init.c\n       --  The input argument is the interrupt number,"}, {"sha": "941e34a65cd26b2ea123b656a3b654a7e4ef1e01", "filename": "gcc/ada/s-taprop-solaris.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-solaris.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -321,7 +321,6 @@ package body System.Task_Primitives.Operations is\n    procedure Stack_Guard (T : ST.Task_Id; On : Boolean) is\n       pragma Unreferenced (T);\n       pragma Unreferenced (On);\n-\n    begin\n       null;\n    end Stack_Guard;\n@@ -412,8 +411,8 @@ package body System.Task_Primitives.Operations is\n             null;\n       end Configure_Processors;\n \n-      function State (Int : System.Interrupt_Management.Interrupt_ID)\n-                     return Character;\n+      function State\n+        (Int : System.Interrupt_Management.Interrupt_ID) return Character;\n       pragma Import (C, State, \"__gnat_get_interrupt_state\");\n       --  Get interrupt state.  Defined in a-init.c\n       --  The input argument is the interrupt number,\n@@ -698,7 +697,6 @@ package body System.Task_Primitives.Operations is\n    function Monotonic_Clock return Duration is\n       TS     : aliased timespec;\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := clock_gettime (CLOCK_REALTIME, TS'Unchecked_Access);\n       pragma Assert (Result = 0);"}, {"sha": "88b4636204cba6bb6f8a0e65acb8bfc72770d76e", "filename": "gcc/ada/s-taprop-tru64.adb", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-tru64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-tru64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-tru64.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -222,7 +222,6 @@ package body System.Task_Primitives.Operations is\n    procedure Stack_Guard (T : ST.Task_Id; On : Boolean) is\n       pragma Unreferenced (T);\n       pragma Unreferenced (On);\n-\n    begin\n       null;\n    end Stack_Guard;\n@@ -601,7 +600,6 @@ package body System.Task_Primitives.Operations is\n    function Monotonic_Clock return Duration is\n       TS     : aliased timespec;\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := clock_gettime (CLOCK_REALTIME, TS'Unchecked_Access);\n       pragma Assert (Result = 0);\n@@ -979,7 +977,6 @@ package body System.Task_Primitives.Operations is\n \n    function Check_Exit (Self_ID : ST.Task_Id) return Boolean is\n       pragma Unreferenced (Self_ID);\n-\n    begin\n       return True;\n    end Check_Exit;\n@@ -990,7 +987,6 @@ package body System.Task_Primitives.Operations is\n \n    function Check_No_Locks (Self_ID : ST.Task_Id) return Boolean is\n       pragma Unreferenced (Self_ID);\n-\n    begin\n       return True;\n    end Check_No_Locks;\n@@ -1032,7 +1028,6 @@ package body System.Task_Primitives.Operations is\n    is\n       pragma Warnings (Off, T);\n       pragma Warnings (Off, Thread_Self);\n-\n    begin\n       return False;\n    end Suspend_Task;\n@@ -1047,7 +1042,6 @@ package body System.Task_Primitives.Operations is\n    is\n       pragma Warnings (Off, T);\n       pragma Warnings (Off, Thread_Self);\n-\n    begin\n       return False;\n    end Resume_Task;"}, {"sha": "c7c9839a07fe07c470b21b8463571ac7b646ad1c", "filename": "gcc/ada/s-taprop-vms.adb", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vms.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -588,9 +588,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Wakeup (T : Task_Id; Reason : System.Tasking.Task_States) is\n       pragma Unreferenced (Reason);\n-\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_cond_signal (T.Common.LL.CV'Access);\n       pragma Assert (Result = 0);\n@@ -913,7 +911,6 @@ package body System.Task_Primitives.Operations is\n \n    function Check_Exit (Self_ID : ST.Task_Id) return Boolean is\n       pragma Unreferenced (Self_ID);\n-\n    begin\n       return True;\n    end Check_Exit;\n@@ -924,7 +921,6 @@ package body System.Task_Primitives.Operations is\n \n    function Check_No_Locks (Self_ID : ST.Task_Id) return Boolean is\n       pragma Unreferenced (Self_ID);\n-\n    begin\n       return True;\n    end Check_No_Locks;\n@@ -966,7 +962,6 @@ package body System.Task_Primitives.Operations is\n    is\n       pragma Unreferenced (T);\n       pragma Unreferenced (Thread_Self);\n-\n    begin\n       return False;\n    end Suspend_Task;"}, {"sha": "f83fc02e49546c63a0d5c097b55382ad15b28499", "filename": "gcc/ada/s-taprop-vxworks.adb", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vxworks.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -681,7 +681,6 @@ package body System.Task_Primitives.Operations is\n    function Monotonic_Clock return Duration is\n       TS     : aliased timespec;\n       Result : int;\n-\n    begin\n       Result := clock_gettime (CLOCK_REALTIME, TS'Unchecked_Access);\n       pragma Assert (Result = 0);\n@@ -703,9 +702,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Wakeup (T : Task_Id; Reason : System.Tasking.Task_States) is\n       pragma Unreferenced (Reason);\n-\n       Result : int;\n-\n    begin\n       Result := semGive (T.Common.LL.CV);\n       pragma Assert (Result = 0);\n@@ -1019,7 +1016,6 @@ package body System.Task_Primitives.Operations is\n \n    function Check_Exit (Self_ID : ST.Task_Id) return Boolean is\n       pragma Unreferenced (Self_ID);\n-\n    begin\n       return True;\n    end Check_Exit;\n@@ -1030,7 +1026,6 @@ package body System.Task_Primitives.Operations is\n \n    function Check_No_Locks (Self_ID : ST.Task_Id) return Boolean is\n       pragma Unreferenced (Self_ID);\n-\n    begin\n       return True;\n    end Check_No_Locks;\n@@ -1068,8 +1063,7 @@ package body System.Task_Primitives.Operations is\n \n    function Suspend_Task\n      (T           : ST.Task_Id;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n    begin\n       if T.Common.LL.Thread /= 0\n@@ -1087,8 +1081,7 @@ package body System.Task_Primitives.Operations is\n \n    function Resume_Task\n      (T           : ST.Task_Id;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n    begin\n       if T.Common.LL.Thread /= 0"}, {"sha": "41101095814e4765a07e8282b075a1150b2907cb", "filename": "gcc/ada/s-taprop.ads", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-taprop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop.ads?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -307,24 +307,22 @@ package System.Task_Primitives.Operations is\n    --  The effect should be consistent with the Ada Reference Manual.\n    --  In particular, when a task lowers its priority due to the loss of\n    --  inherited priority, it goes at the head of the queue for its new\n-   --  priority (RM D.2.2 par 9).\n-   --  Loss_Of_Inheritance helps the underlying implementation to do it\n-   --  right when the OS doesn't.\n+   --  priority (RM D.2.2 par 9). Loss_Of_Inheritance helps the underlying\n+   --  implementation to do it right when the OS doesn't.\n \n    function Get_Priority (T : ST.Task_Id) return System.Any_Priority;\n    pragma Inline (Get_Priority);\n    --  Returns the priority last set by Set_Priority for this task.\n \n    function Monotonic_Clock return Duration;\n    pragma Inline (Monotonic_Clock);\n-   --  Returns \"absolute\" time, represented as an offset\n-   --  relative to \"the Epoch\", which is Jan 1, 1970.\n-   --  This clock implementation is immune to the system's clock changes.\n+   --  Returns \"absolute\" time, represented as an offset relative to \"the\n+   --  Epoch\", which is Jan 1, 1970. This clock implementation is immune to\n+   --  the system's clock changes.\n \n    function RT_Resolution return Duration;\n    pragma Inline (RT_Resolution);\n-   --  Returns the resolution of the underlying clock used to implement\n-   --  RT_Clock.\n+   --  Returns resolution of the underlying clock used to implement RT_Clock\n \n    ----------------\n    -- Extensions --\n@@ -477,17 +475,15 @@ package System.Task_Primitives.Operations is\n \n    function Suspend_Task\n      (T           : ST.Task_Id;\n-      Thread_Self : OSI.Thread_Id)\n-      return        Boolean;\n+      Thread_Self : OSI.Thread_Id) return Boolean;\n    --  Suspend a specific task when the underlying thread library provides\n    --  such functionality, unless the thread associated with T is Thread_Self.\n    --  Such functionality is needed by gdb on some targets (e.g VxWorks)\n    --  Return True is the operation is successful\n \n    function Resume_Task\n      (T           : ST.Task_Id;\n-      Thread_Self : OSI.Thread_Id)\n-      return        Boolean;\n+      Thread_Self : OSI.Thread_Id) return Boolean;\n    --  Resume a specific task when the underlying thread library provides\n    --  such functionality, unless the thread associated with T is Thread_Self.\n    --  Such functionality is needed by gdb on some targets (e.g VxWorks)"}, {"sha": "8b1bf031fa4c9e59dea9e5bd47fc33af3fd983ec", "filename": "gcc/ada/s-vaflop-vms-alpha.adb", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-vaflop-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fs-vaflop-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vaflop-vms-alpha.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "previous_filename": "gcc/ada/s-vaflop-vms.adb"}, {"sha": "3cbe7cc7b7fd3e8d6c53e92949639154df524ba0", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -1056,7 +1056,7 @@ package body Scng is\n                         exit;\n \n                      elsif C in Upper_Half_Character then\n-                        if Ada_83 then\n+                        if Ada_Version = Ada_83 then\n                            Error_Bad_String_Char;\n                         end if;\n \n@@ -1604,7 +1604,7 @@ package body Scng is\n \n                   if Source (Scan_Ptr) not in Graphic_Character then\n                      if Source (Scan_Ptr) in Upper_Half_Character then\n-                        if Ada_83 then\n+                        if Ada_Version = Ada_83 then\n                            Error_Illegal_Character;\n                         end if;\n \n@@ -2062,7 +2062,8 @@ package body Scng is\n          --  Here is where we check if it was a keyword\n \n          if Get_Name_Table_Byte (Token_Name) /= 0\n-           and then (Ada_95 or else Token_Name not in Ada_95_Reserved_Words)\n+           and then (Ada_Version >= Ada_95\n+                       or else Token_Name not in Ada_95_Reserved_Words)\n          then\n             Token := Token_Type'Val (Get_Name_Table_Byte (Token_Name));\n "}, {"sha": "1e27760a04a558fe0362252c37acf9564201025f", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 52, "deletions": 52, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -79,7 +79,7 @@ package body Sem_Aggr is\n    --  sorted order.\n \n    procedure Check_Can_Never_Be_Null (N : Node_Id; Expr : Node_Id);\n-   --  Ada 0Y (AI-231): Check bad usage of the null-exclusion issue\n+   --  Ada 2005 (AI-231): Check bad usage of the null-exclusion issue\n \n    ------------------------------------------------------\n    -- Subprograms used for RECORD AGGREGATE Processing --\n@@ -469,7 +469,7 @@ package body Sem_Aggr is\n             Check_Unset_Reference (Exp);\n          end if;\n \n-      --  Ada 0Y (AI-231): Generate conversion to the null-excluding\n+      --  Ada 2005 (AI-231): Generate conversion to the null-excluding\n       --  type to force the corresponding run-time check\n \n       elsif Is_Access_Type (Check_Typ)\n@@ -881,10 +881,10 @@ package body Sem_Aggr is\n          Error_Msg_N (\"aggregate type cannot have limited component\", N);\n          Explain_Limited_Type (Typ, N);\n \n-      --  Ada 0Y (AI-287): Limited aggregates allowed\n+      --  Ada 2005 (AI-287): Limited aggregates allowed\n \n       elsif Is_Limited_Type (Typ)\n-        and not Extensions_Allowed\n+        and Ada_Version < Ada_05\n       then\n          Error_Msg_N (\"aggregate type cannot be limited\", N);\n          Explain_Limited_Type (Typ, N);\n@@ -979,10 +979,10 @@ package body Sem_Aggr is\n \n             Set_Etype (N, Aggr_Typ);  --  may be overridden later on\n \n-            --  Ada 0Y (AI-231): Propagate the null_exclusion attribute to the\n-            --  components of the array aggregate\n+            --  Ada 2005 (AI-231): Propagate the null_exclusion attribute to\n+            --  the components of the array aggregate\n \n-            if Extensions_Allowed then\n+            if Ada_Version >= Ada_05 then\n                Set_Can_Never_Be_Null (Aggr_Typ, Can_Never_Be_Null (Typ));\n             end if;\n \n@@ -1399,7 +1399,7 @@ package body Sem_Aggr is\n                end if;\n             end if;\n \n-            --  Ada 0Y (AI-231): Propagate the type to the nested aggregate.\n+            --  Ada 2005 (AI-231): Propagate the type to the nested aggregate.\n             --  Required to check the null-exclusion attribute (if present).\n             --  This value may be overridden later on.\n \n@@ -1488,7 +1488,7 @@ package body Sem_Aggr is\n                      return Failure;\n                   end if;\n \n-                  if Ada_83\n+                  if Ada_Version = Ada_83\n                     and then Assoc /= First (Component_Associations (N))\n                     and then (Nkind (Parent (N)) = N_Assignment_Statement\n                                or else\n@@ -1671,26 +1671,26 @@ package body Sem_Aggr is\n                   end if;\n                end loop;\n \n-               --  Ada 0Y (AI-231)\n+               --  Ada 2005 (AI-231)\n \n                Check_Can_Never_Be_Null (N, Expression (Assoc));\n \n-               --  Ada 0Y (AI-287): In case of default initialized component\n+               --  Ada 2005 (AI-287): In case of default initialized component\n                --  we delay the resolution to the expansion phase\n \n                if Box_Present (Assoc) then\n \n-                  --  Ada 0Y (AI-287): In case of default initialization of a\n-                  --  component the expander will generate calls to the\n-                  --  corresponding initialization subprogram.\n+                  --  Ada 2005 (AI-287): In case of default initialization\n+                  --  of a component the expander will generate calls to\n+                  --  the corresponding initialization subprogram.\n \n                   if Present (Base_Init_Proc (Etype (Component_Typ)))\n                     or else Has_Task (Base_Type (Component_Typ))\n                   then\n                      null;\n                   else\n                      Error_Msg_N\n-                       (\"(Ada 0Y): no value supplied for this component\",\n+                       (\"(Ada 2005): no value supplied for this component\",\n                         Assoc);\n                   end if;\n \n@@ -1807,7 +1807,7 @@ package body Sem_Aggr is\n          while Present (Expr) loop\n             Nb_Elements := Nb_Elements + 1;\n \n-            Check_Can_Never_Be_Null (N, Expr); --  Ada 0Y (AI-231)\n+            Check_Can_Never_Be_Null (N, Expr); -- Ada 2005 (AI-231)\n \n             if not Resolve_Aggr_Expr (Expr, Single_Elmt => True) then\n                return Failure;\n@@ -1819,22 +1819,23 @@ package body Sem_Aggr is\n          if Others_Present then\n             Assoc := Last (Component_Associations (N));\n \n-            Check_Can_Never_Be_Null (N, Expression (Assoc)); -- Ada 0Y (AI-231)\n+            Check_Can_Never_Be_Null\n+              (N, Expression (Assoc)); -- Ada 2005 (AI-231)\n \n-            --  Ada 0Y (AI-287): In case of default initialized component\n+            --  Ada 2005 (AI-287): In case of default initialized component\n             --  we delay the resolution to the expansion phase.\n \n             if Box_Present (Assoc) then\n \n-               --  Ada 0Y (AI-287): In case of default initialization of a\n-               --  component the expander will generate calls to the\n-               --  corresponding initialization subprogram.\n+               --  Ada 2005 (AI-287): In case of default initialization\n+               --  of a component the expander will generate calls to\n+               --  the corresponding initialization subprogram.\n \n                if Present (Base_Init_Proc (Etype (Component_Typ))) then\n                   null;\n                else\n                   Error_Msg_N\n-                    (\"(Ada 0Y): no value supplied for these components\",\n+                    (\"(Ada 2005): no value supplied for these components\",\n                      Assoc);\n                end if;\n \n@@ -1993,11 +1994,9 @@ package body Sem_Aggr is\n \n       elsif Is_Limited_Type (Typ) then\n \n-         --  Ada 0Y (AI-287): Limited aggregates are allowed\n+         --  Ada 2005 (AI-287): Limited aggregates are allowed\n \n-         if Extensions_Allowed then\n-            null;\n-         else\n+         if Ada_Version < Ada_05 then\n             Error_Msg_N (\"aggregate type cannot be limited\", N);\n             Explain_Limited_Type (Typ, N);\n             return;\n@@ -2104,8 +2103,8 @@ package body Sem_Aggr is\n \n       Mbox_Present : Boolean := False;\n       Others_Mbox  : Boolean := False;\n-      --  Ada 0Y (AI-287): Variables used in case of default initialization to\n-      --  provide a functionality similar to Others_Etype. Mbox_Present\n+      --  Ada 2005 (AI-287): Variables used in case of default initialization\n+      --  to provide a functionality similar to Others_Etype. Mbox_Present\n       --  indicates that the component takes its default initialization;\n       --  Others_Mbox indicates that at least one component takes its default\n       --  initialization. Similar to Others_Etype, they are also updated as a\n@@ -2293,9 +2292,9 @@ package body Sem_Aggr is\n                and then Comes_From_Source (Compon)\n                and then not In_Instance_Body\n             then\n-               --  Ada 0Y (AI-287): Limited aggregates are allowed\n+               --  Ada 2005 (AI-287): Limited aggregates are allowed\n \n-               if Extensions_Allowed\n+               if Ada_Version >= Ada_05\n                  and then Present (Expression (Assoc))\n                  and then Nkind (Expression (Assoc)) = N_Aggregate\n                then\n@@ -2333,8 +2332,8 @@ package body Sem_Aggr is\n                      --  indispensable otherwise, because each one must be\n                      --  expanded individually to preserve side-effects.\n \n-                     --  Ada 0Y (AI-287): In case of default initialization of\n-                     --  components, we duplicate the corresponding default\n+                     --  Ada 2005 (AI-287): In case of default initialization\n+                     --  of components, we duplicate the corresponding default\n                      --  expression (from the record type declaration).\n \n                      if Box_Present (Assoc) then\n@@ -2371,23 +2370,23 @@ package body Sem_Aggr is\n                elsif Chars (Compon) = Chars (Selector_Name) then\n                   if No (Expr) then\n \n-                     --  Ada 0Y (AI-231)\n+                     --  Ada 2005 (AI-231)\n \n-                     if Extensions_Allowed\n+                     if Ada_Version >= Ada_05\n                        and then Present (Expression (Assoc))\n                        and then Nkind (Expression (Assoc)) = N_Null\n                        and then Can_Never_Be_Null (Compon)\n                      then\n                         Error_Msg_N\n-                          (\"(Ada 0Y) NULL not allowed in null-excluding \" &\n+                          (\"(Ada 2005) NULL not allowed in null-excluding \" &\n                            \"components\", Expression (Assoc));\n                      end if;\n \n                      --  We need to duplicate the expression when several\n                      --  components are grouped together with a \"|\" choice.\n                      --  For instance \"filed1 | filed2 => Expr\"\n \n-                     --  Ada 0Y (AI-287)\n+                     --  Ada 2005 (AI-287)\n \n                      if Box_Present (Assoc) then\n                         Mbox_Present := True;\n@@ -2396,8 +2395,8 @@ package body Sem_Aggr is\n                         --  from the record type declaration\n \n                         if Present (Next (Selector_Name)) then\n-                           Expr := New_Copy_Tree\n-                                     (Expression (Parent (Compon)));\n+                           Expr :=\n+                             New_Copy_Tree (Expression (Parent (Compon)));\n                         else\n                            Expr := Expression (Parent (Compon));\n                         end if;\n@@ -2693,15 +2692,15 @@ package body Sem_Aggr is\n             if Discr_Present (Discrim) then\n                Resolve_Aggr_Expr (Positional_Expr, Discrim);\n \n-               --  Ada 0Y (AI-231)\n+               --  Ada 2005 (AI-231)\n \n-               if Extensions_Allowed\n+               if Ada_Version >= Ada_05\n                  and then Nkind (Positional_Expr) = N_Null\n                  and then Can_Never_Be_Null (Discrim)\n                then\n                   Error_Msg_N\n-                    (\"(Ada 0Y) NULL not allowed in null-excluding components\",\n-                     Positional_Expr);\n+                    (\"(Ada 2005) NULL not allowed in null-excluding \" &\n+                     \"components\", Positional_Expr);\n                end if;\n \n                Next (Positional_Expr);\n@@ -2935,13 +2934,14 @@ package body Sem_Aggr is\n          Component := Node (Component_Elmt);\n          Resolve_Aggr_Expr (Positional_Expr, Component);\n \n-         --  Ada 0Y (AI-231)\n-         if Extensions_Allowed\n+         --  Ada 2005 (AI-231)\n+\n+         if Ada_Version >= Ada_05\n            and then Nkind (Positional_Expr) = N_Null\n            and then Can_Never_Be_Null (Component)\n          then\n             Error_Msg_N\n-              (\"(Ada 0Y) NULL not allowed in null-excluding components\",\n+              (\"(Ada 2005) NULL not allowed in null-excluding components\",\n                Positional_Expr);\n          end if;\n \n@@ -2967,10 +2967,10 @@ package body Sem_Aggr is\n \n          if Mbox_Present and then Is_Limited_Type (Etype (Component)) then\n \n-            --  Ada 0Y (AI-287): In case of default initialization of a limited\n-            --  component we pass the limited component to the expander. The\n-            --  expander will generate calls to the corresponding initiali-\n-            --  zation subprograms.\n+            --  Ada 2005 (AI-287): In case of default initialization of\n+            --  a limited component we pass the limited component to\n+            --  the expander. The expander will generate calls to the\n+            --  corresponding initialization subprograms.\n \n             Add_Association\n               (Component   => Component,\n@@ -3008,7 +3008,7 @@ package body Sem_Aggr is\n \n             if Nkind (Selectr) = N_Others_Choice then\n \n-               --  Ada 0Y (AI-287):  others choice may have expression or mbox\n+               --  Ada 2005 (AI-287): others choice may have expression or mbox\n \n                if No (Others_Etype)\n                   and then not Others_Mbox\n@@ -3092,12 +3092,12 @@ package body Sem_Aggr is\n \n    procedure Check_Can_Never_Be_Null (N : Node_Id; Expr : Node_Id) is\n    begin\n-      if Extensions_Allowed\n+      if Ada_Version >= Ada_05\n         and then Nkind (Expr) = N_Null\n         and then Can_Never_Be_Null (Etype (N))\n       then\n          Error_Msg_N\n-           (\"(Ada 0Y) NULL not allowed in null-excluding components\", Expr);\n+           (\"(Ada 2005) NULL not allowed in null-excluding components\", Expr);\n       end if;\n    end Check_Can_Never_Be_Null;\n "}, {"sha": "25285378550421f650f11312c3c30a87a2b8dac4", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -1524,7 +1524,7 @@ package body Sem_Attr is\n \n       if Comes_From_Source (N) then\n          if not Attribute_83 (Attr_Id) then\n-            if Ada_83 and then Comes_From_Source (N) then\n+            if Ada_Version = Ada_83 and then Comes_From_Source (N) then\n                Error_Msg_Name_1 := Aname;\n                Error_Msg_N (\"(Ada 83) attribute% is not standard?\", N);\n             end if;\n@@ -1920,7 +1920,7 @@ package body Sem_Attr is\n          Find_Type (P);\n          Typ := Entity (P);\n \n-         if Ada_95\n+         if Ada_Version >= Ada_95\n            and then not Is_Scalar_Type (Typ)\n            and then not Is_Generic_Type (Typ)\n          then\n@@ -2644,7 +2644,7 @@ package body Sem_Attr is\n          Check_Scalar_Type;\n \n          if Is_Real_Type (P_Type) then\n-            if Ada_83 and then Comes_From_Source (N) then\n+            if Ada_Version = Ada_83 and then Comes_From_Source (N) then\n                Error_Msg_Name_1 := Aname;\n                Error_Msg_N\n                  (\"(Ada 83) % attribute not allowed for real types\", N);\n@@ -3150,7 +3150,7 @@ package body Sem_Attr is\n       when Attribute_Range =>\n          Check_Array_Or_Scalar_Type;\n \n-         if Ada_83\n+         if Ada_Version = Ada_83\n            and then Is_Scalar_Type (P_Type)\n            and then Comes_From_Source (N)\n          then\n@@ -4573,7 +4573,7 @@ package body Sem_Attr is\n          --  Again we compute the variable Static for easy reference later\n          --  (note that no array attributes are static in Ada 83).\n \n-         Static := Ada_95;\n+         Static := Ada_Version >= Ada_95;\n \n          declare\n             N : Node_Id;\n@@ -6624,16 +6624,16 @@ package body Sem_Attr is\n               and then (Ekind (Btyp) = E_General_Access_Type\n                           or else Ekind (Btyp) = E_Anonymous_Access_Type)\n             then\n-               --  Ada 0Y (AI-230): Check the accessibility of anonymous access\n-               --  types in record and array components. For a component defini\n-               --  tion the level is the same of the enclosing composite type.\n+               --  Ada 2005 (AI-230): Check the accessibility of anonymous\n+               --  access types in record and array components. For a\n+               --  component definition the level is the same of the\n+               --  enclosing composite type.\n \n-               if Extensions_Allowed\n+               if Ada_Version >= Ada_05\n                  and then Ekind (Btyp) = E_Anonymous_Access_Type\n                  and then (Is_Array_Type (Scope (Btyp))\n                              or else Ekind (Scope (Btyp)) = E_Record_Type)\n-                 and then Object_Access_Level (P)\n-                            > Type_Access_Level (Btyp)\n+                 and then Object_Access_Level (P) > Type_Access_Level (Btyp)\n                then\n                   --  In an instance, this is a runtime check, but one we\n                   --  know will fail, so generate an appropriate warning."}, {"sha": "1ad1baa6ac58f5e352b7b0a09b45e857b7e3ec42", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -761,7 +761,7 @@ package body Sem_Cat is\n          return;\n       end if;\n \n-      --  Ada0Y (AI-50217): Process explicit with_clauses that are not limited\n+      --  Ada 2005 (AI-50217): Process explicit non-limited with_clauses\n \n       declare\n          Item             : Node_Id;"}, {"sha": "31ddc659dbaf031af74994028b7246230ee8ab0c", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -76,7 +76,7 @@ package body Sem_Ch10 is\n    --  in a limited_with clause. If the package was not previously analyzed\n    --  then it also performs a basic decoration of the real entities; this\n    --  is required to do not pass non-decorated entities to the back-end.\n-   --  Implements Ada 0Y (AI-50217).\n+   --  Implements Ada 2005 (AI-50217).\n \n    procedure Check_Body_Needed_For_SAL (Unit_Name : Entity_Id);\n    --  Check whether the source for the body of a compilation unit must\n@@ -100,7 +100,7 @@ package body Sem_Ch10 is\n    --  through a regular with clause. This procedure creates the implicit\n    --  limited with_clauses for the parents and loads the corresponding units.\n    --  The shadow entities are created when the inserted clause is analyzed.\n-   --  Implements Ada 0Y (AI-50217).\n+   --  Implements Ada 2005 (AI-50217).\n \n    procedure Expand_With_Clause (Nam : Node_Id; N : Node_Id);\n    --  When a child unit appears in a context clause, the implicit withs on\n@@ -128,11 +128,11 @@ package body Sem_Ch10 is\n \n    procedure Install_Limited_Context_Clauses (N : Node_Id);\n    --  Subsidiary to Install_Context. Process only limited with_clauses\n-   --  for current unit. Implements Ada 0Y (AI-50217).\n+   --  for current unit. Implements Ada 2005 (AI-50217).\n \n    procedure Install_Limited_Withed_Unit (N : Node_Id);\n    --  Place shadow entities for a limited_with package in the visibility\n-   --  structures for the current compilation. Implements Ada 0Y (AI-50217).\n+   --  structures for the current compilation. Implements Ada 2005 (AI-50217).\n \n    procedure Install_Withed_Unit\n      (With_Clause     : Node_Id;\n@@ -181,7 +181,7 @@ package body Sem_Ch10 is\n \n    procedure Remove_Limited_With_Clause (N : Node_Id);\n    --  Remove from visibility the shadow entities introduced for a package\n-   --  mentioned in a limited_with clause. Implements Ada 0Y (AI-50217).\n+   --  mentioned in a limited_with clause. Implements Ada 2005 (AI-50217).\n \n    procedure Remove_Parents (Lib_Unit : Node_Id);\n    --  Remove_Parents checks if Lib_Unit is a child spec. If so then the parent\n@@ -619,7 +619,7 @@ package body Sem_Ch10 is\n             Item := First (Context_Items (N));\n             while Present (Item) loop\n \n-               --  Ada 0Y (AI-50217): Do not consider limited-withed units\n+               --  Ada 2005 (AI-50217): Do not consider limited-withed units\n \n                if Nkind (Item) = N_With_Clause\n                   and then not Implicit_With (Item)\n@@ -798,8 +798,8 @@ package body Sem_Ch10 is\n       --  Loop through context items. This is done is three passes:\n       --  a) The first pass analyze non-limited with-clauses.\n       --  b) The second pass add implicit limited_with clauses for\n-      --     the parents of child units (Ada 0Y: AI-50217)\n-      --  c) The third pass analyzes limited_with clauses (Ada 0Y: AI-50217)\n+      --     the parents of child units (Ada 2005: AI-50217)\n+      --  c) The third pass analyzes limited_with clauses (Ada 2005: AI-50217)\n \n       Item := First (Context_Items (N));\n       while Present (Item) loop\n@@ -1616,7 +1616,7 @@ package body Sem_Ch10 is\n \n    begin\n       if Limited_Present (N) then\n-         --  Ada 0Y (AI-50217): Build visibility structures but do not\n+         --  Ada 2005 (AI-50217): Build visibility structures but do not\n          --  analyze unit\n \n          Build_Limited_Views (N);\n@@ -1818,9 +1818,9 @@ package body Sem_Ch10 is\n          null;\n       end if;\n \n-      --  Ada 0Y (AI-262): Remove from visibility the entity corresponding to\n-      --  private_with units; they will be made visible later (just before the\n-      --  private part is analyzed)\n+      --  Ada 2005 (AI-262): Remove from visibility the entity corresponding\n+      --  to private_with units; they will be made visible later (just before\n+      --  the private part is analyzed)\n \n       if Private_Present (N) then\n          Set_Is_Immediately_Visible (E_Name, False);\n@@ -2164,6 +2164,7 @@ package body Sem_Ch10 is\n                    or else Nkind (Lib_Unit) = N_Subprogram_Body)\n       then\n          Check_Parent_Context (Library_Unit (N));\n+\n          if Is_Child_Spec (Unit (Library_Unit (N))) then\n             Check_Parent_Context (Parent_Spec (Unit (Library_Unit (N))));\n          end if;\n@@ -2239,8 +2240,8 @@ package body Sem_Ch10 is\n       Item := First (Context_Items (N));\n       while Present (Item) loop\n \n-         --  Ada 0Y (AI-262): Allow private_with of a private child package in\n-         --  public siblings\n+         --  Ada 2005 (AI-262): Allow private_with of a private child package\n+         --  in public siblings\n \n          if Nkind (Item) = N_With_Clause\n             and then not Implicit_With (Item)\n@@ -3216,7 +3217,7 @@ package body Sem_Ch10 is\n             then\n                Set_Is_Immediately_Visible (Id);\n \n-               --  Ada 0Y (AI-262): Make visible the private entities of\n+               --  Ada 2005 (AI-262): Make visible the private entities of\n                --  private-withed siblings\n \n                if Private_Present (Item) then\n@@ -3366,7 +3367,7 @@ package body Sem_Ch10 is\n                    or else (Is_Child_Package\n                              and then Is_Visible_Child_Unit (P)))\n       then\n-         --  Ada 0Y (AI-262): Install the private declarations of P\n+         --  Ada 2005 (AI-262): Install the private declarations of P\n \n          if Private_Present (N)\n            and then not In_Private_Part (P)\n@@ -3508,7 +3509,7 @@ package body Sem_Ch10 is\n       P     : constant Entity_Id := Scope (Uname);\n \n    begin\n-      --  Ada 0Y (AI-262): Do not install the private withed unit if we are\n+      --  Ada 2005 (AI-262): Do not install the private withed unit if we are\n       --  compiling a package declaration and the Private_With_OK flag was not\n       --  set by the caller. These declarations will be installed later (before\n       --  analyzing the private part of the package).\n@@ -4011,7 +4012,7 @@ package body Sem_Ch10 is\n \n       Last_Pub_Lim_E := Last_Lim_E;\n \n-      --  Ada 0Y (AI-262): Add the limited view of the private declarations\n+      --  Ada 2005 (AI-262): Add the limited view of the private declarations\n       --  Required to give support to limited-private-with clauses\n \n       Build_Chain (Scope      => P,\n@@ -4153,7 +4154,7 @@ package body Sem_Ch10 is\n       Unit_Name : Entity_Id;\n \n    begin\n-      --  Ada 0Y (AI-50217): We remove the context clauses in two phases:\n+      --  Ada 2005 (AI-50217): We remove the context clauses in two phases:\n       --  limited-views first and regular-views later (to maintain the\n       --  stack model).\n "}, {"sha": "e2918ae2d2f15880619aac7c0df6909473033133", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -99,7 +99,6 @@ package body Sem_Ch11 is\n          Handler := First_Non_Pragma (L);\n          while Present (Handler) loop\n             Id1 := First (Exception_Choices (Handler));\n-\n             while Present (Id1) loop\n \n                --  Only check against the exception choices which precede\n@@ -120,7 +119,9 @@ package body Sem_Ch11 is\n                        (\"exception choice duplicates &#\", Id, Id1);\n \n                   else\n-                     if Ada_83 and then Comes_From_Source (Id) then\n+                     if Ada_Version = Ada_83\n+                       and then Comes_From_Source (Id)\n+                     then\n                         Error_Msg_N\n                           (\"(Ada 83): duplicate exception choice&\", Id);\n                      end if;"}, {"sha": "8a531409b716904f3805b3648dbc4287eb6a018e", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -674,7 +674,7 @@ package body Sem_Ch12 is\n    --  generic is unit is validated, Set_Instance_Env completes Save_Env.\n \n    type Instance_Env is record\n-      Ada_83              : Boolean;\n+      Ada_Version         : Ada_Version_Type;\n       Instantiated_Parent : Assoc;\n       Exchanged_Views     : Elist_Id;\n       Hidden_Entities     : Elist_Id;\n@@ -1469,9 +1469,9 @@ package body Sem_Ch12 is\n \n       if K = E_Generic_In_Parameter then\n \n-         --  Ada 0Y (AI-287): Limited aggregates allowed in generic formals\n+         --  Ada 2005 (AI-287): Limited aggregates allowed in generic formals\n \n-         if not Extensions_Allowed and then Is_Limited_Type (T) then\n+         if Ada_Version < Ada_05 and then Is_Limited_Type (T) then\n             Error_Msg_N\n               (\"generic formal of mode IN must not be of limited type\", N);\n             Explain_Limited_Type (T, N);\n@@ -2384,7 +2384,7 @@ package body Sem_Ch12 is\n \n       elsif Ekind (Gen_Unit) /= E_Generic_Package then\n \n-         --  Ada 0Y (AI-50217): Instance can not be used in limited with_clause\n+         --  Ada 2005 (AI-50217): Cannot use instance in limited with_clause\n \n          if From_With_Type (Gen_Unit) then\n             Error_Msg_N\n@@ -5674,7 +5674,7 @@ package body Sem_Ch12 is\n       Saved : Instance_Env;\n \n    begin\n-      Saved.Ada_83              := Ada_83;\n+      Saved.Ada_Version         := Ada_Version;\n       Saved.Instantiated_Parent := Current_Instantiated_Parent;\n       Saved.Exchanged_Views     := Exchanged_Views;\n       Saved.Hidden_Entities     := Hidden_Entities;\n@@ -8072,7 +8072,7 @@ package body Sem_Ch12 is\n \n          elsif Is_Indefinite_Subtype (Act_T)\n             and then not Is_Indefinite_Subtype (A_Gen_T)\n-            and then Ada_95\n+            and then Ada_Version >= Ada_95\n          then\n             Error_Msg_NE\n               (\"actual for & must be a definite subtype\", Actual, Gen_T);\n@@ -8128,7 +8128,7 @@ package body Sem_Ch12 is\n \n                   elsif not Subtypes_Statically_Match\n                               (Formal_Subt, Etype (Actual_Discr))\n-                    and then Ada_95\n+                    and then Ada_Version >= Ada_95\n                   then\n                      Error_Msg_NE\n                        (\"subtypes of actual discriminants must match formal\",\n@@ -8791,7 +8791,7 @@ package body Sem_Ch12 is\n       Saved : Instance_Env renames Instance_Envs.Table (Instance_Envs.Last);\n \n    begin\n-      Ada_83                       := Saved.Ada_83;\n+      Ada_Version := Saved.Ada_Version;\n \n       if No (Current_Instantiated_Parent.Act_Id) then\n \n@@ -9751,12 +9751,13 @@ package body Sem_Ch12 is\n \n    begin\n       --  Regardless of the current mode, predefined units are analyzed in\n-      --  Ada95 mode, and Ada83 checks don't apply.\n+      --  the most current Ada mode, and earlier version Ada checks do not\n+      --  apply to predefined units.\n \n       if Is_Internal_File_Name\n           (Fname => Unit_File_Name (Get_Source_Unit (Gen_Unit)),\n            Renamings_Included => True) then\n-         Ada_83 := False;\n+         Ada_Version := Ada_Version_Type'Last;\n       end if;\n \n       Current_Instantiated_Parent := (Gen_Unit, Act_Unit, Assoc_Null);"}, {"sha": "0656bde166829b2a182d6aff01707107fc18aafd", "filename": "gcc/ada/sem_ch2.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch2.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -103,7 +103,6 @@ package body Sem_Ch2 is\n \n    procedure Analyze_String_Literal (N : Node_Id) is\n    begin\n-\n       --  The type is eventually inherited from the context. If expansion\n       --  has already established the proper type, do not modify it.\n \n@@ -115,7 +114,7 @@ package body Sem_Ch2 is\n       --  turns out to be non-static, then the Is_Static_Expression flag\n       --  will be reset in Eval_String_Literal.\n \n-      if Ada_95 then\n+      if Ada_Version >= Ada_95 then\n          Set_Is_Static_Expression (N);\n       end if;\n "}, {"sha": "b81cac9052ddd334501554369844d01ebeb798c5", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 64, "deletions": 63, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -677,7 +677,7 @@ package body Sem_Ch3 is\n          Error_Msg_N (\"task entries cannot have access parameters\", N);\n       end if;\n \n-      --  Ada 0Y (AI-254): In case of anonymous access to subprograms\n+      --  Ada 2005 (AI-254): In case of anonymous access to subprograms\n       --  call the corresponding semantic routine\n \n       if Present (Access_To_Subprogram_Definition (N)) then\n@@ -705,11 +705,12 @@ package body Sem_Ch3 is\n       Init_Size_Align        (Anon_Type);\n       Set_Depends_On_Private (Anon_Type, Has_Private_Component (Anon_Type));\n \n-      --  Ada 0Y (AI-231): Ada 0Y semantics for anonymous access differs from\n-      --  Ada 95 semantics. In Ada 0Y, anonymous access must specify if the\n-      --  null value is allowed; in Ada 95 the null value is not allowed\n+      --  Ada 2005 (AI-231): Ada 2005 semantics for anonymous access differs\n+      --  from Ada 95 semantics. In Ada 2005, anonymous access must specify\n+      --  if the null value is allowed. In Ada 95 the null value is never\n+      --  allowed.\n \n-      if Extensions_Allowed then\n+      if Ada_Version >= Ada_05 then\n          Set_Can_Never_Be_Null (Anon_Type, Null_Exclusion_Present (N));\n       else\n          Set_Can_Never_Be_Null (Anon_Type, True);\n@@ -721,12 +722,12 @@ package body Sem_Ch3 is\n \n       Set_Is_Public (Anon_Type, Is_Public (Scope (Anon_Type)));\n \n-      --  Ada 0Y (AI-50217): Propagate the attribute that indicates that the\n+      --  Ada 2005 (AI-50217): Propagate the attribute that indicates that the\n       --  designated type comes from the limited view (for back-end purposes).\n \n       Set_From_With_Type (Anon_Type, From_With_Type (Desig_Type));\n \n-      --  Ada 0Y (AI-231): Propagate the access-constant attribute\n+      --  Ada 2005 (AI-231): Propagate the access-constant attribute\n \n       Set_Is_Access_Constant (Anon_Type, Constant_Present (N));\n \n@@ -836,7 +837,7 @@ package body Sem_Ch3 is\n       Init_Size_Align              (T_Name);\n       Set_Directly_Designated_Type (T_Name, Desig_Type);\n \n-      --  Ada 0Y (AI-231): Propagate the null-excluding attribute\n+      --  Ada 2005 (AI-231): Propagate the null-excluding attribute\n \n       Set_Can_Never_Be_Null (T_Name, Null_Exclusion_Present (T_Def));\n \n@@ -899,9 +900,9 @@ package body Sem_Ch3 is\n       --  access type is also imported, and therefore restricted in its use.\n       --  The access type may already be imported, so keep setting otherwise.\n \n-      --  Ada 0Y (AI-50217): If the non-limited view of the designated type is\n-      --  available, use it as the designated type of the access type, so that\n-      --  the back-end gets a usable entity.\n+      --  Ada 2005 (AI-50217): If the non-limited view of the designated type\n+      --  is available, use it as the designated type of the access type, so\n+      --  that the back-end gets a usable entity.\n \n       declare\n          N_Desig : Entity_Id;\n@@ -933,7 +934,7 @@ package body Sem_Ch3 is\n       Set_Has_Task (T, False);\n       Set_Has_Controlled_Component (T, False);\n \n-      --  Ada 0Y (AI-231): Propagate the null-excluding and access-constant\n+      --  Ada 2005 (AI-231): Propagate the null-excluding and access-constant\n       --  attributes\n \n       Set_Can_Never_Be_Null  (T, Null_Exclusion_Present (Def));\n@@ -957,7 +958,7 @@ package body Sem_Ch3 is\n          T := Find_Type_Of_Object\n                 (Subtype_Indication (Component_Definition (N)), N);\n \n-      --  Ada 0Y (AI-230): Access Definition case\n+      --  Ada 2005 (AI-230): Access Definition case\n \n       else\n          pragma Assert (Present\n@@ -967,13 +968,13 @@ package body Sem_Ch3 is\n                 (Related_Nod => N,\n                  N => Access_Definition (Component_Definition (N)));\n \n-         --  Ada 0Y (AI-230): In case of components that are anonymous access\n-         --  types the level of accessibility depends on the enclosing type\n-         --  declaration\n+         --  Ada 2005 (AI-230): In case of components that are anonymous\n+         --  access types the level of accessibility depends on the enclosing\n+         --  type declaration\n \n-         Set_Scope (T, Current_Scope); --  Ada 0Y (AI-230)\n+         Set_Scope (T, Current_Scope); -- Ada 2005 (AI-230)\n \n-         --  Ada 0Y (AI-254)\n+         --  Ada 2005 (AI-254)\n \n          if Present (Access_To_Subprogram_Definition\n                       (Access_Definition (Component_Definition (N))))\n@@ -1041,10 +1042,10 @@ package body Sem_Ch3 is\n       Set_Etype (Id, T);\n       Set_Is_Aliased (Id, Aliased_Present (Component_Definition (N)));\n \n-      --  Ada 0Y (AI-231): Propagate the null-excluding attribute and carry\n+      --  Ada 2005 (AI-231): Propagate the null-excluding attribute and carry\n       --  out some static checks\n \n-      if Extensions_Allowed\n+      if Ada_Version >= Ada_05\n         and then (Null_Exclusion_Present (Component_Definition (N))\n                     or else Can_Never_Be_Null (T))\n       then\n@@ -1600,10 +1601,10 @@ package body Sem_Ch3 is\n          end if;\n       end if;\n \n-      --  Ada 0Y (AI-231): Propagate the null-excluding attribute and carry\n+      --  Ada 2005 (AI-231): Propagate the null-excluding attribute and carry\n       --  out some static checks\n \n-      if Extensions_Allowed\n+      if Ada_Version >= Ada_05\n         and then (Null_Exclusion_Present (N)\n                     or else Can_Never_Be_Null (T))\n       then\n@@ -1633,7 +1634,7 @@ package body Sem_Ch3 is\n          --  In Ada 83, deferred constant must be of private type\n \n          elsif not Is_Private_Type (T) then\n-            if Ada_83 and then Comes_From_Source (N) then\n+            if Ada_Version = Ada_83 and then Comes_From_Source (N) then\n                Error_Msg_N\n                  (\"(Ada 83) deferred constant must be private type\", N);\n             end if;\n@@ -1775,7 +1776,7 @@ package body Sem_Ch3 is\n             --  Not allowed in Ada 83\n \n             if not Constant_Present (N) then\n-               if Ada_83\n+               if Ada_Version = Ada_83\n                  and then Comes_From_Source (Object_Definition (N))\n                then\n                   Error_Msg_N\n@@ -2449,8 +2450,8 @@ package body Sem_Ch3 is\n                Set_Directly_Designated_Type\n                                      (Id, Designated_Type       (T));\n \n-               --  Ada 0Y (AI-231): Propagate the null-excluding attribute and\n-               --  carry out some static checks\n+               --  Ada 2005 (AI-231): Propagate the null-excluding attribute\n+               --  and carry out some static checks\n \n                if Null_Exclusion_Present (N)\n                  or else Can_Never_Be_Null (T)\n@@ -2461,7 +2462,7 @@ package body Sem_Ch3 is\n                     and then Can_Never_Be_Null (T)\n                   then\n                      Error_Msg_N\n-                       (\"(Ada 0Y) null exclusion not allowed if parent \"\n+                       (\"(Ada 2005) null exclusion not allowed if parent \"\n                         & \"is already non-null\", Subtype_Indication (N));\n                   end if;\n                end if;\n@@ -2651,9 +2652,9 @@ package body Sem_Ch3 is\n \n       --  The full view, if present, now points to the current type\n \n-      --  Ada 0Y (AI-50217): If the type was previously decorated when imported\n-      --  through a LIMITED WITH clause, it appears as incomplete but has no\n-      --  full view.\n+      --  Ada 2005 (AI-50217): If the type was previously decorated when\n+      --  imported through a LIMITED WITH clause, it appears as incomplete\n+      --  but has no full view.\n \n       if Ekind (Prev) = E_Incomplete_Type\n         and then Present (Full_View (Prev))\n@@ -2969,20 +2970,20 @@ package body Sem_Ch3 is\n          Element_Type := Process_Subtype (Subtype_Indication (Component_Def),\n                                           P, Related_Id, 'C');\n \n-      --  Ada 0Y (AI-230): Access Definition case\n+      --  Ada 2005 (AI-230): Access Definition case\n \n       else pragma Assert (Present (Access_Definition (Component_Def)));\n          Element_Type := Access_Definition\n                            (Related_Nod => Related_Id,\n                             N           => Access_Definition (Component_Def));\n \n-         --  Ada 0Y (AI-230): In case of components that are anonymous access\n-         --  types the level of accessibility depends on the enclosing type\n-         --  declaration\n+         --  Ada 2005 (AI-230): In case of components that are anonymous\n+         --  access types the level of accessibility depends on the enclosing\n+         --  type declaration\n \n-         Set_Scope (Element_Type, Current_Scope); --  Ada 0Y (AI-230)\n+         Set_Scope (Element_Type, Current_Scope); -- Ada 2005 (AI-230)\n \n-         --  Ada 0Y (AI-254)\n+         --  Ada 2005 (AI-254)\n \n          declare\n             CD : constant Node_Id :=\n@@ -3065,10 +3066,10 @@ package body Sem_Ch3 is\n          Set_Has_Aliased_Components (Etype (T));\n       end if;\n \n-      --  Ada 0Y (AI-231): Propagate the null-excluding attribute to the array\n-      --  to ensure that objects of this type are initialized\n+      --  Ada 2005 (AI-231): Propagate the null-excluding attribute to the\n+      --  array to ensure that objects of this type are initialized.\n \n-      if Extensions_Allowed\n+      if Ada_Version >= Ada_05\n         and then (Null_Exclusion_Present (Component_Definition (Def))\n                     or else Can_Never_Be_Null (Element_Type))\n       then\n@@ -3078,7 +3079,7 @@ package body Sem_Ch3 is\n            and then Can_Never_Be_Null (Element_Type)\n          then\n             Error_Msg_N\n-              (\"(Ada 0Y) already a null-excluding type\",\n+              (\"(Ada 2005) already a null-excluding type\",\n                Subtype_Indication (Component_Definition (Def)));\n          end if;\n       end if;\n@@ -3297,7 +3298,7 @@ package body Sem_Ch3 is\n                               Has_Private_Component (Derived_Type));\n       Conditional_Delay      (Derived_Type, Subt);\n \n-      --  Ada 0Y (AI-231). Set the null-exclusion attribute\n+      --  Ada 2005 (AI-231). Set the null-exclusion attribute\n \n       if Null_Exclusion_Present (Type_Definition (N))\n         or else Can_Never_Be_Null (Parent_Type)\n@@ -6622,12 +6623,12 @@ package body Sem_Ch3 is\n         and then not In_Instance\n         and then not In_Inlined_Body\n       then\n-         --  Ada 0Y (AI-287): Relax the strictness of the front-end in case of\n-         --  limited aggregates and extension aggregates.\n+         --  Ada 2005 (AI-287): Relax the strictness of the front-end in\n+         --  case of limited aggregates and extension aggregates.\n \n-         if Extensions_Allowed\n+         if Ada_Version >= Ada_05\n            and then (Nkind (Exp) = N_Aggregate\n-                     or else Nkind (Exp) = N_Extension_Aggregate)\n+                      or else Nkind (Exp) = N_Extension_Aggregate)\n          then\n             null;\n          else\n@@ -6668,10 +6669,10 @@ package body Sem_Ch3 is\n                Set_Is_Immediately_Visible (D);\n                Set_Homonym (D, Prev);\n \n-               --  Ada 0Y (AI-230): Access discriminant allowed in non-limited\n-               --  record types\n+               --  Ada 2005 (AI-230): Access discriminant allowed in\n+               --  non-limited record types.\n \n-               if not Extensions_Allowed then\n+               if Ada_Version < Ada_05 then\n \n                   --  This restriction gets applied to the full type here; it\n                   --  has already been applied earlier to the partial view\n@@ -9416,13 +9417,13 @@ package body Sem_Ch3 is\n       elsif Is_Unchecked_Union (Parent_Type) then\n          Error_Msg_N (\"cannot derive from Unchecked_Union type\", N);\n \n-      --  Ada 0Y (AI-231): Static check\n+      --  Ada 2005 (AI-231): Static check\n \n       elsif Is_Access_Type (Parent_Type)\n         and then Null_Exclusion_Present (Type_Definition (N))\n         and then Can_Never_Be_Null (Parent_Type)\n       then\n-         Error_Msg_N (\"(Ada 0Y) null exclusion not allowed if parent is \"\n+         Error_Msg_N (\"(Ada 2005) null exclusion not allowed if parent is \"\n                       & \"already non-null\", Type_Definition (N));\n       end if;\n \n@@ -9444,11 +9445,11 @@ package body Sem_Ch3 is\n       --  be used for further derivation until the end of its visible part.\n       --  Note that derivation in the private part of the package is allowed.\n \n-      if Ada_83\n+      if Ada_Version = Ada_83\n         and then Is_Derived_Type (Parent_Type)\n         and then In_Visible_Part (Scope (Parent_Type))\n       then\n-         if Ada_83 and then Comes_From_Source (Indic) then\n+         if Ada_Version = Ada_83 and then Comes_From_Source (Indic) then\n             Error_Msg_N\n               (\"(Ada 83): premature use of type for derivation\", Indic);\n          end if;\n@@ -10996,7 +10997,7 @@ package body Sem_Ch3 is\n \n             elsif T = Any_Character then\n \n-               if not Ada_83 then\n+               if Ada_Version >= Ada_95 then\n                   Error_Msg_N\n                     (\"ambiguous character literals (could be Wide_Character)\",\n                       I);\n@@ -11609,7 +11610,7 @@ package body Sem_Ch3 is\n          if Nkind (Discriminant_Type (Discr)) = N_Access_Definition then\n             Discr_Type := Access_Definition (N, Discriminant_Type (Discr));\n \n-            --  Ada 0Y (AI-254)\n+            --  Ada 2005 (AI-254)\n \n             if Present (Access_To_Subprogram_Definition\n                          (Discriminant_Type (Discr)))\n@@ -11632,15 +11633,15 @@ package body Sem_Ch3 is\n \n          if Is_Access_Type (Discr_Type) then\n \n-            --  Ada 0Y (AI-230): Access discriminant allowed in non-limited\n+            --  Ada 2005 (AI-230): Access discriminant allowed in non-limited\n             --  record types\n \n-            if not Extensions_Allowed then\n+            if Ada_Version < Ada_05 then\n                Check_Access_Discriminant_Requires_Limited\n                  (Discr, Discriminant_Type (Discr));\n             end if;\n \n-            if Ada_83 and then Comes_From_Source (Discr) then\n+            if Ada_Version = Ada_83 and then Comes_From_Source (Discr) then\n                Error_Msg_N\n                  (\"(Ada 83) access discriminant not allowed\", Discr);\n             end if;\n@@ -11694,10 +11695,10 @@ package body Sem_Ch3 is\n             Default_Not_Present := True;\n          end if;\n \n-         --  Ada 0Y (AI-231): Set the null-excluding attribute and carry out\n-         --  some static checks\n+         --  Ada 2005 (AI-231): Set the null-excluding attribute and carry\n+         --  out some static checks.\n \n-         if Extensions_Allowed\n+         if Ada_Version >= Ada_05\n            and then (Null_Exclusion_Present (Discr)\n                        or else Can_Never_Be_Null (Discr_Type))\n          then\n@@ -12470,16 +12471,16 @@ package body Sem_Ch3 is\n          Find_Type (S);\n          Check_Incomplete (S);\n \n-         --  Ada 0Y (AI-231): Static check\n+         --  Ada 2005 (AI-231): Static check\n \n-         if Extensions_Allowed\n+         if Ada_Version >= Ada_05\n            and then Present (Parent (S))\n            and then Null_Exclusion_Present (Parent (S))\n            and then Nkind (Parent (S)) /= N_Access_To_Object_Definition\n            and then not Is_Access_Type (Entity (S))\n          then\n             Error_Msg_N\n-              (\"(Ada 0Y) null-exclusion part requires an access type\", S);\n+              (\"(Ada 2005) null-exclusion part requires an access type\", S);\n          end if;\n          return Entity (S);\n "}, {"sha": "2fa14209bc2cabf4bfd833a7d5d10d243738ed83", "filename": "gcc/ada/sem_ch3.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.ads?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -209,12 +209,12 @@ package Sem_Ch3  is\n    function Replace_Anonymous_Access_To_Protected_Subprogram\n      (N      : Node_Id;\n       Prev_E : Entity_Id) return Entity_Id;\n-   --  Ada 0Y (AI-254): Create and decorate an internal full type declaration\n-   --  in the enclosing scope corresponding to an anonymous access to protected\n-   --  subprogram. In addition, replace the anonymous access by an occurrence\n-   --  of this internal type. Prev_Etype is used to link the new internal\n-   --  entity with the anonymous entity. Return the entity of this type\n-   --  declaration.\n+   --  Ada 2005 (AI-254): Create and decorate an internal full type\n+   --  declaration in the enclosing scope corresponding to an anonymous\n+   --  access to protected subprogram. In addition, replace the anonymous\n+   --  access by an occurrence of this internal type. Prev_Etype is used\n+   --  to link the new internal entity with the anonymous entity. Return\n+   --  the entity of this type declaration.\n \n    procedure Set_Completion_Referenced (E : Entity_Id);\n    --  If E is the completion of a private or incomplete  type declaration,"}, {"sha": "e84044e74c00b693fbf399bb5126c8699e597f29", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -336,12 +336,12 @@ package body Sem_Ch4 is\n            and then Comes_From_Source (N)\n            and then not In_Instance_Body\n          then\n-            --  Ada 0Y (AI-287): Do not post an error if the expression\n+            --  Ada 2005 (AI-287): Do not post an error if the expression\n             --  corresponds to a limited aggregate. Limited aggregates\n             --  are checked in sem_aggr in a per-component manner\n             --  (compare with handling of Get_Value subprogram).\n \n-            if Extensions_Allowed\n+            if Ada_Version >= Ada_05\n               and then Nkind (Expression (E)) = N_Aggregate\n             then\n                null;\n@@ -393,7 +393,7 @@ package body Sem_Ch4 is\n                Find_Type (Subtype_Mark (E));\n \n                if Is_Elementary_Type (Entity (Subtype_Mark (E))) then\n-                  if not (Ada_83\n+                  if not (Ada_Version = Ada_83\n                            and then Is_Access_Type (Entity (Subtype_Mark (E))))\n                   then\n                      Error_Msg_N (\"constraint not allowed here\", E);\n@@ -444,10 +444,10 @@ package body Sem_Ch4 is\n             Set_Directly_Designated_Type (Acc_Type, Type_Id);\n             Check_Fully_Declared (Type_Id, N);\n \n-            --  Ada 0Y (AI-231)\n+            --  Ada 2005 (AI-231)\n \n             if Can_Never_Be_Null (Type_Id) then\n-               Error_Msg_N (\"(Ada 0Y) qualified expression required\",\n+               Error_Msg_N (\"(Ada 2005) qualified expression required\",\n                             Expression (N));\n             end if;\n \n@@ -494,9 +494,9 @@ package body Sem_Ch4 is\n          Check_Restriction (No_Local_Allocators, N);\n       end if;\n \n-      --  Ada 0Y (AI-231): Static checks\n+      --  Ada 2005 (AI-231): Static checks\n \n-      if Extensions_Allowed\n+      if Ada_Version >= Ada_05\n         and then (Null_Exclusion_Present (N)\n                     or else Can_Never_Be_Null (Etype (N)))\n       then\n@@ -2435,7 +2435,7 @@ package body Sem_Ch4 is\n          end if;\n       end if;\n \n-      if Ada_83\n+      if Ada_Version = Ada_83\n         and then\n           (Nkind (Parent (N)) = N_Loop_Parameter_Specification\n             or else Nkind (Parent (N)) = N_Constrained_Array_Definition)\n@@ -3082,7 +3082,7 @@ package body Sem_Ch4 is\n          Error_Msg_N (\"\\use qualified expression instead\", N);\n \n       elsif Nkind (Expr) = N_Character_Literal then\n-         if Ada_83 then\n+         if Ada_Version = Ada_83 then\n             Resolve (Expr, T);\n          else\n             Error_Msg_N (\"argument of conversion cannot be character literal\",\n@@ -3480,12 +3480,12 @@ package body Sem_Ch4 is\n       Void_Interp_Seen : Boolean := False;\n \n    begin\n-      if Extensions_Allowed then\n+      if Ada_Version >= Ada_05 then\n          Actual := First_Actual (N);\n-\n          while Present (Actual) loop\n-            --  Ada 0Y (AI-50217): Post an error in case of premature usage of\n-            --  an entity from the limited view.\n+\n+            --  Ada 2005 (AI-50217): Post an error in case of premature\n+            --  usage of an entity from the limited view.\n \n             if not Analyzed (Etype (Actual))\n              and then From_With_Type (Etype (Actual))\n@@ -3904,10 +3904,10 @@ package body Sem_Ch4 is\n             return;\n          end if;\n \n-         --  Ada 0Y (AI-230): Keep restriction imposed by Ada 83 and 95: Do not\n-         --  allow anonymous access types in equality operators.\n+         --  Ada 2005 (AI-230): Keep restriction imposed by Ada 83 and 95:\n+         --  Do not allow anonymous access types in equality operators.\n \n-         if not Extensions_Allowed\n+         if Ada_Version < Ada_05\n            and then Ekind (T1) = E_Anonymous_Access_Type\n          then\n             return;\n@@ -4406,7 +4406,7 @@ package body Sem_Ch4 is\n               and then Is_Abstract (It.Nam)\n               and then not Is_Dispatching_Operation (It.Nam)\n               and then\n-                (Extensions_Allowed\n+                (Ada_Version >= Ada_05\n                    or else Is_Predefined_File_Name\n                              (Unit_File_Name (Get_Source_Unit (It.Nam))))\n \n@@ -4448,7 +4448,10 @@ package body Sem_Ch4 is\n \n                      Get_First_Interp (N, I, It);\n                      while Present (It.Nam) loop\n-                        if Scope (It.Nam) = Standard_Standard then\n+                        if Scope (It.Nam) = Standard_Standard\n+                          and then Base_Type (It.Typ) =\n+                                   Base_Type (Etype (Abstract_Op))\n+                        then\n                            Remove_Interp (I);\n                         end if;\n "}, {"sha": "6b799ee59797140e55acb2bcc139056bd63be2df", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -397,9 +397,9 @@ package body Sem_Ch5 is\n          Propagate_Tag (Lhs, Rhs);\n       end if;\n \n-      --  Ada 0Y (AI-231)\n+      --  Ada 2005 (AI-231)\n \n-      if Extensions_Allowed\n+      if Ada_Version >= Ada_05\n         and then Nkind (Rhs) = N_Null\n         and then Is_Access_Type (T1)\n         and then not Assignment_OK (Lhs)\n@@ -408,7 +408,7 @@ package body Sem_Ch5 is\n                    or else Can_Never_Be_Null (Etype (Lhs)))\n       then\n          Error_Msg_N\n-           (\"(Ada 0Y) NULL not allowed in null-excluding objects\", Lhs);\n+           (\"(Ada 2005) NULL not allowed in null-excluding objects\", Lhs);\n       end if;\n \n       if Is_Scalar_Type (T1) then\n@@ -685,7 +685,7 @@ package body Sem_Ch5 is\n            (\"character literal as case expression is ambiguous\", Exp);\n          return;\n \n-      elsif Ada_83\n+      elsif Ada_Version = Ada_83\n         and then (Is_Generic_Type (Exp_Btype)\n                     or else Is_Generic_Type (Root_Type (Exp_Btype)))\n       then"}, {"sha": "8d2b53c50d5d89544e4a0507abdcc2eeca89d153", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -1182,7 +1182,7 @@ package body Sem_Ch6 is\n          end if;\n       end if;\n \n-      --  Ada 0Y (AI-262): In library subprogram bodies, after the analysis\n+      --  Ada 2005 (AI-262): In library subprogram bodies, after the analysis\n       --  if its specification we have to install the private withed units.\n \n       if Is_Compilation_Unit (Body_Id)\n@@ -2163,7 +2163,7 @@ package body Sem_Ch6 is\n          --  skipped if either entity is an operator in package Standard.\n          --  or if either old or new instance is not from the source program.\n \n-         if Ada_83\n+         if Ada_Version = Ada_83\n            and then Sloc (Old_Id) > Standard_Location\n            and then Sloc (New_Id) > Standard_Location\n            and then Comes_From_Source (Old_Id)\n@@ -2406,7 +2406,7 @@ package body Sem_Ch6 is\n \n          --  In Ada 83 case, grouping must match: (A,B : X) /= (A : X; B : X)\n \n-         if Ada_83 then\n+         if Ada_Version = Ada_83 then\n             declare\n                Old_Disc : constant Node_Id := Declaration_Node (Old_Discr);\n \n@@ -3087,7 +3087,7 @@ package body Sem_Ch6 is\n            or else Subtypes_Statically_Match (Type_1, Full_View (Type_2));\n       end if;\n \n-      --  Ada 0Y (AI-254): Detect anonymous access to subprogram types.\n+      --  Ada 2005 (AI-254): Detect anonymous access to subprogram types\n \n       Are_Anonymous_Access_To_Subprogram_Types :=\n \n@@ -3118,7 +3118,7 @@ package body Sem_Ch6 is\n \n       if (Ekind (Type_1) = E_Anonymous_Access_Type\n             and then Ekind (Type_2) = E_Anonymous_Access_Type)\n-        or else Are_Anonymous_Access_To_Subprogram_Types --  Ada 0Y (AI-254)\n+        or else Are_Anonymous_Access_To_Subprogram_Types -- Ada 2005 (AI-254)\n       then\n          declare\n             Desig_1 : Entity_Id;\n@@ -4952,9 +4952,8 @@ package body Sem_Ch6 is\n                         and then Ekind (Root_Type (Formal_Type)) =\n                                                          E_Incomplete_Type)\n             then\n-               --  Ada 0Y (AI-50217): Incomplete tagged types that are made\n-               --  visible through a limited with_clause are valid formal\n-               --  types.\n+               --  Ada 2005 (AI-50217): Incomplete tagged types that are made\n+               --  visible by a limited with_clause are valid formal types.\n \n                if From_With_Type (Formal_Type)\n                  and then Is_Tagged_Type (Formal_Type)\n@@ -4972,7 +4971,7 @@ package body Sem_Ch6 is\n                  Parameter_Type (Param_Spec), Formal_Type);\n             end if;\n \n-            --  Ada 0Y (AI-231): Create and decorate an internal subtype\n+            --  Ada 2005 (AI-231): Create and decorate an internal subtype\n             --  declaration corresponding to the null-excluding type of the\n             --  formal in the enclosing scope. In addition, replace the\n             --  parameter type of the formal to this internal subtype.\n@@ -5033,7 +5032,7 @@ package body Sem_Ch6 is\n                end;\n             end if;\n \n-            --  Ada 0Y (AI-231): Static checks\n+            --  Ada 2005 (AI-231): Static checks\n \n             if Null_Exclusion_Present (Param_Spec)\n               or else Can_Never_Be_Null (Entity (Ptype))\n@@ -5047,7 +5046,7 @@ package body Sem_Ch6 is\n             Formal_Type :=\n               Access_Definition (Related_Nod, Parameter_Type (Param_Spec));\n \n-            --  Ada 0Y (AI-254)\n+            --  Ada 2005 (AI-254)\n \n             declare\n                AD : constant Node_Id :=\n@@ -5332,10 +5331,10 @@ package body Sem_Ch6 is\n \n       if Nkind (Parameter_Type (Spec)) = N_Access_Definition then\n \n-         --  Ada 0Y (AI-231): This behaviour has been modified in Ada 0Y.\n+         --  Ada 2005 (AI-231): This behaviour has been modified in Ada 2005.\n          --  It is only forced if the null_exclusion appears.\n \n-         if not Extensions_Allowed\n+         if Ada_Version < Ada_05\n            or else Null_Exclusion_Present (Spec)\n          then\n             Set_Is_Known_Non_Null (Formal_Id);"}, {"sha": "e69736523604fccb62375264f51c1bac450e3fb0", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -219,7 +219,7 @@ package body Sem_Ch7 is\n                or else Is_Child_Unit (Spec_Id))\n            and then not Unit_Requires_Body (Spec_Id)\n          then\n-            if Ada_83 then\n+            if Ada_Version = Ada_83 then\n                Error_Msg_N\n                  (\"optional package body (not allowed in Ada 95)?\", N);\n             else"}, {"sha": "1b0d7b17511094a0ae8e10d8fb049d6050461caa", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 23, "deletions": 24, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -429,7 +429,7 @@ package body Sem_Ch8 is\n    --  Used to resolved qualified names whose selector is a character literal.\n \n    function Has_Private_With (E : Entity_Id) return Boolean;\n-   --  Ada 0Y (AI-262): Determines if the current compilation unit has a\n+   --  Ada 2005 (AI-262): Determines if the current compilation unit has a\n    --  private with on E\n \n    procedure Find_Expanded_Name (N : Node_Id);\n@@ -687,7 +687,7 @@ package body Sem_Ch8 is\n          T := Entity (Subtype_Mark (N));\n          Analyze_And_Resolve (Nam, T);\n \n-      --  Ada 0Y (AI-230/AI-254): Access renaming\n+      --  Ada 2005 (AI-230/AI-254): Access renaming\n \n       else pragma Assert (Present (Access_Definition (N)));\n          T := Access_Definition\n@@ -696,19 +696,19 @@ package body Sem_Ch8 is\n \n          Analyze_And_Resolve (Nam, T);\n \n-         --  Ada 0Y (AI-231): \"In the case where the type is defined by an\n+         --  Ada 2005 (AI-231): \"In the case where the type is defined by an\n          --  access_definition, the renamed entity shall be of an access-to-\n          --  constant type if and only if the access_definition defines an\n          --  access-to-constant type\" ARM 8.5.1(4)\n \n          if Constant_Present (Access_Definition (N))\n            and then not Is_Access_Constant (Etype (Nam))\n          then\n-            Error_Msg_N (\"(Ada 0Y): the renamed object is not \"\n+            Error_Msg_N (\"(Ada 2005): the renamed object is not \"\n                          & \"access-to-constant ('R'M 8.5.1(6))\", N);\n \n          elsif Null_Exclusion_Present (Access_Definition (N)) then\n-            Error_Msg_N (\"(Ada 0Y): null-excluding attribute ignored \"\n+            Error_Msg_N (\"(Ada 2005): null-excluding attribute ignored \"\n                          & \"('R'M 8.5.1(6))?\", N);\n          end if;\n       end if;\n@@ -820,7 +820,7 @@ package body Sem_Ch8 is\n          Error_Msg_N\n            (\"expect package name in renaming\", Name (N));\n \n-      --  Ada 0Y (AI-50217): Limited withed packages can not be renamed\n+      --  Ada 2005 (AI-50217): Limited withed packages can not be renamed\n \n       elsif Ekind (Old_P) = E_Package\n         and then From_With_Type (Old_P)\n@@ -1096,9 +1096,9 @@ package body Sem_Ch8 is\n    ---------------------------------\n \n    procedure Analyze_Subprogram_Renaming (N : Node_Id) is\n-      Spec        : constant Node_Id := Specification (N);\n-      Save_83     : constant Boolean := Ada_83;\n-      Nam         : constant Node_Id := Name (N);\n+      Spec        : constant Node_Id          := Specification (N);\n+      Save_AV     : constant Ada_Version_Type := Ada_Version;\n+      Nam         : constant Node_Id          := Name (N);\n       New_S       : Entity_Id;\n       Old_S       : Entity_Id  := Empty;\n       Rename_Spec : Entity_Id;\n@@ -1279,7 +1279,7 @@ package body Sem_Ch8 is\n \n          Set_Has_Completion (Rename_Spec, Inside_A_Generic);\n \n-         if Ada_83 and then Comes_From_Source (N) then\n+         if Ada_Version = Ada_83 and then Comes_From_Source (N) then\n             Error_Msg_N (\"(Ada 83) renaming cannot serve as a body\", N);\n          end if;\n \n@@ -1363,14 +1363,13 @@ package body Sem_Ch8 is\n       --  between renamed entity and new entity, even though the same circuit\n       --  is used.\n \n-      Ada_83 := False;\n+      Ada_Version := Ada_Version_Type'Max (Ada_Version, Ada_95);\n \n       if No (Old_S) then\n          Old_S := Find_Renamed_Entity (N, Name (N), New_S, Is_Actual);\n       end if;\n \n       if Old_S /= Any_Id then\n-\n          if Is_Actual\n            and then From_Default (N)\n          then\n@@ -1552,7 +1551,7 @@ package body Sem_Ch8 is\n          end if;\n       end if;\n \n-      Ada_83 := Save_83;\n+      Ada_Version := Save_AV;\n    end Analyze_Subprogram_Renaming;\n \n    -------------------------\n@@ -2409,7 +2408,7 @@ package body Sem_Ch8 is\n       --  rather than undefined.\n \n       Nvis_Is_Private_Subprg : Boolean := False;\n-      --  Ada 0Y (AI-262): Set True to indicate that a form of Beaujolais\n+      --  Ada 2005 (AI-262): Set True to indicate that a form of Beaujolais\n       --  effect concerning library subprograms has been detected. Used to\n       --  generate the precise error message.\n \n@@ -2579,7 +2578,7 @@ package body Sem_Ch8 is\n          Item      : Node_Id;\n \n       begin\n-         --  Ada 0Y (AI-262): Generate a precise error concerning the\n+         --  Ada 2005 (AI-262): Generate a precise error concerning the\n          --  Beaujolais effect that was previously detected\n \n          if Nvis_Is_Private_Subprg then\n@@ -2609,7 +2608,7 @@ package body Sem_Ch8 is\n \n             pragma Assert (Error_Msg_Sloc /= No_Location);\n \n-            Error_Msg_N (\"(Ada 0Y): hidden by private with clause #\", N);\n+            Error_Msg_N (\"(Ada 2005): hidden by private with clause #\", N);\n             return;\n          end if;\n \n@@ -2993,7 +2992,7 @@ package body Sem_Ch8 is\n                Only_One_Visible := False;\n                All_Overloadable := All_Overloadable and Is_Overloadable (E2);\n \n-            --  Ada 0Y (AI-262): Protect against a form of Beujolais effect\n+            --  Ada 2005 (AI-262): Protect against a form of Beujolais effect\n             --  that can occurr in private_with clauses. Example:\n \n             --    with A;\n@@ -3521,7 +3520,7 @@ package body Sem_Ch8 is\n          Set_Chars (Selector, Chars (Id));\n       end if;\n \n-      --  Ada 0Y (AI-50217): Check usage of entities in limited withed units\n+      --  Ada 2005 (AI-50217): Check usage of entities in limited withed units\n \n       if Ekind (P_Name) = E_Package\n         and then From_With_Type (P_Name)\n@@ -4307,18 +4306,18 @@ package body Sem_Ch8 is\n                Set_Etype (N, C);\n             end if;\n \n-         --  Base attribute, allowed in Ada 95 mode only\n+         --  Base attribute, not allowed in Ada 83\n \n          elsif Attribute_Name (N) = Name_Base then\n-            if Ada_83 and then Comes_From_Source (N) then\n+            if Ada_Version = Ada_83 and then Comes_From_Source (N) then\n                Error_Msg_N\n                  (\"(Ada 83) Base attribute not allowed in subtype mark\", N);\n \n             else\n                Find_Type (Prefix (N));\n                Typ := Entity (Prefix (N));\n \n-               if Ada_95\n+               if Ada_Version >= Ada_95\n                  and then not Is_Scalar_Type (Typ)\n                  and then not Is_Generic_Type (Typ)\n                then\n@@ -5456,7 +5455,7 @@ package body Sem_Ch8 is\n \n       Set_In_Use (P);\n \n-      --  Ada 0Y (AI-50217): Check restriction.\n+      --  Ada 2005 (AI-50217): Check restriction\n \n       if From_With_Type (P) then\n          Error_Msg_N (\"limited withed package cannot appear in use clause\", N);\n@@ -5488,7 +5487,7 @@ package body Sem_Ch8 is\n          Real_P := P;\n       end if;\n \n-      --  Ada 0Y (AI-262): Check the use_clause of a private withed package\n+      --  Ada 2005 (AI-262): Check the use_clause of a private withed package\n       --  found in the private part of a package specification\n \n       if In_Private_Part (Current_Scope)\n@@ -5506,7 +5505,7 @@ package body Sem_Ch8 is\n       Id := First_Entity (P);\n       while Present (Id)\n         and then (Id /= First_Private_Entity (P)\n-                    or else Private_With_OK) --  Ada 0Y (AI-262)\n+                    or else Private_With_OK) -- Ada 2005 (AI-262)\n       loop\n          Prev := Current_Entity (Id);\n "}, {"sha": "c81be0ec35310ca0a7903fbe039c4bbbe446843a", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -1715,7 +1715,7 @@ package body Sem_Ch9 is\n       New_Scope (T);\n \n       if Present (Discriminant_Specifications (N)) then\n-         if Ada_83 and then Comes_From_Source (N) then\n+         if Ada_Version = Ada_83 and then Comes_From_Source (N) then\n             Error_Msg_N (\"(Ada 83) task discriminant not allowed!\", N);\n          end if;\n "}, {"sha": "d248f07c7d27a672a69630f5568dc522dd551886", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -1241,7 +1241,7 @@ package body Sem_Eval is\n       --  Concatenation is never static in Ada 83, so if Ada 83\n       --  check operand non-static context\n \n-      if Ada_83\n+      if Ada_Version = Ada_83\n         and then Comes_From_Source (N)\n       then\n          Check_Non_Static_Context (Left);\n@@ -2226,7 +2226,7 @@ package body Sem_Eval is\n    begin\n       --  Short circuit operations are never static in Ada 83\n \n-      if Ada_83\n+      if Ada_Version = Ada_83\n         and then Comes_From_Source (N)\n       then\n          Check_Non_Static_Context (Left);\n@@ -2379,7 +2379,7 @@ package body Sem_Eval is\n       --  bound is type'First. In either case it is the upper bound that\n       --  is out of range of the index type.\n \n-      if Ada_95 then\n+      if Ada_Version >= Ada_95 then\n          if Root_Type (Bas) = Standard_String\n               or else\n             Root_Type (Bas) = Standard_Wide_String\n@@ -3556,7 +3556,7 @@ package body Sem_Eval is\n       if Is_Static_Expression (N)\n         and then not In_Instance\n         and then not In_Inlined_Body\n-        and then Ada_95\n+        and then Ada_Version >= Ada_95\n       then\n          if Nkind (Parent (N)) = N_Defining_Identifier\n            and then Is_Array_Type (Parent (N))"}, {"sha": "c5ee33c867f1fa3ef1df0facccbe44f1a40d05dc", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 32, "deletions": 10, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -573,7 +573,7 @@ package body Sem_Prag is\n \n       procedure Check_Ada_83_Warning is\n       begin\n-         if Ada_83 and then Comes_From_Source (N) then\n+         if Ada_Version = Ada_83 and then Comes_From_Source (N) then\n             Error_Msg_N (\"(Ada 83) pragma& is non-standard?\", N);\n          end if;\n       end Check_Ada_83_Warning;\n@@ -762,7 +762,9 @@ package body Sem_Prag is\n          --  pragmas like Import in Ada 83 mode. They will of course be\n          --  flagged with warnings as usual, but will not cause errors.\n \n-         elsif Ada_83 and then Nkind (Argx) = N_String_Literal then\n+         elsif Ada_Version = Ada_83\n+           and then Nkind (Argx) = N_String_Literal\n+         then\n             return;\n \n          --  Static expression that raises Constraint_Error. This has\n@@ -3973,12 +3975,11 @@ package body Sem_Prag is\n          --  pragma Ada_83;\n \n          --  Note: this pragma also has some specific processing in Par.Prag\n-         --  because we want to set the Ada 83 mode switch during parsing.\n+         --  because we want to set the Ada version mode during parsing.\n \n          when Pragma_Ada_83 =>\n             GNAT_Pragma;\n-            Ada_83 := True;\n-            Ada_95 := False;\n+            Ada_Version := Ada_83;\n             Check_Arg_Count (0);\n \n          ------------\n@@ -3988,12 +3989,25 @@ package body Sem_Prag is\n          --  pragma Ada_95;\n \n          --  Note: this pragma also has some specific processing in Par.Prag\n-         --  because we want to set the Ada 83 mode switch during parsing.\n+         --  because we want to set the Ada 83 version mode during parsing.\n \n          when Pragma_Ada_95 =>\n             GNAT_Pragma;\n-            Ada_83 := False;\n-            Ada_95 := True;\n+            Ada_Version := Ada_95;\n+            Check_Arg_Count (0);\n+\n+         ------------\n+         -- Ada_05 --\n+         ------------\n+\n+         --  pragma Ada_05;\n+\n+         --  Note: this pragma also has some specific processing in Par.Prag\n+         --  because we want to set the Ada 83 version mode during parsing.\n+\n+         when Pragma_Ada_05 =>\n+            GNAT_Pragma;\n+            Ada_Version := Ada_05;\n             Check_Arg_Count (0);\n \n          ----------------------\n@@ -5265,7 +5279,7 @@ package body Sem_Prag is\n             --  (e.g. those added by use of Rtsfind). In Ada 95 mode, this\n             --  placement rule does not apply.\n \n-            if Ada_83 and then Comes_From_Source (N) then\n+            if Ada_Version = Ada_83 and then Comes_From_Source (N) then\n                Citem := Next (N);\n \n                while Present (Citem) loop\n@@ -5934,7 +5948,14 @@ package body Sem_Prag is\n             Check_Arg_Count (1);\n             Check_No_Identifiers;\n             Check_Arg_Is_One_Of (Arg1, Name_On, Name_Off);\n-            Extensions_Allowed := (Chars (Expression (Arg1)) = Name_On);\n+\n+            if Chars (Expression (Arg1)) = Name_On then\n+               Extensions_Allowed := True;\n+               Ada_Version := Ada_Version_Type'Last;\n+            else\n+               Extensions_Allowed := False;\n+               Ada_Version := Ada_Version_Type'Min (Ada_Version, Ada_95);\n+            end if;\n \n          --------------\n          -- External --\n@@ -10040,6 +10061,7 @@ package body Sem_Prag is\n       Pragma_Abort_Defer                  => -1,\n       Pragma_Ada_83                       => -1,\n       Pragma_Ada_95                       => -1,\n+      Pragma_Ada_05                       => -1,\n       Pragma_All_Calls_Remote             => -1,\n       Pragma_Annotate                     => -1,\n       Pragma_Assert                       => -1,"}, {"sha": "0dcea1dfa9a73abf909b70215ca92bf0879107d0", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 121, "deletions": 65, "changes": 186, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -163,8 +163,7 @@ package body Sem_Res is\n \n    function Operator_Kind\n      (Op_Name   : Name_Id;\n-      Is_Binary : Boolean)\n-      return      Node_Kind;\n+      Is_Binary : Boolean) return Node_Kind;\n    --  Utility to map the name of an operator into the corresponding Node. Used\n    --  by other node rewriting procedures.\n \n@@ -198,9 +197,12 @@ package body Sem_Res is\n    --  that operands are resolved properly. Recall that predefined operators\n    --  do not have a full signature and special resolution rules apply.\n \n-   procedure Rewrite_Renamed_Operator (N : Node_Id; Op : Entity_Id);\n+   procedure Rewrite_Renamed_Operator\n+     (N   : Node_Id;\n+      Op  : Entity_Id;\n+      Typ : Entity_Id);\n    --  An operator can rename another, e.g. in  an instantiation. In that\n-   --  case, the proper operator node must be constructed.\n+   --  case, the proper operator node must be constructed and resolved.\n \n    procedure Set_String_Literal_Subtype (N : Node_Id; Typ : Entity_Id);\n    --  The String_Literal_Subtype is built for all strings that are not\n@@ -219,8 +221,7 @@ package body Sem_Res is\n    function Valid_Conversion\n      (N       : Node_Id;\n       Target  : Entity_Id;\n-      Operand : Node_Id)\n-      return    Boolean;\n+      Operand : Node_Id) return Boolean;\n    --  Verify legality rules given in 4.6 (8-23). Target is the target\n    --  type of the conversion, which may be an implicit conversion of\n    --  an actual parameter to an anonymous access type (in which case\n@@ -1252,8 +1253,7 @@ package body Sem_Res is\n \n    function Operator_Kind\n      (Op_Name   : Name_Id;\n-      Is_Binary : Boolean)\n-      return      Node_Kind\n+      Is_Binary : Boolean) return Node_Kind\n    is\n       Kind : Node_Kind;\n \n@@ -2067,28 +2067,6 @@ package body Sem_Res is\n       --  Here we have an acceptable interpretation for the context\n \n       else\n-         --  A user-defined operator is tranformed into a function call at\n-         --  this point, so that further processing knows that operators are\n-         --  really operators (i.e. are predefined operators). User-defined\n-         --  operators that are intrinsic are just renamings of the predefined\n-         --  ones, and need not be turned into calls either, but if they rename\n-         --  a different operator, we must transform the node accordingly.\n-         --  Instantiations of Unchecked_Conversion are intrinsic but are\n-         --  treated as functions, even if given an operator designator.\n-\n-         if Nkind (N) in N_Op\n-           and then Present (Entity (N))\n-           and then Ekind (Entity (N)) /= E_Operator\n-         then\n-\n-            if not Is_Predefined_Op (Entity (N)) then\n-               Rewrite_Operator_As_Call (N, Entity (N));\n-\n-            elsif Present (Alias (Entity (N))) then\n-               Rewrite_Renamed_Operator (N, Alias (Entity (N)));\n-            end if;\n-         end if;\n-\n          --  Propagate type information and normalize tree for various\n          --  predefined operations. If the context only imposes a class of\n          --  types, rather than a specific type, propagate the actual type\n@@ -2115,6 +2093,35 @@ package body Sem_Res is\n             end if;\n          end if;\n \n+         --  A user-defined operator is tranformed into a function call at\n+         --  this point, so that further processing knows that operators are\n+         --  really operators (i.e. are predefined operators). User-defined\n+         --  operators that are intrinsic are just renamings of the predefined\n+         --  ones, and need not be turned into calls either, but if they rename\n+         --  a different operator, we must transform the node accordingly.\n+         --  Instantiations of Unchecked_Conversion are intrinsic but are\n+         --  treated as functions, even if given an operator designator.\n+\n+         if Nkind (N) in N_Op\n+           and then Present (Entity (N))\n+           and then Ekind (Entity (N)) /= E_Operator\n+         then\n+\n+            if not Is_Predefined_Op (Entity (N)) then\n+               Rewrite_Operator_As_Call (N, Entity (N));\n+\n+            elsif Present (Alias (Entity (N))) then\n+               Rewrite_Renamed_Operator (N, Alias (Entity (N)), Typ);\n+\n+               --  If the node is rewritten, it will be fully resolved in\n+               --  Rewrite_Renamed_Operator.\n+\n+               if Analyzed (N) then\n+                  return;\n+               end if;\n+            end if;\n+         end if;\n+\n          case N_Subexpr'(Nkind (N)) is\n \n             when N_Aggregate => Resolve_Aggregate                (N, Ctx_Type);\n@@ -2629,7 +2636,7 @@ package body Sem_Res is\n                --  or IN OUT actual to a nested call, since this is a\n                --  case of reading an out parameter, which is not allowed.\n \n-               if Ada_83\n+               if Ada_Version = Ada_83\n                  and then Is_Entity_Name (A)\n                  and then Ekind (Entity (A)) = E_Out_Parameter\n                then\n@@ -2698,16 +2705,17 @@ package body Sem_Res is\n                   Apply_Range_Check (A, F_Typ);\n                end if;\n \n-               --  Ada 0Y (AI-231)\n+               --  Ada 2005 (AI-231)\n \n-               if Extensions_Allowed\n+               if Ada_Version >= Ada_05\n                  and then Is_Access_Type (F_Typ)\n                  and then (Can_Never_Be_Null (F)\n                            or else Can_Never_Be_Null (F_Typ))\n                then\n                   if Nkind (A) = N_Null then\n-                     Error_Msg_NE (\"(Ada 0Y) not allowed for null-exclusion \" &\n-                                   \"formal\", A, F_Typ);\n+                     Error_Msg_NE\n+                       (\"(Ada 2005) not allowed for \" &\n+                        \"null-exclusion formal\", A, F_Typ);\n                   end if;\n                end if;\n             end if;\n@@ -3164,14 +3172,33 @@ package body Sem_Res is\n             end loop;\n \n             --  Reanalyze the literal with the fixed type of the context.\n+            --  If context is Universal_Fixed, we are within a conversion,\n+            --  leave the literal as a universal real because there is no\n+            --  usable fixed type, and the target of the conversion plays\n+            --  no role in the resolution.\n \n-            if N = L then\n-               Set_Analyzed (R, False);\n-               Resolve (R, B_Typ);\n-            else\n-               Set_Analyzed (L, False);\n-               Resolve (L, B_Typ);\n-            end if;\n+            declare\n+               Op2 : Node_Id;\n+               T2  : Entity_Id;\n+\n+            begin\n+               if N = L then\n+                  Op2 := R;\n+               else\n+                  Op2 := L;\n+               end if;\n+\n+               if B_Typ = Universal_Fixed\n+                  and then Nkind (Op2) = N_Real_Literal\n+               then\n+                  T2 := Universal_Real;\n+               else\n+                  T2 := B_Typ;\n+               end if;\n+\n+               Set_Analyzed (Op2, False);\n+               Resolve (Op2, T2);\n+            end;\n \n          else\n             Resolve (N);\n@@ -3271,7 +3298,7 @@ package body Sem_Res is\n                Set_Etype (R, Any_Type);\n \n             else\n-               if Ada_83\n+               if Ada_Version = Ada_83\n                   and then Etype (N) = Universal_Fixed\n                   and then Nkind (Parent (N)) /= N_Type_Conversion\n                   and then Nkind (Parent (N)) /= N_Unchecked_Type_Conversion\n@@ -4161,7 +4188,7 @@ package body Sem_Res is\n          Error_Msg_N (\"illegal use of generic function\", N);\n \n       elsif Ekind (E) = E_Out_Parameter\n-        and then Ada_83\n+        and then Ada_Version = Ada_83\n         and then (Nkind (Parent (N)) in N_Op\n                     or else (Nkind (Parent (N)) = N_Assignment_Statement\n                               and then N = Expression (Parent (N)))\n@@ -5009,7 +5036,7 @@ package body Sem_Res is\n          if Nkind (Arg2) = N_Type_Conversion then\n             Save_Interps (Right_Opnd (N), Expression (Arg2));\n          else\n-            Save_Interps (Right_Opnd (N), Arg1);\n+            Save_Interps (Right_Opnd (N), Arg2);\n          end if;\n \n          Rewrite (Left_Opnd  (N), Arg1);\n@@ -5170,13 +5197,12 @@ package body Sem_Res is\n \n    procedure Resolve_Null (N : Node_Id; Typ : Entity_Id) is\n    begin\n-      --  For now allow circumvention of the restriction against\n-      --  anonymous null access values via a debug switch to allow\n-      --  for easier transition.\n+      --  Handle restriction against anonymous null access values\n+      --  This restriction can be turned off using -gnatdh.\n \n-      --  Ada 0Y (AI-231): Remove restriction\n+      --  Ada 2005 (AI-231): Remove restriction\n \n-      if not Extensions_Allowed\n+      if Ada_Version < Ada_05\n         and then not Debug_Flag_J\n         and then Ekind (Typ) = E_Anonymous_Access_Type\n         and then Comes_From_Source (N)\n@@ -6486,17 +6512,23 @@ package body Sem_Res is\n    -- Rewrite_Renamed_Operator --\n    ------------------------------\n \n-   procedure Rewrite_Renamed_Operator (N : Node_Id; Op : Entity_Id) is\n+   procedure Rewrite_Renamed_Operator\n+     (N   : Node_Id;\n+      Op  : Entity_Id;\n+      Typ : Entity_Id)\n+   is\n       Nam       : constant Name_Id := Chars (Op);\n       Is_Binary : constant Boolean := Nkind (N) in N_Binary_Op;\n       Op_Node   : Node_Id;\n \n    begin\n       --  Rewrite the operator node using the real operator, not its\n-      --  renaming. Exclude user-defined intrinsic operations, which\n-      --  are treated separately.\n+      --  renaming. Exclude user-defined intrinsic operations of the same\n+      --  name, which are treated separately and rewritten as calls.\n \n-      if Ekind (Op) /= E_Function then\n+      if Ekind (Op) /= E_Function\n+        or else Chars (N) /= Nam\n+      then\n          Op_Node := New_Node (Operator_Kind (Nam, Is_Binary), Sloc (N));\n          Set_Chars      (Op_Node, Nam);\n          Set_Etype      (Op_Node, Etype (N));\n@@ -6514,6 +6546,36 @@ package body Sem_Res is\n          end if;\n \n          Rewrite (N, Op_Node);\n+\n+         --  If the context type is private, add the appropriate conversions\n+         --  so that the operator is applied to the full view. This is done\n+         --  in the routines that resolve intrinsic operators,\n+\n+         if Is_Intrinsic_Subprogram (Op)\n+           and then Is_Private_Type (Typ)\n+         then\n+            case Nkind (N) is\n+               when N_Op_Add   | N_Op_Subtract | N_Op_Multiply | N_Op_Divide |\n+                    N_Op_Expon | N_Op_Mod      | N_Op_Rem      =>\n+                  Resolve_Intrinsic_Operator (N, Typ);\n+\n+               when N_Op_Plus | N_Op_Minus    | N_Op_Abs      =>\n+                  Resolve_Intrinsic_Unary_Operator (N, Typ);\n+\n+               when others =>\n+                  Resolve (N, Typ);\n+            end case;\n+         end if;\n+\n+      elsif Ekind (Op) = E_Function\n+        and then Is_Intrinsic_Subprogram (Op)\n+      then\n+         --  Operator renames a user-defined operator of the same name. Use\n+         --  the original operator in the node, which is the one that gigi\n+         --  knows about.\n+\n+         Set_Entity (N, Op);\n+         Set_Is_Overloaded (N, False);\n       end if;\n    end Rewrite_Renamed_Operator;\n \n@@ -6677,7 +6739,6 @@ package body Sem_Res is\n       --  Look for visible fixed type declarations in the context.\n \n       Item := First (Context_Items (Cunit (Current_Sem_Unit)));\n-\n       while Present (Item) loop\n          if Nkind (Item) = N_With_Clause then\n             Scop := Entity (Name (Item));\n@@ -6721,22 +6782,19 @@ package body Sem_Res is\n    function Valid_Conversion\n      (N       : Node_Id;\n       Target  : Entity_Id;\n-      Operand : Node_Id)\n-      return    Boolean\n+      Operand : Node_Id) return Boolean\n    is\n       Target_Type : constant Entity_Id := Base_Type (Target);\n       Opnd_Type   : Entity_Id := Etype (Operand);\n \n       function Conversion_Check\n         (Valid : Boolean;\n-         Msg   : String)\n-         return  Boolean;\n+         Msg   : String) return Boolean;\n       --  Little routine to post Msg if Valid is False, returns Valid value\n \n       function Valid_Tagged_Conversion\n         (Target_Type : Entity_Id;\n-         Opnd_Type   : Entity_Id)\n-         return        Boolean;\n+         Opnd_Type   : Entity_Id) return Boolean;\n       --  Specifically test for validity of tagged conversions\n \n       ----------------------\n@@ -6745,8 +6803,7 @@ package body Sem_Res is\n \n       function Conversion_Check\n         (Valid : Boolean;\n-         Msg   : String)\n-         return  Boolean\n+         Msg   : String) return Boolean\n       is\n       begin\n          if not Valid then\n@@ -6762,8 +6819,7 @@ package body Sem_Res is\n \n       function Valid_Tagged_Conversion\n         (Target_Type : Entity_Id;\n-         Opnd_Type   : Entity_Id)\n-         return        Boolean\n+         Opnd_Type   : Entity_Id) return Boolean\n       is\n       begin\n          --  Upward conversions are allowed (RM 4.6(22))."}, {"sha": "cc3f63f65f5c8444ec5e4e25edbd4c48feb1e781", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -731,8 +731,8 @@ package body Sem_Type is\n       then\n          return True;\n \n-      --  Ada 0Y (AI-254): An Anonymous_Access_To_Subprogram is compatible with\n-      --  itself, or with an anonymous type created for an attribute\n+      --  Ada 2005 (AI-254): An Anonymous_Access_To_Subprogram is compatible\n+      --  with itself, or with an anonymous type created for an attribute\n       --  reference Access.\n \n       elsif (Ekind (Base_Type (T1)) = E_Anonymous_Access_Subprogram_Type\n@@ -845,7 +845,7 @@ package body Sem_Type is\n       then\n          return True;\n \n-      --  Ada 0Y (AI-50217): Additional branches to make the shadow entity\n+      --  Ada 2005 (AI-50217): Additional branches to make the shadow entity\n       --  compatible with its real entity.\n \n       elsif From_With_Type (T1) then\n@@ -1375,11 +1375,10 @@ package body Sem_Type is\n             if Is_Fixed_Point_Type (Typ)\n               and then (Chars (Nam1) = Name_Op_Multiply\n                          or else Chars (Nam1) = Name_Op_Divide)\n-              and then Ada_83\n+              and then Ada_Version = Ada_83\n             then\n                if It2.Nam = Predef_Subp then\n                   return It1;\n-\n                else\n                   return It2;\n                end if;\n@@ -1491,18 +1490,18 @@ package body Sem_Type is\n       elsif T = Universal_Fixed then\n          return Etype (R);\n \n-      --  Ada 0Y (AI-230): Support the following operators:\n+      --  Ada 2005 (AI-230): Support the following operators:\n \n       --    function \"=\"  (L, R : universal_access) return Boolean;\n       --    function \"/=\" (L, R : universal_access) return Boolean;\n \n-      elsif Extensions_Allowed\n+      elsif Ada_Version >= Ada_05\n         and then Ekind (Etype (L)) = E_Anonymous_Access_Type\n         and then Is_Access_Type (Etype (R))\n       then\n          return Etype (L);\n \n-      elsif Extensions_Allowed\n+      elsif Ada_Version >= Ada_05\n         and then Ekind (Etype (R)) = E_Anonymous_Access_Type\n         and then Is_Access_Type (Etype (L))\n       then\n@@ -2019,9 +2018,9 @@ package body Sem_Type is\n               and then Base_Type (T1) = Base_Type (T)\n               and then Is_Numeric_Type (T)\n               and then (not Is_Fixed_Point_Type (T)\n-                         or else Ada_83))\n+                         or else Ada_Version = Ada_83))\n \n-            --  Mixed_Mode operations on fixed-point types.\n+            --  Mixed_Mode operations on fixed-point types\n \n               or else (Base_Type (T1) = Base_Type (T)\n                         and then Base_Type (T2) = Base_Type (Standard_Integer)\n@@ -2039,9 +2038,9 @@ package body Sem_Type is\n               and then Base_Type (T1) = Base_Type (T)\n               and then Is_Numeric_Type (T)\n               and then (not Is_Fixed_Point_Type (T)\n-                         or else Ada_83))\n+                         or else Ada_Version = Ada_83))\n \n-            --  Mixed_Mode operations on fixed-point types.\n+            --  Mixed_Mode operations on fixed-point types\n \n               or else (Base_Type (T1) = Base_Type (T)\n                         and then Base_Type (T2) = Base_Type (Standard_Integer)"}, {"sha": "22c5f885dd7fe6a87e973e9c4d27bd24fd832a28", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -820,7 +820,7 @@ package body Sem_Util is\n    begin\n       if Ekind (T) = E_Incomplete_Type then\n \n-         --  Ada0Y (AI-50217): If the type is available through a limited\n+         --  Ada 2005 (AI-50217): If the type is available through a limited\n          --  with_clause, verify that its full view has been analyzed.\n \n          if From_With_Type (T)\n@@ -1093,7 +1093,9 @@ package body Sem_Util is\n          --  the body of an instance, constraint_checks are only warnings.\n          --  We also make this a warning if the Warn parameter is set.\n \n-         elsif Warn or else (Ada_83 and then Comes_From_Source (N)) then\n+         elsif Warn\n+           or else (Ada_Version = Ada_83 and then Comes_From_Source (N))\n+         then\n             Msgl := Msgl + 1;\n             Msgc (Msgl) := '?';\n             Wmsg := True;\n@@ -6219,15 +6221,15 @@ package body Sem_Util is\n       --  declared at the library level to ensure that names such as\n       --  X.all'access don't fail static accessibility checks.\n \n-      --  Ada 0Y (AI-230): In case of anonymous access types that are\n+      --  Ada 2005 (AI-230): In case of anonymous access types that are\n       --  component_definition or discriminants of a nonlimited type,\n       --  the level is the same as that of the enclosing component type.\n \n       Btyp := Base_Type (Typ);\n       if Ekind (Btyp) in Access_Kind then\n          if Ekind (Btyp) = E_Anonymous_Access_Type\n-           and then not Is_Array_Type (Scope (Btyp))      --  Ada 0Y (AI-230)\n-           and then Ekind (Scope (Btyp)) /= E_Record_Type --  Ada 0Y (AI-230)\n+           and then not Is_Array_Type (Scope (Btyp))      -- Ada 2005 (AI-230)\n+           and then Ekind (Scope (Btyp)) /= E_Record_Type -- Ada 2005 (AI-230)\n          then\n             return Scope_Depth (Standard_Standard);\n          end if;"}, {"sha": "34561de049cc5d217f1805c56dc79256879b5be0", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -1483,6 +1483,23 @@ package body Sem_Warn is\n                   then\n                      if Warn_On_Modified_Unread\n                        and then not Is_Imported (E)\n+\n+                        --  Suppress the message for aliased, renamed\n+                        --  and access variables since there may be\n+                        --  other entities that read the memory location.\n+\n+                       and then not Is_Aliased (E)\n+                       and then No (Renamed_Object (E))\n+                       and then not (Is_Access_Type (Etype (E))\n+                                       or else\n+\n+                        --  Case of private access type, must examine the\n+                        --  full view due to visibility issues.\n+\n+                                       (Is_Private_Type (Etype (E))\n+                                          and then\n+                                          Is_Access_Type\n+                                            (Full_View (Etype (E)))))\n                      then\n                         Error_Msg_N\n                           (\"variable & is assigned but never read?\", E);"}, {"sha": "04853f28f1da83dc4572fc078207e9f7a2b57f30", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -1898,8 +1898,8 @@ package Sinfo is\n       --  directly in the tree as a subtype mark. The N_Subtype_Indication\n       --  node is used only if a constraint is present.\n \n-      --  Note: [For Ada 0Y (AI-231)]: Because Ada 0Y extends this rule with\n-      --  the null-exclusion part (see AI-231), we had to introduce a new\n+      --  Note: [For Ada 2005 (AI-231)]: Because Ada 2005 extends this rule\n+      --  with the null-exclusion part (see AI-231), we had to introduce a new\n       --  attribute in all the parents of subtype_indication nodes to indicate\n       --  if the null-exclusion is present.\n \n@@ -2340,8 +2340,8 @@ package Sinfo is\n       --  with an appropriate message), it is possible for anonymous arrays\n       --  to appear as component definitions. The semantics and back end handle\n       --  this case properly, and the expander in fact generates such cases.\n-      --  Access_Definition is an optional field that gives support to Ada 0Y\n-      --  (AI-230). The parser generates nodes that have either the\n+      --  Access_Definition is an optional field that gives support to\n+      --  Ada 2005 (AI-230). The parser generates nodes that have either the\n       --  Subtype_Indication field or else the Access_Definition field.\n \n       --  N_Component_Definition\n@@ -2707,7 +2707,7 @@ package Sinfo is\n       --    [NULL_EXCLUSION] access [GENERAL_ACCESS_MODIFIER] SUBTYPE_MARK\n       --  | ACCESS_TO_SUBPROGRAM_DEFINITION\n \n-      --  Note: access to subprograms are an Ada 0Y (AI-254) extension\n+      --  Note: access to subprograms are an Ada 2005 (AI-254) extension\n \n       --  N_Access_Definition\n       --  Sloc points to ACCESS\n@@ -3063,7 +3063,7 @@ package Sinfo is\n       --  list of selector names in the record aggregate case, or a list of\n       --  discrete choices in the array aggregate case or an N_Others_Choice\n       --  node (which appears as a singleton list). Box_Present gives support\n-      --  to Ada 0Y (AI-287).\n+      --  to Ada 2005 (AI-287).\n \n       ------------------------------------\n       --  4.3.1  Commponent Choice List --\n@@ -4331,7 +4331,7 @@ package Sinfo is\n       --  | DEFINING_IDENTIFIER : ACCESS_DEFINITION renames object_NAME;\n \n       --  Note: Access_Definition is an optional field that gives support to\n-      --  Ada 0Y (AI-230). The parser generates nodes that have either the\n+      --  Ada 2005 (AI-230). The parser generates nodes that have either the\n       --  Subtype_Indication field or else the Access_Definition field.\n \n       --  N_Object_Renaming_Declaration\n@@ -5151,7 +5151,7 @@ package Sinfo is\n       --  No_Entities_Ref_In_Spec (Flag8-Sem)\n \n       --  Note: Limited_Present and Limited_View_Installed give support to\n-      --        Ada 0Y (AI-50217).\n+      --        Ada 2005 (AI-50217).\n       --  Similarly, Private_Present gives support to AI-50262.\n \n       ----------------------"}, {"sha": "b8c20bba92b5c68452bdc412c076f99e2e77fc55", "filename": "gcc/ada/snames.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -166,6 +166,7 @@ package body Snames is\n      \"Oexpon#\" &\n      \"ada_83#\" &\n      \"ada_95#\" &\n+     \"ada_05#\" &\n      \"c_pass_by_copy#\" &\n      \"compile_time_warning#\" &\n      \"component_alignment#\" &\n@@ -652,6 +653,7 @@ package body Snames is\n      \"linker#\" &\n      \"local_configuration_pragmas#\" &\n      \"locally_removed_files#\" &\n+     \"metrics#\" &\n      \"naming#\" &\n      \"object_dir#\" &\n      \"pretty_printer#\" &"}, {"sha": "ceaa7239fb82657fda08b559c18b0fbfa207b0ea", "filename": "gcc/ada/snames.ads", "status": "modified", "additions": 531, "deletions": 528, "changes": 1059, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsnames.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsnames.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -318,134 +318,135 @@ package Snames is\n \n    Name_Ada_83                         : constant Name_Id := N + 107; -- GNAT\n    Name_Ada_95                         : constant Name_Id := N + 108; -- GNAT\n-   Name_C_Pass_By_Copy                 : constant Name_Id := N + 109; -- GNAT\n-   Name_Compile_Time_Warning           : constant Name_Id := N + 110; -- GNAT\n-   Name_Component_Alignment            : constant Name_Id := N + 111; -- GNAT\n-   Name_Convention_Identifier          : constant Name_Id := N + 112; -- GNAT\n-   Name_Discard_Names                  : constant Name_Id := N + 113;\n-   Name_Elaboration_Checks             : constant Name_Id := N + 114; -- GNAT\n-   Name_Eliminate                      : constant Name_Id := N + 115; -- GNAT\n-   Name_Explicit_Overriding            : constant Name_Id := N + 116;\n-   Name_Extend_System                  : constant Name_Id := N + 117; -- GNAT\n-   Name_Extensions_Allowed             : constant Name_Id := N + 118; -- GNAT\n-   Name_External_Name_Casing           : constant Name_Id := N + 119; -- GNAT\n-   Name_Float_Representation           : constant Name_Id := N + 120; -- GNAT\n-   Name_Initialize_Scalars             : constant Name_Id := N + 121; -- GNAT\n-   Name_Interrupt_State                : constant Name_Id := N + 122; -- GNAT\n-   Name_License                        : constant Name_Id := N + 123; -- GNAT\n-   Name_Locking_Policy                 : constant Name_Id := N + 124;\n-   Name_Long_Float                     : constant Name_Id := N + 125; -- VMS\n-   Name_No_Run_Time                    : constant Name_Id := N + 126; -- GNAT\n-   Name_No_Strict_Aliasing             : constant Name_Id := N + 127; -- GNAT\n-   Name_Normalize_Scalars              : constant Name_Id := N + 128;\n-   Name_Polling                        : constant Name_Id := N + 129; -- GNAT\n-   Name_Persistent_Data                : constant Name_Id := N + 130; -- GNAT\n-   Name_Persistent_Object              : constant Name_Id := N + 131; -- GNAT\n-   Name_Profile                        : constant Name_Id := N + 132; -- Ada0Y\n-   Name_Propagate_Exceptions           : constant Name_Id := N + 133; -- GNAT\n-   Name_Queuing_Policy                 : constant Name_Id := N + 134;\n-   Name_Ravenscar                      : constant Name_Id := N + 135;\n-   Name_Restricted_Run_Time            : constant Name_Id := N + 136;\n-   Name_Restrictions                   : constant Name_Id := N + 137;\n-   Name_Restriction_Warnings           : constant Name_Id := N + 138; -- GNAT\n-   Name_Reviewable                     : constant Name_Id := N + 139;\n-   Name_Source_File_Name               : constant Name_Id := N + 140; -- GNAT\n-   Name_Source_File_Name_Project       : constant Name_Id := N + 141; -- GNAT\n-   Name_Style_Checks                   : constant Name_Id := N + 142; -- GNAT\n-   Name_Suppress                       : constant Name_Id := N + 143;\n-   Name_Suppress_Exception_Locations   : constant Name_Id := N + 144; -- GNAT\n-   Name_Task_Dispatching_Policy        : constant Name_Id := N + 145;\n-   Name_Universal_Data                 : constant Name_Id := N + 146; -- AAMP\n-   Name_Unsuppress                     : constant Name_Id := N + 147; -- GNAT\n-   Name_Use_VADS_Size                  : constant Name_Id := N + 148; -- GNAT\n-   Name_Validity_Checks                : constant Name_Id := N + 149; -- GNAT\n-   Name_Warnings                       : constant Name_Id := N + 150; -- GNAT\n-   Last_Configuration_Pragma_Name      : constant Name_Id := N + 150;\n+   Name_Ada_05                         : constant Name_Id := N + 109; -- GNAT\n+   Name_C_Pass_By_Copy                 : constant Name_Id := N + 110; -- GNAT\n+   Name_Compile_Time_Warning           : constant Name_Id := N + 111; -- GNAT\n+   Name_Component_Alignment            : constant Name_Id := N + 112; -- GNAT\n+   Name_Convention_Identifier          : constant Name_Id := N + 113; -- GNAT\n+   Name_Discard_Names                  : constant Name_Id := N + 114;\n+   Name_Elaboration_Checks             : constant Name_Id := N + 115; -- GNAT\n+   Name_Eliminate                      : constant Name_Id := N + 116; -- GNAT\n+   Name_Explicit_Overriding            : constant Name_Id := N + 117;\n+   Name_Extend_System                  : constant Name_Id := N + 118; -- GNAT\n+   Name_Extensions_Allowed             : constant Name_Id := N + 119; -- GNAT\n+   Name_External_Name_Casing           : constant Name_Id := N + 120; -- GNAT\n+   Name_Float_Representation           : constant Name_Id := N + 121; -- GNAT\n+   Name_Initialize_Scalars             : constant Name_Id := N + 122; -- GNAT\n+   Name_Interrupt_State                : constant Name_Id := N + 123; -- GNAT\n+   Name_License                        : constant Name_Id := N + 124; -- GNAT\n+   Name_Locking_Policy                 : constant Name_Id := N + 125;\n+   Name_Long_Float                     : constant Name_Id := N + 126; -- VMS\n+   Name_No_Run_Time                    : constant Name_Id := N + 127; -- GNAT\n+   Name_No_Strict_Aliasing             : constant Name_Id := N + 128; -- GNAT\n+   Name_Normalize_Scalars              : constant Name_Id := N + 129;\n+   Name_Polling                        : constant Name_Id := N + 130; -- GNAT\n+   Name_Persistent_Data                : constant Name_Id := N + 131; -- GNAT\n+   Name_Persistent_Object              : constant Name_Id := N + 132; -- GNAT\n+   Name_Profile                        : constant Name_Id := N + 133; -- Ada0Y\n+   Name_Propagate_Exceptions           : constant Name_Id := N + 134; -- GNAT\n+   Name_Queuing_Policy                 : constant Name_Id := N + 135;\n+   Name_Ravenscar                      : constant Name_Id := N + 136;\n+   Name_Restricted_Run_Time            : constant Name_Id := N + 137;\n+   Name_Restrictions                   : constant Name_Id := N + 138;\n+   Name_Restriction_Warnings           : constant Name_Id := N + 139; -- GNAT\n+   Name_Reviewable                     : constant Name_Id := N + 140;\n+   Name_Source_File_Name               : constant Name_Id := N + 141; -- GNAT\n+   Name_Source_File_Name_Project       : constant Name_Id := N + 142; -- GNAT\n+   Name_Style_Checks                   : constant Name_Id := N + 143; -- GNAT\n+   Name_Suppress                       : constant Name_Id := N + 144;\n+   Name_Suppress_Exception_Locations   : constant Name_Id := N + 145; -- GNAT\n+   Name_Task_Dispatching_Policy        : constant Name_Id := N + 146;\n+   Name_Universal_Data                 : constant Name_Id := N + 147; -- AAMP\n+   Name_Unsuppress                     : constant Name_Id := N + 148; -- GNAT\n+   Name_Use_VADS_Size                  : constant Name_Id := N + 149; -- GNAT\n+   Name_Validity_Checks                : constant Name_Id := N + 150; -- GNAT\n+   Name_Warnings                       : constant Name_Id := N + 151; -- GNAT\n+   Last_Configuration_Pragma_Name      : constant Name_Id := N + 151;\n \n    --  Remaining pragma names\n \n-   Name_Abort_Defer                    : constant Name_Id := N + 151; -- GNAT\n-   Name_All_Calls_Remote               : constant Name_Id := N + 152;\n-   Name_Annotate                       : constant Name_Id := N + 153; -- GNAT\n+   Name_Abort_Defer                    : constant Name_Id := N + 152; -- GNAT\n+   Name_All_Calls_Remote               : constant Name_Id := N + 153;\n+   Name_Annotate                       : constant Name_Id := N + 154; -- GNAT\n \n    --  Note: AST_Entry is not in this list because its name matches the\n    --  name of the corresponding attribute. However, it is included in the\n    --  definition of the type Attribute_Id, and the functions Get_Pragma_Id\n    --  and Check_Pragma_Id correctly recognize and process Name_AST_Entry.\n    --  AST_Entry is a VMS specific pragma.\n \n-   Name_Assert                         : constant Name_Id := N + 154; -- GNAT\n-   Name_Asynchronous                   : constant Name_Id := N + 155;\n-   Name_Atomic                         : constant Name_Id := N + 156;\n-   Name_Atomic_Components              : constant Name_Id := N + 157;\n-   Name_Attach_Handler                 : constant Name_Id := N + 158;\n-   Name_Comment                        : constant Name_Id := N + 159; -- GNAT\n-   Name_Common_Object                  : constant Name_Id := N + 160; -- GNAT\n-   Name_Complex_Representation         : constant Name_Id := N + 161; -- GNAT\n-   Name_Controlled                     : constant Name_Id := N + 162;\n-   Name_Convention                     : constant Name_Id := N + 163;\n-   Name_CPP_Class                      : constant Name_Id := N + 164; -- GNAT\n-   Name_CPP_Constructor                : constant Name_Id := N + 165; -- GNAT\n-   Name_CPP_Virtual                    : constant Name_Id := N + 166; -- GNAT\n-   Name_CPP_Vtable                     : constant Name_Id := N + 167; -- GNAT\n-   Name_Debug                          : constant Name_Id := N + 168; -- GNAT\n-   Name_Elaborate                      : constant Name_Id := N + 169; -- Ada 83\n-   Name_Elaborate_All                  : constant Name_Id := N + 170;\n-   Name_Elaborate_Body                 : constant Name_Id := N + 171;\n-   Name_Export                         : constant Name_Id := N + 172;\n-   Name_Export_Exception               : constant Name_Id := N + 173; -- VMS\n-   Name_Export_Function                : constant Name_Id := N + 174; -- GNAT\n-   Name_Export_Object                  : constant Name_Id := N + 175; -- GNAT\n-   Name_Export_Procedure               : constant Name_Id := N + 176; -- GNAT\n-   Name_Export_Value                   : constant Name_Id := N + 177; -- GNAT\n-   Name_Export_Valued_Procedure        : constant Name_Id := N + 178; -- GNAT\n-   Name_External                       : constant Name_Id := N + 179; -- GNAT\n-   Name_Finalize_Storage_Only          : constant Name_Id := N + 180; -- GNAT\n-   Name_Ident                          : constant Name_Id := N + 181; -- VMS\n-   Name_Import                         : constant Name_Id := N + 182;\n-   Name_Import_Exception               : constant Name_Id := N + 183; -- VMS\n-   Name_Import_Function                : constant Name_Id := N + 184; -- GNAT\n-   Name_Import_Object                  : constant Name_Id := N + 185; -- GNAT\n-   Name_Import_Procedure               : constant Name_Id := N + 186; -- GNAT\n-   Name_Import_Valued_Procedure        : constant Name_Id := N + 187; -- GNAT\n-   Name_Inline                         : constant Name_Id := N + 188;\n-   Name_Inline_Always                  : constant Name_Id := N + 189; -- GNAT\n-   Name_Inline_Generic                 : constant Name_Id := N + 190; -- GNAT\n-   Name_Inspection_Point               : constant Name_Id := N + 191;\n-   Name_Interface                      : constant Name_Id := N + 192; -- Ada 83\n-   Name_Interface_Name                 : constant Name_Id := N + 193; -- GNAT\n-   Name_Interrupt_Handler              : constant Name_Id := N + 194;\n-   Name_Interrupt_Priority             : constant Name_Id := N + 195;\n-   Name_Java_Constructor               : constant Name_Id := N + 196; -- GNAT\n-   Name_Java_Interface                 : constant Name_Id := N + 197; -- GNAT\n-   Name_Keep_Names                     : constant Name_Id := N + 198; -- GNAT\n-   Name_Link_With                      : constant Name_Id := N + 199; -- GNAT\n-   Name_Linker_Alias                   : constant Name_Id := N + 200; -- GNAT\n-   Name_Linker_Options                 : constant Name_Id := N + 201;\n-   Name_Linker_Section                 : constant Name_Id := N + 202; -- GNAT\n-   Name_List                           : constant Name_Id := N + 203;\n-   Name_Machine_Attribute              : constant Name_Id := N + 204; -- GNAT\n-   Name_Main                           : constant Name_Id := N + 205; -- GNAT\n-   Name_Main_Storage                   : constant Name_Id := N + 206; -- GNAT\n-   Name_Memory_Size                    : constant Name_Id := N + 207; -- Ada 83\n-   Name_No_Return                      : constant Name_Id := N + 208; -- GNAT\n-   Name_Obsolescent                    : constant Name_Id := N + 209; -- GNAT\n-   Name_Optimize                       : constant Name_Id := N + 210;\n-   Name_Optional_Overriding            : constant Name_Id := N + 211;\n-   Name_Overriding                     : constant Name_Id := N + 212;\n-   Name_Pack                           : constant Name_Id := N + 213;\n-   Name_Page                           : constant Name_Id := N + 214;\n-   Name_Passive                        : constant Name_Id := N + 215; -- GNAT\n-   Name_Preelaborate                   : constant Name_Id := N + 216;\n-   Name_Priority                       : constant Name_Id := N + 217;\n-   Name_Psect_Object                   : constant Name_Id := N + 218; -- VMS\n-   Name_Pure                           : constant Name_Id := N + 219;\n-   Name_Pure_Function                  : constant Name_Id := N + 220; -- GNAT\n-   Name_Remote_Call_Interface          : constant Name_Id := N + 221;\n-   Name_Remote_Types                   : constant Name_Id := N + 222;\n-   Name_Share_Generic                  : constant Name_Id := N + 223; -- GNAT\n-   Name_Shared                         : constant Name_Id := N + 224; -- Ada 83\n-   Name_Shared_Passive                 : constant Name_Id := N + 225;\n+   Name_Assert                         : constant Name_Id := N + 155; -- GNAT\n+   Name_Asynchronous                   : constant Name_Id := N + 156;\n+   Name_Atomic                         : constant Name_Id := N + 157;\n+   Name_Atomic_Components              : constant Name_Id := N + 158;\n+   Name_Attach_Handler                 : constant Name_Id := N + 159;\n+   Name_Comment                        : constant Name_Id := N + 160; -- GNAT\n+   Name_Common_Object                  : constant Name_Id := N + 161; -- GNAT\n+   Name_Complex_Representation         : constant Name_Id := N + 162; -- GNAT\n+   Name_Controlled                     : constant Name_Id := N + 163;\n+   Name_Convention                     : constant Name_Id := N + 164;\n+   Name_CPP_Class                      : constant Name_Id := N + 165; -- GNAT\n+   Name_CPP_Constructor                : constant Name_Id := N + 166; -- GNAT\n+   Name_CPP_Virtual                    : constant Name_Id := N + 167; -- GNAT\n+   Name_CPP_Vtable                     : constant Name_Id := N + 168; -- GNAT\n+   Name_Debug                          : constant Name_Id := N + 169; -- GNAT\n+   Name_Elaborate                      : constant Name_Id := N + 170; -- Ada 83\n+   Name_Elaborate_All                  : constant Name_Id := N + 171;\n+   Name_Elaborate_Body                 : constant Name_Id := N + 172;\n+   Name_Export                         : constant Name_Id := N + 173;\n+   Name_Export_Exception               : constant Name_Id := N + 174; -- VMS\n+   Name_Export_Function                : constant Name_Id := N + 175; -- GNAT\n+   Name_Export_Object                  : constant Name_Id := N + 176; -- GNAT\n+   Name_Export_Procedure               : constant Name_Id := N + 177; -- GNAT\n+   Name_Export_Value                   : constant Name_Id := N + 178; -- GNAT\n+   Name_Export_Valued_Procedure        : constant Name_Id := N + 179; -- GNAT\n+   Name_External                       : constant Name_Id := N + 180; -- GNAT\n+   Name_Finalize_Storage_Only          : constant Name_Id := N + 181; -- GNAT\n+   Name_Ident                          : constant Name_Id := N + 182; -- VMS\n+   Name_Import                         : constant Name_Id := N + 183;\n+   Name_Import_Exception               : constant Name_Id := N + 184; -- VMS\n+   Name_Import_Function                : constant Name_Id := N + 185; -- GNAT\n+   Name_Import_Object                  : constant Name_Id := N + 186; -- GNAT\n+   Name_Import_Procedure               : constant Name_Id := N + 187; -- GNAT\n+   Name_Import_Valued_Procedure        : constant Name_Id := N + 188; -- GNAT\n+   Name_Inline                         : constant Name_Id := N + 189;\n+   Name_Inline_Always                  : constant Name_Id := N + 190; -- GNAT\n+   Name_Inline_Generic                 : constant Name_Id := N + 191; -- GNAT\n+   Name_Inspection_Point               : constant Name_Id := N + 192;\n+   Name_Interface                      : constant Name_Id := N + 193; -- Ada 83\n+   Name_Interface_Name                 : constant Name_Id := N + 194; -- GNAT\n+   Name_Interrupt_Handler              : constant Name_Id := N + 195;\n+   Name_Interrupt_Priority             : constant Name_Id := N + 196;\n+   Name_Java_Constructor               : constant Name_Id := N + 197; -- GNAT\n+   Name_Java_Interface                 : constant Name_Id := N + 198; -- GNAT\n+   Name_Keep_Names                     : constant Name_Id := N + 199; -- GNAT\n+   Name_Link_With                      : constant Name_Id := N + 200; -- GNAT\n+   Name_Linker_Alias                   : constant Name_Id := N + 201; -- GNAT\n+   Name_Linker_Options                 : constant Name_Id := N + 202;\n+   Name_Linker_Section                 : constant Name_Id := N + 203; -- GNAT\n+   Name_List                           : constant Name_Id := N + 204;\n+   Name_Machine_Attribute              : constant Name_Id := N + 205; -- GNAT\n+   Name_Main                           : constant Name_Id := N + 206; -- GNAT\n+   Name_Main_Storage                   : constant Name_Id := N + 207; -- GNAT\n+   Name_Memory_Size                    : constant Name_Id := N + 208; -- Ada 83\n+   Name_No_Return                      : constant Name_Id := N + 209; -- GNAT\n+   Name_Obsolescent                    : constant Name_Id := N + 210; -- GNAT\n+   Name_Optimize                       : constant Name_Id := N + 211;\n+   Name_Optional_Overriding            : constant Name_Id := N + 212;\n+   Name_Overriding                     : constant Name_Id := N + 213;\n+   Name_Pack                           : constant Name_Id := N + 214;\n+   Name_Page                           : constant Name_Id := N + 215;\n+   Name_Passive                        : constant Name_Id := N + 216; -- GNAT\n+   Name_Preelaborate                   : constant Name_Id := N + 217;\n+   Name_Priority                       : constant Name_Id := N + 218;\n+   Name_Psect_Object                   : constant Name_Id := N + 219; -- VMS\n+   Name_Pure                           : constant Name_Id := N + 220;\n+   Name_Pure_Function                  : constant Name_Id := N + 221; -- GNAT\n+   Name_Remote_Call_Interface          : constant Name_Id := N + 222;\n+   Name_Remote_Types                   : constant Name_Id := N + 223;\n+   Name_Share_Generic                  : constant Name_Id := N + 224; -- GNAT\n+   Name_Shared                         : constant Name_Id := N + 225; -- Ada 83\n+   Name_Shared_Passive                 : constant Name_Id := N + 226;\n \n    --  Note: Storage_Size is not in this list because its name matches the\n    --  name of the corresponding attribute. However, it is included in the\n@@ -455,27 +456,27 @@ package Snames is\n    --  Note: Storage_Unit is also omitted from the list because of a clash\n    --  with an attribute name, and is treated similarly.\n \n-   Name_Source_Reference               : constant Name_Id := N + 226; -- GNAT\n-   Name_Stream_Convert                 : constant Name_Id := N + 227; -- GNAT\n-   Name_Subtitle                       : constant Name_Id := N + 228; -- GNAT\n-   Name_Suppress_All                   : constant Name_Id := N + 229; -- GNAT\n-   Name_Suppress_Debug_Info            : constant Name_Id := N + 230; -- GNAT\n-   Name_Suppress_Initialization        : constant Name_Id := N + 231; -- GNAT\n-   Name_System_Name                    : constant Name_Id := N + 232; -- Ada 83\n-   Name_Task_Info                      : constant Name_Id := N + 233; -- GNAT\n-   Name_Task_Name                      : constant Name_Id := N + 234; -- GNAT\n-   Name_Task_Storage                   : constant Name_Id := N + 235; -- VMS\n-   Name_Thread_Body                    : constant Name_Id := N + 236; -- GNAT\n-   Name_Time_Slice                     : constant Name_Id := N + 237; -- GNAT\n-   Name_Title                          : constant Name_Id := N + 238; -- GNAT\n-   Name_Unchecked_Union                : constant Name_Id := N + 239; -- GNAT\n-   Name_Unimplemented_Unit             : constant Name_Id := N + 240; -- GNAT\n-   Name_Unreferenced                   : constant Name_Id := N + 241; -- GNAT\n-   Name_Unreserve_All_Interrupts       : constant Name_Id := N + 242; -- GNAT\n-   Name_Volatile                       : constant Name_Id := N + 243;\n-   Name_Volatile_Components            : constant Name_Id := N + 244;\n-   Name_Weak_External                  : constant Name_Id := N + 245; -- GNAT\n-   Last_Pragma_Name                    : constant Name_Id := N + 245;\n+   Name_Source_Reference               : constant Name_Id := N + 227; -- GNAT\n+   Name_Stream_Convert                 : constant Name_Id := N + 228; -- GNAT\n+   Name_Subtitle                       : constant Name_Id := N + 229; -- GNAT\n+   Name_Suppress_All                   : constant Name_Id := N + 230; -- GNAT\n+   Name_Suppress_Debug_Info            : constant Name_Id := N + 231; -- GNAT\n+   Name_Suppress_Initialization        : constant Name_Id := N + 232; -- GNAT\n+   Name_System_Name                    : constant Name_Id := N + 233; -- Ada 83\n+   Name_Task_Info                      : constant Name_Id := N + 234; -- GNAT\n+   Name_Task_Name                      : constant Name_Id := N + 235; -- GNAT\n+   Name_Task_Storage                   : constant Name_Id := N + 236; -- VMS\n+   Name_Thread_Body                    : constant Name_Id := N + 237; -- GNAT\n+   Name_Time_Slice                     : constant Name_Id := N + 238; -- GNAT\n+   Name_Title                          : constant Name_Id := N + 239; -- GNAT\n+   Name_Unchecked_Union                : constant Name_Id := N + 240; -- GNAT\n+   Name_Unimplemented_Unit             : constant Name_Id := N + 241; -- GNAT\n+   Name_Unreferenced                   : constant Name_Id := N + 242; -- GNAT\n+   Name_Unreserve_All_Interrupts       : constant Name_Id := N + 243; -- GNAT\n+   Name_Volatile                       : constant Name_Id := N + 244;\n+   Name_Volatile_Components            : constant Name_Id := N + 245;\n+   Name_Weak_External                  : constant Name_Id := N + 246; -- GNAT\n+   Last_Pragma_Name                    : constant Name_Id := N + 246;\n \n    --  Language convention names for pragma Convention/Export/Import/Interface\n    --  Note that Name_C is not included in this list, since it was already\n@@ -486,105 +487,105 @@ package Snames is\n    --  Entry and Protected, this is because these conventions cannot be\n    --  specified by a pragma.\n \n-   First_Convention_Name               : constant Name_Id := N + 246;\n-   Name_Ada                            : constant Name_Id := N + 246;\n-   Name_Assembler                      : constant Name_Id := N + 247;\n-   Name_COBOL                          : constant Name_Id := N + 248;\n-   Name_CPP                            : constant Name_Id := N + 249;\n-   Name_Fortran                        : constant Name_Id := N + 250;\n-   Name_Intrinsic                      : constant Name_Id := N + 251;\n-   Name_Java                           : constant Name_Id := N + 252;\n-   Name_Stdcall                        : constant Name_Id := N + 253;\n-   Name_Stubbed                        : constant Name_Id := N + 254;\n-   Last_Convention_Name                : constant Name_Id := N + 254;\n+   First_Convention_Name               : constant Name_Id := N + 247;\n+   Name_Ada                            : constant Name_Id := N + 247;\n+   Name_Assembler                      : constant Name_Id := N + 248;\n+   Name_COBOL                          : constant Name_Id := N + 249;\n+   Name_CPP                            : constant Name_Id := N + 250;\n+   Name_Fortran                        : constant Name_Id := N + 251;\n+   Name_Intrinsic                      : constant Name_Id := N + 252;\n+   Name_Java                           : constant Name_Id := N + 253;\n+   Name_Stdcall                        : constant Name_Id := N + 254;\n+   Name_Stubbed                        : constant Name_Id := N + 255;\n+   Last_Convention_Name                : constant Name_Id := N + 255;\n \n    --  The following names are preset as synonyms for Assembler\n \n-   Name_Asm                            : constant Name_Id := N + 255;\n-   Name_Assembly                       : constant Name_Id := N + 256;\n+   Name_Asm                            : constant Name_Id := N + 256;\n+   Name_Assembly                       : constant Name_Id := N + 257;\n \n    --  The following names are preset as synonyms for C\n \n-   Name_Default                        : constant Name_Id := N + 257;\n+   Name_Default                        : constant Name_Id := N + 258;\n    --  Name_Exernal (previously defined as pragma)\n \n    --  The following names are present as synonyms for Stdcall\n \n-   Name_DLL                            : constant Name_Id := N + 258;\n-   Name_Win32                          : constant Name_Id := N + 259;\n+   Name_DLL                            : constant Name_Id := N + 259;\n+   Name_Win32                          : constant Name_Id := N + 260;\n \n    --  Other special names used in processing pragmas\n \n-   Name_As_Is                          : constant Name_Id := N + 260;\n-   Name_Body_File_Name                 : constant Name_Id := N + 261;\n-   Name_Boolean_Entry_Barriers         : constant Name_Id := N + 262;\n-   Name_Casing                         : constant Name_Id := N + 263;\n-   Name_Code                           : constant Name_Id := N + 264;\n-   Name_Component                      : constant Name_Id := N + 265;\n-   Name_Component_Size_4               : constant Name_Id := N + 266;\n-   Name_Copy                           : constant Name_Id := N + 267;\n-   Name_D_Float                        : constant Name_Id := N + 268;\n-   Name_Descriptor                     : constant Name_Id := N + 269;\n-   Name_Dot_Replacement                : constant Name_Id := N + 270;\n-   Name_Dynamic                        : constant Name_Id := N + 271;\n-   Name_Entity                         : constant Name_Id := N + 272;\n-   Name_External_Name                  : constant Name_Id := N + 273;\n-   Name_First_Optional_Parameter       : constant Name_Id := N + 274;\n-   Name_Form                           : constant Name_Id := N + 275;\n-   Name_G_Float                        : constant Name_Id := N + 276;\n-   Name_Gcc                            : constant Name_Id := N + 277;\n-   Name_Gnat                           : constant Name_Id := N + 278;\n-   Name_GPL                            : constant Name_Id := N + 279;\n-   Name_IEEE_Float                     : constant Name_Id := N + 280;\n-   Name_Internal                       : constant Name_Id := N + 281;\n-   Name_Link_Name                      : constant Name_Id := N + 282;\n-   Name_Lowercase                      : constant Name_Id := N + 283;\n-   Name_Max_Entry_Queue_Depth          : constant Name_Id := N + 284;\n-   Name_Max_Entry_Queue_Length         : constant Name_Id := N + 285;\n-   Name_Max_Size                       : constant Name_Id := N + 286;\n-   Name_Mechanism                      : constant Name_Id := N + 287;\n-   Name_Mixedcase                      : constant Name_Id := N + 288;\n-   Name_Modified_GPL                   : constant Name_Id := N + 289;\n-   Name_Name                           : constant Name_Id := N + 290;\n-   Name_NCA                            : constant Name_Id := N + 291;\n-   Name_No                             : constant Name_Id := N + 292;\n-   Name_On                             : constant Name_Id := N + 293;\n-   Name_Parameter_Types                : constant Name_Id := N + 294;\n-   Name_Reference                      : constant Name_Id := N + 295;\n-   Name_No_Dynamic_Attachment          : constant Name_Id := N + 296;\n-   Name_No_Dynamic_Interrupts          : constant Name_Id := N + 297;\n-   Name_No_Requeue                     : constant Name_Id := N + 298;\n-   Name_No_Requeue_Statements          : constant Name_Id := N + 299;\n-   Name_No_Task_Attributes             : constant Name_Id := N + 300;\n-   Name_No_Task_Attributes_Package     : constant Name_Id := N + 301;\n-   Name_Restricted                     : constant Name_Id := N + 302;\n-   Name_Result_Mechanism               : constant Name_Id := N + 303;\n-   Name_Result_Type                    : constant Name_Id := N + 304;\n-   Name_Runtime                        : constant Name_Id := N + 305;\n-   Name_SB                             : constant Name_Id := N + 306;\n-   Name_Secondary_Stack_Size           : constant Name_Id := N + 307;\n-   Name_Section                        : constant Name_Id := N + 308;\n-   Name_Semaphore                      : constant Name_Id := N + 309;\n-   Name_Simple_Barriers                : constant Name_Id := N + 310;\n-   Name_Spec_File_Name                 : constant Name_Id := N + 311;\n-   Name_Static                         : constant Name_Id := N + 312;\n-   Name_Stack_Size                     : constant Name_Id := N + 313;\n-   Name_Subunit_File_Name              : constant Name_Id := N + 314;\n-   Name_Task_Stack_Size_Default        : constant Name_Id := N + 315;\n-   Name_Task_Type                      : constant Name_Id := N + 316;\n-   Name_Time_Slicing_Enabled           : constant Name_Id := N + 317;\n-   Name_Top_Guard                      : constant Name_Id := N + 318;\n-   Name_UBA                            : constant Name_Id := N + 319;\n-   Name_UBS                            : constant Name_Id := N + 320;\n-   Name_UBSB                           : constant Name_Id := N + 321;\n-   Name_Unit_Name                      : constant Name_Id := N + 322;\n-   Name_Unknown                        : constant Name_Id := N + 323;\n-   Name_Unrestricted                   : constant Name_Id := N + 324;\n-   Name_Uppercase                      : constant Name_Id := N + 325;\n-   Name_User                           : constant Name_Id := N + 326;\n-   Name_VAX_Float                      : constant Name_Id := N + 327;\n-   Name_VMS                            : constant Name_Id := N + 328;\n-   Name_Working_Storage                : constant Name_Id := N + 329;\n+   Name_As_Is                          : constant Name_Id := N + 261;\n+   Name_Body_File_Name                 : constant Name_Id := N + 262;\n+   Name_Boolean_Entry_Barriers         : constant Name_Id := N + 263;\n+   Name_Casing                         : constant Name_Id := N + 264;\n+   Name_Code                           : constant Name_Id := N + 265;\n+   Name_Component                      : constant Name_Id := N + 266;\n+   Name_Component_Size_4               : constant Name_Id := N + 267;\n+   Name_Copy                           : constant Name_Id := N + 268;\n+   Name_D_Float                        : constant Name_Id := N + 269;\n+   Name_Descriptor                     : constant Name_Id := N + 270;\n+   Name_Dot_Replacement                : constant Name_Id := N + 271;\n+   Name_Dynamic                        : constant Name_Id := N + 272;\n+   Name_Entity                         : constant Name_Id := N + 273;\n+   Name_External_Name                  : constant Name_Id := N + 274;\n+   Name_First_Optional_Parameter       : constant Name_Id := N + 275;\n+   Name_Form                           : constant Name_Id := N + 276;\n+   Name_G_Float                        : constant Name_Id := N + 277;\n+   Name_Gcc                            : constant Name_Id := N + 278;\n+   Name_Gnat                           : constant Name_Id := N + 279;\n+   Name_GPL                            : constant Name_Id := N + 280;\n+   Name_IEEE_Float                     : constant Name_Id := N + 281;\n+   Name_Internal                       : constant Name_Id := N + 282;\n+   Name_Link_Name                      : constant Name_Id := N + 283;\n+   Name_Lowercase                      : constant Name_Id := N + 284;\n+   Name_Max_Entry_Queue_Depth          : constant Name_Id := N + 285;\n+   Name_Max_Entry_Queue_Length         : constant Name_Id := N + 286;\n+   Name_Max_Size                       : constant Name_Id := N + 287;\n+   Name_Mechanism                      : constant Name_Id := N + 288;\n+   Name_Mixedcase                      : constant Name_Id := N + 289;\n+   Name_Modified_GPL                   : constant Name_Id := N + 290;\n+   Name_Name                           : constant Name_Id := N + 291;\n+   Name_NCA                            : constant Name_Id := N + 292;\n+   Name_No                             : constant Name_Id := N + 293;\n+   Name_On                             : constant Name_Id := N + 294;\n+   Name_Parameter_Types                : constant Name_Id := N + 295;\n+   Name_Reference                      : constant Name_Id := N + 296;\n+   Name_No_Dynamic_Attachment          : constant Name_Id := N + 297;\n+   Name_No_Dynamic_Interrupts          : constant Name_Id := N + 298;\n+   Name_No_Requeue                     : constant Name_Id := N + 299;\n+   Name_No_Requeue_Statements          : constant Name_Id := N + 300;\n+   Name_No_Task_Attributes             : constant Name_Id := N + 301;\n+   Name_No_Task_Attributes_Package     : constant Name_Id := N + 302;\n+   Name_Restricted                     : constant Name_Id := N + 303;\n+   Name_Result_Mechanism               : constant Name_Id := N + 304;\n+   Name_Result_Type                    : constant Name_Id := N + 305;\n+   Name_Runtime                        : constant Name_Id := N + 306;\n+   Name_SB                             : constant Name_Id := N + 307;\n+   Name_Secondary_Stack_Size           : constant Name_Id := N + 308;\n+   Name_Section                        : constant Name_Id := N + 309;\n+   Name_Semaphore                      : constant Name_Id := N + 310;\n+   Name_Simple_Barriers                : constant Name_Id := N + 311;\n+   Name_Spec_File_Name                 : constant Name_Id := N + 312;\n+   Name_Static                         : constant Name_Id := N + 313;\n+   Name_Stack_Size                     : constant Name_Id := N + 314;\n+   Name_Subunit_File_Name              : constant Name_Id := N + 315;\n+   Name_Task_Stack_Size_Default        : constant Name_Id := N + 316;\n+   Name_Task_Type                      : constant Name_Id := N + 317;\n+   Name_Time_Slicing_Enabled           : constant Name_Id := N + 318;\n+   Name_Top_Guard                      : constant Name_Id := N + 319;\n+   Name_UBA                            : constant Name_Id := N + 320;\n+   Name_UBS                            : constant Name_Id := N + 321;\n+   Name_UBSB                           : constant Name_Id := N + 322;\n+   Name_Unit_Name                      : constant Name_Id := N + 323;\n+   Name_Unknown                        : constant Name_Id := N + 324;\n+   Name_Unrestricted                   : constant Name_Id := N + 325;\n+   Name_Uppercase                      : constant Name_Id := N + 326;\n+   Name_User                           : constant Name_Id := N + 327;\n+   Name_VAX_Float                      : constant Name_Id := N + 328;\n+   Name_VMS                            : constant Name_Id := N + 329;\n+   Name_Working_Storage                : constant Name_Id := N + 330;\n \n    --  Names of recognized attributes. The entries with the comment \"Ada 83\"\n    --  are attributes that are defined in Ada 83, but not in Ada 95. These\n@@ -598,374 +599,375 @@ package Snames is\n    --  The entries marked VMS are recognized only in OpenVMS implementations\n    --  of GNAT, and are treated as illegal in all other contexts.\n \n-   First_Attribute_Name                : constant Name_Id := N + 330;\n-   Name_Abort_Signal                   : constant Name_Id := N + 330;  -- GNAT\n-   Name_Access                         : constant Name_Id := N + 331;\n-   Name_Address                        : constant Name_Id := N + 332;\n-   Name_Address_Size                   : constant Name_Id := N + 333;  -- GNAT\n-   Name_Aft                            : constant Name_Id := N + 334;\n-   Name_Alignment                      : constant Name_Id := N + 335;\n-   Name_Asm_Input                      : constant Name_Id := N + 336;  -- GNAT\n-   Name_Asm_Output                     : constant Name_Id := N + 337;  -- GNAT\n-   Name_AST_Entry                      : constant Name_Id := N + 338;  -- VMS\n-   Name_Bit                            : constant Name_Id := N + 339;  -- GNAT\n-   Name_Bit_Order                      : constant Name_Id := N + 340;\n-   Name_Bit_Position                   : constant Name_Id := N + 341;  -- GNAT\n-   Name_Body_Version                   : constant Name_Id := N + 342;\n-   Name_Callable                       : constant Name_Id := N + 343;\n-   Name_Caller                         : constant Name_Id := N + 344;\n-   Name_Code_Address                   : constant Name_Id := N + 345;  -- GNAT\n-   Name_Component_Size                 : constant Name_Id := N + 346;\n-   Name_Compose                        : constant Name_Id := N + 347;\n-   Name_Constrained                    : constant Name_Id := N + 348;\n-   Name_Count                          : constant Name_Id := N + 349;\n-   Name_Default_Bit_Order              : constant Name_Id := N + 350; -- GNAT\n-   Name_Definite                       : constant Name_Id := N + 351;\n-   Name_Delta                          : constant Name_Id := N + 352;\n-   Name_Denorm                         : constant Name_Id := N + 353;\n-   Name_Digits                         : constant Name_Id := N + 354;\n-   Name_Elaborated                     : constant Name_Id := N + 355; -- GNAT\n-   Name_Emax                           : constant Name_Id := N + 356; -- Ada 83\n-   Name_Enum_Rep                       : constant Name_Id := N + 357; -- GNAT\n-   Name_Epsilon                        : constant Name_Id := N + 358; -- Ada 83\n-   Name_Exponent                       : constant Name_Id := N + 359;\n-   Name_External_Tag                   : constant Name_Id := N + 360;\n-   Name_First                          : constant Name_Id := N + 361;\n-   Name_First_Bit                      : constant Name_Id := N + 362;\n-   Name_Fixed_Value                    : constant Name_Id := N + 363; -- GNAT\n-   Name_Fore                           : constant Name_Id := N + 364;\n-   Name_Has_Discriminants              : constant Name_Id := N + 365; -- GNAT\n-   Name_Identity                       : constant Name_Id := N + 366;\n-   Name_Img                            : constant Name_Id := N + 367; -- GNAT\n-   Name_Integer_Value                  : constant Name_Id := N + 368; -- GNAT\n-   Name_Large                          : constant Name_Id := N + 369; -- Ada 83\n-   Name_Last                           : constant Name_Id := N + 370;\n-   Name_Last_Bit                       : constant Name_Id := N + 371;\n-   Name_Leading_Part                   : constant Name_Id := N + 372;\n-   Name_Length                         : constant Name_Id := N + 373;\n-   Name_Machine_Emax                   : constant Name_Id := N + 374;\n-   Name_Machine_Emin                   : constant Name_Id := N + 375;\n-   Name_Machine_Mantissa               : constant Name_Id := N + 376;\n-   Name_Machine_Overflows              : constant Name_Id := N + 377;\n-   Name_Machine_Radix                  : constant Name_Id := N + 378;\n-   Name_Machine_Rounds                 : constant Name_Id := N + 379;\n-   Name_Machine_Size                   : constant Name_Id := N + 380; -- GNAT\n-   Name_Mantissa                       : constant Name_Id := N + 381; -- Ada 83\n-   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 382;\n-   Name_Maximum_Alignment              : constant Name_Id := N + 383; -- GNAT\n-   Name_Mechanism_Code                 : constant Name_Id := N + 384; -- GNAT\n-   Name_Model_Emin                     : constant Name_Id := N + 385;\n-   Name_Model_Epsilon                  : constant Name_Id := N + 386;\n-   Name_Model_Mantissa                 : constant Name_Id := N + 387;\n-   Name_Model_Small                    : constant Name_Id := N + 388;\n-   Name_Modulus                        : constant Name_Id := N + 389;\n-   Name_Null_Parameter                 : constant Name_Id := N + 390; -- GNAT\n-   Name_Object_Size                    : constant Name_Id := N + 391; -- GNAT\n-   Name_Partition_ID                   : constant Name_Id := N + 392;\n-   Name_Passed_By_Reference            : constant Name_Id := N + 393; -- GNAT\n-   Name_Pool_Address                   : constant Name_Id := N + 394;\n-   Name_Pos                            : constant Name_Id := N + 395;\n-   Name_Position                       : constant Name_Id := N + 396;\n-   Name_Range                          : constant Name_Id := N + 397;\n-   Name_Range_Length                   : constant Name_Id := N + 398; -- GNAT\n-   Name_Round                          : constant Name_Id := N + 399;\n-   Name_Safe_Emax                      : constant Name_Id := N + 400; -- Ada 83\n-   Name_Safe_First                     : constant Name_Id := N + 401;\n-   Name_Safe_Large                     : constant Name_Id := N + 402; -- Ada 83\n-   Name_Safe_Last                      : constant Name_Id := N + 403;\n-   Name_Safe_Small                     : constant Name_Id := N + 404; -- Ada 83\n-   Name_Scale                          : constant Name_Id := N + 405;\n-   Name_Scaling                        : constant Name_Id := N + 406;\n-   Name_Signed_Zeros                   : constant Name_Id := N + 407;\n-   Name_Size                           : constant Name_Id := N + 408;\n-   Name_Small                          : constant Name_Id := N + 409;\n-   Name_Storage_Size                   : constant Name_Id := N + 410;\n-   Name_Storage_Unit                   : constant Name_Id := N + 411; -- GNAT\n-   Name_Tag                            : constant Name_Id := N + 412;\n-   Name_Target_Name                    : constant Name_Id := N + 413; -- GNAT\n-   Name_Terminated                     : constant Name_Id := N + 414;\n-   Name_To_Address                     : constant Name_Id := N + 415; -- GNAT\n-   Name_Type_Class                     : constant Name_Id := N + 416; -- GNAT\n-   Name_UET_Address                    : constant Name_Id := N + 417; -- GNAT\n-   Name_Unbiased_Rounding              : constant Name_Id := N + 418;\n-   Name_Unchecked_Access               : constant Name_Id := N + 419;\n-   Name_Unconstrained_Array            : constant Name_Id := N + 420;\n-   Name_Universal_Literal_String       : constant Name_Id := N + 421; -- GNAT\n-   Name_Unrestricted_Access            : constant Name_Id := N + 422; -- GNAT\n-   Name_VADS_Size                      : constant Name_Id := N + 423; -- GNAT\n-   Name_Val                            : constant Name_Id := N + 424;\n-   Name_Valid                          : constant Name_Id := N + 425;\n-   Name_Value_Size                     : constant Name_Id := N + 426; -- GNAT\n-   Name_Version                        : constant Name_Id := N + 427;\n-   Name_Wchar_T_Size                   : constant Name_Id := N + 428; -- GNAT\n-   Name_Wide_Width                     : constant Name_Id := N + 429;\n-   Name_Width                          : constant Name_Id := N + 430;\n-   Name_Word_Size                      : constant Name_Id := N + 431; -- GNAT\n+   First_Attribute_Name                : constant Name_Id := N + 331;\n+   Name_Abort_Signal                   : constant Name_Id := N + 331;  -- GNAT\n+   Name_Access                         : constant Name_Id := N + 332;\n+   Name_Address                        : constant Name_Id := N + 333;\n+   Name_Address_Size                   : constant Name_Id := N + 334;  -- GNAT\n+   Name_Aft                            : constant Name_Id := N + 335;\n+   Name_Alignment                      : constant Name_Id := N + 336;\n+   Name_Asm_Input                      : constant Name_Id := N + 337;  -- GNAT\n+   Name_Asm_Output                     : constant Name_Id := N + 338;  -- GNAT\n+   Name_AST_Entry                      : constant Name_Id := N + 339;  -- VMS\n+   Name_Bit                            : constant Name_Id := N + 340;  -- GNAT\n+   Name_Bit_Order                      : constant Name_Id := N + 341;\n+   Name_Bit_Position                   : constant Name_Id := N + 342;  -- GNAT\n+   Name_Body_Version                   : constant Name_Id := N + 343;\n+   Name_Callable                       : constant Name_Id := N + 344;\n+   Name_Caller                         : constant Name_Id := N + 345;\n+   Name_Code_Address                   : constant Name_Id := N + 346;  -- GNAT\n+   Name_Component_Size                 : constant Name_Id := N + 347;\n+   Name_Compose                        : constant Name_Id := N + 348;\n+   Name_Constrained                    : constant Name_Id := N + 349;\n+   Name_Count                          : constant Name_Id := N + 350;\n+   Name_Default_Bit_Order              : constant Name_Id := N + 351; -- GNAT\n+   Name_Definite                       : constant Name_Id := N + 352;\n+   Name_Delta                          : constant Name_Id := N + 353;\n+   Name_Denorm                         : constant Name_Id := N + 354;\n+   Name_Digits                         : constant Name_Id := N + 355;\n+   Name_Elaborated                     : constant Name_Id := N + 356; -- GNAT\n+   Name_Emax                           : constant Name_Id := N + 357; -- Ada 83\n+   Name_Enum_Rep                       : constant Name_Id := N + 358; -- GNAT\n+   Name_Epsilon                        : constant Name_Id := N + 359; -- Ada 83\n+   Name_Exponent                       : constant Name_Id := N + 360;\n+   Name_External_Tag                   : constant Name_Id := N + 361;\n+   Name_First                          : constant Name_Id := N + 362;\n+   Name_First_Bit                      : constant Name_Id := N + 363;\n+   Name_Fixed_Value                    : constant Name_Id := N + 364; -- GNAT\n+   Name_Fore                           : constant Name_Id := N + 365;\n+   Name_Has_Discriminants              : constant Name_Id := N + 366; -- GNAT\n+   Name_Identity                       : constant Name_Id := N + 367;\n+   Name_Img                            : constant Name_Id := N + 368; -- GNAT\n+   Name_Integer_Value                  : constant Name_Id := N + 369; -- GNAT\n+   Name_Large                          : constant Name_Id := N + 370; -- Ada 83\n+   Name_Last                           : constant Name_Id := N + 371;\n+   Name_Last_Bit                       : constant Name_Id := N + 372;\n+   Name_Leading_Part                   : constant Name_Id := N + 373;\n+   Name_Length                         : constant Name_Id := N + 374;\n+   Name_Machine_Emax                   : constant Name_Id := N + 375;\n+   Name_Machine_Emin                   : constant Name_Id := N + 376;\n+   Name_Machine_Mantissa               : constant Name_Id := N + 377;\n+   Name_Machine_Overflows              : constant Name_Id := N + 378;\n+   Name_Machine_Radix                  : constant Name_Id := N + 379;\n+   Name_Machine_Rounds                 : constant Name_Id := N + 380;\n+   Name_Machine_Size                   : constant Name_Id := N + 381; -- GNAT\n+   Name_Mantissa                       : constant Name_Id := N + 382; -- Ada 83\n+   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 383;\n+   Name_Maximum_Alignment              : constant Name_Id := N + 384; -- GNAT\n+   Name_Mechanism_Code                 : constant Name_Id := N + 385; -- GNAT\n+   Name_Model_Emin                     : constant Name_Id := N + 386;\n+   Name_Model_Epsilon                  : constant Name_Id := N + 387;\n+   Name_Model_Mantissa                 : constant Name_Id := N + 388;\n+   Name_Model_Small                    : constant Name_Id := N + 389;\n+   Name_Modulus                        : constant Name_Id := N + 390;\n+   Name_Null_Parameter                 : constant Name_Id := N + 391; -- GNAT\n+   Name_Object_Size                    : constant Name_Id := N + 392; -- GNAT\n+   Name_Partition_ID                   : constant Name_Id := N + 393;\n+   Name_Passed_By_Reference            : constant Name_Id := N + 394; -- GNAT\n+   Name_Pool_Address                   : constant Name_Id := N + 395;\n+   Name_Pos                            : constant Name_Id := N + 396;\n+   Name_Position                       : constant Name_Id := N + 397;\n+   Name_Range                          : constant Name_Id := N + 398;\n+   Name_Range_Length                   : constant Name_Id := N + 399; -- GNAT\n+   Name_Round                          : constant Name_Id := N + 400;\n+   Name_Safe_Emax                      : constant Name_Id := N + 401; -- Ada 83\n+   Name_Safe_First                     : constant Name_Id := N + 402;\n+   Name_Safe_Large                     : constant Name_Id := N + 403; -- Ada 83\n+   Name_Safe_Last                      : constant Name_Id := N + 404;\n+   Name_Safe_Small                     : constant Name_Id := N + 405; -- Ada 83\n+   Name_Scale                          : constant Name_Id := N + 406;\n+   Name_Scaling                        : constant Name_Id := N + 407;\n+   Name_Signed_Zeros                   : constant Name_Id := N + 408;\n+   Name_Size                           : constant Name_Id := N + 409;\n+   Name_Small                          : constant Name_Id := N + 410;\n+   Name_Storage_Size                   : constant Name_Id := N + 411;\n+   Name_Storage_Unit                   : constant Name_Id := N + 412; -- GNAT\n+   Name_Tag                            : constant Name_Id := N + 413;\n+   Name_Target_Name                    : constant Name_Id := N + 414; -- GNAT\n+   Name_Terminated                     : constant Name_Id := N + 415;\n+   Name_To_Address                     : constant Name_Id := N + 416; -- GNAT\n+   Name_Type_Class                     : constant Name_Id := N + 417; -- GNAT\n+   Name_UET_Address                    : constant Name_Id := N + 418; -- GNAT\n+   Name_Unbiased_Rounding              : constant Name_Id := N + 419;\n+   Name_Unchecked_Access               : constant Name_Id := N + 420;\n+   Name_Unconstrained_Array            : constant Name_Id := N + 421;\n+   Name_Universal_Literal_String       : constant Name_Id := N + 422; -- GNAT\n+   Name_Unrestricted_Access            : constant Name_Id := N + 423; -- GNAT\n+   Name_VADS_Size                      : constant Name_Id := N + 424; -- GNAT\n+   Name_Val                            : constant Name_Id := N + 425;\n+   Name_Valid                          : constant Name_Id := N + 426;\n+   Name_Value_Size                     : constant Name_Id := N + 427; -- GNAT\n+   Name_Version                        : constant Name_Id := N + 428;\n+   Name_Wchar_T_Size                   : constant Name_Id := N + 429; -- GNAT\n+   Name_Wide_Width                     : constant Name_Id := N + 430;\n+   Name_Width                          : constant Name_Id := N + 431;\n+   Name_Word_Size                      : constant Name_Id := N + 432; -- GNAT\n \n    --  Attributes that designate attributes returning renamable functions,\n    --  i.e. functions that return other than a universal value.\n \n-   First_Renamable_Function_Attribute  : constant Name_Id := N + 432;\n-   Name_Adjacent                       : constant Name_Id := N + 432;\n-   Name_Ceiling                        : constant Name_Id := N + 433;\n-   Name_Copy_Sign                      : constant Name_Id := N + 434;\n-   Name_Floor                          : constant Name_Id := N + 435;\n-   Name_Fraction                       : constant Name_Id := N + 436;\n-   Name_Image                          : constant Name_Id := N + 437;\n-   Name_Input                          : constant Name_Id := N + 438;\n-   Name_Machine                        : constant Name_Id := N + 439;\n-   Name_Max                            : constant Name_Id := N + 440;\n-   Name_Min                            : constant Name_Id := N + 441;\n-   Name_Model                          : constant Name_Id := N + 442;\n-   Name_Pred                           : constant Name_Id := N + 443;\n-   Name_Remainder                      : constant Name_Id := N + 444;\n-   Name_Rounding                       : constant Name_Id := N + 445;\n-   Name_Succ                           : constant Name_Id := N + 446;\n-   Name_Truncation                     : constant Name_Id := N + 447;\n-   Name_Value                          : constant Name_Id := N + 448;\n-   Name_Wide_Image                     : constant Name_Id := N + 449;\n-   Name_Wide_Value                     : constant Name_Id := N + 450;\n-   Last_Renamable_Function_Attribute   : constant Name_Id := N + 450;\n+   First_Renamable_Function_Attribute  : constant Name_Id := N + 433;\n+   Name_Adjacent                       : constant Name_Id := N + 433;\n+   Name_Ceiling                        : constant Name_Id := N + 434;\n+   Name_Copy_Sign                      : constant Name_Id := N + 435;\n+   Name_Floor                          : constant Name_Id := N + 436;\n+   Name_Fraction                       : constant Name_Id := N + 437;\n+   Name_Image                          : constant Name_Id := N + 438;\n+   Name_Input                          : constant Name_Id := N + 439;\n+   Name_Machine                        : constant Name_Id := N + 440;\n+   Name_Max                            : constant Name_Id := N + 441;\n+   Name_Min                            : constant Name_Id := N + 442;\n+   Name_Model                          : constant Name_Id := N + 443;\n+   Name_Pred                           : constant Name_Id := N + 444;\n+   Name_Remainder                      : constant Name_Id := N + 445;\n+   Name_Rounding                       : constant Name_Id := N + 446;\n+   Name_Succ                           : constant Name_Id := N + 447;\n+   Name_Truncation                     : constant Name_Id := N + 448;\n+   Name_Value                          : constant Name_Id := N + 449;\n+   Name_Wide_Image                     : constant Name_Id := N + 450;\n+   Name_Wide_Value                     : constant Name_Id := N + 451;\n+   Last_Renamable_Function_Attribute   : constant Name_Id := N + 451;\n \n    --  Attributes that designate procedures\n \n-   First_Procedure_Attribute           : constant Name_Id := N + 451;\n-   Name_Output                         : constant Name_Id := N + 451;\n-   Name_Read                           : constant Name_Id := N + 452;\n-   Name_Write                          : constant Name_Id := N + 453;\n-   Last_Procedure_Attribute            : constant Name_Id := N + 453;\n+   First_Procedure_Attribute           : constant Name_Id := N + 452;\n+   Name_Output                         : constant Name_Id := N + 452;\n+   Name_Read                           : constant Name_Id := N + 453;\n+   Name_Write                          : constant Name_Id := N + 454;\n+   Last_Procedure_Attribute            : constant Name_Id := N + 454;\n \n    --  Remaining attributes are ones that return entities\n \n-   First_Entity_Attribute_Name         : constant Name_Id := N + 454;\n-   Name_Elab_Body                      : constant Name_Id := N + 454; -- GNAT\n-   Name_Elab_Spec                      : constant Name_Id := N + 455; -- GNAT\n-   Name_Storage_Pool                   : constant Name_Id := N + 456;\n+   First_Entity_Attribute_Name         : constant Name_Id := N + 455;\n+   Name_Elab_Body                      : constant Name_Id := N + 455; -- GNAT\n+   Name_Elab_Spec                      : constant Name_Id := N + 456; -- GNAT\n+   Name_Storage_Pool                   : constant Name_Id := N + 457;\n \n    --  These attributes are the ones that return types\n \n-   First_Type_Attribute_Name           : constant Name_Id := N + 457;\n-   Name_Base                           : constant Name_Id := N + 457;\n-   Name_Class                          : constant Name_Id := N + 458;\n-   Last_Type_Attribute_Name            : constant Name_Id := N + 458;\n-   Last_Entity_Attribute_Name          : constant Name_Id := N + 458;\n-   Last_Attribute_Name                 : constant Name_Id := N + 458;\n+   First_Type_Attribute_Name           : constant Name_Id := N + 458;\n+   Name_Base                           : constant Name_Id := N + 458;\n+   Name_Class                          : constant Name_Id := N + 459;\n+   Last_Type_Attribute_Name            : constant Name_Id := N + 459;\n+   Last_Entity_Attribute_Name          : constant Name_Id := N + 459;\n+   Last_Attribute_Name                 : constant Name_Id := N + 459;\n \n    --  Names of recognized locking policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. C for Ceiling_Locking). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Locking_Policy_Name           : constant Name_Id := N + 459;\n-   Name_Ceiling_Locking                : constant Name_Id := N + 459;\n-   Name_Inheritance_Locking            : constant Name_Id := N + 460;\n-   Last_Locking_Policy_Name            : constant Name_Id := N + 460;\n+   First_Locking_Policy_Name           : constant Name_Id := N + 460;\n+   Name_Ceiling_Locking                : constant Name_Id := N + 460;\n+   Name_Inheritance_Locking            : constant Name_Id := N + 461;\n+   Last_Locking_Policy_Name            : constant Name_Id := N + 461;\n \n    --  Names of recognized queuing policy identifiers.\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_Queuing). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Queuing_Policy_Name           : constant Name_Id := N + 461;\n-   Name_FIFO_Queuing                   : constant Name_Id := N + 461;\n-   Name_Priority_Queuing               : constant Name_Id := N + 462;\n-   Last_Queuing_Policy_Name            : constant Name_Id := N + 462;\n+   First_Queuing_Policy_Name           : constant Name_Id := N + 462;\n+   Name_FIFO_Queuing                   : constant Name_Id := N + 462;\n+   Name_Priority_Queuing               : constant Name_Id := N + 463;\n+   Last_Queuing_Policy_Name            : constant Name_Id := N + 463;\n \n    --  Names of recognized task dispatching policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_WIthinn_Priorities). If new policy names\n    --  are added, the first character must be distinct.\n \n-   First_Task_Dispatching_Policy_Name  : constant Name_Id := N + 463;\n-   Name_FIFO_Within_Priorities         : constant Name_Id := N + 463;\n-   Last_Task_Dispatching_Policy_Name   : constant Name_Id := N + 463;\n+   First_Task_Dispatching_Policy_Name  : constant Name_Id := N + 464;\n+   Name_FIFO_Within_Priorities         : constant Name_Id := N + 464;\n+   Last_Task_Dispatching_Policy_Name   : constant Name_Id := N + 464;\n \n    --  Names of recognized checks for pragma Suppress\n \n-   First_Check_Name                    : constant Name_Id := N + 464;\n-   Name_Access_Check                   : constant Name_Id := N + 464;\n-   Name_Accessibility_Check            : constant Name_Id := N + 465;\n-   Name_Discriminant_Check             : constant Name_Id := N + 466;\n-   Name_Division_Check                 : constant Name_Id := N + 467;\n-   Name_Elaboration_Check              : constant Name_Id := N + 468;\n-   Name_Index_Check                    : constant Name_Id := N + 469;\n-   Name_Length_Check                   : constant Name_Id := N + 470;\n-   Name_Overflow_Check                 : constant Name_Id := N + 471;\n-   Name_Range_Check                    : constant Name_Id := N + 472;\n-   Name_Storage_Check                  : constant Name_Id := N + 473;\n-   Name_Tag_Check                      : constant Name_Id := N + 474;\n-   Name_All_Checks                     : constant Name_Id := N + 475;\n-   Last_Check_Name                     : constant Name_Id := N + 475;\n+   First_Check_Name                    : constant Name_Id := N + 465;\n+   Name_Access_Check                   : constant Name_Id := N + 465;\n+   Name_Accessibility_Check            : constant Name_Id := N + 466;\n+   Name_Discriminant_Check             : constant Name_Id := N + 467;\n+   Name_Division_Check                 : constant Name_Id := N + 468;\n+   Name_Elaboration_Check              : constant Name_Id := N + 469;\n+   Name_Index_Check                    : constant Name_Id := N + 470;\n+   Name_Length_Check                   : constant Name_Id := N + 471;\n+   Name_Overflow_Check                 : constant Name_Id := N + 472;\n+   Name_Range_Check                    : constant Name_Id := N + 473;\n+   Name_Storage_Check                  : constant Name_Id := N + 474;\n+   Name_Tag_Check                      : constant Name_Id := N + 475;\n+   Name_All_Checks                     : constant Name_Id := N + 476;\n+   Last_Check_Name                     : constant Name_Id := N + 476;\n \n    --  Names corresponding to reserved keywords, excluding those already\n    --  declared in the attribute list (Access, Delta, Digits, Range).\n \n-   Name_Abort                          : constant Name_Id := N + 476;\n-   Name_Abs                            : constant Name_Id := N + 477;\n-   Name_Accept                         : constant Name_Id := N + 478;\n-   Name_And                            : constant Name_Id := N + 479;\n-   Name_All                            : constant Name_Id := N + 480;\n-   Name_Array                          : constant Name_Id := N + 481;\n-   Name_At                             : constant Name_Id := N + 482;\n-   Name_Begin                          : constant Name_Id := N + 483;\n-   Name_Body                           : constant Name_Id := N + 484;\n-   Name_Case                           : constant Name_Id := N + 485;\n-   Name_Constant                       : constant Name_Id := N + 486;\n-   Name_Declare                        : constant Name_Id := N + 487;\n-   Name_Delay                          : constant Name_Id := N + 488;\n-   Name_Do                             : constant Name_Id := N + 489;\n-   Name_Else                           : constant Name_Id := N + 490;\n-   Name_Elsif                          : constant Name_Id := N + 491;\n-   Name_End                            : constant Name_Id := N + 492;\n-   Name_Entry                          : constant Name_Id := N + 493;\n-   Name_Exception                      : constant Name_Id := N + 494;\n-   Name_Exit                           : constant Name_Id := N + 495;\n-   Name_For                            : constant Name_Id := N + 496;\n-   Name_Function                       : constant Name_Id := N + 497;\n-   Name_Generic                        : constant Name_Id := N + 498;\n-   Name_Goto                           : constant Name_Id := N + 499;\n-   Name_If                             : constant Name_Id := N + 500;\n-   Name_In                             : constant Name_Id := N + 501;\n-   Name_Is                             : constant Name_Id := N + 502;\n-   Name_Limited                        : constant Name_Id := N + 503;\n-   Name_Loop                           : constant Name_Id := N + 504;\n-   Name_Mod                            : constant Name_Id := N + 505;\n-   Name_New                            : constant Name_Id := N + 506;\n-   Name_Not                            : constant Name_Id := N + 507;\n-   Name_Null                           : constant Name_Id := N + 508;\n-   Name_Of                             : constant Name_Id := N + 509;\n-   Name_Or                             : constant Name_Id := N + 510;\n-   Name_Others                         : constant Name_Id := N + 511;\n-   Name_Out                            : constant Name_Id := N + 512;\n-   Name_Package                        : constant Name_Id := N + 513;\n-   Name_Pragma                         : constant Name_Id := N + 514;\n-   Name_Private                        : constant Name_Id := N + 515;\n-   Name_Procedure                      : constant Name_Id := N + 516;\n-   Name_Raise                          : constant Name_Id := N + 517;\n-   Name_Record                         : constant Name_Id := N + 518;\n-   Name_Rem                            : constant Name_Id := N + 519;\n-   Name_Renames                        : constant Name_Id := N + 520;\n-   Name_Return                         : constant Name_Id := N + 521;\n-   Name_Reverse                        : constant Name_Id := N + 522;\n-   Name_Select                         : constant Name_Id := N + 523;\n-   Name_Separate                       : constant Name_Id := N + 524;\n-   Name_Subtype                        : constant Name_Id := N + 525;\n-   Name_Task                           : constant Name_Id := N + 526;\n-   Name_Terminate                      : constant Name_Id := N + 527;\n-   Name_Then                           : constant Name_Id := N + 528;\n-   Name_Type                           : constant Name_Id := N + 529;\n-   Name_Use                            : constant Name_Id := N + 530;\n-   Name_When                           : constant Name_Id := N + 531;\n-   Name_While                          : constant Name_Id := N + 532;\n-   Name_With                           : constant Name_Id := N + 533;\n-   Name_Xor                            : constant Name_Id := N + 534;\n+   Name_Abort                          : constant Name_Id := N + 477;\n+   Name_Abs                            : constant Name_Id := N + 478;\n+   Name_Accept                         : constant Name_Id := N + 479;\n+   Name_And                            : constant Name_Id := N + 480;\n+   Name_All                            : constant Name_Id := N + 481;\n+   Name_Array                          : constant Name_Id := N + 482;\n+   Name_At                             : constant Name_Id := N + 483;\n+   Name_Begin                          : constant Name_Id := N + 484;\n+   Name_Body                           : constant Name_Id := N + 485;\n+   Name_Case                           : constant Name_Id := N + 486;\n+   Name_Constant                       : constant Name_Id := N + 487;\n+   Name_Declare                        : constant Name_Id := N + 488;\n+   Name_Delay                          : constant Name_Id := N + 489;\n+   Name_Do                             : constant Name_Id := N + 490;\n+   Name_Else                           : constant Name_Id := N + 491;\n+   Name_Elsif                          : constant Name_Id := N + 492;\n+   Name_End                            : constant Name_Id := N + 493;\n+   Name_Entry                          : constant Name_Id := N + 494;\n+   Name_Exception                      : constant Name_Id := N + 495;\n+   Name_Exit                           : constant Name_Id := N + 496;\n+   Name_For                            : constant Name_Id := N + 497;\n+   Name_Function                       : constant Name_Id := N + 498;\n+   Name_Generic                        : constant Name_Id := N + 499;\n+   Name_Goto                           : constant Name_Id := N + 500;\n+   Name_If                             : constant Name_Id := N + 501;\n+   Name_In                             : constant Name_Id := N + 502;\n+   Name_Is                             : constant Name_Id := N + 503;\n+   Name_Limited                        : constant Name_Id := N + 504;\n+   Name_Loop                           : constant Name_Id := N + 505;\n+   Name_Mod                            : constant Name_Id := N + 506;\n+   Name_New                            : constant Name_Id := N + 507;\n+   Name_Not                            : constant Name_Id := N + 508;\n+   Name_Null                           : constant Name_Id := N + 509;\n+   Name_Of                             : constant Name_Id := N + 510;\n+   Name_Or                             : constant Name_Id := N + 511;\n+   Name_Others                         : constant Name_Id := N + 512;\n+   Name_Out                            : constant Name_Id := N + 513;\n+   Name_Package                        : constant Name_Id := N + 514;\n+   Name_Pragma                         : constant Name_Id := N + 515;\n+   Name_Private                        : constant Name_Id := N + 516;\n+   Name_Procedure                      : constant Name_Id := N + 517;\n+   Name_Raise                          : constant Name_Id := N + 518;\n+   Name_Record                         : constant Name_Id := N + 519;\n+   Name_Rem                            : constant Name_Id := N + 520;\n+   Name_Renames                        : constant Name_Id := N + 521;\n+   Name_Return                         : constant Name_Id := N + 522;\n+   Name_Reverse                        : constant Name_Id := N + 523;\n+   Name_Select                         : constant Name_Id := N + 524;\n+   Name_Separate                       : constant Name_Id := N + 525;\n+   Name_Subtype                        : constant Name_Id := N + 526;\n+   Name_Task                           : constant Name_Id := N + 527;\n+   Name_Terminate                      : constant Name_Id := N + 528;\n+   Name_Then                           : constant Name_Id := N + 529;\n+   Name_Type                           : constant Name_Id := N + 530;\n+   Name_Use                            : constant Name_Id := N + 531;\n+   Name_When                           : constant Name_Id := N + 532;\n+   Name_While                          : constant Name_Id := N + 533;\n+   Name_With                           : constant Name_Id := N + 534;\n+   Name_Xor                            : constant Name_Id := N + 535;\n \n    --  Names of intrinsic subprograms\n \n    --  Note: Asm is missing from this list, since Asm is a legitimate\n    --  convention name. So is To_Adress, which is a GNAT attribute.\n \n-   First_Intrinsic_Name                : constant Name_Id := N + 535;\n-   Name_Divide                         : constant Name_Id := N + 535;\n-   Name_Enclosing_Entity               : constant Name_Id := N + 536;\n-   Name_Exception_Information          : constant Name_Id := N + 537;\n-   Name_Exception_Message              : constant Name_Id := N + 538;\n-   Name_Exception_Name                 : constant Name_Id := N + 539;\n-   Name_File                           : constant Name_Id := N + 540;\n-   Name_Import_Address                 : constant Name_Id := N + 541;\n-   Name_Import_Largest_Value           : constant Name_Id := N + 542;\n-   Name_Import_Value                   : constant Name_Id := N + 543;\n-   Name_Is_Negative                    : constant Name_Id := N + 544;\n-   Name_Line                           : constant Name_Id := N + 545;\n-   Name_Rotate_Left                    : constant Name_Id := N + 546;\n-   Name_Rotate_Right                   : constant Name_Id := N + 547;\n-   Name_Shift_Left                     : constant Name_Id := N + 548;\n-   Name_Shift_Right                    : constant Name_Id := N + 549;\n-   Name_Shift_Right_Arithmetic         : constant Name_Id := N + 550;\n-   Name_Source_Location                : constant Name_Id := N + 551;\n-   Name_Unchecked_Conversion           : constant Name_Id := N + 552;\n-   Name_Unchecked_Deallocation         : constant Name_Id := N + 553;\n-   Name_To_Pointer                     : constant Name_Id := N + 554;\n-   Last_Intrinsic_Name                 : constant Name_Id := N + 554;\n+   First_Intrinsic_Name                : constant Name_Id := N + 536;\n+   Name_Divide                         : constant Name_Id := N + 536;\n+   Name_Enclosing_Entity               : constant Name_Id := N + 537;\n+   Name_Exception_Information          : constant Name_Id := N + 538;\n+   Name_Exception_Message              : constant Name_Id := N + 539;\n+   Name_Exception_Name                 : constant Name_Id := N + 540;\n+   Name_File                           : constant Name_Id := N + 541;\n+   Name_Import_Address                 : constant Name_Id := N + 542;\n+   Name_Import_Largest_Value           : constant Name_Id := N + 543;\n+   Name_Import_Value                   : constant Name_Id := N + 544;\n+   Name_Is_Negative                    : constant Name_Id := N + 545;\n+   Name_Line                           : constant Name_Id := N + 546;\n+   Name_Rotate_Left                    : constant Name_Id := N + 547;\n+   Name_Rotate_Right                   : constant Name_Id := N + 548;\n+   Name_Shift_Left                     : constant Name_Id := N + 549;\n+   Name_Shift_Right                    : constant Name_Id := N + 550;\n+   Name_Shift_Right_Arithmetic         : constant Name_Id := N + 551;\n+   Name_Source_Location                : constant Name_Id := N + 552;\n+   Name_Unchecked_Conversion           : constant Name_Id := N + 553;\n+   Name_Unchecked_Deallocation         : constant Name_Id := N + 554;\n+   Name_To_Pointer                     : constant Name_Id := N + 555;\n+   Last_Intrinsic_Name                 : constant Name_Id := N + 555;\n \n    --  Reserved words used only in Ada 95\n \n-   First_95_Reserved_Word              : constant Name_Id := N + 555;\n-   Name_Abstract                       : constant Name_Id := N + 555;\n-   Name_Aliased                        : constant Name_Id := N + 556;\n-   Name_Protected                      : constant Name_Id := N + 557;\n-   Name_Until                          : constant Name_Id := N + 558;\n-   Name_Requeue                        : constant Name_Id := N + 559;\n-   Name_Tagged                         : constant Name_Id := N + 560;\n-   Last_95_Reserved_Word               : constant Name_Id := N + 560;\n+   First_95_Reserved_Word              : constant Name_Id := N + 556;\n+   Name_Abstract                       : constant Name_Id := N + 556;\n+   Name_Aliased                        : constant Name_Id := N + 557;\n+   Name_Protected                      : constant Name_Id := N + 558;\n+   Name_Until                          : constant Name_Id := N + 559;\n+   Name_Requeue                        : constant Name_Id := N + 560;\n+   Name_Tagged                         : constant Name_Id := N + 561;\n+   Last_95_Reserved_Word               : constant Name_Id := N + 561;\n \n    subtype Ada_95_Reserved_Words is\n      Name_Id range First_95_Reserved_Word .. Last_95_Reserved_Word;\n \n    --  Miscellaneous names used in semantic checking\n \n-   Name_Raise_Exception                : constant Name_Id := N + 561;\n+   Name_Raise_Exception                : constant Name_Id := N + 562;\n \n    --  Additional reserved words in GNAT Project Files\n    --  Note that Name_External is already previously declared\n \n-   Name_Binder                         : constant Name_Id := N + 562;\n-   Name_Body_Suffix                    : constant Name_Id := N + 563;\n-   Name_Builder                        : constant Name_Id := N + 564;\n-   Name_Compiler                       : constant Name_Id := N + 565;\n-   Name_Cross_Reference                : constant Name_Id := N + 566;\n-   Name_Default_Switches               : constant Name_Id := N + 567;\n-   Name_Exec_Dir                       : constant Name_Id := N + 568;\n-   Name_Executable                     : constant Name_Id := N + 569;\n-   Name_Executable_Suffix              : constant Name_Id := N + 570;\n-   Name_Extends                        : constant Name_Id := N + 571;\n-   Name_Finder                         : constant Name_Id := N + 572;\n-   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 573;\n-   Name_Gnatls                         : constant Name_Id := N + 574;\n-   Name_Gnatstub                       : constant Name_Id := N + 575;\n-   Name_Implementation                 : constant Name_Id := N + 576;\n-   Name_Implementation_Exceptions      : constant Name_Id := N + 577;\n-   Name_Implementation_Suffix          : constant Name_Id := N + 578;\n-   Name_Languages                      : constant Name_Id := N + 579;\n-   Name_Library_Dir                    : constant Name_Id := N + 580;\n-   Name_Library_Auto_Init              : constant Name_Id := N + 581;\n-   Name_Library_GCC                    : constant Name_Id := N + 582;\n-   Name_Library_Interface              : constant Name_Id := N + 583;\n-   Name_Library_Kind                   : constant Name_Id := N + 584;\n-   Name_Library_Name                   : constant Name_Id := N + 585;\n-   Name_Library_Options                : constant Name_Id := N + 586;\n-   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 587;\n-   Name_Library_Src_Dir                : constant Name_Id := N + 588;\n-   Name_Library_Symbol_File            : constant Name_Id := N + 589;\n-   Name_Library_Symbol_Policy          : constant Name_Id := N + 590;\n-   Name_Library_Version                : constant Name_Id := N + 591;\n-   Name_Linker                         : constant Name_Id := N + 592;\n-   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 593;\n-   Name_Locally_Removed_Files          : constant Name_Id := N + 594;\n-   Name_Naming                         : constant Name_Id := N + 595;\n-   Name_Object_Dir                     : constant Name_Id := N + 596;\n-   Name_Pretty_Printer                 : constant Name_Id := N + 597;\n-   Name_Project                        : constant Name_Id := N + 598;\n-   Name_Separate_Suffix                : constant Name_Id := N + 599;\n-   Name_Source_Dirs                    : constant Name_Id := N + 600;\n-   Name_Source_Files                   : constant Name_Id := N + 601;\n-   Name_Source_List_File               : constant Name_Id := N + 602;\n-   Name_Spec                           : constant Name_Id := N + 603;\n-   Name_Spec_Suffix                    : constant Name_Id := N + 604;\n-   Name_Specification                  : constant Name_Id := N + 605;\n-   Name_Specification_Exceptions       : constant Name_Id := N + 606;\n-   Name_Specification_Suffix           : constant Name_Id := N + 607;\n-   Name_Switches                       : constant Name_Id := N + 608;\n+   Name_Binder                         : constant Name_Id := N + 563;\n+   Name_Body_Suffix                    : constant Name_Id := N + 564;\n+   Name_Builder                        : constant Name_Id := N + 565;\n+   Name_Compiler                       : constant Name_Id := N + 566;\n+   Name_Cross_Reference                : constant Name_Id := N + 567;\n+   Name_Default_Switches               : constant Name_Id := N + 568;\n+   Name_Exec_Dir                       : constant Name_Id := N + 569;\n+   Name_Executable                     : constant Name_Id := N + 570;\n+   Name_Executable_Suffix              : constant Name_Id := N + 571;\n+   Name_Extends                        : constant Name_Id := N + 572;\n+   Name_Finder                         : constant Name_Id := N + 573;\n+   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 574;\n+   Name_Gnatls                         : constant Name_Id := N + 575;\n+   Name_Gnatstub                       : constant Name_Id := N + 576;\n+   Name_Implementation                 : constant Name_Id := N + 577;\n+   Name_Implementation_Exceptions      : constant Name_Id := N + 578;\n+   Name_Implementation_Suffix          : constant Name_Id := N + 579;\n+   Name_Languages                      : constant Name_Id := N + 580;\n+   Name_Library_Dir                    : constant Name_Id := N + 581;\n+   Name_Library_Auto_Init              : constant Name_Id := N + 582;\n+   Name_Library_GCC                    : constant Name_Id := N + 583;\n+   Name_Library_Interface              : constant Name_Id := N + 584;\n+   Name_Library_Kind                   : constant Name_Id := N + 585;\n+   Name_Library_Name                   : constant Name_Id := N + 586;\n+   Name_Library_Options                : constant Name_Id := N + 587;\n+   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 588;\n+   Name_Library_Src_Dir                : constant Name_Id := N + 589;\n+   Name_Library_Symbol_File            : constant Name_Id := N + 590;\n+   Name_Library_Symbol_Policy          : constant Name_Id := N + 591;\n+   Name_Library_Version                : constant Name_Id := N + 592;\n+   Name_Linker                         : constant Name_Id := N + 593;\n+   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 594;\n+   Name_Locally_Removed_Files          : constant Name_Id := N + 595;\n+   Name_Metrics                        : constant Name_Id := N + 596;\n+   Name_Naming                         : constant Name_Id := N + 597;\n+   Name_Object_Dir                     : constant Name_Id := N + 598;\n+   Name_Pretty_Printer                 : constant Name_Id := N + 599;\n+   Name_Project                        : constant Name_Id := N + 600;\n+   Name_Separate_Suffix                : constant Name_Id := N + 601;\n+   Name_Source_Dirs                    : constant Name_Id := N + 602;\n+   Name_Source_Files                   : constant Name_Id := N + 603;\n+   Name_Source_List_File               : constant Name_Id := N + 604;\n+   Name_Spec                           : constant Name_Id := N + 605;\n+   Name_Spec_Suffix                    : constant Name_Id := N + 606;\n+   Name_Specification                  : constant Name_Id := N + 607;\n+   Name_Specification_Exceptions       : constant Name_Id := N + 608;\n+   Name_Specification_Suffix           : constant Name_Id := N + 609;\n+   Name_Switches                       : constant Name_Id := N + 610;\n    --  Other miscellaneous names used in front end\n \n-   Name_Unaligned_Valid                : constant Name_Id := N + 609;\n+   Name_Unaligned_Valid                : constant Name_Id := N + 611;\n \n    --  Mark last defined name for consistency check in Snames body\n \n-   Last_Predefined_Name                : constant Name_Id := N + 609;\n+   Last_Predefined_Name                : constant Name_Id := N + 611;\n \n    subtype Any_Operator_Name is Name_Id range\n      First_Operator_Name .. Last_Operator_Name;\n@@ -1170,6 +1172,7 @@ package Snames is\n \n       Pragma_Ada_83,\n       Pragma_Ada_95,\n+      Pragma_Ada_05,\n       Pragma_C_Pass_By_Copy,\n       Pragma_Compile_Time_Warning,\n       Pragma_Component_Alignment,"}, {"sha": "38033dae76cf7fd297c09c12eb5eab2a0207fe5a", "filename": "gcc/ada/snames.h", "status": "modified", "additions": 141, "deletions": 140, "changes": 281, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsnames.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsnames.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.h?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -198,152 +198,153 @@ extern unsigned char Get_Pragma_Id (int);\n \n #define  Pragma_Ada_83                        0\n #define  Pragma_Ada_95                        1\n-#define  Pragma_C_Pass_By_Copy                2\n-#define  Pragma_Compile_Time_Warning          3\n-#define  Pragma_Component_Alignment           4\n-#define  Pragma_Convention_Identifier         5\n-#define  Pragma_Discard_Names                 6\n-#define  Pragma_Elaboration_Checking          7\n-#define  Pragma_Eliminate                     8\n-#define  Pragma_Explicit_Overriding           9\n-#define  Pragma_Extend_System                10\n-#define  Pragma_Extensions_Allowed           11\n-#define  Pragma_External_Name_Casing         12\n-#define  Pragma_Float_Representation         13\n-#define  Pragma_Initialize_Scalars           14\n-#define  Pragma_Interrupt_State              15\n-#define  Pragma_License                      16\n-#define  Pragma_Locking_Policy               17\n-#define  Pragma_Long_Float                   18\n-#define  Pragma_No_Run_Time                  19\n-#define  Pragma_No_Strict_Aliasing           20\n-#define  Pragma_Normalize_Scalars            21\n-#define  Pragma_Polling                      22\n-#define  Pragma_Persistent_Data              23\n-#define  Pragma_Persistent_Object            24\n-#define  Pragma_Profile                      25\n-#define  Pragma_Propagate_Exceptions         26\n-#define  Pragma_Queuing_Policy               27\n-#define  Pragma_Ravenscar                    28\n-#define  Pragma_Restricted_Run_Time          29\n-#define  Pragma_Restrictions                 30\n-#define  Pragma_Restriction_Warnings         31\n-#define  Pragma_Reviewable                   32\n-#define  Pragma_Source_File_Name             33\n-#define  Pragma_Source_File_Name_Project     34\n-#define  Pragma_Style_Checks                 35\n-#define  Pragma_Suppress                     36\n-#define  Pragma_Suppress_Exception_Locations 37\n-#define  Pragma_Task_Dispatching_Policy      38\n-#define  Pragma_Universal_Data               39\n-#define  Pragma_Unsuppress                   40\n-#define  Pragma_Use_VADS_Size                41\n-#define  Pragma_Validity_Checks              42\n-#define  Pragma_Warnings                     43\n+#define  Pragma_Ada_05                        2\n+#define  Pragma_C_Pass_By_Copy                3\n+#define  Pragma_Compile_Time_Warning          4\n+#define  Pragma_Component_Alignment           5\n+#define  Pragma_Convention_Identifier         6\n+#define  Pragma_Discard_Names                 7\n+#define  Pragma_Elaboration_Checking          8\n+#define  Pragma_Eliminate                     9\n+#define  Pragma_Explicit_Overriding          10\n+#define  Pragma_Extend_System                11\n+#define  Pragma_Extensions_Allowed           12\n+#define  Pragma_External_Name_Casing         13\n+#define  Pragma_Float_Representation         14\n+#define  Pragma_Initialize_Scalars           15\n+#define  Pragma_Interrupt_State              16\n+#define  Pragma_License                      17\n+#define  Pragma_Locking_Policy               18\n+#define  Pragma_Long_Float                   19\n+#define  Pragma_No_Run_Time                  20\n+#define  Pragma_No_Strict_Aliasing           21\n+#define  Pragma_Normalize_Scalars            22\n+#define  Pragma_Polling                      23\n+#define  Pragma_Persistent_Data              24\n+#define  Pragma_Persistent_Object            25\n+#define  Pragma_Profile                      26\n+#define  Pragma_Propagate_Exceptions         27\n+#define  Pragma_Queuing_Policy               28\n+#define  Pragma_Ravenscar                    29\n+#define  Pragma_Restricted_Run_Time          30\n+#define  Pragma_Restrictions                 31\n+#define  Pragma_Restriction_Warnings         32\n+#define  Pragma_Reviewable                   33\n+#define  Pragma_Source_File_Name             34\n+#define  Pragma_Source_File_Name_Project     35\n+#define  Pragma_Style_Checks                 36\n+#define  Pragma_Suppress                     37\n+#define  Pragma_Suppress_Exception_Locations 38\n+#define  Pragma_Task_Dispatching_Policy      39\n+#define  Pragma_Universal_Data               40\n+#define  Pragma_Unsuppress                   41\n+#define  Pragma_Use_VADS_Size                42\n+#define  Pragma_Validity_Checks              43\n+#define  Pragma_Warnings                     44\n \n /* Remaining pragmas */\n \n-#define  Pragma_Abort_Defer                  44\n-#define  Pragma_All_Calls_Remote             45\n-#define  Pragma_Annotate                     46\n-#define  Pragma_Assert                       47\n-#define  Pragma_Asynchronous                 48\n-#define  Pragma_Atomic                       49\n-#define  Pragma_Atomic_Components            50\n-#define  Pragma_Attach_Handler               51\n-#define  Pragma_Comment                      52\n-#define  Pragma_Common_Object                53\n-#define  Pragma_Complex_Representation       54\n-#define  Pragma_Controlled                   55\n-#define  Pragma_Convention                   56\n-#define  Pragma_CPP_Class                    57\n-#define  Pragma_CPP_Constructor              58\n-#define  Pragma_CPP_Virtual                  59\n-#define  Pragma_CPP_Vtable                   60\n-#define  Pragma_Debug                        61\n-#define  Pragma_Elaborate                    62\n-#define  Pragma_Elaborate_All                63\n-#define  Pragma_Elaborate_Body               64\n-#define  Pragma_Export                       65\n-#define  Pragma_Export_Exception             66\n-#define  Pragma_Export_Function              67\n-#define  Pragma_Export_Object                68\n-#define  Pragma_Export_Procedure             69\n-#define  Pragma_Export_Value                 70\n-#define  Pragma_Export_Valued_Procedure      71\n-#define  Pragma_External                     72\n-#define  Pragma_Finalize_Storage_Only        73\n-#define  Pragma_Ident                        74\n-#define  Pragma_Import                       75\n-#define  Pragma_Import_Exception             76\n-#define  Pragma_Import_Function              77\n-#define  Pragma_Import_Object                78\n-#define  Pragma_Import_Procedure             79\n-#define  Pragma_Import_Valued_Procedure      80\n-#define  Pragma_Inline                       81\n-#define  Pragma_Inline_Always                82\n-#define  Pragma_Inline_Generic               83\n-#define  Pragma_Inspection_Point             84\n-#define  Pragma_Interface                    85\n-#define  Pragma_Interface_Name               86\n-#define  Pragma_Interrupt_Handler            87\n-#define  Pragma_Interrupt_Priority           88\n-#define  Pragma_Java_Constructor             89\n-#define  Pragma_Java_Interface               90\n-#define  Pragma_Keep_Names                   91\n-#define  Pragma_Link_With                    92\n-#define  Pragma_Linker_Alias                 93\n-#define  Pragma_Linker_Options               94\n-#define  Pragma_Linker_Section               95\n-#define  Pragma_List                         96\n-#define  Pragma_Machine_Attribute            97\n-#define  Pragma_Main                         98\n-#define  Pragma_Main_Storage                 99\n-#define  Pragma_Memory_Size                 100\n-#define  Pragma_No_Return                   101\n-#define  Pragma_Obsolescent                 102\n-#define  Pragma_Optimize                    103\n-#define  Pragma_Optional_Overriding         104\n-#define  Pragma_Overriding                  105\n-#define  Pragma_Pack                        106\n-#define  Pragma_Page                        107\n-#define  Pragma_Passive                     108\n-#define  Pragma_Preelaborate                109\n-#define  Pragma_Priority                    110\n-#define  Pragma_Psect_Object                111\n-#define  Pragma_Pure                        112\n-#define  Pragma_Pure_Function               113\n-#define  Pragma_Remote_Call_Interface       114\n-#define  Pragma_Remote_Types                115\n-#define  Pragma_Share_Generic               116\n-#define  Pragma_Shared                      117\n-#define  Pragma_Shared_Passive              118\n-#define  Pragma_Source_Reference            119\n-#define  Pragma_Stream_Convert              120\n-#define  Pragma_Subtitle                    121\n-#define  Pragma_Suppress_All                122\n-#define  Pragma_Suppress_Debug_Info         123\n-#define  Pragma_Suppress_Initialization     124\n-#define  Pragma_System_Name                 125\n-#define  Pragma_Task_Info                   126\n-#define  Pragma_Task_Name                   127\n-#define  Pragma_Task_Storage                128\n-#define  Pragma_Thread_Body                 129\n-#define  Pragma_Time_Slice                  130\n-#define  Pragma_Title                       131\n-#define  Pragma_Unchecked_Union             132\n-#define  Pragma_Unimplemented_Unit          133\n-#define  Pragma_Unreferenced                134\n-#define  Pragma_Unreserve_All_Interrupts    135\n-#define  Pragma_Volatile                    136\n-#define  Pragma_Volatile_Components         137\n-#define  Pragma_Weak_External               138\n+#define  Pragma_Abort_Defer                  45\n+#define  Pragma_All_Calls_Remote             46\n+#define  Pragma_Annotate                     47\n+#define  Pragma_Assert                       48\n+#define  Pragma_Asynchronous                 49\n+#define  Pragma_Atomic                       50\n+#define  Pragma_Atomic_Components            51\n+#define  Pragma_Attach_Handler               52\n+#define  Pragma_Comment                      53\n+#define  Pragma_Common_Object                54\n+#define  Pragma_Complex_Representation       55\n+#define  Pragma_Controlled                   56\n+#define  Pragma_Convention                   57\n+#define  Pragma_CPP_Class                    58\n+#define  Pragma_CPP_Constructor              59\n+#define  Pragma_CPP_Virtual                  60\n+#define  Pragma_CPP_Vtable                   61\n+#define  Pragma_Debug                        62\n+#define  Pragma_Elaborate                    63\n+#define  Pragma_Elaborate_All                64\n+#define  Pragma_Elaborate_Body               65\n+#define  Pragma_Export                       66\n+#define  Pragma_Export_Exception             67\n+#define  Pragma_Export_Function              68\n+#define  Pragma_Export_Object                69\n+#define  Pragma_Export_Procedure             70\n+#define  Pragma_Export_Value                 71\n+#define  Pragma_Export_Valued_Procedure      72\n+#define  Pragma_External                     73\n+#define  Pragma_Finalize_Storage_Only        74\n+#define  Pragma_Ident                        75\n+#define  Pragma_Import                       76\n+#define  Pragma_Import_Exception             77\n+#define  Pragma_Import_Function              78\n+#define  Pragma_Import_Object                79\n+#define  Pragma_Import_Procedure             80\n+#define  Pragma_Import_Valued_Procedure      81\n+#define  Pragma_Inline                       82\n+#define  Pragma_Inline_Always                83\n+#define  Pragma_Inline_Generic               84\n+#define  Pragma_Inspection_Point             85\n+#define  Pragma_Interface                    86\n+#define  Pragma_Interface_Name               87\n+#define  Pragma_Interrupt_Handler            88\n+#define  Pragma_Interrupt_Priority           89\n+#define  Pragma_Java_Constructor             90\n+#define  Pragma_Java_Interface               91\n+#define  Pragma_Keep_Names                   92\n+#define  Pragma_Link_With                    93\n+#define  Pragma_Linker_Alias                 94\n+#define  Pragma_Linker_Options               95\n+#define  Pragma_Linker_Section               96\n+#define  Pragma_List                         97\n+#define  Pragma_Machine_Attribute            98\n+#define  Pragma_Main                         99\n+#define  Pragma_Main_Storage                100\n+#define  Pragma_Memory_Size                 101\n+#define  Pragma_No_Return                   102\n+#define  Pragma_Obsolescent                 103\n+#define  Pragma_Optimize                    104\n+#define  Pragma_Optional_Overriding         105\n+#define  Pragma_Overriding                  106\n+#define  Pragma_Pack                        107\n+#define  Pragma_Page                        108\n+#define  Pragma_Passive                     109\n+#define  Pragma_Preelaborate                110\n+#define  Pragma_Priority                    111\n+#define  Pragma_Psect_Object                112\n+#define  Pragma_Pure                        113\n+#define  Pragma_Pure_Function               114\n+#define  Pragma_Remote_Call_Interface       115\n+#define  Pragma_Remote_Types                116\n+#define  Pragma_Share_Generic               117\n+#define  Pragma_Shared                      118\n+#define  Pragma_Shared_Passive              119\n+#define  Pragma_Source_Reference            120\n+#define  Pragma_Stream_Convert              121\n+#define  Pragma_Subtitle                    122\n+#define  Pragma_Suppress_All                123\n+#define  Pragma_Suppress_Debug_Info         124\n+#define  Pragma_Suppress_Initialization     125\n+#define  Pragma_System_Name                 126\n+#define  Pragma_Task_Info                   127\n+#define  Pragma_Task_Name                   128\n+#define  Pragma_Task_Storage                129\n+#define  Pragma_Thread_Body                 130\n+#define  Pragma_Time_Slice                  131\n+#define  Pragma_Title                       132\n+#define  Pragma_Unchecked_Union             133\n+#define  Pragma_Unimplemented_Unit          134\n+#define  Pragma_Unreferenced                135\n+#define  Pragma_Unreserve_All_Interrupts    136\n+#define  Pragma_Volatile                    137\n+#define  Pragma_Volatile_Components         138\n+#define  Pragma_Weak_External               139\n \n /* The following are deliberately out of alphabetical order, see Snames */\n \n-#define  Pragma_AST_Entry                   139\n-#define  Pragma_Storage_Size                140\n-#define  Pragma_Storage_Unit                141\n+#define  Pragma_AST_Entry                   140\n+#define  Pragma_Storage_Size                141\n+#define  Pragma_Storage_Unit                142\n \n /* Define the numeric values for the conventions.  */\n "}, {"sha": "13724f061147ea1b814c53e620c32bad2fab866d", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -693,12 +693,12 @@ package body Sprint is\n \n          when N_Access_Definition =>\n \n-            --  Ada 0Y (AI-254)\n+            --  Ada 2005 (AI-254)\n \n             if Present (Access_To_Subprogram_Definition (Node)) then\n                Sprint_Node (Access_To_Subprogram_Definition (Node));\n             else\n-               --  Ada 0Y (AI-231)\n+               --  Ada 2005 (AI-231)\n \n                if Null_Exclusion_Present (Node) then\n                   Write_Str (\"not null \");\n@@ -717,7 +717,7 @@ package body Sprint is\n \n          when N_Access_Function_Definition =>\n \n-            --  Ada 0Y (AI-231)\n+            --  Ada 2005 (AI-231)\n \n             if Null_Exclusion_Present (Node) then\n                Write_Str (\"not null \");\n@@ -735,7 +735,8 @@ package body Sprint is\n             Sprint_Node (Subtype_Mark (Node));\n \n          when N_Access_Procedure_Definition =>\n-            --  Ada 0Y (AI-231)\n+\n+            --  Ada 2005 (AI-231)\n \n             if Null_Exclusion_Present (Node) then\n                Write_Str (\"not null \");\n@@ -759,7 +760,7 @@ package body Sprint is\n                Write_Str_With_Col_Check (\"constant \");\n             end if;\n \n-            --  Ada 0Y (AI-231)\n+            --  Ada 2005 (AI-231)\n \n             if Null_Exclusion_Present (Node) then\n                Write_Str (\"not null \");\n@@ -813,7 +814,8 @@ package body Sprint is\n \n          when N_Allocator =>\n             Write_Str_With_Col_Check_Sloc (\"new \");\n-            --  Ada 0Y (AI-231)\n+\n+            --  Ada 2005 (AI-231)\n \n             if Null_Exclusion_Present (Node) then\n                Write_Str (\"not null \");\n@@ -974,7 +976,7 @@ package body Sprint is\n             Sprint_Bar_List (Choices (Node));\n             Write_Str (\" => \");\n \n-            --  Ada 0Y (AI-287): Print the mbox if present\n+            --  Ada 2005 (AI-287): Print the mbox if present\n \n             if Box_Present (Node) then\n                Write_Str_With_Col_Check (\"<>\");\n@@ -997,7 +999,7 @@ package body Sprint is\n          when N_Component_Definition =>\n             Set_Debug_Sloc;\n \n-            --  Ada 0Y (AI-230): Access definition components\n+            --  Ada 2005 (AI-230): Access definition components\n \n             if Present (Access_Definition (Node)) then\n                Sprint_Node (Access_Definition (Node));\n@@ -1007,7 +1009,7 @@ package body Sprint is\n                   Write_Str_With_Col_Check (\"aliased \");\n                end if;\n \n-               --  Ada 0Y (AI-231)\n+               --  Ada 2005 (AI-231)\n \n                if Null_Exclusion_Present (Node) then\n                   Write_Str (\" not null \");\n@@ -1136,7 +1138,7 @@ package body Sprint is\n \n             Write_Str_With_Col_Check_Sloc (\"new \");\n \n-            --  Ada 0Y (AI-231)\n+            --  Ada 2005 (AI-231)\n \n             if Null_Exclusion_Present (Node) then\n                Write_Str_With_Col_Check (\"not null \");\n@@ -1751,7 +1753,7 @@ package body Sprint is\n                   Write_Str_With_Col_Check (\"constant \");\n                end if;\n \n-               --  Ada 0Y (AI-231)\n+               --  Ada 2005 (AI-231)\n \n                if Null_Exclusion_Present (Node) then\n                   Write_Str_With_Col_Check (\"not null \");\n@@ -1773,7 +1775,7 @@ package body Sprint is\n             Sprint_Node (Defining_Identifier (Node));\n             Write_Str (\" : \");\n \n-            --  Ada 0Y (AI-230): Access renamings\n+            --  Ada 2005 (AI-230): Access renamings\n \n             if Present (Access_Definition (Node)) then\n                Sprint_Node (Access_Definition (Node));\n@@ -2010,7 +2012,7 @@ package body Sprint is\n                   Write_Str_With_Col_Check (\"out \");\n                end if;\n \n-               --  Ada 0Y (AI-231)\n+               --  Ada 2005 (AI-231)\n \n                if Null_Exclusion_Present (Node) then\n                   Write_Str (\"not null \");\n@@ -2401,7 +2403,7 @@ package body Sprint is\n             Write_Id (Defining_Identifier (Node));\n             Write_Str (\" is \");\n \n-            --  Ada 0Y (AI-231)\n+            --  Ada 2005 (AI-231)\n \n             if Null_Exclusion_Present (Node) then\n                Write_Str (\"not null \");\n@@ -2598,7 +2600,7 @@ package body Sprint is\n             else\n                if First_Name (Node) or else not Dump_Original_Only then\n \n-                  --  Ada 0Y (AI-50217): Print limited with_clauses\n+                  --  Ada 2005 (AI-50217): Print limited with_clauses\n \n                   if Private_Present (Node) and Limited_Present (Node) then\n                      Write_Indent_Str (\"limited private with \");"}, {"sha": "42b0a16c940009dcdc9b4097ad2bc3fea6a2de88", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 34, "deletions": 3, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -957,6 +957,7 @@ package body Switch.C is\n             when 'X' =>\n                Ptr := Ptr + 1;\n                Extensions_Allowed := True;\n+               Ada_Version := Ada_Version_Type'Last;\n \n             --  Processing for y switch\n \n@@ -1041,7 +1042,6 @@ package body Switch.C is\n             --  Processing for 83 switch\n \n             when '8' =>\n-\n                if Ptr = Max then\n                   raise Bad_Switch;\n                end if;\n@@ -1052,8 +1052,39 @@ package body Switch.C is\n                   raise Bad_Switch;\n                else\n                   Ptr := Ptr + 1;\n-                  Ada_95 := False;\n-                  Ada_83 := True;\n+                  Ada_Version := Ada_83;\n+               end if;\n+\n+            --  Processing for 95 switch\n+\n+            when '9' =>\n+               if Ptr = Max then\n+                  raise Bad_Switch;\n+               end if;\n+\n+               Ptr := Ptr + 1;\n+\n+               if Switch_Chars (Ptr) /= '5' then\n+                  raise Bad_Switch;\n+               else\n+                  Ptr := Ptr + 1;\n+                  Ada_Version := Ada_95;\n+               end if;\n+\n+            --  Processing for 05 switch\n+\n+            when '0' =>\n+               if Ptr = Max then\n+                  raise Bad_Switch;\n+               end if;\n+\n+               Ptr := Ptr + 1;\n+\n+               if Switch_Chars (Ptr) /= '5' then\n+                  raise Bad_Switch;\n+               else\n+                  Ptr := Ptr + 1;\n+                  Ada_Version := Ada_05;\n                end if;\n \n             --  Ignore extra switch character"}, {"sha": "9052e2b16bb14da59825a475266dd65a3a52259c", "filename": "gcc/ada/system-vms_64.ads", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsystem-vms_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fsystem-vms_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms_64.ads?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "previous_filename": "gcc/ada/5qsystem.ads"}, {"sha": "51c8edc0fd4982818807f18353161f90242e5d61", "filename": "gcc/ada/trans.c", "status": "modified", "additions": 58, "deletions": 37, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftrans.c?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -113,7 +113,7 @@ static GTY(()) tree gnu_return_label_stack;\n static tree tree_transform (Node_Id);\n static rtx first_nondeleted_insn (rtx);\n static tree start_block_stmt (void);\n-static tree end_block_stmt (void);\n+static tree end_block_stmt (bool);\n static tree build_block_stmt (List_Id);\n static tree make_expr_stmt_from_rtl (rtx, Node_Id);\n static void elaborate_all_entities (Node_Id);\n@@ -249,7 +249,7 @@ gnat_to_code (Node_Id gnat_node)\n \n   start_block_stmt ();\n   gnu_root = tree_transform (gnat_node);\n-  gnat_expand_stmt (end_block_stmt ());\n+  gnat_expand_stmt (end_block_stmt (false));\n \n   /* If we return a statement, generate code for it.  */\n   if (IS_STMT (gnu_root))\n@@ -291,7 +291,7 @@ gnat_to_gnu (Node_Id gnat_node)\n \n   start_block_stmt ();\n   gnu_root = tree_transform (gnat_node);\n-  gnat_expand_stmt (end_block_stmt ());\n+  gnat_expand_stmt (end_block_stmt (false));\n \n   if (gnu_root == error_mark_node)\n     {\n@@ -327,8 +327,7 @@ gnat_to_gnu (Node_Id gnat_node)\n \t      tree gnu_expr_stmt = make_expr_stmt_from_rtl (insns, gnat_node);\n \n \t      TREE_CHAIN (gnu_expr_stmt) = gnu_root;\n-\t      gnu_root = build_nt (BLOCK_STMT, gnu_expr_stmt);\n-\t      TREE_TYPE (gnu_root) = void_type_node;\n+\t      gnu_root = build_nt (BLOCK_STMT, gnu_expr_stmt, NULL_TREE);\n \t      TREE_SLOC (gnu_root) = Sloc (gnat_node);\n \t    }\n \t  else\n@@ -2212,6 +2211,8 @@ tree_transform (Node_Id gnat_node)\n \t     Present (gnat_when);\n \t     gnat_when = Next_Non_Pragma (gnat_when))\n \t  {\n+\t    tree gnu_temp_stmt, gnu_block;\n+\n \t    /* First compile all the different case choices for the  current\n \t       WHEN alternative.  */\n \n@@ -2293,17 +2294,25 @@ tree_transform (Node_Id gnat_node)\n \t       set of statements instead of the block containing the Case\n \t       statement.  */\n \t    gnat_pushlevel ();\n-\t    expand_start_bindings (0);\n+\t    start_block_stmt ();\n+\n \t    for (gnat_statement = First (Statements (gnat_when));\n \t\t Present (gnat_statement);\n \t\t gnat_statement = Next (gnat_statement))\n-\t      gnat_to_code (gnat_statement);\n+\t      add_stmt (gnat_to_gnu (gnat_statement));\n \n \t    /* Communicate to GCC that we are done with the current WHEN,\n \t       i.e. insert a \"break\" statement.  */\n-\t    expand_exit_something ();\n-\t    expand_end_bindings (NULL_TREE, block_has_vars (), -1);\n-\t    gnat_poplevel ();\n+\t    gnu_temp_stmt = build_nt (BREAK_STMT);\n+\t    TREE_SLOC (gnu_temp_stmt) = Sloc (gnat_when);\n+\t    add_stmt (gnu_temp_stmt);\n+\n+\t    gnu_block = gnat_poplevel ();\n+\t    gnu_temp_stmt = end_block_stmt (gnu_block != 0);\n+\t    if (gnu_block)\n+\t      BLOCK_STMT_BLOCK (gnu_temp_stmt) = gnu_block;\n+\n+\t    expand_expr_stmt (gnu_temp_stmt);\n \t  }\n \n \texpand_end_case (gnu_expr);\n@@ -2377,7 +2386,7 @@ tree_transform (Node_Id gnat_node)\n \t    /* Declare the loop index and set it to its initial value.  */\n \t    start_block_stmt ();\n \t    gnu_loop_var = gnat_to_gnu_entity (gnat_loop_var, gnu_first, 1);\n-\t    expand_expr_stmt (end_block_stmt ());\n+\t    expand_expr_stmt (end_block_stmt (false));\n \t    if (DECL_BY_REF_P (gnu_loop_var))\n \t      gnu_loop_var = build_unary_op (INDIRECT_REF, NULL_TREE,\n \t\t\t\t\t     gnu_loop_var);\n@@ -2487,7 +2496,7 @@ tree_transform (Node_Id gnat_node)\n       expand_start_bindings (0);\n       start_block_stmt ();\n       process_decls (Declarations (gnat_node), Empty, Empty, 1, 1);\n-      gnat_expand_stmt (end_block_stmt ());\n+      gnat_expand_stmt (end_block_stmt (false));\n       gnat_to_code (Handled_Statement_Sequence (gnat_node));\n       expand_end_bindings (NULL_TREE, block_has_vars (), -1);\n       gnat_poplevel ();\n@@ -2768,10 +2777,10 @@ tree_transform (Node_Id gnat_node)\n \t\t\t   gnat_to_gnu_entity (gnat_param, NULL_TREE, 1));\n \t    }\n \n-\tgnat_expand_stmt (end_block_stmt());\n+\tgnat_expand_stmt (end_block_stmt (false));\n \tstart_block_stmt ();\n \tprocess_decls (Declarations (gnat_node), Empty, Empty, 1, 1);\n-\tgnat_expand_stmt (end_block_stmt ());\n+\tgnat_expand_stmt (end_block_stmt (false));\n \n \t/* Generate the code of the subprogram itself.  A return statement\n \t   will be present and any OUT parameters will be handled there.  */\n@@ -3299,7 +3308,7 @@ tree_transform (Node_Id gnat_node)\n \tgnu_result = chainon (nreverse (gnu_before_list),\n \t\t\t      nreverse (gnu_after_list));\n \tif (TREE_CHAIN (gnu_result))\n-\t  gnu_result = build_nt (BLOCK_STMT, gnu_result);\n+\t  gnu_result = build_nt (BLOCK_STMT, gnu_result, NULL_TREE);\n       }\n       break;\n \n@@ -3316,7 +3325,7 @@ tree_transform (Node_Id gnat_node)\n       start_block_stmt ();\n       process_decls (Visible_Declarations (gnat_node),\n \t\t     Private_Declarations (gnat_node), Empty, 1, 1);\n-      gnat_expand_stmt (end_block_stmt ());\n+      gnat_expand_stmt (end_block_stmt (false));\n       break;\n \n     case N_Package_Body:\n@@ -3327,7 +3336,7 @@ tree_transform (Node_Id gnat_node)\n \n       start_block_stmt ();\n       process_decls (Declarations (gnat_node), Empty, Empty, 1, 1);\n-      gnat_expand_stmt (end_block_stmt ());\n+      gnat_expand_stmt (end_block_stmt (false));\n \n       if (Present (Handled_Statement_Sequence (gnat_node)))\n \t{\n@@ -3384,7 +3393,7 @@ tree_transform (Node_Id gnat_node)\n       start_block_stmt();\n       process_decls (Declarations (Aux_Decls_Node (gnat_node)),\n \t\t     Empty, Empty, 1, 1);\n-      gnat_expand_stmt (end_block_stmt ());\n+      gnat_expand_stmt (end_block_stmt (false));\n \n       gnat_to_code (Unit (gnat_node));\n \n@@ -3508,7 +3517,7 @@ tree_transform (Node_Id gnat_node)\n \n \t    start_block_stmt ();\n \t    add_decl_stmt (gnu_cleanup_decl, gnat_node);\n-\t    gnat_expand_stmt (end_block_stmt ());\n+\t    gnat_expand_stmt (end_block_stmt (false));\n \t    expand_decl_cleanup (gnu_cleanup_decl, gnu_cleanup_call);\n \t  }\n \n@@ -3542,7 +3551,7 @@ tree_transform (Node_Id gnat_node)\n \t    start_block_stmt ();\n \t    add_decl_stmt (gnu_jmpsave_decl, gnat_node);\n \t    add_decl_stmt (gnu_jmpbuf_decl, gnat_node);\n-\t    gnat_expand_stmt (end_block_stmt ());\n+\t    gnat_expand_stmt (end_block_stmt (false));\n \n \t    TREE_VALUE (gnu_block_stack) = gnu_jmpbuf_decl;\n \n@@ -3579,7 +3588,7 @@ tree_transform (Node_Id gnat_node)\n \t\t\t   gnu_except_ptr_stack);\n \t    start_block_stmt ();\n \t    add_decl_stmt (TREE_VALUE (gnu_except_ptr_stack), gnat_node);\n-\t    gnat_expand_stmt (end_block_stmt ());\n+\t    gnat_expand_stmt (end_block_stmt (false));\n \n \t    /* Generate code for each handler. The N_Exception_Handler case\n \t       below does the real work. We ignore the dummy exception handler\n@@ -3630,7 +3639,7 @@ tree_transform (Node_Id gnat_node)\n \tif (Present (First_Real_Statement (gnat_node)))\n \t  process_decls (Statements (gnat_node), Empty,\n \t\t\t First_Real_Statement (gnat_node), 1, 1);\n-\tgnat_expand_stmt (end_block_stmt ());\n+\tgnat_expand_stmt (end_block_stmt (false));\n \n \t/* Generate code for each statement in the block.  */\n \tfor (gnat_temp = (Present (First_Real_Statement (gnat_node))\n@@ -3861,7 +3870,7 @@ tree_transform (Node_Id gnat_node)\n \n \t    start_block_stmt ();\n \t    add_decl_stmt (gnu_incoming_exc_ptr, gnat_node);\n-\t    gnat_expand_stmt (end_block_stmt ());\n+\t    gnat_expand_stmt (end_block_stmt (false));\n \t    expand_expr_stmt\n \t      (build_call_1_expr (begin_handler_decl, gnu_incoming_exc_ptr));\n \t    expand_decl_cleanup\n@@ -3993,7 +4002,7 @@ tree_transform (Node_Id gnat_node)\n       process_freeze_entity (gnat_node);\n       start_block_stmt ();\n       process_decls (Actions (gnat_node), Empty, Empty, 1, 1);\n-      gnat_expand_stmt (end_block_stmt ());\n+      gnat_expand_stmt (end_block_stmt (false));\n       break;\n \n     case N_Itype_Reference:\n@@ -4281,7 +4290,8 @@ start_block_stmt ()\n       TREE_TYPE (gnu_block_stmt) = void_type_node;\n     }\n \n-  BLOCK_STMT_LIST (gnu_block_stmt) = 0;\n+  BLOCK_STMT_LIST (gnu_block_stmt) = NULL_TREE;\n+  BLOCK_STMT_BLOCK (gnu_block_stmt) = NULL_TREE;\n   TREE_CHAIN (gnu_block_stmt) = gnu_block_stmt_node;\n   gnu_block_stmt_node = gnu_block_stmt;\n \n@@ -4301,6 +4311,7 @@ add_stmt (tree gnu_stmt)\n     {\n       TREE_CHAIN (gnu_stmt) = BLOCK_STMT_LIST (gnu_block_stmt_node);\n       BLOCK_STMT_LIST (gnu_block_stmt_node) = gnu_stmt;\n+      TREE_TYPE (gnu_stmt) = void_type_node;\n     }\n \n   /* If this is a DECL_STMT for a variable with DECL_INIT_BY_ASSIGN_P set,\n@@ -4354,10 +4365,11 @@ add_decl_stmt (tree gnu_decl, Entity_Id gnat_entity)\n }\n \n /* Return the BLOCK_STMT that corresponds to the statement that add_stmt\n-   has been emitting or just a single statement if only one.  */\n+   has been emitting or just a single statement if only one.  If FORCE\n+   is true, then always emit the BLOCK_STMT.  */\n \n static tree\n-end_block_stmt ()\n+end_block_stmt (bool force)\n {\n   tree gnu_block_stmt = gnu_block_stmt_node;\n   tree gnu_retval = gnu_block_stmt;\n@@ -4368,12 +4380,12 @@ end_block_stmt ()\n   /* If we have only one statement, return it and free this node.  Otherwise,\n      finish setting up this node and return it.  If we have no statements,\n      return a NULL_STMT.  */\n-  if (BLOCK_STMT_LIST (gnu_block_stmt) == 0)\n+  if (!force && BLOCK_STMT_LIST (gnu_block_stmt) == 0)\n     {\n       gnu_retval = build_nt (NULL_STMT);\n       TREE_TYPE (gnu_retval) = void_type_node;\n     }\n-  else if (TREE_CHAIN (BLOCK_STMT_LIST (gnu_block_stmt)) == 0)\n+  else if (!force && TREE_CHAIN (BLOCK_STMT_LIST (gnu_block_stmt)) == 0)\n     gnu_retval = BLOCK_STMT_LIST (gnu_block_stmt);\n   else\n     {\n@@ -4410,7 +4422,7 @@ build_block_stmt (List_Id gnat_list)\n        gnat_node = Next (gnat_node))\n     add_stmt (gnat_to_gnu (gnat_node));\n \n-  gnu_result = end_block_stmt ();\n+  gnu_result = end_block_stmt (false);\n   return TREE_CODE (gnu_result) == NULL_STMT ? NULL_TREE : gnu_result;\n }\n \n@@ -4470,9 +4482,15 @@ gnat_expand_stmt (tree gnu_stmt)\n       break;\n \n     case BLOCK_STMT:\n+      if (BLOCK_STMT_BLOCK (gnu_stmt))\n+\texpand_start_bindings_and_block (0, BLOCK_STMT_BLOCK (gnu_stmt));\n+\n       for (gnu_elmt = BLOCK_STMT_LIST (gnu_stmt); gnu_elmt;\n \t   gnu_elmt = TREE_CHAIN (gnu_elmt))\n \tgnat_expand_stmt (gnu_elmt);\n+\n+      if (BLOCK_STMT_BLOCK (gnu_stmt))\n+\texpand_end_bindings (NULL_TREE, 1, -1);\n       break;\n \n     case IF_STMT:\n@@ -4541,6 +4559,10 @@ gnat_expand_stmt (tree gnu_stmt)\n \t  }\n       break;\n \n+    case BREAK_STMT:\n+      expand_exit_something ();\n+      break;\n+\n     default:\n      abort ();\n     }\n@@ -4819,7 +4841,7 @@ process_decls (List_Id gnat_decls, List_Id gnat_decls2,\n \t      {\n \t\tstart_block_stmt ();\n \t\tprocess_freeze_entity (gnat_decl);\n-\t\tgnat_expand_stmt (end_block_stmt ());\n+\t\tgnat_expand_stmt (end_block_stmt (false));\n \t\tprocess_decls (Actions (gnat_decl), Empty, Empty, 1, 0);\n \t      }\n \n@@ -4867,15 +4889,14 @@ process_decls (List_Id gnat_decls, List_Id gnat_decls2,\n \n \t    /* Concurrent stubs stand for the corresponding subprogram bodies,\n \t       which are deferred like other bodies.  */\n-\t      else if (Nkind (gnat_decl) == N_Task_Body_Stub\n-\t\t       || Nkind (gnat_decl) == N_Protected_Body_Stub)\n-\t\t;\n-\n+\t    else if (Nkind (gnat_decl) == N_Task_Body_Stub\n+\t\t     || Nkind (gnat_decl) == N_Protected_Body_Stub)\n+\t      ;\n \t    else\n \t      {\n \t\tstart_block_stmt ();\n \t\tgnat_to_code (gnat_decl);\n-\t\tgnat_expand_stmt (end_block_stmt ());\n+\t\tgnat_expand_stmt (end_block_stmt (false));\n \t      }\n \t  }\n \n@@ -5334,7 +5355,7 @@ process_type (Entity_Id gnat_entity)\n \t\t\t TREE_TYPE (gnu_new));\n     }\n \n-  gnat_expand_stmt (end_block_stmt ());\n+  gnat_expand_stmt (end_block_stmt (false));\n }\n \f\n /* GNAT_ASSOC is the front of the Component_Associations of an N_Aggregate."}, {"sha": "c30494f216265d7ba22b60e1e68d25a0d4672a33", "filename": "gcc/ada/utils.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils.c?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -257,9 +257,9 @@ gnat_pushlevel ()\n   current_binding_level = newlevel;\n }\n \n-/* Exit a binding level.  */\n+/* Exit a binding level.  Return the BLOCK node, if any.  */\n \n-void\n+tree\n gnat_poplevel ()\n {\n   struct ada_binding_level *level = current_binding_level;\n@@ -289,13 +289,14 @@ gnat_poplevel ()\n      parent block. Otherwise, add it to the list of its parent.  */\n   if (TREE_CODE (BLOCK_SUPERCONTEXT (block)) == FUNCTION_DECL)\n     ;\n-  else if (BLOCK_VARS (block) == 0)\n+  else if (BLOCK_VARS (block) == NULL_TREE)\n     {\n       BLOCK_SUBBLOCKS (level->chain->block)\n \t= chainon (BLOCK_SUBBLOCKS (block),\n \t\t   BLOCK_SUBBLOCKS (level->chain->block));\n       TREE_CHAIN (block) = free_block_chain;\n       free_block_chain = block;\n+      block = NULL_TREE;\n     }\n   else\n     {\n@@ -308,6 +309,7 @@ gnat_poplevel ()\n   current_binding_level = level->chain;\n   level->chain = free_binding_level;\n   free_binding_level = level;\n+  return block;\n }\n \n /* Insert BLOCK at the end of the list of subblocks of the"}, {"sha": "1966d96c254345124159745f348ee17d2e3156aa", "filename": "gcc/ada/vms_conv.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fvms_conv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fvms_conv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_conv.adb?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -308,6 +308,16 @@ package body VMS_Conv is\n             Params   => new Parameter_Array'(1 => Unlimited_Files),\n             Defext   => \"   \"),\n \n+         Metric =>\n+           (Cname    => new S'(\"METRIC\"),\n+            Usage    => new S'(\"GNAT METRIC /qualifiers source_file\"),\n+            VMS_Only => False,\n+            Unixcmd  => new S'(\"gnatmetric\"),\n+            Unixsws  => null,\n+            Switches => Metric_Switches'Access,\n+            Params   => new Parameter_Array'(1 => Unlimited_Files),\n+            Defext   => \"   \"),\n+\n          Name =>\n            (Cname    => new S'(\"NAME\"),\n             Usage    => new S'(\"GNAT NAME /qualifiers naming-pattern \""}, {"sha": "8ce7cfe4e5b7c60f8049051c920c8f56ac2a36bb", "filename": "gcc/ada/vms_conv.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fvms_conv.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fvms_conv.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_conv.ads?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2003 Free Software Foundation, Inc.               --\n+--          Copyright (C) 2003-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -97,7 +97,7 @@ package VMS_Conv is\n \n    type Command_Type is\n      (Bind, Chop, Clean, Compile, Elim, Find, Krunch, Library, Link, List,\n-      Make, Name, Preprocess, Pretty, Shared, Stub, Xref, Undefined);\n+      Make, Name, Preprocess, Pretty, Shared, Stub, Metric, Xref, Undefined);\n \n    type Alternate_Command is (Comp, Ls, Kr, Pp, Prep);\n    --  Alternate command libel for non VMS system"}, {"sha": "43b4fe46859a2bb04b6a24677fa3ea29e74682d8", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 179, "deletions": 6, "changes": 185, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab80019b6aadd0fb427920d38428db7ed1ccbf1/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=0ab80019b6aadd0fb427920d38428db7ed1ccbf1", "patch": "@@ -933,22 +933,26 @@ package VMS_Data is\n    --   Ada 95 program.\n \n    S_GCC_Ada_95  : aliased constant S := \"/95 \"                            &\n-                                             \"!-gnat83\";\n+                                             \"-gnat95\";\n    --        /95 (D)\n    --\n-   --   Same as /NO83.\n-   --\n-   --        /NO95\n+   --   Allows GNAT to recognize the full range of Ada 95 constructs.\n+   --   This is the normal default for GNAT Pro.\n+\n+   S_GCC_Ada_05 : aliased constant S := \"/05 \"                            &\n+                                             \"-gnat05\";\n+   --        /05 (D)\n    --\n-   --   Same as /83.\n+   --   Allows GNAT to recognize all implemented proposed Ada 2005\n+   --   extensions. See features file for list of implemented features.\n \n    S_GCC_Asm     : aliased constant S := \"/ASM \"                           &\n                                              \"-S,!-c\";\n    --        /NOASM (D)\n    --        /ASM\n    --\n    --   Use to cause the assembler source file to be generated, using S as the\n-   --   filetype, instead of the object file.  This may be useful if you need\n+   --   filetype, instead of the object file. This may be useful if you need\n    --   to examine the generated assembly code.\n \n    S_GCC_Checks  : aliased constant S := \"/CHECKS=\"                        &\n@@ -2795,6 +2799,7 @@ package VMS_Data is\n    GCC_Switches : aliased constant Switches :=\n      (S_GCC_Ada_83  'Access,\n       S_GCC_Ada_95  'Access,\n+      S_GCC_Ada_05  'Access,\n       S_GCC_Asm     'Access,\n       S_GCC_Checks  'Access,\n       S_GCC_ChecksX 'Access,\n@@ -4014,6 +4019,174 @@ package VMS_Data is\n       S_Make_Use_Map 'Access,\n       S_Make_Verbose 'Access);\n \n+   ------------------------------\n+   -- Switches for GNAT METRIC --\n+   ------------------------------\n+\n+   S_Metric_Config  : aliased constant S := \"/CONFIGURATION_PRAGMAS_FILE=<\" &\n+                                              \"-gnatec>\";\n+   --        /CONFIGURATION_PRAGMAS_FILE=file\n+   --\n+   --   Specify a configuration pragmas file that need to be taken into account\n+\n+   S_Metric_Current : aliased constant S := \"/CURRENT_DIRECTORY \"           &\n+                                             \"!-I-\";\n+   --        /CURRENT_DIRECTORY (D)\n+   --\n+   --   Look for files in the directory where GNAT METRIC was invoked\n+   --\n+   --        /NOCURRENT_DIRECTORY\n+   --\n+   --   Do not look for files in the directory where GNAT METRIC was invoked\n+\n+   S_Metric_Debug    : aliased constant S := \"/DEBUG_OUTPUT \"               &\n+                                             \"-dv\";\n+   --      /DEBUG_OUTPUT\n+\n+   S_Metric_Element : aliased constant S := \"/ELEMENT_METRICS=\"             &\n+                                             \"ALL \"                         &\n+                                              \"!-ed,!-es,!-enl,!-eis,\"      &\n+                                              \"!-eas,!-eit,!-eat,!-enu \"    &\n+                                             \"DECLARATION_TOTAL \"           &\n+                                              \"-ed \"                        &\n+                                             \"STATEMENT_TOTAL \"             &\n+                                              \"-es \"                        &\n+                                             \"LOOP_NESTING_MAX \"            &\n+                                              \"-enl \"                       &\n+                                             \"INT_SUBPROGRAMS \"             &\n+                                              \"-eis \"                       &\n+                                             \"SUBPROGRAMS_ALL \"             &\n+                                              \"-eas \"                       &\n+                                             \"INT_TYPES \"                   &\n+                                              \"-eit \"                       &\n+                                             \"TYPES_ALL \"                   &\n+                                              \"-eat \"                       &\n+                                             \"PROGRAM_NESTING_MAX \"         &\n+                                              \"-enu\";\n+   --       /ELEMENT_METRICS=(option, option ...)\n+\n+   S_Metric_Ext     : aliased constant S := \"/EXTERNAL_REFERENCE=\" & '\"'    &\n+                                             \"-X\" & '\"';\n+   --       /EXTERNAL_REFERENCE=\"name=val\"\n+   --\n+   --   Specifies an external reference to the project manager. Useful only if\n+   --   /PROJECT_FILE is used.\n+   --\n+   --   Example:\n+   --      /EXTERNAL_REFERENCE=\"DEBUG=TRUE\"\n+\n+   S_Metric_Format  : aliased constant S := \"/FORMAT_OUTPUT=\"               &\n+                                             \"DEFAULT \"                     &\n+                                              \"!-x,!-nt,!-sfn \"             &\n+                                             \"XML \"                         &\n+                                              \"-x \"                         &\n+                                             \"NO_TEXT \"                     &\n+                                              \"-nt \"                        &\n+                                             \"SHORT_SOURCE_FILE_NAME \"      &\n+                                              \"-sfn\";\n+   --       /FORMAT_OUTPUT=(option, option ...)\n+\n+   S_Metric_Globout : aliased constant S := \"/GLOBAL_OUTPUT=@\"              &\n+                                             \"-og@\";\n+   --        /GLOBAL_OUTPUT=filename\n+\n+   S_Metric_Line     : aliased constant S := \"/LINE_METRICS=\"               &\n+                                                \"ALL \"                      &\n+                                                 \"!-la,!-lcode,!-lcomm,\"    &\n+                                                 \"!-leol,!-lb \"             &\n+                                                \"LINES_ALL \"                &\n+                                                 \"-la \"                     &\n+                                                \"CODE_LINES \"               &\n+                                                 \"-lcode \"                  &\n+                                                \"COMENT_LINES \"             &\n+                                                 \"-lcomm \"                  &\n+                                                \"MIXED_CODE_COMMENTS \"      &\n+                                                 \"-leol \"                   &\n+                                                \"BLANK_LINES \"              &\n+                                                 \"-lb \";\n+   --      /LINE_METRICS=(option, option ...)\n+\n+   S_Metric_Mess    : aliased constant S := \"/MESSAGES_PROJECT_FILE=\"       &\n+                                             \"DEFAULT \"                     &\n+                                                \"-vP0 \"                     &\n+                                             \"MEDIUM \"                      &\n+                                                \"-vP1 \"                     &\n+                                             \"HIGH \"                        &\n+                                                \"-vP2\";\n+   --        /MESSAGES_PROJECT_FILE[=messages-option]\n+   --\n+   --   Specifies the \"verbosity\" of the parsing of project files.\n+   --   messages-option may be one of the following:\n+   --\n+   --      DEFAULT (D)  No messages are output if there is no error or warning.\n+   --\n+   --      MEDIUM       A small number of messages are output.\n+   --\n+   --      HIGH         A great number of messages are output, most of them not\n+   --                   being useful for the user.\n+\n+   S_Metric_Project : aliased constant S := \"/PROJECT_FILE=<\"               &\n+                                             \"-P>\";\n+   --        /PROJECT_FILE=filename\n+   --\n+   --   Specifies the main project file to be used. The project files rooted\n+   --   at the main project file will be parsed before the invocation of the\n+   --   binder.\n+\n+   S_Metric_Quiet    : aliased constant S := \"/QUIET \"                      &\n+                                             \"-q\";\n+   --      /QUIET\n+\n+   S_Metric_Search  : aliased constant S := \"/SEARCH=*\"                     &\n+                                             \"-I*\";\n+   --        /SEARCH=(directory[,...])\n+\n+   S_Metric_Suffix  : aliased constant S := \"/SUFFIX_DETAILS=\" & '\"'        &\n+                                             \"-o\" & '\"';\n+   --        /SUFFIX_DETAILS=suffix\n+\n+   S_Metric_Suppress : aliased constant S :=  \"/SUPPRESS=\"                  &\n+                                               \"NOTHING \"                   &\n+                                                \"!-nocc,!-noec,!-nonl,\"     &\n+                                                \"!-ne,!-nolocal \"           &\n+                                               \"CYCLOMATIC_COMPLEXITY \"     &\n+                                                \"-nocc \"                    &\n+                                               \"ESSENTIAL_COMPLEXITY \"      &\n+                                                \"-noec \"                    &\n+                                               \"MAXIMAL_LOOP_NESTING \"      &\n+                                                \"-nonl \"                    &\n+                                               \"EXITS_AS_GOTOS \"            &\n+                                                \"-ne \"                      &\n+                                               \"LOCAL_DETAILS \"             &\n+                                                \"-nolocal \";\n+   --      /SUPPRESS=(option, option ...)\n+\n+   S_Metric_Verbose  : aliased constant S := \"/VERBOSE \"                    &\n+                                             \"-v\";\n+   --      /VERBOSE\n+\n+   S_Metric_XMLout  : aliased constant S := \"/XML_OUTPUT=@\"                 &\n+                                             \"-ox@\";\n+   --        /XML_OUTPUT=filename\n+\n+   Metric_Switches : aliased constant Switches :=\n+     (S_Metric_Config   'Access,\n+      S_Metric_Current  'Access,\n+      S_Metric_Debug    'Access,\n+      S_Metric_Element  'Access,\n+      S_Metric_Ext      'Access,\n+      S_Metric_Format   'Access,\n+      S_Metric_Globout  'Access,\n+      S_Metric_Line     'Access,\n+      S_Metric_Mess     'Access,\n+      S_Metric_Project  'Access,\n+      S_Metric_Quiet    'Access,\n+      S_Metric_Search   'Access,\n+      S_Metric_Suffix   'Access,\n+      S_Metric_Suppress 'Access,\n+      S_Metric_Verbose  'Access,\n+      S_Metric_XMLout   'Access);\n+\n    ----------------------------\n    -- Switches for GNAT NAME --\n    ----------------------------"}]}