{"sha": "0148e1ee90a9cec90cbd0b32b99cf532eaae9699", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE0OGUxZWU5MGE5Y2VjOTBjYmQwYjMyYjk5Y2Y1MzJlYWFlOTY5OQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-08-29T18:05:15Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-08-29T18:05:15Z"}, "message": "natFileDescriptorPosix.cc (setLength): Handle case where ftruncate is missing.\n\n\t* java/io/natFileDescriptorPosix.cc (setLength): Handle case where\n\tftruncate is missing.\n\t* configure, include/config.h.in: Rebuilt.\n\t* acconfig.h (HAVE_FTRUNCATE): Mention.\n\t* configure.in: Check for ftruncate.\n\nFrom-SVN: r56658", "tree": {"sha": "a31a718cf9037c5c8f783d5e793792805d6ed4b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a31a718cf9037c5c8f783d5e793792805d6ed4b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0148e1ee90a9cec90cbd0b32b99cf532eaae9699", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0148e1ee90a9cec90cbd0b32b99cf532eaae9699", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0148e1ee90a9cec90cbd0b32b99cf532eaae9699", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0148e1ee90a9cec90cbd0b32b99cf532eaae9699/comments", "author": null, "committer": null, "parents": [{"sha": "3308c46e47a0b17d37b4c29a130e6519c424a737", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3308c46e47a0b17d37b4c29a130e6519c424a737", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3308c46e47a0b17d37b4c29a130e6519c424a737"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "a00a4db5f9001cf6dc72c9754820dae0b6980563", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0148e1ee90a9cec90cbd0b32b99cf532eaae9699/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0148e1ee90a9cec90cbd0b32b99cf532eaae9699/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=0148e1ee90a9cec90cbd0b32b99cf532eaae9699", "patch": "@@ -1,3 +1,11 @@\n+2002-08-29  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/io/natFileDescriptorPosix.cc (setLength): Handle case where\n+\tftruncate is missing.\n+\t* configure, include/config.h.in: Rebuilt.\n+\t* acconfig.h (HAVE_FTRUNCATE): Mention.\n+\t* configure.in: Check for ftruncate.\n+\n 2002-08-29  Tom Tromey  <tromey@redhat.com>\n \n \t* include/jvm.h (struct _Jv_frame_info): New structure."}, {"sha": "308f71ebdec6e71ddc2701239bbf7abfb1dc067c", "filename": "libjava/acconfig.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0148e1ee90a9cec90cbd0b32b99cf532eaae9699/libjava%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0148e1ee90a9cec90cbd0b32b99cf532eaae9699/libjava%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Facconfig.h?ref=0148e1ee90a9cec90cbd0b32b99cf532eaae9699", "patch": "@@ -107,6 +107,7 @@\n #undef HAVE_READDIR_R\n #undef HAVE_GETHOSTBYNAME_R\n #undef HAVE_GETHOSTBYADDR_R\n+#undef HAVE_FTRUNCATE\n \n /* Define if you want a bytecode interpreter.  */\n #undef INTERPRETER"}, {"sha": "20b1836aa47958622f2c32fcf4c2f6aeaeccb040", "filename": "libjava/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0148e1ee90a9cec90cbd0b32b99cf532eaae9699/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0148e1ee90a9cec90cbd0b32b99cf532eaae9699/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=0148e1ee90a9cec90cbd0b32b99cf532eaae9699", "patch": "@@ -3734,7 +3734,7 @@ else\n fi\n done\n \n-   for ac_func in fork execvp pipe sigaction\n+   for ac_func in fork execvp pipe sigaction ftruncate\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n echo \"configure:3741: checking for $ac_func\" >&5\n@@ -7730,7 +7730,7 @@ cat >> $CONFIG_STATUS <<\\EOF\n \n # Split the substitutions into bite-sized pieces for seds with\n # small command number limits, like on Digital OSF/1 and HP-UX.\n-ac_max_sed_cmds=90 # Maximum number of lines to put in a sed script.\n+ac_max_sed_cmds=60 # Maximum number of lines to put in a sed script.\n ac_file=1 # Number of current file.\n ac_beg=1 # First line for current file.\n ac_end=$ac_max_sed_cmds # Line after last line for current file."}, {"sha": "93437c685b78c46a776366f534128120fbaa374f", "filename": "libjava/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0148e1ee90a9cec90cbd0b32b99cf532eaae9699/libjava%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0148e1ee90a9cec90cbd0b32b99cf532eaae9699/libjava%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.in?ref=0148e1ee90a9cec90cbd0b32b99cf532eaae9699", "patch": "@@ -507,7 +507,7 @@ else\n    AC_CHECK_FUNCS(nl_langinfo setlocale)\n    AC_CHECK_FUNCS(inet_aton inet_addr, break)\n    AC_CHECK_FUNCS(inet_pton uname inet_ntoa)\n-   AC_CHECK_FUNCS(fork execvp pipe sigaction)\n+   AC_CHECK_FUNCS(fork execvp pipe sigaction ftruncate)\n    AC_CHECK_HEADERS(execinfo.h unistd.h dlfcn.h) \n    AC_CHECK_FUNC(backtrace, [\n      case \"$host\" in"}, {"sha": "f75f74f0318f6e7bbb8029ae25b135db7825f704", "filename": "libjava/include/config.h.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0148e1ee90a9cec90cbd0b32b99cf532eaae9699/libjava%2Finclude%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0148e1ee90a9cec90cbd0b32b99cf532eaae9699/libjava%2Finclude%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fconfig.h.in?ref=0148e1ee90a9cec90cbd0b32b99cf532eaae9699", "patch": "@@ -132,6 +132,7 @@\n #undef HAVE_READDIR_R\n #undef HAVE_GETHOSTBYNAME_R\n #undef HAVE_GETHOSTBYADDR_R\n+#undef HAVE_FTRUNCATE\n \n /* Define if you want a bytecode interpreter.  */\n #undef INTERPRETER\n@@ -201,6 +202,9 @@\n /* Define if you have the ftime function.  */\n #undef HAVE_FTIME\n \n+/* Define if you have the ftruncate function.  */\n+#undef HAVE_FTRUNCATE\n+\n /* Define if you have the getcwd function.  */\n #undef HAVE_GETCWD\n "}, {"sha": "9929c3021f74f76c5fdcb26c5fd4c31382fca4db", "filename": "libjava/java/io/natFileDescriptorPosix.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0148e1ee90a9cec90cbd0b32b99cf532eaae9699/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0148e1ee90a9cec90cbd0b32b99cf532eaae9699/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc?ref=0148e1ee90a9cec90cbd0b32b99cf532eaae9699", "patch": "@@ -195,6 +195,7 @@ java::io::FileDescriptor::setLength (jlong pos)\n   struct stat sb;\n   off_t orig;\n \n+#ifdef HAVE_FTRUNCATE\n   if (::fstat (fd, &sb))\n     throw new IOException (JvNewStringLatin1 (strerror (errno)));\n \n@@ -219,6 +220,9 @@ java::io::FileDescriptor::setLength (jlong pos)\n     }\n   else if (::ftruncate (fd, (off_t) pos))\n     throw new IOException (JvNewStringLatin1 (strerror (errno)));\n+#else /* HAVE_FTRUNCATE */\n+  throw new IOException (JvNewStringLatin1 (\"FileDescriptor.setLength not implemented\"));\n+#endif /* HAVE_FTRUNCATE */\n }\n \n jint"}]}