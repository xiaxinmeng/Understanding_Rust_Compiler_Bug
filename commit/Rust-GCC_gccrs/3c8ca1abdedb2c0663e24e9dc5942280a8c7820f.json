{"sha": "3c8ca1abdedb2c0663e24e9dc5942280a8c7820f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M4Y2ExYWJkZWRiMmMwNjYzZTI0ZTlkYzU5NDIyODBhOGM3ODIwZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2013-08-07T17:15:25Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-08-07T17:15:25Z"}, "message": "diagnostic.c (diagnostic_classify_diagnostic): Accept zero index and document its semantics.\n\n\t* diagnostic.c (diagnostic_classify_diagnostic): Accept zero index and\n\tdocument its semantics.\n\t(diagnostic_report_diagnostic): Adjust accordingly.\n\nFrom-SVN: r201574", "tree": {"sha": "a6ef18a81b87f68c82fbee29f709245cb1dd5f06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6ef18a81b87f68c82fbee29f709245cb1dd5f06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c8ca1abdedb2c0663e24e9dc5942280a8c7820f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c8ca1abdedb2c0663e24e9dc5942280a8c7820f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c8ca1abdedb2c0663e24e9dc5942280a8c7820f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c8ca1abdedb2c0663e24e9dc5942280a8c7820f/comments", "author": null, "committer": null, "parents": [{"sha": "6cb784b639c3de7505674b56f542c8b714d7df8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cb784b639c3de7505674b56f542c8b714d7df8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cb784b639c3de7505674b56f542c8b714d7df8a"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "d55f0f450fc739eedb2753e380b4ed39c2650066", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c8ca1abdedb2c0663e24e9dc5942280a8c7820f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c8ca1abdedb2c0663e24e9dc5942280a8c7820f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c8ca1abdedb2c0663e24e9dc5942280a8c7820f", "patch": "@@ -1,3 +1,9 @@\n+2013-08-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* diagnostic.c (diagnostic_classify_diagnostic): Accept zero index and\n+\tdocument its semantics.\n+\t(diagnostic_report_diagnostic): Adjust accordingly.\n+\n 2013-08-07  David Malcolm  <dmalcolm@redhat.com>\n \n \t* config/sparc/sparc.c (insert_pass_work_around_errata): Move"}, {"sha": "dfc11f2647b10ed0270e2f42c037e1de2aecd61a", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c8ca1abdedb2c0663e24e9dc5942280a8c7820f/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c8ca1abdedb2c0663e24e9dc5942280a8c7820f/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=3c8ca1abdedb2c0663e24e9dc5942280a8c7820f", "patch": "@@ -554,7 +554,8 @@ default_diagnostic_finalizer (diagnostic_context *context ATTRIBUTE_UNUSED,\n \n /* Interface to specify diagnostic kind overrides.  Returns the\n    previous setting, or DK_UNSPECIFIED if the parameters are out of\n-   range.  */\n+   range.  If OPTION_INDEX is zero, the new setting is for all the\n+   diagnostics.  */\n diagnostic_t\n diagnostic_classify_diagnostic (diagnostic_context *context,\n \t\t\t\tint option_index,\n@@ -563,7 +564,7 @@ diagnostic_classify_diagnostic (diagnostic_context *context,\n {\n   diagnostic_t old_kind;\n \n-  if (option_index <= 0\n+  if (option_index < 0\n       || option_index >= context->n_opts\n       || new_kind >= DK_LAST_DIAGNOSTIC_KIND)\n     return DK_UNSPECIFIED;\n@@ -695,9 +696,8 @@ diagnostic_report_diagnostic (diagnostic_context *context,\n       /* This tests for #pragma diagnostic changes.  */\n       if (context->n_classification_history > 0)\n \t{\n-\t  int i;\n \t  /* FIXME: Stupid search.  Optimize later. */\n-\t  for (i = context->n_classification_history - 1; i >= 0; i --)\n+\t  for (int i = context->n_classification_history - 1; i >= 0; i --)\n \t    {\n \t      if (linemap_location_before_p\n \t\t  (line_table,\n@@ -709,7 +709,9 @@ diagnostic_report_diagnostic (diagnostic_context *context,\n \t\t      i = context->classification_history[i].option;\n \t\t      continue;\n \t\t    }\n-\t\t  if (context->classification_history[i].option == diagnostic->option_index)\n+\t\t  int option = context->classification_history[i].option;\n+\t\t  /* The option 0 is for all the diagnostics.  */\n+\t\t  if (option == 0 || option == diagnostic->option_index)\n \t\t    {\n \t\t      diag_class = context->classification_history[i].kind;\n \t\t      if (diag_class != DK_UNSPECIFIED)"}, {"sha": "ffa5fcac832bd681d4c4f20605aa1baaf6e0363f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c8ca1abdedb2c0663e24e9dc5942280a8c7820f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c8ca1abdedb2c0663e24e9dc5942280a8c7820f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3c8ca1abdedb2c0663e24e9dc5942280a8c7820f", "patch": "@@ -1,3 +1,7 @@\n+2013-08-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/warn9.adb: New test.\n+\n 2013-08-07  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/46206"}, {"sha": "38f9d71e4101e3967830f449f8859892513e74a9", "filename": "gcc/testsuite/gnat.dg/warn9.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c8ca1abdedb2c0663e24e9dc5942280a8c7820f/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c8ca1abdedb2c0663e24e9dc5942280a8c7820f/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn9.adb?ref=3c8ca1abdedb2c0663e24e9dc5942280a8c7820f", "patch": "@@ -0,0 +1,10 @@\n+-- { dg-do compile }\n+-- { dg-options \"-Wuninitialized\" }\n+\n+pragma Warnings (Off);\n+\n+function Warn9 return Integer is\n+  I : Integer;\n+begin\n+  return I;\n+end;"}]}