{"sha": "2ea6f4a377e51ed4d55cd8277f8c201ad66685f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVhNmY0YTM3N2U1MWVkNGQ1NWNkODI3N2Y4YzIwMWFkNjY2ODVmNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-01-15T09:08:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-01-15T10:26:57Z"}, "message": "tree-optimization/98685 - fix placement of extern converts\n\nAvoid advancing to the next stmt when inserting at region boundary\nand deal with a vector def being not the only child.\n\n2021-01-15  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/98685\n\t* tree-vect-slp.c (vect_schedule_slp_node): Refactor handling\n\tof vector extern defs.\n\n\t* gcc.dg/vect/bb-slp-pr98685.c: New testcase.", "tree": {"sha": "a08c259910604c3f0a0c5ad39cf802bcd09c564b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a08c259910604c3f0a0c5ad39cf802bcd09c564b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ea6f4a377e51ed4d55cd8277f8c201ad66685f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ea6f4a377e51ed4d55cd8277f8c201ad66685f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ea6f4a377e51ed4d55cd8277f8c201ad66685f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ea6f4a377e51ed4d55cd8277f8c201ad66685f6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4eec1efae0cfdd9a1a50666876b28567fca1734", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4eec1efae0cfdd9a1a50666876b28567fca1734", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4eec1efae0cfdd9a1a50666876b28567fca1734"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "b213335da787fd7e3a14ff2d66f7cd46cff77944", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-pr98685.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ea6f4a377e51ed4d55cd8277f8c201ad66685f6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr98685.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ea6f4a377e51ed4d55cd8277f8c201ad66685f6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr98685.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pr98685.c?ref=2ea6f4a377e51ed4d55cd8277f8c201ad66685f6", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-O3\" } */\n+\n+char onelock_lock[16];\n+void write(void);\n+\n+void lockit(int count) {\n+  for (; count;) {\n+    int pid, i;\n+    char *p;\n+    for (i = 0, p = (char *)&pid; i < sizeof 0; i++)\n+      onelock_lock[i] = *p++;\n+    write();\n+  }\n+}"}, {"sha": "1787ad742682bf285f04104667620e739ab5bffe", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ea6f4a377e51ed4d55cd8277f8c201ad66685f6/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ea6f4a377e51ed4d55cd8277f8c201ad66685f6/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=2ea6f4a377e51ed4d55cd8277f8c201ad66685f6", "patch": "@@ -5915,6 +5915,7 @@ vect_schedule_slp_node (vec_info *vinfo,\n       /* Emit other stmts after the children vectorized defs which is\n \t earliest possible.  */\n       gimple *last_stmt = NULL;\n+      bool seen_vector_def = false;\n       FOR_EACH_VEC_ELT (SLP_TREE_CHILDREN (node), i, child)\n \tif (SLP_TREE_DEF_TYPE (child) == vect_internal_def)\n \t  {\n@@ -5966,8 +5967,7 @@ vect_schedule_slp_node (vec_info *vinfo,\n \t       we do not insert before the region boundary.  */\n \t    if (SLP_TREE_SCALAR_OPS (child).is_empty ()\n \t\t&& !vinfo->lookup_def (SLP_TREE_VEC_DEFS (child)[0]))\n-\t      last_stmt = gsi_stmt (gsi_after_labels\n-\t\t\t\t      (as_a <bb_vec_info> (vinfo)->bbs[0]));\n+\t      seen_vector_def = true;\n \t    else\n \t      {\n \t\tunsigned j;\n@@ -5987,7 +5987,12 @@ vect_schedule_slp_node (vec_info *vinfo,\n \t constants.  */\n       if (!last_stmt)\n \tlast_stmt = vect_find_first_scalar_stmt_in_slp (node)->stmt;\n-      if (is_a <gphi *> (last_stmt))\n+      if (!last_stmt)\n+\t{\n+\t  gcc_assert (seen_vector_def);\n+\t  si = gsi_after_labels (as_a <bb_vec_info> (vinfo)->bbs[0]);\n+\t}\n+      else if (is_a <gphi *> (last_stmt))\n \tsi = gsi_after_labels (gimple_bb (last_stmt));\n       else\n \t{"}]}