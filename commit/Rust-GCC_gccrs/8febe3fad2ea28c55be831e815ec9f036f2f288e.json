{"sha": "8febe3fad2ea28c55be831e815ec9f036f2f288e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZlYmUzZmFkMmVhMjhjNTViZTgzMWU4MTVlYzlmMDM2ZjJmMjg4ZQ==", "commit": {"author": {"name": "Maxim Kuvyrkov", "email": "maxim@codesourcery.com", "date": "2012-08-27T22:11:48Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2012-08-27T22:11:48Z"}, "message": "sched-deps.c (add_dependence_list_and_free): Simplify.\n\n\t* sched-deps.c (add_dependence_list_and_free): Simplify.\n\t(flush_pending_list_and_free): Fix a hack that was fixing a hack.  Free\n\tlists when add_dependence_list_and_free doesn't free them.\n\nFrom-SVN: r190733", "tree": {"sha": "c9824c8286739cd359de0b9bffbc913025882f11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9824c8286739cd359de0b9bffbc913025882f11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8febe3fad2ea28c55be831e815ec9f036f2f288e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8febe3fad2ea28c55be831e815ec9f036f2f288e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8febe3fad2ea28c55be831e815ec9f036f2f288e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8febe3fad2ea28c55be831e815ec9f036f2f288e/comments", "author": null, "committer": null, "parents": [{"sha": "28591f4a8cbfab06692dcd8ae9a69ef95ecdf378", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28591f4a8cbfab06692dcd8ae9a69ef95ecdf378", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28591f4a8cbfab06692dcd8ae9a69ef95ecdf378"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "48fa237cf925254d9e547077b4f8e883bec7d7e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8febe3fad2ea28c55be831e815ec9f036f2f288e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8febe3fad2ea28c55be831e815ec9f036f2f288e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8febe3fad2ea28c55be831e815ec9f036f2f288e", "patch": "@@ -1,3 +1,9 @@\n+2012-08-27  Maxim Kuvyrkov  <maxim@codesourcery.com>\n+\n+\t* sched-deps.c (add_dependence_list_and_free): Simplify.\n+\t(flush_pending_list_and_free): Fix a hack that was fixing a hack.  Free\n+\tlists when add_dependence_list_and_free doesn't free them.\n+\n 2012-08-27  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/46254"}, {"sha": "1055ef4bba28791e47ed53a73ee1442e5ac95901", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8febe3fad2ea28c55be831e815ec9f036f2f288e/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8febe3fad2ea28c55be831e815ec9f036f2f288e/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=8febe3fad2ea28c55be831e815ec9f036f2f288e", "patch": "@@ -1564,24 +1564,15 @@ static void\n add_dependence_list_and_free (struct deps_desc *deps, rtx insn, rtx *listp,\n                               int uncond, enum reg_note dep_type)\n {\n-  rtx list, next;\n+  add_dependence_list (insn, *listp, uncond, dep_type);\n \n   /* We don't want to short-circuit dependencies involving debug\n      insns, because they may cause actual dependencies to be\n      disregarded.  */\n   if (deps->readonly || DEBUG_INSN_P (insn))\n-    {\n-      add_dependence_list (insn, *listp, uncond, dep_type);\n-      return;\n-    }\n+    return;\n \n-  for (list = *listp, *listp = NULL; list ; list = next)\n-    {\n-      next = XEXP (list, 1);\n-      if (uncond || ! sched_insns_conditions_mutex_p (insn, XEXP (list, 0)))\n-\tadd_dependence (insn, XEXP (list, 0), dep_type);\n-      free_INSN_LIST_node (list);\n-    }\n+  free_INSN_LIST_list (listp);\n }\n \n /* Remove all occurrences of INSN from LIST.  Return the number of\n@@ -1765,6 +1756,15 @@ flush_pending_lists (struct deps_desc *deps, rtx insn, int for_read,\n   add_dependence_list_and_free (deps, insn, &deps->pending_jump_insns, 1,\n \t\t\t\tREG_DEP_ANTI);\n \n+  if (DEBUG_INSN_P (insn))\n+    {\n+      if (for_write)\n+\tfree_INSN_LIST_list (&deps->pending_read_insns);\n+      free_INSN_LIST_list (&deps->pending_write_insns);\n+      free_INSN_LIST_list (&deps->last_pending_memory_flush);\n+      free_INSN_LIST_list (&deps->pending_jump_insns);\n+    }\n+\n   if (!deps->readonly)\n     {\n       free_EXPR_LIST_list (&deps->pending_write_mems);"}]}