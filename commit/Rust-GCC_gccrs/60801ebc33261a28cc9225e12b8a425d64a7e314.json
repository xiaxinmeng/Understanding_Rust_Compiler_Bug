{"sha": "60801ebc33261a28cc9225e12b8a425d64a7e314", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA4MDFlYmMzMzI2MWEyOGNjOTIyNWUxMmI4YTQyNWQ2NGE3ZTMxNA==", "commit": {"author": {"name": "Alexander Nesterovskiy", "email": "alexander.nesterovskiy@intel.com", "date": "2018-05-21T11:14:14Z"}, "committer": {"name": "Sebastian Peryt", "email": "speryt@gcc.gnu.org", "date": "2018-05-21T11:14:14Z"}, "message": "i386.md (*movsf_internal): AVX falsedep fix.\n\n2018-05-21  Alexander Nesterovskiy  <alexander.nesterovskiy@intel.com>\n\ngcc/\n        * config/i386/i386.md (*movsf_internal): AVX falsedep fix.\n        (*movdf_internal): Ditto.\n        (*rcpsf2_sse): Ditto.\n        (*rsqrtsf2_sse): Ditto.\n        (*sqrt<mode>2_sse): Ditto.\n\nFrom-SVN: r260436", "tree": {"sha": "6c7a4cf8bfbbaa18e2a62d504d27c07f2e75bc96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c7a4cf8bfbbaa18e2a62d504d27c07f2e75bc96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60801ebc33261a28cc9225e12b8a425d64a7e314", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60801ebc33261a28cc9225e12b8a425d64a7e314", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60801ebc33261a28cc9225e12b8a425d64a7e314", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60801ebc33261a28cc9225e12b8a425d64a7e314/comments", "author": {"login": "anestero", "id": 84133195, "node_id": "MDQ6VXNlcjg0MTMzMTk1", "avatar_url": "https://avatars.githubusercontent.com/u/84133195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anestero", "html_url": "https://github.com/anestero", "followers_url": "https://api.github.com/users/anestero/followers", "following_url": "https://api.github.com/users/anestero/following{/other_user}", "gists_url": "https://api.github.com/users/anestero/gists{/gist_id}", "starred_url": "https://api.github.com/users/anestero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anestero/subscriptions", "organizations_url": "https://api.github.com/users/anestero/orgs", "repos_url": "https://api.github.com/users/anestero/repos", "events_url": "https://api.github.com/users/anestero/events{/privacy}", "received_events_url": "https://api.github.com/users/anestero/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d21052ebd7ac9d545a26dde3229c57f872c1d5f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d21052ebd7ac9d545a26dde3229c57f872c1d5f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d21052ebd7ac9d545a26dde3229c57f872c1d5f3"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "b1a9017d0c15b29849cc3f227d1159bc15ed60e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60801ebc33261a28cc9225e12b8a425d64a7e314/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60801ebc33261a28cc9225e12b8a425d64a7e314/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60801ebc33261a28cc9225e12b8a425d64a7e314", "patch": "@@ -1,3 +1,11 @@\n+2018-05-21  Alexander Nesterovskiy  <alexander.nesterovskiy@intel.com>\n+\n+\t* config/i386/i386.md (*movsf_internal): AVX falsedep fix.\n+\t(*movdf_internal): Ditto.\n+\t(*rcpsf2_sse): Ditto.\n+\t(*rsqrtsf2_sse): Ditto.\n+\t(*sqrt<mode>2_sse): Ditto.\n+\n 2018-05-21  Tamar Christina  <tamar.christina@arm.com>\n \n \t* config/aarch64/aarch64-simd.md (aarch64_eor3qv8hi): Change to"}, {"sha": "cc993b3aad8f806142d5da48a6e775f8e2e49a4b", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60801ebc33261a28cc9225e12b8a425d64a7e314/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60801ebc33261a28cc9225e12b8a425d64a7e314/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=60801ebc33261a28cc9225e12b8a425d64a7e314", "patch": "@@ -3559,7 +3559,7 @@\n \t{\n \tcase MODE_DF:\n \t  if (TARGET_AVX && REG_P (operands[0]) && REG_P (operands[1]))\n-\t    return \"vmovsd\\t{%1, %0, %0|%0, %0, %1}\";\n+\t    return \"vmovsd\\t{%d1, %0|%0, %d1}\";\n \t  return \"%vmovsd\\t{%1, %0|%0, %1}\";\n \n \tcase MODE_V4SF:\n@@ -3760,7 +3760,7 @@\n \t{\n \tcase MODE_SF:\n \t  if (TARGET_AVX && REG_P (operands[0]) && REG_P (operands[1]))\n-\t    return \"vmovss\\t{%1, %0, %0|%0, %0, %1}\";\n+\t    return \"vmovss\\t{%d1, %0|%0, %d1}\";\n \t  return \"%vmovss\\t{%1, %0|%0, %1}\";\n \n \tcase MODE_V16SF:\n@@ -15126,11 +15126,13 @@\n \t (symbol_ref \"false\"))))])\n \n (define_insn \"*rcpsf2_sse\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=x\")\n-\t(unspec:SF [(match_operand:SF 1 \"nonimmediate_operand\" \"xm\")]\n+  [(set (match_operand:SF 0 \"register_operand\" \"=x,x\")\n+\t(unspec:SF [(match_operand:SF 1 \"nonimmediate_operand\" \"x,m\")]\n \t\t   UNSPEC_RCP))]\n   \"TARGET_SSE && TARGET_SSE_MATH\"\n-  \"%vrcpss\\t{%1, %d0|%d0, %1}\"\n+  \"@\n+   %vrcpss\\t{%d1, %0|%0, %d1}\n+   %vrcpss\\t{%1, %d0|%d0, %1}\"\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"atom_sse_attr\" \"rcp\")\n    (set_attr \"btver2_sse_attr\" \"rcp\")\n@@ -15428,11 +15430,13 @@\n    (set_attr \"bdver1_decode\" \"direct\")])\n \n (define_insn \"*rsqrtsf2_sse\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=x\")\n-\t(unspec:SF [(match_operand:SF 1 \"nonimmediate_operand\" \"xm\")]\n+  [(set (match_operand:SF 0 \"register_operand\" \"=x,x\")\n+\t(unspec:SF [(match_operand:SF 1 \"nonimmediate_operand\" \"x,m\")]\n \t\t   UNSPEC_RSQRT))]\n   \"TARGET_SSE && TARGET_SSE_MATH\"\n-  \"%vrsqrtss\\t{%1, %d0|%d0, %1}\"\n+  \"@\n+   %vrsqrtss\\t{%d1, %0|%0, %d1}\n+   %vrsqrtss\\t{%1, %d0|%d0, %1}\"\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"atom_sse_attr\" \"rcp\")\n    (set_attr \"btver2_sse_attr\" \"rcp\")\n@@ -15450,11 +15454,13 @@\n })\n \n (define_insn \"*sqrt<mode>2_sse\"\n-  [(set (match_operand:MODEF 0 \"register_operand\" \"=v\")\n+  [(set (match_operand:MODEF 0 \"register_operand\" \"=v,v\")\n \t(sqrt:MODEF\n-\t  (match_operand:MODEF 1 \"nonimmediate_operand\" \"vm\")))]\n+\t  (match_operand:MODEF 1 \"nonimmediate_operand\" \"v,m\")))]\n   \"SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\"\n-  \"%vsqrt<ssemodesuffix>\\t{%1, %d0|%d0, %1}\"\n+  \"@\n+   %vsqrt<ssemodesuffix>\\t{%d1, %0|%0, %d1}\n+   %vsqrt<ssemodesuffix>\\t{%1, %d0|%d0, %1}\"\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"atom_sse_attr\" \"sqrt\")\n    (set_attr \"btver2_sse_attr\" \"sqrt\")"}]}