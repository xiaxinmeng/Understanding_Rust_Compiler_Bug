{"sha": "54b98a47dd95dfdc4f2ee8d66542baf044434599", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRiOThhNDdkZDk1ZGZkYzRmMmVlOGQ2NjU0MmJhZjA0NDQzNDU5OQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2003-10-21T14:11:13Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2003-10-21T14:11:13Z"}, "message": "Makefile.in (CC1OBJ): Remove.\n\n\t* Makefile.in (CC1OBJ): Remove.\n\t(runtime-info.h): Invoke $(CC) so all MULTIFLAGS are handled\n\tcorrectly.\n\tUse .m extension for temporary file.\n\tRemove assembler temp file.\n\nFrom-SVN: r72752", "tree": {"sha": "cd87fa0c2d4c344a84023284e46cdf7a90075fe4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd87fa0c2d4c344a84023284e46cdf7a90075fe4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54b98a47dd95dfdc4f2ee8d66542baf044434599", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54b98a47dd95dfdc4f2ee8d66542baf044434599", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54b98a47dd95dfdc4f2ee8d66542baf044434599", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54b98a47dd95dfdc4f2ee8d66542baf044434599/comments", "author": null, "committer": null, "parents": [{"sha": "fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbf5a39b3e101719c6bf03cf2cd013b4a312e275", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbf5a39b3e101719c6bf03cf2cd013b4a312e275"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "3ba69649907f49d02a9274c036bcd0f02eb11fd3", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54b98a47dd95dfdc4f2ee8d66542baf044434599/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54b98a47dd95dfdc4f2ee8d66542baf044434599/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=54b98a47dd95dfdc4f2ee8d66542baf044434599", "patch": "@@ -1,3 +1,11 @@\n+2003-10-21  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* Makefile.in (CC1OBJ): Remove.\n+\t(runtime-info.h): Invoke $(CC) so all MULTIFLAGS are handled\n+\tcorrectly.\n+\tUse .m extension for temporary file.\n+\tRemove assembler temp file.\n+\n 2003-10-20  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* objc/hash.h (hash_string): Don't use a cast as an lvalue."}, {"sha": "0f112c6764eb9ba488ff9f42141e0ca52b457a57", "filename": "libobjc/Makefile.in", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54b98a47dd95dfdc4f2ee8d66542baf044434599/libobjc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54b98a47dd95dfdc4f2ee8d66542baf044434599/libobjc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FMakefile.in?ref=54b98a47dd95dfdc4f2ee8d66542baf044434599", "patch": "@@ -88,14 +88,6 @@ LIBTOOL_INSTALL = $(LIBTOOL) --mode=install\n LIBTOOL_CLEAN   = $(LIBTOOL) --mode=clean\n #LIBTOOL_UNINSTALL = $(LIBTOOL) --mode=uninstall\n \n-#\n-# Define the cc1obj in terms of the CC that is passed on from higher\n-# level make. This is needed to make sure we can create runtime-info.h\n-# when doing canadian cross builds where running ../../gcc/cc1obj \n-# does not make any sense.\n-#\n-CC1OBJ = `$(CC) -print-prog-name=cc1obj`\n-\n INCLUDES = -I$(srcdir)/objc  -I$(srcdir)/$(MULTISRCTOP)../gcc \\\n   -I$(srcdir)/$(MULTISRCTOP)../gcc/config -I$(MULTIBUILDTOP)../../gcc \\\n   -I$(srcdir)/$(MULTISRCTOP)../include\n@@ -161,10 +153,10 @@ OBJS_GC = archive_gc.lo class_gc.lo encoding_gc.lo gc_gc.lo hash_gc.lo \\\n \t  $(OBJC_THREAD_FILE)_gc.lo\n \n runtime-info.h: \n-\techo \"\" > tmp-runtime\n+\techo \"\" > tmp-runtime.m\n \techo \"/* This file is automatically generated */\" > $@\n-\t$(CC1OBJ) $(MULTIFLAGS) -print-objc-runtime-info tmp-runtime >> $@\n-\trm -f tmp-runtime\n+\t$(CC) $(MULTIFLAGS) -Wp,-print-objc-runtime-info -S tmp-runtime.m >> $@\n+\trm -f tmp-runtime.m tmp-runtime.s\n \n archive_gc.lo: archive.c\n \t$(LIBTOOL_COMPILE) $(CC) -c  -o $@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \\"}]}