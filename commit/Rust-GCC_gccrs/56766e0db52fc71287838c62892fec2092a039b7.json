{"sha": "56766e0db52fc71287838c62892fec2092a039b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY3NjZlMGRiNTJmYzcxMjg3ODM4YzYyODkyZmVjMjA5MmEwMzliNw==", "commit": {"author": {"name": "Dhruv Matani", "email": "dhruvbird@gmx.net", "date": "2004-02-04T17:37:10Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2004-02-04T17:37:10Z"}, "message": "debug_allocator.h: _M_extra now stands for the number of extra objects instead of the number of...\n\n\n2004-02-04  Dhruv Matani  <dhruvbird@gmx.net>\n\n\t* include/ext/debug_allocator.h: _M_extra now stands for the\n\tnumber of extra objects instead of the number of extra bytes.\n\t(debug_allocator::allocate): Adjust.\n\t(debug_allocator::deallocate): Adjust.\n\n\t* include/ext/pool_allocator.h: Fix typo.\n\nFrom-SVN: r77256", "tree": {"sha": "2e61646b825698160302b8a9fd9671eda0d261b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e61646b825698160302b8a9fd9671eda0d261b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56766e0db52fc71287838c62892fec2092a039b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56766e0db52fc71287838c62892fec2092a039b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56766e0db52fc71287838c62892fec2092a039b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56766e0db52fc71287838c62892fec2092a039b7/comments", "author": null, "committer": null, "parents": [{"sha": "7bdff56f69a0192ec53594c6ff40e4646874041e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bdff56f69a0192ec53594c6ff40e4646874041e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bdff56f69a0192ec53594c6ff40e4646874041e"}], "stats": {"total": 47, "additions": 35, "deletions": 12}, "files": [{"sha": "c4963b7559321dd7c946b3d2eab6bd940e3c541b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56766e0db52fc71287838c62892fec2092a039b7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56766e0db52fc71287838c62892fec2092a039b7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=56766e0db52fc71287838c62892fec2092a039b7", "patch": "@@ -1,3 +1,12 @@\n+2004-02-04  Dhruv Matani  <dhruvbird@gmx.net>\n+\n+\t* include/ext/debug_allocator.h: _M_extra now stands for the\n+\tnumber of extra objects instead of the number of extra bytes.\n+\t(debug_allocator::allocate): Adjust.\n+\t(debug_allocator::deallocate): Adjust.\n+\n+\t* include/ext/pool_allocator.h: Fix typo.\n+\n 2004-02-03  Felix Yen  <fwy@alumni.brown.edu>\n \t    Benjamin Kosnik  <bkoz@redhat.com>\n \t"}, {"sha": "eb876803f246ed60daa2b6d231d11bf0c17da931", "filename": "libstdc++-v3/include/ext/debug_allocator.h", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56766e0db52fc71287838c62892fec2092a039b7/libstdc%2B%2B-v3%2Finclude%2Fext%2Fdebug_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56766e0db52fc71287838c62892fec2092a039b7/libstdc%2B%2B-v3%2Finclude%2Fext%2Fdebug_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fdebug_allocator.h?ref=56766e0db52fc71287838c62892fec2092a039b7", "patch": "@@ -1,6 +1,6 @@\n // Allocators -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -48,7 +48,7 @@\n #ifndef _DEBUG_ALLOCATOR_H\n #define _DEBUG_ALLOCATOR_H 1\n \n-#include <memory>\n+#include <cstdlib>\n \n namespace __gnu_cxx\n {\n@@ -74,28 +74,42 @@ namespace __gnu_cxx\n       typedef typename _Alloc::value_type       value_type;\n \n     private:\n-      // Size of space used to store size.  Note that this must be\n-      // large enough to preserve alignment.\n-      const size_t \t\t_M_extra;\n+      // _M_extra is the number of objects that correspond to the\n+      // extra space where debug information is stored.\n+      size_type \t\t_M_extra;\n       \n       _Alloc\t\t\t_M_allocator;\n \n     public:\n-      debug_allocator() : _M_extra(8) { }\n+      debug_allocator()\n+      {\n+\tconst size_t __obj_size = sizeof(value_type);\n+\t_M_extra = (sizeof(size_type) + __obj_size - 1) / __obj_size; \n+      }\n+      \n+      pointer\n+      allocate(size_type __n)\n+      {\n+        pointer __res = _M_allocator.allocate(__n + _M_extra);      \n+\tsize_type* __ps = reinterpret_cast<size_type*>(__res);\n+\t*__ps = __n;\n+        return __res + _M_extra;\n+      }\n \n       pointer\n-      allocate(size_type __n, std::allocator<void>::const_pointer = 0)\n+      allocate(size_type __n, const void* __hint)\n       {\n-        pointer __result = _M_allocator.allocate(__n + _M_extra);\n-        *__result = __n;\n-        return __result + _M_extra;\n+        pointer __res = _M_allocator.allocate(__n + _M_extra, __hint);\n+\tsize_type* __ps = reinterpret_cast<size_type*>(__res);\n+\t*__ps = __n;\n+        return __res + _M_extra;\n       }\n \n       void\n       deallocate(pointer __p, size_type __n)\n       {\n         pointer __real_p = __p - _M_extra;\n-        if (*__real_p != __n)\n+        if (*reinterpret_cast<size_type*>(__real_p) != __n)\n           abort();\n         _M_allocator.deallocate(__real_p, __n + _M_extra);\n       }"}, {"sha": "b6bd423840da52ef18cf26b68cf90e11427c882e", "filename": "libstdc++-v3/include/ext/pool_allocator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56766e0db52fc71287838c62892fec2092a039b7/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpool_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56766e0db52fc71287838c62892fec2092a039b7/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpool_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpool_allocator.h?ref=56766e0db52fc71287838c62892fec2092a039b7", "patch": "@@ -40,7 +40,7 @@\n  * purpose.  It is provided \"as is\" without express or implied warranty.\n  */\n \n-/** @file ext/debug_allocator.h\n+/** @file ext/pool_allocator.h\n  *  This file is a GNU extension to the Standard C++ Library.\n  *  You should only include this header if you are using GCC 3 or later.\n  */"}]}