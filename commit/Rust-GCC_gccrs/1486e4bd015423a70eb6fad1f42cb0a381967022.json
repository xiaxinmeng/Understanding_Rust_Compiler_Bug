{"sha": "1486e4bd015423a70eb6fad1f42cb0a381967022", "node_id": "C_kwDOANBUbNoAKDE0ODZlNGJkMDE1NDIzYTcwZWI2ZmFkMWY0MmNiMGEzODE5NjcwMjI", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2021-04-09T15:46:42Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2021-12-09T16:55:27Z"}, "message": "Leverage VX_CPU_PREFIX in aarch64-vxworks.h\n\nThis change tightens the CPU macro definitions issued\nfor VxWorks system headers on aarch64 to incorporate\nthe common VX_CPU_PREFIX facility, as the powerpc port\ndoes.\n\nThe net effect for current configurations is the addition\nof an actual \"_VX_\" prefix to the references to architecture\nrepresentative values. The absence of this prefix is most\noften compensated for in system headers, but not always (when\ngoing through particular #include paths), and this caused\na couple of spurious test failures.\n\n2021-12-09  Olivier Hainque  <hainque@adacore.com>\n\ngcc/\n\t* config/aarch64/aarch64-vxworks.h (TARGET_OS_CPP_BUILTINS):\n\tUse VX_CPU_PREFIX in CPU definitions.", "tree": {"sha": "3ea1e722e693f989c3198d8e8f8d21f42ed4068c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ea1e722e693f989c3198d8e8f8d21f42ed4068c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1486e4bd015423a70eb6fad1f42cb0a381967022", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1486e4bd015423a70eb6fad1f42cb0a381967022", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1486e4bd015423a70eb6fad1f42cb0a381967022", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1486e4bd015423a70eb6fad1f42cb0a381967022/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dfb1059b31576930427648e03d9d06e6d68bbf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dfb1059b31576930427648e03d9d06e6d68bbf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dfb1059b31576930427648e03d9d06e6d68bbf0"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "a821bdef2eb8b0d3dfd4bd2daa46e787ac84bab7", "filename": "gcc/config/aarch64/aarch64-vxworks.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1486e4bd015423a70eb6fad1f42cb0a381967022/gcc%2Fconfig%2Faarch64%2Faarch64-vxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1486e4bd015423a70eb6fad1f42cb0a381967022/gcc%2Fconfig%2Faarch64%2Faarch64-vxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-vxworks.h?ref=1486e4bd015423a70eb6fad1f42cb0a381967022", "patch": "@@ -50,7 +50,8 @@ along with GCC; see the file COPYING3.  If not see\n       builtin_define (\"ARMEB\");                 \\\n     else                                        \\\n       builtin_define (\"ARMEL\");                 \\\n-    builtin_define (\"_VX_CPU=ARMARCH8A\"); \\\n+    builtin_define \\\n+      (VX_CPU_PREFIX \"CPU=\" VX_CPU_PREFIX \"ARMARCH8A\");\t\\\n     VXWORKS_OS_CPP_BUILTINS ();\t\t  \\\n   } while (0)\n "}]}