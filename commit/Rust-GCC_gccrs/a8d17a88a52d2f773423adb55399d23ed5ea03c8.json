{"sha": "a8d17a88a52d2f773423adb55399d23ed5ea03c8", "node_id": "C_kwDOANBUbNoAKGE4ZDE3YTg4YTUyZDJmNzczNDIzYWRiNTUzOTlkMjNlZDVlYTAzYzg", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-06-21T08:17:57Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-12T12:24:12Z"}, "message": "[Ada] Warn on unset objects in packages with no bodies\n\nFix an inconsistency, where GNAT was warning about references to unset\nobjects inside generic packages with no bodies but not inside ordinary\npackages with no bodies.\n\ngcc/ada/\n\n\t* sem_ch7.adb (Analyze_Package_Declaration): Check references to\n\tunset objects.\n\ngcc/testsuite/\n\n\t* gnat.dg/specs/discr5.ads: Expect new warnings.\n\t* gnat.dg/specs/empty_variants.ads: Likewise.\n\t* gnat.dg/specs/pack13.ads: Likewise.", "tree": {"sha": "fed1c2e45aaac773f78b64dc10bec2c7ce87e4bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fed1c2e45aaac773f78b64dc10bec2c7ce87e4bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8d17a88a52d2f773423adb55399d23ed5ea03c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8d17a88a52d2f773423adb55399d23ed5ea03c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8d17a88a52d2f773423adb55399d23ed5ea03c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8d17a88a52d2f773423adb55399d23ed5ea03c8/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a54ad45a63182bf6d1873ed55d641769638e4c8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a54ad45a63182bf6d1873ed55d641769638e4c8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a54ad45a63182bf6d1873ed55d641769638e4c8f"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "5c347bd8b4fe509862675f76ecd57561716a87b4", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8d17a88a52d2f773423adb55399d23ed5ea03c8/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8d17a88a52d2f773423adb55399d23ed5ea03c8/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=a8d17a88a52d2f773423adb55399d23ed5ea03c8", "patch": "@@ -1253,6 +1253,13 @@ package body Sem_Ch7 is\n               (Context      => N,\n                Is_Main_Unit => Parent (N) = Cunit (Main_Unit));\n          end if;\n+\n+         --  Warn about references to unset objects, which is straightforward\n+         --  for packages with no bodies. For packages with bodies this is more\n+         --  complicated, because some of the objects might be set between spec\n+         --  and body elaboration, in nested or child packages, etc.\n+\n+         Check_References (Id);\n       end if;\n \n       --  Set Body_Required indication on the compilation unit node"}, {"sha": "79c234a487b59cfee79a3a36ddb2f01e382ee232", "filename": "gcc/testsuite/gnat.dg/specs/discr5.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8d17a88a52d2f773423adb55399d23ed5ea03c8/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fdiscr5.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8d17a88a52d2f773423adb55399d23ed5ea03c8/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fdiscr5.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fdiscr5.ads?ref=a8d17a88a52d2f773423adb55399d23ed5ea03c8", "patch": "@@ -22,7 +22,7 @@ package Discr5 is\n    subtype Rt is R(True);\n    subtype Rf is R(False);\n \n-   type R1 (D1 : Boolean) is new R (X) with record\n+   type R1 (D1 : Boolean) is new R (X) with record -- { dg-warning \"\\\"X\\\" may be referenced before it has a value\" }\n       FF : Float;\n       case D1 is\n          when True =>\n@@ -38,7 +38,7 @@ package Discr5 is\n    subtype R1t is R1 (True);\n    subtype R1f is R1 (False);\n \n-   type R2 (D2 : Boolean) is new R1 (Y) with record\n+   type R2 (D2 : Boolean) is new R1 (Y) with record -- { dg-warning \"\\\"Y\\\" may be referenced before it has a value\" }\n       FFF: System.Address;\n       case D2 is\n          when True =>\n@@ -55,3 +55,4 @@ package Discr5 is\n    subtype R2f is R2 (False);\n \n end Discr5;\n+"}, {"sha": "9b0cdadeae820fd728c4ecf4ba11e2f3b9b63504", "filename": "gcc/testsuite/gnat.dg/specs/empty_variants.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8d17a88a52d2f773423adb55399d23ed5ea03c8/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fempty_variants.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8d17a88a52d2f773423adb55399d23ed5ea03c8/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fempty_variants.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fempty_variants.ads?ref=a8d17a88a52d2f773423adb55399d23ed5ea03c8", "patch": "@@ -1,5 +1,4 @@\n --  { dg-do compile }\n---  { dg-options \"-gnatdF\" }\n \n package Empty_Variants is\n    \n@@ -23,10 +22,11 @@ package Empty_Variants is\n    \n    R : Rec;\n    \n-   I : Integer := R.I;\n+   I : Integer := R.I; -- { dg-warning \"\\\"R\\.I\\\" may be referenced before it has a value\" }\n    J : Integer := R.J;\n    K : Integer := R.K;\n    L : Integer := R.L;\n    M : Integer := R.L;\n \n end Empty_Variants;\n+"}, {"sha": "86145500ca05bf757bbf3d2d61f0dfd11bcdd358", "filename": "gcc/testsuite/gnat.dg/specs/pack13.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8d17a88a52d2f773423adb55399d23ed5ea03c8/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fpack13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8d17a88a52d2f773423adb55399d23ed5ea03c8/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fpack13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fpack13.ads?ref=a8d17a88a52d2f773423adb55399d23ed5ea03c8", "patch": "@@ -20,6 +20,6 @@ package Pack13 is\n \n   A : Arr;\n \n-  package My_G is new G (Boolean, A(True).B);\n+  package My_G is new G (Boolean, A(True).B); -- { dg-warning \"\\\"A\\\" may be referenced before it has a value\" }\n \n end Pack13;"}]}