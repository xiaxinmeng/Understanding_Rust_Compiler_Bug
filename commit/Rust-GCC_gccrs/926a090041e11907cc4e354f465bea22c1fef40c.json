{"sha": "926a090041e11907cc4e354f465bea22c1fef40c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI2YTA5MDA0MWUxMTkwN2NjNGUzNTRmNDY1YmVhMjJjMWZlZjQwYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-01-23T09:41:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-01-23T09:41:36Z"}, "message": "[multiple changes]\n\n2012-01-23  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb (Analyze_Object_Declaration): Properly\n\thandle Current_Value for volatile variables (also propagate\n\tTreat_As_Volatile from type to object).\n\n2012-01-23  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch12.adb (Install_Body): Detect the case\n\twhere the enclosing context is a package with a stub body that\n\thas already been replaced by the actual body. In such cases,\n\tthe freeze node for the enclosing context must be inserted after\n\tthe real body.\n\n2012-01-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma, case Debug): Freeze the called\n\tsubprogram before expanding the pragma into an if-statement with\n\ta block, to ensure that when the subprogram is null its body is\n\tproperly generated before expansion.\n\nFrom-SVN: r183420", "tree": {"sha": "10561fd51cf7daff3a76e742f0752fddb6de142c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10561fd51cf7daff3a76e742f0752fddb6de142c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/926a090041e11907cc4e354f465bea22c1fef40c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/926a090041e11907cc4e354f465bea22c1fef40c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/926a090041e11907cc4e354f465bea22c1fef40c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/926a090041e11907cc4e354f465bea22c1fef40c/comments", "author": null, "committer": null, "parents": [{"sha": "88a27b18dddb3a7fbf98f3f5ee0f3ff5a745d911", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88a27b18dddb3a7fbf98f3f5ee0f3ff5a745d911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88a27b18dddb3a7fbf98f3f5ee0f3ff5a745d911"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "83947b7981416601baafb6560089b3309eef0030", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/926a090041e11907cc4e354f465bea22c1fef40c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/926a090041e11907cc4e354f465bea22c1fef40c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=926a090041e11907cc4e354f465bea22c1fef40c", "patch": "@@ -1,3 +1,24 @@\n+2012-01-23  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb (Analyze_Object_Declaration): Properly\n+\thandle Current_Value for volatile variables (also propagate\n+\tTreat_As_Volatile from type to object).\n+\n+2012-01-23  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch12.adb (Install_Body): Detect the case\n+\twhere the enclosing context is a package with a stub body that\n+\thas already been replaced by the actual body. In such cases,\n+\tthe freeze node for the enclosing context must be inserted after\n+\tthe real body.\n+\n+2012-01-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma, case Debug): Freeze the called\n+\tsubprogram before expanding the pragma into an if-statement with\n+\ta block, to ensure that when the subprogram is null its body is\n+\tproperly generated before expansion.\n+\n 2012-01-23  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_ch12.adb (Analyze_Associations): Alphabetize local variables and"}, {"sha": "4976294def2c8f0b1e602e727dd3e305e139a524", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/926a090041e11907cc4e354f465bea22c1fef40c/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/926a090041e11907cc4e354f465bea22c1fef40c/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=926a090041e11907cc4e354f465bea22c1fef40c", "patch": "@@ -8106,6 +8106,19 @@ package body Sem_Ch12 is\n                           (Corresponding_Stub (Parent (Parent (N))),\n                            Freeze_Node (Enclosing));\n \n+                     --  The enclosing context is a package with a stub body\n+                     --  which has already been replaced by the real body.\n+                     --  Insert the freeze node after the actual body.\n+\n+                     elsif Ekind (Enclosing) = E_Package\n+                       and then Present (Body_Entity (Enclosing))\n+                       and then Was_Originally_Stub\n+                                  (Parent (Body_Entity (Enclosing)))\n+                     then\n+                        Insert_Freeze_Node_For_Instance\n+                          (Parent (Body_Entity (Enclosing)),\n+                           Freeze_Node (Enclosing));\n+\n                      --  The parent instance has been frozen before the body of\n                      --  the enclosing package, insert the freeze node after\n                      --  the body."}, {"sha": "7ad0d24129801c3182102af2250a43f3eaea3b2a", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/926a090041e11907cc4e354f465bea22c1fef40c/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/926a090041e11907cc4e354f465bea22c1fef40c/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=926a090041e11907cc4e354f465bea22c1fef40c", "patch": "@@ -2993,6 +2993,8 @@ package body Sem_Ch3 is\n          end if;\n       end if;\n \n+      --  Object is marked pure if it is in a pure scope\n+\n       Set_Is_Pure (Id, Is_Pure (Current_Scope));\n \n       --  If deferred constant, make sure context is appropriate. We detect\n@@ -3547,6 +3549,14 @@ package body Sem_Ch3 is\n \n       Set_Etype (Id, Act_T);\n \n+      --  Object is marked to be treated as volatile if type is volatile and\n+      --  we clear the Current_Value setting that may have been set above.\n+\n+      if Treat_As_Volatile (Etype (Id)) then\n+         Set_Treat_As_Volatile (Id);\n+         Set_Current_Value (Id, Empty);\n+      end if;\n+\n       --  Deal with controlled types\n \n       if Has_Controlled_Component (Etype (Id))"}, {"sha": "00b27d304ad06a99701644e4be774a62b439228a", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/926a090041e11907cc4e354f465bea22c1fef40c/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/926a090041e11907cc4e354f465bea22c1fef40c/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=926a090041e11907cc4e354f465bea22c1fef40c", "patch": "@@ -7988,6 +7988,19 @@ package body Sem_Prag is\n             --  use of the secondary stack does not generate execution overhead\n             --  for suppressed conditions.\n \n+            --  Normally the analysis that follows will freeze the subprogram\n+            --  being called. However, if the call is to a null procedure,\n+            --  we want to freeze it before creating the block, because the\n+            --  analysis that follows may be done with expansion disabled, and\n+            --  and the body will not be generated, leading to spurious errors.\n+\n+            if Nkind (Call) = N_Procedure_Call_Statement\n+              and then Is_Entity_Name (Name (Call))\n+            then\n+               Analyze (Name (Call));\n+               Freeze_Before (N, Entity (Name (Call)));\n+            end if;\n+\n             Rewrite (N, Make_Implicit_If_Statement (N,\n               Condition => Cond,\n                  Then_Statements => New_List ("}]}