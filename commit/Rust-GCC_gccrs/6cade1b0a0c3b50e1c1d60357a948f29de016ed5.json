{"sha": "6cade1b0a0c3b50e1c1d60357a948f29de016ed5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNhZGUxYjBhMGMzYjUwZTFjMWQ2MDM1N2E5NDhmMjlkZTAxNmVkNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-16T14:01:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-16T14:01:46Z"}, "message": "[multiple changes]\n\n2014-07-16  Yannick Moy  <moy@adacore.com>\n\n\t* sem_attr.adb (Analyze_Attribute/cases Pred\n\tand Succ): Always enable range check on fixed-point types if\n\tnot suppressed for the type.\n\n2014-07-16  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_util.adb (State_Has_Enabled_Property):\n\tAccount for an external property denoted by an others choice.\n\nFrom-SVN: r212647", "tree": {"sha": "a0f511d53c196978cd381722eee72529fc5dc536", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0f511d53c196978cd381722eee72529fc5dc536"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cade1b0a0c3b50e1c1d60357a948f29de016ed5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cade1b0a0c3b50e1c1d60357a948f29de016ed5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cade1b0a0c3b50e1c1d60357a948f29de016ed5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cade1b0a0c3b50e1c1d60357a948f29de016ed5/comments", "author": null, "committer": null, "parents": [{"sha": "e59243faa1bfc9f5a84779ef20c4cb5a5046ffbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e59243faa1bfc9f5a84779ef20c4cb5a5046ffbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e59243faa1bfc9f5a84779ef20c4cb5a5046ffbe"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "e5f0504581409002bfe188c80f35e134aa5bbcb1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cade1b0a0c3b50e1c1d60357a948f29de016ed5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cade1b0a0c3b50e1c1d60357a948f29de016ed5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6cade1b0a0c3b50e1c1d60357a948f29de016ed5", "patch": "@@ -1,3 +1,14 @@\n+2014-07-16  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_attr.adb (Analyze_Attribute/cases Pred\n+\tand Succ): Always enable range check on fixed-point types if\n+\tnot suppressed for the type.\n+\n+2014-07-16  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_util.adb (State_Has_Enabled_Property):\n+\tAccount for an external property denoted by an others choice.\n+\n 2014-07-16  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch4.ads, exp_ch4.adb (Find_Hook_Context): Relocated to Exp_Util."}, {"sha": "bf3c3c7d9651bd5993ee305f23844d3490a89e52", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cade1b0a0c3b50e1c1d60357a948f29de016ed5/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cade1b0a0c3b50e1c1d60357a948f29de016ed5/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=6cade1b0a0c3b50e1c1d60357a948f29de016ed5", "patch": "@@ -4843,9 +4843,10 @@ package body Sem_Attr is\n          Resolve (E1, P_Base_Type);\n          Set_Etype (N, P_Base_Type);\n \n-         --  For real types, enable range check in Check_Overflow_Mode only\n+         --  For floating-point types, enable range check in\n+         --  Check_Float_Overflow mode only.\n \n-         if Is_Real_Type (P_Type) then\n+         if Is_Floating_Point_Type (P_Type) then\n             if Check_Float_Overflow\n               and then not Range_Checks_Suppressed (P_Base_Type)\n             then\n@@ -5750,9 +5751,10 @@ package body Sem_Attr is\n          Resolve (E1, P_Base_Type);\n          Set_Etype (N, P_Base_Type);\n \n-         --  For real types, enable range check in Check_Overflow_Mode only\n+         --  For floating-point types, enable range check in\n+         --  Check_Float_Overflow mode only.\n \n-         if Is_Real_Type (P_Type) then\n+         if Is_Floating_Point_Type (P_Type) then\n             if Check_Float_Overflow\n               and then not Range_Checks_Suppressed (P_Base_Type)\n             then"}, {"sha": "7bc82328480fa8711a06e40de97d5edb999dd155", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cade1b0a0c3b50e1c1d60357a948f29de016ed5/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cade1b0a0c3b50e1c1d60357a948f29de016ed5/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=6cade1b0a0c3b50e1c1d60357a948f29de016ed5", "patch": "@@ -7430,7 +7430,14 @@ package body Sem_Util is\n                   while Present (Prop) loop\n                      Prop_Nam := First (Choices (Prop));\n \n-                     if Chars (Prop_Nam) = Property then\n+                     --  The property can be represented in two ways:\n+                     --      others   => <value>\n+                     --    <property> => <value>\n+\n+                     if Nkind (Prop_Nam) = N_Others_Choice\n+                       or else (Nkind (Prop_Nam) = N_Identifier\n+                                  and then Chars (Prop_Nam) = Property)\n+                     then\n                         return Is_True (Expr_Value (Expression (Prop)));\n                      end if;\n "}]}