{"sha": "f021f1d3a65d46eb0d2d206d52343de79c124d57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAyMWYxZDNhNjVkNDZlYjBkMmQyMDZkNTIzNDNkZTc5YzEyNGQ1Nw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2017-11-14T18:31:01Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2017-11-14T18:31:01Z"}, "message": "Adapt Solaris 12 references\n\n\tlibgcc:\n\t* config.host (*-*-solaris2*): Adapt comment for Solaris 12\n\trenaming.\n\t* config/sol2/crtpg.c (__start_crt_compiler): Likewise.\n\t* configure.ac (libgcc_cv_solaris_crts): Likewise.\n\t* configure: Regenerate.\n\n\tgcc:\n\t* config.gcc (*-*-solaris2*): Enable default_use_cxa_atexit since\n\tSolaris 11.  Update comment.\n\t* configure.ac (gcc_cv_ld_pid): Adapt comment for Solaris 12\n\trenaming.\n\t* config/sol2.h (STARTFILE_SPEC): Likewise.\n\t* configure: Regenerate.\n\n\tgcc/testsuite:\n\t* lib/target-supports.exp (check_effective_target_pie): Adapt\n\tcomment for Solaris 12 renaming.\n\n\t* gcc.dg/torture/pr60092.c: Remove *-*-solaris2.11* dg-xfail-run-if.\n\nFrom-SVN: r254737", "tree": {"sha": "a7ea074abbd00f964b1fad30cc8beaec7ce72caa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7ea074abbd00f964b1fad30cc8beaec7ce72caa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f021f1d3a65d46eb0d2d206d52343de79c124d57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f021f1d3a65d46eb0d2d206d52343de79c124d57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f021f1d3a65d46eb0d2d206d52343de79c124d57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f021f1d3a65d46eb0d2d206d52343de79c124d57/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "13545f19e0e7f1d73ae6c0b39f6b86240de509a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13545f19e0e7f1d73ae6c0b39f6b86240de509a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13545f19e0e7f1d73ae6c0b39f6b86240de509a8"}], "stats": {"total": 60, "additions": 41, "deletions": 19}, "files": [{"sha": "3cee433799c1c686a76cb20165f5a6516587d35f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f021f1d3a65d46eb0d2d206d52343de79c124d57/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f021f1d3a65d46eb0d2d206d52343de79c124d57/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f021f1d3a65d46eb0d2d206d52343de79c124d57", "patch": "@@ -1,3 +1,12 @@\n+2017-11-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config.gcc (*-*-solaris2*): Enable default_use_cxa_atexit since\n+\tSolaris 11.  Update comment.\n+\t* configure.ac (gcc_cv_ld_pid): Adapt comment for Solaris 12\n+\trenaming.\n+\t* config/sol2.h (STARTFILE_SPEC): Likewise.\n+\t* configure: Regenerate.\n+\n 2017-11-14  Carl Love  <cel@us.ibm.com>\n \n \t* config/rs6000/rs6000.c (swap_endian_selector_for_mode): Remove"}, {"sha": "8ee8e8c7c8b37e81294754ce91b6b2c8f4435ef9", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f021f1d3a65d46eb0d2d206d52343de79c124d57/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f021f1d3a65d46eb0d2d206d52343de79c124d57/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=f021f1d3a65d46eb0d2d206d52343de79c124d57", "patch": "@@ -860,8 +860,8 @@ case ${target} in\n   sol2_tm_file_tail=\"${cpu_type}/sol2.h sol2.h\"\n   sol2_tm_file=\"${sol2_tm_file_head} ${sol2_tm_file_tail}\"\n   case ${target} in\n-    *-*-solaris2.1[2-9]*)\n-      # __cxa_atexit was introduced in Solaris 12.\n+    *-*-solaris2.1[1-9]*)\n+      # __cxa_atexit was introduced in Solaris 11.4.\n       default_use_cxa_atexit=yes\n       ;;\n   esac"}, {"sha": "8174cebd1040232247dc1cde9eb601ee8ae399c8", "filename": "gcc/config/sol2.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f021f1d3a65d46eb0d2d206d52343de79c124d57/gcc%2Fconfig%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f021f1d3a65d46eb0d2d206d52343de79c124d57/gcc%2Fconfig%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.h?ref=f021f1d3a65d46eb0d2d206d52343de79c124d57", "patch": "@@ -205,8 +205,8 @@ along with GCC; see the file COPYING3.  If not see\n /* We don't use the standard svr4 STARTFILE_SPEC because it's wrong for us.  */\n #undef STARTFILE_SPEC\n #ifdef HAVE_SOLARIS_CRTS\n-/* Since Solaris 11.x and Solaris 12, the OS delivers crt1.o, crti.o, and\n-   crtn.o, with a hook for compiler-dependent stuff like profile handling.  */\n+/* Since Solaris 11.4, the OS delivers crt1.o, crti.o, and crtn.o, with a hook\n+   for compiler-dependent stuff like profile handling.  */\n #define STARTFILE_SPEC \"%{!shared:%{!symbolic: \\\n \t\t\t  crt1.o%s \\\n \t\t\t  %{p:%e-p is not supported; \\"}, {"sha": "30fb208b9b0b1795726dc7052ae1fa4d4b3ab69e", "filename": "gcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f021f1d3a65d46eb0d2d206d52343de79c124d57/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f021f1d3a65d46eb0d2d206d52343de79c124d57/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=f021f1d3a65d46eb0d2d206d52343de79c124d57", "patch": "@@ -28246,7 +28246,7 @@ elif test x$gcc_cv_ld != x; then\n   else\n     case \"$target\" in\n       *-*-solaris2.1[1-9]*)\n-\t# Solaris 11.x and Solaris 12 added PIE support.\n+\t# Solaris 11.3 added PIE support.\n \tif $gcc_cv_ld -z help 2>&1 | grep -- type.*pie > /dev/null; then\n \t  gcc_cv_ld_pie=yes\n \tfi"}, {"sha": "d3a31c2c15a51339baba98fca4e22fa96c94bb3e", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f021f1d3a65d46eb0d2d206d52343de79c124d57/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f021f1d3a65d46eb0d2d206d52343de79c124d57/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=f021f1d3a65d46eb0d2d206d52343de79c124d57", "patch": "@@ -5106,7 +5106,7 @@ elif test x$gcc_cv_ld != x; then\n   else\n     case \"$target\" in\n       *-*-solaris2.1[[1-9]]*)\n-\t# Solaris 11.x and Solaris 12 added PIE support.\n+\t# Solaris 11.3 added PIE support.\n \tif $gcc_cv_ld -z help 2>&1 | grep -- type.*pie > /dev/null; then\n \t  gcc_cv_ld_pie=yes\n \tfi"}, {"sha": "16836fa4f0ef56e01a38c2a9cd6e7fbaa5e5f40e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f021f1d3a65d46eb0d2d206d52343de79c124d57/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f021f1d3a65d46eb0d2d206d52343de79c124d57/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f021f1d3a65d46eb0d2d206d52343de79c124d57", "patch": "@@ -1,3 +1,10 @@\n+2017-11-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* lib/target-supports.exp (check_effective_target_pie): Adapt\n+\tcomment for Solaris 12 renaming.\n+\n+\t* gcc.dg/torture/pr60092.c: Remove *-*-solaris2.11* dg-xfail-run-if.\n+\n 2017-11-14  Carl Love  <cel@us.ibm.com>\n \n \t* builtins-revb-runnable.c (dg-do run): Add lp64 directive.  Fix"}, {"sha": "74e7c174a832364acbb8d279dd7811a90fd9ebf8", "filename": "gcc/testsuite/gcc.dg/torture/pr60092.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f021f1d3a65d46eb0d2d206d52343de79c124d57/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr60092.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f021f1d3a65d46eb0d2d206d52343de79c124d57/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr60092.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr60092.c?ref=f021f1d3a65d46eb0d2d206d52343de79c124d57", "patch": "@@ -4,7 +4,6 @@\n /* { dg-skip-if \"No undefined weak\" { nvptx-*-* } } */\n /* { dg-additional-options \"-Wl,-undefined,dynamic_lookup\" { target *-*-darwin* } } */\n /* { dg-additional-options \"-Wl,-flat_namespace\" { target *-*-darwin[89]* } } */\n-/* { dg-xfail-run-if \"posix_memalign modifies first arg on error\" { *-*-solaris2.11* } { \"-O0\" } } */\n \n typedef __SIZE_TYPE__ size_t;\n extern int posix_memalign(void **memptr, size_t alignment, size_t size) __attribute__((weak));"}, {"sha": "881f849a388dcbade83b30395e708b3910fe69da", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f021f1d3a65d46eb0d2d206d52343de79c124d57/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f021f1d3a65d46eb0d2d206d52343de79c124d57/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=f021f1d3a65d46eb0d2d206d52343de79c124d57", "patch": "@@ -1175,8 +1175,8 @@ proc check_effective_target_pie { } {\n \treturn 1;\n     }\n     if { [istarget *-*-solaris2.1\\[1-9\\]*] } {\n-\t# Full PIE support was added in Solaris 11.x and Solaris 12, but gcc\n-\t# errors out if missing, so check for that.\n+\t# Full PIE support was added in Solaris 11.3, but gcc errors out\n+\t# if missing, so check for that.\n \treturn [check_no_compiler_messages pie executable {\n \t    int main (void) { return 0; }\n \t} \"-pie -fpie\"]"}, {"sha": "a069cd79511557461386cb3e1333264225452cfd", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f021f1d3a65d46eb0d2d206d52343de79c124d57/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f021f1d3a65d46eb0d2d206d52343de79c124d57/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=f021f1d3a65d46eb0d2d206d52343de79c124d57", "patch": "@@ -1,3 +1,11 @@\n+2017-11-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config.host (*-*-solaris2*): Adapt comment for Solaris 12\n+\trenaming.\n+\t* config/sol2/crtpg.c (__start_crt_compiler): Likewise.\n+\t* configure.ac (libgcc_cv_solaris_crts): Likewise.\n+\t* configure: Regenerate.\n+\n 2017-11-07  Tom de Vries  <tom@codesourcery.com>\n \n \t* config/rs6000/aix-unwind.h (REGISTER_CFA_OFFSET_FOR): Remove semicolon"}, {"sha": "255612febf47977058cf22e726ac20786c3aff39", "filename": "libgcc/config.host", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f021f1d3a65d46eb0d2d206d52343de79c124d57/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f021f1d3a65d46eb0d2d206d52343de79c124d57/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=f021f1d3a65d46eb0d2d206d52343de79c124d57", "patch": "@@ -277,7 +277,7 @@ case ${host} in\n   tmake_file=\"$tmake_file $cpu_type/t-sol2\"\n   extra_parts=\"gmon.o crtbegin.o crtend.o\"\n   if test \"${libgcc_cv_solaris_crts}\" = yes; then\n-    # Solaris 11.x and 12 provide crt1.o, crti.o, and crtn.o as part of the\n+    # Solaris 11.4 provides crt1.o, crti.o, and crtn.o as part of the\n     # base system.  crtp.o and crtpg.o implement the compiler-dependent parts.\n     extra_parts=\"$extra_parts crtp.o crtpg.o\"\n     # If the Solaris CRTs are present, both ld and gld will have PIE support."}, {"sha": "d5966b0226b18d54982949940d1abb7ec4a3b79f", "filename": "libgcc/config/sol2/crtpg.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f021f1d3a65d46eb0d2d206d52343de79c124d57/libgcc%2Fconfig%2Fsol2%2Fcrtpg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f021f1d3a65d46eb0d2d206d52343de79c124d57/libgcc%2Fconfig%2Fsol2%2Fcrtpg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsol2%2Fcrtpg.c?ref=f021f1d3a65d46eb0d2d206d52343de79c124d57", "patch": "@@ -31,11 +31,10 @@ extern char _start[], _etext[];\n \n int __start_crt_compiler (int, char **);\n \n-/* Since Solaris 11.x and Solaris 12, the system-provided CRTs provide a\n-   hook to invoke initialization code early during process startup.\n-   __start_crt_compiler is documented in crt1.o(5).  We use it to perform\n-   initialization for profiling as a substitute for the earlier separate\n-   gcrt1.o.  */\n+/* Since Solaris 11.4, the system-provided CRTs provide a hook to invoke\n+   initialization code early during process startup.  __start_crt_compiler\n+   is documented in crt1.o(5).  We use it to perform initialization for\n+   profiling as a substitute for the earlier separate gcrt1.o.  */\n \n int\n __start_crt_compiler (int argc __attribute__ ((unused)),"}, {"sha": "20169b18fe9376e8432bceff2573b70c169aa3d7", "filename": "libgcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f021f1d3a65d46eb0d2d206d52343de79c124d57/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f021f1d3a65d46eb0d2d206d52343de79c124d57/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=f021f1d3a65d46eb0d2d206d52343de79c124d57", "patch": "@@ -4875,7 +4875,7 @@ esac\n \n case ${host} in\n *-*-solaris2*)\n-  # Check for system-provided CRTs on Solaris 11.x and Solaris 12.\n+  # Check for system-provided CRTs on Solaris 11.4.\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking system-provided CRTs on Solaris\" >&5\n $as_echo_n \"checking system-provided CRTs on Solaris... \" >&6; }\n if test \"${libgcc_cv_solaris_crts+set}\" = set; then :"}, {"sha": "53e77757aa8a5732c367d43bad56105e78b2f9ea", "filename": "libgcc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f021f1d3a65d46eb0d2d206d52343de79c124d57/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f021f1d3a65d46eb0d2d206d52343de79c124d57/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=f021f1d3a65d46eb0d2d206d52343de79c124d57", "patch": "@@ -296,7 +296,7 @@ esac\n \n case ${host} in\n *-*-solaris2*)\n-  # Check for system-provided CRTs on Solaris 11.x and Solaris 12.\n+  # Check for system-provided CRTs on Solaris 11.4.\n   AC_CACHE_CHECK([system-provided CRTs on Solaris],\n     \t\t [libgcc_cv_solaris_crts],\n     [libgcc_cv_solaris_crts=no"}, {"sha": "4e838166484e22832aeb3e5fb549616ccf457ca3", "filename": "libgo/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f021f1d3a65d46eb0d2d206d52343de79c124d57/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f021f1d3a65d46eb0d2d206d52343de79c124d57/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=f021f1d3a65d46eb0d2d206d52343de79c124d57", "patch": "@@ -11114,7 +11114,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11117 \"configure\"\n+#line 11118 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11220,7 +11220,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11223 \"configure\"\n+#line 11224 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}]}