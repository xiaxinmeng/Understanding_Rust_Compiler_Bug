{"sha": "8bf85f21b3a0180e286e2e32de3dd7f266729baf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJmODVmMjFiM2EwMTgwZTI4NmUyZTMyZGUzZGQ3ZjI2NjcyOWJhZg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2010-05-28T12:59:32Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-05-28T12:59:32Z"}, "message": "i386.c (ix86_fn_abi_va_list): Make static.\n\n\t* config/i386/i386.c (ix86_fn_abi_va_list): Make static.\n\t(ix86_canonical_va_list_type): Make static.  Add declaration.\n\t(ix86_enum_va_list): Make static.  Reindent.\n\t* config/i386/i386-protos.h (ix86_fn_abi_va_list): Remove declaration.\n\t(ix86_canonical_va_list_type): Ditto.\n\t(ix86_enum_va_list): Ditto.\n\nFrom-SVN: r159968", "tree": {"sha": "c7d7fcb7265bc1a3b7c3dcaa11929f59bdcd2679", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7d7fcb7265bc1a3b7c3dcaa11929f59bdcd2679"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bf85f21b3a0180e286e2e32de3dd7f266729baf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bf85f21b3a0180e286e2e32de3dd7f266729baf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bf85f21b3a0180e286e2e32de3dd7f266729baf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bf85f21b3a0180e286e2e32de3dd7f266729baf/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b56119876b871d6eb330fa06bb6ea16f32d5b68a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b56119876b871d6eb330fa06bb6ea16f32d5b68a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b56119876b871d6eb330fa06bb6ea16f32d5b68a"}], "stats": {"total": 67, "additions": 39, "deletions": 28}, "files": [{"sha": "5c51b843e20dd82926f3ff78fdcda4c16e89a075", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bf85f21b3a0180e286e2e32de3dd7f266729baf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bf85f21b3a0180e286e2e32de3dd7f266729baf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8bf85f21b3a0180e286e2e32de3dd7f266729baf", "patch": "@@ -1,3 +1,12 @@\n+2010-05-28  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_fn_abi_va_list): Make static.\n+\t(ix86_canonical_va_list_type): Make static.  Add declaration.\n+\t(ix86_enum_va_list): Make static.  Reindent.\n+\t* config/i386/i386-protos.h (ix86_fn_abi_va_list): Remove declaration.\n+\t(ix86_canonical_va_list_type): Ditto.\n+\t(ix86_enum_va_list): Ditto.\n+\n 2010-05-28  Richard Guenther  <rguenther@suse.de>\n \n \t* lto-wrapper.c (run_gcc): With -save-temps generate a"}, {"sha": "eaff7ab505815bb707895876bdcb01495690729a", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bf85f21b3a0180e286e2e32de3dd7f266729baf/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bf85f21b3a0180e286e2e32de3dd7f266729baf/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=8bf85f21b3a0180e286e2e32de3dd7f266729baf", "patch": "@@ -192,10 +192,6 @@ extern void function_arg_advance (CUMULATIVE_ARGS *, enum machine_mode,\n #endif\t/* RTX_CODE  */\n \n #ifdef TREE_CODE\n-extern int ix86_enum_va_list (int, const char **, tree *);\n-extern tree ix86_fn_abi_va_list (tree);\n-extern tree ix86_canonical_va_list_type (tree);\n-\n extern int ix86_return_pops_args (tree, tree, int);\n \n extern int ix86_data_alignment (tree, int);"}, {"sha": "c9ac621e32b275de1d78db1216a61a951bbfdc00", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 30, "deletions": 24, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bf85f21b3a0180e286e2e32de3dd7f266729baf/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bf85f21b3a0180e286e2e32de3dd7f266729baf/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=8bf85f21b3a0180e286e2e32de3dd7f266729baf", "patch": "@@ -1981,6 +1981,7 @@ static bool ix86_expand_vector_init_one_nonzero (bool, enum machine_mode,\n \t\t\t\t\t\t rtx, rtx, int);\n static void ix86_add_new_builtins (int);\n static rtx ix86_expand_vec_perm_builtin (tree);\n+static tree ix86_canonical_va_list_type (tree);\n \n enum ix86_function_specific_strings\n {\n@@ -30482,7 +30483,7 @@ ix86_expand_vec_extract_even_odd (rtx targ, rtx op0, rtx op1, unsigned odd)\n /* This function returns the calling abi specific va_list type node.\n    It returns  the FNDECL specific va_list type.  */\n \n-tree\n+static tree\n ix86_fn_abi_va_list (tree fndecl)\n {\n   if (!TARGET_64BIT)\n@@ -30498,7 +30499,7 @@ ix86_fn_abi_va_list (tree fndecl)\n /* Returns the canonical va_list type specified by TYPE. If there\n    is no valid TYPE provided, it return NULL_TREE.  */\n \n-tree\n+static tree\n ix86_canonical_va_list_type (tree type)\n {\n   tree wtype, htype;\n@@ -30571,31 +30572,36 @@ ix86_canonical_va_list_type (tree type)\n }\n \n /* Iterate through the target-specific builtin types for va_list.\n-    IDX denotes the iterator, *PTREE is set to the result type of\n-    the va_list builtin, and *PNAME to its internal type.\n-    Returns zero if there is no element for this index, otherwise\n-    IDX should be increased upon the next call.\n-    Note, do not iterate a base builtin's name like __builtin_va_list.\n-    Used from c_common_nodes_and_builtins.  */\n+   IDX denotes the iterator, *PTREE is set to the result type of\n+   the va_list builtin, and *PNAME to its internal type.\n+   Returns zero if there is no element for this index, otherwise\n+   IDX should be increased upon the next call.\n+   Note, do not iterate a base builtin's name like __builtin_va_list.\n+   Used from c_common_nodes_and_builtins.  */\n \n-int\n+static int\n ix86_enum_va_list (int idx, const char **pname, tree *ptree)\n {\n-  if (!TARGET_64BIT)\n-    return 0;\n-  switch (idx) {\n-  case 0:\n-    *ptree = ms_va_list_type_node;\n-    *pname = \"__builtin_ms_va_list\";\n-    break;\n-  case 1:\n-    *ptree = sysv_va_list_type_node;\n-    *pname = \"__builtin_sysv_va_list\";\n-    break;\n-  default:\n-    return 0;\n-  }\n-  return 1;\n+  if (TARGET_64BIT)\n+    {\n+      switch (idx)\n+\t{\n+\tdefault:\n+\t  break;\n+\n+\tcase 0:\n+\t  *ptree = ms_va_list_type_node;\n+\t  *pname = \"__builtin_ms_va_list\";\n+\t  return 1;\n+\n+\tcase 1:\n+\t  *ptree = sysv_va_list_type_node;\n+\t  *pname = \"__builtin_sysv_va_list\";\n+\t  return 1;\n+\t}\n+    }\n+\n+  return 0;\n }\n \n /* Initialize the GCC target structure.  */"}]}