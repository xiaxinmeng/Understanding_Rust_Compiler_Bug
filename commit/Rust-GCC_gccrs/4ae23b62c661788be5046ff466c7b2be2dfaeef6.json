{"sha": "4ae23b62c661788be5046ff466c7b2be2dfaeef6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFlMjNiNjJjNjYxNzg4YmU1MDQ2ZmY0NjZjN2IyYmUyZGZhZWVmNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-05T13:24:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-05T13:24:27Z"}, "message": "opt.ads (Warn_On_Biased_Representation): New flag\n\n2008-08-05  Robert Dewar  <dewar@adacore.com>\n\n\t* opt.ads (Warn_On_Biased_Representation): New flag\n\t\n\t* sem_ch13.adb:\n\t(Analyze_Attribute_Definition_Clause): Issue warning when biased\n\trepresentation is required.\n\t(Minimum_Size): Don't allow biasing if enum rep clause case\n\t\n\t* sem_warn.adb:\n\t(Set_Dot_Warning_Switch): Add handling of -gnatw.b/B switches\n\t(Set_Warning_Switch): Include -gnatw.b in -gnatwa, -gnatw.B in gnatws\n\t\n\t* usage.adb: Add lines for -gnatw.b/B switches\n\nFrom-SVN: r138704", "tree": {"sha": "54b515868213283267ede81895a61a874247a3bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54b515868213283267ede81895a61a874247a3bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ae23b62c661788be5046ff466c7b2be2dfaeef6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ae23b62c661788be5046ff466c7b2be2dfaeef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ae23b62c661788be5046ff466c7b2be2dfaeef6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ae23b62c661788be5046ff466c7b2be2dfaeef6/comments", "author": null, "committer": null, "parents": [{"sha": "e5fe425118de09588879e2103f6cfb821c5919a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5fe425118de09588879e2103f6cfb821c5919a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5fe425118de09588879e2103f6cfb821c5919a5"}], "stats": {"total": 86, "additions": 76, "deletions": 10}, "files": [{"sha": "c78970e24d648747b0c8e8dd1a71f2979d82539a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ae23b62c661788be5046ff466c7b2be2dfaeef6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ae23b62c661788be5046ff466c7b2be2dfaeef6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4ae23b62c661788be5046ff466c7b2be2dfaeef6", "patch": "@@ -1,3 +1,28 @@\n+2008-08-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* opt.ads (Warn_On_Biased_Representation): New flag\n+\t\n+\t* sem_ch13.adb:\n+\t(Analyze_Attribute_Definition_Clause): Issue warning when biased\n+\trepresentation is required.\n+\t(Minimum_Size): Don't allow biasing if enum rep clause case\n+\t\n+\t* sem_warn.adb:\n+\t(Set_Dot_Warning_Switch): Add handling of -gnatw.b/B switches\n+\t(Set_Warning_Switch): Include -gnatw.b in -gnatwa, -gnatw.B in gnatws\n+\t\n+\t* usage.adb: Add lines for -gnatw.b/B switches\n+\n+2008-08-05  Pascal Obry  <obry@adacore.com>\n+\n+\t* a-coinve.adb: Reorder the code to avoid uninitialized warning.\n+\n+\t* adaint.c: In UNIX cases do not call __gnat_stat but stat directly.\n+\n+2008-08-05  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* socket.c: Minor reformatting.\n+\n 2008-08-05  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch3.adb: Minor reformatting"}, {"sha": "b0bde56b50dfb04c29c42ff0f0f1782139922c08", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ae23b62c661788be5046ff466c7b2be2dfaeef6/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ae23b62c661788be5046ff466c7b2be2dfaeef6/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=4ae23b62c661788be5046ff466c7b2be2dfaeef6", "patch": "@@ -1240,6 +1240,12 @@ package Opt is\n    --  Set to True to generate warnings for static fixed-point expression\n    --  values that are not an exact multiple of the small value of the type.\n \n+   Warn_On_Biased_Representation : Boolean := True;\n+   --  GNAT\n+   --  Set to True to generate warnings for size clauses, component clauses\n+   --  and component_size clauses that force biased representation. Set False\n+   --  by -gnatw.B.\n+\n    Warn_On_Constant : Boolean := False;\n    --  GNAT\n    --  Set to True to generate warnings for variables that could be declared"}, {"sha": "fe5305fa40f5cd31b22f91a003e8f1c88987e9cd", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ae23b62c661788be5046ff466c7b2be2dfaeef6/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ae23b62c661788be5046ff466c7b2be2dfaeef6/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=4ae23b62c661788be5046ff466c7b2be2dfaeef6", "patch": "@@ -1131,6 +1131,12 @@ package body Sem_Ch13 is\n                      Set_Associated_Node_For_Itype (New_Ctyp, U_Ent);\n \n                      Set_Component_Type (Btype, New_Ctyp);\n+\n+                     if Warn_On_Biased_Representation then\n+                        Error_Msg_N\n+                          (\"?component size clause forces biased \"\n+                           & \"representation\", N);\n+                     end if;\n                   end if;\n \n                   Set_Component_Size (Btype, Csize);\n@@ -1330,7 +1336,12 @@ package body Sem_Ch13 is\n                  or else Has_Small_Clause (U_Ent)\n                then\n                   Check_Size (Expr, Etyp, Size, Biased);\n-                  Set_Has_Biased_Representation (U_Ent, Biased);\n+                     Set_Has_Biased_Representation (U_Ent, Biased);\n+\n+                  if Biased and Warn_On_Biased_Representation then\n+                     Error_Msg_N\n+                       (\"?size clause forces biased representation\", N);\n+                  end if;\n                end if;\n \n                --  For types set RM_Size and Esize if possible\n@@ -1708,6 +1719,11 @@ package body Sem_Ch13 is\n                if Is_Elementary_Type (U_Ent) then\n                   Check_Size (Expr, U_Ent, Size, Biased);\n                   Set_Has_Biased_Representation (U_Ent, Biased);\n+\n+                  if Biased and Warn_On_Biased_Representation then\n+                     Error_Msg_N\n+                       (\"?value size clause forces biased representation\", N);\n+                  end if;\n                end if;\n \n                Set_RM_Size (U_Ent, Size);\n@@ -2491,6 +2507,12 @@ package body Sem_Ch13 is\n \n                         Set_Has_Biased_Representation (Comp, Biased);\n \n+                        if Biased and Warn_On_Biased_Representation then\n+                           Error_Msg_F\n+                             (\"?component clause forces biased \"\n+                              & \"representation\", CC);\n+                        end if;\n+\n                         if Present (Ocomp) then\n                            Set_Component_Clause     (Ocomp, CC);\n                            Set_Component_Bit_Offset (Ocomp, Fbit);\n@@ -3570,7 +3592,10 @@ package body Sem_Ch13 is\n \n       --  Fall through with Hi and Lo set. Deal with biased case\n \n-      if (Biased and then not Is_Fixed_Point_Type (T))\n+      if (Biased\n+           and then not Is_Fixed_Point_Type (T)\n+           and then not (Is_Enumeration_Type (T)\n+                          and then Has_Non_Standard_Rep (T)))\n         or else Has_Biased_Representation (T)\n       then\n          Hi := Hi - Lo;"}, {"sha": "c22d0ce475ae095b232cfae728c7a5aba6986a27", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ae23b62c661788be5046ff466c7b2be2dfaeef6/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ae23b62c661788be5046ff466c7b2be2dfaeef6/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=4ae23b62c661788be5046ff466c7b2be2dfaeef6", "patch": "@@ -2817,6 +2817,12 @@ package body Sem_Warn is\n          when 'A' =>\n             Warn_On_Assertion_Failure           := False;\n \n+         when 'b' =>\n+            Warn_On_Biased_Representation       := True;\n+\n+         when 'B' =>\n+            Warn_On_Biased_Representation       := False;\n+\n          when 'c' =>\n             Warn_On_Unrepped_Components         := True;\n \n@@ -2837,12 +2843,12 @@ package body Sem_Warn is\n             Warn_On_Assertion_Failure           := True;\n             Warn_On_Assumed_Low_Bound           := True;\n             Warn_On_Bad_Fixed_Value             := True;\n+            Warn_On_Biased_Representation       := True;\n             Warn_On_Constant                    := True;\n             Warn_On_Deleted_Code                := True;\n             Warn_On_Dereference                 := True;\n             Warn_On_Export_Import               := True;\n             Warn_On_Hiding                      := True;\n-            Ineffective_Inline_Warnings         := True;\n             Warn_On_Modified_Unread             := True;\n             Warn_On_No_Value_Assigned           := True;\n             Warn_On_Non_Local_Exception         := True;\n@@ -2910,6 +2916,7 @@ package body Sem_Warn is\n             Warn_On_Assertion_Failure           := True;\n             Warn_On_Assumed_Low_Bound           := True;\n             Warn_On_Bad_Fixed_Value             := True;\n+            Warn_On_Biased_Representation       := True;\n             Warn_On_Constant                    := True;\n             Warn_On_Export_Import               := True;\n             Warn_On_Modified_Unread             := True;\n@@ -2936,6 +2943,7 @@ package body Sem_Warn is\n             Warn_On_Assertion_Failure           := False;\n             Warn_On_Assumed_Low_Bound           := False;\n             Warn_On_Bad_Fixed_Value             := False;\n+            Warn_On_Biased_Representation       := False;\n             Warn_On_Constant                    := False;\n             Warn_On_Deleted_Code                := False;\n             Warn_On_Dereference                 := False;"}, {"sha": "74780107da3773166bd7ec1473124abdfde9b78b", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ae23b62c661788be5046ff466c7b2be2dfaeef6/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ae23b62c661788be5046ff466c7b2be2dfaeef6/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=4ae23b62c661788be5046ff466c7b2be2dfaeef6", "patch": "@@ -378,12 +378,14 @@ begin\n    Write_Line (\"        a    turn on all optional warnings \" &\n                                                   \"(except dhl.ot.w)\");\n    Write_Line (\"        A    turn off all optional warnings\");\n-   Write_Line (\"        .a*  turn on warnings for failing assertions\");\n-   Write_Line (\"        .A   turn off warnings for failing assertions\");\n+   Write_Line (\"        .a*  turn on warnings for failing assertion\");\n+   Write_Line (\"        .A   turn off warnings for failing assertion\");\n    Write_Line (\"        b    turn on warnings for bad fixed value \" &\n                                                   \"(not multiple of small)\");\n    Write_Line (\"        B*   turn off warnings for bad fixed value \" &\n                                                   \"(not multiple of small)\");\n+   Write_Line (\"        .b*  turn on warnings for biased representation\");\n+   Write_Line (\"        .B   turn off warnings for biased representation\");\n    Write_Line (\"        c    turn on warnings for constant conditional\");\n    Write_Line (\"        C*   turn off warnings for constant conditional\");\n    Write_Line (\"        .c   turn on warnings for unrepped components\");\n@@ -396,7 +398,7 @@ begin\n    Write_Line (\"        F*   turn off warnings for unreferenced formal\");\n    Write_Line (\"        g*   turn on warnings for unrecognized pragma\");\n    Write_Line (\"        G    turn off warnings for unrecognized pragma\");\n-   Write_Line (\"        h    turn on warnings for hiding variable \");\n+   Write_Line (\"        h    turn on warnings for hiding variable\");\n    Write_Line (\"        H*   turn off warnings for hiding variable\");\n    Write_Line (\"        i*   turn on warnings for implementation unit\");\n    Write_Line (\"        I    turn off warnings for implementation unit\");\n@@ -430,9 +432,9 @@ begin\n    Write_Line (\"        .P*  turn off warnings for suspicious parameter \" &\n                                                   \"order\");\n    Write_Line (\"        q*   turn on warnings for questionable \" &\n-                                                  \"missing parentheses\");\n+                                                  \"missing parenthesis\");\n    Write_Line (\"        Q    turn off warnings for questionable \" &\n-                                                  \"missing parentheses\");\n+                                                  \"missing parenthesis\");\n    Write_Line (\"        r    turn on warnings for redundant construct\");\n    Write_Line (\"        R*   turn off warnings for redundant construct\");\n    Write_Line (\"        .r   turn on warnings for object renaming function\");\n@@ -451,8 +453,8 @@ begin\n    Write_Line (\"        .w*  turn off warnings on pragma Warnings Off\");\n    Write_Line (\"        x*   turn on warnings for export/import\");\n    Write_Line (\"        X    turn off warnings for export/import\");\n-   Write_Line (\"        .x   turn on warnings for non-local exceptions\");\n-   Write_Line (\"        .X*  turn off warnings for non-local exceptions\");\n+   Write_Line (\"        .x   turn on warnings for non-local exception\");\n+   Write_Line (\"        .X*  turn off warnings for non-local exception\");\n    Write_Line (\"        y*   turn on warnings for Ada 2005 incompatibility\");\n    Write_Line (\"        Y    turn off warnings for Ada 2005 incompatibility\");\n    Write_Line (\"        z*   turn on warnings for convention/size/align \" &"}]}