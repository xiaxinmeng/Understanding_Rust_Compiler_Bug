{"sha": "05435609367c0ae1398ac1b4becfae06d217552c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU0MzU2MDkzNjdjMGFlMTM5OGFjMWI0YmVjZmFlMDZkMjE3NTUyYw==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-05-18T12:54:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-07-07T16:23:12Z"}, "message": "[Ada] Simplify handling of Generate_Code flag for compilation units\n\ngcc/ada/\n\n\t* gnat1drv.adb (Gnat1drv): Remove flagging of main unit and its\n\tcorresponding spec as requiring code generation; now the flags\n\tare set much earlier.\n\t* lib-load.adb (Load_Main_Source): Set Generate_Code flag on the\n\tmain unit source.\n\t(Make_Instance_Unit): Copy Generate_Code flag from the main unit\n\tto instance units.\n\t* lib-writ.adb (Write_ALI): Remove redundant condition;\n\tGenerate_Code flag is always set for the main unit.\n\t* par-load.adb (Load): Set Generate_Code flag on the main unit's\n\tcorresponding spec, if any.", "tree": {"sha": "b0f112d482fd0b2c389dbafb6b87245d1037ae65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0f112d482fd0b2c389dbafb6b87245d1037ae65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05435609367c0ae1398ac1b4becfae06d217552c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05435609367c0ae1398ac1b4becfae06d217552c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05435609367c0ae1398ac1b4becfae06d217552c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05435609367c0ae1398ac1b4becfae06d217552c/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3ff72939e52a381d28f3c4879f2eaa1d154ff73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3ff72939e52a381d28f3c4879f2eaa1d154ff73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3ff72939e52a381d28f3c4879f2eaa1d154ff73"}], "stats": {"total": 42, "additions": 12, "deletions": 30}, "files": [{"sha": "6f65d7480f2df06a098776b9d0ae059cde31e42c", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05435609367c0ae1398ac1b4becfae06d217552c/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05435609367c0ae1398ac1b4becfae06d217552c/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=05435609367c0ae1398ac1b4becfae06d217552c", "patch": "@@ -1287,29 +1287,6 @@ begin\n          Exit_Program (E_Errors);\n       end if;\n \n-      --  Set Generate_Code on main unit and its spec. We do this even if are\n-      --  not generating code, since Lib-Writ uses this to determine which\n-      --  units get written in the ali file.\n-\n-      Set_Generate_Code (Main_Unit);\n-\n-      --  If we have a corresponding spec, and it comes from source or it is\n-      --  not a generated spec for a child subprogram body, then we need object\n-      --  code for the spec unit as well.\n-\n-      if Nkind (Unit (Main_Unit_Node)) in N_Unit_Body\n-        and then not Acts_As_Spec (Main_Unit_Node)\n-      then\n-         if Nkind (Unit (Main_Unit_Node)) = N_Subprogram_Body\n-           and then not Comes_From_Source (Library_Unit (Main_Unit_Node))\n-         then\n-            null;\n-         else\n-            Set_Generate_Code\n-              (Get_Cunit_Unit_Number (Library_Unit (Main_Unit_Node)));\n-         end if;\n-      end if;\n-\n       --  Case of no code required to be generated, exit indicating no error\n \n       if Original_Operating_Mode = Check_Syntax then"}, {"sha": "19afe268ea72c6882c10a3af59b55ed0ee4af125", "filename": "gcc/ada/lib-load.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05435609367c0ae1398ac1b4becfae06d217552c/gcc%2Fada%2Flib-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05435609367c0ae1398ac1b4becfae06d217552c/gcc%2Fada%2Flib-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.adb?ref=05435609367c0ae1398ac1b4becfae06d217552c", "patch": "@@ -364,7 +364,7 @@ package body Lib.Load is\n             Error_Location         => No_Location,\n             Expected_Unit          => No_Unit_Name,\n             Fatal_Error            => None,\n-            Generate_Code          => False,\n+            Generate_Code          => True,\n             Has_RACW               => False,\n             Filler                 => False,\n             Ident_String           => Empty,\n@@ -964,13 +964,12 @@ package body Lib.Load is\n       Units.Increment_Last;\n \n       if In_Main then\n-         Units.Table (Units.Last)               := Units.Table (Main_Unit);\n-         Units.Table (Units.Last).Cunit         := Library_Unit (N);\n-         Units.Table (Units.Last).Generate_Code := True;\n+         Units.Table (Units.Last)        := Units.Table (Main_Unit);\n+         Units.Table (Units.Last).Cunit  := Library_Unit (N);\n          Init_Unit_Name (Units.Last, Unit_Name (Main_Unit));\n \n-         Units.Table (Main_Unit).Cunit          := N;\n-         Units.Table (Main_Unit).Version        := Source_Checksum (Sind);\n+         Units.Table (Main_Unit).Cunit   := N;\n+         Units.Table (Main_Unit).Version := Source_Checksum (Sind);\n          Init_Unit_Name (Main_Unit,\n            Get_Body_Name\n              (Unit_Name (Get_Cunit_Unit_Number (Library_Unit (N)))));"}, {"sha": "416052c943e5b52d1803fb44f80371f761c273d4", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05435609367c0ae1398ac1b4becfae06d217552c/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05435609367c0ae1398ac1b4becfae06d217552c/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=05435609367c0ae1398ac1b4becfae06d217552c", "patch": "@@ -1253,7 +1253,7 @@ package body Lib.Writ is\n       --  for which we have generated code\n \n       for Unit in Units.First .. Last_Unit loop\n-         if Units.Table (Unit).Generate_Code or else Unit = Main_Unit then\n+         if Units.Table (Unit).Generate_Code then\n             if not Has_No_Elaboration_Code (Cunit (Unit)) then\n                Main_Restrictions.Violated (No_Elaboration_Code) := True;\n                exit;"}, {"sha": "0773f36946fd7f22702f759ad8b40796ef0edf8f", "filename": "gcc/ada/par-load.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05435609367c0ae1398ac1b4becfae06d217552c/gcc%2Fada%2Fpar-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05435609367c0ae1398ac1b4becfae06d217552c/gcc%2Fada%2Fpar-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-load.adb?ref=05435609367c0ae1398ac1b4becfae06d217552c", "patch": "@@ -265,6 +265,12 @@ begin\n          --  and this is also where we generate the SCO's for this spec.\n \n          if Cur_Unum = Main_Unit then\n+\n+            --  We generate code for the main unit body, so we need to generate\n+            --  code for its spec too.\n+\n+            Set_Generate_Code (Unum, True);\n+\n             Main_Unit_Entity := Cunit_Entity (Unum);\n \n             if Generate_SCO then"}]}