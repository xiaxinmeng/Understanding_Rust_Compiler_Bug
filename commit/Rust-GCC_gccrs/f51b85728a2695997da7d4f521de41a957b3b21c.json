{"sha": "f51b85728a2695997da7d4f521de41a957b3b21c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjUxYjg1NzI4YTI2OTU5OTdkYTdkNGY1MjFkZTQxYTk1N2IzYjIxYw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-04-15T11:09:33Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-04-15T11:09:33Z"}, "message": "* gcc-interface/trans.c (Case_Statement_to_gnu): Revert latest change.\n\nFrom-SVN: r209415", "tree": {"sha": "449e87e265e1a13925b9c35dbb7c4b522d8ad2f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/449e87e265e1a13925b9c35dbb7c4b522d8ad2f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f51b85728a2695997da7d4f521de41a957b3b21c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f51b85728a2695997da7d4f521de41a957b3b21c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f51b85728a2695997da7d4f521de41a957b3b21c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f51b85728a2695997da7d4f521de41a957b3b21c/comments", "author": null, "committer": null, "parents": [{"sha": "4b3f98299462007a9bb8cdd349c2d59bee0eaf44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b3f98299462007a9bb8cdd349c2d59bee0eaf44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b3f98299462007a9bb8cdd349c2d59bee0eaf44"}], "stats": {"total": 31, "additions": 17, "deletions": 14}, "files": [{"sha": "2e3dc5058f3343813b79b3d5fa37a87cd00dc258", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f51b85728a2695997da7d4f521de41a957b3b21c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f51b85728a2695997da7d4f521de41a957b3b21c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f51b85728a2695997da7d4f521de41a957b3b21c", "patch": "@@ -12,8 +12,6 @@\n \t(lvalue_required_p) <N_Object_Renaming_Declaration>: Always return 1.\n \t(Identifier_to_gnu): Reference the renamed object of constant renaming\n \tpointers directly.\n-\t(Case_Statement_to_gnu): Do not re-fold the bounds of integer types.\n-\tAssert that the case values are constant.\n \t* gcc-interface/utils.c (invalidate_global_renaming_pointers): Do not\n \tinvalidate constant renaming pointers.\n "}, {"sha": "3482d2ce39b8b0e18f61b69090c3a7c6ab980f9e", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f51b85728a2695997da7d4f521de41a957b3b21c/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f51b85728a2695997da7d4f521de41a957b3b21c/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=f51b85728a2695997da7d4f521de41a957b3b21c", "patch": "@@ -2400,11 +2400,9 @@ Case_Statement_to_gnu (Node_Id gnat_node)\n       /* First compile all the different case choices for the current WHEN\n \t alternative.  */\n       for (gnat_choice = First (Discrete_Choices (gnat_when));\n-\t   Present (gnat_choice);\n-\t   gnat_choice = Next (gnat_choice))\n+\t   Present (gnat_choice); gnat_choice = Next (gnat_choice))\n \t{\n \t  tree gnu_low = NULL_TREE, gnu_high = NULL_TREE;\n-\t  tree label = create_artificial_label (input_location);\n \n \t  switch (Nkind (gnat_choice))\n \t    {\n@@ -2428,8 +2426,8 @@ Case_Statement_to_gnu (Node_Id gnat_node)\n \t\t{\n \t\t  tree gnu_type = get_unpadded_type (Entity (gnat_choice));\n \n-\t\t  gnu_low = TYPE_MIN_VALUE (gnu_type);\n-\t\t  gnu_high = TYPE_MAX_VALUE (gnu_type);\n+\t\t  gnu_low = fold (TYPE_MIN_VALUE (gnu_type));\n+\t\t  gnu_high = fold (TYPE_MAX_VALUE (gnu_type));\n \t\t  break;\n \t\t}\n \n@@ -2447,13 +2445,20 @@ Case_Statement_to_gnu (Node_Id gnat_node)\n \t      gcc_unreachable ();\n \t    }\n \n-\t  /* Everything should be folded into constants at this point.  */\n-\t  gcc_assert (!gnu_low  || TREE_CODE (gnu_low)  == INTEGER_CST);\n-\t  gcc_assert (!gnu_high || TREE_CODE (gnu_high) == INTEGER_CST);\n-\n-\t  add_stmt_with_node (build_case_label (gnu_low, gnu_high, label),\n-\t\t\t      gnat_choice);\n-\t  choices_added_p = true;\n+\t  /* If the case value is a subtype that raises Constraint_Error at\n+\t     run time because of a wrong bound, then gnu_low or gnu_high is\n+\t     not translated into an INTEGER_CST.  In such a case, we need\n+\t     to ensure that the when statement is not added in the tree,\n+\t     otherwise it will crash the gimplifier.  */\n+\t  if ((!gnu_low || TREE_CODE (gnu_low) == INTEGER_CST)\n+\t      && (!gnu_high || TREE_CODE (gnu_high) == INTEGER_CST))\n+\t    {\n+\t      add_stmt_with_node (build_case_label\n+\t\t\t\t  (gnu_low, gnu_high,\n+\t\t\t\t   create_artificial_label (input_location)),\n+\t\t\t\t  gnat_choice);\n+\t      choices_added_p = true;\n+\t    }\n \t}\n \n       /* This construct doesn't define a scope so we shouldn't push a binding"}]}