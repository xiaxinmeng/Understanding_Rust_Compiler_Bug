{"sha": "6e395fcb44dafbdbae218d396f32693b886d212a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUzOTVmY2I0NGRhZmJkYmFlMjE4ZDM5NmYzMjY5M2I4ODZkMjEyYQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-09-16T21:36:30Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-09-16T21:36:30Z"}, "message": "Fix documentation for overflow-checking builtins\n\n\t* doc/extend.texi (Integer Overflow Builtins): Fix type of out\n\tparameters for functions taking long long arguments.\n\nFrom-SVN: r240200", "tree": {"sha": "3898102cdde531383f398e03fa63ddfcf085b993", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3898102cdde531383f398e03fa63ddfcf085b993"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e395fcb44dafbdbae218d396f32693b886d212a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e395fcb44dafbdbae218d396f32693b886d212a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e395fcb44dafbdbae218d396f32693b886d212a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e395fcb44dafbdbae218d396f32693b886d212a/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a42726b2e41d0d0d45bdf0c08ef59b9b6fde07d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a42726b2e41d0d0d45bdf0c08ef59b9b6fde07d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a42726b2e41d0d0d45bdf0c08ef59b9b6fde07d"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "7dc82062f74a2b2fa15be9dd76c7cc7a9f2a59f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e395fcb44dafbdbae218d396f32693b886d212a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e395fcb44dafbdbae218d396f32693b886d212a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e395fcb44dafbdbae218d396f32693b886d212a", "patch": "@@ -1,3 +1,8 @@\n+2016-09-16  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/extend.texi (Integer Overflow Builtins): Fix type of out\n+\tparameters for functions taking long long arguments.\n+\n 2016-09-16  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR target/77613"}, {"sha": "299986d86e80298fdb22f93b63d3daf6f8ba4ea2", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e395fcb44dafbdbae218d396f32693b886d212a/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e395fcb44dafbdbae218d396f32693b886d212a/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=6e395fcb44dafbdbae218d396f32693b886d212a", "patch": "@@ -9881,10 +9881,10 @@ together with checking whether the operations overflowed.\n @deftypefn {Built-in Function} bool __builtin_add_overflow (@var{type1} a, @var{type2} b, @var{type3} *res)\n @deftypefnx {Built-in Function} bool __builtin_sadd_overflow (int a, int b, int *res)\n @deftypefnx {Built-in Function} bool __builtin_saddl_overflow (long int a, long int b, long int *res)\n-@deftypefnx {Built-in Function} bool __builtin_saddll_overflow (long long int a, long long int b, long int *res)\n+@deftypefnx {Built-in Function} bool __builtin_saddll_overflow (long long int a, long long int b, long long int *res)\n @deftypefnx {Built-in Function} bool __builtin_uadd_overflow (unsigned int a, unsigned int b, unsigned int *res)\n @deftypefnx {Built-in Function} bool __builtin_uaddl_overflow (unsigned long int a, unsigned long int b, unsigned long int *res)\n-@deftypefnx {Built-in Function} bool __builtin_uaddll_overflow (unsigned long long int a, unsigned long long int b, unsigned long int *res)\n+@deftypefnx {Built-in Function} bool __builtin_uaddll_overflow (unsigned long long int a, unsigned long long int b, unsigned long long int *res)\n \n These built-in functions promote the first two operands into infinite precision signed\n type and perform addition on those promoted operands.  The result is then\n@@ -9907,10 +9907,10 @@ after addition, conditional jump on carry etc.\n @deftypefn {Built-in Function} bool __builtin_sub_overflow (@var{type1} a, @var{type2} b, @var{type3} *res)\n @deftypefnx {Built-in Function} bool __builtin_ssub_overflow (int a, int b, int *res)\n @deftypefnx {Built-in Function} bool __builtin_ssubl_overflow (long int a, long int b, long int *res)\n-@deftypefnx {Built-in Function} bool __builtin_ssubll_overflow (long long int a, long long int b, long int *res)\n+@deftypefnx {Built-in Function} bool __builtin_ssubll_overflow (long long int a, long long int b, long long int *res)\n @deftypefnx {Built-in Function} bool __builtin_usub_overflow (unsigned int a, unsigned int b, unsigned int *res)\n @deftypefnx {Built-in Function} bool __builtin_usubl_overflow (unsigned long int a, unsigned long int b, unsigned long int *res)\n-@deftypefnx {Built-in Function} bool __builtin_usubll_overflow (unsigned long long int a, unsigned long long int b, unsigned long int *res)\n+@deftypefnx {Built-in Function} bool __builtin_usubll_overflow (unsigned long long int a, unsigned long long int b, unsigned long long int *res)\n \n These built-in functions are similar to the add overflow checking built-in\n functions above, except they perform subtraction, subtract the second argument\n@@ -9921,10 +9921,10 @@ from the first one, instead of addition.\n @deftypefn {Built-in Function} bool __builtin_mul_overflow (@var{type1} a, @var{type2} b, @var{type3} *res)\n @deftypefnx {Built-in Function} bool __builtin_smul_overflow (int a, int b, int *res)\n @deftypefnx {Built-in Function} bool __builtin_smull_overflow (long int a, long int b, long int *res)\n-@deftypefnx {Built-in Function} bool __builtin_smulll_overflow (long long int a, long long int b, long int *res)\n+@deftypefnx {Built-in Function} bool __builtin_smulll_overflow (long long int a, long long int b, long long int *res)\n @deftypefnx {Built-in Function} bool __builtin_umul_overflow (unsigned int a, unsigned int b, unsigned int *res)\n @deftypefnx {Built-in Function} bool __builtin_umull_overflow (unsigned long int a, unsigned long int b, unsigned long int *res)\n-@deftypefnx {Built-in Function} bool __builtin_umulll_overflow (unsigned long long int a, unsigned long long int b, unsigned long int *res)\n+@deftypefnx {Built-in Function} bool __builtin_umulll_overflow (unsigned long long int a, unsigned long long int b, unsigned long long int *res)\n \n These built-in functions are similar to the add overflow checking built-in\n functions above, except they perform multiplication, instead of addition."}]}