{"sha": "6aa67e7b9925ea6373f186cae8e7c1461ea54ee3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFhNjdlN2I5OTI1ZWE2MzczZjE4NmNhZThlN2MxNDYxZWE1NGVlMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-09-02T13:49:10Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-09-02T13:49:10Z"}, "message": "bitset: Trivial formatting fixes.\n\n2011-09-02  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/std/bitset: Trivial formatting fixes.\n\nFrom-SVN: r178478", "tree": {"sha": "4c679606b85379c55fe2c91b1b1f18556030500b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c679606b85379c55fe2c91b1b1f18556030500b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6aa67e7b9925ea6373f186cae8e7c1461ea54ee3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aa67e7b9925ea6373f186cae8e7c1461ea54ee3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aa67e7b9925ea6373f186cae8e7c1461ea54ee3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aa67e7b9925ea6373f186cae8e7c1461ea54ee3/comments", "author": null, "committer": null, "parents": [{"sha": "781a318d0d6c7908bb43df29bb1e706489b94863", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/781a318d0d6c7908bb43df29bb1e706489b94863", "html_url": "https://github.com/Rust-GCC/gccrs/commit/781a318d0d6c7908bb43df29bb1e706489b94863"}], "stats": {"total": 36, "additions": 20, "deletions": 16}, "files": [{"sha": "d655cc4dd57830398385ec719c9b550d6d48c56d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa67e7b9925ea6373f186cae8e7c1461ea54ee3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa67e7b9925ea6373f186cae8e7c1461ea54ee3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6aa67e7b9925ea6373f186cae8e7c1461ea54ee3", "patch": "@@ -1,3 +1,7 @@\n+2011-09-02  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/std/bitset: Trivial formatting fixes.\n+\n 2011-09-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \t    Marc Glisse  <marc.glisse@normalesup.org>\n "}, {"sha": "813ed4b2599b09ba5ec5ea1f44e50e9c2fed590a", "filename": "libstdc++-v3/include/std/bitset", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa67e7b9925ea6373f186cae8e7c1461ea54ee3/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa67e7b9925ea6373f186cae8e7c1461ea54ee3/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset?ref=6aa67e7b9925ea6373f186cae8e7c1461ea54ee3", "patch": "@@ -94,19 +94,19 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #endif\n \n       static _GLIBCXX_CONSTEXPR size_t\n-      _S_whichword(size_t __pos ) _GLIBCXX_NOEXCEPT\n+      _S_whichword(size_t __pos) _GLIBCXX_NOEXCEPT\n       { return __pos / _GLIBCXX_BITSET_BITS_PER_WORD; }\n \n       static _GLIBCXX_CONSTEXPR size_t\n-      _S_whichbyte(size_t __pos ) _GLIBCXX_NOEXCEPT\n+      _S_whichbyte(size_t __pos) _GLIBCXX_NOEXCEPT\n       { return (__pos % _GLIBCXX_BITSET_BITS_PER_WORD) / __CHAR_BIT__; }\n \n       static _GLIBCXX_CONSTEXPR size_t\n-      _S_whichbit(size_t __pos ) _GLIBCXX_NOEXCEPT\n+      _S_whichbit(size_t __pos) _GLIBCXX_NOEXCEPT\n       { return __pos % _GLIBCXX_BITSET_BITS_PER_WORD; }\n \n       static _GLIBCXX_CONSTEXPR _WordT\n-      _S_maskbit(size_t __pos ) _GLIBCXX_NOEXCEPT\n+      _S_maskbit(size_t __pos) _GLIBCXX_NOEXCEPT\n       { return (static_cast<_WordT>(1)) << _S_whichbit(__pos); }\n \n       _WordT&\n@@ -389,19 +389,19 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       { }\n \n       static _GLIBCXX_CONSTEXPR size_t\n-      _S_whichword(size_t __pos ) _GLIBCXX_NOEXCEPT\n+      _S_whichword(size_t __pos) _GLIBCXX_NOEXCEPT\n       { return __pos / _GLIBCXX_BITSET_BITS_PER_WORD; }\n \n       static _GLIBCXX_CONSTEXPR size_t\n-      _S_whichbyte(size_t __pos ) _GLIBCXX_NOEXCEPT\n+      _S_whichbyte(size_t __pos) _GLIBCXX_NOEXCEPT\n       { return (__pos % _GLIBCXX_BITSET_BITS_PER_WORD) / __CHAR_BIT__; }\n \n       static _GLIBCXX_CONSTEXPR size_t\n-      _S_whichbit(size_t __pos ) _GLIBCXX_NOEXCEPT\n+      _S_whichbit(size_t __pos) _GLIBCXX_NOEXCEPT\n       {  return __pos % _GLIBCXX_BITSET_BITS_PER_WORD; }\n \n       static _GLIBCXX_CONSTEXPR _WordT\n-      _S_maskbit(size_t __pos ) _GLIBCXX_NOEXCEPT\n+      _S_maskbit(size_t __pos) _GLIBCXX_NOEXCEPT\n       { return (static_cast<_WordT>(1)) << _S_whichbit(__pos); }\n \n       _WordT&\n@@ -533,19 +533,19 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       { }\n \n       static _GLIBCXX_CONSTEXPR size_t\n-      _S_whichword(size_t __pos ) _GLIBCXX_NOEXCEPT\n+      _S_whichword(size_t __pos) _GLIBCXX_NOEXCEPT\n       { return __pos / _GLIBCXX_BITSET_BITS_PER_WORD; }\n \n       static _GLIBCXX_CONSTEXPR size_t\n-      _S_whichbyte(size_t __pos ) _GLIBCXX_NOEXCEPT\n+      _S_whichbyte(size_t __pos) _GLIBCXX_NOEXCEPT\n       { return (__pos % _GLIBCXX_BITSET_BITS_PER_WORD) / __CHAR_BIT__; }\n \n       static _GLIBCXX_CONSTEXPR size_t\n-      _S_whichbit(size_t __pos ) _GLIBCXX_NOEXCEPT\n+      _S_whichbit(size_t __pos) _GLIBCXX_NOEXCEPT\n       {  return __pos % _GLIBCXX_BITSET_BITS_PER_WORD; }\n \n       static _GLIBCXX_CONSTEXPR _WordT\n-      _S_maskbit(size_t __pos ) _GLIBCXX_NOEXCEPT\n+      _S_maskbit(size_t __pos) _GLIBCXX_NOEXCEPT\n       { return (static_cast<_WordT>(1)) << _S_whichbit(__pos); }\n \n       // This would normally give access to the data.  The bounds-checking\n@@ -650,17 +650,17 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     {\n       typedef unsigned long _WordT;\n \n-      static void \n+      static void\n       _S_do_sanitize(_WordT& __val) _GLIBCXX_NOEXCEPT\n       { __val &= ~((~static_cast<_WordT>(0)) << _Extrabits); }\n     };\n \n   template<>\n     struct _Sanitize<0>\n-    { \n+    {\n       typedef unsigned long _WordT;\n \n-      static void \n+      static void\n       _S_do_sanitize(_WordT) _GLIBCXX_NOEXCEPT { } \n     };\n \n@@ -1364,7 +1364,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n        *  @sa  _Find_first\n        */\n       size_t\n-      _Find_next(size_t __prev ) const _GLIBCXX_NOEXCEPT\n+      _Find_next(size_t __prev) const _GLIBCXX_NOEXCEPT\n       { return this->_M_do_find_next(__prev, _Nb); }\n     };\n "}]}