{"sha": "dccae0f42e9e052b7721e805858d10d3ec345685", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNjYWUwZjQyZTllMDUyYjc3MjFlODA1ODU4ZDEwZDNlYzM0NTY4NQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-11-30T22:21:38Z"}, "committer": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-11-30T22:21:38Z"}, "message": "Add function comments for recently added member functions.\n\ngcc/\n\t* symtab.c (set_section_for_node): Add function comment.\n\t(set_section_from_node): Likewise.", "tree": {"sha": "31eca5fdd53b15a8dc3f48ae75eae6437aaf9d38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31eca5fdd53b15a8dc3f48ae75eae6437aaf9d38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dccae0f42e9e052b7721e805858d10d3ec345685", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dccae0f42e9e052b7721e805858d10d3ec345685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dccae0f42e9e052b7721e805858d10d3ec345685", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dccae0f42e9e052b7721e805858d10d3ec345685/comments", "author": null, "committer": null, "parents": [{"sha": "eafb46ce90c23efd22c61d941face060bb9f11f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eafb46ce90c23efd22c61d941face060bb9f11f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eafb46ce90c23efd22c61d941face060bb9f11f3"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "fd7d553c112c8df0edadfcd3b08dddfc93088cd1", "filename": "gcc/symtab.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dccae0f42e9e052b7721e805858d10d3ec345685/gcc%2Fsymtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dccae0f42e9e052b7721e805858d10d3ec345685/gcc%2Fsymtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymtab.c?ref=dccae0f42e9e052b7721e805858d10d3ec345685", "patch": "@@ -1668,6 +1668,10 @@ symtab_node::set_section_for_node (const char *section)\n     }\n }\n \n+/* Set the section of node THIS to be the same as the section\n+   of node OTHER.  Keep reference counts of the sections\n+   up-to-date as needed.  */\n+\n void\n symtab_node::set_section_for_node (const symtab_node &other)\n {\n@@ -1691,6 +1695,9 @@ symtab_node::set_section_from_string (symtab_node *n, void *s)\n   return false;\n }\n \n+/* Set the section of node N to be the same as the section\n+   of node O.  */\n+\n bool\n symtab_node::set_section_from_node (symtab_node *n, void *o)\n {"}]}