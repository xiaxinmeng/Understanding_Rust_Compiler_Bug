{"sha": "f451fe61fcc580b320fcdcdd054bab0bb1cd2dc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ1MWZlNjFmY2M1ODBiMzIwZmNkY2RkMDU0YmFiMGJiMWNkMmRjMw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1991-12-24T03:42:25Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1991-12-24T03:42:25Z"}, "message": "Initial revision\n\nFrom-SVN: r133", "tree": {"sha": "35a9e68a8733485f0ef3e4d3a59bbd2e266084d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35a9e68a8733485f0ef3e4d3a59bbd2e266084d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f451fe61fcc580b320fcdcdd054bab0bb1cd2dc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f451fe61fcc580b320fcdcdd054bab0bb1cd2dc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f451fe61fcc580b320fcdcdd054bab0bb1cd2dc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f451fe61fcc580b320fcdcdd054bab0bb1cd2dc3/comments", "author": null, "committer": null, "parents": [{"sha": "32454fccc17523109290fe79ec2cee9d422d3aa1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32454fccc17523109290fe79ec2cee9d422d3aa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32454fccc17523109290fe79ec2cee9d422d3aa1"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "8abb47e65c9d5b6cda803ce7be3daac971a76fdf", "filename": "gcc/ginclude/va-m88k.h", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f451fe61fcc580b320fcdcdd054bab0bb1cd2dc3/gcc%2Fginclude%2Fva-m88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f451fe61fcc580b320fcdcdd054bab0bb1cd2dc3/gcc%2Fginclude%2Fva-m88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-m88k.h?ref=f451fe61fcc580b320fcdcdd054bab0bb1cd2dc3", "patch": "@@ -0,0 +1,59 @@\n+/* This file contains changes made by Data General, December 1989.  */\n+/* GNU C varargs support for the Motorola 88100  */\n+\n+#ifndef __INT_VARARGS_H\t\t/* Prevent multiple inclusions of this file */\n+#define __INT_VARARGS_H\t\t/* and _int_varargs.h under DG/UX */\n+\n+typedef struct\n+{\n+  int  __va_arg;\t\t/* argument number */\n+  int *__va_stk;\t\t/* start of args passed on stack */\n+  int *__va_reg;\t\t/* start of args passed in regs */\n+} va_list;\n+\n+#else\n+#undef __va_size\n+#undef __va_reg_p\n+#endif /* __INT_VARARGS_H */\n+\n+#ifdef _STDARG_H /* stdarg.h support */\n+\n+#if __GNUC__ > 1 /* GCC 2.0 and beyond */\n+#define va_start(AP,LASTARG) ((AP) = *(va_list *)__builtin_saveregs())\n+#else\n+#define va_start(AP,LASTARG) \\\n+  ( (AP).__va_reg = (int *) __builtin_saveregs2(0), \\\n+    (AP).__va_stk = (int *) __builtin_argptr(), \\\n+    (AP).__va_arg = (int) (__builtin_argsize() + 3) / 4 )\n+#endif\n+\n+#else /* varargs.h support */\n+\n+#if __GNUC__ > 1 /* GCC 2.0 and beyond */\n+#define va_start(AP) ((AP) = *(va_list *)__builtin_saveregs())\n+#else\n+#define va_start(AP) \\\n+  ( (AP).__va_reg = (int *) __builtin_saveregs2(1), \\\n+    (AP).__va_stk = (int *) __builtin_argptr(), \\\n+    (AP).__va_arg = (int) (__builtin_argsize() - 4 + 3) / 4 )\n+#endif\n+#define va_alist __va_1st_arg\n+#define va_dcl register int va_alist;\n+\n+#endif /* _STDARG_H */\n+\n+#define __va_reg_p(TYPE) \\\n+  (__builtin_classify_type(*(TYPE *)0) < 12 \\\n+   ? sizeof(TYPE) <= 8 : sizeof(TYPE) == 4 && __alignof__(TYPE) == 4)\n+\n+#define\t__va_size(TYPE) ((sizeof(TYPE) + 3) >> 2)\n+\n+#define va_arg(AP,TYPE) \\\n+  ( (AP).__va_arg = (((AP).__va_arg + (1 << (__alignof__(TYPE) >> 3)) - 1) \\\n+\t\t     & ~((1 << (__alignof__(TYPE) >> 3)) - 1)) \\\n+    + __va_size(TYPE), \\\n+    *((TYPE *) ((__va_reg_p(TYPE) && (AP).__va_arg < 8 + __va_size(TYPE) \\\n+\t\t ? (AP).__va_reg : (AP).__va_stk) \\\n+\t\t+ ((AP).__va_arg - __va_size(TYPE)))))\n+\n+#define va_end(AP)"}]}