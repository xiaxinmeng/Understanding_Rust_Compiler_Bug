{"sha": "f3f5e3c32e4c12719938848007dea246149b0255", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNmNWUzYzMyZTRjMTI3MTk5Mzg4NDgwMDdkZWEyNDYxNDliMDI1NQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-02-13T21:51:44Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-02-13T21:51:44Z"}, "message": "configure.tgt (target_cpu): Handle sparc and sparc64 & sparcv9.\n\n\t* configure.tgt (target_cpu): Handle sparc and sparc64 & sparcv9.\n\t* config/sparc/cacheline.h: New file.\n\t* config/sparc/target.h: Likewise.\n\t* config/sparc/sjlj.S: Likewise.\n\t* config/linux/sparc/futex_bits.h: Likewise.\n\nFrom-SVN: r184177", "tree": {"sha": "6cd5ac5a27e75203a69a3315e21aea845631ab15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cd5ac5a27e75203a69a3315e21aea845631ab15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3f5e3c32e4c12719938848007dea246149b0255", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3f5e3c32e4c12719938848007dea246149b0255", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3f5e3c32e4c12719938848007dea246149b0255", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3f5e3c32e4c12719938848007dea246149b0255/comments", "author": null, "committer": null, "parents": [{"sha": "255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/255a9a1bb5ed771c8b1f72ffb71bfdf77f2d9fb9"}], "stats": {"total": 283, "additions": 282, "deletions": 1}, "files": [{"sha": "ad8e3d73a8f84279d2b4f5b69684d6add31a4589", "filename": "libitm/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3f5e3c32e4c12719938848007dea246149b0255/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3f5e3c32e4c12719938848007dea246149b0255/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=f3f5e3c32e4c12719938848007dea246149b0255", "patch": "@@ -1,4 +1,12 @@\n-2012-02-11  Eric Botcazou  <ebotcazou@adacore.com>\n+2012-02-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* configure.tgt (target_cpu): Handle sparc and sparc64 & sparcv9.\n+\t* config/sparc/cacheline.h: New file.\n+\t* config/sparc/target.h: Likewise.\n+\t* config/sparc/sjlj.S: Likewise.\n+\t* config/linux/sparc/futex_bits.h: Likewise.\n+\n+2012-02-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* configure.ac (link_itm): Fix comment.\n \t* configure: Regenerate."}, {"sha": "5881de4fceafae7dc5572c0126b892092230eca8", "filename": "libitm/config/linux/sparc/futex_bits.h", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3f5e3c32e4c12719938848007dea246149b0255/libitm%2Fconfig%2Flinux%2Fsparc%2Ffutex_bits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3f5e3c32e4c12719938848007dea246149b0255/libitm%2Fconfig%2Flinux%2Fsparc%2Ffutex_bits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfig%2Flinux%2Fsparc%2Ffutex_bits.h?ref=f3f5e3c32e4c12719938848007dea246149b0255", "patch": "@@ -0,0 +1,62 @@\n+/* Copyright (C) 2012 Free Software Foundation, Inc.\n+\n+   This file is part of the GNU Transactional Memory Library (libitm).\n+\n+   Libitm is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   Libitm is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n+   more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#include <sys/syscall.h>\n+\n+static inline long\n+sys_futex0 (std::atomic<int> *addr, int op, int val)\n+{\n+  register long int g1 __asm__ (\"g1\");\n+  register long int o0 __asm__ (\"o0\");\n+  register long int o1 __asm__ (\"o1\");\n+  register long int o2 __asm__ (\"o2\");\n+  register long int o3 __asm__ (\"o3\");\n+  long res;\n+\n+  g1 = SYS_futex;\n+  o0 = (long) addr;\n+  o1 = op;\n+  o2 = val;\n+  o3 = 0;\n+\n+#ifdef __arch64__\n+  __asm volatile (\"ta 0x6d\"\n+#else\n+  __asm volatile (\"ta 0x10\"\n+#endif\n+\t\t  : \"=r\"(g1), \"=r\"(o0)\n+\t\t  : \"0\"(g1), \"1\"(o0), \"r\"(o1), \"r\"(o2), \"r\"(o3)\n+\t\t  : \"g2\", \"g3\", \"g4\", \"g5\", \"g6\",\n+\t\t    \"f0\", \"f1\", \"f2\", \"f3\", \"f4\", \"f5\", \"f6\", \"f7\",\n+\t\t    \"f8\", \"f9\", \"f10\", \"f11\", \"f12\", \"f13\", \"f14\", \"f15\",\n+\t\t    \"f16\", \"f17\", \"f18\", \"f19\", \"f20\", \"f21\", \"f22\", \"f23\",\n+\t\t    \"f24\", \"f25\", \"f26\", \"f27\", \"f28\", \"f29\", \"f30\", \"f31\",\n+\t\t    \"f32\", \"f34\", \"f36\", \"f38\", \"f40\", \"f42\", \"f44\", \"f46\",\n+\t\t    \"f48\", \"f50\", \"f52\", \"f54\", \"f56\", \"f58\", \"f60\", \"f62\",\n+\t\t    \"cc\", \"memory\");\n+\n+  res = o0;\n+  if (__builtin_expect ((unsigned long) res >= -515UL, 0))\n+    res =- res;\n+  return res;\n+}"}, {"sha": "e5aa773d90c30427e8c9a86b24971c854830e66d", "filename": "libitm/config/sparc/cacheline.h", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3f5e3c32e4c12719938848007dea246149b0255/libitm%2Fconfig%2Fsparc%2Fcacheline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3f5e3c32e4c12719938848007dea246149b0255/libitm%2Fconfig%2Fsparc%2Fcacheline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfig%2Fsparc%2Fcacheline.h?ref=f3f5e3c32e4c12719938848007dea246149b0255", "patch": "@@ -0,0 +1,41 @@\n+/* Copyright (C) 2012 Free Software Foundation, Inc.\n+\n+   This file is part of the GNU Transactional Memory Library (libitm).\n+\n+   Libitm is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   Libitm is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n+   more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef LIBITM_SPARC_CACHELINE_H\n+#define LIBITM_SPARC_CACHELINE_H 1\n+\n+// A cacheline is the smallest unit with which locks are associated.\n+// The current implementation of the _ITM_[RW] barriers assumes that\n+// all data types can fit (aligned) within a cachline, which means\n+// in practice sizeof(complex long double) is the smallest cacheline size.\n+// It ought to be small enough for efficient manipulation of the\n+// modification mask, below.\n+#ifdef __arch64__\n+# define CACHELINE_SIZE 64\n+#else\n+# define CACHELINE_SIZE 32\n+#endif\n+\n+#include \"config/generic/cacheline.h\"\n+\n+#endif // LIBITM_SPARC_CACHELINE_H"}, {"sha": "a42040fe822d6aa698c6e4993c2e1300a2d524da", "filename": "libitm/config/sparc/sjlj.S", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3f5e3c32e4c12719938848007dea246149b0255/libitm%2Fconfig%2Fsparc%2Fsjlj.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3f5e3c32e4c12719938848007dea246149b0255/libitm%2Fconfig%2Fsparc%2Fsjlj.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfig%2Fsparc%2Fsjlj.S?ref=f3f5e3c32e4c12719938848007dea246149b0255", "patch": "@@ -0,0 +1,96 @@\n+/* Copyright (C) 2012 Free Software Foundation, Inc.\n+\n+   This file is part of the GNU Transactional Memory Library (libitm).\n+\n+   Libitm is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   Libitm is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n+   more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#include \"asmcfi.h\"\n+\n+#ifdef __arch64__\n+# define WORD_SIZE 8\n+# define MIN_FRAME_SIZE 176\n+# define STACK_BIAS 2047\n+# define load  ldx\n+# define store stx\n+#else\n+# define WORD_SIZE 4\n+# define MIN_FRAME_SIZE 96\n+# define STACK_BIAS 0\n+# define load  ld\n+# define store st\n+#endif\n+\n+/* Fields of the JmpBuf structure.  */\n+#define JB_CFA 0\n+#define JB_PC  1\n+#define OFFSET(FIELD) ((FIELD) * WORD_SIZE)\n+\n+/* The frame size must be a multiple of the double-word size.  */\n+#define FRAME_SIZE (MIN_FRAME_SIZE + 2 * WORD_SIZE)\n+#define JB_OFFSET  (STACK_BIAS + MIN_FRAME_SIZE)\n+\n+\t.text\n+\t.align 4\n+\t.globl\t_ITM_beginTransaction\n+\t.type\t_ITM_beginTransaction, #function\n+\t.proc\t016\n+_ITM_beginTransaction:\n+\tcfi_startproc\n+\tadd\t%sp, STACK_BIAS, %g1\n+\tsub\t%sp, FRAME_SIZE, %sp\n+\tcfi_def_cfa_offset(STACK_BIAS + FRAME_SIZE)\n+\tstore\t%g1, [%sp + JB_OFFSET + OFFSET (JB_CFA)]\n+\tstore\t%o7, [%sp + JB_OFFSET + OFFSET (JB_PC)]\n+\t/* ??? This triggers an internal error in GDB.  */\n+\tcfi_offset(%o7, -WORD_SIZE)\n+\tcall\tGTM_begin_transaction\n+\t add\t%sp, JB_OFFSET, %o1\n+\tload\t[%sp + JB_OFFSET + OFFSET (JB_PC)], %o7\n+\tjmp\t%o7+8\n+\t add\t%sp, FRAME_SIZE, %sp\n+\tcfi_def_cfa_offset(STACK_BIAS)\n+\tcfi_endproc\n+\t.size _ITM_beginTransaction, . - _ITM_beginTransaction\n+\n+\t.align 4\n+\t.globl\tGTM_longjmp\n+#ifdef HAVE_ATTRIBUTE_VISIBILITY\n+\t.hidden\tGTM_longjmp\n+#endif\n+\t.type\tGTM_longjmp, #function\n+\t.proc\t016\n+GTM_longjmp:\n+\tcfi_startproc\n+\tflushw\n+\tload\t[%o1 + OFFSET (JB_CFA)], %fp\n+\tcfi_def_cfa(%fp, 0)\n+#if STACK_BIAS\n+\tsub\t%fp, STACK_BIAS, %fp\n+\tcfi_def_cfa_offset(STACK_BIAS)\n+#endif\n+\tload\t[%o1 + OFFSET (JB_PC)], %o7\n+\tjmp\t%o7+8\n+\t restore %g0, %o0, %o0\n+\tcfi_endproc\n+\t.size GTM_longjmp, . - GTM_longjmp\n+\n+#ifdef __linux__\n+\t.section .note.GNU-stack, \"\", @progbits\n+#endif"}, {"sha": "8f5b6aa98d0e0fe7cf22f1444bc332c465d23bcc", "filename": "libitm/config/sparc/target.h", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3f5e3c32e4c12719938848007dea246149b0255/libitm%2Fconfig%2Fsparc%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3f5e3c32e4c12719938848007dea246149b0255/libitm%2Fconfig%2Fsparc%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfig%2Fsparc%2Ftarget.h?ref=f3f5e3c32e4c12719938848007dea246149b0255", "patch": "@@ -0,0 +1,46 @@\n+/* Copyright (C) 2012 Free Software Foundation, Inc.\n+\n+   This file is part of the GNU Transactional Memory Library (libitm).\n+\n+   Libitm is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   Libitm is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n+   more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+namespace GTM HIDDEN {\n+\n+typedef struct gtm_jmpbuf\n+{\n+  void *cfa;\n+  unsigned long pc;\n+} gtm_jmpbuf;\n+\n+/* UltraSPARC processors generally use a fixed page size of 8K.  */\n+#define PAGE_SIZE\t8192\n+#define FIXED_PAGE_SIZE\t1\n+\n+/* The size of one line in hardware caches (in bytes).  We use the primary\n+   cache line size documented for the UltraSPARC T1/T2.  */\n+#define HW_CACHELINE_SIZE 16\n+\n+static inline void\n+cpu_relax (void)\n+{\n+  __asm volatile (\"\" : : : \"memory\");\n+}\n+\n+} // namespace GTM"}, {"sha": "b68c86b05f41265a4369c0b678ab65afd08adac1", "filename": "libitm/configure.tgt", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3f5e3c32e4c12719938848007dea246149b0255/libitm%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3f5e3c32e4c12719938848007dea246149b0255/libitm%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure.tgt?ref=f3f5e3c32e4c12719938848007dea246149b0255", "patch": "@@ -66,6 +66,34 @@ case \"${target_cpu}\" in\n \n   sh*)\t\tARCH=sh ;;\n \n+  sparc)\n+\tcase \" ${CC} ${CFLAGS} \" in\n+\t  *\" -m64 \"*)\n+\t    ;;\n+\t  *)\n+\t    if test -z \"$with_cpu\"; then\n+\t      XCFLAGS=\"${XCFLAGS} -mcpu=v9\"\n+\t    fi\n+\tesac\n+\tARCH=sparc\n+\t;;\n+\n+  sparc64|sparcv9)\n+\tcase \" ${CC} ${CFLAGS} \" in\n+\t  *\" -m32 \"*)\n+\t    XCFLAGS=\"${XCFLAGS} -mcpu=v9\"\n+\t    ;;\n+\t  *\" -m64 \"*)\n+\t    ;;\n+\t  *)\n+\t    if test \"x$with_cpu\" = xv8; then\n+\t      XCFLAGS=\"${XCFLAGS} -mcpu=v9\"\n+\t    fi\n+\t    ;;\n+\tesac\n+\tARCH=sparc\n+\t;;\n+\n   x86_64)\n \tcase \" ${CC} ${CFLAGS} \" in\n \t  *\" -m32 \"*)"}]}