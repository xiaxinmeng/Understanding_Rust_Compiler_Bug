{"sha": "55e3bc4cec7595280c4a69b258cafd887b6d9684", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVlM2JjNGNlYzc1OTUyODBjNGE2OWIyNThjYWZkODg3YjZkOTY4NA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-08-04T15:35:21Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-08-04T15:35:21Z"}, "message": "alias.c (rtx_refs_may_alias_p): Do not resort to TBAA if either alias-set is zero.\n\n2010-08-04  Richard Guenther  <rguenther@suse.de>\n\n\t* alias.c (rtx_refs_may_alias_p): Do not resort to TBAA\n\tif either alias-set is zero.\n\nFrom-SVN: r162867", "tree": {"sha": "ecae90fdd0683290850fccab2a2609a6bd01fa2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecae90fdd0683290850fccab2a2609a6bd01fa2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55e3bc4cec7595280c4a69b258cafd887b6d9684", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55e3bc4cec7595280c4a69b258cafd887b6d9684", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55e3bc4cec7595280c4a69b258cafd887b6d9684", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55e3bc4cec7595280c4a69b258cafd887b6d9684/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "079e56d05c8f12be7596ba1d4b59e9e8b30f74a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/079e56d05c8f12be7596ba1d4b59e9e8b30f74a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/079e56d05c8f12be7596ba1d4b59e9e8b30f74a6"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "23f0d8861de0f5477a43d4cc1253b4a8bfd72943", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55e3bc4cec7595280c4a69b258cafd887b6d9684/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55e3bc4cec7595280c4a69b258cafd887b6d9684/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55e3bc4cec7595280c4a69b258cafd887b6d9684", "patch": "@@ -1,3 +1,8 @@\n+2010-08-04  Richard Guenther  <rguenther@suse.de>\n+\n+\t* alias.c (rtx_refs_may_alias_p): Do not resort to TBAA\n+\tif either alias-set is zero.\n+\n 2010-08-04  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-propagate.h (struct prop_value_d, prop_value_t): Move ..."}, {"sha": "f5de4db9d753f19d72aa85b1cbb3fa4f84846243", "filename": "gcc/alias.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55e3bc4cec7595280c4a69b258cafd887b6d9684/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55e3bc4cec7595280c4a69b258cafd887b6d9684/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=55e3bc4cec7595280c4a69b258cafd887b6d9684", "patch": "@@ -354,7 +354,10 @@ rtx_refs_may_alias_p (const_rtx x, const_rtx mem, bool tbaa_p)\n       || !ao_ref_from_mem (&ref2, mem))\n     return true;\n \n-  return refs_may_alias_p_1 (&ref1, &ref2, tbaa_p);\n+  return refs_may_alias_p_1 (&ref1, &ref2,\n+\t\t\t     tbaa_p\n+\t\t\t     && MEM_ALIAS_SET (x) != 0\n+\t\t\t     && MEM_ALIAS_SET (mem) != 0);\n }\n \n /* Returns a pointer to the alias set entry for ALIAS_SET, if there is"}]}