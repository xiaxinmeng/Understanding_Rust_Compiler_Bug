{"sha": "596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk2YjI1ZjlhMTEwYjg4ZDhjN2U1ZmIxZmE2Y2FlNTgxOWIyMTY5MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-26T10:29:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-26T10:29:25Z"}, "message": "[multiple changes]\n\n2015-05-26  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_aggr.adb (Resolve_Array_Aggregate): Defend against\n\tbad bounds.\n\t* debug.adb: Document -gnatd.k.\n\t* erroutc.adb (Set_Msg_Insertion_Line_Number): Implement -gnatd.k.\n\n2015-05-26  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat1drv.adb (Gnat1drv): Provide new arguments for\n\tGet_Target_Parameters.\n\t* restrict.adb (Set_Restriction_No_Specification_Of_Aspect):\n\tnew procedure.\n\t(Set_Restriction_No_Use_Of_Attribute): new procedure.\n\t* restrict.ads (Set_Restriction_No_Specification_Of_Aspect):\n\tnew procedure.\n\t(Set_Restriction_No_Use_Of_Attribute): new procedure.\n\t* s-rident.ads (Integer_Parameter_Restrictions): New subtype.\n\t* targparm.adb (Get_Target_Parameters): Allow new restriction\n\tpragmas No_Specification_Of_Aspect No_Use_Of_Attribute\n\tNo_Use_Of_Pragma.\n\t* targparm.ads: New parameters for Get_Target_Parameters.\n\t* tbuild.adb (Set_NOD): New name for Set_RND.\n\t(Set_NSA): New procedure.\n\t(Set_NUA): New procedure.\n\t(Set_NUP): New procedure.\n\t* tbuild.ads (Make_SC): Minor reformatting.\n\t(Set_NOD): New name for Set_RND.\n\t(Set_NSA, Set_NUA, Set_NUP): New procedure.\n\n2015-05-26  Ed Schonberg  <schonberg@adacore.com>\n\n\t* a-stwise.adb (Find_Token): If source'first is not positive,\n\tan exception must be raised, as specified by RM 2005 A.4.3\n\t(68/1). This must be checked explicitly, given that run-time\n\tfiles are normally compiled without constraint checks.\n\t* a-stzsea.adb (Find_Token): Ditto.\n\n2015-05-26  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.ads sem_util.adb (Is_Current_Instance):  New predicate\n\tto fully implement RM 8.6 (17/3). which earlier only applied\n\tto synchronized types. Used to preanalyze aspects that include\n\tcurrent instances of types, such as Predicate and Invariant.\n\t* sem_res.adb (Resolve_Entity_Name): Use Is_Current_Instance.\n\t* sem_ch13.adb (Add_Predicates): In ASIS mode, preserve original\n\texpression of aspect and analyze it to provide proper type\n\tinformation.\n\n2015-05-26  Robert Dewar  <dewar@adacore.com>\n\n\t* rtsfind.ads: Add entries for RE_Exn[_Long]_Float.\n\t* s-exnllf.adb (Exn_Float): New function.\n\t(Exn_Long_Float): New function.\n\t(Exn_Long_Long_Float): Rewritten interface.\n\t(Exp): New name for what used to be Exn_Long_Long_Float.\n\t* s-exnllf.ads (Exn_Float): New function.\n\t(Exn_Long_Float): New function.\n\n2015-05-26  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb (Find_Selected_Component): Do not emit an error\n\ton a selected component when the prefix is a type name that is\n\ta Current_Instance.\n\t* einfo.ads: Minor grammar fix.\n\n2015-05-26  Doug Rupp  <rupp@adacore.com>\n\n\t* init.c [vxworks] (sysLib.h): Only for x86.\n\nFrom-SVN: r223678", "tree": {"sha": "5089f66e930abb4b53e1d7f2bee15a14da92a0ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5089f66e930abb4b53e1d7f2bee15a14da92a0ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "html_url": "https://github.com/Rust-GCC/gccrs/commit/596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/comments", "author": null, "committer": null, "parents": [{"sha": "1b961de9db0b7ffb8d7f4614ddf61faf31a544a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b961de9db0b7ffb8d7f4614ddf61faf31a544a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b961de9db0b7ffb8d7f4614ddf61faf31a544a5"}], "stats": {"total": 699, "additions": 628, "deletions": 71}, "files": [{"sha": "95b7d02d131b2f8b4de5ff882945cb8a297eaa2a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -1,3 +1,73 @@\n+2015-05-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Array_Aggregate): Defend against\n+\tbad bounds.\n+\t* debug.adb: Document -gnatd.k.\n+\t* erroutc.adb (Set_Msg_Insertion_Line_Number): Implement -gnatd.k.\n+\n+2015-05-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat1drv.adb (Gnat1drv): Provide new arguments for\n+\tGet_Target_Parameters.\n+\t* restrict.adb (Set_Restriction_No_Specification_Of_Aspect):\n+\tnew procedure.\n+\t(Set_Restriction_No_Use_Of_Attribute): new procedure.\n+\t* restrict.ads (Set_Restriction_No_Specification_Of_Aspect):\n+\tnew procedure.\n+\t(Set_Restriction_No_Use_Of_Attribute): new procedure.\n+\t* s-rident.ads (Integer_Parameter_Restrictions): New subtype.\n+\t* targparm.adb (Get_Target_Parameters): Allow new restriction\n+\tpragmas No_Specification_Of_Aspect No_Use_Of_Attribute\n+\tNo_Use_Of_Pragma.\n+\t* targparm.ads: New parameters for Get_Target_Parameters.\n+\t* tbuild.adb (Set_NOD): New name for Set_RND.\n+\t(Set_NSA): New procedure.\n+\t(Set_NUA): New procedure.\n+\t(Set_NUP): New procedure.\n+\t* tbuild.ads (Make_SC): Minor reformatting.\n+\t(Set_NOD): New name for Set_RND.\n+\t(Set_NSA, Set_NUA, Set_NUP): New procedure.\n+\n+2015-05-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* a-stwise.adb (Find_Token): If source'first is not positive,\n+\tan exception must be raised, as specified by RM 2005 A.4.3\n+\t(68/1). This must be checked explicitly, given that run-time\n+\tfiles are normally compiled without constraint checks.\n+\t* a-stzsea.adb (Find_Token): Ditto.\n+\n+2015-05-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.ads sem_util.adb (Is_Current_Instance):  New predicate\n+\tto fully implement RM 8.6 (17/3). which earlier only applied\n+\tto synchronized types. Used to preanalyze aspects that include\n+\tcurrent instances of types, such as Predicate and Invariant.\n+\t* sem_res.adb (Resolve_Entity_Name): Use Is_Current_Instance.\n+\t* sem_ch13.adb (Add_Predicates): In ASIS mode, preserve original\n+\texpression of aspect and analyze it to provide proper type\n+\tinformation.\n+\n+2015-05-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* rtsfind.ads: Add entries for RE_Exn[_Long]_Float.\n+\t* s-exnllf.adb (Exn_Float): New function.\n+\t(Exn_Long_Float): New function.\n+\t(Exn_Long_Long_Float): Rewritten interface.\n+\t(Exp): New name for what used to be Exn_Long_Long_Float.\n+\t* s-exnllf.ads (Exn_Float): New function.\n+\t(Exn_Long_Float): New function.\n+\n+2015-05-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Find_Selected_Component): Do not emit an error\n+\ton a selected component when the prefix is a type name that is\n+\ta Current_Instance.\n+\t* einfo.ads: Minor grammar fix.\n+\n+2015-05-26  Doug Rupp  <rupp@adacore.com>\n+\n+\t* init.c [vxworks] (sysLib.h): Only for x86.\n+\n 2015-05-26  Doug Rupp  <rupp@adacore.com>\n \n \t* init-vxsim.c (CPU): define as __VXSIM_CPU__"}, {"sha": "09ac7830c8a2f7d40c47306440bd3521b1f9d861", "filename": "gcc/ada/a-stwise.adb", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fa-stwise.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fa-stwise.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwise.adb?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -252,8 +252,18 @@ package body Ada.Strings.Wide_Search is\n \n       --  Here if no token found\n \n-      First := Source'First;\n-      Last  := 0;\n+      --  RM 2005 A.4.3 (68/1) specifies that an exception must be raised if\n+      --  Source'First is not positive and is assigned to First. Formulation\n+      --  is slightly different in RM 2012, but the intent seems similar, so\n+      --  we check explicitly for that condition.\n+\n+      if Source'First not in Positive then\n+         raise Constraint_Error;\n+\n+      else\n+         First := Source'First;\n+         Last  := 0;\n+      end if;\n    end Find_Token;\n \n    -----------"}, {"sha": "7b4f63507fdca35ba13fdd0fe0f9c4ce4af4dd5e", "filename": "gcc/ada/a-stzsea.adb", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fa-stzsea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fa-stzsea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzsea.adb?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -253,8 +253,18 @@ package body Ada.Strings.Wide_Wide_Search is\n \n       --  Here if no token found\n \n-      First := Source'First;\n-      Last  := 0;\n+      --  RM 2005 A.4.3 (68/1) specifies that an exception must be raised if\n+      --  Source'First is not positive and is assigned to First. Formulation\n+      --  is slightly different in RM 2012, but the intent seems similar, so\n+      --  we check explicitly for that condition.\n+\n+      if Source'First not in Positive then\n+         raise Constraint_Error;\n+\n+      else\n+         First := Source'First;\n+         Last  := 0;\n+      end if;\n    end Find_Token;\n \n    -----------"}, {"sha": "87e0de74dc675fa316295e17804ae3906e8746d3", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -101,7 +101,7 @@ package body Debug is\n    --  d.h  Minimize the creation of public internal symbols for concatenation\n    --  d.i  Ignore Warnings pragmas\n    --  d.j  Generate listing of frontend inlined calls\n-   --  d.k\n+   --  d.k  Kill referenced run-time library unit line numbers\n    --  d.l  Use Ada 95 semantics for limited function returns\n    --  d.m  For -gnatl, print full source only for main unit\n    --  d.n  Print source file names\n@@ -534,6 +534,9 @@ package body Debug is\n    --       be used in particular to disable Warnings (Off) to check if any of\n    --       these statements are inappropriate.\n \n+   --  d.k  If an error message contains a reference to a location in an\n+   --       internal unit, then suppress the line number in this reference.\n+\n    --  d.j  Generate listing of frontend inlined calls and inline calls passed\n    --       to the backend. This is useful to locate skipped calls that must be\n    --       inlined by the frontend."}, {"sha": "845a83d392ef656f28038d20a6a1871d958715d3", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -3952,7 +3952,7 @@ package Einfo is\n --       end and zero is a legitimate value for a type with one value.\n \n --    Root_Type (synthesized)\n---       Applies to all type entities. For class-wide types, return the root\n+--       Applies to all type entities. For class-wide types, returns the root\n --       type of the class covered by the CW type, otherwise returns the\n --       ultimate derivation ancestor of the given type. This function\n --       preserves the view, i.e. the Root_Type of a partial view is the"}, {"sha": "d74a3ee9834da2f9ad7184e68547be913d6b324d", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -34,6 +34,7 @@ with Casing;   use Casing;\n with Csets;    use Csets;\n with Debug;    use Debug;\n with Err_Vars; use Err_Vars;\n+with Fname;    use Fname;\n with Namet;    use Namet;\n with Opt;      use Opt;\n with Output;   use Output;\n@@ -1035,6 +1036,8 @@ package body Erroutc is\n    procedure Set_Msg_Insertion_Line_Number (Loc, Flag : Source_Ptr) is\n       Sindex_Loc  : Source_File_Index;\n       Sindex_Flag : Source_File_Index;\n+      Fname       : File_Name_Type;\n+      Int_File    : Boolean;\n \n       procedure Set_At;\n       --  Outputs \"at \" unless last characters in buffer are \" from \". Certain\n@@ -1083,22 +1086,25 @@ package body Erroutc is\n \n          if Full_File_Name (Sindex_Loc) /= Full_File_Name (Sindex_Flag) then\n             Set_At;\n-            Get_Name_String\n-              (Reference_Name (Get_Source_File_Index (Loc)));\n+            Fname := Reference_Name (Get_Source_File_Index (Loc));\n+            Int_File := Is_Internal_File_Name (Fname);\n+            Get_Name_String (Fname);\n             Set_Msg_Name_Buffer;\n-            Set_Msg_Char (':');\n+\n+            if not (Int_File and Debug_Flag_Dot_K) then\n+               Set_Msg_Char (':');\n+               Set_Msg_Int (Int (Get_Logical_Line_Number (Loc)));\n+            end if;\n \n          --  If in current file, add text \"at line \"\n \n          else\n             Set_At;\n             Set_Msg_Str (\"line \");\n+            Int_File := False;\n+            Set_Msg_Int (Int (Get_Logical_Line_Number (Loc)));\n          end if;\n \n-         --  Output line number for reference\n-\n-         Set_Msg_Int (Int (Get_Logical_Line_Number (Loc)));\n-\n          --  Deal with the instantiation case. We may have a reference to,\n          --  e.g. a type, that is declared within a generic template, and\n          --  what we are really referring to is the occurrence in an instance."}, {"sha": "709cf2d9412198dd6f8bfd3c7a8d87f39c8445f5", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -954,13 +954,20 @@ begin\n                System_Source_File_Index := S;\n             end if;\n \n+            --  Call to get target parameters. Note that the actual interface\n+            --  routines in Tbuild here. They can't be in this procedure\n+            --  because of accessibility issues.\n+\n             Targparm.Get_Target_Parameters\n               (System_Text  => Source_Text  (S),\n                Source_First => Source_First (S),\n                Source_Last  => Source_Last  (S),\n                Make_Id      => Tbuild.Make_Id'Access,\n                Make_SC      => Tbuild.Make_SC'Access,\n-               Set_RND      => Tbuild.Set_RND'Access);\n+               Set_NOD      => Tbuild.Set_NOD'Access,\n+               Set_NSA      => Tbuild.Set_NSA'Access,\n+               Set_NUA      => Tbuild.Set_NUA'Access,\n+               Set_NUP      => Tbuild.Set_NUP'Access);\n \n             --  Acquire configuration pragma information from Targparm\n "}, {"sha": "5f05258377c650bdf0e42fbe2de198558d014377", "filename": "gcc/ada/init.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -1694,15 +1694,17 @@ __gnat_install_handler ()\n   __gnat_handler_installed = 1;\n }\n \n-/*******************/\n-/* VxWorks Section */\n-/*******************/\n+/*************************************/\n+/* VxWorks Section (including Vx653) */\n+/*************************************/\n \n #elif defined(__vxworks)\n \n #include <signal.h>\n #include <taskLib.h>\n+#if defined (i386) || defined (__i386__)\n #include <sysLib.h>\n+#endif\n \n #ifndef __RTP__\n #include <intLib.h>"}, {"sha": "2dae272ebbcfb700f53686170486fcfb5c003ba3", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -23,7 +23,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Aspects;  use Aspects;\n with Atree;    use Atree;\n with Casing;   use Casing;\n with Einfo;    use Einfo;\n@@ -35,7 +34,6 @@ with Lib;      use Lib;\n with Opt;      use Opt;\n with Sinfo;    use Sinfo;\n with Sinput;   use Sinput;\n-with Snames;   use Snames;\n with Stand;    use Stand;\n with Uname;    use Uname;\n \n@@ -111,6 +109,8 @@ package body Restrict is\n \n    No_Use_Of_Pragma : array (Pragma_Id) of Source_Ptr :=\n                         (others => No_Location);\n+   --  Source location of pragma No_Use_Of_Pragma for given pragma, a value\n+   --  of Sysstem_Location indicates occurrence in system.ads.\n \n    No_Use_Of_Pragma_Warning : array (Pragma_Id) of Boolean :=\n                                 (others => False);\n@@ -1569,6 +1569,13 @@ package body Restrict is\n       No_Specification_Of_Aspect_Set := True;\n    end Set_Restriction_No_Specification_Of_Aspect;\n \n+   procedure Set_Restriction_No_Specification_Of_Aspect (A_Id : Aspect_Id) is\n+   begin\n+      No_Specification_Of_Aspects (A_Id) := System_Location;\n+      No_Specification_Of_Aspect_Warning (A_Id) := False;\n+      No_Specification_Of_Aspect_Set := True;\n+   end Set_Restriction_No_Specification_Of_Aspect;\n+\n    -----------------------------------------\n    -- Set_Restriction_No_Use_Of_Attribute --\n    -----------------------------------------\n@@ -1588,6 +1595,13 @@ package body Restrict is\n       end if;\n    end Set_Restriction_No_Use_Of_Attribute;\n \n+   procedure Set_Restriction_No_Use_Of_Attribute (A_Id : Attribute_Id) is\n+   begin\n+      No_Use_Of_Attribute_Set := True;\n+      No_Use_Of_Attribute (A_Id) := System_Location;\n+      No_Use_Of_Attribute_Warning (A_Id) := False;\n+   end Set_Restriction_No_Use_Of_Attribute;\n+\n    --------------------------------------\n    -- Set_Restriction_No_Use_Of_Pragma --\n    --------------------------------------\n@@ -1607,6 +1621,13 @@ package body Restrict is\n       end if;\n    end Set_Restriction_No_Use_Of_Pragma;\n \n+   procedure Set_Restriction_No_Use_Of_Pragma (A_Id : Pragma_Id) is\n+   begin\n+      No_Use_Of_Pragma_Set := True;\n+      No_Use_Of_Pragma_Warning (A_Id) := False;\n+      No_Use_Of_Pragma (A_Id) := System_Location;\n+   end Set_Restriction_No_Use_Of_Pragma;\n+\n    --------------------------------\n    -- Check_SPARK_05_Restriction --\n    --------------------------------"}, {"sha": "4871b6ffe8463e6a0373a652d6fb42c0bf805473", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,11 +25,13 @@\n \n --  This package deals with the implementation of the Restrictions pragma\n \n-with Namet;  use Namet;\n-with Rident; use Rident;\n+with Aspects; use Aspects;\n+with Namet;   use Namet;\n+with Rident;  use Rident;\n+with Snames;  use Snames;\n with Table;\n-with Types;  use Types;\n-with Uintp;  use Uintp;\n+with Types;   use Types;\n+with Uintp;   use Uintp;\n \n package Restrict is\n \n@@ -463,13 +465,19 @@ package Restrict is\n    --  case of a Restriction_Warnings pragma specifying this restriction and\n    --  False for a Restrictions pragma specifying this restriction.\n \n+   procedure Set_Restriction_No_Specification_Of_Aspect (A_Id : Aspect_Id);\n+   --  Version used by Get_Target_Parameters (via Tbuild)\n+\n    procedure Set_Restriction_No_Use_Of_Attribute\n      (N       : Node_Id;\n       Warning : Boolean);\n    --  N is the node id for the identifier in a pragma Restrictions for\n    --  No_Use_Of_Attribute. Caller has verified that this is a valid attribute\n    --  designator.\n \n+   procedure Set_Restriction_No_Use_Of_Attribute (A_Id : Attribute_Id);\n+   --  Version used by Get_Target_Parameters (via Tbuild)\n+\n    procedure Set_Restriction_No_Use_Of_Entity\n      (Entity  : Node_Id;\n       Warn    : Boolean;\n@@ -488,6 +496,9 @@ package Restrict is\n    --  N is the node id for the identifier in a pragma Restrictions for\n    --  No_Use_Of_Pragma. Caller has verified that this is a valid pragma id.\n \n+   procedure Set_Restriction_No_Use_Of_Pragma (A_Id : Pragma_Id);\n+   --  Version used in call from Get_Target_Parameters (via Tbuild).\n+\n    function Tasking_Allowed return Boolean;\n    pragma Inline (Tasking_Allowed);\n    --  Tests if tasking operations are allowed by the current restrictions"}, {"sha": "bc4674a605225e498a1bbb6a003c1031c9315769", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -863,6 +863,8 @@ package Rtsfind is\n \n      RE_Exn_Integer,                     -- System.Exn_Int\n \n+     RE_Exn_Float,                       -- System.Exn_LLF\n+     RE_Exn_Long_Float,                  -- System.Exn_LLF\n      RE_Exn_Long_Long_Float,             -- System.Exn_LLF\n \n      RE_Exn_Long_Long_Integer,           -- System.Exn_LLI\n@@ -2098,6 +2100,8 @@ package Rtsfind is\n \n      RE_Exn_Integer                      => System_Exn_Int,\n \n+     RE_Exn_Float                        => System_Exn_LLF,\n+     RE_Exn_Long_Float                   => System_Exn_LLF,\n      RE_Exn_Long_Long_Float              => System_Exn_LLF,\n \n      RE_Exn_Long_Long_Integer            => System_Exn_LLI,"}, {"sha": "a4386e813f0bb078743dae4503f2492ecb9990c7", "filename": "gcc/ada/s-exnllf.adb", "status": "modified", "additions": 97, "deletions": 2, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fs-exnllf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fs-exnllf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-exnllf.adb?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,15 +29,110 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  Note: the reason for treating exponents in the range 0 .. 4 specially is\n+--  to ensure identical results to the static inline expansion in the case of\n+--  a compile time known exponent in this range. The use of Float'Machine and\n+--  Long_Float'Machine is to avoid unwanted extra precision in the results.\n+\n package body System.Exn_LLF is\n \n+   function Exp\n+     (Left  : Long_Long_Float;\n+      Right : Integer) return Long_Long_Float;\n+   --  Common routine used if Right not in 0 .. 4\n+\n+   ---------------\n+   -- Exn_Float --\n+   ---------------\n+\n+   function Exn_Float\n+     (Left  : Float;\n+      Right : Integer) return Float\n+   is\n+      Temp : Float;\n+   begin\n+      case Right is\n+         when 0 =>\n+            return 1.0;\n+         when 1 =>\n+            return Left;\n+         when 2 =>\n+            return Float'Machine (Left * Left);\n+         when 3 =>\n+            return Float'Machine (Left * Left * Left);\n+         when 4 =>\n+            Temp := Float'Machine (Left * Left);\n+            return Float'Machine (Temp * Temp);\n+         when others =>\n+            return\n+              Float'Machine\n+                (Float (Exp (Long_Long_Float (Left), Right)));\n+      end case;\n+   end Exn_Float;\n+\n+   --------------------\n+   -- Exn_Long_Float --\n+   --------------------\n+\n+   function Exn_Long_Float\n+     (Left  : Long_Float;\n+      Right : Integer) return Long_Float\n+   is\n+      Temp : Long_Float;\n+   begin\n+      case Right is\n+         when 0 =>\n+            return 1.0;\n+         when 1 =>\n+            return Left;\n+         when 2 =>\n+            return Long_Float'Machine (Left * Left);\n+         when 3 =>\n+            return Long_Float'Machine (Left * Left * Left);\n+         when 4 =>\n+            Temp := Long_Float'Machine (Left * Left);\n+            return Long_Float'Machine (Temp * Temp);\n+         when others =>\n+            return\n+              Long_Float'Machine\n+                (Long_Float (Exp (Long_Long_Float (Left), Right)));\n+      end case;\n+   end Exn_Long_Float;\n+\n    -------------------------\n    -- Exn_Long_Long_Float --\n    -------------------------\n \n    function Exn_Long_Long_Float\n      (Left  : Long_Long_Float;\n       Right : Integer) return Long_Long_Float\n+   is\n+      Temp : Long_Long_Float;\n+   begin\n+      case Right is\n+         when 0 =>\n+            return 1.0;\n+         when 1 =>\n+            return Left;\n+         when 2 =>\n+            return Left * Left;\n+         when 3 =>\n+            return Left * Left * Left;\n+         when 4 =>\n+            Temp := Left * Left;\n+            return Temp * Temp;\n+         when others =>\n+            return Exp (Left, Right);\n+      end case;\n+   end Exn_Long_Long_Float;\n+\n+   ---------\n+   -- Exp --\n+   ---------\n+\n+   function Exp\n+     (Left  : Long_Long_Float;\n+      Right : Integer) return Long_Long_Float\n    is\n       Result : Long_Long_Float := 1.0;\n       Factor : Long_Long_Float := Left;\n@@ -91,6 +186,6 @@ package body System.Exn_LLF is\n             return 1.0 / Result;\n          end;\n       end if;\n-   end Exn_Long_Long_Float;\n+   end Exp;\n \n end System.Exn_LLF;"}, {"sha": "dcbbae56f79265580f5fdfe9061ffe07ce450910", "filename": "gcc/ada/s-exnllf.ads", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fs-exnllf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fs-exnllf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-exnllf.ads?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,11 +29,19 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Long_Long_Float exponentiation (checks off)\n+--  [Long_[Long_]]Float exponentiation (checks off)\n \n package System.Exn_LLF is\n    pragma Pure;\n \n+   function Exn_Float\n+     (Left  : Float;\n+      Right : Integer) return Float;\n+\n+   function Exn_Long_Float\n+     (Left  : Long_Float;\n+      Right : Integer) return Long_Float;\n+\n    function Exn_Long_Long_Float\n      (Left  : Long_Long_Float;\n       Right : Integer) return Long_Long_Float;"}, {"sha": "7b18d2f40892458b8a2d3cf0457b2fc0326c968a", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -255,6 +255,11 @@ package System.Rident is\n        No_Specification_Of_Aspect .. Max_Storage_At_Blocking;\n    --  All restrictions that take a parameter\n \n+   subtype Integer_Parameter_Restrictions is\n+     Restriction_Id range\n+       Max_Protected_Entries .. Max_Storage_At_Blocking;\n+   --  All restrictions taking an integer parameter\n+\n    subtype Checked_Parameter_Restrictions is\n      All_Parameter_Restrictions range\n        Max_Protected_Entries .. Max_Entry_Queue_Length;"}, {"sha": "5300d3ab87fb939cc48dc7937a40feb359e15cd5", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -2304,6 +2304,16 @@ package body Sem_Aggr is\n             if Others_Present then\n                Get_Index_Bounds (Index_Constr, Aggr_Low, Aggr_High);\n \n+               --  Abandon processing if either bound is already signalled as\n+               --  an error (prevents junk cascaded messages and blow ups).\n+\n+               if Nkind (Aggr_Low) = N_Error\n+                    or else\n+                  Nkind (Aggr_High) = N_Error\n+               then\n+                  return False;\n+               end if;\n+\n             --  No others clause present\n \n             else\n@@ -2314,6 +2324,16 @@ package body Sem_Aggr is\n                if Others_Allowed then\n                   Get_Index_Bounds (Index_Constr, Aggr_Low, Aggr_High);\n \n+                  --  Abandon processing if either bound is already signalled\n+                  --  as an error (stop junk cascaded messages and blow ups).\n+\n+                  if Nkind (Aggr_Low) = N_Error\n+                       or else\n+                     Nkind (Aggr_High) = N_Error\n+                  then\n+                     return False;\n+                  end if;\n+\n                   --  If others allowed, and no others present, then the array\n                   --  should cover all index values. If it does not, we will\n                   --  get a length check warning, but there is two cases where"}, {"sha": "cc0248aa469420d33ee661d15f225911a6c0ec6a", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -8437,17 +8437,20 @@ package body Sem_Ch13 is\n \n       begin\n          Ritem := First_Rep_Item (Typ);\n+\n          while Present (Ritem) loop\n             if Nkind (Ritem) = N_Pragma\n               and then Pragma_Name (Ritem) = Name_Predicate\n             then\n-               --  Acquire arguments\n+               --  Acquire arguments. The expression itself is copied for use\n+               --  in the predicate function, to preserve the orignal version\n+               --  for ASIS use.\n \n                Arg1 := First (Pragma_Argument_Associations (Ritem));\n                Arg2 := Next (Arg1);\n \n                Arg1 := Get_Pragma_Arg (Arg1);\n-               Arg2 := Get_Pragma_Arg (Arg2);\n+               Arg2 := New_Copy_Tree (Get_Pragma_Arg (Arg2));\n \n                --  See if this predicate pragma is for the current type or for\n                --  its full view. A predicate on a private completion is placed\n@@ -8472,9 +8475,20 @@ package body Sem_Ch13 is\n \n                   if From_Aspect_Specification (Ritem) then\n                      declare\n-                        Aitem : Node_Id;\n+                        Aitem     : Node_Id;\n+                        Orig_Expr : constant Node_Id :=\n+                           Expression (Corresponding_Aspect (Ritem));\n \n                      begin\n+\n+                        --  For ASIS use, perform semantic analysis of the\n+                        --  original predicate expression, which is otherwise\n+                        --  not utilized.\n+\n+                        if ASIS_Mode then\n+                           Preanalyze_And_Resolve (Orig_Expr);\n+                        end if;\n+\n                         --  Loop to find corresponding aspect, note that this\n                         --  must be present given the pragma is marked delayed.\n "}, {"sha": "d353bc9018a523357db46ff0f81b3d9c2ace3397", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -6950,6 +6950,13 @@ package body Sem_Ch8 is\n             if P_Name = Any_Id  then\n                null;\n \n+            --  It is not an error if the prefix is the current instance of\n+            --  type name, e.g. the expression of a type aspect, when it is\n+            --  analyzed for ASIS use.\n+\n+            elsif Is_Entity_Name (P) and then Is_Current_Instance (P) then\n+               null;\n+\n             elsif Ekind (P_Name) = E_Void then\n                Premature_Usage (P);\n "}, {"sha": "0e92867dcc68c97e49bf5042c5668c890ffad981", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -6991,18 +6991,12 @@ package body Sem_Res is\n          Set_Entity_With_Checks (N, E);\n          Eval_Entity_Name (N);\n \n-      --  Case of subtype name appearing as an operand in expression\n+      --  Case of (sub)type name appearing in a context where an expression\n+      --  is expected. This is legal if occurrence is a current instance.\n+      --  See RM 8.6 (17/3).\n \n       elsif Is_Type (E) then\n-\n-         --  Allow use of subtype if it is a concurrent type where we are\n-         --  currently inside the body. This will eventually be expanded into a\n-         --  call to Self (for tasks) or _object (for protected objects). Any\n-         --  other use of a subtype is invalid.\n-\n-         if Is_Concurrent_Type (E)\n-           and then In_Open_Scopes (E)\n-         then\n+         if Is_Current_Instance (N) then\n             null;\n \n          --  Any other use is an error"}, {"sha": "0a5c8a4b3c0de7c4331dfd67346e0f92232044be", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -10951,6 +10951,46 @@ package body Sem_Util is\n         and then Is_Imported (Entity (Name (N)));\n    end Is_CPP_Constructor_Call;\n \n+   -------------------------\n+   -- Is_Current_Instance --\n+   -------------------------\n+\n+   function Is_Current_Instance (N : Node_Id) return Boolean is\n+      Typ : constant Entity_Id := Entity (N);\n+      P   : Node_Id;\n+\n+   begin\n+      --  Simplest case : entity is a concurrent type and  we are currently\n+      --  inside the body. This will eventually be expanded into a\n+      --  call to Self (for tasks) or _object (for protected objects).\n+\n+      if Is_Concurrent_Type (Typ) and then In_Open_Scopes (Typ) then\n+         return True;\n+\n+      else\n+         --  Check whether the context is a (sub)type declaration for the\n+         --  type entity.\n+\n+         P := Parent (N);\n+         while Present (P) loop\n+            if Nkind_In (P, N_Full_Type_Declaration,\n+                            N_Private_Type_Declaration,\n+                            N_Subtype_Declaration)\n+              and then Comes_From_Source (P)\n+              and then Defining_Entity (P) = Typ\n+            then\n+               return True;\n+            end if;\n+\n+            P := Parent (P);\n+         end loop;\n+      end if;\n+\n+      --  In any other context this is not a current occurence\n+\n+      return False;\n+   end Is_Current_Instance;\n+\n    --------------------\n    -- Is_Declaration --\n    --------------------"}, {"sha": "02623722f27d7ecf97b0bd9dd82754e46d6b9462", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -1237,6 +1237,12 @@ package Sem_Util is\n    --  First determine whether type T is an interface and then check whether\n    --  it is of protected, synchronized or task kind.\n \n+   function Is_Current_Instance (N : Node_Id) return Boolean;\n+   --  Predicate is true if N legally denotes a type name within its own\n+   --  declaration. Prior to Ada 2012 this covered only synchronized type\n+   --  declarations. In Ada2012 it also covers type and subtype declarations\n+   --  with aspects: Invariant, Predicate, and Default_Initial_Condition.\n+\n    function Is_Declaration (N : Node_Id) return Boolean;\n    --  Determine whether arbitrary node N denotes a declaration\n "}, {"sha": "562eb74e8c3ec95643829805ffee546e720efe3f", "filename": "gcc/ada/targparm.adb", "status": "modified", "additions": 161, "deletions": 9, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Ftargparm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Ftargparm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.adb?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1999-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -154,7 +154,10 @@ package body Targparm is\n    procedure Get_Target_Parameters\n      (Make_Id : Make_Id_Type := null;\n       Make_SC : Make_SC_Type := null;\n-      Set_RND : Set_RND_Type := null)\n+      Set_NOD : Set_NOD_Type := null;\n+      Set_NSA : Set_NSA_Type := null;\n+      Set_NUA : Set_NUA_Type := null;\n+      Set_NUP : Set_NUP_Type := null)\n    is\n       Text : Source_Buffer_Ptr;\n       Hi   : Source_Ptr;\n@@ -181,7 +184,10 @@ package body Targparm is\n          Source_Last  => Hi,\n          Make_Id      => Make_Id,\n          Make_SC      => Make_SC,\n-         Set_RND      => Set_RND);\n+         Set_NOD      => Set_NOD,\n+         Set_NSA      => Set_NSA,\n+         Set_NUA      => Set_NUA,\n+         Set_NUP      => Set_NUP);\n    end Get_Target_Parameters;\n \n    --  Version where caller supplies system.ads text\n@@ -192,7 +198,10 @@ package body Targparm is\n       Source_Last  : Source_Ptr;\n       Make_Id      : Make_Id_Type := null;\n       Make_SC      : Make_SC_Type := null;\n-      Set_RND      : Set_RND_Type := null)\n+      Set_NOD      : Set_NOD_Type := null;\n+      Set_NSA      : Set_NSA_Type := null;\n+      Set_NUA      : Set_NUA_Type := null;\n+      Set_NUP      : Set_NUP_Type := null)\n    is\n       P : Source_Ptr;\n       --  Scans source buffer containing source of system.ads\n@@ -203,6 +212,48 @@ package body Targparm is\n       Result : Boolean;\n       --  Records boolean from system line\n \n+      OK : Boolean;\n+      --  Status result from Set_NUP/NSA/NUA call\n+\n+      PR_Start : Source_Ptr;\n+      --  Pointer to ( following pragma Restrictions\n+\n+      procedure Collect_Name;\n+      --  Scan a name starting at System_Text (P), and put Name in Name_Buffer,\n+      --  with Name_Len being length, folded to lower case. On return P points\n+      --  just past the last character (which should be a right paren).\n+\n+      ------------------\n+      -- Collect_Name --\n+      ------------------\n+\n+      procedure Collect_Name is\n+      begin\n+         Name_Len := 0;\n+         loop\n+            if System_Text (P) in 'a' .. 'z'\n+              or else\n+                System_Text (P) = '_'\n+              or else\n+                System_Text (P) in '0' .. '9'\n+            then\n+               Name_Buffer (Name_Len + 1) := System_Text (P);\n+\n+            elsif System_Text (P) in 'A' .. 'Z' then\n+               Name_Buffer (Name_Len + 1) :=\n+                 Character'Val (Character'Pos (System_Text (P)) + 32);\n+\n+            else\n+               exit;\n+            end if;\n+\n+            P := P + 1;\n+            Name_Len := Name_Len + 1;\n+         end loop;\n+      end Collect_Name;\n+\n+   --  Start of processing for Get_Target_Parameters\n+\n    begin\n       if Parameters_Obtained then\n          return;\n@@ -261,6 +312,9 @@ package body Targparm is\n \n          elsif System_Text (P .. P + 20) = \"pragma Restrictions (\" then\n             P := P + 21;\n+            PR_Start := P - 1;\n+\n+            --  Boolean restrictions\n \n             Rloop : for K in All_Boolean_Restrictions loop\n                declare\n@@ -285,7 +339,9 @@ package body Targparm is\n                null;\n             end loop Rloop;\n \n-            Ploop : for K in All_Parameter_Restrictions loop\n+            --  Restrictions taking integer parameter\n+\n+            Ploop : for K in Integer_Parameter_Restrictions loop\n                declare\n                   Rname : constant String :=\n                             All_Parameter_Restrictions'Image (K);\n@@ -400,23 +456,119 @@ package body Targparm is\n                      P := P + 1;\n                   end loop;\n \n-                  Set_RND (Unit);\n+                  Set_NOD (Unit);\n                   goto Line_Loop_Continue;\n                end;\n+\n+            --  No_Specification_Of_Aspect case\n+\n+            elsif System_Text (P .. P + 29) = \"No_Specification_Of_Aspect => \"\n+            then\n+               P := P + 30;\n+\n+               --  Skip this processing (and simply ignore the pragma), if\n+               --  caller did not supply the subprogram we need to process\n+               --  such lines.\n+\n+               if Set_NSA = null then\n+                  goto Line_Loop_Continue;\n+               end if;\n+\n+               --  We have scanned\n+               --    \"pragma Restrictions (No_Specification_Of_Aspect =>\"\n+\n+               Collect_Name;\n+\n+               if System_Text (P) /= ')' then\n+                  goto Bad_Restrictions_Pragma;\n+\n+               else\n+                  Set_NSA (Name_Find, OK);\n+\n+                  if OK then\n+                     goto Line_Loop_Continue;\n+                  else\n+                     goto Bad_Restrictions_Pragma;\n+                  end if;\n+               end if;\n+\n+            --  No_Use_Of_Attribute case\n+\n+            elsif System_Text (P .. P + 22) = \"No_Use_Of_Attribute => \" then\n+               P := P + 23;\n+\n+               --  Skip this processing (and simply ignore No_Use_Of_Attribute\n+               --  lines) if caller did not supply the subprogram we need to\n+               --  process such lines.\n+\n+               if Set_NUA = null then\n+                  goto Line_Loop_Continue;\n+               end if;\n+\n+               --  We have scanned\n+               --    \"pragma Restrictions (No_Use_Of_Attribute =>\"\n+\n+               Collect_Name;\n+\n+               if System_Text (P) /= ')' then\n+                  goto Bad_Restrictions_Pragma;\n+\n+               else\n+                  Set_NUA (Name_Find, OK);\n+\n+                  if OK then\n+                     goto Line_Loop_Continue;\n+                  else\n+                     goto Bad_Restrictions_Pragma;\n+                  end if;\n+               end if;\n+\n+            --  No_Use_Of_Pragma case\n+\n+            elsif System_Text (P .. P + 19) = \"No_Use_Of_Pragma => \" then\n+               P := P + 20;\n+\n+               --  Skip this processing (and simply ignore No_Use_Of_Pragma\n+               --  lines) if caller did not supply the subprogram we need to\n+               --  process such lines.\n+\n+               if Set_NUP = null then\n+                  goto Line_Loop_Continue;\n+               end if;\n+\n+               --  We have scanned\n+               --    \"pragma Restrictions (No_Use_Of_Pragma =>\"\n+\n+               Collect_Name;\n+\n+               if System_Text (P) /= ')' then\n+                  goto Bad_Restrictions_Pragma;\n+\n+               else\n+                  Set_NUP (Name_Find, OK);\n+\n+                  if OK then\n+                     goto Line_Loop_Continue;\n+                  else\n+                     goto Bad_Restrictions_Pragma;\n+                  end if;\n+               end if;\n             end if;\n \n             --  Here if unrecognizable restrictions pragma form\n \n+            <<Bad_Restrictions_Pragma>>\n+\n             Set_Standard_Error;\n             Write_Line\n                (\"fatal error: system.ads is incorrectly formatted\");\n             Write_Str (\"unrecognized or incorrect restrictions pragma: \");\n \n-            while System_Text (P) /= ')'\n-                    and then\n-                  System_Text (P) /= ASCII.LF\n+            P := PR_Start;\n             loop\n+               exit when System_Text (P) = ASCII.LF;\n                Write_Char (System_Text (P));\n+               exit when System_Text (P) = ')';\n                P := P + 1;\n             end loop;\n "}, {"sha": "18c6c577be6f0b7efaf62fcbc350c9b8cd00efdc", "filename": "gcc/ada/targparm.ads", "status": "modified", "additions": 34, "deletions": 9, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Ftargparm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Ftargparm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.ads?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -615,28 +615,53 @@ package Targparm is\n    --  selected component with Sloc value System_Location and given Prefix\n    --  (Pre) and Selector (Sel) values.\n \n-   type Set_RND_Type is access procedure (Unit : Node_Id);\n+   type Set_NOD_Type is access procedure (Unit : Node_Id);\n    --  Parameter type for Get_Target_Parameters that records a Restriction\n    --  No_Dependence for the given unit (identifier or selected component).\n \n+   type Set_NSA_Type is access procedure (Asp : Name_Id; OK : out Boolean);\n+   --  Parameter type for Get_Target_Parameters that records a Restriction\n+   --  No_Specificaztion_Of_Aspect. Asp is the pragma name. OK is set True\n+   --  if this is an OK aspect name, and False if it is not an aspect name.\n+\n+   type Set_NUA_Type is access procedure (Attr : Name_Id; OK : out Boolean);\n+   --  Parameter type for Get_Target_Parameters that records a Restriction\n+   --  No_Use_Of_Attribute. Prag is the attribute name. OK is set True if\n+   --  this is an OK attribute name, and False if it is not an attribute name.\n+\n+   type Set_NUP_Type is access procedure (Prag : Name_Id; OK : out Boolean);\n+   --  Parameter type for Get_Target_Parameters that records a Restriction\n+   --  No_Use_Of_Pragma. Prag is the pragma name. OK is set True if this is\n+   --  an OK pragma name, and False if it is not a recognized pragma name.\n+\n    procedure Get_Target_Parameters\n      (System_Text  : Source_Buffer_Ptr;\n       Source_First : Source_Ptr;\n       Source_Last  : Source_Ptr;\n       Make_Id      : Make_Id_Type := null;\n       Make_SC      : Make_SC_Type := null;\n-      Set_RND      : Set_RND_Type := null);\n-   --  Called at the start of execution to obtain target parameters from\n-   --  the source of package System. The parameters provide the source\n-   --  text to be scanned (in System_Text (Source_First .. Source_Last)).\n-   --  if the three subprograms are left at their default value of null,\n-   --  Get_Target_Parameters will ignore pragma Restrictions No_Dependence\n-   --  lines, otherwise it will use these three subprograms to record them.\n+      Set_NOD      : Set_NOD_Type := null;\n+      Set_NSA      : Set_NSA_Type := null;\n+      Set_NUA      : Set_NUA_Type := null;\n+      Set_NUP      : Set_NUP_Type := null);\n+   --  Called at the start of execution to obtain target parameters from the\n+   --  source of package System. The parameters provide the source text to be\n+   --  scanned (in System_Text (Source_First .. Source_Last)). if the three\n+   --  subprograms Make_Id, Make_SC, and Set_NOD are left at their default\n+   --  value of null, Get_Target_Parameters will ignore pragma Restrictions\n+   --  No_Dependence lines, otherwise it will use these three subprograms to\n+   --  record them. Similarly if Set_NUP is left at its default value of null,\n+   --  then any occurrences of pragma Restrictions (No_Use_Of_Pragma => XXX)\n+   --  will be ignored, otherwise it will use this procedure to record the\n+   --  pragma. Similarly for the NSA and NUA cases.\n \n    procedure Get_Target_Parameters\n      (Make_Id : Make_Id_Type := null;\n       Make_SC : Make_SC_Type := null;\n-      Set_RND : Set_RND_Type := null);\n+      Set_NOD : Set_NOD_Type := null;\n+      Set_NSA : Set_NSA_Type := null;\n+      Set_NUA : Set_NUA_Type := null;\n+      Set_NUP : Set_NUP_Type := null);\n    --  This version reads in system.ads using Osint. The idea is that the\n    --  caller uses the first version if they have to read system.ads anyway\n    --  (e.g. the compiler) and uses this simpler interface if system.ads is"}, {"sha": "a7c528391c1d2f58c0a6caa5c4a40613199e0395", "filename": "gcc/ada/tbuild.adb", "status": "modified", "additions": 48, "deletions": 4, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Ftbuild.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Ftbuild.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.adb?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,6 +24,7 @@\n ------------------------------------------------------------------------------\n \n with Atree;    use Atree;\n+with Aspects;  use Aspects;\n with Csets;    use Csets;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n@@ -779,13 +780,56 @@ package body Tbuild is\n    end OK_Convert_To;\n \n    -------------\n-   -- Set_RND --\n+   -- Set_NOD --\n    -------------\n \n-   procedure Set_RND (Unit : Node_Id) is\n+   procedure Set_NOD (Unit : Node_Id) is\n    begin\n       Set_Restriction_No_Dependence (Unit, Warn => False);\n-   end Set_RND;\n+   end Set_NOD;\n+\n+   -------------\n+   -- Set_NSA --\n+   -------------\n+\n+   procedure Set_NSA (Asp : Name_Id; OK : out Boolean) is\n+      Asp_Id : constant Aspect_Id := Get_Aspect_Id (Asp);\n+   begin\n+      if Asp_Id = No_Aspect then\n+         OK := False;\n+      else\n+         OK := True;\n+         Set_Restriction_No_Specification_Of_Aspect (Asp_Id);\n+      end if;\n+   end Set_NSA;\n+\n+   -------------\n+   -- Set_NUA --\n+   -------------\n+\n+   procedure Set_NUA (Attr : Name_Id; OK : out Boolean) is\n+   begin\n+      if Is_Attribute_Name (Attr) then\n+         OK := True;\n+         Set_Restriction_No_Use_Of_Attribute (Get_Attribute_Id (Attr));\n+      else\n+         OK := False;\n+      end if;\n+   end Set_NUA;\n+\n+   -------------\n+   -- Set_NUP --\n+   -------------\n+\n+   procedure Set_NUP (Prag : Name_Id; OK : out Boolean) is\n+   begin\n+      if Is_Pragma_Name (Prag) then\n+         OK := True;\n+         Set_Restriction_No_Use_Of_Pragma (Get_Pragma_Id (Prag));\n+      else\n+         OK := False;\n+      end if;\n+   end Set_NUP;\n \n    --------------------------\n    -- Unchecked_Convert_To --"}, {"sha": "632cff111803fa81b21ba5e13537a3a1303c3387", "filename": "gcc/ada/tbuild.ads", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Ftbuild.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/596b25f9a110b88d8c7e5fb1fa6cae5819b21691/gcc%2Fada%2Ftbuild.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.ads?ref=596b25f9a110b88d8c7e5fb1fa6cae5819b21691", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -347,9 +347,12 @@ package Tbuild is\n \n    function  Make_Id (Str : Text_Buffer) return Node_Id;\n    function  Make_SC (Pre, Sel : Node_Id) return Node_Id;\n-   procedure Set_RND (Unit : Node_Id);\n+   procedure Set_NOD (Unit : Node_Id);\n+   procedure Set_NSA (Asp  : Name_Id; OK : out Boolean);\n+   procedure Set_NUA (Attr : Name_Id; OK : out Boolean);\n+   procedure Set_NUP (Prag : Name_Id; OK : out Boolean);\n    --  Subprograms for call to Get_Target_Parameters in Gnat1drv, see spec\n-   --  of package Targparm for full description of these three subprograms.\n+   --  of package Targparm for full description of these four subprograms.\n    --  These have to be declared at the top level of a package (accessibility\n    --  issues), and Gnat1drv is a procedure, so they can't go there.\n "}]}