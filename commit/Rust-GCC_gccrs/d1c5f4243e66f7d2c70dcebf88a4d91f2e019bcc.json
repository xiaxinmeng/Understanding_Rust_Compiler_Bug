{"sha": "d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFjNWY0MjQzZTY2ZjdkMmM3MGRjZWJmODhhNGQ5MWYyZTAxOWJjYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-01T13:21:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-01T13:21:23Z"}, "message": "[multiple changes]\n\n2011-09-01  Robert Dewar  <dewar@adacore.com>\n\n\t* prj-proc.adb, exp_ch6.adb, prj-env.adb: Minor reformatting.\n\n2011-09-01  Bob Duff  <duff@adacore.com>\n\n\t* sem_aggr.adb (Resolve_Aggregate): Need to treat \"in instance\n\tbody\" the same as \"in inlined body\", because visibility shouldn't\n\tapply there.\n\n2011-09-01  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* inline.adb (Add_Inlined_Body): Refine previous change.\n\nFrom-SVN: r178412", "tree": {"sha": "f4b74c551490e0f742dfde5aa5c529016fd19b35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4b74c551490e0f742dfde5aa5c529016fd19b35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc/comments", "author": null, "committer": null, "parents": [{"sha": "1bb6e262cf96060be3098d2089c1fe059e73dedd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bb6e262cf96060be3098d2089c1fe059e73dedd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bb6e262cf96060be3098d2089c1fe059e73dedd"}], "stats": {"total": 52, "additions": 36, "deletions": 16}, "files": [{"sha": "7e70cf788ab153d5348dbc5d3f762ad8f604f944", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc", "patch": "@@ -1,3 +1,17 @@\n+2011-09-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* prj-proc.adb, exp_ch6.adb, prj-env.adb: Minor reformatting.\n+\n+2011-09-01  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Aggregate): Need to treat \"in instance\n+\tbody\" the same as \"in inlined body\", because visibility shouldn't\n+\tapply there.\n+\n+2011-09-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* inline.adb (Add_Inlined_Body): Refine previous change.\n+\n 2011-09-01  Gary Dismukes  <dismukes@adacore.com>\n \n \t* exp_ch6.ads (Needs_BIP_Alloc_Form): New utility function."}, {"sha": "b156a4f0934eac74e5d9310fb703105e9ef91d6b", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc", "patch": "@@ -7845,7 +7845,6 @@ package body Exp_Ch6 is\n    function Needs_BIP_Alloc_Form (Func_Id : Entity_Id) return Boolean is\n       pragma Assert (Is_Build_In_Place_Function (Func_Id));\n       Func_Typ : constant Entity_Id := Underlying_Type (Etype (Func_Id));\n-\n    begin\n       return not Is_Constrained (Func_Typ) or else Is_Tagged_Type (Func_Typ);\n    end Needs_BIP_Alloc_Form;"}, {"sha": "98bbbf09531f080c4358fa3bd211d3f02dc1971f", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc", "patch": "@@ -342,11 +342,12 @@ package body Inline is\n                   null;\n \n                --  Do not inline the package if the subprogram is an init. proc\n-               --  because in that case the body appears in the same unit that\n-               --  declares the type, which will be compiled in any case.\n+               --  or other internally generated subprogram, because in that\n+               --  case the subprogram body appears in the same unit that\n+               --  declares the type, and that body is visible to the back end.\n \n                elsif not Is_Inlined (Pack)\n-                 and then not Is_Init_Proc (E)\n+                 and then Comes_From_Source (E)\n                then\n                   Set_Is_Inlined (Pack);\n                   Inlined_Bodies.Increment_Last;"}, {"sha": "6dcee667cc14bdeccba2d53a08fe12c2aeaff3d1", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc", "patch": "@@ -836,19 +836,18 @@ package body Prj.Env is\n                   or else Source.Unit /= No_Unit_Index)\n             then\n                if Source.Unit /= No_Unit_Index then\n+\n                   --  Put the encoded unit name in the name buffer\n \n                   declare\n                      Uname : constant String :=\n-                       Get_Name_String (Source.Unit.Name);\n+                               Get_Name_String (Source.Unit.Name);\n \n                   begin\n                      Name_Len := 0;\n-\n                      for J in Uname'Range loop\n                         if Uname (J) in Upper_Half_Character then\n                            Store_Encoded_Character (Get_Char_Code (Uname (J)));\n-\n                         else\n                            Add_Char_To_Name_Buffer (Uname (J));\n                         end if;\n@@ -879,8 +878,7 @@ package body Prj.Env is\n                      end case;\n \n                      if Suffix /= No_File then\n-                        Add_Str_To_Name_Buffer\n-                          (Get_Name_String (Suffix));\n+                        Add_Str_To_Name_Buffer (Get_Name_String (Suffix));\n                      end if;\n                   end if;\n \n@@ -907,6 +905,8 @@ package body Prj.Env is\n       procedure For_Every_Imported_Project is new\n         For_Every_Project_Imported (State => Integer, Action => Process);\n \n+      --  Local variables\n+\n       Dummy : Integer := 0;\n \n    --  Start of processing for Create_Mapping_File"}, {"sha": "b5869b2047d86b24c83a6dd484a82836875d8a6d", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc", "patch": "@@ -2765,6 +2765,7 @@ package body Prj.Proc is\n             Project := Processed_Projects.Get (Name);\n \n             if Project /= No_Project then\n+\n                --  Make sure that, when a project is extended, the project id\n                --  of the project extending it is recorded in its data, even\n                --  when it has already been processed as an imported project.\n@@ -2777,13 +2778,16 @@ package body Prj.Proc is\n                return;\n             end if;\n \n-            Project := new Project_Data'\n-              (Empty_Project\n-                 (Project_Qualifier_Of\n+            Project :=\n+              new Project_Data'\n+                (Empty_Project\n+                  (Project_Qualifier_Of\n                     (From_Project_Node, From_Project_Node_Tree)));\n-            In_Tree.Projects := new Project_List_Element'\n-              (Project => Project,\n-               Next    => In_Tree.Projects);\n+\n+            In_Tree.Projects :=\n+              new Project_List_Element'\n+                    (Project => Project,\n+                     Next    => In_Tree.Projects);\n \n             Processed_Projects.Set (Name, Project);\n \n@@ -2833,10 +2837,12 @@ package body Prj.Proc is\n               and then In_Tree.Is_Root_Tree\n             then\n                Initialize_And_Copy (Child_Env, Copy_From => Env);\n+\n             else\n                --  No need to initialize Child_Env, since it will not be\n                --  used anyway by Process_Declarative_Items (only the root\n                --  aggregate can modify it, and it is never read anyway).\n+\n                null;\n             end if;\n "}, {"sha": "cdfaedeaa56bcd0c34e6bf0d4261a2ea60a36073", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc", "patch": "@@ -1229,7 +1229,7 @@ package body Sem_Aggr is\n \n       elsif Is_Private_Type (Typ)\n         and then Present (Full_View (Typ))\n-        and then In_Inlined_Body\n+        and then (In_Inlined_Body or else In_Instance_Body)\n         and then Is_Composite_Type (Full_View (Typ))\n       then\n          Resolve (N, Full_View (Typ));"}]}