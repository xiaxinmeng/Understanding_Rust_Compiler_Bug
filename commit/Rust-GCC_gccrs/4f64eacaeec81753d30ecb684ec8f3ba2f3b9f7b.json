{"sha": "4f64eacaeec81753d30ecb684ec8f3ba2f3b9f7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY2NGVhY2FlZWM4MTc1M2QzMGVjYjY4NGVjOGYzYmEyZjNiOWY3Yg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1997-08-19T18:02:21Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-08-19T18:02:21Z"}, "message": "haifa-sched.c (move_insn): Reemit notes for SCHED_GROUP_P insns too.\n\n        * haifa-sched.c (move_insn): Reemit notes for SCHED_GROUP_P\n        insns too.\n        (schedule_block): When adjusting basic_block_{head,end}, account\n        for movement of SCHED_GROUP_P insns too.\n\n        * haifa-sched.c (debug_dependencies): Fix thinko.\n\nFrom-SVN: r14849", "tree": {"sha": "f95ab913195ecdea40864952181507cf8c9b7b5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f95ab913195ecdea40864952181507cf8c9b7b5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f64eacaeec81753d30ecb684ec8f3ba2f3b9f7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f64eacaeec81753d30ecb684ec8f3ba2f3b9f7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f64eacaeec81753d30ecb684ec8f3ba2f3b9f7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f64eacaeec81753d30ecb684ec8f3ba2f3b9f7b/comments", "author": null, "committer": null, "parents": [{"sha": "61822835053e781234306e21ac787f066b26f59f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61822835053e781234306e21ac787f066b26f59f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61822835053e781234306e21ac787f066b26f59f"}], "stats": {"total": 41, "additions": 32, "deletions": 9}, "files": [{"sha": "4348398379495b5e155cbbb11d6612040d9f6032", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f64eacaeec81753d30ecb684ec8f3ba2f3b9f7b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f64eacaeec81753d30ecb684ec8f3ba2f3b9f7b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f64eacaeec81753d30ecb684ec8f3ba2f3b9f7b", "patch": "@@ -1,9 +1,16 @@\n Tue Aug 19 09:34:57 1997  Jeffrey A Law  (law@cygnus.com)\n \n+\t* haifa-sched.c (move_insn): Reemit notes for SCHED_GROUP_P\n+\tinsns too.\n+\t(schedule_block): When adjusting basic_block_{head,end}, account\n+\tfor movement of SCHED_GROUP_P insns too.\n+\n+\t* haifa-sched.c (debug_dependencies): Fix thinko.\n+\n \t* Makefile.in (EXPECT, RUNTEST, RUNTESTFLAGS): Define.\n \t(site.exp, check, check-g++, check-gcc): New targets.\n \n-\t* haifa-sched.c: Make lots of variable static.\n+\t* haifa-sched.c: Make lots of variables static.\n \n Tue Aug 19 07:18:34 1997  H.J. Lu  (hjl@gnu.ai.mit.edu)\n "}, {"sha": "222a6d6fe009e16dca2174d6efb4ac600eb2db2d", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 24, "deletions": 8, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f64eacaeec81753d30ecb684ec8f3ba2f3b9f7b/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f64eacaeec81753d30ecb684ec8f3ba2f3b9f7b/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=4f64eacaeec81753d30ecb684ec8f3ba2f3b9f7b", "patch": "@@ -6842,6 +6842,8 @@ schedule_block (bb, rgn, rgn_n_insns)\n \t      /* an interblock motion? */\n \t      if (INSN_BB (insn) != target_bb)\n \t\t{\n+\t\t  rtx temp;\n+\n \t\t  if (IS_SPECULATIVE_INSN (insn))\n \t\t    {\n \n@@ -6862,20 +6864,34 @@ schedule_block (bb, rgn, rgn_n_insns)\n \t\t    }\n \t\t  nr_inter++;\n \n-\t\t  /* update source block boundaries */\n-\t\t  b1 = INSN_BLOCK (insn);\n-\t\t  if (insn == basic_block_head[b1]\n+\t\t  temp = insn;\n+\t\t  while (SCHED_GROUP_P (temp))\n+\t\t    temp = PREV_INSN (temp);\n+\n+\t\t  /* Update source block boundaries.   */\n+\t\t  b1 = INSN_BLOCK (temp);\n+\t\t  if (temp == basic_block_head[b1]\n \t\t      && insn == basic_block_end[b1])\n \t\t    {\n-\t\t      emit_note_after (NOTE_INSN_DELETED, basic_block_head[b1]);\n-\t\t      basic_block_end[b1] = basic_block_head[b1] = NEXT_INSN (insn);\n+\t\t      /* We moved all the insns in the basic block.\n+\t\t\t Emit a note after the last insn and update the\n+\t\t\t begin/end boundaries to point to the note.  */\n+\t\t      emit_note_after (NOTE_INSN_DELETED, insn);\n+\t\t      basic_block_end[b1] = NEXT_INSN (insn);\n+\t\t      basic_block_head[b1] = NEXT_INSN (insn);\n \t\t    }\n \t\t  else if (insn == basic_block_end[b1])\n \t\t    {\n-\t\t      basic_block_end[b1] = PREV_INSN (insn);\n+\t\t      /* We took insns from the end of the basic block,\n+\t\t\t so update the end of block boundary so that it\n+\t\t\t points to the first insn we did not move.  */\n+\t\t      basic_block_end[b1] = PREV_INSN (temp);\n \t\t    }\n-\t\t  else if (insn == basic_block_head[b1])\n+\t\t  else if (temp == basic_block_head[b1])\n \t\t    {\n+\t\t      /* We took insns from the start of the basic block,\n+\t\t\t so update the start of block boundary so that\n+\t\t\t it points to the first insn we did not move.  */\n \t\t      basic_block_head[b1] = NEXT_INSN (insn);\n \t\t    }\n \t\t}\n@@ -7385,7 +7401,7 @@ debug_dependencies ()\n \t\t\t\t NOTE_SOURCE_FILE (insn));\n \t\t    }\n \t\t  else\n-\t\t    fprintf (dump, \" {%s}\\n\", GET_RTX_NAME (insn));\n+\t\t    fprintf (dump, \" {%s}\\n\", GET_RTX_NAME (GET_CODE (insn)));\n \t\t  continue;\n \t\t}\n "}]}