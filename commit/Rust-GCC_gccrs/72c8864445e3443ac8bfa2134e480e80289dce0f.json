{"sha": "72c8864445e3443ac8bfa2134e480e80289dce0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJjODg2NDQ0NWUzNDQzYWM4YmZhMjEzNGU0ODBlODAyODlkY2UwZg==", "commit": {"author": {"name": "Ian Bolton", "email": "ian.bolton@arm.com", "date": "2013-05-03T18:30:00Z"}, "committer": {"name": "Ian Bolton", "email": "ibolton@gcc.gnu.org", "date": "2013-05-03T18:30:00Z"}, "message": "AArch64 test cases for TST instruction\n\nFrom-SVN: r198585", "tree": {"sha": "619d527e13c3b0878ce0716e021776ea2373a517", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/619d527e13c3b0878ce0716e021776ea2373a517"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72c8864445e3443ac8bfa2134e480e80289dce0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72c8864445e3443ac8bfa2134e480e80289dce0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72c8864445e3443ac8bfa2134e480e80289dce0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72c8864445e3443ac8bfa2134e480e80289dce0f/comments", "author": null, "committer": null, "parents": [{"sha": "68f073d4df711a367346c0765bf2bee0358f9fea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68f073d4df711a367346c0765bf2bee0358f9fea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68f073d4df711a367346c0765bf2bee0358f9fea"}], "stats": {"total": 311, "additions": 311, "deletions": 0}, "files": [{"sha": "6e279dd3a9b21f6d5526a1706a0b49e18296f7bd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72c8864445e3443ac8bfa2134e480e80289dce0f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72c8864445e3443ac8bfa2134e480e80289dce0f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=72c8864445e3443ac8bfa2134e480e80289dce0f", "patch": "@@ -1,3 +1,8 @@\n+2013-05-03  Ian Bolton  <ian.bolton@arm.com>\n+\n+\t* gcc.target/aarch64/tst_1.c: New test.\n+\t* gcc.target/aarch64/tst_2.c: Likewise\n+\n 2013-05-02  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/57144"}, {"sha": "4838b1bf754c43254c4bc64905c39716babf3417", "filename": "gcc/testsuite/gcc.target/aarch64/tst_1.c", "status": "added", "additions": 150, "deletions": 0, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72c8864445e3443ac8bfa2134e480e80289dce0f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftst_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72c8864445e3443ac8bfa2134e480e80289dce0f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftst_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftst_1.c?ref=72c8864445e3443ac8bfa2134e480e80289dce0f", "patch": "@@ -0,0 +1,150 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 --save-temps -fno-inline\" } */\n+\n+extern void abort (void);\n+\n+int\n+tst_si_test1 (int a, int b, int c)\n+{\n+  int d = a & b;\n+\n+  /* { dg-final { scan-assembler-times \"tst\\tw\\[0-9\\]+, w\\[0-9\\]+\" 2 } } */\n+  if (d == 0)\n+    return 12;\n+  else\n+    return 18;\n+}\n+\n+int\n+tst_si_test2 (int a, int b, int c)\n+{\n+  int d = a & 0x99999999;\n+\n+  /* { dg-final { scan-assembler \"tst\\tw\\[0-9\\]+, -1717986919\" } } */\n+  if (d == 0)\n+    return 12;\n+  else\n+    return 18;\n+}\n+\n+int\n+tst_si_test3 (int a, int b, int c)\n+{\n+  int d = a & (b << 3);\n+\n+  /* { dg-final { scan-assembler \"tst\\tw\\[0-9\\]+, w\\[0-9\\]+, lsl 3\" } } */\n+  if (d == 0)\n+    return 12;\n+  else\n+    return 18;\n+}\n+\n+typedef long long s64;\n+\n+s64\n+tst_di_test1 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a & b;\n+\n+  /* { dg-final { scan-assembler-times \"tst\\tx\\[0-9\\]+, x\\[0-9\\]+\" 2 } } */\n+  if (d == 0)\n+    return 12;\n+  else\n+    return 18;\n+}\n+\n+s64\n+tst_di_test2 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a & 0xaaaaaaaaaaaaaaaall;\n+\n+  /* { dg-final { scan-assembler \"tst\\tx\\[0-9\\]+, -6148914691236517206\" } } */\n+  if (d == 0)\n+    return 12;\n+  else\n+    return 18;\n+}\n+\n+s64\n+tst_di_test3 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a & (b << 3);\n+\n+  /* { dg-final { scan-assembler \"tst\\tx\\[0-9\\]+, x\\[0-9\\]+, lsl 3\" } } */\n+  if (d == 0)\n+    return 12;\n+  else\n+    return 18;\n+}\n+\n+int\n+main ()\n+{\n+  int x;\n+  s64 y;\n+\n+  x = tst_si_test1 (29, 4, 5);\n+  if (x != 18)\n+    abort ();\n+\n+  x = tst_si_test1 (5, 2, 20);\n+  if (x != 12)\n+    abort ();\n+\n+  x = tst_si_test2 (29, 4, 5);\n+  if (x != 18)\n+    abort ();\n+\n+  x = tst_si_test2 (1024, 2, 20);\n+  if (x != 12)\n+    abort ();\n+\n+  x = tst_si_test3 (35, 4, 5);\n+  if (x != 18)\n+    abort ();\n+\n+  x = tst_si_test3 (5, 2, 20);\n+  if (x != 12)\n+    abort ();\n+\n+  y = tst_di_test1 (0x130000029ll,\n+                     0x320000004ll,\n+                     0x505050505ll);\n+\n+  if (y != 18)\n+    abort ();\n+\n+  y = tst_di_test1 (0x5000500050005ll,\n+                     0x2111211121112ll,\n+                     0x0000000002020ll);\n+  if (y != 12)\n+    abort ();\n+\n+  y = tst_di_test2 (0x130000029ll,\n+                     0x320000004ll,\n+                     0x505050505ll);\n+  if (y != 18)\n+    abort ();\n+\n+  y = tst_di_test2 (0x540004100ll,\n+                     0x320000004ll,\n+                     0x805050205ll);\n+  if (y != 12)\n+    abort ();\n+\n+  y = tst_di_test3 (0x130000029ll,\n+                     0x064000008ll,\n+                     0x505050505ll);\n+  if (y != 18)\n+    abort ();\n+\n+  y = tst_di_test3 (0x130002900ll,\n+                     0x088000008ll,\n+                     0x505050505ll);\n+  if (y != 12)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "1e8090464bff634a3d94527f997aa44811db9660", "filename": "gcc/testsuite/gcc.target/aarch64/tst_2.c", "status": "added", "additions": 156, "deletions": 0, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72c8864445e3443ac8bfa2134e480e80289dce0f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftst_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72c8864445e3443ac8bfa2134e480e80289dce0f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftst_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ftst_2.c?ref=72c8864445e3443ac8bfa2134e480e80289dce0f", "patch": "@@ -0,0 +1,156 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 --save-temps -fno-inline\" } */\n+\n+extern void abort (void);\n+\n+int\n+tst_si_test1 (int a, int b, int c)\n+{\n+  int d = a & b;\n+\n+  /* { dg-final { scan-assembler-not \"tst\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+\" } } */\n+  /* { dg-final { scan-assembler-times \"and\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+\" 2 } } */\n+  if (d <= 0)\n+    return 12;\n+  else\n+    return 18;\n+}\n+\n+int\n+tst_si_test2 (int a, int b, int c)\n+{\n+  int d = a & 0x99999999;\n+\n+  /* { dg-final { scan-assembler-not \"tst\\tw\\[0-9\\]+, w\\[0-9\\]+, -1717986919\" } } */\n+  /* { dg-final { scan-assembler \"and\\tw\\[0-9\\]+, w\\[0-9\\]+, -1717986919\" } } */\n+  if (d <= 0)\n+    return 12;\n+  else\n+    return 18;\n+}\n+\n+int\n+tst_si_test3 (int a, int b, int c)\n+{\n+  int d = a & (b << 3);\n+\n+  /* { dg-final { scan-assembler-not \"tst\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+, lsl 3\" } } */\n+  /* { dg-final { scan-assembler \"and\\tw\\[0-9\\]+, w\\[0-9\\]+, w\\[0-9\\]+, lsl 3\" } } */\n+  if (d <= 0)\n+    return 12;\n+  else\n+    return 18;\n+}\n+\n+typedef long long s64;\n+\n+s64\n+tst_di_test1 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a & b;\n+\n+  /* { dg-final { scan-assembler-not \"tst\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+\" } } */\n+  /* { dg-final { scan-assembler-times \"and\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+\" 2 } } */\n+  if (d <= 0)\n+    return 12;\n+  else\n+    return 18;\n+}\n+\n+s64\n+tst_di_test2 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a & 0xaaaaaaaaaaaaaaaall;\n+\n+  /* { dg-final { scan-assembler-not \"tst\\tx\\[0-9\\]+, x\\[0-9\\]+, -6148914691236517206\" } } */\n+  /* { dg-final { scan-assembler \"and\\tx\\[0-9\\]+, x\\[0-9\\]+, -6148914691236517206\" } } */\n+  if (d <= 0)\n+    return 12;\n+  else\n+    return 18;\n+}\n+\n+s64\n+tst_di_test3 (s64 a, s64 b, s64 c)\n+{\n+  s64 d = a & (b << 3);\n+\n+  /* { dg-final { scan-assembler-not \"tst\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+, lsl 3\" } } */\n+  /* { dg-final { scan-assembler \"and\\tx\\[0-9\\]+, x\\[0-9\\]+, x\\[0-9\\]+, lsl 3\" } } */\n+  if (d <= 0)\n+    return 12;\n+  else\n+    return 18;\n+}\n+\n+int\n+main ()\n+{\n+  int x;\n+  s64 y;\n+\n+  x = tst_si_test1 (29, 4, 5);\n+  if (x != 18)\n+    abort ();\n+\n+  x = tst_si_test1 (5, 2, 20);\n+  if (x != 12)\n+    abort ();\n+\n+  x = tst_si_test2 (29, 4, 5);\n+  if (x != 18)\n+    abort ();\n+\n+  x = tst_si_test2 (1024, 2, 20);\n+  if (x != 12)\n+    abort ();\n+\n+  x = tst_si_test3 (35, 4, 5);\n+  if (x != 18)\n+    abort ();\n+\n+  x = tst_si_test3 (5, 2, 20);\n+  if (x != 12)\n+    abort ();\n+\n+  y = tst_di_test1 (0x130000029ll,\n+                     0x320000004ll,\n+                     0x505050505ll);\n+\n+  if (y != 18)\n+    abort ();\n+\n+  y = tst_di_test1 (0x5000500050005ll,\n+                     0x2111211121112ll,\n+                     0x0000000002020ll);\n+  if (y != 12)\n+    abort ();\n+\n+  y = tst_di_test2 (0x130000029ll,\n+                     0x320000004ll,\n+                     0x505050505ll);\n+  if (y != 18)\n+    abort ();\n+\n+  y = tst_di_test2 (0x540004100ll,\n+                     0x320000004ll,\n+                     0x805050205ll);\n+  if (y != 12)\n+    abort ();\n+\n+  y = tst_di_test3 (0x130000029ll,\n+                     0x064000008ll,\n+                     0x505050505ll);\n+  if (y != 18)\n+    abort ();\n+\n+  y = tst_di_test3 (0x130002900ll,\n+                     0x088000008ll,\n+                     0x505050505ll);\n+  if (y != 12)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-saved-temps } } */"}]}