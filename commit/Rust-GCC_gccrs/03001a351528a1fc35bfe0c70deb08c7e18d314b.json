{"sha": "03001a351528a1fc35bfe0c70deb08c7e18d314b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDMwMDFhMzUxNTI4YTFmYzM1YmZlMGM3MGRlYjA4YzdlMThkMzE0Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-03-11T11:31:05Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-03-11T11:31:05Z"}, "message": "re PR tree-optimization/89649 (r269458 FAILs g++.dg/pr80481.C, scan-assembler-not vmovaps)\n\n2019-03-11  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/89649\n\t* tree-vectorizer.h (vect_loop_versioning): Adjust prototype.\n\t* tree-vect-loop-manip.c (vect_do_peeling): Unset force_vectorize\n\ton the prolog and epilog loops.\n\t(vect_loop_versioning): Return copy of loop.\n\t* tree-vect-loop.c (vect_transform_loop): Unset force_vectorize\n\ton the non-vectorized version of the loop.\n\nFrom-SVN: r269578", "tree": {"sha": "90fc178fad908f8f6703bbedbd2e87c07aea6358", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90fc178fad908f8f6703bbedbd2e87c07aea6358"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03001a351528a1fc35bfe0c70deb08c7e18d314b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03001a351528a1fc35bfe0c70deb08c7e18d314b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03001a351528a1fc35bfe0c70deb08c7e18d314b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03001a351528a1fc35bfe0c70deb08c7e18d314b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "470fa18b8d54594b339dafbd77ece4b05b4f00c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/470fa18b8d54594b339dafbd77ece4b05b4f00c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/470fa18b8d54594b339dafbd77ece4b05b4f00c3"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "cf2e61d2d1f8ed91b128e69406904eb3ebee310a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03001a351528a1fc35bfe0c70deb08c7e18d314b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03001a351528a1fc35bfe0c70deb08c7e18d314b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=03001a351528a1fc35bfe0c70deb08c7e18d314b", "patch": "@@ -1,3 +1,13 @@\n+2019-03-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/89649\n+\t* tree-vectorizer.h (vect_loop_versioning): Adjust prototype.\n+\t* tree-vect-loop-manip.c (vect_do_peeling): Unset force_vectorize\n+\ton the prolog and epilog loops.\n+\t(vect_loop_versioning): Return copy of loop.\n+\t* tree-vect-loop.c (vect_transform_loop): Unset force_vectorize\n+\ton the non-vectorized version of the loop.\n+\n 2019-03-10  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/68924"}, {"sha": "77d3dac771ebe62b2fe9d135c9e5a6e48468d41b", "filename": "gcc/tree-vect-loop-manip.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03001a351528a1fc35bfe0c70deb08c7e18d314b/gcc%2Ftree-vect-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03001a351528a1fc35bfe0c70deb08c7e18d314b/gcc%2Ftree-vect-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.c?ref=03001a351528a1fc35bfe0c70deb08c7e18d314b", "patch": "@@ -2542,6 +2542,7 @@ vect_do_peeling (loop_vec_info loop_vinfo, tree niters, tree nitersm1,\n \t\t\t   \"slpeel_tree_duplicate_loop_to_edge_cfg failed.\\n\");\n \t  gcc_unreachable ();\n \t}\n+      prolog->force_vectorize = false;\n       slpeel_update_phi_nodes_for_loops (loop_vinfo, prolog, loop, true);\n       first_loop = prolog;\n       reset_original_copy_tables ();\n@@ -2612,6 +2613,7 @@ vect_do_peeling (loop_vec_info loop_vinfo, tree niters, tree nitersm1,\n \t\t\t   \"slpeel_tree_duplicate_loop_to_edge_cfg failed.\\n\");\n \t  gcc_unreachable ();\n \t}\n+      epilog->force_vectorize = false;\n       slpeel_update_phi_nodes_for_loops (loop_vinfo, loop, epilog, false);\n \n       /* Scalar version loop may be preferred.  In this case, add guard\n@@ -2984,7 +2986,7 @@ vect_create_cond_for_alias_checks (loop_vec_info loop_vinfo, tree * cond_expr)\n    The versioning precondition(s) are placed in *COND_EXPR and\n    *COND_EXPR_STMT_LIST.  */\n \n-void\n+struct loop *\n vect_loop_versioning (loop_vec_info loop_vinfo,\n \t\t      unsigned int th, bool check_profitability,\n \t\t      poly_uint64 versioning_threshold)\n@@ -3154,4 +3156,6 @@ vect_loop_versioning (loop_vec_info loop_vinfo,\n \t\t\t     GSI_SAME_STMT);\n     }\n   update_ssa (TODO_update_ssa);\n+\n+  return nloop;\n }"}, {"sha": "bd81193a23605e6e78e38f3e1413154d264d8d2f", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03001a351528a1fc35bfe0c70deb08c7e18d314b/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03001a351528a1fc35bfe0c70deb08c7e18d314b/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=03001a351528a1fc35bfe0c70deb08c7e18d314b", "patch": "@@ -8201,8 +8201,10 @@ vect_transform_loop (loop_vec_info loop_vinfo)\n \t\t\t\t\t      versioning_threshold);\n \t  check_profitability = false;\n \t}\n-      vect_loop_versioning (loop_vinfo, th, check_profitability,\n-\t\t\t    versioning_threshold);\n+      struct loop *sloop\n+\t= vect_loop_versioning (loop_vinfo, th, check_profitability,\n+\t\t\t\tversioning_threshold);\n+      sloop->force_vectorize = false;\n       check_profitability = false;\n     }\n "}, {"sha": "d67c54427cc75d0eafb228a885ab87a2ad8ab190", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03001a351528a1fc35bfe0c70deb08c7e18d314b/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03001a351528a1fc35bfe0c70deb08c7e18d314b/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=03001a351528a1fc35bfe0c70deb08c7e18d314b", "patch": "@@ -1449,8 +1449,8 @@ extern void vect_set_loop_condition (struct loop *, loop_vec_info,\n extern bool slpeel_can_duplicate_loop_p (const struct loop *, const_edge);\n struct loop *slpeel_tree_duplicate_loop_to_edge_cfg (struct loop *,\n \t\t\t\t\t\t     struct loop *, edge);\n-extern void vect_loop_versioning (loop_vec_info, unsigned int, bool,\n-\t\t\t\t  poly_uint64);\n+struct loop *vect_loop_versioning (loop_vec_info, unsigned int, bool,\n+\t\t\t\t   poly_uint64);\n extern struct loop *vect_do_peeling (loop_vec_info, tree, tree,\n \t\t\t\t     tree *, tree *, tree *, int, bool, bool);\n extern void vect_prepare_for_masked_peels (loop_vec_info);"}]}