{"sha": "01f4c821945d7f96f5f24cde63fce64ca0ef88a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFmNGM4MjE5NDVkN2Y5NmY1ZjI0Y2RlNjNmY2U2NGNhMGVmODhhOQ==", "commit": {"author": {"name": "Steve Ellcey", "email": "sellcey@mips.com", "date": "2012-12-13T19:55:13Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2012-12-13T19:55:13Z"}, "message": "18654.cc: Shrink memory usage under simulator.\n\n2012-12-13  Steve Ellcey  <sellcey@mips.com>\n\n\t* testsuite/21_strings/basic_string/capacity/char/18654.cc: Shrink\n\tmemory usage under simulator.\n\t* testsuite/21_strings/basic_string/capacity/wchar_t/18654.cc: Ditto.\n\t* testsuite/22_locale/collate/transform/char/28277.cc: Ditto.\n\t* testsuite/22_locale/collate/transform/wchar_t/28277.cc: Ditto.\n\nFrom-SVN: r194488", "tree": {"sha": "c17445c430b2d6bf47bb5aec3f772535878ba48d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c17445c430b2d6bf47bb5aec3f772535878ba48d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01f4c821945d7f96f5f24cde63fce64ca0ef88a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01f4c821945d7f96f5f24cde63fce64ca0ef88a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01f4c821945d7f96f5f24cde63fce64ca0ef88a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01f4c821945d7f96f5f24cde63fce64ca0ef88a9/comments", "author": null, "committer": null, "parents": [{"sha": "e1df04775d6d0c3f905b9e77e371be04a035e50e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1df04775d6d0c3f905b9e77e371be04a035e50e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1df04775d6d0c3f905b9e77e371be04a035e50e"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "84034d31b28543e90fc2ff8e50c30b4f1d21bb3f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01f4c821945d7f96f5f24cde63fce64ca0ef88a9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01f4c821945d7f96f5f24cde63fce64ca0ef88a9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=01f4c821945d7f96f5f24cde63fce64ca0ef88a9", "patch": "@@ -1,3 +1,11 @@\n+2012-12-13  Steve Ellcey  <sellcey@mips.com>\n+\n+\t* testsuite/21_strings/basic_string/capacity/char/18654.cc: Shrink\n+\tmemory usage under simulator.\n+\t* testsuite/21_strings/basic_string/capacity/wchar_t/18654.cc: Ditto.\n+\t* testsuite/22_locale/collate/transform/char/28277.cc: Ditto.\n+\t* testsuite/22_locale/collate/transform/wchar_t/28277.cc: Ditto.\n+\n 2012-12-12  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* doc/xml/manual/documentation_hacking.xml: Fix validation issue."}, {"sha": "78af79ad4969ad96d8af197dc1e85da7c20ed7dd", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/capacity/char/18654.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01f4c821945d7f96f5f24cde63fce64ca0ef88a9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2F18654.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01f4c821945d7f96f5f24cde63fce64ca0ef88a9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2F18654.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2F18654.cc?ref=01f4c821945d7f96f5f24cde63fce64ca0ef88a9", "patch": "@@ -19,6 +19,12 @@\n \n // 21.3.3 string capacity\n \n+// { dg-options \"-DMAX_SIZE=16\" { target simulator } }\n+\n+#ifndef MAX_SIZE\n+#define MAX_SIZE 20\n+#endif\n+\n #include <string>\n #include <testsuite_hooks.h>\n \n@@ -34,7 +40,7 @@ void test01()\n   // and shrink-to-fit (in the future, maybe this will change\n   // for short strings).\n   const size_type minsize = 2 << 0;\n-  const size_type maxsize = 2 << 20;\n+  const size_type maxsize = 2 << MAX_SIZE;\n   for (size_type i = minsize; i <= maxsize; i *= 2)\n     {\n       string str(i, 'x');"}, {"sha": "df75f091340da60fe8cec2c51909f1da93dcb52a", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/capacity/wchar_t/18654.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01f4c821945d7f96f5f24cde63fce64ca0ef88a9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2F18654.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01f4c821945d7f96f5f24cde63fce64ca0ef88a9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2F18654.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2F18654.cc?ref=01f4c821945d7f96f5f24cde63fce64ca0ef88a9", "patch": "@@ -19,6 +19,12 @@\n \n // 21.3.3 string capacity\n \n+// { dg-options \"-DMAX_SIZE=16\" { target simulator } }\n+\n+#ifndef MAX_SIZE\n+#define MAX_SIZE 20\n+#endif\n+\n #include <string>\n #include <testsuite_hooks.h>\n \n@@ -34,7 +40,7 @@ void test01()\n   // and shrink-to-fit (in the future, maybe this will change\n   // for short strings).\n   const size_type minsize = 2 << 0;\n-  const size_type maxsize = 2 << 20;\n+  const size_type maxsize = 2 << MAX_SIZE;\n   for (size_type i = minsize; i <= maxsize; i *= 2)\n     {\n       wstring str(i, L'x');"}, {"sha": "7b94c7dd109b33d7f4a2322573e68fa3d30d92fc", "filename": "libstdc++-v3/testsuite/22_locale/collate/transform/char/28277.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01f4c821945d7f96f5f24cde63fce64ca0ef88a9/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcollate%2Ftransform%2Fchar%2F28277.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01f4c821945d7f96f5f24cde63fce64ca0ef88a9/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcollate%2Ftransform%2Fchar%2F28277.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcollate%2Ftransform%2Fchar%2F28277.cc?ref=01f4c821945d7f96f5f24cde63fce64ca0ef88a9", "patch": "@@ -19,6 +19,12 @@\n \n // 22.2.4.1.1 collate members\n \n+// { dg-options \"-DMAX_SIZE=1000000\" { target simulator } }\n+\n+#ifndef MAX_SIZE\n+#define MAX_SIZE 10000000\n+#endif\n+\n #include <locale>\n #include <testsuite_hooks.h>\n \n@@ -36,7 +42,7 @@ void test01()\n   // cache the collate facets\n   const collate<char>& coll_c = use_facet<collate<char> >(loc_c); \n \n-  const string_type sstr(10000000, 'a');\n+  const string_type sstr(MAX_SIZE, 'a');\n \n   const string_type dstr = coll_c.transform(sstr.data(),\n \t\t\t\t\t    sstr.data() + sstr.size());"}, {"sha": "56ad605e8b0cd73f7b7347dec977d0e6897a95d2", "filename": "libstdc++-v3/testsuite/22_locale/collate/transform/wchar_t/28277.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01f4c821945d7f96f5f24cde63fce64ca0ef88a9/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcollate%2Ftransform%2Fwchar_t%2F28277.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01f4c821945d7f96f5f24cde63fce64ca0ef88a9/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcollate%2Ftransform%2Fwchar_t%2F28277.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcollate%2Ftransform%2Fwchar_t%2F28277.cc?ref=01f4c821945d7f96f5f24cde63fce64ca0ef88a9", "patch": "@@ -19,6 +19,12 @@\n \n // 22.2.4.1.1 collate members\n \n+// { dg-options \"-DMAX_SIZE=100000\" { target simulator } }\n+\n+#ifndef MAX_SIZE\n+#define MAX_SIZE 10000000\n+#endif\n+\n #include <locale>\n #include <testsuite_hooks.h>\n \n@@ -36,7 +42,7 @@ void test01()\n   // cache the collate facets\n   const collate<wchar_t>& coll_c = use_facet<collate<wchar_t> >(loc_c); \n \n-  const string_type sstr(10000000, L'a');\n+  const string_type sstr(MAX_SIZE, L'a');\n \n   const string_type dstr = coll_c.transform(sstr.data(),\n \t\t\t\t\t    sstr.data() + sstr.size());"}]}