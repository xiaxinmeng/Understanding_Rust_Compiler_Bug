{"sha": "06bd7f563b5358d34b592e9d630ad770c3ec15c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZiZDdmNTYzYjUzNThkMzRiNTkyZTlkNjMwYWQ3NzBjM2VjMTVjMg==", "commit": {"author": {"name": "Rafael Avila de Espindola", "email": "espindola@google.com", "date": "2009-11-12T14:01:49Z"}, "committer": {"name": "Rafael Espindola", "email": "espindola@gcc.gnu.org", "date": "2009-11-12T14:01:49Z"}, "message": "lto-plugin.c (write_resolution): Assume resolution_file is set.\n\n2009-11-12  Rafael Avila de Espindola  <espindola@google.com>\n\n\t* lto-plugin.c (write_resolution): Assume resolution_file is set.\n\tPrint the symbol name.\n\t(all_symbols_read_handler): Create a resolution file.\n\tPass it to gcc.\n\t(cleanup_handler): Remove the resolution file.\n\t(process_option): Drop the -resolution option.\n\n2009-11-12  Rafael Avila de Espindola  <espindola@google.com>\n\n\t* lang.opt (fresolution): Renamed from resolution.\n\t* lto-lang.c (lto_handle_option): Handle new option name.\n\t* lto.c (lto_resolution_read): Add more checks. Discard rest of line.\n\nFrom-SVN: r154118", "tree": {"sha": "0bbaf16645e4e8605fd81ea4a413098ba0b198fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bbaf16645e4e8605fd81ea4a413098ba0b198fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06bd7f563b5358d34b592e9d630ad770c3ec15c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06bd7f563b5358d34b592e9d630ad770c3ec15c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06bd7f563b5358d34b592e9d630ad770c3ec15c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06bd7f563b5358d34b592e9d630ad770c3ec15c2/comments", "author": null, "committer": null, "parents": [{"sha": "7248efd98d28eaf518caee2cceca0ec4cb076730", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7248efd98d28eaf518caee2cceca0ec4cb076730", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7248efd98d28eaf518caee2cceca0ec4cb076730"}], "stats": {"total": 51, "additions": 36, "deletions": 15}, "files": [{"sha": "6cb9ff4373296d194e7f5f9903b05823b0a0f6c0", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd7f563b5358d34b592e9d630ad770c3ec15c2/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd7f563b5358d34b592e9d630ad770c3ec15c2/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=06bd7f563b5358d34b592e9d630ad770c3ec15c2", "patch": "@@ -1,3 +1,9 @@\n+2009-11-12  Rafael Avila de Espindola  <espindola@google.com>\n+\n+\t* lang.opt (fresolution): Renamed from resolution.\n+\t* lto-lang.c (lto_handle_option): Handle new option name.\n+\t* lto.c (lto_resolution_read): Add more checks. Discard rest of line.\n+\n 2009-11-04  Richard Guenther  <rguenther@suse.de>\n             Rafael Avila de Espindola  <espindola@google.com>\n "}, {"sha": "a8b791663eb69605c451501a29ecf5380874fb2b", "filename": "gcc/lto/lang.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd7f563b5358d34b592e9d630ad770c3ec15c2/gcc%2Flto%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd7f563b5358d34b592e9d630ad770c3ec15c2/gcc%2Flto%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flang.opt?ref=06bd7f563b5358d34b592e9d630ad770c3ec15c2", "patch": "@@ -36,7 +36,7 @@ fwpa\n LTO Report Var(flag_wpa) Optimization\n Run the link-time optimizer in whole program analysis (WPA) mode.\n \n-resolution\n+fresolution\n LTO Separate\n The resolution file\n "}, {"sha": "486338f6b66d71c8b3c6ef3289513755abf06c6b", "filename": "gcc/lto/lto-lang.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd7f563b5358d34b592e9d630ad770c3ec15c2/gcc%2Flto%2Flto-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd7f563b5358d34b592e9d630ad770c3ec15c2/gcc%2Flto%2Flto-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-lang.c?ref=06bd7f563b5358d34b592e9d630ad770c3ec15c2", "patch": "@@ -622,7 +622,7 @@ lto_handle_option (size_t scode, const char *arg, int value ATTRIBUTE_UNUSED)\n \n   switch (code)\n     {\n-    case OPT_resolution:\n+    case OPT_fresolution:\n       resolution_file_name = arg;\n       result = 1;\n       break;"}, {"sha": "323f6b34006e00d4a63225230240f33aca6d12b0", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd7f563b5358d34b592e9d630ad770c3ec15c2/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd7f563b5358d34b592e9d630ad770c3ec15c2/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=06bd7f563b5358d34b592e9d630ad770c3ec15c2", "patch": "@@ -284,14 +284,17 @@ lto_resolution_read (FILE *resolution, const char *file_name)\n \n   for (i = 0; i < num_symbols; i++)\n     {\n+      int t;\n       unsigned index;\n       char r_str[27];\n       enum ld_plugin_symbol_resolution r;\n       unsigned int j;\n       unsigned int lto_resolution_str_len =\n \tsizeof (lto_resolution_str) / sizeof (char *);\n \n-      fscanf (resolution, \"%u %26s\", &index, r_str);\n+      t = fscanf (resolution, \"%u %26s %*[^\\n]\\n\", &index, r_str);\n+      if (t != 2)\n+        internal_error (\"Invalid line in the resolution file.\");\n       if (index > max_index)\n \tmax_index = index;\n \n@@ -303,9 +306,8 @@ lto_resolution_read (FILE *resolution, const char *file_name)\n \t      break;\n \t    }\n \t}\n-      if (j >= lto_resolution_str_len)\n-\tinternal_error (\"tried to read past the end of the linker resolution \"\n-\t\t\t\"file\");\n+      if (j == lto_resolution_str_len)\n+\tinternal_error (\"Invalid resolution in the resolution file.\");\n \n       VEC_safe_grow_cleared (ld_plugin_symbol_resolution_t, heap, ret,\n \t\t\t     index + 1);"}, {"sha": "d95cf05d9d00abca3b3a3cb0476f45db33547558", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd7f563b5358d34b592e9d630ad770c3ec15c2/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd7f563b5358d34b592e9d630ad770c3ec15c2/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=06bd7f563b5358d34b592e9d630ad770c3ec15c2", "patch": "@@ -1,3 +1,12 @@\n+2009-11-12  Rafael Avila de Espindola  <espindola@google.com>\n+\n+\t* lto-plugin.c (write_resolution): Assume resolution_file is set.\n+\tPrint the symbol name.\n+\t(all_symbols_read_handler): Create a resolution file.\n+\tPass it to gcc.\n+\t(cleanup_handler): Remove the resolution file.\n+\t(process_option): Drop the -resolution option.\n+\n 2009-11-05  Rafael Avila de Espindola  <espindola@google.com>\n \n \t* lto-plugin.c (temp_obj_dir_name): Remove."}, {"sha": "8cbafbc46cd364c50c27d672d8efa3f6c85d6021", "filename": "lto-plugin/lto-plugin.c", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bd7f563b5358d34b592e9d630ad770c3ec15c2/lto-plugin%2Flto-plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bd7f563b5358d34b592e9d630ad770c3ec15c2/lto-plugin%2Flto-plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Flto-plugin.c?ref=06bd7f563b5358d34b592e9d630ad770c3ec15c2", "patch": "@@ -310,9 +310,6 @@ write_resolution (void)\n   unsigned int i;\n   FILE *f;\n \n-  if (!resolution_file)\n-    return;\n-\n   f = fopen (resolution_file, \"w\");\n   check (f, LDPL_FATAL, \"could not open file\");\n \n@@ -334,7 +331,7 @@ write_resolution (void)\n \t{\n \t  uint32_t slot = symtab->slots[j];\n \t  unsigned int resolution = syms[j].resolution;\n-\t  fprintf (f, \"%d %s\\n\", slot, lto_resolution_str[resolution]);\n+\t  fprintf (f, \"%d %s %s\\n\", slot, lto_resolution_str[resolution], syms[j].name);\n \t}\n     }\n   fclose (f);\n@@ -452,7 +449,7 @@ static enum ld_plugin_status\n all_symbols_read_handler (void)\n {\n   unsigned i;\n-  unsigned num_lto_args = num_claimed_files + lto_wrapper_num_args + 1;\n+  unsigned num_lto_args = num_claimed_files + lto_wrapper_num_args + 2 + 1;\n   char **lto_argv;\n   const char **lto_arg_ptr;\n   if (num_claimed_files == 0)\n@@ -468,13 +465,18 @@ all_symbols_read_handler (void)\n   lto_arg_ptr = (const char **) lto_argv;\n   assert (lto_wrapper_argv);\n \n+  resolution_file = make_temp_file (\"\");\n+\n   write_resolution ();\n \n   free_1 ();\n \n   for (i = 0; i < lto_wrapper_num_args; i++)\n     *lto_arg_ptr++ = lto_wrapper_argv[i];\n \n+  *lto_arg_ptr++ = \"-fresolution\";\n+  *lto_arg_ptr++ = resolution_file;\n+\n   for (i = 0; i < num_claimed_files; i++)\n     {\n       struct plugin_file_info *info = &claimed_files[i];\n@@ -522,6 +524,12 @@ cleanup_handler (void)\n       check (t == 0, LDPL_FATAL, \"could not unlink arguments file\");\n     }\n \n+  if (resolution_file)\n+    {\n+      t = unlink (resolution_file);\n+      check (t == 0, LDPL_FATAL, \"could not unlink resolution file\");\n+    }\n+\n   free_2 ();\n   return LDPS_OK;\n }\n@@ -613,10 +621,6 @@ process_option (const char *option)\n     debug = 1;\n   else if (strcmp (option, \"-nop\") == 0)\n     nop = 1;\n-  else if (!strncmp (option, \"-resolution=\", strlen(\"-resolution=\")))\n-    {\n-      resolution_file = strdup (option + strlen(\"-resolution=\"));\n-    }\n   else if (!strncmp (option, \"-pass-through=\", strlen(\"-pass-through=\")))\n     {\n       num_pass_through_items++;"}]}