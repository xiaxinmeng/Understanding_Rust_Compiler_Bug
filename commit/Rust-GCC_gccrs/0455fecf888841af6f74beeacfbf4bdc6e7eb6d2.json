{"sha": "0455fecf888841af6f74beeacfbf4bdc6e7eb6d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ1NWZlY2Y4ODg4NDFhZjZmNzRiZWVhY2ZiZjRiZGM2ZTdlYjZkMg==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2005-03-31T18:11:14Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2005-03-31T18:11:14Z"}, "message": "sourcebuild.texi (Test Directives): Describe cleanup-* procs.\n\ngcc:\n\t* doc/sourcebuild.texi (Test Directives): Describe cleanup-* procs.\ngcc/testsuite:\n\t* lib/gcc-dg.exp (remove-build-file): New.\n\t(cleanup-coverage-files, cleanup-repo-files, cleanup-rtl-dump,\n\tcleanup-tree-dump, cleanup-saved-temps): New.\n\nFrom-SVN: r97337", "tree": {"sha": "decdfeb54966a6b9a4a28cddd3b5b4bbbe956b0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/decdfeb54966a6b9a4a28cddd3b5b4bbbe956b0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0455fecf888841af6f74beeacfbf4bdc6e7eb6d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0455fecf888841af6f74beeacfbf4bdc6e7eb6d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0455fecf888841af6f74beeacfbf4bdc6e7eb6d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0455fecf888841af6f74beeacfbf4bdc6e7eb6d2/comments", "author": null, "committer": null, "parents": [{"sha": "dda0439880fee40a90309ed74446c29a3ca08a05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dda0439880fee40a90309ed74446c29a3ca08a05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dda0439880fee40a90309ed74446c29a3ca08a05"}], "stats": {"total": 129, "additions": 129, "deletions": 0}, "files": [{"sha": "8a513172952e67572de402ad36b4996ddaa457c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0455fecf888841af6f74beeacfbf4bdc6e7eb6d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0455fecf888841af6f74beeacfbf4bdc6e7eb6d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0455fecf888841af6f74beeacfbf4bdc6e7eb6d2", "patch": "@@ -1,3 +1,7 @@\n+2005-03-31  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* doc/sourcebuild.texi (Test Directives): Describe cleanup-* procs.\n+\n 2005-03-31  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* tree-ssa-alias.c: Follow spelling conventions."}, {"sha": "b7d5b4de9af2ba2f6cc996d792f0a7fb3fd8c100", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0455fecf888841af6f74beeacfbf4bdc6e7eb6d2/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0455fecf888841af6f74beeacfbf4bdc6e7eb6d2/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=0455fecf888841af6f74beeacfbf4bdc6e7eb6d2", "patch": "@@ -1059,6 +1059,22 @@ The GCC testsuite defines the following directives to be used within\n @code{dg-final}.\n \n @table @code\n+@item cleanup-coverage-files\n+Removes coverage data files generated for this test.\n+\n+@item cleanup-repo-files\n+Removes files generated for this test for @option{-frepo}.\n+\n+@item cleanup-rtl-dump @var{suffix}\n+Removes RTL dump files generated for this test.\n+\n+@item cleanup-tree-dump @var{suffix}\n+Removes tree dump files matching @var{suffix} which were generated for\n+this test.\n+\n+@item cleanup-saved-temps\n+Removes files for the current test which were kept for @option{--save-temps}.\n+\n @item scan-file @var{filename} @var{regexp} [@{ target/xfail @var{selector} @}]\n Passes if @var{regexp} matches text in @var{filename}.\n "}, {"sha": "a77475a2dd8e05b8c0adac62d842361c9ca5a386", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0455fecf888841af6f74beeacfbf4bdc6e7eb6d2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0455fecf888841af6f74beeacfbf4bdc6e7eb6d2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0455fecf888841af6f74beeacfbf4bdc6e7eb6d2", "patch": "@@ -1,3 +1,9 @@\n+2005-03-31  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* lib/gcc-dg.exp (remove-build-file): New.\n+\t(cleanup-coverage-files, cleanup-repo-files, cleanup-rtl-dump,\n+\tcleanup-tree-dump, cleanup-saved-temps): New.\n+\n 2005-03-31  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/19203, DR 214"}, {"sha": "bcc803c57f550de76adc94ad2f1041b1dc15576e", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0455fecf888841af6f74beeacfbf4bdc6e7eb6d2/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0455fecf888841af6f74beeacfbf4bdc6e7eb6d2/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=0455fecf888841af6f74beeacfbf4bdc6e7eb6d2", "patch": "@@ -295,6 +295,109 @@ proc dg-prune-output { args } {\n     lappend additional_prunes [lindex $args 1]\n }\n \n+# Remove files matching the pattern from the build machine.\n+proc remove-build-file { pat } {\n+    verbose \"remove-build-file `$pat'\" 2\n+    set file_list \"[glob -nocomplain $pat]\"\n+    verbose \"remove-build-file `$file_list'\" 2\n+    foreach output_file $file_list {\n+\tremote_file build delete $output_file\n+    }\n+}\n+\n+# Remove compiler-generated coverage files for the current test.\n+proc cleanup-coverage-files { } {\n+    # This assumes that we are two frames down from dg-test, and that\n+    # it still stores the filename of the testcase in a local variable \"name\".\n+    # A cleaner solution would require a new DejaGnu release.\n+    upvar 2 name testcase\n+    remove-build-file \"[file rootname [file tail $testcase]].gc??\"\n+\n+    # Clean up coverage files for additional source files.\n+    if [info exists additional_sources] {\n+\tforeach srcfile $additional_sources {\n+\t    remove-build-file \"[file rootname [file tail $srcfile]].gc??\"\n+\t}\n+    }\n+}\n+\n+# Remove compiler-generated files from -repo for the current test.\n+proc cleanup-repo-files { } {\n+    # This assumes that we are two frames down from dg-test, and that\n+    # it still stores the filename of the testcase in a local variable \"name\".\n+    # A cleaner solution would require a new DejaGnu release.\n+    upvar 2 name testcase\n+    remove-build-file \"[file rootname [file tail $testcase]].o\"\n+    remove-build-file \"[file rootname [file tail $testcase]].rpo\"\n+\n+    # Clean up files for additional source files.\n+    if [info exists additional_sources] {\n+\tforeach srcfile $additional_sources {\n+\t    remove-build-file \"[file rootname [file tail $srcfile]].o\"\n+\t    remove-build-file \"[file rootname [file tail $srcfile]].rpo\"\n+\t}\n+    }\n+}\n+\n+# Remove compiler-generated RTL dump files for the current test.\n+#\n+# SUFFIX is the filename suffix pattern.\n+proc cleanup-rtl-dump { suffix } {\n+    # This assumes that we are two frames down from dg-test, and that\n+    # it still stores the filename of the testcase in a local variable \"name\".\n+    # A cleaner solution would require a new DejaGnu release.\n+    upvar 2 name testcase\n+    remove-build-file \"[file tail $testcase].??.$suffix\"\n+\n+    # Clean up dump files for additional source files.\n+    if [info exists additional_sources] {\n+\tforeach srcfile $additional_sources {\n+\t    remove-build-file \"[file tail $srcfile].??.$suffix\"\n+\t}\n+    }\n+}\n+\n+# Remove a specific tree dump file for the current test.\n+#\n+# SUFFIX is the file suffix pattern.\n+proc cleanup-tree-dump { suffix } {\n+    # This assumes that we are two frames down from dg-test, and that\n+    # it still stores the filename of the testcase in a local variable \"name\".\n+    # A cleaner solution would require a new dejagnu release.\n+    upvar 2 name testcase\n+    remove-build-file \"[file tail $testcase].t??.$suffix\"\n+\n+    # Clean up dump files for additional source files.\n+    if [info exists additional_sources] {\n+\tforeach srcfile $additional_sources {\n+\t    remove-build-file \"[file tail $srcfile].t??.$suffix\"\n+\t}\n+    }\n+}\n+\n+# Remove files kept by --save-temps for the current test.\n+#\n+# Currently this is only .i files, but more can be added if there are\n+# tests generating them.\n+proc cleanup-saved-temps { } {\n+    global additional_sources\n+\n+    # This assumes that we are two frames down from dg-test, and that\n+    # it still stores the filename of the testcase in a local variable \"name\".\n+    # A cleaner solution would require a new DejaGnu release.\n+    upvar 2 name testcase\n+    remove-build-file \"[file rootname [file tail $testcase]].ii\"\n+    remove-build-file \"[file rootname [file tail $testcase]].i\"\n+\n+    # Clean up saved temp files for additional source files.\n+    if [info exists additional_sources] {\n+\tforeach srcfile $additional_sources {\n+            remove-build-file \"[file rootname [file tail $srcfile]].ii\"\n+            remove-build-file \"[file rootname [file tail $srcfile]].i\"\n+\t}\n+    }\n+}\n+\n # We need to make sure that additional_* are cleared out after every\n # test.  It is not enough to clear them out *before* the next test run\n # because gcc-target-compile gets run directly from some .exp files"}]}