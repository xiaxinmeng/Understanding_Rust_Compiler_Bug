{"sha": "5493ee7145a05dc32bc6d802da2f8237293012d3", "node_id": "C_kwDOANBUbNoAKDU0OTNlZTcxNDVhMDVkYzMyYmM2ZDgwMmRhMmY4MjM3MjkzMDEyZDM", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2022-07-12T11:52:24Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2022-07-12T11:52:24Z"}, "message": "i386 testsuite: cope with --enable-default-pie\n\nRunning the testsuite on a toolchain build with --enable-default-pie\nhad some unexpected fails.  Adjust the tests to tolerate the effects\nof this configuration option on x86_64-linux-gnu and i686-linux-gnu.\n\nThe cet-sjlj* tests get offsets before the base symbol name with PIC\nor PIE.  A single pattern covering both alternatives somehow triggered\ntwo matches rather than the single expected match, thus my narrowing\nthe '.*' to not skip line breaks, but that was not enough.  Still\npuzzled, I separated the patterns into nonpic and !nonpic, and we get\nthe expected matchcounts this way.\n\nTests for -mfentry require an mfentry effective target, which excludes\n32-bit x86 with PIC or PIE enabled, that's why the patterns that\naccept the PIC sym@RELOC annotations only cover x86_64.  mvc7 is\ngetting regexps extended to cover PIC reloc annotatios and all of the\nnamed variants, and tightened to avoid unexpected '.' matches.\n\nThe pr24414 test stores in an unadorned named variable in an old-style\nasm statement, to check that such asm statements get an implicit\nmemory clobber.  Rewriting the asm into a GCC extended asm with the\nvariable as an output would remove the regression it checks against.\nProblem is, the literal reference to the variable is not PIC, so it's\nrejected by the elf64 linker with an error, and flagged with a warning\nby the elf32 one.  We could presumably make the variable references\nPIC-friendly with #ifdefs, but I doubt that's worth the trouble.  I'm\njust arranging for the test to be skipped if PIC or PIE are enabled by\ndefault.\n\n\nfor  gcc/testsuite/ChangeLog\n\n\t* gcc.target/i386/cet-sjlj-6a.c: Cope with --enable-default-pie.\n\t* gcc.target/i386/cet-sjlj-6b.c: Likewise.\n\t* gcc.target/i386/fentryname3.c: Likewise.\n\t* gcc.target/i386/mvc7.c: Likewise.\n\t* gcc.target/i386/pr24414.c: Likewise.\n\t* gcc.target/i386/pr93492-3.c: Likewise.\n\t* gcc.target/i386/pr93492-5.c: Likewise.\n\t* gcc.target/i386/pr98482-1.c: Likewise.", "tree": {"sha": "591c44830b5aabfa1fe908f9857480e852424d3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/591c44830b5aabfa1fe908f9857480e852424d3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5493ee7145a05dc32bc6d802da2f8237293012d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5493ee7145a05dc32bc6d802da2f8237293012d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5493ee7145a05dc32bc6d802da2f8237293012d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5493ee7145a05dc32bc6d802da2f8237293012d3/comments", "author": null, "committer": null, "parents": [{"sha": "220bef460153a0296e947f16492d35e67b1b5b22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/220bef460153a0296e947f16492d35e67b1b5b22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/220bef460153a0296e947f16492d35e67b1b5b22"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "c3d0eb929424d116bbc7575ba897da92b7aae403", "filename": "gcc/testsuite/gcc.target/i386/cet-sjlj-6a.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5493ee7145a05dc32bc6d802da2f8237293012d3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcet-sjlj-6a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5493ee7145a05dc32bc6d802da2f8237293012d3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcet-sjlj-6a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcet-sjlj-6a.c?ref=5493ee7145a05dc32bc6d802da2f8237293012d3", "patch": "@@ -2,8 +2,10 @@\n /* { dg-require-effective-target maybe_x32 } */\n /* { dg-options \"-O -maddress-mode=short -fcf-protection -mx32\" } */\n /* { dg-final { scan-assembler-times \"endbr64\" 2 } } */\n-/* { dg-final { scan-assembler-times \"movq\\t.*buf\\\\+8\" 1 } } */\n-/* { dg-final { scan-assembler-times \"subq\\tbuf\\\\+8\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movq\\t\\[^\\n\\]*buf\\\\+8\" 1 { target nonpic } } } */\n+/* { dg-final { scan-assembler-times \"movq\\t\\[^\\n\\]*8\\\\+buf\" 1 { target { ! nonpic } } } } */\n+/* { dg-final { scan-assembler-times \"subq\\tbuf\\\\+8\" 1 { target nonpic } } } */\n+/* { dg-final { scan-assembler-times \"subq\\t8\\\\+buf\" 1 { target { ! nonpic } } } } */\n /* { dg-final { scan-assembler-times \"shrl\\t\\\\\\$3,\" 1 } } */\n /* { dg-final { scan-assembler-times \"rdsspq\" 2 } } */\n /* { dg-final { scan-assembler-times \"incsspq\" 2 } } */"}, {"sha": "4c52685d7d1e1f87d2bacd52567243a3c576a72a", "filename": "gcc/testsuite/gcc.target/i386/cet-sjlj-6b.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5493ee7145a05dc32bc6d802da2f8237293012d3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcet-sjlj-6b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5493ee7145a05dc32bc6d802da2f8237293012d3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcet-sjlj-6b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcet-sjlj-6b.c?ref=5493ee7145a05dc32bc6d802da2f8237293012d3", "patch": "@@ -2,8 +2,10 @@\n /* { dg-require-effective-target maybe_x32 } */\n /* { dg-options \"-O -maddress-mode=long -fcf-protection -mx32\" } */\n /* { dg-final { scan-assembler-times \"endbr64\" 2 } } */\n-/* { dg-final { scan-assembler-times \"movq\\t.*buf\\\\+16\" 1 } } */\n-/* { dg-final { scan-assembler-times \"subq\\tbuf\\\\+16\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movq\\t\\[^\\n\\]*buf\\\\+16\" 1 { target nonpic } } } */\n+/* { dg-final { scan-assembler-times \"movq\\t\\[^\\n\\]*16\\\\+buf\" 1 { target { ! nonpic } } } } */\n+/* { dg-final { scan-assembler-times \"subq\\tbuf\\\\+16\" 1 { target nonpic } } } */\n+/* { dg-final { scan-assembler-times \"subq\\t16\\\\+buf\" 1 { target { ! nonpic } } } } */\n /* { dg-final { scan-assembler-times \"shrl\\t\\\\\\$3,\" 1 } } */\n /* { dg-final { scan-assembler-times \"rdsspq\" 2 } } */\n /* { dg-final { scan-assembler-times \"incsspq\" 2 } } */"}, {"sha": "c14a4ebb0cf576087093ee1f11ade2ab6560e573", "filename": "gcc/testsuite/gcc.target/i386/fentryname3.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5493ee7145a05dc32bc6d802da2f8237293012d3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffentryname3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5493ee7145a05dc32bc6d802da2f8237293012d3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffentryname3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffentryname3.c?ref=5493ee7145a05dc32bc6d802da2f8237293012d3", "patch": "@@ -3,7 +3,8 @@\n /* { dg-require-profiling \"-pg\" } */\n /* { dg-options \"-pg -mfentry\"  } */\n /* { dg-final { scan-assembler \"section.*__entry_loc\" } } */\n-/* { dg-final { scan-assembler \"0x0f, 0x1f, 0x44, 0x00, 0x00\" } } */\n+/* { dg-final { scan-assembler \"0x0f, 0x1f, 0x44, 0x00, 0x00\" { target nonpic } } } */\n+/* { dg-final { scan-assembler \"call\\t\\\\*nop@GOTPCREL\" { target { ! nonpic } } } } */\n /* { dg-final { scan-assembler-not \"__fentry__\" } } */\n \n __attribute__((fentry_name(\"nop\"), fentry_section(\"__entry_loc\")))"}, {"sha": "872cd5975ad347a596efdd0a3290fe05ae842949", "filename": "gcc/testsuite/gcc.target/i386/mvc7.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5493ee7145a05dc32bc6d802da2f8237293012d3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmvc7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5493ee7145a05dc32bc6d802da2f8237293012d3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmvc7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmvc7.c?ref=5493ee7145a05dc32bc6d802da2f8237293012d3", "patch": "@@ -2,12 +2,12 @@\n /* { dg-require-ifunc \"\" } */\n \n /* Verify that foo clones are not numbered.  */\n-/* { dg-final { scan-assembler \"foo.resolver,\" } } */\n-/* { dg-final { scan-assembler \"foo.default,\" } } */\n-/* { dg-final { scan-assembler \"foo.avx,\" } } */\n-\n-/* { dg-final { scan-assembler \"slm\" } } */\n-/* { dg-final { scan-assembler \"foo,foo.resolver\" } } */\n+/* { dg-final { scan-assembler \"foo\\.resolver,\" } } */\n+/* { dg-final { scan-assembler \"foo\\.default\\[,@\\]\" } } */\n+/* { dg-final { scan-assembler \"foo\\.avx\\[,@\\]\" } } */\n+/* { dg-final { scan-assembler \"foo\\.arch_core_avx2\\[,@\\]\" } } */\n+/* { dg-final { scan-assembler \"foo\\.arch_slm\\[,@\\]\" } } */\n+/* { dg-final { scan-assembler \"foo,foo\\.resolver\" } } */\n \n __attribute__((target_clones(\"avx\",\"default\",\"arch=slm\",\"arch=core-avx2\")))\n int foo ();"}, {"sha": "6f77fa93cf0ac16fde442155e2bf9da5be5d2f2e", "filename": "gcc/testsuite/gcc.target/i386/pr24414.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5493ee7145a05dc32bc6d802da2f8237293012d3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr24414.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5493ee7145a05dc32bc6d802da2f8237293012d3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr24414.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr24414.c?ref=5493ee7145a05dc32bc6d802da2f8237293012d3", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do run } */\n+/* { dg-require-effective-target nonpic } */\n /* { dg-options \"-O2\" } */\n /* { dg-skip-if \"asm insert mismatches ABI for Darwin\" { *-*-darwin* } } */\n int test;"}, {"sha": "a625c927f4f0bb5e0e3b27941fe514e3cb28875f", "filename": "gcc/testsuite/gcc.target/i386/pr93492-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5493ee7145a05dc32bc6d802da2f8237293012d3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr93492-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5493ee7145a05dc32bc6d802da2f8237293012d3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr93492-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr93492-3.c?ref=5493ee7145a05dc32bc6d802da2f8237293012d3", "patch": "@@ -10,4 +10,4 @@ f10_endbr (void)\n {\n }\n \n-/* { dg-final { scan-assembler \"\\t\\.cfi_startproc\\n\\tendbr(32|64)\\n.*\\.LPFE1:\\n\\tnop\\n1:\\tcall\\t__fentry__\\n\\tret\\n\" } } */\n+/* { dg-final { scan-assembler \"\\t\\.cfi_startproc\\n\\tendbr(32|64)\\n.*\\.LPFE1:\\n\\tnop\\n1:\\tcall\\t\\[^\\n\\]*__fentry__\\[^\\n\\]*\\n\\tret\\n\" } } */"}, {"sha": "5aebb3847f5bebbabb6bf41a8d7419bc068c9bc2", "filename": "gcc/testsuite/gcc.target/i386/pr93492-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5493ee7145a05dc32bc6d802da2f8237293012d3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr93492-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5493ee7145a05dc32bc6d802da2f8237293012d3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr93492-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr93492-5.c?ref=5493ee7145a05dc32bc6d802da2f8237293012d3", "patch": "@@ -8,4 +8,4 @@ foo (void)\n {\n }\n \n-/* { dg-final { scan-assembler \"\\t\\.cfi_startproc\\n.*\\.LPFE1:\\n\\tnop\\n1:\\tcall\\t__fentry__\\n\\tret\\n\" } } */\n+/* { dg-final { scan-assembler \"\\t\\.cfi_startproc\\n.*\\.LPFE1:\\n\\tnop\\n1:\\tcall\\t\\[^\\n\\]*__fentry__\\[^\\n\\]*\\n\\tret\\n\" } } */"}, {"sha": "b1d9619275e72c0d6d376887b0aca87cc2e82ff0", "filename": "gcc/testsuite/gcc.target/i386/pr98482-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5493ee7145a05dc32bc6d802da2f8237293012d3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98482-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5493ee7145a05dc32bc6d802da2f8237293012d3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98482-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98482-1.c?ref=5493ee7145a05dc32bc6d802da2f8237293012d3", "patch": "@@ -1,7 +1,8 @@\n /* { dg-do compile { target { *-*-linux* && lp64 } } } */\n /* { dg-require-effective-target mfentry } */\n /* { dg-options \"-fprofile -mfentry -O2 -mcmodel=large\" } */\n-/* { dg-final { scan-assembler \"movabsq\\t\\\\\\$__fentry__, %r10\\n\\tcall\\t\\\\*%r10\" } } */\n+/* { dg-final { scan-assembler \"movabsq\\t\\\\\\$__fentry__, %r10\\n\\tcall\\t\\\\*%r10\" { target nonpic } } } */\n+/* { dg-final { scan-assembler \"movabsq\\t\\\\\\$__fentry__@PLTOFF, %r11\\n\\taddq\\t%r11, %r10\\n\\tcall\\t\\\\*%r10\" { target { ! nonpic } } } } */\n \n void\n func (void)"}]}