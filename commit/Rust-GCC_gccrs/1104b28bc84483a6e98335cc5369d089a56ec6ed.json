{"sha": "1104b28bc84483a6e98335cc5369d089a56ec6ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEwNGIyOGJjODQ0ODNhNmU5ODMzNWNjNTM2OWQwODlhNTZlYzZlZA==", "commit": {"author": {"name": "Dirk Mueller", "email": "dmueller@suse.com", "date": "2006-02-07T19:41:14Z"}, "committer": {"name": "Dirk Mueller", "email": "mueller@gcc.gnu.org", "date": "2006-02-07T19:41:14Z"}, "message": "c.opt: C++ frontend supports -Wdiv-by-zero.\n\n2006-02-07  Dirk Mueller <dmueller@suse.com>\n\n        * c.opt: C++ frontend supports -Wdiv-by-zero.\n        * c-opts.c (c_common_handle_option): Remove dead case.\n\n        * typeck.c (build_binary_op): Annotate div-by-zero\n        warnings to make -Wno-div-by-zero have an effect.\n\n        g++.dg/warn/Wdiv-by-zero.C: New test.\n        g++.dg/warn/Wno-div-by-zero.C: New.\n\nFrom-SVN: r110712", "tree": {"sha": "73d1c3e94726a3156bfd94997fc2db501ff46a43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73d1c3e94726a3156bfd94997fc2db501ff46a43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1104b28bc84483a6e98335cc5369d089a56ec6ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1104b28bc84483a6e98335cc5369d089a56ec6ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1104b28bc84483a6e98335cc5369d089a56ec6ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1104b28bc84483a6e98335cc5369d089a56ec6ed/comments", "author": {"login": "dirkmueller", "id": 1029152, "node_id": "MDQ6VXNlcjEwMjkxNTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1029152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dirkmueller", "html_url": "https://github.com/dirkmueller", "followers_url": "https://api.github.com/users/dirkmueller/followers", "following_url": "https://api.github.com/users/dirkmueller/following{/other_user}", "gists_url": "https://api.github.com/users/dirkmueller/gists{/gist_id}", "starred_url": "https://api.github.com/users/dirkmueller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dirkmueller/subscriptions", "organizations_url": "https://api.github.com/users/dirkmueller/orgs", "repos_url": "https://api.github.com/users/dirkmueller/repos", "events_url": "https://api.github.com/users/dirkmueller/events{/privacy}", "received_events_url": "https://api.github.com/users/dirkmueller/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7135d758bcdd76d68aa660f9082969f3443e652a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7135d758bcdd76d68aa660f9082969f3443e652a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7135d758bcdd76d68aa660f9082969f3443e652a"}], "stats": {"total": 44, "additions": 35, "deletions": 9}, "files": [{"sha": "4946e3b05c84709f18d4516e1f1d6d5b30d12f2d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1104b28bc84483a6e98335cc5369d089a56ec6ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1104b28bc84483a6e98335cc5369d089a56ec6ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1104b28bc84483a6e98335cc5369d089a56ec6ed", "patch": "@@ -1,3 +1,8 @@\n+2006-02-07  Dirk Mueller  <dmueller@suse.com>\n+\n+\t* c.opt: C++ frontend supports -Wdiv-by-zero.\n+\t* c-opts.c (c_common_handle_option): Remove dead case.\n+\n 2006-02-07  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* configure.ac (TLS assembler check): Do not enable TLS by"}, {"sha": "34fc6b9b0adda0a7182fd7d4eb449c07017d5f05", "filename": "gcc/c-opts.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1104b28bc84483a6e98335cc5369d089a56ec6ed/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1104b28bc84483a6e98335cc5369d089a56ec6ed/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=1104b28bc84483a6e98335cc5369d089a56ec6ed", "patch": "@@ -431,10 +431,6 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n       cpp_opts->warn_deprecated = value;\n       break;\n \n-    case OPT_Wdiv_by_zero:\n-      warn_div_by_zero = value;\n-      break;\n-\n     case OPT_Wendif_labels:\n       cpp_opts->warn_endif_labels = value;\n       break;"}, {"sha": "a841d5281326052c1d3f565a178079d5231bfecf", "filename": "gcc/c.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1104b28bc84483a6e98335cc5369d089a56ec6ed/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1104b28bc84483a6e98335cc5369d089a56ec6ed/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=1104b28bc84483a6e98335cc5369d089a56ec6ed", "patch": "@@ -166,7 +166,7 @@ C++ ObjC++ Var(warn_deprecated) Init(1)\n Warn about deprecated compiler features\n \n Wdiv-by-zero\n-C ObjC Var(warn_div_by_zero) Init(1)\n+C ObjC C++ Var(warn_div_by_zero) Init(1)\n Warn about compile-time integer division by zero\n \n Weffc++"}, {"sha": "8b0e9fc444b616ce19a9ec26ee2248a990dafc33", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1104b28bc84483a6e98335cc5369d089a56ec6ed/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1104b28bc84483a6e98335cc5369d089a56ec6ed/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1104b28bc84483a6e98335cc5369d089a56ec6ed", "patch": "@@ -1,3 +1,8 @@\n+2006-02-07  Dirk Mueller  <dmueller@suse.com>\n+\n+\t* typeck.c (build_binary_op): Annotate div-by-zero\n+\twarnings to make -Wno-div-by-zero have an effect.\n+\n 2006-02-07  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/9737"}, {"sha": "adac22716fb901330a6658e5bfd845966658073e", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1104b28bc84483a6e98335cc5369d089a56ec6ed/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1104b28bc84483a6e98335cc5369d089a56ec6ed/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=1104b28bc84483a6e98335cc5369d089a56ec6ed", "patch": "@@ -2954,9 +2954,9 @@ build_binary_op (enum tree_code code, tree orig_op0, tree orig_op1,\n \t      || code1 == COMPLEX_TYPE || code1 == VECTOR_TYPE))\n \t{\n \t  if (TREE_CODE (op1) == INTEGER_CST && integer_zerop (op1))\n-\t    warning (0, \"division by zero in %<%E / 0%>\", op0);\n+\t    warning (OPT_Wdiv_by_zero, \"division by zero in %<%E / 0%>\", op0);\n \t  else if (TREE_CODE (op1) == REAL_CST && real_zerop (op1))\n-\t    warning (0, \"division by zero in %<%E / 0.%>\", op0);\n+\t    warning (OPT_Wdiv_by_zero, \"division by zero in %<%E / 0.%>\", op0);\n \n \t  if (code0 == COMPLEX_TYPE || code0 == VECTOR_TYPE)\n \t    code0 = TREE_CODE (TREE_TYPE (TREE_TYPE (op0)));\n@@ -2991,9 +2991,9 @@ build_binary_op (enum tree_code code, tree orig_op0, tree orig_op1,\n     case TRUNC_MOD_EXPR:\n     case FLOOR_MOD_EXPR:\n       if (code1 == INTEGER_TYPE && integer_zerop (op1))\n-\twarning (0, \"division by zero in %<%E %% 0%>\", op0);\n+\twarning (OPT_Wdiv_by_zero, \"division by zero in %<%E %% 0%>\", op0);\n       else if (code1 == REAL_TYPE && real_zerop (op1))\n-\twarning (0, \"division by zero in %<%E %% 0.%>\", op0);\n+\twarning (OPT_Wdiv_by_zero, \"division by zero in %<%E %% 0.%>\", op0);\n \n       if (code0 == INTEGER_TYPE && code1 == INTEGER_TYPE)\n \t{"}, {"sha": "e9fb7d1b6166af660ab0932089a1ce81acd95e14", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1104b28bc84483a6e98335cc5369d089a56ec6ed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1104b28bc84483a6e98335cc5369d089a56ec6ed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1104b28bc84483a6e98335cc5369d089a56ec6ed", "patch": "@@ -1,3 +1,8 @@\n+2006-02-07  Dirk Mueller  <dmueller@suse.com>\n+\n+\tg++.dg/warn/Wdiv-by-zero.C: New test.\n+\tg++.dg/warn/Wno-div-by-zero.C: New.\n+\n 2006-02-07  Jeff Law  <law@redhat.com>\n \n \t* gcc.dg/tree-ssa/vrp01.c: Update dumpfile names now that we have"}, {"sha": "7dc77667c225ee5181c15a3cbd51efa2f1474a22", "filename": "gcc/testsuite/g++.dg/warn/Wdiv-by-zero.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1104b28bc84483a6e98335cc5369d089a56ec6ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdiv-by-zero.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1104b28bc84483a6e98335cc5369d089a56ec6ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdiv-by-zero.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdiv-by-zero.C?ref=1104b28bc84483a6e98335cc5369d089a56ec6ed", "patch": "@@ -0,0 +1,7 @@\n+// test that division by zero warnings are enabled by default\n+int breakme()\n+{\n+  int x = 0;\n+  x /= 0;          // { dg-warning \"division by\" }\n+  return x;\n+}"}, {"sha": "937628ee924ccdb9c8086c2a1f33db07ebe821f6", "filename": "gcc/testsuite/g++.dg/warn/Wno-div-by-zero.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1104b28bc84483a6e98335cc5369d089a56ec6ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWno-div-by-zero.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1104b28bc84483a6e98335cc5369d089a56ec6ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWno-div-by-zero.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWno-div-by-zero.C?ref=1104b28bc84483a6e98335cc5369d089a56ec6ed", "patch": "@@ -0,0 +1,8 @@\n+// { dg-options \"-Wno-div-by-zero\" }\n+\n+int breakme()\n+{\n+  int x = 0;\n+  x /= 0;\n+  return x;\n+}"}]}