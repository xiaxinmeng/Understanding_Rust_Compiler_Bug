{"sha": "4eca178ac8c3eaad61e3a8f8401b1e1984153387", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVjYTE3OGFjOGMzZWFhZDYxZTNhOGY4NDAxYjFlMTk4NDE1MzM4Nw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2013-12-14T17:01:49Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2013-12-14T17:01:49Z"}, "message": "Restore flag_pic in ix86_function_specific_restore\n\ngcc/\n\n\tPR target/59492\n\t* config/i386/i386.c (ix86_function_specific_restore): Don't\n\tchange -fPIC.\n\n2013-12-14   H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/59492\n\t* g++.dg/other/pr59492.C: New file.\n\nFrom-SVN: r205989", "tree": {"sha": "af14099aa95d8b3737297a8c9682d9d10e110831", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af14099aa95d8b3737297a8c9682d9d10e110831"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4eca178ac8c3eaad61e3a8f8401b1e1984153387", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eca178ac8c3eaad61e3a8f8401b1e1984153387", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eca178ac8c3eaad61e3a8f8401b1e1984153387", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eca178ac8c3eaad61e3a8f8401b1e1984153387/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "85098de7c68fa15928c4aa3e917c8ae13bf0781a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85098de7c68fa15928c4aa3e917c8ae13bf0781a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85098de7c68fa15928c4aa3e917c8ae13bf0781a"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "4c68beb1efc3b24528b918a6a7fb3370f2309bad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eca178ac8c3eaad61e3a8f8401b1e1984153387/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eca178ac8c3eaad61e3a8f8401b1e1984153387/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4eca178ac8c3eaad61e3a8f8401b1e1984153387", "patch": "@@ -1,3 +1,9 @@\n+2013-12-14   H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/59492\n+\t* config/i386/i386.c (ix86_function_specific_restore): Don't\n+\tchange -fPIC.\n+\n 2013-12-14  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* var-tracking.c (add_stores): Fix oversight in latest commit."}, {"sha": "ecf5e0b1bc001d30fbe27f2ae945dd4884f72a58", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eca178ac8c3eaad61e3a8f8401b1e1984153387/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eca178ac8c3eaad61e3a8f8401b1e1984153387/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=4eca178ac8c3eaad61e3a8f8401b1e1984153387", "patch": "@@ -4337,6 +4337,9 @@ ix86_function_specific_restore (struct gcc_options *opts,\n   unsigned int ix86_arch_mask;\n   int i;\n \n+  /* We don't change -fPIC.  */\n+  opts->x_flag_pic = flag_pic;\n+\n   ix86_arch = (enum processor_type) ptr->arch;\n   ix86_schedule = (enum attr_cpu) ptr->schedule;\n   ix86_tune = (enum processor_type) ptr->tune;"}, {"sha": "7820c932ddc60077d5c3740f52bd1100110af436", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eca178ac8c3eaad61e3a8f8401b1e1984153387/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eca178ac8c3eaad61e3a8f8401b1e1984153387/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4eca178ac8c3eaad61e3a8f8401b1e1984153387", "patch": "@@ -1,3 +1,8 @@\n+2013-12-14   H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/59492\n+\t* g++.dg/other/pr59492.C: New file.\n+\n 2013-12-14  Andreas Schwab  <schwab@linux-m68k.org>\n \n \t* g++.dg/cilk-plus/cilk-plus.exp: Fix last change."}, {"sha": "84bd25554f37f7af96963887c7247ec7150e7da0", "filename": "gcc/testsuite/g++.dg/other/pr59492.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eca178ac8c3eaad61e3a8f8401b1e1984153387/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr59492.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eca178ac8c3eaad61e3a8f8401b1e1984153387/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr59492.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr59492.C?ref=4eca178ac8c3eaad61e3a8f8401b1e1984153387", "patch": "@@ -0,0 +1,18 @@\n+// { dg-do assemble { target { { i?86-*-* x86_64-*-* } && fpic } } }\n+// { dg-options \"-mx32 -fPIC\" }\n+// { dg-require-ifunc \"\" }\n+// { dg-require-effective-target maybe_x32 }\n+\n+void\n+__throw_runtime_error(const char*) __attribute__((__noreturn__));\n+unsigned int\n+__attribute__ ((target(\"rdrnd\")))\n+__x86_rdrand(void)\n+{\n+  unsigned int retries = 100;\n+  unsigned int val;\n+  while (__builtin_ia32_rdrand32_step(&val) == 0)\n+    if (--retries == 0)\n+      __throw_runtime_error((\"random_device::__x86_rdrand(void)\"));\n+  return val;\n+}"}]}