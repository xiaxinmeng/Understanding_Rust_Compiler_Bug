{"sha": "ea094d1f239ecc2e057ccff9829dbee7c26f142f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEwOTRkMWYyMzllY2MyZTA1N2NjZmY5ODI5ZGJlZTdjMjZmMTQyZg==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2007-11-02T17:54:12Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2007-11-02T17:54:12Z"}, "message": "re PR testsuite/32076 (\"gcc.dg/tree-ssa/pr17141-1.c scan-tree-dump locp.*->i =\" is the same name twice)\n\n\tPR testsuite/32076\n\t* lib/scandump.exp (dump-suffix): New.\n\t(scan-dump, scan-dump-times, scan-dump-dem, scan-dump-dem-not):\n\tInclude dump suffix in pass/fail messages, put regexp in quotes.\n\nFrom-SVN: r129858", "tree": {"sha": "4fe6553e70140dde9e6a9fd380997a8df834fb2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fe6553e70140dde9e6a9fd380997a8df834fb2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea094d1f239ecc2e057ccff9829dbee7c26f142f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea094d1f239ecc2e057ccff9829dbee7c26f142f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea094d1f239ecc2e057ccff9829dbee7c26f142f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea094d1f239ecc2e057ccff9829dbee7c26f142f/comments", "author": null, "committer": null, "parents": [{"sha": "30972689348fa98ffa177ecb90eade06d3da5a5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30972689348fa98ffa177ecb90eade06d3da5a5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30972689348fa98ffa177ecb90eade06d3da5a5d"}], "stats": {"total": 39, "additions": 29, "deletions": 10}, "files": [{"sha": "514829c8fc80e891ca201de4ed23d012be0e0ec1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea094d1f239ecc2e057ccff9829dbee7c26f142f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea094d1f239ecc2e057ccff9829dbee7c26f142f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ea094d1f239ecc2e057ccff9829dbee7c26f142f", "patch": "@@ -1,3 +1,10 @@\n+2007-11-02  Janis Johnson  <janis187@us.ibm.com>\n+\n+\tPR testsuite/32076\n+\t* lib/scandump.exp (dump-suffix): New.\n+\t(scan-dump, scan-dump-times, scan-dump-dem, scan-dump-dem-not):\n+\tInclude dump suffix in pass/fail messages, put regexp in quotes.\n+\n 2007-11-02  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR c++/33495"}, {"sha": "9dde9004837683ec0d66c410ba395cc1f5b347ae", "filename": "gcc/testsuite/lib/scandump.exp", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea094d1f239ecc2e057ccff9829dbee7c26f142f/gcc%2Ftestsuite%2Flib%2Fscandump.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea094d1f239ecc2e057ccff9829dbee7c26f142f/gcc%2Ftestsuite%2Flib%2Fscandump.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscandump.exp?ref=ea094d1f239ecc2e057ccff9829dbee7c26f142f", "patch": "@@ -19,6 +19,13 @@\n #\n # This is largely borrowed from scanasm.exp.\n \n+# Extract the constant part of the dump file suffix from the regexp.\n+# Argument 0 is the regular expression.\n+proc dump-suffix { arg } {\n+    set idx [expr [string last \".\" $arg] + 1]\n+    return [string range $arg $idx end]\n+}\n+\n # Utility for scanning compiler result, invoked via dg-final.\n # Call pass if pattern is present, otherwise fail.\n #\n@@ -49,10 +56,11 @@ proc scan-dump { args } {\n     set text [read $fd]\n     close $fd\n \n+    set suf [dump-suffix [lindex $args 2]]\n     if [regexp -- [lindex $args 1] $text] {\n-\tpass \"$testcase scan-[lindex $args 0]-dump [lindex $args 1]\"\n+\tpass \"$testcase scan-[lindex $args 0]-dump $suf \\\"[lindex $args 1]\\\"\"\n     } else {\n-\tfail \"$testcase scan-[lindex $args 0]-dump [lindex $args 1]\"\n+\tfail \"$testcase scan-[lindex $args 0]-dump $suf \\\"[lindex $args 1]\\\"\"\n     }\n }\n \n@@ -85,10 +93,11 @@ proc scan-dump-times { args } {\n     set text [read $fd]\n     close $fd\n \n+    set suf [dump-suffix [lindex $args 3]]\n     if { [llength [regexp -inline -all -- [lindex $args 1] $text]] == [lindex $args 2]} {\n-        pass \"$testcase scan-[lindex $args 0]-dump-times [lindex $args 1] [lindex $args 2]\"\n+        pass \"$testcase scan-[lindex $args 0]-dump-times $suf \\\"[lindex $args 1]\\\" [lindex $args 2]\"\n     } else {\n-        fail \"$testcase scan-[lindex $args 0]-dump-times [lindex $args 1] [lindex $args 2]\"\n+        fail \"$testcase scan-[lindex $args 0]-dump-times $suf \\\"[lindex $args 1]\\\" [lindex $args 2]\"\n     }\n }\n \n@@ -120,10 +129,11 @@ proc scan-dump-not { args } {\n     set text [read $fd]\n     close $fd\n \n+    set suf [dump-suffix [lindex $args 2]]\n     if ![regexp -- [lindex $args 1] $text] {\n-\tpass \"$testcase scan-[lindex $args 0]-dump-not [lindex $args 1]\"\n+\tpass \"$testcase scan-[lindex $args 0]-dump-not $suf \\\"[lindex $args 1]\\\"\"\n     } else {\n-\tfail \"$testcase scan-[lindex $args 0]-dump-not [lindex $args 1]\"\n+\tfail \"$testcase scan-[lindex $args 0]-dump-not $suf \\\"[lindex $args 1]\\\"\"\n     }\n }\n \n@@ -165,10 +175,11 @@ proc scan-dump-dem { args } {\n     set text [read $fd]\n     close $fd\n \n+    set suf [dump-suffix [lindex $args 2]]\n     if [regexp -- [lindex $args 1] $text] {\n-\tpass \"$testcase scan-[lindex $args 0]-dump-dem [lindex $args 1]\"\n+\tpass \"$testcase scan-[lindex $args 0]-dump-dem $suf \\\"[lindex $args 1]\\\"\"\n     } else {\n-\tfail \"$testcase scan-[lindex $args 0]-dump-dem [lindex $args 1]\"\n+\tfail \"$testcase scan-[lindex $args 0]-dump-dem $suf \\\"[lindex $args 1]\\\"\"\n     }\n }\n \n@@ -209,9 +220,10 @@ proc scan-dump-dem-not { args } {\n     set text [read $fd]\n     close $fd\n \n+    set suf [dump-suffix [lindex $args 2]]\n     if ![regexp -- [lindex $args 1] $text] {\n-\tpass \"$testcase scan-[lindex $args 0]-dump-dem-not [lindex $args 1]\"\n+\tpass \"$testcase scan-[lindex $args 0]-dump-dem-not $suf \\\"[lindex $args 1]\\\"\"\n     } else {\n-\tfail \"$testcase scan-[lindex $args 0]-dump-dem-not [lindex $args 1]\"\n+\tfail \"$testcase scan-[lindex $args 0]-dump-dem-not $suf \\\"[lindex $args 1]\\\"\"\n     }\n }"}]}