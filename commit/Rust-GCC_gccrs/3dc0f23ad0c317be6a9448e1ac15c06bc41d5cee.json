{"sha": "3dc0f23ad0c317be6a9448e1ac15c06bc41d5cee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RjMGYyM2FkMGMzMTdiZTZhOTQ0OGUxYWMxNWMwNmJjNDFkNWNlZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-12-29T15:35:14Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-12-29T15:35:14Z"}, "message": "sse.md (\"*divv4sf3\"): Rename to \"sse_divv4sf3\".\n\n        * config/i386/sse.md (\"*divv4sf3\"): Rename to \"sse_divv4sf3\".\n        (\"*sse_rsqrtv4sf2\"): Export.\n        (\"*sse_sqrtv4sf2\"): Ditto.\n        * config/i386/i386.c (enum ix86_builtins) [IX86_BUILTIN_RSQRTPS_NR,\n        IX86_BUILTIN_SQRTPS_NR]: New constants.\n        (struct builtin_description) [IX86_BUILTIN_DIVPS]: Use\n        CODE_FOR_sse_divv4sf3.\n        [IX86_BUILTIN_SQRTPS]: Use CODE_FOR_sse_sqrtv4sf2.\n        [IX86_BUILTIN_SQRTPS_NR]: New.\n        [IX86_BUILTIN_RSQRTPS_NR]: Ditto.\n        (ix86_init_mmx_sse_builtins): Initialize __builtin_ia32_rsqrtps_nr and\n        __builtin_ia32_sqrtps_nr.\n        (ix86_builtin_vectorized_function): Convert BUILT_IN_SQRTF to\n        IX86_BUILTIN_SQRTPS_NR.\n        (ix86_builtin_reciprocal): Convert IX86_BUILTIN_SQRTPS_NR to\n        IX86_BUILTIN_RSQRTPS_NR.\n\nFrom-SVN: r131220", "tree": {"sha": "d010111faca27ad75816bf58e433829d8614d9cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d010111faca27ad75816bf58e433829d8614d9cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3dc0f23ad0c317be6a9448e1ac15c06bc41d5cee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dc0f23ad0c317be6a9448e1ac15c06bc41d5cee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dc0f23ad0c317be6a9448e1ac15c06bc41d5cee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dc0f23ad0c317be6a9448e1ac15c06bc41d5cee/comments", "author": null, "committer": null, "parents": [{"sha": "c6b2c5a1914becd2033bf9ef34bc434910bea12d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6b2c5a1914becd2033bf9ef34bc434910bea12d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6b2c5a1914becd2033bf9ef34bc434910bea12d"}], "stats": {"total": 89, "additions": 57, "deletions": 32}, "files": [{"sha": "2fef7a2816afa7876239299e6f5883e0e3fe2307", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 8, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dc0f23ad0c317be6a9448e1ac15c06bc41d5cee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dc0f23ad0c317be6a9448e1ac15c06bc41d5cee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3dc0f23ad0c317be6a9448e1ac15c06bc41d5cee", "patch": "@@ -1,4 +1,23 @@\n-2007-12-08  Brian Dessent  <brian@dessent.net>\n+2007-12-29  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sse.md (\"*divv4sf3\"): Rename to \"sse_divv4sf3\".\n+\t(\"*sse_rsqrtv4sf2\"): Export.\n+\t(\"*sse_sqrtv4sf2\"): Ditto.\n+\t* config/i386/i386.c (enum ix86_builtins) [IX86_BUILTIN_RSQRTPS_NR,\n+\tIX86_BUILTIN_SQRTPS_NR]: New constants.\n+\t(struct builtin_description) [IX86_BUILTIN_DIVPS]: Use\n+\tCODE_FOR_sse_divv4sf3.\n+\t[IX86_BUILTIN_SQRTPS]: Use CODE_FOR_sse_sqrtv4sf2.\n+\t[IX86_BUILTIN_SQRTPS_NR]: New.\n+\t[IX86_BUILTIN_RSQRTPS_NR]: Ditto.\n+\t(ix86_init_mmx_sse_builtins): Initialize __builtin_ia32_rsqrtps_nr and\n+\t__builtin_ia32_sqrtps_nr.\n+\t(ix86_builtin_vectorized_function): Convert BUILT_IN_SQRTF to\n+\tIX86_BUILTIN_SQRTPS_NR.\n+\t(ix86_builtin_reciprocal): Convert IX86_BUILTIN_SQRTPS_NR to\n+\tIX86_BUILTIN_RSQRTPS_NR.\n+\n+2007-12-27  Brian Dessent  <brian@dessent.net>\n \n \t* doc/invoke.texi (Optimize Options): Add missing opindex for\n \t-fno-toplevel-reorder.\n@@ -39,7 +58,8 @@\n \n 2007-12-21  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n-\t* pa.c (hppa_legitimize_address): Use INT14_OK_STRICT in mask selection.\n+\t* config/pa/pa.c (hppa_legitimize_address): Use INT14_OK_STRICT in\n+\tmask selection.\n \n \tPR target/34525\n \t* pa.c (legitimize_pic_address): Emit insn to load function label\n@@ -223,12 +243,11 @@\n \n 2007-12-18  Razya Ladelsky <razya@il.ibm.com>\n \n-        * tree-parloops.c (reduiction_info): Change documentation of\n-        reduction_initial field.\n-        (initialize_reductions): Remove creation of reduction_initial\n-        variable.\n-        (create_loads_for_reductions): don't join reduction_initial to\n-        the loaded value.\n+\t* tree-parloops.c (reduiction_info): Change documentation of\n+\treduction_initial field.\n+\t(initialize_reductions): Remove creation of reduction_initial variable.\n+\t(create_loads_for_reductions): don't join reduction_initial to\n+\tthe loaded value.\n \n 2007-12-18  Kaz Kylheku  <kaz@zeugmasystems.com>\n "}, {"sha": "232d6fe6b608a9083d741f6a1ecdf88f44e92f5c", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dc0f23ad0c317be6a9448e1ac15c06bc41d5cee/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dc0f23ad0c317be6a9448e1ac15c06bc41d5cee/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=3dc0f23ad0c317be6a9448e1ac15c06bc41d5cee", "patch": "@@ -17093,9 +17093,11 @@ enum ix86_builtins\n   IX86_BUILTIN_RCPPS,\n   IX86_BUILTIN_RCPSS,\n   IX86_BUILTIN_RSQRTPS,\n+  IX86_BUILTIN_RSQRTPS_NR,\n   IX86_BUILTIN_RSQRTSS,\n   IX86_BUILTIN_RSQRTF,\n   IX86_BUILTIN_SQRTPS,\n+  IX86_BUILTIN_SQRTPS_NR,\n   IX86_BUILTIN_SQRTSS,\n \n   IX86_BUILTIN_UNPCKHPS,\n@@ -17849,7 +17851,7 @@ static const struct builtin_description bdesc_2arg[] =\n   { OPTION_MASK_ISA_SSE, CODE_FOR_addv4sf3, \"__builtin_ia32_addps\", IX86_BUILTIN_ADDPS, UNKNOWN, 0 },\n   { OPTION_MASK_ISA_SSE, CODE_FOR_subv4sf3, \"__builtin_ia32_subps\", IX86_BUILTIN_SUBPS, UNKNOWN, 0 },\n   { OPTION_MASK_ISA_SSE, CODE_FOR_mulv4sf3, \"__builtin_ia32_mulps\", IX86_BUILTIN_MULPS, UNKNOWN, 0 },\n-  { OPTION_MASK_ISA_SSE, CODE_FOR_divv4sf3, \"__builtin_ia32_divps\", IX86_BUILTIN_DIVPS, UNKNOWN, 0 },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_divv4sf3, \"__builtin_ia32_divps\", IX86_BUILTIN_DIVPS, UNKNOWN, 0 },\n   { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmaddv4sf3,  \"__builtin_ia32_addss\", IX86_BUILTIN_ADDSS, UNKNOWN, 0 },\n   { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmsubv4sf3,  \"__builtin_ia32_subss\", IX86_BUILTIN_SUBSS, UNKNOWN, 0 },\n   { OPTION_MASK_ISA_SSE, CODE_FOR_sse_vmmulv4sf3,  \"__builtin_ia32_mulss\", IX86_BUILTIN_MULSS, UNKNOWN, 0 },\n@@ -18158,8 +18160,10 @@ static const struct builtin_description bdesc_1arg[] =\n   { OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A, CODE_FOR_mmx_pmovmskb, 0, IX86_BUILTIN_PMOVMSKB, UNKNOWN, 0 },\n   { OPTION_MASK_ISA_SSE, CODE_FOR_sse_movmskps, 0, IX86_BUILTIN_MOVMSKPS, UNKNOWN, 0 },\n \n-  { OPTION_MASK_ISA_SSE, CODE_FOR_sqrtv4sf2, 0, IX86_BUILTIN_SQRTPS, UNKNOWN, 0 },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sse_sqrtv4sf2, 0, IX86_BUILTIN_SQRTPS, UNKNOWN, 0 },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_sqrtv4sf2, 0, IX86_BUILTIN_SQRTPS_NR, UNKNOWN, 0 },\n   { OPTION_MASK_ISA_SSE, CODE_FOR_sse_rsqrtv4sf2, 0, IX86_BUILTIN_RSQRTPS, UNKNOWN, 0 },\n+  { OPTION_MASK_ISA_SSE, CODE_FOR_rsqrtv4sf2, 0, IX86_BUILTIN_RSQRTPS_NR, UNKNOWN, 0 },\n   { OPTION_MASK_ISA_SSE, CODE_FOR_sse_rcpv4sf2, 0, IX86_BUILTIN_RCPPS, UNKNOWN, 0 },\n \n   { OPTION_MASK_ISA_SSE, CODE_FOR_sse_cvtps2pi, 0, IX86_BUILTIN_CVTPS2PI, UNKNOWN, 0 },\n@@ -19279,12 +19283,14 @@ ix86_init_mmx_sse_builtins (void)\n   def_builtin_const (OPTION_MASK_ISA_SSE, \"__builtin_ia32_rcpps\", v4sf_ftype_v4sf, IX86_BUILTIN_RCPPS);\n   def_builtin_const (OPTION_MASK_ISA_SSE, \"__builtin_ia32_rcpss\", v4sf_ftype_v4sf, IX86_BUILTIN_RCPSS);\n   def_builtin_const (OPTION_MASK_ISA_SSE, \"__builtin_ia32_rsqrtps\", v4sf_ftype_v4sf, IX86_BUILTIN_RSQRTPS);\n+  def_builtin_const (OPTION_MASK_ISA_SSE, \"__builtin_ia32_rsqrtps_nr\", v4sf_ftype_v4sf, IX86_BUILTIN_RSQRTPS_NR);\n   def_builtin_const (OPTION_MASK_ISA_SSE, \"__builtin_ia32_rsqrtss\", v4sf_ftype_v4sf, IX86_BUILTIN_RSQRTSS);\n   ftype = build_function_type_list (float_type_node,\n \t\t\t\t    float_type_node,\n \t\t\t\t    NULL_TREE);\n   def_builtin_const (OPTION_MASK_ISA_SSE, \"__builtin_ia32_rsqrtf\", ftype, IX86_BUILTIN_RSQRTF);\n   def_builtin_const (OPTION_MASK_ISA_SSE, \"__builtin_ia32_sqrtps\", v4sf_ftype_v4sf, IX86_BUILTIN_SQRTPS);\n+  def_builtin_const (OPTION_MASK_ISA_SSE, \"__builtin_ia32_sqrtps_nr\", v4sf_ftype_v4sf, IX86_BUILTIN_SQRTPS_NR);\n   def_builtin_const (OPTION_MASK_ISA_SSE, \"__builtin_ia32_sqrtss\", v4sf_ftype_v4sf, IX86_BUILTIN_SQRTSS);\n \n   def_builtin_const (OPTION_MASK_ISA_SSE, \"__builtin_ia32_shufps\", v4sf_ftype_v4sf_v4sf_int, IX86_BUILTIN_SHUFPS);\n@@ -21301,7 +21307,7 @@ ix86_builtin_vectorized_function (unsigned int fn, tree type_out,\n     case BUILT_IN_SQRTF:\n       if (out_mode == SFmode && out_n == 4\n \t  && in_mode == SFmode && in_n == 4)\n-\treturn ix86_builtins[IX86_BUILTIN_SQRTPS];\n+\treturn ix86_builtins[IX86_BUILTIN_SQRTPS_NR];\n       break;\n \n     case BUILT_IN_LRINT:\n@@ -21463,8 +21469,8 @@ ix86_builtin_reciprocal (unsigned int fn, bool md_fn,\n     switch (fn)\n       {\n \t/* Vectorized version of sqrt to rsqrt conversion.  */\n-      case IX86_BUILTIN_SQRTPS:\n-\treturn ix86_builtins[IX86_BUILTIN_RSQRTPS];\n+      case IX86_BUILTIN_SQRTPS_NR:\n+\treturn ix86_builtins[IX86_BUILTIN_RSQRTPS_NR];\n \n       default:\n \treturn NULL_TREE;"}, {"sha": "3c0d497392e7dfecdb4ab26bf6170ddd29936a1e", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dc0f23ad0c317be6a9448e1ac15c06bc41d5cee/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dc0f23ad0c317be6a9448e1ac15c06bc41d5cee/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=3dc0f23ad0c317be6a9448e1ac15c06bc41d5cee", "patch": "@@ -490,7 +490,7 @@\n     }\n })\n \n-(define_insn \"*divv4sf3\"\n+(define_insn \"sse_divv4sf3\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n \t(div:V4SF (match_operand:V4SF 1 \"register_operand\" \"0\")\n \t\t  (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\")))]\n@@ -532,16 +532,7 @@\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"mode\" \"SF\")])\n \n-(define_insn \"*sse_rsqrtv4sf2\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n-\t(unspec:V4SF\n-\t  [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")] UNSPEC_RSQRT))]\n-  \"TARGET_SSE\"\n-  \"rsqrtps\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sse\")\n-   (set_attr \"mode\" \"V4SF\")])\n-\n-(define_expand \"sse_rsqrtv4sf2\"\n+(define_expand \"rsqrtv4sf2\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"\")\n \t(unspec:V4SF\n \t  [(match_operand:V4SF 1 \"nonimmediate_operand\" \"\")] UNSPEC_RSQRT))]\n@@ -556,6 +547,15 @@\n     }\n })\n \n+(define_insn \"sse_rsqrtv4sf2\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n+\t(unspec:V4SF\n+\t  [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")] UNSPEC_RSQRT))]\n+  \"TARGET_SSE\"\n+  \"rsqrtps\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"sse\")\n+   (set_attr \"mode\" \"V4SF\")])\n+\n (define_insn \"sse_vmrsqrtv4sf2\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n \t(vec_merge:V4SF\n@@ -568,14 +568,6 @@\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"mode\" \"SF\")])\n \n-(define_insn \"*sqrtv4sf2\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n-\t(sqrt:V4SF (match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE\"\n-  \"sqrtps\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sse\")\n-   (set_attr \"mode\" \"V4SF\")])\n-\n (define_expand \"sqrtv4sf2\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=\")\n \t(sqrt:V4SF (match_operand:V4SF 1 \"nonimmediate_operand\" \"\")))]\n@@ -590,6 +582,14 @@\n     }\n })\n \n+(define_insn \"sse_sqrtv4sf2\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n+\t(sqrt:V4SF (match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")))]\n+  \"TARGET_SSE\"\n+  \"sqrtps\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"sse\")\n+   (set_attr \"mode\" \"V4SF\")])\n+\n (define_insn \"sse_vmsqrtv4sf2\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n \t(vec_merge:V4SF"}]}