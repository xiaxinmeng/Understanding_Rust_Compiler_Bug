{"sha": "ccd04b9f89c5adafd11300a09a5554f9a4b28f2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NkMDRiOWY4OWM1YWRhZmQxMTMwMGEwOWE1NTU0ZjlhNGIyOGYyZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-09-07T01:37:31Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-09-07T01:37:31Z"}, "message": "stl_vector.h (_Vector_base<>::_M_allocate): Do not call _M_impl.allocate when __n == 0.\n\n2007-09-06  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/stl_vector.h (_Vector_base<>::_M_allocate):\n\tDo not call _M_impl.allocate when __n == 0.\n\t* testsuite/23_containers/vector/zero_sized_allocations.cc: New.\n\nFrom-SVN: r128220", "tree": {"sha": "8b2b305ad6e11d82e00296c92eb0ac785ce2d222", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b2b305ad6e11d82e00296c92eb0ac785ce2d222"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccd04b9f89c5adafd11300a09a5554f9a4b28f2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccd04b9f89c5adafd11300a09a5554f9a4b28f2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccd04b9f89c5adafd11300a09a5554f9a4b28f2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccd04b9f89c5adafd11300a09a5554f9a4b28f2e/comments", "author": null, "committer": null, "parents": [{"sha": "b9dd78fa1e85a6c0b2bc1256a529f5960e503d79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9dd78fa1e85a6c0b2bc1256a529f5960e503d79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9dd78fa1e85a6c0b2bc1256a529f5960e503d79"}], "stats": {"total": 85, "additions": 84, "deletions": 1}, "files": [{"sha": "2e618c3a4aaae958147143df12d9fa67740a0ef6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd04b9f89c5adafd11300a09a5554f9a4b28f2e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd04b9f89c5adafd11300a09a5554f9a4b28f2e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ccd04b9f89c5adafd11300a09a5554f9a4b28f2e", "patch": "@@ -1,3 +1,9 @@\n+2007-09-06  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/stl_vector.h (_Vector_base<>::_M_allocate):\n+\tDo not call _M_impl.allocate when __n == 0.\n+\t* testsuite/23_containers/vector/zero_sized_allocations.cc: New.\n+\n 2007-09-06  Matthias Klose  <doko@debian.org>\n \n \t* testsuite/27_io/headers/cstdlib: Remove empty directory."}, {"sha": "a942a37b7148f607d7bbec34d4d8f6923d965389", "filename": "libstdc++-v3/include/bits/stl_vector.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd04b9f89c5adafd11300a09a5554f9a4b28f2e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd04b9f89c5adafd11300a09a5554f9a4b28f2e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h?ref=ccd04b9f89c5adafd11300a09a5554f9a4b28f2e", "patch": "@@ -125,7 +125,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD)\n \n       _Tp*\n       _M_allocate(size_t __n)\n-      { return _M_impl.allocate(__n); }\n+      { return __n != 0 ? _M_impl.allocate(__n) : 0; }\n \n       void\n       _M_deallocate(_Tp* __p, size_t __n)"}, {"sha": "2b3126735554e4dabc6869fc8851b069c271bc73", "filename": "libstdc++-v3/testsuite/23_containers/vector/zero_sized_allocations.cc", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd04b9f89c5adafd11300a09a5554f9a4b28f2e/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fzero_sized_allocations.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd04b9f89c5adafd11300a09a5554f9a4b28f2e/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fzero_sized_allocations.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fzero_sized_allocations.cc?ref=ccd04b9f89c5adafd11300a09a5554f9a4b28f2e", "patch": "@@ -0,0 +1,77 @@\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+//\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <vector>\n+#include <cstdlib>\n+#include <testsuite_hooks.h>\n+\n+unsigned int zero_sized_news = 0;\n+\n+void *operator new(size_t size) throw (std::bad_alloc)\n+{\n+  /* malloc(0) is unpredictable; avoid it.  */\n+  if (size == 0)\n+    {\n+      size = 1;\n+      ++zero_sized_news;\n+    }\n+\n+  void *p = std::malloc(size);\n+\n+  if (p == 0)\n+    throw std::bad_alloc();\n+\n+  return p;\n+}\n+\n+void operator delete(void *ptr) throw()\n+{\n+  if (ptr != 0)\n+    std::free(ptr);\n+}\n+\n+// http://gcc.gnu.org/ml/libstdc++/2007-09/msg00006.html\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::vector<std::vector<int> > *v;\n+  VERIFY( zero_sized_news == 0 );\n+\n+  v = new std::vector<std::vector<int> >;\n+  VERIFY( zero_sized_news == 0 );\n+\n+  v->resize(10);\n+  delete(v);\n+  VERIFY( zero_sized_news == 0 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}