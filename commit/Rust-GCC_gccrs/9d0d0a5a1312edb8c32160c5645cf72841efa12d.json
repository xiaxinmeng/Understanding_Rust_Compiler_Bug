{"sha": "9d0d0a5a1312edb8c32160c5645cf72841efa12d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQwZDBhNWExMzEyZWRiOGMzMjE2MGM1NjQ1Y2Y3Mjg0MWVmYTEyZA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-10-18T21:08:18Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-10-18T21:08:18Z"}, "message": "ira: volatile asm's are not moveable (PR82602)\n\nA volatile asm statement can not be moved (relative to other volatile\nasm, etc.), but IRA would do it nevertheless.  This patch fixes it.\n\n\n\tPR rtl-optimization/82602\n\t* ira.c (rtx_moveable_p): Return false for volatile asm.\n\nFrom-SVN: r253869", "tree": {"sha": "a97fa2d4b933691cb3efb830d5626c60d5ec62f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a97fa2d4b933691cb3efb830d5626c60d5ec62f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d0d0a5a1312edb8c32160c5645cf72841efa12d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d0d0a5a1312edb8c32160c5645cf72841efa12d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d0d0a5a1312edb8c32160c5645cf72841efa12d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d0d0a5a1312edb8c32160c5645cf72841efa12d/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b04bebdb1dee362255b99e91cc48798291448dc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b04bebdb1dee362255b99e91cc48798291448dc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b04bebdb1dee362255b99e91cc48798291448dc6"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "a139a824d35e012b4344c1168c1399fedb9bf029", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d0d0a5a1312edb8c32160c5645cf72841efa12d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d0d0a5a1312edb8c32160c5645cf72841efa12d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d0d0a5a1312edb8c32160c5645cf72841efa12d", "patch": "@@ -1,3 +1,8 @@\n+2017-10-18  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/82602\n+\t* ira.c (rtx_moveable_p): Return false for volatile asm.\n+\n 2017-10-18  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/82580"}, {"sha": "8c93d3df518e0c2fa7524fa9fd6526c3b164677b", "filename": "gcc/ira.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d0d0a5a1312edb8c32160c5645cf72841efa12d/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d0d0a5a1312edb8c32160c5645cf72841efa12d/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=9d0d0a5a1312edb8c32160c5645cf72841efa12d", "patch": "@@ -4400,6 +4400,12 @@ rtx_moveable_p (rtx *loc, enum op_type type)\n \t for a reason.  */\n       return false;\n \n+    case ASM_OPERANDS:\n+      /* The same is true for volatile asm: it has unknown side effects, it\n+         cannot be moved at will.  */\n+      if (MEM_VOLATILE_P (x))\n+\treturn false;\n+\n     default:\n       break;\n     }"}]}