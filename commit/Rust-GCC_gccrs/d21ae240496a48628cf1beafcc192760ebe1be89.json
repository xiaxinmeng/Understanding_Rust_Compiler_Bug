{"sha": "d21ae240496a48628cf1beafcc192760ebe1be89", "node_id": "C_kwDOANBUbNoAKGQyMWFlMjQwNDk2YTQ4NjI4Y2YxYmVhZmNjMTkyNzYwZWJlMWJlODk", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-02-11T10:11:25Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-02-11T10:11:25Z"}, "message": "Cleanup header usage and remove void_type wrapper", "tree": {"sha": "699195b8041ca3d59bb5a2a45941aca39562585a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/699195b8041ca3d59bb5a2a45941aca39562585a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d21ae240496a48628cf1beafcc192760ebe1be89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d21ae240496a48628cf1beafcc192760ebe1be89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d21ae240496a48628cf1beafcc192760ebe1be89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d21ae240496a48628cf1beafcc192760ebe1be89/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df2dbbc0343afcca95d515d8843612b0334bc17b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df2dbbc0343afcca95d515d8843612b0334bc17b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df2dbbc0343afcca95d515d8843612b0334bc17b"}], "stats": {"total": 35, "additions": 13, "deletions": 22}, "files": [{"sha": "56e15a3f71e121d18101780d42062d52d813edbd", "filename": "gcc/rust/rust-backend.h", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d21ae240496a48628cf1beafcc192760ebe1be89/gcc%2Frust%2Frust-backend.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d21ae240496a48628cf1beafcc192760ebe1be89/gcc%2Frust%2Frust-backend.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-backend.h?ref=d21ae240496a48628cf1beafcc192760ebe1be89", "patch": "@@ -29,12 +29,6 @@\n #include \"operator.h\"\n #include \"tree.h\"\n \n-extern bool\n-saw_errors (void);\n-\n-// TODO: Will have to be significantly modified to work with Rust and current\n-// setup of gccrs\n-\n // Pointers to these types are created by the backend, passed to the\n // frontend, and passed back to the backend.  The types must be\n // defined by the backend using these names.\n@@ -76,11 +70,6 @@ class Backend\n \n   // Types.\n \n-  // Get a void type.  This is used in (at least) two ways: 1) as the\n-  // return type of a function with no result parameters; 2)\n-  // unsafe.Pointer is represented as *void.\n-  virtual tree void_type () = 0;\n-\n   // get unit-type\n   virtual tree unit_type () = 0;\n "}, {"sha": "cc5f4a90cfe96eca7b7ed4d76b8a60e39ab8d7f9", "filename": "gcc/rust/rust-gcc.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d21ae240496a48628cf1beafcc192760ebe1be89/gcc%2Frust%2Frust-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d21ae240496a48628cf1beafcc192760ebe1be89/gcc%2Frust%2Frust-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-gcc.cc?ref=d21ae240496a48628cf1beafcc192760ebe1be89", "patch": "@@ -117,8 +117,6 @@ class Gcc_backend : public Backend\n \n   // Types.\n \n-  tree void_type () { return void_type_node; }\n-\n   tree unit_type ()\n   {\n     static tree unit_type;"}, {"sha": "4e140fddb565b63313d16349379405375b60c40c", "filename": "gcc/rust/rust-session-manager.cc", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d21ae240496a48628cf1beafcc192760ebe1be89/gcc%2Frust%2Frust-session-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d21ae240496a48628cf1beafcc192760ebe1be89/gcc%2Frust%2Frust-session-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-session-manager.cc?ref=d21ae240496a48628cf1beafcc192760ebe1be89", "patch": "@@ -17,17 +17,8 @@\n // <http://www.gnu.org/licenses/>.\n // #include \"rust-session-manager.h\"\n \n-#include <fstream>\n-#include <sstream>\n #include \"rust-session-manager.h\"\n #include \"rust-diagnostics.h\"\n-#include \"diagnostic.h\"\n-#include \"input.h\"\n-\n-#include \"target.h\"\n-#include \"tm.h\"\n-#include \"memmodel.h\"\n-#include \"tm_p.h\"\n \n //#include \"rust-target.h\"\n /*TODO This isn't (currently?) necessary, but if '#include'd after '#include\n@@ -54,6 +45,16 @@\n #include \"rust-ast-resolve-unused.h\"\n #include \"rust-compile.h\"\n \n+#include \"diagnostic.h\"\n+#include \"input.h\"\n+#include \"target.h\"\n+#include \"tm.h\"\n+#include \"memmodel.h\"\n+#include \"tm_p.h\"\n+\n+extern bool\n+saw_errors (void);\n+\n extern Linemap *\n rust_get_linemap ();\n "}, {"sha": "0bcc6c81064ea61faf019920cccd5467b0dfe6ba", "filename": "gcc/rust/typecheck/rust-tycheck-dump.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d21ae240496a48628cf1beafcc192760ebe1be89/gcc%2Frust%2Ftypecheck%2Frust-tycheck-dump.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d21ae240496a48628cf1beafcc192760ebe1be89/gcc%2Frust%2Ftypecheck%2Frust-tycheck-dump.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tycheck-dump.h?ref=d21ae240496a48628cf1beafcc192760ebe1be89", "patch": "@@ -22,6 +22,9 @@\n #include \"rust-hir-type-check-base.h\"\n #include \"rust-hir-full.h\"\n \n+#include <fstream>\n+#include <sstream>\n+\n namespace Rust {\n namespace Resolver {\n "}]}