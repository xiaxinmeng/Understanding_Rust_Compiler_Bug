{"sha": "69d49802885945913a7b5234f2b0f5268f3f9369", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjlkNDk4MDI4ODU5NDU5MTNhN2I1MjM0ZjJiMGY1MjY4ZjNmOTM2OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2004-10-13T11:27:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2004-10-13T11:27:01Z"}, "message": "re PR tree-optimization/17724 (wrong dominator (eh/fold all builtins) related)\n\n\tPR tree-optimization/17724\n\t* tree-cfg.c (tree_purge_dead_eh_edges): Free dominance info.\n\n\t* g++.dg/opt/pr17724-1.C: New test.\n\t* g++.dg/opt/pr17724-2.C: New test.\n\t* g++.dg/opt/pr17724-3.C: New test.\n\t* g++.dg/opt/pr17724-4.C: New test.\n\t* g++.dg/opt/pr17724-5.C: New test.\n\t* g++.dg/opt/pr17724-6.C: New test.\n\nCo-Authored-By: Zdenek Dvorak <dvorakz@suse.cz>\n\nFrom-SVN: r88979", "tree": {"sha": "fa8170e4b018a7e1d96192ed02d002385003798e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa8170e4b018a7e1d96192ed02d002385003798e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69d49802885945913a7b5234f2b0f5268f3f9369", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d49802885945913a7b5234f2b0f5268f3f9369", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69d49802885945913a7b5234f2b0f5268f3f9369", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d49802885945913a7b5234f2b0f5268f3f9369/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "13c62176e5659bb66597ec395d24741eab6970a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13c62176e5659bb66597ec395d24741eab6970a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13c62176e5659bb66597ec395d24741eab6970a7"}], "stats": {"total": 178, "additions": 178, "deletions": 0}, "files": [{"sha": "d868de44cbcb0f49768b65df09ae7334db383518", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d49802885945913a7b5234f2b0f5268f3f9369/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d49802885945913a7b5234f2b0f5268f3f9369/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69d49802885945913a7b5234f2b0f5268f3f9369", "patch": "@@ -1,3 +1,9 @@\n+2004-10-13  Jakub Jelinek  <jakub@redhat.com>\n+\t    Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\tPR tree-optimization/17724\n+\t* tree-cfg.c (tree_purge_dead_eh_edges): Free dominance info.\n+\n 2004-10-13  Dorit Naishlos  <dorit@il.ibm.com>\n \n \t* rs6000.c (altivec_builtin_mask_for_load): Made static GTY(())."}, {"sha": "d08d00545e5bb335d6acf75d92fc957d1d10765a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d49802885945913a7b5234f2b0f5268f3f9369/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d49802885945913a7b5234f2b0f5268f3f9369/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=69d49802885945913a7b5234f2b0f5268f3f9369", "patch": "@@ -1,3 +1,13 @@\n+2004-10-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/17724\n+\t* g++.dg/opt/pr17724-1.C: New test.\n+\t* g++.dg/opt/pr17724-2.C: New test.\n+\t* g++.dg/opt/pr17724-3.C: New test.\n+\t* g++.dg/opt/pr17724-4.C: New test.\n+\t* g++.dg/opt/pr17724-5.C: New test.\n+\t* g++.dg/opt/pr17724-6.C: New test.\n+\n 2004-10-12  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \tPR c/17301"}, {"sha": "79de663b296503c71ff18978d3482ccbb996373c", "filename": "gcc/testsuite/g++.dg/opt/pr17724-1.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d49802885945913a7b5234f2b0f5268f3f9369/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17724-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d49802885945913a7b5234f2b0f5268f3f9369/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17724-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17724-1.C?ref=69d49802885945913a7b5234f2b0f5268f3f9369", "patch": "@@ -0,0 +1,23 @@\n+// PR tree-optimization/17724\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+namespace N { char *strcpy (char *, const char *); }\n+extern \"C\" char *strcpy (char *, const char *) throw ();\n+inline char *N::strcpy (char *s, const char *t) { return ::strcpy (s, t); }\n+\n+struct S { ~S (); };\n+int foo ();\n+\n+int\n+main ()\n+{\n+  S s;\n+  int a;\n+  char b[64];\n+  N::strcpy (b, \"ABCDEFGHIJKLM\");\n+  while ((a = foo ()) != -1)\n+    if (a)\n+      return -1;\n+  return 0;\n+}"}, {"sha": "c9c7f2a40fb2b293653797e51f92553faeab1cb4", "filename": "gcc/testsuite/g++.dg/opt/pr17724-2.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d49802885945913a7b5234f2b0f5268f3f9369/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17724-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d49802885945913a7b5234f2b0f5268f3f9369/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17724-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17724-2.C?ref=69d49802885945913a7b5234f2b0f5268f3f9369", "patch": "@@ -0,0 +1,23 @@\n+// PR tree-optimization/17724\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+namespace N { char *strcpy (char *, const char *); }\n+extern \"C\" char *strcpy (char *, const char *);\n+inline char *N::strcpy (char *s, const char *t) { return ::strcpy (s, t); }\n+\n+struct S { ~S (); };\n+int foo ();\n+\n+int\n+main ()\n+{\n+  S s;\n+  int a;\n+  char b[64];\n+  N::strcpy (b, \"ABCDEFGHIJKLM\");\n+  while ((a = foo ()) != -1)\n+    if (a)\n+      return -1;\n+  return 0;\n+}"}, {"sha": "212ab477077a9e5064bcb92a920de5b961511dbb", "filename": "gcc/testsuite/g++.dg/opt/pr17724-3.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d49802885945913a7b5234f2b0f5268f3f9369/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17724-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d49802885945913a7b5234f2b0f5268f3f9369/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17724-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17724-3.C?ref=69d49802885945913a7b5234f2b0f5268f3f9369", "patch": "@@ -0,0 +1,24 @@\n+// PR tree-optimization/17724\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+extern \"C\" char *strcpy (char* d, const char* s) throw ();\n+\n+class A { public: A (); ~A (); };\n+\n+inline char * B (char *s, const char *t)\n+{ return ::strcpy (s, t); }\n+\n+class C { int D (void); int E; };\n+\n+int C::D (void)\n+{\n+  A a;\n+  try\n+    {\n+      char z[22];\n+      if (this->E) B (z, \"\");\n+      return 0;\n+    }\n+  catch (int &f) { return -1; }\n+}"}, {"sha": "7828a25e730057e7cbeb7b52771840a2d8ebd27d", "filename": "gcc/testsuite/g++.dg/opt/pr17724-4.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d49802885945913a7b5234f2b0f5268f3f9369/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17724-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d49802885945913a7b5234f2b0f5268f3f9369/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17724-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17724-4.C?ref=69d49802885945913a7b5234f2b0f5268f3f9369", "patch": "@@ -0,0 +1,24 @@\n+// PR tree-optimization/17724\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+extern \"C\" char *strcpy (char* d, const char* s);\n+\n+class A { public: A (); ~A (); };\n+\n+inline char * B (char *s, const char *t)\n+{ return ::strcpy (s, t); }\n+\n+class C { int D (void); int E; };\n+\n+int C::D (void)\n+{\n+  A a;\n+  try\n+    {\n+      char z[22];\n+      if (this->E) B (z, \"\");\n+      return 0;\n+    }\n+  catch (int &f) { return -1; }\n+}"}, {"sha": "5ce303856db03982a4bf0c01146563180cd53422", "filename": "gcc/testsuite/g++.dg/opt/pr17724-5.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d49802885945913a7b5234f2b0f5268f3f9369/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17724-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d49802885945913a7b5234f2b0f5268f3f9369/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17724-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17724-5.C?ref=69d49802885945913a7b5234f2b0f5268f3f9369", "patch": "@@ -0,0 +1,24 @@\n+// PR tree-optimization/17724\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+extern char *strcpy (char* d, const char* s) throw ();\n+\n+class A { public: A (); ~A (); };\n+\n+inline char * B (char *s, const char *t)\n+{ return ::strcpy (s, t); }\n+\n+class C { int D (void); int E; };\n+\n+int C::D (void)\n+{\n+  A a;\n+  try\n+    {\n+      char z[22];\n+      if (this->E) B (z, \"\");\n+      return 0;\n+    }\n+  catch (int &f) { return -1; }\n+}"}, {"sha": "f95c4d0efbb635ccd0dc0fcbc9c4acfd60c1f591", "filename": "gcc/testsuite/g++.dg/opt/pr17724-6.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d49802885945913a7b5234f2b0f5268f3f9369/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17724-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d49802885945913a7b5234f2b0f5268f3f9369/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17724-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr17724-6.C?ref=69d49802885945913a7b5234f2b0f5268f3f9369", "patch": "@@ -0,0 +1,24 @@\n+// PR tree-optimization/17724\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+extern char *strcpy (char* d, const char* s);\n+\n+class A { public: A (); ~A (); };\n+\n+inline char * B (char *s, const char *t)\n+{ return ::strcpy (s, t); }\n+\n+class C { int D (void); int E; };\n+\n+int C::D (void)\n+{\n+  A a;\n+  try\n+    {\n+      char z[22];\n+      if (this->E) B (z, \"\");\n+      return 0;\n+    }\n+  catch (int &f) { return -1; }\n+}"}, {"sha": "293b24e1957c7bbb3ff9c7bfb32434a2d006eb70", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d49802885945913a7b5234f2b0f5268f3f9369/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d49802885945913a7b5234f2b0f5268f3f9369/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=69d49802885945913a7b5234f2b0f5268f3f9369", "patch": "@@ -5016,6 +5016,26 @@ tree_purge_dead_eh_edges (basic_block bb)\n \tei_next (&ei);\n     }\n \n+  /* Removal of dead EH edges might change dominators of not\n+     just immediate successors.  E.g. when bb1 is changed so that\n+     it no longer can throw and bb1->bb3 and bb1->bb4 are dead\n+     eh edges purged by this function in:\n+           0\n+\t  / \\\n+\t v   v\n+\t 1-->2\n+        / \\  |\n+       v   v |\n+       3-->4 |\n+        \\    v\n+\t --->5\n+\t     |\n+\t     -\n+     idom(bb5) must be recomputed.  For now just free the dominance\n+     info.  */\n+  if (changed)\n+    free_dominance_info (CDI_DOMINATORS);\n+\n   return changed;\n }\n "}]}