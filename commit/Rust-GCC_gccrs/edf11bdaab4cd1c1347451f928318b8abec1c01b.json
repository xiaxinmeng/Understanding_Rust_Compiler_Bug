{"sha": "edf11bdaab4cd1c1347451f928318b8abec1c01b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRmMTFiZGFhYjRjZDFjMTM0NzQ1MWY5MjgzMThiOGFiZWMxYzAxYg==", "commit": {"author": {"name": "Jason Eckhardt", "email": "jle@rice.edu", "date": "2003-08-23T18:03:06Z"}, "committer": {"name": "Jason Eckhardt", "email": "jle@gcc.gnu.org", "date": "2003-08-23T18:03:06Z"}, "message": "calls.c (emit_library_call_value_1): Remove code related to LIBGCC_NEEDS_DOUBLE.\n\n2003-08-23  Jason Eckhardt  <jle@rice.edu>\n\n        * calls.c (emit_library_call_value_1): Remove code related\n        to LIBGCC_NEEDS_DOUBLE.\n        * config/stormy16/stormy16.h: Remove mention of LIBGCC_NEEDS_DOUBLE.\n        * doc/tm.texi: Likewise.\n        * system.h: Poison the LIBGCC_NEEDS_DOUBLE macro.\n\nFrom-SVN: r70740", "tree": {"sha": "293c2c2d86b49bc9025b414d686b0bd820c75b27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/293c2c2d86b49bc9025b414d686b0bd820c75b27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edf11bdaab4cd1c1347451f928318b8abec1c01b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edf11bdaab4cd1c1347451f928318b8abec1c01b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edf11bdaab4cd1c1347451f928318b8abec1c01b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edf11bdaab4cd1c1347451f928318b8abec1c01b/comments", "author": null, "committer": null, "parents": [{"sha": "e2a188b234821d8246e95ceb19726273df8613e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2a188b234821d8246e95ceb19726273df8613e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2a188b234821d8246e95ceb19726273df8613e7"}], "stats": {"total": 33, "additions": 11, "deletions": 22}, "files": [{"sha": "55d4baa1588344315093c2e6b2f01bf040cc3059", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edf11bdaab4cd1c1347451f928318b8abec1c01b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edf11bdaab4cd1c1347451f928318b8abec1c01b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=edf11bdaab4cd1c1347451f928318b8abec1c01b", "patch": "@@ -1,3 +1,11 @@\n+2003-08-23  Jason Eckhardt  <jle@rice.edu>\n+\n+\t* calls.c (emit_library_call_value_1): Remove code related\n+\tto LIBGCC_NEEDS_DOUBLE.\n+\t* config/stormy16/stormy16.h: Remove mention of LIBGCC_NEEDS_DOUBLE.\n+\t* doc/tm.texi: Likewise.\n+\t* system.h: Poison the LIBGCC_NEEDS_DOUBLE macro.\n+\n 2003-08-23  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/linux64.h (STARTFILE_PREFIX_SPEC): Remove."}, {"sha": "11d423275b366cf27b0d67558319faa605f376f2", "filename": "gcc/calls.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edf11bdaab4cd1c1347451f928318b8abec1c01b/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edf11bdaab4cd1c1347451f928318b8abec1c01b/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=edf11bdaab4cd1c1347451f928318b8abec1c01b", "patch": "@@ -3733,13 +3733,6 @@ emit_library_call_value_1 (int retval, rtx orgfun, rtx value,\n \t  || (GET_MODE (val) != mode && GET_MODE (val) != VOIDmode))\n \tabort ();\n \n-      /* On some machines, there's no way to pass a float to a library fcn.\n-\t Pass it as a double instead.  */\n-#ifdef LIBGCC_NEEDS_DOUBLE\n-      if (LIBGCC_NEEDS_DOUBLE && mode == SFmode)\n-\tval = convert_modes (DFmode, SFmode, val, 0), mode = DFmode;\n-#endif\n-\n       /* There's no need to call protect_from_queue, because\n \t either emit_move_insn or emit_push_insn will do that.  */\n "}, {"sha": "3d1ab50756fb97ab79cf0e5dacec159d98c26581", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edf11bdaab4cd1c1347451f928318b8abec1c01b/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edf11bdaab4cd1c1347451f928318b8abec1c01b/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=edf11bdaab4cd1c1347451f928318b8abec1c01b", "patch": "@@ -540,11 +540,7 @@ enum reg_class\n    The obvious choice would be `float'--but that won't work with traditional C\n    compilers that expect all arguments declared as `float' to arrive as\n    `double'.  To avoid this conversion, the library routines ask for the value\n-   as some other type and then treat it as a `float'.\n-\n-   On some systems, no other type will work for this.  For these systems, you\n-   must use `LIBGCC_NEEDS_DOUBLE' instead, to force conversion of the values\n-   `double' before they are passed.  */\n+   as some other type and then treat it as a `float'.  */\n /* #define FLOAT_ARG_TYPE */\n \n /* Define this macro to override the way library routines redesignate a `float'"}, {"sha": "a6b23d60bfbeccd22349f7abd8a302af8c0acc78", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edf11bdaab4cd1c1347451f928318b8abec1c01b/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edf11bdaab4cd1c1347451f928318b8abec1c01b/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=edf11bdaab4cd1c1347451f928318b8abec1c01b", "patch": "@@ -4768,15 +4768,6 @@ number of existing systems lacks support for these functions in the runtime so\n they needs this macro to be redefined to 0.\n @end defmac\n \n-@defmac LIBGCC_NEEDS_DOUBLE\n-Define this macro if @code{float} arguments cannot be passed to library\n-routines (so they must be converted to @code{double}).  This macro\n-affects both how library calls are generated and how the library\n-routines in @file{libgcc.a} accept their arguments.  It is useful on\n-machines where floating and fixed point arguments are passed\n-differently, such as the i860.\n-@end defmac\n-\n @defmac NEXT_OBJC_RUNTIME\n Define this macro to generate code for Objective-C message sending using\n the calling convention of the NeXT system.  This calling convention"}, {"sha": "aa71fbbfdb9bc4eceee9c3f786b68f03492d29b1", "filename": "gcc/system.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edf11bdaab4cd1c1347451f928318b8abec1c01b/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edf11bdaab4cd1c1347451f928318b8abec1c01b/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=edf11bdaab4cd1c1347451f928318b8abec1c01b", "patch": "@@ -610,7 +610,8 @@ typedef char _Bool;\n \tDBX_LBRAC_FIRST DBX_OUTPUT_ENUM DBX_OUTPUT_SOURCE_FILENAME\t   \\\n \tDBX_WORKING_DIRECTORY INSN_CACHE_DEPTH INSN_CACHE_SIZE\t\t   \\\n \tINSN_CACHE_LINE_WIDTH INIT_SECTION_PREAMBLE NEED_ATEXIT ON_EXIT\t   \\\n-\tEXIT_BODY OBJECT_FORMAT_ROSE MULTIBYTE_CHARS MAP_CHARACTER\n+\tEXIT_BODY OBJECT_FORMAT_ROSE MULTIBYTE_CHARS MAP_CHARACTER\t   \\\n+\tLIBGCC_NEEDS_DOUBLE\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}]}