{"sha": "1be8f484daafb39d2230b78e2b7cc3c0f20e6fa7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJlOGY0ODRkYWFmYjM5ZDIyMzBiNzhlMmI3Y2MzYzBmMjBlNmZhNw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-05-29T17:39:56Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-05-29T17:39:56Z"}, "message": "lto-streamer.c (cached_bp): New global variable.\n\n2010-05-29  Richard Guenther  <rguenther@suse.de>\n\n\t* lto-streamer.c (cached_bp): New global variable.\n\t(bitpack_create): Return the cached bitpack, if available.\n\t(bitpack_delete): Clear and cache the bitpack, if appropriate.\n\t(bp_pack_value): Remove redundant asserts.\n\nFrom-SVN: r160032", "tree": {"sha": "28374f45b0af34eb28452e521d147f31dd022001", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28374f45b0af34eb28452e521d147f31dd022001"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1be8f484daafb39d2230b78e2b7cc3c0f20e6fa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1be8f484daafb39d2230b78e2b7cc3c0f20e6fa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1be8f484daafb39d2230b78e2b7cc3c0f20e6fa7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1be8f484daafb39d2230b78e2b7cc3c0f20e6fa7/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0247298c2882ee01793b82644d3d7ea32feace68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0247298c2882ee01793b82644d3d7ea32feace68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0247298c2882ee01793b82644d3d7ea32feace68"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "aa6e77a9f94873782e234f39c7435ac8edfb8a01", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be8f484daafb39d2230b78e2b7cc3c0f20e6fa7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be8f484daafb39d2230b78e2b7cc3c0f20e6fa7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1be8f484daafb39d2230b78e2b7cc3c0f20e6fa7", "patch": "@@ -1,3 +1,10 @@\n+2010-05-29  Richard Guenther  <rguenther@suse.de>\n+\n+\t* lto-streamer.c (cached_bp): New global variable.\n+\t(bitpack_create): Return the cached bitpack, if available.\n+\t(bitpack_delete): Clear and cache the bitpack, if appropriate.\n+\t(bp_pack_value): Remove redundant asserts.\n+\n 2010-05-29  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/44306"}, {"sha": "a086d9180041b87d02c7ef2f71506043bb0e3acd", "filename": "gcc/lto-streamer.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be8f484daafb39d2230b78e2b7cc3c0f20e6fa7/gcc%2Flto-streamer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be8f484daafb39d2230b78e2b7cc3c0f20e6fa7/gcc%2Flto-streamer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.c?ref=1be8f484daafb39d2230b78e2b7cc3c0f20e6fa7", "patch": "@@ -266,12 +266,21 @@ print_lto_report (void)\n \t     lto_section_name[i], lto_stats.section_size[i]);\n }\n \n+/* We cache a single bitpack assuming that usually at most one is\n+   life.  This saves repeated re-allocations.  */\n+static struct bitpack_d *cached_bp;\n \n /* Create a new bitpack.  */\n \n struct bitpack_d *\n bitpack_create (void)\n {\n+  if (cached_bp)\n+    {\n+      struct bitpack_d *bp = cached_bp;\n+      cached_bp = NULL;\n+      return bp;\n+    }\n   return XCNEW (struct bitpack_d);\n }\n \n@@ -281,6 +290,14 @@ bitpack_create (void)\n void\n bitpack_delete (struct bitpack_d *bp)\n {\n+  if (!cached_bp)\n+    {\n+      bp->num_bits = 0;\n+      bp->first_unused_bit = 0;\n+      VEC_truncate (bitpack_word_t, bp->values, 0);\n+      cached_bp = bp;\n+      return;\n+    }\n   VEC_free (bitpack_word_t, heap, bp->values);\n   free (bp);\n }\n@@ -324,7 +341,9 @@ bp_pack_value (struct bitpack_d *bp, bitpack_word_t val, unsigned nbits)\n   bitpack_word_t word;\n \n   /* We cannot encode more bits than BITS_PER_BITPACK_WORD.  */\n+#ifdef ENABLE_CHECKING\n   gcc_assert (nbits > 0 && nbits <= BITS_PER_BITPACK_WORD);\n+#endif\n \n   /* Compute which word will contain the next NBITS.  */\n   ix = bp_get_next_word (bp, nbits);\n@@ -334,7 +353,6 @@ bp_pack_value (struct bitpack_d *bp, bitpack_word_t val, unsigned nbits)\n \t array, add a new word.  Additionally, we should only\n \t need to add a single word, since every pack operation cannot\n \t use more bits than fit in a single word.  */\n-      gcc_assert (ix < VEC_length (bitpack_word_t, bp->values) + 1);\n       VEC_safe_push (bitpack_word_t, heap, bp->values, 0);\n     }\n \n@@ -343,7 +361,6 @@ bp_pack_value (struct bitpack_d *bp, bitpack_word_t val, unsigned nbits)\n \n   /* To fit VAL in WORD, we need to shift VAL to the left to\n      skip the bottom BP->FIRST_UNUSED_BIT bits.  */\n-  gcc_assert (BITS_PER_BITPACK_WORD >= bp->first_unused_bit + nbits);\n   val <<= bp->first_unused_bit;\n \n   /* Update WORD with VAL.  */"}]}