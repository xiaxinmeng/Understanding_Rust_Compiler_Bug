{"sha": "1aaec916ad5f7a37060a2bee39df50f158f4013e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFhZWM5MTZhZDVmN2EzNzA2MGEyYmVlMzlkZjUwZjE1OGY0MDEzZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-01-26T23:02:04Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-01-26T23:02:04Z"}, "message": "c-parse.in (extension): Use itype.\n\n        * c-parse.in (extension): Use itype.\n        (SAVE_EXT_FLAGS): Don't allocate a tree.\n        (RESTORE_EXT_FLAGS): Don't read a tree.\n\nFrom-SVN: r76676", "tree": {"sha": "3f2fefec4b207ce31997c6b012e2b9278dcce462", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f2fefec4b207ce31997c6b012e2b9278dcce462"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1aaec916ad5f7a37060a2bee39df50f158f4013e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aaec916ad5f7a37060a2bee39df50f158f4013e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1aaec916ad5f7a37060a2bee39df50f158f4013e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aaec916ad5f7a37060a2bee39df50f158f4013e/comments", "author": null, "committer": null, "parents": [{"sha": "242d8792161a2f70e0fe33fb7e2109ec86f2bb8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/242d8792161a2f70e0fe33fb7e2109ec86f2bb8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/242d8792161a2f70e0fe33fb7e2109ec86f2bb8a"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "59dc9b5cfd06fe9069d317177b68a56ce019c93f", "filename": "gcc/c-parse.in", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aaec916ad5f7a37060a2bee39df50f158f4013e/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aaec916ad5f7a37060a2bee39df50f158f4013e/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=1aaec916ad5f7a37060a2bee39df50f158f4013e", "patch": "@@ -204,7 +204,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n %type <ttype> init maybeasm\n %type <ttype> asm_operands nonnull_asm_operands asm_operand asm_clobbers\n %type <ttype> maybe_attribute attributes attribute attribute_list attrib\n-%type <ttype> any_word extension\n+%type <ttype> any_word\n \n %type <ttype> compstmt compstmt_start compstmt_nostart compstmt_primary_start\n %type <ttype> do_stmt_start poplevel stmt label\n@@ -230,7 +230,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n %type <ttype> parmlist_or_identifiers parmlist_or_identifiers_1\n %type <ttype> identifiers_or_typenames\n \n-%type <itype> setspecs setspecs_fp\n+%type <itype> setspecs setspecs_fp extension\n \n %type <location> save_location\n \f\n@@ -295,15 +295,14 @@ static GTY(()) tree declspec_stack;\n \n /* For __extension__, save/restore the warning flags which are\n    controlled by __extension__.  */\n-#define SAVE_EXT_FLAGS()\t\t\t\\\n-\tsize_int (pedantic\t\t\t\\\n-\t\t  | (warn_pointer_arith << 1)\t\\\n-\t\t  | (warn_traditional << 2)\t\\\n-\t\t  | (flag_iso << 3))\n+#define SAVE_EXT_FLAGS()\t\t\\\n+\t(pedantic\t\t\t\\\n+\t | (warn_pointer_arith << 1)\t\\\n+\t | (warn_traditional << 2)\t\\\n+\t | (flag_iso << 3))\n \n-#define RESTORE_EXT_FLAGS(tval)\t\t\t\\\n+#define RESTORE_EXT_FLAGS(val)\t\t\t\\\n   do {\t\t\t\t\t\t\\\n-    int val = tree_low_cst (tval, 0);\t\t\\\n     pedantic = val & 1;\t\t\t\t\\\n     warn_pointer_arith = (val >> 1) & 1;\t\\\n     warn_traditional = (val >> 2) & 1;\t\t\\"}]}