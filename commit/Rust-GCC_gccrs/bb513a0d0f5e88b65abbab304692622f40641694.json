{"sha": "bb513a0d0f5e88b65abbab304692622f40641694", "node_id": "C_kwDOANBUbNoAKGJiNTEzYTBkMGY1ZTg4YjY1YWJiYWIzMDQ2OTI2MjJmNDA2NDE2OTQ", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-09-07T15:22:47Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-07T08:36:33Z"}, "message": "ada: Flip warning suppression routine to positive meaning\n\nSubprogram names starting with No_ seem unnecessarily confusing.\n\nCleanup related to improved detection of references to uninitialized\nobjects; semantics is unaffected.\n\ngcc/ada/\n\n\t* sem_warn.adb (Warn_On_In_Out): Remove No_ prefix; flip return\n\tvalues between True and False; adapt caller.", "tree": {"sha": "e4d89f11688e759b9863a98abf74b05ce635e89c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4d89f11688e759b9863a98abf74b05ce635e89c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb513a0d0f5e88b65abbab304692622f40641694", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb513a0d0f5e88b65abbab304692622f40641694", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb513a0d0f5e88b65abbab304692622f40641694", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb513a0d0f5e88b65abbab304692622f40641694/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72ae51d581dc8bcf8dcec9b5e0e1560d9e4099d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72ae51d581dc8bcf8dcec9b5e0e1560d9e4099d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72ae51d581dc8bcf8dcec9b5e0e1560d9e4099d1"}], "stats": {"total": 27, "additions": 11, "deletions": 16}, "files": [{"sha": "9dccf0d73d1b1fdeead33b81db818d74d2274354", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb513a0d0f5e88b65abbab304692622f40641694/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb513a0d0f5e88b65abbab304692622f40641694/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=bb513a0d0f5e88b65abbab304692622f40641694", "patch": "@@ -2971,7 +2971,7 @@ package body Sem_Warn is\n \n    procedure Output_Non_Modified_In_Out_Warnings is\n \n-      function No_Warn_On_In_Out (E : Entity_Id) return Boolean;\n+      function Warn_On_In_Out (E : Entity_Id) return Boolean;\n       --  Given a formal parameter entity E, determines if there is a reason to\n       --  suppress IN OUT warnings (not modified, could be IN) for formals of\n       --  the subprogram. We suppress these warnings if Warnings Off is set, or\n@@ -2980,11 +2980,11 @@ package body Sem_Warn is\n       --  context may force use of IN OUT, even if the parameter is not\n       --  modified for this particular case).\n \n-      -----------------------\n-      -- No_Warn_On_In_Out --\n-      -----------------------\n+      --------------------\n+      -- Warn_On_In_Out --\n+      --------------------\n \n-      function No_Warn_On_In_Out (E : Entity_Id) return Boolean is\n+      function Warn_On_In_Out (E : Entity_Id) return Boolean is\n          S  : constant Entity_Id := Scope (E);\n          SE : constant Entity_Id := Spec_Entity (E);\n \n@@ -2995,27 +2995,27 @@ package body Sem_Warn is\n          if Address_Taken (S)\n            or else (Present (SE) and then Address_Taken (Scope (SE)))\n          then\n-            return True;\n+            return False;\n \n          --  Do not warn if used as a generic actual, since the generic may be\n          --  what is forcing the use of an \"unnecessary\" IN OUT.\n \n          elsif Used_As_Generic_Actual (S)\n            or else (Present (SE) and then Used_As_Generic_Actual (Scope (SE)))\n          then\n-            return True;\n+            return False;\n \n          --  Else test warnings off on the subprogram\n \n          elsif Warnings_Off (S) then\n-            return True;\n+            return False;\n \n          --  All tests for suppressing warning failed\n \n          else\n-            return False;\n+            return True;\n          end if;\n-      end No_Warn_On_In_Out;\n+      end Warn_On_In_Out;\n \n    --  Start of processing for Output_Non_Modified_In_Out_Warnings\n \n@@ -3030,12 +3030,7 @@ package body Sem_Warn is\n             --  Suppress warning in specific cases (see details in comments for\n             --  No_Warn_On_In_Out).\n \n-            if No_Warn_On_In_Out (E1) then\n-               null;\n-\n-            --  Here we generate the warning\n-\n-            else\n+            if Warn_On_In_Out (E1) then\n                --  If -gnatwk is set then output message that it could be IN\n \n                if not Is_Trivial_Subprogram (Scope (E1)) then"}]}