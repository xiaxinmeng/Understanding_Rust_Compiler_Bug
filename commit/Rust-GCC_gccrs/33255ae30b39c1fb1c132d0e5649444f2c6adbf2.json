{"sha": "33255ae30b39c1fb1c132d0e5649444f2c6adbf2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMyNTVhZTMwYjM5YzFmYjFjMTMyZDBlNTY0OTQ0NGYyYzZhZGJmMg==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2013-06-18T15:19:55Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2013-06-18T15:19:55Z"}, "message": "arm.c (neon_vector_mem_operand): Add strict argument.\n\n\t* config/arm/arm.c (neon_vector_mem_operand): Add strict argument.\n\tPermit virtual register pre-reload if !strict.\n\t(coproc_secondary_reload_class): Adjust for neon_vector_mem_operand\n\tchange.\n\t* config/arm/arm-protos.h (neon_vector_mem_operand): Adjust\n\tprototype.\n\t* config/arm/neon.md (movmisalign<mode>): Use\n\tneon_perm_struct_or_reg_operand instead of\n\tneon_struct_or_register_operand.\n\t(*movmisalign<mode>_neon_load, *movmisalign<mode>_neon_store): Use\n\tneon_permissive_struct_operand instead of neon_struct_operand.\n\t* config/arm/constraints.md (Un, Um, Us): Adjust calls to\n\tneon_vector_mem_operand.\n\t* config/arm/predicates.md (neon_struct_operand): Adjust call to\n\tneon_vector_mem_operand.\n\t(neon_permissive_struct_operand): New.\n\t(neon_struct_or_register_operand): Rename to...\n\t(neon_perm_struct_or_reg_operand): This. Adjust call to\n\tneon_vector_mem_operand.\n\nFrom-SVN: r200172", "tree": {"sha": "bea73d88a4e28756281943baff15f1470bac1531", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bea73d88a4e28756281943baff15f1470bac1531"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33255ae30b39c1fb1c132d0e5649444f2c6adbf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33255ae30b39c1fb1c132d0e5649444f2c6adbf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33255ae30b39c1fb1c132d0e5649444f2c6adbf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33255ae30b39c1fb1c132d0e5649444f2c6adbf2/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d579fcda924739ca7e477acc8ac4602372e6e903", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d579fcda924739ca7e477acc8ac4602372e6e903", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d579fcda924739ca7e477acc8ac4602372e6e903"}], "stats": {"total": 68, "additions": 48, "deletions": 20}, "files": [{"sha": "b61f6fe4d84f88764b23d6289a82e2c1b778dc8b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33255ae30b39c1fb1c132d0e5649444f2c6adbf2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33255ae30b39c1fb1c132d0e5649444f2c6adbf2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33255ae30b39c1fb1c132d0e5649444f2c6adbf2", "patch": "@@ -1,3 +1,25 @@\n+2013-06-18  Julian Brown  <julian@codesourcery.com>\n+\n+\t* config/arm/arm.c (neon_vector_mem_operand): Add strict argument.\n+\tPermit virtual register pre-reload if !strict.\n+\t(coproc_secondary_reload_class): Adjust for neon_vector_mem_operand\n+\tchange.\n+\t* config/arm/arm-protos.h (neon_vector_mem_operand): Adjust\n+\tprototype.\n+\t* config/arm/neon.md (movmisalign<mode>): Use\n+\tneon_perm_struct_or_reg_operand instead of\n+\tneon_struct_or_register_operand.\n+\t(*movmisalign<mode>_neon_load, *movmisalign<mode>_neon_store): Use\n+\tneon_permissive_struct_operand instead of neon_struct_operand.\n+\t* config/arm/constraints.md (Un, Um, Us): Adjust calls to\n+\tneon_vector_mem_operand.\n+\t* config/arm/predicates.md (neon_struct_operand): Adjust call to\n+\tneon_vector_mem_operand.\n+\t(neon_permissive_struct_operand): New.\n+\t(neon_struct_or_register_operand): Rename to...\n+\t(neon_perm_struct_or_reg_operand): This. Adjust call to\n+\tneon_vector_mem_operand.\n+\n 2013-06-18  Richard Biener  <rguenther@suse.de>\n \n \t* Makefile.in (LTO_STREAMER_H): Add pointer-set.h dependency."}, {"sha": "a426432061daa69e865cb0ee00ef43b698119919", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33255ae30b39c1fb1c132d0e5649444f2c6adbf2/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33255ae30b39c1fb1c132d0e5649444f2c6adbf2/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=33255ae30b39c1fb1c132d0e5649444f2c6adbf2", "patch": "@@ -95,7 +95,7 @@ extern enum reg_class coproc_secondary_reload_class (enum machine_mode, rtx,\n extern bool arm_tls_referenced_p (rtx);\n \n extern int arm_coproc_mem_operand (rtx, bool);\n-extern int neon_vector_mem_operand (rtx, int);\n+extern int neon_vector_mem_operand (rtx, int, bool);\n extern int neon_struct_mem_operand (rtx);\n extern int arm_no_early_store_addr_dep (rtx, rtx);\n extern int arm_early_store_addr_dep (rtx, rtx);"}, {"sha": "88187ab69a74de21b0ad9058a9d2e2116880b5d9", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33255ae30b39c1fb1c132d0e5649444f2c6adbf2/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33255ae30b39c1fb1c132d0e5649444f2c6adbf2/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=33255ae30b39c1fb1c132d0e5649444f2c6adbf2", "patch": "@@ -7863,7 +7863,7 @@ arm_rtx_costs_1 (rtx x, enum rtx_code outer, int* total, bool speed)\n \t  && GET_CODE (SET_SRC (x)) == VEC_SELECT)\n \t{\n \t  *total = rtx_cost (SET_DEST (x), code, 0, speed);\n-\t  if (!neon_vector_mem_operand (SET_DEST (x), 2))\n+\t  if (!neon_vector_mem_operand (SET_DEST (x), 2, true))\n \t    *total += COSTS_N_INSNS (1);\n \t  return true;\n \t}\n@@ -7874,7 +7874,7 @@ arm_rtx_costs_1 (rtx x, enum rtx_code outer, int* total, bool speed)\n \t{\n \t  rtx mem = XEXP (XEXP (SET_SRC (x), 0), 0);\n \t  *total = rtx_cost (mem, code, 0, speed);\n-\t  if (!neon_vector_mem_operand (mem, 2))\n+\t  if (!neon_vector_mem_operand (mem, 2, true))\n \t    *total += COSTS_N_INSNS (1);\n \t  return true;\n \t}\n@@ -10046,7 +10046,7 @@ arm_coproc_mem_operand (rtx op, bool wb)\n     2 - Element/structure loads (vld1)\n  */\n int\n-neon_vector_mem_operand (rtx op, int type)\n+neon_vector_mem_operand (rtx op, int type, bool strict)\n {\n   rtx ind;\n \n@@ -10058,7 +10058,7 @@ neon_vector_mem_operand (rtx op, int type)\n \t  || reg_mentioned_p (virtual_outgoing_args_rtx, op)\n \t  || reg_mentioned_p (virtual_stack_dynamic_rtx, op)\n \t  || reg_mentioned_p (virtual_stack_vars_rtx, op)))\n-    return FALSE;\n+    return !strict;\n \n   /* Constants are converted into offsets from labels.  */\n   if (!MEM_P (op))\n@@ -10168,7 +10168,7 @@ coproc_secondary_reload_class (enum machine_mode mode, rtx x, bool wb)\n     {\n       if (!TARGET_NEON_FP16)\n \treturn GENERAL_REGS;\n-      if (s_register_operand (x, mode) || neon_vector_mem_operand (x, 2))\n+      if (s_register_operand (x, mode) || neon_vector_mem_operand (x, 2, true))\n \treturn NO_REGS;\n       return GENERAL_REGS;\n     }"}, {"sha": "13230fae8056e0fa43ad23f7707716feb561f316", "filename": "gcc/config/arm/constraints.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33255ae30b39c1fb1c132d0e5649444f2c6adbf2/gcc%2Fconfig%2Farm%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33255ae30b39c1fb1c132d0e5649444f2c6adbf2/gcc%2Fconfig%2Farm%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fconstraints.md?ref=33255ae30b39c1fb1c132d0e5649444f2c6adbf2", "patch": "@@ -358,21 +358,21 @@\n   In ARM/Thumb-2 state a valid address for Neon doubleword vector\n   load/store instructions.\"\n  (and (match_code \"mem\")\n-      (match_test \"TARGET_32BIT && neon_vector_mem_operand (op, 0)\")))\n+      (match_test \"TARGET_32BIT && neon_vector_mem_operand (op, 0, true)\")))\n \n (define_memory_constraint \"Um\"\n  \"@internal\n   In ARM/Thumb-2 state a valid address for Neon element and structure\n   load/store instructions.\"\n  (and (match_code \"mem\")\n-      (match_test \"TARGET_32BIT && neon_vector_mem_operand (op, 2)\")))\n+      (match_test \"TARGET_32BIT && neon_vector_mem_operand (op, 2, true)\")))\n \n (define_memory_constraint \"Us\"\n  \"@internal\n   In ARM/Thumb-2 state a valid address for non-offset loads/stores of\n   quad-word values in four ARM registers.\"\n  (and (match_code \"mem\")\n-      (match_test \"TARGET_32BIT && neon_vector_mem_operand (op, 1)\")))\n+      (match_test \"TARGET_32BIT && neon_vector_mem_operand (op, 1, true)\")))\n \n (define_memory_constraint \"Uq\"\n  \"@internal"}, {"sha": "2761adb286a227887a8f01327dcad0081bf886e5", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33255ae30b39c1fb1c132d0e5649444f2c6adbf2/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33255ae30b39c1fb1c132d0e5649444f2c6adbf2/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=33255ae30b39c1fb1c132d0e5649444f2c6adbf2", "patch": "@@ -241,8 +241,8 @@\n })\n \n (define_expand \"movmisalign<mode>\"\n-  [(set (match_operand:VDQX 0 \"neon_struct_or_register_operand\")\n-\t(unspec:VDQX [(match_operand:VDQX 1 \"neon_struct_or_register_operand\")]\n+  [(set (match_operand:VDQX 0 \"neon_perm_struct_or_reg_operand\")\n+\t(unspec:VDQX [(match_operand:VDQX 1 \"neon_perm_struct_or_reg_operand\")]\n \t\t     UNSPEC_MISALIGNED_ACCESS))]\n   \"TARGET_NEON && !BYTES_BIG_ENDIAN\"\n {\n@@ -255,32 +255,34 @@\n })\n \n (define_insn \"*movmisalign<mode>_neon_store\"\n-  [(set (match_operand:VDX 0 \"neon_struct_operand\"\t       \"=Um\")\n+  [(set (match_operand:VDX 0 \"neon_permissive_struct_operand\"\t\"=Um\")\n \t(unspec:VDX [(match_operand:VDX 1 \"s_register_operand\" \" w\")]\n \t\t    UNSPEC_MISALIGNED_ACCESS))]\n   \"TARGET_NEON && !BYTES_BIG_ENDIAN\"\n   \"vst1.<V_sz_elem>\\t{%P1}, %A0\"\n   [(set_attr \"neon_type\" \"neon_vst1_1_2_regs_vst2_2_regs\")])\n \n (define_insn \"*movmisalign<mode>_neon_load\"\n-  [(set (match_operand:VDX 0 \"s_register_operand\"\t\t\"=w\")\n-\t(unspec:VDX [(match_operand:VDX 1 \"neon_struct_operand\" \" Um\")]\n+  [(set (match_operand:VDX 0 \"s_register_operand\"\t\t\t\"=w\")\n+\t(unspec:VDX [(match_operand:VDX 1 \"neon_permissive_struct_operand\"\n+\t\t\t\t\t\t\t\t\t\" Um\")]\n \t\t    UNSPEC_MISALIGNED_ACCESS))]\n   \"TARGET_NEON && !BYTES_BIG_ENDIAN\"\n   \"vld1.<V_sz_elem>\\t{%P0}, %A1\"\n   [(set_attr \"neon_type\" \"neon_vld1_1_2_regs\")])\n \n (define_insn \"*movmisalign<mode>_neon_store\"\n-  [(set (match_operand:VQX 0 \"neon_struct_operand\"\t       \"=Um\")\n+  [(set (match_operand:VQX 0 \"neon_permissive_struct_operand\"  \"=Um\")\n \t(unspec:VQX [(match_operand:VQX 1 \"s_register_operand\" \" w\")]\n \t\t    UNSPEC_MISALIGNED_ACCESS))]\n   \"TARGET_NEON && !BYTES_BIG_ENDIAN\"\n   \"vst1.<V_sz_elem>\\t{%q1}, %A0\"\n   [(set_attr \"neon_type\" \"neon_vst1_1_2_regs_vst2_2_regs\")])\n \n (define_insn \"*movmisalign<mode>_neon_load\"\n-  [(set (match_operand:VQX 0 \"s_register_operand\"\t         \"=w\")\n-\t(unspec:VQX [(match_operand:VQX 1 \"neon_struct_operand\" \" Um\")]\n+  [(set (match_operand:VQX 0 \"s_register_operand\"\t\t\t\"=w\")\n+\t(unspec:VQX [(match_operand:VQX 1 \"neon_permissive_struct_operand\"\n+\t\t\t\t\t\t\t\t\t\" Um\")]\n \t\t    UNSPEC_MISALIGNED_ACCESS))]\n   \"TARGET_NEON && !BYTES_BIG_ENDIAN\"\n   \"vld1.<V_sz_elem>\\t{%q0}, %A1\""}, {"sha": "06c15e29825f4de16a5478eba4ee6a7d67c593da", "filename": "gcc/config/arm/predicates.md", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33255ae30b39c1fb1c132d0e5649444f2c6adbf2/gcc%2Fconfig%2Farm%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33255ae30b39c1fb1c132d0e5649444f2c6adbf2/gcc%2Fconfig%2Farm%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpredicates.md?ref=33255ae30b39c1fb1c132d0e5649444f2c6adbf2", "patch": "@@ -634,10 +634,14 @@\n \n (define_predicate \"neon_struct_operand\"\n   (and (match_code \"mem\")\n-       (match_test \"TARGET_32BIT && neon_vector_mem_operand (op, 2)\")))\n+       (match_test \"TARGET_32BIT && neon_vector_mem_operand (op, 2, true)\")))\n \n-(define_predicate \"neon_struct_or_register_operand\"\n-  (ior (match_operand 0 \"neon_struct_operand\")\n+(define_predicate \"neon_permissive_struct_operand\"\n+  (and (match_code \"mem\")\n+       (match_test \"TARGET_32BIT && neon_vector_mem_operand (op, 2, false)\")))\n+\n+(define_predicate \"neon_perm_struct_or_reg_operand\"\n+  (ior (match_operand 0 \"neon_permissive_struct_operand\")\n        (match_operand 0 \"s_register_operand\")))\n \n (define_special_predicate \"add_operator\""}]}