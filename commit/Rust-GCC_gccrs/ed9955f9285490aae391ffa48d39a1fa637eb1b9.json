{"sha": "ed9955f9285490aae391ffa48d39a1fa637eb1b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ5OTU1ZjkyODU0OTBhYWUzOTFmZmE0OGQzOWExZmE2MzdlYjFiOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2010-06-11T19:01:47Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-06-11T19:01:47Z"}, "message": "i386.md (unspec): New define_c_enum.\n\n\t* config/i386/i386.md (unspec): New define_c_enum.\n\t(unspecv): Ditto.\n\nFrom-SVN: r160627", "tree": {"sha": "f36703994ec1bcb1638c5da5f9261e0335652f07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f36703994ec1bcb1638c5da5f9261e0335652f07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed9955f9285490aae391ffa48d39a1fa637eb1b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed9955f9285490aae391ffa48d39a1fa637eb1b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed9955f9285490aae391ffa48d39a1fa637eb1b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed9955f9285490aae391ffa48d39a1fa637eb1b9/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8e680db5b64c74ef131f7eb6a50902cf2134f845", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e680db5b64c74ef131f7eb6a50902cf2134f845", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e680db5b64c74ef131f7eb6a50902cf2134f845"}], "stats": {"total": 391, "additions": 198, "deletions": 193}, "files": [{"sha": "9cd65f766f4d4de6df90d89972271998fe170569", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed9955f9285490aae391ffa48d39a1fa637eb1b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed9955f9285490aae391ffa48d39a1fa637eb1b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed9955f9285490aae391ffa48d39a1fa637eb1b9", "patch": "@@ -1,3 +1,8 @@\n+2010-06-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (unspec): New define_c_enum.\n+\t(unspecv): Ditto.\n+\n 2010-06-10  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-family/c-cppbuiltin.c: Include cpp-id-data.h.\n@@ -33,7 +38,7 @@\n \tclean_predicate_lists.\n \n 2010-10-11  Paul Brook  <paul@codesourcery.com>\n- \n+\n \t* doc/invoke.texi: Document ARM -mcpu=cortex-m4.\n \t* config/arm/arm.c (all_architectures): Change v7e-m default to\n \tcortexm4."}, {"sha": "c1613e605d8a1fc75aa9ac1865f10181dec2425a", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 192, "deletions": 192, "changes": 384, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed9955f9285490aae391ffa48d39a1fa637eb1b9/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed9955f9285490aae391ffa48d39a1fa637eb1b9/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=ed9955f9285490aae391ffa48d39a1fa637eb1b9", "patch": "@@ -62,198 +62,198 @@\n \n ;; UNSPEC usage:\n \n-(define_constants\n-  [; Relocation specifiers\n-   (UNSPEC_GOT\t\t\t0)\n-   (UNSPEC_GOTOFF\t\t1)\n-   (UNSPEC_GOTPCREL\t\t2)\n-   (UNSPEC_GOTTPOFF\t\t3)\n-   (UNSPEC_TPOFF\t\t4)\n-   (UNSPEC_NTPOFF\t\t5)\n-   (UNSPEC_DTPOFF\t\t6)\n-   (UNSPEC_GOTNTPOFF\t\t7)\n-   (UNSPEC_INDNTPOFF\t\t8)\n-   (UNSPEC_PLTOFF\t\t9)\n-   (UNSPEC_MACHOPIC_OFFSET\t10)\n-\n-   ; Prologue support\n-   (UNSPEC_STACK_ALLOC\t\t11)\n-   (UNSPEC_SET_GOT\t\t12)\n-   (UNSPEC_SSE_PROLOGUE_SAVE\t13)\n-   (UNSPEC_REG_SAVE\t\t14)\n-   (UNSPEC_DEF_CFA\t\t15)\n-   (UNSPEC_SET_RIP\t\t16)\n-   (UNSPEC_SET_GOT_OFFSET\t17)\n-   (UNSPEC_MEMORY_BLOCKAGE\t18)\n-   (UNSPEC_SSE_PROLOGUE_SAVE_LOW 19)\n-\n-   ; TLS support\n-   (UNSPEC_TP\t\t\t20)\n-   (UNSPEC_TLS_GD\t\t21)\n-   (UNSPEC_TLS_LD_BASE\t\t22)\n-   (UNSPEC_TLSDESC\t\t23)\n-\n-   ; Other random patterns\n-   (UNSPEC_SCAS\t\t\t30)\n-   (UNSPEC_FNSTSW\t\t31)\n-   (UNSPEC_SAHF\t\t\t32)\n-   (UNSPEC_FSTCW\t\t33)\n-   (UNSPEC_ADD_CARRY\t\t34)\n-   (UNSPEC_FLDCW\t\t35)\n-   (UNSPEC_REP\t\t\t36)\n-   (UNSPEC_LD_MPIC\t\t38)\t; load_macho_picbase\n-   (UNSPEC_TRUNC_NOOP\t\t39)\n-\n-   ; For SSE/MMX support:\n-   (UNSPEC_FIX_NOTRUNC\t\t40)\n-   (UNSPEC_MASKMOV\t\t41)\n-   (UNSPEC_MOVMSK\t\t42)\n-   (UNSPEC_MOVNT\t\t43)\n-   (UNSPEC_MOVU\t\t\t44)\n-   (UNSPEC_RCP\t\t\t45)\n-   (UNSPEC_RSQRT\t\t46)\n-   (UNSPEC_SFENCE\t\t47)\n-   (UNSPEC_PFRCP\t\t49)\n-   (UNSPEC_PFRCPIT1\t\t40)\n-   (UNSPEC_PFRCPIT2\t\t41)\n-   (UNSPEC_PFRSQRT\t\t42)\n-   (UNSPEC_PFRSQIT1\t\t43)\n-   (UNSPEC_MFENCE\t\t44)\n-   (UNSPEC_LFENCE\t\t45)\n-   (UNSPEC_PSADBW\t\t46)\n-   (UNSPEC_LDDQU\t\t47)\n-   (UNSPEC_MS_TO_SYSV_CALL\t48)\n-\n-   ; Generic math support\n-   (UNSPEC_COPYSIGN\t\t50)\n-   (UNSPEC_IEEE_MIN\t\t51)\t; not commutative\n-   (UNSPEC_IEEE_MAX\t\t52)\t; not commutative\n-\n-   ; x87 Floating point\n-   (UNSPEC_SIN\t\t\t60)\n-   (UNSPEC_COS\t\t\t61)\n-   (UNSPEC_FPATAN\t\t62)\n-   (UNSPEC_FYL2X\t\t63)\n-   (UNSPEC_FYL2XP1\t\t64)\n-   (UNSPEC_FRNDINT\t\t65)\n-   (UNSPEC_FIST\t\t\t66)\n-   (UNSPEC_F2XM1\t\t67)\n-   (UNSPEC_TAN\t\t\t68)\n-   (UNSPEC_FXAM\t\t\t69)\n-\n-   ; x87 Rounding\n-   (UNSPEC_FRNDINT_FLOOR\t70)\n-   (UNSPEC_FRNDINT_CEIL \t71)\n-   (UNSPEC_FRNDINT_TRUNC\t72)\n-   (UNSPEC_FRNDINT_MASK_PM\t73)\n-   (UNSPEC_FIST_FLOOR\t\t74)\n-   (UNSPEC_FIST_CEIL \t\t75)\n-\n-   ; x87 Double output FP\n-   (UNSPEC_SINCOS_COS\t\t80)\n-   (UNSPEC_SINCOS_SIN\t\t81)\n-   (UNSPEC_XTRACT_FRACT\t\t84)\n-   (UNSPEC_XTRACT_EXP\t\t85)\n-   (UNSPEC_FSCALE_FRACT\t\t86)\n-   (UNSPEC_FSCALE_EXP\t\t87)\n-   (UNSPEC_FPREM_F\t\t88)\n-   (UNSPEC_FPREM_U\t\t89)\n-   (UNSPEC_FPREM1_F\t\t90)\n-   (UNSPEC_FPREM1_U\t\t91)\n-\n-   (UNSPEC_C2_FLAG\t\t95)\n-   (UNSPEC_FXAM_MEM\t\t96)\n-\n-   ; SSP patterns\n-   (UNSPEC_SP_SET\t\t100)\n-   (UNSPEC_SP_TEST\t\t101)\n-   (UNSPEC_SP_TLS_SET\t\t102)\n-   (UNSPEC_SP_TLS_TEST\t\t103)\n-\n-   ; SSSE3\n-   (UNSPEC_PSHUFB\t\t120)\n-   (UNSPEC_PSIGN\t\t121)\n-   (UNSPEC_PALIGNR\t\t122)\n-\n-   ; For SSE4A support\n-   (UNSPEC_EXTRQI               130)\n-   (UNSPEC_EXTRQ                131)\n-   (UNSPEC_INSERTQI             132)\n-   (UNSPEC_INSERTQ              133)\n-\n-   ; For SSE4.1 support\n-   (UNSPEC_BLENDV\t\t134)\n-   (UNSPEC_INSERTPS\t\t135)\n-   (UNSPEC_DP\t\t\t136)\n-   (UNSPEC_MOVNTDQA\t\t137)\n-   (UNSPEC_MPSADBW\t\t138)\n-   (UNSPEC_PHMINPOSUW\t\t139)\n-   (UNSPEC_PTEST\t\t140)\n-   (UNSPEC_ROUND\t\t141)\n-\n-   ; For SSE4.2 support\n-   (UNSPEC_CRC32\t\t143)\n-   (UNSPEC_PCMPESTR\t\t144)\n-   (UNSPEC_PCMPISTR\t\t145)\n-\n-   ; For FMA4 support\n-   (UNSPEC_FMA4_INTRINSIC\t150)\n-   (UNSPEC_FMA4_FMADDSUB\t151)\n-   (UNSPEC_FMA4_FMSUBADD\t152)\n-   (UNSPEC_XOP_UNSIGNED_CMP\t151)\n-   (UNSPEC_XOP_TRUEFALSE\t152)\n-   (UNSPEC_XOP_PERMUTE\t\t153)\n-   (UNSPEC_FRCZ\t\t\t154)\n-\n-   ; For AES support\n-   (UNSPEC_AESENC\t\t159)\n-   (UNSPEC_AESENCLAST\t\t160)\n-   (UNSPEC_AESDEC\t\t161)\n-   (UNSPEC_AESDECLAST\t\t162)\n-   (UNSPEC_AESIMC\t\t163)\n-   (UNSPEC_AESKEYGENASSIST\t164)\n-\n-   ; For PCLMUL support\n-   (UNSPEC_PCLMUL\t\t165)\n-\n-   ; For AVX support\n-   (UNSPEC_PCMP\t\t\t166)\n-   (UNSPEC_VPERMIL\t\t167)\n-   (UNSPEC_VPERMIL2\t\t168)\n-   (UNSPEC_VPERMIL2F128\t\t169)\n-   (UNSPEC_MASKLOAD\t\t170)\n-   (UNSPEC_MASKSTORE\t\t171)\n-   (UNSPEC_CAST\t\t\t172)\n-   (UNSPEC_VTESTP\t\t173)\n-  ])\n-\n-(define_constants\n-  [(UNSPECV_BLOCKAGE\t\t0)\n-   (UNSPECV_STACK_PROBE\t\t1)\n-   (UNSPECV_EMMS\t\t2)\n-   (UNSPECV_LDMXCSR\t\t3)\n-   (UNSPECV_STMXCSR\t\t4)\n-   (UNSPECV_FEMMS\t\t5)\n-   (UNSPECV_CLFLUSH\t\t6)\n-   (UNSPECV_ALIGN\t\t7)\n-   (UNSPECV_MONITOR\t\t8)\n-   (UNSPECV_MWAIT\t\t9)\n-   (UNSPECV_CMPXCHG\t\t10)\n-   (UNSPECV_XCHG\t\t12)\n-   (UNSPECV_LOCK\t\t13)\n-   (UNSPECV_PROLOGUE_USE\t14)\n-   (UNSPECV_CLD\t\t\t15)\n-   (UNSPECV_VZEROALL\t\t16)\n-   (UNSPECV_VZEROUPPER\t\t17)\n-   (UNSPECV_RDTSC\t\t18)\n-   (UNSPECV_RDTSCP\t\t19)\n-   (UNSPECV_RDPMC\t\t20)\n-   (UNSPECV_VSWAPMOV\t\t21)\n-   (UNSPECV_LLWP_INTRINSIC\t22)\n-   (UNSPECV_SLWP_INTRINSIC\t23)\n-   (UNSPECV_LWPVAL_INTRINSIC\t24)\n-   (UNSPECV_LWPINS_INTRINSIC\t25)\n-  ])\n+(define_c_enum \"unspec\" [\n+  ;; Relocation specifiers\n+  UNSPEC_GOT\n+  UNSPEC_GOTOFF\n+  UNSPEC_GOTPCREL\n+  UNSPEC_GOTTPOFF\n+  UNSPEC_TPOFF\n+  UNSPEC_NTPOFF\n+  UNSPEC_DTPOFF\n+  UNSPEC_GOTNTPOFF\n+  UNSPEC_INDNTPOFF\n+  UNSPEC_PLTOFF\n+  UNSPEC_MACHOPIC_OFFSET\n+\n+  ;; Prologue support\n+  UNSPEC_STACK_ALLOC\n+  UNSPEC_SET_GOT\n+  UNSPEC_SSE_PROLOGUE_SAVE\n+  UNSPEC_REG_SAVE\n+  UNSPEC_DEF_CFA\n+  UNSPEC_SET_RIP\n+  UNSPEC_SET_GOT_OFFSET\n+  UNSPEC_MEMORY_BLOCKAGE\n+  UNSPEC_SSE_PROLOGUE_SAVE_LOW\n+\n+  ;; TLS support\n+  UNSPEC_TP\n+  UNSPEC_TLS_GD\n+  UNSPEC_TLS_LD_BASE\n+  UNSPEC_TLSDESC\n+\n+  ;; Other random patterns\n+  UNSPEC_SCAS\n+  UNSPEC_FNSTSW\n+  UNSPEC_SAHF\n+  UNSPEC_FSTCW\n+  UNSPEC_ADD_CARRY\n+  UNSPEC_FLDCW\n+  UNSPEC_REP\n+  UNSPEC_LD_MPIC\t; load_macho_picbase\n+  UNSPEC_TRUNC_NOOP\n+\n+  ;; For SSE/MMX support:\n+  UNSPEC_FIX_NOTRUNC\n+  UNSPEC_MASKMOV\n+  UNSPEC_MOVMSK\n+  UNSPEC_MOVNT\n+  UNSPEC_MOVU\n+  UNSPEC_RCP\n+  UNSPEC_RSQRT\n+  UNSPEC_SFENCE\n+  UNSPEC_PFRCP\n+  UNSPEC_PFRCPIT1\n+  UNSPEC_PFRCPIT2\n+  UNSPEC_PFRSQRT\n+  UNSPEC_PFRSQIT1\n+  UNSPEC_MFENCE\n+  UNSPEC_LFENCE\n+  UNSPEC_PSADBW\n+  UNSPEC_LDDQU\n+  UNSPEC_MS_TO_SYSV_CALL\n+\n+  ;; Generic math support\n+  UNSPEC_COPYSIGN\n+  UNSPEC_IEEE_MIN\t; not commutative\n+  UNSPEC_IEEE_MAX\t; not commutative\n+\n+  ;; x87 Floating point\n+  UNSPEC_SIN\n+  UNSPEC_COS\n+  UNSPEC_FPATAN\n+  UNSPEC_FYL2X\n+  UNSPEC_FYL2XP1\n+  UNSPEC_FRNDINT\n+  UNSPEC_FIST\n+  UNSPEC_F2XM1\n+  UNSPEC_TAN\n+  UNSPEC_FXAM\n+\n+  ;; x87 Rounding\n+  UNSPEC_FRNDINT_FLOOR\n+  UNSPEC_FRNDINT_CEIL\n+  UNSPEC_FRNDINT_TRUNC\n+  UNSPEC_FRNDINT_MASK_PM\n+  UNSPEC_FIST_FLOOR\n+  UNSPEC_FIST_CEIL\n+\n+  ;; x87 Double output FP\n+  UNSPEC_SINCOS_COS\n+  UNSPEC_SINCOS_SIN\n+  UNSPEC_XTRACT_FRACT\n+  UNSPEC_XTRACT_EXP\n+  UNSPEC_FSCALE_FRACT\n+  UNSPEC_FSCALE_EXP\n+  UNSPEC_FPREM_F\n+  UNSPEC_FPREM_U\n+  UNSPEC_FPREM1_F\n+  UNSPEC_FPREM1_U\n+\n+  UNSPEC_C2_FLAG\n+  UNSPEC_FXAM_MEM\n+\n+  ;; SSP patterns\n+  UNSPEC_SP_SET\n+  UNSPEC_SP_TEST\n+  UNSPEC_SP_TLS_SET\n+  UNSPEC_SP_TLS_TEST\n+\n+  ;; SSSE3\n+  UNSPEC_PSHUFB\n+  UNSPEC_PSIGN\n+  UNSPEC_PALIGNR\n+\n+  ;; For SSE4A support\n+  UNSPEC_EXTRQI\n+  UNSPEC_EXTRQ\n+  UNSPEC_INSERTQI\n+  UNSPEC_INSERTQ\n+\n+  ;; For SSE4.1 support\n+  UNSPEC_BLENDV\n+  UNSPEC_INSERTPS\n+  UNSPEC_DP\n+  UNSPEC_MOVNTDQA\n+  UNSPEC_MPSADBW\n+  UNSPEC_PHMINPOSUW\n+  UNSPEC_PTEST\n+  UNSPEC_ROUND\n+\n+  ;; For SSE4.2 support\n+  UNSPEC_CRC32\n+  UNSPEC_PCMPESTR\n+  UNSPEC_PCMPISTR\n+\n+  ;; For FMA4 support\n+  UNSPEC_FMA4_INTRINSIC\n+  UNSPEC_FMA4_FMADDSUB\n+  UNSPEC_FMA4_FMSUBADD\n+  UNSPEC_XOP_UNSIGNED_CMP\n+  UNSPEC_XOP_TRUEFALSE\n+  UNSPEC_XOP_PERMUTE\n+  UNSPEC_FRCZ\n+\n+  ;; For AES support\n+  UNSPEC_AESENC\n+  UNSPEC_AESENCLAST\n+  UNSPEC_AESDEC\n+  UNSPEC_AESDECLAST\n+  UNSPEC_AESIMC\n+  UNSPEC_AESKEYGENASSIST\n+\n+  ;; For PCLMUL support\n+  UNSPEC_PCLMUL\n+\n+  ;; For AVX support\n+  UNSPEC_PCMP\n+  UNSPEC_VPERMIL\n+  UNSPEC_VPERMIL2\n+  UNSPEC_VPERMIL2F128\n+  UNSPEC_MASKLOAD\n+  UNSPEC_MASKSTORE\n+  UNSPEC_CAST\n+  UNSPEC_VTESTP\n+])\n+\n+(define_c_enum \"unspecv\" [\n+  UNSPECV_BLOCKAGE\n+  UNSPECV_STACK_PROBE\n+  UNSPECV_EMMS\n+  UNSPECV_LDMXCSR\n+  UNSPECV_STMXCSR\n+  UNSPECV_FEMMS\n+  UNSPECV_CLFLUSH\n+  UNSPECV_ALIGN\n+  UNSPECV_MONITOR\n+  UNSPECV_MWAIT\n+  UNSPECV_CMPXCHG\n+  UNSPECV_XCHG\n+  UNSPECV_LOCK\n+  UNSPECV_PROLOGUE_USE\n+  UNSPECV_CLD\n+  UNSPECV_VZEROALL\n+  UNSPECV_VZEROUPPER\n+  UNSPECV_RDTSC\n+  UNSPECV_RDTSCP\n+  UNSPECV_RDPMC\n+  UNSPECV_VSWAPMOV\n+  UNSPECV_LLWP_INTRINSIC\n+  UNSPECV_SLWP_INTRINSIC\n+  UNSPECV_LWPVAL_INTRINSIC\n+  UNSPECV_LWPINS_INTRINSIC\n+])\n \n ;; Constants to represent pcomtrue/pcomfalse variants\n (define_constants"}]}