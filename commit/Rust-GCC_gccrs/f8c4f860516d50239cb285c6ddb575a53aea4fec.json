{"sha": "f8c4f860516d50239cb285c6ddb575a53aea4fec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhjNGY4NjA1MTZkNTAyMzljYjI4NWM2ZGRiNTc1YTUzYWVhNGZlYw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-11-12T13:01:37Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-11-12T13:01:37Z"}, "message": "jump.c (delete_computation): Don't assume that just becuase an instruction sets a register...\n\n\t* jump.c (delete_computation): Don't assume that just becuase an\n\tinstruction sets a register, that register is dead.\n\nFrom-SVN: r37405", "tree": {"sha": "00463063b57e97e73fdf6d912f40f5f6fdc19729", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00463063b57e97e73fdf6d912f40f5f6fdc19729"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8c4f860516d50239cb285c6ddb575a53aea4fec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8c4f860516d50239cb285c6ddb575a53aea4fec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8c4f860516d50239cb285c6ddb575a53aea4fec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8c4f860516d50239cb285c6ddb575a53aea4fec/comments", "author": null, "committer": null, "parents": [{"sha": "b528a07e0e5693ec33b7e77c600c0b32117f7742", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b528a07e0e5693ec33b7e77c600c0b32117f7742", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b528a07e0e5693ec33b7e77c600c0b32117f7742"}], "stats": {"total": 42, "additions": 15, "deletions": 27}, "files": [{"sha": "26e35f1ada06b473010b38f26b5aa2a33fbd6966", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c4f860516d50239cb285c6ddb575a53aea4fec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c4f860516d50239cb285c6ddb575a53aea4fec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8c4f860516d50239cb285c6ddb575a53aea4fec", "patch": "@@ -1,3 +1,8 @@\n+2000-11-12  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* jump.c (delete_computation): Don't assume that just becuase an\n+\tinstruction sets a register, that register is dead.\n+\n 2000-11-12  Neil Booth  <neilb@earthling.net>\n \n         * cppexp.c: Don't worry about pfile->skipping."}, {"sha": "195e60f9d8b41e5e0776ef7fb7d321821c434332", "filename": "gcc/jump.c", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c4f860516d50239cb285c6ddb575a53aea4fec/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c4f860516d50239cb285c6ddb575a53aea4fec/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=f8c4f860516d50239cb285c6ddb575a53aea4fec", "patch": "@@ -2680,7 +2680,6 @@ delete_computation (insn)\n      rtx insn;\n {\n   rtx note, next;\n-  rtx set;\n \n #ifdef HAVE_cc0\n   if (reg_referenced_p (cc0_rtx, PATTERN (insn)))\n@@ -2717,32 +2716,6 @@ delete_computation (insn)\n     }\n #endif\n \n-  /* The REG_DEAD note may have been omitted for a register\n-     which is both set and used by the insn.  */\n-  set = single_set (insn);\n-  if (set && GET_CODE (SET_DEST (set)) == REG)\n-    {\n-      int dest_regno = REGNO (SET_DEST (set));\n-      int dest_endregno\n-\t= dest_regno + (dest_regno < FIRST_PSEUDO_REGISTER\n-\t\t\t? HARD_REGNO_NREGS (dest_regno,\n-\t\t\t\t\t    GET_MODE (SET_DEST (set))) : 1);\n-      int i;\n-\n-      for (i = dest_regno; i < dest_endregno; i++)\n-\t{\n-\t  if (! refers_to_regno_p (i, i + 1, SET_SRC (set), NULL_PTR)\n-\t      || find_regno_note (insn, REG_DEAD, i))\n-\t    continue;\n-\n-\t  note = gen_rtx_EXPR_LIST (REG_DEAD,\n-\t\t\t\t    (i < FIRST_PSEUDO_REGISTER\n-\t\t\t\t     ? gen_rtx_REG (reg_raw_mode[i], i)\n-\t\t\t\t     : SET_DEST (set)), NULL_RTX);\n-\t  delete_prior_computation (note, insn);\n-\t}\n-    }\n-\n   for (note = REG_NOTES (insn); note; note = next)\n     {\n       next = XEXP (note, 1);"}, {"sha": "6ce2f66516f778915c881321070b9e2ca8ddf5b2", "filename": "gcc/testsuite/gcc.c-torture/execute/20001112-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c4f860516d50239cb285c6ddb575a53aea4fec/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20001112-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c4f860516d50239cb285c6ddb575a53aea4fec/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20001112-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20001112-1.c?ref=f8c4f860516d50239cb285c6ddb575a53aea4fec", "patch": "@@ -0,0 +1,10 @@\n+int main ()\n+{\n+  long long i = 1;\n+\n+  i = i * 2 + 1;\n+  \n+  if (i != 3)\n+    abort ();\n+  exit (0);\n+}"}]}