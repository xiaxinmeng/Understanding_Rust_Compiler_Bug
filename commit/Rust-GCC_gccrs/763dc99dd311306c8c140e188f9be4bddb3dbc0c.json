{"sha": "763dc99dd311306c8c140e188f9be4bddb3dbc0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzYzZGM5OWRkMzExMzA2YzhjMTQwZTE4OGY5YmU0YmRkYjNkYmMwYw==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2012-05-16T20:22:03Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2012-05-16T20:22:03Z"}, "message": "gimple-fold.c (get_maxval_strlen): Move COND_EXPR handling under GIMPLE_ASSIGN.\n\n2012-05-16  Andrew Pinski  <apinski@cavium.com>\n\n\t* gimple-fold.c (get_maxval_strlen): Move COND_EXPR handling under\n\tGIMPLE_ASSIGN.\n\nFrom-SVN: r187608", "tree": {"sha": "367528823c752fbc5fb3617b3bf2902eafce4aa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/367528823c752fbc5fb3617b3bf2902eafce4aa2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/763dc99dd311306c8c140e188f9be4bddb3dbc0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/763dc99dd311306c8c140e188f9be4bddb3dbc0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/763dc99dd311306c8c140e188f9be4bddb3dbc0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/763dc99dd311306c8c140e188f9be4bddb3dbc0c/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e2b0f75cc7541b82abcb78494f20402b89e13b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e2b0f75cc7541b82abcb78494f20402b89e13b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e2b0f75cc7541b82abcb78494f20402b89e13b6"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "b05a5b573d7ee535b0275b64cbcb46e0431a7bf8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/763dc99dd311306c8c140e188f9be4bddb3dbc0c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/763dc99dd311306c8c140e188f9be4bddb3dbc0c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=763dc99dd311306c8c140e188f9be4bddb3dbc0c", "patch": "@@ -1,3 +1,8 @@\n+2012-05-16  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* gimple-fold.c (get_maxval_strlen): Move COND_EXPR handling under\n+\tGIMPLE_ASSIGN.\n+\n 2012-05-16  David S. Miller  <davem@davemloft.net>\n \n \t* jump.c (delete_related_insns): If we remove a CALL, make sure"}, {"sha": "b6f01430bb1c93e29b7c9567791cbbbe1d17e008", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/763dc99dd311306c8c140e188f9be4bddb3dbc0c/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/763dc99dd311306c8c140e188f9be4bddb3dbc0c/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=763dc99dd311306c8c140e188f9be4bddb3dbc0c", "patch": "@@ -670,13 +670,10 @@ get_maxval_strlen (tree arg, tree *length, bitmap visited, int type)\n \n   if (TREE_CODE (arg) != SSA_NAME)\n     {\n-      if (TREE_CODE (arg) == COND_EXPR)\n-        return get_maxval_strlen (COND_EXPR_THEN (arg), length, visited, type)\n-               && get_maxval_strlen (COND_EXPR_ELSE (arg), length, visited, type);\n       /* We can end up with &(*iftmp_1)[0] here as well, so handle it.  */\n-      else if (TREE_CODE (arg) == ADDR_EXPR\n-\t       && TREE_CODE (TREE_OPERAND (arg, 0)) == ARRAY_REF\n-\t       && integer_zerop (TREE_OPERAND (TREE_OPERAND (arg, 0), 1)))\n+      if (TREE_CODE (arg) == ADDR_EXPR\n+\t  && TREE_CODE (TREE_OPERAND (arg, 0)) == ARRAY_REF\n+\t  && integer_zerop (TREE_OPERAND (TREE_OPERAND (arg, 0), 1)))\n \t{\n \t  tree aop0 = TREE_OPERAND (TREE_OPERAND (arg, 0), 0);\n \t  if (TREE_CODE (aop0) == INDIRECT_REF\n@@ -736,6 +733,13 @@ get_maxval_strlen (tree arg, tree *length, bitmap visited, int type)\n             tree rhs = gimple_assign_rhs1 (def_stmt);\n             return get_maxval_strlen (rhs, length, visited, type);\n           }\n+\telse if (gimple_assign_rhs_code (def_stmt) == COND_EXPR)\n+\t  {\n+\t    tree op2 = gimple_assign_rhs2 (def_stmt);\n+\t    tree op3 = gimple_assign_rhs3 (def_stmt);\n+\t    return get_maxval_strlen (op2, length, visited, type)\n+\t\t   && get_maxval_strlen (op3, length, visited, type);\n+          }\n         return false;\n \n       case GIMPLE_PHI:"}]}