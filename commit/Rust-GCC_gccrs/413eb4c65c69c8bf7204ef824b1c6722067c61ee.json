{"sha": "413eb4c65c69c8bf7204ef824b1c6722067c61ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDEzZWI0YzY1YzY5YzhiZjcyMDRlZjgyNGIxYzY3MjIwNjdjNjFlZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-12-03T20:57:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-12-03T20:57:14Z"}, "message": "re PR middle-end/64242 (Longjmp expansion incorrect)\n\n\tPR middle-end/64242\n\t* gcc.c-torture/execute/pr64242.c (foo, bar): New functions.\n\t(p): Make it void *volatile instead of volatile void *.\n\t(q): New variable.\n\t(main): Add a dummy 32-byte aligned variable and escape its address.\n\tDon't require that the two __builtin_alloca (0) calls return the\n\tsame address, just require that their difference is smaller than\n\t1024 bytes.\n\nFrom-SVN: r266766", "tree": {"sha": "e7eaa3bf708a11a779220e92f6c6559028a03759", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7eaa3bf708a11a779220e92f6c6559028a03759"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/413eb4c65c69c8bf7204ef824b1c6722067c61ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/413eb4c65c69c8bf7204ef824b1c6722067c61ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/413eb4c65c69c8bf7204ef824b1c6722067c61ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/413eb4c65c69c8bf7204ef824b1c6722067c61ee/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "44b619c14cad4e9e8a10b469ef1075886b27ddc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44b619c14cad4e9e8a10b469ef1075886b27ddc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44b619c14cad4e9e8a10b469ef1075886b27ddc0"}], "stats": {"total": 44, "additions": 38, "deletions": 6}, "files": [{"sha": "f6bd4566c9e99403635688411676ad7d152e9f61", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/413eb4c65c69c8bf7204ef824b1c6722067c61ee/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/413eb4c65c69c8bf7204ef824b1c6722067c61ee/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=413eb4c65c69c8bf7204ef824b1c6722067c61ee", "patch": "@@ -1,3 +1,14 @@\n+2018-12-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/64242\n+\t* gcc.c-torture/execute/pr64242.c (foo, bar): New functions.\n+\t(p): Make it void *volatile instead of volatile void *.\n+\t(q): New variable.\n+\t(main): Add a dummy 32-byte aligned variable and escape its address.\n+\tDon't require that the two __builtin_alloca (0) calls return the\n+\tsame address, just require that their difference is smaller than\n+\t1024 bytes.\n+\n 2018-12-03  Marek Polacek  <polacek@redhat.com>\n \n \t* g++.dg/cpp1y/lambda-generic-83856.C: Use __SIZE_TYPE__."}, {"sha": "46a7b23d28d71604d141281c21fb0b77849b1b0d", "filename": "gcc/testsuite/gcc.c-torture/execute/pr64242.c", "status": "modified", "additions": 27, "deletions": 6, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/413eb4c65c69c8bf7204ef824b1c6722067c61ee/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr64242.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/413eb4c65c69c8bf7204ef824b1c6722067c61ee/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr64242.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr64242.c?ref=413eb4c65c69c8bf7204ef824b1c6722067c61ee", "patch": "@@ -3,28 +3,49 @@\n extern void abort (void);\n \n __attribute ((noinline)) void\n-broken_longjmp(void *p)\n+broken_longjmp (void *p)\n {\n   void *buf[5];\n   __builtin_memcpy (buf, p, 5 * sizeof (void*));\n   /* Corrupts stack pointer...  */\n   __builtin_longjmp (buf, 1);\n }\n \n+__attribute ((noipa)) __UINTPTR_TYPE__\n+foo (void *p)\n+{\n+  return (__UINTPTR_TYPE__) p;\n+}\n+\n+__attribute ((noipa)) void\n+bar (void *p)\n+{\n+  asm volatile (\"\" : : \"r\" (p));\n+}\n+\n volatile int x = 0;\n-volatile void *p;\n+void *volatile p;\n+void *volatile q;\n+\n int\n-main (void)\n+main ()\n {\n   void *buf[5];\n+  struct __attribute__((aligned (32))) S { int a[4]; } s;\n+  bar (&s);\n   p = __builtin_alloca (x);\n-\n   if (!__builtin_setjmp (buf))\n     broken_longjmp (buf);\n \n   /* Fails if stack pointer corrupted.  */\n-  if (p != __builtin_alloca (x))\n-    abort();\n+  q = __builtin_alloca (x);\n+  if (foo (p) < foo (q))\n+    {\n+      if (foo (q) - foo (p) >= 1024)\n+\tabort ();\n+    }\n+  else if (foo (p) - foo (q) >= 1024)\n+    abort ();\n \n   return 0;\n }"}]}