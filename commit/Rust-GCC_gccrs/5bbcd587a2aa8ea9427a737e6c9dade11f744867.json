{"sha": "5bbcd587a2aa8ea9427a737e6c9dade11f744867", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJiY2Q1ODdhMmFhOGVhOTQyN2E3MzdlNmM5ZGFkZTExZjc0NDg2Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-10-03T20:35:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-10-03T20:35:14Z"}, "message": "gcc.c (print_multi_os_directory): New variable.\n\n\t* gcc.c (print_multi_os_directory): New variable.\n\t(option_map): Support --print-multi-os-directory.\n\t(struct prefix_list): Add os_multilib field.\n\t(multilib_os_dir): New variable.\n\t(static_specs): Add multilib_options.\n\t(find_a_file): Add multilib argument.  Search in GCC or OS multilib\n\tsubdirs if non-zero.\n\t(read_specs, execute): Update callers.\n\t(find_file): Likewise.  Don't prefix name with multilib_dir, instead\n\tpass 1 as multilib option.\n\t(display_help): Include --print-multi-os-directory.\n\t(add_prefix): Add os_multilib argument.  Initialize pl->os_multilib.\n\t(process_command): Update callers.  Handle --print-multi-os-directory.\n\t(do_spec_1) ['D']: Use multilib_os_directory if pl->os_multilib is\n\tset.\n\t(main): Update find_a_file and add_prefix callers.\n\tHandle print_multi_os_directory.\n\t(struct mdswitchstr): New.\n\t(mdswitches, n_mdswitches): New variables.\n\t(used_arg): Add MULTILIB_DEFAULT switches too if they are not\n\tpresent on the command line nor their mutually incompatible\n\tswitches.\n\t(default_arg): Optimize.\n\t(set_multilib_dir): Compute multilib_os_dir.  Initialize mdswitches\n\tarray.\n\t(print_multilib_info): Only print GCC multilib dir name, not OS\n\tmultilib dirname.\n\t* genmultilib: Add osdirnames parameter.  Output multilib_options\n\tvariable.  If osdirnames is specified, output dirnames as\n\tdirname:osdirname.\n\t* mklibgcc.in: Use MULTILIB_OSDIRNAMES, --print-multi-directory\n\tand --print-multi-os-directory instead of SHLIB_SLIBDIR_SUFFIXES\n\tto compute libgcc_s soname and install path.\n\t* Makefile.in (libgcc.mk): Pass MULTILIB_OSDIRNAMES instead of\n\tSHLIB_SLIBDIR_SUFFIXES to mklibgcc.\n\t(s_mlib): Pass MULTILIB_OSDIRNAMES or nothing as last genmultilib\n\targument.\n\n\t* config/sparc/t-linux64 (MULTILIB_OSDIRNAMES): Set.\n\t(SHLIB_SLIBDIR_SUFFIXES): Remove.\n\t* config/sparc/linux64.h (STARTFILE_SPEC32, STARTFILE_SPEC64,\n\tENDFILE_SPEC32, ENDFILE_SPEC64, ENDFILE_COMMON): Remove.\n\t(STARTFILE_SPEC, ENDFILE_SPEC): Don't distinguish between -m32\n\tand -m64.\n\t* config/sparc/t-sol2-64 (MULTILIB_OSDIRNAMES): Set.\n\t(SHLIB_SLIBDIR_SUFFIXES): Remove.\n\t* config/sparc/sol2-bi.h (STARTFILE_ARCH64_SPEC): Remove.\n\t(STARTFILE_ARCH_SPEC): Remove.\n\t* config/i386/t-linux64 (MULTILIB_OSDIRNAMES): Set.\n\t(SHLIB_SLIBDIR_SUFFIXES): Remove.\n\t* config/i386/linux64.h (STARTFILE_PREFIX_SPEC): Remove.\n\t* config/mips/t-iris6 (MULTILIB_OSDIRNAMES): Set.\n\t(SHLIB_SLIBDIR_SUFFIXES): Remove.\n\nFrom-SVN: r57786", "tree": {"sha": "456cd45052f2e8eae6252ce7e1adc27a5c880d61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/456cd45052f2e8eae6252ce7e1adc27a5c880d61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bbcd587a2aa8ea9427a737e6c9dade11f744867", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bbcd587a2aa8ea9427a737e6c9dade11f744867", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bbcd587a2aa8ea9427a737e6c9dade11f744867", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bbcd587a2aa8ea9427a737e6c9dade11f744867/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c07f146f074b93fa33272cb47040d8394739865d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c07f146f074b93fa33272cb47040d8394739865d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c07f146f074b93fa33272cb47040d8394739865d"}], "stats": {"total": 656, "additions": 420, "deletions": 236}, "files": [{"sha": "5e9e0737fa8af5ca2652e9d57ba24d76aff64232", "filename": "gcc/ChangeLog", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5bbcd587a2aa8ea9427a737e6c9dade11f744867", "patch": "@@ -1,3 +1,59 @@\n+2002-10-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c (print_multi_os_directory): New variable.\n+\t(option_map): Support --print-multi-os-directory.\n+\t(struct prefix_list): Add os_multilib field.\n+\t(multilib_os_dir): New variable.\n+\t(static_specs): Add multilib_options.\n+\t(find_a_file): Add multilib argument.  Search in GCC or OS multilib\n+\tsubdirs if non-zero.\n+\t(read_specs, execute): Update callers.\n+\t(find_file): Likewise.  Don't prefix name with multilib_dir, instead\n+\tpass 1 as multilib option.\n+\t(display_help): Include --print-multi-os-directory.\n+\t(add_prefix): Add os_multilib argument.  Initialize pl->os_multilib.\n+\t(process_command): Update callers.  Handle --print-multi-os-directory.\n+\t(do_spec_1) ['D']: Use multilib_os_directory if pl->os_multilib is\n+\tset.\n+\t(main): Update find_a_file and add_prefix callers.\n+\tHandle print_multi_os_directory.\n+\t(struct mdswitchstr): New.\n+\t(mdswitches, n_mdswitches): New variables.\n+\t(used_arg): Add MULTILIB_DEFAULT switches too if they are not\n+\tpresent on the command line nor their mutually incompatible\n+\tswitches.\n+\t(default_arg): Optimize.\n+\t(set_multilib_dir): Compute multilib_os_dir.  Initialize mdswitches\n+\tarray.\n+\t(print_multilib_info): Only print GCC multilib dir name, not OS\n+\tmultilib dirname.\n+\t* genmultilib: Add osdirnames parameter.  Output multilib_options\n+\tvariable.  If osdirnames is specified, output dirnames as\n+\tdirname:osdirname.\n+\t* mklibgcc.in: Use MULTILIB_OSDIRNAMES, --print-multi-directory\n+\tand --print-multi-os-directory instead of SHLIB_SLIBDIR_SUFFIXES\n+\tto compute libgcc_s soname and install path.\n+\t* Makefile.in (libgcc.mk): Pass MULTILIB_OSDIRNAMES instead of\n+\tSHLIB_SLIBDIR_SUFFIXES to mklibgcc.\n+\t(s_mlib): Pass MULTILIB_OSDIRNAMES or nothing as last genmultilib\n+\targument.\n+\n+\t* config/sparc/t-linux64 (MULTILIB_OSDIRNAMES): Set.\n+\t(SHLIB_SLIBDIR_SUFFIXES): Remove.\n+\t* config/sparc/linux64.h (STARTFILE_SPEC32, STARTFILE_SPEC64,\n+\tENDFILE_SPEC32, ENDFILE_SPEC64, ENDFILE_COMMON): Remove.\n+\t(STARTFILE_SPEC, ENDFILE_SPEC): Don't distinguish between -m32\n+\tand -m64.\n+\t* config/sparc/t-sol2-64 (MULTILIB_OSDIRNAMES): Set.\n+\t(SHLIB_SLIBDIR_SUFFIXES): Remove.\n+\t* config/sparc/sol2-bi.h (STARTFILE_ARCH64_SPEC): Remove.\n+\t(STARTFILE_ARCH_SPEC): Remove.\n+\t* config/i386/t-linux64 (MULTILIB_OSDIRNAMES): Set.\n+\t(SHLIB_SLIBDIR_SUFFIXES): Remove.\n+\t* config/i386/linux64.h (STARTFILE_PREFIX_SPEC): Remove.\n+\t* config/mips/t-iris6 (MULTILIB_OSDIRNAMES): Set.\n+\t(SHLIB_SLIBDIR_SUFFIXES): Remove.\n+\n Thu Oct  3 21:42:20 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* predict.c (choose_function_section): Avoid choice for linkonce functions."}, {"sha": "edf95572d608733510271cc4a16a9038f423c1ef", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=5bbcd587a2aa8ea9427a737e6c9dade11f744867", "patch": "@@ -1027,7 +1027,7 @@ libgcc.mk: config.status Makefile mklibgcc $(LIB2ADD) $(LIB2ADD_ST) xgcc$(exeext\n \tSHLIB_MKMAP_OPTS='$(SHLIB_MKMAP_OPTS)' \\\n \tSHLIB_MAPFILES='$(SHLIB_MAPFILES)' \\\n \tSHLIB_NM_FLAGS='$(SHLIB_NM_FLAGS)' \\\n-\tSHLIB_SLIBDIR_SUFFIXES='$(SHLIB_SLIBDIR_SUFFIXES)' \\\n+\tMULTILIB_OSDIRNAMES='$(MULTILIB_OSDIRNAMES)' \\\n \tmkinstalldirs='$(SHELL) $(srcdir)/mkinstalldirs' \\\n \t  $(SHELL) mklibgcc > tmp-libgcc.mk\n \tmv tmp-libgcc.mk libgcc.mk\n@@ -1069,9 +1069,10 @@ s-mlib: $(srcdir)/genmultilib Makefile\n \t    \"$(MULTILIB_EXCEPTIONS)\" \\\n \t    \"$(MULTILIB_EXTRA_OPTS)\" \\\n \t    \"$(MULTILIB_EXCLUSIONS)\" \\\n+\t    \"$(MULTILIB_OSDIRNAMES)\" \\\n \t    > tmp-mlib.h; \\\n \telse \\\n-\t  $(SHELL) $(srcdir)/genmultilib '' '' '' '' '' '' > tmp-mlib.h; \\\n+\t  $(SHELL) $(srcdir)/genmultilib '' '' '' '' '' '' '' > tmp-mlib.h; \\\n \tfi\n \t$(SHELL) $(srcdir)/move-if-change tmp-mlib.h multilib.h\n \t$(STAMP) s-mlib"}, {"sha": "965120a1bb615ff4139a15d959679da4eeb95150", "filename": "gcc/config/i386/linux64.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fconfig%2Fi386%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fconfig%2Fi386%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux64.h?ref=5bbcd587a2aa8ea9427a737e6c9dade11f744867", "patch": "@@ -60,10 +60,6 @@ Boston, MA 02111-1307, USA.  */\n       %{!m32:%{!dynamic-linker:-dynamic-linker /lib64/ld-linux-x86-64.so.2}}} \\\n     %{static:-static}}\"\n \n-#define STARTFILE_PREFIX_SPEC \"\\\n-  %{m32: /usr/local/lib/ /lib/ /usr/lib/} \\\n-  %{!m32: /usr/local/lib64/ /lib64/ /usr/lib64/}\"\n-\n #undef  STARTFILE_SPEC\n #define STARTFILE_SPEC \\\n   \"%{!shared: \\"}, {"sha": "8780321ca35e8c2c3f1b78940b80167f24e12ea3", "filename": "gcc/config/i386/t-linux64", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fconfig%2Fi386%2Ft-linux64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fconfig%2Fi386%2Ft-linux64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-linux64?ref=5bbcd587a2aa8ea9427a737e6c9dade11f744867", "patch": "@@ -6,10 +6,9 @@ SHLIB_MAPFILES = $(srcdir)/libgcc-std.ver \\\n \n MULTILIB_OPTIONS = m64/m32\n MULTILIB_DIRNAMES = 64 32 \n+MULTILIB_OSDIRNAMES = ../lib64 ../lib32\n \n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n \n EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o crtbeginS.o crtendS.o crtbeginT.o\n-\n-SHLIB_SLIBDIR_SUFFIXES = 64:64 32:"}, {"sha": "b55bc36aca8db76453487d79fe51dc1a10fd689f", "filename": "gcc/config/mips/t-iris6", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fconfig%2Fmips%2Ft-iris6", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fconfig%2Fmips%2Ft-iris6", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-iris6?ref=5bbcd587a2aa8ea9427a737e6c9dade11f744867", "patch": "@@ -4,6 +4,7 @@\n MULTILIB_OPTIONS=mabi=n32/mabi=64\n MULTILIB_DIRNAMES=\n MULTILIB_MATCHES=\n+MULTILIB_OSDIRNAMES=../lib32 ../lib64\n \n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n@@ -14,8 +15,6 @@ INSTALL_LIBGCC = install-multilib\n EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o\n CRTSTUFF_T_CFLAGS=-g1\n \n-SHLIB_SLIBDIR_SUFFIXES = mabi=64:/mabi=64 mabi=n32:\n-\n # This is only needed in the static libgcc as a band-aid until gcc correctly\n # implements the N32/N64 ABI structure passing conventions\n LIB2FUNCS_STATIC_EXTRA = $(srcdir)/config/mips/irix6-libc-compat.c"}, {"sha": "eb81eb61401c3934908fa4b530429ecbc2b3bb9d", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 7, "deletions": 61, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=5bbcd587a2aa8ea9427a737e6c9dade11f744867", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for 64-bit SPARC running Linux-based GNU systems with ELF.\n-   Copyright 1996, 1997, 1998, 2000 Free Software Foundation, Inc.\n+   Copyright 1996, 1997, 1998, 2000, 2002 Free Software Foundation, Inc.\n    Contributed by David S. Miller (davem@caip.rutgers.edu)\n \n This file is part of GNU CC.\n@@ -55,38 +55,11 @@ Boston, MA 02111-1307, USA.  */\n    \n #undef  STARTFILE_SPEC\n \n-#define STARTFILE_SPEC32 \\\n-  \"%{!shared: \\\n-     %{pg:/usr/lib/gcrt1.o%s} %{!pg:%{p:/usr/lib/gcrt1.o%s} %{!p:/usr/lib/crt1.o%s}}}\\\n-   /usr/lib/crti.o%s %{static:crtbeginT.o%s}\\\n+#define STARTFILE_SPEC \\\n+  \"%{!shared:%{pg:gcrt1.o%s} %{!pg:%{p:gcrt1.o%s} %{!p:crt1.o%s}}}\\\n+   crti.o%s %{static:crtbeginT.o%s}\\\n    %{!static:%{!shared:crtbegin.o%s} %{shared:crtbeginS.o%s}}\"\n \n-#define STARTFILE_SPEC64 \\\n-  \"%{!shared: \\\n-     %{pg:/usr/lib64/gcrt1.o%s} %{!pg:%{p:/usr/lib64/gcrt1.o%s} %{!p:/usr/lib64/crt1.o%s}}}\\\n-   /usr/lib64/crti.o%s %{static:crtbeginT.o%s}\\\n-   %{!static:%{!shared:crtbegin.o%s} %{shared:crtbeginS.o%s}}\"\n-\n-#ifdef SPARC_BI_ARCH\n-\n-#if DEFAULT_ARCH32_P\n-#define STARTFILE_SPEC \"\\\n-%{m32:\" STARTFILE_SPEC32 \"} \\\n-%{m64:\" STARTFILE_SPEC64 \"} \\\n-%{!m32:%{!m64:\" STARTFILE_SPEC32 \"}}\"\n-#else\n-#define STARTFILE_SPEC \"\\\n-%{m32:\" STARTFILE_SPEC32 \"} \\\n-%{m64:\" STARTFILE_SPEC64 \"} \\\n-%{!m32:%{!m64:\" STARTFILE_SPEC64 \"}}\"\n-#endif\n-\n-#else\n-\n-#define STARTFILE_SPEC STARTFILE_SPEC64\n-\n-#endif\n-\n /* Provide a ENDFILE_SPEC appropriate for GNU/Linux.  Here we tack on\n    the GNU/Linux magical crtend.o file (see crtstuff.c) which\n    provides part of the support for getting C++ file-scope static\n@@ -95,36 +68,9 @@ Boston, MA 02111-1307, USA.  */\n \n #undef  ENDFILE_SPEC\n \n-#define ENDFILE_SPEC32 \\\n-  \"%{!shared:crtend.o%s} %{shared:crtendS.o%s} /usr/lib/crtn.o%s\"\n-\n-#define ENDFILE_SPEC64 \\\n-  \"%{!shared:crtend.o%s} %{shared:crtendS.o%s} /usr/lib64/crtn.o%s\"\n-  \n-#define ENDFILE_SPEC_COMMON \\\n-  \"%{ffast-math|funsafe-math-optimizations:crtfastmath.o%s}\"\n-\n-#ifdef SPARC_BI_ARCH\n-\n-#if DEFAULT_ARCH32_P\n-#define ENDFILE_SPEC \"\\\n-%{m32:\" ENDFILE_SPEC32 \"} \\\n-%{m64:\" ENDFILE_SPEC64 \"} \\\n-%{!m32:%{!m64:\" ENDFILE_SPEC32 \"}} \" \\\n-ENDFILE_SPEC_COMMON\n-#else\n-#define ENDFILE_SPEC \"\\\n-%{m32:\" ENDFILE_SPEC32 \"} \\\n-%{m64:\" ENDFILE_SPEC64 \"} \\\n-%{!m32:%{!m64:\" ENDFILE_SPEC64 \"}} \" \\\n-ENDFILE_SPEC_COMMON\n-#endif\n-\n-#else\n-\n-#define ENDFILE_SPEC ENDFILE_SPEC64 \" \" ENDFILE_SPEC_COMMON\n-\n-#endif\n+#define ENDFILE_SPEC \\\n+  \"%{!shared:crtend.o%s} %{shared:crtendS.o%s} crtn.o%s\\\n+   %{ffast-math|funsafe-math-optimizations:crtfastmath.o%s}\"\n \n /* The GNU C++ standard library requires that these macros be defined.  */\n #undef CPLUSPLUS_CPP_SPEC"}, {"sha": "3f9416daaa0952d5d7e8b15b7a1e85acb85aff53", "filename": "gcc/config/sparc/sol2-bi.h", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fconfig%2Fsparc%2Fsol2-bi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fconfig%2Fsparc%2Fsol2-bi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2-bi.h?ref=5bbcd587a2aa8ea9427a737e6c9dade11f744867", "patch": "@@ -57,24 +57,6 @@\n %{!mcpu*:%(asm_cpu_default)} \\\n \"\n \n-#define STARTFILE_ARCH64_SPEC \"\\\n-%{ansi:/usr/lib/sparcv9/values-Xc.o%s} \\\n-%{!ansi:/usr/lib/sparcv9/values-Xa.o%s}\"\n- \n-#undef STARTFILE_ARCH_SPEC\n-\n-#if DEFAULT_ARCH32_P\n-#define STARTFILE_ARCH_SPEC \"\\\n-%{m32:\" STARTFILE_ARCH32_SPEC \"} \\\n-%{m64:\" STARTFILE_ARCH64_SPEC \"} \\\n-%{!m32:%{!m64:\" STARTFILE_ARCH32_SPEC \"}}\"\n-#else\n-#define STARTFILE_ARCH_SPEC \"\\\n-%{m32:\" STARTFILE_ARCH32_SPEC \"} \\\n-%{m64:\" STARTFILE_ARCH64_SPEC \"} \\\n-%{!m32:%{!m64:\" STARTFILE_ARCH64_SPEC \"}}\"\n-#endif\n-\n #undef CPP_CPU_DEFAULT_SPEC\n #define CPP_CPU_DEFAULT_SPEC \\\n (DEFAULT_ARCH32_P ? \"\\"}, {"sha": "5b6603334f0aa5b3a4c0d13cbdc426f5af1d1375", "filename": "gcc/config/sparc/t-linux64", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fconfig%2Fsparc%2Ft-linux64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fconfig%2Fsparc%2Ft-linux64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-linux64?ref=5bbcd587a2aa8ea9427a737e6c9dade11f744867", "patch": "@@ -3,15 +3,14 @@ MULTILIB_DIRNAMES = 64 32 alt\n MULTILIB_MATCHES = mcmodel?medany=mcmodel?medmid\n MULTILIB_EXCEPTIONS = m32/mno-app-regs* m32/mcmodel=*\n MULTILIB_EXCLUSIONS = m32/!m64/mno-app-regs m32/!m64/mcmodel=medany\n+MULTILIB_OSDIRNAMES = ../lib64 ../lib alt\n \n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n \n EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o crtbeginS.o crtendS.o crtbeginT.o \\\n \tcrtfastmath.o\n \n-SHLIB_SLIBDIR_SUFFIXES = 64:64 32:\n-\n # Override t-slibgcc-elf-ver to export some libgcc symbols with\n # the symbol versions that glibc used.\n # Avoid the t-linux version file."}, {"sha": "3c15f0a712a10238179e21837997bdefbd89fac7", "filename": "gcc/config/sparc/t-sol2-64", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fconfig%2Fsparc%2Ft-sol2-64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fconfig%2Fsparc%2Ft-sol2-64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-sol2-64?ref=5bbcd587a2aa8ea9427a737e6c9dade11f744867", "patch": "@@ -1,11 +1,10 @@\n MULTILIB_OPTIONS = m32/m64\n MULTILIB_DIRNAMES = sparcv7 sparcv9\n MULTILIB_MATCHES =\n+MULTILIB_OSDIRNAMES = . sparcv9\n \n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n \n EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o gmon.o crt1.o crti.o crtn.o gcrt1.o \\\n \tcrtfastmath.o\n-\n-SHLIB_SLIBDIR_SUFFIXES = sparcv9:/sparcv9 sparcv7:"}, {"sha": "b9794fe399844b635bc2bbeac8a888b0be983878", "filename": "gcc/gcc.c", "status": "modified", "additions": 274, "deletions": 92, "changes": 366, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=5bbcd587a2aa8ea9427a737e6c9dade11f744867", "patch": "@@ -162,6 +162,11 @@ static const char *print_prog_name = NULL;\n \n static int print_multi_directory;\n \n+/* Flag saying to print the relative path we'd use to\n+   find OS libraries given the current compiler flags.  */\n+\n+static int print_multi_os_directory;\n+\n /* Flag saying to print the list of subdirectories and\n    compiler flags used to select them in a standard form.  */\n \n@@ -275,9 +280,10 @@ static struct compiler *lookup_compiler PARAMS ((const char *, size_t, const cha\n static char *build_search_list\tPARAMS ((struct path_prefix *, const char *, int));\n static void putenv_from_prefixes PARAMS ((struct path_prefix *, const char *));\n static int access_check\t\tPARAMS ((const char *, int));\n-static char *find_a_file\tPARAMS ((struct path_prefix *, const char *, int));\n+static char *find_a_file\tPARAMS ((struct path_prefix *, const char *,\n+\t\t\t\t\t int, int));\n static void add_prefix\t\tPARAMS ((struct path_prefix *, const char *,\n-\t\t\t\t\t const char *, int, int, int *));\n+\t\t\t\t\t const char *, int, int, int *, int));\n static void translate_options\tPARAMS ((int *, const char *const **));\n static char *skip_whitespace\tPARAMS ((char *));\n static void delete_if_ordinary\tPARAMS ((const char *));\n@@ -961,6 +967,7 @@ static const struct option_map option_map[] =\n    {\"--print-missing-file-dependencies\", \"-MG\", 0},\n    {\"--print-multi-lib\", \"-print-multi-lib\", 0},\n    {\"--print-multi-directory\", \"-print-multi-directory\", 0},\n+   {\"--print-multi-os-directory\", \"-print-multi-os-directory\", 0},\n    {\"--print-prog-name\", \"-print-prog-name=\", \"aj\"},\n    {\"--profile\", \"-p\", 0},\n    {\"--profile-blocks\", \"-a\", 0},\n@@ -1246,7 +1253,9 @@ struct prefix_list\n   int require_machine_suffix; /* Don't use without machine_suffix.  */\n   /* 2 means try both machine_suffix and just_machine_suffix.  */\n   int *used_flag_ptr;\t      /* 1 if a file was found with this prefix.  */\n-  int priority;\t\t      /* Sort key - priority within list */\n+  int priority;\t\t      /* Sort key - priority within list.  */\n+  int os_multilib;\t      /* 1 if OS multilib scheme should be used,\n+\t\t\t\t 0 for GCC multilib scheme.  */\n };\n \n struct path_prefix\n@@ -1335,6 +1344,11 @@ static const char *const standard_bindir_prefix = STANDARD_BINDIR_PREFIX;\n    set_multilib_dir based on the compilation options.  */\n \n static const char *multilib_dir;\n+\n+/* Subdirectory to use for locating libraries in OS conventions.  Set by\n+   set_multilib_dir based on the compilation options.  */\n+\n+static const char *multilib_os_dir;\n \f\n /* Structure to keep track of the specs that have been defined so far.\n    These are accessed using %(specname) or %[specname] in a compiler\n@@ -1389,6 +1403,7 @@ static struct spec_list static_specs[] =\n   INIT_STATIC_SPEC (\"multilib_extra\",\t\t&multilib_extra),\n   INIT_STATIC_SPEC (\"multilib_matches\",\t\t&multilib_matches),\n   INIT_STATIC_SPEC (\"multilib_exclusions\",\t&multilib_exclusions),\n+  INIT_STATIC_SPEC (\"multilib_options\",\t\t&multilib_options),\n   INIT_STATIC_SPEC (\"linker\",\t\t\t&linker_name_spec),\n   INIT_STATIC_SPEC (\"link_libgcc\",\t\t&link_libgcc_spec),\n   INIT_STATIC_SPEC (\"md_exec_prefix\",\t\t&md_exec_prefix),\n@@ -1836,7 +1851,7 @@ read_specs (filename, main_p)\n \t\t       (long) (p1 - buffer + 1));\n \n \t      p[-2] = '\\0';\n-\t      new_filename = find_a_file (&startfile_prefixes, p1, R_OK);\n+\t      new_filename = find_a_file (&startfile_prefixes, p1, R_OK, 0);\n \t      read_specs (new_filename ? new_filename : p1, FALSE);\n \t      continue;\n \t    }\n@@ -1855,7 +1870,7 @@ read_specs (filename, main_p)\n \t\t       (long) (p1 - buffer + 1));\n \n \t      p[-2] = '\\0';\n-\t      new_filename = find_a_file (&startfile_prefixes, p1, R_OK);\n+\t      new_filename = find_a_file (&startfile_prefixes, p1, R_OK, 0);\n \t      if (new_filename)\n \t\tread_specs (new_filename, FALSE);\n \t      else if (verbose_flag)\n@@ -2490,16 +2505,17 @@ access_check (name, mode)\n    Return 0 if not found, otherwise return its name, allocated with malloc.  */\n \n static char *\n-find_a_file (pprefix, name, mode)\n+find_a_file (pprefix, name, mode, multilib)\n      struct path_prefix *pprefix;\n      const char *name;\n-     int mode;\n+     int mode, multilib;\n {\n   char *temp;\n   const char *const file_suffix =\n     ((mode & X_OK) != 0 ? HOST_EXECUTABLE_SUFFIX : \"\");\n   struct prefix_list *pl;\n   int len = pprefix->max_len + strlen (name) + strlen (file_suffix) + 1;\n+  const char *multilib_name, *multilib_os_name;\n \n #ifdef DEFAULT_ASSEMBLER\n   if (! strcmp (name, \"as\") && access (DEFAULT_ASSEMBLER, mode) == 0)\n@@ -2514,6 +2530,22 @@ find_a_file (pprefix, name, mode)\n   if (machine_suffix)\n     len += strlen (machine_suffix);\n \n+  multilib_name = name;\n+  multilib_os_name = name;\n+  if (multilib && multilib_os_dir)\n+    {\n+      int len1 = multilib_dir ? strlen (multilib_dir) + 1 : 0;\n+      int len2 = strlen (multilib_os_dir) + 1;\n+\n+      len += len1 > len2 ? len1 : len2;\n+      if (multilib_dir)\n+\tmultilib_name = ACONCAT ((multilib_dir, dir_separator_str, name,\n+\t\t\t\t  NULL));\n+      if (strcmp (multilib_os_dir, \".\") != 0)\n+\tmultilib_os_name = ACONCAT ((multilib_os_dir, dir_separator_str, name,\n+\t\t\t\t    NULL));\n+    }\n+\n   temp = xmalloc (len);\n \n   /* Determine the filename to execute (special case for absolute paths).  */\n@@ -2529,6 +2561,9 @@ find_a_file (pprefix, name, mode)\n   else\n     for (pl = pprefix->plist; pl; pl = pl->next)\n       {\n+\tconst char *this_name\n+\t  = pl->os_multilib ? multilib_os_name : multilib_name;\n+\n \tif (machine_suffix)\n \t  {\n \t    /* Some systems have a suffix for executable files.\n@@ -2537,7 +2572,7 @@ find_a_file (pprefix, name, mode)\n \t      {\n \t\tstrcpy (temp, pl->prefix);\n \t\tstrcat (temp, machine_suffix);\n-\t\tstrcat (temp, name);\n+\t\tstrcat (temp, multilib_name);\n \t\tstrcat (temp, file_suffix);\n \t\tif (access_check (temp, mode) == 0)\n \t\t  {\n@@ -2547,10 +2582,10 @@ find_a_file (pprefix, name, mode)\n \t\t  }\n \t      }\n \n-\t    /* Now try just the name.  */\n+\t    /* Now try just the multilib_name.  */\n \t    strcpy (temp, pl->prefix);\n \t    strcat (temp, machine_suffix);\n-\t    strcat (temp, name);\n+\t    strcat (temp, multilib_name);\n \t    if (access_check (temp, mode) == 0)\n \t      {\n \t\tif (pl->used_flag_ptr != 0)\n@@ -2569,7 +2604,7 @@ find_a_file (pprefix, name, mode)\n \t      {\n \t\tstrcpy (temp, pl->prefix);\n \t\tstrcat (temp, just_machine_suffix);\n-\t\tstrcat (temp, name);\n+\t\tstrcat (temp, multilib_name);\n \t\tstrcat (temp, file_suffix);\n \t\tif (access_check (temp, mode) == 0)\n \t\t  {\n@@ -2581,7 +2616,7 @@ find_a_file (pprefix, name, mode)\n \n \t    strcpy (temp, pl->prefix);\n \t    strcat (temp, just_machine_suffix);\n-\t    strcat (temp, name);\n+\t    strcat (temp, multilib_name);\n \t    if (access_check (temp, mode) == 0)\n \t      {\n \t\tif (pl->used_flag_ptr != 0)\n@@ -2599,7 +2634,7 @@ find_a_file (pprefix, name, mode)\n \t    if (file_suffix[0] != 0)\n \t      {\n \t\tstrcpy (temp, pl->prefix);\n-\t\tstrcat (temp, name);\n+\t\tstrcat (temp, this_name);\n \t\tstrcat (temp, file_suffix);\n \t\tif (access_check (temp, mode) == 0)\n \t\t  {\n@@ -2610,7 +2645,7 @@ find_a_file (pprefix, name, mode)\n \t      }\n \n \t    strcpy (temp, pl->prefix);\n-\t    strcat (temp, name);\n+\t    strcat (temp, this_name);\n \t    if (access_check (temp, mode) == 0)\n \t      {\n \t\tif (pl->used_flag_ptr != 0)\n@@ -2648,13 +2683,15 @@ enum path_prefix_priority\n    2 means try both machine_suffix and just_machine_suffix.  */\n \n static void\n-add_prefix (pprefix, prefix, component, priority, require_machine_suffix, warn)\n+add_prefix (pprefix, prefix, component, priority, require_machine_suffix,\n+\t    warn, os_multilib)\n      struct path_prefix *pprefix;\n      const char *prefix;\n      const char *component;\n      /* enum prefix_priority */ int priority;\n      int require_machine_suffix;\n      int *warn;\n+     int os_multilib;\n {\n   struct prefix_list *pl, **prev;\n   int len;\n@@ -2676,6 +2713,7 @@ add_prefix (pprefix, prefix, component, priority, require_machine_suffix, warn)\n   pl->require_machine_suffix = require_machine_suffix;\n   pl->used_flag_ptr = warn;\n   pl->priority = priority;\n+  pl->os_multilib = os_multilib;\n   if (warn)\n     *warn = 0;\n \n@@ -2719,7 +2757,7 @@ execute ()\n \n   commands[0].prog = argbuf[0]; /* first command.  */\n   commands[0].argv = &argbuf[0];\n-  string = find_a_file (&exec_prefixes, commands[0].prog, X_OK);\n+  string = find_a_file (&exec_prefixes, commands[0].prog, X_OK, 0);\n \n   if (string)\n     commands[0].argv[0] = string;\n@@ -2733,7 +2771,8 @@ execute ()\n \targbuf[i] = 0;\t/* termination of command args.  */\n \tcommands[n_commands].prog = argbuf[i + 1];\n \tcommands[n_commands].argv = &argbuf[i + 1];\n-\tstring = find_a_file (&exec_prefixes, commands[n_commands].prog, X_OK);\n+\tstring = find_a_file (&exec_prefixes, commands[n_commands].prog,\n+\t\t\t      X_OK, 0);\n \tif (string)\n \t  commands[n_commands].argv[0] = string;\n \tn_commands++;\n@@ -3048,6 +3087,7 @@ display_help ()\n   fputs (_(\"\\\n   -print-multi-lib         Display the mapping between command line options and\\n\\\n                            multiple library search directories\\n\"), stdout);\n+  fputs (_(\"  -print-multi-os-directory Display the relative path to OS libraries\\n\"), stdout);\n   fputs (_(\"  -Wa,<options>            Pass comma-separated <options> on to the assembler\\n\"), stdout);\n   fputs (_(\"  -Wp,<options>            Pass comma-separated <options> on to the preprocessor\\n\"), stdout);\n   fputs (_(\"  -Wl,<options>            Pass comma-separated <options> on to the linker\\n\"), stdout);\n@@ -3264,9 +3304,9 @@ process_command (argc, argv)\n \n       set_std_prefix (gcc_exec_prefix, len);\n       add_prefix (&exec_prefixes, gcc_exec_prefix, \"GCC\",\n-\t\t  PREFIX_PRIORITY_LAST, 0, NULL);\n+\t\t  PREFIX_PRIORITY_LAST, 0, NULL, 0);\n       add_prefix (&startfile_prefixes, gcc_exec_prefix, \"GCC\",\n-\t\t  PREFIX_PRIORITY_LAST, 0, NULL);\n+\t\t  PREFIX_PRIORITY_LAST, 0, NULL, 0);\n     }\n \n   /* COMPILER_PATH and LIBRARY_PATH have values\n@@ -3294,10 +3334,10 @@ process_command (argc, argv)\n \t      else\n \t\tnstore[endp - startp] = 0;\n \t      add_prefix (&exec_prefixes, nstore, 0,\n-\t\t\t  PREFIX_PRIORITY_LAST, 0, NULL);\n+\t\t\t  PREFIX_PRIORITY_LAST, 0, NULL, 0);\n \t      add_prefix (&include_prefixes,\n \t\t\t  concat (nstore, \"include\", NULL),\n-\t\t\t  0, PREFIX_PRIORITY_LAST, 0, NULL);\n+\t\t\t  0, PREFIX_PRIORITY_LAST, 0, NULL, 0);\n \t      if (*endp == 0)\n \t\tbreak;\n \t      endp = startp = endp + 1;\n@@ -3329,7 +3369,7 @@ process_command (argc, argv)\n \t      else\n \t\tnstore[endp - startp] = 0;\n \t      add_prefix (&startfile_prefixes, nstore, NULL,\n-\t\t\t  PREFIX_PRIORITY_LAST, 0, NULL);\n+\t\t\t  PREFIX_PRIORITY_LAST, 0, NULL, 1);\n \t      if (*endp == 0)\n \t\tbreak;\n \t      endp = startp = endp + 1;\n@@ -3362,7 +3402,7 @@ process_command (argc, argv)\n \t      else\n \t\tnstore[endp - startp] = 0;\n \t      add_prefix (&startfile_prefixes, nstore, NULL,\n-\t\t\t  PREFIX_PRIORITY_LAST, 0, NULL);\n+\t\t\t  PREFIX_PRIORITY_LAST, 0, NULL, 1);\n \t      if (*endp == 0)\n \t\tbreak;\n \t      endp = startp = endp + 1;\n@@ -3462,6 +3502,8 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \tprint_multi_lib = 1;\n       else if (! strcmp (argv[i], \"-print-multi-directory\"))\n \tprint_multi_directory = 1;\n+      else if (! strcmp (argv[i], \"-print-multi-os-directory\"))\n+\tprint_multi_os_directory = 1;\n       else if (! strncmp (argv[i], \"-Wa,\", 4))\n \t{\n \t  int prev, j;\n@@ -3624,24 +3666,24 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \t\t  {\n \t\t    if (len == 7)\n \t\t      add_prefix (&include_prefixes, \"include\", NULL,\n-\t\t\t\t  PREFIX_PRIORITY_B_OPT, 0, NULL);\n+\t\t\t\t  PREFIX_PRIORITY_B_OPT, 0, NULL, 0);\n \t\t    else\n \t\t      {\n \t\t\tchar * string = xmalloc (len + 1);\n \n \t\t\tstrncpy (string, value, len - 7);\n \t\t\tstrcpy (string + len - 7, \"include\");\n \t\t\tadd_prefix (&include_prefixes, string, NULL,\n-\t\t\t\t    PREFIX_PRIORITY_B_OPT, 0, NULL);\n+\t\t\t\t    PREFIX_PRIORITY_B_OPT, 0, NULL, 0);\n \t\t      }\n \t\t  }\n \n \t\tadd_prefix (&exec_prefixes, value, NULL,\n-\t\t\t    PREFIX_PRIORITY_B_OPT, 0, &warn_B);\n+\t\t\t    PREFIX_PRIORITY_B_OPT, 0, &warn_B, 0);\n \t\tadd_prefix (&startfile_prefixes, value, NULL,\n-\t\t\t    PREFIX_PRIORITY_B_OPT, 0, &warn_B);\n+\t\t\t    PREFIX_PRIORITY_B_OPT, 0, &warn_B, 0);\n \t\tadd_prefix (&include_prefixes, concat (value, \"include\", NULL),\n-\t\t\t    NULL, PREFIX_PRIORITY_B_OPT, 0, NULL);\n+\t\t\t    NULL, PREFIX_PRIORITY_B_OPT, 0, NULL, 0);\n \t\tn_switches++;\n \t      }\n \t      break;\n@@ -3771,17 +3813,17 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n      as well as trying the machine and the version.  */\n #ifndef OS2\n   add_prefix (&exec_prefixes, standard_exec_prefix, \"GCC\",\n-\t      PREFIX_PRIORITY_LAST, 1, warn_std_ptr);\n+\t      PREFIX_PRIORITY_LAST, 1, warn_std_ptr, 0);\n   add_prefix (&exec_prefixes, standard_exec_prefix, \"BINUTILS\",\n-\t      PREFIX_PRIORITY_LAST, 2, warn_std_ptr);\n+\t      PREFIX_PRIORITY_LAST, 2, warn_std_ptr, 0);\n   add_prefix (&exec_prefixes, standard_exec_prefix_1, \"BINUTILS\",\n-\t      PREFIX_PRIORITY_LAST, 2, warn_std_ptr);\n+\t      PREFIX_PRIORITY_LAST, 2, warn_std_ptr, 0);\n #endif\n \n   add_prefix (&startfile_prefixes, standard_exec_prefix, \"BINUTILS\",\n-\t      PREFIX_PRIORITY_LAST, 1, warn_std_ptr);\n+\t      PREFIX_PRIORITY_LAST, 1, warn_std_ptr, 0);\n   add_prefix (&startfile_prefixes, standard_exec_prefix_1, \"BINUTILS\",\n-\t      PREFIX_PRIORITY_LAST, 1, warn_std_ptr);\n+\t      PREFIX_PRIORITY_LAST, 1, warn_std_ptr, 0);\n \n   tooldir_prefix = concat (tooldir_base_prefix, spec_machine,\n \t\t\t   dir_separator_str, NULL);\n@@ -3804,11 +3846,11 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \t  add_prefix (&exec_prefixes,\n \t\t      concat (gcc_exec_tooldir_prefix, \"bin\",\n \t\t\t      dir_separator_str, NULL),\n-\t\t      NULL, PREFIX_PRIORITY_LAST, 0, NULL);\n+\t\t      NULL, PREFIX_PRIORITY_LAST, 0, NULL, 0);\n \t  add_prefix (&startfile_prefixes,\n \t\t      concat (gcc_exec_tooldir_prefix, \"lib\",\n \t\t\t      dir_separator_str, NULL),\n-\t\t      NULL, PREFIX_PRIORITY_LAST, 0, NULL);\n+\t\t      NULL, PREFIX_PRIORITY_LAST, 0, NULL, 1);\n \t}\n \n       tooldir_prefix = concat (standard_exec_prefix, spec_machine,\n@@ -3818,10 +3860,10 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \n   add_prefix (&exec_prefixes,\n \t      concat (tooldir_prefix, \"bin\", dir_separator_str, NULL),\n-\t      \"BINUTILS\", PREFIX_PRIORITY_LAST, 0, NULL);\n+\t      \"BINUTILS\", PREFIX_PRIORITY_LAST, 0, NULL, 0);\n   add_prefix (&startfile_prefixes,\n \t      concat (tooldir_prefix, \"lib\", dir_separator_str, NULL),\n-\t      \"BINUTILS\", PREFIX_PRIORITY_LAST, 0, NULL);\n+\t      \"BINUTILS\", PREFIX_PRIORITY_LAST, 0, NULL, 1);\n \n   /* More prefixes are enabled in main, after we read the specs file\n      and determine whether this is cross-compilation or not.  */\n@@ -3871,6 +3913,8 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \t;\n       else if (! strcmp (argv[i], \"-print-multi-directory\"))\n \t;\n+      else if (! strcmp (argv[i], \"-print-multi-os-directory\"))\n+\t;\n       else if (! strcmp (argv[i], \"-ftarget-help\"))\n \t;\n       else if (! strcmp (argv[i], \"-fhelp\"))\n@@ -4381,9 +4425,14 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \t\t    continue;\n #endif\n \t\t  /* Try subdirectory if there is one.  */\n-\t\t  if (multilib_dir != NULL)\n+\t\t  if (multilib_dir != NULL\n+\t\t      || (pl->os_multilib && multilib_os_dir != NULL))\n \t\t    {\n-\t\t      if (machine_suffix)\n+\t\t      const char *multi_dir;\n+\n+\t\t      multi_dir = pl->os_multilib ? multilib_os_dir\n+\t\t\t\t\t\t  : multilib_dir;\n+\t\t      if (machine_suffix && multilib_dir)\n \t\t\t{\n \t\t\t  if (strlen (pl->prefix) + strlen (machine_suffix)\n \t\t\t      >= bufsize)\n@@ -4406,14 +4455,14 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \t\t\t}\n \t\t      if (!pl->require_machine_suffix)\n \t\t\t{\n-\t\t\t  if (is_directory (pl->prefix, multilib_dir, 1))\n+\t\t\t  if (is_directory (pl->prefix, multi_dir, 1))\n \t\t\t    {\n \t\t\t      do_spec_1 (\"-L\", 0, NULL);\n #ifdef SPACE_AFTER_L_OPTION\n \t\t\t      do_spec_1 (\" \", 0, NULL);\n #endif\n \t\t\t      do_spec_1 (pl->prefix, 1, NULL);\n-\t\t\t      do_spec_1 (multilib_dir, 1, NULL);\n+\t\t\t      do_spec_1 (multi_dir, 1, NULL);\n \t\t\t      /* Make this a separate argument.  */\n \t\t\t      do_spec_1 (\" \", 0, NULL);\n \t\t\t    }\n@@ -5634,19 +5683,17 @@ find_file (name)\n   char *newname;\n \n   /* Try multilib_dir if it is defined.  */\n-  if (multilib_dir != NULL)\n+  if (multilib_os_dir != NULL)\n     {\n-      const char *const try = ACONCAT ((multilib_dir, dir_separator_str, name, NULL));\n-\n-      newname = find_a_file (&startfile_prefixes, try, R_OK);\n+      newname = find_a_file (&startfile_prefixes, name, R_OK, 1);\n \n       /* If we don't find it in the multi library dir, then fall\n \t through and look for it in the normal places.  */\n       if (newname != NULL)\n \treturn newname;\n     }\n \n-  newname = find_a_file (&startfile_prefixes, name, R_OK);\n+  newname = find_a_file (&startfile_prefixes, name, R_OK, 0);\n   return newname ? newname : name;\n }\n \n@@ -5881,7 +5928,7 @@ main (argc, argv)\n \t\t\t   spec_version, dir_separator_str, NULL);\n   just_machine_suffix = concat (spec_machine, dir_separator_str, NULL);\n \n-  specs_file = find_a_file (&startfile_prefixes, \"specs\", R_OK);\n+  specs_file = find_a_file (&startfile_prefixes, \"specs\", R_OK, 0);\n   /* Read the specs file unless it is a default one.  */\n   if (specs_file != 0 && strcmp (specs_file, \"specs\"))\n     read_specs (specs_file, TRUE);\n@@ -5908,47 +5955,47 @@ main (argc, argv)\n       if (*md_exec_prefix)\n \t{\n \t  add_prefix (&exec_prefixes, md_exec_prefix, \"GCC\",\n-\t\t      PREFIX_PRIORITY_LAST, 0, NULL);\n+\t\t      PREFIX_PRIORITY_LAST, 0, NULL, 0);\n \t  add_prefix (&startfile_prefixes, md_exec_prefix, \"GCC\",\n-\t\t      PREFIX_PRIORITY_LAST, 0, NULL);\n+\t\t      PREFIX_PRIORITY_LAST, 0, NULL, 0);\n \t}\n \n       if (*md_startfile_prefix)\n \tadd_prefix (&startfile_prefixes, md_startfile_prefix, \"GCC\",\n-\t\t    PREFIX_PRIORITY_LAST, 0, NULL);\n+\t\t    PREFIX_PRIORITY_LAST, 0, NULL, 1);\n \n       if (*md_startfile_prefix_1)\n \tadd_prefix (&startfile_prefixes, md_startfile_prefix_1, \"GCC\",\n-\t\t    PREFIX_PRIORITY_LAST, 0, NULL);\n+\t\t    PREFIX_PRIORITY_LAST, 0, NULL, 1);\n \n       /* If standard_startfile_prefix is relative, base it on\n \t standard_exec_prefix.  This lets us move the installed tree\n \t as a unit.  If GCC_EXEC_PREFIX is defined, base\n \t standard_startfile_prefix on that as well.  */\n       if (IS_ABSOLUTE_PATHNAME (standard_startfile_prefix))\n \tadd_prefix (&startfile_prefixes, standard_startfile_prefix, \"BINUTILS\",\n-\t\t    PREFIX_PRIORITY_LAST, 0, NULL);\n+\t\t    PREFIX_PRIORITY_LAST, 0, NULL, 1);\n       else\n \t{\n \t  if (gcc_exec_prefix)\n \t    add_prefix (&startfile_prefixes,\n \t\t\tconcat (gcc_exec_prefix, machine_suffix,\n \t\t\t\tstandard_startfile_prefix, NULL),\n-\t\t\tNULL, PREFIX_PRIORITY_LAST, 0, NULL);\n+\t\t\tNULL, PREFIX_PRIORITY_LAST, 0, NULL, 1);\n \t  add_prefix (&startfile_prefixes,\n \t\t      concat (standard_exec_prefix,\n \t\t\t      machine_suffix,\n \t\t\t      standard_startfile_prefix, NULL),\n-\t\t      NULL, PREFIX_PRIORITY_LAST, 0, NULL);\n+\t\t      NULL, PREFIX_PRIORITY_LAST, 0, NULL, 1);\n \t}\n \n       add_prefix (&startfile_prefixes, standard_startfile_prefix_1,\n-\t\t  \"BINUTILS\", PREFIX_PRIORITY_LAST, 0, NULL);\n+\t\t  \"BINUTILS\", PREFIX_PRIORITY_LAST, 0, NULL, 1);\n       add_prefix (&startfile_prefixes, standard_startfile_prefix_2,\n-\t\t  \"BINUTILS\", PREFIX_PRIORITY_LAST, 0, NULL);\n+\t\t  \"BINUTILS\", PREFIX_PRIORITY_LAST, 0, NULL, 1);\n #if 0 /* Can cause surprises, and one can use -B./ instead.  */\n       add_prefix (&startfile_prefixes, \"./\", NULL,\n-\t\t  PREFIX_PRIORITY_LAST, 1, NULL);\n+\t\t  PREFIX_PRIORITY_LAST, 1, NULL, 0);\n #endif\n     }\n   else\n@@ -5958,7 +6005,7 @@ main (argc, argv)\n \tadd_prefix (&startfile_prefixes,\n \t\t    concat (gcc_exec_prefix, machine_suffix,\n \t\t\t    standard_startfile_prefix, NULL),\n-\t\t    \"BINUTILS\", PREFIX_PRIORITY_LAST, 0, NULL);\n+\t\t    \"BINUTILS\", PREFIX_PRIORITY_LAST, 0, NULL, 1);\n     }\n \n   if (*startfile_prefix_spec != 0\n@@ -5968,14 +6015,15 @@ main (argc, argv)\n       int ndx;\n       for (ndx = 0; ndx < argbuf_index; ndx++)\n \tadd_prefix (&startfile_prefixes, argbuf[ndx], \"BINUTILS\",\n-\t\t    PREFIX_PRIORITY_LAST, 0, NULL);\n+\t\t    PREFIX_PRIORITY_LAST, 0, NULL, 1);\n     }\n \n   /* Process any user specified specs in the order given on the command\n      line.  */\n   for (uptr = user_specs_head; uptr; uptr = uptr->next)\n     {\n-      char *filename = find_a_file (&startfile_prefixes, uptr->filename, R_OK);\n+      char *filename = find_a_file (&startfile_prefixes, uptr->filename,\n+\t\t\t\t    R_OK, 0);\n       read_specs (filename ? filename : uptr->filename, FALSE);\n     }\n \n@@ -6017,7 +6065,7 @@ main (argc, argv)\n \n   if (print_prog_name)\n     {\n-      char *newname = find_a_file (&exec_prefixes, print_prog_name, X_OK);\n+      char *newname = find_a_file (&exec_prefixes, print_prog_name, X_OK, 0);\n       printf (\"%s\\n\", (newname ? newname : print_prog_name));\n       return (0);\n     }\n@@ -6037,6 +6085,15 @@ main (argc, argv)\n       return (0);\n     }\n \n+  if (print_multi_os_directory)\n+    {\n+      if (multilib_os_dir == NULL)\n+\tprintf (\".\\n\");\n+      else\n+\tprintf (\"%s\\n\", multilib_os_dir);\n+      return (0);\n+    }\n+\n   if (target_help_flag)\n    {\n       /* Print if any target specific options.  */\n@@ -6196,7 +6253,7 @@ main (argc, argv)\n       /* We'll use ld if we can't find collect2.  */\n       if (! strcmp (linker_name_spec, \"collect2\"))\n \t{\n-\t  char *s = find_a_file (&exec_prefixes, \"collect2\", X_OK);\n+\t  char *s = find_a_file (&exec_prefixes, \"collect2\", X_OK, 0);\n \t  if (s == NULL)\n \t    linker_name_spec = \"ld\";\n \t}\n@@ -6490,6 +6547,15 @@ validate_switches (start)\n     goto next_member;\n }\n \f\n+struct mdswitchstr\n+{\n+  const char *str;\n+  int len;\n+};\n+\n+static struct mdswitchstr *mdswitches;\n+static int n_mdswitches;\n+\n /* Check whether a particular argument was used.  The first time we\n    canonicalize the switches to keep only the ones we care about.  */\n \n@@ -6555,8 +6621,9 @@ used_arg (p, len)\n \t xmalloc from calling fatal, and prevents us from re-executing this\n \t block of code.  */\n       mswitches\n-\t= (struct mswitchstr *) xmalloc ((sizeof (struct mswitchstr))\n-\t\t\t\t\t * (n_switches ? n_switches : 1));\n+\t= (struct mswitchstr *)\n+\t  xmalloc (sizeof (struct mswitchstr)\n+\t\t   * (n_mdswitches + (n_switches ? n_switches : 1)));\n       for (i = 0; i < n_switches; i++)\n \t{\n \t  int xlen = strlen (switches[i].part1);\n@@ -6572,6 +6639,57 @@ used_arg (p, len)\n \t\tbreak;\n \t      }\n \t}\n+\n+      /* Add MULTILIB_DEFAULTS switches too, as long as they were not present\n+\t on the command line nor any options mutually incompatible with\n+\t them.  */\n+      for (i = 0; i < n_mdswitches; i++)\n+\t{\n+\t  const char *r;\n+\n+\t  for (q = multilib_options; *q != '\\0'; q++)\n+\t    {\n+\t      while (*q == ' ')\n+\t\tq++;\n+\n+\t      r = q;\n+\t      while (strncmp (q, mdswitches[i].str, mdswitches[i].len) != 0\n+\t\t     || strchr (\" /\", q[mdswitches[i].len]) == NULL)\n+\t\t{\n+\t\t  while (*q != ' ' && *q != '/' && *q != '\\0')\n+\t\t    q++;\n+\t\t  if (*q != '/')\n+\t\t    break;\n+\t\t  q++;\n+\t\t}\n+\n+\t      if (*q != ' ' && *q != '\\0')\n+\t\t{\n+\t\t  while (*r != ' ' && *r != '\\0')\n+\t\t    {\n+\t\t      q = r;\n+\t\t      while (*q != ' ' && *q != '/' && *q != '\\0')\n+\t\t\tq++;\n+\n+\t\t      if (used_arg (r, q - r))\n+\t\t\tbreak;\n+\n+\t\t      if (*q != '/')\n+\t\t\t{\n+\t\t\t  mswitches[n_mswitches].str = mdswitches[i].str;\n+\t\t\t  mswitches[n_mswitches].len = mdswitches[i].len;\n+\t\t\t  mswitches[n_mswitches].replace = (char *) 0;\n+\t\t\t  mswitches[n_mswitches].rep_len = 0;\n+\t\t\t  n_mswitches++;\n+\t\t\t  break;\n+\t\t\t}\n+\n+\t\t      r = q + 1;\n+\t\t    }\n+\t\t  break;\n+\t\t}\n+\t    }\n+\t}\n     }\n \n   for (i = 0; i < n_mswitches; i++)\n@@ -6586,25 +6704,11 @@ default_arg (p, len)\n      const char *p;\n      int len;\n {\n-  const char *start, *end;\n-\n-  for (start = multilib_defaults; *start != '\\0'; start = end + 1)\n-    {\n-      while (*start == ' ' || *start == '\\t')\n-\tstart++;\n-\n-      if (*start == '\\0')\n-\tbreak;\n-\n-      for (end = start + 1; *end != ' ' && *end != '\\t' && *end != '\\0'; end++)\n-\t;\n-\n-      if ((end - start) == len && strncmp (p, start, len) == 0)\n-\treturn 1;\n+  int i;\n \n-      if (*end == '\\0')\n-\tbreak;\n-    }\n+  for (i = 0; i < n_mdswitches; i++)\n+    if (len == mdswitches[i].len && ! strncmp (p, mdswitches[i].str, len))\n+      return 1;\n \n   return 0;\n }\n@@ -6626,8 +6730,51 @@ set_multilib_dir ()\n   const char *p;\n   unsigned int this_path_len;\n   const char *this_path, *this_arg;\n+  const char *start, *end;\n   int not_arg;\n-  int ok;\n+  int ok, ndfltok, first;\n+\n+  n_mdswitches = 0;\n+  start = multilib_defaults;\n+  while (*start == ' ' || *start == '\\t')\n+    start++;\n+  while (*start != '\\0')\n+    {\n+      n_mdswitches++;\n+      while (*start != ' ' && *start != '\\t' && *start != '\\0')\n+\tstart++;\n+      while (*start == ' ' || *start == '\\t')\n+        start++;\n+    }\n+\n+  if (n_mdswitches)\n+    {\n+      int i = 0;\n+\n+      mdswitches\n+        = (struct mdswitchstr *) xmalloc (sizeof (struct mdswitchstr)\n+\t\t\t\t\t  * n_mdswitches);\n+      for (start = multilib_defaults; *start != '\\0'; start = end + 1)\n+\t{\n+\t  while (*start == ' ' || *start == '\\t')\n+\t    start++;\n+\n+\t  if (*start == '\\0')\n+\t    break;\n+                                  \n+\t  for (end = start + 1;\n+\t       *end != ' ' && *end != '\\t' && *end != '\\0'; end++)\n+\t    ;\n+\n+\t  obstack_grow (&multilib_obstack, start, end - start);\n+\t  obstack_1grow (&multilib_obstack, 0);\n+\t  mdswitches[i].str = obstack_finish (&multilib_obstack);\n+\t  mdswitches[i++].len = end - start;\n+\n+\t  if (*end == '\\0')\n+\t    break;\n+\t}\n+    }\n \n   p = multilib_exclusions;\n   while (*p != '\\0')\n@@ -6682,6 +6829,7 @@ set_multilib_dir ()\n       ++p;\n     }\n \n+  first = 1;\n   p = multilib_select;\n   while (*p != '\\0')\n     {\n@@ -6704,6 +6852,7 @@ set_multilib_dir ()\n \n       /* Check the arguments.  */\n       ok = 1;\n+      ndfltok = 1;\n       ++p;\n       while (*p != ';')\n \t{\n@@ -6739,32 +6888,65 @@ set_multilib_dir ()\n \t     there is a more specific library which uses this\n \t     argument.  If this argument is a default, we need not\n \t     consider that more specific library.  */\n-\t  if (! default_arg (this_arg, p - this_arg))\n-\t    {\n-\t      ok = used_arg (this_arg, p - this_arg);\n-\t      if (not_arg)\n-\t\tok = ! ok;\n-\t    }\n+\t  ok = used_arg (this_arg, p - this_arg);\n+\t  if (not_arg)\n+\t    ok = ! ok;\n+\n+\t  if (! ok)\n+\t    ndfltok = 0;\n+\n+\t  if (default_arg (this_arg, p - this_arg))\n+\t    ok = 1;\n \n \t  if (*p == ' ')\n \t    ++p;\n \t}\n \n-      if (ok)\n+      if (ok && first)\n \t{\n \t  if (this_path_len != 1\n \t      || this_path[0] != '.')\n \t    {\n \t      char *new_multilib_dir = xmalloc (this_path_len + 1);\n+\t      char *q;\n+\n \t      strncpy (new_multilib_dir, this_path, this_path_len);\n \t      new_multilib_dir[this_path_len] = '\\0';\n+\t      q = strchr (new_multilib_dir, ':');\n+\t      if (q != NULL)\n+\t\t*q = '\\0';\n \t      multilib_dir = new_multilib_dir;\n \t    }\n-\t  break;\n+\t  first = 0;\n+\t}\n+\n+      if (ndfltok)\n+\t{\n+\t  const char *q = this_path, *end = this_path + this_path_len;\n+\n+\t  while (q < end && *q != ':')\n+\t    q++;\n+\t  if (*q == ':')\n+\t    {\n+\t      char *new_multilib_os_dir = xmalloc (end - q);\n+\t      strncpy (new_multilib_os_dir, q + 1, end - q - 1);\n+\t      new_multilib_os_dir[end - q] = '\\0';\n+\t      multilib_os_dir = new_multilib_os_dir;\n+\t      break;\n+\t    }\n \t}\n \n       ++p;\n     }\n+\n+  if (multilib_dir == NULL && multilib_os_dir != NULL\n+      && strcmp (multilib_os_dir, \".\") == 0)\n+    {\n+      free ((char *) multilib_os_dir);\n+      multilib_os_dir = NULL;\n+    }\n+  else if (multilib_dir != NULL && multilib_os_dir == NULL)\n+    multilib_os_dir = multilib_dir;\n }\n \n /* Print out the multiple library subdirectory selection\n@@ -6945,7 +7127,7 @@ print_multilib_info ()\n \t{\n \t  const char *p1;\n \n-\t  for (p1 = last_path; p1 < p; p1++)\n+\t  for (p1 = last_path; p1 < p && *p1 != ':'; p1++)\n \t    putchar (*p1);\n \t  putchar (';');\n \t}"}, {"sha": "c687537d70046e7d094e3281c85a87c127d3be2c", "filename": "gcc/genmultilib", "status": "modified", "additions": 51, "deletions": 6, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fgenmultilib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fgenmultilib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmultilib?ref=5bbcd587a2aa8ea9427a737e6c9dade11f744867", "patch": "@@ -63,6 +63,11 @@\n # for the rule to exclude a set. Options can be preceded with a '!' to\n # match a logical NOT.\n \n+# The optional sevenths argument is a list of OS subdirectory names.\n+# The format is the same as of the second argument.\n+# The difference is that second argument describes multilib directories\n+# in GCC conventions, while this one the OS multilib convention.\n+\n # The output looks like\n #   #define MULTILIB_MATCHES \"\\\n #   SUBDIRECTORY OPTIONS;\\\n@@ -79,17 +84,18 @@\n # Here is an example (this is from the actual sparc64 case):\n #   genmultilib 'm64/m32 mno-app-regs|mcmodel=medany' '64 32 alt'\n #\t\t'mcmodel?medany=mcmodel?medmid' 'm32/mno-app-regs* m32/mcmodel=*'\n-#\t\t'm32/!m64/mno-app-regs m32/!m64/mcmodel=medany'\n+#\t\t'' 'm32/!m64/mno-app-regs m32/!m64/mcmodel=medany'\n+#\t\t'../lib64 ../lib32 alt'\n # This produces:\n #   \". !m64 !m32 !mno-app-regs !mcmodel=medany;\",\n-#   \"64 m64 !m32 !mno-app-regs !mcmodel=medany;\",\n-#   \"32 !m64 m32 !mno-app-regs !mcmodel=medany;\",\n+#   \"64:../lib64 m64 !m32 !mno-app-regs !mcmodel=medany;\",\n+#   \"32:../lib32 !m64 m32 !mno-app-regs !mcmodel=medany;\",\n #   \"alt !m64 !m32 mno-app-regs mcmodel=medany;\",\n #   \"alt !m64 !m32 mno-app-regs !mcmodel=medany;\",\n #   \"alt !m64 !m32 !mno-app-regs mcmodel=medany;\",\n-#   \"64/alt m64 !m32 mno-app-regs mcmodel=medany;\",\n-#   \"64/alt m64 !m32 mno-app-regs !mcmodel=medany;\",\n-#   \"64/alt m64 !m32 !mno-app-regs mcmodel=medany;\",\n+#   \"64/alt:../lib64/alt m64 !m32 mno-app-regs mcmodel=medany;\",\n+#   \"64/alt:../lib64/alt m64 !m32 mno-app-regs !mcmodel=medany;\",\n+#   \"64/alt:../lib64/alt m64 !m32 !mno-app-regs mcmodel=medany;\",\n #\n # The effect is that `gcc -mno-app-regs' (for example) will append \"alt\"\n # to the directory name when searching for libraries or startup files and\n@@ -106,6 +112,7 @@ matches=$3\n exceptions=$4\n extra=$5\n exclusions=$6\n+osdirnames=$7\n \n echo \"static const char *const multilib_raw[] = {\"\n \n@@ -202,6 +209,29 @@ if [ -n \"${dirnames}\" ]; then\n   done\n fi\n \n+# Construct a sed pattern which will convert option names to OS directory\n+# names.\n+toosdirnames=\n+if [ -n \"${osdirnames}\" ]; then\n+  set x ${osdirnames}\n+  shift\n+  for set in ${options}; do\n+    for opts in `echo ${set} | sed -e 's|/| |'g`; do\n+      patt=\"/\"\n+      for opt in `echo ${opts} | sed -e 's_|_ _'g`; do\n+        if [ \"$1\" != \"${opt}\" ]; then\n+          toosdirnames=\"${toosdirnames} -e s|/${opt}/|/${1}/|g\"\n+\t  patt=\"${patt}${1}/\"\n+\t  if [ \"${patt}\" != \"/${1}/\" ]; then\n+\t    toosdirnames=\"${toosdirnames} -e s|${patt}|/${1}/|g\"\n+          fi\n+        fi\n+      done\n+      shift\n+    done\n+  done\n+fi\n+\n # We need another recursive shell script to correctly handle positive\n # matches.  If we are invoked as\n #   genmultilib \"opt1 opt2\" \"\" \"opt1=nopt1 opt2=nopt2\"\n@@ -257,6 +287,16 @@ for combo in ${combinations}; do\n   # Remove the leading and trailing slashes.\n   dirout=`echo ${dirout} | sed -e 's|^/||' -e 's|/$||g'`\n \n+  # Use the OS directory names rather than the option names.\n+  if [ -n \"${toosdirnames}\" ]; then\n+    osdirout=`echo ${combo} | sed ${toosdirnames}`\n+    # Remove the leading and trailing slashes.\n+    osdirout=`echo ${osdirout} | sed -e 's|^/||' -e 's|/$||g'`\n+    if [ \"x${dirout}\" != \"x${osdirout}\" ]; then\n+      dirout=\"${dirout}:${osdirout}\"\n+    fi\n+  fi\n+\n   # Look through the options.  We must output each option that is\n   # present, and negate each option that is not present.\n   optout=\n@@ -313,6 +353,11 @@ done\n echo \"NULL\"\n echo \"};\"\n \n+# Output the options now\n+moptions=`echo ${options} | sed -e 's,[ \t][ \t]*, ,g'`\n+echo \"\"\n+echo \"static const char *multilib_options = \\\"${moptions}\\\";\"\n+\n rm -f tmpmultilib2\n \n exit 0"}, {"sha": "81d2e47f52b8f8cf32ac5a1a4406cb0f6aae692a", "filename": "gcc/mklibgcc.in", "status": "modified", "additions": 25, "deletions": 45, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fmklibgcc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbcd587a2aa8ea9427a737e6c9dade11f744867/gcc%2Fmklibgcc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmklibgcc.in?ref=5bbcd587a2aa8ea9427a737e6c9dade11f744867", "patch": "@@ -32,7 +32,7 @@\n # SHLIB_MAPFILES\n # SHLIB_NM_FLAGS\n # SHLIB_INSTALL\n-# SHLIB_SLIBDIR_SUFFIXES\n+# MULTILIB_OSDIRNAMES\n \n # Make needs VPATH to be literal.\n echo 'srcdir = @srcdir@'\n@@ -317,22 +317,18 @@ for ml in $MULTILIBS; do\n       fi\n       shlib_so_name=\"$shlib_base_name\"\n       shlib_dir=\n-      if [ -n \"$SHLIB_SLIBDIR_SUFFIXES\" ]; then\n+      if [ -n \"$MULTILIB_OSDIRNAMES\" ]; then\n \tif [ \"$dir\" != . ]; then\n+\t  gcc_multilib_dir=`./xgcc -B./ $flags --print-multi-directory`\n+\t  os_multilib_dir=`./xgcc -B./ $flags --print-multi-os-directory`\n \t  shlib_dir=\"$dir\"/\n-\t  for suffix_pair in $SHLIB_SLIBDIR_SUFFIXES ; do\n-\t    base_ml_dir=`echo ${suffix_pair} | sed -e 's/:.*$//' -e 's/=/$(EQ)/g'`\n-\t    if [ \"$dir\" = \"$base_ml_dir\" ]; then\n-\t      shlib_so_name=libgcc_s\n-\t      break\n-\t    else\n-\t      canon_dir=`echo $dir | sed -n -e \"s:$base_ml_dir/::p\"`\n-\t      if [ -n \"$canon_dir\" ]; then\n-\t\tshlib_so_name=libgcc_s_`echo $canon_dir | sed s,/,_,g`\n-\t\tbreak\n-\t      fi\n-\t    fi\n-\t  done\n+\t  gcc_multilib_sup=`echo $gcc_multilib_dir | sed 's~^[^/]*/~~'`\n+\t  os_multilib_base=`echo $os_multilib_dir | sed -n \"s~/${gcc_multilib_sup}\\$~~p\"`\n+\t  if [ -z \"$os_multilib_base\" ]; then\n+\t    shlib_so_name=libgcc_s\n+\t  else\n+\t    shlib_so_name=libgcc_s_`echo $gcc_multilib_sup | sed s,/,_,g`\n+\t  fi\n \tfi\n       fi\n       echo \"\"\n@@ -438,6 +434,7 @@ echo \"\"\n echo \"install: $all\"\n for ml in $MULTILIBS; do\n   dir=`echo ${ml} | sed -e 's/;.*$//' -e 's/=/$(EQ)/g'`\n+  flags=`echo ${ml} | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`;\n   if [ $dir != . ]; then\n     ldir='$(libsubdir)'/$dir\n     echo \"\tif [ -d $ldir ]; then true; else mkdir $ldir; chmod a+rx $ldir; fi;\"\n@@ -460,39 +457,22 @@ for ml in $MULTILIBS; do\n       shlib_so_name=\"$shlib_base_name\"\n       shlib_dir=\n       shlib_slibdir_qual=\n-      if [ -n \"$SHLIB_SLIBDIR_SUFFIXES\" ]; then\n-\tshlib_slibdir_qual=none\n+      if [ -n \"$MULTILIB_OSDIRNAMES\" ]; then\n+\tgcc_multilib_dir=`./xgcc -B./ $flags --print-multi-directory`\n+\tos_multilib_dir=`./xgcc -B./ $flags --print-multi-os-directory`\n \tif [ \"$dir\" != . ]; then\n \t  shlib_dir=\"$dir\"/\n-\t  for suffix_pair in $SHLIB_SLIBDIR_SUFFIXES ; do\n-\t    base_ml_dir=`echo ${suffix_pair} | sed -e 's/:.*$//' -e 's/=/$(EQ)/g'`\n-\t    if [ \"$dir\" = \"$base_ml_dir\" ]; then\n-\t      shlib_so_name=libgcc_s\n-\t      shlib_slibdir_qual=`echo ${suffix_pair} | sed -e 's/^[^:]*://'`\n-\t      break\n-\t    else\n-\t      canon_dir=`echo $dir | sed -n -e \"s:$base_ml_dir/::p\"`\n-\t      if [ -n \"$canon_dir\" ]; then\n-\t\tshlib_so_name=libgcc_s_`echo $canon_dir | sed s,/,_,g`\n-\t\tshlib_slibdir_qual=`echo ${suffix_pair} | sed -e 's/^[^:]*://'`\n-\t\tbreak\n-\t      fi\n-\t    fi\n-\t  done\n \tfi\n-\tif [ \"$shlib_slibdir_qual\" = none ]; then\n-\t  for suffix_pair in $SHLIB_SLIBDIR_SUFFIXES ; do\n-\t    base_ml_dir=`echo ${suffix_pair} | sed -e 's/:.*$//' -e 's/=/$(EQ)/g'`\n-\t    shlib_slibdir_qual=`echo ${suffix_pair} | sed -e 's/^[^:]*://'`\n-\t    for ml2 in $MULTILIBS; do\n-\t      dir2=`echo ${ml2} | sed -e 's/;.*$//' -e 's/=/$(EQ)/g'`\n-\t      if [ \"$base_ml_dir\" = \"$dir2\" ]; then\n-\t\tshlib_slibdir_qual=\n-\t\tbreak\n-\t      fi\n-\t    done\n-\t    if [ -n \"$shlib_slibdir_qual\" ]; then break; fi\n-\t  done\n+\tgcc_multilib_sup=`echo $gcc_multilib_dir | sed 's~^[^/]*/~~'`\n+\tos_multilib_base=`echo $os_multilib_dir | sed -n \"s~/${gcc_multilib_sup}\\$~~p\"`\n+\tif [ -z \"$os_multilib_base\" ]; then\n+\t  shlib_so_name=libgcc_s\n+\t  if [ \"$os_multilib_dir\" != \".\" ]; then\n+\t    shlib_slibdir_qual=\"/$os_multilib_dir\"\n+\t  fi\n+\telse\n+\t  shlib_so_name=libgcc_s_`echo $gcc_multilib_sup | sed s,/,_,g`\n+\t  shlib_slibdir_qual=\"/$os_multilib_base\"\n \tfi\n       fi\n       echo \"\t$SHLIB_INSTALL\" \\"}]}