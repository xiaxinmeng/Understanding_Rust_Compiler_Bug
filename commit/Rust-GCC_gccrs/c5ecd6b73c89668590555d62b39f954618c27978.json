{"sha": "c5ecd6b73c89668590555d62b39f954618c27978", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVlY2Q2YjczYzg5NjY4NTkwNTU1ZDYyYjM5Zjk1NDYxOGMyNzk3OA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T09:24:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T09:24:55Z"}, "message": "[multiple changes]\n\n2011-08-29  Thomas Quinot  <quinot@adacore.com>\n\n\t* rtsfind.ads, exp_ch3.adb (In_Runtime): Minor code improvement, use\n\tIs_RTU instead of using Chars comparisons.\n\n2011-08-29  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_strm.adb (Build_Mutable_Record_Read_Procedure): Do not create a\n\ttemporary object if the actual is constrained, and the discriminants\n\tread from the stream don't match.\n\n2011-08-29  Tristan Gingold  <gingold@adacore.com>\n\n\t* sem_attr.adb, exp_attr.adb: Add handling of\n\tAttribute_System_Allocator_Alignment\n\t* snames.ads-tmpl: Add Name_System_Allocator_Alignment and\n\tAttribute_System_Allocator_Alignment.\n\t* ttypes.ads, get_targ.ads: Add Get_System_Allocator_Alignment.\n\t* gcc-interface/targtyps.c, gcc-interface/utils2.c,\n\tgcc-interface/gigi.h: Renames get_target_default_allocator_alignment to\n\tget_target_system_allocator_alignment.\n\n2011-08-29  Arnaud Charlet  <charlet@adacore.com>\n\n\t* gcc-interface/Makefile.in, gcc-interface/Make-lang.in: Update\n\tdependencies.\n\nFrom-SVN: r178176", "tree": {"sha": "0dc6223602cbfdf17b2870ef8eafd07923b38da1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dc6223602cbfdf17b2870ef8eafd07923b38da1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5ecd6b73c89668590555d62b39f954618c27978", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5ecd6b73c89668590555d62b39f954618c27978", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5ecd6b73c89668590555d62b39f954618c27978", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5ecd6b73c89668590555d62b39f954618c27978/comments", "author": null, "committer": null, "parents": [{"sha": "e7898e54f4dc9563328204d6e8b886982c9c3357", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7898e54f4dc9563328204d6e8b886982c9c3357", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7898e54f4dc9563328204d6e8b886982c9c3357"}], "stats": {"total": 315, "additions": 198, "deletions": 117}, "files": [{"sha": "17845b43a261935586b63886ed113f3c7894008b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c5ecd6b73c89668590555d62b39f954618c27978", "patch": "@@ -1,3 +1,30 @@\n+2011-08-29  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* rtsfind.ads, exp_ch3.adb (In_Runtime): Minor code improvement, use\n+\tIs_RTU instead of using Chars comparisons.\n+\n+2011-08-29  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_strm.adb (Build_Mutable_Record_Read_Procedure): Do not create a\n+\ttemporary object if the actual is constrained, and the discriminants\n+\tread from the stream don't match.\n+\n+2011-08-29  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* sem_attr.adb, exp_attr.adb: Add handling of\n+\tAttribute_System_Allocator_Alignment\n+\t* snames.ads-tmpl: Add Name_System_Allocator_Alignment and\n+\tAttribute_System_Allocator_Alignment.\n+\t* ttypes.ads, get_targ.ads: Add Get_System_Allocator_Alignment.\n+\t* gcc-interface/targtyps.c, gcc-interface/utils2.c,\n+\tgcc-interface/gigi.h: Renames get_target_default_allocator_alignment to\n+\tget_target_system_allocator_alignment.\n+\n+2011-08-29  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gcc-interface/Makefile.in, gcc-interface/Make-lang.in: Update\n+\tdependencies.\n+\n 2011-08-29  Arnaud Charlet  <charlet@adacore.com>\n \n \t* exp_ch3.adb (In_Runtime): Fix typo."}, {"sha": "c03a040fdaf2d5de9520aa3091b2920b5471614c", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=c5ecd6b73c89668590555d62b39f954618c27978", "patch": "@@ -5379,6 +5379,7 @@ package body Exp_Attr is\n            Attribute_Small                        |\n            Attribute_Storage_Unit                 |\n            Attribute_Stub_Type                    |\n+           Attribute_System_Allocator_Alignment   |\n            Attribute_Target_Name                  |\n            Attribute_Type_Class                   |\n            Attribute_Type_Key                     |"}, {"sha": "958033c3ca7f8403943950effdefb96ec1d1a0d7", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=c5ecd6b73c89668590555d62b39f954618c27978", "patch": "@@ -7079,7 +7079,7 @@ package body Exp_Ch3 is\n          S1 := Scope (S1);\n       end loop;\n \n-      return Chars (S1) = Name_System or else Chars (S1) = Name_Ada;\n+      return Is_RTU (S1, System) or else Is_RTU (S1, Ada);\n    end In_Runtime;\n \n    ----------------------------"}, {"sha": "fe02747705b47d5ec6c3493b02919202d8655832", "filename": "gcc/ada/exp_strm.adb", "status": "modified", "additions": 37, "deletions": 26, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fexp_strm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fexp_strm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.adb?ref=c5ecd6b73c89668590555d62b39f954618c27978", "patch": "@@ -867,7 +867,7 @@ package body Exp_Strm is\n       Dcls : constant List_Id := New_List;\n       --  Declarations for the 'Read body\n \n-      Stms : List_Id := New_List;\n+      Stms : constant List_Id := New_List;\n       --  Statements for the 'Read body\n \n       Disc : Entity_Id;\n@@ -895,16 +895,30 @@ package body Exp_Strm is\n       --  Statements within the block where we have the constrained temporary\n \n    begin\n-\n-      Disc := First_Discriminant (Typ);\n-\n       --  A mutable type cannot be a tagged type, so we generate a new name\n       --  for the stream procedure.\n \n       Pnam :=\n         Make_Defining_Identifier (Loc,\n           Chars => Make_TSS_Name_Local (Typ, TSS_Stream_Read));\n \n+      if Is_Unchecked_Union (Typ) then\n+\n+         --  If this is an unchecked union, the stream procedure is erroneous,\n+         --  because there are no discriminants to read.\n+\n+         --  This should generate a warning ???\n+\n+         Append_To (Stms,\n+           Make_Raise_Program_Error (Loc,\n+             Reason => PE_Unchecked_Union_Restriction));\n+\n+         Build_Stream_Procedure (Loc, Typ, Decl, Pnam, Stms, Outp => True);\n+         return;\n+      end if;\n+\n+      Disc := First_Discriminant (Typ);\n+\n       Out_Formal :=\n         Make_Selected_Component (Loc,\n           Prefix        => New_Occurrence_Of (Pnam, Loc),\n@@ -957,6 +971,14 @@ package body Exp_Strm is\n \n       Build_Record_Read_Write_Procedure (Loc, Typ, Decl, Pnam, Name_Read);\n \n+      --  Save original statement sequence for component assignments, and\n+      --  replace it with Stms.\n+\n+      Constrained_Stms := Statements (Handled_Statement_Sequence (Decl));\n+      Set_Handled_Statement_Sequence (Decl,\n+        Make_Handled_Sequence_Of_Statements (Loc,\n+          Statements => Stms));\n+\n       --  If Typ has controlled components (i.e. if it is classwide\n       --  or Has_Controlled), or components constrained using the discriminants\n       --  of Typ, then we need to ensure that all component assignments\n@@ -974,42 +996,31 @@ package body Exp_Strm is\n                 Make_Index_Or_Discriminant_Constraint (Loc,\n                   Constraints => Cstr))));\n \n-      Constrained_Stms := Statements (Handled_Statement_Sequence (Decl));\n-      Append_To (Stms,\n-        Make_Block_Statement (Loc,\n-          Declarations               => Dcls,\n-          Handled_Statement_Sequence => Parent (Constrained_Stms)));\n+      --  AI05-023-1: Insert discriminant check prior to initialization of the\n+      --  constrained temporary.\n \n-      Append_To (Constrained_Stms,\n+      Append_To (Stms,\n         Make_Implicit_If_Statement (Pnam,\n           Condition =>\n             Make_Attribute_Reference (Loc,\n               Prefix         => New_Copy_Tree (Out_Formal),\n               Attribute_Name => Name_Constrained),\n           Then_Statements => Discriminant_Checks));\n \n+      --  Now insert back original component assignments, wrapped in a block\n+      --  in which V is the constrained temporary.\n+\n+      Append_To (Stms,\n+        Make_Block_Statement (Loc,\n+          Declarations               => Dcls,\n+          Handled_Statement_Sequence => Parent (Constrained_Stms)));\n+\n       Append_To (Constrained_Stms,\n         Make_Assignment_Statement (Loc,\n           Name       => Out_Formal,\n           Expression => Make_Identifier (Loc, Name_V)));\n \n-      if Is_Unchecked_Union (Typ) then\n-\n-         --  If this is an unchecked union, the stream procedure is erroneous,\n-         --  because there are no discriminants to read.\n-\n-         --  This should generate a warning ???\n-\n-         Stms :=\n-           New_List (\n-             Make_Raise_Program_Error (Loc,\n-               Reason => PE_Unchecked_Union_Restriction));\n-      end if;\n-\n       Set_Declarations (Decl, Tmps_For_Discs);\n-      Set_Handled_Statement_Sequence (Decl,\n-        Make_Handled_Sequence_Of_Statements (Loc,\n-          Statements => Stms));\n    end Build_Mutable_Record_Read_Procedure;\n \n    ------------------------------------------"}, {"sha": "db4e8852eb179c45d80a57688e61a9b92b8be75f", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=c5ecd6b73c89668590555d62b39f954618c27978", "patch": "@@ -241,8 +241,7 @@ GNAT_ADA_OBJS =\t\\\n  ada/g-spchge.o\t\\\n  ada/g-speche.o\t\\\n  ada/g-u3spch.o\t\\\n- ada/get_alfa.o \\\n- ada/get_scos.o\t\\\n+ ada/get_alfa.o\t\\\n  ada/get_targ.o\t\\\n  ada/gnat.o\t\\\n  ada/gnatvsn.o\t\\\n@@ -2801,12 +2800,6 @@ ada/get_alfa.o : ada/ada.ads ada/a-ioexce.ads ada/a-unccon.ads \\\n    ada/s-string.ads ada/s-unstyp.ads ada/types.ads ada/unchconv.ads \\\n    ada/unchdeal.ads \n \n-ada/get_scos.o : ada/ada.ads ada/a-ioexce.ads ada/a-unccon.ads \\\n-   ada/get_scos.ads ada/get_scos.adb ada/gnat.ads ada/g-table.ads \\\n-   ada/g-table.adb ada/scos.ads ada/scos.adb ada/system.ads \\\n-   ada/s-exctab.ads ada/s-memory.ads ada/s-stalib.ads ada/s-unstyp.ads \\\n-   ada/types.ads ada/unchconv.ads ada/unchdeal.ads \n-\n ada/get_targ.o : ada/ada.ads ada/a-unccon.ads ada/get_targ.ads \\\n    ada/get_targ.adb ada/system.ads ada/s-exctab.ads ada/s-stalib.ads \\\n    ada/s-unstyp.ads ada/types.ads ada/unchconv.ads ada/unchdeal.ads \n@@ -3362,7 +3355,7 @@ ada/put_scos.o : ada/ada.ads ada/a-unccon.ads ada/gnat.ads ada/g-table.ads \\\n    ada/g-table.adb ada/par_sco.ads ada/put_scos.ads ada/put_scos.adb \\\n    ada/scos.ads ada/scos.adb ada/system.ads ada/s-exctab.ads \\\n    ada/s-memory.ads ada/s-stalib.ads ada/s-unstyp.ads ada/types.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads \n+   ada/unchconv.ads ada/unchdeal.ads ada/snames.ads\n \n ada/repinfo.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -3651,7 +3644,7 @@ ada/scng.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n ada/scos.o : ada/ada.ads ada/a-unccon.ads ada/gnat.ads ada/g-table.ads \\\n    ada/g-table.adb ada/scos.ads ada/scos.adb ada/system.ads \\\n    ada/s-exctab.ads ada/s-memory.ads ada/s-stalib.ads ada/s-unstyp.ads \\\n-   ada/types.ads ada/unchconv.ads ada/unchdeal.ads \n+   ada/types.ads ada/unchconv.ads ada/unchdeal.ads ada/snames.ads\n \n ada/sem.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads ada/a-uncdea.ads \\\n    ada/alloc.ads ada/aspects.ads ada/atree.ads ada/atree.adb \\"}, {"sha": "c80480e7b8af3877e44789f71fb87c30285f652f", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 25, "deletions": 12, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=c5ecd6b73c89668590555d62b39f954618c27978", "patch": "@@ -274,8 +274,16 @@ INCLUDES = -I- -I. -I.. -I$(srcdir)/ada -I$(srcdir) -I$(srcdir)/config \\\n \n ADA_INCLUDES = -I- -I. -I$(srcdir)/ada\n \n-INCLUDES_FOR_SUBDIR = -I. -I.. -I../.. -I$(fsrcdir)/ada \\\n-\t-I$(fsrcdir)/../include -I$(fsrcdir)\n+INCLUDES_FOR_SUBDIR = -iquote . -iquote .. -iquote ../.. -iquote $(fsrcdir)/ada \\\n+\t-I$(fsrcdir)/../include\n+\n+ifeq ($(strip $(filter-out cygwin32% mingw32% pe,$(osys))),)\n+  # On Windows native the tconfig.h files used by C runtime files needs to have\n+  # the gcc source dir in its include dir list\n+  INCLUDES_FOR_SUBDIR = -iquote . -iquote .. -iquote ../.. -iquote $(fsrcdir)/ada \\\n+        -I$(fsrcdir)/../include -I$(fsrcdir)\n+endif\n+\n ADA_INCLUDES_FOR_SUBDIR = -I. -I$(fsrcdir)/ada\n \n # Avoid a lot of time thinking about remaking Makefile.in and *.def.\n@@ -466,7 +474,7 @@ ifeq ($(strip $(filter-out m68k% wrs vx%,$(targ))),)\n   endif\n endif\n \n-ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(targ))),)\n+ifeq ($(strip $(filter-out e500% powerpc% wrs vxworks,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n   a-numaux.ads<a-numaux-vxworks.ads \\\n@@ -521,7 +529,8 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(targ))),)\n       system.ads<system-vxworks-ppc-rtp.ads\n \n       EXTRA_GNATRTL_NONTASKING_OBJS=s-vxwexc.o\n-      EXTRA_GNATRTL_TASKING_OBJS=affinity.o\n+      EXTRA_LIBGNAT_OBJS+=affinity.o\n+      EXTRA_LIBGNAT_SRCS+=affinity.c\n     else\n       ifeq ($(strip $(filter-out kernel-smp,$(THREAD_KIND))),)\n         LIBGNAT_TARGET_PAIRS += \\\n@@ -532,7 +541,8 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(targ))),)\n         system.ads<system-vxworks-ppc-kernel.ads\n \n         EH_MECHANISM=-gcc\n-        EXTRA_GNATRTL_TASKING_OBJS=affinity.o\n+        EXTRA_LIBGNAT_OBJS+=affinity.o\n+        EXTRA_LIBGNAT_SRCS+=affinity.c\n       else\n         LIBGNAT_TARGET_PAIRS += \\\n         s-interr.adb<s-interr-hwint.adb \\\n@@ -622,7 +632,7 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworksae,$(targ))),)\n endif\n \n # vxworks MILS\n-ifeq ($(strip $(filter-out powerpc% wrs vxworksmils,$(targ))),)\n+ifeq ($(strip $(filter-out e500% powerpc% wrs vxworksmils,$(targ))),)\n   # target pairs for vthreads runtime\n   LIBGNAT_TARGET_PAIRS = \\\n   a-elchha.adb<a-elchha-vx6-raven-cert.adb \\\n@@ -837,7 +847,8 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n       system.ads<system-vxworks-x86-rtp.ads\n \n       EXTRA_GNATRTL_NONTASKING_OBJS=s-vxwexc.o\n-      EXTRA_GNATRTL_TASKING_OBJS=affinity.o\n+      EXTRA_LIBGNAT_SRCS+=affinity.o\n+      EXTRA_LIBGNAT_SRCS+=affinity.c\n     else\n       ifeq ($(strip $(filter-out kernel-smp, $(THREAD_KIND))),)\n         LIBGNAT_TARGET_PAIRS += \\\n@@ -846,7 +857,8 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n         s-vxwext.ads<s-vxwext-kernel.ads \\\n         s-vxwext.adb<s-vxwext-kernel-smp.adb \\\n         system.ads<system-vxworks-x86-kernel.ads\n-        EXTRA_GNATRTL_TASKING_OBJS=affinity.o\n+        EXTRA_LIBGNAT_OBJS+=affinity.o\n+        EXTRA_LIBGNAT_SRCS+=affinity.c\n       else\n         LIBGNAT_TARGET_PAIRS += \\\n         s-interr.adb<s-interr-hwint.adb \\\n@@ -1530,7 +1542,6 @@ ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(targ)))\n \ts-parame.ads<s-parame-vms-alpha.ads \\\n         $(ATOMICS_TARGET_PAIRS)\n \n-    EXTRA_GNATRTL_NONTASKING_OBJS = s-atocou.o\n     TOOLS_TARGET_PAIRS= \\\n       mlib-tgt-specific.adb<mlib-tgt-specific-vms-alpha.adb \\\n       symbols.adb<symbols-vms.adb \\\n@@ -1548,7 +1559,7 @@ adamsg.o: adamsg.msg\n   GNATLIB_SHARED=gnatlib-shared-vms\n   EXTRA_LIBGNAT_SRCS+=adamsg.msg\n   EXTRA_LIBGNAT_OBJS+=adamsg.o\n-  EXTRA_GNATRTL_NONTASKING_OBJS+-s-po32gl.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS+=s-po32gl.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-tpopde.o\n   EXTRA_GNATTOOLS = \\\n      ../../gnatsym$(exeext)\n@@ -1617,7 +1628,6 @@ ifeq ($(strip $(filter-out cygwin32% mingw32% pe,$(osys))),)\n     s-osprim.adb<s-osprim-mingw.adb \\\n     s-taprop.adb<s-taprop-mingw.adb\n \n-    EH_MECHANISM=-gcc\n     ifeq ($(strip $(filter-out x86_64%,$(arch))),)\n       ifeq ($(strip $(MULTISUBDIR)),/32)\n \tLIBGNAT_TARGET_PAIRS += \\\n@@ -1649,6 +1659,8 @@ ifeq ($(strip $(filter-out cygwin32% mingw32% pe,$(osys))),)\n     # ??? This will be replaced by gnatlib-shared-dual-win32 when GNAT\n     # auto-import support for array/record will be done.\n     GNATLIB_SHARED = gnatlib-shared-win32\n+\n+    EH_MECHANISM=-gcc\n   endif\n \n   TOOLS_TARGET_PAIRS= \\\n@@ -2163,7 +2175,8 @@ ifeq ($(strip $(filter-out darwin%,$(osys))),)\n   endif\n \n   TOOLS_TARGET_PAIRS =  \\\n-    mlib-tgt-specific.adb<mlib-tgt-specific-darwin.adb\n+    mlib-tgt-specific.adb<mlib-tgt-specific-darwin.adb \\\n+    indepsw.adb<indepsw-darwin.adb\n \n   EH_MECHANISM=-gcc\n   GNATLIB_SHARED = gnatlib-shared-darwin"}, {"sha": "04c0825b52e8f0b77b2ae598f5d4c8eb669aec50", "filename": "gcc/ada/gcc-interface/gigi.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fgigi.h?ref=c5ecd6b73c89668590555d62b39f954618c27978", "patch": "@@ -954,7 +954,7 @@ extern Pos get_target_double_size (void);\n extern Pos get_target_long_double_size (void);\n extern Pos get_target_pointer_size (void);\n extern Pos get_target_maximum_default_alignment (void);\n-extern Pos get_target_default_allocator_alignment (void);\n+extern Pos get_target_system_allocator_alignment (void);\n extern Pos get_target_maximum_allowed_alignment (void);\n extern Pos get_target_maximum_alignment (void);\n extern Nat get_float_words_be (void);"}, {"sha": "78df4dd1ace9f80f5ef8d893ba1757ac4f05589e", "filename": "gcc/ada/gcc-interface/targtyps.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fgcc-interface%2Ftargtyps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fgcc-interface%2Ftargtyps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftargtyps.c?ref=c5ecd6b73c89668590555d62b39f954618c27978", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                                  Body                                    *\n  *                                                                          *\n- *          Copyright (C) 1992-2010, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2011, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -149,7 +149,7 @@ get_target_maximum_default_alignment (void)\n   return BIGGEST_ALIGNMENT / BITS_PER_UNIT;\n }\n \n-/* Standard'Default_Allocator_Alignment.  Alignment guaranteed to be honored\n+/* Standard'System_Allocator_Alignment.  Alignment guaranteed to be honored\n    by the default allocator (System.Memory.Alloc or malloc if we have no\n    run-time library at hand).\n \n@@ -172,7 +172,7 @@ get_target_maximum_default_alignment (void)\n #endif\n \n Pos\n-get_target_default_allocator_alignment (void)\n+get_target_system_allocator_alignment (void)\n {\n   return MALLOC_ALIGNMENT / BITS_PER_UNIT;\n }"}, {"sha": "25e293dd3e6c1115d81a887cc86ffadcf652d0c4", "filename": "gcc/ada/gcc-interface/utils2.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fgcc-interface%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fgcc-interface%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.c?ref=c5ecd6b73c89668590555d62b39f954618c27978", "patch": "@@ -1907,13 +1907,13 @@ maybe_wrap_malloc (tree data_size, tree data_type, Node_Id gnat_node)\n      stored just in front.  */\n \n   unsigned int data_align = TYPE_ALIGN (data_type);\n-  unsigned int default_allocator_alignment\n-      = get_target_default_allocator_alignment () * BITS_PER_UNIT;\n+  unsigned int system_allocator_alignment\n+      = get_target_system_allocator_alignment () * BITS_PER_UNIT;\n \n   tree aligning_type\n-    = ((data_align > default_allocator_alignment)\n+    = ((data_align > system_allocator_alignment)\n        ? make_aligning_type (data_type, data_align, data_size,\n-\t\t\t     default_allocator_alignment,\n+\t\t\t     system_allocator_alignment,\n \t\t\t     POINTER_SIZE / BITS_PER_UNIT)\n        : NULL_TREE);\n \n@@ -1986,12 +1986,12 @@ maybe_wrap_free (tree data_ptr, tree data_type)\n      return value, stored in front of the data block at allocation time.  */\n \n   unsigned int data_align = TYPE_ALIGN (data_type);\n-  unsigned int default_allocator_alignment\n-      = get_target_default_allocator_alignment () * BITS_PER_UNIT;\n+  unsigned int system_allocator_alignment\n+      = get_target_system_allocator_alignment () * BITS_PER_UNIT;\n \n   tree free_ptr;\n \n-  if (data_align > default_allocator_alignment)\n+  if (data_align > system_allocator_alignment)\n     {\n       /* DATA_FRONT_PTR (void *)\n \t = (void *)DATA_PTR - (void *)sizeof (void *))  */"}, {"sha": "6cdbf7509a46cef9f793035b55038f274840f7a9", "filename": "gcc/ada/get_targ.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fget_targ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fget_targ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_targ.ads?ref=c5ecd6b73c89668590555d62b39f954618c27978", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -95,6 +95,10 @@ package Get_Targ is\n    function Get_Strict_Alignment return Nat;\n    pragma Import (C, Get_Strict_Alignment, \"get_target_strict_alignment\");\n \n+   function Get_System_Allocator_Alignment return Nat;\n+   pragma Import (C, Get_System_Allocator_Alignment,\n+                  \"get_target_system_allocator_alignment\");\n+\n    function Get_Double_Float_Alignment return Nat;\n    pragma Import (C, Get_Double_Float_Alignment,\n                   \"get_target_double_float_alignment\");"}, {"sha": "ac7ae790b7809803747ffdaa99695877f3d580f8", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=c5ecd6b73c89668590555d62b39f954618c27978", "patch": "@@ -270,6 +270,7 @@ Implementation Defined Attributes\n * Small::\n * Storage_Unit::\n * Stub_Type::\n+* System_Allocator_Alignment::\n * Target_Name::\n * Tick::\n * To_Address::\n@@ -5752,6 +5753,7 @@ consideration, you should minimize the use of these attributes.\n * Small::\n * Storage_Unit::\n * Stub_Type::\n+* System_Allocator_Alignment::\n * Target_Name::\n * Tick::\n * To_Address::\n@@ -6490,6 +6492,18 @@ type @code{RACW_Stub_Type} declared in the internal implementation-defined\n unit @code{System.Partition_Interface}. Use of this attribute will create\n an implicit dependency on this unit.\n \n+@node System_Allocator_Alignment\n+@unnumberedsec System_Allocator_Alignment\n+@cindex Alignment, allocator\n+@findex System_Allocator_Alignment\n+@noindent\n+@code{Standard'System_Allocator_Alignment} (@code{Standard} is the only\n+permissible prefix) provides the observable guaranted to be honored by\n+the system allocator (malloc). This is a static value that can be used\n+in user storage pools based on malloc either to reject allocation\n+with alignment too large or to enable a realignment circuitry if the\n+alignment request is larger than this value.\n+\n @node Target_Name\n @unnumberedsec Target_Name\n @findex Target_Name"}, {"sha": "5bfb7166801de7900081230c5015447fa401870f", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=c5ecd6b73c89668590555d62b39f954618c27978", "patch": "@@ -114,6 +114,10 @@ package Rtsfind is\n       RTU_Null,\n       --  Used as a null entry (will cause an error if referenced)\n \n+      --  Package Ada\n+\n+      Ada,\n+\n       --  Children of Ada\n \n       Ada_Calendar,"}, {"sha": "3adbac5cdb07c3fe14a4a30e06e5c028c7cb770f", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 63, "deletions": 55, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=c5ecd6b73c89668590555d62b39f954618c27978", "patch": "@@ -4563,6 +4563,13 @@ package body Sem_Attr is\n             end if;\n          end if;\n \n+      --------------------------------\n+      -- System_Allocator_Alignment --\n+      --------------------------------\n+\n+      when Attribute_System_Allocator_Alignment =>\n+         Standard_Attribute (Ttypes.System_Allocator_Alignment);\n+\n       ---------\n       -- Tag --\n       ---------\n@@ -7698,61 +7705,62 @@ package body Sem_Attr is\n       --  Note that in some cases, the values have already been folded as\n       --  a result of the processing in Analyze_Attribute.\n \n-      when Attribute_Abort_Signal             |\n-           Attribute_Access                   |\n-           Attribute_Address                  |\n-           Attribute_Address_Size             |\n-           Attribute_Asm_Input                |\n-           Attribute_Asm_Output               |\n-           Attribute_Base                     |\n-           Attribute_Bit_Order                |\n-           Attribute_Bit_Position             |\n-           Attribute_Callable                 |\n-           Attribute_Caller                   |\n-           Attribute_Class                    |\n-           Attribute_Code_Address             |\n-           Attribute_Compiler_Version         |\n-           Attribute_Count                    |\n-           Attribute_Default_Bit_Order        |\n-           Attribute_Elaborated               |\n-           Attribute_Elab_Body                |\n-           Attribute_Elab_Spec                |\n-           Attribute_Elab_Subp_Body           |\n-           Attribute_Enabled                  |\n-           Attribute_External_Tag             |\n-           Attribute_Fast_Math                |\n-           Attribute_First_Bit                |\n-           Attribute_Input                    |\n-           Attribute_Last_Bit                 |\n-           Attribute_Maximum_Alignment        |\n-           Attribute_Old                      |\n-           Attribute_Output                   |\n-           Attribute_Partition_ID             |\n-           Attribute_Pool_Address             |\n-           Attribute_Position                 |\n-           Attribute_Priority                 |\n-           Attribute_Read                     |\n-           Attribute_Result                   |\n-           Attribute_Storage_Pool             |\n-           Attribute_Storage_Size             |\n-           Attribute_Storage_Unit             |\n-           Attribute_Stub_Type                |\n-           Attribute_Tag                      |\n-           Attribute_Target_Name              |\n-           Attribute_Terminated               |\n-           Attribute_To_Address               |\n-           Attribute_Type_Key                 |\n-           Attribute_UET_Address              |\n-           Attribute_Unchecked_Access         |\n-           Attribute_Universal_Literal_String |\n-           Attribute_Unrestricted_Access      |\n-           Attribute_Valid                    |\n-           Attribute_Value                    |\n-           Attribute_Wchar_T_Size             |\n-           Attribute_Wide_Value               |\n-           Attribute_Wide_Wide_Value          |\n-           Attribute_Word_Size                |\n-           Attribute_Write                    =>\n+      when Attribute_Abort_Signal               |\n+           Attribute_Access                     |\n+           Attribute_Address                    |\n+           Attribute_Address_Size               |\n+           Attribute_Asm_Input                  |\n+           Attribute_Asm_Output                 |\n+           Attribute_Base                       |\n+           Attribute_Bit_Order                  |\n+           Attribute_Bit_Position               |\n+           Attribute_Callable                   |\n+           Attribute_Caller                     |\n+           Attribute_Class                      |\n+           Attribute_Code_Address               |\n+           Attribute_Compiler_Version           |\n+           Attribute_Count                      |\n+           Attribute_Default_Bit_Order          |\n+           Attribute_Elaborated                 |\n+           Attribute_Elab_Body                  |\n+           Attribute_Elab_Spec                  |\n+           Attribute_Elab_Subp_Body             |\n+           Attribute_Enabled                    |\n+           Attribute_External_Tag               |\n+           Attribute_Fast_Math                  |\n+           Attribute_First_Bit                  |\n+           Attribute_Input                      |\n+           Attribute_Last_Bit                   |\n+           Attribute_Maximum_Alignment          |\n+           Attribute_Old                        |\n+           Attribute_Output                     |\n+           Attribute_Partition_ID               |\n+           Attribute_Pool_Address               |\n+           Attribute_Position                   |\n+           Attribute_Priority                   |\n+           Attribute_Read                       |\n+           Attribute_Result                     |\n+           Attribute_Storage_Pool               |\n+           Attribute_Storage_Size               |\n+           Attribute_Storage_Unit               |\n+           Attribute_Stub_Type                  |\n+           Attribute_System_Allocator_Alignment |\n+           Attribute_Tag                        |\n+           Attribute_Target_Name                |\n+           Attribute_Terminated                 |\n+           Attribute_To_Address                 |\n+           Attribute_Type_Key                   |\n+           Attribute_UET_Address                |\n+           Attribute_Unchecked_Access           |\n+           Attribute_Universal_Literal_String   |\n+           Attribute_Unrestricted_Access        |\n+           Attribute_Valid                      |\n+           Attribute_Value                      |\n+           Attribute_Wchar_T_Size               |\n+           Attribute_Wide_Value                 |\n+           Attribute_Wide_Wide_Value            |\n+           Attribute_Word_Size                  |\n+           Attribute_Write                      =>\n \n          raise Program_Error;\n       end case;"}, {"sha": "ff114dcd8a3f28ed30d6a5962c8d55d7fa0e2f4e", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=c5ecd6b73c89668590555d62b39f954618c27978", "patch": "@@ -814,6 +814,7 @@ package Snames is\n    Name_Storage_Size                   : constant Name_Id := N + $;\n    Name_Storage_Unit                   : constant Name_Id := N + $; -- GNAT\n    Name_Stream_Size                    : constant Name_Id := N + $; -- Ada 05\n+   Name_System_Allocator_Alignment     : constant Name_Id := N + $; -- GNAT\n    Name_Tag                            : constant Name_Id := N + $;\n    Name_Target_Name                    : constant Name_Id := N + $; -- GNAT\n    Name_Terminated                     : constant Name_Id := N + $;\n@@ -1354,6 +1355,7 @@ package Snames is\n       Attribute_Storage_Size,\n       Attribute_Storage_Unit,\n       Attribute_Stream_Size,\n+      Attribute_System_Allocator_Alignment,\n       Attribute_Tag,\n       Attribute_Target_Name,\n       Attribute_Terminated,"}, {"sha": "bf58eeca1ee5029ce501364ef50d4cfb916e94a9", "filename": "gcc/ada/ttypes.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fttypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ecd6b73c89668590555d62b39f954618c27978/gcc%2Fada%2Fttypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fttypes.ads?ref=c5ecd6b73c89668590555d62b39f954618c27978", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -188,6 +188,10 @@ package Ttypes is\n    --  The maximum alignment, in storage units, that an object or\n    --  type may require on the target machine.\n \n+   System_Allocator_Alignment : constant Pos :=\n+     Get_System_Allocator_Alignment;\n+   --  The alignment, in storage units, of addresses returned by malloc.\n+\n    Max_Unaligned_Field : constant Pos := Get_Max_Unaligned_Field;\n    --  The maximum supported size in bits for a field that is not aligned\n    --  on a storage unit boundary."}]}