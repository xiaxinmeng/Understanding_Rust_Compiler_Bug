{"sha": "ee9a9e7b215b0800c5f277029379c632f52e5e1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU5YTllN2IyMTViMDgwMGM1ZjI3NzAyOTM3OWM2MzJmNTJlNWUxYg==", "commit": {"author": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2017-08-09T19:02:41Z"}, "committer": {"name": "Will Schmidt", "email": "willschm@gcc.gnu.org", "date": "2017-08-09T19:02:41Z"}, "message": "fold-vec-madd-double.c: New.\n\n\n[gcc/testsuite]\n\n2017-08-09  Will Schmidt  <will_schmidt@vnet.ibm.com>\n\n\t* gcc.target/powerpc/fold-vec-madd-double.c: New.\n\t* gcc.target/powerpc/fold-vec-madd-float.c: New.\n\t* gcc.target/powerpc/fold-vec-madd-short.c: New.\n\nFrom-SVN: r250996", "tree": {"sha": "13e7f33f4adda0e446edc2e89e4435e7d6b87ddd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13e7f33f4adda0e446edc2e89e4435e7d6b87ddd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee9a9e7b215b0800c5f277029379c632f52e5e1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee9a9e7b215b0800c5f277029379c632f52e5e1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee9a9e7b215b0800c5f277029379c632f52e5e1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee9a9e7b215b0800c5f277029379c632f52e5e1b/comments", "author": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "07999eb2b1ec560419d1f50874429fc2c802ed26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07999eb2b1ec560419d1f50874429fc2c802ed26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07999eb2b1ec560419d1f50874429fc2c802ed26"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "6e02fad4f4a5c8e13aa10ace9baad9691ec9cf0e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a9e7b215b0800c5f277029379c632f52e5e1b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a9e7b215b0800c5f277029379c632f52e5e1b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ee9a9e7b215b0800c5f277029379c632f52e5e1b", "patch": "@@ -1,3 +1,9 @@\n+2017-08-09  Will Schmidt  <will_schmidt@vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/fold-vec-madd-double.c: New.\n+\t* gcc.target/powerpc/fold-vec-madd-float.c: New.\n+\t* gcc.target/powerpc/fold-vec-madd-short.c: New.\n+\n 2017-08-09  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \t* gcc.target/powerpc/fold-vec-cntlz-int.c: New."}, {"sha": "0fe78241294c8d8bbe009dd934eaab051933050f", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-madd-double.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a9e7b215b0800c5f277029379c632f52e5e1b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-madd-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a9e7b215b0800c5f277029379c632f52e5e1b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-madd-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-madd-double.c?ref=ee9a9e7b215b0800c5f277029379c632f52e5e1b", "patch": "@@ -0,0 +1,17 @@\n+/* Verify that overloaded built-ins for vec_madd with\n+   double inputs produce the right results.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-options \"-mvsx -O2\" } */\n+\n+#include <altivec.h>\n+\n+vector double\n+testd_l (vector double vd2, vector double vd3, vector double vd4)\n+{\n+  return vec_madd (vd2, vd3, vd4);\n+}\n+\n+/* { dg-final { scan-assembler-times \"xvmaddmdp|xvmaddadp\" 1 } } */\n+"}, {"sha": "fcfe0c386564333148d165fc5fa60e4f2586d061", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-madd-float.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a9e7b215b0800c5f277029379c632f52e5e1b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-madd-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a9e7b215b0800c5f277029379c632f52e5e1b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-madd-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-madd-float.c?ref=ee9a9e7b215b0800c5f277029379c632f52e5e1b", "patch": "@@ -0,0 +1,17 @@\n+/* Verify that overloaded built-ins for vec_madd with float\n+   inputs produce the right results.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-options \"-mvsx -O2\" } */\n+\n+#include <altivec.h>\n+\n+vector float\n+testf_l (vector float vf2, vector float vf3, vector float vf4)\n+{\n+  return vec_madd (vf2, vf3, vf4);\n+}\n+\n+/* { dg-final { scan-assembler-times \"xvmaddmsp|xvmaddasp\" 1 } } */\n+"}, {"sha": "0e78f3585f5d568b2b60c1ab97b083dadf3a4113", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-madd-short.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee9a9e7b215b0800c5f277029379c632f52e5e1b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-madd-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee9a9e7b215b0800c5f277029379c632f52e5e1b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-madd-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-madd-short.c?ref=ee9a9e7b215b0800c5f277029379c632f52e5e1b", "patch": "@@ -0,0 +1,38 @@\n+/* Verify that overloaded built-ins for vec_madd with short\n+   inputs produce the right results.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec -O2\" } */\n+\n+#include <altivec.h>\n+\n+vector signed short\n+test_mad_sss (vector signed short vss2, vector signed short vss3,\n+\t      vector signed short vss4)\n+{\n+  return vec_madd (vss2, vss3, vss4);\n+}\n+\n+vector signed short\n+test_mad_suu (vector signed short vss2, vector unsigned short vus3,\n+\t\tvector unsigned short vus4)\n+{\n+  return vec_madd (vss2, vus3, vus4);\n+}\n+\n+vector signed short\n+test_mad_uss (vector unsigned short vus2, vector signed short vss3,\n+\t      vector signed short vss4)\n+{\n+  return vec_madd (vus2, vss3, vss4);\n+}\n+\n+vector unsigned short\n+test_mad_uuu (vector unsigned short vus2, vector unsigned short vus3,\n+\t\tvector unsigned short vus4)\n+{\n+  return vec_madd (vus2, vus3, vus4);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmladduhm\" 4 } } */"}]}