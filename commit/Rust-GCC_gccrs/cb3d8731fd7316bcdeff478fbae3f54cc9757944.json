{"sha": "cb3d8731fd7316bcdeff478fbae3f54cc9757944", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IzZDg3MzFmZDczMTZiY2RlZmY0NzhmYmFlM2Y1NGNjOTc1Nzk0NA==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2011-09-06T12:03:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-06T12:03:30Z"}, "message": "exp_attr.adb (Expand_N_Attribute_Reference): Rewrite the processing for Descriptor_Size.\n\n2011-09-06  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_attr.adb (Expand_N_Attribute_Reference): Rewrite the\n\tprocessing for Descriptor_Size.\n\t* gnat_rm.texi: Rephrase the wording for attribute Descriptor_Size\n\tto account for its broader usage.\n\t* sem_attr.adb (Analyze_Attribute): Change the error detection\n\tcircuitry for Descriptor_Size as the attribute is now applicable\n\tto all types.\n\nFrom-SVN: r178590", "tree": {"sha": "e3a85fac6597037d92c44fd45349900c0deafa72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3a85fac6597037d92c44fd45349900c0deafa72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb3d8731fd7316bcdeff478fbae3f54cc9757944", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb3d8731fd7316bcdeff478fbae3f54cc9757944", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb3d8731fd7316bcdeff478fbae3f54cc9757944", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb3d8731fd7316bcdeff478fbae3f54cc9757944/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f7e6fc478f26792bba6cc51a400d8ffae2373ee1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7e6fc478f26792bba6cc51a400d8ffae2373ee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7e6fc478f26792bba6cc51a400d8ffae2373ee1"}], "stats": {"total": 55, "additions": 35, "deletions": 20}, "files": [{"sha": "02520dff03e25802d4e69103ccc219664846a451", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3d8731fd7316bcdeff478fbae3f54cc9757944/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3d8731fd7316bcdeff478fbae3f54cc9757944/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cb3d8731fd7316bcdeff478fbae3f54cc9757944", "patch": "@@ -1,3 +1,13 @@\n+2011-09-06  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_attr.adb (Expand_N_Attribute_Reference): Rewrite the\n+\tprocessing for Descriptor_Size.\n+\t* gnat_rm.texi: Rephrase the wording for attribute Descriptor_Size\n+\tto account for its broader usage.\n+\t* sem_attr.adb (Analyze_Attribute): Change the error detection\n+\tcircuitry for Descriptor_Size as the attribute is now applicable\n+\tto all types.\n+\n 2011-09-06  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_attr.adb, prj-nmsc.adb, exp_aggr.adb: Minor reformatting."}, {"sha": "c05385ef3b2fa6d648b3de961b3afdd5c4992269", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3d8731fd7316bcdeff478fbae3f54cc9757944/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3d8731fd7316bcdeff478fbae3f54cc9757944/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=cb3d8731fd7316bcdeff478fbae3f54cc9757944", "patch": "@@ -1803,10 +1803,23 @@ package body Exp_Attr is\n       -- Descriptor_Size --\n       ---------------------\n \n-      --  This attribute is handled entirely by the back end\n-\n       when Attribute_Descriptor_Size =>\n-         Apply_Universal_Integer_Attribute_Checks (N);\n+\n+         --  Attribute Descriptor_Size is handled by the back end when applied\n+         --  to an unconstrained array type.\n+\n+         if Is_Array_Type (Ptyp)\n+           and then not Is_Constrained (Ptyp)\n+         then\n+            Apply_Universal_Integer_Attribute_Checks (N);\n+\n+         --  For any other type, the descriptor size is 0 because there is no\n+         --  actual descriptor.\n+\n+         else\n+            Rewrite (N, Make_Integer_Literal (Loc, 0));\n+            Analyze (N);\n+         end if;\n \n       ---------------\n       -- Elab_Body --"}, {"sha": "4e74a3239cca1c9e6922df73a099a2b98f59caf9", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3d8731fd7316bcdeff478fbae3f54cc9757944/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3d8731fd7316bcdeff478fbae3f54cc9757944/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=cb3d8731fd7316bcdeff478fbae3f54cc9757944", "patch": "@@ -5941,9 +5941,10 @@ as a @code{Pos} value (0 for @code{High_Order_First}, 1 for\n @findex Descriptor_Size\n @noindent\n Attribute @code{Descriptor_Size} returns the size in bits of the descriptor\n-allocated for an unconstrained array type. An array descriptor contains bounds\n-information and is located immediately before the first element of the array.\n-The value of attribute @code{Descriptor_Size} is of type universal integer.\n+allocated for a type.  The result is non-zero only for unconstrained array\n+types and the returned value is of type universal integer.  In GNAT, an array\n+descriptor contains bounds information and is located immediately before the\n+first element of the array.\n \n @smallexample @c ada\n type Unconstr_Array is array (Positive range <>) of Boolean;\n@@ -5953,7 +5954,7 @@ Put_Line (\"Descriptor size = \" & Unconstr_Array'Descriptor_Size'Img);\n @noindent\n The attribute takes into account any additional padding due to type alignment.\n In the example above, the descriptor contains two values of type\n-@code{Positive} representing the low and high bound. Since @code{Positive} has\n+@code{Positive} representing the low and high bound.  Since @code{Positive} has\n a size of 31 bits and an alignment of 4, the descriptor size is @code{2 *\n Positive'Size + 2} or 64 bits.\n "}, {"sha": "738edda77fdf698bcbecf0e86f45ed31da72e97d", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3d8731fd7316bcdeff478fbae3f54cc9757944/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3d8731fd7316bcdeff478fbae3f54cc9757944/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=cb3d8731fd7316bcdeff478fbae3f54cc9757944", "patch": "@@ -1906,7 +1906,7 @@ package body Sem_Attr is\n          end if;\n       end Validate_Non_Static_Attribute_Function_Call;\n \n-   --   Start of processing for Analyze_Attribute\n+   --  Start of processing for Analyze_Attribute\n \n    begin\n       --  Immediate return if unrecognized attribute (already diagnosed\n@@ -3021,19 +3021,10 @@ package body Sem_Attr is\n       when Attribute_Descriptor_Size =>\n          Check_E0;\n \n-         --  Attribute Descriptor_Size is relevant only in the context of an\n-         --  unconstrained array type.\n-\n-         --  Shouldn't it just return zero for types other than arrays or\n-         --  constrained arrays ???\n-\n-         if Is_Entity_Name (P)\n-           and then Is_Array_Type (Entity (P))\n-           and then not Is_Constrained (Entity (P))\n+         if not Is_Entity_Name (P)\n+           or else not Is_Type (Entity (P))\n          then\n-            null;\n-         else\n-            Error_Attr_P (\"invalid prefix for % attribute\");\n+            Error_Attr_P (\"prefix of attribute % must denote a type\");\n          end if;\n \n          Set_Etype (N, Universal_Integer);"}]}