{"sha": "36650ec61912ff796651fa00964cb0f991c549a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY2NTBlYzYxOTEyZmY3OTY2NTFmYTAwOTY0Y2IwZjk5MWM1NDlhMQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-01-19T14:03:23Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-01-19T14:03:23Z"}, "message": "[AArch64] PR 64448: Combine ((x ^ y) & m) ^ x into bsl/bif instruction\n\n\tPR target/64448\n\t* config/aarch64/aarch64-simd.md (aarch64_simd_bsl<mode>_internal):\n\tMatch xor-and-xor RTL pattern.\n\nFrom-SVN: r219843", "tree": {"sha": "db360384b9ebb2c312f5aa8bd887487889803643", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db360384b9ebb2c312f5aa8bd887487889803643"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36650ec61912ff796651fa00964cb0f991c549a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36650ec61912ff796651fa00964cb0f991c549a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36650ec61912ff796651fa00964cb0f991c549a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36650ec61912ff796651fa00964cb0f991c549a1/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dfd3a76caecd5cea52ad04e0790165ba44742d59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfd3a76caecd5cea52ad04e0790165ba44742d59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfd3a76caecd5cea52ad04e0790165ba44742d59"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "605b87e9070512b1b5a5695ce8fbc63dd8987206", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36650ec61912ff796651fa00964cb0f991c549a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36650ec61912ff796651fa00964cb0f991c549a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=36650ec61912ff796651fa00964cb0f991c549a1", "patch": "@@ -1,3 +1,9 @@\n+2015-01-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/64448\n+\t* config/aarch64/aarch64-simd.md (aarch64_simd_bsl<mode>_internal):\n+\tMatch xor-and-xor RTL pattern.\n+\n 2015-01-19  Igor Zamyatin  <igor.zamyatin@intel.com>\n \n \tPR rtl-optimization/64081"}, {"sha": "d239884e70cab1e7da1996f0ce05469fee74db2a", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36650ec61912ff796651fa00964cb0f991c549a1/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36650ec61912ff796651fa00964cb0f991c549a1/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=36650ec61912ff796651fa00964cb0f991c549a1", "patch": "@@ -2008,15 +2008,14 @@\n ;;     bif op0, op1, mask\n \n (define_insn \"aarch64_simd_bsl<mode>_internal\"\n-  [(set (match_operand:VSDQ_I_DI 0 \"register_operand\"\t\t\"=w,w,w\")\n-\t(ior:VSDQ_I_DI\n+  [(set (match_operand:VSDQ_I_DI 0 \"register_operand\" \"=w,w,w\")\n+\t(xor:VSDQ_I_DI\n \t   (and:VSDQ_I_DI\n-\t     (not:<V_cmp_result>\n-\t       (match_operand:<V_cmp_result> 1 \"register_operand\"\t\" 0,w,w\"))\n-\t     (match_operand:VSDQ_I_DI 3 \"register_operand\"\t\" w,0,w\"))\n-\t   (and:VSDQ_I_DI\n-\t     (match_dup:<V_cmp_result> 1)\n-\t     (match_operand:VSDQ_I_DI 2 \"register_operand\"\t\" w,w,0\"))\n+\t     (xor:VSDQ_I_DI\n+\t       (match_operand:<V_cmp_result> 3 \"register_operand\" \"w,0,w\")\n+\t       (match_operand:VSDQ_I_DI 2 \"register_operand\" \"w,w,0\"))\n+\t     (match_operand:VSDQ_I_DI 1 \"register_operand\" \"0,w,w\"))\n+\t  (match_dup:<V_cmp_result> 3)\n \t))]\n   \"TARGET_SIMD\"\n   \"@"}]}