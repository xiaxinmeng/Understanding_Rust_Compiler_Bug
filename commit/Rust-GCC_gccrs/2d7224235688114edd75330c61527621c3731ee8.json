{"sha": "2d7224235688114edd75330c61527621c3731ee8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ3MjI0MjM1Njg4MTE0ZWRkNzUzMzBjNjE1Mjc2MjFjMzczMWVlOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2006-09-30T13:31:29Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2006-09-30T13:31:29Z"}, "message": "re PR rtl-optimization/28096 (fdlibm/strtod.c miscompiled at -O2)\n\n\tPR rtl-optimization/28096\n\t* ifcvt.c (check_cond_move_block): Return FALSE if the source of an\n\tassignment has already been used as a destination earlier in the\n\tblock.\n\nFrom-SVN: r117331", "tree": {"sha": "d07cacf4059837374203a5fe4bbf8717106d9a66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d07cacf4059837374203a5fe4bbf8717106d9a66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d7224235688114edd75330c61527621c3731ee8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d7224235688114edd75330c61527621c3731ee8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d7224235688114edd75330c61527621c3731ee8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d7224235688114edd75330c61527621c3731ee8/comments", "author": null, "committer": null, "parents": [{"sha": "10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10d2ebc511a7ded41cb31255b3e4c306e44e5f4e"}], "stats": {"total": 66, "additions": 63, "deletions": 3}, "files": [{"sha": "7a0e026c28129d791cae646be3b65811edbd387e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7224235688114edd75330c61527621c3731ee8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7224235688114edd75330c61527621c3731ee8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d7224235688114edd75330c61527621c3731ee8", "patch": "@@ -1,4 +1,10 @@\n-2006-09-28  Eric Botcazou  <ebotcazou@adacore.com>\n+2006-09-30  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR rtl-optimization/28096\n+\t* ifcvt.c (check_cond_move_block): Return FALSE if the source of an\n+\tassignment has already been used as a destination earlier in the block.\n+\n+2006-09-29  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* builtins.c (expand_builtin_setjmp): Delete.\n \t(expand_builtin) <BUILT_IN_SETJMP>: Mark as unreachable."}, {"sha": "8609823b33b38838bd9aab0f2af936c912016737", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7224235688114edd75330c61527621c3731ee8/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7224235688114edd75330c61527621c3731ee8/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=2d7224235688114edd75330c61527621c3731ee8", "patch": "@@ -2424,7 +2424,7 @@ check_cond_move_block (basic_block bb, rtx *vals, rtx cond)\n       src = SET_SRC (set);\n       if (!REG_P (dest)\n \t  || (SMALL_REGISTER_CLASSES && HARD_REGISTER_P (dest)))\n-\treturn false;\n+\treturn FALSE;\n \n       if (!CONSTANT_P (src) && !register_operand (src, VOIDmode))\n \treturn FALSE;\n@@ -2435,6 +2435,14 @@ check_cond_move_block (basic_block bb, rtx *vals, rtx cond)\n       if (may_trap_p (src) || may_trap_p (dest))\n \treturn FALSE;\n \n+      /* Don't try to handle this if the source register was\n+\t modified earlier in the block.  */\n+      if ((REG_P (src)\n+\t   && vals[REGNO (src)] != NULL)\n+\t  || (GET_CODE (src) == SUBREG && REG_P (SUBREG_REG (src))\n+\t      && vals[REGNO (SUBREG_REG (src))] != NULL))\n+\treturn FALSE;\n+\n       /* Don't try to handle this if the destination register was\n \t modified earlier in the block.  */\n       if (vals[REGNO (dest)] != NULL)"}, {"sha": "c5c774a66702f16dbd30cb15e720438ec6ad69c1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7224235688114edd75330c61527621c3731ee8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7224235688114edd75330c61527621c3731ee8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2d7224235688114edd75330c61527621c3731ee8", "patch": "@@ -1,3 +1,7 @@\n+2006-09-30  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.c-torture/execute/20060930-1.c: New test.\n+\n 2006-09-29  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR fortran/18791\n@@ -15,7 +19,7 @@\n \t* gfortran.dg/nearest_1.f90: Add -ffloat-store to defeat extra\n \tprecision on some archs.\n \n-2006-09-28  Eric Botcazou  <ebotcazou@adacore.com>\n+2006-09-29  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.dg/non-local-goto-1.c: New test.\n \t* gcc.dg/non-local-goto-2.c: Likewise."}, {"sha": "f12ee55ddfc119e6ca8fc7c51fe93ba3207cde04", "filename": "gcc/testsuite/gcc.c-torture/execute/20060930-1.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7224235688114edd75330c61527621c3731ee8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20060930-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7224235688114edd75330c61527621c3731ee8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20060930-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20060930-1.c?ref=2d7224235688114edd75330c61527621c3731ee8", "patch": "@@ -0,0 +1,42 @@\n+/* PR rtl-optimization/28096 */\n+/* Origin: Jan Stein <jan@gatespacetelematics.com> */\n+\n+extern void abort (void);\n+\n+int bar (int, int) __attribute__((noinline));\n+int bar (int a, int b)\n+{\n+  if (b != 1)\n+    abort ();\n+}\n+\n+void foo(int, int) __attribute__((noinline));\n+void foo (int e, int n)\n+{\n+  int i, bb2, bb5;\n+\n+  if (e > 0)\n+    e = -e;\n+\n+  for (i = 0; i < n; i++)\n+    {\n+      if (e >= 0)\n+\t{\n+\t  bb2 = 0;\n+\t  bb5 = 0;\n+\t}\n+      else\n+\t{\n+\t  bb5 = -e;\n+\t  bb2 = bb5;\n+\t}\n+\n+      bar (bb5, bb2);\n+    }\n+}\n+\n+int main(void)\n+{\n+  foo (1, 1);\n+  return 0;\n+}"}]}