{"sha": "307233c206c8853cb277f7e62b14c99fb695b6be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA3MjMzYzIwNmM4ODUzY2IyNzdmN2U2MmIxNGM5OWZiNjk1YjZiZQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2008-10-15T12:16:35Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2008-10-15T12:16:35Z"}, "message": "constants.c (build_constant_data_ref): Make sure we only build one copy of the decl for the constant pool.\n\n2008-10-14  Andrew Haley  <aph@redhat.com>\n\n        * constants.c (build_constant_data_ref): Make sure we only build\n        one copy of the decl for the constant pool.\n\nFrom-SVN: r141133", "tree": {"sha": "4f79aea342c28fb6ef07a45e173852a15ae1d31e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f79aea342c28fb6ef07a45e173852a15ae1d31e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/307233c206c8853cb277f7e62b14c99fb695b6be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/307233c206c8853cb277f7e62b14c99fb695b6be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/307233c206c8853cb277f7e62b14c99fb695b6be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/307233c206c8853cb277f7e62b14c99fb695b6be/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f6e6e9904cd32cc78873a33f0a3839812b0d0f57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6e6e9904cd32cc78873a33f0a3839812b0d0f57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6e6e9904cd32cc78873a33f0a3839812b0d0f57"}], "stats": {"total": 35, "additions": 22, "deletions": 13}, "files": [{"sha": "d987bbe71b7918c79645df9b723f3a24c71a286e", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/307233c206c8853cb277f7e62b14c99fb695b6be/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/307233c206c8853cb277f7e62b14c99fb695b6be/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=307233c206c8853cb277f7e62b14c99fb695b6be", "patch": "@@ -1,3 +1,8 @@\n+2008-10-14  Andrew Haley  <aph@redhat.com>\n+\n+\t* constants.c (build_constant_data_ref): Make sure we only build\n+\tone copy of the decl for the constant pool.\n+\n 2008-09-22  Andrew Haley  <aph@redhat.com>\n \n \t* expr.c (rules): Add new rule for"}, {"sha": "526d9c777b5438850b0383416611a30429ad9aa5", "filename": "gcc/java/constants.c", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/307233c206c8853cb277f7e62b14c99fb695b6be/gcc%2Fjava%2Fconstants.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/307233c206c8853cb277f7e62b14c99fb695b6be/gcc%2Fjava%2Fconstants.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fconstants.c?ref=307233c206c8853cb277f7e62b14c99fb695b6be", "patch": "@@ -448,21 +448,25 @@ build_constant_data_ref (bool indirect)\n     }\n   else\n     {\n-      tree type, decl;\n       tree decl_name = mangled_classname (\"_CD_\", output_class);\n+      tree decl = IDENTIFIER_GLOBAL_VALUE (decl_name);\n \n-      /* Build a type with unspecified bounds.  The will make sure\n-\t that targets do the right thing with whatever size we end\n-\t up with at the end.  Using bounds that are too small risks\n-\t assuming the data is in the small data section.  */\n-      type = build_array_type (ptr_type_node, NULL_TREE);\n-\n-      /* We need to lay out the type ourselves, since build_array_type\n-\t thinks the type is incomplete.  */\n-      layout_type (type);\n-\n-      decl = build_decl (VAR_DECL, decl_name, type);\n-      TREE_STATIC (decl) = 1;\n+      if (! decl)\n+\t{\n+\t  /* Build a type with unspecified bounds.  The will make sure\n+\t     that targets do the right thing with whatever size we end\n+\t     up with at the end.  Using bounds that are too small risks\n+\t     assuming the data is in the small data section.  */\n+\t  tree type = build_array_type (ptr_type_node, NULL_TREE);\n+\n+\t  /* We need to lay out the type ourselves, since build_array_type\n+\t     thinks the type is incomplete.  */\n+\t  layout_type (type);\n+\n+\t  decl = build_decl (VAR_DECL, decl_name, type);\n+\t  TREE_STATIC (decl) = 1;\n+\t  IDENTIFIER_GLOBAL_VALUE (decl_name) = decl;\n+\t}\n \n       return decl;\n     }"}]}