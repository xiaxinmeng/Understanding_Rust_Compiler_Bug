{"sha": "923ecd0e4b472073e2794ad2cb272880c3c9e937", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIzZWNkMGU0YjQ3MjA3M2UyNzk0YWQyY2IyNzI4ODBjM2M5ZTkzNw==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-11-14T11:40:25Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-11-14T11:40:25Z"}, "message": "[Ada] Lingering loop for ignored Ghost assignment\n\nThe following patch ensures that loops generated for aggregates as part\nof ignored Ghost assignments are correctly eliminated from the generated\ncode.\n\n------------\n-- Source --\n------------\n\n--  pack.ads\n\npackage Pack is\n   type addr4k is new Integer range 0 .. 100 with Size => 32;\n\n   type Four_KB_Page_Property is record\n      Is_Scrubbed : Boolean := False;\n   end record with Ghost;\n\n   type Four_KB_Page_Array is\n     array (addr4k range <>) of Four_KB_Page_Property with Ghost;\n\n   type Base_Memory is tagged record\n      Four_KB_Pages : Four_KB_Page_Array (addr4k) :=\n                        (others => (Is_Scrubbed => False));\n   end record with Ghost;\n\n   subtype Memory is Base_Memory with Ghost;\n   Global_Memory : Memory with Ghost;\n\n   procedure Assign;\nend Pack;\n\n--  pack.adb\n\npackage body Pack is\n   procedure Assign is\n   begin\n      Global_Memory.Four_KB_Pages := (others => (Is_Scrubbed => True));\n   end Assign;\nend Pack;\n\n----------------------------\n-- Compilation and output --\n----------------------------\n\n$ gcc -c -gnatDG pack.adb\n$ grep -c \"loop\" pack.adb.dg\n0\n\n2018-11-14  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch4.adb (Expand_Concatenate): Use the proper routine to\n\tset the need for debug info.\n\t* exp_dbug.adb (Build_Subprogram_Instance_Renamings): Use the\n\tproper routine to set the need for debug info.\n\t* exp_prag.adb (Expand_Pragma_Initial_Condition): Use the proper\n\troutine to set the need for debug info.\n\t* exp_util.adb (Build_DIC_Procedure_Declaration): Use the proper\n\troutine to set the need for debug info.\n\t(Build_Invariant_Procedure_Declaration): Use the proper routine\n\tto set the need for debug info.\n\t* ghost.adb (Record_Ignored_Ghost_Node): Add statements as a\n\twhole class to the list of top level ignored Ghost nodes.\n\t* sem_util.adb (Set_Debug_Info_Needed): Do not generate debug\n\tinfo for an ignored Ghost entity.\n\nFrom-SVN: r266111", "tree": {"sha": "72fd4d6256c239869946eaddcb4333bfdc02b243", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72fd4d6256c239869946eaddcb4333bfdc02b243"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/923ecd0e4b472073e2794ad2cb272880c3c9e937", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/923ecd0e4b472073e2794ad2cb272880c3c9e937", "html_url": "https://github.com/Rust-GCC/gccrs/commit/923ecd0e4b472073e2794ad2cb272880c3c9e937", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/923ecd0e4b472073e2794ad2cb272880c3c9e937/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e3548b69ad7ce76aa9e9aecf6a707ab0f88114ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3548b69ad7ce76aa9e9aecf6a707ab0f88114ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3548b69ad7ce76aa9e9aecf6a707ab0f88114ae"}], "stats": {"total": 58, "additions": 42, "deletions": 16}, "files": [{"sha": "8a42f4faea4cca53d239863cf0e229353f030a3d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923ecd0e4b472073e2794ad2cb272880c3c9e937/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923ecd0e4b472073e2794ad2cb272880c3c9e937/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=923ecd0e4b472073e2794ad2cb272880c3c9e937", "patch": "@@ -1,3 +1,20 @@\n+2018-11-14  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_Concatenate): Use the proper routine to\n+\tset the need for debug info.\n+\t* exp_dbug.adb (Build_Subprogram_Instance_Renamings): Use the\n+\tproper routine to set the need for debug info.\n+\t* exp_prag.adb (Expand_Pragma_Initial_Condition): Use the proper\n+\troutine to set the need for debug info.\n+\t* exp_util.adb (Build_DIC_Procedure_Declaration): Use the proper\n+\troutine to set the need for debug info.\n+\t(Build_Invariant_Procedure_Declaration): Use the proper routine\n+\tto set the need for debug info.\n+\t* ghost.adb (Record_Ignored_Ghost_Node): Add statements as a\n+\twhole class to the list of top level ignored Ghost nodes.\n+\t* sem_util.adb (Set_Debug_Info_Needed): Do not generate debug\n+\tinfo for an ignored Ghost entity.\n+\n 2018-11-14  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* bindgen.adb, exp_cg.adb, repinfo.adb, sprint.adb: Minor reuse"}, {"sha": "98c1d31753408afa1f3f229cf2360c2ff818fa54", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923ecd0e4b472073e2794ad2cb272880c3c9e937/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923ecd0e4b472073e2794ad2cb272880c3c9e937/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=923ecd0e4b472073e2794ad2cb272880c3c9e937", "patch": "@@ -3368,8 +3368,8 @@ package body Exp_Ch4 is\n       --  entity, we make sure we have debug information for the result.\n \n       Ent := Make_Temporary (Loc, 'S');\n-      Set_Is_Internal (Ent);\n-      Set_Needs_Debug_Info (Ent);\n+      Set_Is_Internal       (Ent);\n+      Set_Debug_Info_Needed (Ent);\n \n       --  If the bound is statically known to be out of range, we do not want\n       --  to abort, we want a warning and a runtime constraint error. Note that"}, {"sha": "34a97c87a3446154f11007be7c86fe12be230a0b", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923ecd0e4b472073e2794ad2cb272880c3c9e937/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923ecd0e4b472073e2794ad2cb272880c3c9e937/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=923ecd0e4b472073e2794ad2cb272880c3c9e937", "patch": "@@ -1053,7 +1053,7 @@ package body Exp_Dbug is\n                Name                => New_Occurrence_Of (E, Loc));\n \n             Append (Decl, Declarations (N));\n-            Set_Needs_Debug_Info (Defining_Identifier (Decl));\n+            Set_Debug_Info_Needed (Defining_Identifier (Decl));\n          end if;\n \n          Next_Entity (E);"}, {"sha": "485f066f7023bf88fb38827e6ba9a96b81bcc022", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923ecd0e4b472073e2794ad2cb272880c3c9e937/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923ecd0e4b472073e2794ad2cb272880c3c9e937/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=923ecd0e4b472073e2794ad2cb272880c3c9e937", "patch": "@@ -1688,7 +1688,7 @@ package body Exp_Prag is\n       --  condition is subject to Source Coverage Obligations.\n \n       if Generate_SCO then\n-         Set_Needs_Debug_Info (Proc_Id);\n+         Set_Debug_Info_Needed (Proc_Id);\n       end if;\n \n       --  Generate:\n@@ -1722,7 +1722,7 @@ package body Exp_Prag is\n       Proc_Body_Id := Defining_Entity (Proc_Body);\n \n       if Generate_SCO then\n-         Set_Needs_Debug_Info (Proc_Body_Id);\n+         Set_Debug_Info_Needed (Proc_Body_Id);\n       end if;\n \n       --  The location of the initial condition procedure call must be as close"}, {"sha": "b24cab7a2f28e3a5eb5ec91e261eb56ae2790bdb", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923ecd0e4b472073e2794ad2cb272880c3c9e937/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923ecd0e4b472073e2794ad2cb272880c3c9e937/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=923ecd0e4b472073e2794ad2cb272880c3c9e937", "patch": "@@ -1933,7 +1933,7 @@ package body Exp_Util is\n       --  is subject to Source Coverage Obligations.\n \n       if Generate_SCO then\n-         Set_Needs_Debug_Info (Proc_Id);\n+         Set_Debug_Info_Needed (Proc_Id);\n       end if;\n \n       --  Obtain all views of the input type\n@@ -3407,7 +3407,7 @@ package body Exp_Util is\n       --  subject to Source Coverage Obligations.\n \n       if Generate_SCO then\n-         Set_Needs_Debug_Info (Proc_Id);\n+         Set_Debug_Info_Needed (Proc_Id);\n       end if;\n \n       --  Obtain all views of the input type"}, {"sha": "ffb5d509a11c57d3defa0ad4280a59afcaa9bc9b", "filename": "gcc/ada/ghost.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923ecd0e4b472073e2794ad2cb272880c3c9e937/gcc%2Fada%2Fghost.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923ecd0e4b472073e2794ad2cb272880c3c9e937/gcc%2Fada%2Fghost.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fghost.adb?ref=923ecd0e4b472073e2794ad2cb272880c3c9e937", "patch": "@@ -1648,8 +1648,8 @@ package body Ghost is\n         or else Nkind (N) in N_Push_Pop_xxx_Label\n         or else Nkind (N) in N_Raise_xxx_Error\n         or else Nkind (N) in N_Representation_Clause\n-        or else Nkind_In (N, N_Assignment_Statement,\n-                             N_Call_Marker,\n+        or else Nkind (N) in N_Statement_Other_Than_Procedure_Call\n+        or else Nkind_In (N, N_Call_Marker,\n                              N_Freeze_Entity,\n                              N_Freeze_Generic_Entity,\n                              N_Itype_Reference,"}, {"sha": "f4b6579b34c9348d5a13aab8cf5ff098e8378633", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/923ecd0e4b472073e2794ad2cb272880c3c9e937/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/923ecd0e4b472073e2794ad2cb272880c3c9e937/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=923ecd0e4b472073e2794ad2cb272880c3c9e937", "patch": "@@ -24184,18 +24184,27 @@ package body Sem_Util is\n    --  Start of processing for Set_Debug_Info_Needed\n \n    begin\n-      --  Nothing to do if argument is Empty or has Debug_Info_Off set, which\n-      --  indicates that Debug_Info_Needed is never required for the entity.\n+      --  Nothing to do if there is no available entity\n+\n+      if No (T) then\n+         return;\n+\n+      --  Nothing to do for an entity with suppressed debug information\n+\n+      elsif Debug_Info_Off (T) then\n+         return;\n+\n+      --  Nothing to do for an ignored Ghost entity because the entity will be\n+      --  eliminated from the tree.\n+\n+      elsif Is_Ignored_Ghost_Entity (T) then\n+         return;\n+\n       --  Nothing to do if entity comes from a predefined file. Library files\n       --  are compiled without debug information, but inlined bodies of these\n       --  routines may appear in user code, and debug information on them ends\n       --  up complicating debugging the user code.\n \n-      if No (T)\n-        or else Debug_Info_Off (T)\n-      then\n-         return;\n-\n       elsif In_Inlined_Body and then In_Predefined_Unit (T) then\n          Set_Needs_Debug_Info (T, False);\n       end if;"}]}