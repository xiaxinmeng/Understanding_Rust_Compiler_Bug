{"sha": "ae1f6fcec0d9a0a0551578915a7a83c39be894aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUxZjZmY2VjMGQ5YTBhMDU1MTU3ODkxNWE3YTgzYzM5YmU4OTRhYQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-10-21T14:34:58Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-10-21T14:34:58Z"}, "message": "re PR tree-optimization/45875 (ice in gimple_fold_obj_type_ref_known_binfo with -O2)\n\n2010-10-21  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/45875\n\t* tree.c (get_binfo_at_offset): Remove initial zero offset test.\n\n\t* testsuite/g++.dg/ipa/pr45875.C: New test.\n\nFrom-SVN: r165780", "tree": {"sha": "b7250dedbfc34a37e874e771b58ad2229c079a5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7250dedbfc34a37e874e771b58ad2229c079a5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae1f6fcec0d9a0a0551578915a7a83c39be894aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae1f6fcec0d9a0a0551578915a7a83c39be894aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae1f6fcec0d9a0a0551578915a7a83c39be894aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae1f6fcec0d9a0a0551578915a7a83c39be894aa/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e2995b26c10404ee4975d4a70e580018417c0f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e2995b26c10404ee4975d4a70e580018417c0f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e2995b26c10404ee4975d4a70e580018417c0f7"}], "stats": {"total": 61, "additions": 58, "deletions": 3}, "files": [{"sha": "8d110cfee6e551cad88ccbb7975aec45bc5df851", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1f6fcec0d9a0a0551578915a7a83c39be894aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1f6fcec0d9a0a0551578915a7a83c39be894aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae1f6fcec0d9a0a0551578915a7a83c39be894aa", "patch": "@@ -1,3 +1,8 @@\n+2010-10-21  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/45875\n+\t* tree.c (get_binfo_at_offset): Remove initial zero offset test.\n+\n 2010-10-21  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* tree-into-ssa.c (rewrite_update_enter_block): Remove unused"}, {"sha": "c714e1f693ccf964f9195b719040089dc8134b42", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1f6fcec0d9a0a0551578915a7a83c39be894aa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1f6fcec0d9a0a0551578915a7a83c39be894aa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ae1f6fcec0d9a0a0551578915a7a83c39be894aa", "patch": "@@ -1,3 +1,8 @@\n+2010-10-21  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/45875\n+\t* g++.dg/ipa/pr45875.C: New test.\n+\n 2010-10-21  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/46049"}, {"sha": "34f02e300a2e87e8daa0fa2c04fe57c5eff7336a", "filename": "gcc/testsuite/g++.dg/ipa/pr45875.C", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1f6fcec0d9a0a0551578915a7a83c39be894aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr45875.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1f6fcec0d9a0a0551578915a7a83c39be894aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr45875.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr45875.C?ref=ae1f6fcec0d9a0a0551578915a7a83c39be894aa", "patch": "@@ -0,0 +1,48 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fno-early-inlining -fno-ipa-cp\"  } */\n+\n+extern \"C\" void abort (void);\n+\n+class A\n+{\n+public:\n+  virtual int foo (int i);\n+};\n+\n+class B\n+{\n+public:\n+  class A confusion;\n+};\n+\n+int A::foo (int i)\n+{\n+  return i + 1;\n+}\n+\n+int __attribute__ ((noinline,noclone)) get_input(void)\n+{\n+  return 1;\n+}\n+\n+static int middleman_a (class A *obj, int i)\n+{\n+  return obj->foo (i);\n+}\n+\n+static int middleman_b (class B *obj, int i)\n+{\n+  return middleman_a (&obj->confusion, i);\n+}\n+\n+\n+int main (int argc, char *argv[])\n+{\n+  class B b;\n+  int i, j = get_input ();\n+\n+  for (i = 0; i < j; i++)\n+    if (middleman_b (&b, j) != 2)\n+      abort ();\n+  return 0;\n+}"}, {"sha": "48279ebc18176c5a7b995fbe12dc8c7cfcd49dcd", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1f6fcec0d9a0a0551578915a7a83c39be894aa/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1f6fcec0d9a0a0551578915a7a83c39be894aa/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=ae1f6fcec0d9a0a0551578915a7a83c39be894aa", "patch": "@@ -10893,9 +10893,6 @@ get_binfo_at_offset (tree binfo, HOST_WIDE_INT offset, tree expected_type)\n {\n   tree type;\n \n-  if (offset == 0)\n-    return binfo;\n-\n   type = TREE_TYPE (binfo);\n   while (offset > 0)\n     {"}]}