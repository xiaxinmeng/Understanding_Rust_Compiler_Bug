{"sha": "3f10efd4ee4d62d2d7a94e518a3873687399879e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YxMGVmZDRlZTRkNjJkMmQ3YTk0ZTUxOGEzODczNjg3Mzk5ODc5ZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-06-29T10:57:00Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-06-29T10:57:00Z"}, "message": "Fix bit-test expansion for single cluster (PR tree-optimization/86263).\n\n2018-06-29  Martin Liska  <mliska@suse.cz>\n\n        PR tree-optimization/86263\n\t* tree-switch-conversion.c (switch_decision_tree::try_switch_expansion):\n        Make edge redirection.\n2018-06-29  Martin Liska  <mliska@suse.cz>\n\n        PR tree-optimization/86263\n\t* gcc.dg/tree-ssa/pr86263.c: New test.\n\nFrom-SVN: r262247", "tree": {"sha": "61c798469db4638c2770f79b11eedd8bed4a2847", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61c798469db4638c2770f79b11eedd8bed4a2847"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f10efd4ee4d62d2d7a94e518a3873687399879e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f10efd4ee4d62d2d7a94e518a3873687399879e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f10efd4ee4d62d2d7a94e518a3873687399879e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f10efd4ee4d62d2d7a94e518a3873687399879e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6475e077a091ea57b7442ed35feaf031728bdeb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6475e077a091ea57b7442ed35feaf031728bdeb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6475e077a091ea57b7442ed35feaf031728bdeb2"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "44012454e27a8f41e17074406ebf4c42bbec00b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f10efd4ee4d62d2d7a94e518a3873687399879e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f10efd4ee4d62d2d7a94e518a3873687399879e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f10efd4ee4d62d2d7a94e518a3873687399879e", "patch": "@@ -1,3 +1,9 @@\n+2018-06-29  Martin Liska  <mliska@suse.cz>\n+\n+        PR tree-optimization/86263\n+\t* tree-switch-conversion.c (switch_decision_tree::try_switch_expansion):\n+        Make edge redirection.\n+\n 2018-06-29  David Malcolm  <dmalcolm@redhat.com>\n \n \t* dumpfile.c (dump_loc): Add indentation based on scope depth."}, {"sha": "a9f7fd96662c1adc0041308babc2c8f92222ff64", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f10efd4ee4d62d2d7a94e518a3873687399879e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f10efd4ee4d62d2d7a94e518a3873687399879e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3f10efd4ee4d62d2d7a94e518a3873687399879e", "patch": "@@ -1,3 +1,8 @@\n+2018-06-29  Martin Liska  <mliska@suse.cz>\n+\n+        PR tree-optimization/86263\n+\t* gcc.dg/tree-ssa/pr86263.c: New test.\n+\n 2018-06-28  Carl Love  <cel@us.ibm.com>\n \n \t* gcc.target/p9-extract-1.c: Add test case."}, {"sha": "7f80c22e67be86bcb7b16585abc0495b3c91aee7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr86263.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f10efd4ee4d62d2d7a94e518a3873687399879e/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr86263.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f10efd4ee4d62d2d7a94e518a3873687399879e/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr86263.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr86263.c?ref=3f10efd4ee4d62d2d7a94e518a3873687399879e", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do compile } */\n+\n+void f1 (void *);\n+void f2 (void *);\n+void f3 (void *);\n+void f4 (void *);\n+\n+char\n+_dcvt (void *ptr, char type, int opt, int val)\n+{\n+  switch (type)\n+    {\n+    case 'f':\n+      f4 (ptr);\n+    case 'F':\n+      f1 (ptr);\n+      break;\n+    case 'g':\n+    case 'G':\n+      if (opt == 0)\n+\topt = 1;\n+      f2 (ptr);\n+      break;\n+    case 'e':\n+    case 'E':\n+      f3 (ptr);\n+    }\n+  return val;\n+}"}, {"sha": "4c9e7b9436bf24f97cc8a275f6a5a69776bc12b1", "filename": "gcc/tree-switch-conversion.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f10efd4ee4d62d2d7a94e518a3873687399879e/gcc%2Ftree-switch-conversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f10efd4ee4d62d2d7a94e518a3873687399879e/gcc%2Ftree-switch-conversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.c?ref=3f10efd4ee4d62d2d7a94e518a3873687399879e", "patch": "@@ -1732,8 +1732,12 @@ switch_decision_tree::try_switch_expansion (vec<cluster *> &clusters)\n   /* Do not do an extra work for a single cluster.  */\n   if (clusters.length () == 1\n       && clusters[0]->get_type () != SIMPLE_CASE)\n-    clusters[0]->emit (index_expr, index_type,\n-\t\t       gimple_switch_default_label (m_switch), m_default_bb);\n+    {\n+      cluster *c = clusters[0];\n+      c->emit (index_expr, index_type,\n+\t       gimple_switch_default_label (m_switch), m_default_bb);\n+      redirect_edge_succ (single_succ_edge (bb), c->m_case_bb);\n+    }\n   else\n     {\n       emit (bb, index_expr, default_edge->probability, index_type);"}]}