{"sha": "2410819b6d8cee41d044a05f0075fb338df04930", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQxMDgxOWI2ZDhjZWU0MWQwNDRhMDVmMDA3NWZiMzM4ZGYwNDkzMA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-07-11T21:53:59Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-07-11T21:53:59Z"}, "message": "re PR c++/53159 (Missing narrowing check)\n\n/cp\n2014-07-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/53159\n\t* call.c (build_user_type_conversion_1): Copy LOOKUP_NO_NARROWING\n\tinto convflags.\n\t* decl.c (check_initializer): Don't call check_narrowing here,\n\tset LOOKUP_NO_NARROWING.\n\t* typeck2.c (digest_init_r): Likewise.\n\n/testsuite\n2014-07-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/53159\n\t* g++.dg/cpp0x/Wnarrowing1.C: New.\n\nFrom-SVN: r212469", "tree": {"sha": "adcbf8043e8e37d0c0a10e9d6dfeae133b2ae02f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adcbf8043e8e37d0c0a10e9d6dfeae133b2ae02f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2410819b6d8cee41d044a05f0075fb338df04930", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2410819b6d8cee41d044a05f0075fb338df04930", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2410819b6d8cee41d044a05f0075fb338df04930", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2410819b6d8cee41d044a05f0075fb338df04930/comments", "author": null, "committer": null, "parents": [{"sha": "54c61de798fe4654a15c830adc140e32b4c2da74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54c61de798fe4654a15c830adc140e32b4c2da74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54c61de798fe4654a15c830adc140e32b4c2da74"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "05c9615ee7e14fe58a81aeb0578a9d86f36751ae", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2410819b6d8cee41d044a05f0075fb338df04930/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2410819b6d8cee41d044a05f0075fb338df04930/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2410819b6d8cee41d044a05f0075fb338df04930", "patch": "@@ -1,3 +1,12 @@\n+2014-07-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/53159\n+\t* call.c (build_user_type_conversion_1): Copy LOOKUP_NO_NARROWING\n+\tinto convflags.\n+\t* decl.c (check_initializer): Don't call check_narrowing here,\n+\tset LOOKUP_NO_NARROWING.\n+\t* typeck2.c (digest_init_r): Likewise.\n+\n 2014-07-10  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/61661"}, {"sha": "46e51864a29b9b07a0dd5a6b92e05b373cc01bcb", "filename": "gcc/cp/call.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2410819b6d8cee41d044a05f0075fb338df04930/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2410819b6d8cee41d044a05f0075fb338df04930/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=2410819b6d8cee41d044a05f0075fb338df04930", "patch": "@@ -3586,7 +3586,8 @@ build_user_type_conversion_1 (tree totype, tree expr, int flags,\n \n   /* It's OK to bind a temporary for converting constructor arguments, but\n      not in converting the return value of a conversion operator.  */\n-  convflags = ((flags & LOOKUP_NO_TEMP_BIND) | LOOKUP_NO_CONVERSION);\n+  convflags = ((flags & LOOKUP_NO_TEMP_BIND) | LOOKUP_NO_CONVERSION\n+\t       | (flags & LOOKUP_NO_NARROWING));\n   flags &= ~LOOKUP_NO_TEMP_BIND;\n \n   if (ctors)"}, {"sha": "dae85c2d584e2c63e5f9bd08107219194b70482d", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2410819b6d8cee41d044a05f0075fb338df04930/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2410819b6d8cee41d044a05f0075fb338df04930/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=2410819b6d8cee41d044a05f0075fb338df04930", "patch": "@@ -5756,8 +5756,7 @@ check_initializer (tree decl, tree init, int flags, vec<tree, va_gc> **cleanups)\n \t  else\n \t    {\n \t      init = reshape_init (type, init, tf_warning_or_error);\n-\t      if (SCALAR_TYPE_P (type))\n-\t\tcheck_narrowing (type, init);\n+\t      flags |= LOOKUP_NO_NARROWING;\n \t    }\n \t}\n       else if (TREE_CODE (init) == TREE_LIST"}, {"sha": "59a47605d6ca04a1dabfaab86d3acb399c5f344b", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2410819b6d8cee41d044a05f0075fb338df04930/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2410819b6d8cee41d044a05f0075fb338df04930/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=2410819b6d8cee41d044a05f0075fb338df04930", "patch": "@@ -1027,7 +1027,7 @@ digest_init_r (tree type, tree init, bool nested, int flags,\n       tree *exp;\n \n       if (nested)\n-\tcheck_narrowing (type, init);\n+\tflags |= LOOKUP_NO_NARROWING;\n       init = convert_for_initialization (0, type, init, flags,\n \t\t\t\t\t ICR_INIT, NULL_TREE, 0,\n \t\t\t\t\t complain);"}, {"sha": "3b676bea446be8cf3e406b4ea02a8f9b1cb570ce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2410819b6d8cee41d044a05f0075fb338df04930/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2410819b6d8cee41d044a05f0075fb338df04930/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2410819b6d8cee41d044a05f0075fb338df04930", "patch": "@@ -1,3 +1,8 @@\n+2014-07-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/53159\n+\t* g++.dg/cpp0x/Wnarrowing1.C: New.\n+\n 2014-07-11  Andreas Schwab  <schwab@linux-m68k.org>\n \n \tPR preprocessor/61389"}, {"sha": "634c4c377d0b0ad81c5dd57e7351358fe2ec7f68", "filename": "gcc/testsuite/g++.dg/cpp0x/Wnarrowing1.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2410819b6d8cee41d044a05f0075fb338df04930/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWnarrowing1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2410819b6d8cee41d044a05f0075fb338df04930/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWnarrowing1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2FWnarrowing1.C?ref=2410819b6d8cee41d044a05f0075fb338df04930", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/53159\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-Wnarrowing -Wno-overflow\" }\n+\n+struct X\n+{\n+  constexpr operator int() { return __INT_MAX__; }\n+};\n+\n+int f() { return __INT_MAX__; }\n+\n+signed char a { __INT_MAX__ };     // { dg-warning \"narrowing conversion\" }\n+signed char b { f() };             // { dg-warning \"narrowing conversion\" }\n+signed char c { X{} };             // { dg-warning \"narrowing conversion\" }\n+\n+signed char ar[] { __INT_MAX__ };  // { dg-warning \"narrowing conversion\" }\n+signed char br[] { f() };          // { dg-warning \"narrowing conversion\" }\n+signed char cr[] { X{} };          // { dg-warning \"narrowing conversion\" }"}]}