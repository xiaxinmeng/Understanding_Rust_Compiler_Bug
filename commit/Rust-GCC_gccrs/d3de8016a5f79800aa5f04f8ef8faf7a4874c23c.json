{"sha": "d3de8016a5f79800aa5f04f8ef8faf7a4874c23c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNkZTgwMTZhNWY3OTgwMGFhNWYwNGY4ZWY4ZmFmN2E0ODc0YzIzYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-08-05T19:15:25Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-08-05T19:15:25Z"}, "message": "re PR c++/47453 ([DR 1214] Various non-conforming behaviors with braced-init-list initialization)\n\n\tPR c++/47453\n\t* typeck.c (build_x_compound_expr_from_list): Also complain\n\tabout ({...}).\n\nFrom-SVN: r177480", "tree": {"sha": "d1fa48e7dea3e1964b28499d0acaf10eb15e755c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1fa48e7dea3e1964b28499d0acaf10eb15e755c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3de8016a5f79800aa5f04f8ef8faf7a4874c23c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3de8016a5f79800aa5f04f8ef8faf7a4874c23c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3de8016a5f79800aa5f04f8ef8faf7a4874c23c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3de8016a5f79800aa5f04f8ef8faf7a4874c23c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9127e99420ca8f238f15c06fe7f9089e38ed862d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9127e99420ca8f238f15c06fe7f9089e38ed862d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9127e99420ca8f238f15c06fe7f9089e38ed862d"}], "stats": {"total": 60, "additions": 57, "deletions": 3}, "files": [{"sha": "ea66fa1dbcee07a9868accf2c8d9cae5e37499cb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3de8016a5f79800aa5f04f8ef8faf7a4874c23c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3de8016a5f79800aa5f04f8ef8faf7a4874c23c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d3de8016a5f79800aa5f04f8ef8faf7a4874c23c", "patch": "@@ -1,5 +1,9 @@\n 2011-08-05  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/47453\n+\t* typeck.c (build_x_compound_expr_from_list): Also complain\n+\tabout ({...}).\n+\n \tPR c++/49812\n \t* typeck.c (cp_build_unary_op) [POSTINCREMENT_EXPR]: Strip cv-quals.\n "}, {"sha": "a1f67613adcaaeba8bc77fa972c8e1118c08731d", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3de8016a5f79800aa5f04f8ef8faf7a4874c23c/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3de8016a5f79800aa5f04f8ef8faf7a4874c23c/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=d3de8016a5f79800aa5f04f8ef8faf7a4874c23c", "patch": "@@ -5470,6 +5470,16 @@ build_x_compound_expr_from_list (tree list, expr_list_kind exp,\n {\n   tree expr = TREE_VALUE (list);\n \n+  if (BRACE_ENCLOSED_INITIALIZER_P (expr)\n+      && !CONSTRUCTOR_IS_DIRECT_INIT (expr))\n+    {\n+      if (complain & tf_error)\n+\tpedwarn (EXPR_LOC_OR_HERE (expr), 0, \"list-initializer for \"\n+\t\t \"non-class type must not be parenthesized\");\n+      else\n+\treturn error_mark_node;\n+    }\n+\n   if (TREE_CHAIN (list))\n     {\n       if (complain & tf_error)"}, {"sha": "dfa765f7050c172319d81af75cbb555cd1c39e85", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3de8016a5f79800aa5f04f8ef8faf7a4874c23c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3de8016a5f79800aa5f04f8ef8faf7a4874c23c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d3de8016a5f79800aa5f04f8ef8faf7a4874c23c", "patch": "@@ -1,5 +1,8 @@\n 2011-08-05  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/47453\n+\t* g++.dg/cpp0x/initlist56.C: New.\n+\n \tPR c++/49812\n \t* g++.dg/overload/rvalue2.C: New.\n "}, {"sha": "bc5ee2c3aecfd0fee3a5521bb5e9f0dc4fe15acb", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist13.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3de8016a5f79800aa5f04f8ef8faf7a4874c23c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3de8016a5f79800aa5f04f8ef8faf7a4874c23c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist13.C?ref=d3de8016a5f79800aa5f04f8ef8faf7a4874c23c", "patch": "@@ -4,5 +4,5 @@\n \n #include <complex>\n \n-__complex__ int i ({0});\n-std::complex<int> i2 ({0});\n+__complex__ int i {0};\n+std::complex<int> i2 {0};"}, {"sha": "5cb23e2db3e3038d8f898287c75b76d05900fb3a", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist50.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3de8016a5f79800aa5f04f8ef8faf7a4874c23c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist50.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3de8016a5f79800aa5f04f8ef8faf7a4874c23c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist50.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist50.C?ref=d3de8016a5f79800aa5f04f8ef8faf7a4874c23c", "patch": "@@ -8,7 +8,7 @@ struct A2 {\n \n template <class T> struct B {\n   T ar[1];\n-  B(T t):ar({t}) {}\n+  B(T t):ar{t} {}\n };\n \n int main(){"}, {"sha": "862b41bb3c8c9d21db84e39a3f6e3a8a3f237a60", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist56.C", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3de8016a5f79800aa5f04f8ef8faf7a4874c23c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist56.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3de8016a5f79800aa5f04f8ef8faf7a4874c23c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist56.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist56.C?ref=d3de8016a5f79800aa5f04f8ef8faf7a4874c23c", "patch": "@@ -0,0 +1,37 @@\n+// PR c++/47453\n+// { dg-options \"-std=c++0x -pedantic-errors\" }\n+\n+// invalid\n+int a({0});\t\t\t// { dg-error \"\" }\n+\n+// invalid\n+int const &b({0});\t\t// { dg-error \"\" }\n+\n+// invalid\n+struct A1 { int a[2]; A1(); };\n+A1::A1():a({1, 2}) { }\t\t// { dg-error \"\" }\n+\n+struct A { explicit A(int, int); A(int, long); };\n+\n+// invalid\n+A c({1, 2});\t\t\t// { dg-error \"\" }\n+\n+// valid (by copy constructor).\n+A d({1, 2L});\n+\n+// valid\n+A e{1, 2};\n+\n+#include <initializer_list>\n+\n+struct B {\n+  template<typename ...T>\n+  B(std::initializer_list<int>, T ...);\n+};\n+\n+// invalid (the first phase only considers init-list ctors)\n+// (for the second phase, no constructor is viable)\n+B f{1, 2, 3};\t\t\t// { dg-error \"\" }\n+\n+// valid (T deduced to <>).\n+B g({1, 2, 3});"}]}