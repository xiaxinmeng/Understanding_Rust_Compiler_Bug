{"sha": "43661dc4d17b689c102de15fea2f3611998cfb88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM2NjFkYzRkMTdiNjg5YzEwMmRlMTVmZWEyZjM2MTE5OThjZmI4OA==", "commit": {"author": {"name": "Terry Guo", "email": "terry.guo@arm.com", "date": "2012-05-09T11:38:47Z"}, "committer": {"name": "Xuepeng Guo", "email": "xguo@gcc.gnu.org", "date": "2012-05-09T11:38:47Z"}, "message": "Makefile.in (s-mlib): Add new argument MULTILIB_REQUIRED.\n\n        * Makefile.in (s-mlib): Add new argument MULTILIB_REQUIRED.\n        * genmultilib (MULTILIB_REQUIRED): New.\n        * doc/fragments.texi: Document the MULTILIB_REQUIRED.\n\nFrom-SVN: r187325", "tree": {"sha": "3ec1335b8f6ac6a83d76f34c9914dbf08e52b5f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ec1335b8f6ac6a83d76f34c9914dbf08e52b5f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43661dc4d17b689c102de15fea2f3611998cfb88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43661dc4d17b689c102de15fea2f3611998cfb88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43661dc4d17b689c102de15fea2f3611998cfb88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43661dc4d17b689c102de15fea2f3611998cfb88/comments", "author": null, "committer": null, "parents": [{"sha": "368117e868b67d8e7daa2b3a2d27249bdf2e207f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/368117e868b67d8e7daa2b3a2d27249bdf2e207f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/368117e868b67d8e7daa2b3a2d27249bdf2e207f"}], "stats": {"total": 75, "additions": 72, "deletions": 3}, "files": [{"sha": "7a403254a6e5c8f260ae9248fd5e5f5f637858ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43661dc4d17b689c102de15fea2f3611998cfb88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43661dc4d17b689c102de15fea2f3611998cfb88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43661dc4d17b689c102de15fea2f3611998cfb88", "patch": "@@ -1,3 +1,9 @@\n+2012-05-09  Terry Guo  <terry.guo@arm.com>\n+\n+\t* Makefile.in (s-mlib): Add new argument MULTILIB_REQUIRED.\n+\t* genmultilib (MULTILIB_REQUIRED): New.\n+\t* doc/fragments.texi: Document the MULTILIB_REQUIRED.\n+\n 2012-05-09  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-vectorizer.h (vect_loop_versioning): Adjust prototype."}, {"sha": "716823b2850d6e06d601286f7b743ec8f3191908", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43661dc4d17b689c102de15fea2f3611998cfb88/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43661dc4d17b689c102de15fea2f3611998cfb88/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=43661dc4d17b689c102de15fea2f3611998cfb88", "patch": "@@ -1831,10 +1831,11 @@ s-mlib: $(srcdir)/genmultilib Makefile\n \t    \"$(MULTILIB_EXTRA_OPTS)\" \\\n \t    \"$(MULTILIB_EXCLUSIONS)\" \\\n \t    \"$(MULTILIB_OSDIRNAMES)\" \\\n+\t    \"$(MULTILIB_REQUIRED)\" \\\n \t    \"@enable_multilib@\" \\\n \t    > tmp-mlib.h; \\\n \telse \\\n-\t  $(SHELL) $(srcdir)/genmultilib '' '' '' '' '' '' '' no \\\n+\t  $(SHELL) $(srcdir)/genmultilib '' '' '' '' '' '' '' '' no\\\n \t    > tmp-mlib.h; \\\n \tfi\n \t$(SHELL) $(srcdir)/../move-if-change tmp-mlib.h multilib.h"}, {"sha": "b184cc036ff6b926c28e25eb722ff4b1c44866e3", "filename": "gcc/doc/fragments.texi", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43661dc4d17b689c102de15fea2f3611998cfb88/gcc%2Fdoc%2Ffragments.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43661dc4d17b689c102de15fea2f3611998cfb88/gcc%2Fdoc%2Ffragments.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ffragments.texi?ref=43661dc4d17b689c102de15fea2f3611998cfb88", "patch": "@@ -121,6 +121,29 @@ options enabled.  Therefore @code{MULTILIB_EXCEPTIONS} is set to:\n *mthumb/*mhard-float*\n @end smallexample\n \n+@findex MULTILIB_REQUIRED\n+@item MULTILIB_REQUIRED\n+Sometimes when there are only a few combinations are required, it would\n+be a big effort to come up with a @code{MULTILIB_EXCEPTIONS} list to\n+cover all undesired ones.  In such a case, just listing all the required\n+combinations in @code{MULTILIB_REQUIRED} would be more straightforward.\n+\n+The way to specify the entries in @code{MULTILIB_REQUIRED} is same with\n+the way used for @code{MULTILIB_EXCEPTIONS}, only this time what are\n+required will be specified.  Suppose there are multiple sets of\n+@code{MULTILIB_OPTIONS} and only two combinations are required, one\n+for ARMv7-M and one for ARMv7-R with hard floating-point ABI and FPU, the\n+@code{MULTILIB_REQUIRED} can be set to:\n+@smallexample\n+@code{MULTILIB_REQUIRED} =  mthumb/march=armv7-m\n+@code{MULTILIB_REQUIRED} += march=armv7-r/mfloat-abi=hard/mfpu=vfpv3-d16\n+@end smallexample\n+\n+The @code{MULTILIB_REQUIRED} can be used together with\n+@code{MULTILIB_EXCEPTIONS}.  The option combinations generated from\n+@code{MULTILIB_OPTIONS} will be filtered by @code{MULTILIB_EXCEPTIONS}\n+and then by @code{MULTILIB_REQUIRED}.\n+\n @findex MULTILIB_EXTRA_OPTS\n @item MULTILIB_EXTRA_OPTS\n Sometimes it is desirable that when building multiple versions of"}, {"sha": "02fc2768d456d50573db0a351fdcd3e10efc1a51", "filename": "gcc/genmultilib", "status": "modified", "additions": 41, "deletions": 2, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43661dc4d17b689c102de15fea2f3611998cfb88/gcc%2Fgenmultilib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43661dc4d17b689c102de15fea2f3611998cfb88/gcc%2Fgenmultilib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmultilib?ref=43661dc4d17b689c102de15fea2f3611998cfb88", "patch": "@@ -73,6 +73,17 @@\n # the os directory names are used exclusively.  Use the mapping when\n # there is no one-to-one equivalence between GCC levels and the OS.\n \n+# The optional eighth argument which intends to reduce the effort to write\n+# so many MULTILIB_EXCEPTIONS rules. This option defines a series of option\n+# combinations that we actually required.\n+# For some cases, the generated option combinations are far more than what\n+# we need, we have to write a lot of rules to screen out combinations we\n+# don't need. If we missed some rules, the unexpected libraries will be built.\n+# Now with this argument, one can simply give what combinations are needed.\n+# It is pretty straigtforward.\n+# This argument can be used together with MULTILIB_EXCEPTIONS and will take\n+# effect after the MULTILIB_EXCEPTIONS.\n+\n # The last option should be \"yes\" if multilibs are enabled.  If it is not\n # \"yes\", all GCC multilib dir names will be \".\".\n \n@@ -93,7 +104,7 @@\n #   genmultilib 'm64/m32 mno-app-regs|mcmodel=medany' '64 32 alt'\n #\t\t'mcmodel?medany=mcmodel?medmid' 'm32/mno-app-regs* m32/mcmodel=*'\n #\t\t'' 'm32/!m64/mno-app-regs m32/!m64/mcmodel=medany'\n-#\t\t'../lib64 ../lib32 alt' yes\n+#\t\t'../lib64 ../lib32 alt' '' yes\n # This produces:\n #   \". !m64 !m32 !mno-app-regs !mcmodel=medany;\",\n #   \"64:../lib64 m64 !m32 !mno-app-regs !mcmodel=medany;\",\n@@ -121,7 +132,8 @@ exceptions=$4\n extra=$5\n exclusions=$6\n osdirnames=$7\n-enable_multilib=$8\n+multilib_required=$8\n+enable_multilib=$9\n \n echo \"static const char *const multilib_raw[] = {\"\n \n@@ -195,6 +207,33 @@ EOF\n   combinations=`./tmpmultilib2 ${combinations}`\n fi\n \n+# If the MULTILIB_REQUIRED list are provided,\n+# filter out combinations not in this list.\n+if [ -n \"${multilib_required}\" ]; then\n+  cat >tmpmultilib2 <<\\EOF\n+#!/bin/sh\n+# This recursive script weeds out any combination of multilib\n+# switches that not in the expected list.\n+\n+  for opt in $@; do\n+    case \"$opt\" in\n+EOF\n+\n+  for expect in ${multilib_required}; do\n+    echo \"      /${expect}/) echo \\${opt};;\" >> tmpmultilib2\n+  done\n+\n+cat >>tmpmultilib2 <<\\EOF\n+      *) ;;\n+    esac\n+  done\n+EOF\n+\n+   chmod +x tmpmultilib2\n+   combinations=`./tmpmultilib2 ${combinations}`\n+\n+fi\n+\n # Construct a sed pattern which will convert option names to directory\n # names.\n todirnames="}]}