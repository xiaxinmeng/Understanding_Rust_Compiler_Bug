{"sha": "ad3a922478a130ba1c684ed4adf9d35cf9c52d5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQzYTkyMjQ3OGExMzBiYTFjNjg0ZWQ0YWRmOWQzNWNmOWM1MmQ1ZA==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-07-21T06:07:22Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-07-21T06:07:22Z"}, "message": "(stmp-multilib): Rework to handle make -n.\n\n(stmp-multilib-sub): New target.\n\nFrom-SVN: r7785", "tree": {"sha": "5479e71bbeffdec26de478ed70bd39a1e22b6381", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5479e71bbeffdec26de478ed70bd39a1e22b6381"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad3a922478a130ba1c684ed4adf9d35cf9c52d5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad3a922478a130ba1c684ed4adf9d35cf9c52d5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad3a922478a130ba1c684ed4adf9d35cf9c52d5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad3a922478a130ba1c684ed4adf9d35cf9c52d5d/comments", "author": null, "committer": null, "parents": [{"sha": "75ed5d8b3ae7eda29aeff8c853c616868d3e9f0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ed5d8b3ae7eda29aeff8c853c616868d3e9f0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75ed5d8b3ae7eda29aeff8c853c616868d3e9f0c"}], "stats": {"total": 61, "additions": 36, "deletions": 25}, "files": [{"sha": "2e3326079de2ea742d3b86286dc334668d0950a7", "filename": "gcc/Makefile.in", "status": "modified", "additions": 36, "deletions": 25, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad3a922478a130ba1c684ed4adf9d35cf9c52d5d/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad3a922478a130ba1c684ed4adf9d35cf9c52d5d/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=ad3a922478a130ba1c684ed4adf9d35cf9c52d5d", "patch": "@@ -858,37 +858,48 @@ stmp-multilib: $(LIBGCC1) libgcc2.c libgcc2.ready $(CONFIG_H) \\\n \tfor i in `$(GCC_FOR_TARGET) --print-multi-lib`; do \\\n \t  dir=`echo $$i | sed -e 's/;.*$$//'`; \\\n \t  flags=`echo $$i | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`; \\\n-\t  rm -f $${dir}/libgcc.a $(LIBGCC2); \\\n \t  $(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n \t    AR=\"$(AR)\" AR_FLAGS=\"$(AR_FLAGS)\" \\\n+\t    RANLIB=\"$(RANLIB)\" RANLIB_TEST=\"$(RANLIB_TEST)\" \\\n \t    HOST_PREFIX=\"$(HOST_PREFIX)\" HOST_PREFIX_1=\"$(HOST_PREFIX_1)\" \\\n-\t    LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS) $${flags}\" $(LIBGCC2); \\\n-\t  if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n-\t  if [ x$(LIBGCC1) != xlibgcc1-asm.a ]; \\\n-\t  then true; \\\n-\t  else (rm -f $(LIBGCC1); \\\n-\t\t$(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n-\t    \t  AR=\"$(AR)\" AR_FLAGS=\"$(AR_FLAGS)\" \\\n-\t\t  HOST_PREFIX=\"$(HOST_PREFIX)\" \\\n-\t\t  HOST_PREFIX_1=\"$(HOST_PREFIX_1)\" \\\n-\t    \t  LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS) $${flags}\" $(LIBGCC1) ) \\\n-\t  fi; \\\n-\t  if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n-\t  rm -rf tmpcopy; \\\n-\t  mkdir tmpcopy; \\\n-\t  if [ x$(LIBGCC1) != x ]; \\\n-\t  then (cd tmpcopy; $(AR) x ../$(LIBGCC1)); \\\n-\t  else true; \\\n-\t  fi; \\\n-\t  (cd tmpcopy; $(AR) x ../$(LIBGCC2)); \\\n-\t  (cd tmpcopy; $(AR) $(AR_FLAGS) ../tmplibgcc.a *.o); \\\n-\t  rm -rf libgcc2.a tmpcopy; \\\n-\t  if $(RANLIB_TEST) ; then $(RANLIB) tmplibgcc.a; else true; fi; \\\n-\t  if [ -d $${dir} ]; then true; else mkdir $${dir}; fi; \\\n-\t  mv tmplibgcc.a $${dir}/libgcc.a; \\\n+\t    LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS) $${flags}\" \\\n+\t    LIBGCC1=\"$(LIBGCC1)\" LIBGCC2=\"$(LIBGCC2)\" \\\n+\t    dir=\"$${dir}\" stmp-multilib-sub; \\\n \tdone\n \ttouch stmp-multilib\n \n+# Subroutine of stmp-multilib so make -n works.\n+stmp-multilib-sub:\n+\trm -f $(dir)/libgcc.a $(LIBGCC2)\n+\t$(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n+\t  AR=\"$(AR)\" AR_FLAGS=\"$(AR_FLAGS)\" \\\n+\t  HOST_PREFIX=\"$(HOST_PREFIX)\" HOST_PREFIX_1=\"$(HOST_PREFIX_1)\" \\\n+\t  LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS)\" $(LIBGCC2)\n+\tif [ x$(LIBGCC1) != xlibgcc1-asm.a ]; \\\n+\tthen true; \\\n+\telse rm -f $(LIBGCC1); \\\n+\tfi\n+\tif [ x$(LIBGCC1) != xlibgcc1-asm.a ]; \\\n+\tthen true; \\\n+\telse \\\n+\t  $(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n+\t    AR=\"$(AR)\" AR_FLAGS=\"$(AR_FLAGS)\" \\\n+\t    HOST_PREFIX=\"$(HOST_PREFIX)\" HOST_PREFIX_1=\"$(HOST_PREFIX_1)\" \\\n+\t    LIBGCC2_CFLAGS=\"$(LIBGCC2_CFLAGS)\" $(LIBGCC1); \\\n+\tfi\n+\trm -rf tmplibgcc.a tmpcopy\n+\tmkdir tmpcopy\n+\tif [ x$(LIBGCC1) != x ]; \\\n+\tthen (cd tmpcopy; $(AR) x ../$(LIBGCC1)); \\\n+\telse true; \\\n+\tfi\n+\t(cd tmpcopy; $(AR) x ../$(LIBGCC2))\n+\t(cd tmpcopy; $(AR) $(AR_FLAGS) ../tmplibgcc.a *.o)\n+\trm -rf libgcc2.a tmpcopy\n+\tif $(RANLIB_TEST) ; then $(RANLIB) tmplibgcc.a; else true; fi\n+\tif [ -d $(dir) ]; then true; else mkdir $(dir); fi\n+\tmv tmplibgcc.a $(dir)/libgcc.a\n+\n objc-runtime: libobjc.a\n \n # Build the Objective C runtime library."}]}