{"sha": "41b083c42ebb10185b1155afbaa4bb09c7bb435a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFiMDgzYzQyZWJiMTAxODViMTE1NWFmYmFhNGJiMDljN2JiNDM1YQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1998-07-07T13:26:49Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1998-07-07T13:26:49Z"}, "message": "expr.c (emit_queue): If emitting a SEQUENCE, set QUEUED_INSN to the first insn of the sequence.\n\n\t* expr.c (emit_queue): If emitting a SEQUENCE, set QUEUED_INSN\n\tto the first insn of the sequence.\n\nFrom-SVN: r20997", "tree": {"sha": "c404f9df73ea6755a59c562302553f7b13e58de8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c404f9df73ea6755a59c562302553f7b13e58de8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41b083c42ebb10185b1155afbaa4bb09c7bb435a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41b083c42ebb10185b1155afbaa4bb09c7bb435a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41b083c42ebb10185b1155afbaa4bb09c7bb435a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41b083c42ebb10185b1155afbaa4bb09c7bb435a/comments", "author": null, "committer": null, "parents": [{"sha": "759bd8b73bcd7a978d63e9193f30cd6c6bdd0b74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/759bd8b73bcd7a978d63e9193f30cd6c6bdd0b74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/759bd8b73bcd7a978d63e9193f30cd6c6bdd0b74"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "04cd1d8dd65c6313a82203acff4bd480ea862571", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b083c42ebb10185b1155afbaa4bb09c7bb435a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b083c42ebb10185b1155afbaa4bb09c7bb435a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=41b083c42ebb10185b1155afbaa4bb09c7bb435a", "patch": "@@ -1,3 +1,8 @@\n+Tue Jul  7 21:23:36 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* expr.c (emit_queue): If emitting a SEQUENCE, set QUEUED_INSN\n+\tto the first insn of the sequence.\n+\n Tue Jul  7 21:05:25 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* cse (cse_insn): Don't make change without validation."}, {"sha": "b9c0e1812443daf54421d3d35a2c53eab2975b02", "filename": "gcc/expr.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b083c42ebb10185b1155afbaa4bb09c7bb435a/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b083c42ebb10185b1155afbaa4bb09c7bb435a/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=41b083c42ebb10185b1155afbaa4bb09c7bb435a", "patch": "@@ -522,7 +522,15 @@ emit_queue ()\n   register rtx p;\n   while ((p = pending_chain))\n     {\n-      QUEUED_INSN (p) = emit_insn (QUEUED_BODY (p));\n+      rtx body = QUEUED_BODY (p);\n+\n+      if (GET_CODE (body) == SEQUENCE)\n+\t{\n+\t  QUEUED_INSN (p) = XVECEXP (QUEUED_BODY (p), 0, 0);\n+\t  emit_insn (QUEUED_BODY (p));\n+\t}\n+      else\n+\tQUEUED_INSN (p) = emit_insn (QUEUED_BODY (p));\n       pending_chain = QUEUED_NEXT (p);\n     }\n }"}, {"sha": "a53a036a15a34bad0f9da66d86ca46c5aae86a0a", "filename": "gcc/expr.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b083c42ebb10185b1155afbaa4bb09c7bb435a/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b083c42ebb10185b1155afbaa4bb09c7bb435a/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=41b083c42ebb10185b1155afbaa4bb09c7bb435a", "patch": "@@ -30,7 +30,8 @@ Boston, MA 02111-1307, USA.  */\n /* The variable for which an increment is queued.  */\n #define QUEUED_VAR(P) XEXP (P, 0)\n /* If the increment has been emitted, this is the insn\n-   that does the increment.  It is zero before the increment is emitted.  */\n+   that does the increment.  It is zero before the increment is emitted.\n+   If more than one insn is emitted, this is the first insn.  */\n #define QUEUED_INSN(P) XEXP (P, 1)\n /* If a pre-increment copy has been generated, this is the copy\n    (it is a temporary reg).  Zero if no copy made yet.  */"}]}