{"sha": "e6ca6782acfa8b126c6abb6bcd9026572217525d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZjYTY3ODJhY2ZhOGIxMjZjNmFiYjZiY2Q5MDI2NTcyMjE3NTI1ZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-05-28T07:23:54Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-05-28T07:23:54Z"}, "message": "utils.c (gnat_internal_attribute_table): Add support for stack_protect attribute.\n\n\t* gcc-interface/utils.c (gnat_internal_attribute_table): Add support\n\tfor stack_protect attribute.\n\t(handle_stack_protect_attribute): New static function.\n\nFrom-SVN: r271680", "tree": {"sha": "39350ea31fe3ddef3e71cd7cadf53f99b4f0a2b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39350ea31fe3ddef3e71cd7cadf53f99b4f0a2b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6ca6782acfa8b126c6abb6bcd9026572217525d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6ca6782acfa8b126c6abb6bcd9026572217525d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6ca6782acfa8b126c6abb6bcd9026572217525d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6ca6782acfa8b126c6abb6bcd9026572217525d/comments", "author": null, "committer": null, "parents": [{"sha": "eabf2b44483427d54be93ae7628065aa08c4a1e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eabf2b44483427d54be93ae7628065aa08c4a1e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eabf2b44483427d54be93ae7628065aa08c4a1e6"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "6acef36fbf0805975df9cd9c01302498166a7c4a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6ca6782acfa8b126c6abb6bcd9026572217525d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6ca6782acfa8b126c6abb6bcd9026572217525d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e6ca6782acfa8b126c6abb6bcd9026572217525d", "patch": "@@ -1,3 +1,9 @@\n+2019-05-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/utils.c (gnat_internal_attribute_table): Add support\n+\tfor stack_protect attribute.\n+\t(handle_stack_protect_attribute): New static function.\n+\n 2019-05-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (intrin_arglists_compatible_p): Do not return"}, {"sha": "d090d0954ac1c3cbaf7f01bcdd549309ac105475", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6ca6782acfa8b126c6abb6bcd9026572217525d/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6ca6782acfa8b126c6abb6bcd9026572217525d/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=e6ca6782acfa8b126c6abb6bcd9026572217525d", "patch": "@@ -90,6 +90,7 @@ static tree handle_novops_attribute (tree *, tree, tree, int, bool *);\n static tree handle_nonnull_attribute (tree *, tree, tree, int, bool *);\n static tree handle_sentinel_attribute (tree *, tree, tree, int, bool *);\n static tree handle_noreturn_attribute (tree *, tree, tree, int, bool *);\n+static tree handle_stack_protect_attribute (tree *, tree, tree, int, bool *);\n static tree handle_noinline_attribute (tree *, tree, tree, int, bool *);\n static tree handle_noclone_attribute (tree *, tree, tree, int, bool *);\n static tree handle_leaf_attribute (tree *, tree, tree, int, bool *);\n@@ -123,6 +124,8 @@ const struct attribute_spec gnat_internal_attribute_table[] =\n     handle_sentinel_attribute, NULL },\n   { \"noreturn\",     0, 0,  true,  false, false, false,\n     handle_noreturn_attribute, NULL },\n+  { \"stack_protect\",0, 0, true,  false, false, false,\n+    handle_stack_protect_attribute, NULL },\n   { \"noinline\",     0, 0,  true,  false, false, false,\n     handle_noinline_attribute, NULL },\n   { \"noclone\",      0, 0,  true,  false, false, false,\n@@ -6357,6 +6360,22 @@ handle_noinline_attribute (tree *node, tree name,\n   return NULL_TREE;\n }\n \n+/* Handle a \"stack_protect\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+static tree\n+handle_stack_protect_attribute (tree *node, tree name, tree, int,\n+\t\t\t\tbool *no_add_attrs)\n+{\n+  if (TREE_CODE (*node) != FUNCTION_DECL)\n+    {\n+      warning (OPT_Wattributes, \"%qE attribute ignored\", name);\n+      *no_add_attrs = true;\n+    }\n+\n+  return NULL_TREE;\n+}\n+\n /* Handle a \"noclone\" attribute; arguments as in\n    struct attribute_spec.handler.  */\n "}]}