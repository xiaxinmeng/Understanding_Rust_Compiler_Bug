{"sha": "334a295fafdf5e66c4c976874282aea959830eb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM0YTI5NWZhZmRmNWU2NmM0Yzk3Njg3NDI4MmFlYTk1OTgzMGViNg==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-01-06T19:40:45Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-01-06T19:58:10Z"}, "message": "testsuite, coroutines : Fix a bad testcase [PR96504].\n\nWhere possible (i.e. where that doesn't alter the intent of a test) we\nuse a suspend_always as the final suspend and a test that the coroutine\nwas 'done' to check that the state machine had terminated correctly.\n\nSometimes, filed PRs have 'suspend_never' as the final suspend expression\nand that needs to be changed to match the testsuite style.  This is one\nI missed and means that the call to 'done()' on the handle is made to an\nalready-destructed coroutine.  Surprisngly, thAt  didn't actually trigger\na failure until glibc 2-32.\n\nFixed by changing the final suspend to be 'suspend_always'.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/96504\n\t* g++.dg/coroutines/torture/pr95519-05-gro.C: Use suspend_always\n\tas the final suspend point so that we can check that the state\n\tmachine has reached the expected point.", "tree": {"sha": "32525034f548abb9819846c49a09e77632166a9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32525034f548abb9819846c49a09e77632166a9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/334a295fafdf5e66c4c976874282aea959830eb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/334a295fafdf5e66c4c976874282aea959830eb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/334a295fafdf5e66c4c976874282aea959830eb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/334a295fafdf5e66c4c976874282aea959830eb6/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b6f1e8f97fe0d435d334075821149dbd85c8266", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b6f1e8f97fe0d435d334075821149dbd85c8266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b6f1e8f97fe0d435d334075821149dbd85c8266"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2e7218371bc077e0168c82755e33d6867069a61d", "filename": "gcc/testsuite/g++.dg/coroutines/torture/pr95519-05-gro.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/334a295fafdf5e66c4c976874282aea959830eb6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fpr95519-05-gro.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/334a295fafdf5e66c4c976874282aea959830eb6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fpr95519-05-gro.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Ftorture%2Fpr95519-05-gro.C?ref=334a295fafdf5e66c4c976874282aea959830eb6", "patch": "@@ -5,7 +5,7 @@\n struct pt_b\n {\n   std::suspend_always initial_suspend() const noexcept { return {}; }\n-  std::suspend_never final_suspend() const noexcept { return {}; }\n+  std::suspend_always final_suspend() const noexcept { return {}; }\n   constexpr void return_void () noexcept {};\n   constexpr void unhandled_exception() const noexcept {}\n };"}]}