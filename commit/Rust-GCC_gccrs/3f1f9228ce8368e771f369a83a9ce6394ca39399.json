{"sha": "3f1f9228ce8368e771f369a83a9ce6394ca39399", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YxZjkyMjhjZTgzNjhlNzcxZjM2OWE4M2E5Y2U2Mzk0Y2EzOTM5OQ==", "commit": {"author": {"name": "Denis Chertykov", "email": "denisc@overta.ru", "date": "2004-09-02T17:20:05Z"}, "committer": {"name": "Denis Chertykov", "email": "denisc@gcc.gnu.org", "date": "2004-09-02T17:20:05Z"}, "message": "re PR target/16884 ([fweb related] bug while initialising variables)\n\n\tPR target/16884\n\t* config/avr/avr.md (\"movmemhi\"): Substitute match_dup to\n\tmatch_scratch.\n\t(*movmemqi_insn): Likewise.\n\t(*movmemhi): Likewise.\n\t(clrmemhi): Likewise.\n\t(*clrmemqi): Likewise.\n\t(*clrmemhi): Likewise.\n\nFrom-SVN: r86970", "tree": {"sha": "51b3826b3898444786b2886651fff67acae59556", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51b3826b3898444786b2886651fff67acae59556"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f1f9228ce8368e771f369a83a9ce6394ca39399", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f1f9228ce8368e771f369a83a9ce6394ca39399", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f1f9228ce8368e771f369a83a9ce6394ca39399", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f1f9228ce8368e771f369a83a9ce6394ca39399/comments", "author": null, "committer": null, "parents": [{"sha": "c0e01ad29c7a4c1b76109a7bbd7411327d6c3bbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0e01ad29c7a4c1b76109a7bbd7411327d6c3bbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0e01ad29c7a4c1b76109a7bbd7411327d6c3bbc"}], "stats": {"total": 47, "additions": 26, "deletions": 21}, "files": [{"sha": "0d76135b82e46b7da1caa74cabae7d143fe6a1ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f1f9228ce8368e771f369a83a9ce6394ca39399/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f1f9228ce8368e771f369a83a9ce6394ca39399/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f1f9228ce8368e771f369a83a9ce6394ca39399", "patch": "@@ -1,3 +1,14 @@\n+2004-09-02  Denis Chertykov  <denisc@overta.ru>\n+\n+\tPR target/16884\n+\t* config/avr/avr.md (\"movmemhi\"): Substitute match_dup to\n+\tmatch_scratch.\n+\t(*movmemqi_insn): Likewise.\n+\t(*movmemhi): Likewise.\n+\t(clrmemhi): Likewise.\n+\t(*clrmemqi): Likewise.\n+\t(*clrmemhi): Likewise.\n+\n 2004-09-02  Paul Brook  <paul@codesourcery.com>\n \n \t* config.gcc (arm*-*-eabi* | arm*-*-symbianelf*): Set"}, {"sha": "0ab6e5f467cb7c299b3bd2cc877b7f7a4751f184", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 15, "deletions": 21, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f1f9228ce8368e771f369a83a9ce6394ca39399/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f1f9228ce8368e771f369a83a9ce6394ca39399/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=3f1f9228ce8368e771f369a83a9ce6394ca39399", "patch": "@@ -350,8 +350,8 @@\n \t\t   (match_operand:BLK 1 \"memory_operand\" \"\"))\n \t      (use (match_operand:HI 2 \"const_int_operand\" \"\"))\n \t      (use (match_operand:HI 3 \"const_int_operand\" \"\"))\n-\t      (clobber (match_dup 4))\n-\t      (clobber (match_dup 5))\n+\t      (clobber (match_scratch:HI 4 \"\"))\n+\t      (clobber (match_scratch:HI 5 \"\"))\n \t      (clobber (match_dup 6))])]\n   \"\"\n   \"{\n@@ -363,15 +363,12 @@\n     FAIL;\n   cnt8 = byte_immediate_operand (operands[2], GET_MODE (operands[2]));\n   mode = cnt8 ? QImode : HImode;\n+  operands[6] = gen_rtx_SCRATCH (mode);\n   operands[2] = copy_to_mode_reg (mode,\n                                   gen_int_mode (INTVAL (operands[2]), mode));\n-  operands[4] = operands[2];\n   addr0 = copy_to_mode_reg (Pmode, XEXP (operands[0], 0));\n   addr1 = copy_to_mode_reg (Pmode, XEXP (operands[1], 0));\n \n-  operands[5] = addr0;\n-  operands[6] = addr1;\n-\n   operands[0] = gen_rtx_MEM (BLKmode, addr0);\n   operands[1] = gen_rtx_MEM (BLKmode, addr1);\n }\")\n@@ -381,9 +378,9 @@\n \t(mem:BLK (match_operand:HI 1 \"register_operand\" \"e\")))\n    (use (match_operand:QI 2 \"register_operand\" \"r\"))\n    (use (match_operand:QI 3 \"const_int_operand\" \"i\"))\n-   (clobber (match_dup 2))\n-   (clobber (match_dup 0))\n-   (clobber (match_dup 1))]\n+   (clobber (match_scratch:HI 4 \"=0\"))\n+   (clobber (match_scratch:HI 5 \"=1\"))\n+   (clobber (match_scratch:QI 6 \"=2\"))]\n   \"\"\n   \"ld __tmp_reg__,%a1+\n \tst %a0+,__tmp_reg__\n@@ -397,9 +394,9 @@\n \t(mem:BLK (match_operand:HI 1 \"register_operand\" \"e,e\")))\n    (use (match_operand:HI 2 \"register_operand\" \"!w,d\"))\n    (use (match_operand:HI 3 \"const_int_operand\" \"\"))\n-   (clobber (match_dup 2))\n-   (clobber (match_dup 0))\n-   (clobber (match_dup 1))]\n+   (clobber (match_scratch:HI 4 \"=0,0\"))\n+   (clobber (match_scratch:HI 5 \"=1,1\"))\n+   (clobber (match_scratch:HI 6 \"=2,2\"))]\n   \"\"\n   \"*{\n      if (which_alternative==0)\n@@ -425,7 +422,7 @@\n \t\t   (const_int 0))\n \t      (use (match_operand:HI 1 \"const_int_operand\" \"\"))\n \t      (use (match_operand:HI 2 \"const_int_operand\" \"n\"))\n-\t      (clobber (match_dup 3))\n+\t      (clobber (match_scratch:HI 3 \"\"))\n \t      (clobber (match_dup 4))])]\n   \"\"\n   \"{\n@@ -438,13 +435,10 @@\n \n   cnt8 = byte_immediate_operand (operands[1], GET_MODE (operands[1]));\n   mode = cnt8 ? QImode : HImode;\n+  operands[4] = gen_rtx_SCRATCH (mode);\n   operands[1] = copy_to_mode_reg (mode,\n                                   gen_int_mode (INTVAL (operands[1]), mode));\n-  operands[3] = operands[1];\n-\n   addr0 = copy_to_mode_reg (Pmode, XEXP (operands[0], 0));\n-  operands[4] = addr0;\n-  \n   operands[0] = gen_rtx_MEM (BLKmode, addr0);\n }\")\n \n@@ -453,8 +447,8 @@\n \t(const_int 0))\n    (use (match_operand:QI 1 \"register_operand\" \"r\"))\n    (use (match_operand:QI 2 \"const_int_operand\" \"n\"))\n-   (clobber (match_dup 1))\n-   (clobber (match_dup 0))]\n+   (clobber (match_scratch:HI 3 \"=0\"))\n+   (clobber (match_scratch:QI 4 \"=1\"))]\n   \"\"\n   \"st %a0+,__zero_reg__\n         dec %1\n@@ -467,8 +461,8 @@\n \t(const_int 0))\n    (use (match_operand:HI 1 \"register_operand\" \"!w,d\"))\n    (use (match_operand:HI 2 \"const_int_operand\" \"n,n\"))\n-   (clobber (match_dup 1))\n-   (clobber (match_dup 0))]\n+   (clobber (match_scratch:HI 3 \"=0,0\"))\n+   (clobber (match_scratch:HI 4 \"=1,1\"))]\n   \"\"\n   \"*{\n      if (which_alternative==0)"}]}