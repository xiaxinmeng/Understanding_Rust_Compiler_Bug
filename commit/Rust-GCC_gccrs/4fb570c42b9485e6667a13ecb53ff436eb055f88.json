{"sha": "4fb570c42b9485e6667a13ecb53ff436eb055f88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZiNTcwYzQyYjk0ODVlNjY2N2ExM2VjYjUzZmY0MzZlYjA1NWY4OA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-06-22T09:01:54Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-06-22T09:01:54Z"}, "message": "[AArch64] Add initial support for Cortex-A73\n\n\t* config/aarch64/aarch64.c (cortexa73_tunings): New struct.\n\t* config/aarch64/aarch64-cores.def (cortex-a73): New entry.\n\t(cortex-a73.cortex-a35): Likewise.\n\t(cortex-a73.cortex-a53): Likewise.\n\t* config/aarch64/aarch64-tune.md: Regenerate.\n\t* doc/invoke.texi (AArch64 Options): Document cortex-a73,\n\tcortex-a73.cortex-a35 and cortex-a73.cortex-a53 arguments to\n\t-mcpu and -mtune.\n\nFrom-SVN: r237679", "tree": {"sha": "6db8dd2c5b252f0c10d211ed187f4ffb26d61759", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6db8dd2c5b252f0c10d211ed187f4ffb26d61759"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fb570c42b9485e6667a13ecb53ff436eb055f88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fb570c42b9485e6667a13ecb53ff436eb055f88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fb570c42b9485e6667a13ecb53ff436eb055f88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fb570c42b9485e6667a13ecb53ff436eb055f88/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd98b1cf064cf782a18a07e21e6c65897c4fa591", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd98b1cf064cf782a18a07e21e6c65897c4fa591", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd98b1cf064cf782a18a07e21e6c65897c4fa591"}], "stats": {"total": 53, "additions": 47, "deletions": 6}, "files": [{"sha": "9112c634b5bd3f9e35957def2b2b1f0c207af86a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fb570c42b9485e6667a13ecb53ff436eb055f88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fb570c42b9485e6667a13ecb53ff436eb055f88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4fb570c42b9485e6667a13ecb53ff436eb055f88", "patch": "@@ -1,3 +1,14 @@\n+2016-06-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.c (cortexa73_tunings): New struct.\n+\t* config/aarch64/aarch64-cores.def (cortex-a73): New entry.\n+\t(cortex-a73.cortex-a35): Likewise.\n+\t(cortex-a73.cortex-a53): Likewise.\n+\t* config/aarch64/aarch64-tune.md: Regenerate.\n+\t* doc/invoke.texi (AArch64 Options): Document cortex-a73,\n+\tcortex-a73.cortex-a35 and cortex-a73.cortex-a53 arguments to\n+\t-mcpu and -mtune.\n+\n 2016-06-21  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* bb-reorder.c (pass_partition_blocks::gate): Update comment."}, {"sha": "329f8f9a9457ae67cfc49807a7a7498ef767cb0d", "filename": "gcc/config/aarch64/aarch64-cores.def", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fb570c42b9485e6667a13ecb53ff436eb055f88/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fb570c42b9485e6667a13ecb53ff436eb055f88/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def?ref=4fb570c42b9485e6667a13ecb53ff436eb055f88", "patch": "@@ -44,6 +44,7 @@ AARCH64_CORE(\"cortex-a35\",  cortexa35, cortexa53, 8A,  AARCH64_FL_FOR_ARCH8 | AA\n AARCH64_CORE(\"cortex-a53\",  cortexa53, cortexa53, 8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC, cortexa53, \"0x41\", \"0xd03\")\n AARCH64_CORE(\"cortex-a57\",  cortexa57, cortexa57, 8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC, cortexa57, \"0x41\", \"0xd07\")\n AARCH64_CORE(\"cortex-a72\",  cortexa72, cortexa57, 8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC, cortexa72, \"0x41\", \"0xd08\")\n+AARCH64_CORE(\"cortex-a73\",  cortexa73, cortexa57, 8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC, cortexa73, \"0x41\", \"0xd09\")\n AARCH64_CORE(\"exynos-m1\",   exynosm1,  exynosm1,  8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC | AARCH64_FL_CRYPTO, exynosm1,  \"0x53\", \"0x001\")\n AARCH64_CORE(\"qdf24xx\",     qdf24xx,   cortexa57, 8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC | AARCH64_FL_CRYPTO, cortexa57, \"0x51\", \"0x800\")\n AARCH64_CORE(\"thunderx\",    thunderx,  thunderx,  8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC | AARCH64_FL_CRYPTO, thunderx,  \"0x43\", \"0x0a1\")\n@@ -57,4 +58,5 @@ AARCH64_CORE(\"vulcan\",  vulcan, cortexa57, 8_1A,  AARCH64_FL_FOR_ARCH8_1 | AARCH\n \n AARCH64_CORE(\"cortex-a57.cortex-a53\",  cortexa57cortexa53, cortexa53, 8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC, cortexa57, \"0x41\", \"0xd07.0xd03\")\n AARCH64_CORE(\"cortex-a72.cortex-a53\",  cortexa72cortexa53, cortexa53, 8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC, cortexa72, \"0x41\", \"0xd08.0xd03\")\n-\n+AARCH64_CORE(\"cortex-a73.cortex-a35\",  cortexa73cortexa35, cortexa53, 8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC, cortexa73, \"0x41\", \"0xd09.0xd04\")\n+AARCH64_CORE(\"cortex-a73.cortex-a53\",  cortexa73cortexa53, cortexa53, 8A,  AARCH64_FL_FOR_ARCH8 | AARCH64_FL_CRC, cortexa73, \"0x41\", \"0xd09.0xd03\")"}, {"sha": "022b13163b4f600cfc8463762e2d12a2f9f1fe78", "filename": "gcc/config/aarch64/aarch64-tune.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fb570c42b9485e6667a13ecb53ff436eb055f88/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fb570c42b9485e6667a13ecb53ff436eb055f88/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md?ref=4fb570c42b9485e6667a13ecb53ff436eb055f88", "patch": "@@ -1,5 +1,5 @@\n ;; -*- buffer-read-only: t -*-\n ;; Generated automatically by gentune.sh from aarch64-cores.def\n (define_attr \"tune\"\n-\t\"cortexa35,cortexa53,cortexa57,cortexa72,exynosm1,qdf24xx,thunderx,xgene1,vulcan,cortexa57cortexa53,cortexa72cortexa53\"\n+\t\"cortexa35,cortexa53,cortexa57,cortexa72,cortexa73,exynosm1,qdf24xx,thunderx,xgene1,vulcan,cortexa57cortexa53,cortexa72cortexa53,cortexa73cortexa35,cortexa73cortexa53\"\n \t(const (symbol_ref \"((enum attr_tune) aarch64_tune)\")))"}, {"sha": "7617f9fb273d17653df95eaf22b3cbeae3862230", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fb570c42b9485e6667a13ecb53ff436eb055f88/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fb570c42b9485e6667a13ecb53ff436eb055f88/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=4fb570c42b9485e6667a13ecb53ff436eb055f88", "patch": "@@ -546,6 +546,32 @@ static const struct tune_params cortexa72_tunings =\n   (AARCH64_EXTRA_TUNE_NONE)\t/* tune_flags.  */\n };\n \n+static const struct tune_params cortexa73_tunings =\n+{\n+  &cortexa57_extra_costs,\n+  &cortexa57_addrcost_table,\n+  &cortexa57_regmove_cost,\n+  &cortexa57_vector_cost,\n+  &generic_branch_cost,\n+  &generic_approx_modes,\n+  4, /* memmov_cost.  */\n+  2, /* issue_rate.  */\n+  (AARCH64_FUSE_AES_AESMC | AARCH64_FUSE_MOV_MOVK | AARCH64_FUSE_ADRP_ADD\n+   | AARCH64_FUSE_MOVK_MOVK | AARCH64_FUSE_ADRP_LDR), /* fusible_ops  */\n+  16,\t/* function_align.  */\n+  8,\t/* jump_align.  */\n+  4,\t/* loop_align.  */\n+  2,\t/* int_reassoc_width.  */\n+  4,\t/* fp_reassoc_width.  */\n+  1,\t/* vec_reassoc_width.  */\n+  2,\t/* min_div_recip_mul_sf.  */\n+  2,\t/* min_div_recip_mul_df.  */\n+  0,\t/* max_case_values.  */\n+  0,\t/* cache_line_size.  */\n+  tune_params::AUTOPREFETCHER_WEAK,\t/* autoprefetcher_model.  */\n+  (AARCH64_EXTRA_TUNE_NONE)\t/* tune_flags.  */\n+};\n+\n static const struct tune_params exynosm1_tunings =\n {\n   &exynosm1_extra_costs,"}, {"sha": "6e097bc352555f4079ab49f73698b33419a094c3", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fb570c42b9485e6667a13ecb53ff436eb055f88/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fb570c42b9485e6667a13ecb53ff436eb055f88/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=4fb570c42b9485e6667a13ecb53ff436eb055f88", "patch": "@@ -13096,11 +13096,13 @@ processors implementing the target architecture.\n Specify the name of the target processor for which GCC should tune the\n performance of the code.  Permissible values for this option are:\n @samp{generic}, @samp{cortex-a35}, @samp{cortex-a53}, @samp{cortex-a57},\n-@samp{cortex-a72}, @samp{exynos-m1}, @samp{qdf24xx}, @samp{thunderx},\n-@samp{xgene1}, @samp{vulcan}, @samp{cortex-a57.cortex-a53},\n-@samp{cortex-a72.cortex-a53}, @samp{native}.\n+@samp{cortex-a72}, @samp{cortex-a73}, @samp{exynos-m1}, @samp{qdf24xx},\n+@samp{thunderx}, @samp{xgene1}, @samp{vulcan}, @samp{cortex-a57.cortex-a53},\n+@samp{cortex-a72.cortex-a53}, @samp{cortex-a73.cortex-a35},\n+@samp{cortex-a73.cortex-a53}, @samp{native}.\n \n-The values @samp{cortex-a57.cortex-a53}, @samp{cortex-a72.cortex-a53}\n+The values @samp{cortex-a57.cortex-a53}, @samp{cortex-a72.cortex-a53},\n+@samp{cortex-a73.cortex-a35}, @samp{cortex-a73.cortex-a53}\n specify that GCC should tune for a big.LITTLE system.\n \n Additionally on native AArch64 GNU/Linux systems the value"}]}