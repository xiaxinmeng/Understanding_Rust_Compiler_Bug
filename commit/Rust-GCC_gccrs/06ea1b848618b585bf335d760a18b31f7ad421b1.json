{"sha": "06ea1b848618b585bf335d760a18b31f7ad421b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZlYTFiODQ4NjE4YjU4NWJmMzM1ZDc2MGExOGIzMWY3YWQ0MjFiMQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2007-05-04T15:32:42Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2007-05-04T15:32:42Z"}, "message": "opts.c (decode_options): Do not fiddle with inlining parameters in case of optimizing for size.\n\n\n\t* opts.c (decode_options): Do not fiddle with inlining\n\tparameters in case of optimizing for size.\n\t* ipa-inline.c (cgraph_decide_recursive_inlining): When optimizing\n\tfor size do nothing.\n\t(cgraph_decide_inlining_of_small_function): When optimizing for\n\tsize never inline functions increasing caller size.\n\t(cgraph_early_inlining): Inline for size when optimizing for size.\n\nCo-Authored-By: Richard Guenther <rguenther@suse.de>\n\nFrom-SVN: r124431", "tree": {"sha": "67698d1475067126f61e0e5bc4185c60fd63495b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67698d1475067126f61e0e5bc4185c60fd63495b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06ea1b848618b585bf335d760a18b31f7ad421b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ea1b848618b585bf335d760a18b31f7ad421b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06ea1b848618b585bf335d760a18b31f7ad421b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ea1b848618b585bf335d760a18b31f7ad421b1/comments", "author": null, "committer": null, "parents": [{"sha": "70aa27669b01c03118b7e18596aafbb0b00f1cf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70aa27669b01c03118b7e18596aafbb0b00f1cf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70aa27669b01c03118b7e18596aafbb0b00f1cf1"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "853516859539272da3157b50e8c2fbdb1e025d49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06ea1b848618b585bf335d760a18b31f7ad421b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06ea1b848618b585bf335d760a18b31f7ad421b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=06ea1b848618b585bf335d760a18b31f7ad421b1", "patch": "@@ -1,3 +1,14 @@\n+2007-05-04  Jan Hubicka  <jh@suse.cz>\n+\t    Richard Guenther  <rguenther@suse.de>\n+\n+\t* opts.c (decode_options): Do not fiddle with inlining\n+\tparameters in case of optimizing for size.\n+\t* ipa-inline.c (cgraph_decide_recursive_inlining): When optimizing\n+\tfor size do nothing.\n+\t(cgraph_decide_inlining_of_small_function): When optimizing for\n+\tsize never inline functions increasing caller size.\n+\t(cgraph_early_inlining): Inline for size when optimizing for size.\n+\n 2007-04-18  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* config/bfin/bfin.md (<optab>di3): Now a define_expand which expands"}, {"sha": "076979ed5de2fb419fb7b6a2e7ebcd556607368a", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06ea1b848618b585bf335d760a18b31f7ad421b1/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06ea1b848618b585bf335d760a18b31f7ad421b1/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=06ea1b848618b585bf335d760a18b31f7ad421b1", "patch": "@@ -668,6 +668,9 @@ cgraph_decide_recursive_inlining (struct cgraph_node *node)\n   int depth = 0;\n   int n = 0;\n \n+  if (optimize_size)\n+    return false;\n+\n   if (DECL_DECLARED_INLINE_P (node->decl))\n     {\n       limit = PARAM_VALUE (PARAM_MAX_INLINE_INSNS_RECURSIVE);\n@@ -913,7 +916,7 @@ cgraph_decide_inlining_of_small_functions (void)\n \t    }\n \t}\n \n-      if (!cgraph_maybe_hot_edge_p (edge) && growth > 0)\n+      if ((!cgraph_maybe_hot_edge_p (edge) || optimize_size) && growth > 0)\n \t{\n           if (!cgraph_recursive_inlining_p (edge->caller, edge->callee,\n \t\t\t\t            &edge->inline_failed))\n@@ -1444,7 +1447,7 @@ cgraph_early_inlining (void)\n   if (sorrycount || errorcount)\n     return 0;\n   if (cgraph_decide_inlining_incrementally (node,\n-\t\t\t\t\t    flag_unit_at_a_time\n+\t\t\t\t\t    flag_unit_at_a_time || optimize_size\n \t\t\t\t\t    ? INLINE_SIZE : INLINE_SPEED, 0))\n     {\n       timevar_push (TV_INTEGRATION);"}, {"sha": "41a9a042e78e2c54173834a6380b426aaec9f16d", "filename": "gcc/opts.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06ea1b848618b585bf335d760a18b31f7ad421b1/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06ea1b848618b585bf335d760a18b31f7ad421b1/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=06ea1b848618b585bf335d760a18b31f7ad421b1", "patch": "@@ -796,9 +796,8 @@ decode_options (unsigned int argc, const char **argv)\n \n   if (optimize_size)\n     {\n-      /* Inlining of very small functions usually reduces total size.  */\n-      set_param_value (\"max-inline-insns-single\", 5);\n-      set_param_value (\"max-inline-insns-auto\", 5);\n+      /* Inlining of functions reducing size is a good idea regardless\n+\t of them being declared inline.  */\n       flag_inline_functions = 1;\n \n       /* We want to crossjump as much as possible.  */"}]}