{"sha": "c822ac7daa0d0c920bbb87cdba847fed6331ba73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgyMmFjN2RhYTBkMGM5MjBiYmI4N2NkYmE4NDdmZWQ2MzMxYmE3Mw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2019-08-07T16:15:35Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2019-08-07T16:15:35Z"}, "message": "PR driver/91130 Use CL_DRIVER when handling of COLLECT_GCC_OPTIONS in lto-wrapper.c\n\nSome options are handled differently by the main driver (gcc, g++,\netc) from the back-end compiler programs (cc1, cc1plus, etc) in that\nin the driver they do not take an additional argument, while in the\ncompiler programs they do.  The processing option option CL_DRIVER\ncontrols this alternative interpretation of the options.\n\nThe environment variable COLLECT_GCC_OPTIONS is the list of options to\nadd to a compile if the compiler re-invokes itself at some point.  As\nsuch, the options are driver options, so CL_DRIVER should be used when\nprocessing this list.  Currently lto-wrapper is doing this\nincorrectly.\n\n\tPR driver/91130\n\t* lto-wrapper.c (find_and_merge_options): Use CL_DRIVER when\n\tprocessing COLLECT_GCC_OPTIONS.\n\t(run_gcc): Likewise.\n\nFrom-SVN: r274176", "tree": {"sha": "c4a145999042758ab7474f359273bb4ebfe103a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4a145999042758ab7474f359273bb4ebfe103a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c822ac7daa0d0c920bbb87cdba847fed6331ba73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c822ac7daa0d0c920bbb87cdba847fed6331ba73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c822ac7daa0d0c920bbb87cdba847fed6331ba73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c822ac7daa0d0c920bbb87cdba847fed6331ba73/comments", "author": null, "committer": null, "parents": [{"sha": "529bc4103b78fa16cbd93d7947724472a4ffb31e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/529bc4103b78fa16cbd93d7947724472a4ffb31e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/529bc4103b78fa16cbd93d7947724472a4ffb31e"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "d582c5b42ae3790e01965028fdc2740191b6fc5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c822ac7daa0d0c920bbb87cdba847fed6331ba73/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c822ac7daa0d0c920bbb87cdba847fed6331ba73/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c822ac7daa0d0c920bbb87cdba847fed6331ba73", "patch": "@@ -1,3 +1,10 @@\n+2019-08-07  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR driver/91130\n+\t* lto-wrapper.c (find_and_merge_options): Use CL_DRIVER when\n+\tprocessing COLLECT_GCC_OPTIONS.\n+\t(run_gcc): Likewise.\n+\n 2019-08-07  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR tree-optimization/91109"}, {"sha": "f93ff504e8897bd5327cd856ce9275d5bfc89f59", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c822ac7daa0d0c920bbb87cdba847fed6331ba73/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c822ac7daa0d0c920bbb87cdba847fed6331ba73/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=c822ac7daa0d0c920bbb87cdba847fed6331ba73", "patch": "@@ -1010,7 +1010,7 @@ find_and_merge_options (int fd, off_t file_offset, const char *prefix,\n       struct cl_decoded_option *f2decoded_options;\n       unsigned int f2decoded_options_count;\n       get_options_from_collect_gcc_options (collect_gcc,\n-\t\t\t\t\t    fopts, CL_LANG_ALL,\n+\t\t\t\t\t    fopts, CL_DRIVER,\n \t\t\t\t\t    &f2decoded_options,\n \t\t\t\t\t    &f2decoded_options_count);\n       if (!fdecoded_options)\n@@ -1283,7 +1283,7 @@ run_gcc (unsigned argc, char *argv[])\n     fatal_error (input_location,\n \t\t \"environment variable %<COLLECT_GCC_OPTIONS%> must be set\");\n   get_options_from_collect_gcc_options (collect_gcc, collect_gcc_options,\n-\t\t\t\t\tCL_LANG_ALL,\n+\t\t\t\t\tCL_DRIVER,\n \t\t\t\t\t&decoded_options,\n \t\t\t\t\t&decoded_options_count);\n "}]}