{"sha": "92cbe4d26167af1f903c5d91498105792c73564f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJjYmU0ZDI2MTY3YWYxZjkwM2M1ZDkxNDk4MTA1NzkyYzczNTY0Zg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1997-09-28T07:03:02Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-09-28T07:03:02Z"}, "message": "frame.c: Remove last change.\n\n        * frame.c: Remove last change.\n        * dwarf2.h: Remove last change.\n        * tree.h: Add declarations of DWARF2 unwind info support\n        functions.\nAs requested by Jason.\n\nFrom-SVN: r15751", "tree": {"sha": "6604f3688a36f8f9922ea5d1496650fa63534a45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6604f3688a36f8f9922ea5d1496650fa63534a45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92cbe4d26167af1f903c5d91498105792c73564f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92cbe4d26167af1f903c5d91498105792c73564f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92cbe4d26167af1f903c5d91498105792c73564f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92cbe4d26167af1f903c5d91498105792c73564f/comments", "author": null, "committer": null, "parents": [{"sha": "2f3ca9e7f4bc29c645df8a51023ece6ece8faf9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f3ca9e7f4bc29c645df8a51023ece6ece8faf9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f3ca9e7f4bc29c645df8a51023ece6ece8faf9d"}], "stats": {"total": 101, "additions": 54, "deletions": 47}, "files": [{"sha": "de41b1e189337a81bc397fc3c0762e84e10a773f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92cbe4d26167af1f903c5d91498105792c73564f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92cbe4d26167af1f903c5d91498105792c73564f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=92cbe4d26167af1f903c5d91498105792c73564f", "patch": "@@ -1,3 +1,10 @@\n+Sun Sep 28 01:05:16 1997  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* frame.c: Remove last change.\n+\t* dwarf2.h: Remove last change.\n+\t* tree.h: Add declarations of DWARF2 unwind info support\n+\tfunctions.\n+\n Sat Sep 27 11:02:38 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* c-decl.c (init_decl_processing): Add __builtin_dwarf_reg_size."}, {"sha": "4340344c868c4a8bb0ea593a709f6ce8235e1674", "filename": "gcc/dwarf2.h", "status": "modified", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92cbe4d26167af1f903c5d91498105792c73564f/gcc%2Fdwarf2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92cbe4d26167af1f903c5d91498105792c73564f/gcc%2Fdwarf2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2.h?ref=92cbe4d26167af1f903c5d91498105792c73564f", "patch": "@@ -543,49 +543,3 @@ enum dwarf_macinfo_record_type\n     DW_MACINFO_end_file = 4,\n     DW_MACINFO_vendor_ext = 255\n   };\n-\f\n-/* Interface of the DWARF2 unwind info support.  */\n-\n-/* Decide whether we want to emit frame unwind information for the current\n-   translation unit.  */\n-\n-extern int dwarf2out_do_frame\t\tPROTO((void));\n-\n-/* Generate a new label for the CFI info to refer to.  */\n-\n-extern char *dwarf2out_cfi_label\tPROTO((void));\n-\n-/* Entry point to update the canonical frame address (CFA).  */\n-\n-extern void dwarf2out_def_cfa\t\tPROTO((char *, unsigned, long));\n-\n-/* Add the CFI for saving a register window.  */\n-\n-extern void dwarf2out_window_save\tPROTO((char *));\n-\n-/* Add a CFI to update the running total of the size of arguments pushed\n-   onto the stack.  */\n-\n-extern void dwarf2out_args_size\t\tPROTO((char *, long));\n-\n-/* Entry point for saving a register to the stack.  */\n-\n-extern void dwarf2out_reg_save\t\tPROTO((char *, unsigned, long));\n-\n-/* Entry point for saving the return address in the stack.  */\n-\n-extern void dwarf2out_return_save\tPROTO((char *, long));\n-\n-/* Entry point for saving the return address in a register.  */\n-\n-extern void dwarf2out_return_reg\tPROTO((char *, unsigned));\n-\n-/* Output a marker (i.e. a label) for the beginning of a function, before\n-   the prologue.  */\n-\n-extern void dwarf2out_begin_prologue\tPROTO((void));\n-\n-/* Output a marker (i.e. a label) for the absolute end of the generated\n-   code for a function definition.  */\n-\n-extern void dwarf2out_end_epilogue\tPROTO((void));"}, {"sha": "f77f0694d3cb8f7437e7e23f08920ebab138f258", "filename": "gcc/frame.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92cbe4d26167af1f903c5d91498105792c73564f/gcc%2Fframe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92cbe4d26167af1f903c5d91498105792c73564f/gcc%2Fframe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fframe.c?ref=92cbe4d26167af1f903c5d91498105792c73564f", "patch": "@@ -35,7 +35,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"defaults.h\"\n \n #ifdef DWARF2_UNWIND_INFO\n-#include \"gansidecl.h\"\n #include \"dwarf2.h\"\n #include \"frame.h\"\n #include <stddef.h>"}, {"sha": "a283d9beab7f96dd1eaa5cf1dbb76f4b502bea41", "filename": "gcc/tree.h", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92cbe4d26167af1f903c5d91498105792c73564f/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92cbe4d26167af1f903c5d91498105792c73564f/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=92cbe4d26167af1f903c5d91498105792c73564f", "patch": "@@ -1836,3 +1836,50 @@ extern void end_temporary_allocation PROTO((void));\n \n /* Pop the obstack selection stack.  */\n extern void pop_obstacks PROTO((void));\n+\n+\f\n+/* Interface of the DWARF2 unwind info support.  */\n+\n+/* Decide whether we want to emit frame unwind information for the current\n+   translation unit.  */\n+\n+extern int dwarf2out_do_frame\t\tPROTO((void));\n+\n+/* Generate a new label for the CFI info to refer to.  */\n+\n+extern char *dwarf2out_cfi_label\tPROTO((void));\n+\n+/* Entry point to update the canonical frame address (CFA).  */\n+\n+extern void dwarf2out_def_cfa\t\tPROTO((char *, unsigned, long));\n+\n+/* Add the CFI for saving a register window.  */\n+\n+extern void dwarf2out_window_save\tPROTO((char *));\n+\n+/* Add a CFI to update the running total of the size of arguments pushed\n+   onto the stack.  */\n+\n+extern void dwarf2out_args_size\t\tPROTO((char *, long));\n+\n+/* Entry point for saving a register to the stack.  */\n+\n+extern void dwarf2out_reg_save\t\tPROTO((char *, unsigned, long));\n+\n+/* Entry point for saving the return address in the stack.  */\n+\n+extern void dwarf2out_return_save\tPROTO((char *, long));\n+\n+/* Entry point for saving the return address in a register.  */\n+\n+extern void dwarf2out_return_reg\tPROTO((char *, unsigned));\n+\n+/* Output a marker (i.e. a label) for the beginning of a function, before\n+   the prologue.  */\n+\n+extern void dwarf2out_begin_prologue\tPROTO((void));\n+\n+/* Output a marker (i.e. a label) for the absolute end of the generated\n+   code for a function definition.  */\n+\n+extern void dwarf2out_end_epilogue\tPROTO((void));"}]}