{"sha": "59cf67d1cf77e9594e58fd2848ac94d505546546", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTljZjY3ZDFjZjc3ZTk1OTRlNThmZDI4NDhhYzk0ZDUwNTU0NjU0Ng==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-01-17T00:16:23Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-01-17T00:16:23Z"}, "message": "Daily bump.", "tree": {"sha": "16da38246b5d5bde55a0aae5ecb7fdd04c5eb37d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16da38246b5d5bde55a0aae5ecb7fdd04c5eb37d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59cf67d1cf77e9594e58fd2848ac94d505546546", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59cf67d1cf77e9594e58fd2848ac94d505546546", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59cf67d1cf77e9594e58fd2848ac94d505546546", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59cf67d1cf77e9594e58fd2848ac94d505546546/comments", "author": null, "committer": null, "parents": [{"sha": "a2960a04d51806b6cf66646fa37b289b42929f41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2960a04d51806b6cf66646fa37b289b42929f41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2960a04d51806b6cf66646fa37b289b42929f41"}], "stats": {"total": 196, "additions": 195, "deletions": 1}, "files": [{"sha": "bdd6bb1867d6913ed60cde517d9411a745f82952", "filename": "gcc/ChangeLog", "status": "modified", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59cf67d1cf77e9594e58fd2848ac94d505546546/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59cf67d1cf77e9594e58fd2848ac94d505546546/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=59cf67d1cf77e9594e58fd2848ac94d505546546", "patch": "@@ -1,3 +1,72 @@\n+2021-01-16  Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\n+\t* builtin-types.def\n+\t(BT_FN_VOID_OMPFN_PTR_OMPCPYFN_LONG_LONG_BOOL_UINT_PTR_INT): Rename\n+\tto...\n+\t(BT_FN_VOID_OMPFN_PTR_OMPCPYFN_LONG_LONG_BOOL_UINT_PTR_INT_PTR):\n+\t...this.  Add extra argument.\n+\t* gimplify.c (omp_default_clause): Ensure that event handle is\n+\tfirstprivate in a task region.\n+\t(gimplify_scan_omp_clauses): Handle OMP_CLAUSE_DETACH.\n+\t(gimplify_adjust_omp_clauses): Likewise.\n+\t* omp-builtins.def (BUILT_IN_GOMP_TASK): Change function type to\n+\tBT_FN_VOID_OMPFN_PTR_OMPCPYFN_LONG_LONG_BOOL_UINT_PTR_INT_PTR.\n+\t* omp-expand.c (expand_task_call): Add GOMP_TASK_FLAG_DETACH to flags\n+\tif detach clause specified.  Add detach argument when generating\n+\tcall to\tGOMP_task.\n+\t* omp-low.c (scan_sharing_clauses): Setup data environment for detach\n+\tclause.\n+\t(finish_taskreg_scan): Move field for variable containing the event\n+\thandle to the front of the struct.\n+\t* tree-core.h (enum omp_clause_code): Add OMP_CLAUSE_DETACH.  Fix\n+\tordering.\n+\t* tree-nested.c (convert_nonlocal_omp_clauses): Handle\n+\tOMP_CLAUSE_DETACH clause.\n+\t(convert_local_omp_clauses): Handle OMP_CLAUSE_DETACH clause.\n+\t* tree-pretty-print.c (dump_omp_clause): Handle OMP_CLAUSE_DETACH.\n+\t* tree.c (omp_clause_num_ops): Add entry for OMP_CLAUSE_DETACH.\n+\tFix ordering.\n+\t(omp_clause_code_name): Add entry for OMP_CLAUSE_DETACH.  Fix\n+\tordering.\n+\t(walk_tree_1): Handle OMP_CLAUSE_DETACH.\n+\n+2021-01-16  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* config/nios2/t-rtems: Reset all MULTILIB_* variables.  Shorten\n+\tmultilib directory names.  Use MULTILIB_REQUIRED instead of\n+\tMULTILIB_EXCEPTIONS.  Add -mhw-mul -mhw-mulx -mhw-div\n+\t-mcustom-fpu-cfg=fph2 multilib.\n+\n+2021-01-16  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* config/nios2/nios2.c (NIOS2_FPU_CONFIG_NUM): Adjust value.\n+\t(nios2_init_fpu_configs): Provide register values for new\n+\t-mcustom-fpu-cfg=fph2 option variant.\n+\t* doc/invoke.texi (-mcustom-fpu-cfg=fph2): Document new option\n+\tvariant.\n+\n+2021-01-16  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* config/nios2/nios2.c (nios2_custom_check_insns): Remove\n+\tcustom instruction warnings.\n+\n+2021-01-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/96669\n+\t* match.pd ((CST << x) & 1 -> x == 0): New simplification.\n+\n+2021-01-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/96271\n+\t* passes.def: Pass false argument to first two pass_cd_dce\n+\tinstances and true to last instance.  Add comment that\n+\tlast instance rewrites no longer addressed locals.\n+\t* tree-ssa-dce.c (pass_cd_dce): Add update_address_taken_p member and\n+\tinitialize it.\n+\t(pass_cd_dce::set_pass_param): New method.\n+\t(pass_cd_dce::execute): Return TODO_update_address_taken from\n+\tlast cd_dce instance.\n+\n 2021-01-15  Carl Love  <cel@us.ibm.com>\n \n \t* config/rs6000/altivec.h (vec_mulh, vec_div, vec_dive, vec_mod):"}, {"sha": "48b66dfb13b752cf7a6d1f09fdaf78cb2aea12a0", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59cf67d1cf77e9594e58fd2848ac94d505546546/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59cf67d1cf77e9594e58fd2848ac94d505546546/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=59cf67d1cf77e9594e58fd2848ac94d505546546", "patch": "@@ -1 +1 @@\n-20210116\n+20210117"}, {"sha": "8c2c2ac494bcb0c7c9fe44af3248016aae3b3a4f", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59cf67d1cf77e9594e58fd2848ac94d505546546/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59cf67d1cf77e9594e58fd2848ac94d505546546/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=59cf67d1cf77e9594e58fd2848ac94d505546546", "patch": "@@ -1,3 +1,8 @@\n+2021-01-16  Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\n+\t* c-pragma.h (pragma_omp_clause): Add PRAGMA_OMP_CLAUSE_DETACH.\n+\tRedefine PRAGMA_OACC_CLAUSE_DETACH.\n+\n 2021-01-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/98597"}, {"sha": "34cebe81b1f8ad9a2a3191f74cb993055597fab9", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59cf67d1cf77e9594e58fd2848ac94d505546546/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59cf67d1cf77e9594e58fd2848ac94d505546546/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=59cf67d1cf77e9594e58fd2848ac94d505546546", "patch": "@@ -1,3 +1,12 @@\n+2021-01-16  Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\n+\t* c-parser.c (c_parser_omp_clause_detach): New.\n+\t(c_parser_omp_all_clauses): Handle PRAGMA_OMP_CLAUSE_DETACH clause.\n+\t(OMP_TASK_CLAUSE_MASK): Add mask for PRAGMA_OMP_CLAUSE_DETACH.\n+\t* c-typeck.c (c_finish_omp_clauses): Handle PRAGMA_OMP_CLAUSE_DETACH\n+\tclause.  Prevent use of detach with mergeable and overriding the\n+\tdata sharing mode of the event handle.\n+\n 2021-01-15  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-typeck.c (c_finish_omp_clauses): For reduction build array with"}, {"sha": "94fcb43d57290940dcf7476c8f740f5362ebc150", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59cf67d1cf77e9594e58fd2848ac94d505546546/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59cf67d1cf77e9594e58fd2848ac94d505546546/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=59cf67d1cf77e9594e58fd2848ac94d505546546", "patch": "@@ -1,3 +1,13 @@\n+2021-01-16  Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\n+\t* parser.c (cp_parser_omp_clause_detach): New.\n+\t(cp_parser_omp_all_clauses): Handle PRAGMA_OMP_CLAUSE_DETACH.\n+\t(OMP_TASK_CLAUSE_MASK): Add mask for PRAGMA_OMP_CLAUSE_DETACH.\n+\t* pt.c (tsubst_omp_clauses): Handle OMP_CLAUSE_DETACH clause.\n+\t* semantics.c (finish_omp_clauses): Handle OMP_CLAUSE_DETACH clause.\n+\tPrevent use of detach with mergeable and overriding the\tdata sharing\n+\tmode of the event handle.\n+\n 2021-01-15  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/98538"}, {"sha": "47f1527d6728b449e615915169383c5d5e0d3d90", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59cf67d1cf77e9594e58fd2848ac94d505546546/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59cf67d1cf77e9594e58fd2848ac94d505546546/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=59cf67d1cf77e9594e58fd2848ac94d505546546", "patch": "@@ -1,3 +1,26 @@\n+2021-01-16  Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\n+\t* dump-parse-tree.c (show_omp_clauses): Handle detach clause.\n+\t* frontend-passes.c (gfc_code_walker): Walk detach expression.\n+\t* gfortran.h (struct gfc_omp_clauses): Add detach field.\n+\t(gfc_c_intptr_kind): New.\n+\t* openmp.c (gfc_free_omp_clauses): Free detach clause.\n+\t(gfc_match_omp_detach): New.\n+\t(enum omp_mask1): Add OMP_CLAUSE_DETACH.\n+\t(enum omp_mask2): Remove OMP_CLAUSE_DETACH.\n+\t(gfc_match_omp_clauses): Handle OMP_CLAUSE_DETACH for OpenMP.\n+\t(OMP_TASK_CLAUSES): Add OMP_CLAUSE_DETACH.\n+\t(resolve_omp_clauses): Prevent use of detach with mergeable and\n+\toverriding the data sharing mode of the event handle.\n+\t* trans-openmp.c (gfc_trans_omp_clauses): Handle detach clause.\n+\t* trans-types.c (gfc_c_intptr_kind): New.\n+\t(gfc_init_kinds): Initialize gfc_c_intptr_kind.\n+\t* types.def\n+\t(BT_FN_VOID_OMPFN_PTR_OMPCPYFN_LONG_LONG_BOOL_UINT_PTR_INT): Rename\n+\tto...\n+\t(BT_FN_VOID_OMPFN_PTR_OMPCPYFN_LONG_LONG_BOOL_UINT_PTR_INT_PTR):\n+\t...this.  Add extra argument.\n+\n 2021-01-14  Harald Anlauf  <anlauf@gmx.de>\n \n \t* gfortran.h (gfc_resolve_substring): Add prototype."}, {"sha": "2938ab9b626ab96c5f5b6a9ada63955a89e71a8e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59cf67d1cf77e9594e58fd2848ac94d505546546/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59cf67d1cf77e9594e58fd2848ac94d505546546/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=59cf67d1cf77e9594e58fd2848ac94d505546546", "patch": "@@ -1,3 +1,27 @@\n+2021-01-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gfortran.dg/iso_fortran_binding_uint8_array_driver.c: Include\n+\t../../../libgfortran/ISO_Fortran_binding.h rather than\n+\tISO_Fortran_binding.h.\n+\n+2021-01-16  Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\n+\t* c-c++-common/gomp/task-detach-1.c: New.\n+\t* g++.dg/gomp/task-detach-1.C: New.\n+\t* gcc.dg/gomp/task-detach-1.c: New.\n+\t* gfortran.dg/gomp/task-detach-1.f90: New.\n+\n+2021-01-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/96669\n+\t* gcc.dg/tree-ssa/pr96669-1.c: Adjust regexp.\n+\t* gcc.dg/tree-ssa/pr96669-2.c: New test.\n+\n+2021-01-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/96271\n+\t* gcc.target/i386/pr96271.c: New test.\n+\n 2021-01-15  Carl Love  <cel@us.ibm.com>\n \n \t* gcc.target/powerpc/builtins-1-p10-runnable.c: New test file."}, {"sha": "5c4d43b69d70451d46bcfec7e3a3fb1d88255dc2", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59cf67d1cf77e9594e58fd2848ac94d505546546/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59cf67d1cf77e9594e58fd2848ac94d505546546/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=59cf67d1cf77e9594e58fd2848ac94d505546546", "patch": "@@ -1,3 +1,7 @@\n+2021-01-16  Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\n+\t* gomp-constants.h (GOMP_TASK_FLAG_DETACH): New.\n+\n 2021-01-03  Mike Frysinger  <vapier@gentoo.org>\n \n \t* libiberty.h (strverscmp): Delete duplicate prototype."}, {"sha": "f20f8841bde193d20088a3d4fbb0063a00d677a4", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59cf67d1cf77e9594e58fd2848ac94d505546546/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59cf67d1cf77e9594e58fd2848ac94d505546546/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=59cf67d1cf77e9594e58fd2848ac94d505546546", "patch": "@@ -1,3 +1,48 @@\n+2021-01-16  Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\n+\t* fortran.c (omp_fulfill_event_): New.\n+\t* libgomp.h (struct gomp_task): Add detach and completion_sem fields.\n+\t(struct gomp_team): Add task_detach_queue and task_detach_count\n+\tfields.\n+\t* libgomp.map (OMP_5.0.1): Add omp_fulfill_event and omp_fulfill_event_.\n+\t* libgomp_g.h (GOMP_task): Add extra argument.\n+\t* omp.h.in (enum omp_event_handle_t): New.\n+\t(omp_fulfill_event): New.\n+\t* omp_lib.f90.in (omp_event_handle_kind): New.\n+\t(omp_fulfill_event): New.\n+\t* omp_lib.h.in (omp_event_handle_kind): New.\n+\t(omp_fulfill_event): Declare.\n+\t* priority_queue.c (priority_tree_find): New.\n+\t(priority_list_find): New.\n+\t(priority_queue_find): New.\n+\t* priority_queue.h (priority_queue_predicate): New.\n+\t(priority_queue_find): New.\n+\t* task.c (gomp_init_task): Initialize detach field.\n+\t(task_fulfilled_p): New.\n+\t(GOMP_task): Add detach argument.  Ignore detach argument if\n+\tGOMP_TASK_FLAG_DETACH not set in flags.  Initialize completion_sem\n+\tfield.\tCopy address of completion_sem into detach argument and\n+\tinto the start of the data record.  Wait for detach event if task\n+\tnot deferred.\n+\t(gomp_barrier_handle_tasks): Queue tasks with unfulfilled events.\n+\tRemove completed tasks and requeue dependent tasks.\n+\t(omp_fulfill_event): New.\n+\t* team.c (gomp_new_team): Initialize task_detach_queue and\n+\ttask_detach_count fields.\n+\t(free_team): Free task_detach_queue field.\n+\t* testsuite/libgomp.c-c++-common/task-detach-1.c: New testcase.\n+\t* testsuite/libgomp.c-c++-common/task-detach-2.c: New testcase.\n+\t* testsuite/libgomp.c-c++-common/task-detach-3.c: New testcase.\n+\t* testsuite/libgomp.c-c++-common/task-detach-4.c: New testcase.\n+\t* testsuite/libgomp.c-c++-common/task-detach-5.c: New testcase.\n+\t* testsuite/libgomp.c-c++-common/task-detach-6.c: New testcase.\n+\t* testsuite/libgomp.fortran/task-detach-1.f90: New testcase.\n+\t* testsuite/libgomp.fortran/task-detach-2.f90: New testcase.\n+\t* testsuite/libgomp.fortran/task-detach-3.f90: New testcase.\n+\t* testsuite/libgomp.fortran/task-detach-4.f90: New testcase.\n+\t* testsuite/libgomp.fortran/task-detach-5.f90: New testcase.\n+\t* testsuite/libgomp.fortran/task-detach-6.f90: New testcase.\n+\n 2021-01-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/70454"}, {"sha": "f9cad1276cf16d7ce8d4ee9b2f370da97f9572c7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59cf67d1cf77e9594e58fd2848ac94d505546546/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59cf67d1cf77e9594e58fd2848ac94d505546546/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=59cf67d1cf77e9594e58fd2848ac94d505546546", "patch": "@@ -1,3 +1,8 @@\n+2021-01-16  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\t* testsuite/29_atomics/atomic_flag/test_and_set/explicit-hle.cc:\n+\tAdd -fcf-protection=none to -march=i486.\n+\n 2021-01-14  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* testsuite/23_containers/deque/debug/98466.cc: Make it pre-C++11"}]}