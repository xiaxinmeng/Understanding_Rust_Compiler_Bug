{"sha": "204f56aa65d2496e9f7db86c4aa37d42a336fc5b", "node_id": "C_kwDOANBUbNoAKDIwNGY1NmFhNjVkMjQ5NmU5ZjdkYjg2YzRhYTM3ZDQyYTMzNmZjNWI", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-09-24T07:30:51Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-09-24T07:30:51Z"}, "message": "Fortran: Improve file-reading error diagnostic [PR55534]\n\n\tPR fortran/55534\n\ngcc/fortran/ChangeLog:\n\n\t* scanner.c (load_file): Return void, call (gfc_)fatal_error for\n\tall errors.\n\t(include_line, include_stmt, gfc_new_file): Remove exit call\n\tfor failed load_file run.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/include_9.f90: Add dg-prune-output.\n\t* gfortran.dg/include_23.f90: New test.\n\t* gfortran.dg/include_24.f90: New test.", "tree": {"sha": "0c631d838c5ac345e701a4b21a7d519744ee85b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c631d838c5ac345e701a4b21a7d519744ee85b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/204f56aa65d2496e9f7db86c4aa37d42a336fc5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/204f56aa65d2496e9f7db86c4aa37d42a336fc5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/204f56aa65d2496e9f7db86c4aa37d42a336fc5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/204f56aa65d2496e9f7db86c4aa37d42a336fc5b/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a960d548b7d7d942f316c5295f6d849b74214f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a960d548b7d7d942f316c5295f6d849b74214f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a960d548b7d7d942f316c5295f6d849b74214f5"}], "stats": {"total": 75, "additions": 33, "deletions": 42}, "files": [{"sha": "5a450692ba3958712fad203e387f35b897e0f98e", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 24, "deletions": 42, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/204f56aa65d2496e9f7db86c4aa37d42a336fc5b/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/204f56aa65d2496e9f7db86c4aa37d42a336fc5b/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=204f56aa65d2496e9f7db86c4aa37d42a336fc5b", "patch": "@@ -47,6 +47,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"toplev.h\"\t/* For set_src_pwd.  */\n #include \"debug.h\"\n #include \"options.h\"\n+#include \"diagnostic-core.h\"  /* For fatal_error. */\n #include \"cpp.h\"\n #include \"scanner.h\"\n \n@@ -2230,7 +2231,7 @@ preprocessor_line (gfc_char_t *c)\n }\n \n \n-static bool load_file (const char *, const char *, bool);\n+static void load_file (const char *, const char *, bool);\n \n /* include_line()-- Checks a line buffer to see if it is an include\n    line.  If so, we call load_file() recursively to load the included\n@@ -2396,9 +2397,7 @@ include_line (gfc_char_t *line)\n \t\t   read by anything else.  */\n \n   filename = gfc_widechar_to_char (begin, -1);\n-  if (!load_file (filename, NULL, false))\n-    exit (FATAL_EXIT_CODE);\n-\n+  load_file (filename, NULL, false);\n   free (filename);\n   return 1;\n }\n@@ -2505,9 +2504,7 @@ include_stmt (gfc_linebuf *b)\n       filename[i] = (unsigned char) c;\n     }\n   filename[length] = '\\0';\n-  if (!load_file (filename, NULL, false))\n-    exit (FATAL_EXIT_CODE);\n-\n+  load_file (filename, NULL, false);\n   free (filename);\n \n do_ret:\n@@ -2525,9 +2522,11 @@ include_stmt (gfc_linebuf *b)\n   return ret;\n }\n \n+\n+\n /* Load a file into memory by calling load_line until the file ends.  */\n \n-static bool\n+static void\n load_file (const char *realfilename, const char *displayedname, bool initial)\n {\n   gfc_char_t *line;\n@@ -2549,13 +2548,8 @@ load_file (const char *realfilename, const char *displayedname, bool initial)\n \n   for (f = current_file; f; f = f->up)\n     if (filename_cmp (filename, f->filename) == 0)\n-      {\n-\tfprintf (stderr, \"%s:%d: Error: File '%s' is being included \"\n-\t\t \"recursively\\n\", current_file->filename, current_file->line,\n-\t\t filename);\n-\treturn false;\n-      }\n-\n+      fatal_error (linemap_line_start (line_table, current_file->line, 0),\n+\t\t   \"File %qs is being included recursively\", filename);\n   if (initial)\n     {\n       if (gfc_src_file)\n@@ -2567,10 +2561,7 @@ load_file (const char *realfilename, const char *displayedname, bool initial)\n \tinput = gfc_open_file (realfilename);\n \n       if (input == NULL)\n-\t{\n-\t  gfc_error_now (\"Cannot open file %qs\", filename);\n-\t  return false;\n-\t}\n+\tgfc_fatal_error (\"Cannot open file %qs\", filename);\n     }\n   else\n     {\n@@ -2579,22 +2570,20 @@ load_file (const char *realfilename, const char *displayedname, bool initial)\n \t{\n \t  /* For -fpre-include file, current_file is NULL.  */\n \t  if (current_file)\n-\t    fprintf (stderr, \"%s:%d: Error: Can't open included file '%s'\\n\",\n-\t\t     current_file->filename, current_file->line, filename);\n+\t    fatal_error (linemap_line_start (line_table, current_file->line, 0),\n+\t\t\t \"Cannot open included file %qs\", filename);\n \t  else\n-\t    fprintf (stderr, \"Error: Can't open pre-included file '%s'\\n\",\n-\t\t     filename);\n-\n-\t  return false;\n+\t    gfc_fatal_error (\"Cannot open pre-included file %qs\", filename);\n \t}\n       stat_result = stat (realfilename, &st);\n-      if (stat_result == 0 && !S_ISREG(st.st_mode))\n+      if (stat_result == 0 && !S_ISREG (st.st_mode))\n \t{\n-\t  fprintf (stderr, \"%s:%d: Error: Included path '%s'\"\n-\t\t   \" is not a regular file\\n\",\n-\t\t   current_file->filename, current_file->line, filename);\n \t  fclose (input);\n-\t  return false;\n+\t  if (current_file)\n+\t    fatal_error (linemap_line_start (line_table, current_file->line, 0),\n+\t\t\t \"Included file %qs is not a regular file\", filename);\n+\t  else\n+\t    gfc_fatal_error (\"Included file %qs is not a regular file\", filename);\n \t}\n     }\n \n@@ -2768,7 +2757,6 @@ load_file (const char *realfilename, const char *displayedname, bool initial)\n     add_file_change (NULL, current_file->inclusion_line + 1);\n   current_file = current_file->up;\n   linemap_add (line_table, LC_LEAVE, 0, NULL, 0);\n-  return true;\n }\n \n \n@@ -2780,23 +2768,17 @@ load_file (const char *realfilename, const char *displayedname, bool initial)\n void\n gfc_new_file (void)\n {\n-  bool result;\n-\n-  if (flag_pre_include != NULL\n-      && !load_file (flag_pre_include, NULL, false))\n-    exit (FATAL_EXIT_CODE);\n+  if (flag_pre_include != NULL)\n+    load_file (flag_pre_include, NULL, false);\n \n   if (gfc_cpp_enabled ())\n     {\n-      result = gfc_cpp_preprocess (gfc_source_file);\n+      gfc_cpp_preprocess (gfc_source_file);\n       if (!gfc_cpp_preprocess_only ())\n-        result = load_file (gfc_cpp_temporary_file (), gfc_source_file, true);\n+\tload_file (gfc_cpp_temporary_file (), gfc_source_file, true);\n     }\n   else\n-    result = load_file (gfc_source_file, NULL, true);\n-\n-  if (!result)\n-    exit (FATAL_EXIT_CODE);\n+    load_file (gfc_source_file, NULL, true);\n \n   gfc_current_locus.lb = line_head;\n   gfc_current_locus.nextc = (line_head == NULL) ? NULL : line_head->line;"}, {"sha": "421ddda87bcd927832789215df3db94159c7ba51", "filename": "gcc/testsuite/gfortran.dg/include_23.f90", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/204f56aa65d2496e9f7db86c4aa37d42a336fc5b/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_23.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/204f56aa65d2496e9f7db86c4aa37d42a336fc5b/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_23.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_23.f90?ref=204f56aa65d2496e9f7db86c4aa37d42a336fc5b", "patch": "@@ -0,0 +1,4 @@\n+implicit none\n+include \"nonexisting/file.f90\"  ! { dg-error \"Cannot open included file 'nonexisting/file.f90'\" }\n+end\n+! { dg-prune-output \"compilation terminated.\" }"}, {"sha": "1fe9eb57625bbceb859bc9b6889d98f87e5bb3a4", "filename": "gcc/testsuite/gfortran.dg/include_24.f90", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/204f56aa65d2496e9f7db86c4aa37d42a336fc5b/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_24.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/204f56aa65d2496e9f7db86c4aa37d42a336fc5b/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_24.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_24.f90?ref=204f56aa65d2496e9f7db86c4aa37d42a336fc5b", "patch": "@@ -0,0 +1,4 @@\n+implicit none\n+include \".\"  ! { dg-error \"Included file '.' is not a regular file\" }\n+end\n+! { dg-prune-output \"compilation terminated.\" }"}, {"sha": "6b0648b3ee53eb2e30b67600e23da3f68e6f76c4", "filename": "gcc/testsuite/gfortran.dg/include_9.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/204f56aa65d2496e9f7db86c4aa37d42a336fc5b/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/204f56aa65d2496e9f7db86c4aa37d42a336fc5b/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finclude_9.f90?ref=204f56aa65d2496e9f7db86c4aa37d42a336fc5b", "patch": "@@ -4,3 +4,4 @@\n       program main\n       end program\n ! { dg-error \"is not a regular file\" \" \" { target *-*-* } 3 }\n+! { dg-prune-output \"compilation terminated.\" }"}]}