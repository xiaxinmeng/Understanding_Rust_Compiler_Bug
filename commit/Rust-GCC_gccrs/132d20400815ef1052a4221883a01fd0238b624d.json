{"sha": "132d20400815ef1052a4221883a01fd0238b624d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTMyZDIwNDAwODE1ZWYxMDUyYTQyMjE4ODNhMDFmZDAyMzhiNjI0ZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-06-22T10:47:16Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-06-22T10:47:16Z"}, "message": "(force_to_mode): Don't do anything for a ASM_OPERANDS insn.\n\nFrom-SVN: r14287", "tree": {"sha": "50d989cc227819d4b190fa614b5c18b636fb1b0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50d989cc227819d4b190fa614b5c18b636fb1b0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/132d20400815ef1052a4221883a01fd0238b624d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/132d20400815ef1052a4221883a01fd0238b624d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/132d20400815ef1052a4221883a01fd0238b624d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/132d20400815ef1052a4221883a01fd0238b624d/comments", "author": null, "committer": null, "parents": [{"sha": "1997cb46f73354ff969abdd7d79f48e00d99c19d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1997cb46f73354ff969abdd7d79f48e00d99c19d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1997cb46f73354ff969abdd7d79f48e00d99c19d"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "44cca31aec8f57ee316d4d1e607075951dd13771", "filename": "gcc/combine.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/132d20400815ef1052a4221883a01fd0238b624d/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/132d20400815ef1052a4221883a01fd0238b624d/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=132d20400815ef1052a4221883a01fd0238b624d", "patch": "@@ -5968,9 +5968,10 @@ force_to_mode (x, mode, mask, reg, just_select)\n   unsigned HOST_WIDE_INT fuller_mask, nonzero;\n   rtx op0, op1, temp;\n \n-  /* If this is a CALL, don't do anything.  Some of the code below\n-     will do the wrong thing since the mode of a CALL is VOIDmode.  */\n-  if (code == CALL)\n+  /* If this is a CALL or ASM_OPERANDS, don't do anything.  Some of the\n+     code below will do the wrong thing since the mode of such an\n+     expression is VOIDmode.  */\n+  if (code == CALL || code == ASM_OPERANDS)\n     return x;\n \n   /* We want to perform the operation is its present mode unless we know"}]}