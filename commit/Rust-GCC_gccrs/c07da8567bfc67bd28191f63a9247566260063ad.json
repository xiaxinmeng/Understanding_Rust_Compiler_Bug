{"sha": "c07da8567bfc67bd28191f63a9247566260063ad", "node_id": "C_kwDOANBUbNoAKGMwN2RhODU2N2JmYzY3YmQyODE5MWY2M2E5MjQ3NTY2MjYwMDYzYWQ", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2022-10-05T22:16:26Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-04T13:47:23Z"}, "message": "ada: Generate missing object decls for adainit/adafinal registration calls\n\nA previous change on this ticket introduced calls to CUDA_Register_Function\nfor adainit and adafinal, but failed to introduce declarations for the\nC string variables that are initialized and then passed as actual parameters\nin this call. Provide the missing declarations (and, incidentally, change\nthe names of the two variables).\n\ngcc/ada/\n\n\t* bindgen.adb: Introduce two new string constants for the names of\n\tthe C-String variables that are assigned the names for adainit and\n\tadafinal. Replace string literals in Gen_CUDA_Init with references\n\tto these constants. In Gen_CUDA_Defs, generate C-String variable\n\tdeclarations where these constants are the names of the variables.", "tree": {"sha": "991be92d777e00b06fef8b82a8c6106291036559", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/991be92d777e00b06fef8b82a8c6106291036559"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c07da8567bfc67bd28191f63a9247566260063ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c07da8567bfc67bd28191f63a9247566260063ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c07da8567bfc67bd28191f63a9247566260063ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c07da8567bfc67bd28191f63a9247566260063ad/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffcd1921e0aa37cf6b0fc6926bcadb0e988e4a2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffcd1921e0aa37cf6b0fc6926bcadb0e988e4a2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffcd1921e0aa37cf6b0fc6926bcadb0e988e4a2a"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "4e89918b51d36207229e80376e2654d4f73d7dd7", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c07da8567bfc67bd28191f63a9247566260063ad/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c07da8567bfc67bd28191f63a9247566260063ad/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=c07da8567bfc67bd28191f63a9247566260063ad", "patch": "@@ -114,6 +114,11 @@ package body Bindgen is\n    --  For CodePeer, introduce a wrapper subprogram which calls the\n    --  user-defined main subprogram.\n \n+   --  Names for local C-String variables\n+\n+   Adainit_String_Obj_Name  : constant String := \"Adainit_Name_C_String\";\n+   Adafinal_String_Obj_Name : constant String := \"Adafinal_Name_C_String\";\n+\n    --  Names and link_names for CUDA device adainit/adafinal procs.\n \n    Device_Subp_Name_Prefix : constant String := \"imported_device_\";\n@@ -131,9 +136,6 @@ package body Bindgen is\n    function Device_Ada_Init_Subp_Name return String is\n      (Device_Subp_Name_Prefix & Ada_Init_Name.all);\n \n-   --  Text for aspect specifications (if any) given as part of the\n-   --  Adainit and Adafinal spec declarations.\n-\n    ----------------------------------\n    -- Interface_State Pragma Table --\n    ----------------------------------\n@@ -1366,6 +1368,13 @@ package body Bindgen is\n       WBI (\"   pragma Import (C, \" & Device_Ada_Final_Subp_Name &\n              \", Link_Name => \"\"\" & Device_Ada_Final_Link_Name & \"\"\");\");\n \n+      --  C-string declarations for adainit and adafinal\n+      WBI (\"   \" & Adainit_String_Obj_Name\n+            & \" : Interfaces.C.Strings.Chars_Ptr;\");\n+      WBI (\"   \" & Adafinal_String_Obj_Name\n+            & \" : Interfaces.C.Strings.Chars_Ptr;\");\n+      WBI (\"\");\n+\n       WBI (\"\");\n    end Gen_CUDA_Defs;\n \n@@ -1449,11 +1458,11 @@ package body Bindgen is\n       --  Register device-side Adainit and Adafinal\n       Gen_CUDA_Register_Function_Call\n         (Kernel_Name   => Device_Ada_Init_Link_Name,\n-         Kernel_String => \"Adainit_Name_String\",\n+         Kernel_String => Adainit_String_Obj_Name,\n          Kernel_Proc   => Device_Ada_Init_Subp_Name);\n       Gen_CUDA_Register_Function_Call\n         (Kernel_Name   => Device_Ada_Final_Link_Name,\n-         Kernel_String => \"Adafinal_Name_String\",\n+         Kernel_String => Adafinal_String_Obj_Name,\n          Kernel_Proc   => Device_Ada_Final_Subp_Name);\n \n       WBI (\"      CUDA_Register_Fat_Binary_End (Fat_Binary_Handle);\");"}]}