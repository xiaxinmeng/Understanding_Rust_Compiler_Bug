{"sha": "c180bd1ee8abb276424fe91e3170fa92d85b76da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE4MGJkMWVlOGFiYjI3NjQyNGZlOTFlMzE3MGZhOTJkODViNzZkYQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-06-28T19:31:14Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-06-28T19:31:14Z"}, "message": "(cpu attribute): Rename to arch attribute.\n\n(cpu attribute): Rename to arch attribute.  Add a new\ncpu attribute.  Fix all users.\n(type attribute): Add ialu, shift, imul, fpdivs, and fpdivd.\nDelete fpdiv.\n(function units): Add Cypress and Supersparc versions of each.\n(addsi3, subsi3, andsi3, iorsi3, xorsi3): Add ialu type attribute.\n(mulsi3): Add imul type attribute.\n(divtf3, divdf3): Use fpdivd not fpdiv type attribute.\n(divsf3); Use fpdivs not fpdiv type attribute.\n(ashlsi3, ashrsi3, lshrsi3): Add shift type attribute.\n\nFrom-SVN: r7586", "tree": {"sha": "a090b991583493ec0d3eacc16360bf52e1b02df1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a090b991583493ec0d3eacc16360bf52e1b02df1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c180bd1ee8abb276424fe91e3170fa92d85b76da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c180bd1ee8abb276424fe91e3170fa92d85b76da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c180bd1ee8abb276424fe91e3170fa92d85b76da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c180bd1ee8abb276424fe91e3170fa92d85b76da/comments", "author": null, "committer": null, "parents": [{"sha": "3c9b21309942ec8b66c000356452f4d0f2e7a610", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c9b21309942ec8b66c000356452f4d0f2e7a610", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c9b21309942ec8b66c000356452f4d0f2e7a610"}], "stats": {"total": 127, "additions": 98, "deletions": 29}, "files": [{"sha": "248fa534b29cb9c73bffefbf15899e3b86d727db", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 98, "deletions": 29, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c180bd1ee8abb276424fe91e3170fa92d85b76da/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c180bd1ee8abb276424fe91e3170fa92d85b76da/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=c180bd1ee8abb276424fe91e3170fa92d85b76da", "patch": "@@ -23,10 +23,16 @@\n \n ;;- See file \"rtl.def\" for documentation on define_insn, match_*, et. al.\n \n-;; cpu type.  Cpu32bit includes v7, sparclite, v8.\n+;; Architecture type.  Arch32bit includes v7, sparclite, v8.\n \n-(define_attr \"cpu\" \"cpu32bit,cpu64bit\"\n-  (const (symbol_ref \"sparc_cpu_type\")))\n+(define_attr \"arch\" \"arch32bit,arch64bit\"\n+  (const (symbol_ref \"sparc_arch_type\")))\n+\n+;; CPU type. This is only used for instruction scheduling\n+(define_attr \"cpu\" \"cypress,supersparc\"\n+ (const\n+  (cond [(symbol_ref \"TARGET_SUPERSPARC\") (const_string \"supersparc\")]\n+\t(const_string \"cypress\"))))\n \n ;; Insn type.  Used to default other attribute values.\n \n@@ -36,7 +42,7 @@\n ;; type \"call_no_delay_slot\" is a call followed by an unimp instruction.\n \n (define_attr \"type\"\n-  \"move,unary,binary,compare,load,store,uncond_branch,branch,call,call_no_delay_slot,address,fpload,fpstore,fp,fpcmp,fpmul,fpdiv,fpsqrt,cmove,multi,misc\"\n+  \"move,unary,binary,compare,load,store,ialu,shift,uncond_branch,branch,call,call_no_delay_slot,address,imul,fpload,fpstore,fp,fpcmp,fpmul,fpdivs,fpdivd,fpsqrt,cmove,multi,misc\"\n   (const_string \"binary\"))\n \n ;; Set true if insn uses call-clobbered intermediate register.\n@@ -149,8 +155,10 @@\n ;; (define_function_unit \"alu\" 1 0\n ;;  (eq_attr \"type\" \"unary,binary,move,address\") 1 0)\n \n+;; ---- cypress CY7C602 scheduling:\n ;; Memory with load-delay of 1 (i.e., 2 cycle load).\n-(define_function_unit \"memory\" 1 1 (eq_attr \"type\" \"load,fpload\") 2 0)\n+(define_function_unit \"memory\" 1 0 \n+  (and (eq_attr \"type\" \"load,fpload\") (eq_attr \"cpu\" \"cypress\")) 2 2)\n \n ;; SPARC has two floating-point units: the FP ALU,\n ;; and the FP MUL/DIV/SQRT unit.\n@@ -171,10 +179,57 @@\n ;; The CY7C602 can only support 2 fp isnsn simultaneously.\n ;; More insns cause the chip to stall.\n \n-(define_function_unit \"fp_alu\" 1 1 (eq_attr \"type\" \"fp\") 5 0)\n-(define_function_unit \"fp_mds\" 1 1 (eq_attr \"type\" \"fpmul\") 7 0)\n-(define_function_unit \"fp_mds\" 1 1 (eq_attr \"type\" \"fpdiv\") 37 0)\n-(define_function_unit \"fp_mds\" 1 1 (eq_attr \"type\" \"fpsqrt\") 63 0)\n+(define_function_unit \"fp_alu\" 1 0\n+  (and (eq_attr \"type\" \"fp\")            (eq_attr \"cpu\" \"cypress\")) 5 5)\n+(define_function_unit \"fp_mds\" 1 0\n+  (and (eq_attr \"type\" \"fpmul\")         (eq_attr \"cpu\" \"cypress\")) 7 7)\n+(define_function_unit \"fp_mds\" 1 0\n+  (and (eq_attr \"type\" \"fpdivs,fpdivd\") (eq_attr \"cpu\" \"cypress\")) 37 37)\n+(define_function_unit \"fp_mds\" 1 0\n+  (and (eq_attr \"type\" \"fpsqrt\")        (eq_attr \"cpu\" \"cypress\")) 63 63)\n+\n+;; ----- The TMS390Z55 scheduling\n+;; The Supersparc can issue 1 - 3 insns per cycle; here we assume\n+;; three insns/cycle, and hence multiply all costs by three.\n+;; Combinations up to two integer, one ld/st, one fp.\n+;; Memory delivers its result in one cycle to IU, zero cycles to FP\n+(define_function_unit \"memory\" 1 0\n+  (and (eq_attr \"type\" \"load\")          (eq_attr \"cpu\" \"supersparc\")) 3 3)\n+(define_function_unit \"memory\" 1 0\n+  (and (eq_attr \"type\" \"fpload\")        (eq_attr \"cpu\" \"supersparc\")) 1 3)\n+;; at least one in three instructions can be a mem opt.\n+(define_function_unit \"memory\" 1 0\n+  (and (eq_attr \"type\" \"store,fpstore\") (eq_attr \"cpu\" \"supersparc\")) 1 3)\n+;; at least one in three instructions can be a shift op.\n+(define_function_unit \"shift\" 1 0\n+  (and (eq_attr \"type\" \"shift\")         (eq_attr \"cpu\" \"supersparc\")) 1 3)\n+\n+;; There are only two write ports to the integer register file\n+;; A store also uses a write port\n+(define_function_unit \"iwport\" 2 0\n+  (and (eq_attr \"type\" \"load,store,shift,ialu\") (eq_attr \"cpu\" \"supersparc\")) 1 3)\n+\n+;; Timings; throughput/latency\n+;; FADD     1/3    add/sub, format conv, compar, abs, neg\n+;; FMUL     1/3\n+;; FDIVs    4/6\n+;; FDIVd    7/9\n+;; FSQRTs   6/8\n+;; FSQRTd  10/12\n+;; IMUL     4/4\n+\n+(define_function_unit \"fp_alu\" 1 0\n+  (and (eq_attr \"type\" \"fp,fpcmp\") (eq_attr \"cpu\" \"supersparc\")) 9 3)\n+(define_function_unit \"fp_mds\" 1 0\n+  (and (eq_attr \"type\" \"fpmul\")    (eq_attr \"cpu\" \"supersparc\")) 9 3)\n+(define_function_unit \"fp_mds\" 1 0\n+  (and (eq_attr \"type\" \"fpdivs\")   (eq_attr \"cpu\" \"supersparc\")) 18 12)\n+(define_function_unit \"fp_mds\" 1 0\n+  (and (eq_attr \"type\" \"fpdivd\")   (eq_attr \"cpu\" \"supersparc\")) 27 21)\n+(define_function_unit \"fp_mds\" 1 0\n+  (and (eq_attr \"type\" \"fpsqrt\")   (eq_attr \"cpu\" \"supersparc\")) 36 30)\n+(define_function_unit \"fp_mds\" 1 0\n+  (and (eq_attr \"type\" \"imul\")     (eq_attr \"cpu\" \"supersparc\")) 12 12)\n \f\n ;; Compare instructions.\n ;; This controls RTL generation and register allocation.\n@@ -3160,7 +3215,8 @@\n \t(plus:SI (match_operand:SI 1 \"arith_operand\" \"%r\")\n \t\t (match_operand:SI 2 \"arith_operand\" \"rI\")))]\n   \"\"\n-  \"add %1,%2,%0\")\n+  \"add %1,%2,%0\"\n+  [(set_attr \"type\" \"ialu\")])\n \n (define_insn \"\"\n   [(set (reg:CC_NOOV 0)\n@@ -3266,7 +3322,8 @@\n \t(minus:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t  (match_operand:SI 2 \"arith_operand\" \"rI\")))]\n   \"\"\n-  \"sub %1,%2,%0\")\n+  \"sub %1,%2,%0\"\n+  [(set_attr \"type\" \"ialu\")])\n \n (define_insn \"\"\n   [(set (reg:CC_NOOV 0)\n@@ -3314,7 +3371,8 @@\n \t(mult:SI (match_operand:SI 1 \"arith_operand\" \"%r\")\n \t\t (match_operand:SI 2 \"arith_operand\" \"rI\")))]\n   \"TARGET_V8 || TARGET_SPARCLITE\"\n-  \"smul %1,%2,%0\")\n+  \"smul %1,%2,%0\"\n+  [(set_attr \"type\" \"imul\")])\n \n (define_insn \"muldi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n@@ -3333,7 +3391,8 @@\n \t(compare:CC_NOOV (mult:SI (match_dup 1) (match_dup 2))\n \t\t\t (const_int 0)))]\n   \"TARGET_V8 || TARGET_SPARCLITE\"\n-  \"smulcc %1,%2,%0\")\n+  \"smulcc %1,%2,%0\"\n+  [(set_attr \"type\" \"imul\")])\n \n (define_expand \"mulsidi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n@@ -3589,7 +3648,8 @@\n \t(and:SI (match_operand:SI 1 \"arith_operand\" \"%r\")\n \t\t(match_operand:SI 2 \"arith_operand\" \"rI\")))]\n   \"\"\n-  \"and %1,%2,%0\")\n+  \"and %1,%2,%0\"\n+  [(set_attr \"type\" \"ialu\")])\n \n (define_split\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n@@ -3626,7 +3686,8 @@\n \t(and:SI (not:SI (match_operand:SI 1 \"register_operand\" \"r\"))\n \t\t(match_operand:SI 2 \"register_operand\" \"r\")))]\n   \"\"\n-  \"andn %2,%1,%0\")\n+  \"andn %2,%1,%0\"\n+  [(set_attr \"type\" \"ialu\")])\n \n (define_expand \"iordi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n@@ -3681,7 +3742,8 @@\n \t(ior:SI (match_operand:SI 1 \"arith_operand\" \"%r\")\n \t\t(match_operand:SI 2 \"arith_operand\" \"rI\")))]\n   \"\"\n-  \"or %1,%2,%0\")\n+  \"or %1,%2,%0\"\n+  [(set_attr \"type\" \"ialu\")])\n \n (define_split\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n@@ -3718,7 +3780,8 @@\n \t(ior:SI (not:SI (match_operand:SI 1 \"register_operand\" \"r\"))\n \t\t(match_operand:SI 2 \"register_operand\" \"r\")))]\n   \"\"\n-  \"orn %2,%1,%0\")\n+  \"orn %2,%1,%0\"\n+  [(set_attr \"type\" \"ialu\")])\n \n (define_expand \"xordi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n@@ -3773,7 +3836,8 @@\n \t(xor:SI (match_operand:SI 1 \"arith_operand\" \"%rJ\")\n \t\t(match_operand:SI 2 \"arith_operand\" \"rI\")))]\n   \"\"\n-  \"xor %r1,%2,%0\")\n+  \"xor %r1,%2,%0\"\n+  [(set_attr \"type\" \"ialu\")])\n \n (define_split\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n@@ -3827,7 +3891,8 @@\n \t(not:SI (xor:SI (match_operand:SI 1 \"reg_or_0_operand\" \"rJ\")\n \t\t\t(match_operand:SI 2 \"arith_operand\" \"rI\"))))]\n   \"\"\n-  \"xnor %r1,%2,%0\")\n+  \"xnor %r1,%2,%0\"\n+  [(set_attr \"type\" \"ialu\")])\n \n ;; These correspond to the above in the case where we also (or only)\n ;; want to set the condition code.  \n@@ -4201,29 +4266,30 @@\n   \"fdmulq %1,%2,%0\"\n   [(set_attr \"type\" \"fpmul\")])\n \n+;; don't have timing for quad-prec. divide.\n (define_insn \"divtf3\"\n   [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n \t(div:TF (match_operand:TF 1 \"register_operand\" \"f\")\n \t\t(match_operand:TF 2 \"register_operand\" \"f\")))]\n   \"TARGET_FPU && TARGET_HARD_QUAD\"\n   \"fdivq %1,%2,%0\"\n-  [(set_attr \"type\" \"fpdiv\")])\n+  [(set_attr \"type\" \"fpdivd\")])\n \n (define_insn \"divdf3\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(div:DF (match_operand:DF 1 \"register_operand\" \"f\")\n \t\t(match_operand:DF 2 \"register_operand\" \"f\")))]\n   \"TARGET_FPU\"\n   \"fdivd %1,%2,%0\"\n-  [(set_attr \"type\" \"fpdiv\")])\n+  [(set_attr \"type\" \"fpdivd\")])\n \n (define_insn \"divsf3\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(div:SF (match_operand:SF 1 \"register_operand\" \"f\")\n \t\t(match_operand:SF 2 \"register_operand\" \"f\")))]\n   \"TARGET_FPU\"\n   \"fdivs %1,%2,%0\"\n-  [(set_attr \"type\" \"fpdiv\")])\n+  [(set_attr \"type\" \"fpdivs\")])\n \n (define_insn \"negtf2\"\n   [(set (match_operand:TF 0 \"register_operand\" \"=f,f\")\n@@ -4241,7 +4307,7 @@\n   [(set_attr \"type\" \"fp\")\n    (set_attr_alternative \"length\"\n      [(const_int 1)\n-      (if_then_else (eq_attr \"cpu\" \"cpu32bit\") (const_int 4) (const_int 1))])])\n+      (if_then_else (eq_attr \"arch\" \"arch32bit\") (const_int 4) (const_int 1))])])\n \n (define_insn \"negdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n@@ -4259,7 +4325,7 @@\n   [(set_attr \"type\" \"fp\")\n    (set_attr_alternative \"length\"\n      [(const_int 1)\n-      (if_then_else (eq_attr \"cpu\" \"cpu32bit\") (const_int 2) (const_int 1))])])\n+      (if_then_else (eq_attr \"arch\" \"arch32bit\") (const_int 2) (const_int 1))])])\n \n (define_insn \"negsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n@@ -4284,7 +4350,7 @@\n   [(set_attr \"type\" \"fp\")\n    (set_attr_alternative \"length\"\n      [(const_int 1)\n-      (if_then_else (eq_attr \"cpu\" \"cpu32bit\") (const_int 4) (const_int 1))])])\n+      (if_then_else (eq_attr \"arch\" \"arch32bit\") (const_int 4) (const_int 1))])])\n \n (define_insn \"absdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n@@ -4302,7 +4368,7 @@\n   [(set_attr \"type\" \"fp\")\n    (set_attr_alternative \"length\"\n      [(const_int 1)\n-      (if_then_else (eq_attr \"cpu\" \"cpu32bit\") (const_int 2) (const_int 1))])])\n+      (if_then_else (eq_attr \"arch\" \"arch32bit\") (const_int 2) (const_int 1))])])\n \n (define_insn \"abssf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n@@ -4346,7 +4412,8 @@\n     operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n \n   return \\\"sll %1,%2,%0\\\";\n-}\")\n+}\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"ashldi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n@@ -4393,7 +4460,8 @@\n     operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n \n   return \\\"sra %1,%2,%0\\\";\n-}\")\n+}\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"ashrdi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n@@ -4421,7 +4489,8 @@\n     operands[2] = GEN_INT (INTVAL (operands[2]) & 0x1f);\n \n   return \\\"srl %1,%2,%0\\\";\n-}\")\n+}\"\n+  [(set_attr \"type\" \"shift\")])\n \n (define_insn \"lshrdi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")"}]}