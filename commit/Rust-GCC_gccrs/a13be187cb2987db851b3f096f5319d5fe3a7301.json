{"sha": "a13be187cb2987db851b3f096f5319d5fe3a7301", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTEzYmUxODdjYjI5ODdkYjg1MWIzZjA5NmY1MzE5ZDVmZTNhNzMwMQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2021-02-24T13:50:12Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2021-02-24T17:14:34Z"}, "message": "c++: modules & -fpreprocessed [PR 99072]\n\nWhen we read preprocessed source, we deal with a couple of special\nlocation lines at the start of the file.  These provide information\nabout the original filename of the source and the current directory,\nso we can process the source in the same manner.  When updating that\ncode, I had a somewhat philosophical question: Should the line table\ncontain evidence of the filename the user provided to the compiler?  I\nfigured to leave it there, as it did no harm.  But this defect shows\nan issue.  It's in the line table and our (non optimizing) line table\nserializer emits that filename.  Which means if one re-preprocesses\nthe original source to a differently-named intermediate file, the\nresultant CMI is different.  Boo.  That's a difference that doesn't\nmatter, except the CRC matching then fails.  We should elide the\nfilename, so that one can preprocess to mktemp intermediate filenames\nfor whatever reason.\n\nThis patch takes the approach of expunging it from the line table --\nso the line table will end up with exactly the same form.  That seems\na better bet than trying to fix up mismatching line tables in CMI\nemission.\n\n\tPR c++/99072\n\tlibcpp/\n\t* init.c (read_original_filename): Expunge all evidence of the\n\toriginal filename.\n\tgcc/testsuite/\n\t* g++.dg/modules/pr99072.H: New.", "tree": {"sha": "7ef274e904c8d50835e5183e74e1feb48c9daa5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ef274e904c8d50835e5183e74e1feb48c9daa5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a13be187cb2987db851b3f096f5319d5fe3a7301", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a13be187cb2987db851b3f096f5319d5fe3a7301", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a13be187cb2987db851b3f096f5319d5fe3a7301", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a13be187cb2987db851b3f096f5319d5fe3a7301/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f90027d18a94d02ba8f3b7503c5f0835f432a89e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f90027d18a94d02ba8f3b7503c5f0835f432a89e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f90027d18a94d02ba8f3b7503c5f0835f432a89e"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "eda0c07f9e292917bd9e4c9d787eff91b2eee531", "filename": "gcc/testsuite/g++.dg/modules/pr99072.H", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a13be187cb2987db851b3f096f5319d5fe3a7301/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr99072.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a13be187cb2987db851b3f096f5319d5fe3a7301/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr99072.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fpr99072.H?ref=a13be187cb2987db851b3f096f5319d5fe3a7301", "patch": "@@ -0,0 +1,10 @@\n+# 0 \"REALNAME\"\n+# 0 \"<built-in>\"\n+# 0 \"<command-line>\"\n+# 0 \"<command-line>\"\n+# 1 \"/usr/include/stdc-predef.h\" 1 3 4\n+# 0 \"<command-line>\" 2\n+# 1 \"REALNAME\"\n+\n+// { dg-additional-options {-fmodule-header -fpreprocessed -fdump-lang-module-lineno} }\n+// { dg-final { scan-lang-dump { 4 source file names\\n Source file\\[0\\]=REALNAME\\n Source file\\[1\\]=<built-in>\\n Source file\\[2\\]=<command-line>\\n Source file\\[3\\]=/usr/include/stdc-predef.h\\n} module } }"}, {"sha": "68ed2c761b90c22f66505a48052f82976d25a93e", "filename": "libcpp/init.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a13be187cb2987db851b3f096f5319d5fe3a7301/libcpp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a13be187cb2987db851b3f096f5319d5fe3a7301/libcpp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finit.c?ref=a13be187cb2987db851b3f096f5319d5fe3a7301", "patch": "@@ -752,6 +752,23 @@ read_original_filename (cpp_reader *pfile)\n       if (_cpp_handle_directive (pfile, token->flags & PREV_WHITE))\n \t{\n \t  read_original_directory (pfile);\n+\n+\t  auto *penult = &linemap_check_ordinary\n+\t    (LINEMAPS_LAST_MAP (pfile->line_table, false))[-1];\n+\t  if (penult[1].reason == LC_RENAME_VERBATIM)\n+\t    {\n+\t      /* Expunge any evidence of the original linemap.  */\n+\t      pfile->line_table->highest_location\n+\t\t= pfile->line_table->highest_line\n+\t\t= penult[0].start_location;\n+\n+\t      penult[1].start_location = penult[0].start_location;\n+\t      penult[1].reason = penult[0].reason;\n+\t      penult[0] = penult[1];\n+\t      pfile->line_table->info_ordinary.used--;\n+\t      pfile->line_table->info_ordinary.cache = 0;\n+\t    }\n+\n \t  return true;\n \t}\n     }"}]}