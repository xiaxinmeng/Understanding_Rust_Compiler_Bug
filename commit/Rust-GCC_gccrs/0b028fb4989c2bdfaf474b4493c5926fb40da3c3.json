{"sha": "0b028fb4989c2bdfaf474b4493c5926fb40da3c3", "node_id": "C_kwDOANBUbNoAKDBiMDI4ZmI0OTg5YzJiZGZhZjQ3NGI0NDkzYzU5MjZmYjQwZGEzYzM", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-10-25T09:33:10Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-10-25T10:49:24Z"}, "message": "tree-optimization/102905 - restore re-align load for alignment peeling\n\nPrevious refactoring made the possibility of considering re-aligned\nloads for unlimited cost model alignment peeling difficult so I\nditched that.  Later refactoring made it easily possible again so\nthe following patch re-instantiates this which should fix the\nobserved regression on powerpc with altivec.\n\n2021-10-25  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/102905\n\t* tree-vect-data-refs.c (vect_enhance_data_refs_alignment):\n\tUse vect_supportable_dr_alignment again to determine whether\n\tan access is supported when not aligned.", "tree": {"sha": "6d3600708a581b0922363b96fbc9b38926077d0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d3600708a581b0922363b96fbc9b38926077d0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b028fb4989c2bdfaf474b4493c5926fb40da3c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b028fb4989c2bdfaf474b4493c5926fb40da3c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b028fb4989c2bdfaf474b4493c5926fb40da3c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b028fb4989c2bdfaf474b4493c5926fb40da3c3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77b84fb0a8eac736f456e42b6a7801a76e4644eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77b84fb0a8eac736f456e42b6a7801a76e4644eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77b84fb0a8eac736f456e42b6a7801a76e4644eb"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "cbcd4b80246200646860c5305dd498d3458215d2", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b028fb4989c2bdfaf474b4493c5926fb40da3c3/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b028fb4989c2bdfaf474b4493c5926fb40da3c3/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=0b028fb4989c2bdfaf474b4493c5926fb40da3c3", "patch": "@@ -1994,9 +1994,8 @@ vect_enhance_data_refs_alignment (loop_vec_info loop_vinfo)\n \t\t prune all entries from the peeling hashtable which cause\n \t\t DRs to be not supported.  */\n \t      bool supportable_if_not_aligned\n-\t\t= targetm.vectorize.support_vector_misalignment\n-\t\t    (TYPE_MODE (vectype), TREE_TYPE (DR_REF (dr_info->dr)),\n-\t\t     DR_MISALIGNMENT_UNKNOWN, false);\n+\t\t= vect_supportable_dr_alignment\n+\t\t    (loop_vinfo, dr_info, vectype, DR_MISALIGNMENT_UNKNOWN);\n \t      while (known_le (npeel_tmp, nscalars))\n                 {\n                   vect_peeling_hash_insert (&peeling_htab, loop_vinfo,"}]}