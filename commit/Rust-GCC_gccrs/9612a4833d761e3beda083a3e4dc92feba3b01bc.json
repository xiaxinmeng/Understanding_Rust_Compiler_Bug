{"sha": "9612a4833d761e3beda083a3e4dc92feba3b01bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYxMmE0ODMzZDc2MWUzYmVkYTA4M2EzZTRkYzkyZmViYTNiMDFiYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-27T07:11:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-27T07:11:57Z"}, "message": "s390: Fix C++14 vs. C++17 ABI incompatibility on s390{,x} [PR94704]\n\nThe following patch fixes the C++14 vs. C++17 ABI passing incompatibility\non s390x-linux.\n\nBootstrapped/regtested on s390x-linux without and with the patch, the\ndifference being:\n-FAIL: tmpdir-g++.dg-struct-layout-1/t032 cp_compat_x_alt.o-cp_compat_y_tst.o execute\n FAIL: tmpdir-g++.dg-struct-layout-1/t032 cp_compat_x_tst.o-cp_compat_y_alt.o execute\n-FAIL: tmpdir-g++.dg-struct-layout-1/t032 cp_compat_x_tst.o-cp_compat_y_tst.o execute\n FAIL: tmpdir-g++.dg-struct-layout-1/t055 cp_compat_x_alt.o-cp_compat_y_alt.o execute\n FAIL: tmpdir-g++.dg-struct-layout-1/t055 cp_compat_x_alt.o-cp_compat_y_tst.o execute\n-FAIL: tmpdir-g++.dg-struct-layout-1/t055 cp_compat_x_tst.o-cp_compat_y_alt.o execute\n-FAIL: tmpdir-g++.dg-struct-layout-1/t055 cp_compat_x_tst.o-cp_compat_y_tst.o execute\n FAIL: tmpdir-g++.dg-struct-layout-1/t056 cp_compat_x_alt.o-cp_compat_y_alt.o execute\n-FAIL: tmpdir-g++.dg-struct-layout-1/t056 cp_compat_x_alt.o-cp_compat_y_tst.o execute\n FAIL: tmpdir-g++.dg-struct-layout-1/t056 cp_compat_x_tst.o-cp_compat_y_alt.o execute\n-FAIL: tmpdir-g++.dg-struct-layout-1/t056 cp_compat_x_tst.o-cp_compat_y_tst.o execute\n FAIL: tmpdir-g++.dg-struct-layout-1/t057 cp_compat_x_alt.o-cp_compat_y_alt.o execute\n-FAIL: tmpdir-g++.dg-struct-layout-1/t057 cp_compat_x_alt.o-cp_compat_y_tst.o execute\n FAIL: tmpdir-g++.dg-struct-layout-1/t057 cp_compat_x_tst.o-cp_compat_y_alt.o execute\n-FAIL: tmpdir-g++.dg-struct-layout-1/t057 cp_compat_x_tst.o-cp_compat_y_tst.o execute\n FAIL: tmpdir-g++.dg-struct-layout-1/t058 cp_compat_x_alt.o-cp_compat_y_alt.o execute\n FAIL: tmpdir-g++.dg-struct-layout-1/t058 cp_compat_x_alt.o-cp_compat_y_tst.o execute\n-FAIL: tmpdir-g++.dg-struct-layout-1/t058 cp_compat_x_tst.o-cp_compat_y_alt.o execute\n-FAIL: tmpdir-g++.dg-struct-layout-1/t058 cp_compat_x_tst.o-cp_compat_y_tst.o execute\n FAIL: tmpdir-g++.dg-struct-layout-1/t059 cp_compat_x_alt.o-cp_compat_y_alt.o execute\n FAIL: tmpdir-g++.dg-struct-layout-1/t059 cp_compat_x_alt.o-cp_compat_y_tst.o execute\n-FAIL: tmpdir-g++.dg-struct-layout-1/t059 cp_compat_x_tst.o-cp_compat_y_alt.o execute\n-FAIL: tmpdir-g++.dg-struct-layout-1/t059 cp_compat_x_tst.o-cp_compat_y_tst.o execute\nwhen performing ALT_CXX_UNDER_TEST=g++ testing with a system GCC 10 compiler\nfrom a week ago.  So, the alt vs. alt FAILs are all expected (we know before\nthis patch there is an ABI incompatibility) and some alt vs. tst (or tst vs.\nalt) FAILs too - that depends on if the particular x or y test is compiled\nwith -std=c++14 or -std=c++17 - if x_tst is compiled with -std=c++14 and\ny_alt is compiled with -std=c++17, then it should FAIL, similarly if x_alt\nis compiled with -std=c++17 and y_tst is compiled with -std=c++14.\n\n2020-04-27  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/94704\n\t* config/s390/s390.c (s390_function_arg_vector,\n\ts390_function_arg_float): Ignore cxx17_empty_base_field_p fields.", "tree": {"sha": "1b6abde8dd48e66b39e424189419670f328cd1e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b6abde8dd48e66b39e424189419670f328cd1e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9612a4833d761e3beda083a3e4dc92feba3b01bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9612a4833d761e3beda083a3e4dc92feba3b01bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9612a4833d761e3beda083a3e4dc92feba3b01bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9612a4833d761e3beda083a3e4dc92feba3b01bc/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47c39faa67cc7bd567793b62718ab5e4f931e8d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47c39faa67cc7bd567793b62718ab5e4f931e8d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47c39faa67cc7bd567793b62718ab5e4f931e8d0"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "ade7418401a20b99a2f6666e7d3da8de7ad1f133", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9612a4833d761e3beda083a3e4dc92feba3b01bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9612a4833d761e3beda083a3e4dc92feba3b01bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9612a4833d761e3beda083a3e4dc92feba3b01bc", "patch": "@@ -1,3 +1,9 @@\n+2020-04-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/94704\n+\t* config/s390/s390.c (s390_function_arg_vector,\n+\ts390_function_arg_float): Ignore cxx17_empty_base_field_p fields.\n+\n 2020-04-27  Jiufu Guo   <guojiufu@cn.ibm.com>\n \n \t* common/config/rs6000/rs6000-common.c"}, {"sha": "e282bb8c666a4c680f15c4a0f298924f6a6475f3", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9612a4833d761e3beda083a3e4dc92feba3b01bc/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9612a4833d761e3beda083a3e4dc92feba3b01bc/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=9612a4833d761e3beda083a3e4dc92feba3b01bc", "patch": "@@ -11917,7 +11917,8 @@ s390_function_arg_vector (machine_mode mode, const_tree type)\n \n       for (field = TYPE_FIELDS (type); field; field = DECL_CHAIN (field))\n \t{\n-\t  if (TREE_CODE (field) != FIELD_DECL)\n+\t  if (TREE_CODE (field) != FIELD_DECL\n+\t      || cxx17_empty_base_field_p (field))\n \t    continue;\n \n \t  if (single == NULL_TREE)\n@@ -11967,7 +11968,8 @@ s390_function_arg_float (machine_mode mode, const_tree type)\n \n       for (field = TYPE_FIELDS (type); field; field = DECL_CHAIN (field))\n \t{\n-\t  if (TREE_CODE (field) != FIELD_DECL)\n+\t  if (TREE_CODE (field) != FIELD_DECL\n+\t      || cxx17_empty_base_field_p (field))\n \t    continue;\n \n \t  if (single == NULL_TREE)"}]}