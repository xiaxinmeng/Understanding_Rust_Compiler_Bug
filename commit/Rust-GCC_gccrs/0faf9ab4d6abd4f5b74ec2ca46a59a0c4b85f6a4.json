{"sha": "0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZhZjlhYjRkNmFiZDRmNWI3NGVjMmNhNDZhNTlhMGM0Yjg1ZjZhNA==", "commit": {"author": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2016-10-28T13:28:46Z"}, "committer": {"name": "Will Schmidt", "email": "willschm@gcc.gnu.org", "date": "2016-10-28T13:28:46Z"}, "message": "re PR middle-end/72747 (powerpc: wrong code generated for vec_splats in cascading assignment)\n\ngcc:\n2016-10-26  Will Schmidt <will_schmidt@vnet.ibm.com>\n\n        PR middle-end/72747\n        * gimplify.c (gimplify_init_constructor): Move emit of constructor\n        assignment to earlier in the if/else logic.\n\ntestsuite:\n2016-10-26  Will Schmidt <will_schmidt@vnet.ibm.com>\n\n        PR middle-end/72747\n        * c-c++-common/pr72747-1.c: New test.\n        * c-c++-common/pr72747-2.c: Likewise.\n\nFrom-SVN: r241647", "tree": {"sha": "0c6a5fcd0df4eadf8a1dfeaa1c7da5091c31c4c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c6a5fcd0df4eadf8a1dfeaa1c7da5091c31c4c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4/comments", "author": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a762fe1652ff05808a82c5169e44412516de7da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a762fe1652ff05808a82c5169e44412516de7da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a762fe1652ff05808a82c5169e44412516de7da"}], "stats": {"total": 69, "additions": 57, "deletions": 12}, "files": [{"sha": "f932103b4c1ccf802797786ef6ffaeb0cb0bf539", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4", "patch": "@@ -1,3 +1,9 @@\n+2016-10-28  Will Schmidt <will_schmidt@vnet.ibm.com>\n+\n+\tPR middle-end/72747\n+\t* gimplify.c (gimplify_init_constructor): Move emit of constructor\n+\tassignment to earlier in the if/else logic.\n+\n 2016-10-28  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/78128"}, {"sha": "1531582be115c92c17a9dfacf9d16b526eab469d", "filename": "gcc/gimplify.c", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4", "patch": "@@ -4730,24 +4730,23 @@ gimplify_init_constructor (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n \n   if (ret == GS_ERROR)\n     return GS_ERROR;\n-  else if (want_value)\n+  /* If we have gimplified both sides of the initializer but have\n+     not emitted an assignment, do so now.  */\n+  if (*expr_p)\n+    {\n+      tree lhs = TREE_OPERAND (*expr_p, 0);\n+      tree rhs = TREE_OPERAND (*expr_p, 1);\n+      gassign *init = gimple_build_assign (lhs, rhs);\n+      gimplify_seq_add_stmt (pre_p, init);\n+    }\n+  if (want_value)\n     {\n       *expr_p = object;\n       return GS_OK;\n     }\n   else\n     {\n-      /* If we have gimplified both sides of the initializer but have\n-\t not emitted an assignment, do so now.  */\n-      if (*expr_p)\n-\t{\n-\t  tree lhs = TREE_OPERAND (*expr_p, 0);\n-\t  tree rhs = TREE_OPERAND (*expr_p, 1);\n-\t  gassign *init = gimple_build_assign (lhs, rhs);\n-\t  gimplify_seq_add_stmt (pre_p, init);\n-\t  *expr_p = NULL;\n-\t}\n-\n+      *expr_p = NULL;\n       return GS_ALL_DONE;\n     }\n }"}, {"sha": "b4d7ec055c822566d7bc592b1fc8e87f4aaeacb9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4", "patch": "@@ -1,3 +1,9 @@\n+2016-10-26  Will Schmidt <will_schmidt@vnet.ibm.com>\n+\n+\tPR middle-end/72747\n+\t* c-c++-common/pr72747-1.c: New test.\n+\t* c-c++-common/pr72747-2.c: Likewise.\n+\n 2016-10-28  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* gcc.target/s390/oscbreak-1.c: New test."}, {"sha": "e87069df0f667189d5be45ad661c3e5575f7bc1c", "filename": "gcc/testsuite/c-c++-common/pr72747-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr72747-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr72747-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr72747-1.c?ref=0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec -fdump-tree-gimple\" } */\n+\n+/* PR 72747: Test that cascaded definition is happening for constant vectors. */\n+\n+#include <altivec.h>\n+\n+int main (int argc, char *argv[])\n+{\n+\t__vector int v1,v2;\n+\tv1 = v2 = vec_splats ((int) 42);\n+\treturn 0;\n+}\n+/* { dg-final { scan-tree-dump-times \" v2 = { 42, 42, 42, 42 }\" 1 \"gimple\" } } */\n+"}, {"sha": "080d6fc42510abaa398ec2c173e1f74d23b8318f", "filename": "gcc/testsuite/c-c++-common/pr72747-2.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr72747-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr72747-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr72747-2.c?ref=0faf9ab4d6abd4f5b74ec2ca46a59a0c4b85f6a4", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-c -maltivec -fdump-tree-gimple\" } */\n+\n+/* PR 72747: test that cascaded definition is happening for non constants. */\n+\n+void foo ()\n+{\n+  extern int i;\n+  __vector int v,w;\n+    v = w = (vector int) { i };\n+}\n+\n+int main (int argc, char *argv[])\n+{\n+  return 0;\n+}\n+/* { dg-final { scan-tree-dump-times \" w = {i.0_1}\" 1 \"gimple\" } } */"}]}