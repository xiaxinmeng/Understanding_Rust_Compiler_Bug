{"sha": "bb1bc604a852c38afd0df9d2f6a66a0e1a80db34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIxYmM2MDRhODUyYzM4YWZkMGRmOWQyZjZhNjZhMGUxYTgwZGIzNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-04-21T12:09:20Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-04-21T12:09:20Z"}, "message": "re PR tree-optimization/78847 (pointer arithmetic from c++ ranged-based for loop not optimized)\n\n2017-04-21  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/78847\n\t* fold-const.c (split_tree): Handle POINTER_PLUS_EXPR.\n\n\t* g++.dg/tree-ssa/pr78847.C: New testcase.\n\nFrom-SVN: r247061", "tree": {"sha": "efe1044f9d6c29374fada2b86514b9f58dab0c3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efe1044f9d6c29374fada2b86514b9f58dab0c3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb1bc604a852c38afd0df9d2f6a66a0e1a80db34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb1bc604a852c38afd0df9d2f6a66a0e1a80db34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb1bc604a852c38afd0df9d2f6a66a0e1a80db34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb1bc604a852c38afd0df9d2f6a66a0e1a80db34/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e1478a0ee96f0273a36384cecb1376597fd4218f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1478a0ee96f0273a36384cecb1376597fd4218f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1478a0ee96f0273a36384cecb1376597fd4218f"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "359273ef092765a28f8894fdf0dc37d51ea2c6b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb1bc604a852c38afd0df9d2f6a66a0e1a80db34/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb1bc604a852c38afd0df9d2f6a66a0e1a80db34/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bb1bc604a852c38afd0df9d2f6a66a0e1a80db34", "patch": "@@ -1,3 +1,8 @@\n+2017-04-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/78847\n+\t* fold-const.c (split_tree): Handle POINTER_PLUS_EXPR.\n+\n 2017-04-21  Richard Biener  <rguenther@suse.de>\n \n \t* tree.h (build_qualified_type): Annotate with CXX_MEM_STAT_INFO."}, {"sha": "4ae21fb0d2ff8ca5f7599982e7bb43fdb5b4bde1", "filename": "gcc/fold-const.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb1bc604a852c38afd0df9d2f6a66a0e1a80db34/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb1bc604a852c38afd0df9d2f6a66a0e1a80db34/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=bb1bc604a852c38afd0df9d2f6a66a0e1a80db34", "patch": "@@ -798,8 +798,11 @@ split_tree (location_t loc, tree in, tree type, enum tree_code code,\n \t\t  though the C standard doesn't say so) for integers because\n \t\t  the value is not affected.  For reals, the value might be\n \t\t  affected, so we can't.  */\n-\t       && ((code == PLUS_EXPR && TREE_CODE (in) == MINUS_EXPR)\n-\t\t   || (code == MINUS_EXPR && TREE_CODE (in) == PLUS_EXPR))))\n+\t       && ((code == PLUS_EXPR && TREE_CODE (in) == POINTER_PLUS_EXPR)\n+\t\t   || (code == PLUS_EXPR && TREE_CODE (in) == MINUS_EXPR)\n+\t\t   || (code == MINUS_EXPR\n+\t\t       && (TREE_CODE (in) == PLUS_EXPR\n+\t\t\t   || TREE_CODE (in) == POINTER_PLUS_EXPR)))))\n     {\n       tree op0 = TREE_OPERAND (in, 0);\n       tree op1 = TREE_OPERAND (in, 1);"}, {"sha": "414f27972bf773b50d1caa0eae9c006cf30d1fe5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb1bc604a852c38afd0df9d2f6a66a0e1a80db34/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb1bc604a852c38afd0df9d2f6a66a0e1a80db34/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bb1bc604a852c38afd0df9d2f6a66a0e1a80db34", "patch": "@@ -1,3 +1,8 @@\n+2017-04-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/78847\n+\t* g++.dg/tree-ssa/pr78847.C: New testcase.\n+\n 2017-04-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/80468"}, {"sha": "d5a83943804ecd6898fea545bf41ddb35c233e7c", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr78847.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb1bc604a852c38afd0df9d2f6a66a0e1a80db34/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr78847.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb1bc604a852c38afd0df9d2f6a66a0e1a80db34/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr78847.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr78847.C?ref=bb1bc604a852c38afd0df9d2f6a66a0e1a80db34", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target c++14 } */\n+/* { dg-options \"-O3 -fdump-tree-ldist\" } */\n+\n+#include <stddef.h>\n+#include <cstring>\n+#include <experimental/string_view>\n+\n+using string_view = std::experimental::string_view;\n+\n+class Foo {\n+    constexpr static size_t Length = 9;\n+    char ascii_[Length];\n+public:\n+    Foo();\n+    string_view view() const {\n+\treturn string_view(ascii_, Length);\n+    }\n+};\n+\n+void testWithLoopValue(const Foo foo, size_t ptr, char *buf_) {\n+    for (auto c : foo.view())\n+      buf_[ptr++] = c;\n+}\n+\n+/* { dg-final { scan-tree-dump \"memcpy\\[^\\n\\r\\]*, 9\\\\);\" \"ldist\" } } */"}]}