{"sha": "21070494d80ebf9586ecf2fe9a3c24d34329e4db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEwNzA0OTRkODBlYmY5NTg2ZWNmMmZlOWEzYzI0ZDM0MzI5ZTRkYg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2018-04-17T17:58:05Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-04-17T17:58:05Z"}, "message": "backtrace.c: Revert last two changes.\n\n\t* backtrace.c: Revert last two changes.  Don't call mmap\n\tdirectly.\n\nFrom-SVN: r259440", "tree": {"sha": "f60b3de730ae33dcb541cc3b57e9983738b331e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f60b3de730ae33dcb541cc3b57e9983738b331e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21070494d80ebf9586ecf2fe9a3c24d34329e4db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21070494d80ebf9586ecf2fe9a3c24d34329e4db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21070494d80ebf9586ecf2fe9a3c24d34329e4db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21070494d80ebf9586ecf2fe9a3c24d34329e4db/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c36af1b4da7efda503da001274ec514b06324a78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c36af1b4da7efda503da001274ec514b06324a78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c36af1b4da7efda503da001274ec514b06324a78"}], "stats": {"total": 50, "additions": 16, "deletions": 34}, "files": [{"sha": "08c06e5ebe1a107497d996336a89bca4be430101", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21070494d80ebf9586ecf2fe9a3c24d34329e4db/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21070494d80ebf9586ecf2fe9a3c24d34329e4db/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=21070494d80ebf9586ecf2fe9a3c24d34329e4db", "patch": "@@ -1,3 +1,8 @@\n+2018-04-17  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* backtrace.c: Revert last two changes.  Don't call mmap\n+\tdirectly.\n+\n 2018-04-17  Ian Lance Taylor  <iant@golang.org>\n \n \t* backtrace.c: Include backtrace-supported.h before checking"}, {"sha": "f8e3dc59d45039a037800231ddd8ad170a1dd5e6", "filename": "libbacktrace/backtrace.c", "status": "modified", "additions": 11, "deletions": 34, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21070494d80ebf9586ecf2fe9a3c24d34329e4db/libbacktrace%2Fbacktrace.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21070494d80ebf9586ecf2fe9a3c24d34329e4db/libbacktrace%2Fbacktrace.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fbacktrace.c?ref=21070494d80ebf9586ecf2fe9a3c24d34329e4db", "patch": "@@ -32,27 +32,12 @@ POSSIBILITY OF SUCH DAMAGE.  */\n \n #include \"config.h\"\n \n-#include <unistd.h>\n #include <sys/types.h>\n \n-#include \"backtrace-supported.h\"\n-\n-#if !BACKTRACE_USES_MALLOC\n-#include <sys/mman.h>\n-#endif\n-\n #include \"unwind.h\"\n #include \"backtrace.h\"\n #include \"internal.h\"\n \n-#ifndef MAP_ANONYMOUS\n-#define MAP_ANONYMOUS MAP_ANON\n-#endif\n-\n-#ifndef MAP_FAILED\n-#define MAP_FAILED ((void *)-1)\n-#endif\n-\n /* The main backtrace_full routine.  */\n \n /* Data passed through _Unwind_Backtrace.  */\n@@ -119,6 +104,7 @@ backtrace_full (struct backtrace_state *state, int skip,\n \t\tbacktrace_error_callback error_callback, void *data)\n {\n   struct backtrace_data bdata;\n+  void *p;\n \n   bdata.skip = skip + 1;\n   bdata.state = state;\n@@ -127,25 +113,16 @@ backtrace_full (struct backtrace_state *state, int skip,\n   bdata.data = data;\n   bdata.ret = 0;\n \n-#if !BACKTRACE_USES_MALLOC\n-  {\n-    size_t pagesize;\n-    void *page;\n-\n-    /* If we can't allocate any memory at all, don't try to produce\n-       file/line information.  */\n-    pagesize = getpagesize ();\n-    page = mmap (NULL, pagesize, PROT_READ | PROT_WRITE, \n-\t\t MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);\n-    if (page == MAP_FAILED)\n-      bdata.can_alloc = 0;\n-    else\n-      {\n-\tmunmap (page, pagesize);\n-\tbdata.can_alloc = 1;\n-      }\n-  }\n-#endif\n+  /* If we can't allocate any memory at all, don't try to produce\n+     file/line information.  */\n+  p = backtrace_alloc (state, 4096, NULL, NULL);\n+  if (p == NULL)\n+    bdata.can_alloc = 0;\n+  else\n+    {\n+      backtrace_free (state, p, 4096, NULL, NULL);\n+      bdata.can_alloc = 1;\n+    }\n \n   _Unwind_Backtrace (unwind, &bdata);\n   return bdata.ret;"}]}