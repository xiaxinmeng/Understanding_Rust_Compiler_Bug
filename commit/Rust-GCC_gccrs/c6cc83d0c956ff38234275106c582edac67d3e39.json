{"sha": "c6cc83d0c956ff38234275106c582edac67d3e39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZjYzgzZDBjOTU2ZmYzODIzNDI3NTEwNmM1ODJlZGFjNjdkM2UzOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-03-26T21:39:48Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-03-26T21:39:48Z"}, "message": "re PR c++/43509 ([C++0x] ICE in constructor_name_p, at cp/name-lookup.c:1809)\n\n\tPR c++/43509\n\t* parser.c (cp_parser_qualifying_entity): Do accept enum names in\n\tc++0x mode, but not other type-names.\n\nFrom-SVN: r157765", "tree": {"sha": "283a2f977dca6f87bfaacc7659ae3cafb65b8a44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/283a2f977dca6f87bfaacc7659ae3cafb65b8a44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6cc83d0c956ff38234275106c582edac67d3e39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6cc83d0c956ff38234275106c582edac67d3e39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6cc83d0c956ff38234275106c582edac67d3e39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6cc83d0c956ff38234275106c582edac67d3e39/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2155f963b3a8465593767a7fc189171e47350532", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2155f963b3a8465593767a7fc189171e47350532", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2155f963b3a8465593767a7fc189171e47350532"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "d790bfdaa092ddcf73f1c43e99509541b3f48e0e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6cc83d0c956ff38234275106c582edac67d3e39/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6cc83d0c956ff38234275106c582edac67d3e39/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c6cc83d0c956ff38234275106c582edac67d3e39", "patch": "@@ -1,3 +1,9 @@\n+2010-03-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/43509\n+\t* parser.c (cp_parser_qualifying_entity): Do accept enum names in\n+\tc++0x mode, but not other type-names.\n+\n 2010-03-26  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/43327"}, {"sha": "693d6cd692e19771697cbf53f45e4efb540ca700", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6cc83d0c956ff38234275106c582edac67d3e39/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6cc83d0c956ff38234275106c582edac67d3e39/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=c6cc83d0c956ff38234275106c582edac67d3e39", "patch": "@@ -4441,6 +4441,16 @@ cp_parser_qualifying_entity (cp_parser *parser,\n      \n       /* Parse a typedef-name or enum-name.  */\n       scope = cp_parser_nonclass_name (parser);\n+\n+      /* \"If the name found does not designate a namespace or a class,\n+\t enumeration, or dependent type, the program is ill-formed.\"\n+\n+         We cover classes and dependent types above and namespaces below,\n+         so this code is only looking for enums.  */\n+      if (!scope || TREE_CODE (scope) != TYPE_DECL\n+\t  || TREE_CODE (TREE_TYPE (scope)) != ENUMERAL_TYPE)\n+\tcp_parser_simulate_error (parser);\n+\n       successful_parse_p = cp_parser_parse_definitely (parser);\n     }\n   /* If that didn't work, try for a namespace-name.  */"}, {"sha": "3ed0e1c6a1f340a85f764b8e7b32c9fbccb7df28", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6cc83d0c956ff38234275106c582edac67d3e39/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6cc83d0c956ff38234275106c582edac67d3e39/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c6cc83d0c956ff38234275106c582edac67d3e39", "patch": "@@ -1,3 +1,8 @@\n+2010-03-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/43509\n+\t* g++.dg/cpp0x/parse1.C: New.\n+\n 2010-03-26  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/43524"}, {"sha": "41811853cd7137a5fccb96a2cbf55113b3e3e491", "filename": "gcc/testsuite/g++.dg/cpp0x/parse1.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6cc83d0c956ff38234275106c582edac67d3e39/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fparse1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6cc83d0c956ff38234275106c582edac67d3e39/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fparse1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fparse1.C?ref=c6cc83d0c956ff38234275106c582edac67d3e39", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/43509\n+// { dg-options \"-std=c++0x\" }\n+\n+typedef int B;\t\t\t// { dg-error \"\" }\n+B::B() {}\t\t\t// { dg-error \"\" }"}]}