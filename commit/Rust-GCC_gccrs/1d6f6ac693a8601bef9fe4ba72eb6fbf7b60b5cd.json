{"sha": "1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ2ZjZhYzY5M2E4NjAxYmVmOWZlNGJhNzJlYjZmYmY3YjYwYjVjZA==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-11-30T14:30:51Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-11-30T14:31:22Z"}, "message": "Fortran: With OpenACC, ignore OpenMP's cond comp sentinels\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/98011\n\t* scanner.c (skip_free_comments, skip_fixed_comments): If only\n\t-fopenacc but not -fopenmp is used, ignore OpenMP's conditional\n\tcompilation sentinels. Fix indentation, use 'else if' for readability.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/98011\n\t* gfortran.dg/goacc/sentinel-free-form.f95:\n\t* gfortran.dg/goacc-gomp/fixed-1.f: New test.\n\t* gfortran.dg/goacc-gomp/free-1.f90: New test.\n\t* gfortran.dg/goacc/fixed-5.f: New test.", "tree": {"sha": "bec2e4d4f4cfceba9cf8a2293efb0bd04496eae0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bec2e4d4f4cfceba9cf8a2293efb0bd04496eae0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4e7ea81d1369d4d6cb6d8e440aefb3407142e05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4e7ea81d1369d4d6cb6d8e440aefb3407142e05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4e7ea81d1369d4d6cb6d8e440aefb3407142e05"}], "stats": {"total": 184, "additions": 161, "deletions": 23}, "files": [{"sha": "304ae2d8d6a70f34e8ec15bdf9d345e5e167079b", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 11, "deletions": 21, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd", "patch": "@@ -899,21 +899,14 @@ skip_free_comments (void)\n \t\tif (next_char () == '$')\n \t\t  {\n \t\t    c = next_char ();\n-\t\t      if (c == 'a' || c == 'A')\n-\t\t\t{\n-\t\t\t  if (skip_free_oacc_sentinel (start, old_loc))\n-\t\t\t    return false;\n-\t\t\t  gfc_current_locus = old_loc;\n-\t\t\t  next_char();\n-\t\t\t  c = next_char();\n-\t\t\t}\n-\t\t      if (continue_flag || c == ' ' || c == '\\t')\n-\t\t\t{\n-\t\t\t  gfc_current_locus = old_loc;\n-\t\t\t  next_char();\n-\t\t\t  openacc_flag = 0;\n-\t\t\t  return true;\n-\t\t\t}\n+\t\t    if (c == 'a' || c == 'A')\n+\t\t      {\n+\t\t\tif (skip_free_oacc_sentinel (start, old_loc))\n+\t\t\t  return false;\n+\t\t\tgfc_current_locus = old_loc;\n+\t\t\tnext_char();\n+\t\t\tc = next_char();\n+\t\t      }\n \t\t  }\n \t\tgfc_current_locus = old_loc;\n \t      }\n@@ -1076,8 +1069,7 @@ skip_fixed_comments (void)\n \t\t}\n \t      gfc_current_locus = start;\n \t    }\n-\n-\t  if (flag_openacc && !(flag_openmp || flag_openmp_simd))\n+\t  else if (flag_openacc && !(flag_openmp || flag_openmp_simd))\n \t    {\n \t      if (next_char () == '$')\n \t\t{\n@@ -1087,13 +1079,10 @@ skip_fixed_comments (void)\n \t\t      if (skip_fixed_oacc_sentinel (&start))\n \t\t\treturn;\n \t\t    }\n-\t\t  else\n-\t\t    goto check_for_digits;\n \t\t}\n \t      gfc_current_locus = start;\n \t    }\n-\n-\t  if (flag_openacc || flag_openmp || flag_openmp_simd)\n+\t  else if (flag_openacc || flag_openmp || flag_openmp_simd)\n \t    {\n \t      if (next_char () == '$')\n \t\t{\n@@ -1120,6 +1109,7 @@ skip_fixed_comments (void)\n \t  gcc_unreachable ();\n check_for_digits:\n \t  {\n+\t    /* Required for OpenMP's conditional compilation sentinel. */\n \t    int digit_seen = 0;\n \n \t    for (col = 3; col < 6; col++, c = next_char ())"}, {"sha": "b6bab4ce90206dafa30cdbea535af015be80e380", "filename": "gcc/testsuite/gfortran.dg/goacc-gomp/fixed-1.f", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc-gomp%2Ffixed-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc-gomp%2Ffixed-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc-gomp%2Ffixed-1.f?ref=1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd", "patch": "@@ -0,0 +1,81 @@\n+! { dg-additional-options \"-fdump-tree-original -Wunused-variable\" }\n+      implicit none\n+      integer :: a,b,c,d,e,f,g,h,i,j,k,ll\n+\n+c$bogus\n+!$bogus\n+*$bogus\n+\n+c$ bogus\n+!$ bogus\n+*$ bogus\n+\n+c$a23 bogus\n+!$ a  bogus\n+*$12a bogus\n+\n+! The following should be parsed as OpenMP conditional sentinel\n+! If not, expect a unused-variable warning\n+\n+c$    a = 1\n+!$    b = 2\n+*$    c = 3\n+\n+c$ 1  d = 4\n+!$ 22 e = 5\n+*$34  f = 6\n+\n+c$    g = \n+c$   *7\n+!$ 2  h =\n+*$   & 8\n+*$ 3  i\n+!$   & = 9\n+\n+c$    j\n+*$   &= \n+c$   *10\n+!$ 5  k\n+*$   * =\n+c$   & 1\n+*$   & 1\n+*$9 9 ll\n+!$   & =\n+!$   *  12\n+\n+c$ bogus\n+!$ bogus\n+*$ bogus\n+\n+c$bogus\n+!$bogus\n+*$bogus\n+\n+c$ acc bogus\n+!$ acc bogus\n+*$ acc bogus\n+\n+c$ omp bogus\n+!$ omp bogus\n+*$ omp bogus\n+      end\n+\n+!{ dg-final { scan-tree-dump-times \"a = 1;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"b = 2;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"c = 3;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"d = 4;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"e = 5;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"f = 6;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"g = 7;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"h = 8;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"i = 9;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"j = 10;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"k = 11;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"ll = 12;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"__label_000001:;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"__label_000022:;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"__label_000034:;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"__label_000002:;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"__label_000003:;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"__label_000005:;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"__label_000099:;\" 1 \"original\" } }"}, {"sha": "0d6f2b2e3a6c44dccc2ed8902d1d76a829af065e", "filename": "gcc/testsuite/gfortran.dg/goacc-gomp/free-1.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc-gomp%2Ffree-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc-gomp%2Ffree-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc-gomp%2Ffree-1.f90?ref=1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd", "patch": "@@ -0,0 +1,34 @@\n+! { dg-additional-options \"-fdump-tree-original -Wunused-variable\" }\n+implicit none\n+integer :: a,b,c,d,e,f,g,h\n+\n+!$bogus\n+\n+    !$bogus\n+!$& bogus\n+   !$& bogus\n+\n+!$    a = 1\n+!$ b = 2\n+!$ c = &\n+!$3\n+\n+!$ d = &\n+!$&4\n+\n+  !$    e = 5\n+ !$ f = 6\n+   !$ g = &\n+ !$7\n+\n+ !$ h = &\n+!$&8\n+      end\n+\n+!{ dg-final { scan-tree-dump-times \"a = 1;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"b = 2;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"c = 3;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"d = 4;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"e = 5;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"f = 6;\" 1 \"original\" } }\n+!{ dg-final { scan-tree-dump-times \"g = 7;\" 1 \"original\" } }"}, {"sha": "ab51b218d801f8b44001d3135884994b0b0dc690", "filename": "gcc/testsuite/gfortran.dg/goacc/fixed-5.f", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Ffixed-5.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Ffixed-5.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Ffixed-5.f?ref=1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd", "patch": "@@ -0,0 +1,30 @@\n+! Check that OpenMP conditional compilations sentinels ('!$ ') are ignored\n+\n+c$ bogus\n+!$ bogus\n+*$ bogus\n+c$    bogus\n+!$    bogus\n+*$    bogus\n+\n+c$a23 bogus\n+!$ a  bogus\n+*$12a bogus\n+\n+c$ 1  bogus\n+!$ 22 bogus\n+*$34  bogus\n+\n+c$bogus\n+!$bogus\n+*$bogus\n+\n+c$ acc bogus\n+!$ acc bogus\n+*$ acc bogus\n+\n+c$ acc bogus\n+!$ acc bogus\n+*$ acc bogus\n+\n+      end"}, {"sha": "00dac667ef1f3fd8b1d6f91b508aff61efd01261", "filename": "gcc/testsuite/gfortran.dg/goacc/sentinel-free-form.f95", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fsentinel-free-form.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fsentinel-free-form.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fsentinel-free-form.f95?ref=1d6f6ac693a8601bef9fe4ba72eb6fbf7b60b5cd", "patch": "@@ -10,12 +10,15 @@ program test\n   x = 0.0 !$acc parallel ! comment\n   ! sentinel must appear as a single word\n   ! $acc parallel ! comment\n-  !$ acc parallel ! { dg-error \"Unclassifiable statement\" }\n+\n+  ! note that '!$ ' is OpenMP's conditional compilation sentinel\n+  !$ acc ignored_due_to_space  ! comment\n+\n   ! directive lines must have space after sentinel\n   !$accparallel ! { dg-warning \"followed by a space\" }\n   do i = 1,10\n     x = x + 0.3\n   enddo\n   !$acc end parallel ! { dg-error \"Unexpected\" }\n   print *, x\n-end\n\\ No newline at end of file\n+end"}]}