{"sha": "e650a5685c92e4e8c54b649e77e351ba06bcb3f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY1MGE1Njg1YzkyZTRlOGM1NGI2NDllNzdlMzUxYmEwNmJjYjNmMw==", "commit": {"author": {"name": "Kirill Yukhin", "email": "kirill.yukhin@intel.com", "date": "2014-10-23T11:50:19Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-10-23T11:50:19Z"}, "message": "AVX. Fix block absq emit for non AVX-512 targets.\n\ngcc/\n\t* config/i386/sse.md (define_mode_iterator VI1248_AVX512VL_AVX512BW):\n\tNew.\n\t(define_insn \"*abs<mode>2\"): Use VI1248_AVX512VL_AVX512BW mode\n\titerator.\n\t(define_expand \"abs<mode>2\"): Ditto.\n\ngcc/testsuite/\n\t* gcc.target/i386/pr63600.c: New.\n\nFrom-SVN: r216591", "tree": {"sha": "3322cbba392f7e60b0c51a1a16fb17ebe9db057b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3322cbba392f7e60b0c51a1a16fb17ebe9db057b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e650a5685c92e4e8c54b649e77e351ba06bcb3f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e650a5685c92e4e8c54b649e77e351ba06bcb3f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e650a5685c92e4e8c54b649e77e351ba06bcb3f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e650a5685c92e4e8c54b649e77e351ba06bcb3f3/comments", "author": null, "committer": null, "parents": [{"sha": "c1b7a563e061a32a0c8531989ee205e4d2fbb3e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1b7a563e061a32a0c8531989ee205e4d2fbb3e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1b7a563e061a32a0c8531989ee205e4d2fbb3e6"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "1f4a72b032732624b1c62268d5777ef4aa41ff71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e650a5685c92e4e8c54b649e77e351ba06bcb3f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e650a5685c92e4e8c54b649e77e351ba06bcb3f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e650a5685c92e4e8c54b649e77e351ba06bcb3f3", "patch": "@@ -1,3 +1,11 @@\n+2014-10-23  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\n+\t* config/i386/sse.md (define_mode_iterator VI1248_AVX512VL_AVX512BW):\n+\tNew.\n+\t(define_insn \"*abs<mode>2\"): Use VI1248_AVX512VL_AVX512BW mode\n+\titerator.\n+\t(define_expand \"abs<mode>2\"): Ditto.\n+\n 2014-10-23  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \t* tree-core.h (tree_var_decl): Extend `function_code' field"}, {"sha": "5986d4b2361d84611e430b50cb303a0003dc3097", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e650a5685c92e4e8c54b649e77e351ba06bcb3f3/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e650a5685c92e4e8c54b649e77e351ba06bcb3f3/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=e650a5685c92e4e8c54b649e77e351ba06bcb3f3", "patch": "@@ -13785,10 +13785,18 @@\n    (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n    (set_attr \"mode\" \"DI\")])\n \n+;; Mode iterator to handle singularity w/ absence of V2DI and V4DI\n+;; modes for abs instruction on pre AVX-512 targets.\n+(define_mode_iterator VI1248_AVX512VL_AVX512BW\n+  [(V64QI \"TARGET_AVX512BW\") (V32QI \"TARGET_AVX2\") V16QI\n+   (V32HI \"TARGET_AVX512BW\") (V16HI \"TARGET_AVX2\") V8HI\n+   (V16SI \"TARGET_AVX512F\") (V8SI \"TARGET_AVX2\") V4SI\n+   (V8DI \"TARGET_AVX512F\") (V4DI \"TARGET_AVX512VL\") (V2DI \"TARGET_AVX512VL\")])\n+\n (define_insn \"*abs<mode>2\"\n-  [(set (match_operand:VI_AVX2 0 \"register_operand\" \"=v\")\n-\t(abs:VI_AVX2\n-\t  (match_operand:VI_AVX2 1 \"nonimmediate_operand\" \"vm\")))]\n+  [(set (match_operand:VI1248_AVX512VL_AVX512BW 0 \"register_operand\" \"=v\")\n+\t(abs:VI1248_AVX512VL_AVX512BW\n+\t  (match_operand:VI1248_AVX512VL_AVX512BW 1 \"nonimmediate_operand\" \"vm\")))]\n   \"TARGET_SSSE3\"\n   \"%vpabs<ssemodesuffix>\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sselog1\")\n@@ -13824,9 +13832,9 @@\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_expand \"abs<mode>2\"\n-  [(set (match_operand:VI_AVX2 0 \"register_operand\")\n-\t(abs:VI_AVX2\n-\t  (match_operand:VI_AVX2 1 \"nonimmediate_operand\")))]\n+  [(set (match_operand:VI1248_AVX512VL_AVX512BW 0 \"register_operand\")\n+\t(abs:VI1248_AVX512VL_AVX512BW\n+\t  (match_operand:VI1248_AVX512VL_AVX512BW 1 \"nonimmediate_operand\")))]\n   \"TARGET_SSE2\"\n {\n   if (!TARGET_SSSE3)"}, {"sha": "a3f1308ebc4981b5e636fbb879a1f43b71382bdf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e650a5685c92e4e8c54b649e77e351ba06bcb3f3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e650a5685c92e4e8c54b649e77e351ba06bcb3f3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e650a5685c92e4e8c54b649e77e351ba06bcb3f3", "patch": "@@ -1,3 +1,7 @@\n+2014-10-10  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\n+\t* gcc.target/i386/pr63600.c: New.\n+\n 2014-10-23  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gcc.dg/ipa/ipa-icf-21.c: Add -msse2 to dg-options."}, {"sha": "da7ea503f06b5a0682ede52104d4574e28cf7b2b", "filename": "gcc/testsuite/gcc.target/i386/pr63600.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e650a5685c92e4e8c54b649e77e351ba06bcb3f3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr63600.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e650a5685c92e4e8c54b649e77e351ba06bcb3f3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr63600.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr63600.c?ref=e650a5685c92e4e8c54b649e77e351ba06bcb3f3", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -msse\" } */\n+\n+long *a, b;\n+int c;\n+void\n+foo (void)\n+{\n+  for (c = 0; c < 64; c++)\n+    a[c] = b >= 0 ? b : -b;\n+}"}]}