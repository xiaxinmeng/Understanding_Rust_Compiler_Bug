{"sha": "e333a61815b7ced28c4bc1337040b123c54c488f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMzM2E2MTgxNWI3Y2VkMjhjNGJjMTMzNzA0MGIxMjNjNTRjNDg4Zg==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2004-02-09T07:41:55Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2004-02-09T07:41:55Z"}, "message": "parse.y (resolve_qualified_expression_name): In case of inaccessible class don't use not_accessible_field_error...\n\n\n\t* parse.y (resolve_qualified_expression_name):  In case of inaccessible\n\tclass don't use not_accessible_field_error, which can get confused.\n\nFrom-SVN: r77525", "tree": {"sha": "a53656fb149e55e2429cbfc5c7bd4f74f72648b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a53656fb149e55e2429cbfc5c7bd4f74f72648b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e333a61815b7ced28c4bc1337040b123c54c488f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e333a61815b7ced28c4bc1337040b123c54c488f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e333a61815b7ced28c4bc1337040b123c54c488f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e333a61815b7ced28c4bc1337040b123c54c488f/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f19e9e4d1645adcc0182a92bda294f45021419be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f19e9e4d1645adcc0182a92bda294f45021419be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f19e9e4d1645adcc0182a92bda294f45021419be"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "2132bc4c319cfa67b0655ee87f6acb7363344268", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e333a61815b7ced28c4bc1337040b123c54c488f/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e333a61815b7ced28c4bc1337040b123c54c488f/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=e333a61815b7ced28c4bc1337040b123c54c488f", "patch": "@@ -1,3 +1,8 @@\n+2004-02-08  Per Bothner  <per@bothner.com>\n+\n+\t* parse.y (resolve_qualified_expression_name):  In case of inaccessible\n+\tclass don't use not_accessible_field_error, which can get confused.\n+\n 2004-02-05  Kelley Cook  <kcook@gcc.gnu.org>\n \n \tMake-lang.in (po-generated):  Delete."}, {"sha": "390b8cdaefd5bf87b0bb6f3afca3a0d68583c825", "filename": "gcc/java/parse.y", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e333a61815b7ced28c4bc1337040b123c54c488f/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e333a61815b7ced28c4bc1337040b123c54c488f/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=e333a61815b7ced28c4bc1337040b123c54c488f", "patch": "@@ -9869,7 +9869,14 @@ resolve_qualified_expression_name (tree wfl, tree *found_decl,\n \t    }\n \n \t  if (not_accessible_p (TREE_TYPE (decl), decl, type, 0))\n- \t    return not_accessible_field_error (qual_wfl, decl);\n+\t    {\n+\t      parse_error_context\n+\t\t(qual_wfl, \"Can't access %s class '%s' from '%s'\",\n+\t\t java_accstring_lookup (get_access_flags_from_decl (decl)),\n+\t\t IDENTIFIER_POINTER (DECL_NAME (decl)),\n+\t\t IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (current_class))));\n+\t      return 1;\n+\t    }\n \t  check_deprecation (qual_wfl, decl);\n \n \t  type = TREE_TYPE (decl);"}]}