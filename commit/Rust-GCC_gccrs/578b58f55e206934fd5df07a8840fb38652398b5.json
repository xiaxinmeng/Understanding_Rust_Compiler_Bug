{"sha": "578b58f55e206934fd5df07a8840fb38652398b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc4YjU4ZjU1ZTIwNjkzNGZkNWRmMDdhODg0MGZiMzg2NTIzOThiNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-14T21:01:32Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-14T21:01:32Z"}, "message": "(clrstrsi): Correct check for constant size.\n\n(allocate_stack{,_worker}): New patterns.\n\nFrom-SVN: r12708", "tree": {"sha": "c64a2b042cfb427594aff4f2ec3e1c73d39d4979", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c64a2b042cfb427594aff4f2ec3e1c73d39d4979"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/578b58f55e206934fd5df07a8840fb38652398b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/578b58f55e206934fd5df07a8840fb38652398b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/578b58f55e206934fd5df07a8840fb38652398b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/578b58f55e206934fd5df07a8840fb38652398b5/comments", "author": null, "committer": null, "parents": [{"sha": "22371ff356e90dd06b1bdbe097e246e3b63d7426", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22371ff356e90dd06b1bdbe097e246e3b63d7426", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22371ff356e90dd06b1bdbe097e246e3b63d7426"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "a1480fbe60472576fd54610eaf73fd9901537925", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/578b58f55e206934fd5df07a8840fb38652398b5/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/578b58f55e206934fd5df07a8840fb38652398b5/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=578b58f55e206934fd5df07a8840fb38652398b5", "patch": "@@ -58,6 +58,8 @@\n ;;    operand 0 is the argument for `sin'.\n ;; 2  This is a `cos' operation.  The mode of the UNSPEC is MODE_FLOAT.\n ;;    operand 0 is the argument for `cos'.\n+;; 3  This is part of a `stack probe' operation.  The mode of the UNSPEC is \n+;;    always SImode.  operand 0 is the size of the stack allocation.\n \f\n ;; This shadows the processor_type enumeration, so changes must be made\n ;; to i386.h at the same time.\n@@ -6183,7 +6185,7 @@\n {\n   rtx addr0, addr1;\n \n-  if (GET_CODE (operands[2]) != CONST_INT)\n+  if (GET_CODE (operands[1]) != CONST_INT)\n     FAIL;\n \n   addr0 = copy_to_mode_reg (Pmode, XEXP (operands[0], 0));\n@@ -7048,3 +7050,29 @@\n   \"(TARGET_USE_Q_REG && optimize > 1)\"\n   \"* return output_strlen_unroll (operands);\"\n )\n+\n+(define_insn \"allocate_stack_worker\"\n+  [(unspec:SI [(match_operand:SI 0 \"register_operand\" \"a\")] 3)\n+   (set (reg:SI 7) (minus:SI (reg:SI 7) (match_dup 0)))\n+   (clobber (match_dup 0))]\n+  \"TARGET_STACK_PROBE\"\n+  \"* return AS1(call,__alloca);\")\n+\n+(define_expand \"allocate_stack\"\n+  [(set (reg:SI 7)\n+\t(minus:SI (reg:SI 7) (match_operand:SI 0 \"general_operand\" \"\")))]\n+  \"TARGET_STACK_PROBE\"\n+  \"\n+{\n+#ifdef CHECK_STACK_LIMIT\n+  if (GET_CODE (operands[0]) == CONST_INT\n+      && INTVAL (operands[0]) < CHECK_STACK_LIMIT)\n+    emit_insn (gen_subsi3 (stack_pointer_rtx, stack_pointer_rtx,\n+\t\t\t   operands[0]));\n+  else \n+#endif\n+    emit_insn (gen_allocate_stack_worker (copy_to_mode_reg (SImode,\n+\t\t\t\t\t\t\t    operands[0])));\n+\n+  DONE;\n+}\")"}]}