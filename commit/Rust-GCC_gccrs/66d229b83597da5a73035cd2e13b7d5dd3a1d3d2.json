{"sha": "66d229b83597da5a73035cd2e13b7d5dd3a1d3d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZkMjI5YjgzNTk3ZGE1YTczMDM1Y2QyZTEzYjdkNWRkM2ExZDNkMg==", "commit": {"author": {"name": "Dorit Nuzman", "email": "dorit@il.ibm.com", "date": "2007-08-19T09:32:22Z"}, "committer": {"name": "Dorit Nuzman", "email": "dorit@gcc.gnu.org", "date": "2007-08-19T09:32:22Z"}, "message": "pr20122.c: Fix test (now vectorized, with versioning for aliasing).\n\n        * testsuite/gcc.dg/vect/pr20122.c: Fix test (now vectorized, with\n        versioning for aliasing).\n        * testsuite/gcc.dg/vect/vect-35.c: Likewise.\n\n        * testsuite/gcc.dg/vect/vect-iv-6.c: Fix test for vect_no_align targets.\n        * testsuite/gcc.dg/vect/vect-multitypes-11.c: Likewise.\n\nFrom-SVN: r127621", "tree": {"sha": "d4fb3401d356ae553c84bf84bf7b416d4b6de771", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4fb3401d356ae553c84bf84bf7b416d4b6de771"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66d229b83597da5a73035cd2e13b7d5dd3a1d3d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66d229b83597da5a73035cd2e13b7d5dd3a1d3d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66d229b83597da5a73035cd2e13b7d5dd3a1d3d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66d229b83597da5a73035cd2e13b7d5dd3a1d3d2/comments", "author": null, "committer": null, "parents": [{"sha": "500f8f7b5fcd927a28d69c1af2427f4225e56a15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/500f8f7b5fcd927a28d69c1af2427f4225e56a15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/500f8f7b5fcd927a28d69c1af2427f4225e56a15"}], "stats": {"total": 35, "additions": 23, "deletions": 12}, "files": [{"sha": "61f0352224d02a310fbc4d62a0f5c83af3316567", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d229b83597da5a73035cd2e13b7d5dd3a1d3d2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d229b83597da5a73035cd2e13b7d5dd3a1d3d2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=66d229b83597da5a73035cd2e13b7d5dd3a1d3d2", "patch": "@@ -1,3 +1,12 @@\n+2007-08-19  Dorit Nuzman  <dorit@il.ibm.com>\n+\n+\t* testsuite/gcc.dg/vect/pr20122.c: Fix test (now vectorized, with\n+\tversioning for aliasing).\n+\t* testsuite/gcc.dg/vect/vect-35.c: Likewise.\n+\n+\t* testsuite/gcc.dg/vect/vect-iv-6.c: Fix test for vect_no_align targets.\n+\t* testsuite/gcc.dg/vect/vect-multitypes-11.c: Likewise.\n+\n 2007-08-18  Tom Tromey  <tromey@redhat.com>\n \n \tPR preprocessor/32974:"}, {"sha": "05948c7fc8127bd85196556918c6941005ac55c7", "filename": "gcc/testsuite/gcc.dg/vect/pr20122.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d229b83597da5a73035cd2e13b7d5dd3a1d3d2/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr20122.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d229b83597da5a73035cd2e13b7d5dd3a1d3d2/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr20122.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr20122.c?ref=66d229b83597da5a73035cd2e13b7d5dd3a1d3d2", "patch": "@@ -7,7 +7,8 @@ short Kernshort[24] __attribute__ ((__aligned__(16)));\n static void VecBug(short Kernel[8][24]) __attribute__((noinline));\n static void VecBug2(short Kernel[8][24]) __attribute__((noinline));\n \n-/* Not vectorizable: Kernel may alias Kernshort - a global array.  */\n+/* Kernel may alias Kernshort - a global array.\n+   Use versioning for aliasing.  */\n static void VecBug(short Kernel[8][24])\n {\n   int k,i;\n@@ -48,7 +49,8 @@ int main (int argc, char **argv)\n     return 0;\n }\n \n-\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 2 \"vect\" } } */\n-/*  { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 1 \"vect\" { target vect_no_align } } } */\n+/* The loops in VecBug and VecBug2 require versioning for alignment.\n+   The loop in main is aligned.  */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 3 \"vect\" } } */\n+/*  { dg-final { scan-tree-dump-times \"Alignment of access forced using versioning\" 2 \"vect\" { target vect_no_align } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "f4392cd539fb5fcd22db7d75f784e6b638b8a944", "filename": "gcc/testsuite/gcc.dg/vect/vect-35.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d229b83597da5a73035cd2e13b7d5dd3a1d3d2/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-35.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d229b83597da5a73035cd2e13b7d5dd3a1d3d2/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-35.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-35.c?ref=66d229b83597da5a73035cd2e13b7d5dd3a1d3d2", "patch": "@@ -8,8 +8,8 @@\n int main1 ()\n {  \n   union {\n-    char a[N] __attribute__ ((__aligned__(16)));\n-    char b[N] __attribute__ ((__aligned__(16)));\n+    unsigned char a[N] __attribute__ ((__aligned__(16)));\n+    unsigned char b[N] __attribute__ ((__aligned__(16)));\n   } s;\n   int i;\n \n@@ -19,8 +19,8 @@ int main1 ()\n       s.b[i] = 3*i;\n     }\n \n-  /* Can't vectorize - dependence analysis fails cause s.a and s.b may\n-     overlap.  */\n+  /* Dependence analysis fails cause s.a and s.b may overlap.\n+     Use runtime aliasing test with versioning.  */\n   for (i = 0; i < N; i++)\n     {\n       s.a[i] = s.b[i] + 1;\n@@ -44,6 +44,6 @@ int main (void)\n } \n \n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"can't determine dependence between\" 1 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "6f02575b0239493061afaad5e7b322672b9e6c8b", "filename": "gcc/testsuite/gcc.dg/vect/vect-iv-6.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d229b83597da5a73035cd2e13b7d5dd3a1d3d2/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-iv-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d229b83597da5a73035cd2e13b7d5dd3a1d3d2/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-iv-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-iv-6.c?ref=66d229b83597da5a73035cd2e13b7d5dd3a1d3d2", "patch": "@@ -17,7 +17,8 @@ int main1 (int X)\n       by the loop-header phi (as opposed to the other uses of k that are\n       defined in the loop), in which case we exercise the fact that we\n       reuse the same vector def-use-cycle for both uses. \n-      Peeling to align the store is also applied.  */\n+      Peeling to align the store is also applied. This peeling also aligns\n+      the load (as they have the same misalignment).  */\n \n    do { \n \tarr2[i+1] = 2*k;\n@@ -45,5 +46,5 @@ int main (void)\n   return main1 (3);\n } \n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_align } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "81b2003ba974b947edde8247110e59d604df9eee", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-11.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66d229b83597da5a73035cd2e13b7d5dd3a1d3d2/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66d229b83597da5a73035cd2e13b7d5dd3a1d3d2/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-11.c?ref=66d229b83597da5a73035cd2e13b7d5dd3a1d3d2", "patch": "@@ -40,6 +40,5 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 2 \"vect\" { target vect_unpack } } } */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { ! vect_unpack } } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { target { vect_no_align && vect_unpack } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n "}]}