{"sha": "3ac3da71e2fa29444d43da5240c4f1fac3dc00d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FjM2RhNzFlMmZhMjk0NDRkNDNkYTUyNDBjNGYxZmFjM2RjMDBkMw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1998-06-15T16:32:00Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1998-06-15T16:32:00Z"}, "message": "Reorder tests in last change for speed\n\nFrom-SVN: r20513", "tree": {"sha": "cf4c49e6105cf3213849fa997601031f401757ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf4c49e6105cf3213849fa997601031f401757ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ac3da71e2fa29444d43da5240c4f1fac3dc00d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ac3da71e2fa29444d43da5240c4f1fac3dc00d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ac3da71e2fa29444d43da5240c4f1fac3dc00d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ac3da71e2fa29444d43da5240c4f1fac3dc00d3/comments", "author": null, "committer": null, "parents": [{"sha": "ddc8bed24878b3cf903c8c7cc3c753548701f23f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddc8bed24878b3cf903c8c7cc3c753548701f23f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddc8bed24878b3cf903c8c7cc3c753548701f23f"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "9dd583378955945d2cbdc16c7b25a2875c95c362", "filename": "gcc/regmove.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ac3da71e2fa29444d43da5240c4f1fac3dc00d3/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ac3da71e2fa29444d43da5240c4f1fac3dc00d3/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=3ac3da71e2fa29444d43da5240c4f1fac3dc00d3", "patch": "@@ -560,11 +560,12 @@ copy_src_to_dest (insn, src, dest, loop_depth)\n      parameter when there is no frame pointer that is not allocated a register.\n      For now, we just reject them, rather than incrementing the live length.  */\n \n-  if (GET_CODE (src) == REG && GET_CODE (dest) == REG\n+  if (GET_CODE (src) == REG\n+      && REG_LIVE_LENGTH (REGNO (src)) > 0\n+      && GET_CODE (dest) == REG\n+      && REG_LIVE_LENGTH (REGNO (dest)) > 0\n       && (set = single_set (insn)) != NULL_RTX\n       && !reg_mentioned_p (dest, SET_SRC (set))\n-      && REG_LIVE_LENGTH (REGNO (dest)) > 0\n-      && REG_LIVE_LENGTH (REGNO (src)) > 0\n       && validate_replace_rtx (src, dest, insn))\n     {\n       /* Generate the src->dest move.  */"}]}