{"sha": "b96c434c39312a059e6a062b29993ec7d0a7da57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk2YzQzNGMzOTMxMmEwNTllNmEwNjJiMjk5OTNlYzdkMGE3ZGE1Nw==", "commit": {"author": {"name": "Marek Michalkiewicz", "email": "marekm@amelek.gda.pl", "date": "2002-02-28T15:23:54Z"}, "committer": {"name": "Marek Michalkiewicz", "email": "marekm@gcc.gnu.org", "date": "2002-02-28T15:23:54Z"}, "message": "avr.c (avr_hard_regno_mode_ok): Do not allow r29 which may overwrite the high byte of the frame pointer.\n\n\n\t* config/avr/avr.c (avr_hard_regno_mode_ok): Do not allow r29\n\twhich may overwrite the high byte of the frame pointer.\n\nFrom-SVN: r50138", "tree": {"sha": "7612b4a19ed635c60b4578757807b5910ad2005c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7612b4a19ed635c60b4578757807b5910ad2005c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b96c434c39312a059e6a062b29993ec7d0a7da57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b96c434c39312a059e6a062b29993ec7d0a7da57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b96c434c39312a059e6a062b29993ec7d0a7da57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b96c434c39312a059e6a062b29993ec7d0a7da57/comments", "author": null, "committer": null, "parents": [{"sha": "9b420a6a58ea7c42ad045a2ab3d8c036c9a2375a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b420a6a58ea7c42ad045a2ab3d8c036c9a2375a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b420a6a58ea7c42ad045a2ab3d8c036c9a2375a"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "8e896c5bc0cbef73c177d92e759f97e8020daa67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96c434c39312a059e6a062b29993ec7d0a7da57/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96c434c39312a059e6a062b29993ec7d0a7da57/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b96c434c39312a059e6a062b29993ec7d0a7da57", "patch": "@@ -1,3 +1,8 @@\n+2002-02-28  Marek Michalkiewicz  <marekm@amelek.gda.pl>\n+\n+\t* config/avr/avr.c (avr_hard_regno_mode_ok): Do not allow r29\n+\twhich may overwrite the high byte of the frame pointer.\n+\n 2002-02-28  Bo Thorsen  <bo@suse.de>\n \n \t* config/i386/linux64.h (LINK_SPEC): Fix 32/64 bit compilation."}, {"sha": "8e64bcb74aaed250e14701aa02ac43bd63a10188", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96c434c39312a059e6a062b29993ec7d0a7da57/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96c434c39312a059e6a062b29993ec7d0a7da57/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=b96c434c39312a059e6a062b29993ec7d0a7da57", "patch": "@@ -5210,6 +5210,13 @@ avr_hard_regno_mode_ok (regno, mode)\n      int regno;\n      enum machine_mode mode;\n {\n+  /* Bug workaround: recog.c (peep2_find_free_register) and probably\n+     a few other places assume that the frame pointer is a single hard\n+     register, so r29 may be allocated and overwrite the high byte of\n+     the frame pointer.  Do not allow any value to start in r29.  */\n+  if (regno == REG_Y + 1)\n+    return 0;\n+\n   if (mode == QImode)\n     return 1;\n   /*  if (regno < 24 && !AVR_ENHANCED)"}]}