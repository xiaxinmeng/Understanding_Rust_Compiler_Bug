{"sha": "6ea90eb7102cf3354bd6fd4288dbf64c6ba73652", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVhOTBlYjcxMDJjZjMzNTRiZDZmZDQyODhkYmY2NGM2YmE3MzY1Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-11-18T12:33:38Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-11-18T12:33:38Z"}, "message": "re PR target/38130 (__builtin_alloca (vs IRA?)  testsuite failures on  mingw32)\n\n\tPR target/38130\n\t* config/i386/i386.md (allocate_stack_worker_32,\n\tallocate_stack_worker_64): Don't use match_dup between input and\n\toutput operand.\n\t(allocate_stack): Adjust gen_stack_worker_{32,64} caller.\n\t* config/i386/i386.c (ix86_expand_prologue): Likewise.\n\nFrom-SVN: r141965", "tree": {"sha": "07ecff427e4719a1637fbff42c41577e57b2f515", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07ecff427e4719a1637fbff42c41577e57b2f515"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ea90eb7102cf3354bd6fd4288dbf64c6ba73652", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ea90eb7102cf3354bd6fd4288dbf64c6ba73652", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ea90eb7102cf3354bd6fd4288dbf64c6ba73652", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ea90eb7102cf3354bd6fd4288dbf64c6ba73652/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d74b4b00786ae456928033b68ce195794e0bf021", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d74b4b00786ae456928033b68ce195794e0bf021", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d74b4b00786ae456928033b68ce195794e0bf021"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "08f63104473f25d96c674a6ef9654537fdd94647", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea90eb7102cf3354bd6fd4288dbf64c6ba73652/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea90eb7102cf3354bd6fd4288dbf64c6ba73652/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ea90eb7102cf3354bd6fd4288dbf64c6ba73652", "patch": "@@ -1,3 +1,12 @@\n+2008-11-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/38130\n+\t* config/i386/i386.md (allocate_stack_worker_32,\n+\tallocate_stack_worker_64): Don't use match_dup between input and\n+\toutput operand.\n+\t(allocate_stack): Adjust gen_stack_worker_{32,64} caller.\n+\t* config/i386/i386.c (ix86_expand_prologue): Likewise.\n+\n 2008-11-18  Kai Tietz  <kai.tietz@onevision.com>\n \n \t* config/i386/t-cygming (SHLIB_LINK): Make sure that $(SHLIB_MAP).def"}, {"sha": "f84f326cef7fa01f6d8f694a22cd70665f040ceb", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea90eb7102cf3354bd6fd4288dbf64c6ba73652/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea90eb7102cf3354bd6fd4288dbf64c6ba73652/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=6ea90eb7102cf3354bd6fd4288dbf64c6ba73652", "patch": "@@ -7989,9 +7989,9 @@ ix86_expand_prologue (void)\n       emit_move_insn (eax, GEN_INT (allocate));\n \n       if (TARGET_64BIT)\n-\tinsn = gen_allocate_stack_worker_64 (eax);\n+\tinsn = gen_allocate_stack_worker_64 (eax, eax);\n       else\n-\tinsn = gen_allocate_stack_worker_32 (eax);\n+\tinsn = gen_allocate_stack_worker_32 (eax, eax);\n       insn = emit_insn (insn);\n       RTX_FRAME_RELATED_P (insn) = 1;\n       t = gen_rtx_PLUS (Pmode, stack_pointer_rtx, GEN_INT (-allocate));"}, {"sha": "d49e49a3eb41fe9112f1a4eef426fb55b0b6db2d", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea90eb7102cf3354bd6fd4288dbf64c6ba73652/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea90eb7102cf3354bd6fd4288dbf64c6ba73652/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=6ea90eb7102cf3354bd6fd4288dbf64c6ba73652", "patch": "@@ -20196,19 +20196,21 @@\n    (set_attr \"mode\" \"DI\")])\n \n (define_insn \"allocate_stack_worker_32\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"+a\")\n-\t(unspec_volatile:SI [(match_dup 0)] UNSPECV_STACK_PROBE))\n-   (set (reg:SI SP_REG) (minus:SI (reg:SI SP_REG) (match_dup 0)))\n+  [(set (match_operand:SI 0 \"register_operand\" \"=a\")\n+\t(unspec_volatile:SI [(match_operand:SI 1 \"register_operand\" \"0\")]\n+\t\t\t    UNSPECV_STACK_PROBE))\n+   (set (reg:SI SP_REG) (minus:SI (reg:SI SP_REG) (match_dup 1)))\n    (clobber (reg:CC FLAGS_REG))]\n   \"!TARGET_64BIT && TARGET_STACK_PROBE\"\n   \"call\\t___chkstk\"\n   [(set_attr \"type\" \"multi\")\n    (set_attr \"length\" \"5\")])\n \n (define_insn \"allocate_stack_worker_64\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"+a\")\n-\t(unspec_volatile:DI [(match_dup 0)] UNSPECV_STACK_PROBE))\n-   (set (reg:DI SP_REG) (minus:DI (reg:DI SP_REG) (match_dup 0)))\n+  [(set (match_operand:DI 0 \"register_operand\" \"=a\")\n+\t(unspec_volatile:DI [(match_operand:DI 1 \"register_operand\" \"0\")]\n+\t\t\t    UNSPECV_STACK_PROBE))\n+   (set (reg:DI SP_REG) (minus:DI (reg:DI SP_REG) (match_dup 1)))\n    (clobber (reg:DI R10_REG))\n    (clobber (reg:DI R11_REG))\n    (clobber (reg:CC FLAGS_REG))]\n@@ -20240,9 +20242,9 @@\n     {\n       x = copy_to_mode_reg (Pmode, operands[1]);\n       if (TARGET_64BIT)\n-\tx = gen_allocate_stack_worker_64 (x);\n+\tx = gen_allocate_stack_worker_64 (x, x);\n       else\n-\tx = gen_allocate_stack_worker_32 (x);\n+\tx = gen_allocate_stack_worker_32 (x, x);\n       emit_insn (x);\n     }\n "}]}