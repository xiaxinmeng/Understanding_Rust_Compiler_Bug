{"sha": "102a9b43207e6fb7d427e23382a1f9b148829b34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAyYTliNDMyMDdlNmZiN2Q0MjdlMjMzODJhMWY5YjE0ODgyOWIzNA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2015-12-22T03:09:08Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-12-22T03:09:08Z"}, "message": "dbgcnt.def (dom_unreachable_edges): New debug counter.\n\n\t* dbgcnt.def (dom_unreachable_edges): New debug counter.\n\t* tree-ssa-dom.c: Include dbgcnt.h\n\t(dom_opt_dom_walker::before_dom_children): Handle the new counter.\n\nFrom-SVN: r231896", "tree": {"sha": "b34f61f7c00e0684439297efcda0a5a8e496b585", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b34f61f7c00e0684439297efcda0a5a8e496b585"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/102a9b43207e6fb7d427e23382a1f9b148829b34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/102a9b43207e6fb7d427e23382a1f9b148829b34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/102a9b43207e6fb7d427e23382a1f9b148829b34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/102a9b43207e6fb7d427e23382a1f9b148829b34/comments", "author": null, "committer": null, "parents": [{"sha": "399f5feb92e4c588ec230d4a0b8ac9b0fa95d7ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/399f5feb92e4c588ec230d4a0b8ac9b0fa95d7ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/399f5feb92e4c588ec230d4a0b8ac9b0fa95d7ed"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "9e3ab5aaf92df2b0e6adf810881fa0e5993136f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/102a9b43207e6fb7d427e23382a1f9b148829b34/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/102a9b43207e6fb7d427e23382a1f9b148829b34/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=102a9b43207e6fb7d427e23382a1f9b148829b34", "patch": "@@ -1,3 +1,9 @@\n+2015-12-21  Jeff Law  <law@redhat.com>\n+\n+\t* dbgcnt.def (dom_unreachable_edges): New debug counter.\n+\t* tree-ssa-dom.c: Include dbgcnt.h\n+\t(dom_opt_dom_walker::before_dom_children): Handle the new counter.\n+\n 2015-12-21  Andrew Pinski <apinski@cavium.com>\n \n \t* config/aarch64/aarch64-option-extensions.def (LSE): Change"}, {"sha": "65f18fbfdf4582f11068f6ea2206bd84cee05e05", "filename": "gcc/dbgcnt.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/102a9b43207e6fb7d427e23382a1f9b148829b34/gcc%2Fdbgcnt.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/102a9b43207e6fb7d427e23382a1f9b148829b34/gcc%2Fdbgcnt.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbgcnt.def?ref=102a9b43207e6fb7d427e23382a1f9b148829b34", "patch": "@@ -192,3 +192,4 @@ DEBUG_COUNTER (treepre_insert)\n DEBUG_COUNTER (tree_sra)\n DEBUG_COUNTER (vect_loop)\n DEBUG_COUNTER (vect_slp)\n+DEBUG_COUNTER (dom_unreachable_edges)"}, {"sha": "1b689a05126ebbbd45d485e6539e7e3059b8bc33", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/102a9b43207e6fb7d427e23382a1f9b148829b34/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/102a9b43207e6fb7d427e23382a1f9b148829b34/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=102a9b43207e6fb7d427e23382a1f9b148829b34", "patch": "@@ -44,6 +44,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa-dom.h\"\n #include \"gimplify.h\"\n #include \"tree-cfgcleanup.h\"\n+#include \"dbgcnt.h\"\n \n /* This file implements optimizations on the dominator tree.  */\n \n@@ -1369,6 +1370,9 @@ dom_opt_dom_walker::before_dom_children (basic_block bb)\n   /* Now prepare to process dominated blocks.  */\n   record_edge_info (bb);\n   cprop_into_successor_phis (bb, m_const_and_copies);\n+  if (taken_edge && !dbg_cnt (dom_unreachable_edges))\n+    return NULL;\n+\n   return taken_edge;\n }\n "}]}