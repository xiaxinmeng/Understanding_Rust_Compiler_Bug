{"sha": "9fc6a27b5c6ea2c775646c4474b9084da76b1764", "node_id": "C_kwDOANBUbNoAKDlmYzZhMjdiNWM2ZWEyYzc3NTY0NmM0NDc0YjkwODRkYTc2YjE3NjQ", "commit": {"author": {"name": "liushuyu", "email": "liushuyu011@gmail.com", "date": "2022-08-02T08:17:48Z"}, "committer": {"name": "liushuyu", "email": "liushuyu011@gmail.com", "date": "2022-08-02T08:19:18Z"}, "message": "expand: correctly handles non-macro nodes ...\n\n... when expanding macros recursively to avoid improperly stripping them\n\nSigned-off-by: Zixing Liu <liushuyu011@gmail.com>", "tree": {"sha": "463678546ddc7a6b59194619e70d326fc3558568", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/463678546ddc7a6b59194619e70d326fc3558568"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fc6a27b5c6ea2c775646c4474b9084da76b1764", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE6x/rcKrl3aOwzUVJI9HORTRBlDcFAmLo3g8ACgkQI9HORTRB\nlDdx2w/8CBupthU9Ii2UesG8nSSDf3q2t6sZmzAXQupGH2pUmjGBbPft0mJHEIQ1\n79QIVe8pL8vn6+K1m7E8Us7kK2gsyGMaokks0oiQbCLCIZObxtV899843l/MSK1h\nsw46FdThCzH9WwGtpiXhpJpehpz161oA0NAhvYhrSw6AsIUYnS2yQ49ppI2pGOjc\nXVKrXePL2Fdoerdz2GKU7lRuypNZ4NNxRJWerxvxmUvOk9t+UXRD73lI+3vGsqOk\nBaurt/nWYj5sVKbCk0oUhWBSpZyDsl634Qd/1R4tOwZS4N0flsdo7gJXSO/TOben\n5y/tlyLp70kpTrVReuweaCEykwfY715e6VSVxIFTFk2ntZ+S1E1qzqfCQNTKO1qD\n/iwJir4ojmy1kXDtdgbpLxFHjbhFmDNr3hPR6UmYWX+V01BCo3RsJ13seGsMGpTp\n54RiF0YOYxBVHLpIhv2YLCdkh0G6Fwel47UQuXzuKtvmJeP1uI+GkWjxZ5SkkeYh\nEQgVFLM8GwBGh/GAkOfaFpl0yBMeWZgBTu5mMm2uVv19UNWoo15afDrz1lKqmzY5\n5VynU+pyVwBX25DN5gLu8lCAMa9dBkg+AqDhI+JRaQn9F0w3BfwyVFbQfmyTSDo6\nlLUQtFPz7hGERXwFXTB4ucXIfj6/ftTqfBH8Q/jSsWiMN1dyN0U=\n=+oC4\n-----END PGP SIGNATURE-----", "payload": "tree 463678546ddc7a6b59194619e70d326fc3558568\nparent 8809ee8c6a5621e830f3cfe66c381f986e63c7f2\nauthor liushuyu <liushuyu011@gmail.com> 1659428268 -0600\ncommitter liushuyu <liushuyu011@gmail.com> 1659428358 -0600\n\nexpand: correctly handles non-macro nodes ...\n\n... when expanding macros recursively to avoid improperly stripping them\n\nSigned-off-by: Zixing Liu <liushuyu011@gmail.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fc6a27b5c6ea2c775646c4474b9084da76b1764", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fc6a27b5c6ea2c775646c4474b9084da76b1764", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fc6a27b5c6ea2c775646c4474b9084da76b1764/comments", "author": {"login": "liushuyu", "id": 6829345, "node_id": "MDQ6VXNlcjY4MjkzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/6829345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liushuyu", "html_url": "https://github.com/liushuyu", "followers_url": "https://api.github.com/users/liushuyu/followers", "following_url": "https://api.github.com/users/liushuyu/following{/other_user}", "gists_url": "https://api.github.com/users/liushuyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/liushuyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liushuyu/subscriptions", "organizations_url": "https://api.github.com/users/liushuyu/orgs", "repos_url": "https://api.github.com/users/liushuyu/repos", "events_url": "https://api.github.com/users/liushuyu/events{/privacy}", "received_events_url": "https://api.github.com/users/liushuyu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "liushuyu", "id": 6829345, "node_id": "MDQ6VXNlcjY4MjkzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/6829345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liushuyu", "html_url": "https://github.com/liushuyu", "followers_url": "https://api.github.com/users/liushuyu/followers", "following_url": "https://api.github.com/users/liushuyu/following{/other_user}", "gists_url": "https://api.github.com/users/liushuyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/liushuyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liushuyu/subscriptions", "organizations_url": "https://api.github.com/users/liushuyu/orgs", "repos_url": "https://api.github.com/users/liushuyu/repos", "events_url": "https://api.github.com/users/liushuyu/events{/privacy}", "received_events_url": "https://api.github.com/users/liushuyu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8809ee8c6a5621e830f3cfe66c381f986e63c7f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8809ee8c6a5621e830f3cfe66c381f986e63c7f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8809ee8c6a5621e830f3cfe66c381f986e63c7f2"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "94d6702ecb8de14337304d513c5e54a6b1fc8202", "filename": "gcc/rust/expand/rust-macro-expand.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc6a27b5c6ea2c775646c4474b9084da76b1764/gcc%2Frust%2Fexpand%2Frust-macro-expand.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc6a27b5c6ea2c775646c4474b9084da76b1764/gcc%2Frust%2Fexpand%2Frust-macro-expand.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-expand.h?ref=9fc6a27b5c6ea2c775646c4474b9084da76b1764", "patch": "@@ -321,12 +321,28 @@ struct MacroExpander\n   AST::ASTFragment take_expanded_fragment (AST::ASTVisitor &vis)\n   {\n     AST::ASTFragment old_fragment = std::move (expanded_fragment);\n+    auto accumulator = std::vector<AST::SingleASTNode> ();\n     expanded_fragment = AST::ASTFragment::create_error ();\n \n     for (auto &node : old_fragment.get_nodes ())\n       {\n \texpansion_depth++;\n \tnode.accept_vis (vis);\n+\t// we'll decide the next move according to the outcome of the macro\n+\t// expansion\n+\tif (expanded_fragment.is_error ())\n+\t  accumulator.push_back (node); // if expansion fails, there might be a\n+\t\t\t\t\t// non-macro expression we need to keep\n+\telse\n+\t  {\n+\t    // if expansion succeeded, then we need to merge the fragment with\n+\t    // the contents in the accumulator, so that our final expansion\n+\t    // result will contain non-macro nodes as it should\n+\t    auto new_nodes = expanded_fragment.get_nodes ();\n+\t    std::move (new_nodes.begin (), new_nodes.end (),\n+\t\t       std::back_inserter (accumulator));\n+\t    expanded_fragment = AST::ASTFragment (accumulator);\n+\t  }\n \texpansion_depth--;\n       }\n "}, {"sha": "756d374e25c083f7c17d721ece660741ac5c9b28", "filename": "gcc/testsuite/rust/compile/macro-issue1403.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc6a27b5c6ea2c775646c4474b9084da76b1764/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro-issue1403.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc6a27b5c6ea2c775646c4474b9084da76b1764/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro-issue1403.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro-issue1403.rs?ref=9fc6a27b5c6ea2c775646c4474b9084da76b1764", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-O1 -gdwarf-5 -dA -w\" }\n+macro_rules! stmt {\n+    ($s:stmt) => {\n+        $s\n+    };\n+    ($s:stmt, $($ss:stmt),*) => {\n+        $s;\n+        stmt!($($ss),*);\n+    };\n+}\n+\n+pub fn test() -> i32 {\n+    stmt!(\n+        let a = 1\n+    );\n+    stmt!(\n+        let b = 2,\n+        let c = 3,\n+        let d = 4,\n+        let e = 5,\n+        let f = b + c + d + e\n+    );\n+    // { dg-final { scan-assembler \"14\" } }\n+    f\n+}\n+\n+fn main() {\n+    let _ = test();\n+}\n+"}]}