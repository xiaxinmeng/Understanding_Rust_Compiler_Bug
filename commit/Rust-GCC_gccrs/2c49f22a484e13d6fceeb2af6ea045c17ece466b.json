{"sha": "2c49f22a484e13d6fceeb2af6ea045c17ece466b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM0OWYyMmE0ODRlMTNkNmZjZWViMmFmNmVhMDQ1YzE3ZWNlNDY2Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-11-09T15:09:12Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-11-09T15:09:12Z"}, "message": "tree-ssa-dom.c (canonicalize_comparison): Remove.\n\n2016-11-09  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-dom.c (canonicalize_comparison): Remove.\n\t(optimize_stmt): Remove redundant pre-propagation canonicalization\n\tof comparison operand order.\n\nFrom-SVN: r242003", "tree": {"sha": "e0f78d4e95fc767f706361bf8e00ac809f803d3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0f78d4e95fc767f706361bf8e00ac809f803d3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c49f22a484e13d6fceeb2af6ea045c17ece466b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c49f22a484e13d6fceeb2af6ea045c17ece466b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c49f22a484e13d6fceeb2af6ea045c17ece466b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c49f22a484e13d6fceeb2af6ea045c17ece466b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "68c937083c9bea6f91357e60e39db22750908506", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c937083c9bea6f91357e60e39db22750908506", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68c937083c9bea6f91357e60e39db22750908506"}], "stats": {"total": 52, "additions": 6, "deletions": 46}, "files": [{"sha": "4868c8fa610f0c9fb1baa7b8476c55321bbc07d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c49f22a484e13d6fceeb2af6ea045c17ece466b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c49f22a484e13d6fceeb2af6ea045c17ece466b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c49f22a484e13d6fceeb2af6ea045c17ece466b", "patch": "@@ -1,3 +1,9 @@\n+2016-11-09  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-dom.c (canonicalize_comparison): Remove.\n+\t(optimize_stmt): Remove redundant pre-propagation canonicalization\n+\tof comparison operand order.\n+\n 2016-11-09  Martin Liska  <mliska@suse.cz>\n \n \t* fold-const-call.c (fold_const_call): Fix the folding."}, {"sha": "85689f3d93f009e34653e7867e794f9fd179ebe0", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c49f22a484e13d6fceeb2af6ea045c17ece466b/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c49f22a484e13d6fceeb2af6ea045c17ece466b/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=2c49f22a484e13d6fceeb2af6ea045c17ece466b", "patch": "@@ -753,49 +753,6 @@ make_pass_dominator (gcc::context *ctxt)\n }\n \n \n-/* Given a conditional statement CONDSTMT, convert the\n-   condition to a canonical form.  */\n-\n-static void\n-canonicalize_comparison (gcond *condstmt)\n-{\n-  tree op0;\n-  tree op1;\n-  enum tree_code code;\n-\n-  gcc_assert (gimple_code (condstmt) == GIMPLE_COND);\n-\n-  op0 = gimple_cond_lhs (condstmt);\n-  op1 = gimple_cond_rhs (condstmt);\n-\n-  code = gimple_cond_code (condstmt);\n-\n-  /* If it would be profitable to swap the operands, then do so to\n-     canonicalize the statement, enabling better optimization.\n-\n-     By placing canonicalization of such expressions here we\n-     transparently keep statements in canonical form, even\n-     when the statement is modified.  */\n-  if (tree_swap_operands_p (op0, op1, false))\n-    {\n-      /* For relationals we need to swap the operands\n-\t and change the code.  */\n-      if (code == LT_EXPR\n-\t  || code == GT_EXPR\n-\t  || code == LE_EXPR\n-\t  || code == GE_EXPR)\n-\t{\n-          code = swap_tree_comparison (code);\n-\n-          gimple_cond_set_code (condstmt, code);\n-          gimple_cond_set_lhs (condstmt, op1);\n-          gimple_cond_set_rhs (condstmt, op0);\n-\n-          update_stmt (condstmt);\n-\t}\n-    }\n-}\n-\n /* A trivial wrapper so that we can present the generic jump\n    threading code with a simple API for simplifying statements.  */\n static tree\n@@ -1789,9 +1746,6 @@ optimize_stmt (basic_block bb, gimple_stmt_iterator si,\n       print_gimple_stmt (dump_file, stmt, 0, TDF_SLIM);\n     }\n \n-  if (gimple_code (stmt) == GIMPLE_COND)\n-    canonicalize_comparison (as_a <gcond *> (stmt));\n-\n   update_stmt_if_modified (stmt);\n   opt_stats.num_stmts++;\n "}]}