{"sha": "409edcca331296b53842c50d3b789e1b1ccc05e5", "node_id": "C_kwDOANBUbNoAKDQwOWVkY2NhMzMxMjk2YjUzODQyYzUwZDNiNzg5ZTFiMWNjYzA1ZTU", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2022-04-26T20:12:58Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2022-04-27T17:09:05Z"}, "message": "c++: enum in generic lambda at global scope [PR105398]\n\nWe crash compiling this test since r11-7993 which changed\nlookup_template_class_1 so that we only call tsubst_enum when\n\n  !uses_template_parms (current_nonlambda_scope ())\n\nBut here current_nonlambda_scope () is the global NAMESPACE_DECL ::, which\ndoesn't have a type, therefore is considered type-dependent.  So we don't\ncall tsubst_enum, and crash in tsubst_copy/CONST_DECL because we didn't\nfind the e1 enumerator.\n\nI don't think any namespace can depend on any template parameter, so\nthis patch tweaks uses_template_parms.\n\n\tPR c++/105398\n\ngcc/cp/ChangeLog:\n\n\t* pt.cc (uses_template_parms): Return false for any NAMESPACE_DECL.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp1y/lambda-generic-enum2.C: New test.", "tree": {"sha": "864786d1a89ee3d1955c8753cd57f333f10d28a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/864786d1a89ee3d1955c8753cd57f333f10d28a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/409edcca331296b53842c50d3b789e1b1ccc05e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/409edcca331296b53842c50d3b789e1b1ccc05e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/409edcca331296b53842c50d3b789e1b1ccc05e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/409edcca331296b53842c50d3b789e1b1ccc05e5/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "948e8e401023f6c3153f6d0c449bc5c2899ee7b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/948e8e401023f6c3153f6d0c449bc5c2899ee7b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/948e8e401023f6c3153f6d0c449bc5c2899ee7b7"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "e785c5db14208257f572159da5330e89f5ccc7aa", "filename": "gcc/cp/pt.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/409edcca331296b53842c50d3b789e1b1ccc05e5/gcc%2Fcp%2Fpt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/409edcca331296b53842c50d3b789e1b1ccc05e5/gcc%2Fcp%2Fpt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.cc?ref=409edcca331296b53842c50d3b789e1b1ccc05e5", "patch": "@@ -10905,7 +10905,7 @@ uses_template_parms (tree t)\n \t\t   || uses_template_parms (TREE_CHAIN (t)));\n   else if (TREE_CODE (t) == TYPE_DECL)\n     dependent_p = dependent_type_p (TREE_TYPE (t));\n-  else if (t == error_mark_node)\n+  else if (t == error_mark_node || TREE_CODE (t) == NAMESPACE_DECL)\n     dependent_p = false;\n   else\n     dependent_p = instantiation_dependent_expression_p (t);"}, {"sha": "77cf0bb9d02ea2401630b06dde0691ef8c3326d6", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-generic-enum2.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/409edcca331296b53842c50d3b789e1b1ccc05e5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-enum2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/409edcca331296b53842c50d3b789e1b1ccc05e5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-enum2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-enum2.C?ref=409edcca331296b53842c50d3b789e1b1ccc05e5", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/105398\n+// { dg-do compile { target c++14 } }\n+\n+auto f = [](auto &&m) {\n+    enum E { _,e3,e2,e1,C4,C3,C2,C1 };\n+    static constexpr int x_coeffs[3][4] = {\n+        {e1,C2,C3,C4},\n+        {e2,C1,C3,C4},\n+        {e3,C1,C2,C4},\n+    };\n+};\n+\n+int main() {\n+    f(0);\n+}"}]}