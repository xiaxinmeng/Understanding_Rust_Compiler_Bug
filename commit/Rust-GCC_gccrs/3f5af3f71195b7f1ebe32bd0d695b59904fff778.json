{"sha": "3f5af3f71195b7f1ebe32bd0d695b59904fff778", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y1YWYzZjcxMTk1YjdmMWViZTMyYmQwZDY5NWI1OTkwNGZmZjc3OA==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-04-16T20:45:15Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-04-17T17:58:52Z"}, "message": "c++: Hard error with tentative parse of declaration [PR88754]\n\nIn the testcase for this PR, we try to parse the statement\n\n  A(value<0>());\n\nfirst tentatively as a declaration (with a parenthesized declarator), and during\nthis tentative parse we end up issuing a hard error from\ncp_parser_check_template_parameters about its invalidness as a declaration.\n\nRather than issuing a hard error, it seems we should instead simulate an error\nsince we're parsing tentatively.  This would then allow cp_parser_statement to\nrecover and successfully parse the statement as an expression-statement instead.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/88754\n\t* parser.c (cp_parser_check_template_parameters): Before issuing a hard\n\terror, first try simulating an error instead.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/88754\n\t* g++.dg/parse/ambig10.C: New test.", "tree": {"sha": "8496bacd99f361bf77fcf1a966edf35a0c2663b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8496bacd99f361bf77fcf1a966edf35a0c2663b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f5af3f71195b7f1ebe32bd0d695b59904fff778", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f5af3f71195b7f1ebe32bd0d695b59904fff778", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f5af3f71195b7f1ebe32bd0d695b59904fff778", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f5af3f71195b7f1ebe32bd0d695b59904fff778/comments", "author": null, "committer": null, "parents": [{"sha": "2298af0800b292f028298c1eaec42fd3033c4b9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2298af0800b292f028298c1eaec42fd3033c4b9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2298af0800b292f028298c1eaec42fd3033c4b9b"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "465f29090f4c93555d7ba82ff82d394ba30deaa2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f5af3f71195b7f1ebe32bd0d695b59904fff778/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f5af3f71195b7f1ebe32bd0d695b59904fff778/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3f5af3f71195b7f1ebe32bd0d695b59904fff778", "patch": "@@ -1,3 +1,9 @@\n+2020-04-17  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/88754\n+\t* parser.c (cp_parser_check_template_parameters): Before issuing a hard\n+\terror, first try simulating an error instead.\n+\n 2020-04-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR other/94629"}, {"sha": "d2f3f853cb410166cac262fea0ea3f99aced853d", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f5af3f71195b7f1ebe32bd0d695b59904fff778/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f5af3f71195b7f1ebe32bd0d695b59904fff778/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=3f5af3f71195b7f1ebe32bd0d695b59904fff778", "patch": "@@ -28530,6 +28530,10 @@ cp_parser_check_template_parameters (cp_parser* parser,\n   if (!template_id_p\n       && parser->num_template_parameter_lists == num_templates + 1)\n     return true;\n+\n+  if (cp_parser_simulate_error (parser))\n+    return false;\n+\n   /* If there are more template classes than parameter lists, we have\n      something like:\n "}, {"sha": "b80e7da1c829b91379c2c74609d7730c13ef5760", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f5af3f71195b7f1ebe32bd0d695b59904fff778/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f5af3f71195b7f1ebe32bd0d695b59904fff778/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3f5af3f71195b7f1ebe32bd0d695b59904fff778", "patch": "@@ -1,3 +1,8 @@\n+2020-04-17  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/88754\n+\t* g++.dg/parse/ambig10.C: New test.\n+\n 2020-04-17  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/94090"}, {"sha": "42b04b169234d8f6a03dfa96846ceb9457b4fb05", "filename": "gcc/testsuite/g++.dg/parse/ambig10.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f5af3f71195b7f1ebe32bd0d695b59904fff778/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f5af3f71195b7f1ebe32bd0d695b59904fff778/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig10.C?ref=3f5af3f71195b7f1ebe32bd0d695b59904fff778", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/88754\n+// { dg-do compile }\n+\n+struct A\n+{\n+  A(int);\n+  void foo();\n+};\n+\n+template<int N> int value() { return N; }\n+\n+void bar()\n+{\n+  A(value<0>()).foo();\n+  A(value<0>());\n+  (A(value<0>())).foo();\n+\n+  A value<0>; // { dg-error \"invalid declaration\" }\n+  A value<0>(); // { dg-error \"invalid declaration\" }\n+}"}]}