{"sha": "c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzcwY2Y0ZjhlYjViZjg2MjNlMGY4OWVlZjZhYWJmMzA4ZWYwNGMxYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-07-04T10:41:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-07-04T10:41:23Z"}, "message": "[multiple changes]\n\n2016-07-04  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* freeze.adb, ghost.adb, sem_ch13.adb: Minor reformatting.\n\n2016-07-04  Pascal Obry  <obry@adacore.com>\n\n\t* g-forstr.ads: More documentation for the Formatted_String\n\tsupport.\n\n2016-07-04  Justin Squirek  <squirek@adacore.com>\n\n\t* sem_ch7.adb (Install_Parent_Private_Declarations): When\n\tinstantiating a child unit, do not install private declaration of\n\ta non-generic ancestor of the generic that is also an ancestor\n\tof the current unit: its private part will be installed when\n\tprivate part of ancestor itself is analyzed.\n\n2016-07-04  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Instantiate_Object): In SPARK mode add a guard\n\tto verify that the actual is an object reference before checking\n\tfor volatility.\n\t(Check_Generic_Child_Unit): Prevent cascaded errors when prefix\n\tis illegal.\n\nFrom-SVN: r237969", "tree": {"sha": "6a188b38ec6a6d1cceaa5cfec8b67421cf83d596", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a188b38ec6a6d1cceaa5cfec8b67421cf83d596"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b/comments", "author": null, "committer": null, "parents": [{"sha": "d4b56371aab8d056fc3ad7d1aa4d3f76f0e839d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4b56371aab8d056fc3ad7d1aa4d3f76f0e839d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4b56371aab8d056fc3ad7d1aa4d3f76f0e839d1"}], "stats": {"total": 142, "additions": 96, "deletions": 46}, "files": [{"sha": "c0f7ff767f624eb48e63fbb6be8e033ed6c2ee83", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b", "patch": "@@ -1,3 +1,28 @@\n+2016-07-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* freeze.adb, ghost.adb, sem_ch13.adb: Minor reformatting.\n+\n+2016-07-04  Pascal Obry  <obry@adacore.com>\n+\n+\t* g-forstr.ads: More documentation for the Formatted_String\n+\tsupport.\n+\n+2016-07-04  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sem_ch7.adb (Install_Parent_Private_Declarations): When\n+\tinstantiating a child unit, do not install private declaration of\n+\ta non-generic ancestor of the generic that is also an ancestor\n+\tof the current unit: its private part will be installed when\n+\tprivate part of ancestor itself is analyzed.\n+\n+2016-07-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Instantiate_Object): In SPARK mode add a guard\n+\tto verify that the actual is an object reference before checking\n+\tfor volatility.\n+\t(Check_Generic_Child_Unit): Prevent cascaded errors when prefix\n+\tis illegal.\n+\n 2016-07-04  Gary Dismukes  <dismukes@adacore.com>\n \n \t* sem_ch12.ads, freeze.adb: Minor reformatting and typo fixes."}, {"sha": "3d6dd18e2abf5742d95c421340fd06be2f368a3f", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 31, "deletions": 28, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b", "patch": "@@ -3561,32 +3561,11 @@ package body Freeze is\n          Junk : Boolean;\n          pragma Warnings (Off, Junk);\n \n-         Rec_Pushed : Boolean := False;\n-         --  Set True if the record type scope Rec has been pushed on the scope\n-         --  stack. Needed for the analysis of delayed aspects specified to the\n-         --  components of Rec.\n-\n-         SSO_ADC : Node_Id;\n-         --  Scalar_Storage_Order attribute definition clause for the record\n-\n-         Unplaced_Component : Boolean := False;\n-         --  Set True if we find at least one component with no component\n-         --  clause (used to warn about useless Pack pragmas).\n-\n-         Placed_Component : Boolean := False;\n-         --  Set True if we find at least one component with a component\n-         --  clause (used to warn about useless Bit_Order pragmas, and also\n-         --  to detect cases where Implicit_Packing may have an effect).\n-\n          Aliased_Component : Boolean := False;\n          --  Set True if we find at least one component which is aliased. This\n          --  is used to prevent Implicit_Packing of the record, since packing\n          --  cannot modify the size of alignment of an aliased component.\n \n-         SSO_ADC_Component : Boolean := False;\n-         --  Set True if we find at least one component whose type has a\n-         --  Scalar_Storage_Order attribute definition clause.\n-\n          All_Elem_Components : Boolean := True;\n          --  Set False if we encounter a component of a composite type\n \n@@ -3601,10 +3580,31 @@ package body Freeze is\n          --  Accumulates total Esize values of all elementary components. Used\n          --  for processing of Implicit_Packing.\n \n+         Placed_Component : Boolean := False;\n+         --  Set True if we find at least one component with a component\n+         --  clause (used to warn about useless Bit_Order pragmas, and also\n+         --  to detect cases where Implicit_Packing may have an effect).\n+\n+         Rec_Pushed : Boolean := False;\n+         --  Set True if the record type scope Rec has been pushed on the scope\n+         --  stack. Needed for the analysis of delayed aspects specified to the\n+         --  components of Rec.\n+\n          Sized_Component_Total_RM_Size : Uint := Uint_0;\n          --  Accumulates total RM_Size values of all sized components. Used\n          --  for processing of Implicit_Packing.\n \n+         SSO_ADC : Node_Id;\n+         --  Scalar_Storage_Order attribute definition clause for the record\n+\n+         SSO_ADC_Component : Boolean := False;\n+         --  Set True if we find at least one component whose type has a\n+         --  Scalar_Storage_Order attribute definition clause.\n+\n+         Unplaced_Component : Boolean := False;\n+         --  Set True if we find at least one component with no component\n+         --  clause (used to warn about useless Pack pragmas).\n+\n          function Check_Allocator (N : Node_Id) return Node_Id;\n          --  If N is an allocator, possibly wrapped in one or more level of\n          --  qualified expression(s), return the inner allocator node, else\n@@ -4419,10 +4419,12 @@ package body Freeze is\n            --  packing is required for it, as we are sure in this case that\n            --  the back end cannot do the expected layout without packing.\n \n-           and then ((All_Elem_Components\n-                       and then RM_Size (Rec) < Elem_Component_Total_Esize)\n-                     or else (not All_Elem_Components\n-                               and then not All_Storage_Unit_Components))\n+           and then\n+              ((All_Elem_Components\n+                 and then RM_Size (Rec) < Elem_Component_Total_Esize)\n+             or else\n+               (not All_Elem_Components\n+                 and then not All_Storage_Unit_Components))\n \n            --  And the total RM size cannot be greater than the specified size\n            --  since otherwise packing will not get us where we have to be.\n@@ -5461,20 +5463,21 @@ package body Freeze is\n                      --  the RM_Size of the component type.\n \n                      if RM_Size (E) = Num_Elmts * Rsiz then\n+\n                         --  For implicit packing mode, just set the component\n                         --  size and Freeze_Array_Type will do the rest.\n \n                         if Implicit_Packing then\n                            Set_Component_Size (Btyp, Rsiz);\n \n-                           --  Otherwise give an error message\n+                        --  Otherwise give an error message\n \n                         else\n                            Error_Msg_NE\n                              (\"size given for& too small\", SZ, E);\n                            Error_Msg_N -- CODEFIX\n-                             (\"\\use explicit pragma Pack \"\n-                              & \"or use pragma Implicit_Packing\", SZ);\n+                             (\"\\use explicit pragma Pack or use pragma \"\n+                              & \"Implicit_Packing\", SZ);\n                         end if;\n                      end if;\n                   end if;"}, {"sha": "88856a35b3a7556bb00609a4bf27aeb4d83d3a0d", "filename": "gcc/ada/g-forstr.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b/gcc%2Fada%2Fg-forstr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b/gcc%2Fada%2Fg-forstr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-forstr.ads?ref=c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b", "patch": "@@ -144,7 +144,12 @@ package GNAT.Formatted_String is\n    use Ada;\n \n    type Formatted_String (<>) is private;\n-   --  A format string as defined for printf routine\n+   --  A format string as defined for printf routine. This string is the\n+   --  actual format for all the parameters added with the \"&\" routines below.\n+   --  Note that a Formatted_String object can't be reused as it serves as\n+   --  recipient for the final result. That is, each use of \"&\" will build\n+   --  incrementally the final result string which can be retrieved with\n+   --  the \"-\" routine below.\n \n    Format_Error : exception;\n    --  Raised for every mismatch between the parameter and the expected format"}, {"sha": "3d3d67c995cd37f28383e448f31616af9f950855", "filename": "gcc/ada/ghost.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b/gcc%2Fada%2Fghost.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b/gcc%2Fada%2Fghost.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fghost.adb?ref=c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b", "patch": "@@ -1177,6 +1177,8 @@ package body Ghost is\n             --  A freeze node for an ignored ghost entity must be pruned as\n             --  well, to prevent meaningless references in the back end.\n \n+            --  ??? the freeze node itself should be ignored ghost\n+\n             elsif Nkind (N) = N_Freeze_Entity\n               and then Is_Ignored_Ghost_Entity (Entity (N))\n             then"}, {"sha": "3648146445a1b46796730328b561b1e96954d8f3", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b", "patch": "@@ -6695,17 +6695,23 @@ package body Sem_Ch12 is\n \n       elsif Nkind (Gen_Id) = N_Expanded_Name then\n \n-         --  Entity already present, analyze prefix, whose meaning may be\n-         --  an instance in the current context. If it is an instance of\n-         --  a relative within another, the proper parent may still have\n-         --  to be installed, if they are not of the same generation.\n+         --  Entity already present, analyze prefix, whose meaning may be an\n+         --  instance in the current context. If it is an instance of a\n+         --  relative within another, the proper parent may still have to be\n+         --  installed, if they are not of the same generation.\n \n          Analyze (Prefix (Gen_Id));\n \n-         --  In the unlikely case that a local declaration hides the name\n-         --  of the parent package, locate it on the homonym chain. If the\n-         --  context is an instance of the parent, the renaming entity is\n-         --  flagged as such.\n+         --  Prevent cascaded errors\n+\n+         if Etype (Prefix (Gen_Id)) = Any_Type then\n+            return;\n+         end if;\n+\n+         --  In the unlikely case that a local declaration hides the name of\n+         --  the parent package, locate it on the homonym chain. If the context\n+         --  is an instance of the parent, the renaming entity is flagged as\n+         --  such.\n \n          Inst_Par := Entity (Prefix (Gen_Id));\n          while Present (Inst_Par)\n@@ -10681,10 +10687,11 @@ package body Sem_Ch12 is\n       --  An effectively volatile object cannot be used as an actual in a\n       --  generic instantiation (SPARK RM 7.1.3(7)). The following check is\n       --  relevant only when SPARK_Mode is on as it is not a standard Ada\n-      --  legality rule.\n+      --  legality rule, and also verifies that the actual is an object.\n \n       if SPARK_Mode = On\n         and then Present (Actual)\n+        and then Is_Object_Reference (Actual)\n         and then Is_Effectively_Volatile_Object (Actual)\n       then\n          Error_Msg_N"}, {"sha": "163f8d68d1188a6d4f79aa76cdcb5e0401470fba", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b", "patch": "@@ -12049,15 +12049,14 @@ package body Sem_Ch13 is\n       Subp_Decl :=\n         Make_Subprogram_Renaming_Declaration (Loc,\n           Specification => Build_Spec,\n-          Name => New_Occurrence_Of (Subp, Loc));\n+          Name          => New_Occurrence_Of (Subp, Loc));\n \n       if Defer_Declaration then\n          Set_TSS (Base_Type (Ent), Subp_Id);\n \n       else\n          if From_Aspect_Specification (N) then\n             Append_Freeze_Action (Ent, Subp_Decl);\n-\n          else\n             Insert_Action (N, Subp_Decl);\n          end if;"}, {"sha": "eeb7a75612fb230a67c4ba582210667c659fc22e", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=c70cf4f8eb5bf8623e0f89eef6aabf308ef04c1b", "patch": "@@ -1392,19 +1392,28 @@ package body Sem_Ch7 is\n                --  If one of the non-generic parents is itself on the scope\n                --  stack, do not install its private declarations: they are\n                --  installed in due time when the private part of that parent\n-               --  is analyzed. This is delicate ???\n+               --  is analyzed.\n \n                else\n                   while Present (Inst_Par)\n                     and then Inst_Par /= Standard_Standard\n                     and then (not In_Open_Scopes (Inst_Par)\n                                or else not In_Private_Part (Inst_Par))\n                   loop\n-                     Install_Private_Declarations (Inst_Par);\n-                     Set_Use (Private_Declarations\n-                                (Specification\n-                                   (Unit_Declaration_Node (Inst_Par))));\n-                     Inst_Par := Scope (Inst_Par);\n+                     if Nkind (Inst_Node) = N_Formal_Package_Declaration\n+                       or else\n+                         not Is_Ancestor_Package\n+                               (Inst_Par, Cunit_Entity (Current_Sem_Unit))\n+                     then\n+                        Install_Private_Declarations (Inst_Par);\n+                        Set_Use\n+                          (Private_Declarations\n+                            (Specification\n+                              (Unit_Declaration_Node (Inst_Par))));\n+                        Inst_Par := Scope (Inst_Par);\n+                     else\n+                        exit;\n+                     end if;\n                   end loop;\n \n                   exit;"}]}