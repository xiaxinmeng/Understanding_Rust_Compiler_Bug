{"sha": "92a8d7a7332ca2d53a70d856052b148331da518a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJhOGQ3YTczMzJjYTJkNTNhNzBkODU2MDUyYjE0ODMzMWRhNTE4YQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-03-20T13:26:19Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-03-20T13:26:19Z"}, "message": "re PR tree-optimization/56661 (Incorrect code with -O1 -ftree-pre)\n\n2013-03-20  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/56661\n\t* tree-ssa-sccvn.c (visit_use): Only value-number calls if\n\tthe result does not have to be distinct.\n\n\t* gcc.dg/torture/pr56661.c: New testcase.\n\nFrom-SVN: r196825", "tree": {"sha": "4cf6946974a9a59ae3ef87513ac71079e3170b97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cf6946974a9a59ae3ef87513ac71079e3170b97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92a8d7a7332ca2d53a70d856052b148331da518a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92a8d7a7332ca2d53a70d856052b148331da518a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92a8d7a7332ca2d53a70d856052b148331da518a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92a8d7a7332ca2d53a70d856052b148331da518a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "54714c680a46d4290c10b7369c1c1b2afd1e8d97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54714c680a46d4290c10b7369c1c1b2afd1e8d97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54714c680a46d4290c10b7369c1c1b2afd1e8d97"}], "stats": {"total": 66, "additions": 64, "deletions": 2}, "files": [{"sha": "a238d534be3dc11fd7f0506a4624d7afd40d31ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a8d7a7332ca2d53a70d856052b148331da518a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a8d7a7332ca2d53a70d856052b148331da518a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=92a8d7a7332ca2d53a70d856052b148331da518a", "patch": "@@ -1,3 +1,9 @@\n+2013-03-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/56661\n+\t* tree-ssa-sccvn.c (visit_use): Only value-number calls if\n+\tthe result does not have to be distinct.\n+\n 2013-03-20  Richard Biener  <rguenther@suse.de>\n \n \t* tree-inline.c (copy_tree_body_r): Sync MEM_REF code with"}, {"sha": "96c0bc7bbd9c48ce774eb98514d63e18ff2a895e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a8d7a7332ca2d53a70d856052b148331da518a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a8d7a7332ca2d53a70d856052b148331da518a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=92a8d7a7332ca2d53a70d856052b148331da518a", "patch": "@@ -1,3 +1,8 @@\n+2013-03-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/56661\n+\t* gcc.dg/torture/pr56661.c: New testcase.\n+\n 2013-03-20  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR rtl-optimization/56605"}, {"sha": "6fdaedb31765cbd9374b459412228d21e160adf0", "filename": "gcc/testsuite/gcc.dg/torture/pr56661.c", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a8d7a7332ca2d53a70d856052b148331da518a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr56661.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a8d7a7332ca2d53a70d856052b148331da518a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr56661.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr56661.c?ref=92a8d7a7332ca2d53a70d856052b148331da518a", "patch": "@@ -0,0 +1,46 @@\n+/* { dg-do run } */\n+\n+__attribute__((noinline, noclone)) void\n+bar (int *b)\n+{\n+  b[0] = b[1] = b[2] = 1;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+baz (int x)\n+{\n+  if (x != 1)\n+    __builtin_abort ();\n+}\n+\n+void\n+foo (int x)\n+{\n+  if (x == 0)\n+    {\n+      int *b = __builtin_malloc (3 * sizeof (int));\n+      while (b[0])\n+\t;\n+    }\n+  else if (x == 1)\n+    {\n+      int i, j;\n+      int *b = __builtin_malloc (3 * sizeof (int));\n+      for (i = 0; i < 2; i++)\n+\t{\n+\t  bar (b);\n+\t  for (j = 0; j < 3; ++j)\n+\t    baz (b[j]);\n+\t  baz (b[0]);\n+\t}\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  int x = 1;\n+  asm volatile (\"\" : \"+r\" (x));\n+  foo (x);\n+  return 0;\n+}"}, {"sha": "e7aefbf0551dae86f658e1a2d4cfcf74757993b2", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92a8d7a7332ca2d53a70d856052b148331da518a/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92a8d7a7332ca2d53a70d856052b148331da518a/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=92a8d7a7332ca2d53a70d856052b148331da518a", "patch": "@@ -3506,8 +3506,13 @@ visit_use (tree use)\n \t\t     We can value number 2 calls to the same function with the\n \t\t     same vuse and the same operands which are not subsequent\n \t\t     the same, because there is no code in the program that can\n-\t\t     compare the 2 values.  */\n-\t\t  || gimple_vdef (stmt)))\n+\t\t     compare the 2 values...  */\n+\t\t  || (gimple_vdef (stmt)\n+\t\t      /* ... unless the call returns a pointer which does\n+\t\t         not alias with anything else.  In which case the\n+\t\t\t information that the values are distinct are encoded\n+\t\t\t in the IL.  */\n+\t\t      && !(gimple_call_return_flags (stmt) & ERF_NOALIAS))))\n \t    changed = visit_reference_op_call (lhs, stmt);\n \t  else\n \t    changed = defs_to_varying (stmt);"}]}