{"sha": "9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWEzM2M0MWZlNDJmOWExN2UyYzJhYTJkZjkyZmQyYWJjZTFkMzM1NQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-06-28T00:16:21Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-06-28T00:16:21Z"}, "message": "Daily bump.", "tree": {"sha": "ae0cdf8f9373e50b808bed8f997e04cdd515ce90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae0cdf8f9373e50b808bed8f997e04cdd515ce90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355/comments", "author": null, "committer": null, "parents": [{"sha": "3cbc0fb39c84ae0a51a9a88649dccd105bf17d6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cbc0fb39c84ae0a51a9a88649dccd105bf17d6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cbc0fb39c84ae0a51a9a88649dccd105bf17d6e"}], "stats": {"total": 174, "additions": 173, "deletions": 1}, "files": [{"sha": "98e34c9decdba168c490213e44a29a87f9e35ef2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355", "patch": "@@ -1,3 +1,84 @@\n+2020-06-27  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* gimple-ssa-evrp-analyze.h (vrp_visit_cond_stmt): Use\n+\tsimplify_using_ranges class.\n+\t* gimple-ssa-evrp.c (class evrp_folder): New simplify_using_ranges\n+\tfield.  Adjust all methods to use new field.\n+\t* tree-ssa-dom.c (simplify_stmt_for_jump_threading): Use\n+\tsimplify_using_ranges class.\n+\t* tree-vrp.c (class vrp_folder): New simplify_using_ranges\n+\tfield.  Adjust all methods to use new field.\n+\t(simplify_stmt_for_jump_threading): Use simplify_using_ranges class.\n+\t(vrp_prop::vrp_finalize): New vrp_folder argument.\n+\t(execute_vrp): Pass folder to vrp_finalize.  Use\n+\tsimplify_using_ranges class.\n+\tRemove cleanup_edges_and_switches call.\n+\t* vr-values.c (vr_values::op_with_boolean_value_range_p): Change\n+\tvalue_range_equiv uses to value_range.\n+\t(simplify_using_ranges::op_with_boolean_value_range_p): Use\n+\tsimplify_using_ranges class.\n+\t(check_for_binary_op_overflow): Make static.\n+\t(vr_values::extract_range_basic): Pass this to\n+\tcheck_for_binary_op_overflow.\n+\t(compare_range_with_value): Change value_range_equiv uses to\n+\tvalue_range.\n+\t(vr_values::vr_values): Initialize simplifier field.\n+\tRemove uses of to_remove_edges and to_update_switch_stmts.\n+\t(vr_values::~vr_values): Remove uses of to_remove_edges and\n+\tto_update_switch_stmts.\n+\t(vr_values::get_vr_for_comparison): Move to simplify_using_ranges\n+\tclass.\n+\t(vr_values::compare_name_with_value): Same.\n+\t(vr_values::compare_names): Same.\n+\t(vr_values::vrp_evaluate_conditional_warnv_with_ops): Same.\n+\t(vr_values::vrp_evaluate_conditional): Same.\n+\t(vr_values::vrp_visit_cond_stmt): Same.\n+\t(find_case_label_ranges): Change value_range_equiv uses to\n+\tvalue_range.\n+\t(vr_values::extract_range_from_stmt): Use simplify_using_ranges class.\n+\t(vr_values::simplify_truth_ops_using_ranges): Move to\n+\tsimplify_using_ranges class.\n+\t(vr_values::simplify_div_or_mod_using_ranges): Same.\n+\t(vr_values::simplify_min_or_max_using_ranges): Same.\n+\t(vr_values::simplify_abs_using_ranges): Same.\n+\t(vr_values::simplify_bit_ops_using_ranges): Same.\n+\t(test_for_singularity): Change value_range_equiv uses to\n+\tvalue_range.\n+\t(range_fits_type_p): Same.\n+\t(vr_values::simplify_cond_using_ranges_1): Same.\n+\t(vr_values::simplify_cond_using_ranges_2): Make extern.\n+\t(vr_values::fold_cond): Move to simplify_using_ranges class.\n+\t(vr_values::simplify_switch_using_ranges): Same.\n+\t(vr_values::cleanup_edges_and_switches): Same.\n+\t(vr_values::simplify_float_conversion_using_ranges): Same.\n+\t(vr_values::simplify_internal_call_using_ranges): Same.\n+\t(vr_values::two_valued_val_range_p): Same.\n+\t(vr_values::simplify_stmt_using_ranges): Move to...\n+\t(simplify_using_ranges::simplify): ...here.\n+\t* vr-values.h (class vr_values): Move all the simplification of\n+\tstatements using ranges methods and code from here...\n+\t(class simplify_using_ranges): ...to here.\n+\t(simplify_cond_using_ranges_2): New extern prototype.\n+\n+2020-06-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* omp-general.h (struct omp_for_data_loop): Add non_rect_referenced\n+\tmember, move outer member.\n+\t(struct omp_for_data): Add first_nonrect and last_nonrect members.\n+\t* omp-general.c (omp_extract_for_data): Initialize first_nonrect,\n+\tlast_nonrect and non_rect_referenced members.\n+\t* omp-expand.c (expand_omp_for_init_counts): Handle non-rectangular\n+\tloops.\n+\t(expand_omp_for_init_vars): Add nonrect_bounds parameter.  Handle\n+\tnon-rectangular loops.\n+\t(extract_omp_for_update_vars): Likewise.\n+\t(expand_omp_for_generic, expand_omp_for_static_nochunk,\n+\texpand_omp_for_static_chunk, expand_omp_simd,\n+\texpand_omp_taskloop_for_outer, expand_omp_taskloop_for_inner): Adjust\n+\texpand_omp_for_init_vars and extract_omp_for_update_vars callers.\n+\t(expand_omp_for): Don't sorry on non-composite worksharing-loop or\n+\tdistribute.\n+\n 2020-06-26  H.J. Lu  <hjl.tools@gmail.com>\n \n \tPR target/95655"}, {"sha": "47ccf01cbbe488dff9b56194bdd9b292a5943043", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355", "patch": "@@ -1 +1 @@\n-20200627\n+20200628"}, {"sha": "2d9091f7a7ce61f60cdc6f8c64562994d5a7de0d", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355", "patch": "@@ -1,3 +1,10 @@\n+2020-06-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/95903\n+\t* c-common.c (pointer_int_sum): Use TYPE_OVERFLOW_UNDEFINED instead of\n+\t!TYPE_UNSIGNED check to see if we can apply distributive law and handle\n+\tsmaller precision intop operands separately.\n+\n 2020-06-26  Marek Polacek  <polacek@redhat.com>\n \n \t* c-opts.c (c_common_init_options): Default to gnu++17."}, {"sha": "4dc0967c3b4f5eafb63925aa8045661bde1bffca", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355", "patch": "@@ -1,3 +1,19 @@\n+2020-06-27  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/95736\n+\t* coroutines.cc (get_awaitable_var): New helper.\n+\t(build_co_await): Check more carefully before\n+\tcopying an awaitable.\n+\t(expand_one_await_expression): No initializer\n+\tis required when the awaitable is not a temp.\n+\t(register_awaits): Remove handling that is now\n+\tcompleted when the await expression is built.\n+\n+2020-06-27  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* coroutines.cc (morph_fn_to_coro): Diagnose unavailable\n+\tget_return_object_on_allocation_failure.\n+\n 2020-06-26  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR c++/95519"}, {"sha": "e85c72d4a306fdf574ec2b22d5baa485333838e7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355", "patch": "@@ -1,3 +1,8 @@\n+2020-06-27  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/95881\n+\t* resolve.c (resolve_symbol): Avoid NULL pointer dereference.\n+\n 2020-06-25  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/95828"}, {"sha": "a07efcf4af6d1ff54dd494da81b3abdcdecc018f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355", "patch": "@@ -1,3 +1,61 @@\n+2020-06-27  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/95881\n+\t* gfortran.dg/pr95881.f90: New file.\n+\n+2020-06-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/95903\n+\t* c-c++-common/pr95903.c: New test.\n+\n+2020-06-27  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/95736\n+\t* g++.dg/coroutines/pr95736.C: New test.\n+\n+2020-06-27  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* g++.dg/coroutines/coro-bad-grooaf-01-grooaf-expected.C: New test.\n+\n+2020-06-27  Michael Meissner  <meissner@linux.ibm.com>\n+\n+\t* gcc.target/powerpc/prefix-add.c: New test.\n+\t* gcc.target/powerpc/prefix-si-constant.c: New test.\n+\t* gcc.target/powerpc/prefix-di-constant.c: New test.\n+\t* gcc.target/powerpc/prefix-ds-dq.c: New test.\n+\t* gcc.target/powerpc/prefix-no-update.c: New test.\n+\t* gcc.target/powerpc/prefix-large-dd.c: New test.\n+\t* gcc.target/powerpc/prefix-large-df.c: New test.\n+\t* gcc.target/powerpc/prefix-large-di.c: New test.\n+\t* gcc.target/powerpc/prefix-large-hi.c: New test.\n+\t* gcc.target/powerpc/prefix-large-kf.c: New test.\n+\t* gcc.target/powerpc/prefix-large-qi.c: New test.\n+\t* gcc.target/powerpc/prefix-large-sd.c: New test.\n+\t* gcc.target/powerpc/prefix-large-sf.c: New test.\n+\t* gcc.target/powerpc/prefix-large-si.c: New test.\n+\t* gcc.target/powerpc/prefix-large-udi.c: New test.\n+\t* gcc.target/powerpc/prefix-large-uhi.c: New test.\n+\t* gcc.target/powerpc/prefix-large-uqi.c: New test.\n+\t* gcc.target/powerpc/prefix-large-usi.c: New test.\n+\t* gcc.target/powerpc/prefix-large-v2df.c: New test.\n+\t* gcc.target/powerpc/prefix-large.h: Include file for new tests.\n+\t* gcc.target/powerpc/prefix-pcrel-dd.c: New test.\n+\t* gcc.target/powerpc/prefix-pcrel-df.c: New test.\n+\t* gcc.target/powerpc/prefix-pcrel-di.c: New test.\n+\t* gcc.target/powerpc/prefix-pcrel-hi.c: New test.\n+\t* gcc.target/powerpc/prefix-pcrel-kf.c: New test.\n+\t* gcc.target/powerpc/prefix-pcrel-qi.c: New test.\n+\t* gcc.target/powerpc/prefix-pcrel-sd.c: New test.\n+\t* gcc.target/powerpc/prefix-pcrel-sf.c: New test.\n+\t* gcc.target/powerpc/prefix-pcrel-si.c: New test.\n+\t* gcc.target/powerpc/prefix-pcrel-udi.c: New test.\n+\t* gcc.target/powerpc/prefix-pcrel-uhi.c: New test.\n+\t* gcc.target/powerpc/prefix-pcrel-uqi.c: New test.\n+\t* gcc.target/powerpc/prefix-pcrel-usi.c: New test.\n+\t* gcc.target/powerpc/prefix-pcrel-v2df.c: New test.\n+\t* gcc.target/powerpc/prefix-pcrel.h: Include file for new tests.\n+\t* gcc.target/powerpc/prefix-stack-protect.c: New test.\n+\n 2020-06-26  Yichao Yu  <yyc1992@gmail.com>\n \n \t* gcc.target/i386/pr95778-1.c: New test."}, {"sha": "d1df89fd2f6fa2bd3dbce710b94ea38ad4ea235f", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=9a33c41fe42f9a17e2c2aa2df92fd2abce1d3355", "patch": "@@ -1,3 +1,8 @@\n+2020-06-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/libgomp.c/loop-17.c: New test.\n+\t* testsuite/libgomp.c/loop-18.c: New test.\n+\n 2020-06-26  Marek Polacek  <polacek@redhat.com>\n \n \t* testsuite/libgomp.c++/atomic-3.C: Use -std=gnu++14."}]}