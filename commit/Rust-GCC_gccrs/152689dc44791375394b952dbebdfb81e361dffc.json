{"sha": "152689dc44791375394b952dbebdfb81e361dffc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUyNjg5ZGM0NDc5MTM3NTM5NGI5NTJkYmViZGZiODFlMzYxZGZmYw==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@redhat.com", "date": "2013-02-04T16:37:44Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2013-02-04T16:37:44Z"}, "message": "re PR target/56186 (function return ABI change for 128-bit types on Win64)\n\n        PR target/56186\n        * config/i386/i386.c (function_value_ms_64): Add additional valtype\n        argument and improve checking of return-argument types for 16-byte\n        modes.\n        (ix86_function_value_1): Add additional valtype argument on call\n        of function_value_64.\n        (return_in_memory_ms_64): Sync 16-byte sized mode handling with\n        handling infunction_value_64 function.\n\nFrom-SVN: r195721", "tree": {"sha": "1440d5f80d79e5915728b3dc05fbe12ced0b2e7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1440d5f80d79e5915728b3dc05fbe12ced0b2e7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/152689dc44791375394b952dbebdfb81e361dffc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/152689dc44791375394b952dbebdfb81e361dffc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/152689dc44791375394b952dbebdfb81e361dffc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/152689dc44791375394b952dbebdfb81e361dffc/comments", "author": null, "committer": null, "parents": [{"sha": "2b5987b550c62dec5b79670dfe34984a3d1d0c8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b5987b550c62dec5b79670dfe34984a3d1d0c8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b5987b550c62dec5b79670dfe34984a3d1d0c8b"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "7d0988c5ed3dfe2684143b19bce14565bd65b78e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/152689dc44791375394b952dbebdfb81e361dffc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/152689dc44791375394b952dbebdfb81e361dffc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=152689dc44791375394b952dbebdfb81e361dffc", "patch": "@@ -1,3 +1,15 @@\n+2013-02-04  Kai Tietz  <ktietz@redhat.com>\n+\n+\tPR target/56186\n+\t* config/i386/i386.c (function_value_ms_64): Add additional valtype\n+\targument and improve checking of return-argument types for 16-byte\n+\tmodes.\n+\t(ix86_function_value_1): Add additional valtype argument on call\n+\tof function_value_64.\n+\t(return_in_memory_ms_64): Sync 16-byte sized mode handling with\n+\thandling infunction_value_64 function.\n+\n+\n 2013-02-04  Matthew Gretton-Dann  <matthew.gretton-dann@linaro.org>\n \n \t* gcc/reload.c (subst_reloads): Fix DEBUG_RELOAD build issue."}, {"sha": "895028b4bf43a5efb45ca17958e0bf1e9b84ef48", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/152689dc44791375394b952dbebdfb81e361dffc/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/152689dc44791375394b952dbebdfb81e361dffc/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=152689dc44791375394b952dbebdfb81e361dffc", "patch": "@@ -7336,17 +7336,24 @@ function_value_64 (enum machine_mode orig_mode, enum machine_mode mode,\n }\n \n static rtx\n-function_value_ms_64 (enum machine_mode orig_mode, enum machine_mode mode)\n+function_value_ms_64 (enum machine_mode orig_mode, enum machine_mode mode,\n+\t\t      const_tree valtype)\n {\n   unsigned int regno = AX_REG;\n \n   if (TARGET_SSE)\n     {\n       switch (GET_MODE_SIZE (mode))\n-        {\n-        case 16:\n-          if((SCALAR_INT_MODE_P (mode) || VECTOR_MODE_P (mode))\n-\t     && !COMPLEX_MODE_P (mode))\n+\t{\n+\tcase 16:\n+\t  if (valtype != NULL_TREE\n+\t      && !VECTOR_INTEGER_TYPE_P (valtype)\n+\t      && !VECTOR_INTEGER_TYPE_P (valtype)\n+\t      && !INTEGRAL_TYPE_P (valtype)\n+\t      && !VECTOR_FLOAT_TYPE_P (valtype))\n+\t    break;\n+\t  if ((SCALAR_INT_MODE_P (mode) || VECTOR_MODE_P (mode))\n+\t      && !COMPLEX_MODE_P (mode))\n \t    regno = FIRST_SSE_REG;\n \t  break;\n \tcase 8:\n@@ -7373,7 +7380,7 @@ ix86_function_value_1 (const_tree valtype, const_tree fntype_or_decl,\n   fntype = fn ? TREE_TYPE (fn) : fntype_or_decl;\n \n   if (TARGET_64BIT && ix86_function_type_abi (fntype) == MS_ABI)\n-    return function_value_ms_64 (orig_mode, mode);\n+    return function_value_ms_64 (orig_mode, mode, valtype);\n   else if (TARGET_64BIT)\n     return function_value_64 (orig_mode, mode, valtype);\n   else\n@@ -7486,7 +7493,9 @@ return_in_memory_ms_64 (const_tree type, enum machine_mode mode)\n   HOST_WIDE_INT size = int_size_in_bytes (type);\n \n   /* __m128 is returned in xmm0.  */\n-  if ((SCALAR_INT_MODE_P (mode) || VECTOR_MODE_P (mode))\n+  if ((!type || VECTOR_INTEGER_TYPE_P (type) || INTEGRAL_TYPE_P (type)\n+       || VECTOR_FLOAT_TYPE_P (type))\n+      && (SCALAR_INT_MODE_P (mode) || VECTOR_MODE_P (mode))\n       && !COMPLEX_MODE_P (mode) && (GET_MODE_SIZE (mode) == 16 || size == 16))\n     return false;\n "}]}