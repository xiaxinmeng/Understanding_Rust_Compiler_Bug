{"sha": "125b98b127933b7c2d375d3471dc24afa2825993", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI1Yjk4YjEyNzkzM2I3YzJkMzc1ZDM0NzFkYzI0YWZhMjgyNTk5Mw==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2019-02-13T16:22:25Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2019-02-13T16:22:25Z"}, "message": "[ARM] Fix Thumb-1 ldm (PR89190)\n\nThis patch fixes an ICE in the Thumb-1 LDM peepholer.  Thumb-1 LDMs\nalways update the base register except if the base is loaded.\nThe current implementation rejects LDMs where the base is not dead,\nhowever this doesn't exclude the case where the base is loaded as\nwell as dead.  Fix this by explicitly checking whether the base is\nloaded.  Also enable LDMs which load the first register.\n\n    gcc/\n\tPR target/89190\n\t* config/arm/arm.c (ldm_stm_operation_p) Set\n\taddr_reg_in_reglist correctly for first register.\n\t(load_multiple_sequence): Remove dead base check.\n\t(gen_ldm_seq): Correctly set write_back for Thumb-1.\n\n    testsuite/\n\tPR target/89190\n\t* gcc.target/arm/pr89190.c: New test.\n\nFrom-SVN: r268848", "tree": {"sha": "bd91c1bffa811b442bd57bc6c489faa648b9bdb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd91c1bffa811b442bd57bc6c489faa648b9bdb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/125b98b127933b7c2d375d3471dc24afa2825993", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/125b98b127933b7c2d375d3471dc24afa2825993", "html_url": "https://github.com/Rust-GCC/gccrs/commit/125b98b127933b7c2d375d3471dc24afa2825993", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/125b98b127933b7c2d375d3471dc24afa2825993/comments", "author": null, "committer": null, "parents": [{"sha": "6174de7c40e6e4c70cbab2250ca77a26a9015c0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6174de7c40e6e4c70cbab2250ca77a26a9015c0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6174de7c40e6e4c70cbab2250ca77a26a9015c0b"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "6729c6d38695e4cf7d721c90619979d4d3e4f2a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125b98b127933b7c2d375d3471dc24afa2825993/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125b98b127933b7c2d375d3471dc24afa2825993/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=125b98b127933b7c2d375d3471dc24afa2825993", "patch": "@@ -1,3 +1,11 @@\n+2019-02-13  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\tPR target/89190\n+\t* config/arm/arm.c (ldm_stm_operation_p) Set\n+\taddr_reg_in_reglist correctly for first register.\n+\t(load_multiple_sequence): Remove dead base check.\n+\t(gen_ldm_seq): Correctly set write_back for Thumb-1.\n+\n 2019-02-13  Tamar Christina  <tamar.christina@arm.com>\n \n \tPR target/88847"}, {"sha": "f07f4cc47b6cfcea8f44960bf4760ea9a46b8f87", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125b98b127933b7c2d375d3471dc24afa2825993/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125b98b127933b7c2d375d3471dc24afa2825993/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=125b98b127933b7c2d375d3471dc24afa2825993", "patch": "@@ -13191,6 +13191,9 @@ ldm_stm_operation_p (rtx op, bool load, machine_mode mode,\n   if (load && (REGNO (reg) == SP_REGNUM) && (REGNO (addr) != SP_REGNUM))\n     return false;\n \n+  if (regno == REGNO (addr))\n+    addr_reg_in_reglist = true;\n+\n   for (; i < count; i++)\n     {\n       elt = XVECEXP (op, 0, i);\n@@ -13385,7 +13388,6 @@ load_multiple_sequence (rtx *operands, int nops, int *regs, int *saved_order,\n   int unsorted_regs[MAX_LDM_STM_OPS];\n   HOST_WIDE_INT unsorted_offsets[MAX_LDM_STM_OPS];\n   int order[MAX_LDM_STM_OPS];\n-  rtx base_reg_rtx = NULL;\n   int base_reg = -1;\n   int i, ldm_case;\n \n@@ -13430,7 +13432,6 @@ load_multiple_sequence (rtx *operands, int nops, int *regs, int *saved_order,\n \t  if (i == 0)\n \t    {\n \t      base_reg = REGNO (reg);\n-\t      base_reg_rtx = reg;\n \t      if (TARGET_THUMB1 && base_reg > LAST_LO_REGNUM)\n \t\treturn 0;\n \t    }\n@@ -13489,10 +13490,6 @@ load_multiple_sequence (rtx *operands, int nops, int *regs, int *saved_order,\n       *load_offset = unsorted_offsets[order[0]];\n     }\n \n-  if (TARGET_THUMB1\n-      && !peep2_reg_dead_p (nops, base_reg_rtx))\n-    return 0;\n-\n   if (unsorted_offsets[order[0]] == 0)\n     ldm_case = 1; /* ldmia */\n   else if (TARGET_ARM && unsorted_offsets[order[0]] == 4)\n@@ -13868,18 +13865,25 @@ gen_ldm_seq (rtx *operands, int nops, bool sort_regs)\n \n   if (TARGET_THUMB1)\n     {\n-      gcc_assert (peep2_reg_dead_p (nops, base_reg_rtx));\n       gcc_assert (ldm_case == 1 || ldm_case == 5);\n-      write_back = TRUE;\n+\n+      /* Thumb-1 ldm uses writeback except if the base is loaded.  */\n+      write_back = true;\n+      for (i = 0; i < nops; i++)\n+\tif (base_reg == regs[i])\n+\t  write_back = false;\n+\n+      /* Ensure the base is dead if it is updated.  */\n+      if (write_back && !peep2_reg_dead_p (nops, base_reg_rtx))\n+\treturn false;\n     }\n \n   if (ldm_case == 5)\n     {\n       rtx newbase = TARGET_THUMB1 ? base_reg_rtx : gen_rtx_REG (SImode, regs[0]);\n       emit_insn (gen_addsi3 (newbase, base_reg_rtx, GEN_INT (offset)));\n       offset = 0;\n-      if (!TARGET_THUMB1)\n-\tbase_reg_rtx = newbase;\n+      base_reg_rtx = newbase;\n     }\n \n   for (i = 0; i < nops; i++)"}, {"sha": "f1a8295aef93f7b5445a720a857b9e1e18e492a7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125b98b127933b7c2d375d3471dc24afa2825993/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125b98b127933b7c2d375d3471dc24afa2825993/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=125b98b127933b7c2d375d3471dc24afa2825993", "patch": "@@ -1,3 +1,8 @@\n+2019-02-13  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\tPR target/89190\n+\t* gcc.target/arm/pr89190.c: New test.\n+\n 2019-02-13  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c++/89036"}]}