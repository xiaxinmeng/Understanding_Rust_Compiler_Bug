{"sha": "59d6607d6fb93eb14271125a0dc86da01900e4b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlkNjYwN2Q2ZmI5M2ViMTQyNzExMjVhMGRjODZkYTAxOTAwZTRiNg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2011-05-30T23:46:13Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2011-05-30T23:46:13Z"}, "message": "tuple: Restore is_convertible constraint.\n\n2011-05-31  Jonathan Wakely  <jwakely.gcc@gmail.com>\n\n\t* include/std/tuple: Restore is_convertible constraint.\n\t* testsuite/20_util/tuple/cons/allocate_noncopyable.cc: Remove.\n\nFrom-SVN: r174458", "tree": {"sha": "438e28a46058eb46fa5b0b4737b77828d7db3181", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/438e28a46058eb46fa5b0b4737b77828d7db3181"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59d6607d6fb93eb14271125a0dc86da01900e4b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59d6607d6fb93eb14271125a0dc86da01900e4b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59d6607d6fb93eb14271125a0dc86da01900e4b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59d6607d6fb93eb14271125a0dc86da01900e4b6/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f1330380a45aa4d5eb5da773ce0e394418008c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f1330380a45aa4d5eb5da773ce0e394418008c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f1330380a45aa4d5eb5da773ce0e394418008c7"}], "stats": {"total": 80, "additions": 6, "deletions": 74}, "files": [{"sha": "e5fd280b1ed97ba6b58829f21f318b8a6deb3052", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59d6607d6fb93eb14271125a0dc86da01900e4b6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59d6607d6fb93eb14271125a0dc86da01900e4b6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=59d6607d6fb93eb14271125a0dc86da01900e4b6", "patch": "@@ -1,3 +1,8 @@\n+2011-05-31  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* include/std/tuple: Restore is_convertible constraint.\n+\t* testsuite/20_util/tuple/cons/allocate_noncopyable.cc: Remove.\n+\n 2011-05-30  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/49236"}, {"sha": "f8ec271c1c575d1d9d8ab8c049e406c743ed1ba9", "filename": "libstdc++-v3/include/std/tuple", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59d6607d6fb93eb14271125a0dc86da01900e4b6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59d6607d6fb93eb14271125a0dc86da01900e4b6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple?ref=59d6607d6fb93eb14271125a0dc86da01900e4b6", "patch": "@@ -629,7 +629,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       : _Inherited(__a1) { }\n \n       template<typename _U1, typename = typename\n-\t       std::enable_if<std::is_constructible<_T1, _U1&&>::value>::type>\n+\t       std::enable_if<std::is_convertible<_U1, _T1>::value>::type>\n         explicit\n         tuple(_U1&& __a1)\n \t: _Inherited(std::forward<_U1>(__a1)) { }"}, {"sha": "d729178b609a36b552156f91e9ce6432837eec1e", "filename": "libstdc++-v3/testsuite/20_util/tuple/cons/allocate_noncopyable.cc", "status": "removed", "additions": 0, "deletions": 73, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f1330380a45aa4d5eb5da773ce0e394418008c7/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fallocate_noncopyable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f1330380a45aa4d5eb5da773ce0e394418008c7/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fallocate_noncopyable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fallocate_noncopyable.cc?ref=5f1330380a45aa4d5eb5da773ce0e394418008c7", "patch": "@@ -1,73 +0,0 @@\n-// { dg-options \"-std=gnu++0x\" }\n-// { dg-do compile }\n-\n-// Copyright (C) 2011 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-// 20.4.2.1 [tuple.cnstr] Allocator-extended constructors\n-\n-#include <memory>\n-#include <tuple>\n-\n-struct MyAlloc { };\n-\n-struct Tag0 { };\n-struct Tag1 { };\n-struct Tag2 { };\n-\n-// A non-copyable and non-movable type\n-struct Type\n-{\n-  typedef MyAlloc allocator_type;\n-\n-  explicit Type(Tag0) { }\n-  Type(std::allocator_arg_t, MyAlloc, Tag1) { }\n-  Type(Tag2, MyAlloc) { }\n-\n-  Type(const Type&) = delete;\n-  Type(Type&&) = delete;\n-  Type& operator=(const Type&) = delete;\n-  Type& operator=(Type&&) = delete;\n-};\n-\n-void test01()\n-{\n-  using std::allocator_arg;\n-  using std::tuple;\n-\n-  MyAlloc a;\n-  Tag0 tag0;\n-  Tag1 tag1;\n-  Tag2 tag2;\n-\n-  // N.B. cannot use Tag0 with uses-allocator construction, because\n-  // uses_allocator<Type, MyAlloc> is true but no suitable cosntructor\n-  tuple<Type>\t\t  t1(tag0);\n-\n-  tuple<Type> \t\t  t2(allocator_arg, a, tag1);\n-  tuple<Type> \t\t  t3(allocator_arg, a, tag2);\n-\n-  tuple<Type, Type> \t  t4(allocator_arg, a, tag1, tag2);\n-\n-  tuple<Type, Type, Type> t5(allocator_arg, a, tag2, tag1, tag2);\n-}\n-\n-int main()\n-{\n-  test01();\n-  return 0;\n-}"}]}