{"sha": "9bf7ec4ebb94d686ec6b4e981931b84a0c03f41b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJmN2VjNGViYjk0ZDY4NmVjNmI0ZTk4MTkzMWI4NGEwYzAzZjQxYg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2001-12-18T05:12:29Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2001-12-18T05:12:29Z"}, "message": "h8300.c: Fix comment typos.\n\n\t* config/h8300/h8300.c: Fix comment typos.\n\t* config/h8300/h8300.h: Fix comment formatting.\n\nFrom-SVN: r48143", "tree": {"sha": "1a5ff6c9e82bf091fad021f1a1410a7f245ebd9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a5ff6c9e82bf091fad021f1a1410a7f245ebd9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9bf7ec4ebb94d686ec6b4e981931b84a0c03f41b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bf7ec4ebb94d686ec6b4e981931b84a0c03f41b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bf7ec4ebb94d686ec6b4e981931b84a0c03f41b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bf7ec4ebb94d686ec6b4e981931b84a0c03f41b/comments", "author": null, "committer": null, "parents": [{"sha": "bf768dd17b943ee7dc6729d1d0d5eeff3c75a677", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf768dd17b943ee7dc6729d1d0d5eeff3c75a677", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf768dd17b943ee7dc6729d1d0d5eeff3c75a677"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "c57ab2cda9097f609865aaa7dbe665ba4836e546", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf7ec4ebb94d686ec6b4e981931b84a0c03f41b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf7ec4ebb94d686ec6b4e981931b84a0c03f41b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9bf7ec4ebb94d686ec6b4e981931b84a0c03f41b", "patch": "@@ -1,3 +1,8 @@\n+2001-12-18  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.c: Fix comment typos.\n+\t* config/h8300/h8300.h: Fix comment formatting.\n+\n 2001-12-17  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* machmode.h (mode_name, mode_class, mode_size, mode_unit_size,"}, {"sha": "5c298e7529f86759858be8611b906fc02305f86e", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf7ec4ebb94d686ec6b4e981931b84a0c03f41b/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf7ec4ebb94d686ec6b4e981931b84a0c03f41b/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=9bf7ec4ebb94d686ec6b4e981931b84a0c03f41b", "patch": "@@ -3326,8 +3326,8 @@ h8300_adjust_insn_length (insn, length)\n           && GET_CODE (addr) == REG)\n \treturn -6;\n \n-      /* On the H8/300H and H8/300S, reg + d, for small displacements is 4\n-\t bytes shorter than indicated in the machine description.  */\n+      /* On the H8/300H and H8/S, reg + d, for small displacements is\n+\t 4 bytes shorter than indicated in the machine description.  */\n       if ((TARGET_H8300H || TARGET_H8300S)\n \t  && GET_CODE (addr) == PLUS\n \t  && GET_CODE (XEXP (addr, 0)) == REG\n@@ -3336,7 +3336,7 @@ h8300_adjust_insn_length (insn, length)\n \t  && INTVAL (XEXP (addr, 1)) < 32767)\n \treturn -4;\n \n-      /* On the H8/300H and H8/300S, abs:16 is two bytes shorter than the\n+      /* On the H8/300H and H8/S, abs:16 is two bytes shorter than the\n \t more general abs:24.  */\n       if ((TARGET_H8300H || TARGET_H8300S)\n \t  && GET_CODE (addr) == SYMBOL_REF\n@@ -3395,8 +3395,8 @@ h8300_adjust_insn_length (insn, length)\n       if (mode == QImode && shift <= 4)\n \treturn -(20 - shift * 2);\n \n-      /* Similarly for HImode and SImode shifts by\n-\t small constants on the H8/300H and H8/300S.  */\n+      /* Similarly for HImode and SImode shifts by small constants on\n+\t the H8/300H and H8/S.  */\n       if ((TARGET_H8300H || TARGET_H8300S)\n \t  && (mode == HImode || mode == SImode) && shift <= 4)\n \treturn -(20 - shift * 2);"}, {"sha": "ca52689e697a15447dbebc6552483d0a252385a1", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bf7ec4ebb94d686ec6b4e981931b84a0c03f41b/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bf7ec4ebb94d686ec6b4e981931b84a0c03f41b/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=9bf7ec4ebb94d686ec6b4e981931b84a0c03f41b", "patch": "@@ -554,7 +554,7 @@ enum reg_class {\n    We have two registers that can be eliminated on the h8300.  First, the\n    frame pointer register can often be eliminated in favor of the stack\n    pointer register.  Secondly, the argument pointer register can always be\n-   eliminated; it is replaced with either the stack or frame pointer. */\n+   eliminated; it is replaced with either the stack or frame pointer.  */\n \n #define ELIMINABLE_REGS\t\t\t\t\t\\\n {{ ARG_POINTER_REGNUM, STACK_POINTER_REGNUM},\t\t\\\n@@ -627,7 +627,7 @@ enum reg_class {\n \n /* When defined, the compiler allows registers explicitly used in the\n    rtl to be used as spill registers but prevents the compiler from\n-   extending the lifetime of these registers. */\n+   extending the lifetime of these registers.  */\n \n #define SMALL_REGISTER_CLASSES 1\n \f\n@@ -946,7 +946,7 @@ struct cum_arg\n /* Define as C expression which evaluates to nonzero if the tablejump\n    instruction expects the table to contain offsets from the address of the\n    table.\n-   Do not define this if the table should contain absolute addresses. */\n+   Do not define this if the table should contain absolute addresses.  */\n /*#define CASE_VECTOR_PC_RELATIVE 1 */\n \n /* Specify the tree operation to be used to convert reals to integers.  */\n@@ -1227,7 +1227,7 @@ readonly_data ()\t\t\t\t\t\t\t\\\n #define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL) \\\n    ASM_OUTPUT_LABEL(FILE, NAME)\n \n-/* The prefix to add to user-visible assembler symbols. */\n+/* The prefix to add to user-visible assembler symbols.  */\n \n #define USER_LABEL_PREFIX \"_\"\n "}]}