{"sha": "27e934d8bae03ea7eddeb3770641440333a71478", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdlOTM0ZDhiYWUwM2VhN2VkZGViMzc3MDY0MTQ0MDMzM2E3MTQ3OA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "1999-09-10T22:03:10Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1999-09-10T22:03:10Z"}, "message": "configure: Rebuilt.\n\n\t* configure: Rebuilt.\n\t* configure.in: Build include/Makefile.\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (SUBDIRS): Added gcj and include.\n\t(install-data-local): New target.\n\t(extra_headers): New macro.\n\t* include/Makefile.in: New file.\n\t* include/Makefile.am: New file.\n\n\t* interpret.cc: Don't include gcj/field.h or gcj/cni.h.\n\t* java/lang/reflect/natField.cc: Don't include gcj/field.h or\n\tgcj/cni.h.\n\t* boehm.cc: Don't include java-threads.h or gcj/field.h.\n\t* resolve.cc: Include config.h.\n\t* defineclass.cc: Include config.h.\n\t* include/java-interp.h: Don't include config.h.\n\t* include/jvm.h: Include java-threads.h, Object.h, java-gc.h,\n\tcni.h.\n\n\t* gcj/javaprims.h: Regenerated namespace decls.\n\t* classes.pl (scan): Don't put `;' after closing brace.\n\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (INCLUDES): Added -I for top_srcdir.\n\t* configure.in: Create gcj/Makefile.\n\t* gcj/Makefile.in: New file.\n\t* gcj/Makefile.am: New file.\n\t* java/lang/Object.h: Don't include any other headers.\n\t* gcj/array.h: Renamed from include/java-array.h.\n\t* gcj/field.h: Renamed from include/java-field.h.\n\t* gcj/method.h: Renamed from include/java-method.h.\n\t* gcj/cni.h, gcj/javaprims.h: Moved from include/.\n\tUpdated all files to reflect new include structure.\n\nFrom-SVN: r29278", "tree": {"sha": "2d703bb5c0f735c114d35388f4ce82a2a194fe18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d703bb5c0f735c114d35388f4ce82a2a194fe18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27e934d8bae03ea7eddeb3770641440333a71478", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27e934d8bae03ea7eddeb3770641440333a71478", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27e934d8bae03ea7eddeb3770641440333a71478", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27e934d8bae03ea7eddeb3770641440333a71478/comments", "author": null, "committer": null, "parents": [{"sha": "512d594b4f7945440be373bf14c6af8b88c91749", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/512d594b4f7945440be373bf14c6af8b88c91749", "html_url": "https://github.com/Rust-GCC/gccrs/commit/512d594b4f7945440be373bf14c6af8b88c91749"}], "stats": {"total": 894, "additions": 739, "deletions": 155}, "files": [{"sha": "aae7e2841e6b645cc65b55debfecd17de95a166f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -1,3 +1,39 @@\n+1999-09-10  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* configure: Rebuilt.\n+\t* configure.in: Build include/Makefile.\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (SUBDIRS): Added gcj and include.\n+\t(install-data-local): New target.\n+\t(extra_headers): New macro.\n+\t* include/Makefile.in: New file.\n+\t* include/Makefile.am: New file.\n+\n+\t* interpret.cc: Don't include gcj/field.h or gcj/cni.h.\n+\t* java/lang/reflect/natField.cc: Don't include gcj/field.h or\n+\tgcj/cni.h.\n+\t* boehm.cc: Don't include java-threads.h or gcj/field.h.\n+\t* resolve.cc: Include config.h.\n+\t* defineclass.cc: Include config.h.\n+\t* include/java-interp.h: Don't include config.h.\n+\t* include/jvm.h: Include java-threads.h, Object.h, java-gc.h,\n+\tcni.h.\n+\n+\t* gcj/javaprims.h: Regenerated namespace decls.\n+\t* classes.pl (scan): Don't put `;' after closing brace.\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (INCLUDES): Added -I for top_srcdir.\n+\t* configure.in: Create gcj/Makefile.\n+\t* gcj/Makefile.in: New file.\n+\t* gcj/Makefile.am: New file.\n+\t* java/lang/Object.h: Don't include any other headers.\n+\t* gcj/array.h: Renamed from include/java-array.h.\n+\t* gcj/field.h: Renamed from include/java-field.h.\n+\t* gcj/method.h: Renamed from include/java-method.h.\n+\t* gcj/cni.h, gcj/javaprims.h: Moved from include/.\n+\tUpdated all files to reflect new include structure.\n+\n 1999-09-09  Tom Tromey  <tromey@cygnus.com>\n \n \t* configure: Rebuilt."}, {"sha": "bb267eff92b1ee8aa2e021abb693c5e8a085eebd", "filename": "libjava/Makefile.am", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -3,7 +3,9 @@\n AUTOMAKE_OPTIONS = foreign no-installinfo\n \n if TESTSUBDIR\n-SUBDIRS = testsuite\n+SUBDIRS = testsuite gcj include\n+else\n+SUBDIRS = gcj include\n endif\n \n ## ################################################################\n@@ -79,7 +81,8 @@ JC1FLAGS = -g @LIBGCJ_JAVAFLAGS@\n \n LIBFFIINCS = -I$(top_srcdir)/../libffi/include -I../libffi/include\n \n-INCLUDES = -Iinclude -I$(top_srcdir)/include $(GCINCS) $(THREADINCS) \\\n+INCLUDES = -I$(top_srcdir) -Iinclude -I$(top_srcdir)/include \\\n+\t$(GCINCS) $(THREADINCS) \\\n \t$(EH_COMMON_INCLUDE) $(ZINCS) $(LIBFFIINCS)\n \n DIVIDESPEC = @DIVIDESPEC@\n@@ -248,6 +251,20 @@ gnu/gcj/runtime/MethodInvocation.h: gnu/gcj/runtime/MethodInvocation.class libgc\n \t    -friend 'class _Jv_InterpMethod;' \\\n \t    $(basename $<)\n \n+## Headers we maintain by hand and which we want to install.\n+extra_headers = java/lang/Object.h java/lang/Class.h\n+\n+## Install the headers.  It is fairly ugly that we have to do this by\n+## hand.\n+install-data-local:\n+\t$(PRE_INSTALL)\n+\t@for f in $(nat_headers) $(extra_headers); do \\\n+\t  d=\"`echo $$f | sed -e 's,/[^/]*$$,,'`\"; \\\n+\t  $(mkinstalldirs) $(DESTDIR)$(includedir)/$$d; \\\n+\t  if test -f $(srcdir)/$$f; then p=$(srcdir)/$$f; else p=$$f; fi; \\\n+\t  echo \" $(INSTALL_DATA) $$p $(DESTDIR)$(includedir)/$$f\"; \\\n+\t  $(INSTALL_DATA) $$p $(DESTDIR)$(includedir)/$$f; \\\n+\tdone\n \n ## ################################################################\n "}, {"sha": "5d71b3d00a2eeb69e19ec406fafef0f5ad1d001e", "filename": "libjava/Makefile.in", "status": "modified", "additions": 40, "deletions": 57, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -105,9 +105,10 @@ here = @here@\n libgcj_basedir = @libgcj_basedir@\n \n AUTOMAKE_OPTIONS = foreign no-installinfo\n-\n @TESTSUBDIR_TRUE@SUBDIRS = \\\n-@TESTSUBDIR_TRUE@testsuite\n+@TESTSUBDIR_TRUE@testsuite gcj include\n+@TESTSUBDIR_FALSE@SUBDIRS = \\\n+@TESTSUBDIR_FALSE@gcj include\n @USE_LIBDIR_TRUE@toolexeclibdir = \\\n @USE_LIBDIR_TRUE@$(libdir)$(MULTISUBDIR)\n @USE_LIBDIR_FALSE@toolexeclibdir = \\\n@@ -158,7 +159,8 @@ JC1FLAGS = -g @LIBGCJ_JAVAFLAGS@\n \n LIBFFIINCS = -I$(top_srcdir)/../libffi/include -I../libffi/include\n \n-INCLUDES = -Iinclude -I$(top_srcdir)/include $(GCINCS) $(THREADINCS) \\\n+INCLUDES = -I$(top_srcdir) -Iinclude -I$(top_srcdir)/include \\\n+\t$(GCINCS) $(THREADINCS) \\\n \t$(EH_COMMON_INCLUDE) $(ZINCS) $(LIBFFIINCS)\n \n \n@@ -197,6 +199,8 @@ nat_headers = $(ordinary_java_source_files:.java=.h) \\\n \t$(built_java_source_files:.java=.h)\n \n \n+extra_headers = java/lang/Object.h java/lang/Class.h\n+\n NM = nm\n \n @NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS = \\\n@@ -705,15 +709,14 @@ LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@\n DATA =  $(data_DATA) $(toolexeclib_DATA)\n \n DIST_COMMON =  COPYING.LIB ChangeLog Makefile.am Makefile.in NEWS THANKS \\\n-acconfig.h acinclude.m4 aclocal.m4 configure configure.in \\\n-include/config.h.in include/stamp-h.in libgcj.spec.in\n+acinclude.m4 aclocal.m4 configure configure.in libgcj.spec.in\n \n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n TAR = tar\n GZIP_ENV = --best\n-DIST_SUBDIRS =  testsuite\n+DIST_SUBDIRS =  testsuite gcj include gcj include\n DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/$(srcdir)/$(CONVERT_DIR)/make-trie.P .deps/boehm.P \\\n .deps/defineclass.P .deps/exception.P .deps/gij.P \\\n@@ -928,34 +931,6 @@ config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \t$(SHELL) ./config.status --recheck\n $(srcdir)/configure: @MAINTAINER_MODE_TRUE@$(srcdir)/configure.in $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)\n \tcd $(srcdir) && $(AUTOCONF)\n-\n-include/config.h: include/stamp-h\n-\t@if test ! -f $@; then \\\n-\t\trm -f include/stamp-h; \\\n-\t\t$(MAKE) include/stamp-h; \\\n-\telse :; fi\n-include/stamp-h: $(srcdir)/include/config.h.in $(top_builddir)/config.status\n-\tcd $(top_builddir) \\\n-\t  && CONFIG_FILES= CONFIG_HEADERS=include/config.h \\\n-\t     $(SHELL) ./config.status\n-\t@echo timestamp > include/stamp-h 2> /dev/null\n-$(srcdir)/include/config.h.in: @MAINTAINER_MODE_TRUE@$(srcdir)/include/stamp-h.in\n-\t@if test ! -f $@; then \\\n-\t\trm -f $(srcdir)/include/stamp-h.in; \\\n-\t\t$(MAKE) $(srcdir)/include/stamp-h.in; \\\n-\telse :; fi\n-$(srcdir)/include/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) acconfig.h\n-\tcd $(top_srcdir) && $(AUTOHEADER)\n-\t@echo timestamp > $(srcdir)/include/stamp-h.in 2> /dev/null\n-\n-mostlyclean-hdr:\n-\n-clean-hdr:\n-\n-distclean-hdr:\n-\t-rm -f include/config.h\n-\n-maintainer-clean-hdr:\n libgcj.spec: $(top_builddir)/config.status libgcj.spec.in\n \tcd $(top_builddir) && CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status\n \n@@ -1324,7 +1299,7 @@ install-exec-am: install-toolexeclibLTLIBRARIES install-binPROGRAMS \\\n \t\tinstall-toolexeclibDATA\n install-exec: install-exec-recursive\n \n-install-data-am: install-dataDATA\n+install-data-am: install-dataDATA install-data-local\n install-data: install-data-recursive\n \n install-am: all-am\n@@ -1354,32 +1329,29 @@ distclean-generic:\n \t-rm -f config.cache config.log stamp-h stamp-h[0-9]*\n \n maintainer-clean-generic:\n-mostlyclean-am:  mostlyclean-hdr mostlyclean-toolexeclibLTLIBRARIES \\\n-\t\tmostlyclean-compile mostlyclean-libtool \\\n-\t\tmostlyclean-binPROGRAMS mostlyclean-noinstPROGRAMS \\\n-\t\tmostlyclean-tags mostlyclean-depend mostlyclean-generic\n+mostlyclean-am:  mostlyclean-toolexeclibLTLIBRARIES mostlyclean-compile \\\n+\t\tmostlyclean-libtool mostlyclean-binPROGRAMS \\\n+\t\tmostlyclean-noinstPROGRAMS mostlyclean-tags \\\n+\t\tmostlyclean-depend mostlyclean-generic\n \n mostlyclean: mostlyclean-recursive\n \n-clean-am:  clean-hdr clean-toolexeclibLTLIBRARIES clean-compile \\\n-\t\tclean-libtool clean-binPROGRAMS clean-noinstPROGRAMS \\\n-\t\tclean-tags clean-depend clean-generic mostlyclean-am \\\n-\t\tclean-local\n+clean-am:  clean-toolexeclibLTLIBRARIES clean-compile clean-libtool \\\n+\t\tclean-binPROGRAMS clean-noinstPROGRAMS clean-tags \\\n+\t\tclean-depend clean-generic mostlyclean-am clean-local\n \n clean: clean-recursive\n \n-distclean-am:  distclean-hdr distclean-toolexeclibLTLIBRARIES \\\n-\t\tdistclean-compile distclean-libtool \\\n-\t\tdistclean-binPROGRAMS distclean-noinstPROGRAMS \\\n-\t\tdistclean-tags distclean-depend distclean-generic \\\n-\t\tclean-am\n+distclean-am:  distclean-toolexeclibLTLIBRARIES distclean-compile \\\n+\t\tdistclean-libtool distclean-binPROGRAMS \\\n+\t\tdistclean-noinstPROGRAMS distclean-tags \\\n+\t\tdistclean-depend distclean-generic clean-am\n \t-rm -f libtool\n \n distclean: distclean-recursive\n \t-rm -f config.status\n \n-maintainer-clean-am:  maintainer-clean-hdr \\\n-\t\tmaintainer-clean-toolexeclibLTLIBRARIES \\\n+maintainer-clean-am:  maintainer-clean-toolexeclibLTLIBRARIES \\\n \t\tmaintainer-clean-compile maintainer-clean-libtool \\\n \t\tmaintainer-clean-binPROGRAMS \\\n \t\tmaintainer-clean-noinstPROGRAMS maintainer-clean-tags \\\n@@ -1391,9 +1363,9 @@ maintainer-clean-am:  maintainer-clean-hdr \\\n maintainer-clean: maintainer-clean-recursive\n \t-rm -f config.status\n \n-.PHONY: mostlyclean-hdr distclean-hdr clean-hdr maintainer-clean-hdr \\\n-mostlyclean-toolexeclibLTLIBRARIES distclean-toolexeclibLTLIBRARIES \\\n-clean-toolexeclibLTLIBRARIES maintainer-clean-toolexeclibLTLIBRARIES \\\n+.PHONY: mostlyclean-toolexeclibLTLIBRARIES \\\n+distclean-toolexeclibLTLIBRARIES clean-toolexeclibLTLIBRARIES \\\n+maintainer-clean-toolexeclibLTLIBRARIES \\\n uninstall-toolexeclibLTLIBRARIES install-toolexeclibLTLIBRARIES \\\n mostlyclean-compile distclean-compile clean-compile \\\n maintainer-clean-compile mostlyclean-libtool distclean-libtool \\\n@@ -1412,10 +1384,11 @@ distclean-tags clean-tags maintainer-clean-tags distdir \\\n mostlyclean-depend distclean-depend clean-depend \\\n maintainer-clean-depend info-am info dvi-am dvi check check-am \\\n installcheck-am installcheck install-info-am install-info \\\n-install-exec-am install-exec install-data-am install-data install-am \\\n-install uninstall-am uninstall all-redirect all-am all installdirs-am \\\n-installdirs mostlyclean-generic distclean-generic clean-generic \\\n-maintainer-clean-generic clean mostlyclean distclean maintainer-clean\n+install-exec-am install-exec install-data-local install-data-am \\\n+install-data install-am install uninstall-am uninstall all-redirect \\\n+all-am all installdirs-am installdirs mostlyclean-generic \\\n+distclean-generic clean-generic maintainer-clean-generic clean \\\n+mostlyclean distclean maintainer-clean\n \n \n $(java_source_files:.java=.class): libgcj.zip\n@@ -1506,6 +1479,16 @@ gnu/gcj/runtime/MethodInvocation.h: gnu/gcj/runtime/MethodInvocation.class libgc\n \t    -friend 'class _Jv_InterpMethod;' \\\n \t    $(basename $<)\n \n+install-data-local:\n+\t$(PRE_INSTALL)\n+\t@for f in $(nat_headers) $(extra_headers); do \\\n+\t  d=\"`echo $$f | sed -e 's,/[^/]*$$,,'`\"; \\\n+\t  $(mkinstalldirs) $(DESTDIR)$(includedir)/$$d; \\\n+\t  if test -f $(srcdir)/$$f; then p=$(srcdir)/$$f; else p=$$f; fi; \\\n+\t  echo \" $(INSTALL_DATA) $$p $(DESTDIR)$(includedir)/$$f\"; \\\n+\t  $(INSTALL_DATA) $$p $(DESTDIR)$(includedir)/$$f; \\\n+\tdone\n+\n maintainer-check: libgcj.la\n \t$(NM) .libs/libgcj.a | grep ' T ' \\\n \t  | grep -v '4java' \\"}, {"sha": "b300c37c8608780f5d025ced406c279597d1aae2", "filename": "libjava/boehm.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fboehm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fboehm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fboehm.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -12,10 +12,10 @@ details.  */\n \n #include <stdio.h>\n \n-#include <cni.h>\n-#include <java/lang/Class.h>\n #include <jvm.h>\n-#include <java-field.h>\n+#include <gcj/cni.h>\n+\n+#include <java/lang/Class.h>\n #include <java-interp.h>\n \n // More nastiness: the GC wants to define TRUE and FALSE.  We don't"}, {"sha": "5a19a5e009f445dfc52077ab09f4e41ceb8a020d", "filename": "libjava/classes.pl", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fclasses.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fclasses.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasses.pl?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -10,7 +10,7 @@\n # details.\n \n # Usage: cd <top-srcdir> ; perl classes.pl.\n-# Can also be run from the `include' directory; this lets us\n+# Can also be run from the `gcj' directory; this lets us\n # more easily insert the output into javaprims.h (which is where it goes).\n \n use DirHandle;\n@@ -100,5 +100,5 @@ sub scan\n \t&scan (\"$dir/$_\", $indent + 2);\n     }\n \n-    print $spaces, \"};\\n\";\n+    print $spaces, \"}\\n\";\n }"}, {"sha": "5eeecafa3794d69cced6c393847e7da362e30cbf", "filename": "libjava/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -5411,7 +5411,7 @@ done\n ac_given_srcdir=$srcdir\n ac_given_INSTALL=\"$INSTALL\"\n \n-trap 'rm -fr `echo \"Makefile libgcj.spec testsuite/Makefile include/config.h\" | sed \"s/:[^ ]*//g\"` conftest*; exit 1' 1 2 15\n+trap 'rm -fr `echo \"Makefile libgcj.spec gcj/Makefile include/Makefile testsuite/Makefile include/config.h\" | sed \"s/:[^ ]*//g\"` conftest*; exit 1' 1 2 15\n EOF\n cat >> $CONFIG_STATUS <<EOF\n \n@@ -5564,7 +5564,7 @@ EOF\n \n cat >> $CONFIG_STATUS <<EOF\n \n-CONFIG_FILES=\\${CONFIG_FILES-\"Makefile libgcj.spec testsuite/Makefile\"}\n+CONFIG_FILES=\\${CONFIG_FILES-\"Makefile libgcj.spec gcj/Makefile include/Makefile testsuite/Makefile\"}\n EOF\n cat >> $CONFIG_STATUS <<\\EOF\n for ac_file in .. $CONFIG_FILES; do if test \"x$ac_file\" != x..; then"}, {"sha": "7932d8ca46474e7c586e66d9323e1db60abccfd0", "filename": "libjava/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.in?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -624,7 +624,7 @@ fi\n here=`pwd`\n AC_SUBST(here)\n \n-AC_OUTPUT(Makefile libgcj.spec testsuite/Makefile,\n+AC_OUTPUT(Makefile libgcj.spec gcj/Makefile include/Makefile testsuite/Makefile,\n [if test -n \"$CONFIG_FILES\"; then\n   ac_file=Makefile . ${libgcj_basedir}/../config-ml.in\n fi],"}, {"sha": "d096bfa159c5e58c199edd0471d4d7df4930b9dd", "filename": "libjava/defineclass.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fdefineclass.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fdefineclass.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fdefineclass.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -18,12 +18,14 @@ details.  */\n    currently being ignored (\"InnerClasses\", \"LineNumber\", etc...).  \n */\n \n+#include <config.h>\n+\n #include <java-interp.h>\n \n #ifdef INTERPRETER\n \n #include <java-cpool.h>\n-#include <cni.h>\n+#include <gcj/cni.h>\n \n #include <java/lang/Class.h>\n #include <java/lang/Float.h>"}, {"sha": "b1eb690d388c78f31cc484a12b7bc697f14a2dbc", "filename": "libjava/exception.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fexception.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fexception.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fexception.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -15,7 +15,7 @@ details.  */\n \n #include <java/lang/Class.h>\n #include <java/lang/NullPointerException.h>\n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n \n // eh-common.h needs gansidecl.h."}, {"sha": "35fc7eec67e52b97f4d0f9eebeea6fa4156564b4", "filename": "libjava/gcj/Makefile.am", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgcj%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgcj%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2FMakefile.am?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -0,0 +1,6 @@\n+## Process this file with automake to produce Makefile.in.\n+\n+AUTOMAKE_OPTIONS = foreign no-installinfo\n+\n+gcjdir = $(includedir)/gcj\n+gcj_HEADERS = array.h cni.h field.h javaprims.h method.h"}, {"sha": "b74bff6b8b5bb7665430962ed163c76c3d08f48d", "filename": "libjava/gcj/Makefile.in", "status": "added", "additions": 269, "deletions": 0, "changes": 269, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgcj%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgcj%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2FMakefile.in?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -0,0 +1,269 @@\n+# Makefile.in generated automatically by automake 1.4 from Makefile.am\n+\n+# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+\n+SHELL = @SHELL@\n+\n+srcdir = @srcdir@\n+top_srcdir = @top_srcdir@\n+VPATH = @srcdir@\n+prefix = @prefix@\n+exec_prefix = @exec_prefix@\n+\n+bindir = @bindir@\n+sbindir = @sbindir@\n+libexecdir = @libexecdir@\n+datadir = @datadir@\n+sysconfdir = @sysconfdir@\n+sharedstatedir = @sharedstatedir@\n+localstatedir = @localstatedir@\n+libdir = @libdir@\n+infodir = @infodir@\n+mandir = @mandir@\n+includedir = @includedir@\n+oldincludedir = /usr/include\n+\n+DESTDIR =\n+\n+pkgdatadir = $(datadir)/@PACKAGE@\n+pkglibdir = $(libdir)/@PACKAGE@\n+pkgincludedir = $(includedir)/@PACKAGE@\n+\n+top_builddir = ..\n+\n+ACLOCAL = @ACLOCAL@\n+AUTOCONF = @AUTOCONF@\n+AUTOMAKE = @AUTOMAKE@\n+AUTOHEADER = @AUTOHEADER@\n+\n+INSTALL = @INSTALL@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)\n+INSTALL_DATA = @INSTALL_DATA@\n+INSTALL_SCRIPT = @INSTALL_SCRIPT@\n+transform = @program_transform_name@\n+\n+NORMAL_INSTALL = :\n+PRE_INSTALL = :\n+POST_INSTALL = :\n+NORMAL_UNINSTALL = :\n+PRE_UNINSTALL = :\n+POST_UNINSTALL = :\n+build_alias = @build_alias@\n+build_triplet = @build@\n+host_alias = @host_alias@\n+host_triplet = @host@\n+target_alias = @target_alias@\n+target_triplet = @target@\n+AM_RUNTESTFLAGS = @AM_RUNTESTFLAGS@\n+AR = @AR@\n+AS = @AS@\n+CC = @CC@\n+COMPPATH = @COMPPATH@\n+CPP = @CPP@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n+DIVIDESPEC = @DIVIDESPEC@\n+DLLTOOL = @DLLTOOL@\n+EH_COMMON_INCLUDE = @EH_COMMON_INCLUDE@\n+EXEEXT = @EXEEXT@\n+GCDEPS = @GCDEPS@\n+GCINCS = @GCINCS@\n+GCLIBS = @GCLIBS@\n+GCOBJS = @GCOBJS@\n+GCSPEC = @GCSPEC@\n+LD = @LD@\n+LIBGCJ_CFLAGS = @LIBGCJ_CFLAGS@\n+LIBGCJ_CXXFLAGS = @LIBGCJ_CXXFLAGS@\n+LIBGCJ_JAVAFLAGS = @LIBGCJ_JAVAFLAGS@\n+LIBTOOL = @LIBTOOL@\n+LN_S = @LN_S@\n+MAINT = @MAINT@\n+MAKEINFO = @MAKEINFO@\n+NM = @NM@\n+PACKAGE = @PACKAGE@\n+PERL = @PERL@\n+RANLIB = @RANLIB@\n+SYSTEMSPEC = @SYSTEMSPEC@\n+THREADDEPS = @THREADDEPS@\n+THREADINCS = @THREADINCS@\n+THREADLIBS = @THREADLIBS@\n+THREADOBJS = @THREADOBJS@\n+THREADSPEC = @THREADSPEC@\n+USE_SYMBOL_UNDERSCORE = @USE_SYMBOL_UNDERSCORE@\n+VERSION = @VERSION@\n+ZDEPS = @ZDEPS@\n+ZINCS = @ZINCS@\n+ZLIBS = @ZLIBS@\n+ZLIBSPEC = @ZLIBSPEC@\n+here = @here@\n+libgcj_basedir = @libgcj_basedir@\n+\n+AUTOMAKE_OPTIONS = foreign no-installinfo\n+\n+gcjdir = $(includedir)/gcj\n+gcj_HEADERS = array.h cni.h field.h javaprims.h method.h\n+mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n+CONFIG_HEADER = ../include/config.h\n+CONFIG_CLEAN_FILES = \n+HEADERS =  $(gcj_HEADERS)\n+\n+DIST_COMMON =  Makefile.am Makefile.in\n+\n+\n+DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n+\n+TAR = tar\n+GZIP_ENV = --best\n+all: all-redirect\n+.SUFFIXES:\n+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) \n+\tcd $(top_srcdir) && $(AUTOMAKE) --foreign gcj/Makefile\n+\n+Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)\n+\tcd $(top_builddir) \\\n+\t  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status\n+\n+\n+install-gcjHEADERS: $(gcj_HEADERS)\n+\t@$(NORMAL_INSTALL)\n+\t$(mkinstalldirs) $(DESTDIR)$(gcjdir)\n+\t@list='$(gcj_HEADERS)'; for p in $$list; do \\\n+\t  if test -f \"$$p\"; then d= ; else d=\"$(srcdir)/\"; fi; \\\n+\t  echo \" $(INSTALL_DATA) $$d$$p $(DESTDIR)$(gcjdir)/$$p\"; \\\n+\t  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(gcjdir)/$$p; \\\n+\tdone\n+\n+uninstall-gcjHEADERS:\n+\t@$(NORMAL_UNINSTALL)\n+\tlist='$(gcj_HEADERS)'; for p in $$list; do \\\n+\t  rm -f $(DESTDIR)$(gcjdir)/$$p; \\\n+\tdone\n+\n+tags: TAGS\n+\n+ID: $(HEADERS) $(SOURCES) $(LISP)\n+\tlist='$(SOURCES) $(HEADERS)'; \\\n+\tunique=`for i in $$list; do echo $$i; done | \\\n+\t  awk '    { files[$$0] = 1; } \\\n+\t       END { for (i in files) print i; }'`; \\\n+\there=`pwd` && cd $(srcdir) \\\n+\t  && mkid -f$$here/ID $$unique $(LISP)\n+\n+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)\n+\ttags=; \\\n+\there=`pwd`; \\\n+\tlist='$(SOURCES) $(HEADERS)'; \\\n+\tunique=`for i in $$list; do echo $$i; done | \\\n+\t  awk '    { files[$$0] = 1; } \\\n+\t       END { for (i in files) print i; }'`; \\\n+\ttest -z \"$(ETAGS_ARGS)$$unique$(LISP)$$tags\" \\\n+\t  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)\n+\n+mostlyclean-tags:\n+\n+clean-tags:\n+\n+distclean-tags:\n+\t-rm -f TAGS ID\n+\n+maintainer-clean-tags:\n+\n+distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)\n+\n+subdir = gcj\n+\n+distdir: $(DISTFILES)\n+\there=`cd $(top_builddir) && pwd`; \\\n+\ttop_distdir=`cd $(top_distdir) && pwd`; \\\n+\tdistdir=`cd $(distdir) && pwd`; \\\n+\tcd $(top_srcdir) \\\n+\t  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --foreign gcj/Makefile\n+\t@for file in $(DISTFILES); do \\\n+\t  d=$(srcdir); \\\n+\t  if test -d $$d/$$file; then \\\n+\t    cp -pr $$/$$file $(distdir)/$$file; \\\n+\t  else \\\n+\t    test -f $(distdir)/$$file \\\n+\t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\\n+\t    || cp -p $$d/$$file $(distdir)/$$file || :; \\\n+\t  fi; \\\n+\tdone\n+info-am:\n+info: info-am\n+dvi-am:\n+dvi: dvi-am\n+check-am: all-am\n+check: check-am\n+installcheck-am:\n+installcheck: installcheck-am\n+install-info-am: \n+install-info: install-info-am\n+install-exec-am:\n+install-exec: install-exec-am\n+\n+install-data-am: install-gcjHEADERS\n+install-data: install-data-am\n+\n+install-am: all-am\n+\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n+install: install-am\n+uninstall-am: uninstall-gcjHEADERS\n+uninstall: uninstall-am\n+all-am: Makefile $(HEADERS)\n+all-redirect: all-am\n+install-strip:\n+\t$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install\n+installdirs:\n+\t$(mkinstalldirs)  $(DESTDIR)$(gcjdir)\n+\n+\n+mostlyclean-generic:\n+\n+clean-generic:\n+\n+distclean-generic:\n+\t-rm -f Makefile $(CONFIG_CLEAN_FILES)\n+\t-rm -f config.cache config.log stamp-h stamp-h[0-9]*\n+\n+maintainer-clean-generic:\n+mostlyclean-am:  mostlyclean-tags mostlyclean-generic\n+\n+mostlyclean: mostlyclean-am\n+\n+clean-am:  clean-tags clean-generic mostlyclean-am\n+\n+clean: clean-am\n+\n+distclean-am:  distclean-tags distclean-generic clean-am\n+\t-rm -f libtool\n+\n+distclean: distclean-am\n+\n+maintainer-clean-am:  maintainer-clean-tags maintainer-clean-generic \\\n+\t\tdistclean-am\n+\t@echo \"This command is intended for maintainers to use;\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+\n+maintainer-clean: maintainer-clean-am\n+\n+.PHONY: uninstall-gcjHEADERS install-gcjHEADERS tags mostlyclean-tags \\\n+distclean-tags clean-tags maintainer-clean-tags distdir info-am info \\\n+dvi-am dvi check check-am installcheck-am installcheck install-info-am \\\n+install-info install-exec-am install-exec install-data-am install-data \\\n+install-am install uninstall-am uninstall all-redirect all-am all \\\n+installdirs mostlyclean-generic distclean-generic clean-generic \\\n+maintainer-clean-generic clean mostlyclean distclean maintainer-clean\n+\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"}, {"sha": "cd419d708f00865a0c2629ca89149f93da6de9b1", "filename": "libjava/gcj/array.h", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgcj%2Farray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgcj%2Farray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2Farray.h?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -1,4 +1,4 @@\n-// java-array.h - Header file for CNI arrays.  -*- c++ -*-\n+// array.h - Header file for CNI arrays.  -*- c++ -*-\n \n /* Copyright (C) 1998, 1999  Cygnus Solutions\n \n@@ -8,8 +8,8 @@ This software is copyrighted work licensed under the terms of the\n Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n-#ifndef __JAVA_ARRAY_H__\n-#define __JAVA_ARRAY_H__\n+#ifndef __GCJ_ARRAY_H__\n+#define __GCJ_ARRAY_H__\n \n #pragma interface\n \n@@ -74,4 +74,4 @@ void _Jv_RunMain (const char* name, int argc, const char **argv);\n \n inline jsize JvGetArrayLength (jarray array) { return array->length; }\n \n-#endif /* __JAVA_ARRAY_H__ */\n+#endif /* __GCJ_ARRAY_H__ */", "previous_filename": "libjava/include/java-array.h"}, {"sha": "2cdd5454551ddbd98a01c02000cd551940d2366b", "filename": "libjava/gcj/cni.h", "status": "renamed", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgcj%2Fcni.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgcj%2Fcni.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2Fcni.h?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -1,6 +1,6 @@\n-// cni.h -*- c++ -*-\n+// gcj/cni.h -*- c++ -*-\n // This file describes the Cygnus Native Interface, CNI.\n-// It provides a nicer interface to many of the things in javaprims.h.\n+// It provides a nicer interface to many of the things in gcj/javaprims.h.\n \n /* Copyright (C) 1998, 1999  Cygnus Solutions\n \n@@ -10,14 +10,13 @@ This software is copyrighted work licensed under the terms of the\n Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n-#ifndef __JAVA_CNI_H__\n-#define __JAVA_CNI_H__\n+#ifndef __GCJ_CNI_H__\n+#define __GCJ_CNI_H__\n \n #include <java/lang/Object.h>\n #include <java/lang/Class.h>\n \n-#include <java-threads.h>\n-#include <java-array.h>\n+#include <gcj/array.h>\n \n extern inline jobject\n JvAllocObject (jclass cls)\n@@ -130,4 +129,4 @@ JvFree (void *ptr)\n {\n   return _Jv_Free (ptr);\n }\n-#endif /* __JAVA_CNI_H__ */\n+#endif /* __GCJ_CNI_H__ */", "previous_filename": "libjava/include/cni.h"}, {"sha": "07cb4f89e153f1751237e4b6bc9fc83017170cc4", "filename": "libjava/gcj/field.h", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgcj%2Ffield.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgcj%2Ffield.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2Ffield.h?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -1,4 +1,4 @@\n-// java-field.h - Header file for fieldID instances.  -*- c++ -*-\n+// field.h - Header file for fieldID instances.  -*- c++ -*-\n \n /* Copyright (C) 1998, 1999  Cygnus Solutions\n \n@@ -8,8 +8,8 @@ This software is copyrighted work licensed under the terms of the\n Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n-#ifndef __JAVA_FIELD_H__\n-#define __JAVA_FIELD_H__\n+#ifndef __GCJ_FIELD_H__\n+#define __GCJ_FIELD_H__\n \n #include <java/lang/Class.h>\n #include <java/lang/reflect/Field.h>\n@@ -138,7 +138,7 @@ _Jv_FromReflectedField (java::lang::reflect::Field *field)\n } \n \n \n-#ifdef __JAVA_CNI_H__\n+#ifdef __GCJ_CNI_H__\n extern inline jfieldID\n JvGetFirstInstanceField (jclass klass)\n {\n@@ -162,8 +162,8 @@ JvGetObjectField (jobject obj, _Jv_Field* field)\n {\n   return _Jv_GetObjectField (obj, field);\n }\n-#endif /* defined (__JAVA_CNI_H__) */\n+#endif /* defined (__GCJ_CNI_H__) */\n \n #endif\n \n-#endif /* __JAVA_FIELD_H */\n+#endif /* __GCJ_FIELD_H */", "previous_filename": "libjava/include/java-field.h"}, {"sha": "ee085379a58b1aa79c6e96d00d2d8138d40bc8bb", "filename": "libjava/gcj/javaprims.h", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgcj%2Fjavaprims.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgcj%2Fjavaprims.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2Fjavaprims.h?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -93,7 +93,7 @@ extern \"Java\"\n       class UTFDataFormatException;\n       class UnsupportedEncodingException;\n       class Writer;\n-    };\n+    }\n \n     namespace lang\n     {\n@@ -180,8 +180,8 @@ extern \"Java\"\n         class Member;\n         class Method;\n         class Modifier;\n-      };\n-    };\n+      }\n+    }\n \n     namespace util\n     {\n@@ -220,7 +220,7 @@ extern \"Java\"\n         class JarEntry;\n         class JarFile;\n         class JarInputStream;\n-      };\n+      }\n \n       namespace zip\n       {\n@@ -243,9 +243,9 @@ extern \"Java\"\n         class ZipFile;\n         class ZipInputStream;\n         class ZipOutputStream;\n-      };\n-    };\n-  };\n+      }\n+    }\n+  }\n };\n \n typedef struct java::lang::Object* jobject;", "previous_filename": "libjava/include/javaprims.h"}, {"sha": "a97ba4a682fb5513702638d22f53824353ab2cd0", "filename": "libjava/gcj/method.h", "status": "renamed", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgcj%2Fmethod.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgcj%2Fmethod.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2Fmethod.h?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -8,9 +8,14 @@ This software is copyrighted work licensed under the terms of the\n Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n+#ifndef __GCJ_METHOD_H__\n+#define __GCJ_METHOD_H__\n+\n extern inline jmethodID\n _Jv_FromReflectedMethod(java::lang::reflect::Method *method)\n {\n   return (jmethodID)\n     ((char *) method->declaringClass->methods + method->offset);\n }\n+\n+#endif /* __GCJ_METHOD_H__ */", "previous_filename": "libjava/include/java-method.h"}, {"sha": "ffe1515037d24067cc192088c5f83aa439751039", "filename": "libjava/gij.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgij.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgij.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgij.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -9,7 +9,7 @@ details.  */\n /* Author: Kresten Krab Thorup <krab@gnu.org>  */\n \n #include <jvm.h>\n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <stdio.h>\n \n #include <java/lang/System.h>"}, {"sha": "fb99d5a2e13e99cbee4e8eb3b87b366ae617a008", "filename": "libjava/gnu/gcj/convert/natInput_EUCJIS.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatInput_EUCJIS.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatInput_EUCJIS.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatInput_EUCJIS.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -7,7 +7,7 @@ Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n #include <config.h>\n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <gnu/gcj/convert/Input_EUCJIS.h>\n \n #define ERROR_CHAR 0xFFFD"}, {"sha": "d02b57c229a79b20fb4dabbc1efc65d6263c4b0c", "filename": "libjava/gnu/gcj/convert/natInput_SJIS.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatInput_SJIS.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatInput_SJIS.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatInput_SJIS.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -7,7 +7,7 @@ Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n #include <config.h>\n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <gnu/gcj/convert/Input_SJIS.h>\n \n #define ERROR_CHAR 0xFFFD"}, {"sha": "fe8fd9824425e7855e6117cb17f4a8af0317e020", "filename": "libjava/gnu/gcj/convert/natOutput_EUCJIS.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatOutput_EUCJIS.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatOutput_EUCJIS.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatOutput_EUCJIS.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -7,7 +7,7 @@ Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n #include <config.h>\n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <gnu/gcj/convert/Output_EUCJIS.h>\n \n /* A trie structure to map unicode values to JIS codes."}, {"sha": "d028f11fe101b1c363f90e2015d15ffb725ba201", "filename": "libjava/gnu/gcj/convert/natOutput_SJIS.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatOutput_SJIS.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatOutput_SJIS.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatOutput_SJIS.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -7,7 +7,7 @@ Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n #include <config.h>\n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <gnu/gcj/convert/Output_SJIS.h>\n \n extern unsigned short Unicode_to_JIS[];"}, {"sha": "37b3f4feb9dcbafdd95d4fff4a1f8c4598d308b8", "filename": "libjava/include/Makefile.am", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2FMakefile.am?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -0,0 +1,7 @@\n+## Process this file with automake to produce Makefile.in.\n+\n+AUTOMAKE_OPTIONS = foreign no-installinfo\n+\n+## FIXME: for now we don't install jni.h because we aren't really sure\n+## where to install it.\n+## include_HEADERS = jni.h"}, {"sha": "e1736be96e6ad2e8fc7ebac3a969c1c6a3858e3d", "filename": "libjava/include/Makefile.in", "status": "added", "additions": 253, "deletions": 0, "changes": 253, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2FMakefile.in?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -0,0 +1,253 @@\n+# Makefile.in generated automatically by automake 1.4 from Makefile.am\n+\n+# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+\n+SHELL = @SHELL@\n+\n+srcdir = @srcdir@\n+top_srcdir = @top_srcdir@\n+VPATH = @srcdir@\n+prefix = @prefix@\n+exec_prefix = @exec_prefix@\n+\n+bindir = @bindir@\n+sbindir = @sbindir@\n+libexecdir = @libexecdir@\n+datadir = @datadir@\n+sysconfdir = @sysconfdir@\n+sharedstatedir = @sharedstatedir@\n+localstatedir = @localstatedir@\n+libdir = @libdir@\n+infodir = @infodir@\n+mandir = @mandir@\n+includedir = @includedir@\n+oldincludedir = /usr/include\n+\n+DESTDIR =\n+\n+pkgdatadir = $(datadir)/@PACKAGE@\n+pkglibdir = $(libdir)/@PACKAGE@\n+pkgincludedir = $(includedir)/@PACKAGE@\n+\n+top_builddir = ..\n+\n+ACLOCAL = @ACLOCAL@\n+AUTOCONF = @AUTOCONF@\n+AUTOMAKE = @AUTOMAKE@\n+AUTOHEADER = @AUTOHEADER@\n+\n+INSTALL = @INSTALL@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)\n+INSTALL_DATA = @INSTALL_DATA@\n+INSTALL_SCRIPT = @INSTALL_SCRIPT@\n+transform = @program_transform_name@\n+\n+NORMAL_INSTALL = :\n+PRE_INSTALL = :\n+POST_INSTALL = :\n+NORMAL_UNINSTALL = :\n+PRE_UNINSTALL = :\n+POST_UNINSTALL = :\n+build_alias = @build_alias@\n+build_triplet = @build@\n+host_alias = @host_alias@\n+host_triplet = @host@\n+target_alias = @target_alias@\n+target_triplet = @target@\n+AM_RUNTESTFLAGS = @AM_RUNTESTFLAGS@\n+AR = @AR@\n+AS = @AS@\n+CC = @CC@\n+COMPPATH = @COMPPATH@\n+CPP = @CPP@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n+DIVIDESPEC = @DIVIDESPEC@\n+DLLTOOL = @DLLTOOL@\n+EH_COMMON_INCLUDE = @EH_COMMON_INCLUDE@\n+EXEEXT = @EXEEXT@\n+GCDEPS = @GCDEPS@\n+GCINCS = @GCINCS@\n+GCLIBS = @GCLIBS@\n+GCOBJS = @GCOBJS@\n+GCSPEC = @GCSPEC@\n+LD = @LD@\n+LIBGCJ_CFLAGS = @LIBGCJ_CFLAGS@\n+LIBGCJ_CXXFLAGS = @LIBGCJ_CXXFLAGS@\n+LIBGCJ_JAVAFLAGS = @LIBGCJ_JAVAFLAGS@\n+LIBTOOL = @LIBTOOL@\n+LN_S = @LN_S@\n+MAINT = @MAINT@\n+MAKEINFO = @MAKEINFO@\n+NM = @NM@\n+PACKAGE = @PACKAGE@\n+PERL = @PERL@\n+RANLIB = @RANLIB@\n+SYSTEMSPEC = @SYSTEMSPEC@\n+THREADDEPS = @THREADDEPS@\n+THREADINCS = @THREADINCS@\n+THREADLIBS = @THREADLIBS@\n+THREADOBJS = @THREADOBJS@\n+THREADSPEC = @THREADSPEC@\n+USE_SYMBOL_UNDERSCORE = @USE_SYMBOL_UNDERSCORE@\n+VERSION = @VERSION@\n+ZDEPS = @ZDEPS@\n+ZINCS = @ZINCS@\n+ZLIBS = @ZLIBS@\n+ZLIBSPEC = @ZLIBSPEC@\n+here = @here@\n+libgcj_basedir = @libgcj_basedir@\n+\n+AUTOMAKE_OPTIONS = foreign no-installinfo\n+mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n+CONFIG_HEADER = config.h\n+CONFIG_CLEAN_FILES = \n+DIST_COMMON =  ./stamp-h.in Makefile.am Makefile.in config.h.in\n+\n+\n+DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n+\n+TAR = tar\n+GZIP_ENV = --best\n+all: all-redirect\n+.SUFFIXES:\n+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) \n+\tcd $(top_srcdir) && $(AUTOMAKE) --foreign include/Makefile\n+\n+Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)\n+\tcd $(top_builddir) \\\n+\t  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status\n+\n+\n+config.h: stamp-h\n+\t@if test ! -f $@; then \\\n+\t\trm -f stamp-h; \\\n+\t\t$(MAKE) stamp-h; \\\n+\telse :; fi\n+stamp-h: $(srcdir)/config.h.in $(top_builddir)/config.status\n+\tcd $(top_builddir) \\\n+\t  && CONFIG_FILES= CONFIG_HEADERS=include/config.h \\\n+\t     $(SHELL) ./config.status\n+\t@echo timestamp > stamp-h 2> /dev/null\n+$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@$(srcdir)/stamp-h.in\n+\t@if test ! -f $@; then \\\n+\t\trm -f $(srcdir)/stamp-h.in; \\\n+\t\t$(MAKE) $(srcdir)/stamp-h.in; \\\n+\telse :; fi\n+$(srcdir)/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) \n+\tcd $(top_srcdir) && $(AUTOHEADER)\n+\t@echo timestamp > $(srcdir)/stamp-h.in 2> /dev/null\n+\n+mostlyclean-hdr:\n+\n+clean-hdr:\n+\n+distclean-hdr:\n+\t-rm -f config.h\n+\n+maintainer-clean-hdr:\n+tags: TAGS\n+TAGS:\n+\n+\n+distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)\n+\n+subdir = include\n+\n+distdir: $(DISTFILES)\n+\there=`cd $(top_builddir) && pwd`; \\\n+\ttop_distdir=`cd $(top_distdir) && pwd`; \\\n+\tdistdir=`cd $(distdir) && pwd`; \\\n+\tcd $(top_srcdir) \\\n+\t  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --foreign include/Makefile\n+\t@for file in $(DISTFILES); do \\\n+\t  d=$(srcdir); \\\n+\t  if test -d $$d/$$file; then \\\n+\t    cp -pr $$/$$file $(distdir)/$$file; \\\n+\t  else \\\n+\t    test -f $(distdir)/$$file \\\n+\t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\\n+\t    || cp -p $$d/$$file $(distdir)/$$file || :; \\\n+\t  fi; \\\n+\tdone\n+info-am:\n+info: info-am\n+dvi-am:\n+dvi: dvi-am\n+check-am: all-am\n+check: check-am\n+installcheck-am:\n+installcheck: installcheck-am\n+install-info-am: \n+install-info: install-info-am\n+all-recursive-am: config.h\n+\t$(MAKE) $(AM_MAKEFLAGS) all-recursive\n+\n+install-exec-am:\n+install-exec: install-exec-am\n+\n+install-data-am:\n+install-data: install-data-am\n+\n+install-am: all-am\n+\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n+install: install-am\n+uninstall-am:\n+uninstall: uninstall-am\n+all-am: Makefile config.h\n+all-redirect: all-am\n+install-strip:\n+\t$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install\n+installdirs:\n+\n+\n+mostlyclean-generic:\n+\n+clean-generic:\n+\n+distclean-generic:\n+\t-rm -f Makefile $(CONFIG_CLEAN_FILES)\n+\t-rm -f config.cache config.log stamp-h stamp-h[0-9]*\n+\n+maintainer-clean-generic:\n+mostlyclean-am:  mostlyclean-hdr mostlyclean-generic\n+\n+mostlyclean: mostlyclean-am\n+\n+clean-am:  clean-hdr clean-generic mostlyclean-am\n+\n+clean: clean-am\n+\n+distclean-am:  distclean-hdr distclean-generic clean-am\n+\t-rm -f libtool\n+\n+distclean: distclean-am\n+\n+maintainer-clean-am:  maintainer-clean-hdr maintainer-clean-generic \\\n+\t\tdistclean-am\n+\t@echo \"This command is intended for maintainers to use;\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+\n+maintainer-clean: maintainer-clean-am\n+\n+.PHONY: mostlyclean-hdr distclean-hdr clean-hdr maintainer-clean-hdr \\\n+tags distdir info-am info dvi-am dvi check check-am installcheck-am \\\n+installcheck install-info-am install-info all-recursive-am \\\n+install-exec-am install-exec install-data-am install-data install-am \\\n+install uninstall-am uninstall all-redirect all-am all installdirs \\\n+mostlyclean-generic distclean-generic clean-generic \\\n+maintainer-clean-generic clean mostlyclean distclean maintainer-clean\n+\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"}, {"sha": "c6b9432dd8a7b8d139cbc1fae76bbeb04cbcfbd9", "filename": "libjava/include/java-cpool.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Finclude%2Fjava-cpool.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Finclude%2Fjava-cpool.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjava-cpool.h?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -11,7 +11,7 @@ details.  */\n #ifndef __JAVA_CPOOL_H__\n #define __JAVA_CPOOL_H__\n \n-#include <javaprims.h>\n+#include <gcj/javaprims.h>\n \n // we rename these, to avoid polluting the name space\n #define JV_CONSTANT_Undefined (0L)"}, {"sha": "f29d3ddb95a1712f397bf90d56994bf45796fe8f", "filename": "libjava/include/java-interp.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Finclude%2Fjava-interp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Finclude%2Fjava-interp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjava-interp.h?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -11,8 +11,6 @@ details.  */\n #ifndef __JAVA_INTERP_H__\n #define __JAVA_INTERP_H__\n \n-#include <config.h>\n-\n #include <jvm.h>\n #include <java-cpool.h>\n "}, {"sha": "e3ae6b355c2f1cdeddadd7753510383b93317789", "filename": "libjava/include/jni.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Finclude%2Fjni.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Finclude%2Fjni.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjni.h?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -6,16 +6,16 @@ This software is copyrighted work licensed under the terms of the\n Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n-#ifndef __JAVA_JNI_H__\n-#define __JAVA_JNI_H__\n+#ifndef __GCJ_JNI_H__\n+#define __GCJ_JNI_H__\n \n #include <stdarg.h>\n #define _Jv_va_list va_list\n \n #ifdef __cplusplus\n \n // This is wrong, because it pollutes the name-space too much!\n-#include <javaprims.h>\n+#include <gcj/javaprims.h>\n \n typedef struct _Jv_JNIEnv JNIEnv;\n #else\n@@ -293,4 +293,4 @@ _Jv_JNIEnv::GetStringLength (jstring str)\n \n #endif\n \n-#endif /* __JAVA_JNI_H__ */\n+#endif /* __GCJ_JNI_H__ */"}, {"sha": "7b0b476a2ed46fb2c8d5793c331c94a892a86733", "filename": "libjava/include/jvm.h", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Finclude%2Fjvm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Finclude%2Fjvm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjvm.h?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -11,8 +11,18 @@ details.  */\n #ifndef __JAVA_JVM_H__\n #define __JAVA_JVM_H__\n \n+#include <gcj/javaprims.h>\n+\n #include <java-assert.h>\n-#include <java-field.h>\n+#include <java-threads.h>\n+// Must include java-gc.h before Object.h for the implementation.\n+#include <java-gc.h>\n+\n+#include <java/lang/Object.h>\n+\n+// Include cni.h before field.h to enable all definitions.  FIXME.\n+#include <gcj/cni.h>\n+#include <gcj/field.h>\n \n /* Structure of the virtual table.  */\n struct _Jv_VTable"}, {"sha": "581606e4047c9c963d3cc41c61392e685eeca764", "filename": "libjava/interpret.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Finterpret.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Finterpret.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finterpret.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -14,9 +14,7 @@ details.  */\n \n #pragma implementation \"java-interp.h\"\n \n-#include <cni.h>\n #include <jvm.h>\n-#include <java-field.h>\n #include <java-cpool.h>\n #include <java-interp.h>\n #include <java/lang/fdlibm.h>"}, {"sha": "9a29b87197c2d591b97125ab6f9c747991a5e725", "filename": "libjava/java/awt/natToolkit.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Fawt%2FnatToolkit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Fawt%2FnatToolkit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FnatToolkit.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -10,7 +10,7 @@ details.  */\n \n /*#define ENABLE_GTK*/\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <java/awt/Toolkit.h>\n #ifdef ENABLE_GTK\n #include <java/awt/peer/GtkToolkit.h>"}, {"sha": "168d7e1d612d09af4e199773b4a4b4a15855b0be", "filename": "libjava/java/io/natFile.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Fio%2FnatFile.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Fio%2FnatFile.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFile.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -29,7 +29,7 @@ details.  */\n #endif\n #include <string.h>\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n #include <java/io/File.h>\n #include <java/io/IOException.h>"}, {"sha": "54c1bdbaa70c2cce1494de7d4fadfc39938fd6ab", "filename": "libjava/java/io/natFileDescriptorEcos.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Fio%2FnatFileDescriptorEcos.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Fio%2FnatFileDescriptorEcos.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFileDescriptorEcos.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -16,7 +16,7 @@ details.  */\n #include <sys/stat.h>\n #include <sys/param.h>\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n #include <java/io/FileDescriptor.h>\n #include <java/io/SyncFailedException.h>"}, {"sha": "9da0eae4eeb3a89ef7fc6abb13bf865ced0c69ac", "filename": "libjava/java/io/natFileDescriptorPosix.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -34,7 +34,7 @@ details.  */\n #include <sys/filio.h>\n #endif\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n #include <java/io/FileDescriptor.h>\n #include <java/io/SyncFailedException.h>"}, {"sha": "c88c86e2e84b2801b48b6beede345155fc986bfa", "filename": "libjava/java/lang/Class.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FClass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FClass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClass.h?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -18,7 +18,7 @@ details.  */\n #include <java/lang/String.h>\n #include <java/net/URL.h>\n \n-// We declare these here to avoid including cni.h.\n+// We declare these here to avoid including gcj/cni.h.\n extern \"C\" void _Jv_InitClass (jclass klass);\n extern \"C\" void _Jv_RegisterClasses (jclass *classes);\n "}, {"sha": "971ba686d4d73833244d13ba9c49bffb41e09b9a", "filename": "libjava/java/lang/Object.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FObject.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FObject.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FObject.h?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -13,10 +13,7 @@ details.  */\n \n #pragma interface\n \n-#include <javaprims.h>\n-#include <java-assert.h>\n-#include <java-threads.h>\n-#include <java-gc.h>\n+#include <gcj/javaprims.h>\n \n // This class is mainly here as a kludge to get G++ to allocate\n // vtable pointer as the *first* word of each Object, instead of"}, {"sha": "4eca4a4f185f6ff617c6173e00026eef54c69a21", "filename": "libjava/java/lang/natCharacter.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatCharacter.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatCharacter.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatCharacter.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -10,7 +10,7 @@ details.  */\n \n #include <config.h>\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n #include <java/lang/Character.h>\n "}, {"sha": "f7c598dac5e52c2595cedd6a792580ac3bbdc584", "filename": "libjava/java/lang/natClass.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatClass.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatClass.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClass.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -15,7 +15,7 @@ details.  */\n \n #pragma implementation \"Class.h\"\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n #include <java/lang/Class.h>\n #include <java/lang/ClassLoader.h>"}, {"sha": "9ad81a81a3711eebc60da2033ce0b3d9b25b0fa0", "filename": "libjava/java/lang/natClassLoader.cc", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatClassLoader.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatClassLoader.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClassLoader.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -15,8 +15,12 @@ details.  */\n #include <stdlib.h>\n #include <string.h>\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n+\n+#include <java-threads.h>\n+#include <java-interp.h>\n+\n #include <java/lang/Character.h>\n #include <java/lang/Thread.h>\n #include <java/lang/ClassLoader.h>\n@@ -31,8 +35,6 @@ details.  */\n #include <java/lang/IncompatibleClassChangeError.h>\n #include <java/lang/reflect/Modifier.h>\n \n-#include <java-interp.h>\n-\n #define CloneableClass _CL_Q34java4lang9Cloneable\n extern java::lang::Class CloneableClass;\n #define ObjectClass _CL_Q34java4lang6Object"}, {"sha": "87466a8e37f995fcbeaf7df062f7c283b630bef2", "filename": "libjava/java/lang/natDouble.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatDouble.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatDouble.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatDouble.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -25,7 +25,7 @@ char *alloca ();\n \n #include <stdlib.h>\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <java/lang/String.h>\n #include <java/lang/Double.h>\n #include <java/lang/NumberFormatException.h>"}, {"sha": "c9d4dbde30fb25e0b6fc7b1a3cee9ff5de356c9d", "filename": "libjava/java/lang/natEcosProcess.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatEcosProcess.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatEcosProcess.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatEcosProcess.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -14,7 +14,7 @@ details.  */\n \n #include <config.h>\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n \n #include <java/lang/ConcreteProcess.h>"}, {"sha": "031779eb5ac0f4edacd66f6f7b0e20beca4724c4", "filename": "libjava/java/lang/natFirstThread.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatFirstThread.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatFirstThread.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatFirstThread.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -12,7 +12,7 @@ details.  */\n \n #include <stdlib.h>\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n \n #include <java/lang/FirstThread.h>"}, {"sha": "bdfc9f9cd9eb9beb75d1a4e7f9d512ad20686c54", "filename": "libjava/java/lang/natMath.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatMath.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatMath.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatMath.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -23,7 +23,7 @@ details.  */\n #include <java/lang/Integer.h>\n #include <java/lang/Long.h>\n #include <java/lang/Math.h>\n-#include <java-array.h>\n+#include <gcj/array.h>\n \n #include \"fdlibm.h\"\n "}, {"sha": "22632c5015c8ee9a7cec7a628d1a601994161be6", "filename": "libjava/java/lang/natObject.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatObject.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatObject.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatObject.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -14,7 +14,7 @@ details.  */\n \n #pragma implementation \"Object.h\"\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n #include <java/lang/Object.h>\n #include <java-threads.h>"}, {"sha": "9fa7d3378fee28d81af54c9aa8212a1ae8fadc12", "filename": "libjava/java/lang/natPosixProcess.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatPosixProcess.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatPosixProcess.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatPosixProcess.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -22,7 +22,7 @@ details.  */\n #include <stdlib.h>\n #include <stdio.h>\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n \n #include <java/lang/ConcreteProcess.h>"}, {"sha": "ec1d402097a8b3edd8aab327f76d716c49f54886", "filename": "libjava/java/lang/natRuntime.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatRuntime.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatRuntime.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatRuntime.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -12,7 +12,7 @@ details.  */\n \n #include <stdlib.h>\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n #include <java/lang/Runtime.h>\n #include <java/lang/UnknownError.h>"}, {"sha": "53bda1f4c33ae04e8bb9ec53ee91cc6ecb9c2a88", "filename": "libjava/java/lang/natString.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatString.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatString.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatString.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -13,7 +13,7 @@ details.  */\n #include <string.h>\n #include <stdlib.h>\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <java/lang/Character.h>\n #include <java/lang/String.h>\n #include <java/lang/IndexOutOfBoundsException.h>"}, {"sha": "f453de0cb6cde9f754974571310b4ae03ace3666", "filename": "libjava/java/lang/natSystem.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatSystem.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatSystem.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatSystem.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -38,7 +38,7 @@ details.  */\n #include <sys/utsname.h>\n #endif\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n #include <java/lang/System.h>\n #include <java/lang/Class.h>"}, {"sha": "c9d115cee3922130fe1af435fe4a3cc6a81de93a", "filename": "libjava/java/lang/natThread.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatThread.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2FnatThread.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatThread.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -12,8 +12,10 @@ details.  */\n \n #include <stdlib.h>\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n+#include <java-threads.h>\n+\n #include <java/lang/Thread.h>\n #include <java/lang/ThreadGroup.h>\n #include <java/lang/IllegalArgumentException.h>"}, {"sha": "88e809134bb471be1a32a544224e211d3cf6b5db", "filename": "libjava/java/lang/reflect/natArray.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2Freflect%2FnatArray.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2Freflect%2FnatArray.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FnatArray.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -13,7 +13,7 @@ details.  */\n #include <stdlib.h>\n \n #include <jvm.h>\n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <java/lang/reflect/Array.h>\n #include <java/lang/IllegalArgumentException.h>\n #include <java/lang/Byte.h>"}, {"sha": "04945328ad5a5aa9b3e242cad63426101c23d5d2", "filename": "libjava/java/lang/reflect/natField.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2Freflect%2FnatField.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2Freflect%2FnatField.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FnatField.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -12,7 +12,6 @@ details.  */\n \n #include <stdlib.h>\n \n-#include <cni.h>\n #include <jvm.h>\n #include <java/lang/reflect/Field.h>\n #include <java/lang/reflect/Modifier.h>\n@@ -26,7 +25,6 @@ details.  */\n #include <java/lang/Double.h>\n #include <java/lang/Boolean.h>\n #include <java/lang/Character.h>\n-#include <java-field.h>\n \n jint\n java::lang::reflect::Field::getModifiers ()"}, {"sha": "0130ac4243f7513874beef5cfc1a496c4ef2c595", "filename": "libjava/java/lang/reflect/natMethod.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2Freflect%2FnatMethod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Flang%2Freflect%2FnatMethod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Freflect%2FnatMethod.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -12,9 +12,8 @@ details.  */\n \n #include <config.h>\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n-#include <java-array.h>\n \n #include <java/lang/reflect/Method.h>\n #include <java/lang/reflect/InvocationTargetException.h>\n@@ -32,7 +31,7 @@ details.  */\n #include <java/lang/IllegalArgumentException.h>\n #include <java/lang/NullPointerException.h>\n #include <java/lang/Class.h>\n-#include <java-method.h>\n+#include <gcj/method.h>\n \n #define ClassClass _CL_Q34java4lang5Class\n extern java::lang::Class ClassClass;"}, {"sha": "bc69ac2d2acf22a74a32d66a5dbbe4a0d075508b", "filename": "libjava/java/net/natInetAddress.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Fnet%2FnatInetAddress.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Fnet%2FnatInetAddress.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatInetAddress.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -35,7 +35,7 @@ details.  */\n #include <netdb.h>\n #endif\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n #include <java/net/InetAddress.h>\n #include <java/net/UnknownHostException.h>"}, {"sha": "2906ad5047258c8c7b9aa2c6a1c0c692ccdf6337", "filename": "libjava/java/net/natPlainDatagramSocketImpl.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -33,7 +33,7 @@ details.  */\n #include <bstring.h>\n #endif\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <java/io/IOException.h>\n #include <java/io/FileDescriptor.h>\n #include <java/io/InterruptedIOException.h>"}, {"sha": "d30908ce7fc111395498799860bc4b2f92acbb1c", "filename": "libjava/java/net/natPlainSocketImpl.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Fnet%2FnatPlainSocketImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Fnet%2FnatPlainSocketImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatPlainSocketImpl.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -25,8 +25,8 @@ details.  */\n #include <bstring.h>\n #endif\n \n-#include <cni.h>\n-#include <javaprims.h>\n+#include <gcj/cni.h>\n+#include <gcj/javaprims.h>\n #include <java/io/IOException.h>\n #include <java/io/FileDescriptor.h>\n #include <java/io/InterruptedIOException.h>"}, {"sha": "b29158d429de3d587b7b2a88c67b300e1113e621", "filename": "libjava/java/text/natCollator.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Ftext%2FnatCollator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Ftext%2FnatCollator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FnatCollator.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -12,7 +12,7 @@ details.  */\n \n #include <config.h>\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n \n #include <java/text/Collator.h>"}, {"sha": "8fd4ef185b084d57b9adfff4991ab531cdabd80c", "filename": "libjava/java/util/natDate.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Futil%2FnatDate.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Futil%2FnatDate.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FnatDate.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -14,7 +14,7 @@ details.  */\n #define _POSIX_PTHREAD_SEMANTICS\n #endif\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <java/util/Date.h>\n #include <java/lang/String.h>\n "}, {"sha": "4933b295a9a2c4f35e990266d392c19683f15be4", "filename": "libjava/java/util/natGregorianCalendar.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Futil%2FnatGregorianCalendar.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Futil%2FnatGregorianCalendar.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FnatGregorianCalendar.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -22,7 +22,7 @@ details.  */\n #include <string.h>\n #endif\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <java/util/TimeZone.h>\n #include <java/util/GregorianCalendar.h>\n #include <time.h>"}, {"sha": "d957e332677adf9cbfe0d4fce5014722e4fcebef", "filename": "libjava/java/util/zip/natDeflater.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Futil%2Fzip%2FnatDeflater.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Futil%2Fzip%2FnatDeflater.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FnatDeflater.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -15,7 +15,7 @@ details.  */\n #include <zlib.h>\n #include <stdlib.h>\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n \n #include <java/util/zip/Deflater.h>"}, {"sha": "da147b3c5924d0b7e81ac72987710a1bcb25bc42", "filename": "libjava/java/util/zip/natInflater.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Futil%2Fzip%2FnatInflater.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjava%2Futil%2Fzip%2FnatInflater.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FnatInflater.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -15,7 +15,7 @@ details.  */\n #include <zlib.h>\n #include <stdlib.h>\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n \n #include <java/util/zip/Inflater.h>"}, {"sha": "013fe1fd106439342d7a15c3ec854cae12a085b2", "filename": "libjava/jni.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjni.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fjni.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -13,7 +13,7 @@ details.  */\n #include <stddef.h>\n \n #include <jni.h>\n-#include <java-field.h>\n+#include <gcj/field.h>\n \n static jclass\n _Jv_JNI_GetSuperclass (JNIEnv *, jclass clazz)"}, {"sha": "22c30f637e2814227efafcc0284f7eac52f2965a", "filename": "libjava/no-threads.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fno-threads.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fno-threads.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fno-threads.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -10,7 +10,7 @@ details.  */\n \n #include <config.h>\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n #include <java/lang/Thread.h>\n "}, {"sha": "3a31092ab6654d82f0971f9ae69f38d220d94dfc", "filename": "libjava/nogc.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fnogc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fnogc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fnogc.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -13,7 +13,7 @@ details.  */\n #include <stdio.h>\n #include <stdlib.h>\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n \n // Total amount of memory allocated."}, {"sha": "2ddc9bff67237b83bc35ad43c98dde4385c1133c", "filename": "libjava/posix-threads.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fposix-threads.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fposix-threads.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fposix-threads.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -28,7 +28,7 @@ extern \"C\"\n #include <signal.h>\n #include <errno.h>\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n #include <java/lang/Thread.h>\n #include <java/lang/System.h>"}, {"sha": "39d8d763d766d30e4102d038ef40ae65a3fa8e76", "filename": "libjava/prims.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fprims.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fprims.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fprims.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -15,11 +15,12 @@ details.  */\n #include <stdio.h>\n #include <string.h>\n \n-#pragma implementation \"java-array.h\"\n+#pragma implementation \"gcj/array.h\"\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n #include <java-signal.h>\n+#include <java-threads.h>\n \n #include <java/lang/Class.h>\n #include <java/lang/Runtime.h>"}, {"sha": "1c031f0a9dd540efc04c49bcc07600142b51cc7e", "filename": "libjava/quick-threads.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fquick-threads.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fquick-threads.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fquick-threads.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -10,7 +10,7 @@ details.  */\n \n #include <config.h>\n \n-#include <cni.h>\n+#include <gcj/cni.h>\n #include <jvm.h>\n \n #include <java/lang/Thread.h>"}, {"sha": "00a340d745478c4806981536dc7908a136c65638", "filename": "libjava/resolve.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fresolve.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27e934d8bae03ea7eddeb3770641440333a71478/libjava%2Fresolve.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fresolve.cc?ref=27e934d8bae03ea7eddeb3770641440333a71478", "patch": "@@ -10,10 +10,12 @@ details.  */\n \n /* Author: Kresten Krab Thorup <krab@gnu.org>  */\n \n+#include <config.h>\n+\n #include <java-interp.h>\n \n-#include <cni.h>\n #include <jvm.h>\n+#include <gcj/cni.h>\n #include <string.h>\n #include <java-cpool.h>\n #include <java/lang/Class.h>"}]}