{"sha": "8c64be75d3c74fe73d7a681fac4bc81b5af5919d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM2NGJlNzVkM2M3NGZlNzNkN2E2ODFmYWM0YmM4MWI1YWY1OTE5ZA==", "commit": {"author": {"name": "Stan Cox", "email": "scox@cygnus.com", "date": "1998-11-13T11:04:17Z"}, "committer": {"name": "Stan Cox", "email": "scox@gcc.gnu.org", "date": "1998-11-13T11:04:17Z"}, "message": "* sparc.c (sparc_flat_compute_frame_size): Correctly calc args_size\n\nFrom-SVN: r23634", "tree": {"sha": "9f3c54976b59315c467ecf2ec2adcc46633b2f10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f3c54976b59315c467ecf2ec2adcc46633b2f10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c64be75d3c74fe73d7a681fac4bc81b5af5919d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c64be75d3c74fe73d7a681fac4bc81b5af5919d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c64be75d3c74fe73d7a681fac4bc81b5af5919d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c64be75d3c74fe73d7a681fac4bc81b5af5919d/comments", "author": null, "committer": null, "parents": [{"sha": "a49fb37af28600b3586a7332342bb88c53d42a98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a49fb37af28600b3586a7332342bb88c53d42a98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a49fb37af28600b3586a7332342bb88c53d42a98"}], "stats": {"total": 40, "additions": 27, "deletions": 13}, "files": [{"sha": "f627228fbf3749e15fdb7a72e6b84e5c04657342", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c64be75d3c74fe73d7a681fac4bc81b5af5919d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c64be75d3c74fe73d7a681fac4bc81b5af5919d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c64be75d3c74fe73d7a681fac4bc81b5af5919d", "patch": "@@ -1,3 +1,8 @@\n+Fri Nov 13 11:02:11 1998  Stan Cox  <scox@cygnus.com>\n+\n+\t* sparc.c (sparc_flat_compute_frame_size): Correctly calc args_size\n+\tin a leaf function.  Clarify total_size/extra_size relationship.\n+\n Thu Nov 12 19:20:57 1998  Geoffrey Noer  <noer@cygnus.com>\n \n \t* i386/cygwin32.asm: Delete."}, {"sha": "f3e48c824fdf98e90591c58dae6e8d4059f872b3", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 22, "deletions": 13, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c64be75d3c74fe73d7a681fac4bc81b5af5919d/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c64be75d3c74fe73d7a681fac4bc81b5af5919d/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=8c64be75d3c74fe73d7a681fac4bc81b5af5919d", "patch": "@@ -5630,18 +5630,23 @@ sparc_flat_compute_frame_size (size)\n \n   /* This is the size of the 16 word reg save area, 1 word struct addr\n      area, and 4 word fp/alu register copy area.  */\n-  extra_size\t = -STARTING_FRAME_OFFSET + FIRST_PARM_OFFSET(0);\n-  var_size\t = size;\n-  /* Also include the size needed for the 6 parameter registers.  */\n-  args_size\t = current_function_outgoing_args_size + 24;\n-  total_size\t = var_size + args_size + extra_size;\n-  gp_reg_size\t = 0;\n-  fp_reg_size\t = 0;\n-  gmask\t\t = 0;\n-  fmask\t\t = 0;\n-  reg_offset\t = 0;\n+  extra_size = -STARTING_FRAME_OFFSET + FIRST_PARM_OFFSET(0);\n+  var_size = size;\n+  gp_reg_size = 0;\n+  fp_reg_size = 0;\n+  gmask = 0;\n+  fmask = 0;\n+  reg_offset = 0;\n   need_aligned_p = 0;\n \n+  args_size = 0;\n+  if (!leaf_function_p ())\n+    {\n+      /* Also include the size needed for the 6 parameter registers.  */\n+      args_size = current_function_outgoing_args_size + 24;\n+    }\n+  total_size = var_size + args_size;\n+\n   /* Calculate space needed for gp registers.  */\n   for (regno = 1; regno <= 31; regno++)\n     {\n@@ -5690,9 +5695,13 @@ sparc_flat_compute_frame_size (size)\n       total_size += gp_reg_size + fp_reg_size;\n     }\n \n-  /* ??? This looks a little suspicious.  Clarify.  */\n-  if (total_size == extra_size)\n-    total_size = extra_size = 0;\n+  /* If we must allocate a stack frame at all, we must also allocate \n+     room for register window spillage, so as to be binary compatible\n+     with libraries and operating systems that do not use -mflat.  */\n+  if (total_size > 0)\n+    total_size += extra_size;\n+  else\n+    extra_size = 0;\n \n   total_size = SPARC_STACK_ALIGN (total_size);\n "}]}