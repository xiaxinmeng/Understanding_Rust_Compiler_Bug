{"sha": "b0a9217cca911f6f79c1e6769b0badebbb66d8c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBhOTIxN2NjYTkxMWY2Zjc5YzFlNjc2OWIwYmFkZWJiYjY2ZDhjNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-11-07T11:28:42Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-11-07T11:28:42Z"}, "message": "tree-dfa.c (get_ref_base_and_extent): Fix casting.\n\n2013-11-07  Richard Biener  <rguenther@suse.de>\n\n\t* tree-dfa.c (get_ref_base_and_extent): Fix casting.\n\nFrom-SVN: r204505", "tree": {"sha": "fa7bc704aeb513486b11125973782f84c699dff8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa7bc704aeb513486b11125973782f84c699dff8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0a9217cca911f6f79c1e6769b0badebbb66d8c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0a9217cca911f6f79c1e6769b0badebbb66d8c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0a9217cca911f6f79c1e6769b0badebbb66d8c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0a9217cca911f6f79c1e6769b0badebbb66d8c6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d9befd12523bf797e1ace0af5bd2545330043227", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9befd12523bf797e1ace0af5bd2545330043227", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9befd12523bf797e1ace0af5bd2545330043227"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "fa1d74bdcd028d542272b3282bbc106bb4999c80", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0a9217cca911f6f79c1e6769b0badebbb66d8c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0a9217cca911f6f79c1e6769b0badebbb66d8c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b0a9217cca911f6f79c1e6769b0badebbb66d8c6", "patch": "@@ -1,3 +1,7 @@\n+2013-11-07  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-dfa.c (get_ref_base_and_extent): Fix casting.\n+\n 2013-11-07  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/59034"}, {"sha": "a31a0a28161a2d6df7e58db6ac213e7dbea2d2a4", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0a9217cca911f6f79c1e6769b0badebbb66d8c6/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0a9217cca911f6f79c1e6769b0badebbb66d8c6/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=b0a9217cca911f6f79c1e6769b0badebbb66d8c6", "patch": "@@ -569,7 +569,7 @@ get_ref_base_and_extent (tree exp, HOST_WIDE_INT *poffset,\n \t      && (!bit_offset.fits_shwi ()\n \t\t  || !host_integerp (TYPE_SIZE (TREE_TYPE (exp)), 1)\n \t\t  || (bit_offset.to_shwi () + maxsize\n-\t\t      == (signed) TREE_INT_CST_LOW\n+\t\t      == (HOST_WIDE_INT) TREE_INT_CST_LOW\n \t\t            (TYPE_SIZE (TREE_TYPE (exp))))))\n \t    maxsize = -1;\n \n@@ -606,7 +606,8 @@ get_ref_base_and_extent (tree exp, HOST_WIDE_INT *poffset,\n       && (!bit_offset.fits_shwi ()\n \t  || !host_integerp (TYPE_SIZE (TREE_TYPE (exp)), 1)\n \t  || (bit_offset.to_shwi () + maxsize\n-\t      == (signed) TREE_INT_CST_LOW (TYPE_SIZE (TREE_TYPE (exp))))))\n+\t      == (HOST_WIDE_INT) TREE_INT_CST_LOW\n+\t           (TYPE_SIZE (TREE_TYPE (exp))))))\n     maxsize = -1;\n \n  done:"}]}