{"sha": "371cc683371bedb0e53ebcee0c0e89604a1e74b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzcxY2M2ODMzNzFiZWRiMGU1M2ViY2VlMGMwZTg5NjA0YTFlNzRiMQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-06-10T16:07:37Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-06-10T16:08:29Z"}, "message": "avoid stmt-info allocation for debug stmts\n\nThe following avoids allocating stmt info structs for debug stmts.\n\n2020-06-10  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-loop.c (vect_determine_vectorization_factor):\n\tSkip debug stmts.\n\t(_loop_vec_info::_loop_vec_info): Likewise.\n\t(vect_update_vf_for_slp): Likewise.\n\t(vect_analyze_loop_operations): Likewise.\n\t(update_epilogue_loop_vinfo): Likewise.\n\t* tree-vect-patterns.c (vect_determine_precisions): Likewise.\n\t(vect_pattern_recog): Likewise.\n\t* tree-vect-slp.c (vect_detect_hybrid_slp): Likewise.\n\t(_bb_vec_info::_bb_vec_info): Likewise.\n\t* tree-vect-stmts.c (vect_mark_stmts_to_be_vectorized):\n\tLikewise.", "tree": {"sha": "6d6e1ce414c714c78681b4245f2fe6c437fe0573", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d6e1ce414c714c78681b4245f2fe6c437fe0573"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/371cc683371bedb0e53ebcee0c0e89604a1e74b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/371cc683371bedb0e53ebcee0c0e89604a1e74b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/371cc683371bedb0e53ebcee0c0e89604a1e74b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/371cc683371bedb0e53ebcee0c0e89604a1e74b1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36e95a9e539a08275a0a6ef542a7fae5baa5710f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36e95a9e539a08275a0a6ef542a7fae5baa5710f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36e95a9e539a08275a0a6ef542a7fae5baa5710f"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "53def19a4fb5e941e727c2f0cb28d15b6966f662", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/371cc683371bedb0e53ebcee0c0e89604a1e74b1/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/371cc683371bedb0e53ebcee0c0e89604a1e74b1/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=371cc683371bedb0e53ebcee0c0e89604a1e74b1", "patch": "@@ -342,6 +342,8 @@ vect_determine_vectorization_factor (loop_vec_info loop_vinfo)\n       for (gimple_stmt_iterator si = gsi_start_bb (bb); !gsi_end_p (si);\n \t   gsi_next (&si))\n \t{\n+\t  if (is_gimple_debug (gsi_stmt (si)))\n+\t    continue;\n \t  stmt_info = loop_vinfo->lookup_stmt (gsi_stmt (si));\n \t  opt_result res\n \t    = vect_determine_vf_for_stmt (loop_vinfo,\n@@ -847,6 +849,8 @@ _loop_vec_info::_loop_vec_info (class loop *loop_in, vec_info_shared *shared)\n \t{\n \t  gimple *stmt = gsi_stmt (si);\n \t  gimple_set_uid (stmt, 0);\n+\t  if (is_gimple_debug (stmt))\n+\t    continue;\n \t  add_stmt (stmt);\n \t  /* If .GOMP_SIMD_LANE call for the current loop has 3 arguments, the\n \t     third argument is the #pragma omp simd if (x) condition, when 0,\n@@ -1393,6 +1397,8 @@ vect_update_vf_for_slp (loop_vec_info loop_vinfo)\n       for (gimple_stmt_iterator si = gsi_start_bb (bb); !gsi_end_p (si);\n \t   gsi_next (&si))\n \t{\n+\t  if (is_gimple_debug (gsi_stmt (si)))\n+\t    continue;\n \t  stmt_vec_info stmt_info = loop_vinfo->lookup_stmt (gsi_stmt (si));\n \t  stmt_info = vect_stmt_to_vectorize (stmt_info);\n \t  if ((STMT_VINFO_RELEVANT_P (stmt_info)\n@@ -1584,7 +1590,8 @@ vect_analyze_loop_operations (loop_vec_info loop_vinfo)\n \t   gsi_next (&si))\n         {\n \t  gimple *stmt = gsi_stmt (si);\n-\t  if (!gimple_clobber_p (stmt))\n+\t  if (!gimple_clobber_p (stmt)\n+\t      && !is_gimple_debug (stmt))\n \t    {\n \t      opt_result res\n \t\t= vect_analyze_stmt (loop_vinfo,\n@@ -2345,6 +2352,8 @@ vect_analyze_loop_2 (loop_vec_info loop_vinfo, bool &fatal, unsigned *n_stmts)\n       for (gimple_stmt_iterator si = gsi_start_bb (bb);\n \t   !gsi_end_p (si); gsi_next (&si))\n \t{\n+\t  if (is_gimple_debug (gsi_stmt (si)))\n+\t    continue;\n \t  stmt_vec_info stmt_info = loop_vinfo->lookup_stmt (gsi_stmt (si));\n \t  STMT_SLP_TYPE (stmt_info) = loop_vect;\n \t  if (STMT_VINFO_IN_PATTERN_P (stmt_info))\n@@ -8373,6 +8382,8 @@ update_epilogue_loop_vinfo (class loop *epilogue, tree advance)\n \t   !gsi_end_p (epilogue_gsi); gsi_next (&epilogue_gsi))\n \t{\n \t  new_stmt = gsi_stmt (epilogue_gsi);\n+\t  if (is_gimple_debug (new_stmt))\n+\t    continue;\n \n \t  gcc_assert (gimple_uid (new_stmt) > 0);\n \t  stmt_vinfo"}, {"sha": "636ad59c00169d13b294553937f2eb47b23df3d6", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/371cc683371bedb0e53ebcee0c0e89604a1e74b1/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/371cc683371bedb0e53ebcee0c0e89604a1e74b1/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=371cc683371bedb0e53ebcee0c0e89604a1e74b1", "patch": "@@ -5112,8 +5112,9 @@ vect_determine_precisions (vec_info *vinfo)\n \t  basic_block bb = bbs[nbbs - i - 1];\n \t  for (gimple_stmt_iterator si = gsi_last_bb (bb);\n \t       !gsi_end_p (si); gsi_prev (&si))\n-\t    vect_determine_stmt_precisions\n-\t      (vinfo, vinfo->lookup_stmt (gsi_stmt (si)));\n+\t    if (!is_gimple_debug (gsi_stmt (si)))\n+\t      vect_determine_stmt_precisions\n+\t\t(vinfo, vinfo->lookup_stmt (gsi_stmt (si)));\n \t}\n     }\n   else\n@@ -5478,6 +5479,8 @@ vect_pattern_recog (vec_info *vinfo)\n \t  basic_block bb = bbs[i];\n \t  for (si = gsi_start_bb (bb); !gsi_end_p (si); gsi_next (&si))\n \t    {\n+\t      if (is_gimple_debug (gsi_stmt (si)))\n+\t\tcontinue;\n \t      stmt_vec_info stmt_info = vinfo->lookup_stmt (gsi_stmt (si));\n \t      /* Scan over all generic vect_recog_xxx_pattern functions.  */\n \t      for (j = 0; j < NUM_PATTERNS; j++)\n@@ -5494,7 +5497,7 @@ vect_pattern_recog (vec_info *vinfo)\n \t{\n \t  gimple *stmt = gsi_stmt (si);\n \t  stmt_vec_info stmt_info = bb_vinfo->lookup_stmt (stmt);\n-\t  if (stmt_info && !STMT_VINFO_VECTORIZABLE (stmt_info))\n+\t  if (!stmt_info || !STMT_VINFO_VECTORIZABLE (stmt_info))\n \t    continue;\n \n \t  /* Scan over all generic vect_recog_xxx_pattern functions.  */"}, {"sha": "303410c2fc4bb274ef4fd63c4821730df66f4934", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/371cc683371bedb0e53ebcee0c0e89604a1e74b1/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/371cc683371bedb0e53ebcee0c0e89604a1e74b1/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=371cc683371bedb0e53ebcee0c0e89604a1e74b1", "patch": "@@ -2500,6 +2500,8 @@ vect_detect_hybrid_slp (loop_vec_info loop_vinfo)\n \t   gsi_next (&gsi))\n \t{\n \t  gimple *stmt = gsi_stmt (gsi);\n+\t  if (is_gimple_debug (stmt))\n+\t    continue;\n \t  stmt_vec_info stmt_info = loop_vinfo->lookup_stmt (stmt);\n \t  if (STMT_VINFO_IN_PATTERN_P (stmt_info))\n \t    {\n@@ -2559,6 +2561,8 @@ _bb_vec_info::_bb_vec_info (gimple_stmt_iterator region_begin_in,\n     {\n       gimple *stmt = gsi_stmt (gsi);\n       gimple_set_uid (stmt, 0);\n+      if (is_gimple_debug (stmt))\n+\tcontinue;\n       add_stmt (stmt);\n     }\n "}, {"sha": "72f0e8061f5fb2bba72ac811d0a2f2719cf62b14", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/371cc683371bedb0e53ebcee0c0e89604a1e74b1/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/371cc683371bedb0e53ebcee0c0e89604a1e74b1/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=371cc683371bedb0e53ebcee0c0e89604a1e74b1", "patch": "@@ -636,6 +636,8 @@ vect_mark_stmts_to_be_vectorized (loop_vec_info loop_vinfo, bool *fatal)\n \t}\n       for (si = gsi_start_bb (bb); !gsi_end_p (si); gsi_next (&si))\n \t{\n+\t  if (is_gimple_debug (gsi_stmt (si)))\n+\t    continue;\n \t  stmt_vec_info stmt_info = loop_vinfo->lookup_stmt (gsi_stmt (si));\n \t  if (dump_enabled_p ())\n \t      dump_printf_loc (MSG_NOTE, vect_location,"}]}