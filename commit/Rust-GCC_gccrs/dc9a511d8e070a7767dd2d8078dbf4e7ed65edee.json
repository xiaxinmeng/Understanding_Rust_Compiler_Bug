{"sha": "dc9a511d8e070a7767dd2d8078dbf4e7ed65edee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM5YTUxMWQ4ZTA3MGE3NzY3ZGQyZDgwNzhkYmY0ZTdlZDY1ZWRlZQ==", "commit": {"author": {"name": "Tom Browder", "email": "tom.browder@gmail.com", "date": "2008-01-31T23:59:46Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2008-01-31T23:59:46Z"}, "message": "c-tree.texi (Types): Fix grammar.\n\n\t* doc/c-tree.texi (Types): Fix grammar.\n\t(Expression trees): Ditto.\n\t* doc/passes.texi (Tree-SSA passes): Ditto.\n\n\t* doc/configterms.texi (Configure Terms): Fix typo.\n\t* doc/cpp.texi (Common Predefined Macros): Ditto.\n\t* doc/md.texi (Machine Constraints): Ditto.\n\n\t* doc/makefile.texi (Makefile): Add comma.\n\nFrom-SVN: r131987", "tree": {"sha": "6ec3157d98404d6e74bbd5d41e892e8cdad839f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ec3157d98404d6e74bbd5d41e892e8cdad839f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc9a511d8e070a7767dd2d8078dbf4e7ed65edee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc9a511d8e070a7767dd2d8078dbf4e7ed65edee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc9a511d8e070a7767dd2d8078dbf4e7ed65edee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc9a511d8e070a7767dd2d8078dbf4e7ed65edee/comments", "author": {"login": "tbrowder", "id": 1039060, "node_id": "MDQ6VXNlcjEwMzkwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/1039060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbrowder", "html_url": "https://github.com/tbrowder", "followers_url": "https://api.github.com/users/tbrowder/followers", "following_url": "https://api.github.com/users/tbrowder/following{/other_user}", "gists_url": "https://api.github.com/users/tbrowder/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbrowder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbrowder/subscriptions", "organizations_url": "https://api.github.com/users/tbrowder/orgs", "repos_url": "https://api.github.com/users/tbrowder/repos", "events_url": "https://api.github.com/users/tbrowder/events{/privacy}", "received_events_url": "https://api.github.com/users/tbrowder/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5dc81ee9984d65453048c76f75622a3806d50569", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dc81ee9984d65453048c76f75622a3806d50569", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dc81ee9984d65453048c76f75622a3806d50569"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "301df26cda2b111cce2d2fc31208b6027a6d698a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc9a511d8e070a7767dd2d8078dbf4e7ed65edee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc9a511d8e070a7767dd2d8078dbf4e7ed65edee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc9a511d8e070a7767dd2d8078dbf4e7ed65edee", "patch": "@@ -1,3 +1,15 @@\n+2008-01-31  Tom Browder <tom.browder@gmail.com>\n+\n+\t* doc/c-tree.texi (Types): Fix grammar.\n+\t(Expression trees): Ditto.\n+\t* doc/passes.texi (Tree-SSA passes): Ditto.\n+\t\n+\t* doc/configterms.texi (Configure Terms): Fix typo.\n+\t* doc/cpp.texi (Common Predefined Macros): Ditto.\n+\t* doc/md.texi (Machine Constraints): Ditto.\n+\t\n+\t* doc/makefile.texi (Makefile): Add comma.\n+\n 2008-01-31  Tom Browder  <tom.browder@gmail.com>\n \t    Gerald Pfeifer  <gerald@pfeifer.com>\n \t"}, {"sha": "8ca96ed9e60e5512b4c85727b66810313c12cc6d", "filename": "gcc/doc/c-tree.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc9a511d8e070a7767dd2d8078dbf4e7ed65edee/gcc%2Fdoc%2Fc-tree.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc9a511d8e070a7767dd2d8078dbf4e7ed65edee/gcc%2Fdoc%2Fc-tree.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fc-tree.texi?ref=dc9a511d8e070a7767dd2d8078dbf4e7ed65edee", "patch": "@@ -312,7 +312,7 @@ The elements are indexed from zero.\n \n All types have corresponding tree nodes.  However, you should not assume\n that there is exactly one tree node corresponding to each type.  There\n-are often several nodes each of which correspond to the same type.\n+are often multiple nodes corresponding to the same type.\n \n For the most part, different kinds of types have different tree codes.\n (For example, pointer types use a @code{POINTER_TYPE} code while arrays\n@@ -2017,7 +2017,7 @@ mind.  In particular, the expression ``tree'' is actually a directed\n acyclic graph.  (For example there may be many references to the integer\n constant zero throughout the source program; many of these will be\n represented by the same expression node.)  You should not rely on\n-certain kinds of node being shared, nor should rely on certain kinds of\n+certain kinds of node being shared, nor should you rely on certain kinds of\n nodes being unshared.\n \n The following macros can be used with all expression nodes:"}, {"sha": "703fbdbea437c5a83174469b57384a321674cf38", "filename": "gcc/doc/configterms.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc9a511d8e070a7767dd2d8078dbf4e7ed65edee/gcc%2Fdoc%2Fconfigterms.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc9a511d8e070a7767dd2d8078dbf4e7ed65edee/gcc%2Fdoc%2Fconfigterms.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fconfigterms.texi?ref=dc9a511d8e070a7767dd2d8078dbf4e7ed65edee", "patch": "@@ -39,7 +39,7 @@ There is a proposal to call this a @dfn{crossback}.\n \n If build and host are the same, the GCC you are building will also be\n used to build the target libraries (like @code{libstdc++}).  If build and host\n-are different, you must have already build and installed a cross\n+are different, you must have already built and installed a cross\n compiler that will be used to build the target libraries (if you\n configured with @option{--target=foo-bar}, this compiler will be called\n @command{foo-bar-gcc})."}, {"sha": "740dd3b285c11524248b64852e88437843a82b2a", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc9a511d8e070a7767dd2d8078dbf4e7ed65edee/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc9a511d8e070a7767dd2d8078dbf4e7ed65edee/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=dc9a511d8e070a7767dd2d8078dbf4e7ed65edee", "patch": "@@ -1996,7 +1996,7 @@ on the command line of the preprocessor or C compiler.\n This macro expands to a decimal integer constant that represents the\n depth of nesting in include files.  The value of this macro is\n incremented on every @samp{#include} directive and decremented at the\n-end of every included file.  It starts out at 0, it's value within the\n+end of every included file.  It starts out at 0, its value within the\n base file specified on the command line.\n \n @item __ELF__"}, {"sha": "2afbeece379d29b3ceeb8bb633338c90dfae3d43", "filename": "gcc/doc/makefile.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc9a511d8e070a7767dd2d8078dbf4e7ed65edee/gcc%2Fdoc%2Fmakefile.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc9a511d8e070a7767dd2d8078dbf4e7ed65edee/gcc%2Fdoc%2Fmakefile.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmakefile.texi?ref=dc9a511d8e070a7767dd2d8078dbf4e7ed65edee", "patch": "@@ -100,7 +100,7 @@ rebuilt, and copied to its subdirectory.  This will allow you to, for\n example, continue a bootstrap after fixing a bug which causes the\n stage2 build to crash.  It does not provide as good coverage of the\n compiler as bootstrapping from scratch, but it ensures that the new\n-code is syntactically correct (e.g. that you did not use GCC extensions\n+code is syntactically correct (e.g., that you did not use GCC extensions\n by mistake), and avoids spurious bootstrap comparison\n failures@footnote{Except if the compiler was buggy and miscompiled\n   some of the files that were not modified.  In this case, it's best"}, {"sha": "540efd48c98279b9d651535ebf060fc3686c1cfb", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc9a511d8e070a7767dd2d8078dbf4e7ed65edee/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc9a511d8e070a7767dd2d8078dbf4e7ed65edee/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=dc9a511d8e070a7767dd2d8078dbf4e7ed65edee", "patch": "@@ -2895,7 +2895,7 @@ Multiple letter constraint followed by 4 parameter letters.\n          value of the other parts (F---all bits set)\n @end table\n The constraint matches if the specified part of a constant\n-has a value different from it's other parts.\n+has a value different from its other parts.\n \n @item Q\n Memory reference without index register and with short displacement."}, {"sha": "b9a6de8c7a26aa46c0979c589127ed41b76ab1d7", "filename": "gcc/doc/passes.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc9a511d8e070a7767dd2d8078dbf4e7ed65edee/gcc%2Fdoc%2Fpasses.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc9a511d8e070a7767dd2d8078dbf4e7ed65edee/gcc%2Fdoc%2Fpasses.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fpasses.texi?ref=dc9a511d8e070a7767dd2d8078dbf4e7ed65edee", "patch": "@@ -366,7 +366,7 @@ This pass transforms tail recursion into a loop.  It is located in\n \n @item Forward store motion\n \n-This pass sinks stores and assignments down the flowgraph closer to it's\n+This pass sinks stores and assignments down the flowgraph closer to their\n use point.  The pass is located in @file{tree-ssa-sink.c} and is\n described by @code{pass_sink_code}.\n \n@@ -384,7 +384,7 @@ in @file{tree-ssa-math-opts.c} and is described by\n \n @item Full redundancy elimination\n \n-This is a simpler form of PRE that only eliminate redundancies that\n+This is a simpler form of PRE that only eliminates redundancies that\n occur an all paths.  It is located in @file{tree-ssa-pre.c} and\n described by @code{pass_fre}.\n "}]}