{"sha": "362c58c423daaea092194fda6f4905bd3af23c1c", "node_id": "C_kwDOANBUbNoAKDM2MmM1OGM0MjNkYWFlYTA5MjE5NGZkYTZmNDkwNWJkM2FmMjNjMWM", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-12-09T11:57:35Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-01-06T17:11:40Z"}, "message": "[Ada] Remove a locally handled exception\n\ngcc/ada/\n\n\t* exp_ch4.adb (Expand_Concatenate): There is no reason for using\n\tdeclaring, raising and catching an exception; a simple return\n\tstatement is enough.", "tree": {"sha": "07784cfd172042547927cde9311ac3f9275934a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07784cfd172042547927cde9311ac3f9275934a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/362c58c423daaea092194fda6f4905bd3af23c1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/362c58c423daaea092194fda6f4905bd3af23c1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/362c58c423daaea092194fda6f4905bd3af23c1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/362c58c423daaea092194fda6f4905bd3af23c1c/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a17774924232ef28d8f6ddd627a01c458c91c76b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a17774924232ef28d8f6ddd627a01c458c91c76b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a17774924232ef28d8f6ddd627a01c458c91c76b"}], "stats": {"total": 27, "additions": 10, "deletions": 17}, "files": [{"sha": "21fa5158e05318c70abc7d7bd7e44681316da215", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 10, "deletions": 17, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/362c58c423daaea092194fda6f4905bd3af23c1c/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/362c58c423daaea092194fda6f4905bd3af23c1c/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=362c58c423daaea092194fda6f4905bd3af23c1c", "patch": "@@ -2695,9 +2695,6 @@ package body Exp_Ch4 is\n       --  lengths of operands. The choice of this type is a little subtle and\n       --  is discussed in a separate section at the start of the body code.\n \n-      Concatenation_Error : exception;\n-      --  Raised if concatenation is sure to raise a CE\n-\n       Result_May_Be_Null : Boolean := True;\n       --  Reset to False if at least one operand is encountered which is known\n       --  at compile time to be non-null. Used for handling the special case\n@@ -3460,7 +3457,16 @@ package body Exp_Ch4 is\n       --  Catch the static out of range case now\n \n       if Raises_Constraint_Error (High_Bound) then\n-         raise Concatenation_Error;\n+         --  Kill warning generated for the declaration of the static out of\n+         --  range high bound, and instead generate a Constraint_Error with\n+         --  an appropriate specific message.\n+\n+         Kill_Dead_Code (Declaration_Node (Entity (High_Bound)));\n+         Apply_Compile_Time_Constraint_Error\n+           (N      => Cnode,\n+            Msg    => \"concatenation result upper bound out of range??\",\n+            Reason => CE_Range_Check_Failed);\n+         return;\n       end if;\n \n       --  Now we will generate the assignments to do the actual concatenation\n@@ -3629,19 +3635,6 @@ package body Exp_Ch4 is\n       pragma Assert (Present (Result));\n       Rewrite (Cnode, Result);\n       Analyze_And_Resolve (Cnode, Atyp);\n-\n-   exception\n-      when Concatenation_Error =>\n-\n-         --  Kill warning generated for the declaration of the static out of\n-         --  range high bound, and instead generate a Constraint_Error with\n-         --  an appropriate specific message.\n-\n-         Kill_Dead_Code (Declaration_Node (Entity (High_Bound)));\n-         Apply_Compile_Time_Constraint_Error\n-           (N      => Cnode,\n-            Msg    => \"concatenation result upper bound out of range??\",\n-            Reason => CE_Range_Check_Failed);\n    end Expand_Concatenate;\n \n    ---------------------------------------------------"}]}