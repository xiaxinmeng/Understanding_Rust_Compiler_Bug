{"sha": "ee7e54412fdb94e350e6548c9a28d310ed0ac533", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU3ZTU0NDEyZmRiOTRlMzUwZTY1NDhjOWEyOGQzMTBlZDBhYzUzMw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-31T05:41:37Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-31T05:41:37Z"}, "message": "(real.o): New target.\n\n(OBJS): Add real.o.\n\nFrom-SVN: r3935", "tree": {"sha": "7c2cd41d922407ab1df47954fb82964ad7511328", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c2cd41d922407ab1df47954fb82964ad7511328"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee7e54412fdb94e350e6548c9a28d310ed0ac533", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee7e54412fdb94e350e6548c9a28d310ed0ac533", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee7e54412fdb94e350e6548c9a28d310ed0ac533", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee7e54412fdb94e350e6548c9a28d310ed0ac533/comments", "author": null, "committer": null, "parents": [{"sha": "fd76a739e5edc6e1b8d2fb2e094f70a8283fe3b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd76a739e5edc6e1b8d2fb2e094f70a8283fe3b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd76a739e5edc6e1b8d2fb2e094f70a8283fe3b8"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "4c4f960f02624a522b37b7522da4a6faee49be80", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee7e54412fdb94e350e6548c9a28d310ed0ac533/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee7e54412fdb94e350e6548c9a28d310ed0ac533/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=ee7e54412fdb94e350e6548c9a28d310ed0ac533", "patch": "@@ -370,7 +370,7 @@ CPLUS_OBJS = cp-parse.o cp-decl.o cp-decl2.o \\\n # Language-independent object files.\n OBJS = toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o \\\n  function.o stmt.o expr.o calls.o expmed.o explow.o optabs.o varasm.o \\\n- rtl.o print-rtl.o rtlanal.o emit-rtl.o \\\n+ rtl.o print-rtl.o rtlanal.o emit-rtl.o real.o \\\n  dbxout.o sdbout.o dwarfout.o xcoffout.o \\\n  integrate.o jump.o cse.o loop.o unroll.o flow.o stupid.o combine.o \\\n  regclass.o local-alloc.o global.o reload.o reload1.o caller-save.o \\\n@@ -876,6 +876,7 @@ dwarfout.o : dwarfout.c $(CONFIG_H) $(TREE_H) $(RTL_H) dwarf.h flags.h \\\n xcoffout.o : xcoffout.c $(CONFIG_H) $(TREE_H) $(RTL_H) xcoffout.h flags.h\n emit-rtl.o : emit-rtl.c $(CONFIG_H) $(RTL_H) flags.h gvarargs.h function.h  \\\n    regs.h insn-config.h insn-codes.h real.h expr.h\n+real.o : real.c $(CONFIG_H) $(TREE_H)\n getpwd.o : getpwd.c $(CONFIG_H)\n \n integrate.o : integrate.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h integrate.h \\"}]}