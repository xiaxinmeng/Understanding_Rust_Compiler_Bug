{"sha": "c62bdc79b57139c736f1e854c3a26ba86f1573b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYyYmRjNzliNTcxMzljNzM2ZjFlODU0YzNhMjZiYTg2ZjE1NzNiOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-28T19:48:17Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-28T19:48:17Z"}, "message": "(strip_off_ending): Strip off any ending; don't pretend we know what\nvalid endings are.\n\nFrom-SVN: r10068", "tree": {"sha": "b04a5dcb0ae416594ce4a568fca86a33374b2ebf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b04a5dcb0ae416594ce4a568fca86a33374b2ebf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c62bdc79b57139c736f1e854c3a26ba86f1573b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c62bdc79b57139c736f1e854c3a26ba86f1573b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c62bdc79b57139c736f1e854c3a26ba86f1573b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c62bdc79b57139c736f1e854c3a26ba86f1573b9/comments", "author": null, "committer": null, "parents": [{"sha": "c0318c9910bdfc53afa531716a2e2295a8dc5bd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0318c9910bdfc53afa531716a2e2295a8dc5bd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0318c9910bdfc53afa531716a2e2295a8dc5bd7"}], "stats": {"total": 36, "additions": 9, "deletions": 27}, "files": [{"sha": "c8f827f31fbe0ca6734c988a60c58fc00587e1ee", "filename": "gcc/toplev.c", "status": "modified", "additions": 9, "deletions": 27, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c62bdc79b57139c736f1e854c3a26ba86f1573b9/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c62bdc79b57139c736f1e854c3a26ba86f1573b9/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=c62bdc79b57139c736f1e854c3a26ba86f1573b9", "patch": "@@ -1857,39 +1857,21 @@ pipe_closed (signo)\n }\n \n /* Strip off a legitimate source ending from the input string NAME of\n-   length LEN. */\n+   length LEN.  Rather than having to know the names used by all of\n+   our front ends, we strip off an ending of a period followed by one,\n+   two, or three characters.  */\n \n void\n strip_off_ending (name, len)\n      char *name;\n      int len;\n {\n-  if (len > 2 && ! strcmp (\".c\", name + len - 2))\n-    name[len - 2] = 0;\n-  else if (len > 2 && ! strcmp (\".m\", name + len - 2))\n-    name[len - 2] = 0;\n-  else if (len > 2 && ! strcmp (\".i\", name + len - 2))\n-    name[len - 2] = 0;\n-  else if (len > 3 && ! strcmp (\".ii\", name + len - 3))\n-    name[len - 3] = 0;\n-  else if (len > 3 && ! strcmp (\".co\", name + len - 3))\n-    name[len - 3] = 0;\n-  else if (len > 3 && ! strcmp (\".cc\", name + len - 3))\n-    name[len - 3] = 0;\n-  else if (len > 2 && ! strcmp (\".C\", name + len - 2))\n-    name[len - 2] = 0;\n-  else if (len > 4 && ! strcmp (\".cxx\", name + len - 4))\n-    name[len - 4] = 0;\n-  else if (len > 4 && ! strcmp (\".cpp\", name + len - 4))\n-    name[len - 4] = 0;\n-  else if (len > 2 && ! strcmp (\".f\", name + len - 2))\n-    name[len - 2] = 0;\n-  /* Ada will use extensions like .ada, .adb, and .ads, so just test\n-     for \"ad\".  */\n-  else if (len > 4 && ! strncmp (\".ad\", name + len - 4, 3))\n-    name[len - 4] = 0;\n-  else if (len > 4 && ! strcmp (\".atr\", name + len - 4))\n-    name[len - 4] = 0;\n+  if (len > 2 && name[len - 2] == '.')\n+    name[len - 2] = '\\0';\n+  else if (len > 3 && name[len - 3] == '.')\n+    name[len - 3] = '\\0';\n+  else if (len > 4 && name[len - 4] == '.')\n+    name[len - 4] = '\\0';\n }\n \n /* Output a quoted string.  */"}]}