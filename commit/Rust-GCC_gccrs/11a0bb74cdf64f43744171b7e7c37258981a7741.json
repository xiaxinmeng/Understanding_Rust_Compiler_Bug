{"sha": "11a0bb74cdf64f43744171b7e7c37258981a7741", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFhMGJiNzRjZGY2NGY0Mzc0NDE3MWI3ZTdjMzcyNTg5ODFhNzc0MQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-12-14T07:01:03Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-12-14T07:01:03Z"}, "message": "choose-temp.c: Don't check IN_GCC anymore.\n\n        * choose-temp.c: Don't check IN_GCC anymore.\n        * floatformat.c (floatformat_from_double): Use `const', not `CONST'.\n        * memchr.c (memchr): Likewise.\n        * memcpy.c (memcpy): Likewise.\n        * memmove.c (memmove): Likewise.\n        * mkstemp.c: Don't check IN_GCC anymore.\n        * pexecute.c: Likewise.\n        * splay-tree.c: Likewise.\n        * strchr.c (strchr): Use `const', not `CONST'.\n        * strrchr.c (strrchr): Likewise.\n        * strtol.c (strtol): Likewise.\n        * strtoul.c (strtoul): Likewise.\n\nFrom-SVN: r24307", "tree": {"sha": "b348c86e9e18670eff439b3af199b2013f9faf12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b348c86e9e18670eff439b3af199b2013f9faf12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11a0bb74cdf64f43744171b7e7c37258981a7741", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11a0bb74cdf64f43744171b7e7c37258981a7741", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11a0bb74cdf64f43744171b7e7c37258981a7741", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11a0bb74cdf64f43744171b7e7c37258981a7741/comments", "author": null, "committer": null, "parents": [{"sha": "625c729b515b09ec51322dab459b52fdb203060f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/625c729b515b09ec51322dab459b52fdb203060f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/625c729b515b09ec51322dab459b52fdb203060f"}], "stats": {"total": 83, "additions": 39, "deletions": 44}, "files": [{"sha": "4ee7acf398bbf90aba749b153c52ef061c91c6c0", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=11a0bb74cdf64f43744171b7e7c37258981a7741", "patch": "@@ -1,3 +1,21 @@\n+Mon Dec 14 09:55:50 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* choose-temp.c: Don't check IN_GCC anymore.\n+\n+\t* floatformat.c (floatformat_from_double): Use `const', not `CONST'.\n+\t* memchr.c (memchr): Likewise.\n+\t* memcpy.c (memcpy): Likewise.\n+\t* memmove.c (memmove): Likewise.\n+\t\n+\t* mkstemp.c: Don't check IN_GCC anymore.\n+\t* pexecute.c: Likewise.\n+\t* splay-tree.c: Likewise.\n+\t\n+\t* strchr.c (strchr): Use `const', not `CONST'.\n+\t* strrchr.c (strrchr): Likewise.\n+\t* strtol.c (strtol): Likewise.\n+\t* strtoul.c (strtoul): Likewise.\n+\n Fri Dec  4 13:51:04 1998  David Taylor   <taylor@texas.cygnus.com>\n \t\t\t  Elena Zannoni  <ezannoni@cygnus.com>\n \t\t\t  Stan Shebs     <shebs@cygnus.com>"}, {"sha": "c295ca15b2a693b7b6860b48989c901f8a6bd328", "filename": "libiberty/choose-temp.c", "status": "modified", "additions": 8, "deletions": 17, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fchoose-temp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fchoose-temp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fchoose-temp.c?ref=11a0bb74cdf64f43744171b7e7c37258981a7741", "patch": "@@ -22,22 +22,16 @@ Boston, MA 02111-1307, USA.  */\n /* This file lives in at least two places: libiberty and gcc.\n    Don't change one without the other.  */\n \n-#if defined (IN_GCC) || defined (HAVE_CONFIG_H)\n+#ifdef HAVE_CONFIG_H\n #include \"config.h\"\n #endif\n \n-#ifdef IN_GCC\n-#include \"system.h\"\n-#else\n-\n-/* If we are in gcc, system.h has handled everything.  When not in\n-   gcc, if we have a config.h we assume that HAVE_SYS_FILE_H tells us\n-   whether to include sys/file.h.  However, libiberty does not have a\n-   config.h, and instead arranges to define NO_SYS_FILE_H on the\n-   command line when there is no sys/file.h.  */\n-\n-#if defined (HAVE_CONFIG_H) ? defined (HAVE_SYS_FILE_H) : ! defined (NO_SYS_FILE_H)\n+#include <stdio.h>\t/* May get P_tmpdir.  */\n #include <sys/types.h>\n+#ifdef HAVE_UNISTD_H\n+#include <unistd.h>\n+#endif\n+#ifdef HAVE_SYS_FILE_H\n #include <sys/file.h>   /* May get R_OK, etc. on some systems.  */\n #endif\n \n@@ -47,13 +41,10 @@ Boston, MA 02111-1307, USA.  */\n #define X_OK 1\n #endif\n \n-#include <stdio.h>\t/* May get P_tmpdir.  */\n-#endif /* IN_GCC */\n-\n #include \"libiberty.h\"\n-#ifdef IN_GCC\n extern int mkstemps ();\n-#else\n+\n+#ifndef IN_GCC\n #if defined (__MSDOS__) || defined (_WIN32)\n #define DIR_SEPARATOR '\\\\'\n #endif"}, {"sha": "6ad290cceb06186cf6c544f48da04c04f8c9b087", "filename": "libiberty/floatformat.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Ffloatformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Ffloatformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ffloatformat.c?ref=11a0bb74cdf64f43744171b7e7c37258981a7741", "patch": "@@ -279,7 +279,7 @@ put_field (data, order, total_len, start, len, stuff_to_put)\n \n void\n floatformat_from_double (fmt, from, to)\n-     CONST struct floatformat *fmt;\n+     const struct floatformat *fmt;\n      double *from;\n      char *to;\n {"}, {"sha": "cce300394375b0e28ae1ad40b3f034fdbc1a0b47", "filename": "libiberty/memchr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fmemchr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fmemchr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fmemchr.c?ref=11a0bb74cdf64f43744171b7e7c37258981a7741", "patch": "@@ -44,11 +44,11 @@ QUICKREF\n \n PTR\n memchr (src_void, c, length)\n-     register CONST PTR src_void;\n+     register const PTR src_void;\n      int c;\n      size_t length;\n {\n-  CONST unsigned char *src = (CONST unsigned char *)src_void;\n+  const unsigned char *src = (const unsigned char *)src_void;\n   \n   while (--length >= 0)\n   {"}, {"sha": "707a9f573850715f70d69641b3bc22bab2f3efb4", "filename": "libiberty/memcpy.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fmemcpy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fmemcpy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fmemcpy.c?ref=11a0bb74cdf64f43744171b7e7c37258981a7741", "patch": "@@ -21,7 +21,7 @@ DESCRIPTION\n #endif\n \n PTR\n-DEFUN(memcpy, (out, in, length), PTR out AND CONST PTR in AND size_t length)\n+DEFUN(memcpy, (out, in, length), PTR out AND const PTR in AND size_t length)\n {\n     bcopy(in, out, length);\n     return out;"}, {"sha": "176c326ef2b1cc7db9f0e963bdb66380fb4da40d", "filename": "libiberty/memmove.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fmemmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fmemmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fmemmove.c?ref=11a0bb74cdf64f43744171b7e7c37258981a7741", "patch": "@@ -10,7 +10,7 @@\n PTR\n memmove (s1, s2, n)\n      PTR s1;\n-     CONST PTR s2;\n+     const PTR s2;\n      size_t n;\n {\n   bcopy (s2, s1, n);"}, {"sha": "16c16a23263a2b77a0065494f7ea32a0d2c3e0a1", "filename": "libiberty/mkstemp.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fmkstemp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fmkstemp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fmkstemp.c?ref=11a0bb74cdf64f43744171b7e7c37258981a7741", "patch": "@@ -20,7 +20,6 @@\n #include \"config.h\"\n #endif\n \n-#ifndef IN_GCC\n #ifdef HAVE_STDLIB_H\n #include <stdlib.h>\n #endif\n@@ -37,9 +36,6 @@\n #include <sys/time.h>\n #endif\n #include \"ansidecl.h\"\n-#else\n-#include \"system.h\"\n-#endif\n \n /* We need to provide a type for gcc_uint64_t.  */\n #ifdef __GNUC__"}, {"sha": "0ead5669acd11adcbf1d04f48827c8613ff4ec0f", "filename": "libiberty/pexecute.c", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fpexecute.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fpexecute.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpexecute.c?ref=11a0bb74cdf64f43744171b7e7c37258981a7741", "patch": "@@ -26,9 +26,7 @@ Boston, MA 02111-1307, USA.  */\n #ifdef HAVE_CONFIG_H\n #include \"config.h\"\n #endif\n-#ifdef IN_GCC\n-#include \"system.h\"\n-#else\n+\n #include <stdio.h>\n #include <errno.h>\n #ifdef HAVE_UNISTD_H\n@@ -38,7 +36,6 @@ Boston, MA 02111-1307, USA.  */\n #ifdef HAVE_SYS_WAIT_H\n #include <sys/wait.h>\n #endif\n-#endif\n \n #ifdef vfork /* Autoconf may define this to fork for us. */\n # define VFORK_STRING \"fork\"\n@@ -609,9 +606,6 @@ pfinish ()\n \n extern int execv ();\n extern int execvp ();\n-#ifdef IN_GCC\n-extern char * my_strerror\t\t\tPROTO ((int));\n-#endif\n \n int\n pexecute (program, argv, this_pname, temp_base, errmsg_fmt, errmsg_arg, flags)\n@@ -703,11 +697,7 @@ pexecute (program, argv, this_pname, temp_base, errmsg_fmt, errmsg_arg, flags)\n       /* Note: Calling fprintf and exit here doesn't seem right for vfork.  */\n       fprintf (stderr, \"%s: \", this_pname);\n       fprintf (stderr, install_error_msg, program);\n-#ifdef IN_GCC\n-      fprintf (stderr, \": %s\\n\", my_strerror (errno));\n-#else\n       fprintf (stderr, \": %s\\n\", xstrerror (errno));\n-#endif\n       exit (-1);\n       /* NOTREACHED */\n       return 0;"}, {"sha": "cc766960d76311d8a7e69aae6f8666d47260b23b", "filename": "libiberty/splay-tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fsplay-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fsplay-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsplay-tree.c?ref=11a0bb74cdf64f43744171b7e7c37258981a7741", "patch": "@@ -23,7 +23,7 @@\n      Lewis, Harry R. and Denenberg, Larry.  Data Structures and Their\n      Algorithms.  Harper-Collins, Inc.  1991.  */\n \n-#if defined (IN_GCC) || defined (HAVE_CONFIG_H)\n+#ifdef HAVE_CONFIG_H\n #include \"config.h\"\n #endif\n "}, {"sha": "550480f56deff2a753cda50785d2275b735cb2d1", "filename": "libiberty/strchr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fstrchr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fstrchr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fstrchr.c?ref=11a0bb74cdf64f43744171b7e7c37258981a7741", "patch": "@@ -21,7 +21,7 @@ BUGS\n \n char *\n strchr (s, c)\n-  register CONST char *s;\n+  register const char *s;\n   int c;\n {\n   do {"}, {"sha": "8c05bcbead8cd4724034fd032cd32b0c93955d8b", "filename": "libiberty/strrchr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fstrrchr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fstrrchr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fstrrchr.c?ref=11a0bb74cdf64f43744171b7e7c37258981a7741", "patch": "@@ -21,7 +21,7 @@ BUGS\n \n char *\n strrchr (s, c)\n-  register CONST char *s;\n+  register const char *s;\n   int c;\n {\n   char *rtnval = 0;"}, {"sha": "37d170660f2522a6380f4b82a06c158289a511e8", "filename": "libiberty/strtol.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fstrtol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fstrtol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fstrtol.c?ref=11a0bb74cdf64f43744171b7e7c37258981a7741", "patch": "@@ -63,11 +63,11 @@\n  */\n long\n strtol(nptr, endptr, base)\n-\tCONST char *nptr;\n+\tconst char *nptr;\n \tchar **endptr;\n \tregister int base;\n {\n-\tregister CONST char *s = nptr;\n+\tregister const char *s = nptr;\n \tregister unsigned long acc;\n \tregister int c;\n \tregister unsigned long cutoff;"}, {"sha": "ff6f2d6784dd9ad7c28b9c426fd7264271234f55", "filename": "libiberty/strtoul.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fstrtoul.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a0bb74cdf64f43744171b7e7c37258981a7741/libiberty%2Fstrtoul.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fstrtoul.c?ref=11a0bb74cdf64f43744171b7e7c37258981a7741", "patch": "@@ -51,11 +51,11 @@\n  */\n unsigned long\n strtoul(nptr, endptr, base)\n-\tCONST char *nptr;\n+\tconst char *nptr;\n \tchar **endptr;\n \tregister int base;\n {\n-\tregister CONST char *s = nptr;\n+\tregister const char *s = nptr;\n \tregister unsigned long acc;\n \tregister int c;\n \tregister unsigned long cutoff;"}]}