{"sha": "8b4efb4e77fcb23d9c3675805f93f0ca999e5aeb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI0ZWZiNGU3N2ZjYjIzZDljMzY3NTgwNWY5M2YwY2E5OTllNWFlYg==", "commit": {"author": {"name": "Volker Reichelt", "email": "v.reichelt@netcologne.de", "date": "2008-04-09T06:42:55Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2008-04-09T06:42:55Z"}, "message": "parser.c (cp_parser_check_type_definition): Print error string directly rather than using \"%s\".\n\n\t* parser.c (cp_parser_check_type_definition): Print error string\n\tdirectly rather than using \"%s\".\n\t(cp_parser_postfix_expression): Fix quotation.\n\t(cp_parser_decltype): Likewise.\n\t(cp_parser_sizeof_operand): Fix quotation. Simplify.\n\nFrom-SVN: r134129", "tree": {"sha": "ca10b02f4e7b58542d24eddf434dae51d3071999", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca10b02f4e7b58542d24eddf434dae51d3071999"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b4efb4e77fcb23d9c3675805f93f0ca999e5aeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b4efb4e77fcb23d9c3675805f93f0ca999e5aeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b4efb4e77fcb23d9c3675805f93f0ca999e5aeb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b4efb4e77fcb23d9c3675805f93f0ca999e5aeb/comments", "author": {"login": "VReichelt", "id": 85767072, "node_id": "MDQ6VXNlcjg1NzY3MDcy", "avatar_url": "https://avatars.githubusercontent.com/u/85767072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VReichelt", "html_url": "https://github.com/VReichelt", "followers_url": "https://api.github.com/users/VReichelt/followers", "following_url": "https://api.github.com/users/VReichelt/following{/other_user}", "gists_url": "https://api.github.com/users/VReichelt/gists{/gist_id}", "starred_url": "https://api.github.com/users/VReichelt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VReichelt/subscriptions", "organizations_url": "https://api.github.com/users/VReichelt/orgs", "repos_url": "https://api.github.com/users/VReichelt/repos", "events_url": "https://api.github.com/users/VReichelt/events{/privacy}", "received_events_url": "https://api.github.com/users/VReichelt/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a97bf746e871b2c9eaa261068560584c49dd27d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a97bf746e871b2c9eaa261068560584c49dd27d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a97bf746e871b2c9eaa261068560584c49dd27d"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "eb6a9e47aec282e42e0debb34c9cf8208f5aa789", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b4efb4e77fcb23d9c3675805f93f0ca999e5aeb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b4efb4e77fcb23d9c3675805f93f0ca999e5aeb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8b4efb4e77fcb23d9c3675805f93f0ca999e5aeb", "patch": "@@ -1,5 +1,11 @@\n 2008-04-09  Volker Reichelt  <v.reichelt@netcologne.de>\n \n+\t* parser.c (cp_parser_check_type_definition): Print error string\n+\tdirectly rather than using \"%s\".\n+\t(cp_parser_postfix_expression): Fix quotation.\n+\t(cp_parser_decltype): Likewise.\n+\t(cp_parser_sizeof_operand): Fix quotation. Simplify.\n+\n \t* parser.c (cp_parser_non_integral_constant_expression): Build error\n \tmessage with CONCAT rather than using \"%s\".\n \t(cp_parser_primary_expression): Fix quotation."}, {"sha": "f57ce28f937a5b33fbb303d6b24094e05956e92b", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b4efb4e77fcb23d9c3675805f93f0ca999e5aeb/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b4efb4e77fcb23d9c3675805f93f0ca999e5aeb/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=8b4efb4e77fcb23d9c3675805f93f0ca999e5aeb", "patch": "@@ -2183,9 +2183,9 @@ cp_parser_check_type_definition (cp_parser* parser)\n   /* If types are forbidden here, issue a message.  */\n   if (parser->type_definition_forbidden_message)\n     {\n-      /* Use `%s' to print the string in case there are any escape\n-\t characters in the message.  */\n-      error (\"%s\", parser->type_definition_forbidden_message);\n+      /* Don't use `%s' to print the string, because quotations (`%<', `%>')\n+\t in the message need to be interpreted.  */\n+      error (parser->type_definition_forbidden_message);\n       return false;\n     }\n   return true;\n@@ -4372,7 +4372,7 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p, bool cast_p,\n \t/* Types cannot be defined in a `typeid' expression.  */\n \tsaved_message = parser->type_definition_forbidden_message;\n \tparser->type_definition_forbidden_message\n-\t  = \"types may not be defined in a `typeid\\' expression\";\n+\t  = \"types may not be defined in a %<typeid%> expression\";\n \t/* We can't be sure yet whether we're looking at a type-id or an\n \t   expression.  */\n \tcp_parser_parse_tentatively (parser);\n@@ -8515,7 +8515,7 @@ cp_parser_decltype (cp_parser *parser)\n \n   /* And create the new one.  */\n   parser->type_definition_forbidden_message\n-    = \"types may not be defined in `decltype' expressions\";\n+    = \"types may not be defined in %<decltype%> expressions\";\n \n   /* The restrictions on constant-expressions do not apply inside\n      decltype expressions.  */\n@@ -17572,27 +17572,21 @@ cp_parser_late_parsing_default_args (cp_parser *parser, tree fn)\n static tree\n cp_parser_sizeof_operand (cp_parser* parser, enum rid keyword)\n {\n-  static const char *format;\n   tree expr = NULL_TREE;\n   const char *saved_message;\n   char *tmp;\n   bool saved_integral_constant_expression_p;\n   bool saved_non_integral_constant_expression_p;\n   bool pack_expansion_p = false;\n \n-  /* Initialize FORMAT the first time we get here.  */\n-  if (!format)\n-    format = \"types may not be defined in '%s' expressions\";\n-\n   /* Types cannot be defined in a `sizeof' expression.  Save away the\n      old message.  */\n   saved_message = parser->type_definition_forbidden_message;\n   /* And create the new one.  */\n-  parser->type_definition_forbidden_message = tmp\n-    = XNEWVEC (char, strlen (format)\n-\t       + strlen (IDENTIFIER_POINTER (ridpointers[keyword]))\n-\t       + 1 /* `\\0' */);\n-  sprintf (tmp, format, IDENTIFIER_POINTER (ridpointers[keyword]));\n+  tmp = concat (\"types may not be defined in %<\",\n+\t\tIDENTIFIER_POINTER (ridpointers[keyword]),\n+\t\t\"%> expressions\", NULL);\n+  parser->type_definition_forbidden_message = tmp;\n \n   /* The restrictions on constant-expressions do not apply inside\n      sizeof expressions.  */"}]}