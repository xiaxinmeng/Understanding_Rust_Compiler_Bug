{"sha": "e27b834be08de2247b8c4813f0debfb397fa2a6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI3YjgzNGJlMDhkZTIyNDdiOGM0ODEzZjBkZWJmYjM5N2ZhMmE2Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-23T13:04:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-23T13:04:33Z"}, "message": "[multiple changes]\n\n2009-07-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem.adb (Do_Unit_And_Dependents): Now that specs and bodies are not\n\tdone at the same time, guard against listing a body more than once.\n\n2009-07-23  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch6.adb: Minor reformatting\n\n2009-07-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Analyze_Object_Declaration): A scalar constant with a\n\tstatic expression is known valid.\n\t* sem_eval.adb (Compile_Time_Compare): Handle properly non-static\n\toperands of a subtype with a single value.\n\nFrom-SVN: r150009", "tree": {"sha": "806fdc93e4100c62c6e0f31f598bed54df82cf85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/806fdc93e4100c62c6e0f31f598bed54df82cf85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e27b834be08de2247b8c4813f0debfb397fa2a6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e27b834be08de2247b8c4813f0debfb397fa2a6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e27b834be08de2247b8c4813f0debfb397fa2a6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e27b834be08de2247b8c4813f0debfb397fa2a6f/comments", "author": null, "committer": null, "parents": [{"sha": "5c20b5e22f16fbd85f06b93f181325ce28534153", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c20b5e22f16fbd85f06b93f181325ce28534153", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c20b5e22f16fbd85f06b93f181325ce28534153"}], "stats": {"total": 69, "additions": 58, "deletions": 11}, "files": [{"sha": "2508317b11d8070aeeb1cf06a5e730a22481024a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e27b834be08de2247b8c4813f0debfb397fa2a6f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e27b834be08de2247b8c4813f0debfb397fa2a6f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e27b834be08de2247b8c4813f0debfb397fa2a6f", "patch": "@@ -1,3 +1,19 @@\n+2009-07-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem.adb (Do_Unit_And_Dependents): Now that specs and bodies are not\n+\tdone at the same time, guard against listing a body more than once.\n+\n+2009-07-23  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch6.adb: Minor reformatting\n+\n+2009-07-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Analyze_Object_Declaration): A scalar constant with a\n+\tstatic expression is known valid.\n+\t* sem_eval.adb (Compile_Time_Compare): Handle properly non-static\n+\toperands of a subtype with a single value.\n+\n 2009-07-23  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem.adb (Do_Units_And_Dependents): Process bodies only for units that"}, {"sha": "f6a83bd2f91add2c80808a1a68426f5c299785b4", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e27b834be08de2247b8c4813f0debfb397fa2a6f/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e27b834be08de2247b8c4813f0debfb397fa2a6f/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=e27b834be08de2247b8c4813f0debfb397fa2a6f", "patch": "@@ -1834,8 +1834,8 @@ package body Exp_Ch6 is\n \n          else\n             Indic :=\n-              (Subtype_Indication\n-                (Type_Definition (Original_Node (Parent (S)))));\n+              Subtype_Indication\n+                (Type_Definition (Original_Node (Parent (S))));\n \n             if Nkind (Indic) = N_Subtype_Indication then\n                Par := Entity (Subtype_Mark (Indic));\n@@ -1850,7 +1850,6 @@ package body Exp_Ch6 is\n            or else not In_Open_Scopes (Scope (Par))\n          then\n             return Empty;\n-\n          else\n             Gen_Par := Generic_Parent_Type (Parent (Par));\n          end if;\n@@ -1919,7 +1918,7 @@ package body Exp_Ch6 is\n       Scop          : Entity_Id;\n       Subp          : Entity_Id;\n \n-      Prev_Orig     : Node_Id;\n+      Prev_Orig : Node_Id;\n       --  Original node for an actual, which may have been rewritten. If the\n       --  actual is a function call that has been transformed from a selected\n       --  component, the original node is unanalyzed. Otherwise, it carries\n@@ -2038,11 +2037,10 @@ package body Exp_Ch6 is\n          end;\n       end if;\n \n-      --  First step, compute extra actuals, corresponding to any\n-      --  Extra_Formals present. Note that we do not access Extra_Formals\n-      --  directly, instead we simply note the presence of the extra\n-      --  formals as we process the regular formals and collect the\n-      --  corresponding actuals in Extra_Actuals.\n+      --  First step, compute extra actuals, corresponding to any Extra_Formals\n+      --  present. Note that we do not access Extra_Formals directly, instead\n+      --  we simply note the presence of the extra formals as we process the\n+      --  regular formals collecting corresponding actuals in Extra_Actuals.\n \n       --  We also generate any required range checks for actuals for in formals\n       --  as we go through the loop, since this is a convenient place to do it."}, {"sha": "94b2acf3a482689fc89b710533157e8cceed7618", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e27b834be08de2247b8c4813f0debfb397fa2a6f/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e27b834be08de2247b8c4813f0debfb397fa2a6f/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=e27b834be08de2247b8c4813f0debfb397fa2a6f", "patch": "@@ -1770,6 +1770,14 @@ package body Sem is\n \n             begin\n                if Present (Body_Unit)\n+\n+                 --  Since specs and bodies are not done at the same time,\n+                 --  guard against listing a body more than once.\n+\n+                 and then not Seen (Get_Cunit_Unit_Number (Body_Unit))\n+\n+                 --  Would be good to comment each of these tests ???\n+\n                  and then Body_Unit /= Cunit (Main_Unit)\n                  and then Unit_Num /= Get_Source_Unit (System_Aux_Id)\n                  and then not Circular_Dependence (Body_Unit)"}, {"sha": "b96b9d9ba385919ff33092e04b6ae35892b2a484", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e27b834be08de2247b8c4813f0debfb397fa2a6f/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e27b834be08de2247b8c4813f0debfb397fa2a6f/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=e27b834be08de2247b8c4813f0debfb397fa2a6f", "patch": "@@ -2598,12 +2598,20 @@ package body Sem_Ch3 is\n \n          Check_Unset_Reference (E);\n \n-         --  If this is a variable, then set current value\n+         --  If this is a variable, then set current value.\n+         --  If this is a declared constant of a scalar type\n+         --  with a static expression, indicate that it is\n+         --  always valid.\n \n          if not Constant_Present (N) then\n             if Compile_Time_Known_Value (E) then\n                Set_Current_Value (Id, E);\n             end if;\n+\n+         elsif Is_Scalar_Type (T)\n+           and then Is_OK_Static_Expression (E)\n+         then\n+            Set_Is_Known_Valid (Id);\n          end if;\n \n          --  Deal with setting of null flags"}, {"sha": "385337a99bb018740d05272c67f7f77318ade0a0", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e27b834be08de2247b8c4813f0debfb397fa2a6f/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e27b834be08de2247b8c4813f0debfb397fa2a6f/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=e27b834be08de2247b8c4813f0debfb397fa2a6f", "patch": "@@ -885,7 +885,24 @@ package body Sem_Eval is\n                  and then RLo = RHi\n                  and then LLo = RLo\n                then\n-                  return EQ;\n+\n+                  --  if the range includes a single literal and we\n+                  --  can assume validity then the result is known\n+                  --  even if an operand is not static.\n+\n+                  if Assume_Valid then\n+                     return EQ;\n+\n+                  elsif Is_Entity_Name (L)\n+                    and then Is_Entity_Name (R)\n+                    and then Is_Known_Valid (Entity (L))\n+                    and then Is_Known_Valid (Entity (R))\n+                  then\n+                     return EQ;\n+\n+                  else\n+                     return Unknown;\n+                  end if;\n \n                elsif LHi = RLo then\n                   return LE;"}]}