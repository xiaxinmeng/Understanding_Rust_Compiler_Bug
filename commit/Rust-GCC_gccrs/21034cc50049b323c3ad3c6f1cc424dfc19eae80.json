{"sha": "21034cc50049b323c3ad3c6f1cc424dfc19eae80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEwMzRjYzUwMDQ5YjMyM2MzYWQzYzZmMWNjNDI0ZGZjMTllYWU4MA==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "1999-02-12T02:41:28Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "1999-02-12T02:41:28Z"}, "message": "c4x.c (c4x_address_cost): Revert 9 Feb change.\n\n\t* config/c4x/c4x.c (c4x_address_cost): Revert 9 Feb change.\n(While this patch fixed GIV combination for complex arithmetic\nit screwed up generation of autoincrement addresses for the common cases.)\n\nFrom-SVN: r25163", "tree": {"sha": "a5e393fee9494b8245b8e778c0eca37c5777b1e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5e393fee9494b8245b8e778c0eca37c5777b1e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21034cc50049b323c3ad3c6f1cc424dfc19eae80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21034cc50049b323c3ad3c6f1cc424dfc19eae80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21034cc50049b323c3ad3c6f1cc424dfc19eae80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21034cc50049b323c3ad3c6f1cc424dfc19eae80/comments", "author": null, "committer": null, "parents": [{"sha": "3520cdec817a18b86eaaa019b6d98d8261487372", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3520cdec817a18b86eaaa019b6d98d8261487372", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3520cdec817a18b86eaaa019b6d98d8261487372"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "7e03bf54acc0618e7d77fa180da6572c99e43d1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21034cc50049b323c3ad3c6f1cc424dfc19eae80/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21034cc50049b323c3ad3c6f1cc424dfc19eae80/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=21034cc50049b323c3ad3c6f1cc424dfc19eae80", "patch": "@@ -1,3 +1,7 @@\n+Fri Feb 12 23:37:26 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/c4x.c (c4x_address_cost): Revert 9 Feb change. \n+\n Fri Feb 12 00:51:26 1999  Jeffrey A Law  (law@cygnus.com)\n \n         * reload.c (find_reloads_address_1): Fix handling of an autoincremented"}, {"sha": "c1309f15ea91f4de1ffdfcb0f3b3bbb1eb61da25", "filename": "gcc/config/c4x/c4x.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21034cc50049b323c3ad3c6f1cc424dfc19eae80/gcc%2Fconfig%2Fc4x%2Fc4x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21034cc50049b323c3ad3c6f1cc424dfc19eae80/gcc%2Fconfig%2Fc4x%2Fc4x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.c?ref=21034cc50049b323c3ad3c6f1cc424dfc19eae80", "patch": "@@ -1526,14 +1526,8 @@ rtx addr;\n \t    break;\n \n \t  case REG:\n-\t    /* Paradoxically, if we want autoincrement addressing for\n-\t       complex arithmetic and structure arrays, we must give\n-\t       REG+REG addressing the same cost as REG addressing to\n-\t       prevent CSE from avoiding REG+REG addresses.  This is\n-\t       because GIV combination in loop.c is suboptimal and\n-\t       needs fixing.  */\n-\t    if (flag_strength_reduce)\n-\t      return 1;\n+\t    /* This cost for REG+REG must be greater than the cost\n+\t       for REG if we want autoincrement addressing modes.  */\n \t    return 2;\n \n \t  case CONST_INT:"}]}