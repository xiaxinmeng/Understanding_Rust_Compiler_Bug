{"sha": "2c4b77f3ee2f8cf1dfd584a111a15b11fc078bd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM0Yjc3ZjNlZTJmOGNmMWRmZDU4NGExMTFhMTViMTFmYzA3OGJkOA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-04-29T11:39:31Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-04-29T11:39:31Z"}, "message": "toplev.c (flag_if_conversion, [...]): New static variables.\n\n\t* toplev.c (flag_if_conversion, flag_if_conversion2): New static\n\tvariables.\n\t(lang_independent_options): Add -fif-conversion, -fif-conversion2\n\t(rest_of_compilation): Do if conversion only when asked for.\n\t(parse_options_and_default_flags): Set new variables to 1 for -O1\n\t* invoke.texi (-fif-conversion, -fif-conversion2): Document.\n\nFrom-SVN: r52891", "tree": {"sha": "8a147818380183ada9682fd45209c90c41cf5d0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a147818380183ada9682fd45209c90c41cf5d0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c4b77f3ee2f8cf1dfd584a111a15b11fc078bd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c4b77f3ee2f8cf1dfd584a111a15b11fc078bd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c4b77f3ee2f8cf1dfd584a111a15b11fc078bd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c4b77f3ee2f8cf1dfd584a111a15b11fc078bd8/comments", "author": null, "committer": null, "parents": [{"sha": "3de72741b9dd8dceb843d60a16adaadad8e43957", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3de72741b9dd8dceb843d60a16adaadad8e43957", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3de72741b9dd8dceb843d60a16adaadad8e43957"}], "stats": {"total": 48, "additions": 43, "deletions": 5}, "files": [{"sha": "ac51b904e669928c6b4bdab2468228bd04a221ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c4b77f3ee2f8cf1dfd584a111a15b11fc078bd8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c4b77f3ee2f8cf1dfd584a111a15b11fc078bd8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c4b77f3ee2f8cf1dfd584a111a15b11fc078bd8", "patch": "@@ -1,3 +1,12 @@\n+Mon Apr 29 13:36:41 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* toplev.c (flag_if_conversion, flag_if_conversion2): New static\n+\tvariables.\n+\t(lang_independent_options): Add -fif-conversion, -fif-conversion2\n+\t(rest_of_compilation): Do if conversion only when asked for.\n+\t(parse_options_and_default_flags): Set new variables to 1 for -O1\n+\t* invoke.texi (-fif-conversion, -fif-conversion2): Document.\n+\n Mon Apr 29 13:02:50 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.c (dbx64_register_map): Fix typo."}, {"sha": "6bfe7dfe6f612c05ec8ca049533db1d7e4874d37", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c4b77f3ee2f8cf1dfd584a111a15b11fc078bd8/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c4b77f3ee2f8cf1dfd584a111a15b11fc078bd8/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=2c4b77f3ee2f8cf1dfd584a111a15b11fc078bd8", "patch": "@@ -267,6 +267,7 @@ in the following sections.\n -fexpensive-optimizations  -ffast-math  -ffloat-store @gol\n -fforce-addr  -fforce-mem  -ffunction-sections @gol\n -fgcse  -fgcse-lm  -fgcse-sm -floop-optimize -fcrossjumping @gol\n+-fif-conversion -fif-conversion2 @gol\n -finline-functions  -finline-limit=@var{n}  -fkeep-inline-functions @gol\n -fkeep-static-consts  -fmerge-constants  -fmerge-all-constants @gol\n -fmove-all-movables  -fno-default-inline  -fno-defer-pop @gol\n@@ -3522,6 +3523,18 @@ well.\n Perform cross-jumping transformation. This transformation unifies equivalent code and save code size. The\n resulting code may or may not perform better than without cross-jumping.\n \n+@item -fif-conversion\n+@opindex if-conversion\n+Attempt to transform conditional jumps into branch-less equivalents.  This\n+include use of conditional moves, min, max, set flags and abs instructions, and\n+some tricks doable by standard arithmetics.  The use of conditional execution\n+on chips where it is available is controlled by @code{if-conversion2}.\n+\n+@item -fif-conversion2\n+@opindex if-conversion2\n+Use conditional execution (where available) to transform conditional jumps into\n+branch-less equivalents.\n+\n @item -fdelete-null-pointer-checks\n @opindex fdelete-null-pointer-checks\n Use global dataflow analysis to identify and eliminate useless checks"}, {"sha": "01e3276b3e20521cc86d5255822894c411919d4d", "filename": "gcc/toplev.c", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c4b77f3ee2f8cf1dfd584a111a15b11fc078bd8/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c4b77f3ee2f8cf1dfd584a111a15b11fc078bd8/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=2c4b77f3ee2f8cf1dfd584a111a15b11fc078bd8", "patch": "@@ -600,6 +600,14 @@ static int flag_loop_optimize;\n \n static int flag_crossjumping;\n \n+/* Nonzero means perform if conversion.  */\n+\n+static int flag_if_conversion;\n+\n+/* Nonzero means perform if conversion after reload.  */\n+\n+static int flag_if_conversion2;\n+\n /* Nonzero means to use global dataflow analysis to eliminate\n    useless null pointer tests.  */\n \n@@ -1016,6 +1024,10 @@ static const lang_independent_options f_options[] =\n    N_(\"Perform the loop optimizations\") },\n   {\"crossjumping\", &flag_crossjumping, 1,\n    N_(\"Perform cross-jumping optimization\") },\n+  {\"if-conversion\", &flag_if_conversion, 1,\n+   N_(\"Perform conversion of conditional jumps to branchless equivalents\") },\n+  {\"if-conversion2\", &flag_if_conversion2, 1,\n+   N_(\"Perform conversion of conditional jumps to conditional execution\") },\n   {\"rerun-cse-after-loop\", &flag_rerun_cse_after_loop, 1,\n    N_(\"Run CSE pass after loop optimizations\") },\n   {\"rerun-loop-opt\", &flag_rerun_loop_opt, 1,\n@@ -2635,7 +2647,7 @@ rest_of_compilation (decl)\n \n   timevar_push (TV_JUMP);\n \n-  if (optimize > 0)\n+  if (flag_delete_null_pointer_checks || flag_if_conversion)\n     {\n       open_dump_file (DFI_null, decl);\n       find_basic_blocks (insns, max_reg_num (), rtl_dump_file);\n@@ -2648,7 +2660,8 @@ rest_of_compilation (decl)\n \tdelete_null_pointer_checks (insns);\n \n       timevar_push (TV_IFCVT);\n-      if_convert (0);\n+      if (flag_if_conversion)\n+        if_convert (0);\n       timevar_pop (TV_IFCVT);\n       cleanup_cfg (CLEANUP_EXPENSIVE | CLEANUP_PRE_LOOP);\n       close_dump_file (DFI_null, print_rtl_with_bb, insns);\n@@ -2897,7 +2910,8 @@ rest_of_compilation (decl)\n \n \t  timevar_push (TV_IFCVT);\n \t  cleanup_cfg (CLEANUP_EXPENSIVE);\n-\t  if_convert (0);\n+\t  if (flag_if_conversion)\n+\t    if_convert (0);\n \t  timevar_pop(TV_IFCVT);\n \n \t  timevar_pop (TV_JUMP);\n@@ -2996,7 +3010,7 @@ rest_of_compilation (decl)\n \n   /* Rerun if-conversion, as combine may have simplified things enough to\n      now meet sequence length restrictions.  */\n-  if (optimize > 0)\n+  if (flag_if_conversion)\n     {\n       timevar_push (TV_IFCVT);\n       open_dump_file (DFI_ce, decl);\n@@ -3237,7 +3251,7 @@ rest_of_compilation (decl)\n       timevar_pop (TV_RENAME_REGISTERS);\n     }\n \n-  if (optimize > 0)\n+  if (flag_if_conversion2)\n     {\n       timevar_push (TV_IFCVT2);\n       open_dump_file (DFI_ce2, decl);\n@@ -4593,6 +4607,8 @@ parse_options_and_default_flags (argc, argv)\n       flag_cprop_registers = 1;\n       flag_loop_optimize = 1;\n       flag_crossjumping = 1;\n+      flag_if_conversion = 1;\n+      flag_if_conversion2 = 1;\n     }\n \n   if (optimize >= 2)"}]}