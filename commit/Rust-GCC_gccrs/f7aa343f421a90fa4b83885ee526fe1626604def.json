{"sha": "f7aa343f421a90fa4b83885ee526fe1626604def", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdhYTM0M2Y0MjFhOTBmYTRiODM4ODVlZTUyNmZlMTYyNjYwNGRlZg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-11-10T00:16:43Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-11-10T00:16:43Z"}, "message": "Applet.java, [...]: New versions from Classpath.\n\n\t* java/applet/Applet.java, java/applet/AppletContext.java,\n\tjava/applet/AppletStub.java, java/applet/AudioClip.java,\n\tjava/awt/CardLayout.java,\n\tjava/awt/ContainerOrderFocusTraversalPolicy.java,\n\tjava/awt/Cursor.java, java/awt/Event.java, java/awt/Frame.java,\n\tjava/awt/GridBagConstraints.java, java/awt/GridBagLayout.java,\n\tjava/awt/GridLayout.java, java/awt/color/ColorSpace.java,\n\tjava/awt/color/ICC_ColorSpace.java,\n\tjava/awt/color/ICC_Profile.java,\n\tjava/awt/color/ICC_ProfileGray.java,\n\tjava/awt/color/ICC_ProfileRGB.java,\n\tjava/awt/datatransfer/DataFlavor.java,\n\tjava/awt/dnd/DragSourceContext.java, java/awt/dnd/DropTarget.java,\n\tjava/awt/dnd/DropTargetContext.java, java/awt/event/KeyEvent.java:\n\tNew versions from Classpath.\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (awt_java_source_files): Added ICC_ProfileGray and\n\tICC_ProfileRGB.\n\nFrom-SVN: r58964", "tree": {"sha": "9e54c1e0fa5799db1cc2a2f59ede6021c61865c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e54c1e0fa5799db1cc2a2f59ede6021c61865c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7aa343f421a90fa4b83885ee526fe1626604def", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7aa343f421a90fa4b83885ee526fe1626604def", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7aa343f421a90fa4b83885ee526fe1626604def", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7aa343f421a90fa4b83885ee526fe1626604def/comments", "author": null, "committer": null, "parents": [{"sha": "adf94cac56524e788fa1a876ad51519e23f5a465", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adf94cac56524e788fa1a876ad51519e23f5a465", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adf94cac56524e788fa1a876ad51519e23f5a465"}], "stats": {"total": 1643, "additions": 1146, "deletions": 497}, "files": [{"sha": "33e0742d334ac58e3858d838f2afbd28f777ace6", "filename": "libjava/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -1,5 +1,24 @@\n 2002-11-09  Tom Tromey  <tromey@redhat.com>\n \n+\t* java/applet/Applet.java, java/applet/AppletContext.java,\n+\tjava/applet/AppletStub.java, java/applet/AudioClip.java,\n+\tjava/awt/CardLayout.java,\n+\tjava/awt/ContainerOrderFocusTraversalPolicy.java,\n+\tjava/awt/Cursor.java, java/awt/Event.java, java/awt/Frame.java,\n+\tjava/awt/GridBagConstraints.java, java/awt/GridBagLayout.java,\n+\tjava/awt/GridLayout.java, java/awt/color/ColorSpace.java,\n+\tjava/awt/color/ICC_ColorSpace.java,\n+\tjava/awt/color/ICC_Profile.java,\n+\tjava/awt/color/ICC_ProfileGray.java,\n+\tjava/awt/color/ICC_ProfileRGB.java,\n+\tjava/awt/datatransfer/DataFlavor.java,\n+\tjava/awt/dnd/DragSourceContext.java, java/awt/dnd/DropTarget.java,\n+\tjava/awt/dnd/DropTargetContext.java, java/awt/event/KeyEvent.java:\n+\tNew versions from Classpath.\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (awt_java_source_files): Added ICC_ProfileGray and\n+\tICC_ProfileRGB.\n+\n \t* java/awt/ScrollPane.java (ScrollPane): Fixed test for valid\n \tdisplay policy.\n "}, {"sha": "a2af0c0c7679f8cbb4e7b1a63b0526e6ba05658f", "filename": "libjava/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -678,6 +678,8 @@ java/awt/Window.java \\\n java/awt/color/ColorSpace.java \\\n java/awt/color/ICC_ColorSpace.java \\\n java/awt/color/ICC_Profile.java \\\n+java/awt/color/ICC_ProfileGray.java \\\n+java/awt/color/ICC_ProfileRGB.java \\\n java/awt/color/CMMException.java \\\n java/awt/color/ProfileDataException.java \\\n java/awt/datatransfer/Clipboard.java \\"}, {"sha": "e7d62503026c67630b469020d10b897943ad5a65", "filename": "libjava/Makefile.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -435,6 +435,8 @@ java/awt/Window.java \\\n java/awt/color/ColorSpace.java \\\n java/awt/color/ICC_ColorSpace.java \\\n java/awt/color/ICC_Profile.java \\\n+java/awt/color/ICC_ProfileGray.java \\\n+java/awt/color/ICC_ProfileRGB.java \\\n java/awt/color/CMMException.java \\\n java/awt/color/ProfileDataException.java \\\n java/awt/datatransfer/Clipboard.java \\\n@@ -2614,6 +2616,8 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/awt/Window.P .deps/java/awt/color/CMMException.P \\\n .deps/java/awt/color/ColorSpace.P .deps/java/awt/color/ICC_ColorSpace.P \\\n .deps/java/awt/color/ICC_Profile.P \\\n+.deps/java/awt/color/ICC_ProfileGray.P \\\n+.deps/java/awt/color/ICC_ProfileRGB.P \\\n .deps/java/awt/color/ProfileDataException.P \\\n .deps/java/awt/datatransfer/Clipboard.P \\\n .deps/java/awt/datatransfer/ClipboardOwner.P \\"}, {"sha": "5990c6392dad18f9ce26b5631b93e77e1a081527", "filename": "libjava/java/applet/Applet.java", "status": "modified", "additions": 371, "deletions": 171, "changes": 542, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fapplet%2FApplet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fapplet%2FApplet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fapplet%2FApplet.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -1,23 +1,23 @@\n /* Applet.java -- Java base applet class\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n- \n+   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+\n This file is part of GNU Classpath.\n- \n+\n GNU Classpath is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; either version 2, or (at your option)\n any later version.\n- \n+\n GNU Classpath is distributed in the hope that it will be useful, but\n WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n General Public License for more details.\n- \n+\n You should have received a copy of the GNU General Public License\n along with GNU Classpath; see the file COPYING.  If not, write to the\n Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n 02111-1307 USA.\n- \n+\n Linking this library statically or dynamically with other modules is\n making a combined work based on this library.  Thus, the terms and\n conditions of the GNU General Public License cover the whole\n@@ -39,269 +39,469 @@\n package java.applet;\n \n import java.awt.Dimension;\n+import java.awt.GraphicsEnvironment;\n+import java.awt.HeadlessException;\n import java.awt.Image;\n+import java.awt.Panel;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.net.MalformedURLException;\n import java.net.URL;\n import java.util.Locale;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleState;\n+import javax.accessibility.AccessibleStateSet;\n \n /**\n-  * This is the base applet class.  An applet is a Java program that\n-  * runs inside a web browser or other applet viewer in a restricted\n-  * environment.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n-public class Applet extends java.awt.Panel implements java.io.Serializable\n+ * This is the base applet class.  An applet is a Java program that\n+ * runs inside a web browser or other applet viewer in a restricted\n+ * environment.\n+ *\n+ * <p>To be useful, a subclass should override at least start(). Also useful\n+ * are init, stop, and destroy for control purposes, and getAppletInfo and\n+ * getParameterInfo for descriptive purposes.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Eric Blake <ebb9@email.byu.edu>\n+ * @since 1.0\n+ * @status updated to 1.4\n+ */\n+public class Applet extends Panel\n {\n-  // The applet stub for this applet\n-  private AppletStub stub;\n+  /**\n+   * Compatible with JDK 1.0+.\n+   */\n+  private static final long serialVersionUID = -5836846270535785031L;\n+\n+  /** The applet stub for this applet. */\n+  private transient AppletStub stub;\n+\n+  /**\n+   * The accessibility context for this applet.\n+   *\n+   * @serial the accessibleContext for this\n+   * @since 1.2\n+   */\n+  private AccessibleContext accessibleContext;\n+\n+  /**\n+   * Default constructor for subclasses.\n+   *\n+   * @throws HeadlessException if in a headless environment\n+   */\n+  public Applet()\n+  {\n+    if (GraphicsEnvironment.isHeadless())\n+      throw new HeadlessException();\n+  }\n+\n+  /**\n+   * The browser calls this method to set the applet's stub, which is the\n+   * low level interface to the browser. Manually setting this to null is\n+   * asking for problems down the road.\n+   *\n+   * @param stub the applet stub for this applet\n+   */\n+  public final void setStub(AppletStub stub)\n+  {\n+    this.stub = stub;\n+  }\n \n   /**\n-    * Default constructor for subclasses.\n-    */\n-  public Applet() {}\n+   * Tests whether or not this applet is currently active. An applet is active\n+   * just before the browser invokes start(), and becomes inactive just\n+   * before the browser invokes stop().\n+   *\n+   * @return <code>true</code> if this applet is active\n+   */\n+  public boolean isActive()\n+  {\n+    return stub.isActive();\n+  }\n \n   /**\n-    * Returns the URL of the document this applet is embedded in.\n-    *\n-    * @return The URL of the document this applet is embedded in.\n-    */\n+   * Returns the basename URL of the document this applet is embedded in. This\n+   * is everything up to the final '/'.\n+   *\n+   * @return the URL of the document this applet is embedded in\n+   * @see #getCodeBase()\n+   */\n   public URL getDocumentBase()\n   {\n-    return (stub.getDocumentBase ());\n+    return stub.getDocumentBase();\n   }\n \n   /**\n-    * Returns the URL of the code base for this applet.\n-    *\n-    * @return The URL of the code base for this applet.\n-    */\n+   * Returns the URL of the code base for this applet.\n+   *\n+   * @return the URL of the code base for this applet\n+   */\n   public URL getCodeBase()\n   {\n-    return (stub.getCodeBase ());\n+    return stub.getCodeBase();\n   }\n \n   /**\n-    * Returns the value of the specified parameter that was specified in \n-    * the &lt;APPLET&gt; tag for this applet.\n-    *\n-    * @param name The parameter name.\n-    *\n-    * @param value The parameter value, or <code>null</code> if the parameter\n-    * does not exist.\n-    */\n+   * Returns the value of the specified parameter that was specified in\n+   * the <code>&lt;APPLET&gt;</code> tag for this applet.\n+   *\n+   * @param name the parameter name\n+   * @return the parameter value, or null if the parameter does not exist\n+   * @throws NullPointerException if name is null\n+   */\n   public String getParameter(String name)\n   {\n-    return (stub.getParameter (name));\n+    return stub.getParameter(name);\n   }\n \n   /**\n-    * Returns the applet context for this applet.\n-    *\n-    * @return The applet context for this applet.\n-    */\n+   * Returns the applet context for this applet.\n+   *\n+   * @return the applet context for this applet\n+   */\n   public AppletContext getAppletContext()\n   {\n-    return (stub.getAppletContext ());\n+    return stub.getAppletContext();\n   }\n \n   /**\n-    * Tests whether or not this applet is currently active.\n-    *\n-    * @return <code>true</code> if this applet is active, <code>false</code>\n-    * otherwise.\n-    */\n-  public boolean isActive()\n+   * Requests that the applet window for this applet be resized.\n+   *\n+   * @param width the new width in pixels\n+   * @param height the new height in pixels\n+   */\n+  public void resize(int width, int height)\n   {\n-    return (stub.isActive ());\n+    stub.appletResize(width, height);\n   }\n \n   /**\n-    * Requests that the applet window for this applet be resized.\n-    *\n-    * @param width The new width in pixels.\n-    * @param height The new height in pixels.\n-    */\n-  public void resize(int width, int height)\n+   * Requests that the applet window for this applet be resized.\n+   *\n+   * @param dim the requested dimensions\n+   * @throws NullPointerException if dim is null\n+   */\n+  public void resize(Dimension dim)\n   {\n-    stub.appletResize (width, height);\n+    resize(dim.width, dim.height);\n   }\n \n   /**\n-    * Requests that the applet window for this applet be resized.\n-    *\n-    * @param dim The <code>Dimension</code> object with the requested\n-    * width and height.\n-    */\n-  public void resize(Dimension dim)\n+   * Displays the specified message in the status window if that window\n+   * exists.\n+   *\n+   * @param message the status message, may be null\n+   */\n+  public void showStatus(String message)\n+  {\n+    getAppletContext().showStatus(message);\n+  }\n+\n+  /**\n+   * Returns an image from the specified URL.  Note that the image is not\n+   * actually retrieved until the applet attempts to display it, so this\n+   * method returns immediately.\n+   *\n+   * @param url the URL of the image\n+   * @return the retrieved image\n+   * @throws NullPointerException if url is null\n+   */\n+  public Image getImage(URL url)\n   {\n-    resize (dim.width, dim.height);\n+    return getAppletContext().getImage(url);\n   }\n \n   /**\n-    * Returns an audio clip from the specified URL.\n-    *\n-    * @param url The URL of the audio clip.\n-    *\n-    * @return The retrieved audio clip. \n-    */\n+   * Returns an image from the specified absolute URL, and relative path\n+   * from that URL.  Note that the image is not actually retrieved until the\n+   * applet attempts to display it, so this method returns immediately.\n+   * This calls <code>getImage(new URL(url, name))</code>, but if building\n+   * the new URL fails, this returns null.\n+   *\n+   * @param url the base URL of the image\n+   * @param name the name of the image relative to the URL\n+   * @return the retrieved image, or null on failure\n+   * @see #getImage(URL)\n+   */\n+  public Image getImage(URL url, String name)\n+  {\n+    try\n+      {\n+        return getImage(new URL(url, name));\n+      }\n+    catch (MalformedURLException e)\n+      {\n+        return null;\n+      }\n+  }\n+\n+  /**\n+   * Returns an audio clip from the specified URL. This clip is not tied to\n+   * any particular applet.\n+   *\n+   * XXX Classpath does not yet implement this.\n+   *\n+   * @param url the URL of the audio clip\n+   * @return the retrieved audio clip\n+   * @throws NullPointerException if url is null\n+   * @see #getAudioClip(URL)\n+   * @since 1.2\n+   */\n+  public static final AudioClip newAudioClip(URL url)\n+  {\n+    // This requires an implementation of AudioClip in gnu.java.applet.\n+    throw new Error(\"Not implemented\");\n+  }\n+\n+  /**\n+   * Returns an audio clip from the specified URL. Note that the clip is not\n+   * actually retrieved until the applet attempts to play it, so this method\n+   * returns immediately.\n+   *\n+   * @param url the URL of the audio clip\n+   * @return the retrieved audio clip\n+   * @throws NullPointerException if url is null\n+   */\n   public AudioClip getAudioClip(URL url)\n   {\n-    return (getAppletContext ().getAudioClip (url));\n+    return getAppletContext().getAudioClip(url);\n   }\n \n   /**\n-    * Returns an audio clip from the specified URL and name\n-    *\n-    * @param url The base URL of the audio clip.\n-    * @param name The name of the clip relative to the URL.\n-    *\n-    * @return The retrieved audio clip. \n-    */\n+   * Returns an audio clip from the specified absolute URL, and relative path\n+   * from that URL.  Note that the clip is not actually retrieved until the\n+   * applet attempts to play it, so this method returns immediately. This\n+   * calls <code>getAudioClip(new URL(url, name))</code>, but if building\n+   * the new URL fails, this returns null.\n+   *\n+   * @param url the base URL of the audio clip\n+   * @param name the name of the clip relative to the URL\n+   * @return the retrieved audio clip, or null on failure\n+   * @see #getAudioClip(URL)\n+   */\n   public AudioClip getAudioClip(URL url, String name)\n   {\n     try\n       {\n-        return (getAppletContext ().getAudioClip (new URL (url.toExternalForm()\n-                                                \t   + name)));\n+        return getAudioClip(new URL(url, name));\n       }\n-    catch(Exception e)\n+    catch (MalformedURLException e)\n       {\n-        return (getAudioClip (url));\n+        return null;\n       }\n   }\n \n   /**\n-    * Loads and plays the audio clip pointed to by the specified URL.\n-    *\n-    * @param The URL of the audio clip.\n-    */\n-  public void play (URL url)\n+   * Returns a descriptive string with applet defined information.  The\n+   * implementation in this class returns <code>null</code>, so subclasses\n+   * must override to return information.\n+   *\n+   * @return a string describing the author, version, and applet copyright\n+   */\n+  public String getAppletInfo()\n   {\n-    getAudioClip (url).play ();\n+    return null;\n   }\n \n   /**\n-    * Loads and plays the audio clip pointed to by the specified URL.\n-    *\n-    * @param The base URL of the audio clip.\n-    * @param name The name of the audio clip relative to the URL.\n-    */\n-  public void play (URL url, String name)\n+   * Returns the locale for this applet, if it has been set.  If no applet\n+   * specific locale has been set, the default locale is returned.\n+   *\n+   * @return the locale for this applet\n+   * @see Component#setLocale(Locale)\n+   * @since 1.1\n+   */\n+  public Locale getLocale()\n   {\n-    getAudioClip (url, name).play ();\n+    return super.getLocale();\n   }\n \n   /**\n-    * Returns an image from the specified URL.  Note that the image is not\n-    * actually retrieved until the applet attempts to display it, so this\n-    * method returns immediately.\n-    *\n-    * @param url The URL of the image.\n-    *\n-    * @return The retrieved image.\n-    */\n-  public Image getImage(URL url)\n+   * Returns a list of parameters this applet supports.  Each element of\n+   * the outer array is an array of three strings with the name of the\n+   * parameter, the data type or valid values, and a description.  This\n+   * method is optional and the default implementation returns null.\n+   *\n+   * @return the list of parameters supported by this applet\n+   */\n+  public String[][] getParameterInfo()\n   {\n-    return (getAppletContext ().getImage (url));\n+    return null;\n   }\n \n   /**\n-    * Returns an image from the specified URL.  Note that the image is not\n-    * actually retrieved until the applet attempts to display it, so this\n-    * method returns immediately.\n-    *\n-    * @param url The base URL of the image.\n-    * @param name The name of the image relative to the URL.\n-    *\n-    * @return The retrieved image.\n-    */\n-  public Image getImage(URL url, String name)\n+   * Loads and plays the audio clip pointed to by the specified URL. This does\n+   * nothing if the URL does not point to a valid audio clip.\n+   *\n+   * @param url the URL of the audio clip\n+   * @throws NullPointerException if url is null\n+   * @see #getAudioClip(URL)\n+   */\n+  public void play(URL url)\n   {\n+    AudioClip ac = getAudioClip(url);\n     try\n       {\n-        return (getAppletContext ().getImage (new URL (url.toExternalForm()\n-                                        \t       + name)));\n+        ac.play();\n       }\n-    catch(Exception e)\n+    catch (Exception ignored)\n       {\n-        return (getImage (url));\n       }\n   }\n \n   /**\n-    * Returns the locale for this applet, if it has been set.  If no applet\n-    * specific locale has been set, the default locale is returned.\n-    *\n-    * @return The locale for this applet.\n-    */\n-  public Locale getLocale()\n+   * Loads and plays the audio clip pointed to by the specified absolute URL,\n+   * and relative path from that URL. This does nothing if the URL cannot be\n+   * constructed, or if it does not point to a valid audio clip.\n+   *\n+   * @param url the base URL of the audio clip\n+   * @param name the name of the audio clip relative to the URL\n+   * @see #getAudioClip(URL, String)\n+   * @see #play(URL)\n+   */\n+  public void play(URL url, String name)\n   {\n-    return (super.getLocale ());\n+    try\n+      {\n+        getAudioClip(url, name).play();\n+      }\n+    catch (Exception ignored)\n+      {\n+      }\n   }\n \n   /**\n-    * Returns a descriptive string with applet defined information.  The\n-    * implementation in this class returns <code>null</code>.  Applets who\n-    * wish to return this information should override.\n-    *\n-    * @return A string describing the applet.\n-    */\n-  public String getAppletInfo()\n+   * This method is called when the applet is first loaded, before start().\n+   * The default implementation does nothing; override to do any one-time\n+   * initialization.\n+   *\n+   * @see #start()\n+   * @see #stop()\n+   * @see #destroy()\n+   */\n+  public void init()\n   {\n-    return (null);\n   }\n \n   /**\n-    * Returns a list of parameters this applet supports.  Each element of\n-    * the array is a list of three strings with the name of the parameter,\n-    * the data type or valid values, and a description.  This method is\n-    * optional and the default implementation returns <code>null</code>.\n-    *\n-    * @return The list of parameters supported by this applet.\n-    */\n-  public String[][] getParameterInfo()\n+   * This method is called when the applet should start running.  This is\n+   * normally each time a web page containing it is loaded.  The default\n+   * implemention does nothing; override for your applet to be useful.\n+   *\n+   * @see #init()\n+   * @see #stop()\n+   * @see #destroy()\n+   */\n+  public void start()\n   {\n-    return (null);\n   }\n \n   /**\n-    * This method is called when the applet is first loaded.  The default\n-    * implementation does nothing.  Applets that wish to do one time\n-    * initialization should override.\n-    */\n-  public void init() {}\n+   * This method is called when the applet should stop running.  This is\n+   * normally when the next web page is loaded.  The default implementation\n+   * does nothing; override for your applet to stop using resources when\n+   * it is no longer visible, but may be restarted soon.\n+   *\n+   * @see #init()\n+   * @see #start()\n+   * @see #destroy()\n+   */\n+  public void stop()\n+  {\n+  }\n \n   /**\n-    * This method is called when the applet is being unloaded.  The default\n-    * implementation does nothing.  Applets that need to clean up resources\n-    * on exit should override.\n-    */\n-  public void destroy() {}\n+   * This method is called when the applet is being unloaded.  The default\n+   * implementation does nothing; override for your applet to clean up\n+   * resources on exit.\n+   *\n+   * @see #init()\n+   * @see #start()\n+   * @see #stop()\n+   */\n+  public void destroy()\n+  {\n+  }\n \n   /**\n-    * This method is called when the applet should start running.  This is\n-    * normally each time a web page containing it is loaded.  The default\n-    * implemention does nothing.  Subclasses should override.\n-    */\n-  public void start() {}\n+   * Gets the AccessibleContext associated with this applet, creating one if\n+   * necessary. This always returns an instance of {@link AccessibleApplet}.\n+   *\n+   * @return the accessibility context of this applet\n+   * @since 1.3\n+   */\n+  public AccessibleContext getAccessibleContext()\n+  {\n+    if (accessibleContext == null)\n+      accessibleContext = new AccessibleApplet();\n+    return accessibleContext;\n+  }\n \n   /**\n-    * This method is called when the applet should stop running.  This is\n-    * normally when the next web page is loaded.  The default implementation\n-    * does nothing.\n-    */\n-  public void stop() {}\n+   * Read an applet from an object stream. This checks for a headless\n+   * environment, then does the normal read.\n+   *\n+   * @param s the stream to read from\n+   * @throws ClassNotFoundException if a class is not found\n+   * @throws IOException if deserialization fails\n+   * @throws HeadlessException if this is a headless environment\n+   * @see GraphicsEnvironment#isHeadless()\n+   * @since 1.4\n+   */\n+  private void readObject(ObjectInputStream s)\n+    throws ClassNotFoundException, IOException\n+  {\n+    if (GraphicsEnvironment.isHeadless())\n+      throw new HeadlessException();\n+    s.defaultReadObject();\n+  }\n \n   /**\n-    * The browser calls this method to set the applet's stub, which is the\n-    * low level interface to the browser.\n-    *\n-    * @param stub The applet stub for this applet.\n-    */\n-  public final void setStub (AppletStub stub)\n+   * This class provides accessibility support for Applets, and is the\n+   * runtime type returned by {@link #getAccessibleContext()}.\n+   *\n+   * @author Eric Blake <ebb9@email.byu.edu>\n+   * @since 1.3\n+   */\n+  protected class AccessibleApplet extends AccessibleAWTPanel\n   {\n-    this.stub = stub;\n-  }\n+    /**\n+     * Compatible with JDK 1.4+.\n+     */\n+    private static final long serialVersionUID = 8127374778187708896L;\n \n-} // class Applet\n+    /**\n+     * The default constructor.\n+     */\n+    protected AccessibleApplet()\n+    {\n+    }\n \n+    /**\n+     * Get the role of this accessible object, a frame.\n+     *\n+     * @return the role of the object\n+     * @see AccessibleRole#FRAME\n+     */\n+    public AccessibleRole getAccessibleRole()\n+    {\n+      return AccessibleRole.FRAME;\n+    }\n+\n+    /**\n+     * Get the state set of this accessible object. In addition to the default\n+     * states of a Component, the applet can also be active.\n+     *\n+     * @return the role of the object\n+     * @see AccessibleState\n+     */\n+    public AccessibleStateSet getAccessibleStateSet()\n+    {\n+      AccessibleStateSet s = super.getAccessibleStateSet();\n+      if (isActive())\n+        s.add(AccessibleState.ACTIVE);\n+      return s;\n+    }\n+  } // class AccessibleApplet\n+} // class Applet"}, {"sha": "20206efa75a363b2ce94a202b9d71fd16df31bf1", "filename": "libjava/java/applet/AppletContext.java", "status": "modified", "additions": 92, "deletions": 57, "changes": 149, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fapplet%2FAppletContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fapplet%2FAppletContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fapplet%2FAppletContext.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -1,23 +1,23 @@\n-/* AppletContext.java -- Access the applet's runtime environment.\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n- \n+/* AppletContext.java -- access the applet's runtime environment\n+   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+\n This file is part of GNU Classpath.\n- \n+\n GNU Classpath is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; either version 2, or (at your option)\n any later version.\n- \n+\n GNU Classpath is distributed in the hope that it will be useful, but\n WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n General Public License for more details.\n- \n+\n You should have received a copy of the GNU General Public License\n along with GNU Classpath; see the file COPYING.  If not, write to the\n Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n 02111-1307 USA.\n- \n+\n Linking this library statically or dynamically with other modules is\n making a combined work based on this library.  Thus, the terms and\n conditions of the GNU General Public License cover the whole\n@@ -39,81 +39,116 @@\n package java.applet;\n \n import java.awt.Image;\n+import java.io.InputStream;\n+import java.io.IOException;\n import java.net.URL;\n import java.util.Enumeration;\n+import java.util.Iterator;\n \n /**\n-  * This interface allows an applet access to the browser to retrieve\n-  * additional data files and display documents.  It also allows the\n-  * applet to find out other applets in the same document.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n+ * This interface allows an applet access to the browser to retrieve\n+ * additional data files and display documents.  It also allows the\n+ * applet to find out other applets in the same document.\n+ *\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @since 1.0\n+ * @status updated to 1.4\n+ */\n public interface AppletContext\n {\n   /**\n-    * Returns an audio clip from the specified URL.\n-    *\n-    * @param url The URL of the audio clip.\n-    *\n-    * @return The retrieved audio clip // FIXME: What happens on error?\n-    */\n+   * Returns an audio clip from the specified URL.\n+   *\n+   * @param url the URL of the audio clip\n+   * @return the retrieved audio clip\n+   * @throws NullPointerException if url is null\n+   */\n   AudioClip getAudioClip(URL url);\n \n   /**\n-    * Returns an image from the specified URL.  Note that the image is not\n-    * actually retrieved until the applet attempts to display it, so this\n-    * method returns immediately.\n-    *\n-    * @param url The URL of the image.\n-    *\n-    * @return The retrieved image.  // FIXME: What happens on eror?\n-    */\n+   * Returns an image from the specified URL.  Note that the image is not\n+   * actually retrieved until the applet attempts to display it, so this\n+   * method returns immediately.\n+   *\n+   * @param url the absolute URL of the image\n+   * @return the retrieved image\n+   * @throws NullPointerException if url is null\n+   */\n   Image getImage(URL url);\n \n   /**\n-    * Returns the applet in the document for this object that has the\n-    * specified name.\n-    *\n-    * @param name The applet name.\n-    *\n-    * @return The requested applet, or <code>null</code> if an applet with\n-    * the requested name cannot be found.\n-    */\n+   * Returns the applet in the document for this object that has the\n+   * specified name.\n+   *\n+   * @param name the applet name\n+   * @return the requested applet, or <code>null</code> if not found\n+   */\n   Applet getApplet(String name);\n \n   /**\n-    * Returns a list of all the applets in the document for this object.\n-    *\n-    * @return A list of all the applets in the document for this object.\n-    */\n+   * Returns a list of all the applets in the document for this object.\n+   *\n+   * @return a list of all the applets\n+   */\n   Enumeration getApplets();\n \n   /**\n-    * Displays the web page pointed to by the specified URL in the window\n-    * for this object.  This page replaces the document that is currently\n-    * there.\n-    *\n-    * @param url The URL of the web page to load.\n-    */\n+   * Displays the web page pointed to by the specified URL in the window\n+   * for this object.  This page replaces the document that is currently\n+   * there.\n+   *\n+   * @param url the URL of the web page to load; unspecified on an error\n+   */\n   void showDocument(URL url);\n \n   /**\n-    * Displays the web page pointed to be the sepcified URL in the window\n-    * with the specified name.  The standard names \"_top\", \"_blank\",\n-    * \"_parent\", and \"_self\" are allowed.\n-    *\n-    * @param url The URL of the web page to load.\n-    * @param target The target window.\n-    */\n+   * Displays the web page pointed to be the sepcified URL in the window\n+   * with the specified name.  The standard names \"_top\", \"_blank\",\n+   * \"_parent\", and \"_self\" are allowed. An applet viewer may disregard\n+   * this request.\n+   *\n+   * @param url the URL of the web page to load\n+   * @param target the target window\n+   */\n   void showDocument(URL url, String target);\n \n   /**\n-    * Displays the specified message in the status window if that window\n-    * exists.\n-    *\n-    * @param message The status message.\n-    */\n+   * Displays the specified message in the status window if that window\n+   * exists.\n+   *\n+   * @param message the status message, may be null\n+   */\n   void showStatus(String message);\n \n+  /**\n+   * Associate a stream to a key for this applet context, possibly replacing\n+   * the old value. Stream associations are local to the applet context, for\n+   * security purposes.\n+   *\n+   * @param key the key to associate with\n+   * @param stream the stream value to tie to the key, or null to remove\n+   * @throws IOException if the stream is too large\n+   * @since 1.4\n+   */\n+  public void setStream(String key, InputStream stream) throws IOException;\n+\n+  /**\n+   * Return the stream associated with a given key in this applet context, or\n+   * null if nothing is associated. Stream associations are local to the\n+   * applet context, for security purposes.\n+   *\n+   * @param key the key to look up\n+   * @return the associated stream, or null\n+   * @since 1.4\n+   */\n+  public InputStream getStream(String key);\n+\n+  /**\n+   * Iterate over all keys that have associated streams. Sttream associated\n+   * are local to the applet context, for security purposes.\n+   *\n+   * @return an iterator over the association keys\n+   * @since 1.4\n+   */\n+  public Iterator getStreamKeys();\n } // interface AppletContext"}, {"sha": "7694cc822efef12fd2517a301e4e2d728aebe2b1", "filename": "libjava/java/applet/AppletStub.java", "status": "modified", "additions": 50, "deletions": 47, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fapplet%2FAppletStub.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fapplet%2FAppletStub.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fapplet%2FAppletStub.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -1,23 +1,23 @@\n-/* AppletStub.java -- Low level interface to the browser.\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n- \n+/* AppletStub.java -- low level interface to the browser\n+   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+\n This file is part of GNU Classpath.\n- \n+\n GNU Classpath is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; either version 2, or (at your option)\n any later version.\n- \n+\n GNU Classpath is distributed in the hope that it will be useful, but\n WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n General Public License for more details.\n- \n+\n You should have received a copy of the GNU General Public License\n along with GNU Classpath; see the file COPYING.  If not, write to the\n Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n 02111-1307 USA.\n- \n+\n Linking this library statically or dynamically with other modules is\n making a combined work based on this library.  Thus, the terms and\n conditions of the GNU General Public License cover the whole\n@@ -40,60 +40,63 @@\n import java.net.URL;\n \n /**\n-  * This interface is the low level interface between the applet and the\n-  * browser.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n+ * This interface is the low level interface between the applet and the\n+ * browser.\n+ *\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @see Applet#setStub(AppletStub)\n+ * @since 1.0\n+ * @status updated to 1.4\n+ */\n public interface AppletStub\n {\n   /**\n-    * Returns the URL of the document this applet is embedded in.\n-    *\n-    * @return The URL of the document this applet is embedded in.\n-    */\n+   * Tests whether or not this applet is currently active. An applet is active\n+   * just before the browser invokes start(), and becomes inactive just\n+   * before the browser invokes stop().\n+   *\n+   * @return <code>true</code> if this applet is active\n+   */\n+  boolean isActive();\n+\n+  /**\n+   * Returns the basename URL of the document this applet is embedded in. This\n+   * is everything up to the final '/'.\n+   *\n+   * @return the URL of the document this applet is embedded in\n+   * @see #getCodeBase()\n+   */\n   URL getDocumentBase();\n \n   /**\n-    * Returns the URL of the code base for this applet.\n-    *\n-    * @return The URL of the code base for this applet.\n-    */\n+   * Returns the URL of the code base for this applet.\n+   *\n+   * @return the URL of the code base for this applet\n+   */\n   URL getCodeBase();\n \n   /**\n-    * Returns the value of the specified parameter that was specified in \n-    * the &lt;APPLET&gt; tag for this applet.\n-    *\n-    * @param name The parameter name.\n-    *\n-    * @param value The parameter value, or <code>null</code> if the parameter\n-    * does not exist.\n-    */\n+   * Returns the value of the specified parameter that was specified in\n+   * the <code>&lt;APPLET&gt;</code> tag for this applet.\n+   *\n+   * @param name the parameter name\n+   * @return the parameter value, or null if the parameter does not exist\n+   * @throws NullPointerException if name is null\n+   */\n   String getParameter(String name);\n \n   /**\n-    * Returns the applet context for this applet.\n-    *\n-    * @return The applet context for this applet.\n-    */\n+   * Returns the applet context for this applet.\n+   *\n+   * @return the applet context for this applet\n+   */\n   AppletContext getAppletContext();\n \n   /**\n-    * Tests whether or not this applet is currently active.\n-    *\n-    * @return <code>true</code> if this applet is active, <code>false</code>\n-    * otherwise.\n-    */\n-  boolean isActive();\n-\n-  /**\n-    * Requests that the applet window for this applet be resized.\n-    *\n-    * @param width The new width in pixels.\n-    * @param height The new height in pixels.\n-    */\n+   * Requests that the applet window for this applet be resized.\n+   *\n+   * @param width the new width in pixels\n+   * @param height the new height in pixels\n+   */\n   void appletResize(int width, int height);\n-\n } // interface AppletStub\n-"}, {"sha": "41dd3be2af56c13b3d2123ffc5a31d1a821ab55b", "filename": "libjava/java/applet/AudioClip.java", "status": "modified", "additions": 22, "deletions": 19, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fapplet%2FAudioClip.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fapplet%2FAudioClip.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fapplet%2FAudioClip.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -1,23 +1,23 @@\n-/* AudioClip.java -- Play an audio clip.\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n- \n+/* AudioClip.java -- play an audio clip in an applet\n+   Copyright (C) 1999, 2002 Free Software Foundation, Inc.\n+\n This file is part of GNU Classpath.\n- \n+\n GNU Classpath is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; either version 2, or (at your option)\n any later version.\n- \n+\n GNU Classpath is distributed in the hope that it will be useful, but\n WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n General Public License for more details.\n- \n+\n You should have received a copy of the GNU General Public License\n along with GNU Classpath; see the file COPYING.  If not, write to the\n Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n 02111-1307 USA.\n- \n+\n Linking this library statically or dynamically with other modules is\n making a combined work based on this library.  Thus, the terms and\n conditions of the GNU General Public License cover the whole\n@@ -39,26 +39,29 @@\n package java.applet;\n \n /**\n-  * This interface provides a simple mechanism for playing audio clips.\n-  *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n-  */\n+ * This interface provides a simple mechanism for playing audio clips.\n+ * If multiple clips are played at once, the browser combines them into a\n+ * composite clip.\n+ *\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @since 1.0\n+ * @status updated to 1.4\n+ */\n public interface AudioClip\n {\n   /**\n-    * Plays the audio clip starting from the beginning.\n-    */\n+   * Plays the audio clip starting from the beginning.\n+   */\n   void play();\n \n   /**\n-    * Stops playing this audio clip.  There is no mechanism for restarting\n-    * at the point where the clip is stopped.\n-    */\n+   * Stops playing this audio clip.  There is no mechanism for restarting\n+   * at the point where the clip is stopped.\n+   */\n   void stop();\n \n   /**\n-    * Plays this audio clip in a continuous loop.\n-    */\n+   * Plays this audio clip in a continuous loop.\n+   */\n   void loop();\n-\n } // interface AudioClip"}, {"sha": "38eb91ec0aec95a32b2aff459937c096dee786a1", "filename": "libjava/java/awt/CardLayout.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2FCardLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2FCardLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FCardLayout.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -53,6 +53,8 @@\n  */\n public class CardLayout implements LayoutManager2, Serializable\n {\n+  static final long serialVersionUID = -4328196481005934313L;\n+\n   /**\n    * Initializes a new instance of <code>CardLayout</code> with horizontal\n    * and vertical gaps of 0."}, {"sha": "e3cf31cb11123ba1da4630ed411fbe6ee2182c9a", "filename": "libjava/java/awt/ContainerOrderFocusTraversalPolicy.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2FContainerOrderFocusTraversalPolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2FContainerOrderFocusTraversalPolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FContainerOrderFocusTraversalPolicy.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -46,6 +46,8 @@\n public class ContainerOrderFocusTraversalPolicy extends FocusTraversalPolicy\n   implements Serializable\n {\n+  static final long serialVersionUID = 486933713763926351L;\n+\n   private boolean downCycle = true;\n \n   public ContainerOrderFocusTraversalPolicy()"}, {"sha": "5852b8bbf855acd7c0513dfe46f2381ffa3c05b5", "filename": "libjava/java/awt/Cursor.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2FCursor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2FCursor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FCursor.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -44,6 +44,8 @@\n   */\n public class Cursor implements java.io.Serializable\n {\n+  static final long serialVersionUID = 8028237497568985504L;\n+\n   /**\n   * Constant for the system default cursor type\n   */"}, {"sha": "79be0e8c8612c2fd7784844e0d8e482f4f6a3072", "filename": "libjava/java/awt/Event.java", "status": "modified", "additions": 67, "deletions": 65, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2FEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2FEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FEvent.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -45,71 +45,73 @@\n \n public class Event implements java.io.Serializable\n {\n-  public static final int SHIFT_MASK = 1,\n-\t\t\t  CTRL_MASK = 2,\n-\t\t\t  META_MASK = 4,\n-\t\t\t  ALT_MASK = 8;\n-\n-  public static final int ACTION_EVENT = 1001,\n-\t\t\t  BACK_SPACE = 8,\n-\t\t\t  CAPS_LOCK = 1022,\n-\t\t\t  DELETE = 127,\n-\t\t\t  DOWN = 1005,\n-\t\t\t  END = 1001,\n-\t\t\t  ENTER = 10,\n-\t\t\t  ESCAPE = 27,\n-\t\t\t  F1 = 1008,\n-\t\t\t  F10 = 1017,\n-\t\t\t  F11 = 1018,\n-\t\t\t  F12 = 1019,\n-\t\t\t  F2 = 1009,\n-\t\t\t  F3 = 1010,\n-\t\t\t  F4 = 1011,\n-\t\t\t  F5 = 1012,\n-\t\t\t  F6 = 1013,\n-\t\t\t  F7 = 1014,\n-\t\t\t  F8 = 1015,\n-\t\t\t  F9 = 1016,\n-\t\t\t  GOT_FOCUS = 1004,\n-\t\t\t  HOME = 1000,\n-\t\t\t  INSERT = 1025,\n-\t\t\t  KEY_ACTION = 403,\n-\t\t\t  KEY_ACTION_RELEASE = 404,\n-\t\t\t  KEY_PRESS = 401,\n-\t\t\t  KEY_RELEASE = 402,\n-\t\t\t  LEFT = 1006,\n-\t\t\t  LIST_DESELECT = 702,\n-\t\t\t  LIST_SELECT = 701,\n-\t\t\t  LOAD_FILE = 1002,\n-\t\t\t  LOST_FOCUS = 1005,\n-\t\t\t  MOUSE_DOWN = 501,\n-\t\t\t  MOUSE_DRAG = 506,\n-\t\t\t  MOUSE_ENTER = 504,\n-\t\t\t  MOUSE_EXIT = 505,\n-\t\t\t  MOUSE_MOVE = 503,\n-\t\t\t  MOUSE_UP = 502,\n-\t\t\t  NUM_LOCK = 1023,\n-\t\t\t  PAUSE = 1024,\n-\t\t\t  PGDN = 1003,\n-\t\t\t  PGUP = 1002,\n-\t\t\t  PRINT_SCREEN = 1020,\n-\t\t\t  RIGHT = 1007,\n-\t\t\t  SAVE_FILE = 1003,\n-\t\t\t  SCROLL_ABSOLUTE = 605,\n-\t\t\t  SCROLL_BEGIN = 606,\n-\t\t\t  SCROLL_END = 607,\n-\t\t\t  SCROLL_LINE_DOWN = 602,\n-\t\t\t  SCROLL_LINE_UP = 601,\n-\t\t\t  SCROLL_LOCK = 1021,\n-\t\t\t  SCROLL_PAGE_DOWN = 604,\n-\t\t\t  SCROLL_PAGE_UP = 603,\n-\t\t\t  TAB = 9,\n-\t\t\t  UP = 1004,\n-\t\t\t  WINDOW_DEICONIFY = 204,\n-\t\t\t  WINDOW_DESTROY = 201,\n-\t\t\t  WINDOW_EXPOSE = 202,\n-\t\t\t  WINDOW_ICONIFY = 203,\n-\t\t\t  WINDOW_MOVED = 205;\n+  static final long serialVersionUID = 5488922509400504703L;\n+\n+  public static final int SHIFT_MASK = 1;\n+  public static final int CTRL_MASK = 2;\n+  public static final int META_MASK = 4;\n+  public static final int ALT_MASK = 8;\n+\n+  public static final int ACTION_EVENT = 1001;\n+  public static final int BACK_SPACE = 8;\n+  public static final int CAPS_LOCK = 1022;\n+  public static final int DELETE = 127;\n+  public static final int DOWN = 1005;\n+  public static final int END = 1001;\n+  public static final int ENTER = 10;\n+  public static final int ESCAPE = 27;\n+  public static final int F1 = 1008;\n+  public static final int F10 = 1017;\n+  public static final int F11 = 1018;\n+  public static final int F12 = 1019;\n+  public static final int F2 = 1009;\n+  public static final int F3 = 1010;\n+  public static final int F4 = 1011;\n+  public static final int F5 = 1012;\n+  public static final int F6 = 1013;\n+  public static final int F7 = 1014;\n+  public static final int F8 = 1015;\n+  public static final int F9 = 1016;\n+  public static final int GOT_FOCUS = 1004;\n+  public static final int HOME = 1000;\n+  public static final int INSERT = 1025;\n+  public static final int KEY_ACTION = 403;\n+  public static final int KEY_ACTION_RELEASE = 404;\n+  public static final int KEY_PRESS = 401;\n+  public static final int KEY_RELEASE = 402;\n+  public static final int LEFT = 1006;\n+  public static final int LIST_DESELECT = 702;\n+  public static final int LIST_SELECT = 701;\n+  public static final int LOAD_FILE = 1002;\n+  public static final int LOST_FOCUS = 1005;\n+  public static final int MOUSE_DOWN = 501;\n+  public static final int MOUSE_DRAG = 506;\n+  public static final int MOUSE_ENTER = 504;\n+  public static final int MOUSE_EXIT = 505;\n+  public static final int MOUSE_MOVE = 503;\n+  public static final int MOUSE_UP = 502;\n+  public static final int NUM_LOCK = 1023;\n+  public static final int PAUSE = 1024;\n+  public static final int PGDN = 1003;\n+  public static final int PGUP = 1002;\n+  public static final int PRINT_SCREEN = 1020;\n+  public static final int RIGHT = 1007;\n+  public static final int SAVE_FILE = 1003;\n+  public static final int SCROLL_ABSOLUTE = 605;\n+  public static final int SCROLL_BEGIN = 606;\n+  public static final int SCROLL_END = 607;\n+  public static final int SCROLL_LINE_DOWN = 602;\n+  public static final int SCROLL_LINE_UP = 601;\n+  public static final int SCROLL_LOCK = 1021;\n+  public static final int SCROLL_PAGE_DOWN = 604;\n+  public static final int SCROLL_PAGE_UP = 603;\n+  public static final int TAB = 9;\n+  public static final int UP = 1004;\n+  public static final int WINDOW_DEICONIFY = 204;\n+  public static final int WINDOW_DESTROY = 201;\n+  public static final int WINDOW_EXPOSE = 202;\n+  public static final int WINDOW_ICONIFY = 203;\n+  public static final int WINDOW_MOVED = 205;\n \n   public Object arg;\n   public int clickCount;"}, {"sha": "a25af9c5546e90ded368a993ffeab9cdfa8b4dd6", "filename": "libjava/java/awt/Frame.java", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2FFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2FFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFrame.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -59,6 +59,12 @@ public class Frame extends Window implements MenuContainer, Serializable\n  * Static Variables\n  */\n \n+/**\n+  * Constant for the default cursor.\n+  * Deprecated. replaced by <code>Cursor.DEFAULT_CURSOR</code> instead.\n+  */\n+public static final int DEFAULT_CURSOR = Cursor.DEFAULT_CURSOR;\n+\n /**\n   * Constant for a cross-hair cursor.\n   * @deprecated Use <code>Cursor.CROSSHAIR_CURSOR</code> instead.\n@@ -137,6 +143,12 @@ public class Frame extends Window implements MenuContainer, Serializable\n   */\n public static final int MOVE_CURSOR = Cursor.MOVE_CURSOR;\n \n+public static final int ICONIFIED = 1;\n+public static final int MAXIMIZED_BOTH = 6;\n+public static final int MAXIMIZED_HORIZ = 2;\n+public static final int MAXIMIZED_VERT = 4;\n+public static final int NORMAL = 0;\n+\n // Serialization version constant\n private static final long serialVersionUID = 2673458971256075116L;\n "}, {"sha": "57356ad8ef74d9f2695c786a037c997cd3bb2e57", "filename": "libjava/java/awt/GridBagConstraints.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2FGridBagConstraints.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2FGridBagConstraints.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGridBagConstraints.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -45,6 +45,8 @@\n  * GridBagLayout layout manager.  */\n public class GridBagConstraints implements Cloneable, Serializable\n {\n+  static final long serialVersionUID = -1000070633030801713L;\n+\n   /** Fill in both directions.  */\n   public static final int BOTH = 1;\n   /** Don't fill.  */"}, {"sha": "dc2b3c9fd694c9250b69326bfc3adeb12dad46db", "filename": "libjava/java/awt/GridBagLayout.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2FGridBagLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2FGridBagLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGridBagLayout.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -45,6 +45,8 @@\n public class GridBagLayout\n   implements Serializable, LayoutManager2\n {\n+  static final long serialVersionUID = 8838754796412211005L;\n+\n   public void addLayoutComponent(String name, Component component)\n   {\n   }"}, {"sha": "58145f8cb00a8baccd4d681a58ee81e714cfc018", "filename": "libjava/java/awt/GridLayout.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2FGridLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2FGridLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGridLayout.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -58,6 +58,8 @@\n  */\n public class GridLayout implements LayoutManager, Serializable\n {\n+  static final long serialVersionUID = -7411804673224730901L;\n+  \n   /** Add a new component to the layout.  This particular implementation\n    * does nothing.\n    * @param name The name of the component to add."}, {"sha": "4f68fabcb7b3ec744bd66d742b447fe35f7c6a3a", "filename": "libjava/java/awt/color/ColorSpace.java", "status": "modified", "additions": 78, "deletions": 41, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fcolor%2FColorSpace.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fcolor%2FColorSpace.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FColorSpace.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 2000, 2002  Free Software Foundation\n+/* ColorSpace.java -- transforms between color spaces\n+   Copyright (C) 2000, 2002 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -34,25 +35,36 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package java.awt.color;\n \n+import java.io.Serializable;\n+\n /**\n+ * NEEDS DOCUMENTATION\n+ *\n  * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @since 1.2\n  */\n public abstract class ColorSpace\n {\n-  public static final int TYPE_XYZ   = 0;\n-  public static final int TYPE_Lab   = 1;\n-  public static final int TYPE_Luv   = 2;\n+  /**\n+   * Compatible with JDK 1.2+.\n+   */\n+  private static final long serialVersionUID = -409452704308689724L;\n+\n+  public static final int TYPE_XYZ = 0;\n+  public static final int TYPE_Lab = 1;\n+  public static final int TYPE_Luv = 2;\n   public static final int TYPE_YCbCr = 3;\n-  public static final int TYPE_Yxy   = 4;\n-  public static final int TYPE_RGB   = 5;\n-  public static final int TYPE_GRAY  = 6;\n-  public static final int TYPE_HSV   = 7;\n-  public static final int TYPE_HLS   = 8;\n-  public static final int TYPE_CMYK  = 9;\n+  public static final int TYPE_Yxy = 4;\n+  public static final int TYPE_RGB = 5;\n+  public static final int TYPE_GRAY = 6;\n+  public static final int TYPE_HSV = 7;\n+  public static final int TYPE_HLS = 8;\n+  public static final int TYPE_CMYK = 9;\n   // mysterious gap in the enumeration sequenece\n-  public static final int TYPE_CMY  = 11;\n+  public static final int TYPE_CMY = 11;\n   public static final int TYPE_2CLR = 12;\n   public static final int TYPE_3CLR = 13;\n   public static final int TYPE_4CLR = 14;\n@@ -67,54 +79,64 @@\n   public static final int TYPE_DCLR = 23;\n   public static final int TYPE_ECLR = 24;\n   public static final int TYPE_FCLR = 25;\n-  \n-  public static final int CS_sRGB       = 1000;\n-  public static final int CS_CIEXYZ     = 1001;\n-  public static final int CS_PYCC       = 1002;\n-  public static final int CS_GRAY       = 1003;\n+\n+  public static final int CS_sRGB = 1000;\n   public static final int CS_LINEAR_RGB = 1004;\n-  \n-  private static final int CS_BASE  = CS_sRGB;\n-  private static final int CS_END   = CS_LINEAR_RGB+1;\n+  public static final int CS_CIEXYZ = 1001;\n+  public static final int CS_PYCC = 1002;\n+  public static final int CS_GRAY = 1003;\n+\n+  private static final int CS_BASE = CS_sRGB;\n+  private static final int CS_END = CS_LINEAR_RGB + 1;\n   private static final int CS_COUNT = CS_END - CS_BASE;\n-  \n+\n   // Instances are lazily instantiated\n   private static final ColorSpace[] INSTANCES = new ColorSpace[CS_COUNT];\n \n-  private int type;\n-  private int numcomponents;\n+  /**\n+   * @serial\n+   */\n+  // Visible in subclass.\n+  final int type;\n+\n+  /**\n+   * @serial\n+   */\n+  // Visible in subclass.\n+  final int numComponents;\n+\n   protected ColorSpace(int type, int numcomponents)\n   {\n     this.type = type;\n-    this.numcomponents = numcomponents;\n+    numComponents = numcomponents;\n   }\n-\t\n+\n   public static ColorSpace getInstance(int colorspace)\n   {\n     if ((colorspace >= CS_BASE) && (colorspace < CS_END))\n       {\n-\tint instanceIndex = colorspace - CS_BASE;\n-\tif (INSTANCES[instanceIndex] == null)\n-\t  {\n-\t    ICC_Profile profile = new ICC_Profile(colorspace);\n-\t    INSTANCES[instanceIndex] = new ICC_ColorSpace(profile);\n-\t  }\n-\treturn INSTANCES[instanceIndex];\n+        int instanceIndex = colorspace - CS_BASE;\n+        if (INSTANCES[instanceIndex] == null)\n+          {\n+            ICC_Profile profile = new ICC_Profile(colorspace);\n+            INSTANCES[instanceIndex] = new ICC_ColorSpace(profile);\n+          }\n+        return INSTANCES[instanceIndex];\n       }\n     throw new IllegalArgumentException(\"unknown/unsupported colorspace\");\n   }\n-  \n+\n   public boolean isCS_sRGB()\n   {\n     return false;\n   }\n \n   public abstract float[] toRGB(float[] colorvalue);\n-  \n+\n   public abstract float[] fromRGB(float[] rgbvalue);\n-  \n+\n   public abstract float[] toCIEXYZ(float[] colorvalue);\n-  \n+\n   public abstract float[] fromCIEXYZ(float[] colorvalue);\n \n   public int getType()\n@@ -124,16 +146,31 @@ public int getType()\n \n   public int getNumComponents()\n   {\n-    return numcomponents;\n+    return numComponents;\n   }\n-  \n+\n   public String getName(int idx)\n   {\n     return \"type \" + type;\n   }\n-  \n-  public String toString()\n+\n+  /**\n+   * @since 1.4\n+   */\n+  public float getMinValue(int idx)\n+  {\n+    if (idx < 0 || idx >= numComponents)\n+      throw new IllegalArgumentException();\n+    return 0;\n+  }\n+\n+  /**\n+   * @since 1.4\n+   */\n+  public float getMaxValue(int idx)\n   {\n-    return getClass().getName() + \"[type=\" + type + \"]\";\n+    if (idx < 0 || idx >= numComponents)\n+      throw new IllegalArgumentException();\n+    return 1;\n   }\n-}\n+} // class ColorSpace"}, {"sha": "1a144dbfbd287c520ea4dc7b041a6ce0f089864a", "filename": "libjava/java/awt/color/ICC_ColorSpace.java", "status": "modified", "additions": 64, "deletions": 20, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ColorSpace.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ColorSpace.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ColorSpace.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 2000, 2002  Free Software Foundation\n+/* ICC_ColorSpace.java -- the canonical color space implementation\n+   Copyright (C) 2000, 2002 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -34,25 +35,61 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package java.awt.color;\n \n /**\n+ * NEEDS DOCUMENTATION\n+ *\n  * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @since 1.2\n  */\n public class ICC_ColorSpace extends ColorSpace\n {\n-  private ICC_Profile profile;\n+  /**\n+   * Compatible with JDK 1.2+.\n+   */\n+  private static final long serialVersionUID = 3455889114070431483L;\n+\n+  /**\n+   * @serial\n+   */\n+  private ICC_Profile thisProfile;\n+\n+  /**\n+   * @serial\n+   */\n+  private float[] minVal;\n+\n+  /**\n+   * @serial\n+   */\n+  private float[] maxVal;\n+\n+  /**\n+   * @serial\n+   */\n+  private float[] diffMinMax;\n+\n+  /**\n+   * @serial\n+   */\n+  private float[] invDiffMinMax;\n+\n+  /**\n+   * @serial\n+   */\n+  private boolean needScaleInit;\n \n   public ICC_ColorSpace(ICC_Profile profile)\n   {\n     super(CS_sRGB, profile.getNumComponents());\n-    \n-    this.profile = profile;\n+    thisProfile = profile;\n   }\n \n   public ICC_Profile getProfile()\n   {\n-    return profile;\n+    return thisProfile;\n   }\n \n   public float[] toRGB(float[] colorvalue)\n@@ -80,26 +117,33 @@ public float[] fromCIEXYZ(float[] colorvalue)\n   }\n \n   /**\n-   * @param component The index of the color component\n-   * \n-   * @exception IllegalArgumentException If <code>component<code> is less\n-   * then 0 or greater then <code>numComponents - 1</code>\n+   * @since 1.4\n    */\n-  public float getMinValue (int component)\n+  public float getMinValue(int idx)\n   {\n-    // FIXME: Not implemented\n-    throw new UnsupportedOperationException();\n+    if (type == TYPE_Lab && (idx == 1 || idx == 2))\n+      return -128;\n+    if (idx < 0 || idx >= numComponents)\n+      throw new IllegalArgumentException();\n+    return 0;\n   }\n \n   /**\n-   * @param component The index of the color component\n-   * \n-   * @exception IllegalArgumentException If <code>component<code> is less\n-   * then 0 or greater then <code>numComponents - 1</code>\n+   * @since 1.4\n    */\n-  public float getMaxValue (int component)\n+  public float getMaxValue(int idx)\n   {\n-    // FIXME: Not implemented\n-    throw new UnsupportedOperationException();\n+    if (type == TYPE_XYZ && idx >= 0 && idx <= 2)\n+      return 1 + 32767 / 32768f;\n+    else if (type == TYPE_Lab)\n+      {\n+        if (idx == 0)\n+          return 100;\n+        if (idx == 1 || idx == 2)\n+          return 127;\n+      }\n+    if (idx < 0 || idx >= numComponents)\n+      throw new IllegalArgumentException();\n+    return 1;\n   }\n-}\n+} // class ICC_ColorSpace"}, {"sha": "7adaac0647220bbf08f304af6001effbe23ab921", "filename": "libjava/java/awt/color/ICC_Profile.java", "status": "modified", "additions": 190, "deletions": 71, "changes": 261, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fcolor%2FICC_Profile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fcolor%2FICC_Profile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FICC_Profile.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 2000, 2002  Free Software Foundation\n+/* ICC_Profile.java -- color space profiling\n+   Copyright (C) 2000, 2002 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -34,46 +35,79 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package java.awt.color;\n \n-// Currently just a stub.\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.InputStream;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.io.ObjectStreamException;\n+import java.io.OutputStream;\n+import java.io.Serializable;\n \n /**\n+ * STUBBED\n  * @author Rolf W. Rasmussen <rolfwr@ii.uib.no>\n+ * @since 1.2\n  */\n-public class ICC_Profile\n+public class ICC_Profile implements Serializable\n {\n-  public static final int CLASS_ABSTRACT = 5;\n-  public static final int CLASS_COLORSPACECONVERSION = 4;\n-  public static final int CLASS_DEVICELINK = 3;\n-  public static final int CLASS_DISPLAY = 1;\n+  /**\n+   * Compatible with JDK 1.2+.\n+   */\n+  private static final long serialVersionUID = -3938515861990936766L;\n+\n   public static final int CLASS_INPUT = 0;\n-  public static final int CLASS_NAMEDCOLOR = 6;\n+  public static final int CLASS_DISPLAY = 1;\n   public static final int CLASS_OUTPUT = 2;\n-  \n-  public static final int icAbsoluteColorimetric = 3;\n-  public static final int icCurveCount = 8;\n-  public static final int icCurveData = 12;\n-  public static final int icHdrAttributes = 56;\n-  public static final int icHdrCmmId = 4;\n-  public static final int icHdrColorSpace = 16;\n-  public static final int icHdrCreator = 80;\n-  public static final int icHdrDate = 24;\n-  public static final int icHdrDeviceClass = 12;\n-  public static final int icHdrFlags = 44;\n-  public static final int icHdrIlluminant = 68;\n-  public static final int icHdrMagic = 36;\n-  public static final int icHdrManufacturer = 48;\n-  public static final int icHdrModel = 52;\n-  public static final int icHdrPcs = 20;\n-  public static final int icHdrPlatform = 40;\n-  public static final int icHdrRenderingIntent = 64;\n-  public static final int icHdrSize = 0;\n-  public static final int icHdrVersion = 8;\n+  public static final int CLASS_DEVICELINK = 3;\n+  public static final int CLASS_COLORSPACECONVERSION = 4;\n+  public static final int CLASS_ABSTRACT = 5;\n+  public static final int CLASS_NAMEDCOLOR = 6;\n+\n+  public static final int icSigXYZData = 1482250784;\n+  public static final int icSigLabData = 1281450528;\n+  public static final int icSigLuvData = 1282766368;\n+  public static final int icSigYCbCrData = 1497588338;\n+  public static final int icSigYxyData = 1501067552;\n+  public static final int icSigRgbData = 1380401696;\n+  public static final int icSigGrayData = 1196573017;\n+  public static final int icSigHsvData = 1213421088;\n+  public static final int icSigHlsData = 1212961568;\n+  public static final int icSigCmykData = 1129142603;\n+  public static final int icSigCmyData = 1129142560;\n+  public static final int icSigSpace2CLR = 843271250;\n+  public static final int icSigSpace3CLR = 860048466;\n+  public static final int icSigSpace4CLR = 876825682;\n+  public static final int icSigSpace5CLR = 893602898;\n+  public static final int icSigSpace6CLR = 910380114;\n+  public static final int icSigSpace7CLR = 927157330;\n+  public static final int icSigSpace8CLR = 943934546;\n+  public static final int icSigSpace9CLR = 960711762;\n+  public static final int icSigSpaceACLR = 1094929490;\n+  public static final int icSigSpaceBCLR = 1111706706;\n+  public static final int icSigSpaceCCLR = 1128483922;\n+  public static final int icSigSpaceDCLR = 1145261138;\n+  public static final int icSigSpaceECLR = 1162038354;\n+  public static final int icSigSpaceFCLR = 1178815570;\n+\n+  public static final int icSigInputClass = 1935896178;\n+  public static final int icSigDisplayClass = 1835955314;\n+  public static final int icSigOutputClass = 1886549106;\n+  public static final int icSigLinkClass = 1818848875;\n+  public static final int icSigAbstractClass = 1633842036;\n+  public static final int icSigColorSpaceClass = 1936744803;\n+  public static final int icSigNamedColorClass = 1852662636;\n+\n   public static final int icPerceptual = 0;\n   public static final int icRelativeColorimetric = 1;\n   public static final int icSaturation = 2;\n-  public static final int icSigAbstractClass = 1633842036;\n+  public static final int icAbsoluteColorimetric = 3;\n+\n+  public static final int icSigHead = 1751474532;\n   public static final int icSigAToB0Tag = 1093812784;\n   public static final int icSigAToB1Tag = 1093812785;\n   public static final int icSigAToB2Tag = 1093812786;\n@@ -84,35 +118,20 @@\n   public static final int icSigBToA2Tag = 1110589746;\n   public static final int icSigCalibrationDateTimeTag = 1667329140;\n   public static final int icSigCharTargetTag = 1952543335;\n-  public static final int icSigChromaticityTag = 1667789421;\n-  public static final int icSigCmyData = 1129142560;\n-  public static final int icSigCmykData = 1129142603;\n-  public static final int icSigColorSpaceClass = 1936744803;\n   public static final int icSigCopyrightTag = 1668313716;\n   public static final int icSigCrdInfoTag = 1668441193;\n   public static final int icSigDeviceMfgDescTag = 1684893284;\n   public static final int icSigDeviceModelDescTag = 1684890724;\n   public static final int icSigDeviceSettingsTag = 1684371059;\n-  public static final int icSigDisplayClass = 1835955314;\n   public static final int icSigGamutTag = 1734438260;\n-  public static final int icSigGrayData = 1196573017;\n   public static final int icSigGrayTRCTag = 1800688195;\n-  public static final int icSigGreenColorantTag = 1733;\n+  public static final int icSigGreenColorantTag = 1733843290;\n   public static final int icSigGreenTRCTag = 1733579331;\n-  public static final int icSigHead = 1751474532;\n-  public static final int icSigHlsData = 1212961568;\n-  public static final int icSigHsvData = 1213421088;\n-  public static final int icSigInputClass = 1935896178;\n-  public static final int icSigLabData = 1281450528;\n-  public static final int icSigLinkClass = 1818848875;\n   public static final int icSigLuminanceTag = 1819635049;\n-  public static final int icSigLuvData = 1282766368;\n   public static final int icSigMeasurementTag = 1835360627;\n   public static final int icSigMediaBlackPointTag = 1651208308;\n   public static final int icSigMediaWhitePointTag = 2004119668;\n   public static final int icSigNamedColor2Tag = 1852009522;\n-  public static final int icSigNamedColorClass = 1852662636;\n-  public static final int icSigOutputClass = 1886549106;\n   public static final int icSigOutputResponseTag = 1919251312;\n   public static final int icSigPreview0Tag = 1886545200;\n   public static final int icSigPreview1Tag = 1886545201;\n@@ -127,54 +146,154 @@\n   public static final int icSigPs2RenderingIntentTag = 1886597737;\n   public static final int icSigRedColorantTag = 1918392666;\n   public static final int icSigRedTRCTag = 1918128707;\n-  public static final int icSigRgbData = 1380401696;\n   public static final int icSigScreeningDescTag = 1935897188;\n   public static final int icSigScreeningTag = 1935897198;\n-  public static final int icSigSpace2CLR = 843271250;\n-  public static final int icSigSpace3CLR = 860048466;\n-  public static final int icSigSpace4CLR = 876825682;\n-  public static final int icSigSpace5CLR = 893602898;\n-  public static final int icSigSpace6CLR = 910380114;\n-  public static final int icSigSpace7CLR = 927157330;\n-  public static final int icSigSpace8CLR = 943934546;\n-  public static final int icSigSpace9CLR = 960711762;\n-  public static final int icSigSpaceACLR = 1094929490;\n-  public static final int icSigSpaceBCLR = 1111706706;\n-  public static final int icSigSpaceCCLR = 1128483922;\n-  public static final int icSigSpaceDCLR = 1145261138;\n-  public static final int icSigSpaceECLR = 1162038354;\n-  public static final int icSigSpaceFCLR = 1178815570;\n   public static final int icSigTechnologyTag = 1952801640;\n   public static final int icSigUcrBgTag = 1650877472;\n   public static final int icSigViewingCondDescTag = 1987405156;\n   public static final int icSigViewingConditionsTag = 1986618743;\n-  public static final int icSigXYZData = 1482250784;\n-  public static final int icSigYCbCrData = 1497588338;\n-  public static final int icSigYxyData = 1501067552;\n-  public static final int icTagReserved = 4;\n+  public static final int icSigChromaticityTag = 1667789421;\n+\n+  public static final int icHdrSize = 0;\n+  public static final int icHdrCmmId = 4;\n+  public static final int icHdrVersion = 8;\n+  public static final int icHdrDeviceClass = 12;\n+  public static final int icHdrColorSpace = 16;\n+  public static final int icHdrPcs = 20;\n+  public static final int icHdrDate = 24;\n+  public static final int icHdrMagic = 36;\n+  public static final int icHdrPlatform = 40;\n+  public static final int icHdrFlags = 44;\n+  public static final int icHdrManufacturer = 48;\n+  public static final int icHdrModel = 52;\n+  public static final int icHdrAttributes = 56;\n+  public static final int icHdrRenderingIntent = 64;\n+  public static final int icHdrIlluminant = 68;\n+  public static final int icHdrCreator = 80;\n+\n   public static final int icTagType = 0;\n+  public static final int icTagReserved = 4;\n+  public static final int icCurveCount = 8;\n+  public static final int icCurveData = 12;\n+\n   public static final int icXYZNumberX = 8;\n-  \n-  long profileID; // why long?\n-  \n-  ICC_Profile(long profileID)\n+\n+  /**\n+   * @serial\n+   */\n+  final int iccProfileSerializedDataVersion = 1;\n+\n+  transient int profileID;\n+\n+  ICC_Profile(int profileID)\n   {\n     this.profileID = profileID;\n   }\n \n+  protected void finalize()\n+  {\n+    // XXX What resources should we free?\n+  }\n+\n+  public static ICC_Profile getInstance(byte[] data)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public static ICC_Profile getInstance(int cspace)\n+  {\n+    return new ICC_Profile(cspace);\n+  }\n+\n+  public static ICC_Profile getInstance(String filename) throws IOException\n+  {\n+    return getInstance(new FileInputStream(filename));\n+  }\n+\n+  public static ICC_Profile getInstance(InputStream in) throws IOException\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public int getMajorVersion()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public int getMinorVersion()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public int getProfileClass()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public int getColorSpaceType()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public int getPCSType()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public void write(String filename) throws IOException\n+  {\n+    write(new FileOutputStream(filename));\n+  }\n+\n+  public void write(OutputStream out)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public byte[] getData()\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public byte[] getData(int tagSignature)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  public void setData(int tagSignature, byte[] data)\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n   public int getNumComponents()\n   {\n-    switch ((int) profileID)\n+    switch (profileID)\n       {\n       case ColorSpace.CS_sRGB:\n       case ColorSpace.CS_LINEAR_RGB:\n       case ColorSpace.CS_CIEXYZ:\n \treturn 3;\n       case ColorSpace.CS_GRAY:\n \treturn 1;\n-      case ColorSpace.CS_PYCC:    // have no clue about this one\n+      case ColorSpace.CS_PYCC: // have no clue about this one\n       default:\n \tthrow new UnsupportedOperationException(\"profile not implemented\");\n       }\n   }\n-}\n+\n+  protected Object readResolve() throws ObjectStreamException\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  private void readObject(ObjectInputStream s)\n+    throws IOException, ClassNotFoundException\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+\n+  private void writeObject(ObjectOutputStream s) throws IOException\n+  {\n+    throw new Error(\"not implemented\");\n+  }\n+} // class ICC_Profile"}, {"sha": "6aed7eefe0f8df2d5a79ce604d088eeafd82bb4d", "filename": "libjava/java/awt/color/ICC_ProfileGray.java", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ProfileGray.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ProfileGray.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ProfileGray.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -0,0 +1,71 @@\n+/* ICC_ProfileGray.java -- the ICC profile for a Gray colorspace\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt.color;\n+\n+/**\n+ * STUBBED\n+ * @since 1.2\n+ */\n+public class ICC_ProfileGray extends ICC_Profile\n+{\n+  /**\n+   * Compatible with JDK 1.2+.\n+   */\n+  private static final long serialVersionUID = -1124721290732002649L;\n+\n+  ICC_ProfileGray()\n+  {\n+    super(ColorSpace.CS_GRAY);\n+  }\n+\n+  public float[] getMediaWhitePoint()\n+  {\n+    return null;\n+  }\n+\n+  public float getGamma()\n+  {\n+    return 0;\n+  }\n+\n+  public short[] getTRC()\n+  {\n+    return null;\n+  }\n+} // class ICC_ProfileGray"}, {"sha": "aab7578b22e88fd658a6a14475a0437f02cb9bb3", "filename": "libjava/java/awt/color/ICC_ProfileRGB.java", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ProfileRGB.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ProfileRGB.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fcolor%2FICC_ProfileRGB.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -0,0 +1,80 @@\n+/* ICC_ProfileRGB.java -- the ICC profile for a RGB colorspace\n+   Copyright (C) 2002 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package java.awt.color;\n+\n+/**\n+ * STUBBED\n+ * @since 1.2\n+ */\n+public class ICC_ProfileRGB extends ICC_Profile\n+{\n+  /**\n+   * Compatible with JDK 1.2+.\n+   */\n+  private static final long serialVersionUID = 8505067385152579334L;\n+\n+  public static final int REDCOMPONENT = 0;\n+  public static final int GREENCOMPONENT = 1;\n+  public static final int BLUECOMPONENT = 2;\n+\n+  ICC_ProfileRGB()\n+  {\n+    super(ColorSpace.CS_sRGB);\n+  }\n+\n+  public float[] getMediaWhitePoint()\n+  {\n+    return null;\n+  }\n+\n+  public float[][] getMatrix()\n+  {\n+    return null;\n+  }\n+\n+  public float getGamma(int component)\n+  {\n+    return 0;\n+  }\n+\n+  public short[] getTRC(int component)\n+  {\n+    return null;\n+  }\n+} // class ICC_ProfileRGB"}, {"sha": "85f6ae5d455b0909c599c995dbc6c120636a4767", "filename": "libjava/java/awt/datatransfer/DataFlavor.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fdatatransfer%2FDataFlavor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fdatatransfer%2FDataFlavor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdatatransfer%2FDataFlavor.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -56,6 +56,7 @@\n   */\n public class DataFlavor implements java.io.Externalizable, Cloneable\n {\n+  static final long serialVersionUID = 8367026044764648243L;\n \n // FIXME: Serialization: Need to write methods for.\n "}, {"sha": "ca26b941b3edc657689639ad1695b65cce0dc805", "filename": "libjava/java/awt/dnd/DragSourceContext.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDragSourceContext.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -50,6 +50,8 @@\n public class DragSourceContext\n   implements DragSourceListener, DragSourceMotionListener, Serializable\n {\n+  static final long serialVersionUID = -115407898692194719L;\n+\n   protected static final int DEFAULT = 0;\n   protected static final int ENTER = 1;\n   protected static final int OVER = 2;"}, {"sha": "c469605b8b4469d7c545626bbbab6fdf41954087", "filename": "libjava/java/awt/dnd/DropTarget.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fdnd%2FDropTarget.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fdnd%2FDropTarget.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDropTarget.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -44,6 +44,7 @@\n import java.awt.event.ActionListener;\n import java.util.TooManyListenersException;\n \n+/** STUB CLASS ONLY */\n public class DropTarget\n {\n   protected static class DropTargetAutoScroller"}, {"sha": "86adaade95e32fe1ea4703dba441ba87d0edb2be", "filename": "libjava/java/awt/dnd/DropTargetContext.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fdnd%2FDropTargetContext.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -48,6 +48,8 @@\n \n public class DropTargetContext implements Serializable\n {\n+  static final long serialVersionUID = -634158968993743371L;\n+\n   protected class TransferableProxy implements Transferable\n   {\n     protected boolean isLocal;"}, {"sha": "35cac3f1c66e83d699c565d104dd91b7c640b108", "filename": "libjava/java/awt/event/KeyEvent.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7aa343f421a90fa4b83885ee526fe1626604def/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java?ref=f7aa343f421a90fa4b83885ee526fe1626604def", "patch": "@@ -754,18 +754,18 @@ public class KeyEvent extends InputEvent\n   public static final int VK_EURO_SIGN = 516;\n \n   /**\n-   * The virtual key VK_EXCLAMATION_POINT.\n+   * The virtual key VK_EXCLAMATION_MARK.\n    *\n    * @since 1.2\n    */\n-  public static final int VK_EXCLAMATION_POINT = 517;\n+  public static final int VK_EXCLAMATION_MARK = 517;\n \n   /**\n-   * The virtual key VK_INVERTED_EXCLAMATION_POINT.\n+   * The virtual key VK_INVERTED_EXCLAMATION_MARK.\n    *\n    * @since 1.2\n    */\n-  public static final int VK_INVERTED_EXCLAMATION_POINT = 518;\n+  public static final int VK_INVERTED_EXCLAMATION_MARK = 518;\n \n   /**\n    * The virtual key VK_LEFT_PARENTHESIS.\n@@ -1410,9 +1410,9 @@ public static String getKeyText(int keyCode)\n         return \"Dollar\";\n       case VK_EURO_SIGN:\n         return \"Euro\";\n-      case VK_EXCLAMATION_POINT:\n+      case VK_EXCLAMATION_MARK:\n         return \"Exclamation Mark\";\n-      case VK_INVERTED_EXCLAMATION_POINT:\n+      case VK_INVERTED_EXCLAMATION_MARK:\n         return \"Inverted Exclamation Mark\";\n       case VK_LEFT_PARENTHESIS:\n         return \"Left Parenthesis\";"}]}