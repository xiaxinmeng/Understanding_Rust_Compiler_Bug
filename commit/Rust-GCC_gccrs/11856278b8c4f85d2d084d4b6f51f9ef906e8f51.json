{"sha": "11856278b8c4f85d2d084d4b6f51f9ef906e8f51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE4NTYyNzhiOGM0Zjg1ZDJkMDg0ZDRiNmY1MWY5ZWY5MDZlOGY1MQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2003-02-20T01:11:51Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2003-02-20T01:11:51Z"}, "message": "libtool.m4 (LD): Append -melf* option to LD on IRIX with GNU ld.\n\n* libtool.m4 (LD): Append -melf* option to LD on IRIX with GNU ld.\n* ltconfig: Handle it.\n* ltcf-cxx.sh: Use with_gnu_ld passed as a shell variable instead of\nauto-detecting it.\n\nFrom-SVN: r63148", "tree": {"sha": "3b3aa12497747542aeb21e282afe7127b35304fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b3aa12497747542aeb21e282afe7127b35304fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11856278b8c4f85d2d084d4b6f51f9ef906e8f51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11856278b8c4f85d2d084d4b6f51f9ef906e8f51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11856278b8c4f85d2d084d4b6f51f9ef906e8f51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11856278b8c4f85d2d084d4b6f51f9ef906e8f51/comments", "author": null, "committer": null, "parents": [{"sha": "c85dca2816cc564fcdaead75be5ea07b8b2b5493", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c85dca2816cc564fcdaead75be5ea07b8b2b5493", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c85dca2816cc564fcdaead75be5ea07b8b2b5493"}], "stats": {"total": 50, "additions": 40, "deletions": 10}, "files": [{"sha": "89c49c2238855ba131c1a63e4bf558fd1b39e028", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11856278b8c4f85d2d084d4b6f51f9ef906e8f51/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11856278b8c4f85d2d084d4b6f51f9ef906e8f51/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=11856278b8c4f85d2d084d4b6f51f9ef906e8f51", "patch": "@@ -1,5 +1,10 @@\n 2003-02-19  Alexandre Oliva  <aoliva@redhat.com>\n \n+\t* libtool.m4 (LD): Append -melf* option to LD on IRIX with GNU ld.\n+\t* ltconfig: Handle it.\n+\t* ltcf-cxx.sh: Use with_gnu_ld passed as a shell variable instead of\n+\tauto-detecting it.\n+\n \t* ltcf-cxx.sh: Replace $linker_flags with $compiler_flags wherever\n \tit is used as argument to $CC.\n \t* ltcf-gcj.sh: Likewise."}, {"sha": "ff738c7d9e800e02b40c1767aa6d5169d1014bed", "filename": "libtool.m4", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11856278b8c4f85d2d084d4b6f51f9ef906e8f51/libtool.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11856278b8c4f85d2d084d4b6f51f9ef906e8f51/libtool.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libtool.m4?ref=11856278b8c4f85d2d084d4b6f51f9ef906e8f51", "patch": "@@ -144,6 +144,19 @@ case $host in\n   # Find out which ABI we are using.\n   echo '[#]line __oline__ \"configure\"' > conftest.$ac_ext\n   if AC_TRY_EVAL(ac_compile); then\n+   if test \"$lt_cv_prog_gnu_ld\" = yes; then\n+    case `/usr/bin/file conftest.$ac_objext` in\n+    *32-bit*)\n+      LD=\"${LD-ld} -melf32bsmip\"\n+      ;;\n+    *N32*)\n+      LD=\"${LD-ld} -melf32bmipn32\"\n+      ;;\n+    *64-bit*)\n+      LD=\"${LD-ld} -melf64bmip\"\n+      ;;\n+    esac\n+   else\n     case `/usr/bin/file conftest.$ac_objext` in\n     *32-bit*)\n       LD=\"${LD-ld} -32\"\n@@ -155,6 +168,7 @@ case $host in\n       LD=\"${LD-ld} -64\"\n       ;;\n     esac\n+   fi\n   fi\n   rm -rf conftest*\n   ;;"}, {"sha": "9059b1a002f15dabee816f5bc6c210e002acda3e", "filename": "ltcf-cxx.sh", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11856278b8c4f85d2d084d4b6f51f9ef906e8f51/ltcf-cxx.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11856278b8c4f85d2d084d4b6f51f9ef906e8f51/ltcf-cxx.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ltcf-cxx.sh?ref=11856278b8c4f85d2d084d4b6f51f9ef906e8f51", "patch": "@@ -68,11 +68,16 @@ if { ac_try='${CC-c++} -E conftest.$ac_ext'; { (eval echo \\\"$ac_try\\\") 1>&5; (ev\n   # Set up default GNU C++ configuration\n \n   # Check if GNU C++ uses GNU ld as the underlying linker, since the\n-  # archiving commands below assume that GNU ld is being used.\n-  if eval \"`$CC -print-prog-name=ld` --version 2>&1\" | \\\n-      egrep 'GNU ld' > /dev/null; then\n-    with_gnu_ld=yes\n-\n+  # archiving commands below assume that GNU ld is being used.  The\n+  # assumption here is that the linker is going to be the same as that\n+  # used by the C compiler.  For the purposes of GCC, this is ok, but\n+  # if someone uses g++ along with a non-GNU C compiler that doesn't\n+  # use GNU ld, we may lose.  This is ok for the toolchain tree, since\n+  # the only users of ltcf-cxx.sh are libstdc++-v3 and libjava,\n+  # anyway, and those use both gcc and g++, so the settings are bound\n+  # to be the same.\n+\n+  if test \"$with_gnu_ld\" = yes; then\n     archive_cmds='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n     archive_expsym_cmds='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n \n@@ -92,7 +97,6 @@ if { ac_try='${CC-c++} -E conftest.$ac_ext'; { (eval echo \\\"$ac_try\\\") 1>&5; (ev\n       whole_archive_flag_spec=\n     fi\n   else\n-    with_gnu_ld=no\n     wlarc=\n \n     # A generic and very simple default shared library creation\n@@ -110,7 +114,6 @@ if { ac_try='${CC-c++} -E conftest.$ac_ext'; { (eval echo \\\"$ac_try\\\") 1>&5; (ev\n \n else\n   with_gcc=no\n-  with_gnu_ld=no\n   wlarc=\n fi\n "}, {"sha": "bfd7688f79ae65da5f7484313736591e508b75dd", "filename": "ltconfig", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11856278b8c4f85d2d084d4b6f51f9ef906e8f51/ltconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11856278b8c4f85d2d084d4b6f51f9ef906e8f51/ltconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ltconfig?ref=11856278b8c4f85d2d084d4b6f51f9ef906e8f51", "patch": "@@ -1186,6 +1186,11 @@ hpux9* | hpux10* | hpux11*)\n   ;;\n \n irix5* | irix6*)\n+  if test \"$with_gnu_ld\" = yes; then\n+    version_type=linux\n+  else\n+    version_type=irix\n+  if\n   version_type=irix\n   need_lib_prefix=no\n   need_version=no\n@@ -1197,9 +1202,12 @@ irix5* | irix6*)\n     ;;\n   *)\n     case $LD in # libtool.m4 will add one of these switches to LD\n-    *-32|*\"-32 \") libsuff= shlibsuff= libmagic=32-bit;;\n-    *-n32|*\"-n32 \") libsuff=32 shlibsuff=N32 libmagic=N32;;\n-    *-64|*\"-64 \") libsuff=64 shlibsuff=64 libmagic=64-bit;;\n+    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n+      libsuff= shlibsuff= libmagic=32-bit;;\n+    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n+      libsuff=32 shlibsuff=N32 libmagic=N32;;\n+    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n+      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n     *) libsuff= shlibsuff= libmagic=never-match;;\n     esac\n     ;;"}]}