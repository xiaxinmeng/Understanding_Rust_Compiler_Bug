{"sha": "e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThlZjgyZDc0ZjQwZTIxNmIzYTFjOTcwN2E3OWEzYmQwYjZjOTUzZA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@codesourcery.com", "date": "2014-12-31T13:58:16Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2014-12-31T13:58:16Z"}, "message": "Allow Objective-c++ to recognise lambdas.\n\ngcc/cp:\n\n\t* parser.c (cp_parser_primary_expression): If parsing an\n\tobjective-c++ message expression fails, see if a lambda is present.\n\t(cp_parser_objc_message_receiver): Don't assume that, if a message\n\treceiver expression fails, it is a hard error.\n\ngcc/testsuite:\n\n\t* obj-c++.dg/lambda-0.mm New.\n\t* obj-c++.dg/lambda-1.mm New.\n\t* obj-c++.dg/syntax-error-6.mm Adjust for revised error messages.\n\nFrom-SVN: r219125", "tree": {"sha": "89e697fd28a192c9f4e58f50181106401914964d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89e697fd28a192c9f4e58f50181106401914964d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d391d25ae4899249202ec9d68a8c576165d5ba2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d391d25ae4899249202ec9d68a8c576165d5ba2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d391d25ae4899249202ec9d68a8c576165d5ba2"}], "stats": {"total": 74, "additions": 69, "deletions": 5}, "files": [{"sha": "a6ce50bc6858983ffbeebe4be019a6da1128f8ef", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d", "patch": "@@ -1,3 +1,10 @@\n+2014-12-31  Iain Sandoe  <iain@codesourcery.com>\n+\n+\t* parser.c (cp_parser_primary_expression): If parsing an\n+\tobjective-c++ message expression fails, see if a lambda is present.\n+\t(cp_parser_objc_message_receiver): Don't assume that, if a message\n+\treceiver expression fails, it is a hard error.\n+\n 2014-12-25  Jason Merrill  <jason@redhat.com>\n \n \t* pt.c (check_default_tmpl_args): Uses the parameter source"}, {"sha": "68940aab1c9e173223fc7bdd0f6ff2da181bd874", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d", "patch": "@@ -4442,10 +4442,17 @@ cp_parser_primary_expression (cp_parser *parser,\n       }\n \n     case CPP_OPEN_SQUARE:\n-      if (c_dialect_objc ())\n-        /* We have an Objective-C++ message. */\n-        return cp_parser_objc_expression (parser);\n       {\n+\tif (c_dialect_objc ())\n+\t  {\n+\t    /* We might have an Objective-C++ message. */\n+\t    cp_parser_parse_tentatively (parser);\n+\t    tree msg = cp_parser_objc_message_expression (parser);\n+\t    /* If that works out, we're done ... */\n+\t    if (cp_parser_parse_definitely (parser))\n+\t      return msg;\n+\t    /* ... else, fall though to see if it's a lambda.  */\n+\t  }\n \ttree lam = cp_parser_lambda_expression (parser);\n \t/* Don't warn about a failed tentative parse.  */\n \tif (cp_parser_error_occurred (parser))\n@@ -25657,14 +25664,20 @@ cp_parser_objc_message_receiver (cp_parser* parser)\n   cp_parser_parse_tentatively (parser);\n   rcv = cp_parser_expression (parser);\n \n+  /* If that worked out, fine.  */\n   if (cp_parser_parse_definitely (parser))\n     return rcv;\n \n+  cp_parser_parse_tentatively (parser);\n   rcv = cp_parser_simple_type_specifier (parser,\n \t\t\t\t\t /*decl_specs=*/NULL,\n \t\t\t\t\t CP_PARSER_FLAGS_NONE);\n \n-  return objc_get_class_reference (rcv);\n+  if (cp_parser_parse_definitely (parser))\n+    return objc_get_class_reference (rcv);\n+  \n+  cp_parser_error (parser, \"objective-c++ message receiver expected\");\n+  return error_mark_node;\n }\n \n /* Parse the arguments and selectors comprising an Objective-C message."}, {"sha": "03531d386fcaf8deff4d98a62d40c01db08a1cb4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d", "patch": "@@ -1,3 +1,9 @@\n+2014-12-31  Iain Sandoe  <iain@codesourcery.com>\n+\n+\t* obj-c++.dg/lambda-0.mm New.\n+\t* obj-c++.dg/lambda-1.mm New.\n+\t* obj-c++.dg/syntax-error-6.mm Adjust for revised error messages.\n+\n 2014-12-31  Iain Sandoe  <iain@codesourcery.com>\n \n \t* obj-c++.dg/standard-headers.mm New."}, {"sha": "41482fdba88a9fc2737c008f75494a0a63d4bbc3", "filename": "gcc/testsuite/obj-c++.dg/lambda-0.mm", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Flambda-0.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Flambda-0.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Flambda-0.mm?ref=e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d", "patch": "@@ -0,0 +1,22 @@\n+// Contributed by Iain Sandoe <iain@codesourcery.com>, December 2014.  */\n+// { dg-do compile }\n+// { dg-options \"-std=c++11\" }\n+\n+\n+template<class Function>\n+Function thing(Function fn, int a)\n+{\n+  fn(a);\n+  return fn;\n+}\n+\n+int\n+test (int *arr, unsigned n)\n+{\n+  int total = 0;\n+  for (unsigned i=0; i<n; i++) {\n+    int a = arr[i];\n+    thing ([&total] (int a) { total += a; }, a);\n+  }\n+  return total;\n+}"}, {"sha": "050d68dff284e5449bb8057c4236dffd3ff2bddc", "filename": "gcc/testsuite/obj-c++.dg/lambda-1.mm", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Flambda-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Flambda-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Flambda-1.mm?ref=e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d", "patch": "@@ -0,0 +1,13 @@\n+// Contributed by Iain Sandoe <iain@codesourcery.com>, December 2014.  */\n+// { dg-do compile }\n+// { dg-options \"-std=c++11\" }\n+\n+extern \"C\" {\n+  int printf (const char *,...);\n+}\n+\n+int main () \n+{\n+  auto f = [] (const char *msg) -> int { printf(\"%s\", msg); return 0; };\n+  return f(\"Some test\\n\");\n+}"}, {"sha": "36a444f784dbed407796daca831d9f67fc221fcf", "filename": "gcc/testsuite/obj-c++.dg/syntax-error-6.mm", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-6.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-6.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-6.mm?ref=e8ef82d74f40e216b3a1c9707a79a3bd0b6c953d", "patch": "@@ -8,5 +8,8 @@ void FOO()\n {\n   NSButton * mCopyAcrobatCB; \n \t\n-  [ [ mCopyAcrobatCB state ] == 0 ] != 1;  /* { dg-error \"objective\\\\-c\\\\+\\\\+\" } */\n+  [ [ mCopyAcrobatCB state ] == 0 ] != 1;  /* { dg-error \"expected identifier before ... token\" } */\n+/* { dg-error \"expected \\\\\\'\\\\\\{\\\\\\' before \\\\\\'!=\\\\\\' token\" \"\" { target *-*-* } 11 } */\n+/* { dg-error \"lambda expressions only available with\" \"\" { target *-*-* } 11 } */\n+/* { dg-error \"no match for \\\\\\'operator!=\\\\\\' in\" \"\" { target *-*-* } 11 } */\n }"}]}