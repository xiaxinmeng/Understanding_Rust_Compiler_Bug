{"sha": "91592d05cd924351d99ca8dd8f01df77d74170d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE1OTJkMDVjZDkyNDM1MWQ5OWNhOGRkOGYwMWRmNzdkNzQxNzBkOQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2020-09-30T08:50:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-24T10:16:01Z"}, "message": "[Ada] Handle correctly current instance of PO in local subprogram Global\n\ngcc/ada/\n\n\t* sem_prag.adb (Analyze_Global_Item): Handle specially the\n\tcurrent instance of a PO.\n\t* sem_util.ads (Is_Effectively_Volatile,\n\tIs_Effectively_Volatile_For_Reading): Add parameter\n\tIgnore_Protected.\n\t* sem_util.adb (Is_Effectively_Volatile,\n\tIs_Effectively_Volatile_For_Reading): Add parameter\n\tIgnore_Protected to compute the query results ignoring protected\n\tobjects/types.\n\t(Is_Effectively_Volatile_Object,\n\tIs_Effectively_Volatile_Object_For_Reading): Adapt to new\n\tsignature.", "tree": {"sha": "50ff6b9ce47412aa59f67dca44a21ad47077618d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50ff6b9ce47412aa59f67dca44a21ad47077618d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91592d05cd924351d99ca8dd8f01df77d74170d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91592d05cd924351d99ca8dd8f01df77d74170d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91592d05cd924351d99ca8dd8f01df77d74170d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91592d05cd924351d99ca8dd8f01df77d74170d9/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac9ed5cb2659c9a4049dffd58bc120762d140744", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac9ed5cb2659c9a4049dffd58bc120762d140744", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac9ed5cb2659c9a4049dffd58bc120762d140744"}], "stats": {"total": 71, "additions": 53, "deletions": 18}, "files": [{"sha": "e53a9533f99b185a800776f9c95459d83407a90d", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91592d05cd924351d99ca8dd8f01df77d74170d9/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91592d05cd924351d99ca8dd8f01df77d74170d9/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=91592d05cd924351d99ca8dd8f01df77d74170d9", "patch": "@@ -2476,11 +2476,22 @@ package body Sem_Prag is\n                  and then Ekind (Item_Id) = E_Variable\n                  and then Is_Effectively_Volatile_For_Reading (Item_Id)\n                then\n+                  --  The current instance of a protected unit is not an\n+                  --  effectively volatile object, unless the protected unit\n+                  --  is already volatile for another reason (SPARK RM 7.1.2).\n+\n+                  if Is_Single_Protected_Object (Item_Id)\n+                    and then Is_CCT_Instance (Etype (Item_Id), Spec_Id)\n+                    and then not Is_Effectively_Volatile_For_Reading\n+                      (Item_Id, Ignore_Protected => True)\n+                  then\n+                     null;\n+\n                   --  An effectively volatile object for reading cannot appear\n                   --  as a global item of a nonvolatile function (SPARK RM\n                   --  7.1.3(8)).\n \n-                  if Ekind (Spec_Id) in E_Function | E_Generic_Function\n+                  elsif Ekind (Spec_Id) in E_Function | E_Generic_Function\n                     and then not Is_Volatile_Function (Spec_Id)\n                   then\n                      Error_Msg_NE"}, {"sha": "01e99a5f3c5db0b4b6699885239f1d44bfd9d287", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 28, "deletions": 15, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91592d05cd924351d99ca8dd8f01df77d74170d9/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91592d05cd924351d99ca8dd8f01df77d74170d9/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=91592d05cd924351d99ca8dd8f01df77d74170d9", "patch": "@@ -16582,7 +16582,9 @@ package body Sem_Util is\n    -- Is_Effectively_Volatile --\n    -----------------------------\n \n-   function Is_Effectively_Volatile (Id : Entity_Id) return Boolean is\n+   function Is_Effectively_Volatile\n+     (Id               : Entity_Id;\n+      Ignore_Protected : Boolean := False) return Boolean is\n    begin\n       if Is_Type (Id) then\n \n@@ -16610,15 +16612,16 @@ package body Sem_Util is\n                   --  Test for presence of ancestor, as the full view of a\n                   --  private type may be missing in case of error.\n \n-                  return\n-                    Present (Anc)\n-                      and then Is_Effectively_Volatile (Component_Type (Anc));\n+                  return Present (Anc)\n+                    and then Is_Effectively_Volatile\n+                      (Component_Type (Anc), Ignore_Protected);\n                end;\n             end if;\n \n-         --  A protected type is always volatile\n+         --  A protected type is always volatile unless Ignore_Protected is\n+         --  True.\n \n-         elsif Is_Protected_Type (Id) then\n+         elsif Is_Protected_Type (Id) and then not Ignore_Protected then\n             return True;\n \n          --  A descendant of Ada.Synchronous_Task_Control.Suspension_Object is\n@@ -16644,7 +16647,7 @@ package body Sem_Util is\n             and then not\n               (Ekind (Id) = E_Variable and then No_Caching_Enabled (Id)))\n              or else Has_Volatile_Components (Id)\n-             or else Is_Effectively_Volatile (Etype (Id));\n+             or else Is_Effectively_Volatile (Etype (Id), Ignore_Protected);\n       end if;\n    end Is_Effectively_Volatile;\n \n@@ -16653,15 +16656,19 @@ package body Sem_Util is\n    -----------------------------------------\n \n    function Is_Effectively_Volatile_For_Reading\n-     (Id : Entity_Id) return Boolean\n+     (Id               : Entity_Id;\n+      Ignore_Protected : Boolean := False) return Boolean\n    is\n    begin\n-      --  A concurrent type is effectively volatile for reading\n+      --  A concurrent type is effectively volatile for reading, except for a\n+      --  protected type when Ignore_Protected is True.\n \n-      if Is_Concurrent_Type (Id) then\n+      if Is_Task_Type (Id)\n+        or else (Is_Protected_Type (Id) and then not Ignore_Protected)\n+      then\n          return True;\n \n-      elsif Is_Effectively_Volatile (Id) then\n+      elsif Is_Effectively_Volatile (Id, Ignore_Protected) then\n \n         --  Other volatile types and objects are effectively volatile for\n         --  reading when they have property Async_Writers or Effective_Reads\n@@ -16689,10 +16696,9 @@ package body Sem_Util is\n                --  Test for presence of ancestor, as the full view of a\n                --  private type may be missing in case of error.\n \n-               return\n-                 Present (Anc)\n-                   and then Is_Effectively_Volatile_For_Reading\n-                     (Component_Type (Anc));\n+               return Present (Anc)\n+                 and then Is_Effectively_Volatile_For_Reading\n+                   (Component_Type (Anc), Ignore_Protected);\n             end;\n          end if;\n       end if;\n@@ -16706,6 +16712,9 @@ package body Sem_Util is\n    ------------------------------------\n \n    function Is_Effectively_Volatile_Object (N : Node_Id) return Boolean is\n+      function Is_Effectively_Volatile (E : Entity_Id) return Boolean is\n+         (Is_Effectively_Volatile (E, Ignore_Protected => False));\n+\n       function Is_Effectively_Volatile_Object_Inst\n       is new Is_Effectively_Volatile_Object_Shared (Is_Effectively_Volatile);\n    begin\n@@ -16719,6 +16728,10 @@ package body Sem_Util is\n    function Is_Effectively_Volatile_Object_For_Reading\n      (N : Node_Id) return Boolean\n    is\n+      function Is_Effectively_Volatile_For_Reading\n+        (E : Entity_Id) return Boolean\n+      is (Is_Effectively_Volatile_For_Reading (E, Ignore_Protected => False));\n+\n       function Is_Effectively_Volatile_Object_For_Reading_Inst\n       is new Is_Effectively_Volatile_Object_Shared\n         (Is_Effectively_Volatile_For_Reading);"}, {"sha": "cd9b05cc0562664e89ffc5c2c85763198ab56b10", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91592d05cd924351d99ca8dd8f01df77d74170d9/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91592d05cd924351d99ca8dd8f01df77d74170d9/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=91592d05cd924351d99ca8dd8f01df77d74170d9", "patch": "@@ -1879,17 +1879,24 @@ package Sem_Util is\n    --  . machine_emax = 2**10\n    --  . machine_emin = 3 - machine_emax\n \n-   function Is_Effectively_Volatile (Id : Entity_Id) return Boolean;\n+   function Is_Effectively_Volatile\n+     (Id               : Entity_Id;\n+      Ignore_Protected : Boolean := False) return Boolean;\n    --  Determine whether a type or object denoted by entity Id is effectively\n    --  volatile (SPARK RM 7.1.2). To qualify as such, the entity must be either\n    --    * Volatile without No_Caching\n    --    * An array type subject to aspect Volatile_Components\n    --    * An array type whose component type is effectively volatile\n    --    * A protected type\n    --    * Descendant of type Ada.Synchronous_Task_Control.Suspension_Object\n+   --\n+   --  If Ignore_Protected is True, then a protected object/type is treated\n+   --  like a non-protected record object/type for computing the result of\n+   --  this query.\n \n    function Is_Effectively_Volatile_For_Reading\n-     (Id : Entity_Id) return Boolean;\n+     (Id               : Entity_Id;\n+      Ignore_Protected : Boolean := False) return Boolean;\n    --  Determine whether a type or object denoted by entity Id is effectively\n    --  volatile for reading (SPARK RM 7.1.2). To qualify as such, the entity\n    --  must be either\n@@ -1901,6 +1908,10 @@ package Sem_Util is\n    --      reading\n    --    * A protected type\n    --    * Descendant of type Ada.Synchronous_Task_Control.Suspension_Object\n+   --\n+   --  If Ignore_Protected is True, then a protected object/type is treated\n+   --  like a non-protected record object/type for computing the result of\n+   --  this query.\n \n    function Is_Effectively_Volatile_Object\n      (N : Node_Id) return Boolean;"}]}