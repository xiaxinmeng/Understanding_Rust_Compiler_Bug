{"sha": "fe1ad1416516ca21798e2dfacfd87e61f771eea7", "node_id": "C_kwDOANBUbNoAKGZlMWFkMTQxNjUxNmNhMjE3OThlMmRmYWNmZDg3ZTYxZjc3MWVlYTc", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-01-20T00:16:54Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-01-20T00:16:54Z"}, "message": "Daily bump.", "tree": {"sha": "6f44d4937edaa7f999a4514b35b1208741eea944", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f44d4937edaa7f999a4514b35b1208741eea944"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe1ad1416516ca21798e2dfacfd87e61f771eea7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe1ad1416516ca21798e2dfacfd87e61f771eea7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe1ad1416516ca21798e2dfacfd87e61f771eea7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe1ad1416516ca21798e2dfacfd87e61f771eea7/comments", "author": null, "committer": null, "parents": [{"sha": "fe3e978027724f28d3e15747c991844793d42922", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe3e978027724f28d3e15747c991844793d42922", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe3e978027724f28d3e15747c991844793d42922"}], "stats": {"total": 562, "additions": 561, "deletions": 1}, "files": [{"sha": "94b22020726ea9067c6c5772ff1256991640bab8", "filename": "contrib/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe1ad1416516ca21798e2dfacfd87e61f771eea7/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe1ad1416516ca21798e2dfacfd87e61f771eea7/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=fe1ad1416516ca21798e2dfacfd87e61f771eea7", "patch": "@@ -1,3 +1,13 @@\n+2022-01-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* check_GNU_style_lib.py: Skip Python files.\n+\n+2022-01-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* git-backport.py: Use it.\n+\t* git-fix-changelog.py: New file.\n+\t* gcc-git-customization.sh: Add new alias git gcc-fix-changelog.\n+\n 2022-01-17  Martin Liska  <mliska@suse.cz>\n \n \t* git-backport.py: Support renaming of .cc files."}, {"sha": "a8837ed1b1b5ecd43b4a114cbaec1d084de48988", "filename": "gcc/ChangeLog", "status": "modified", "additions": 325, "deletions": 0, "changes": 325, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe1ad1416516ca21798e2dfacfd87e61f771eea7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe1ad1416516ca21798e2dfacfd87e61f771eea7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe1ad1416516ca21798e2dfacfd87e61f771eea7", "patch": "@@ -1,3 +1,328 @@\n+2022-01-19  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* ifcvt.cc (noce_convert_multiple_sets_1): New function.\n+\t(noce_convert_multiple_sets): Call function a second time if we can\n+\timprove the first try.\n+\n+2022-01-19  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* ifcvt.cc (cond_exec_get_condition): New parameter to allow getting the\n+\treversed comparison.\n+\t(try_emit_cmove_seq): New function to facilitate creating a cmov\n+\tsequence.\n+\t(noce_convert_multiple_sets): Create two sequences and use the less\n+\texpensive one.\n+\n+2022-01-19  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* rtl.h (struct rtx_comparison): New struct that holds an rtx\n+\tcomparison.\n+\t* config/rs6000/rs6000.cc (rs6000_emit_minmax): Use struct instead of\n+\tsingle parameters.\n+\t(rs6000_emit_swsqrt): Likewise.\n+\t* expmed.cc (expand_sdiv_pow2): Likewise.\n+\t(emit_store_flag): Likewise.\n+\t* expr.cc (expand_cond_expr_using_cmove): Likewise.\n+\t(expand_expr_real_2): Likewise.\n+\t* ifcvt.cc (noce_emit_cmove): Add compare and reversed compare\n+\tparameters.\n+\t* optabs.cc (emit_conditional_move_1): New function.\n+\t(expand_doubleword_shift_condmove): Use struct.\n+\t(emit_conditional_move): Use struct and allow to call directly\n+\twithout going through preparation steps.\n+\t* optabs.h (emit_conditional_move): Use struct.\n+\n+2022-01-19  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* ifcvt.cc (bb_ok_for_noce_convert_multiple_sets): Estimate insns costs.\n+\t(noce_process_if_block): Use potential costs.\n+\n+2022-01-19  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* ifcvt.cc (noce_convert_multiple_sets): Allow constants.\n+\t(bb_ok_for_noce_convert_multiple_sets): Likewise.\n+\n+2022-01-19  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* ifcvt.cc (need_cmov_or_rewire): New function.\n+\t(noce_convert_multiple_sets): Call it.\n+\n+2022-01-19  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* attribs.cc (attribute_c_tests): Rename to...\n+\t(attribs_cc_tests): ...this.\n+\t* bitmap.cc (bitmap_c_tests): Rename to...\n+\t(bitmap_cc_tests): ...this.\n+\t* cgraph.cc (cgraph_c_finalize): Rename to...\n+\t(cgraph_cc_finalize): ...this.\n+\t(cgraph_c_tests): Rename to...\n+\t(cgraph_cc_tests): ...this.\n+\t* cgraph.h (cgraph_c_finalize): Rename to...\n+\t(cgraph_cc_finalize): ...this.\n+\t(cgraphunit_c_finalize): Rename to...\n+\t(cgraphunit_cc_finalize): ...this.\n+\t* cgraphunit.cc (cgraphunit_c_finalize): Rename to...\n+\t(cgraphunit_cc_finalize): ...this.\n+\t* convert.cc (convert_c_tests): Rename to...\n+\t(convert_cc_tests): ...this.\n+\t* dbgcnt.cc (dbgcnt_c_tests): Rename to...\n+\t(dbgcnt_cc_tests): ...this.\n+\t* diagnostic-show-locus.cc (diagnostic_show_locus_c_tests): Rename to...\n+\t(diagnostic_show_locus_cc_tests): ...this.\n+\t* diagnostic.cc (diagnostic_c_tests): Rename to...\n+\t(diagnostic_cc_tests): ...this.\n+\t* dumpfile.cc (dumpfile_c_tests): Rename to...\n+\t(dumpfile_cc_tests): ...this.\n+\t* dwarf2out.cc (dwarf2out_c_finalize): Rename to...\n+\t(dwarf2out_cc_finalize): ...this.\n+\t* dwarf2out.h (dwarf2out_c_finalize): Rename to...\n+\t(dwarf2out_cc_finalize): ...this.\n+\t* edit-context.cc (edit_context_c_tests): Rename to...\n+\t(edit_context_cc_tests): ...this.\n+\t* et-forest.cc (et_forest_c_tests): Rename to...\n+\t(et_forest_cc_tests): ...this.\n+\t* fibonacci_heap.cc (fibonacci_heap_c_tests): Rename to...\n+\t(fibonacci_heap_cc_tests): ...this.\n+\t* fold-const.cc (fold_const_c_tests): Rename to...\n+\t(fold_const_cc_tests): ...this.\n+\t* function-tests.cc (function_tests_c_tests): Rename to...\n+\t(function_tests_cc_tests): ...this.\n+\t* gcse.cc (gcse_c_finalize): Rename to...\n+\t(gcse_cc_finalize): ...this.\n+\t* gcse.h (gcse_c_finalize): Rename to...\n+\t(gcse_cc_finalize): ...this.\n+\t* ggc-tests.cc (ggc_tests_c_tests): Rename to...\n+\t(ggc_tests_cc_tests): ...this.\n+\t* gimple-ssa-store-merging.cc (store_merging_c_tests): Rename to...\n+\t(store_merging_cc_tests): ...this.\n+\t* gimple.cc (gimple_c_tests): Rename to...\n+\t(gimple_cc_tests): ...this.\n+\t* hash-map-tests.cc (hash_map_tests_c_tests): Rename to...\n+\t(hash_map_tests_cc_tests): ...this.\n+\t* hash-set-tests.cc (hash_set_tests_c_tests): Rename to...\n+\t(hash_set_tests_cc_tests): ...this.\n+\t* input.cc (input_c_tests): Rename to...\n+\t(input_cc_tests): ...this.\n+\t* ipa-cp.cc (ipa_cp_c_finalize): Rename to...\n+\t(ipa_cp_cc_finalize): ...this.\n+\t* ipa-fnsummary.cc (ipa_fnsummary_c_finalize): Rename to...\n+\t(ipa_fnsummary_cc_finalize): ...this.\n+\t* ipa-fnsummary.h (ipa_fnsummary_c_finalize): Rename to...\n+\t(ipa_fnsummary_cc_finalize): ...this.\n+\t* ipa-modref-tree.cc (ipa_modref_tree_c_tests): Rename to...\n+\t(ipa_modref_tree_cc_tests): ...this.\n+\t* ipa-modref-tree.h (modref_c_tests): Delete bogus decl.\n+\t* ipa-modref.cc (ipa_modref_c_finalize): Rename to...\n+\t(ipa_modref_cc_finalize): ...this.\n+\t* ipa-modref.h (ipa_modref_c_finalize): Rename to...\n+\t(ipa_modref_cc_finalize): ...this.\n+\t* ipa-prop.h (ipa_cp_c_finalize): Rename to...\n+\t(ipa_cp_cc_finalize): ...this.\n+\t* ipa-reference.cc (ipa_reference_c_finalize): Rename to...\n+\t(ipa_reference_cc_finalize): ...this.\n+\t* ipa-reference.h (ipa_reference_c_finalize): Rename to...\n+\t(ipa_reference_cc_finalize): ...this.\n+\t* ira-costs.cc (ira_costs_c_finalize): Rename to...\n+\t(ira_costs_cc_finalize): ...this.\n+\t* ira.h (ira_costs_c_finalize): Rename to...\n+\t(ira_costs_cc_finalize): ...this.\n+\t* opt-suggestions.cc (opt_proposer_c_tests): Rename to...\n+\t(opt_suggestions_cc_tests): ...this.\n+\t* opts.cc (opts_c_tests): Rename to...\n+\t(opts_cc_tests): ...this.\n+\t* predict.cc (predict_c_tests): Rename to...\n+\t(predict_cc_tests): ...this.\n+\t* pretty-print.cc (pretty_print_c_tests): Rename to...\n+\t(pretty_print_cc_tests): ...this.\n+\t* read-rtl-function.cc (read_rtl_function_c_tests): Rename to...\n+\t(read_rtl_function_cc_tests): ...this.\n+\t* rtl-tests.cc (rtl_tests_c_tests): Rename to...\n+\t(rtl_tests_cc_tests): ...this.\n+\t* sbitmap.cc (sbitmap_c_tests): Rename to...\n+\t(sbitmap_cc_tests): ...this.\n+\t* selftest-run-tests.cc (selftest::run_tests): Update calls for\n+\t_c_ to _cc_ function renamings; fix names of attribs and\n+\topt-suggestions tests.\n+\t* selftest.cc (selftest_c_tests): Rename to...\n+\t(selftest_cc_tests): ...this.\n+\t* selftest.h (attribute_c_tests): Rename to...\n+\t(attribs_cc_tests): ...this.\n+\t(bitmap_c_tests): Rename to...\n+\t(bitmap_cc_tests): ...this.\n+\t(cgraph_c_tests): Rename to...\n+\t(cgraph_cc_tests): ...this.\n+\t(convert_c_tests): Rename to...\n+\t(convert_cc_tests): ...this.\n+\t(diagnostic_c_tests): Rename to...\n+\t(diagnostic_cc_tests): ...this.\n+\t(diagnostic_show_locus_c_tests): Rename to...\n+\t(diagnostic_show_locus_cc_tests): ...this.\n+\t(dumpfile_c_tests): Rename to...\n+\t(dumpfile_cc_tests): ...this.\n+\t(edit_context_c_tests): Rename to...\n+\t(edit_context_cc_tests): ...this.\n+\t(et_forest_c_tests): Rename to...\n+\t(et_forest_cc_tests): ...this.\n+\t(fibonacci_heap_c_tests): Rename to...\n+\t(fibonacci_heap_cc_tests): ...this.\n+\t(fold_const_c_tests): Rename to...\n+\t(fold_const_cc_tests): ...this.\n+\t(function_tests_c_tests): Rename to...\n+\t(function_tests_cc_tests): ...this.\n+\t(ggc_tests_c_tests): Rename to...\n+\t(ggc_tests_cc_tests): ...this.\n+\t(gimple_c_tests): Rename to...\n+\t(gimple_cc_tests): ...this.\n+\t(hash_map_tests_c_tests): Rename to...\n+\t(hash_map_tests_cc_tests): ...this.\n+\t(hash_set_tests_c_tests): Rename to...\n+\t(hash_set_tests_cc_tests): ...this.\n+\t(input_c_tests): Rename to...\n+\t(input_cc_tests): ...this.\n+\t(opts_c_tests): Rename to...\n+\t(opts_cc_tests): ...this.\n+\t(predict_c_tests): Rename to...\n+\t(predict_cc_tests): ...this.\n+\t(pretty_print_c_tests): Rename to...\n+\t(pretty_print_cc_tests): ...this.\n+\t(read_rtl_function_c_tests): Rename to...\n+\t(read_rtl_function_cc_tests): ...this.\n+\t(rtl_tests_c_tests): Rename to...\n+\t(rtl_tests_cc_tests): ...this.\n+\t(sbitmap_c_tests): Rename to...\n+\t(sbitmap_cc_tests): ...this.\n+\t(selftest_c_tests): Rename to...\n+\t(selftest_cc_tests): ...this.\n+\t(simplify_rtx_c_tests): Rename to...\n+\t(simplify_rtx_cc_tests): ...this.\n+\t(spellcheck_c_tests): Rename to...\n+\t(spellcheck_cc_tests): ...this.\n+\t(spellcheck_tree_c_tests): Rename to...\n+\t(spellcheck_tree_cc_tests): ...this.\n+\t(sreal_c_tests): Rename to...\n+\t(sreal_cc_tests): ...this.\n+\t(store_merging_c_tests): Rename to...\n+\t(store_merging_cc_tests): ...this.\n+\t(tree_c_tests): Rename to...\n+\t(tree_cc_tests): ...this.\n+\t(tree_cfg_c_tests): Rename to...\n+\t(tree_cfg_cc_tests): ...this.\n+\t(typed_splay_tree_c_tests): Rename to...\n+\t(typed_splay_tree_cc_tests): ...this.\n+\t(vec_c_tests): Rename to...\n+\t(vec_cc_tests): ...this.\n+\t(vec_perm_indices_c_tests): Rename to...\n+\t(vec_perm_indices_cc_tests): ..this.\n+\t(opt_proposer_c_tests): Rename to...\n+\t(opt_suggestions_cc_tests): ...this.\n+\t(dbgcnt_c_tests): Rename to...\n+\t(dbgcnt_cc_tests): ...this.\n+\t(ipa_modref_tree_c_tests): Rename to...\n+\t(ipa_modref_tree_cc_tests): ...this.\n+\t* simplify-rtx.cc (simplify_rtx_c_tests): Rename to...\n+\t(simplify_rtx_cc_tests): ...this.\n+\t* spellcheck-tree.cc (spellcheck_tree_c_tests): Rename to...\n+\t(spellcheck_tree_cc_tests): ...this.\n+\t* spellcheck.cc (spellcheck_c_tests): Rename to...\n+\t(spellcheck_cc_tests): ...this.\n+\t* sreal.cc (sreal_c_tests): Rename to...\n+\t(sreal_cc_tests): ...this.\n+\t* toplev.cc (toplev::finalize): Update calls for _c_ to _cc_\n+\tfunction renamings.\n+\t* tree-cfg.cc (tree_cfg_c_tests): Rename to...\n+\t(tree_cfg_cc_tests): ...this.\n+\t* tree.cc (tree_c_tests): Rename to...\n+\t(tree_cc_tests): ...this.\n+\t* typed-splay-tree.cc (typed_splay_tree_c_tests): Rename to...\n+\t(typed_splay_tree_cc_tests): ...this.\n+\t* vec-perm-indices.cc (vec_perm_indices_c_tests): Rename to...\n+\t(vec_perm_indices_cc_tests): ...this.\n+\t* vec.cc (vec_c_tests): Rename to...\n+\t(vec_cc_tests): ...this.\n+\n+2022-01-19  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\tPR tree-optimization/103997\n+\t* tree-vect-loop.cc (vect_analyze_loop): Fix mode skipping for epilogue\n+\tvectorization.\n+\n+2022-01-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/102860\n+\t* match.pd (x %[fl] y -> x % y): New simplification for\n+\tunsigned integral types.\n+\t* optabs-tree.cc (optab_for_tree_code): Return unknown_optab\n+\tfor {CEIL,FLOOR,ROUND}_{DIV,MOD}_EXPR with VECTOR_TYPE.\n+\n+2022-01-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/104112\n+\t* tree-vect-loop.cc (vect_find_reusable_accumulator): Check\n+\tfor required intermediate vector types.\n+\n+2022-01-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/rs6000/rs6000.cc (rs6000_machine_from_flags): Add default:.\n+\n+2022-01-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* configure.ac: Remove -Wno-error=format-diag.\n+\t* configure: Regenerate.\n+\n+2022-01-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/riscv/riscv.cc (riscv_handle_type_attribute):\n+\tUpdate one -Wformat-diag string in warning message.\n+\n+2022-01-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/104103\n+\t* gimple-ssa-warn-access.cc (pass_waccess::check_call): Don't check\n+\t.ASAN_MARK calls.\n+\n+2022-01-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/89074\n+\t* fold-const.cc (address_compare): Consider different STRING_CSTs\n+\twith the same lengths that memcmp the same as equal, not different.\n+\n+2022-01-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/sse.md (*aes<aeswideklvariant>u*): Use %0 instead of\n+\t{%0}.\n+\n+2022-01-19  Martin Liska  <mliska@suse.cz>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* config/nvptx/nvptx.cc (nvptx_goacc_validate_dims_1): Update\n+\twarning messages.\n+\n+2022-01-19  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\tPR target/104090\n+\t* config/rs6000/rs6000.cc (rs6000_machine_from_flags): Use also\n+\trs6000_cpu.\n+\n+2022-01-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/104104\n+\t* config/i386/sse.md\n+\t(<avx512>_<complexopname>_<mode><maskc_name><round_name>,\n+\tavx512fp16_<complexopname>sh_v8hf<mask_scalarc_name><round_scalarcz_name>,\n+\tavx512dq_mul<mode>3<mask_name>, <avx2_avx512>_permvar<mode><mask_name>,\n+\tavx2_perm<mode>_1<mask_name>, avx512f_perm<mode>_1<mask_name>,\n+\tavx512dq_rangep<mode><mask_name><round_saeonly_name>,\n+\tavx512dq_ranges<mode><mask_scalar_name><round_saeonly_scalar_name>,\n+\t<avx512>_getmant<mode><mask_name><round_saeonly_name>,\n+\tavx512f_vgetmant<mode><mask_scalar_name><round_saeonly_scalar_name>):\n+\tUse vxorps\\t%x0, %x0, %x0 instead of vxorps\\t{%x0, %x0, %x0}.\n+\n+2022-01-19  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/104069\n+\t* gimple-ssa-warn-access.cc (pointers_related_p): Return false for\n+\tan unknown result as documented.\n+\n 2022-01-18  Andrew Pinski  <apinski@marvell.com>\n \n \t* ipa-split.cc (visit_bb): Fix comment before the"}, {"sha": "261c631b6a287e74d21eaf90a07f58942a31f8ea", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe1ad1416516ca21798e2dfacfd87e61f771eea7/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe1ad1416516ca21798e2dfacfd87e61f771eea7/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=fe1ad1416516ca21798e2dfacfd87e61f771eea7", "patch": "@@ -1 +1 @@\n-20220119\n+20220120"}, {"sha": "c79cbd1da45a060bcbd26cf57b1ee50d41213a49", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe1ad1416516ca21798e2dfacfd87e61f771eea7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe1ad1416516ca21798e2dfacfd87e61f771eea7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fe1ad1416516ca21798e2dfacfd87e61f771eea7", "patch": "@@ -1,3 +1,19 @@\n+2022-01-19  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR ada/103538\n+\t* gcc-interface/Makefile.in (target_cpu): Set to x32 for\n+\tx86_64-linux-gnux32.\n+\n+2022-01-19  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR ada/103538\n+\t* Makefile.rtl (LIBGNAT_TARGET_PAIRS): Add\n+\t$(TRASYM_DWARF_UNIX_PAIRS),\n+\ts-tsmona.adb<libgnat/s-tsmona__linux.adb,\n+\t$(GNATRTL_128BIT_PAIRS).\n+\t(EXTRA_GNATRTL_NONTASKING_OBJS): Add $(TRASYM_DWARF_UNIX_OBJS)\n+\tand $(GNATRTL_128BIT_OBJS).\n+\n 2022-01-18  Martin Liska  <mliska@suse.cz>\n \n \t* adaint.c: Revert filename changes in comments."}, {"sha": "2cfebb2ab05a7eb35230a157e180295dcbc5e1bb", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe1ad1416516ca21798e2dfacfd87e61f771eea7/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe1ad1416516ca21798e2dfacfd87e61f771eea7/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=fe1ad1416516ca21798e2dfacfd87e61f771eea7", "patch": "@@ -1,3 +1,21 @@\n+2022-01-19  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* c-common.cc (c_common_c_tests): Rename to...\n+\t(c_common_cc_tests): ...this.\n+\t(c_family_tests): Update calls for .c to .cc renaming.\n+\t* c-common.h (c_format_c_tests): Rename to...\n+\t(c_format_cc_tests): ...this.\n+\t(c_indentation_c_tests): Rename to...\n+\t(c_indentation_cc_tests): ...this.\n+\t(c_pretty_print_c_tests): Rename to...\n+\t(c_pretty_print_cc_tests): ...this.\n+\t* c-format.cc (c_format_c_tests): Rename to...\n+\t(c_format_cc_tests): ...this.\n+\t* c-indentation.cc (c_indentation_c_tests): Rename to...\n+\t(c_indentation_cc_tests): ...this.\n+\t* c-pretty-print.cc (c_pretty_print_c_tests): Rename to...\n+\t(c_pretty_print_cc_tests): ...this.\n+\n 2022-01-17  Martin Liska  <mliska@suse.cz>\n \n \t* c-ada-spec.cc: Rename .c names to .cc."}, {"sha": "e366eed4c36eb9300f509236755da20d5c36d69c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe1ad1416516ca21798e2dfacfd87e61f771eea7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe1ad1416516ca21798e2dfacfd87e61f771eea7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fe1ad1416516ca21798e2dfacfd87e61f771eea7", "patch": "@@ -1,3 +1,21 @@\n+2022-01-19  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* cp-lang.cc (selftest::run_cp_tests): Update calls for .c to .cc\n+\trenaming.\n+\t* cp-tree.h (cp_pt_c_tests): Rename to...\n+\t(cp_pt_cc_tests): ...this.\n+\t(cp_tree_c_tests): Rename to...\n+\t(cp_tree_cc_tests): ...this.\n+\t* pt.cc (cp_pt_c_tests): Rename to...\n+\t(cp_pt_cc_tests): ...this.\n+\t* tree.cc (cp_tree_c_tests): Rename to...\n+\t(cp_tree_cc_tests): ...this.\n+\n+2022-01-19  Jason Merrill  <jason@redhat.com>\n+\n+\t* parser.cc (saved_token_sentinel::rollback): Use\n+\tcp_lexer_previous_token.\n+\n 2022-01-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/104055"}, {"sha": "a28ed323b64eb8a441665519ef859070e8f7f710", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe1ad1416516ca21798e2dfacfd87e61f771eea7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe1ad1416516ca21798e2dfacfd87e61f771eea7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fe1ad1416516ca21798e2dfacfd87e61f771eea7", "patch": "@@ -1,3 +1,94 @@\n+2022-01-19  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* gcc.dg/ifcvt-4.c: Remove s390-specific check.\n+\t* gcc.target/s390/ifcvt-two-insns-bool.c: New test.\n+\t* gcc.target/s390/ifcvt-two-insns-int.c: New test.\n+\t* gcc.target/s390/ifcvt-two-insns-long.c: New test.\n+\n+2022-01-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/102860\n+\t* gfortran.dg/pr102860.f90: New test.\n+\n+2022-01-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/104115\n+\t* gcc.dg/tree-ssa/evrp-trans2.c: New test.\n+\n+2022-01-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/104112\n+\t* gcc.dg/vect/pr104112-1.c: New testcase.\n+\t* gcc.dg/vect/pr104112-2.c: New testcase.\n+\n+2022-01-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* g++.dg/ext/boolcomplex-1.c: Moved to...\n+\t* g++.dg/ext/boolcomplex-1.C: ...here.\n+\t* g++.dg/opt/pr47639.c: Moved to...\n+\t* g++.dg/opt/pr47639.C: ...here.\n+\t* g++.dg/pr83979.c: Moved to...\n+\t* g++.dg/pr83979.C: ...here.\n+\t* g++.dg/tm/asm-1.c: Moved to...\n+\t* g++.dg/tm/asm-1.C: ...here.\n+\t* g++.dg/vect/pr71483.c: Moved to...\n+\t* g++.dg/vect/pr71483.cc: ...here.\n+\n+2022-01-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/89074\n+\t* gcc.dg/tree-ssa/pr89074.c: New test.\n+\n+2022-01-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR testsuite/102833\n+\t* gcc.dg/vect/bb-slp-17.c: Require vect64.\n+\n+2022-01-19  Rimvydas Jasinskas  <rimvydas.jas@gmail.com>\n+\n+\tPR testsuite/104021\n+\t* gcc.dg/vect/tsvc/tsvc.h: Do not include malloc.h on dragonfly\n+\tand use posix_memalign ().\n+\n+2022-01-19  Rimvydas Jasinskas  <rimvydas.jas@gmail.com>\n+\n+\tPR testsuite/104022\n+\t* g++.dg/gcov/pr16855.C: xfail the count lines for DTORs on dragonfly.\n+\t* g++.dg/gcov/pr16855-priority.C: Ditto.  Adjust source layout so that\n+\tdejagnu xfail expressions work.\n+\n+2022-01-19  Martin Liska  <mliska@suse.cz>\n+\n+\tPR testsuite/104109\n+\t* lib/gcov.exp: Fix pytest detection unsupported message.\n+\n+2022-01-19  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR tree-optimization/104015\n+\t* gcc.dg/vect/slp-perm-9.c: Adjust.\n+\t* gcc.target/powerpc/pr104015-1.c: New test.\n+\t* gcc.target/powerpc/pr104015-2.c: New test.\n+\n+2022-01-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/104104\n+\t* gcc.target/i386/pr104104.c: New test.\n+\n+2022-01-19  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/104076\n+\t* g++.dg/warn/Wdangling-pointer-3.C: New test.\n+\n+2022-01-19  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/104103\n+\t* gcc.dg/torture/pr57147-2.c: Prune out expected warning.\n+\n+2022-01-19  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/104069\n+\t* gcc.dg/Wuse-after-free.c: New test.\n+\n 2022-01-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/104055"}, {"sha": "ba10ad371a04adabf2a50838fe173521873f38ca", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe1ad1416516ca21798e2dfacfd87e61f771eea7/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe1ad1416516ca21798e2dfacfd87e61f771eea7/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=fe1ad1416516ca21798e2dfacfd87e61f771eea7", "patch": "@@ -1,3 +1,36 @@\n+2022-01-19  Marcel Vollweiler  <marcel@codesourcery.com>\n+\n+\t* config/gcn/icv-device.c: Make GOMP_DEVICE_NUM_VAR public (remove\n+\t\"static\") to make the device num available in the offload image.\n+\n+2022-01-19  Martin Liska  <mliska@suse.cz>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-c++/privatized-ref-2.C: Update scanning\n+\tpatterns.\n+\t* testsuite/libgomp.oacc-c++/privatized-ref-3.C: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/acc_prof-kernels-1.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-2.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/parallel-dims.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/pr85486.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/pr95270-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/routine-nohost-2.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/struct-copyout-1.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/struct-copyout-2.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/vector-length-64-1.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-fortran/attach-descriptor-1.f90:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-fortran/derivedtypes-arrays-1.f90:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-fortran/kernels-loop-2.f95: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/parallel-dims.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/privatized-ref-1.f95: Likewise.\n+\n 2022-01-18  Martin Liska  <mliska@suse.cz>\n \n \t* testsuite/libgomp.oacc-c++/privatized-ref-2.C: Update keyword"}, {"sha": "f3e752a3cd49bae2f381631696457b727f3103d9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe1ad1416516ca21798e2dfacfd87e61f771eea7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe1ad1416516ca21798e2dfacfd87e61f771eea7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=fe1ad1416516ca21798e2dfacfd87e61f771eea7", "patch": "@@ -1,3 +1,52 @@\n+2022-01-19  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* configure.ac (GLIBCXX_ENABLE_DEBUG_FLAGS): Remove -gdwarf-4\n+\tfrom default flags.\n+\t* configure: Regenerate.\n+\n+2022-01-19  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/104123\n+\t* testsuite/29_atomics/headers/stdatomic.h/c_compat.cc: Include\n+\t<stddef.h>.\n+\n+2022-01-19  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* scripts/testsuite_flags.in: Add src/libbacktrace/.libs to\n+\tlinker search paths.\n+\t* src/Makefile.am: Fix src/debug/libbacktrace build.\n+\t* src/Makefile.in: Regenerate.\n+\t* src/libbacktrace/Makefile.am: Use per-library CPPFLAGS\n+\tvariable. Use symlinks for the source files.\n+\t* src/libbacktrace/Makefile.in: Regenerate.\n+\n+2022-01-19  Matthias Kretz  <m.kretz@gsi.de>\n+\n+\t* include/experimental/bits/simd.h (__floating_point_flags): Do\n+\tnot rely on math_errhandling to expand to a constant expression.\n+\n+2022-01-19  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/evolution.xml: Document deprecations.\n+\t* doc/xml/manual/status_cxx2017.xml: Update status.\n+\t* doc/html/*: Regenerate.\n+\n+2022-01-19  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/stl_tempbuf.h (get_temporary_buffer): Change\n+\t_GLIBCXX14_DEPRECATED to _GLIBCXX17_DEPRECATED.\n+\n+2022-01-19  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/stl_pair.h (_PCC::_DeprConsPair): Remove unused\n+\tfunction.\n+\n+2022-01-19  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/104101\n+\t* include/bits/shared_ptr_atomic.h (_Sp_atomic::_Atomic_count::lock):\n+\tOnly use __thread_relax if __cpp_lib_atomic_wait is defined.\n+\n 2022-01-18  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/104099"}]}