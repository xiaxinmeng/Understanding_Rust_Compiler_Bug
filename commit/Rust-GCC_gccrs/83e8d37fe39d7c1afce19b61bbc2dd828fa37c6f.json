{"sha": "83e8d37fe39d7c1afce19b61bbc2dd828fa37c6f", "node_id": "C_kwDOANBUbNoAKDgzZThkMzdmZTM5ZDdjMWFmY2UxOWI2MWJiYzJkZDgyOGZhMzdjNmY", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2022-11-24T15:27:37Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-28T12:02:31Z"}, "message": "ada: Implement change to SPARK RM rule on state refinement\n\nSPARK RM 7.1.4(4) does not mandate anymore that a package with abstract\nstates has a completing body, unless the package state is mentioned in\nPart_Of specifications. Implement that change.\n\ngcc/ada/\n\n\t* sem_prag.adb (Check_Part_Of_Abstract_State): Add verification\n\trelated to use of Part_Of, so that constituents in private childs\n\tthat refer to state in a sibling or parent unit force that unit to\n\thave a body.\n\t* sem_util.adb (Check_State_Refinements): Drop the requirement to\n\thave always a package body for state refinement, when the package\n\tstate is mentioned in no Part_Of specification.\n\t* sem_ch3.adb (Analyze_Declarations): Refresh SPARK refs in comment.\n\t* sem_ch7.adb (Analyze_Package_Declaration): Likewise.", "tree": {"sha": "70e71a68004e8053d451c58c5d08892b5f950749", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70e71a68004e8053d451c58c5d08892b5f950749"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83e8d37fe39d7c1afce19b61bbc2dd828fa37c6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83e8d37fe39d7c1afce19b61bbc2dd828fa37c6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83e8d37fe39d7c1afce19b61bbc2dd828fa37c6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83e8d37fe39d7c1afce19b61bbc2dd828fa37c6f/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b293a949c0fbe21e47c4bc99f807dc941c02bb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b293a949c0fbe21e47c4bc99f807dc941c02bb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b293a949c0fbe21e47c4bc99f807dc941c02bb6"}], "stats": {"total": 43, "additions": 33, "deletions": 10}, "files": [{"sha": "61386e27feb34ff7caeb479d9431b3d2037ce027", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83e8d37fe39d7c1afce19b61bbc2dd828fa37c6f/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83e8d37fe39d7c1afce19b61bbc2dd828fa37c6f/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=83e8d37fe39d7c1afce19b61bbc2dd828fa37c6f", "patch": "@@ -2942,7 +2942,8 @@ package body Sem_Ch3 is\n          --  Verify that all abstract states found in any package declared in\n          --  the input declarative list have proper refinements. The check is\n          --  performed only when the context denotes a block, entry, package,\n-         --  protected, subprogram, or task body (SPARK RM 7.2.2(3)).\n+         --  protected, subprogram, or task body (SPARK RM 7.1.4(4) and SPARK\n+         --  RM 7.2.2(3)).\n \n          Check_State_Refinements (Context);\n "}, {"sha": "284706981d65d2b5a1f339a679ea1b08fb5760e2", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83e8d37fe39d7c1afce19b61bbc2dd828fa37c6f/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83e8d37fe39d7c1afce19b61bbc2dd828fa37c6f/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=83e8d37fe39d7c1afce19b61bbc2dd828fa37c6f", "patch": "@@ -1243,11 +1243,11 @@ package body Sem_Ch7 is\n          Check_Completion;\n \n          --  If the package spec does not require an explicit body, then all\n-         --  abstract states declared in nested packages cannot possibly get\n-         --  a proper refinement (SPARK RM 7.2.2(3)). This check is performed\n-         --  only when the compilation unit is the main unit to allow for\n-         --  modular SPARK analysis where packages do not necessarily have\n-         --  bodies.\n+         --  abstract states declared in nested packages cannot possibly get a\n+         --  proper refinement (SPARK RM 7.1.4(4) and SPARK RM 7.2.2(3)). This\n+         --  check is performed only when the compilation unit is the main\n+         --  unit to allow for modular SPARK analysis where packages do not\n+         --  necessarily have bodies.\n \n          if Is_Comp_Unit then\n             Check_State_Refinements"}, {"sha": "27bd879903ea933524932827dd0ccacc882f4ce2", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83e8d37fe39d7c1afce19b61bbc2dd828fa37c6f/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83e8d37fe39d7c1afce19b61bbc2dd828fa37c6f/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=83e8d37fe39d7c1afce19b61bbc2dd828fa37c6f", "patch": "@@ -63,6 +63,7 @@ with Sem;            use Sem;\n with Sem_Aux;        use Sem_Aux;\n with Sem_Ch3;        use Sem_Ch3;\n with Sem_Ch6;        use Sem_Ch6;\n+with Sem_Ch7;        use Sem_Ch7;\n with Sem_Ch8;        use Sem_Ch8;\n with Sem_Ch12;       use Sem_Ch12;\n with Sem_Ch13;       use Sem_Ch13;\n@@ -3567,6 +3568,21 @@ package body Sem_Prag is\n             return;\n          end if;\n \n+         --  In the case of state in a (descendant of a private) child which\n+         --  is Part_Of the state of another package, the package defining the\n+         --  encapsulating abstract state should have a body, to ensure that it\n+         --  has a state refinement (SPARK RM 7.1.4(4)).\n+\n+         if Enclosing_Comp_Unit_Node (Encap_Id) /=\n+            Enclosing_Comp_Unit_Node (Item_Id)\n+           and then not Unit_Requires_Body (Scope (Encap_Id))\n+         then\n+            SPARK_Msg_N\n+              (\"indicator Part_Of must denote abstract state of package \"\n+               & \"with a body (SPARK RM 7.1.4(4))\", Indic);\n+            return;\n+         end if;\n+\n          --  At this point it is known that the Part_Of indicator is legal\n \n          Legal := True;"}, {"sha": "a13d9ebef5b7173e2749c29899bc8a92331281e4", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83e8d37fe39d7c1afce19b61bbc2dd828fa37c6f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83e8d37fe39d7c1afce19b61bbc2dd828fa37c6f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=83e8d37fe39d7c1afce19b61bbc2dd828fa37c6f", "patch": "@@ -5450,12 +5450,18 @@ package body Sem_Util is\n                while Present (State_Elmt) loop\n                   State_Id := Node (State_Elmt);\n \n-                  --  Emit an error when a non-null state lacks any form of\n-                  --  refinement.\n+                  --  Emit an error when a non-null state lacks refinement,\n+                  --  but has Part_Of constituents or there is a package\n+                  --  body (SPARK RM 7.1.4(4)). Constituents in private\n+                  --  child packages, which are not known at this stage,\n+                  --  independently require the existence of a package body.\n \n                   if not Is_Null_State (State_Id)\n-                    and then not Has_Null_Refinement (State_Id)\n-                    and then not Has_Non_Null_Refinement (State_Id)\n+                    and then No (Refinement_Constituents (State_Id))\n+                    and then\n+                      (Present (Part_Of_Constituents (State_Id))\n+                         or else\n+                       Present (Body_Id))\n                   then\n                      Error_Msg_N (\"state & requires refinement\", State_Id);\n                      Error_Msg_N (\"\\package body should have Refined_State \""}]}