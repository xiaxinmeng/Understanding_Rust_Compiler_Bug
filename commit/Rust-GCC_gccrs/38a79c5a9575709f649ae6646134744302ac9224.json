{"sha": "38a79c5a9575709f649ae6646134744302ac9224", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhhNzljNWE5NTc1NzA5ZjY0OWFlNjY0NjEzNDc0NDMwMmFjOTIyNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-06-28T20:02:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-06-28T20:02:12Z"}, "message": "PR c++/69300 - ICE with self-referential noexcept\n\n\t* pt.c (maybe_instantiate_noexcept): Check for recursion.\n\nFrom-SVN: r249757", "tree": {"sha": "fe88f317e4fa0b3bf0f3a64a8c1b7c8b5a4d5932", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe88f317e4fa0b3bf0f3a64a8c1b7c8b5a4d5932"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38a79c5a9575709f649ae6646134744302ac9224", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38a79c5a9575709f649ae6646134744302ac9224", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38a79c5a9575709f649ae6646134744302ac9224", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38a79c5a9575709f649ae6646134744302ac9224/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7e61b3d4fd0ec658697ece8dac2d27000d6da921", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e61b3d4fd0ec658697ece8dac2d27000d6da921", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e61b3d4fd0ec658697ece8dac2d27000d6da921"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "2245ca9060c23550b84f93ef80a62c89ec292c9b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38a79c5a9575709f649ae6646134744302ac9224/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38a79c5a9575709f649ae6646134744302ac9224/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=38a79c5a9575709f649ae6646134744302ac9224", "patch": "@@ -1,5 +1,8 @@\n 2017-06-28  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/69300 - ICE with self-referential noexcept\n+\t* pt.c (maybe_instantiate_noexcept): Check for recursion.\n+\n \tPR c++/61022 - error with variadic template template parm\n \t* pt.c (convert_template_argument): Keep the TYPE_PACK_EXPANSION.\n "}, {"sha": "047d3baabbfeda2b2e69f8fe44cfa0f7ab6d3067", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38a79c5a9575709f649ae6646134744302ac9224/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38a79c5a9575709f649ae6646134744302ac9224/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=38a79c5a9575709f649ae6646134744302ac9224", "patch": "@@ -22557,8 +22557,20 @@ maybe_instantiate_noexcept (tree fn)\n \n   if (TREE_CODE (noex) == DEFERRED_NOEXCEPT)\n     {\n+      static hash_set<tree>* fns = new hash_set<tree>;\n+      bool added = false;\n       if (DEFERRED_NOEXCEPT_PATTERN (noex) == NULL_TREE)\n \tspec = get_defaulted_eh_spec (fn);\n+      else if (!(added = !fns->add (fn)))\n+\t{\n+\t  /* If hash_set::add returns true, the element was already there.  */\n+\t  location_t loc = EXPR_LOC_OR_LOC (DEFERRED_NOEXCEPT_PATTERN (noex),\n+\t\t\t\t\t    DECL_SOURCE_LOCATION (fn));\n+\t  error_at (loc,\n+\t\t    \"exception specification of %qD depends on itself\",\n+\t\t    fn);\n+\t  spec = noexcept_false_spec;\n+\t}\n       else if (push_tinst_level (fn))\n \t{\n \t  push_access_scope (fn);\n@@ -22579,6 +22591,9 @@ maybe_instantiate_noexcept (tree fn)\n       else\n \tspec = noexcept_false_spec;\n \n+      if (added)\n+\tfns->remove (fn);\n+\n       TREE_TYPE (fn) = build_exception_variant (fntype, spec);\n     }\n "}, {"sha": "c51e94e75738cc9b6d60b211f8413e8a4235dd71", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept30.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38a79c5a9575709f649ae6646134744302ac9224/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38a79c5a9575709f649ae6646134744302ac9224/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept30.C?ref=38a79c5a9575709f649ae6646134744302ac9224", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/69300\n+// { dg-do compile { target c++11 } }\n+\n+template<typename A>\n+struct F {\n+  template<typename B>\n+  void f() noexcept(&F::template f<B>) {} // { dg-error \"exception specification\" }\n+};\n+\n+int main () {\n+  F<void>().f<int>();\n+}"}]}