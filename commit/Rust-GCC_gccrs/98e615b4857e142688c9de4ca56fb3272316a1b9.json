{"sha": "98e615b4857e142688c9de4ca56fb3272316a1b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThlNjE1YjQ4NTdlMTQyNjg4YzlkZTRjYTU2ZmIzMjcyMzE2YTFiOQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2006-07-20T23:37:27Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2006-07-20T23:37:27Z"}, "message": "PR libstdc++/19664 round 1\n\n2006-07-20  Benjamin Kosnik  <bkoz@redhat.com>\n\t    Jakub Jelinek  <jakub@redhat.com>\n\t\n\tPR libstdc++/19664 round 1\n\t* acinclude.m4 (GLIBCXX_ENABLE_VISIBILITY): Check it.\n\t* configure.ac: Use it.\n\t* configure: Regenerate.\n\t* docs/html/configopts.html: Document it.\n\t* include/Makefile.am: Slip in to c++config.\n\t* include/Makefile.in: Regenerate.\n\t* include/bits/c++config (_GLIBCXX_VISIBILITY): New.\n\t(_GLIBCXX_BEGIN_NAMESPACE): Use it.\n\t(_GLIBCXX_END_NAMESPACE): Use it.\n\t(_GLIBCXX_BEGIN_NESTED_NAMESPACE): Use it.\n\t(_GLIBCXX_END_NESTED_NAMESPACE): Use it.\t\t\n\t* src/debug.cc: Mark __gnu_internal namespace with hidden\n\tvisibility attribute.\n\t* src/ext-inst.cc: Same.\n\t* src/globals_io.cc: Same.\n\t* src/globals_locale.cc: Same.\n\t* src/ios_init.cc: Same.\n\t* src/locale.cc: Same.\n\t* src/mt_allocator.cc: Same.\n\t* src/pool_allocator.cc: Same.\n\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r115632", "tree": {"sha": "65e37e23e7c174d37c16abc3c6c9928ba202b8fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65e37e23e7c174d37c16abc3c6c9928ba202b8fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98e615b4857e142688c9de4ca56fb3272316a1b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98e615b4857e142688c9de4ca56fb3272316a1b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98e615b4857e142688c9de4ca56fb3272316a1b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98e615b4857e142688c9de4ca56fb3272316a1b9/comments", "author": null, "committer": null, "parents": [{"sha": "326d5132e4ac6bea1b33dec95b3361faac184c71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/326d5132e4ac6bea1b33dec95b3361faac184c71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/326d5132e4ac6bea1b33dec95b3361faac184c71"}], "stats": {"total": 265, "additions": 241, "deletions": 24}, "files": [{"sha": "ce07b45e897c88cab66f20fa2fbff1cf0027a83b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -1,3 +1,28 @@\n+2006-07-20  Benjamin Kosnik  <bkoz@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\t\n+\tPR libstdc++/19664 round 1\n+\t* acinclude.m4 (GLIBCXX_ENABLE_VISIBILITY): Check it.\n+\t* configure.ac: Use it.\n+\t* configure: Regenerate.\n+\t* docs/html/configopts.html: Document it.\n+\t* include/Makefile.am: Slip in to c++config.\n+\t* include/Makefile.in: Regenerate.\n+\t* include/bits/c++config (_GLIBCXX_VISIBILITY): New.\n+\t(_GLIBCXX_BEGIN_NAMESPACE): Use it.\n+\t(_GLIBCXX_END_NAMESPACE): Use it.\n+\t(_GLIBCXX_BEGIN_NESTED_NAMESPACE): Use it.\n+\t(_GLIBCXX_END_NESTED_NAMESPACE): Use it.\t\t\n+\t* src/debug.cc: Mark __gnu_internal namespace with hidden\n+\tvisibility attribute.\n+\t* src/ext-inst.cc: Same.\n+\t* src/globals_io.cc: Same.\n+\t* src/globals_locale.cc: Same.\n+\t* src/ios_init.cc: Same.\n+\t* src/locale.cc: Same.\n+\t* src/mt_allocator.cc: Same.\n+\t* src/pool_allocator.cc: Same.\n+\n 2006-07-16  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/28277 (partial: valarray bits)"}, {"sha": "0a391b22a72850f40c5e83b71feff85d13fab8f4", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -139,6 +139,8 @@ ENABLE_SYMVERS_GNU_NAMESPACE_FALSE = @ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@\n ENABLE_SYMVERS_GNU_NAMESPACE_TRUE = @ENABLE_SYMVERS_GNU_NAMESPACE_TRUE@\n ENABLE_SYMVERS_GNU_TRUE = @ENABLE_SYMVERS_GNU_TRUE@\n ENABLE_SYMVERS_TRUE = @ENABLE_SYMVERS_TRUE@\n+ENABLE_VISIBILITY_FALSE = @ENABLE_VISIBILITY_FALSE@\n+ENABLE_VISIBILITY_TRUE = @ENABLE_VISIBILITY_TRUE@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GLIBCXX_BUILD_DEBUG_FALSE = @GLIBCXX_BUILD_DEBUG_FALSE@"}, {"sha": "a15e351fc0ced9fa94d336804efab0b6f5c63382", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -2100,6 +2100,38 @@ EOF\n ])\n \n \n+dnl\n+dnl Allow visibility attributes to be used on namespaces, objects, etc.\n+dnl\n+dnl --enable-visibility enables attempt to use visibility attributes.\n+dnl --disable-visibility turns off all use of visibility attributes.\n+dnl  +  Usage:  GLIBCXX_ENABLE_VISIBILITY[(DEFAULT)]\n+dnl       Where DEFAULT is 'yes'.\n+dnl\n+AC_DEFUN([GLIBCXX_ENABLE_VISIBILITY], [\n+GLIBCXX_ENABLE(visibility,$1,,[enables visibility safe usage])\n+\n+if test x$enable_visibility = xyes ; then\n+  dnl all hail libgfortran\n+  dnl Check whether the target supports hidden visibility.\n+  AC_CACHE_CHECK([whether the target supports hidden visibility],\n+\t\t have_attribute_visibility, [\n+  save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=\"$CFLAGS -Werror\"\n+  AC_TRY_COMPILE([void __attribute__((visibility(\"hidden\"))) foo(void) { }],\n+\t\t [], have_attribute_visibility=yes,\n+\t\t have_attribute_visibility=no)\n+  CFLAGS=\"$save_CFLAGS\"])\n+  if test $have_attribute_visibility = no; then\n+    enable_visibility=no\n+  fi\n+fi\n+\n+GLIBCXX_CONDITIONAL(ENABLE_VISIBILITY, test $enable_visibility = yes)\n+AC_MSG_NOTICE([visibility supported: $enable_visibility])\n+])\n+\n+\n dnl\n dnl Add version tags to symbols in shared library (or not), additionally\n dnl marking other symbols as private/local (or not)."}, {"sha": "f5cdf21d006ad7638446c040f1cdf104ab0db060", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 109, "deletions": 4, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -309,7 +309,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS libtool_VERSION multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar glibcxx_builddir glibcxx_srcdir toplevel_srcdir CC ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CFLAGS CXXFLAGS LN_S AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT CPP CPPFLAGS EGREP LIBTOOL CXXCPP enable_shared enable_static GLIBCXX_HOSTED_TRUE GLIBCXX_HOSTED_FALSE GLIBCXX_BUILD_PCH_TRUE GLIBCXX_BUILD_PCH_FALSE glibcxx_PCHFLAGS CSTDIO_H BASIC_FILE_H BASIC_FILE_CC check_msgfmt glibcxx_MOFILES glibcxx_POFILES glibcxx_localedir USE_NLS CLOCALE_H CMESSAGES_H CCODECVT_CC CCOLLATE_CC CCTYPE_CC CMESSAGES_CC CMONEY_CC CNUMERIC_CC CTIME_H CTIME_CC CLOCALE_CC CLOCALE_INTERNAL_H ALLOCATOR_H ALLOCATOR_NAME C_INCLUDE_DIR GLIBCXX_C_HEADERS_C_TRUE GLIBCXX_C_HEADERS_C_FALSE GLIBCXX_C_HEADERS_C_STD_TRUE GLIBCXX_C_HEADERS_C_STD_FALSE GLIBCXX_C_HEADERS_COMPATIBILITY_TRUE GLIBCXX_C_HEADERS_COMPATIBILITY_FALSE DEBUG_FLAGS GLIBCXX_BUILD_DEBUG_TRUE GLIBCXX_BUILD_DEBUG_FALSE EXTRA_CXX_FLAGS glibcxx_thread_h WERROR SECTION_FLAGS SECTION_LDFLAGS OPT_LDFLAGS LIBMATHOBJS LIBICONV SYMVER_FILE port_specific_symbol_files ENABLE_SYMVERS_TRUE ENABLE_SYMVERS_FALSE ENABLE_SYMVERS_GNU_TRUE ENABLE_SYMVERS_GNU_FALSE ENABLE_SYMVERS_GNU_NAMESPACE_TRUE ENABLE_SYMVERS_GNU_NAMESPACE_FALSE ENABLE_SYMVERS_DARWIN_TRUE ENABLE_SYMVERS_DARWIN_FALSE GLIBCXX_LDBL_COMPAT_TRUE GLIBCXX_LDBL_COMPAT_FALSE baseline_dir ATOMICITY_SRCDIR ATOMIC_WORD_SRCDIR CPU_DEFINES_SRCDIR ABI_TWEAKS_SRCDIR OS_INC_SRCDIR glibcxx_prefixdir gxx_include_dir glibcxx_toolexecdir glibcxx_toolexeclibdir GLIBCXX_INCLUDES TOPLEVEL_INCLUDES OPTIMIZE_CXXFLAGS WARN_FLAGS LIBSUPCXX_PICFLAGS LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS libtool_VERSION multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar glibcxx_builddir glibcxx_srcdir toplevel_srcdir CC ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CFLAGS CXXFLAGS LN_S AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT CPP CPPFLAGS EGREP LIBTOOL CXXCPP enable_shared enable_static GLIBCXX_HOSTED_TRUE GLIBCXX_HOSTED_FALSE GLIBCXX_BUILD_PCH_TRUE GLIBCXX_BUILD_PCH_FALSE glibcxx_PCHFLAGS CSTDIO_H BASIC_FILE_H BASIC_FILE_CC check_msgfmt glibcxx_MOFILES glibcxx_POFILES glibcxx_localedir USE_NLS CLOCALE_H CMESSAGES_H CCODECVT_CC CCOLLATE_CC CCTYPE_CC CMESSAGES_CC CMONEY_CC CNUMERIC_CC CTIME_H CTIME_CC CLOCALE_CC CLOCALE_INTERNAL_H ALLOCATOR_H ALLOCATOR_NAME C_INCLUDE_DIR GLIBCXX_C_HEADERS_C_TRUE GLIBCXX_C_HEADERS_C_FALSE GLIBCXX_C_HEADERS_C_STD_TRUE GLIBCXX_C_HEADERS_C_STD_FALSE GLIBCXX_C_HEADERS_COMPATIBILITY_TRUE GLIBCXX_C_HEADERS_COMPATIBILITY_FALSE DEBUG_FLAGS GLIBCXX_BUILD_DEBUG_TRUE GLIBCXX_BUILD_DEBUG_FALSE EXTRA_CXX_FLAGS glibcxx_thread_h WERROR SECTION_FLAGS SECTION_LDFLAGS OPT_LDFLAGS LIBMATHOBJS LIBICONV SYMVER_FILE port_specific_symbol_files ENABLE_SYMVERS_TRUE ENABLE_SYMVERS_FALSE ENABLE_SYMVERS_GNU_TRUE ENABLE_SYMVERS_GNU_FALSE ENABLE_SYMVERS_GNU_NAMESPACE_TRUE ENABLE_SYMVERS_GNU_NAMESPACE_FALSE ENABLE_SYMVERS_DARWIN_TRUE ENABLE_SYMVERS_DARWIN_FALSE ENABLE_VISIBILITY_TRUE ENABLE_VISIBILITY_FALSE GLIBCXX_LDBL_COMPAT_TRUE GLIBCXX_LDBL_COMPAT_FALSE baseline_dir ATOMICITY_SRCDIR ATOMIC_WORD_SRCDIR CPU_DEFINES_SRCDIR ABI_TWEAKS_SRCDIR OS_INC_SRCDIR glibcxx_prefixdir gxx_include_dir glibcxx_toolexecdir glibcxx_toolexeclibdir GLIBCXX_INCLUDES TOPLEVEL_INCLUDES OPTIMIZE_CXXFLAGS WARN_FLAGS LIBSUPCXX_PICFLAGS LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -891,6 +891,7 @@ Optional Features:\n                           [default=yes]\n   --enable-symvers=STYLE  enables symbol versioning of the shared library\n                           [default=yes]\n+  --enable-visibility     enables visibility safe usage [default=yes]\n   --enable-version-specific-runtime-libs\n                           Specify that runtime libraries should be installed\n                           in a compiler-specific directory\n@@ -4732,7 +4733,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 4735 \"configure\"' > conftest.$ac_ext\n+  echo '#line 4736 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -5352,7 +5353,7 @@ fi;\n     #\n     # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 5355 \"configure\"\n+#line 5356 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -8008,7 +8009,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n \n   # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 8011 \"configure\"\n+#line 8012 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -109160,6 +109161,90 @@ echo \"$as_me:$LINENO: result: $glibcxx_ptrdiff_t_is_i\" >&5\n echo \"${ECHO_T}$glibcxx_ptrdiff_t_is_i\" >&6\n \n \n+ # Check whether --enable-visibility or --disable-visibility was given.\n+if test \"${enable_visibility+set}\" = set; then\n+  enableval=\"$enable_visibility\"\n+\n+      case \"$enableval\" in\n+       yes|no) ;;\n+       *) { { echo \"$as_me:$LINENO: error: Argument to enable/disable visibility must be yes or no\" >&5\n+echo \"$as_me: error: Argument to enable/disable visibility must be yes or no\" >&2;}\n+   { (exit 1); exit 1; }; } ;;\n+      esac\n+\n+else\n+  enable_visibility=yes\n+fi;\n+\n+\n+if test x$enable_visibility = xyes ; then\n+      echo \"$as_me:$LINENO: checking whether the target supports hidden visibility\" >&5\n+echo $ECHO_N \"checking whether the target supports hidden visibility... $ECHO_C\" >&6\n+if test \"${have_attribute_visibility+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+  save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=\"$CFLAGS -Werror\"\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+void __attribute__((visibility(\"hidden\"))) foo(void) { }\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  have_attribute_visibility=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+have_attribute_visibility=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+  CFLAGS=\"$save_CFLAGS\"\n+fi\n+echo \"$as_me:$LINENO: result: $have_attribute_visibility\" >&5\n+echo \"${ECHO_T}$have_attribute_visibility\" >&6\n+  if test $have_attribute_visibility = no; then\n+    enable_visibility=no\n+  fi\n+fi\n+\n+\n+{ echo \"$as_me:$LINENO: visibility supported: $enable_visibility\" >&5\n+echo \"$as_me: visibility supported: $enable_visibility\" >&6;}\n+\n+\n ac_ldbl_compat=no\n case \"$target\" in\n   powerpc*-*-*gnu* | \\\n@@ -110101,6 +110186,17 @@ fi\n \n \n \n+if test $enable_visibility = yes; then\n+  ENABLE_VISIBILITY_TRUE=\n+  ENABLE_VISIBILITY_FALSE='#'\n+else\n+  ENABLE_VISIBILITY_TRUE='#'\n+  ENABLE_VISIBILITY_FALSE=\n+fi\n+\n+\n+\n+\n if test $ac_ldbl_compat = yes; then\n   GLIBCXX_LDBL_COMPAT_TRUE=\n   GLIBCXX_LDBL_COMPAT_FALSE='#'\n@@ -110487,6 +110583,13 @@ echo \"$as_me: error: conditional \\\"ENABLE_SYMVERS_DARWIN\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n+if test -z \"${ENABLE_VISIBILITY_TRUE}\" && test -z \"${ENABLE_VISIBILITY_FALSE}\"; then\n+  { { echo \"$as_me:$LINENO: error: conditional \\\"ENABLE_VISIBILITY\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&5\n+echo \"$as_me: error: conditional \\\"ENABLE_VISIBILITY\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n if test -z \"${GLIBCXX_LDBL_COMPAT_TRUE}\" && test -z \"${GLIBCXX_LDBL_COMPAT_FALSE}\"; then\n   { { echo \"$as_me:$LINENO: error: conditional \\\"GLIBCXX_LDBL_COMPAT\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&5\n@@ -111168,6 +111271,8 @@ s,@ENABLE_SYMVERS_GNU_NAMESPACE_TRUE@,$ENABLE_SYMVERS_GNU_NAMESPACE_TRUE,;t t\n s,@ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@,$ENABLE_SYMVERS_GNU_NAMESPACE_FALSE,;t t\n s,@ENABLE_SYMVERS_DARWIN_TRUE@,$ENABLE_SYMVERS_DARWIN_TRUE,;t t\n s,@ENABLE_SYMVERS_DARWIN_FALSE@,$ENABLE_SYMVERS_DARWIN_FALSE,;t t\n+s,@ENABLE_VISIBILITY_TRUE@,$ENABLE_VISIBILITY_TRUE,;t t\n+s,@ENABLE_VISIBILITY_FALSE@,$ENABLE_VISIBILITY_FALSE,;t t\n s,@GLIBCXX_LDBL_COMPAT_TRUE@,$GLIBCXX_LDBL_COMPAT_TRUE,;t t\n s,@GLIBCXX_LDBL_COMPAT_FALSE@,$GLIBCXX_LDBL_COMPAT_FALSE,;t t\n s,@baseline_dir@,$baseline_dir,;t t"}, {"sha": "c1b36c9a75b258976c8d9a3d82412789375aa35c", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -287,6 +287,7 @@ fi\n \n # This depends on GLIBCXX CHECK_LINKER_FEATURES, but without it assumes no.\n GLIBCXX_ENABLE_SYMVERS([yes])\n+GLIBCXX_ENABLE_VISIBILITY([yes])\n \n ac_ldbl_compat=no\n case \"$target\" in"}, {"sha": "0a819f072c339e46261dd177140cbef32230ad2e", "filename": "libstdc++-v3/docs/html/configopts.html", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fconfigopts.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fconfigopts.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fconfigopts.html?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -293,6 +293,15 @@ <h1 class=\"centered\"><a name=\"top\">Interesting <code>configure</code>\n \n  </dd>\n \n+ <dt><code>--enable-visibility  </code></dt>\n+ <dd><p> In 4.2 and later, enables or disables visibility attributes.\n+        If enabled (as by default), and the compiler seems capable of\n+        passing the simple sanity checks thrown at it, adjusts items\n+        in namespace std, namespace std::tr1, and namespace __gnu_cxx\n+        so that -fvisibility options work.\n+    </p>\n+ </dd>\n+\n  <dt><code>--enable-libstdcxx-pch  </code></dt>\n  <dd><p>In 3.4 and later, tries to turn on the generation of\n         stdc++.h.gch, a pre-compiled file including all the standard"}, {"sha": "ce4234db95a4a3779e7a898b191cfde1095081a3", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -983,19 +983,31 @@ else\n stamp-namespace-version:\n \techo 0 > stamp-namespace-version\n endif\n+\n+if ENABLE_VISIBILITY\n+stamp-visibility:\n+\techo 1 > stamp-visibility\n+else\n+stamp-visibility:\n+\techo 0 > stamp-visibility\n+endif\n+\n ${host_builddir}/c++config.h: ${CONFIG_HEADER} \\\n \t\t\t      ${glibcxx_srcdir}/include/bits/c++config \\\n \t\t\t      stamp-${host_alias} \\\n \t\t\t      ${toplevel_srcdir}/gcc/DATESTAMP \\\n-\t\t\t      stamp-namespace-version\n+\t\t\t      stamp-namespace-version \\\n+\t\t\t      stamp-visibility\n \t@date=`cat ${toplevel_srcdir}/gcc/DATESTAMP` ;\\\n \tnsa_version=`cat stamp-namespace-version` ;\\\n+\tvisibility=`cat stamp-visibility` ;\\\n \tldbl_compat='' ;\\\n \tgrep \"^[ \t]*#[ \t]*define[ \t][ \t]*_GLIBCXX_LONG_DOUBLE_COMPAT[ \t][ \t]*1[ \t]*$$\" \\\n \t${CONFIG_HEADER} > /dev/null 2>&1 \\\n \t&& ldbl_compat='s,^#undef _GLIBCXX_LONG_DOUBLE_COMPAT$$,#define _GLIBCXX_LONG_DOUBLE_COMPAT 1,' ;\\\n \tsed -e \"s,define __GLIBCXX__,define __GLIBCXX__ $$date,\" \\\n \t-e \"s,define _GLIBCXX_NAMESPACE_ASSOCIATION_VERSION, define _GLIBCXX_NAMESPACE_ASSOCIATION_VERSION $$nsa_version,\" \\\n+\t-e \"s,define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY, define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY $$visibility,\" \\\n \t-e \"$$ldbl_compat\" \\\n             < ${glibcxx_srcdir}/include/bits/c++config > $@ ;\\\n \tsed -e 's/HAVE_/_GLIBCXX_HAVE_/g' \\"}, {"sha": "4fe22d9fd0d69dd866d06eadbf31b2175e1e1bb2", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -107,6 +107,8 @@ ENABLE_SYMVERS_GNU_NAMESPACE_FALSE = @ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@\n ENABLE_SYMVERS_GNU_NAMESPACE_TRUE = @ENABLE_SYMVERS_GNU_NAMESPACE_TRUE@\n ENABLE_SYMVERS_GNU_TRUE = @ENABLE_SYMVERS_GNU_TRUE@\n ENABLE_SYMVERS_TRUE = @ENABLE_SYMVERS_TRUE@\n+ENABLE_VISIBILITY_FALSE = @ENABLE_VISIBILITY_FALSE@\n+ENABLE_VISIBILITY_TRUE = @ENABLE_VISIBILITY_TRUE@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GLIBCXX_BUILD_DEBUG_FALSE = @GLIBCXX_BUILD_DEBUG_FALSE@\n@@ -1359,19 +1361,28 @@ stamp-host: ${host_headers} ${host_headers_noinst} stamp-${host_alias}\n @ENABLE_SYMVERS_GNU_NAMESPACE_TRUE@\techo 1 > stamp-namespace-version\n @ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@stamp-namespace-version:\n @ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@\techo 0 > stamp-namespace-version\n+\n+@ENABLE_VISIBILITY_TRUE@stamp-visibility:\n+@ENABLE_VISIBILITY_TRUE@\techo 1 > stamp-visibility\n+@ENABLE_VISIBILITY_FALSE@stamp-visibility:\n+@ENABLE_VISIBILITY_FALSE@\techo 0 > stamp-visibility\n+\n ${host_builddir}/c++config.h: ${CONFIG_HEADER} \\\n \t\t\t      ${glibcxx_srcdir}/include/bits/c++config \\\n \t\t\t      stamp-${host_alias} \\\n \t\t\t      ${toplevel_srcdir}/gcc/DATESTAMP \\\n-\t\t\t      stamp-namespace-version\n+\t\t\t      stamp-namespace-version \\\n+\t\t\t      stamp-visibility\n \t@date=`cat ${toplevel_srcdir}/gcc/DATESTAMP` ;\\\n \tnsa_version=`cat stamp-namespace-version` ;\\\n+\tvisibility=`cat stamp-visibility` ;\\\n \tldbl_compat='' ;\\\n \tgrep \"^[ \t]*#[ \t]*define[ \t][ \t]*_GLIBCXX_LONG_DOUBLE_COMPAT[ \t][ \t]*1[ \t]*$$\" \\\n \t${CONFIG_HEADER} > /dev/null 2>&1 \\\n \t&& ldbl_compat='s,^#undef _GLIBCXX_LONG_DOUBLE_COMPAT$$,#define _GLIBCXX_LONG_DOUBLE_COMPAT 1,' ;\\\n \tsed -e \"s,define __GLIBCXX__,define __GLIBCXX__ $$date,\" \\\n \t-e \"s,define _GLIBCXX_NAMESPACE_ASSOCIATION_VERSION, define _GLIBCXX_NAMESPACE_ASSOCIATION_VERSION $$nsa_version,\" \\\n+\t-e \"s,define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY, define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY $$visibility,\" \\\n \t-e \"$$ldbl_compat\" \\\n             < ${glibcxx_srcdir}/include/bits/c++config > $@ ;\\\n \tsed -e 's/HAVE_/_GLIBCXX_HAVE_/g' \\"}, {"sha": "e8f6d0045b3286b29a90e129930d2cf282df5b6a", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -40,6 +40,15 @@\n // The current version of the C++ library in compressed ISO date format.\n #define __GLIBCXX__ \n \n+// Macros for visibility.\n+#define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY\n+\n+#if _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY\n+#define _GLIBCXX_VISIBILITY(V) __attribute__ ((__visibility__ (#V)))\n+#else\n+#define _GLIBCXX_VISIBILITY(V) \n+#endif\n+\n // Macros for controlling various namespace association schemes and modes.\n #ifdef _GLIBCXX_DEBUG\n # define _GLIBCXX_NAMESPACE_ASSOCIATION_DEBUG 1\n@@ -53,15 +62,15 @@\n // _GLIBCXX_BEGIN_NESTED_NAMESPACE\n // _GLIBCXX_END_NESTED_NAMESPACE\n #if _GLIBCXX_NAMESPACE_ASSOCIATION_VERSION\n-# define _GLIBCXX_BEGIN_NESTED_NAMESPACE(X, Y) namespace X { namespace Y {\n+# define _GLIBCXX_BEGIN_NESTED_NAMESPACE(X, Y)  namespace X { namespace Y _GLIBCXX_VISIBILITY(default) {\n # define _GLIBCXX_END_NESTED_NAMESPACE } }\n # define _GLIBCXX_BEGIN_NAMESPACE(X) _GLIBCXX_BEGIN_NESTED_NAMESPACE(X, _6)\n # define _GLIBCXX_END_NAMESPACE _GLIBCXX_END_NESTED_NAMESPACE\n #else\n-# define _GLIBCXX_BEGIN_NAMESPACE(X) namespace X { \n+# define _GLIBCXX_BEGIN_NAMESPACE(X) namespace X _GLIBCXX_VISIBILITY(default) { \n # define _GLIBCXX_END_NAMESPACE } \n # if _GLIBCXX_NAMESPACE_ASSOCIATION_DEBUG\n-#  define _GLIBCXX_BEGIN_NESTED_NAMESPACE(X, Y) namespace X { namespace Y {\n+#  define _GLIBCXX_BEGIN_NESTED_NAMESPACE(X, Y) namespace X { namespace Y _GLIBCXX_VISIBILITY(default) {\n #  define _GLIBCXX_END_NESTED_NAMESPACE  } }\n # else\n #  define _GLIBCXX_BEGIN_NESTED_NAMESPACE(X, Y) _GLIBCXX_BEGIN_NAMESPACE(X)"}, {"sha": "d5c797d7e418a3c3be2e06bd88e5431e0a3a0f7b", "filename": "libstdc++-v3/libmath/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -122,6 +122,8 @@ ENABLE_SYMVERS_GNU_NAMESPACE_FALSE = @ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@\n ENABLE_SYMVERS_GNU_NAMESPACE_TRUE = @ENABLE_SYMVERS_GNU_NAMESPACE_TRUE@\n ENABLE_SYMVERS_GNU_TRUE = @ENABLE_SYMVERS_GNU_TRUE@\n ENABLE_SYMVERS_TRUE = @ENABLE_SYMVERS_TRUE@\n+ENABLE_VISIBILITY_FALSE = @ENABLE_VISIBILITY_FALSE@\n+ENABLE_VISIBILITY_TRUE = @ENABLE_VISIBILITY_TRUE@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GLIBCXX_BUILD_DEBUG_FALSE = @GLIBCXX_BUILD_DEBUG_FALSE@"}, {"sha": "771b432b9c1e1edf0d31d1056843591b42f63a81", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -163,6 +163,8 @@ ENABLE_SYMVERS_GNU_NAMESPACE_FALSE = @ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@\n ENABLE_SYMVERS_GNU_NAMESPACE_TRUE = @ENABLE_SYMVERS_GNU_NAMESPACE_TRUE@\n ENABLE_SYMVERS_GNU_TRUE = @ENABLE_SYMVERS_GNU_TRUE@\n ENABLE_SYMVERS_TRUE = @ENABLE_SYMVERS_TRUE@\n+ENABLE_VISIBILITY_FALSE = @ENABLE_VISIBILITY_FALSE@\n+ENABLE_VISIBILITY_TRUE = @ENABLE_VISIBILITY_TRUE@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GLIBCXX_BUILD_DEBUG_FALSE = @GLIBCXX_BUILD_DEBUG_FALSE@"}, {"sha": "bdb58636ab9562bd20cc411d6e35d93efd3a51a7", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -107,6 +107,8 @@ ENABLE_SYMVERS_GNU_NAMESPACE_FALSE = @ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@\n ENABLE_SYMVERS_GNU_NAMESPACE_TRUE = @ENABLE_SYMVERS_GNU_NAMESPACE_TRUE@\n ENABLE_SYMVERS_GNU_TRUE = @ENABLE_SYMVERS_GNU_TRUE@\n ENABLE_SYMVERS_TRUE = @ENABLE_SYMVERS_TRUE@\n+ENABLE_VISIBILITY_FALSE = @ENABLE_VISIBILITY_FALSE@\n+ENABLE_VISIBILITY_TRUE = @ENABLE_VISIBILITY_TRUE@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GLIBCXX_BUILD_DEBUG_FALSE = @GLIBCXX_BUILD_DEBUG_FALSE@"}, {"sha": "187da8eb7a8832dd60e995bc9036f8a98840b162", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -157,6 +157,8 @@ ENABLE_SYMVERS_GNU_NAMESPACE_FALSE = @ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@\n ENABLE_SYMVERS_GNU_NAMESPACE_TRUE = @ENABLE_SYMVERS_GNU_NAMESPACE_TRUE@\n ENABLE_SYMVERS_GNU_TRUE = @ENABLE_SYMVERS_GNU_TRUE@\n ENABLE_SYMVERS_TRUE = @ENABLE_SYMVERS_TRUE@\n+ENABLE_VISIBILITY_FALSE = @ENABLE_VISIBILITY_FALSE@\n+ENABLE_VISIBILITY_TRUE = @ENABLE_VISIBILITY_TRUE@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GLIBCXX_BUILD_DEBUG_FALSE = @GLIBCXX_BUILD_DEBUG_FALSE@"}, {"sha": "8becf330dd9e0b5d0e9dea9a61e3236264724e58", "filename": "libstdc++-v3/src/debug.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2Fdebug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2Fdebug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fdebug.cc?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -39,7 +39,7 @@\n \n using namespace std;\n \n-namespace __gnu_internal\n+namespace __gnu_internal _GLIBCXX_VISIBILITY(hidden)\n {\n   static __glibcxx_mutex_define_initialized(iterator_base_mutex);\n } // namespace __gnu_internal"}, {"sha": "35f0b16f2ad755fa6a4b90d75eae3fbb18aaf018", "filename": "libstdc++-v3/src/ext-inst.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2Fext-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2Fext-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fext-inst.cc?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -1,6 +1,6 @@\n // Explicit instantiation file.\n \n-// Copyright (C) 2001, 2002, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2004, 2006 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -34,7 +34,7 @@\n #include <ext/rope>\n #include <ext/stdio_filebuf.h>\n \n-namespace __gnu_internal\n+namespace __gnu_internal _GLIBCXX_VISIBILITY(hidden)\n {\n   const int min_len = __gnu_cxx::_Rope_constants::_S_max_rope_depth + 1;\n }"}, {"sha": "9c02899b2c6d244cac2ede4f9eb0a8dde9c9f87f", "filename": "libstdc++-v3/src/globals_io.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2Fglobals_io.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2Fglobals_io.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fglobals_io.cc?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -1,4 +1,5 @@\n-// Copyright (C) 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -75,7 +76,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n _GLIBCXX_END_NAMESPACE\n \n-namespace __gnu_internal\n+namespace __gnu_internal _GLIBCXX_VISIBILITY(hidden)\n {\n   using namespace std;\n   using namespace __gnu_cxx;"}, {"sha": "56420ef40fc4bb05581867ef285408396d3f627b", "filename": "libstdc++-v3/src/globals_locale.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2Fglobals_locale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2Fglobals_locale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fglobals_locale.cc?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2006 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -43,7 +43,7 @@\n // In macro form:\n // _GLIBCXX_ASM_SYMVER(currentname, oldname, GLIBCXX_3.2)\n \n-namespace __gnu_internal\n+namespace __gnu_internal _GLIBCXX_VISIBILITY(hidden)\n {\n   using namespace std;\n "}, {"sha": "955a1f5cdfff482b63eb2e5a39e693caf5f27c94", "filename": "libstdc++-v3/src/ios_init.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2Fios_init.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2Fios_init.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fios_init.cc?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -40,7 +40,7 @@\n #include <ext/stdio_filebuf.h>\n #include <ext/stdio_sync_filebuf.h>\n \n-namespace __gnu_internal\n+namespace __gnu_internal _GLIBCXX_VISIBILITY(hidden)\n {\n   using namespace __gnu_cxx;\n "}, {"sha": "93f5bc0974027f74b2081e6b30f7916a6366118d", "filename": "libstdc++-v3/src/locale.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -35,7 +35,7 @@\n #include <bits/atomicity.h>\n #include <bits/concurrence.h>\n \n-namespace __gnu_internal\n+namespace __gnu_internal _GLIBCXX_VISIBILITY(hidden)\n {\n   // Mutex object for cache access\n   static __glibcxx_mutex_define_initialized(locale_cache_mutex);"}, {"sha": "6d6493e64f331560518ecc725ff851119c80bcc3", "filename": "libstdc++-v3/src/locale_init.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2Flocale_init.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2Flocale_init.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale_init.cc?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -35,7 +35,7 @@\n #include <bits/atomicity.h>\n #include <bits/concurrence.h>\n \n-namespace __gnu_internal\n+namespace __gnu_internal _GLIBCXX_VISIBILITY(hidden)\n {\n   // Defined in globals.cc.\n   extern std::locale \t\tc_locale;"}, {"sha": "fa09ead1efd479d86326b962831b88b85ecce0a7", "filename": "libstdc++-v3/src/mt_allocator.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2Fmt_allocator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2Fmt_allocator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fmt_allocator.cc?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -1,6 +1,6 @@\n // Allocator details.\n \n-// Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -35,7 +35,7 @@\n #include <bits/concurrence.h>\n #include <ext/mt_allocator.h>\n \n-namespace __gnu_internal\n+namespace __gnu_internal _GLIBCXX_VISIBILITY(hidden)\n {\n #ifdef __GTHREADS\n   struct __freelist"}, {"sha": "e9c770e83ebfb8c76ebe4adf1543d6aee5ed62af", "filename": "libstdc++-v3/src/pool_allocator.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2Fpool_allocator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Fsrc%2Fpool_allocator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fpool_allocator.cc?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -1,6 +1,6 @@\n // Allocator details.\n \n-// Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -35,7 +35,7 @@\n #include <cstdlib>\n #include <ext/pool_allocator.h>\n \n-namespace __gnu_internal\n+namespace __gnu_internal _GLIBCXX_VISIBILITY(hidden)\n {\n   static __glibcxx_mutex_define_initialized(palloc_init_mutex);\n }"}, {"sha": "bd5a36deada3cd109bd3e36b0a108d0528734e39", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e615b4857e142688c9de4ca56fb3272316a1b9/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=98e615b4857e142688c9de4ca56fb3272316a1b9", "patch": "@@ -111,6 +111,8 @@ ENABLE_SYMVERS_GNU_NAMESPACE_FALSE = @ENABLE_SYMVERS_GNU_NAMESPACE_FALSE@\n ENABLE_SYMVERS_GNU_NAMESPACE_TRUE = @ENABLE_SYMVERS_GNU_NAMESPACE_TRUE@\n ENABLE_SYMVERS_GNU_TRUE = @ENABLE_SYMVERS_GNU_TRUE@\n ENABLE_SYMVERS_TRUE = @ENABLE_SYMVERS_TRUE@\n+ENABLE_VISIBILITY_FALSE = @ENABLE_VISIBILITY_FALSE@\n+ENABLE_VISIBILITY_TRUE = @ENABLE_VISIBILITY_TRUE@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GLIBCXX_BUILD_DEBUG_FALSE = @GLIBCXX_BUILD_DEBUG_FALSE@"}]}