{"sha": "e9099386aeba6837bd3d5551f9369cce26392273", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTkwOTkzODZhZWJhNjgzN2JkM2Q1NTUxZjkzNjljY2UyNjM5MjI3Mw==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2000-05-17T14:56:13Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-05-17T14:56:13Z"}, "message": "improve the debug displays, ignore SIGPIPE, and fix char_macro_def regex\n\nFrom-SVN: r33956", "tree": {"sha": "344466daf92bec65c98bcb52d8c80159493ad0d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/344466daf92bec65c98bcb52d8c80159493ad0d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9099386aeba6837bd3d5551f9369cce26392273", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9099386aeba6837bd3d5551f9369cce26392273", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9099386aeba6837bd3d5551f9369cce26392273", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9099386aeba6837bd3d5551f9369cce26392273/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "558fe506b500039a488681a56d616a71a733e795", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/558fe506b500039a488681a56d616a71a733e795", "html_url": "https://github.com/Rust-GCC/gccrs/commit/558fe506b500039a488681a56d616a71a733e795"}], "stats": {"total": 74, "additions": 51, "deletions": 23}, "files": [{"sha": "c533c967a6a6178993b6e8ba84943c3990e6e276", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9099386aeba6837bd3d5551f9369cce26392273/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9099386aeba6837bd3d5551f9369cce26392273/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e9099386aeba6837bd3d5551f9369cce26392273", "patch": "@@ -1,3 +1,10 @@\n+\n+2000-05-16  Bruce Korb  <bkorb@gnu.org>\n+\n+\t* fixinc/fixincl.c: improve the debug displays, ignore SIGPIPE\n+\t* fixinc/server.c: likewise\n+\t* fixinc/fixfixes.c( char_macro_def_fix ): fix regex\n+\n 2000-05-17  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* fixinc/fixfixes.c (char_macro_use_fix, char_macro_def_fix):"}, {"sha": "1652e183fa712078e45045a574257e45a37c5add", "filename": "gcc/fixinc/fixfixes.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9099386aeba6837bd3d5551f9369cce26392273/gcc%2Ffixinc%2Ffixfixes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9099386aeba6837bd3d5551f9369cce26392273/gcc%2Ffixinc%2Ffixfixes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixfixes.c?ref=e9099386aeba6837bd3d5551f9369cce26392273", "patch": "@@ -339,11 +339,11 @@ FIX_PROC_HEAD( char_macro_use_fix )\n \n /* Scan the input file for all occurrences of text like this:\n \n-   #define xxxIOxx(x, y) ('x'<<16+y)\n+   #define xxxIOxx(x, y) (....'x'<<16....)\n \n    and change them to read like this:\n \n-   #define xxxIOxx(x, y) (x<<16+y)\n+   #define xxxIOxx(x, y) (....x<<16....)\n \n    which is the required syntax per the C standard.  (The uses of _IO\n    also has to be tweaked - see above.)  'IO' is actually whatever\n@@ -357,15 +357,14 @@ FIX_PROC_HEAD( char_macro_def_fix )\n      */\n     \"^#[ \\t]*define[ \\t]+[_A-Z][A-Z0-9_]*%s[A-Z]*\\\\(\"\n     /*\n-     *  The next character must be alphabetic without a name-type\n-     *  character following it\n+     *  The next character must match a later one\n      */\n-    \"([a-zA-Z])[^a-zA-Z0-9_]\"  /* rm[1] */\n+    \"([a-zA-Z])\"  /* rm[1] */\n     /*\n-     *  now match over the argument list, intervening white space\n-     *  and opening parentheses, and on through a single quote character\n+     *  now match over a comma, the argument list, intervening white space\n+     *  an opening parenthesis, and on through a single quote character\n      */\n-    \"[^)]*\\\\)[ \\t]+\\\\([ \\t(]*'\"\n+    \"[ \\t]*,[^)]*\\\\)[ \\t]+\\\\([^']*'\"\n     /*\n      *  Match the character that must match the remembered char above\n      */\n@@ -375,8 +374,8 @@ FIX_PROC_HEAD( char_macro_def_fix )\n      *  Indecipherable gobbeldygook:\n      */\n \n-    \"^#[ \\t]*define[ \\t]+[_A-Z][A-Z0-9_]*%s[A-Z]*\\\\(([a-zA-Z])[^a-zA-Z0-9_]\\\n-[^)]*\\\\)[ \\t]+\\\\([ \\t(]*'([a-zA-Z])'\"\n+    \"^#[ \\t]*define[ \\t]+[_A-Z][A-Z0-9_]*%s[A-Z]*\\\\(\\\n+([a-zA-Z])[ \\t]*,[^)]*\\\\)[ \\t]+\\\\([^']*'([a-zA-Z])'\"\n #endif\n     ;\n "}, {"sha": "1dfc6adaf4fd5319df3ffa1ca86f0d3fd55f03cf", "filename": "gcc/fixinc/fixincl.c", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9099386aeba6837bd3d5551f9369cce26392273/gcc%2Ffixinc%2Ffixincl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9099386aeba6837bd3d5551f9369cce26392273/gcc%2Ffixinc%2Ffixincl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.c?ref=e9099386aeba6837bd3d5551f9369cce26392273", "patch": "@@ -618,14 +618,27 @@ else echo FALSE\\n\\\n fi\";\n \n   char *pz_res;\n-  int res = SKIP_FIX;\n+  int res;\n \n   static char cmd_buf[4096];\n \n   sprintf (cmd_buf, cmd_fmt, pz_test_file, p_test->pz_test_text);\n   pz_res = run_shell (cmd_buf);\n-  if (*pz_res == 'T')\n+\n+  switch (*pz_res) {\n+  case 'T':\n     res = APPLY_FIX;\n+    break;\n+\n+  case 'F':\n+    res = SKIP_FIX;\n+    break;\n+\n+  default:\n+    fprintf (stderr, \"Script yielded bogus result of `%s':\\n%s\\n\\n\",\n+             pz_res, cmd_buf );\n+  }\n+\n   free ((void *) pz_res);\n   return res;\n }\n@@ -938,7 +951,8 @@ fix_applies (p_fixd)\n   tFixDesc *p_fixd;\n {\n #ifdef DEBUG\n-  static const char z_failed[] = \"not applying %s to %s - test %d failed\\n\";\n+  static const char z_failed[] = \"not applying %s %s to %s - \"\n+    \"test %d failed\\n\";\n #endif\n   const char *pz_fname = pz_curr_file;\n   const char *pz_scan = p_fixd->file_list;\n@@ -994,8 +1008,8 @@ fix_applies (p_fixd)\n           if (test_test (p_test, pz_curr_file) != APPLY_FIX) {\n #ifdef DEBUG\n             if (VLEVEL( VERB_EVERYTHING ))\n-              fprintf (stderr, z_failed, p_fixd->fix_name, pz_fname,\n-                       p_fixd->test_ct - test_ct);\n+              fprintf (stderr, z_failed, \"TEST\", p_fixd->fix_name,\n+                       pz_fname, p_fixd->test_ct - test_ct);\n #endif\n             return BOOL_FALSE;\n           }\n@@ -1005,8 +1019,8 @@ fix_applies (p_fixd)\n           if (egrep_test (pz_curr_data, p_test) != APPLY_FIX) {\n #ifdef DEBUG\n             if (VLEVEL( VERB_EVERYTHING ))\n-              fprintf (stderr, z_failed, p_fixd->fix_name, pz_fname,\n-                       p_fixd->test_ct - test_ct);\n+              fprintf (stderr, z_failed, \"EGREP\", p_fixd->fix_name,\n+                       pz_fname, p_fixd->test_ct - test_ct);\n #endif\n             return BOOL_FALSE;\n           }\n@@ -1016,8 +1030,8 @@ fix_applies (p_fixd)\n           if (egrep_test (pz_curr_data, p_test) == APPLY_FIX) {\n #ifdef DEBUG\n             if (VLEVEL( VERB_EVERYTHING ))\n-              fprintf (stderr, z_failed, p_fixd->fix_name, pz_fname,\n-                       p_fixd->test_ct - test_ct);\n+              fprintf (stderr, z_failed, \"NEGREP\", p_fixd->fix_name,\n+                       pz_fname, p_fixd->test_ct - test_ct);\n #endif\n             /*  Negated sense  */\n             return BOOL_FALSE;\n@@ -1029,8 +1043,8 @@ fix_applies (p_fixd)\n               != APPLY_FIX) {\n #ifdef DEBUG\n             if (VLEVEL( VERB_EVERYTHING ))\n-              fprintf (stderr, z_failed, p_fixd->fix_name, pz_fname,\n-                       p_fixd->test_ct - test_ct);\n+              fprintf (stderr, z_failed, \"FTEST\", p_fixd->fix_name,\n+                       pz_fname, p_fixd->test_ct - test_ct);\n #endif\n             return BOOL_FALSE;\n           }"}, {"sha": "598652c4eb9d3c0e72a90825118f8b08b65238d8", "filename": "gcc/fixinc/server.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9099386aeba6837bd3d5551f9369cce26392273/gcc%2Ffixinc%2Fserver.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9099386aeba6837bd3d5551f9369cce26392273/gcc%2Ffixinc%2Fserver.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fserver.c?ref=e9099386aeba6837bd3d5551f9369cce26392273", "patch": "@@ -209,6 +209,8 @@ sig_handler (signo)\n           \"fixincl ERROR:  sig_handler: killed pid %ld due to %s\\n\",\n           (long) server_id, signo == SIGPIPE ? \"SIGPIPE\" : \"SIGALRM\");\n #endif\n+  if (signo == SIGPIPE)\n+    return;\n   close_server ();\n   read_pipe_timeout = BOOL_TRUE;\n }\n@@ -226,6 +228,8 @@ server_setup ()\n   \n   if (atexit_done++ == 0)\n     atexit (close_server);\n+  else\n+    fputs (\"NOTE: server restarted\\n\", stderr);\n \n   signal (SIGPIPE, sig_handler);\n   signal (SIGALRM, sig_handler);\n@@ -281,6 +285,7 @@ char *\n run_shell (pz_cmd)\n      const char *pz_cmd;\n {\n+  tSCC zNoServer[] = \"Server not running, cannot run:\\n%s\\n\\n\";\n   t_bool retry = BOOL_TRUE;\n \n  do_retry:\n@@ -299,7 +304,7 @@ run_shell (pz_cmd)\n   if (server_id <= 0)\n     {\n       char *pz = (char *) malloc (1);\n-      \n+      fprintf (stderr, zNoServer, pz_cmd);\n       if (pz != (char *) NULL)\n         *pz = '\\0';\n       return pz;\n@@ -317,7 +322,7 @@ run_shell (pz_cmd)\n   if (server_id == NULLPROCESS)\n     {\n       char *pz = (char *) malloc (1);\n-      \n+      fprintf (stderr, zNoServer, pz_cmd);\n       if (pz != (char *) NULL)\n         *pz = '\\0';\n       return pz;\n@@ -344,6 +349,9 @@ run_shell (pz_cmd)\n         if (pz != (char *) NULL)\n           *pz = '\\0';\n       }\n+#ifdef DEBUG\n+    fprintf( stderr, \"run_shell command success:  %s\\n\", pz );\n+#endif\n     return pz;\n   }\n }"}]}