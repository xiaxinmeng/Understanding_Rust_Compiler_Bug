{"sha": "3040ffd65141f584f2f1801ea79b5f77951ee276", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA0MGZmZDY1MTQxZjU4NGYyZjE4MDFlYTc5YjVmNzc5NTFlZTI3Ng==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2000-01-06T13:03:58Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2000-01-06T13:03:58Z"}, "message": "reg-stack.c (subst_stack_regs_pat): Handle correctly USEs of dead registers.\n\n\t* reg-stack.c (subst_stack_regs_pat): Handle correctly USEs of\n\tdead registers.\n\n\t* i386.c (movsf splitter): Fix typo in my last checkin.\n\nFrom-SVN: r31256", "tree": {"sha": "3cfe44a5fdf95ca0e24c5a2920c44035ffb06f08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cfe44a5fdf95ca0e24c5a2920c44035ffb06f08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3040ffd65141f584f2f1801ea79b5f77951ee276", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3040ffd65141f584f2f1801ea79b5f77951ee276", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3040ffd65141f584f2f1801ea79b5f77951ee276", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3040ffd65141f584f2f1801ea79b5f77951ee276/comments", "author": null, "committer": null, "parents": [{"sha": "4cf962a2b4db3f712fdbc2c6d0d0a1def88c2e40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cf962a2b4db3f712fdbc2c6d0d0a1def88c2e40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cf962a2b4db3f712fdbc2c6d0d0a1def88c2e40"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "271ae69f3da3ac227f1f99ae160869e6ca14ea20", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3040ffd65141f584f2f1801ea79b5f77951ee276/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3040ffd65141f584f2f1801ea79b5f77951ee276/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3040ffd65141f584f2f1801ea79b5f77951ee276", "patch": "@@ -1,3 +1,10 @@\n+Thu Jan  6 13:44:59 CET 2000  Jan Hubicka  <jh@suse.cz>\n+\n+\t* reg-stack.c (subst_stack_regs_pat): Handle correctly USEs of\n+\tdead registers.\n+\n+\t* i386.c (movsf splitter): Fix typo in my last checkin.\n+\n 2000-01-05  Nick Clifton  <nickc@cygnus.com>\n \n \t* varasm.c (IN_NAMED_SECTION): Allow targets to provide their"}, {"sha": "f9316de4d0171554ae7db13b8139390791ed6625", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3040ffd65141f584f2f1801ea79b5f77951ee276/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3040ffd65141f584f2f1801ea79b5f77951ee276/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=3040ffd65141f584f2f1801ea79b5f77951ee276", "patch": "@@ -1788,7 +1788,7 @@\n   [(set_attr \"type\" \"fmov,fmov,fmov,imov,imov\")])\n \n (define_split\n-  [(set (match_operand:SF 0 \"general_operand\" \"\")\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"\")\n \t(match_operand:SF 1 \"memory_operand\" \"\"))]\n   \"reload_completed\n    && GET_CODE (operands[1]) == MEM"}, {"sha": "2e7fc64f8fc0f1e128c20c6d2d8daa2dc9c7f647", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3040ffd65141f584f2f1801ea79b5f77951ee276/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3040ffd65141f584f2f1801ea79b5f77951ee276/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=3040ffd65141f584f2f1801ea79b5f77951ee276", "patch": "@@ -1383,12 +1383,24 @@ subst_stack_regs_pat (insn, regstack, pat)\n       if (STACK_REG_P (*src) \n           && find_regno_note (insn, REG_DEAD, REGNO (*src)))\n         {\n-\t   emit_pop_insn (insn, regstack, *src, EMIT_AFTER);\n+\t   /* In stupid allocation the USE might be used to extend lifetime\n+\t      of variable to given scope.  This may end up as USE of dead\n+\t      register.  */\n+\t   if (optimize || get_hard_regnum (regstack, *src) != -1)\n+\t     emit_pop_insn (insn, regstack, *src, EMIT_AFTER);\n \t   return;\n         }\n-      /* ??? Uninitialized USE should not happen.  */\n       else if (get_hard_regnum (regstack, *src) == -1)\n-\tabort();\n+\t{\n+\t   if (optimize)\n+\t     abort();\n+\t   if (GET_CODE (PATTERN (insn)) != USE)\n+\t     abort();\n+\t   PATTERN (insn) = gen_rtx_SET (GET_MODE (*src), *src,\n+\t\t\t\t\t CONST0_RTX (GET_MODE (*src)));\n+\t   subst_stack_regs_pat (insn, regstack, PATTERN (insn));\n+\t   return;\n+\t}\n       break;\n \n     case CLOBBER:"}]}