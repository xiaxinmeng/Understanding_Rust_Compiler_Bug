{"sha": "2bb81c86deadeb3c95eff414c9a44c73125b0ae5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJiODFjODZkZWFkZWIzYzk1ZWZmNDE0YzlhNDRjNzMxMjViMGFlNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-06T10:56:50Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-06T10:56:50Z"}, "message": "(record_jump_cond): Rehash OP1 if OP0's insert_regs returns nonzero.\n\nFrom-SVN: r5631", "tree": {"sha": "feca69f1f868da962d8c11b396864d8421b725f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/feca69f1f868da962d8c11b396864d8421b725f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bb81c86deadeb3c95eff414c9a44c73125b0ae5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bb81c86deadeb3c95eff414c9a44c73125b0ae5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bb81c86deadeb3c95eff414c9a44c73125b0ae5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bb81c86deadeb3c95eff414c9a44c73125b0ae5/comments", "author": null, "committer": null, "parents": [{"sha": "6e87e69e8f877f51f8cf15f10805a83f59ddb7c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e87e69e8f877f51f8cf15f10805a83f59ddb7c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e87e69e8f877f51f8cf15f10805a83f59ddb7c1"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "4fbcb287b01604a5a9b09edc4c72932af79cd427", "filename": "gcc/cse.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bb81c86deadeb3c95eff414c9a44c73125b0ae5/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bb81c86deadeb3c95eff414c9a44c73125b0ae5/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=2bb81c86deadeb3c95eff414c9a44c73125b0ae5", "patch": "@@ -5621,6 +5621,12 @@ record_jump_cond (code, mode, op0, op1, reversed_nonequality)\n \t    {\n \t      rehash_using_reg (op0);\n \t      op0_hash_code = HASH (op0, mode);\n+\n+\t      /* If OP0 is contained in OP1, this changes its hash code\n+\t\t as well.  Faster to rehash than to check, except\n+\t\t for the simple case of a constant.  */\n+\t      if (! CONSTANT_P (op1))\n+\t\top1_hash_code = HASH (op1,mode);\n \t    }\n \n \t  op0_elt = insert (op0, NULL_PTR, op0_hash_code, mode);"}]}