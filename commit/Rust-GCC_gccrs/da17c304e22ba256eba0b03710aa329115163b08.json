{"sha": "da17c304e22ba256eba0b03710aa329115163b08", "node_id": "C_kwDOANBUbNoAKGRhMTdjMzA0ZTIyYmEyNTZlYmEwYjAzNzEwYWEzMjkxMTUxNjNiMDg", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-21T20:08:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-21T20:08:04Z"}, "message": "fortran, debug: Fix up DW_AT_rank [PR103315]\n\nFor DW_AT_rank we were emitting\n        .uleb128 0x4    # DW_AT_rank\n        .byte   0x97    # DW_OP_push_object_address\n        .byte   0x23    # DW_OP_plus_uconst\n        .uleb128 0x1c\n        .byte   0x6     # DW_OP_deref\non 64-bit and\n        .uleb128 0x4    # DW_AT_rank\n        .byte   0x97    # DW_OP_push_object_address\n        .byte   0x23    # DW_OP_plus_uconst\n        .uleb128 0x10\n        .byte   0x6     # DW_OP_deref\non 32-bit.  I think this is wrong, as dtype.rank field in the descriptor\nhas unsigned char type, not pointer type nor pointer sized integral.\nE.g. if we have a\n    REAL :: a(..)\ndummy argument, which is passed as a reference to the function descriptor,\nwe want to evaluate a->dtype.rank.  The above DWARF expressions perform\n*(uintptr_t *)(a + 0x1c)\nand\n*(uintptr_t *)(a + 0x10)\nrespectively.  The following patch changes those to:\n        .uleb128 0x5    # DW_AT_rank\n        .byte   0x97    # DW_OP_push_object_address\n        .byte   0x23    # DW_OP_plus_uconst\n        .uleb128 0x1c\n        .byte   0x94    # DW_OP_deref_size\n        .byte   0x1\nand\n        .uleb128 0x5    # DW_AT_rank\n        .byte   0x97    # DW_OP_push_object_address\n        .byte   0x23    # DW_OP_plus_uconst\n        .uleb128 0x10\n        .byte   0x94    # DW_OP_deref_size\n        .byte   0x1\nwhich perform\n*(unsigned char *)(a + 0x1c)\nand\n*(unsigned char *)(a + 0x10)\nrespectively.\n\n2021-11-21  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR debug/103315\n\t* trans-types.c (gfc_get_array_descr_info): Use DW_OP_deref_size 1\n\tinstead of DW_OP_deref for DW_AT_rank.", "tree": {"sha": "2ed723f3dd2146e091a595a3672a9bd5d9668a68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ed723f3dd2146e091a595a3672a9bd5d9668a68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da17c304e22ba256eba0b03710aa329115163b08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da17c304e22ba256eba0b03710aa329115163b08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da17c304e22ba256eba0b03710aa329115163b08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da17c304e22ba256eba0b03710aa329115163b08/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "364539710f828851b9fac51c39033cd09aa620de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/364539710f828851b9fac51c39033cd09aa620de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/364539710f828851b9fac51c39033cd09aa620de"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "eec4aa6f5fcc29b0da00e8966c720a1ec497aff5", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da17c304e22ba256eba0b03710aa329115163b08/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da17c304e22ba256eba0b03710aa329115163b08/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=da17c304e22ba256eba0b03710aa329115163b08", "patch": "@@ -3459,8 +3459,8 @@ gfc_get_array_descr_info (const_tree type, struct array_descr_info *info)\n       if (!integer_zerop (dtype_off))\n \tt = fold_build_pointer_plus (t, rank_off);\n \n-      t = build1 (NOP_EXPR, build_pointer_type (gfc_array_index_type), t);\n-      t = build1 (INDIRECT_REF, gfc_array_index_type, t);\n+      t = build1 (NOP_EXPR, build_pointer_type (TREE_TYPE (field)), t);\n+      t = build1 (INDIRECT_REF, TREE_TYPE (field), t);\n       info->rank = t;\n       t = build0 (PLACEHOLDER_EXPR, TREE_TYPE (dim_off));\n       t = size_binop (MULT_EXPR, t, dim_size);"}]}