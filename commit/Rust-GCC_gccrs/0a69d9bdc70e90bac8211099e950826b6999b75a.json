{"sha": "0a69d9bdc70e90bac8211099e950826b6999b75a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE2OWQ5YmRjNzBlOTBiYWM4MjExMDk5ZTk1MDgyNmI2OTk5Yjc1YQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-05-01T08:12:31Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-05-01T08:12:31Z"}, "message": "decl.c (components_to_record): Add more comments.\n\n\t* gcc-interface/decl.c (components_to_record): Add more comments.\n\tPut back pending fields onto the regular list if the misalignment\n\thappens to cancel itself.\n\nFrom-SVN: r247426", "tree": {"sha": "f728bb79a0a77a0942e483f0ac9f69781b87dabd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f728bb79a0a77a0942e483f0ac9f69781b87dabd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a69d9bdc70e90bac8211099e950826b6999b75a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a69d9bdc70e90bac8211099e950826b6999b75a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a69d9bdc70e90bac8211099e950826b6999b75a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a69d9bdc70e90bac8211099e950826b6999b75a/comments", "author": null, "committer": null, "parents": [{"sha": "8d70063658f0159840e4605fff8181caf571c7d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d70063658f0159840e4605fff8181caf571c7d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d70063658f0159840e4605fff8181caf571c7d4"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "1b80de8ef3540f0beadab353f0184a6b052f7a3f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a69d9bdc70e90bac8211099e950826b6999b75a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a69d9bdc70e90bac8211099e950826b6999b75a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0a69d9bdc70e90bac8211099e950826b6999b75a", "patch": "@@ -1,3 +1,9 @@\n+2017-05-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (components_to_record): Add more comments.\n+\tPut back pending fields onto the regular list if the misalignment\n+\thappens to cancel itself.\n+\n 2017-04-28  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch4.adb (Complete_Object_Operation): When rewriting the"}, {"sha": "c243d40d17bb95c308722c89770ee109e05f5b68", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a69d9bdc70e90bac8211099e950826b6999b75a/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a69d9bdc70e90bac8211099e950826b6999b75a/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=0a69d9bdc70e90bac8211099e950826b6999b75a", "patch": "@@ -7956,6 +7956,10 @@ components_to_record (Node_Id gnat_component_list, Entity_Id gnat_record_type,\n      different kinds of fields and issue a warning if some of them would be\n      (or are being) reordered by the reordering mechanism.\n \n+     Finally, pull out the fields whose size is not a multiple of a byte, so\n+     that they don't cause the regular fields to be misaligned.  As this can\n+     only happen in packed record types, the alignment is capped to the byte.\n+\n      ??? If we reorder them, debugging information will be wrong but there is\n      nothing that can be done about this at the moment.  */\n   const bool do_reorder = OK_To_Reorder_Components (gnat_record_type);\n@@ -8155,8 +8159,15 @@ components_to_record (Node_Id gnat_component_list, Entity_Id gnat_record_type,\n \t\t\t     in_variant, do_reorder);\n   if (do_reorder)\n     {\n+      /* If we have pending bit-packed fields on the temporary list, we put\n+\t them either on the bit-packed list or back on the regular list.  */\n       if (gnu_tmp_bitp_list)\n-\tgnu_bitp_list = chainon (gnu_tmp_bitp_list, gnu_bitp_list);\n+\t{\n+\t  if (tmp_bitp_size != 0)\n+\t    gnu_bitp_list = chainon (gnu_tmp_bitp_list, gnu_bitp_list);\n+\t  else\n+\t    gnu_field_list = chainon (gnu_tmp_bitp_list, gnu_field_list);\n+\t}\n \n       gnu_field_list\n \t= chainon (gnu_field_list,"}]}