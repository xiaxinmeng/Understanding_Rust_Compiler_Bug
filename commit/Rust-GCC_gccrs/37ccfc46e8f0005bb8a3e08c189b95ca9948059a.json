{"sha": "37ccfc46e8f0005bb8a3e08c189b95ca9948059a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdjY2ZjNDZlOGYwMDA1YmI4YTNlMDhjMTg5Yjk1Y2E5OTQ4MDU5YQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-09-30T12:31:21Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-09-30T12:31:21Z"}, "message": "tree-sra.c (type_consists_of_records_p): Do not check for trailing zero sized bit-fields.\n\n2010-09-30  Martin Jambor  <mjambor@suse.cz>\n\n\t* tree-sra.c (type_consists_of_records_p): Do not check for trailing\n\tzero sized bit-fields.\n\nFrom-SVN: r164750", "tree": {"sha": "8b3285d63d9ea1f41b9dbfb013f72f3c002fa52e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b3285d63d9ea1f41b9dbfb013f72f3c002fa52e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37ccfc46e8f0005bb8a3e08c189b95ca9948059a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37ccfc46e8f0005bb8a3e08c189b95ca9948059a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37ccfc46e8f0005bb8a3e08c189b95ca9948059a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37ccfc46e8f0005bb8a3e08c189b95ca9948059a/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d0da792aa7fb596c5afc013a64bef87bf8d045f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d0da792aa7fb596c5afc013a64bef87bf8d045f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d0da792aa7fb596c5afc013a64bef87bf8d045f"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "efd8d82d2fd15869bd39b7b1692a9c184702848f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ccfc46e8f0005bb8a3e08c189b95ca9948059a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ccfc46e8f0005bb8a3e08c189b95ca9948059a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37ccfc46e8f0005bb8a3e08c189b95ca9948059a", "patch": "@@ -1,3 +1,8 @@\n+2010-09-30  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* tree-sra.c (type_consists_of_records_p): Do not check for trailing\n+\tzero sized bit-fields.\n+\n 2010-09-30  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* c-parser.c (c_lex_one_token): When finding a CPP_AT_NAME"}, {"sha": "2e6a5cb61df85c8ebd4af45200c8bfb2dc3c126a", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ccfc46e8f0005bb8a3e08c189b95ca9948059a/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ccfc46e8f0005bb8a3e08c189b95ca9948059a/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=37ccfc46e8f0005bb8a3e08c189b95ca9948059a", "patch": "@@ -815,14 +815,12 @@ create_access (tree expr, gimple stmt, bool write)\n \n /* Return true iff TYPE is a RECORD_TYPE with fields that are either of gimple\n    register types or (recursively) records with only these two kinds of fields.\n-   It also returns false if any of these records has a zero-size field as its\n-   last field or has a bit-field.  */\n+   It also returns false if any of these records contains a bit-field.  */\n \n static bool\n type_consists_of_records_p (tree type)\n {\n   tree fld;\n-  bool last_fld_has_zero_size = false;\n \n   if (TREE_CODE (type) != RECORD_TYPE)\n     return false;\n@@ -838,13 +836,8 @@ type_consists_of_records_p (tree type)\n \tif (!is_gimple_reg_type (ft)\n \t    && !type_consists_of_records_p (ft))\n \t  return false;\n-\n-\tlast_fld_has_zero_size = tree_low_cst (DECL_SIZE (fld), 1) == 0;\n       }\n \n-  if (last_fld_has_zero_size)\n-    return false;\n-\n   return true;\n }\n "}]}