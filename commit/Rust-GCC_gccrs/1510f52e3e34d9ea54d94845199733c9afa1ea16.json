{"sha": "1510f52e3e34d9ea54d94845199733c9afa1ea16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUxMGY1MmUzZTM0ZDllYTU0ZDk0ODQ1MTk5NzMzYzlhZmExZWExNg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-10-16T15:30:26Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-10-16T15:30:26Z"}, "message": "configure.in: Create compatibility code in bits/libc-lock.h file.\n\n        * configure.in: Create compatibility code in bits/libc-lock.h file.\n\n\n        * libio.h (_IO_LOCK_T): Handle glibc 2 when _IO_MTSAFE_IO is\n        not defined.\n\n        * filedoalloc.c (_IO_file_doallocate): Don't call\n        _IO_cleanup_registration_needed if __linux__ is defined.\n\n        * iofclose.c (fclose): Make it weak alias of _IO_fclose if\n        __ELF__ is defined.\n\n        * iovsprintf.c (vsprintf): Make it weak alias of _IO_vsprintf\n        if __ELF__ is defined.\n\n        * iovsscanf.c (vsscanf): Make it weak alias of _IO_vsscanf if\n        __ELF__ is defined.\n\n        * config/linuxlibc1.mt (MT_CFLAGS): Defined as -D_G_HAVE_MMAP.\n        (IO_OBJECTS): Add filedoalloc.o fileops.o genops.o iofclose.o\n        iovsprintf.o iovsscanf.o strops.o.\n\nFrom-SVN: r15931", "tree": {"sha": "75ddb85fa604b6bb3a46198f987764bedf5ddda8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75ddb85fa604b6bb3a46198f987764bedf5ddda8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1510f52e3e34d9ea54d94845199733c9afa1ea16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1510f52e3e34d9ea54d94845199733c9afa1ea16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1510f52e3e34d9ea54d94845199733c9afa1ea16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1510f52e3e34d9ea54d94845199733c9afa1ea16/comments", "author": null, "committer": null, "parents": [{"sha": "022abf9081128cf821b4953d81fee765121061b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/022abf9081128cf821b4953d81fee765121061b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/022abf9081128cf821b4953d81fee765121061b4"}], "stats": {"total": 49, "additions": 47, "deletions": 2}, "files": [{"sha": "0ee838da096b73f0e60bf01fc0056a83588c5177", "filename": "libio/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1510f52e3e34d9ea54d94845199733c9afa1ea16/libio%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1510f52e3e34d9ea54d94845199733c9afa1ea16/libio%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libio%2FChangeLog?ref=1510f52e3e34d9ea54d94845199733c9afa1ea16", "patch": "@@ -1,3 +1,28 @@\n+1997-10-15  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* configure.in: Create compatibility code in bits/libc-lock.h file.\n+\n+Thu Oct  9 07:08:41 1997  H.J. Lu  (hjl@gnu.ai.mit.edu)\n+\n+\t* libio.h (_IO_LOCK_T): Handle glibc 2 when _IO_MTSAFE_IO is\n+\tnot defined.\n+\n+\t* filedoalloc.c (_IO_file_doallocate): Don't call\n+\t_IO_cleanup_registration_needed if __linux__ is defined.\n+\n+\t* iofclose.c (fclose): Make it weak alias of _IO_fclose if\n+\t__ELF__ is defined.\n+\n+\t* iovsprintf.c (vsprintf): Make it weak alias of _IO_vsprintf\n+\tif __ELF__ is defined.\n+\n+\t* iovsscanf.c (vsscanf): Make it weak alias of _IO_vsscanf if\n+\t__ELF__ is defined.\n+\n+\t* config/linuxlibc1.mt (MT_CFLAGS): Defined as -D_G_HAVE_MMAP.\n+\t(IO_OBJECTS): Add filedoalloc.o fileops.o genops.o iofclose.o\n+\tiovsprintf.o iovsscanf.o strops.o.\n+\n Fri Oct  3 10:13:13 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* iostream.cc, libio.h: Convert other uses of #ifdef"}, {"sha": "378a9c92ef04f1659bc1c613523d069474cd71f0", "filename": "libio/config/linuxlibc1.mt", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1510f52e3e34d9ea54d94845199733c9afa1ea16/libio%2Fconfig%2Flinuxlibc1.mt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1510f52e3e34d9ea54d94845199733c9afa1ea16/libio%2Fconfig%2Flinuxlibc1.mt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libio%2Fconfig%2Flinuxlibc1.mt?ref=1510f52e3e34d9ea54d94845199733c9afa1ea16", "patch": "@@ -9,7 +9,9 @@\n LIBIO_INCLUDE=\n \n # We have those in libc.a.\n-IO_OBJECTS=iogetc.o ioputc.o iofeof.o ioferror.o\n+IO_OBJECTS=iogetc.o ioputc.o iofeof.o ioferror.o \\\n+\tfiledoalloc.o fileops.o genops.o iofclose.o \\\n+\tiovsprintf.o iovsscanf.o strops.o\n STDIO_WRAP_OBJECTS=\n OSPRIM_OBJECTS=\n STDIO_OBJECTS=\n@@ -19,3 +21,6 @@ USER_INCLUDES=PlotFile.h SFile.h builtinbuf.h editbuf.h fstream.h \\\n \tindstream.h iomanip.h iostream.h istream.h ostream.h \\\n \tparsestream.h pfstream.h procbuf.h stdiostream.h stream.h \\\n \tstreambuf.h strfile.h strstream.h\n+\n+# A bad kludge\n+MT_CFLAGS=-D_G_HAVE_MMAP"}, {"sha": "2fc3a962afaa14c07aa44b86fd0b1614db5183c4", "filename": "libio/configure.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1510f52e3e34d9ea54d94845199733c9afa1ea16/libio%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1510f52e3e34d9ea54d94845199733c9afa1ea16/libio%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libio%2Fconfigure.in?ref=1510f52e3e34d9ea54d94845199733c9afa1ea16", "patch": "@@ -54,6 +54,9 @@ case \"${target}\" in\n \trm -fr bits\n         mkdir bits\n         echo \"#include <libc-lock.h>\" > bits/libc-lock.h\n+\techo 'asm (\".weak _pthread_cleanup_pop_restore\");' >> bits/libc-lock.h\n+\techo 'asm (\".weak _pthread_cleanup_push_defer\");' >> bits/libc-lock.h\n+\n         echo \"#include <stdio-lock.h>\" > bits/stdio-lock.h\n       }\n     ;;"}, {"sha": "5c62280c14bb5af54454a009c0c33e90b80423dc", "filename": "libio/filedoalloc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1510f52e3e34d9ea54d94845199733c9afa1ea16/libio%2Ffiledoalloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1510f52e3e34d9ea54d94845199733c9afa1ea16/libio%2Ffiledoalloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libio%2Ffiledoalloc.c?ref=1510f52e3e34d9ea54d94845199733c9afa1ea16", "patch": "@@ -75,7 +75,7 @@ _IO_file_doallocate (fp)\n   char *p;\n   struct stat st;\n \n-#ifndef _LIBC\n+#if !defined(_LIBC) && !defined(__linux__)\n   /* If _IO_cleanup_registration_needed is non-zero, we should call the\n      function it points to.  This is to make sure _IO_cleanup gets called\n      on exit.  We call it from _IO_file_doallocate, since that is likely"}, {"sha": "b6f18e58c2cd5b645726e2946ab10cae433a4fdc", "filename": "libio/iofclose.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1510f52e3e34d9ea54d94845199733c9afa1ea16/libio%2Fiofclose.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1510f52e3e34d9ea54d94845199733c9afa1ea16/libio%2Fiofclose.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libio%2Fiofclose.c?ref=1510f52e3e34d9ea54d94845199733c9afa1ea16", "patch": "@@ -55,4 +55,8 @@ _IO_fclose (fp)\n \n #ifdef weak_alias\n weak_alias (_IO_fclose, fclose)\n+#else\n+#ifdef __linux__\n+#pragma weak fclose = _IO_fclose\n+#endif\n #endif"}, {"sha": "7b82591974d4a6ae2f6d7b3d961701779bd28843", "filename": "libio/iovsprintf.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1510f52e3e34d9ea54d94845199733c9afa1ea16/libio%2Fiovsprintf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1510f52e3e34d9ea54d94845199733c9afa1ea16/libio%2Fiovsprintf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libio%2Fiovsprintf.c?ref=1510f52e3e34d9ea54d94845199733c9afa1ea16", "patch": "@@ -54,4 +54,8 @@ _IO_vsprintf (string, format, args)\n \n #ifdef weak_alias\n weak_alias (_IO_vsprintf, vsprintf)\n+#else\n+#ifdef __linux__\n+#pragma weak vsprintf = _IO_vsprintf\n+#endif\n #endif"}, {"sha": "0db195c8c586cb9dd7c49dfe70b5fe87365050f6", "filename": "libio/iovsscanf.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1510f52e3e34d9ea54d94845199733c9afa1ea16/libio%2Fiovsscanf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1510f52e3e34d9ea54d94845199733c9afa1ea16/libio%2Fiovsscanf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libio%2Fiovsscanf.c?ref=1510f52e3e34d9ea54d94845199733c9afa1ea16", "patch": "@@ -51,4 +51,8 @@ _IO_vsscanf (string, format, args)\n #ifdef weak_alias\n weak_alias (_IO_vsscanf, __vsscanf)\n weak_alias (_IO_vsscanf, vsscanf)\n+#else\n+#ifdef __ELF__\n+#pragma weak vsscanf = _IO_vsscanf\n+#endif\n #endif"}]}