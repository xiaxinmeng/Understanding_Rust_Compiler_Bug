{"sha": "4736718a4eaa086ada51b54a5cfb9fff059c6d9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDczNjcxOGE0ZWFhMDg2YWRhNTFiNTRhNWNmYjlmZmYwNTljNmQ5Zg==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@ubuntu.com", "date": "2010-08-06T05:28:37Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2010-08-06T05:28:37Z"}, "message": "Improve libffi comments\n\nFrom-SVN: r162936", "tree": {"sha": "8cff1d61a1410afc3f31b95b7853350890c04747", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cff1d61a1410afc3f31b95b7853350890c04747"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4736718a4eaa086ada51b54a5cfb9fff059c6d9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4736718a4eaa086ada51b54a5cfb9fff059c6d9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4736718a4eaa086ada51b54a5cfb9fff059c6d9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4736718a4eaa086ada51b54a5cfb9fff059c6d9f/comments", "author": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3ac097a580e0a77d8b15486361d473ce06edaeba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ac097a580e0a77d8b15486361d473ce06edaeba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ac097a580e0a77d8b15486361d473ce06edaeba"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "8cf0b9a3eb988c38adffe24f3570e1b9613003e2", "filename": "libffi/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4736718a4eaa086ada51b54a5cfb9fff059c6d9f/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4736718a4eaa086ada51b54a5cfb9fff059c6d9f/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=4736718a4eaa086ada51b54a5cfb9fff059c6d9f", "patch": "@@ -39,6 +39,11 @@\n \t* libffi/src/x86/unix64.S (.eh_frame)\n \t[HAVE_AS_X86_64_UNWIND_SECTION_TYPE]: Use @unwind section type.\n \n+2010-03-14  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* src/x86/ffi64.c: Fix typo in comment.\n+\t* src/x86/ffi.c: Use /* ... */ comment style.\n+\n 2010-02-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* doc/libffi.texi (The Closure API): Fix typo."}, {"sha": "80496532a30882a23b372b183c458c5e280a2a8b", "filename": "libffi/src/x86/ffi.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4736718a4eaa086ada51b54a5cfb9fff059c6d9f/libffi%2Fsrc%2Fx86%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4736718a4eaa086ada51b54a5cfb9fff059c6d9f/libffi%2Fsrc%2Fx86%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fffi.c?ref=4736718a4eaa086ada51b54a5cfb9fff059c6d9f", "patch": "@@ -585,10 +585,10 @@ ffi_prep_raw_closure_loc (ffi_raw_closure* closure,\n     return FFI_BAD_ABI;\n   }\n \n-  // we currently don't support certain kinds of arguments for raw\n-  // closures.  This should be implemented by a separate assembly language\n-  // routine, since it would require argument processing, something we\n-  // don't do now for performance.\n+  /* we currently don't support certain kinds of arguments for raw\n+     closures.  This should be implemented by a separate assembly\n+     language routine, since it would require argument processing,\n+     something we don't do now for performance.  */\n \n   for (i = cif->nargs-1; i >= 0; i--)\n     {"}, {"sha": "07a2627b1f291b0d562df2d0cf1f33c946f580c3", "filename": "libffi/src/x86/ffi64.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4736718a4eaa086ada51b54a5cfb9fff059c6d9f/libffi%2Fsrc%2Fx86%2Fffi64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4736718a4eaa086ada51b54a5cfb9fff059c6d9f/libffi%2Fsrc%2Fx86%2Fffi64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fffi64.c?ref=4736718a4eaa086ada51b54a5cfb9fff059c6d9f", "patch": "@@ -50,9 +50,10 @@ extern void ffi_call_unix64 (void *args, unsigned long bytes, unsigned flags,\n    gcc/config/i386/i386.c. Do *not* change one without the other.  */\n \n /* Register class used for passing given 64bit part of the argument.\n-   These represent classes as documented by the PS ABI, with the exception\n-   of SSESF, SSEDF classes, that are basically SSE class, just gcc will\n-   use SF or DFmode move instead of DImode to avoid reformating penalties.\n+   These represent classes as documented by the PS ABI, with the\n+   exception of SSESF, SSEDF classes, that are basically SSE class,\n+   just gcc will use SF or DFmode move instead of DImode to avoid\n+   reformatting penalties.\n \n    Similary we play games with INTEGERSI_CLASS to use cheaper SImode moves\n    whenever possible (upper half does contain padding).  */"}]}