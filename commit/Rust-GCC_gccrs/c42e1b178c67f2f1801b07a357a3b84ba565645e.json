{"sha": "c42e1b178c67f2f1801b07a357a3b84ba565645e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQyZTFiMTc4YzY3ZjJmMTgwMWIwN2EzNTdhM2I4NGJhNTY1NjQ1ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T13:19:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T13:19:46Z"}, "message": "Minor reformatting.\n\nFrom-SVN: r223570", "tree": {"sha": "2825b2fb3d597f2b61bfd2891e4e0f84e67485e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2825b2fb3d597f2b61bfd2891e4e0f84e67485e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c42e1b178c67f2f1801b07a357a3b84ba565645e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c42e1b178c67f2f1801b07a357a3b84ba565645e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c42e1b178c67f2f1801b07a357a3b84ba565645e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c42e1b178c67f2f1801b07a357a3b84ba565645e/comments", "author": null, "committer": null, "parents": [{"sha": "e6b3f5ba80252a12abf02e5932300b11eb30d226", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6b3f5ba80252a12abf02e5932300b11eb30d226", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6b3f5ba80252a12abf02e5932300b11eb30d226"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "bea6692fc7dd57b63bde222fdc10d41ad66404d3", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c42e1b178c67f2f1801b07a357a3b84ba565645e/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c42e1b178c67f2f1801b07a357a3b84ba565645e/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=c42e1b178c67f2f1801b07a357a3b84ba565645e", "patch": "@@ -3865,13 +3865,13 @@ package body Sem_Ch4 is\n    begin\n       Analyze (P);\n \n-      --  An interesting error check, if we take the 'Reference of an object\n-      --  for which a pragma Atomic or Volatile has been given, and the type\n-      --  of the object is not Atomic or Volatile, then we are in trouble. The\n-      --  problem is that no trace of the atomic/volatile status will remain\n-      --  for the backend to respect when it deals with the resulting pointer,\n-      --  since the pointer type will not be marked atomic (it is a pointer to\n-      --  the base type of the object).\n+      --  An interesting error check, if we take the 'Ref of an object for\n+      --  which a pragma Atomic or Volatile has been given, and the type of the\n+      --  object is not Atomic or Volatile, then we are in trouble. The problem\n+      --  is that no trace of the atomic/volatile status will remain for the\n+      --  backend to respect when it deals with the resulting pointer, since\n+      --  the pointer type will not be marked atomic (it is a pointer to the\n+      --  base type of the object).\n \n       --  It is not clear if that can ever occur, but in case it does, we will\n       --  generate an error message. Not clear if this message can ever be\n@@ -3889,10 +3889,10 @@ package body Sem_Ch4 is\n          T := Etype (P);\n \n          if (Has_Atomic_Components   (E)\n-               and then not Has_Atomic_Components   (T))\n+              and then not Has_Atomic_Components   (T))\n            or else\n             (Has_Volatile_Components (E)\n-               and then not Has_Volatile_Components (T))\n+              and then not Has_Volatile_Components (T))\n            or else (Is_Atomic   (E) and then not Is_Atomic   (T))\n            or else (Is_Volatile (E) and then not Is_Volatile (T))\n          then"}, {"sha": "aeda8544bbb024151323dba97be95f5841b96089", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c42e1b178c67f2f1801b07a357a3b84ba565645e/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c42e1b178c67f2f1801b07a357a3b84ba565645e/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=c42e1b178c67f2f1801b07a357a3b84ba565645e", "patch": "@@ -1330,7 +1330,7 @@ package body Sem_Ch8 is\n       then\n          null;\n \n-      --  Allow internally generated x'Reference expression\n+      --  Allow internally generated x'Ref resulting in N_Reference node\n \n       elsif Nkind (Nam) = N_Reference then\n          null;"}]}