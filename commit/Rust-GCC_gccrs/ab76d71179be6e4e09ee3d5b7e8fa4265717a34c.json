{"sha": "ab76d71179be6e4e09ee3d5b7e8fa4265717a34c", "node_id": "C_kwDOANBUbNoAKGFiNzZkNzExNzliZTZlNGUwOWVlM2Q1YjdlOGZhNDI2NTcxN2EzNGM", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2023-02-27T17:26:54Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2023-02-27T17:26:54Z"}, "message": "Fix RTL simplifications of FFS, POPCOUNT and PARITY.\n\nIn 2011, the rtl.texi documentation was updated to reflect that the\nmodes of the RTX unary operations FFS, POPCOUNT and PARITY should\nmatch those of their operands.  Unfortunately, some of the transformations\nin simplify-rtx.cc predate this tightening of RTL semantics, and have\nnot (until now) been updated/fixed.  i.e. The POPCOUNT and PARITY\noptimizations were \"correct\" when I added them back in 2007.\n\n2023-02-27  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/ChangeLog\n\t* simplify-rtx.cc (simplify_unary_operation_1) <case FFS>: Avoid\n\tgenerating FFS with mismatched operand and result modes, by using\n\tan explicit SIGN_EXTEND/ZERO_EXTEND.\n\t<case POPCOUNT>: Likewise, for POPCOUNT of ZERO_EXTEND.\n\t<case PARITY>: Likewise, for PARITY of {ZERO,SIGN}_EXTEND.", "tree": {"sha": "86b831022f05884932a14787489dbd55909e0581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86b831022f05884932a14787489dbd55909e0581"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab76d71179be6e4e09ee3d5b7e8fa4265717a34c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab76d71179be6e4e09ee3d5b7e8fa4265717a34c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab76d71179be6e4e09ee3d5b7e8fa4265717a34c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab76d71179be6e4e09ee3d5b7e8fa4265717a34c/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5fcf084e381aefe170dcd418dc97e469dacfa91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5fcf084e381aefe170dcd418dc97e469dacfa91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5fcf084e381aefe170dcd418dc97e469dacfa91"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "2c82256af664bf2bc43172fc8fb4dfb2849e64b1", "filename": "gcc/simplify-rtx.cc", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab76d71179be6e4e09ee3d5b7e8fa4265717a34c/gcc%2Fsimplify-rtx.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab76d71179be6e4e09ee3d5b7e8fa4265717a34c/gcc%2Fsimplify-rtx.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.cc?ref=ab76d71179be6e4e09ee3d5b7e8fa4265717a34c", "patch": "@@ -1404,22 +1404,32 @@ simplify_context::simplify_unary_operation_1 (rtx_code code, machine_mode mode,\n       break;\n \n     case FFS:\n-      /* (ffs (*_extend <X>)) = (ffs <X>) */\n+      /* (ffs (*_extend <X>)) = (*_extend (ffs <X>)).  */\n       if (GET_CODE (op) == SIGN_EXTEND\n \t  || GET_CODE (op) == ZERO_EXTEND)\n-\treturn simplify_gen_unary (FFS, mode, XEXP (op, 0),\n-\t\t\t\t   GET_MODE (XEXP (op, 0)));\n+\t{\n+\t  temp = simplify_gen_unary (FFS, GET_MODE (XEXP (op, 0)),\n+\t\t\t\t     XEXP (op, 0), GET_MODE (XEXP (op, 0)));\n+\t  return simplify_gen_unary (GET_CODE (op), mode, temp,\n+\t\t\t\t     GET_MODE (temp));\n+\t}\n       break;\n \n     case POPCOUNT:\n       switch (GET_CODE (op))\n \t{\n \tcase BSWAP:\n-\tcase ZERO_EXTEND:\n-\t  /* (popcount (zero_extend <X>)) = (popcount <X>) */\n+\t  /* (popcount (bswap <X>)) = (popcount <X>).  */\n \t  return simplify_gen_unary (POPCOUNT, mode, XEXP (op, 0),\n \t\t\t\t     GET_MODE (XEXP (op, 0)));\n \n+\tcase ZERO_EXTEND:\n+\t  /* (popcount (zero_extend <X>)) = (zero_extend (popcount <X>)).  */\n+\t  temp = simplify_gen_unary (POPCOUNT, GET_MODE (XEXP (op, 0)),\n+\t\t\t\t     XEXP (op, 0), GET_MODE (XEXP (op, 0)));\n+\t  return simplify_gen_unary (ZERO_EXTEND, mode, temp,\n+\t\t\t\t     GET_MODE (temp));\n+\n \tcase ROTATE:\n \tcase ROTATERT:\n \t  /* Rotations don't affect popcount.  */\n@@ -1438,11 +1448,16 @@ simplify_context::simplify_unary_operation_1 (rtx_code code, machine_mode mode,\n \t{\n \tcase NOT:\n \tcase BSWAP:\n-\tcase ZERO_EXTEND:\n-\tcase SIGN_EXTEND:\n \t  return simplify_gen_unary (PARITY, mode, XEXP (op, 0),\n \t\t\t\t     GET_MODE (XEXP (op, 0)));\n \n+\tcase ZERO_EXTEND:\n+\tcase SIGN_EXTEND:\n+\t  temp = simplify_gen_unary (PARITY, GET_MODE (XEXP (op, 0)),\n+\t\t\t\t     XEXP (op, 0), GET_MODE (XEXP (op, 0)));\n+\t  return simplify_gen_unary (GET_CODE (op), mode, temp,\n+\t\t\t\t     GET_MODE (temp));\n+\n \tcase ROTATE:\n \tcase ROTATERT:\n \t  /* Rotations don't affect parity.  */"}]}