{"sha": "a183b5c7af929e900fa073b48f72ee6436411748", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE4M2I1YzdhZjkyOWU5MDBmYTA3M2I0OGY3MmVlNjQzNjQxMTc0OA==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@google.com", "date": "2011-03-24T12:39:59Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2011-03-24T12:39:59Z"}, "message": "lto-opts.c (input_data_block): Move to lto-streamer-in.c.\n\n\t* lto-opts.c (input_data_block): Move to lto-streamer-in.c.\n\t* lto-streamer-in.c (input_string_internal): Add clarifying\n\tcomments.\n\t(lto_input_data_block): Move from lto-opts.c.  Make extern.\n\tUpdate all users.\n\t(lto_input_string): Rename from input_string.  Make extern.\n\tUpdate all users.\n\t* lto-streamer-out.c (lto_output_string_with_length): Rename from\n\toutput_string_with_length.\n\tOutput 0 to indicate a non-NULL string.  Update all callers to\n\tnot emit 0.\n\t(lto_output_string): Rename from output_string.  Make extern.\n\tUpdate all users.\n\t(lto_output_decl_state_streams): Make extern.\n\t(lto_output_decl_state_refs): Make extern.\n\t* lto-streamer.h (lto_input_string): Declare.\n\t(lto_input_data_block): Declare.\n\t(lto_output_string): Declare.\n\t(lto_output_string_with_length): Declare.\n\t(lto_output_decl_state_streams): Declare.\n\t(lto_output_decl_state_refs): Declare.\n\nFrom-SVN: r171387", "tree": {"sha": "b074b13ef42fb524859202db77acbd1630928da5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b074b13ef42fb524859202db77acbd1630928da5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a183b5c7af929e900fa073b48f72ee6436411748", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a183b5c7af929e900fa073b48f72ee6436411748", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a183b5c7af929e900fa073b48f72ee6436411748", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a183b5c7af929e900fa073b48f72ee6436411748/comments", "author": {"login": "dnovillo", "id": 7295335, "node_id": "MDQ6VXNlcjcyOTUzMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7295335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnovillo", "html_url": "https://github.com/dnovillo", "followers_url": "https://api.github.com/users/dnovillo/followers", "following_url": "https://api.github.com/users/dnovillo/following{/other_user}", "gists_url": "https://api.github.com/users/dnovillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnovillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnovillo/subscriptions", "organizations_url": "https://api.github.com/users/dnovillo/orgs", "repos_url": "https://api.github.com/users/dnovillo/repos", "events_url": "https://api.github.com/users/dnovillo/events{/privacy}", "received_events_url": "https://api.github.com/users/dnovillo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cfef45c8097d122e7dfda42c5e2767bf21a7f649", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfef45c8097d122e7dfda42c5e2767bf21a7f649", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfef45c8097d122e7dfda42c5e2767bf21a7f649"}], "stats": {"total": 155, "additions": 97, "deletions": 58}, "files": [{"sha": "feace5129f05ca218fa726a661617ee1f396980a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a183b5c7af929e900fa073b48f72ee6436411748/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a183b5c7af929e900fa073b48f72ee6436411748/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a183b5c7af929e900fa073b48f72ee6436411748", "patch": "@@ -1,3 +1,27 @@\n+2011-03-24  Diego Novillo  <dnovillo@google.com>\n+\n+\t* lto-opts.c (input_data_block): Move to lto-streamer-in.c.\n+\t* lto-streamer-in.c (input_string_internal): Add clarifying\n+\tcomments.\n+\t(lto_input_data_block): Move from lto-opts.c.  Make extern.\n+\tUpdate all users.\n+\t(lto_input_string): Rename from input_string.  Make extern.\n+\tUpdate all users.\n+\t* lto-streamer-out.c (lto_output_string_with_length): Rename from\n+\toutput_string_with_length.\n+\tOutput 0 to indicate a non-NULL string.  Update all callers to\n+\tnot emit 0.\n+\t(lto_output_string): Rename from output_string.  Make extern.\n+\tUpdate all users.\n+\t(lto_output_decl_state_streams): Make extern.\n+\t(lto_output_decl_state_refs): Make extern.\n+\t* lto-streamer.h (lto_input_string): Declare.\n+\t(lto_input_data_block): Declare.\n+\t(lto_output_string): Declare.\n+\t(lto_output_string_with_length): Declare.\n+\t(lto_output_decl_state_streams): Declare.\n+\t(lto_output_decl_state_refs): Declare.\n+\n 2011-03-24  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/46562"}, {"sha": "9979e8da8215dd92778bc1f137fd2b5596914040", "filename": "gcc/lto-opts.c", "status": "modified", "additions": 7, "deletions": 19, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a183b5c7af929e900fa073b48f72ee6436411748/gcc%2Flto-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a183b5c7af929e900fa073b48f72ee6436411748/gcc%2Flto-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-opts.c?ref=a183b5c7af929e900fa073b48f72ee6436411748", "patch": "@@ -162,18 +162,6 @@ output_string_stream (struct lto_output_stream *stream, const char *string)\n     output_data_stream (stream, &flag, sizeof (flag));\n }\n \n-/* Read LENGTH bytes from STREAM to ADDR.  */\n-\n-static void\n-input_data_block (struct lto_input_block *ib, void *addr, size_t length)\n-{\n-  size_t i;\n-  unsigned char *const buffer = (unsigned char *const) addr;\n-\n-  for (i = 0; i < length; i++)\n-    buffer[i] = lto_input_1_unsigned (ib);\n-}\n-\n /* Return a string from IB.  The string is allocated, and the caller is\n    responsible for freeing it.  */\n \n@@ -182,15 +170,15 @@ input_string_block (struct lto_input_block *ib)\n {\n   bool flag;\n \n-  input_data_block (ib, &flag, sizeof (flag));\n+  lto_input_data_block (ib, &flag, sizeof (flag));\n   if (flag)\n     {\n       size_t length;\n       char *string;\n \n-      input_data_block (ib, &length, sizeof (length));\n+      lto_input_data_block (ib, &length, sizeof (length));\n       string = (char *) xcalloc (1, length + 1);\n-      input_data_block (ib, string, length);\n+      lto_input_data_block (ib, string, length);\n \n       return string;\n     }\n@@ -336,16 +324,16 @@ input_options (struct lto_input_block *ib)\n {\n   size_t length, i;\n \n-  input_data_block (ib, &length, sizeof (length));\n+  lto_input_data_block (ib, &length, sizeof (length));\n \n   for (i = 0; i < length; i++)\n     {\n       opt_t o;\n \n-      input_data_block (ib, &o.type, sizeof (o.type));\n-      input_data_block (ib, &o.code, sizeof (o.code));\n+      lto_input_data_block (ib, &o.type, sizeof (o.type));\n+      lto_input_data_block (ib, &o.code, sizeof (o.code));\n       o.arg = input_string_block (ib);\n-      input_data_block (ib, &o.value, sizeof (o.value));\n+      lto_input_data_block (ib, &o.value, sizeof (o.value));\n       VEC_safe_push (opt_t, heap, file_options, &o);\n     }\n }"}, {"sha": "383bfc230600e4c2c466bb1a44777eca0526d3c3", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a183b5c7af929e900fa073b48f72ee6436411748/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a183b5c7af929e900fa073b48f72ee6436411748/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=a183b5c7af929e900fa073b48f72ee6436411748", "patch": "@@ -140,7 +140,10 @@ input_string_internal (struct data_in *data_in, struct lto_input_block *ib,\n   unsigned int loc;\n   const char *result;\n \n+  /* Read the location of the string from IB.  */\n   loc = lto_input_uleb128 (ib);\n+\n+  /* Get the string stored at location LOC in DATA_IN->STRINGS.  */\n   LTO_INIT_INPUT_BLOCK (str_tab, data_in->strings, loc, data_in->strings_len);\n   len = lto_input_uleb128 (&str_tab);\n   *rlen = len;\n@@ -191,10 +194,24 @@ input_identifier (struct data_in *data_in, struct lto_input_block *ib)\n   return get_identifier_with_length (ptr, len);\n }\n \n+\n+/* Read LENGTH bytes from STREAM to ADDR.  */\n+\n+void\n+lto_input_data_block (struct lto_input_block *ib, void *addr, size_t length)\n+{\n+  size_t i;\n+  unsigned char *const buffer = (unsigned char *const) addr;\n+\n+  for (i = 0; i < length; i++)\n+    buffer[i] = lto_input_1_unsigned (ib);\n+}\n+\n+\n /* Read a NULL terminated string from the string table in DATA_IN.  */\n \n-static const char *\n-input_string (struct data_in *data_in, struct lto_input_block *ib)\n+const char *\n+lto_input_string (struct data_in *data_in, struct lto_input_block *ib)\n {\n   unsigned int len;\n   const char *ptr;\n@@ -275,7 +292,7 @@ lto_input_location (struct lto_input_block *ib, struct data_in *data_in)\n {\n   expanded_location xloc;\n \n-  xloc.file = input_string (data_in, ib);\n+  xloc.file = lto_input_string (data_in, ib);\n   if (xloc.file == NULL)\n     return UNKNOWN_LOCATION;\n \n@@ -2307,7 +2324,7 @@ lto_input_ts_translation_unit_decl_tree_pointers (struct lto_input_block *ib,\n \t\t\t\t\t\t  struct data_in *data_in,\n \t\t\t\t\t\t  tree expr)\n {\n-  TRANSLATION_UNIT_LANGUAGE (expr) = xstrdup (input_string (data_in, ib));\n+  TRANSLATION_UNIT_LANGUAGE (expr) = xstrdup (lto_input_string (data_in, ib));\n   VEC_safe_push (tree, gc, all_translation_units, expr);\n }\n \n@@ -2590,7 +2607,7 @@ lto_get_builtin_tree (struct lto_input_block *ib, struct data_in *data_in)\n   else\n     gcc_unreachable ();\n \n-  asmname = input_string (data_in, ib);\n+  asmname = lto_input_string (data_in, ib);\n   if (asmname)\n     set_builtin_user_assembler_name (result, asmname);\n "}, {"sha": "48579478b4d43deabaad0859b1d6df0fc3b2b167", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 29, "deletions": 34, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a183b5c7af929e900fa073b48f72ee6436411748/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a183b5c7af929e900fa073b48f72ee6436411748/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=a183b5c7af929e900fa073b48f72ee6436411748", "patch": "@@ -154,11 +154,11 @@ destroy_output_block (struct output_block *ob)\n    table in OB. The string might or might not include a trailing '\\0'.\n    Then put the index onto the INDEX_STREAM.  */\n \n-static void\n-output_string_with_length (struct output_block *ob,\n-\t\t\t   struct lto_output_stream *index_stream,\n-\t\t\t   const char *s,\n-\t\t\t   unsigned int len)\n+void\n+lto_output_string_with_length (struct output_block *ob,\n+\t\t\t       struct lto_output_stream *index_stream,\n+\t\t\t       const char *s,\n+\t\t\t       unsigned int len)\n {\n   struct string_slot **slot;\n   struct string_slot s_slot;\n@@ -170,6 +170,9 @@ output_string_with_length (struct output_block *ob,\n   s_slot.len = len;\n   s_slot.slot_num = 0;\n \n+  /* Indicate that this is not a NULL string.  */\n+  lto_output_uleb128_stream (index_stream, 0);\n+\n   slot = (struct string_slot **) htab_find_slot (ob->string_hash_table,\n \t\t\t\t\t\t &s_slot, INSERT);\n   if (*slot == NULL)\n@@ -200,16 +203,14 @@ output_string_with_length (struct output_block *ob,\n /* Output the '\\0' terminated STRING to the string\n    table in OB.  Then put the index onto the INDEX_STREAM.  */\n \n-static void\n-output_string (struct output_block *ob,\n-\t       struct lto_output_stream *index_stream,\n-\t       const char *string)\n+void\n+lto_output_string (struct output_block *ob,\n+\t           struct lto_output_stream *index_stream,\n+\t           const char *string)\n {\n   if (string)\n-    {\n-      lto_output_uleb128_stream (index_stream, 0);\n-      output_string_with_length (ob, index_stream, string, strlen (string) + 1);\n-    }\n+    lto_output_string_with_length (ob, index_stream, string,\n+\t\t\t\t   strlen (string) + 1);\n   else\n     lto_output_uleb128_stream (index_stream, 1);\n }\n@@ -224,12 +225,9 @@ output_string_cst (struct output_block *ob,\n \t\t   tree string)\n {\n   if (string)\n-    {\n-      lto_output_uleb128_stream (index_stream, 0);\n-      output_string_with_length (ob, index_stream,\n-\t\t\t\t TREE_STRING_POINTER (string),\n-\t\t\t\t TREE_STRING_LENGTH (string));\n-    }\n+    lto_output_string_with_length (ob, index_stream,\n+\t\t\t\t   TREE_STRING_POINTER (string),\n+\t\t\t\t   TREE_STRING_LENGTH (string ));\n   else\n     lto_output_uleb128_stream (index_stream, 1);\n }\n@@ -244,12 +242,9 @@ output_identifier (struct output_block *ob,\n \t\t   tree id)\n {\n   if (id)\n-    {\n-      lto_output_uleb128_stream (index_stream, 0);\n-      output_string_with_length (ob, index_stream,\n-\t\t\t\t IDENTIFIER_POINTER (id),\n-\t\t\t\t IDENTIFIER_LENGTH (id));\n-    }\n+    lto_output_string_with_length (ob, index_stream,\n+\t\t\t\t   IDENTIFIER_POINTER (id),\n+\t\t\t\t   IDENTIFIER_LENGTH (id));\n   else\n     lto_output_uleb128_stream (index_stream, 1);\n }\n@@ -611,13 +606,13 @@ lto_output_location (struct output_block *ob, location_t loc)\n \n   if (loc == UNKNOWN_LOCATION)\n     {\n-      output_string (ob, ob->main_stream, NULL);\n+      lto_output_string (ob, ob->main_stream, NULL);\n       return;\n     }\n \n   xloc = expand_location (loc);\n \n-  output_string (ob, ob->main_stream, xloc.file);\n+  lto_output_string (ob, ob->main_stream, xloc.file);\n   output_sleb128 (ob, xloc.line);\n   output_sleb128 (ob, xloc.column);\n   output_sleb128 (ob, xloc.sysp);\n@@ -1155,7 +1150,7 @@ static void\n lto_output_ts_translation_unit_decl_tree_pointers (struct output_block *ob,\n \t\t\t\t\t\t   tree expr)\n {\n-  output_string (ob, ob->main_stream, TRANSLATION_UNIT_LANGUAGE (expr));\n+  lto_output_string (ob, ob->main_stream, TRANSLATION_UNIT_LANGUAGE (expr));\n }\n \n /* Helper for lto_output_tree.  Write all pointer fields in EXPR to output\n@@ -1320,12 +1315,12 @@ lto_output_builtin_tree (struct output_block *ob, tree expr, int ix)\n \t reader side from adding a second '*', we omit it here.  */\n       const char *str = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (expr));\n       if (strlen (str) > 1 && str[0] == '*')\n-\toutput_string (ob, ob->main_stream, &str[1]);\n+\tlto_output_string (ob, ob->main_stream, &str[1]);\n       else\n-\toutput_string (ob, ob->main_stream, NULL);\n+\tlto_output_string (ob, ob->main_stream, NULL);\n     }\n   else\n-    output_string (ob, ob->main_stream, NULL);\n+    lto_output_string (ob, ob->main_stream, NULL);\n }\n \n \n@@ -1745,7 +1740,7 @@ output_gimple_stmt (struct output_block *ob, gimple stmt)\n       lto_output_uleb128_stream (ob->main_stream, gimple_asm_noutputs (stmt));\n       lto_output_uleb128_stream (ob->main_stream, gimple_asm_nclobbers (stmt));\n       lto_output_uleb128_stream (ob->main_stream, gimple_asm_nlabels (stmt));\n-      output_string (ob, ob->main_stream, gimple_asm_string (stmt));\n+      lto_output_string (ob, ob->main_stream, gimple_asm_string (stmt));\n       /* Fallthru  */\n \n     case GIMPLE_ASSIGN:\n@@ -2342,7 +2337,7 @@ write_global_references (struct output_block *ob,\n /* Write all the streams in an lto_out_decl_state STATE using\n    output block OB and output stream OUT_STREAM.  */\n \n-static void\n+void\n lto_output_decl_state_streams (struct output_block *ob,\n \t\t\t       struct lto_out_decl_state *state)\n {\n@@ -2356,7 +2351,7 @@ lto_output_decl_state_streams (struct output_block *ob,\n /* Write all the references in an lto_out_decl_state STATE using\n    output block OB and output stream OUT_STREAM.  */\n \n-static void\n+void\n lto_output_decl_state_refs (struct output_block *ob,\n \t\t\t    struct lto_output_stream *out_stream,\n \t\t\t    struct lto_out_decl_state *state)"}, {"sha": "c7c865dfa5c0485e34a24586562e00975aea9b18", "filename": "gcc/lto-streamer.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a183b5c7af929e900fa073b48f72ee6436411748/gcc%2Flto-streamer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a183b5c7af929e900fa073b48f72ee6436411748/gcc%2Flto-streamer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.h?ref=a183b5c7af929e900fa073b48f72ee6436411748", "patch": "@@ -862,6 +862,9 @@ extern struct data_in *lto_data_in_create (struct lto_file_decl_data *,\n \t\t\t\t    const char *, unsigned,\n \t\t\t\t    VEC(ld_plugin_symbol_resolution_t,heap) *);\n extern void lto_data_in_delete (struct data_in *);\n+extern const char *lto_input_string (struct data_in *,\n+\t\t\t\t     struct lto_input_block *);\n+extern void lto_input_data_block (struct lto_input_block *, void *, size_t);\n \n \n /* In lto-streamer-out.c  */\n@@ -870,6 +873,18 @@ extern struct output_block *create_output_block (enum lto_section_type);\n extern void destroy_output_block (struct output_block *);\n extern void lto_output_tree (struct output_block *, tree, bool);\n extern void produce_asm (struct output_block *ob, tree fn);\n+extern void lto_output_string (struct output_block *,\n+\t\t\t       struct lto_output_stream *,\n+\t\t\t       const char *);\n+extern void lto_output_string_with_length (struct output_block *,\n+\t\t\t                   struct lto_output_stream *,\n+\t\t\t                   const char *,\n+\t\t\t                   unsigned int);\n+void lto_output_decl_state_streams (struct output_block *,\n+\t\t\t\t    struct lto_out_decl_state *);\n+void lto_output_decl_state_refs (struct output_block *,\n+\t\t\t         struct lto_output_stream *,\n+\t\t\t         struct lto_out_decl_state *);\n \n \n /* In lto-cgraph.c  */"}]}