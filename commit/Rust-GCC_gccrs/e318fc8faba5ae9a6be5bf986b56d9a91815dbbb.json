{"sha": "e318fc8faba5ae9a6be5bf986b56d9a91815dbbb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMxOGZjOGZhYmE1YWU5YTZiZTViZjk4NmI1NmQ5YTkxODE1ZGJiYg==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2007-03-28T05:18:03Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2007-03-28T05:18:03Z"}, "message": "sh.h (CALL_COOKIE_RET_TRAMP_SHIFT): Move after the definition of struct sh_args.\n\n\t* config/sh/sh.h (CALL_COOKIE_RET_TRAMP_SHIFT): Move after\n\tthe definition of struct sh_args.\n\t(CALL_COOKIE_RET_TRAMP, CALL_COOKIE_STACKSEQ_SHIFT,\n\tCALL_COOKIE_INT_REG_GET): Likewise.\n\nFrom-SVN: r123290", "tree": {"sha": "75f05f43551492ee33443769fbfeedc736a09888", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75f05f43551492ee33443769fbfeedc736a09888"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e318fc8faba5ae9a6be5bf986b56d9a91815dbbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e318fc8faba5ae9a6be5bf986b56d9a91815dbbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e318fc8faba5ae9a6be5bf986b56d9a91815dbbb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e318fc8faba5ae9a6be5bf986b56d9a91815dbbb/comments", "author": null, "committer": null, "parents": [{"sha": "96647293f61a5336d32facf57bf3bfff3c322e93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96647293f61a5336d32facf57bf3bfff3c322e93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96647293f61a5336d32facf57bf3bfff3c322e93"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "a94700709a9708f9294b55f434b833b214e8470f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e318fc8faba5ae9a6be5bf986b56d9a91815dbbb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e318fc8faba5ae9a6be5bf986b56d9a91815dbbb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e318fc8faba5ae9a6be5bf986b56d9a91815dbbb", "patch": "@@ -1,3 +1,10 @@\n+2007-03-28  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/sh.h (CALL_COOKIE_RET_TRAMP_SHIFT): Move after\n+\tthe definition of struct sh_args.\n+\t(CALL_COOKIE_RET_TRAMP, CALL_COOKIE_STACKSEQ_SHIFT,\n+\tCALL_COOKIE_INT_REG_GET): Likewise.\n+\n 2007-03-28  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* ifcvt.c (cond_exec_find_if_block): Return FALSE if no"}, {"sha": "2b208d2f8f2d965201702dd6df7e3d55c8d5ffc4", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e318fc8faba5ae9a6be5bf986b56d9a91815dbbb/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e318fc8faba5ae9a6be5bf986b56d9a91815dbbb/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=e318fc8faba5ae9a6be5bf986b56d9a91815dbbb", "patch": "@@ -1979,6 +1979,13 @@ struct sh_args {\n \n      - If T is set, a return trampoline will be set up for 64-bit\n      return values to be split into 2 32-bit registers.  */\n+    long call_cookie;\n+\n+  /* This is set to nonzero when the call in question must use the Renesas ABI,\n+     even without the -mrenesas option.  */\n+    int renesas_abi;\n+};\n+\n #define CALL_COOKIE_RET_TRAMP_SHIFT 0\n #define CALL_COOKIE_RET_TRAMP(VAL) ((VAL) << CALL_COOKIE_RET_TRAMP_SHIFT)\n #define CALL_COOKIE_STACKSEQ_SHIFT 1\n@@ -1991,12 +1998,6 @@ struct sh_args {\n   ((VAL) << CALL_COOKIE_INT_REG_SHIFT (REG))\n #define CALL_COOKIE_INT_REG_GET(COOKIE, REG) \\\n   (((COOKIE) >> CALL_COOKIE_INT_REG_SHIFT (REG)) & ((REG) < 4 ? 7 : 15))\n-    long call_cookie;\n-\n-  /* This is set to nonzero when the call in question must use the Renesas ABI,\n-     even without the -mrenesas option.  */\n-    int renesas_abi;\n-};\n \n #define CUMULATIVE_ARGS  struct sh_args\n "}]}