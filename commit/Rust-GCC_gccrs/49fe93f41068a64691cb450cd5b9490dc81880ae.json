{"sha": "49fe93f41068a64691cb450cd5b9490dc81880ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDlmZTkzZjQxMDY4YTY0NjkxY2I0NTBjZDViOTQ5MGRjODE4ODBhZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-11-10T20:28:16Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-11-10T20:28:16Z"}, "message": "PR c++/51079, DR 495\n\n\tPR c++/51079, DR 495\n\t* call.c (joust): Check the second conversion sequence\n\tbefore checking templates.\n\nFrom-SVN: r181270", "tree": {"sha": "832c72a05021ceac05d31c3b5ab119b91f39e5dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/832c72a05021ceac05d31c3b5ab119b91f39e5dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49fe93f41068a64691cb450cd5b9490dc81880ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49fe93f41068a64691cb450cd5b9490dc81880ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49fe93f41068a64691cb450cd5b9490dc81880ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49fe93f41068a64691cb450cd5b9490dc81880ae/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c68b1bc7eb13d1db7fc7b61a3601cac9cb75bcbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c68b1bc7eb13d1db7fc7b61a3601cac9cb75bcbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c68b1bc7eb13d1db7fc7b61a3601cac9cb75bcbe"}], "stats": {"total": 65, "additions": 50, "deletions": 15}, "files": [{"sha": "4492b3b62336fc467bdc889a85217ea5bd3a1c27", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49fe93f41068a64691cb450cd5b9490dc81880ae/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49fe93f41068a64691cb450cd5b9490dc81880ae/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=49fe93f41068a64691cb450cd5b9490dc81880ae", "patch": "@@ -1,3 +1,9 @@\n+2011-11-10  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51079, DR 495\n+\t* call.c (joust): Check the second conversion sequence\n+\tbefore checking templates.\n+\n 2011-11-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/50837"}, {"sha": "e81950ce537bdd68d6414f2be9efdb3733a9a61e", "filename": "gcc/cp/call.c", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49fe93f41068a64691cb450cd5b9490dc81880ae/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49fe93f41068a64691cb450cd5b9490dc81880ae/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=49fe93f41068a64691cb450cd5b9490dc81880ae", "patch": "@@ -8109,6 +8109,22 @@ joust (struct z_candidate *cand1, struct z_candidate *cand2, bool warn)\n   if (winner)\n     return winner;\n \n+  /* DR 495 moved this tiebreaker above the template ones.  */\n+  /* or, if not that,\n+     the  context  is  an  initialization by user-defined conversion (see\n+     _dcl.init_  and  _over.match.user_)  and  the  standard   conversion\n+     sequence  from  the return type of F1 to the destination type (i.e.,\n+     the type of the entity being initialized)  is  a  better  conversion\n+     sequence  than the standard conversion sequence from the return type\n+     of F2 to the destination type.  */\n+\n+  if (cand1->second_conv)\n+    {\n+      winner = compare_ics (cand1->second_conv, cand2->second_conv);\n+      if (winner)\n+\treturn winner;\n+    }\n+\n   /* or, if not that,\n      F1 is a non-template function and F2 is a template function\n      specialization.  */\n@@ -8137,21 +8153,6 @@ joust (struct z_candidate *cand1, struct z_candidate *cand2, bool warn)\n \treturn winner;\n     }\n \n-  /* or, if not that,\n-     the  context  is  an  initialization by user-defined conversion (see\n-     _dcl.init_  and  _over.match.user_)  and  the  standard   conversion\n-     sequence  from  the return type of F1 to the destination type (i.e.,\n-     the type of the entity being initialized)  is  a  better  conversion\n-     sequence  than the standard conversion sequence from the return type\n-     of F2 to the destination type.  */\n-\n-  if (cand1->second_conv)\n-    {\n-      winner = compare_ics (cand1->second_conv, cand2->second_conv);\n-      if (winner)\n-\treturn winner;\n-    }\n-\n   /* Check whether we can discard a builtin candidate, either because we\n      have two identical ones or matching builtin and non-builtin candidates.\n "}, {"sha": "e57b535ad055b310ebd30b62a1f1b46139db1cc0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49fe93f41068a64691cb450cd5b9490dc81880ae/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49fe93f41068a64691cb450cd5b9490dc81880ae/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=49fe93f41068a64691cb450cd5b9490dc81880ae", "patch": "@@ -1,5 +1,8 @@\n 2011-11-10  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/51079\n+\t* g++.dg/template/conv12.C: New.\n+\n \tPR debug/50983\n \t* gcc.dg/debug/dwarf2/asm-line1.c: New.\n "}, {"sha": "e6af05481d79c4937e90fb8c6faaef5a4a4653f1", "filename": "gcc/testsuite/g++.dg/template/conv12.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49fe93f41068a64691cb450cd5b9490dc81880ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fconv12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49fe93f41068a64691cb450cd5b9490dc81880ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fconv12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fconv12.C?ref=49fe93f41068a64691cb450cd5b9490dc81880ae", "patch": "@@ -0,0 +1,25 @@\n+// PR c++/51079\n+\n+#if __cplusplus > 199711L\n+struct C1\n+{\n+  template <class T>\n+  operator T() = delete;\t// { dg-message \"declared here\" \"\" { target c++11 } }\n+  operator bool() { return false; }\n+} c1;\n+\n+int ic1 = c1;\t\t\t// { dg-error \"deleted\" \"\" { target c++11 } }\n+int ac1 = c1 + c1;\t\t// { dg-error \"deleted\" \"\" { target c++11 } }\n+#endif\n+\n+struct C2\n+{\n+private:\n+  template <class T>\n+  operator T();\t\t\t// { dg-error \"private\" }\n+public:\n+  operator bool() { return false; }\n+} c2;\n+\n+int ic2 = c2;\t\t\t// { dg-error \"\" }\n+int ac2 = c2 + c2;\t\t// { dg-error \"\" }"}]}