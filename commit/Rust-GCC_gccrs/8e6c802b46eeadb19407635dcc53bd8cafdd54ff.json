{"sha": "8e6c802b46eeadb19407635dcc53bd8cafdd54ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU2YzgwMmI0NmVlYWRiMTk0MDc2MzVkY2M1M2JkOGNhZmRkNTRmZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-01-28T12:31:17Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-01-28T12:31:17Z"}, "message": "(expand_call): When emitting queue for each arg, call protect_from_queue...\n\n(expand_call): When emitting queue for each arg, call\nprotect_from_queue; put in initial_value so EXPR_LIST in is_const case\nwon't have QUEUED.\n\nFrom-SVN: r8835", "tree": {"sha": "ab1f83d26f11f5f52810ea28ad33867deb7426ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab1f83d26f11f5f52810ea28ad33867deb7426ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e6c802b46eeadb19407635dcc53bd8cafdd54ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e6c802b46eeadb19407635dcc53bd8cafdd54ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e6c802b46eeadb19407635dcc53bd8cafdd54ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e6c802b46eeadb19407635dcc53bd8cafdd54ff/comments", "author": null, "committer": null, "parents": [{"sha": "a9174911766177b372dce512590b254f2d7a0def", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9174911766177b372dce512590b254f2d7a0def", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9174911766177b372dce512590b254f2d7a0def"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "0a6b029f5d47de0a53b056bf9b2f7de3d0b416ad", "filename": "gcc/calls.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e6c802b46eeadb19407635dcc53bd8cafdd54ff/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e6c802b46eeadb19407635dcc53bd8cafdd54ff/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=8e6c802b46eeadb19407635dcc53bd8cafdd54ff", "patch": "@@ -1,5 +1,5 @@\n /* Convert function calls to rtl insns, for GNU C compiler.\n-   Copyright (C) 1989, 1992, 1993, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1992, 1993, 1994, 1995 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -1317,18 +1317,21 @@ expand_call (exp, target, ignore)\n \targs[i].initial_value = args[i].value\n \t  = expand_expr (args[i].tree_value, NULL_RTX, VOIDmode, 0);\n \n-\tif (TYPE_MODE (TREE_TYPE (args[i].tree_value)) != args[i].mode)\n-\t  args[i].value\n-\t    = convert_modes (args[i].mode, \n-\t\t\t     TYPE_MODE (TREE_TYPE (args[i].tree_value)),\n-\t\t\t     args[i].value, args[i].unsignedp);\n-\n \tpreserve_temp_slots (args[i].value);\n \tpop_temp_slots ();\n \n \t/* ANSI doesn't require a sequence point here,\n \t   but PCC has one, so this will avoid some problems.  */\n \temit_queue ();\n+\n+\targs[i].initial_value = args[i].value\n+\t  = protect_from_queue (args[i].initial_value, 0);\n+\n+\tif (TYPE_MODE (TREE_TYPE (args[i].tree_value)) != args[i].mode)\n+\t  args[i].value\n+\t    = convert_modes (args[i].mode, \n+\t\t\t     TYPE_MODE (TREE_TYPE (args[i].tree_value)),\n+\t\t\t     args[i].value, args[i].unsignedp);\n       }\n \n   /* Now we are about to start emitting insns that can be deleted"}]}