{"sha": "0aae15720e6ba2eb8b8f119d8e6dc0169299d151", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFhZTE1NzIwZTZiYTJlYjhiOGYxMTlkOGU2ZGMwMTY5Mjk5ZDE1MQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-05-01T23:22:30Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-05-01T23:22:30Z"}, "message": "calls.c (combine_pending_stack_adjustment_and_call): Remove unnecessary unadjusted_alignment check.\n\n\t* calls.c (combine_pending_stack_adjustment_and_call): Remove\n\tunnecessary unadjusted_alignment check.\n\nFrom-SVN: r247452", "tree": {"sha": "2bc0e55137ba834a9616595e1bf32e3ad3ec54dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bc0e55137ba834a9616595e1bf32e3ad3ec54dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0aae15720e6ba2eb8b8f119d8e6dc0169299d151", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aae15720e6ba2eb8b8f119d8e6dc0169299d151", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0aae15720e6ba2eb8b8f119d8e6dc0169299d151", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aae15720e6ba2eb8b8f119d8e6dc0169299d151/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a4dbf7d315730cf6c94a67a42e8cc3a41047ff5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a4dbf7d315730cf6c94a67a42e8cc3a41047ff5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a4dbf7d315730cf6c94a67a42e8cc3a41047ff5"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "667eaa13eb71c0bc05e319b12ee83bf54d3518ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aae15720e6ba2eb8b8f119d8e6dc0169299d151/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aae15720e6ba2eb8b8f119d8e6dc0169299d151/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0aae15720e6ba2eb8b8f119d8e6dc0169299d151", "patch": "@@ -1,3 +1,8 @@\n+2017-05-01  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* calls.c (combine_pending_stack_adjustment_and_call): Remove\n+\tunnecessary unadjusted_alignment check.\n+\n 2017-05-01  Xi Ruoyao  <ryxi@stu.xidian.edu.cn>\n \n         PR c++/80038"}, {"sha": "c26f157b0b11cf2b991a55c3aa29e508d0498532", "filename": "gcc/calls.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aae15720e6ba2eb8b8f119d8e6dc0169299d151/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aae15720e6ba2eb8b8f119d8e6dc0169299d151/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=0aae15720e6ba2eb8b8f119d8e6dc0169299d151", "patch": "@@ -2644,13 +2644,8 @@ combine_pending_stack_adjustment_and_call (int unadjusted_args_size,\n   adjustment = pending_stack_adjust;\n   /* Push enough additional bytes that the stack will be aligned\n      after the arguments are pushed.  */\n-  if (preferred_unit_stack_boundary > 1)\n-    {\n-      if (unadjusted_alignment > 0)\n-\tadjustment -= preferred_unit_stack_boundary - unadjusted_alignment;\n-      else\n-\tadjustment += unadjusted_alignment;\n-    }\n+  if (preferred_unit_stack_boundary > 1 && unadjusted_alignment)\n+    adjustment -= preferred_unit_stack_boundary - unadjusted_alignment;\n \n   /* Now, sets ARGS_SIZE->CONSTANT so that we pop the right number of\n      bytes after the call.  The right number is the entire"}]}