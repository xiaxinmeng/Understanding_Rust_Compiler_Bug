{"sha": "13ec81eb4c3b484ad636000fa8f6d925e15fb983", "node_id": "C_kwDOANBUbNoAKDEzZWM4MWViNGMzYjQ4NGFkNjM2MDAwZmE4ZjZkOTI1ZTE1ZmI5ODM", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-25T00:16:51Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-25T00:16:51Z"}, "message": "Daily bump.", "tree": {"sha": "299ba456678c767bbcc0fc2b69d75dba8052d9f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/299ba456678c767bbcc0fc2b69d75dba8052d9f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13ec81eb4c3b484ad636000fa8f6d925e15fb983", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13ec81eb4c3b484ad636000fa8f6d925e15fb983", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13ec81eb4c3b484ad636000fa8f6d925e15fb983", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13ec81eb4c3b484ad636000fa8f6d925e15fb983/comments", "author": null, "committer": null, "parents": [{"sha": "fdb06fe68253d287dcd6c04339be042ef3044f8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdb06fe68253d287dcd6c04339be042ef3044f8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdb06fe68253d287dcd6c04339be042ef3044f8a"}], "stats": {"total": 184, "additions": 183, "deletions": 1}, "files": [{"sha": "b732fa6d2c9c9a187a1168ed935106b300d4e343", "filename": "gcc/ChangeLog", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ec81eb4c3b484ad636000fa8f6d925e15fb983/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ec81eb4c3b484ad636000fa8f6d925e15fb983/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=13ec81eb4c3b484ad636000fa8f6d925e15fb983", "patch": "@@ -1,3 +1,52 @@\n+2023-03-24  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* doc/analyzer.texi (Debugging the Analyzer): Add notes on useful\n+\tdebugging options.\n+\t(Special Functions for Debugging the Analyzer): Convert to a\n+\ttable, and rewrite in places.\n+\t(Other Debugging Techniques): Add notes on how to compare two\n+\tdifferent exploded graphs.\n+\n+2023-03-24  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR other/109163\n+\t* json.cc: Update comments to indicate that we now preserve\n+\tinsertion order of keys within objects.\n+\t(object::print): Traverse keys in insertion order.\n+\t(object::set): Preserve insertion order of keys.\n+\t(selftest::test_writing_objects): Add an additional key to verify\n+\tthat we preserve insertion order.\n+\t* json.h (object::m_keys): New field.\n+\n+2023-03-24  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/109238\n+\t* gimple-range-cache.cc (ranger_cache::resolve_dom): Ignore\n+\tpredecessors which this block dominates.\n+\n+2023-03-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106912\n+\t* tree-profile.cc (tree_profiling): Update stmts only when\n+\tprofiling or testing coverage.  Make sure to update calls\n+\tfntype, stripping 'const' there.\n+\n+2023-03-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/109258\n+\t* builtins.cc (inline_expand_builtin_bytecmp): Return NULL_RTX early\n+\tif target == const0_rtx.\n+\n+2023-03-24  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* doc/sourcebuild.texi (weak_undefined, posix_memalign):\n+\tDocument options and effective targets.\n+\n+2023-03-24  Costas Argyris  <costas.argyris@gmail.com>\n+\n+\t* config/i386/x-mingw32-utf8: Make HOST_EXTRA_OBJS_SYMBOL\n+\toptional.\n+\n 2023-03-23  Pat Haugen  <pthaugen@linux.ibm.com>\n \n \t* config/rs6000/rs6000.md (*mod<mode>3, umod<mode>3): Add"}, {"sha": "3c8c315bc19de23b5a88d1a2a9c64e5c6b8df462", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ec81eb4c3b484ad636000fa8f6d925e15fb983/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ec81eb4c3b484ad636000fa8f6d925e15fb983/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=13ec81eb4c3b484ad636000fa8f6d925e15fb983", "patch": "@@ -1 +1 @@\n-20230324\n+20230325"}, {"sha": "200404e6f8d1caddb8bd40621ccd99f0dd9ded3f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ec81eb4c3b484ad636000fa8f6d925e15fb983/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ec81eb4c3b484ad636000fa8f6d925e15fb983/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=13ec81eb4c3b484ad636000fa8f6d925e15fb983", "patch": "@@ -1,3 +1,14 @@\n+2023-03-24  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/106969\n+\t* parser.cc (cp_parser_class_specifier): Clear current_class_ptr\n+\tand current_class_ref sooner, before parsing a class definition.\n+\n+2023-03-24  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105481\n+\t* pt.cc (type_unification_real): Adjust for partial ordering.\n+\n 2023-03-23  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/105996"}, {"sha": "0d7cbfdf8c0ddec53fc9a8447f9c4f557d1bed3b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ec81eb4c3b484ad636000fa8f6d925e15fb983/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ec81eb4c3b484ad636000fa8f6d925e15fb983/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=13ec81eb4c3b484ad636000fa8f6d925e15fb983", "patch": "@@ -1,3 +1,22 @@\n+2023-03-24  Harald Anlauf  <anlauf@gmx.de>\n+\n+\t* expr.cc (free_expr0): Free also BOZ strings as part of an expression.\n+\n+2023-03-24  Haochen Gui  <guihaoc@gcc.gnu.org>\n+\t    Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR target/103628\n+\t* target-memory.cc (gfc_interpret_float): Return FAIL when\n+\tnative_interpret_expr gets a NULL tree.\n+\t* arith.cc (gfc_hollerith2real): Return NULL when\n+\tgfc_interpret_float fails.\n+\t* error.cc (gfc_buffered_p): Define.\n+\t* gfortran.h (gfc_buffered_p): Declare.\n+\t* intrinsic.cc: Add diagnostic.h to include list.\n+\t(do_simplify): Save errorcount and check it at finish.  Report a\n+\t\"Cannot simplify expression\" error on a bad result if error count\n+\tdoesn't change and no other errors buffered.\n+\n 2023-03-22  Harald Anlauf  <anlauf@gmx.de>\n \t    Steven G. Kargl  <kargl@gcc.gnu.org>\n "}, {"sha": "507e2d3c876f5c608f73b38258cf4204638d81b5", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ec81eb4c3b484ad636000fa8f6d925e15fb983/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ec81eb4c3b484ad636000fa8f6d925e15fb983/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=13ec81eb4c3b484ad636000fa8f6d925e15fb983", "patch": "@@ -1,3 +1,13 @@\n+2023-03-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/109258\n+\t* go-gcc.cc (Gcc_backend): Add new static data members builtin_pure\n+\tand builtin_nothrow.\n+\t(Gcc_backend::Gcc_backend): Pass builtin_pure | builtin_nothrow for\n+\tBUILT_IN_MEMCMP.\n+\t(Gcc_backend::define_builtin): Handle builtin_pure and builtin_nothrow\n+\tin flags.\n+\n 2023-02-23  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n \n \t* gccgo.texi: Reorder index entries around @items."}, {"sha": "27cbce430b8b54360cd98840c3dc143799a75268", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ec81eb4c3b484ad636000fa8f6d925e15fb983/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ec81eb4c3b484ad636000fa8f6d925e15fb983/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=13ec81eb4c3b484ad636000fa8f6d925e15fb983", "patch": "@@ -1,3 +1,80 @@\n+2023-03-24  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/106969\n+\t* g++.dg/lookup/name-clash11.C: Fix ASSERT macro definition in\n+\tC++98 mode.\n+\t* g++.dg/lookup/this2.C: New test.\n+\n+2023-03-24  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105481\n+\t* g++.dg/cpp0x/fntmpdefarg-partial1.C: New test.\n+\n+2023-03-24  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR other/109163\n+\t* c-c++-common/diagnostic-format-json-1.c: Update comment.\n+\t* c-c++-common/diagnostic-format-json-2.c: Likewise.\n+\t* c-c++-common/diagnostic-format-json-3.c: Likewise.\n+\t* c-c++-common/diagnostic-format-json-4.c: Likewise.\n+\t* c-c++-common/diagnostic-format-json-5.c: Rewrite regexps.\n+\t* c-c++-common/diagnostic-format-json-stderr-1.c: Update comment.\n+\n+2023-03-24  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/109238\n+\t* gcc.dg/pr109238.c: New.\n+\n+2023-03-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106912\n+\t* gcc.dg/profile-generate-4.c: New testcase.\n+\n+2023-03-24  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* gm2/projects/iso/small/run/pass/iso-extended-opaque-run-pass.exp:\n+\tCompile object for stressset.mod and testlib.mod.  Add test so\n+\tthat we only link these\tobjects with test application objects.\n+\n+2023-03-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/109137\n+\t* gcc.target/i386/pr109137.c: Remove -m32 from dg-options, instead\n+\trequire ia32 effective target.  Only add -fPIC for fpic effective\n+\ttarget.  Remove #include <string.h>, use __builtin_memset instead of\n+\tmemset.\n+\n+2023-03-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/99739\n+\t* gcc.dg/tree-ssa/pr99739.c: New test.\n+\n+2023-03-24  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* lib/target-supports.exp (add_options_for_weak_undefined):\n+\tNew.\n+\t(check_effective_target_weak_undefined): Use it.\n+\t(check_effective_target_posix_memalign): New.\n+\t* gcc.dg/torture/pr53922.c: Drop skips and custom options in\n+\tfavor of effective target requirement and added options for\n+\tweak_undefined symbols.\n+\t* gcc.dg/torture/pr90020.c: Likewise.\n+\t* gcc.dg/addr_equal-1.c: Likewise.\n+\t* gcc.target/aarch64/aapcs64/aapcs64.exp: Likewise, for\n+\tabitest.S-using tests.\n+\t* gcc.dg/torture/pr60092.c: Likewise, but in favor of\n+\tposix_memalign tests.\n+\t* gcc.dg/vect/vect-tail-nomask-1.c: Likewise.\n+\n+2023-03-24  Haochen Gui  <guihaoc@gcc.gnu.org>\n+\t    Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR target/103628\n+\t* gfortran.dg/assumed_size_refs_2.f90: Check \"Cannot simplify\n+\texpression\" error.\n+\t* gfortran.dg/unpack_field_1.f90: Likewise.\n+\t* gfortran.dg/pr103628.f90: New.\n+\n 2023-03-23  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/105996"}, {"sha": "cd2c49432c57f14a4e76d5f85d5888ae2edb747d", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ec81eb4c3b484ad636000fa8f6d925e15fb983/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ec81eb4c3b484ad636000fa8f6d925e15fb983/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=13ec81eb4c3b484ad636000fa8f6d925e15fb983", "patch": "@@ -1,3 +1,9 @@\n+2023-03-24  Wilco Dijkstra  <wilco.dijkstra@arm.com>\n+\n+\tPR libgcc/108891\n+\t* config/linux/aarch64/atomic_16.S: Fix libat_load_16_i1.\n+\tAdd comments describing the memory order.\n+\n 2023-03-03  Stefan Schulze Frielinghaus  <stefansf@linux.ibm.com>\n \n \t* config/s390/cas_n.c: New file."}, {"sha": "e9f3073fee72978ff9c0c2f45a5f3eab5b2fc2f5", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ec81eb4c3b484ad636000fa8f6d925e15fb983/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ec81eb4c3b484ad636000fa8f6d925e15fb983/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=13ec81eb4c3b484ad636000fa8f6d925e15fb983", "patch": "@@ -1,3 +1,13 @@\n+2023-03-24  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* libgomp.texi (Offload-Target Specifics): Grammar fix.\n+\n+2023-03-24  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR fortran/104949\n+\t* target.c (gomp_map_vars_internal) <GOMP_MAP_FIRSTPRIVATE>: Add\n+\tcaveat/safeguard.\n+\n 2023-03-10  Thomas Schwinge  <thomas@codesourcery.com>\n \n \tPR libgomp/90596"}]}