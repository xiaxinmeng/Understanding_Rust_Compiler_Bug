{"sha": "7220ca2b3822219e56497f4d18ceb043656acb71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIyMGNhMmIzODIyMjE5ZTU2NDk3ZjRkMThjZWIwNDM2NTZhY2I3MQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-09-08T16:31:43Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-09-08T16:31:43Z"}, "message": "re PR tree-optimization/37421 (ICE in vn_reference_insert_pieces at tree-ssa-sccvn.c:1131)\n\n2008-09-08  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/37421\n\t* tree-ssa-sccvn.c (visit_copy): Make sure to fully\n\tvalueize the RHS.\n\n\t* g++.dg/torture/pr37421.C: New testcase.\n\nFrom-SVN: r140111", "tree": {"sha": "aee1d6b6b943eaad16bcc7f6620c5cb7275d2694", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aee1d6b6b943eaad16bcc7f6620c5cb7275d2694"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7220ca2b3822219e56497f4d18ceb043656acb71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7220ca2b3822219e56497f4d18ceb043656acb71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7220ca2b3822219e56497f4d18ceb043656acb71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7220ca2b3822219e56497f4d18ceb043656acb71/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94c8a0cca5ddcf29d1185699900882522c6a51b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94c8a0cca5ddcf29d1185699900882522c6a51b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94c8a0cca5ddcf29d1185699900882522c6a51b1"}], "stats": {"total": 60, "additions": 57, "deletions": 3}, "files": [{"sha": "e8d4c0303f82166ddb6400f2697607e86cbf652b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7220ca2b3822219e56497f4d18ceb043656acb71/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7220ca2b3822219e56497f4d18ceb043656acb71/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7220ca2b3822219e56497f4d18ceb043656acb71", "patch": "@@ -1,3 +1,9 @@\n+2008-09-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/37421\n+\t* tree-ssa-sccvn.c (visit_copy): Make sure to fully\n+\tvalueize the RHS.\n+\n 2008-09-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/37415"}, {"sha": "e136c69091e1f677255bcd4efb8351373a2b0698", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7220ca2b3822219e56497f4d18ceb043656acb71/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7220ca2b3822219e56497f4d18ceb043656acb71/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7220ca2b3822219e56497f4d18ceb043656acb71", "patch": "@@ -1,3 +1,8 @@\n+2008-09-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/37421\n+\t* g++.dg/torture/pr37421.C: New testcase.\n+\n 2008-09-08  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/36167"}, {"sha": "4b8447eac499c208e006fa5a15305ccd5a888db8", "filename": "gcc/testsuite/g++.dg/torture/pr37421.C", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7220ca2b3822219e56497f4d18ceb043656acb71/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr37421.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7220ca2b3822219e56497f4d18ceb043656acb71/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr37421.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr37421.C?ref=7220ca2b3822219e56497f4d18ceb043656acb71", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do compile } */\n+\n+#include <stdio.h>\n+#include <string.h>\n+\n+inline int\n+bci (const float &source)\n+{\n+ int dest;\n+ memcpy (&dest, &source, sizeof (dest));\n+ return dest;\n+}\n+\n+inline float\n+bcf (const int &source)\n+{\n+ float dest;\n+ memcpy (&dest, &source, sizeof (dest));\n+ return dest;\n+}\n+\n+float\n+Foo ()\n+{\n+ const int foo = bci (0.0f);\n+ int bar = foo;\n+ const int baz = foo & 1;\n+ if (!baz && (foo & 2))\n+   bar = 0;\n+ return bcf (bar);\n+}\n+\n+int\n+main ()\n+{\n+  printf (\"Foo() = %f\\n\", Foo());\n+  return 0;\n+}\n+"}, {"sha": "09b2ee8fffd4424a67d0af5fbcfe5146d2753189", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7220ca2b3822219e56497f4d18ceb043656acb71/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7220ca2b3822219e56497f4d18ceb043656acb71/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=7220ca2b3822219e56497f4d18ceb043656acb71", "patch": "@@ -1607,13 +1607,17 @@ static bool\n visit_copy (tree lhs, tree rhs)\n {\n   /* Follow chains of copies to their destination.  */\n-  while (SSA_VAL (rhs) != rhs && TREE_CODE (SSA_VAL (rhs)) == SSA_NAME)\n+  while (TREE_CODE (rhs) == SSA_NAME\n+\t && SSA_VAL (rhs) != rhs)\n     rhs = SSA_VAL (rhs);\n \n   /* The copy may have a more interesting constant filled expression\n      (we don't, since we know our RHS is just an SSA name).  */\n-  VN_INFO (lhs)->has_constants = VN_INFO (rhs)->has_constants;\n-  VN_INFO (lhs)->expr = VN_INFO (rhs)->expr;\n+  if (TREE_CODE (rhs) == SSA_NAME)\n+    {\n+      VN_INFO (lhs)->has_constants = VN_INFO (rhs)->has_constants;\n+      VN_INFO (lhs)->expr = VN_INFO (rhs)->expr;\n+    }\n \n   return set_ssa_val_to (lhs, rhs);\n }"}]}