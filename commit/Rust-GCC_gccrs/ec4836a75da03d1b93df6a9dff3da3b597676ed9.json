{"sha": "ec4836a75da03d1b93df6a9dff3da3b597676ed9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM0ODM2YTc1ZGEwM2QxYjkzZGY2YTlkZmYzZGEzYjU5NzY3NmVkOQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-02-11T22:26:35Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-02-11T22:26:35Z"}, "message": "combine: More distribute_notes trouble (PR69737)\n\nPR64682 is a problem in distribute_notes, where it has trouble putting\na REG_DEAD note for a reg that is set twice in the right spot.  My fix\nfor that did the wrong thing for PR69567.  And then my attempted fix\nfor that one made PR64682 fail again.\n\nInstead, let's just lose the note in such complicated cases, like we\nalready do in certain similar cases.\n\n\n\tPR rtl-optimization/64682\n\tPR rtl-optimization/69567\n\tPR rtl-optimization/69737\n\t* combine.c (distribute_notes) <REG_DEAD>: If the register is set\n\tin I2 as well, just lose it.\n\nFrom-SVN: r233356", "tree": {"sha": "6427fe8f5f366cf98ea4068cf7ed38b06148268c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6427fe8f5f366cf98ea4068cf7ed38b06148268c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec4836a75da03d1b93df6a9dff3da3b597676ed9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec4836a75da03d1b93df6a9dff3da3b597676ed9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec4836a75da03d1b93df6a9dff3da3b597676ed9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec4836a75da03d1b93df6a9dff3da3b597676ed9/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "76fe932be367d60f45e8a69a83d3efcf271f6e63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76fe932be367d60f45e8a69a83d3efcf271f6e63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76fe932be367d60f45e8a69a83d3efcf271f6e63"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "35f8865d5485d49dbac0532eedf5cb3fb074ba40", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec4836a75da03d1b93df6a9dff3da3b597676ed9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec4836a75da03d1b93df6a9dff3da3b597676ed9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec4836a75da03d1b93df6a9dff3da3b597676ed9", "patch": "@@ -1,3 +1,11 @@\n+2016-02-11  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/64682\n+\tPR rtl-optimization/69567\n+\tPR rtl-optimization/69737\n+\t* combine.c (distribute_notes) <REG_DEAD>: If the register is set\n+\tin I2 as well, just lose it.\n+\n 2016-02-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_last_printed_arch_string):"}, {"sha": "24dcefa0bf6228e7903f4df3163a7df78ffa8ed9", "filename": "gcc/combine.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec4836a75da03d1b93df6a9dff3da3b597676ed9/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec4836a75da03d1b93df6a9dff3da3b597676ed9/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=ec4836a75da03d1b93df6a9dff3da3b597676ed9", "patch": "@@ -13901,7 +13901,6 @@ distribute_notes (rtx notes, rtx_insn *from_insn, rtx_insn *i3, rtx_insn *i2,\n \t    tem_insn = from_insn;\n \t  else\n \t    {\n-\t      tem_insn = i3;\n \t      if (from_insn\n \t\t  && CALL_P (from_insn)\n \t\t  && find_reg_fusage (from_insn, USE, XEXP (note, 0)))\n@@ -13910,21 +13909,20 @@ distribute_notes (rtx notes, rtx_insn *from_insn, rtx_insn *i3, rtx_insn *i2,\n \t\tplace = i3;\n \t      else if (i2 != 0 && next_nonnote_nondebug_insn (i2) == i3\n \t\t       && reg_referenced_p (XEXP (note, 0), PATTERN (i2)))\n-\t\t{\n-\t\t  place = i2;\n-\t\t  /* If the new I2 sets the same register that is marked dead\n-\t\t     in the note, the note now should not be put on I2, as the\n-\t\t     note refers to a previous incarnation of the reg.  */\n-\t\t  if (reg_set_p (XEXP (note, 0), PATTERN (i2)))\n-\t\t    tem_insn = i2;\n-\t\t}\n+\t\tplace = i2;\n \t      else if ((rtx_equal_p (XEXP (note, 0), elim_i2)\n \t\t\t&& !(i2mod\n \t\t\t     && reg_overlap_mentioned_p (XEXP (note, 0),\n \t\t\t\t\t\t\t i2mod_old_rhs)))\n \t\t       || rtx_equal_p (XEXP (note, 0), elim_i1)\n \t\t       || rtx_equal_p (XEXP (note, 0), elim_i0))\n \t\tbreak;\n+\t      tem_insn = i3;\n+\t      /* If the new I2 sets the same register that is marked dead\n+\t\t in the note, we do not know where to put the note.\n+\t\t Give up.  */\n+\t      if (i2 != 0 && reg_set_p (XEXP (note, 0), PATTERN (i2)))\n+\t\tbreak;\n \t    }\n \n \t  if (place == 0)"}]}