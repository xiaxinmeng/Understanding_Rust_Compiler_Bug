{"sha": "201678234c69a5acdd6e8d4a49fafe45e15cbb24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAxNjc4MjM0YzY5YTVhY2RkNmU4ZDRhNDlmYWZlNDVlMTVjYmIyNA==", "commit": {"author": {"name": "Andre Vehreschild", "email": "vehre@gmx.de", "date": "2014-12-05T14:15:27Z"}, "committer": {"name": "Dominique d'Humieres", "email": "dominiq@gcc.gnu.org", "date": "2014-12-05T14:15:27Z"}, "message": "re PR fortran/60414 (internal compiler error: tree check)\n\n2014-12-05  Andre Vehreschild  <vehre@gmx.de>\n\n\tPR fortran/60414\n\t* interface.c (compare_parameter): Remove class argument rank\n\tcheck short circuit.\n\n2014-12-05  Andre Vehreschild  <vehre@gmx.de>\n\n\tPR fortran/60414\n\t* gfortran.dg/unlimited_polymorphism_18.f90: New test.\n\nFrom-SVN: r218422", "tree": {"sha": "e3474f440687f0e9eac650644cd2032001bffa80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3474f440687f0e9eac650644cd2032001bffa80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/201678234c69a5acdd6e8d4a49fafe45e15cbb24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/201678234c69a5acdd6e8d4a49fafe45e15cbb24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/201678234c69a5acdd6e8d4a49fafe45e15cbb24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/201678234c69a5acdd6e8d4a49fafe45e15cbb24/comments", "author": {"login": "vehre", "id": 4761547, "node_id": "MDQ6VXNlcjQ3NjE1NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4761547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vehre", "html_url": "https://github.com/vehre", "followers_url": "https://api.github.com/users/vehre/followers", "following_url": "https://api.github.com/users/vehre/following{/other_user}", "gists_url": "https://api.github.com/users/vehre/gists{/gist_id}", "starred_url": "https://api.github.com/users/vehre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vehre/subscriptions", "organizations_url": "https://api.github.com/users/vehre/orgs", "repos_url": "https://api.github.com/users/vehre/repos", "events_url": "https://api.github.com/users/vehre/events{/privacy}", "received_events_url": "https://api.github.com/users/vehre/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a4bad955f8ab028190bbb4d3cf3c00721c26bfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a4bad955f8ab028190bbb4d3cf3c00721c26bfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a4bad955f8ab028190bbb4d3cf3c00721c26bfc"}], "stats": {"total": 84, "additions": 80, "deletions": 4}, "files": [{"sha": "6662284cc85ad250c34565b68c8b87e5b4bec5e1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/201678234c69a5acdd6e8d4a49fafe45e15cbb24/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/201678234c69a5acdd6e8d4a49fafe45e15cbb24/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=201678234c69a5acdd6e8d4a49fafe45e15cbb24", "patch": "@@ -1,3 +1,9 @@\n+2014-12-05  Andre Vehreschild  <vehre@gmx.de>\n+\n+\tPR fortran/60414\n+\t* interface.c (compare_parameter): Remove class argument rank\n+\tcheck short circuit.\n+\n 2014-12-05  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* error.c (gfc_diagnostic_build_locus_prefix): Use"}, {"sha": "b390dff6397dd8e82f82da39fc3af3367392ddb7", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/201678234c69a5acdd6e8d4a49fafe45e15cbb24/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/201678234c69a5acdd6e8d4a49fafe45e15cbb24/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=201678234c69a5acdd6e8d4a49fafe45e15cbb24", "patch": "@@ -2157,10 +2157,6 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n   if (symbol_rank (formal) == actual->rank || symbol_rank (formal) == -1)\n     return 1;\n \n-  if (actual->ts.type == BT_CLASS && CLASS_DATA (actual)->as\n-\t&& CLASS_DATA (actual)->as->rank == symbol_rank (formal))\n-    return 1;\n-\n   rank_check = where != NULL && !is_elemental && formal->as\n \t       && (formal->as->type == AS_ASSUMED_SHAPE\n \t\t   || formal->as->type == AS_DEFERRED)"}, {"sha": "24388b80c116794f4cfc7a6e5cdb1da4d75e105d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/201678234c69a5acdd6e8d4a49fafe45e15cbb24/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/201678234c69a5acdd6e8d4a49fafe45e15cbb24/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=201678234c69a5acdd6e8d4a49fafe45e15cbb24", "patch": "@@ -1,3 +1,8 @@\n+2014-12-05  Andre Vehreschild  <vehre@gmx.de>\n+\n+\tPR fortran/60414\n+\t* gfortran.dg/unlimited_polymorphism_18.f90: New test.\n+\n 2014-12-05  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \tPR target/64056"}, {"sha": "345fa6203c4176c2aaf273d1bc430e9e09cdcd9c", "filename": "gcc/testsuite/gfortran.dg/unlimited_polymorphic_18.f90", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/201678234c69a5acdd6e8d4a49fafe45e15cbb24/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_18.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/201678234c69a5acdd6e8d4a49fafe45e15cbb24/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_18.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_18.f90?ref=201678234c69a5acdd6e8d4a49fafe45e15cbb24", "patch": "@@ -0,0 +1,69 @@\n+! { dg-do run }\n+! Testing fix for\n+! PR fortran/60414\n+!\n+module m\n+    implicit none\n+    Type T\n+        real, public :: expectedScalar;\n+    contains\n+        procedure :: FCheck\n+        procedure :: FCheckArr\n+        generic :: Check => FCheck, FCheckArr\n+    end Type\n+\n+contains\n+\n+    subroutine FCheck(this,X)\n+        class(T) this\n+        class(*) X\n+        real :: r\n+        select type (X)\n+            type is (real)\n+                if ( abs (X - this%expectedScalar) > 0.0001 ) then\n+                    call abort()\n+                end if\n+            class default\n+                call abort ()\n+         end select\n+    end subroutine FCheck\n+\n+    subroutine FCheckArr(this,X)\n+        class(T) this\n+        class(*) X(:)\n+        integer i\n+        do i = 1,6\n+            this%expectedScalar = i - 1.0\n+            call this%FCheck(X(i))\n+        end do\n+    end subroutine FCheckArr\n+\n+    subroutine CheckTextVector(vec, n, scal)\n+        integer, intent(in) :: n\n+        class(*), intent(in) :: vec(n)\n+        class(*), intent(in) :: scal\n+        integer j\n+        Type(T) :: Tester\n+\n+        ! Check full vector\n+        call Tester%Check(vec)\n+        ! Check a scalar of the same class like the vector\n+        Tester%expectedScalar = 5.0\n+        call Tester%Check(scal)\n+        ! Check an element of the vector, which is a scalar\n+        j=3\n+        Tester%expectedScalar = 2.0\n+        call Tester%Check(vec(j))\n+\n+    end subroutine CheckTextVector\n+\n+end module\n+\n+program test\n+   use :: m\n+   implicit none\n+\n+   real :: vec(1:6) = (/ 0, 1, 2, 3, 4, 5 /)\n+   call checktextvector(vec, 6, 5.0)\n+end program test\n+"}]}