{"sha": "c5ab7f91109e1569bb63c38e2e35e701e5af17ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVhYjdmOTExMDllMTU2OWJiNjNjMzhlMmUzNWU3MDFlNWFmMTdlYw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2000-08-04T16:00:48Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2000-08-04T16:00:48Z"}, "message": "stddef.h: Don't declare wint_t unless __need_wint_t.\n\n\t* ginclude/stddef.h: Don't declare wint_t unless __need_wint_t.\n\t* c-common.h (enum c_tree_index): Add CTI_WINT_TYPE.\n\t(wint_type_node): Define.\n\t* c-decl.c (WINT_TYPE): Define.\n\t(init_decl_processing): Create the wint_type_node type.\n\t* c-common.c (T_WI): Define.\n\t(print_char_table): Use T_WI for %lc format.\n\nFrom-SVN: r35481", "tree": {"sha": "8c20d31a5a3346141ee1d77b93b4c4c72c1ee29c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c20d31a5a3346141ee1d77b93b4c4c72c1ee29c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5ab7f91109e1569bb63c38e2e35e701e5af17ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5ab7f91109e1569bb63c38e2e35e701e5af17ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5ab7f91109e1569bb63c38e2e35e701e5af17ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5ab7f91109e1569bb63c38e2e35e701e5af17ec/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1fe1ac0a83c665fb4826cc7667e32baef3ec93c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1fe1ac0a83c665fb4826cc7667e32baef3ec93c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1fe1ac0a83c665fb4826cc7667e32baef3ec93c"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "2a0d141379168a59218fa8acff4b9915f839be1d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ab7f91109e1569bb63c38e2e35e701e5af17ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ab7f91109e1569bb63c38e2e35e701e5af17ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c5ab7f91109e1569bb63c38e2e35e701e5af17ec", "patch": "@@ -1,3 +1,13 @@\n+2000-08-04  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* ginclude/stddef.h: Don't declare wint_t unless __need_wint_t.\n+\t* c-common.h (enum c_tree_index): Add CTI_WINT_TYPE.\n+\t(wint_type_node): Define.\n+\t* c-decl.c (WINT_TYPE): Define.\n+\t(init_decl_processing): Create the wint_type_node type.\n+\t* c-common.c (T_WI): Define.\n+\t(print_char_table): Use T_WI for %lc format.\n+\n 2000-08-04  Bruce Korb  <bkorb@gnu.org>\n \n \t* fixinc/:  Verified that the MSDOS patch does not break"}, {"sha": "a94a8092beba14c821260adf84dba2879734c7b2", "filename": "gcc/c-common.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ab7f91109e1569bb63c38e2e35e701e5af17ec/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ab7f91109e1569bb63c38e2e35e701e5af17ec/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=c5ab7f91109e1569bb63c38e2e35e701e5af17ec", "patch": "@@ -1193,6 +1193,7 @@ strip_attrs (specs_attrs)\n #define T_UC\t&unsigned_char_type_node\n #define T_V\t&void_type_node\n #define T_W\t&wchar_type_node\n+#define T_WI\t&wint_type_node\n #define T_ST    &sizetype\n \n typedef struct {\n@@ -1229,7 +1230,7 @@ static format_char_info print_char_table[] = {\n /* A GNU extension.  */\n   { \"m\",\t0,\tT_V,\tNULL,\tNULL,\tNULL,\tNULL,\tNULL,\tNULL,\t\"-wp\"\t\t},\n   { \"feEgGaA\",\t0,\tT_D,\tNULL,\tNULL,\tNULL,\tNULL,\tT_LD,\tNULL,\t\"-wp0 +#\"\t},\n-  { \"c\",\t0,\tT_I,\tNULL,\tNULL,\tT_W,\tNULL,\tNULL,\tNULL,\t\"-w\"\t\t},\n+  { \"c\",\t0,\tT_I,\tNULL,\tNULL,\tT_WI,\tNULL,\tNULL,\tNULL,\t\"-w\"\t\t},\n   { \"C\",\t0,\tT_W,\tNULL,\tNULL,\tNULL,\tNULL,\tNULL,\tNULL,\t\"-w\"\t\t},\n   { \"s\",\t1,\tT_C,\tNULL,\tNULL,\tT_W,\tNULL,\tNULL,\tNULL,\t\"-wp\"\t\t},\n   { \"S\",\t1,\tT_W,\tNULL,\tNULL,\tNULL,\tNULL,\tNULL,\tNULL,\t\"-wp\"\t\t},"}, {"sha": "c8a9569809e8fede04d7781c7c3f3d131dc8e415", "filename": "gcc/c-common.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ab7f91109e1569bb63c38e2e35e701e5af17ec/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ab7f91109e1569bb63c38e2e35e701e5af17ec/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=c5ab7f91109e1569bb63c38e2e35e701e5af17ec", "patch": "@@ -91,6 +91,7 @@ enum c_tree_index\n     CTI_WCHAR_TYPE,\n     CTI_SIGNED_WCHAR_TYPE,\n     CTI_UNSIGNED_WCHAR_TYPE,\n+    CTI_WINT_TYPE,\n     CTI_WIDEST_INT_LIT_TYPE,\n     CTI_WIDEST_UINT_LIT_TYPE,\n \n@@ -122,6 +123,7 @@ enum c_tree_index\n #define wchar_type_node\t\t\tc_global_trees[CTI_WCHAR_TYPE]\n #define signed_wchar_type_node\t\tc_global_trees[CTI_SIGNED_WCHAR_TYPE]\n #define unsigned_wchar_type_node\tc_global_trees[CTI_UNSIGNED_WCHAR_TYPE]\n+#define wint_type_node\t\t\tc_global_trees[CTI_WINT_TYPE]\n #define widest_integer_literal_type_node c_global_trees[CTI_WIDEST_INT_LIT_TYPE]\n #define widest_unsigned_literal_type_node c_global_trees[CTI_WIDEST_UINT_LIT_TYPE]\n "}, {"sha": "886e3740f8262b5896844640cf7732c2b86ea2ce", "filename": "gcc/c-decl.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ab7f91109e1569bb63c38e2e35e701e5af17ec/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ab7f91109e1569bb63c38e2e35e701e5af17ec/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=c5ab7f91109e1569bb63c38e2e35e701e5af17ec", "patch": "@@ -74,6 +74,10 @@ enum decl_context\n #ifndef WCHAR_TYPE\n #define WCHAR_TYPE \"int\"\n #endif\n+\n+#ifndef WINT_TYPE\n+#define WINT_TYPE \"unsigned int\"\n+#endif\n \f\n /* Do GC.  */\n int ggc_p = 1;\n@@ -3037,6 +3041,8 @@ init_decl_processing ()\n   signed_wchar_type_node = signed_type (wchar_type_node);\n   unsigned_wchar_type_node = unsigned_type (wchar_type_node);\n \n+  wint_type_node = TREE_TYPE (IDENTIFIER_GLOBAL_VALUE (get_identifier (WINT_TYPE)));\n+\n   boolean_type_node = integer_type_node;\n   boolean_true_node = integer_one_node;\n   boolean_false_node = integer_zero_node;"}, {"sha": "661d95d07856755a608440db3e5f58f73e257ddb", "filename": "gcc/ginclude/stddef.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5ab7f91109e1569bb63c38e2e35e701e5af17ec/gcc%2Fginclude%2Fstddef.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5ab7f91109e1569bb63c38e2e35e701e5af17ec/gcc%2Fginclude%2Fstddef.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fstddef.h?ref=c5ab7f91109e1569bb63c38e2e35e701e5af17ec", "patch": "@@ -302,7 +302,7 @@ typedef __WCHAR_TYPE__ wchar_t;\n #undef\t__need_wchar_t\n #endif /* _STDDEF_H or __need_wchar_t.  */\n \n-#if defined (_STDDEF_H) || defined (__need_wint_t)\n+#if defined (__need_wint_t)\n #ifndef _WINT_T\n #define _WINT_T\n "}]}