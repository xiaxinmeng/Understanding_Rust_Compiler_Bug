{"sha": "742048af50e79b4e0dabba3f4cf2e5779bdc273a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQyMDQ4YWY1MGU3OWI0ZTBkYWJiYTNmNGNmMmU1Nzc5YmRjMjczYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-02-21T16:36:40Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-09T08:09:00Z"}, "message": "[Ada] Refine implementation of AI05-0149 missing conversion checks\n\n2020-06-09  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* sem_type.adb (Covers): Fix implementation of AI05-0149.\n\t* sem_res.adb: Fix typo.", "tree": {"sha": "07cd6e078d988f6f8a03a001e8c3c1d982785f12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07cd6e078d988f6f8a03a001e8c3c1d982785f12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/742048af50e79b4e0dabba3f4cf2e5779bdc273a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/742048af50e79b4e0dabba3f4cf2e5779bdc273a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/742048af50e79b4e0dabba3f4cf2e5779bdc273a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/742048af50e79b4e0dabba3f4cf2e5779bdc273a/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54025948c0a4cad05cc22fe67d104e5e3ac9b0de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54025948c0a4cad05cc22fe67d104e5e3ac9b0de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54025948c0a4cad05cc22fe67d104e5e3ac9b0de"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "6e26ffb3c45d5b7a77160603f7a15af889c18bf2", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/742048af50e79b4e0dabba3f4cf2e5779bdc273a/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/742048af50e79b4e0dabba3f4cf2e5779bdc273a/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=742048af50e79b4e0dabba3f4cf2e5779bdc273a", "patch": "@@ -2852,7 +2852,7 @@ package body Sem_Res is\n                return;\n \n             --  Under relaxed RM semantics silently replace occurrences of null\n-            --  by System.Address_Null.\n+            --  by System.Null_Address.\n \n             elsif Null_To_Null_Address_Convert_OK (N, Typ) then\n                Replace_Null_By_Null_Address (N);"}, {"sha": "af0687cf436e82a5fa8af234644abe644616f868", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/742048af50e79b4e0dabba3f4cf2e5779bdc273a/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/742048af50e79b4e0dabba3f4cf2e5779bdc273a/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=742048af50e79b4e0dabba3f4cf2e5779bdc273a", "patch": "@@ -1021,15 +1021,17 @@ package body Sem_Type is\n \n       --  Ada 2012 (AI05-0149): Allow an anonymous access type in the context\n       --  of a named general access type. An implicit conversion will be\n-      --  applied. For the resolution, one designated type must cover the\n-      --  other.\n+      --  applied. For the resolution, the designated types must match if\n+      --  untagged; further, if the designated type is tagged, the designated\n+      --  type of the anonymous access type shall be covered by the designated\n+      --  type of the named access type.\n \n       elsif Ada_Version >= Ada_2012\n         and then Ekind (BT1) = E_General_Access_Type\n         and then Ekind (BT2) = E_Anonymous_Access_Type\n-        and then (Covers (Designated_Type (T1), Designated_Type (T2))\n-                    or else\n-                  Covers (Designated_Type (T2), Designated_Type (T1)))\n+        and then Covers (Designated_Type (T1), Designated_Type (T2))\n+        and then (Is_Class_Wide_Type (Designated_Type (T1)) >=\n+                  Is_Class_Wide_Type (Designated_Type (T2)))\n       then\n          return True;\n "}]}