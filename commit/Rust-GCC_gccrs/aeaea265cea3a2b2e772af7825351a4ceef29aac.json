{"sha": "aeaea265cea3a2b2e772af7825351a4ceef29aac", "node_id": "C_kwDOANBUbNoAKGFlYWVhMjY1Y2VhM2EyYjJlNzcyYWY3ODI1MzUxYTRjZWVmMjlhYWM", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-08-31T14:51:09Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-09-28T19:30:59Z"}, "message": "libstdc++: Define macro before it is first checked\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/atomic_wait.h (_GLIBCXX_HAVE_PLATFORM_WAIT):\n\tDefine before first attempt to check it.", "tree": {"sha": "5a04fc109391cdcf3f5b15ffcb601367ee2c06e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a04fc109391cdcf3f5b15ffcb601367ee2c06e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aeaea265cea3a2b2e772af7825351a4ceef29aac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeaea265cea3a2b2e772af7825351a4ceef29aac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeaea265cea3a2b2e772af7825351a4ceef29aac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeaea265cea3a2b2e772af7825351a4ceef29aac/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bec11673c4349fb330d08f1147657aa7a49ce389", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bec11673c4349fb330d08f1147657aa7a49ce389", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bec11673c4349fb330d08f1147657aa7a49ce389"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "35c92644146714ff3418891a5d06dc2b23edd7b0", "filename": "libstdc++-v3/include/bits/atomic_wait.h", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeaea265cea3a2b2e772af7825351a4ceef29aac/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_wait.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeaea265cea3a2b2e772af7825351a4ceef29aac/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_wait.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_wait.h?ref=aeaea265cea3a2b2e772af7825351a4ceef29aac", "patch": "@@ -56,9 +56,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   namespace __detail\n   {\n #ifdef _GLIBCXX_HAVE_LINUX_FUTEX\n+#define _GLIBCXX_HAVE_PLATFORM_WAIT 1\n     using __platform_wait_t = int;\n     static constexpr size_t __platform_wait_alignment = 4;\n #else\n+// define _GLIBCX_HAVE_PLATFORM_WAIT and implement __platform_wait()\n+// and __platform_notify() if there is a more efficient primitive supported\n+// by the platform (e.g. __ulock_wait()/__ulock_wake()) which is better than\n+// a mutex/condvar based wait.\n     using __platform_wait_t = uint64_t;\n     static constexpr size_t __platform_wait_alignment\n       = __alignof__(__platform_wait_t);\n@@ -70,15 +75,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #ifdef _GLIBCXX_HAVE_PLATFORM_WAIT\n       = is_scalar_v<_Tp>\n \t&& ((sizeof(_Tp) == sizeof(__detail::__platform_wait_t))\n-\t&& (alignof(_Tp*) >= __platform_wait_alignment));\n+\t&& (alignof(_Tp*) >= __detail::__platform_wait_alignment));\n #else\n       = false;\n #endif\n \n   namespace __detail\n   {\n #ifdef _GLIBCXX_HAVE_LINUX_FUTEX\n-#define _GLIBCXX_HAVE_PLATFORM_WAIT 1\n     enum class __futex_wait_flags : int\n     {\n #ifdef _GLIBCXX_HAVE_LINUX_FUTEX_PRIVATE\n@@ -118,11 +122,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t static_cast<int>(__futex_wait_flags::__wake_private),\n \t\t __all ? INT_MAX : 1);\n       }\n-#else\n-// define _GLIBCX_HAVE_PLATFORM_WAIT and implement __platform_wait()\n-// and __platform_notify() if there is a more efficient primitive supported\n-// by the platform (e.g. __ulock_wait()/__ulock_wake()) which is better than\n-// a mutex/condvar based wait\n #endif\n \n     inline void\n@@ -331,7 +330,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n \t    if constexpr (__platform_wait_uses_type<_Up>)\n \t      {\n-\t\t__val == __old;\n+\t\t__builtin_memcpy(&__val, &__old, sizeof(__val));\n \t      }\n \t    else\n \t      {"}]}