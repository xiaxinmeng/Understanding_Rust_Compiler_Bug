{"sha": "acf8677f4e8df04a0285d37c653eb69d12e0cb64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNmODY3N2Y0ZThkZjA0YTAyODVkMzdjNjUzZWI2OWQxMmUwY2I2NA==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb@suse.de", "date": "2004-07-05T07:22:45Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-07-05T07:22:45Z"}, "message": "rtl.h (struct rtx_def): Remove the integrated flag.\n\n\t* rtl.h (struct rtx_def): Remove the integrated flag.\n\tUse the return_val flag for MEM_SCALAR_P.\n\tReshuffle and update flags in CLEAR_RTX_FLAGS\n\nFrom-SVN: r84109", "tree": {"sha": "873c2f42ad5a1b4c9c7a9bc0578d0021f4e63898", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/873c2f42ad5a1b4c9c7a9bc0578d0021f4e63898"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acf8677f4e8df04a0285d37c653eb69d12e0cb64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acf8677f4e8df04a0285d37c653eb69d12e0cb64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acf8677f4e8df04a0285d37c653eb69d12e0cb64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acf8677f4e8df04a0285d37c653eb69d12e0cb64/comments", "author": null, "committer": null, "parents": [{"sha": "e0ec4c3b6bd191bc92fdab60bd4636480d68f870", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0ec4c3b6bd191bc92fdab60bd4636480d68f870", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0ec4c3b6bd191bc92fdab60bd4636480d68f870"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "e609cab28da8f73ef0b913f5677897ba282aa71d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acf8677f4e8df04a0285d37c653eb69d12e0cb64/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acf8677f4e8df04a0285d37c653eb69d12e0cb64/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=acf8677f4e8df04a0285d37c653eb69d12e0cb64", "patch": "@@ -1,3 +1,9 @@\n+2004-07-05  Steven Bosscher  <stevenb@suse.de>\n+\n+\t* rtl.h (struct rtx_def): Remove the integrated flag.\n+\tUse the return_val flag for MEM_SCALAR_P.\n+\tReshuffle and update flags in CLEAR_RTX_FLAGS.\n+\n 2004-07-05  Richard Sandiford  <rsandifo@redhat.com>\n \n \tPR target/16357"}, {"sha": "759f3363408fe6fb01d0f0a45d2ef29816c43c16", "filename": "gcc/rtl.h", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acf8677f4e8df04a0285d37c653eb69d12e0cb64/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acf8677f4e8df04a0285d37c653eb69d12e0cb64/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=acf8677f4e8df04a0285d37c653eb69d12e0cb64", "patch": "@@ -240,10 +240,6 @@ struct rtx_def GTY((chain_next (\"RTX_NEXT (&%h)\"),\n      1 in a SYMBOL_REF, means that emit_library_call\n      has used it as the function.  */\n   unsigned int used : 1;\n-  /* FIXME.  This should be unused now that we do inlinining on trees,\n-     but it is now being used for MEM_SCALAR_P.  It should be renamed,\n-     or some other field should be overloaded.  */\n-  unsigned integrated : 1;\n   /* 1 in an INSN or a SET if this rtx is related to the call frame,\n      either changing how we compute the frame address or saving and\n      restoring registers in the prologue and epilogue.\n@@ -252,6 +248,7 @@ struct rtx_def GTY((chain_next (\"RTX_NEXT (&%h)\"),\n      constant string pool.  */\n   unsigned frame_related : 1;\n   /* 1 in a REG or PARALLEL that is the current function's return value.\n+     1 in a MEM if it refers to a scalar.\n      1 in a SYMBOL_REF for a weak symbol.  */\n   unsigned return_val : 1;\n \n@@ -597,14 +594,14 @@ extern void rtl_check_failed_flag (const char *, rtx, const char *,\n #define CLEAR_RTX_FLAGS(RTX)\t\\\n do {\t\t\t\t\\\n   rtx const _rtx = (RTX);\t\\\n-  _rtx->call = 0;\t\t\\\n-  _rtx->frame_related = 0;\t\\\n-  _rtx->in_struct = 0;\t\t\\\n   _rtx->jump = 0;\t\t\\\n+  _rtx->call = 0;\t\t\\\n   _rtx->unchanging = 0;\t\t\\\n-  _rtx->used = 0;\t\t\\\n   _rtx->volatil = 0;\t\t\\\n-  _rtx->unused_flag = 0;\t\\\n+  _rtx->in_struct = 0;\t\t\\\n+  _rtx->used = 0;\t\t\\\n+  _rtx->frame_related = 0;\t\\\n+  _rtx->return_val = 0;\t\t\\\n } while (0)\n \n #define XINT(RTX, N)\t(RTL_CHECK2 (RTX, N, 'i', 'n').rtint)\n@@ -1280,10 +1277,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define MEM_IN_STRUCT_P(RTX)\t\t\t\t\t\t\\\n   (RTL_FLAG_CHECK1(\"MEM_IN_STRUCT_P\", (RTX), MEM)->in_struct)\n \n-/* 1 if RTX is a mem that refers to a scalar.  If zero, RTX may or may\n+/* 1 if RTX is a MEM that refers to a scalar.  If zero, RTX may or may\n    not refer to a scalar.  */\n #define MEM_SCALAR_P(RTX)\t\t\t\t\t\t\\\n-  (RTL_FLAG_CHECK1(\"MEM_SCALAR_P\", (RTX), MEM)->integrated)\n+  (RTL_FLAG_CHECK1(\"MEM_SCALAR_P\", (RTX), MEM)->return_val)\n \n /* 1 if RTX is a mem that cannot trap.  */\n #define MEM_NOTRAP_P(RTX) \\"}]}