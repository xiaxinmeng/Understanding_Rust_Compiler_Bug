{"sha": "dd01cd0ca29b687337661abd9870c32a287de94b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQwMWNkMGNhMjliNjg3MzM3NjYxYWJkOTg3MGMzMmEyODdkZTk0Yg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2017-03-09T07:53:29Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2017-03-09T07:53:29Z"}, "message": "S/390: Add missing constraints in builtin patterns\n\ngcc/ChangeLog:\n\n2017-03-09  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* config/s390/vx-builtins.md (\"vfee<mode>\", \"vfeez<mode>\")\n\t(\"vfenez<mode>\"): Add missing constraints.\n\nFrom-SVN: r245987", "tree": {"sha": "21e0790cf251fd99f89fb3fe2ad5e3c6c22da1a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21e0790cf251fd99f89fb3fe2ad5e3c6c22da1a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd01cd0ca29b687337661abd9870c32a287de94b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd01cd0ca29b687337661abd9870c32a287de94b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd01cd0ca29b687337661abd9870c32a287de94b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd01cd0ca29b687337661abd9870c32a287de94b/comments", "author": null, "committer": null, "parents": [{"sha": "89262ec6bdb835436ecfa715397bae078035fe9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89262ec6bdb835436ecfa715397bae078035fe9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89262ec6bdb835436ecfa715397bae078035fe9e"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "de662f1e349575db0d4d7760b419228fc53082ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd01cd0ca29b687337661abd9870c32a287de94b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd01cd0ca29b687337661abd9870c32a287de94b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd01cd0ca29b687337661abd9870c32a287de94b", "patch": "@@ -1,3 +1,8 @@\n+2017-03-09  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* config/s390/vx-builtins.md (\"vfee<mode>\", \"vfeez<mode>\")\n+\t(\"vfenez<mode>\"): Add missing constraints.\n+\n 2017-03-08  Martin Sebor  <msebor@redhat.com>\n \n \tPR target/79928"}, {"sha": "6aff378810e204ff35871d1e4bb2bf48d92c1214", "filename": "gcc/config/s390/vx-builtins.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd01cd0ca29b687337661abd9870c32a287de94b/gcc%2Fconfig%2Fs390%2Fvx-builtins.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd01cd0ca29b687337661abd9870c32a287de94b/gcc%2Fconfig%2Fs390%2Fvx-builtins.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvx-builtins.md?ref=dd01cd0ca29b687337661abd9870c32a287de94b", "patch": "@@ -1351,9 +1351,9 @@\n \n ; vfeeb, vfeeh, vfeef\n (define_insn \"vfee<mode>\"\n-  [(set (match_operand:VI_HW_QHS                    0 \"register_operand\" \"\")\n-\t(unspec:VI_HW_QHS [(match_operand:VI_HW_QHS 1 \"register_operand\" \"\")\n-\t\t\t   (match_operand:VI_HW_QHS 2 \"register_operand\" \"\")\n+  [(set (match_operand:VI_HW_QHS                    0 \"register_operand\" \"=v\")\n+\t(unspec:VI_HW_QHS [(match_operand:VI_HW_QHS 1 \"register_operand\"  \"v\")\n+\t\t\t   (match_operand:VI_HW_QHS 2 \"register_operand\"  \"v\")\n \t\t\t   (const_int 0)]\n \t\t\t  UNSPEC_VEC_VFEE))]\n   \"TARGET_VX\"\n@@ -1362,9 +1362,9 @@\n \n ; vfeezb, vfeezh, vfeezf\n (define_insn \"vfeez<mode>\"\n-  [(set (match_operand:VI_HW_QHS                    0 \"register_operand\" \"\")\n-\t(unspec:VI_HW_QHS [(match_operand:VI_HW_QHS 1 \"register_operand\" \"\")\n-\t\t\t   (match_operand:VI_HW_QHS 2 \"register_operand\" \"\")\n+  [(set (match_operand:VI_HW_QHS                    0 \"register_operand\" \"=v\")\n+\t(unspec:VI_HW_QHS [(match_operand:VI_HW_QHS 1 \"register_operand\"  \"v\")\n+\t\t\t   (match_operand:VI_HW_QHS 2 \"register_operand\"  \"v\")\n \t\t\t   (const_int VSTRING_FLAG_ZS)]\n \t\t\t  UNSPEC_VEC_VFEE))]\n   \"TARGET_VX\"\n@@ -1423,9 +1423,9 @@\n \n ; vfenezb, vfenezh, vfenezf\n (define_insn \"vfenez<mode>\"\n-  [(set (match_operand:VI_HW_QHS                    0 \"register_operand\" \"\")\n-\t(unspec:VI_HW_QHS [(match_operand:VI_HW_QHS 1 \"register_operand\" \"\")\n-\t\t\t   (match_operand:VI_HW_QHS 2 \"register_operand\" \"\")\n+  [(set (match_operand:VI_HW_QHS                    0 \"register_operand\" \"=v\")\n+\t(unspec:VI_HW_QHS [(match_operand:VI_HW_QHS 1 \"register_operand\"  \"v\")\n+\t\t\t   (match_operand:VI_HW_QHS 2 \"register_operand\"  \"v\")\n \t\t\t   (const_int VSTRING_FLAG_ZS)]\n \t\t\t  UNSPEC_VEC_VFENE))]\n   \"TARGET_VX\""}]}