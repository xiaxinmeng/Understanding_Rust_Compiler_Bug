{"sha": "f145ed6b9019abf219cdda108cc08f867b586611", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE0NWVkNmI5MDE5YWJmMjE5Y2RkYTEwOGNjMDhmODY3YjU4NjYxMQ==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.ch", "date": "2003-11-08T18:32:16Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2003-11-08T18:32:16Z"}, "message": "cls_double.c: Do a check on the result.\n\n2003-11-08  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/libffi.call/cls_double.c: Do a check on the result.\n\t* testsuite/libffi.call/cls_uchar.c: Likewise.\n\t* testsuite/libffi.call/cls_uint.c: Likewise.\n\t* testsuite/libffi.call/cls_ulonglong.c: Likewise.\n\t* testsuite/libffi.call/cls_ushort.c: Likewise.\n\t* testsuite/libffi.call/return_sc.c: Cleanup whitespaces.\n\nFrom-SVN: r73369", "tree": {"sha": "6d391a6b55159e70fee7fa8b28cbea674757c1e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d391a6b55159e70fee7fa8b28cbea674757c1e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f145ed6b9019abf219cdda108cc08f867b586611", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f145ed6b9019abf219cdda108cc08f867b586611", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f145ed6b9019abf219cdda108cc08f867b586611", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f145ed6b9019abf219cdda108cc08f867b586611/comments", "author": null, "committer": null, "parents": [{"sha": "a37336cf735255f3856b265bf40cf911466fd82b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a37336cf735255f3856b265bf40cf911466fd82b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a37336cf735255f3856b265bf40cf911466fd82b"}], "stats": {"total": 48, "additions": 30, "deletions": 18}, "files": [{"sha": "8546b9a3555ae378c7a05cd10dd1bc96c6c3557c", "filename": "libffi/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f145ed6b9019abf219cdda108cc08f867b586611/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f145ed6b9019abf219cdda108cc08f867b586611/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=f145ed6b9019abf219cdda108cc08f867b586611", "patch": "@@ -1,3 +1,12 @@\n+2003-11-08  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* testsuite/libffi.call/cls_double.c: Do a check on the result.\n+\t* testsuite/libffi.call/cls_uchar.c: Likewise.\n+\t* testsuite/libffi.call/cls_uint.c: Likewise.\n+\t* testsuite/libffi.call/cls_ulonglong.c: Likewise.\n+\t* testsuite/libffi.call/cls_ushort.c: Likewise.\n+\t* testsuite/libffi.call/return_sc.c: Cleanup whitespaces.\n+\n 2003-11-06  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* src/prep_cif.c (ffi_prep_cif): Move the validity check after"}, {"sha": "2bfc6432f2f6c8f7084ebc17ca76274c4d1fced3", "filename": "libffi/testsuite/libffi.call/cls_double.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f145ed6b9019abf219cdda108cc08f867b586611/libffi%2Ftestsuite%2Flibffi.call%2Fcls_double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f145ed6b9019abf219cdda108cc08f867b586611/libffi%2Ftestsuite%2Flibffi.call%2Fcls_double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_double.c?ref=f145ed6b9019abf219cdda108cc08f867b586611", "patch": "@@ -23,7 +23,7 @@ int main (void)\n   static ffi_closure cl;\n   ffi_closure *pcl = &cl;\n   ffi_type * cl_arg_types[2];\n-\n+  double res;\n \n   cl_arg_types[0] = &ffi_type_double;\n   cl_arg_types[1] = NULL;\n@@ -34,7 +34,8 @@ int main (void)\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_ret_double_fn, NULL)  == FFI_OK);\n \n-  (*((cls_ret_double)pcl))(21474.789);\n+  res = (*((cls_ret_double)pcl))(21474.789);\n   /* { dg-output \"21474.789000: 21474.789000\" } */\n+  CHECK(res == 21474.789000);\n   exit(0);\n }"}, {"sha": "dfa4d97a9b954f0d2e5d05d1eff6ad597f58aa0a", "filename": "libffi/testsuite/libffi.call/cls_uchar.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f145ed6b9019abf219cdda108cc08f867b586611/libffi%2Ftestsuite%2Flibffi.call%2Fcls_uchar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f145ed6b9019abf219cdda108cc08f867b586611/libffi%2Ftestsuite%2Flibffi.call%2Fcls_uchar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_uchar.c?ref=f145ed6b9019abf219cdda108cc08f867b586611", "patch": "@@ -22,7 +22,7 @@ int main (void)\n   static ffi_closure cl;\n   ffi_closure *pcl = &cl;\n   ffi_type * cl_arg_types[2];\n-\n+  unsigned char res;\n \n   cl_arg_types[0] = &ffi_type_uchar;\n   cl_arg_types[1] = NULL;\n@@ -33,8 +33,8 @@ int main (void)\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_ret_uchar_fn, NULL)  == FFI_OK);\n \n-  (*((cls_ret_uchar)pcl))(127);\n+  res = (*((cls_ret_uchar)pcl))(127);\n   /* { dg-output \"127: 127\" } */\n-\n+  CHECK(res == 127);\n   exit(0);\n }"}, {"sha": "684002217ce8c12391cc1c121de2fbab90ca8c48", "filename": "libffi/testsuite/libffi.call/cls_uint.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f145ed6b9019abf219cdda108cc08f867b586611/libffi%2Ftestsuite%2Flibffi.call%2Fcls_uint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f145ed6b9019abf219cdda108cc08f867b586611/libffi%2Ftestsuite%2Flibffi.call%2Fcls_uint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_uint.c?ref=f145ed6b9019abf219cdda108cc08f867b586611", "patch": "@@ -23,7 +23,7 @@ int main (void)\n   static ffi_closure cl;\n   ffi_closure *pcl = &cl;\n   ffi_type * cl_arg_types[2];\n-\n+  unsigned int res;\n \n   cl_arg_types[0] = &ffi_type_uint32;\n   cl_arg_types[1] = NULL;\n@@ -34,8 +34,8 @@ int main (void)\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_ret_uint_fn, NULL)  == FFI_OK);\n \n-  (*((cls_ret_uint)pcl))(2147483647);\n+  res = (*((cls_ret_uint)pcl))(2147483647);\n   /* { dg-output \"2147483647: 2147483647\" } */\n-\n+  CHECK(res == 2147483647);\n   exit(0);\n }"}, {"sha": "8d1a74d7705b24733d95caa4b8d8f50e05d35844", "filename": "libffi/testsuite/libffi.call/cls_ulonglong.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f145ed6b9019abf219cdda108cc08f867b586611/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ulonglong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f145ed6b9019abf219cdda108cc08f867b586611/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ulonglong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ulonglong.c?ref=f145ed6b9019abf219cdda108cc08f867b586611", "patch": "@@ -23,6 +23,7 @@ int main (void)\n   static ffi_closure cl;\n   ffi_closure *pcl = &cl;\n   ffi_type * cl_arg_types[2];\n+  unsigned long long res;\n \n   cl_arg_types[0] = &ffi_type_uint64;\n   cl_arg_types[1] = NULL;\n@@ -31,10 +32,11 @@ int main (void)\n   CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1,\n \t\t     &ffi_type_uint64, cl_arg_types) == FFI_OK);\n   CHECK(ffi_prep_closure(pcl, &cif, cls_ret_ulonglong_fn, NULL)  == FFI_OK);\n-  (*((cls_ret_ulonglong)pcl))(214LL);\n+  res = (*((cls_ret_ulonglong)pcl))(214LL);\n   /* { dg-output \"214: 214\" } */\n-  (*((cls_ret_ulonglong)pcl))(9223372035854775808LL);\n+  CHECK(res == 214LL);\n+  res = (*((cls_ret_ulonglong)pcl))(9223372035854775808LL);\n   /* { dg-output \"\\n9223372035854775808: 9223372035854775808\" } */\n-\n+  CHECK(res == 9223372035854775808LL);\n   exit(0);\n }"}, {"sha": "401ff77be720ff145e1abf76f90c95e634973c2a", "filename": "libffi/testsuite/libffi.call/cls_ushort.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f145ed6b9019abf219cdda108cc08f867b586611/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ushort.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f145ed6b9019abf219cdda108cc08f867b586611/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ushort.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Fcls_ushort.c?ref=f145ed6b9019abf219cdda108cc08f867b586611", "patch": "@@ -23,7 +23,7 @@ int main (void)\n   static ffi_closure cl;\n   ffi_closure *pcl = &cl;\n   ffi_type * cl_arg_types[2];\n-\n+  unsigned short res;\n \n   cl_arg_types[0] = &ffi_type_ushort;\n   cl_arg_types[1] = NULL;\n@@ -34,8 +34,8 @@ int main (void)\n \n   CHECK(ffi_prep_closure(pcl, &cif, cls_ret_ushort_fn, NULL)  == FFI_OK);\n \n-  (*((cls_ret_ushort)pcl))(65535);\n+  res = (*((cls_ret_ushort)pcl))(65535);\n   /* { dg-output \"65535: 65535\" } */\n-\n+  CHECK(res == 65535);\n   exit(0);\n }"}, {"sha": "e528a8467b038a2f712012e8c9bcc42b78dc5ff4", "filename": "libffi/testsuite/libffi.call/return_sc.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f145ed6b9019abf219cdda108cc08f867b586611/libffi%2Ftestsuite%2Flibffi.call%2Freturn_sc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f145ed6b9019abf219cdda108cc08f867b586611/libffi%2Ftestsuite%2Flibffi.call%2Freturn_sc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.call%2Freturn_sc.c?ref=f145ed6b9019abf219cdda108cc08f867b586611", "patch": "@@ -22,12 +22,12 @@ int main (void)\n \n   args[0] = &ffi_type_schar;\n   values[0] = &sc;\n-  \n+\n   /* Initialize the cif */\n-  CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1, \n+  CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1,\n \t\t     &ffi_type_schar, args) == FFI_OK);\n-  \n-  for (sc = (signed char) -127; \n+\n+  for (sc = (signed char) -127;\n        sc < (signed char) 127; sc++)\n     {\n       ul++;"}]}