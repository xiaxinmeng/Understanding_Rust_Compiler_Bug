{"sha": "fa1ae56a2f35be0eaeaf1fe453a9e5a9f844c63f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmExYWU1NmEyZjM1YmUwZWFlYWYxZmU0NTNhOWU1YTlmODQ0YzYzZg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-06-07T15:35:40Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-06-07T15:35:40Z"}, "message": "I love SVN.\n\nFrom-SVN: r248988", "tree": {"sha": "795191a3a224c0148bc5601fe37ed6073542cf71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/795191a3a224c0148bc5601fe37ed6073542cf71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa1ae56a2f35be0eaeaf1fe453a9e5a9f844c63f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa1ae56a2f35be0eaeaf1fe453a9e5a9f844c63f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa1ae56a2f35be0eaeaf1fe453a9e5a9f844c63f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa1ae56a2f35be0eaeaf1fe453a9e5a9f844c63f/comments", "author": null, "committer": null, "parents": [{"sha": "be9596fe8f5dc1b492971b6ecd52c17e9855f5c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be9596fe8f5dc1b492971b6ecd52c17e9855f5c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be9596fe8f5dc1b492971b6ecd52c17e9855f5c0"}], "stats": {"total": 1212, "additions": 0, "deletions": 1212}, "files": [{"sha": "3da9a6ecff23369fab8703556b8498dab69a9508", "filename": "gcc/config/rs6000/e500.h", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9596fe8f5dc1b492971b6ecd52c17e9855f5c0/gcc%2Fconfig%2Frs6000%2Fe500.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9596fe8f5dc1b492971b6ecd52c17e9855f5c0/gcc%2Fconfig%2Frs6000%2Fe500.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500.h?ref=be9596fe8f5dc1b492971b6ecd52c17e9855f5c0", "patch": "@@ -1,45 +0,0 @@\n-/* Enable E500 support.\n-   Copyright (C) 2003-2017 Free Software Foundation, Inc.\n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published\n-   by the Free Software Foundation; either version 3, or (at your\n-   option) any later version.\n-\n-   GCC is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with GCC; see the file COPYING3.  If not see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-#undef TARGET_SPE_ABI\n-#undef TARGET_SPE\n-#undef TARGET_FPRS\n-#undef TARGET_E500_SINGLE\n-#undef TARGET_E500_DOUBLE\n-#undef CHECK_E500_OPTIONS\n-\n-#define TARGET_SPE_ABI rs6000_spe_abi\n-#define TARGET_SPE rs6000_spe\n-#define TARGET_FPRS (rs6000_float_gprs == 0)\n-#define TARGET_E500_SINGLE (TARGET_HARD_FLOAT && rs6000_float_gprs == 1)\n-#define TARGET_E500_DOUBLE (TARGET_HARD_FLOAT && rs6000_float_gprs == 2)\n-#define CHECK_E500_OPTIONS\t\t\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    if (TARGET_SPE || TARGET_SPE_ABI\t\t\t\t\t\\\n-\t|| TARGET_E500_SINGLE || TARGET_E500_DOUBLE)\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tif (TARGET_ALTIVEC)\t\t\t\t\t\t\\\n-\t  error (\"AltiVec and SPE instructions cannot coexist\");\t\\\n-\tif (TARGET_VSX)\t\t\t\t\t\t\t\\\n-\t  error (\"VSX and SPE instructions cannot coexist\");\t\t\\\n-\tif (TARGET_64BIT)\t\t\t\t\t\t\\\n-\t  error (\"64-bit SPE not supported\");\t\t\t\t\\\n-\tif (TARGET_HARD_FLOAT && TARGET_FPRS)\t\t\t\t\\\n-\t  error (\"E500 and FPRs not supported\");\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-  } while (0)"}, {"sha": "92efabfe664af65e54bc02915eb2b71e6f2eca24", "filename": "gcc/config/rs6000/linuxspe.h", "status": "removed", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9596fe8f5dc1b492971b6ecd52c17e9855f5c0/gcc%2Fconfig%2Frs6000%2Flinuxspe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9596fe8f5dc1b492971b6ecd52c17e9855f5c0/gcc%2Fconfig%2Frs6000%2Flinuxspe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinuxspe.h?ref=be9596fe8f5dc1b492971b6ecd52c17e9855f5c0", "patch": "@@ -1,32 +0,0 @@\n-/* Definitions of target machine for GNU compiler,\n-   for PowerPC e500 machines running GNU/Linux.\n-   Copyright (C) 2003-2017 Free Software Foundation, Inc.\n-   Contributed by Aldy Hernandez (aldy@quesejoda.com).\n-\n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published\n-   by the Free Software Foundation; either version 3, or (at your\n-   option) any later version.\n-\n-   GCC is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with GCC; see the file COPYING3.  If not see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-/* Override rs6000.h and sysv4.h definition.  */\n-#if (TARGET_DEFAULT & MASK_LITTLE_ENDIAN)\n-#undef\tTARGET_DEFAULT\n-#define TARGET_DEFAULT (MASK_STRICT_ALIGN | MASK_LITTLE_ENDIAN)\n-#else\n-#undef\tTARGET_DEFAULT\n-#define TARGET_DEFAULT MASK_STRICT_ALIGN\n-#endif\n-\n-#undef  ASM_DEFAULT_SPEC\n-#define\tASM_DEFAULT_SPEC \"-mppc -mspe -me500\""}, {"sha": "3d556c08ad887e7b3581c8bfc9d41b8300e1a764", "filename": "gcc/config/rs6000/spe.h", "status": "removed", "additions": 0, "deletions": 1107, "changes": 1107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9596fe8f5dc1b492971b6ecd52c17e9855f5c0/gcc%2Fconfig%2Frs6000%2Fspe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9596fe8f5dc1b492971b6ecd52c17e9855f5c0/gcc%2Fconfig%2Frs6000%2Fspe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fspe.h?ref=be9596fe8f5dc1b492971b6ecd52c17e9855f5c0", "patch": "@@ -1,1107 +0,0 @@\n-/* PowerPC E500 user include file.\n-   Copyright (C) 2002-2017 Free Software Foundation, Inc.\n-   Contributed by Aldy Hernandez (aldyh@redhat.com).\n-\n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published\n-   by the Free Software Foundation; either version 3, or (at your\n-   option) any later version.\n-\n-   GCC is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   Under Section 7 of GPL version 3, you are granted additional\n-   permissions described in the GCC Runtime Library Exception, version\n-   3.1, as published by the Free Software Foundation.\n-\n-   You should have received a copy of the GNU General Public License and\n-   a copy of the GCC Runtime Library Exception along with this program;\n-   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-#ifndef _SPE_H\n-#define _SPE_H\n-\n-#define __vector __attribute__((vector_size(8)))\n-\n-typedef int \t \t\tint32_t;\n-typedef unsigned \t\tuint32_t;\n-typedef short    \t\tint16_t;\n-typedef unsigned short  \tuint16_t;\n-typedef long long \t\tint64_t;\n-typedef unsigned long long\tuint64_t;\n-\n-typedef short \t\t\t__vector __ev64_s16__;\n-typedef unsigned short  \t__vector __ev64_u16__;\n-typedef int \t\t\t__vector __ev64_s32__;\n-typedef unsigned \t\t__vector __ev64_u32__;\n-typedef long long \t\t__vector __ev64_s64__;\n-typedef unsigned long long \t__vector __ev64_u64__;\n-typedef float \t\t\t__vector __ev64_fs__;\n-\n-#define __v2si __ev64_opaque__\n-#define __v2sf __ev64_fs__\n-\n-#define __ev_addw __builtin_spe_evaddw\n-#define __ev_addiw __builtin_spe_evaddiw\n-#define __ev_subfw(a,b) __builtin_spe_evsubfw ((b), (a))\n-#define __ev_subw __builtin_spe_evsubfw\n-#define __ev_subifw(a,b) __builtin_spe_evsubifw ((b), (a))\n-#define __ev_subiw __builtin_spe_evsubifw\n-#define __ev_abs __builtin_spe_evabs\n-#define __ev_neg __builtin_spe_evneg\n-#define __ev_extsb __builtin_spe_evextsb\n-#define __ev_extsh __builtin_spe_evextsh\n-#define __ev_and __builtin_spe_evand\n-#define __ev_or __builtin_spe_evor\n-#define __ev_xor __builtin_spe_evxor\n-#define __ev_nand __builtin_spe_evnand\n-#define __ev_nor __builtin_spe_evnor\n-#define __ev_eqv __builtin_spe_eveqv\n-#define __ev_andc __builtin_spe_evandc\n-#define __ev_orc __builtin_spe_evorc\n-#define __ev_rlw __builtin_spe_evrlw\n-#define __ev_rlwi __builtin_spe_evrlwi\n-#define __ev_slw __builtin_spe_evslw\n-#define __ev_slwi __builtin_spe_evslwi\n-#define __ev_srws __builtin_spe_evsrws\n-#define __ev_srwu __builtin_spe_evsrwu\n-#define __ev_srwis __builtin_spe_evsrwis\n-#define __ev_srwiu __builtin_spe_evsrwiu\n-#define __ev_cntlzw __builtin_spe_evcntlzw\n-#define __ev_cntlsw __builtin_spe_evcntlsw\n-#define __ev_rndw __builtin_spe_evrndw\n-#define __ev_mergehi __builtin_spe_evmergehi\n-#define __ev_mergelo __builtin_spe_evmergelo\n-#define __ev_mergelohi __builtin_spe_evmergelohi\n-#define __ev_mergehilo __builtin_spe_evmergehilo\n-#define __ev_splati __builtin_spe_evsplati\n-#define __ev_splatfi __builtin_spe_evsplatfi\n-#define __ev_divws __builtin_spe_evdivws\n-#define __ev_divwu __builtin_spe_evdivwu\n-#define __ev_mra __builtin_spe_evmra\n-\n-#define __brinc __builtin_spe_brinc\n-\n-/* Loads.  */\n-\n-#define __ev_lddx __builtin_spe_evlddx\n-#define __ev_ldwx __builtin_spe_evldwx\n-#define __ev_ldhx __builtin_spe_evldhx\n-#define __ev_lwhex __builtin_spe_evlwhex\n-#define __ev_lwhoux __builtin_spe_evlwhoux\n-#define __ev_lwhosx __builtin_spe_evlwhosx\n-#define __ev_lwwsplatx __builtin_spe_evlwwsplatx\n-#define __ev_lwhsplatx __builtin_spe_evlwhsplatx\n-#define __ev_lhhesplatx __builtin_spe_evlhhesplatx\n-#define __ev_lhhousplatx __builtin_spe_evlhhousplatx\n-#define __ev_lhhossplatx __builtin_spe_evlhhossplatx\n-#define __ev_ldd __builtin_spe_evldd\n-#define __ev_ldw __builtin_spe_evldw\n-#define __ev_ldh __builtin_spe_evldh\n-#define __ev_lwhe __builtin_spe_evlwhe\n-#define __ev_lwhou __builtin_spe_evlwhou\n-#define __ev_lwhos __builtin_spe_evlwhos\n-#define __ev_lwwsplat __builtin_spe_evlwwsplat\n-#define __ev_lwhsplat __builtin_spe_evlwhsplat\n-#define __ev_lhhesplat __builtin_spe_evlhhesplat\n-#define __ev_lhhousplat __builtin_spe_evlhhousplat\n-#define __ev_lhhossplat __builtin_spe_evlhhossplat\n-\n-/* Stores.  */\n-\n-#define __ev_stddx __builtin_spe_evstddx\n-#define __ev_stdwx __builtin_spe_evstdwx\n-#define __ev_stdhx __builtin_spe_evstdhx\n-#define __ev_stwwex __builtin_spe_evstwwex\n-#define __ev_stwwox __builtin_spe_evstwwox\n-#define __ev_stwhex __builtin_spe_evstwhex\n-#define __ev_stwhox __builtin_spe_evstwhox\n-#define __ev_stdd __builtin_spe_evstdd\n-#define __ev_stdw __builtin_spe_evstdw\n-#define __ev_stdh __builtin_spe_evstdh\n-#define __ev_stwwe __builtin_spe_evstwwe\n-#define __ev_stwwo __builtin_spe_evstwwo\n-#define __ev_stwhe __builtin_spe_evstwhe\n-#define __ev_stwho __builtin_spe_evstwho\n-\n-/* Fixed point complex.  */\n-\n-#define __ev_mhossf __builtin_spe_evmhossf\n-#define __ev_mhosmf __builtin_spe_evmhosmf\n-#define __ev_mhosmi __builtin_spe_evmhosmi\n-#define __ev_mhoumi __builtin_spe_evmhoumi\n-#define __ev_mhessf __builtin_spe_evmhessf\n-#define __ev_mhesmf __builtin_spe_evmhesmf\n-#define __ev_mhesmi __builtin_spe_evmhesmi\n-#define __ev_mheumi __builtin_spe_evmheumi\n-#define __ev_mhossfa __builtin_spe_evmhossfa\n-#define __ev_mhosmfa __builtin_spe_evmhosmfa\n-#define __ev_mhosmia __builtin_spe_evmhosmia\n-#define __ev_mhoumia __builtin_spe_evmhoumia\n-#define __ev_mhessfa __builtin_spe_evmhessfa\n-#define __ev_mhesmfa __builtin_spe_evmhesmfa\n-#define __ev_mhesmia __builtin_spe_evmhesmia\n-#define __ev_mheumia __builtin_spe_evmheumia\n-\n-#define __ev_mhoumf __ev_mhoumi\n-#define __ev_mheumf __ev_mheumi\n-#define __ev_mhoumfa __ev_mhoumia\n-#define __ev_mheumfa __ev_mheumia\n-\n-#define __ev_mhossfaaw __builtin_spe_evmhossfaaw\n-#define __ev_mhossiaaw __builtin_spe_evmhossiaaw\n-#define __ev_mhosmfaaw __builtin_spe_evmhosmfaaw\n-#define __ev_mhosmiaaw __builtin_spe_evmhosmiaaw\n-#define __ev_mhousiaaw __builtin_spe_evmhousiaaw\n-#define __ev_mhoumiaaw __builtin_spe_evmhoumiaaw\n-#define __ev_mhessfaaw __builtin_spe_evmhessfaaw\n-#define __ev_mhessiaaw __builtin_spe_evmhessiaaw\n-#define __ev_mhesmfaaw __builtin_spe_evmhesmfaaw\n-#define __ev_mhesmiaaw __builtin_spe_evmhesmiaaw\n-#define __ev_mheusiaaw __builtin_spe_evmheusiaaw\n-#define __ev_mheumiaaw __builtin_spe_evmheumiaaw\n-\n-#define __ev_mhousfaaw __ev_mhousiaaw\n-#define __ev_mhoumfaaw __ev_mhoumiaaw\n-#define __ev_mheusfaaw __ev_mheusiaaw\n-#define __ev_mheumfaaw __ev_mheumiaaw\n-\n-#define __ev_mhossfanw __builtin_spe_evmhossfanw\n-#define __ev_mhossianw __builtin_spe_evmhossianw\n-#define __ev_mhosmfanw __builtin_spe_evmhosmfanw\n-#define __ev_mhosmianw __builtin_spe_evmhosmianw\n-#define __ev_mhousianw __builtin_spe_evmhousianw\n-#define __ev_mhoumianw __builtin_spe_evmhoumianw\n-#define __ev_mhessfanw __builtin_spe_evmhessfanw\n-#define __ev_mhessianw __builtin_spe_evmhessianw\n-#define __ev_mhesmfanw __builtin_spe_evmhesmfanw\n-#define __ev_mhesmianw __builtin_spe_evmhesmianw\n-#define __ev_mheusianw __builtin_spe_evmheusianw\n-#define __ev_mheumianw __builtin_spe_evmheumianw\n-\n-#define __ev_mhousfanw __ev_mhousianw\n-#define __ev_mhoumfanw __ev_mhoumianw\n-#define __ev_mheusfanw __ev_mheusianw\n-#define __ev_mheumfanw __ev_mheumianw\n-\n-#define __ev_mhogsmfaa __builtin_spe_evmhogsmfaa\n-#define __ev_mhogsmiaa __builtin_spe_evmhogsmiaa\n-#define __ev_mhogumiaa __builtin_spe_evmhogumiaa\n-#define __ev_mhegsmfaa __builtin_spe_evmhegsmfaa\n-#define __ev_mhegsmiaa __builtin_spe_evmhegsmiaa\n-#define __ev_mhegumiaa __builtin_spe_evmhegumiaa\n-\n-#define __ev_mhogumfaa __ev_mhogumiaa\n-#define __ev_mhegumfaa __ev_mhegumiaa\n-\n-#define __ev_mhogsmfan __builtin_spe_evmhogsmfan\n-#define __ev_mhogsmian __builtin_spe_evmhogsmian\n-#define __ev_mhogumian __builtin_spe_evmhogumian\n-#define __ev_mhegsmfan __builtin_spe_evmhegsmfan\n-#define __ev_mhegsmian __builtin_spe_evmhegsmian\n-#define __ev_mhegumian __builtin_spe_evmhegumian\n-\n-#define __ev_mhogumfan __ev_mhogumian\n-#define __ev_mhegumfan __ev_mhegumian\n-\n-#define __ev_mwhssf __builtin_spe_evmwhssf\n-#define __ev_mwhsmf __builtin_spe_evmwhsmf\n-#define __ev_mwhsmi __builtin_spe_evmwhsmi\n-#define __ev_mwhumi __builtin_spe_evmwhumi\n-#define __ev_mwhssfa __builtin_spe_evmwhssfa\n-#define __ev_mwhsmfa __builtin_spe_evmwhsmfa\n-#define __ev_mwhsmia __builtin_spe_evmwhsmia\n-#define __ev_mwhumia __builtin_spe_evmwhumia\n-\n-#define __ev_mwhumf __ev_mwhumi\n-#define __ev_mwhumfa __ev_mwhumia\n-\n-#define __ev_mwlumi __builtin_spe_evmwlumi\n-#define __ev_mwlumia __builtin_spe_evmwlumia\n-#define __ev_mwlumiaaw __builtin_spe_evmwlumiaaw\n-\n-#define __ev_mwlssiaaw __builtin_spe_evmwlssiaaw\n-#define __ev_mwlsmiaaw __builtin_spe_evmwlsmiaaw\n-#define __ev_mwlusiaaw __builtin_spe_evmwlusiaaw\n-#define __ev_mwlusiaaw __builtin_spe_evmwlusiaaw\n-\n-#define __ev_mwlssianw __builtin_spe_evmwlssianw\n-#define __ev_mwlsmianw __builtin_spe_evmwlsmianw\n-#define __ev_mwlusianw __builtin_spe_evmwlusianw\n-#define __ev_mwlumianw __builtin_spe_evmwlumianw\n-\n-#define __ev_mwssf __builtin_spe_evmwssf\n-#define __ev_mwsmf __builtin_spe_evmwsmf\n-#define __ev_mwsmi __builtin_spe_evmwsmi\n-#define __ev_mwumi __builtin_spe_evmwumi\n-#define __ev_mwssfa __builtin_spe_evmwssfa\n-#define __ev_mwsmfa __builtin_spe_evmwsmfa\n-#define __ev_mwsmia __builtin_spe_evmwsmia\n-#define __ev_mwumia __builtin_spe_evmwumia\n-\n-#define __ev_mwumf __ev_mwumi\n-#define __ev_mwumfa __ev_mwumia\n-\n-#define __ev_mwssfaa __builtin_spe_evmwssfaa\n-#define __ev_mwsmfaa __builtin_spe_evmwsmfaa\n-#define __ev_mwsmiaa __builtin_spe_evmwsmiaa\n-#define __ev_mwumiaa __builtin_spe_evmwumiaa\n-\n-#define __ev_mwumfaa __ev_mwumiaa\n-\n-#define __ev_mwssfan __builtin_spe_evmwssfan\n-#define __ev_mwsmfan __builtin_spe_evmwsmfan\n-#define __ev_mwsmian __builtin_spe_evmwsmian\n-#define __ev_mwumian __builtin_spe_evmwumian\n-\n-#define __ev_mwumfan __ev_mwumian\n-\n-#define __ev_addssiaaw __builtin_spe_evaddssiaaw\n-#define __ev_addsmiaaw __builtin_spe_evaddsmiaaw\n-#define __ev_addusiaaw __builtin_spe_evaddusiaaw\n-#define __ev_addumiaaw __builtin_spe_evaddumiaaw\n-\n-#define __ev_addusfaaw __ev_addusiaaw\n-#define __ev_addumfaaw __ev_addumiaaw\n-#define __ev_addsmfaaw __ev_addsmiaaw\n-#define __ev_addssfaaw __ev_addssiaaw\n-\n-#define __ev_subfssiaaw __builtin_spe_evsubfssiaaw\n-#define __ev_subfsmiaaw __builtin_spe_evsubfsmiaaw\n-#define __ev_subfusiaaw __builtin_spe_evsubfusiaaw\n-#define __ev_subfumiaaw __builtin_spe_evsubfumiaaw\n-\n-#define __ev_subfusfaaw __ev_subfusiaaw\n-#define __ev_subfumfaaw __ev_subfumiaaw\n-#define __ev_subfsmfaaw __ev_subfsmiaaw\n-#define __ev_subfssfaaw __ev_subfssiaaw\n-\n-/* Floating Point SIMD Instructions  */\n-\n-#define __ev_fsabs __builtin_spe_evfsabs\n-#define __ev_fsnabs __builtin_spe_evfsnabs\n-#define __ev_fsneg __builtin_spe_evfsneg\n-#define __ev_fsadd __builtin_spe_evfsadd\n-#define __ev_fssub __builtin_spe_evfssub\n-#define __ev_fsmul __builtin_spe_evfsmul\n-#define __ev_fsdiv __builtin_spe_evfsdiv\n-#define __ev_fscfui __builtin_spe_evfscfui\n-#define __ev_fscfsi __builtin_spe_evfscfsi\n-#define __ev_fscfuf __builtin_spe_evfscfuf\n-#define __ev_fscfsf __builtin_spe_evfscfsf\n-#define __ev_fsctui __builtin_spe_evfsctui\n-#define __ev_fsctsi __builtin_spe_evfsctsi\n-#define __ev_fsctuf __builtin_spe_evfsctuf\n-#define __ev_fsctsf __builtin_spe_evfsctsf\n-#define __ev_fsctuiz __builtin_spe_evfsctuiz\n-#define __ev_fsctsiz __builtin_spe_evfsctsiz\n-\n-/* NOT SUPPORTED IN FIRST e500, support via two instructions:  */\n-\n-#define __ev_mwhusfaaw  __ev_mwhusiaaw\n-#define __ev_mwhumfaaw  __ev_mwhumiaaw\n-#define __ev_mwhusfanw  __ev_mwhusianw\n-#define __ev_mwhumfanw  __ev_mwhumianw\n-#define __ev_mwhgumfaa  __ev_mwhgumiaa\n-#define __ev_mwhgumfan  __ev_mwhgumian\n-\n-#define __ev_mwhgssfaa __internal_ev_mwhgssfaa\n-#define __ev_mwhgsmfaa __internal_ev_mwhgsmfaa\n-#define __ev_mwhgsmiaa __internal_ev_mwhgsmiaa\n-#define __ev_mwhgumiaa __internal_ev_mwhgumiaa\n-#define __ev_mwhgssfan __internal_ev_mwhgssfan\n-#define __ev_mwhgsmfan __internal_ev_mwhgsmfan\n-#define __ev_mwhgsmian __internal_ev_mwhgsmian\n-#define __ev_mwhgumian __internal_ev_mwhgumian\n-#define __ev_mwhssiaaw __internal_ev_mwhssiaaw\n-#define __ev_mwhssfaaw __internal_ev_mwhssfaaw\n-#define __ev_mwhsmfaaw __internal_ev_mwhsmfaaw\n-#define __ev_mwhsmiaaw __internal_ev_mwhsmiaaw\n-#define __ev_mwhusiaaw __internal_ev_mwhusiaaw\n-#define __ev_mwhumiaaw __internal_ev_mwhumiaaw\n-#define __ev_mwhssfanw __internal_ev_mwhssfanw\n-#define __ev_mwhssianw __internal_ev_mwhssianw\n-#define __ev_mwhsmfanw __internal_ev_mwhsmfanw\n-#define __ev_mwhsmianw __internal_ev_mwhsmianw\n-#define __ev_mwhusianw __internal_ev_mwhusianw\n-#define __ev_mwhumianw __internal_ev_mwhumianw\n-\n-static inline __ev64_opaque__\n-__internal_ev_mwhssfaaw (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-\n-  t = __ev_mwhssf (a, b);\n-  return __ev_addssiaaw (t);\n-}\n-\n-static inline __ev64_opaque__\n-__internal_ev_mwhssiaaw (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-  \n-  t = __ev_mwhsmi (a, b);\n-  return __ev_addssiaaw (t);\n-}\n-\n-static inline __ev64_opaque__\n-__internal_ev_mwhsmfaaw (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-\n-  t = __ev_mwhsmf (a, b);\n-  return __ev_addsmiaaw (t);\n-}\n- \n-static inline __ev64_opaque__\n-__internal_ev_mwhsmiaaw (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-\n-  t = __ev_mwhsmi (a, b);\n-  return __ev_addsmiaaw (t);\n-}\n- \n-static inline __ev64_opaque__\n-__internal_ev_mwhusiaaw (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-\n-  t = __ev_mwhumi (a, b);\n-  return __ev_addusiaaw (t);\n-}\n- \n-static inline __ev64_opaque__\n-__internal_ev_mwhumiaaw (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-\n-  t = __ev_mwhumi (a, b);\n-  return __ev_addumiaaw (t);\n-}\n- \n-static inline __ev64_opaque__\n-__internal_ev_mwhssfanw (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-\n-  t = __ev_mwhssf (a, b);\n-  return __ev_subfssiaaw (t);\n-}\n-\n-static inline __ev64_opaque__\n-__internal_ev_mwhssianw (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-\n-  t = __ev_mwhsmi (a, b);\n-  return __ev_subfssiaaw (t);\n-}\n- \n-static inline __ev64_opaque__\n-__internal_ev_mwhsmfanw (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-\n-  t = __ev_mwhsmf (a, b);\n-  return __ev_subfsmiaaw (t);\n-}\n- \n-static inline __ev64_opaque__\n-__internal_ev_mwhsmianw (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-\n-  t = __ev_mwhsmi (a, b);\n-  return __ev_subfsmiaaw (t);\n-}\n- \n-static inline __ev64_opaque__\n-__internal_ev_mwhusianw (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-\n-  t = __ev_mwhumi (a, b);\n-  return __ev_subfusiaaw (t);\n-}\n- \n-static inline __ev64_opaque__\n-__internal_ev_mwhumianw (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-\n-  t = __ev_mwhumi (a, b);\n-  return __ev_subfumiaaw (t);\n-}\n-\n-static inline __ev64_opaque__\n-__internal_ev_mwhgssfaa (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-\n-  t = __ev_mwhssf (a, b);\n-  return __ev_mwsmiaa (t, ((__ev64_s32__){1, 1}));\n-}\n-\n-static inline __ev64_opaque__\n-__internal_ev_mwhgsmfaa (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-\n-  t = __ev_mwhsmf (a, b);\n-  return __ev_mwsmiaa (t, ((__ev64_s32__){1, 1}));\n-}\n-\n-static inline __ev64_opaque__\n-__internal_ev_mwhgsmiaa (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-\n-  t = __ev_mwhsmi (a, b);\n-  return __ev_mwsmiaa (t, ((__ev64_s32__){1, 1}));\n-}\n-\n-static inline __ev64_opaque__\n-__internal_ev_mwhgumiaa (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-\n-  t = __ev_mwhumi (a, b);\n-  return __ev_mwumiaa (t, ((__ev64_s32__){1, 1}));\n-}\n-\n-static inline __ev64_opaque__\n-__internal_ev_mwhgssfan (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-\n-  t = __ev_mwhssf (a, b);\n-  return __ev_mwsmian (t, ((__ev64_s32__){1, 1}));\n-}\n-\n-static inline __ev64_opaque__\n-__internal_ev_mwhgsmfan (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-\n-  t = __ev_mwhsmf (a, b);\n-  return __ev_mwsmian (t, ((__ev64_s32__){1, 1}));\n-}\n-\n-static inline __ev64_opaque__\n-__internal_ev_mwhgsmian (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-\n-  t = __ev_mwhsmi (a, b);\n-  return __ev_mwsmian (t, ((__ev64_s32__){1, 1}));\n-}\n-\n-static inline __ev64_opaque__\n-__internal_ev_mwhgumian (__ev64_opaque__ a, __ev64_opaque__ b)\n-{\n-  __ev64_opaque__ t;\n-\n-  t = __ev_mwhumi (a, b);\n-  return __ev_mwumian (t, ((__ev64_s32__){1, 1}));\n-}\n-\n-/* END OF NOT SUPPORTED */\n-\n-/* __ev_create* functions.  */\n-\n-#define __ev_create_ufix32_u32 __ev_create_u32\n-#define __ev_create_sfix32_s32 __ev_create_s32\n-\n-static inline __ev64_opaque__\n-__ev_create_s16 (int16_t a, int16_t b, int16_t c, int16_t d)\n-{\n-  union\n-  {\n-    __ev64_opaque__ v;\n-    int16_t i[4];\n-  } u;\n-\n-  u.i[0] = a;\n-  u.i[1] = b;\n-  u.i[2] = c;\n-  u.i[3] = d;\n-\n-  return u.v;\n-}\n-\n-static inline __ev64_opaque__\n-__ev_create_u16 (uint16_t a, uint16_t b, uint16_t c, uint16_t d)\n-\t\t\t\t  \n-{\n-  union\n-  {\n-    __ev64_opaque__ v;\n-    uint16_t i[4];\n-  } u;\n-\n-  u.i[0] = a;\n-  u.i[1] = b;\n-  u.i[2] = c;\n-  u.i[3] = d;\n-\n-  return u.v;\n-}\n-\n-static inline __ev64_opaque__\n-__ev_create_s32 (int32_t a, int32_t b)\n-{\n-  union\n-  {\n-    __ev64_opaque__ v;\n-   int32_t i[2];\n-  } u;\n-\n-  u.i[0] = a;\n-  u.i[1] = b;\n-\n-  return u.v;\n-}\n-\n-static inline __ev64_opaque__\n-__ev_create_u32 (uint32_t a, uint32_t b)\n-{\n-  union\n-  {\n-    __ev64_opaque__ v;\n-    uint32_t i[2];\n-  } u;\n-\n-  u.i[0] = a;\n-  u.i[1] = b;\n-\n-  return u.v;\n-}\n-\n-static inline __ev64_opaque__\n-__ev_create_fs (float a, float b)\n-{\n-  union\n-  {\n-    __ev64_opaque__ v;\n-    float f[2];\n-  } u;\n-\n-  u.f[0] = a;\n-  u.f[1] = b;\n-  \n-  return u.v;\n-}\n-\n-static inline __ev64_opaque__\n-__ev_create_sfix32_fs (float a, float b)\n-{\n-  __ev64_opaque__ ev;\n-\n-  ev = (__ev64_opaque__) __ev_create_fs (a, b);\n-  return (__ev64_opaque__) __builtin_spe_evfsctsf ((__v2sf) ev);\n-}\n-\n-static inline __ev64_opaque__\n-__ev_create_ufix32_fs (float a, float b)\n-{\n-  __ev64_opaque__ ev;\n-\n-  ev = (__ev64_opaque__) __ev_create_fs (a, b);\n-  return (__ev64_opaque__) __builtin_spe_evfsctuf ((__v2sf) ev);\n-}\n-\n-static inline __ev64_opaque__\n-__ev_create_s64 (int64_t a)\n-{\n-  union\n-  {\n-    __ev64_opaque__ v;\n-    int64_t i;\n-  } u;\n-\n-  u.i = a;\n-  return u.v;\n-}\n-\n-static inline __ev64_opaque__\n-__ev_create_u64 (uint64_t a)\n-{\n-  union\n-  {\n-    __ev64_opaque__ v;\n-    uint64_t i;\n-  } u;\n-\n-  u.i = a;\n-  return u.v;\n-}\n-\n-static inline uint64_t\n-__ev_convert_u64 (__ev64_opaque__ a)\n-{\n-  return (uint64_t) a;\n-}\n-\n-static inline int64_t\n-__ev_convert_s64 (__ev64_opaque__ a)\n-{\n-  return (int64_t) a;\n-}\n-\n-/* __ev_get_* functions.  */\n-\n-#define __ev_get_upper_u32(a) __ev_get_u32_internal ((a), 0)\n-#define __ev_get_lower_u32(a) __ev_get_u32_internal ((a), 1)\n-#define __ev_get_upper_s32(a) __ev_get_s32_internal ((a), 0)\n-#define __ev_get_lower_s32(a) __ev_get_s32_internal ((a), 1)\n-#define __ev_get_upper_fs(a) __ev_get_fs_internal ((a), 0)\n-#define __ev_get_lower_fs(a) __ev_get_fs_internal ((a), 1)\n-#define __ev_get_upper_ufix32_u32 __ev_get_upper_u32\n-#define __ev_get_lower_ufix32_u32 __ev_get_lower_u32\n-#define __ev_get_upper_sfix32_s32 __ev_get_upper_s32\n-#define __ev_get_lower_sfix32_s32 __ev_get_lower_s32\n-#define __ev_get_upper_sfix32_fs(a)  __ev_get_sfix32_fs ((a), 0)\n-#define __ev_get_lower_sfix32_fs(a)  __ev_get_sfix32_fs ((a), 1)\n-#define __ev_get_upper_ufix32_fs(a)  __ev_get_ufix32_fs ((a), 0)\n-#define __ev_get_lower_ufix32_fs(a)  __ev_get_ufix32_fs ((a), 1)\n-\n-#define __ev_get_u32 __ev_get_u32_internal\n-#define __ev_get_s32 __ev_get_s32_internal\n-#define __ev_get_fs __ev_get_fs_internal\n-#define __ev_get_u16 __ev_get_u16_internal\n-#define __ev_get_s16 __ev_get_s16_internal\n-\n-#define __ev_get_ufix32_u32 __ev_get_u32\n-#define __ev_get_sfix32_s32 __ev_get_s32\n-#define __ev_get_ufix32_fs     __ev_get_ufix32_fs_internal\n-#define __ev_get_sfix32_fs     __ev_get_sfix32_fs_internal\n-\n-static inline uint32_t\n-__ev_get_u32_internal (__ev64_opaque__ a, uint32_t pos)\n-{\n-  union\n-  {\n-    __ev64_opaque__ v;\n-    uint32_t i[2];\n-  } u;\n-\n-  u.v = a;\n-  return u.i[pos];\n-}\n-\n-static inline int32_t\n-__ev_get_s32_internal (__ev64_opaque__ a, uint32_t pos)\n-{\n-  union\n-  {\n-    __ev64_opaque__ v;\n-    int32_t i[2];\n-  } u;\n-\n-  u.v = a;\n-  return u.i[pos];\n-}\n-\n-static inline float\n-__ev_get_fs_internal (__ev64_opaque__ a, uint32_t pos)\n-{\n-  union\n-  {\n-    __ev64_opaque__ v;\n-    float f[2];\n-  } u;\n-\n-  u.v = a;\n-  return u.f[pos];\n-}\n-\n-static inline float\n-__ev_get_sfix32_fs_internal (__ev64_opaque__ a, uint32_t pos)\n-{\n-  __ev64_fs__ v;\n-\n-  v = __builtin_spe_evfscfsf ((__v2sf) a);\n-  return __ev_get_fs_internal ((__ev64_opaque__) v, pos);\n-}\n-\n-static inline float\n-__ev_get_ufix32_fs_internal (__ev64_opaque__ a, uint32_t pos)\n-{\n-  __ev64_fs__ v;\n-\n-  v = __builtin_spe_evfscfuf ((__v2sf) a);\n-  return __ev_get_fs_internal ((__ev64_opaque__) v, pos);\n-}\n-\n-static inline uint16_t\n-__ev_get_u16_internal (__ev64_opaque__ a, uint32_t pos)\n-{\n-  union\n-  {\n-    __ev64_opaque__ v;\n-    uint16_t i[4];\n-  } u;\n-\n-  u.v = a;\n-  return u.i[pos];\n-}\n-\n-static inline int16_t\n-__ev_get_s16_internal (__ev64_opaque__ a, uint32_t pos)\n-{\n-  union\n-  {\n-    __ev64_opaque__ v;\n-    int16_t i[4];\n-  } u;\n-\n-  u.v = a;\n-  return u.i[pos];\n-}\n-\n-/* __ev_set_* functions.  */\n-\n-#define __ev_set_u32 __ev_set_u32_internal\n-#define __ev_set_s32 __ev_set_s32_internal\n-#define __ev_set_fs __ev_set_fs_internal\n-#define __ev_set_u16 __ev_set_u16_internal\n-#define __ev_set_s16 __ev_set_s16_internal\n-\n-#define __ev_set_ufix32_u32 __ev_set_u32\n-#define __ev_set_sfix32_s32 __ev_set_s32\n-\n-#define __ev_set_sfix32_fs  __ev_set_sfix32_fs_internal\n-#define __ev_set_ufix32_fs  __ev_set_ufix32_fs_internal\n-\n-#define __ev_set_upper_u32(a, b) __ev_set_u32 (a, b, 0)\n-#define __ev_set_lower_u32(a, b) __ev_set_u32 (a, b, 1)\n-#define __ev_set_upper_s32(a, b) __ev_set_s32 (a, b, 0)\n-#define __ev_set_lower_s32(a, b) __ev_set_s32 (a, b, 1)\n-#define __ev_set_upper_fs(a, b) __ev_set_fs (a, b, 0)\n-#define __ev_set_lower_fs(a, b) __ev_set_fs (a, b, 1)\n-#define __ev_set_upper_ufix32_u32 __ev_set_upper_u32\n-#define __ev_set_lower_ufix32_u32 __ev_set_lower_u32\n-#define __ev_set_upper_sfix32_s32 __ev_set_upper_s32\n-#define __ev_set_lower_sfix32_s32 __ev_set_lower_s32\n-#define __ev_set_upper_sfix32_fs(a, b)  __ev_set_sfix32_fs (a, b, 0)\n-#define __ev_set_lower_sfix32_fs(a, b)  __ev_set_sfix32_fs (a, b, 1)\n-#define __ev_set_upper_ufix32_fs(a, b)  __ev_set_ufix32_fs (a, b, 0)\n-#define __ev_set_lower_ufix32_fs(a, b)  __ev_set_ufix32_fs (a, b, 1)\n-\n-#define __ev_set_acc_vec64 __builtin_spe_evmra\n-\n-static inline __ev64_opaque__\n-__ev_set_acc_u64 (uint64_t a)\n-{\n-  __ev64_opaque__ ev32;\n-  ev32 = __ev_create_u64 (a);\n-  __ev_mra (ev32);\n-  return ev32;\n-}\n-\n-static inline __ev64_opaque__\n-__ev_set_acc_s64 (int64_t a)\n-{\n-  __ev64_opaque__ ev32;\n-  ev32 = __ev_create_s64 (a);\n-  __ev_mra (ev32);\n-  return ev32;\n-}\n-\n-static inline __ev64_opaque__\n-__ev_set_u32_internal (__ev64_opaque__ a, uint32_t b, uint32_t pos)\n-{\n-  union\n-  {\n-    __ev64_opaque__ v;\n-    uint32_t i[2];\n-  } u;\n-\n-  u.v = a;\n-  u.i[pos] = b;\n-  return u.v;\n-}\n-\n-static inline __ev64_opaque__\n-__ev_set_s32_internal (__ev64_opaque__ a, int32_t b, uint32_t pos)\n-{\n-  union\n-  {\n-    __ev64_opaque__ v;\n-    int32_t i[2];\n-  } u;\n-\n-  u.v = a;\n-  u.i[pos] = b;\n-  return u.v;\n-}\n-\n-static inline __ev64_opaque__\n-__ev_set_fs_internal (__ev64_opaque__ a, float b, uint32_t pos)\n-{\n-  union\n-  {\n-    __ev64_opaque__ v;\n-    float f[2];\n-  } u;\n-\n-  u.v = a;\n-  u.f[pos] = b;\n-  return u.v;\n-}\n-\n-static inline __ev64_opaque__\n-__ev_set_sfix32_fs_internal (__ev64_opaque__ a, float b, uint32_t pos)\n-{\n-  __ev64_opaque__ v;\n-  float other;\n-\n-  /* Get other half.  */\n-  other = __ev_get_fs_internal (a, pos ^ 1);\n-\n-  /* Make an sfix32 with 'b'.  */\n-  v = __ev_create_sfix32_fs (b, b);\n-\n-  /* Set other half to what it used to be.  */\n-  return __ev_set_fs_internal (v, other, pos ^ 1);\n-}\n-\n-static inline __ev64_opaque__\n-__ev_set_ufix32_fs_internal (__ev64_opaque__ a, float b, uint32_t pos)\n-{\n-  __ev64_opaque__ v;\n-  float other;\n-\n-  /* Get other half.  */\n-  other = __ev_get_fs_internal (a, pos ^ 1);\n-\n-  /* Make an ufix32 with 'b'.  */\n-  v = __ev_create_ufix32_fs (b, b);\n-\n-  /* Set other half to what it used to be.  */\n-  return __ev_set_fs_internal (v, other, pos ^ 1);\n-}\n-\n-static inline __ev64_opaque__\n-__ev_set_u16_internal (__ev64_opaque__ a, uint16_t b, uint32_t pos)\n-{\n-  union\n-  {\n-    __ev64_opaque__ v;\n-    uint16_t i[4];\n-  } u;\n-\n-  u.v = a;\n-  u.i[pos] = b;\n-  return u.v;\n-}\n-\n-static inline __ev64_opaque__\n-__ev_set_s16_internal (__ev64_opaque__ a, int16_t b, uint32_t pos)\n-{\n-  union\n-  {\n-    __ev64_opaque__ v;\n-    int16_t i[4];\n-  } u;\n-\n-  u.v = a;\n-  u.i[pos] = b;\n-  return u.v;\n-}\n-\n-/* Predicates.  */\n-\n-#define __pred_all\t0\n-#define __pred_any\t1\n-#define __pred_upper\t2\n-#define __pred_lower\t3\n-\n-#define __ev_any_gts(a, b)\t\t__builtin_spe_evcmpgts (__pred_any, (a), (b))\n-#define __ev_all_gts(a, b)\t\t__builtin_spe_evcmpgts (__pred_all, (a), (b))\n-#define __ev_upper_gts(a, b)\t\t__builtin_spe_evcmpgts (__pred_upper, (a), (b))\n-#define __ev_lower_gts(a, b)\t\t__builtin_spe_evcmpgts (__pred_lower, (a), (b))\n-#define __ev_select_gts\t\t\t__builtin_spe_evsel_gts\n-\n-#define __ev_any_gtu(a, b)\t\t__builtin_spe_evcmpgtu (__pred_any, (a), (b))\n-#define __ev_all_gtu(a, b)\t\t__builtin_spe_evcmpgtu (__pred_all, (a), (b))\n-#define __ev_upper_gtu(a, b)\t\t__builtin_spe_evcmpgtu (__pred_upper, (a), (b))\n-#define __ev_lower_gtu(a, b)\t\t__builtin_spe_evcmpgtu (__pred_lower, (a), (b))\n-#define __ev_select_gtu\t\t\t__builtin_spe_evsel_gtu\n-\n-#define __ev_any_lts(a, b)\t\t__builtin_spe_evcmplts (__pred_any, (a), (b))\n-#define __ev_all_lts(a, b)\t\t__builtin_spe_evcmplts (__pred_all, (a), (b))\n-#define __ev_upper_lts(a, b)\t\t__builtin_spe_evcmplts (__pred_upper, (a), (b))\n-#define __ev_lower_lts(a, b)\t\t__builtin_spe_evcmplts (__pred_lower, (a), (b))\n-#define __ev_select_lts(a, b, c, d) \t((__v2si) __builtin_spe_evsel_lts ((a), (b), (c), (d)))\n-\n-#define __ev_any_ltu(a, b)\t\t__builtin_spe_evcmpltu (__pred_any, (a), (b))\n-#define __ev_all_ltu(a, b)\t\t__builtin_spe_evcmpltu (__pred_all, (a), (b))\n-#define __ev_upper_ltu(a, b)\t\t__builtin_spe_evcmpltu (__pred_upper, (a), (b))\n-#define __ev_lower_ltu(a, b)\t\t__builtin_spe_evcmpltu (__pred_lower, (a), (b))\n-#define __ev_select_ltu \t\t__builtin_spe_evsel_ltu\n-#define __ev_any_eq(a, b)\t\t__builtin_spe_evcmpeq (__pred_any, (a), (b))\n-#define __ev_all_eq(a, b)\t\t__builtin_spe_evcmpeq (__pred_all, (a), (b))\n-#define __ev_upper_eq(a, b)\t\t__builtin_spe_evcmpeq (__pred_upper, (a), (b))\n-#define __ev_lower_eq(a, b)\t\t__builtin_spe_evcmpeq (__pred_lower, (a), (b))\n-#define __ev_select_eq\t\t\t__builtin_spe_evsel_eq\n-\n-#define __ev_any_fs_gt(a, b)\t\t__builtin_spe_evfscmpgt (__pred_any, (a), (b))\n-#define __ev_all_fs_gt(a, b)\t\t__builtin_spe_evfscmpgt (__pred_all, (a), (b))\n-#define __ev_upper_fs_gt(a, b)\t\t__builtin_spe_evfscmpgt (__pred_upper, (a), (b))\n-#define __ev_lower_fs_gt(a, b)\t\t__builtin_spe_evfscmpgt (__pred_lower, (a), (b))\n-#define __ev_select_fs_gt\t\t__builtin_spe_evsel_fsgt\n-\n-#define __ev_any_fs_lt(a, b)\t\t__builtin_spe_evfscmplt (__pred_any, (a), (b))\n-#define __ev_all_fs_lt(a, b)\t\t__builtin_spe_evfscmplt (__pred_all, (a), (b))\n-#define __ev_upper_fs_lt(a, b)\t\t__builtin_spe_evfscmplt (__pred_upper, (a), (b))\n-#define __ev_lower_fs_lt(a, b)\t\t__builtin_spe_evfscmplt (__pred_lower, (a), (b))\n-#define __ev_select_fs_lt\t\t__builtin_spe_evsel_fslt\n-\n-#define __ev_any_fs_eq(a, b)\t\t__builtin_spe_evfscmpeq (__pred_any, (a), (b))\n-#define __ev_all_fs_eq(a, b)\t\t__builtin_spe_evfscmpeq (__pred_all, (a), (b))\n-#define __ev_upper_fs_eq(a, b)\t\t__builtin_spe_evfscmpeq (__pred_upper, (a), (b))\n-#define __ev_lower_fs_eq(a, b)\t\t__builtin_spe_evfscmpeq (__pred_lower, (a), (b))\n-#define __ev_select_fs_eq\t\t__builtin_spe_evsel_fseq\n-\n-#define __ev_any_fs_tst_gt(a, b)\t__builtin_spe_evfststgt (__pred_any, (a), (b))\n-#define __ev_all_fs_tst_gt(a, b)\t__builtin_spe_evfststgt (__pred_all, (a), (b))\n-#define __ev_upper_fs_tst_gt(a, b)\t__builtin_spe_evfststgt (__pred_upper, (a), (b))\n-#define __ev_lower_fs_tst_gt(a, b)\t__builtin_spe_evfststgt (__pred_lower, (a), (b))\n-#define __ev_select_fs_tst_gt           __builtin_spe_evsel_fststgt\n-\n-#define __ev_any_fs_tst_lt(a, b)\t__builtin_spe_evfststlt (__pred_any, (a), (b))\n-#define __ev_all_fs_tst_lt(a, b)\t__builtin_spe_evfststlt (__pred_all, (a), (b))\n-#define __ev_upper_fs_tst_lt(a, b)\t__builtin_spe_evfststlt (__pred_upper, (a), (b))\n-#define __ev_lower_fs_tst_lt(a, b)\t__builtin_spe_evfststlt (__pred_lower, (a), (b))\n-#define __ev_select_fs_tst_lt\t\t__builtin_spe_evsel_fststlt\n-\n-#define __ev_any_fs_tst_eq(a, b)\t__builtin_spe_evfststeq (__pred_any, (a), (b))\n-#define __ev_all_fs_tst_eq(a, b)\t__builtin_spe_evfststeq (__pred_all, (a), (b))\n-#define __ev_upper_fs_tst_eq(a, b)\t__builtin_spe_evfststeq (__pred_upper, (a), (b))\n-#define __ev_lower_fs_tst_eq(a, b)\t__builtin_spe_evfststeq (__pred_lower, (a), (b))\n-#define __ev_select_fs_tst_eq\t\t__builtin_spe_evsel_fststeq\n-\n-/* SPEFSCR accessor functions.  */\n-\n-#define __SPEFSCR_SOVH\t\t0x80000000\n-#define __SPEFSCR_OVH\t\t0x40000000\n-#define __SPEFSCR_FGH\t\t0x20000000\n-#define __SPEFSCR_FXH\t\t0x10000000\n-#define __SPEFSCR_FINVH\t\t0x08000000\n-#define __SPEFSCR_FDBZH\t\t0x04000000\n-#define __SPEFSCR_FUNFH\t\t0x02000000\n-#define __SPEFSCR_FOVFH\t\t0x01000000\n-/* 2 unused bits.  */\n-#define __SPEFSCR_FINXS\t\t0x00200000\n-#define __SPEFSCR_FINVS\t\t0x00100000\n-#define __SPEFSCR_FDBZS\t\t0x00080000\n-#define __SPEFSCR_FUNFS\t\t0x00040000\n-#define __SPEFSCR_FOVFS\t\t0x00020000\n-#define __SPEFSCR_MODE\t\t0x00010000\n-#define __SPEFSCR_SOV\t\t0x00008000\n-#define __SPEFSCR_OV\t\t0x00004000\n-#define __SPEFSCR_FG\t\t0x00002000\n-#define __SPEFSCR_FX\t\t0x00001000\n-#define __SPEFSCR_FINV\t\t0x00000800\n-#define __SPEFSCR_FDBZ\t\t0x00000400\n-#define __SPEFSCR_FUNF\t\t0x00000200\n-#define __SPEFSCR_FOVF\t\t0x00000100\n-/* 1 unused bit.  */\n-#define __SPEFSCR_FINXE\t\t0x00000040\n-#define __SPEFSCR_FINVE\t\t0x00000020\n-#define __SPEFSCR_FDBZE\t\t0x00000010\n-#define __SPEFSCR_FUNFE\t\t0x00000008\n-#define __SPEFSCR_FOVFE\t\t0x00000004\n-#define __SPEFSCR_FRMC\t\t0x00000003\n-\n-#define __ev_get_spefscr_sovh() (__builtin_spe_mfspefscr () & __SPEFSCR_SOVH)\n-#define __ev_get_spefscr_ovh() (__builtin_spe_mfspefscr () & __SPEFSCR_OVH)\n-#define __ev_get_spefscr_fgh() (__builtin_spe_mfspefscr () & __SPEFSCR_FGH)\n-#define __ev_get_spefscr_fxh() (__builtin_spe_mfspefscr () & __SPEFSCR_FXH)\n-#define __ev_get_spefscr_finvh() (__builtin_spe_mfspefscr () & __SPEFSCR_FINVH)\n-#define __ev_get_spefscr_fdbzh() (__builtin_spe_mfspefscr () & __SPEFSCR_FDBZH)\n-#define __ev_get_spefscr_funfh() (__builtin_spe_mfspefscr () & __SPEFSCR_FUNFH)\n-#define __ev_get_spefscr_fovfh() (__builtin_spe_mfspefscr () & __SPEFSCR_FOVFH)\n-#define __ev_get_spefscr_finxs() (__builtin_spe_mfspefscr () & __SPEFSCR_FINXS)\n-#define __ev_get_spefscr_finvs() (__builtin_spe_mfspefscr () & __SPEFSCR_FINVS)\n-#define __ev_get_spefscr_fdbzs() (__builtin_spe_mfspefscr () & __SPEFSCR_FDBZS)\n-#define __ev_get_spefscr_funfs() (__builtin_spe_mfspefscr () & __SPEFSCR_FUNFS)\n-#define __ev_get_spefscr_fovfs() (__builtin_spe_mfspefscr () & __SPEFSCR_FOVFS)\n-#define __ev_get_spefscr_mode() (__builtin_spe_mfspefscr () & __SPEFSCR_MODE)\n-#define __ev_get_spefscr_sov() (__builtin_spe_mfspefscr () & __SPEFSCR_SOV)\n-#define __ev_get_spefscr_ov() (__builtin_spe_mfspefscr () & __SPEFSCR_OV)\n-#define __ev_get_spefscr_fg() (__builtin_spe_mfspefscr () & __SPEFSCR_FG)\n-#define __ev_get_spefscr_fx() (__builtin_spe_mfspefscr () & __SPEFSCR_FX)\n-#define __ev_get_spefscr_finv() (__builtin_spe_mfspefscr () & __SPEFSCR_FINV)\n-#define __ev_get_spefscr_fdbz() (__builtin_spe_mfspefscr () & __SPEFSCR_FDBZ)\n-#define __ev_get_spefscr_funf() (__builtin_spe_mfspefscr () & __SPEFSCR_FUNF)\n-#define __ev_get_spefscr_fovf() (__builtin_spe_mfspefscr () & __SPEFSCR_FOVF)\n-#define __ev_get_spefscr_finxe() (__builtin_spe_mfspefscr () & __SPEFSCR_FINXE)\n-#define __ev_get_spefscr_finve() (__builtin_spe_mfspefscr () & __SPEFSCR_FINVE)\n-#define __ev_get_spefscr_fdbze() (__builtin_spe_mfspefscr () & __SPEFSCR_FDBZE)\n-#define __ev_get_spefscr_funfe() (__builtin_spe_mfspefscr () & __SPEFSCR_FUNFE)\n-#define __ev_get_spefscr_fovfe() (__builtin_spe_mfspefscr () & __SPEFSCR_FOVFE)\n-#define __ev_get_spefscr_frmc() (__builtin_spe_mfspefscr () & __SPEFSCR_FRMC)\n-\n-static inline void\n-__ev_clr_spefscr_field (int mask)\n-{\n-  int i;\n-\n-  i = __builtin_spe_mfspefscr ();\n-  i &= ~mask;\n-  __builtin_spe_mtspefscr (i);\n-}\n-\n-#define __ev_clr_spefscr_sovh() __ev_clr_spefscr_field (__SPEFSCR_SOVH)\n-#define __ev_clr_spefscr_sov() __ev_clr_spefscr_field (__SPEFSCR_SOV)\n-#define __ev_clr_spefscr_finxs() __ev_clr_spefscr_field (__SPEFSCR_FINXS)\n-#define __ev_clr_spefscr_finvs() __ev_clr_spefscr_field (__SPEFSCR_FINVS)\n-#define __ev_clr_spefscr_fdbzs() __ev_clr_spefscr_field (__SPEFSCR_FDBZS)\n-#define __ev_clr_spefscr_funfs() __ev_clr_spefscr_field (__SPEFSCR_FUNFS)\n-#define __ev_clr_spefscr_fovfs() __ev_clr_spefscr_field (__SPEFSCR_FOVFS)\n-\n-/* Set rounding mode:\n-     rnd = 0 (nearest)\n-     rnd = 1 (zero)\n-     rnd = 2 (+inf)\n-     rnd = 3 (-inf).  */\n-\n-static inline void\n-__ev_set_spefscr_frmc (int rnd)\n-{\n-  int i;\n-\n-  i = __builtin_spe_mfspefscr ();\n-  i &= ~__SPEFSCR_FRMC;\n-  i |= rnd;\n-  __builtin_spe_mtspefscr (i);\n-}\n-\n-/* The SPE PIM says these are declared in <spe.h>, although they are\n-   not provided by GCC: they must be taken from a separate\n-   library.  */\n-extern short int atosfix16 (const char *);\n-extern int atosfix32 (const char *);\n-extern long long atosfix64 (const char *);\n-\n-extern unsigned short atoufix16 (const char *);\n-extern unsigned int atoufix32 (const char *);\n-extern unsigned long long atoufix64 (const char *);\n-\n-extern short int strtosfix16 (const char *, char **);\n-extern int strtosfix32 (const char *, char **);\n-extern long long strtosfix64 (const char *, char **);\n-\n-extern unsigned short int strtoufix16 (const char *, char **);\n-extern unsigned int strtoufix32 (const char *, char **);\n-extern unsigned long long strtoufix64 (const char *, char **);\n-\n-#endif /* _SPE_H */"}, {"sha": "372e1901759c669e91416bb739f3a92c7877b21d", "filename": "gcc/config/rs6000/spe.md", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9596fe8f5dc1b492971b6ecd52c17e9855f5c0/gcc%2Fconfig%2Frs6000%2Fspe.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9596fe8f5dc1b492971b6ecd52c17e9855f5c0/gcc%2Fconfig%2Frs6000%2Fspe.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fspe.md?ref=be9596fe8f5dc1b492971b6ecd52c17e9855f5c0", "patch": "@@ -1,28 +0,0 @@\n-;; e500 SPE description\n-;; Copyright (C) 2002-2017 Free Software Foundation, Inc.\n-;; Contributed by Aldy Hernandez (aldy@quesejoda.com)\n-\n-;; This file is part of GCC.\n-\n-;; GCC is free software; you can redistribute it and/or modify it\n-;; under the terms of the GNU General Public License as published\n-;; by the Free Software Foundation; either version 3, or (at your\n-;; option) any later version.\n-\n-;; GCC is distributed in the hope that it will be useful, but WITHOUT\n-;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-;; License for more details.\n-\n-;; You should have received a copy of the GNU General Public License\n-;; along with GCC; see the file COPYING3.  If not see\n-;; <http://www.gnu.org/licenses/>.\n-\n-;; Modes using a 64-bit register.\n-(define_mode_iterator SPE64 [DF V4HI V2SF V1DI V2SI])\n-\n-;; Likewise, but allow TFmode (two registers) as well.\n-(define_mode_iterator SPE64TF [DF V4HI V2SF V1DI V2SI TF])\n-\n-;; DImode and TImode.\n-(define_mode_iterator DITI [DI TI])"}]}