{"sha": "28eca950b760f1e98f0626a441ffd48b8baad153", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhlY2E5NTBiNzYwZjFlOThmMDYyNmE0NDFmZmQ0OGI4YmFhZDE1Mw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-12-02T15:08:18Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-12-02T15:08:18Z"}, "message": "Fix ambiguity with multiple enable_shared_from_this bases\n\n\tPR libstdc++/56383\n\t* testsuite/20_util/enable_shared_from_this/56383.cc: New.\n\t* include/bits/shared_ptr_base.h (__enable_shared_from_this): Make\n\tfriend declaration match previous declaration of\n\t__enable_shared_from_this_helper.\n\t* include/bits/shared_ptr.h (enable_shared_from_this): Likewise.\n\nFrom-SVN: r231181", "tree": {"sha": "16176a7b9a98ecf16ffc3383b11cf76317a9c0e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16176a7b9a98ecf16ffc3383b11cf76317a9c0e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28eca950b760f1e98f0626a441ffd48b8baad153", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28eca950b760f1e98f0626a441ffd48b8baad153", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28eca950b760f1e98f0626a441ffd48b8baad153", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28eca950b760f1e98f0626a441ffd48b8baad153/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f313d112b04b691b736a75f72af49ca6779e9236", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f313d112b04b691b736a75f72af49ca6779e9236", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f313d112b04b691b736a75f72af49ca6779e9236"}], "stats": {"total": 109, "additions": 93, "deletions": 16}, "files": [{"sha": "eafe38c7ca1ddc6b47dcecd1ba07b99813e4d83f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28eca950b760f1e98f0626a441ffd48b8baad153/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28eca950b760f1e98f0626a441ffd48b8baad153/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=28eca950b760f1e98f0626a441ffd48b8baad153", "patch": "@@ -1,3 +1,12 @@\n+2015-12-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/56383\n+\t* testsuite/20_util/enable_shared_from_this/56383.cc: New.\n+\t* include/bits/shared_ptr_base.h (__enable_shared_from_this): Make\n+\tfriend declaration match previous declaration of\n+\t__enable_shared_from_this_helper.\n+\t* include/bits/shared_ptr.h (enable_shared_from_this): Likewise.\n+\n 2015-12-01  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/experimental/bits/fs_path.h (path::_Cmpt): Move definition"}, {"sha": "26a0ad3d7b73e8b7ee8c8c54ae721fbeaf88027b", "filename": "libstdc++-v3/include/bits/shared_ptr.h", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28eca950b760f1e98f0626a441ffd48b8baad153/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28eca950b760f1e98f0626a441ffd48b8baad153/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr.h?ref=28eca950b760f1e98f0626a441ffd48b8baad153", "patch": "@@ -582,19 +582,25 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t_M_weak_assign(_Tp1* __p, const __shared_count<>& __n) const noexcept\n \t{ _M_weak_this._M_assign(__p, __n); }\n \n-      template<typename _Tp1>\n+      template<typename _Tp1, typename _Tp2>\n \tfriend void\n-\t__enable_shared_from_this_helper(const __shared_count<>& __pn,\n-\t\t\t\t\t const enable_shared_from_this* __pe,\n-\t\t\t\t\t const _Tp1* __px) noexcept\n-\t{\n-\t  if (__pe != nullptr)\n-\t    __pe->_M_weak_assign(const_cast<_Tp1*>(__px), __pn);\n-\t}\n+\t__enable_shared_from_this_helper(const __shared_count<>&,\n+\t\t\t\t\t const enable_shared_from_this<_Tp1>*,\n+\t\t\t\t\t const _Tp2*) noexcept;\n \n       mutable weak_ptr<_Tp>  _M_weak_this;\n     };\n \n+  template<typename _Tp1, typename _Tp2>\n+    inline void\n+    __enable_shared_from_this_helper(const __shared_count<>& __pn,\n+\t\t\t\t     const enable_shared_from_this<_Tp1>*\n+\t\t\t\t     __pe, const _Tp2* __px) noexcept\n+    {\n+      if (__pe != nullptr)\n+\t__pe->_M_weak_assign(const_cast<_Tp2*>(__px), __pn);\n+    }\n+\n   /**\n    *  @brief  Create an object that is owned by a shared_ptr.\n    *  @param  __a     An allocator."}, {"sha": "f4f98e6fdc483bf4396836105002f83d1365ade9", "filename": "libstdc++-v3/include/bits/shared_ptr_base.h", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28eca950b760f1e98f0626a441ffd48b8baad153/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28eca950b760f1e98f0626a441ffd48b8baad153/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h?ref=28eca950b760f1e98f0626a441ffd48b8baad153", "patch": "@@ -1546,19 +1546,25 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t_M_weak_assign(_Tp1* __p, const __shared_count<_Lp>& __n) const noexcept\n \t{ _M_weak_this._M_assign(__p, __n); }\n \n-      template<typename _Tp1>\n+      template<_Lock_policy _Lp1, typename _Tp1, typename _Tp2>\n \tfriend void\n-\t__enable_shared_from_this_helper(const __shared_count<_Lp>& __pn,\n-\t\t\t\t\t const __enable_shared_from_this* __pe,\n-\t\t\t\t\t const _Tp1* __px) noexcept\n-\t{\n-\t  if (__pe != nullptr)\n-\t    __pe->_M_weak_assign(const_cast<_Tp1*>(__px), __pn);\n-\t}\n+\t__enable_shared_from_this_helper(const __shared_count<_Lp1>&,\n+\t\t\t\t\t const __enable_shared_from_this<_Tp1,\n+\t\t\t\t\t _Lp1>*, const _Tp2*) noexcept;\n \n       mutable __weak_ptr<_Tp, _Lp>  _M_weak_this;\n     };\n \n+  template<_Lock_policy _Lp1, typename _Tp1, typename _Tp2>\n+    inline void\n+    __enable_shared_from_this_helper(const __shared_count<_Lp1>& __pn,\n+\t\t\t\t     const __enable_shared_from_this<_Tp1,\n+\t\t\t\t     _Lp1>* __pe,\n+\t\t\t\t     const _Tp2* __px) noexcept\n+    {\n+      if (__pe != nullptr)\n+\t__pe->_M_weak_assign(const_cast<_Tp2*>(__px), __pn);\n+    }\n \n   template<typename _Tp, _Lock_policy _Lp, typename _Alloc, typename... _Args>\n     inline __shared_ptr<_Tp, _Lp>"}, {"sha": "ea0f28da8f5581706a1c39541b5a0d247bbb323b", "filename": "libstdc++-v3/testsuite/20_util/enable_shared_from_this/56383.cc", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28eca950b760f1e98f0626a441ffd48b8baad153/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fenable_shared_from_this%2F56383.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28eca950b760f1e98f0626a441ffd48b8baad153/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fenable_shared_from_this%2F56383.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fenable_shared_from_this%2F56383.cc?ref=28eca950b760f1e98f0626a441ffd48b8baad153", "patch": "@@ -0,0 +1,56 @@\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+\n+#include <memory>\n+#include <testsuite_hooks.h>\n+\n+struct A : std::enable_shared_from_this<A>\n+{\n+    void* a() { return shared_from_this().get(); }\n+};\n+\n+struct B : std::enable_shared_from_this<B>\n+{\n+};\n+\n+struct D : A, B\n+{\n+};\n+\n+void test01()\n+{\n+  bool test = false;\n+\n+  auto d = std::make_shared<D>();\n+  try\n+  {\n+      d->a();\n+  }\n+  catch (const std::bad_weak_ptr&)\n+  {\n+    test = true;\n+  }\n+  VERIFY(test);\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}