{"sha": "7eae5d361e34f2286b133096e66bbc69ed191956", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VhZTVkMzYxZTM0ZjIyODZiMTMzMDk2ZTY2YmJjNjllZDE5MTk1Ng==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-02-22T05:50:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-02-22T05:50:12Z"}, "message": "re PR c++/58170 ([c++11] Crash when aliasing a template class that is a member of its template base class.)\n\n\tPR c++/58170\n\t* parser.c (cp_parser_type_name): Always check dependency.\n\t(cp_parser_type_specifier_seq): Call\n\tcp_parser_parse_and_diagnose_invalid_type_name.\n\nFrom-SVN: r208040", "tree": {"sha": "7c1ad343bef80249818319fe50113d319bf97998", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c1ad343bef80249818319fe50113d319bf97998"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7eae5d361e34f2286b133096e66bbc69ed191956", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eae5d361e34f2286b133096e66bbc69ed191956", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eae5d361e34f2286b133096e66bbc69ed191956", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eae5d361e34f2286b133096e66bbc69ed191956/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2c81d20aa350ddbdfbcbd046d6695189f11d532", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2c81d20aa350ddbdfbcbd046d6695189f11d532", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2c81d20aa350ddbdfbcbd046d6695189f11d532"}], "stats": {"total": 67, "additions": 57, "deletions": 10}, "files": [{"sha": "1b204dcf4be8f9aa24e0a8460da03b19c000b7f0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eae5d361e34f2286b133096e66bbc69ed191956/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eae5d361e34f2286b133096e66bbc69ed191956/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7eae5d361e34f2286b133096e66bbc69ed191956", "patch": "@@ -1,5 +1,10 @@\n 2014-02-21  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/58170\n+\t* parser.c (cp_parser_type_name): Always check dependency.\n+\t(cp_parser_type_specifier_seq): Call\n+\tcp_parser_parse_and_diagnose_invalid_type_name.\n+\n \tPR c++/60108\n \t* semantics.c (expand_or_defer_fn_1): Check DECL_DEFAULTED_FN.\n "}, {"sha": "1e9803263067e1950de88e2ea975182a68dab8a7", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eae5d361e34f2286b133096e66bbc69ed191956/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eae5d361e34f2286b133096e66bbc69ed191956/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=7eae5d361e34f2286b133096e66bbc69ed191956", "patch": "@@ -14763,7 +14763,7 @@ cp_parser_type_name (cp_parser* parser)\n \t instantiation of an alias template...  */\n       type_decl = cp_parser_template_id (parser,\n \t\t\t\t\t /*template_keyword_p=*/false,\n-\t\t\t\t\t /*check_dependency_p=*/false,\n+\t\t\t\t\t /*check_dependency_p=*/true,\n \t\t\t\t\t none_type,\n \t\t\t\t\t /*is_declaration=*/false);\n       /* Note that this must be an instantiation of an alias template\n@@ -18083,7 +18083,16 @@ cp_parser_type_specifier_seq (cp_parser* parser,\n \t     type-specifier-seq at all.  */\n \t  if (!seen_type_specifier)\n \t    {\n-\t      cp_parser_error (parser, \"expected type-specifier\");\n+\t      /* Set in_declarator_p to avoid skipping to the semicolon.  */\n+\t      int in_decl = parser->in_declarator_p;\n+\t      parser->in_declarator_p = true;\n+\n+\t      if (cp_parser_uncommitted_to_tentative_parse_p (parser)\n+\t\t  || !cp_parser_parse_and_diagnose_invalid_type_name (parser))\n+\t\tcp_parser_error (parser, \"expected type-specifier\");\n+\n+\t      parser->in_declarator_p = in_decl;\n+\n \t      type_specifier_seq->type = error_mark_node;\n \t      return;\n \t    }"}, {"sha": "f8bff782032a9b7b6247f44b5c994ff488cb2291", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-40.C", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eae5d361e34f2286b133096e66bbc69ed191956/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-40.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eae5d361e34f2286b133096e66bbc69ed191956/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-40.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-40.C?ref=7eae5d361e34f2286b133096e66bbc69ed191956", "patch": "@@ -0,0 +1,33 @@\n+// PR c++/58170\n+// { dg-require-effective-target c++11 }\n+// { dg-prune-output \"not declared\" }\n+// { dg-prune-output \"expected\" }\n+\n+template <typename T, typename U>\n+struct base {\n+  template <typename V>\n+  struct derived;\n+};\n+\n+template <typename T, typename U>\n+template <typename V>\n+struct base<T, U>::derived : public base<T, V> {\n+};\n+\n+// This (wrong?) alias declaration provokes the crash.\n+template <typename T, typename U, typename V>\n+using alias = base<T, U>::derived<V>; // { dg-error \"template|typename\" }\n+\n+// This one works:\n+// template <typename T, typename U, typename V>\n+// using alias = typename base<T, U>::template derived<V>;\n+\n+template <typename T>\n+void f() {\n+  alias<T, bool, char> m{};\n+  (void) m;\n+}\n+\n+int main() {\n+  f<int>();\n+}"}, {"sha": "a99207792ae073001b98f4ef0e45ad52c5f31c54", "filename": "gcc/testsuite/g++.dg/cpp0x/error8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eae5d361e34f2286b133096e66bbc69ed191956/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ferror8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eae5d361e34f2286b133096e66bbc69ed191956/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ferror8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ferror8.C?ref=7eae5d361e34f2286b133096e66bbc69ed191956", "patch": "@@ -3,5 +3,5 @@\n \n struct A\n {\n-  int* p = new foo; // { dg-error \"16:expected type-specifier\" }\n+  int* p = new foo; // { dg-error \"16:foo. does not name a type\" }\n };"}, {"sha": "695f9a3810965c1e0ce506ab5d732bfd128d0975", "filename": "gcc/testsuite/g++.dg/cpp0x/override4.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eae5d361e34f2286b133096e66bbc69ed191956/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverride4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eae5d361e34f2286b133096e66bbc69ed191956/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverride4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverride4.C?ref=7eae5d361e34f2286b133096e66bbc69ed191956", "patch": "@@ -16,12 +16,12 @@ struct B2\n \n struct B3\n {\n-  virtual auto f() -> final void; // { dg-error \"expected type-specifier\" }\n+  virtual auto f() -> final void; // { dg-error \"type\" }\n };\n \n struct B4\n {\n-  virtual auto f() -> final void {} // { dg-error \"expected type-specifier\" }\n+  virtual auto f() -> final void {} // { dg-error \"type\" }\n };\n \n struct D : B\n@@ -36,10 +36,10 @@ struct D2 : B\n \n struct D3 : B\n {\n-  virtual auto g() -> override void; // { dg-error \"expected type-specifier\" }\n+  virtual auto g() -> override void; // { dg-error \"type\" }\n };\n \n struct D4 : B\n {\n-  virtual auto g() -> override void {} // { dg-error \"expected type-specifier\" }\n+  virtual auto g() -> override void {} // { dg-error \"type\" }\n };"}, {"sha": "999cd9f35bd97df18fd6b311905a38561c859b95", "filename": "gcc/testsuite/g++.dg/ext/underlying_type1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eae5d361e34f2286b133096e66bbc69ed191956/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Funderlying_type1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eae5d361e34f2286b133096e66bbc69ed191956/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Funderlying_type1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Funderlying_type1.C?ref=7eae5d361e34f2286b133096e66bbc69ed191956", "patch": "@@ -8,7 +8,7 @@ template<typename T>\n   { typedef __underlying_type(T) type; }; // { dg-error \"not an enumeration\" }\n \n __underlying_type(int) i1; // { dg-error \"not an enumeration|invalid\" }\n-__underlying_type(A)   i2; // { dg-error \"expected\" }\n+__underlying_type(A)   i2; // { dg-error \"expected|type\" }\n __underlying_type(B)   i3; // { dg-error \"not an enumeration|invalid\" }\n __underlying_type(U)   i4; // { dg-error \"not an enumeration|invalid\" }\n "}, {"sha": "020ddf079acb33f947e15253d4a32f00a0590553", "filename": "gcc/testsuite/g++.dg/parse/crash48.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eae5d361e34f2286b133096e66bbc69ed191956/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash48.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eae5d361e34f2286b133096e66bbc69ed191956/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash48.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash48.C?ref=7eae5d361e34f2286b133096e66bbc69ed191956", "patch": "@@ -5,5 +5,5 @@ void\n foo (bool b)\n {\n   if (b)\n-    try { throw 0; } catch (X) { }\t// { dg-error \"expected type-specifier before\" }\n+    try { throw 0; } catch (X) { }\t// { dg-error \"type\" }\n }"}, {"sha": "9d392afa84f13592a8b5eaf315d6fe2cf76af643", "filename": "gcc/testsuite/g++.dg/parse/error49.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eae5d361e34f2286b133096e66bbc69ed191956/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror49.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eae5d361e34f2286b133096e66bbc69ed191956/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror49.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror49.C?ref=7eae5d361e34f2286b133096e66bbc69ed191956", "patch": "@@ -2,5 +2,5 @@\n \n int main()\n {\n-  int* p = new foo; // { dg-error \"16:expected type-specifier\" }\n+  int* p = new foo; // { dg-error \"16:type\" }\n }"}]}