{"sha": "7dcac7d1468a3b5b69f5a04d2ca0919b515fddba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RjYWM3ZDE0NjhhM2I1YjY5ZjVhMDRkMmNhMDkxOWI1MTVmZGRiYQ==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-05-24T13:04:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-24T13:04:24Z"}, "message": "[Ada] Crash on compilation unit instance\n\nDo not generate a variable marker for a reference which appears within the\nformal part of an instantiation which acts as a compilation unit because\nthere is no suitable insertion context.\n\n------------\n-- Source --\n------------\n\n--  gnat.adc\n\npragma SPARK_Mode (On);\n\n--  gen.ads\n\ngeneric\n   Val_1 : Integer;\n   Val_2 : Integer;\npackage Gen is\nend Gen;\n\n--  pack.ads\n\npackage Pack is\n   Val : Integer := 123;\n\n   function Get_Val return Integer;\nend Pack;\n\n--  inst.ads\n\nwith Gen;\nwith Pack; use Pack;\n\npackage Inst is new Gen (Val, Get_Val);\n\n--  proc.adb\n\nwith Pack; use Pack;\n\nprocedure Proc (Val_1 : Integer := Val; Val_2 : Integer := Get_Val) is\nbegin null; end Proc;\n\n-----------------\n-- Compilation --\n-----------------\n\n$ gcc -c inst.ads\n$ gcc -c inst.ads -gnatd.F\n$ gcc -c proc.adb\n$ gcc -c proc.adb -gnatd.F\n\n2018-05-24  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* sem_elab.adb (Build_Variable_Reference_Marker): Do not create a\n\tvariable marker when the reference appears in the formal part of a\n\tcompilation unit instance because there is no place to insert it.\n\t(In_Compilation_Instance_Formal_Part): New routine.\n\nFrom-SVN: r260643", "tree": {"sha": "c89008dcaf0bbb3973a888a86bc8f877ba4baf12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c89008dcaf0bbb3973a888a86bc8f877ba4baf12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7dcac7d1468a3b5b69f5a04d2ca0919b515fddba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dcac7d1468a3b5b69f5a04d2ca0919b515fddba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dcac7d1468a3b5b69f5a04d2ca0919b515fddba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dcac7d1468a3b5b69f5a04d2ca0919b515fddba/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "443ee9566b50a59f4e1a057ffdda8fba4002dde3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/443ee9566b50a59f4e1a057ffdda8fba4002dde3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/443ee9566b50a59f4e1a057ffdda8fba4002dde3"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "8d4b0fc3be8176f4f105508d8ff435797f34a47e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dcac7d1468a3b5b69f5a04d2ca0919b515fddba/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dcac7d1468a3b5b69f5a04d2ca0919b515fddba/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7dcac7d1468a3b5b69f5a04d2ca0919b515fddba", "patch": "@@ -1,3 +1,10 @@\n+2018-05-24  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_elab.adb (Build_Variable_Reference_Marker): Do not create a\n+\tvariable marker when the reference appears in the formal part of a\n+\tcompilation unit instance because there is no place to insert it.\n+\t(In_Compilation_Instance_Formal_Part): New routine.\n+\n 2018-05-24  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* layout.ads, repinfo.ads: Fix references to renamed Backend_Layout"}, {"sha": "0b7fcb49493d25dbd954b1aedcbd0ec28be79473", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dcac7d1468a3b5b69f5a04d2ca0919b515fddba/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dcac7d1468a3b5b69f5a04d2ca0919b515fddba/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=7dcac7d1468a3b5b69f5a04d2ca0919b515fddba", "patch": "@@ -2274,9 +2274,44 @@ package body Sem_Elab is\n       Read  : Boolean;\n       Write : Boolean)\n    is\n+      function In_Compilation_Instance_Formal_Part\n+        (Nod : Node_Id) return Boolean;\n+      --  Determine whether arbitrary node Nod appears within the formal part\n+      --  of an instantiation which acts as a compilation unit.\n+\n       function In_Pragma (Nod : Node_Id) return Boolean;\n       --  Determine whether arbitrary node Nod appears within a pragma\n \n+      -----------------------------------------\n+      -- In_Compilation_Instance_Formal_Part --\n+      -----------------------------------------\n+\n+      function In_Compilation_Instance_Formal_Part\n+        (Nod : Node_Id) return Boolean\n+      is\n+         Par : Node_Id;\n+\n+      begin\n+         Par := Nod;\n+         while Present (Par) loop\n+            if Nkind (Par) = N_Generic_Association\n+              and then Nkind (Parent (Par)) in N_Generic_Instantiation\n+              and then Nkind (Parent (Parent (Par))) = N_Compilation_Unit\n+            then\n+               return True;\n+\n+            --  Prevent the search from going too far\n+\n+            elsif Is_Body_Or_Package_Declaration (Par) then\n+               exit;\n+            end if;\n+\n+            Par := Parent (Par);\n+         end loop;\n+\n+         return False;\n+      end In_Compilation_Instance_Formal_Part;\n+\n       ---------------\n       -- In_Pragma --\n       ---------------\n@@ -2349,6 +2384,15 @@ package body Sem_Elab is\n                   and then Entity (N) /= Any_Id)\n       then\n          return;\n+\n+      --  Nothing to do when the reference appears within the formal part of\n+      --  an instantiation which acts as compilation unit because there is no\n+      --  proper context for the insertion of the marker.\n+\n+      --  Performance note: parent traversal\n+\n+      elsif In_Compilation_Instance_Formal_Part (N) then\n+         return;\n       end if;\n \n       Extract_Variable_Reference_Attributes"}]}