{"sha": "eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFlNjY1NzhjZWI3YTZkMDdkZDU4ZjE4ZWU4YmJhNWMzMWRlNDY4ZA==", "commit": {"author": {"name": "Patrick Bernardi", "email": "bernardi@adacore.com", "date": "2017-01-06T12:06:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-06T12:06:41Z"}, "message": "aspects.adb, [...]: Reverted previous change for now.\n\n2017-01-06  Patrick Bernardi  <bernardi@adacore.com>\n\n\t* aspects.adb, aspects.ads, exp_ch3.adb, exp_ch9.adb, par-prag.adb,\n\tsem_ch13.adb, sem_prag.adb, sem_prag.ads, snames.adb-tmpl,\n\tsnames.ads-tmpl, s-secsta.adb, s-secsta.ads, s-tarest.adb,\n\ts-tarest.ads, s-taskin.adb, s-taskin.ads, s-tassta.adb, s-tassta.ads:\n\tReverted previous change for now.\n\nFrom-SVN: r244148", "tree": {"sha": "f5ee54254de97a004cfcba3ffc99a1ef2e2f31bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5ee54254de97a004cfcba3ffc99a1ef2e2f31bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/comments", "author": {"login": "burratoo", "id": 23646118, "node_id": "MDQ6VXNlcjIzNjQ2MTE4", "avatar_url": "https://avatars.githubusercontent.com/u/23646118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burratoo", "html_url": "https://github.com/burratoo", "followers_url": "https://api.github.com/users/burratoo/followers", "following_url": "https://api.github.com/users/burratoo/following{/other_user}", "gists_url": "https://api.github.com/users/burratoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/burratoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burratoo/subscriptions", "organizations_url": "https://api.github.com/users/burratoo/orgs", "repos_url": "https://api.github.com/users/burratoo/repos", "events_url": "https://api.github.com/users/burratoo/events{/privacy}", "received_events_url": "https://api.github.com/users/burratoo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e666e744789bce7e018bafd8893bac3fa27903d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e666e744789bce7e018bafd8893bac3fa27903d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e666e744789bce7e018bafd8893bac3fa27903d8"}], "stats": {"total": 580, "additions": 174, "deletions": 406}, "files": [{"sha": "a8d4a00a1b6ecf66a52b9671d669d660b163f160", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "patch": "@@ -1,3 +1,11 @@\n+2017-01-06  Patrick Bernardi  <bernardi@adacore.com>\n+\n+\t* aspects.adb, aspects.ads, exp_ch3.adb, exp_ch9.adb, par-prag.adb,\n+\tsem_ch13.adb, sem_prag.adb, sem_prag.ads, snames.adb-tmpl,\n+\tsnames.ads-tmpl, s-secsta.adb, s-secsta.ads, s-tarest.adb,\n+\ts-tarest.ads, s-taskin.adb, s-taskin.ads, s-tassta.adb, s-tassta.ads:\n+\tReverted previous change for now.\n+\n 2017-01-06  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch3.adb (Build_Initialization_Call): Apply predicate"}, {"sha": "0da6b812c9745dc22dd02bed3370877f1e1915a7", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "patch": "@@ -599,7 +599,6 @@ package body Aspects is\n     Aspect_Read                         => Aspect_Read,\n     Aspect_Relative_Deadline            => Aspect_Relative_Deadline,\n     Aspect_Scalar_Storage_Order         => Aspect_Scalar_Storage_Order,\n-    Aspect_Secondary_Stack_Size         => Aspect_Secondary_Stack_Size,\n     Aspect_Shared                       => Aspect_Atomic,\n     Aspect_Shared_Passive               => Aspect_Shared_Passive,\n     Aspect_Simple_Storage_Pool          => Aspect_Simple_Storage_Pool,"}, {"sha": "5de6539b0a587888f71d2d6e124cd4a693744ef4", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "patch": "@@ -135,7 +135,6 @@ package Aspects is\n       Aspect_Refined_State,                 -- GNAT\n       Aspect_Relative_Deadline,\n       Aspect_Scalar_Storage_Order,          -- GNAT\n-      Aspect_Secondary_Stack_Size,          -- GNAT\n       Aspect_Simple_Storage_Pool,           -- GNAT\n       Aspect_Size,\n       Aspect_Small,\n@@ -256,7 +255,6 @@ package Aspects is\n       Aspect_Pure_Function              => True,\n       Aspect_Remote_Access_Type         => True,\n       Aspect_Scalar_Storage_Order       => True,\n-      Aspect_Secondary_Stack_Size       => True,\n       Aspect_Shared                     => True,\n       Aspect_Simple_Storage_Pool        => True,\n       Aspect_Simple_Storage_Pool_Type   => True,\n@@ -376,7 +374,6 @@ package Aspects is\n       Aspect_Refined_State              => Expression,\n       Aspect_Relative_Deadline          => Expression,\n       Aspect_Scalar_Storage_Order       => Expression,\n-      Aspect_Secondary_Stack_Size       => Expression,\n       Aspect_Simple_Storage_Pool        => Name,\n       Aspect_Size                       => Expression,\n       Aspect_Small                      => Expression,\n@@ -497,7 +494,6 @@ package Aspects is\n       Aspect_Remote_Call_Interface        => Name_Remote_Call_Interface,\n       Aspect_Remote_Types                 => Name_Remote_Types,\n       Aspect_Scalar_Storage_Order         => Name_Scalar_Storage_Order,\n-      Aspect_Secondary_Stack_Size         => Name_Secondary_Stack_Size,\n       Aspect_Shared                       => Name_Shared,\n       Aspect_Shared_Passive               => Name_Shared_Passive,\n       Aspect_Simple_Storage_Pool          => Name_Simple_Storage_Pool,\n@@ -696,7 +692,6 @@ package Aspects is\n       Aspect_Remote_Access_Type           => Always_Delay,\n       Aspect_Remote_Call_Interface        => Always_Delay,\n       Aspect_Remote_Types                 => Always_Delay,\n-      Aspect_Secondary_Stack_Size         => Always_Delay,\n       Aspect_Shared                       => Always_Delay,\n       Aspect_Shared_Passive               => Always_Delay,\n       Aspect_Simple_Storage_Pool          => Always_Delay,"}, {"sha": "cd349dbdd8c510f91e852f4febc4829385a74136", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "patch": "@@ -1485,7 +1485,7 @@ package body Exp_Ch3 is\n                   --  The constraints come from the discriminant default exps,\n                   --  they must be reevaluated, so we use New_Copy_Tree but we\n                   --  ensure the proper Sloc (for any embedded calls).\n-                  --  In addtion, if a predicate check is needed on the value\n+                  --  In addition, if a predicate check is needed on the value\n                   --  of the discriminant, insert it ahead of the call.\n \n                   Arg := New_Copy_Tree (Arg, New_Sloc => Loc);\n@@ -1495,7 +1495,7 @@ package body Exp_Ch3 is\n                     and then not Predicates_Ignored (Etype (Discr))\n                   then\n                      Prepend_To (Res,\n-                        Make_Predicate_Check (Etype (Discr), Arg));\n+                       Make_Predicate_Check (Etype (Discr), Arg));\n                   end if;\n                end if;\n             end if;\n@@ -1741,7 +1741,7 @@ package body Exp_Ch3 is\n          end if;\n \n          --  If a component type has a predicate, add check to the component\n-         --  assignment. Discriminants are hnndled at the point of the call,\n+         --  assignment. Discriminants are handled at the point of the call,\n          --  which provides for a better error message.\n \n          if Comes_From_Source (Exp)\n@@ -2730,17 +2730,15 @@ package body Exp_Ch3 is\n                      Actions := Build_Assignment (Id, Expression (Decl));\n                   end if;\n \n-               --  CPU, Dispatching_Domain, Priority and\n-               --  Secondary_Stack_Size components are filled with the\n-               --  corresponding rep item expression of the concurrent\n-               --  type (if any).\n+               --  CPU, Dispatching_Domain, Priority and Size components are\n+               --  filled with the corresponding rep item expression of the\n+               --  concurrent type (if any).\n \n                elsif Ekind (Scope (Id)) = E_Record_Type\n                  and then Present (Corresponding_Concurrent_Type (Scope (Id)))\n                  and then Nam_In (Chars (Id), Name_uCPU,\n                                               Name_uDispatching_Domain,\n-                                              Name_uPriority,\n-                                              Name_uSecondary_Stack_Size)\n+                                              Name_uPriority)\n                then\n                   declare\n                      Exp   : Node_Id;\n@@ -2756,9 +2754,6 @@ package body Exp_Ch3 is\n \n                      elsif Chars (Id) = Name_uPriority then\n                         Nam := Name_Priority;\n-\n-                     elsif Chars (Id) = Name_uSecondary_Stack_Size then\n-                        Nam := Name_Secondary_Stack_Size;\n                      end if;\n \n                      --  Get the Rep Item (aspect specification, attribute"}, {"sha": "7eb38b5e4d1a05286beb6eeb3402a6b4592e44b6", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 8, "deletions": 57, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "patch": "@@ -11553,15 +11553,14 @@ package body Exp_Ch9 is\n    --  values of this task. The general form of this type declaration is\n \n    --    type taskV (discriminants) is record\n-   --      _Task_Id              : Task_Id;\n-   --      entry_family          : array (bounds) of Void;\n-   --      _Priority             : Integer            := priority_expression;\n-   --      _Size                 : Size_Type          := size_expression;\n-   --      _Secondary_Stack_Size : Size_Type          := size_expression;\n-   --      _Task_Info            : Task_Info_Type     := task_info_expression;\n-   --      _CPU                  : Integer            := cpu_range_expression;\n-   --      _Relative_Deadline    : Time_Span          := time_span_expression;\n-   --      _Domain               : Dispatching_Domain := dd_expression;\n+   --      _Task_Id           : Task_Id;\n+   --      entry_family       : array (bounds) of Void;\n+   --      _Priority          : Integer            := priority_expression;\n+   --      _Size              : Size_Type          := size_expression;\n+   --      _Task_Info         : Task_Info_Type     := task_info_expression;\n+   --      _CPU               : Integer            := cpu_range_expression;\n+   --      _Relative_Deadline : Time_Span          := time_span_expression;\n+   --      _Domain            : Dispatching_Domain := dd_expression;\n    --    end record;\n \n    --  The discriminants are present only if the corresponding task type has\n@@ -11585,13 +11584,6 @@ package body Exp_Ch9 is\n    --  in the pragma, and is used to override the task stack size otherwise\n    --  associated with the task type.\n \n-   --  The _Secondary_Stack_Size field is present only the task entity has a\n-   --  Secondary_Stack_Size rep item. It will be filled at the freeze point,\n-   --  when the record init proc is built, to capture the expression of the\n-   --  rep item (see Build_Record_Init_Proc in Exp_Ch3). Note that it cannot\n-   --  be filled here since aspect evaluations are delayed till the freeze\n-   --  point.\n-\n    --  The _Priority field is present only if the task entity has a Priority or\n    --  Interrupt_Priority rep item (pragma, aspect specification or attribute\n    --  definition clause). It will be filled at the freeze point, when the\n@@ -11931,24 +11923,6 @@ package body Exp_Ch9 is\n                        Get_Rep_Pragma (TaskId, Name_Storage_Size))))))));\n       end if;\n \n-      --  Add the _Secondary_Stack_Size component if a\n-      --  Secondary_Stack_Size rep item is present.\n-\n-      if Has_Rep_Item (TaskId, Name_Secondary_Stack_Size,\n-                       Check_Parents => False)\n-      then\n-         Append_To (Cdecls,\n-           Make_Component_Declaration (Loc,\n-             Defining_Identifier =>\n-               Make_Defining_Identifier (Loc, Name_uSecondary_Stack_Size),\n-\n-             Component_Definition =>\n-               Make_Component_Definition (Loc,\n-                 Aliased_Present    => False,\n-                 Subtype_Indication =>\n-                   New_Occurrence_Of (RTE (RE_Size_Type), Loc))));\n-      end if;\n-\n       --  Add the _Task_Info component if a Task_Info pragma is present\n \n       if Has_Rep_Pragma (TaskId, Name_Task_Info, Check_Parents => False) then\n@@ -14140,29 +14114,6 @@ package body Exp_Ch9 is\n            New_Occurrence_Of (Storage_Size_Variable (Ttyp), Loc));\n       end if;\n \n-      --  Secondary_Stack_Size parameter. Set Default_Secondary_Stack_Size\n-      --  unless there is a Secondary_Stack_Size rep item, in which case we\n-      --  take the value from the rep item. If the restriction\n-      --  No_Secondary_Stack is active then a size of 0 is passed regardless\n-      --  to prevent the allocation of the unused stack.\n-\n-      if Restriction_Active (No_Secondary_Stack) then\n-         Append_To (Args, Make_Integer_Literal (Loc, 0));\n-\n-      elsif Has_Rep_Item (Ttyp, Name_Secondary_Stack_Size,\n-                       Check_Parents => False)\n-      then\n-         Append_To (Args,\n-             Make_Selected_Component (Loc,\n-               Prefix        => Make_Identifier (Loc, Name_uInit),\n-               Selector_Name =>\n-                 Make_Identifier (Loc, Name_uSecondary_Stack_Size)));\n-\n-      else\n-         Append_To (Args,\n-           New_Occurrence_Of (RTE (RE_Unspecified_Size), Loc));\n-      end if;\n-\n       --  Task_Info parameter. Set to Unspecified_Task_Info unless there is a\n       --  Task_Info pragma, in which case we take the value from the pragma.\n "}, {"sha": "ff939f6848d97758db534042e44c657dda3de887", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "patch": "@@ -1452,7 +1452,6 @@ begin\n            Pragma_Ravenscar                      |\n            Pragma_Rename_Pragma                  |\n            Pragma_Reviewable                     |\n-           Pragma_Secondary_Stack_Size           |\n            Pragma_Share_Generic                  |\n            Pragma_Shared                         |\n            Pragma_Shared_Passive                 |"}, {"sha": "30e03debf46735b01aab28f3dfc5e4ad2b2c2e58", "filename": "gcc/ada/s-secsta.adb", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fs-secsta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fs-secsta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-secsta.adb?ref=eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "patch": "@@ -170,15 +170,6 @@ package body System.Secondary_Stack is\n      Ada.Unchecked_Conversion (Address, Fixed_Stack_Ptr);\n    --  Convert from address stored in task data structures\n \n-   ----------------------------------\n-   -- Minumum_Secondary_Stack_Size --\n-   ----------------------------------\n-\n-   function Minimum_Secondary_Stack_Size return Natural is\n-   begin\n-      return Dummy_Fixed_Stack.Mem'Position;\n-   end Minimum_Secondary_Stack_Size;\n-\n    --------------\n    -- Allocate --\n    --------------\n@@ -441,7 +432,7 @@ package body System.Secondary_Stack is\n             Fixed_Stack.Top  := 0;\n             Fixed_Stack.Max  := 0;\n \n-            if Size <= Dummy_Fixed_Stack.Mem'Position then\n+            if Size < Dummy_Fixed_Stack.Mem'Position then\n                Fixed_Stack.Last := 0;\n             else\n                Fixed_Stack.Last :="}, {"sha": "c95171a61df91e017569c8fa3c29a8b6bad3c3c3", "filename": "gcc/ada/s-secsta.ads", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fs-secsta.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fs-secsta.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-secsta.ads?ref=eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "patch": "@@ -42,10 +42,6 @@ package System.Secondary_Stack is\n    --  which causes the binder to generate an appropriate assignment in the\n    --  binder generated file.\n \n-   function Minimum_Secondary_Stack_Size return Natural;\n-   --  The minimum size of the secondary stack so that the internal\n-   --  requirements of the stack are met.\n-\n    procedure SS_Init\n      (Stk  : in out Address;\n       Size : Natural := Default_Secondary_Stack_Size);"}, {"sha": "a117da3732a9915125b6161dc54bf665e3c40e99", "filename": "gcc/ada/s-tarest.adb", "status": "modified", "additions": 51, "deletions": 79, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fs-tarest.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fs-tarest.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tarest.adb?ref=eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "patch": "@@ -116,17 +116,16 @@ package body System.Tasking.Restricted.Stages is\n    --  This should only be called by the Task_Wrapper procedure.\n \n    procedure Create_Restricted_Task\n-     (Priority             : Integer;\n-      Stack_Address        : System.Address;\n-      Size                 : System.Parameters.Size_Type;\n-      Secondary_Stack_Size : System.Storage_Elements.Storage_Offset;\n-      Task_Info            : System.Task_Info.Task_Info_Type;\n-      CPU                  : Integer;\n-      State                : Task_Procedure_Access;\n-      Discriminants        : System.Address;\n-      Elaborated           : Access_Boolean;\n-      Task_Image           : String;\n-      Created_Task         : Task_Id);\n+     (Priority      : Integer;\n+      Stack_Address : System.Address;\n+      Size          : System.Parameters.Size_Type;\n+      Task_Info     : System.Task_Info.Task_Info_Type;\n+      CPU           : Integer;\n+      State         : Task_Procedure_Access;\n+      Discriminants : System.Address;\n+      Elaborated    : Access_Boolean;\n+      Task_Image    : String;\n+      Created_Task  : Task_Id);\n    --  Code shared between Create_Restricted_Task (the concurrent version) and\n    --  Create_Restricted_Task_Sequential. See comment of the former in the\n    --  specification of this package.\n@@ -206,31 +205,11 @@ package body System.Tasking.Restricted.Stages is\n       --\n       --  DO NOT delete ID. As noted, it is needed on some targets.\n \n-      function Secondary_Stack_Size return Storage_Elements.Storage_Offset;\n-      --  Returns the size of the secondary stack for the task. The function\n-      --  will return the ATCB field Secondary_Stack_Size if it is not set to\n-      --  Unspecified_Size, otherwise a percentage of the stack is reserved\n-      --  using the System.Parameters.Sec_Stack_Percentage property.\n+      use type SSE.Storage_Offset;\n \n-      function Secondary_Stack_Size return Storage_Elements.Storage_Offset is\n-         use System.Storage_Elements;\n-         use System.Parameters;\n-      begin\n-         if Self_ID.Common.Secondary_Stack_Size = Unspecified_Size then\n-            if Sec_Stack_Percentage = Dynamic then\n-               return Default_Secondary_Stack_Size;\n-            else\n-               return (Self_ID.Common.Compiler_Data.Pri_Stack_Info.Size\n-                       * SSE.Storage_Offset (Sec_Stack_Percentage) / 100);\n-            end if;\n-         else\n-            return Storage_Offset (Self_ID.Common.Secondary_Stack_Size) +\n-                     Storage_Offset (Minimum_Secondary_Stack_Size);\n-         end if;\n-      end Secondary_Stack_Size;\n-\n-      Secondary_Stack : aliased Storage_Elements.Storage_Array\n-                          (1 .. Secondary_Stack_Size);\n+      Secondary_Stack : aliased SSE.Storage_Array\n+        (1 .. Self_ID.Common.Compiler_Data.Pri_Stack_Info.Size *\n+                SSE.Storage_Offset (Parameters.Sec_Stack_Percentage) / 100);\n       for Secondary_Stack'Alignment use Standard'Maximum_Alignment;\n       --  This is the secondary stack data. Note that it is critical that this\n       --  have maximum alignment, since any kind of data can be allocated here.\n@@ -526,17 +505,16 @@ package body System.Tasking.Restricted.Stages is\n    ----------------------------\n \n    procedure Create_Restricted_Task\n-     (Priority             : Integer;\n-      Stack_Address        : System.Address;\n-      Size                 : System.Parameters.Size_Type;\n-      Secondary_Stack_Size : System.Parameters.Size_Type;\n-      Task_Info            : System.Task_Info.Task_Info_Type;\n-      CPU                  : Integer;\n-      State                : Task_Procedure_Access;\n-      Discriminants        : System.Address;\n-      Elaborated           : Access_Boolean;\n-      Task_Image           : String;\n-      Created_Task         : Task_Id)\n+     (Priority      : Integer;\n+      Stack_Address : System.Address;\n+      Size          : System.Parameters.Size_Type;\n+      Task_Info     : System.Task_Info.Task_Info_Type;\n+      CPU           : Integer;\n+      State         : Task_Procedure_Access;\n+      Discriminants : System.Address;\n+      Elaborated    : Access_Boolean;\n+      Task_Image    : String;\n+      Created_Task  : Task_Id)\n    is\n       Self_ID       : constant Task_Id := STPO.Self;\n       Base_Priority : System.Any_Priority;\n@@ -595,8 +573,7 @@ package body System.Tasking.Restricted.Stages is\n \n       Initialize_ATCB\n         (Self_ID, State, Discriminants, Self_ID, Elaborated, Base_Priority,\n-         Base_CPU, null, Task_Info, Size, Secondary_Stack_Size,\n-         Created_Task, Success);\n+         Base_CPU, null, Task_Info, Size, Created_Task, Success);\n \n       --  If we do our job right then there should never be any failures, which\n       --  was probably said about the Titanic; so just to be safe, let's retain\n@@ -633,18 +610,17 @@ package body System.Tasking.Restricted.Stages is\n    end Create_Restricted_Task;\n \n    procedure Create_Restricted_Task\n-     (Priority             : Integer;\n-      Stack_Address        : System.Address;\n-      Size                 : System.Parameters.Size_Type;\n-      Secondary_Stack_Size : System.Parameters.Size_Types;\n-      Task_Info            : System.Task_Info.Task_Info_Type;\n-      CPU                  : Integer;\n-      State                : Task_Procedure_Access;\n-      Discriminants        : System.Address;\n-      Elaborated           : Access_Boolean;\n-      Chain                : in out Activation_Chain;\n-      Task_Image           : String;\n-      Created_Task         : Task_Id)\n+     (Priority      : Integer;\n+      Stack_Address : System.Address;\n+      Size          : System.Parameters.Size_Type;\n+      Task_Info     : System.Task_Info.Task_Info_Type;\n+      CPU           : Integer;\n+      State         : Task_Procedure_Access;\n+      Discriminants : System.Address;\n+      Elaborated    : Access_Boolean;\n+      Chain         : in out Activation_Chain;\n+      Task_Image    : String;\n+      Created_Task  : Task_Id)\n    is\n    begin\n       if Partition_Elaboration_Policy = 'S' then\n@@ -655,15 +631,13 @@ package body System.Tasking.Restricted.Stages is\n          --  sequential, activation must be deferred.\n \n          Create_Restricted_Task_Sequential\n-           (Priority, Stack_Address, Size, Secondary_Stack_Size,\n-            Task_Info, CPU, State, Discriminants, Elaborated,\n-            Task_Image, Created_Task);\n+           (Priority, Stack_Address, Size, Task_Info, CPU, State,\n+            Discriminants, Elaborated, Task_Image, Created_Task);\n \n       else\n          Create_Restricted_Task\n-           (Priority, Stack_Address, Size, Secondary_Stack_Size,\n-            Task_Info, CPU, State, Discriminants, Elaborated,\n-            Task_Image, Created_Task);\n+           (Priority, Stack_Address, Size, Task_Info, CPU, State,\n+            Discriminants, Elaborated, Task_Image, Created_Task);\n \n          --  Append this task to the activation chain\n \n@@ -677,20 +651,18 @@ package body System.Tasking.Restricted.Stages is\n    ---------------------------------------\n \n    procedure Create_Restricted_Task_Sequential\n-     (Priority             : Integer;\n-      Stack_Address        : System.Address;\n-      Size                 : System.Parameters.Size_Type;\n-      Secondary_Stack_Size : System.Parameters.Size_Type;\n-      Task_Info            : System.Task_Info.Task_Info_Type;\n-      CPU                  : Integer;\n-      State                : Task_Procedure_Access;\n-      Discriminants        : System.Address;\n-      Elaborated           : Access_Boolean;\n-      Task_Image           : String;\n-      Created_Task         : Task_Id) is\n+     (Priority      : Integer;\n+      Stack_Address : System.Address;\n+      Size          : System.Parameters.Size_Type;\n+      Task_Info     : System.Task_Info.Task_Info_Type;\n+      CPU           : Integer;\n+      State         : Task_Procedure_Access;\n+      Discriminants : System.Address;\n+      Elaborated    : Access_Boolean;\n+      Task_Image    : String;\n+      Created_Task  : Task_Id) is\n    begin\n-      Create_Restricted_Task (Priority, Stack_Address, Size,\n-                              Secondary_Stack_Size, Task_Info,\n+      Create_Restricted_Task (Priority, Stack_Address, Size, Task_Info,\n                               CPU, State, Discriminants, Elaborated,\n                               Task_Image, Created_Task);\n "}, {"sha": "37b91a76388f9986de237f3e3d100bc95cdcbdd2", "filename": "gcc/ada/s-tarest.ads", "status": "modified", "additions": 21, "deletions": 25, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fs-tarest.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fs-tarest.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tarest.ads?ref=eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "patch": "@@ -128,18 +128,17 @@ package System.Tasking.Restricted.Stages is\n    --  by the binder generated code, before calling elaboration code.\n \n    procedure Create_Restricted_Task\n-     (Priority             : Integer;\n-      Stack_Address        : System.Address;\n-      Size                 : System.Parameters.Size_Type;\n-      Secondary_Stack_Size : System.Parameters.Size_Type;\n-      Task_Info            : System.Task_Info.Task_Info_Type;\n-      CPU                  : Integer;\n-      State                : Task_Procedure_Access;\n-      Discriminants        : System.Address;\n-      Elaborated           : Access_Boolean;\n-      Chain                : in out Activation_Chain;\n-      Task_Image           : String;\n-      Created_Task         : Task_Id);\n+     (Priority      : Integer;\n+      Stack_Address : System.Address;\n+      Size          : System.Parameters.Size_Type;\n+      Task_Info     : System.Task_Info.Task_Info_Type;\n+      CPU           : Integer;\n+      State         : Task_Procedure_Access;\n+      Discriminants : System.Address;\n+      Elaborated    : Access_Boolean;\n+      Chain         : in out Activation_Chain;\n+      Task_Image    : String;\n+      Created_Task  : Task_Id);\n    --  Compiler interface only. Do not call from within the RTS.\n    --  This must be called to create a new task, when the partition\n    --  elaboration policy is not specified (or is concurrent).\n@@ -154,8 +153,6 @@ package System.Tasking.Restricted.Stages is\n    --\n    --  Size is the stack size of the task to create\n    --\n-   --  Secondary_Stack_Size is the secondary stack size of the task to create\n-   --\n    --  Task_Info is the task info associated with the created task, or\n    --  Unspecified_Task_Info if none.\n    --\n@@ -185,17 +182,16 @@ package System.Tasking.Restricted.Stages is\n    --  This procedure can raise Storage_Error if the task creation fails\n \n    procedure Create_Restricted_Task_Sequential\n-     (Priority             : Integer;\n-      Stack_Address        : System.Address;\n-      Size                 : System.Parameters.Size_Type;\n-      Secondary_Stack_Size : System.Parameters.Size_Type;\n-      Task_Info            : System.Task_Info.Task_Info_Type;\n-      CPU                  : Integer;\n-      State                : Task_Procedure_Access;\n-      Discriminants        : System.Address;\n-      Elaborated           : Access_Boolean;\n-      Task_Image           : String;\n-      Created_Task         : Task_Id);\n+     (Priority      : Integer;\n+      Stack_Address : System.Address;\n+      Size          : System.Parameters.Size_Type;\n+      Task_Info     : System.Task_Info.Task_Info_Type;\n+      CPU           : Integer;\n+      State         : Task_Procedure_Access;\n+      Discriminants : System.Address;\n+      Elaborated    : Access_Boolean;\n+      Task_Image    : String;\n+      Created_Task  : Task_Id);\n    --  Compiler interface only. Do not call from within the RTS.\n    --  This must be called to create a new task, when the sequential partition\n    --  elaboration policy is used."}, {"sha": "153fe79b2fa5083d6526afd0881fce0e62c67e2e", "filename": "gcc/ada/s-taskin.adb", "status": "modified", "additions": 24, "deletions": 27, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fs-taskin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fs-taskin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taskin.adb?ref=eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "patch": "@@ -86,19 +86,18 @@ package body System.Tasking is\n    ---------------------\n \n    procedure Initialize_ATCB\n-     (Self_ID              : Task_Id;\n-      Task_Entry_Point     : Task_Procedure_Access;\n-      Task_Arg             : System.Address;\n-      Parent               : Task_Id;\n-      Elaborated           : Access_Boolean;\n-      Base_Priority        : System.Any_Priority;\n-      Base_CPU             : System.Multiprocessors.CPU_Range;\n-      Domain               : Dispatching_Domain_Access;\n-      Task_Info            : System.Task_Info.Task_Info_Type;\n-      Stack_Size           : System.Parameters.Size_Type;\n-      Secondary_Stack_Size : System.Parameters.Size_Type;\n-      T                    : Task_Id;\n-      Success              : out Boolean)\n+     (Self_ID          : Task_Id;\n+      Task_Entry_Point : Task_Procedure_Access;\n+      Task_Arg         : System.Address;\n+      Parent           : Task_Id;\n+      Elaborated       : Access_Boolean;\n+      Base_Priority    : System.Any_Priority;\n+      Base_CPU         : System.Multiprocessors.CPU_Range;\n+      Domain           : Dispatching_Domain_Access;\n+      Task_Info        : System.Task_Info.Task_Info_Type;\n+      Stack_Size       : System.Parameters.Size_Type;\n+      T                : Task_Id;\n+      Success          : out Boolean)\n    is\n    begin\n       T.Common.State := Unactivated;\n@@ -147,7 +146,6 @@ package body System.Tasking is\n       T.Common.Specific_Handler         := null;\n       T.Common.Debug_Events             := (others => False);\n       T.Common.Task_Image_Len           := 0;\n-      T.Common.Secondary_Stack_Size     := Secondary_Stack_Size;\n \n       if T.Common.Parent = null then\n \n@@ -234,19 +232,18 @@ package body System.Tasking is\n \n       T := STPO.New_ATCB (0);\n       Initialize_ATCB\n-        (Self_ID              => null,\n-         Task_Entry_Point     => null,\n-         Task_Arg             => Null_Address,\n-         Parent               => Null_Task,\n-         Elaborated           => null,\n-         Base_Priority        => Base_Priority,\n-         Base_CPU             => Base_CPU,\n-         Domain               => System_Domain,\n-         Task_Info            => Task_Info.Unspecified_Task_Info,\n-         Stack_Size           => 0,\n-         Secondary_Stack_Size => Parameters.Unspecified_Size,\n-         T                    => T,\n-         Success              => Success);\n+        (Self_ID          => null,\n+         Task_Entry_Point => null,\n+         Task_Arg         => Null_Address,\n+         Parent           => Null_Task,\n+         Elaborated       => null,\n+         Base_Priority    => Base_Priority,\n+         Base_CPU         => Base_CPU,\n+         Domain           => System_Domain,\n+         Task_Info        => Task_Info.Unspecified_Task_Info,\n+         Stack_Size       => 0,\n+         T                => T,\n+         Success          => Success);\n       pragma Assert (Success);\n \n       STPO.Initialize (T);"}, {"sha": "c1fe020f5b8f584a268ac8f60d8dde5879a7b1f3", "filename": "gcc/ada/s-taskin.ads", "status": "modified", "additions": 12, "deletions": 20, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fs-taskin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fs-taskin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taskin.ads?ref=eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "patch": "@@ -702,13 +702,6 @@ package System.Tasking is\n       --  need to do different things depending on the situation.\n       --\n       --  Protection: Self.L\n-\n-      Secondary_Stack_Size : System.Parameters.Size_Type;\n-      --  Secondary_Stack_Size is the size of the secondary stack for the\n-      --  task. Defined here since it is the responsibility of the task to\n-      --  creates its own secondary stack.\n-      --\n-      --  Protected: Only accessed by Self\n    end record;\n \n    ---------------------------------------\n@@ -1163,19 +1156,18 @@ package System.Tasking is\n    --  System.Tasking.Initialization being present, as was done before.\n \n    procedure Initialize_ATCB\n-     (Self_ID              : Task_Id;\n-      Task_Entry_Point     : Task_Procedure_Access;\n-      Task_Arg             : System.Address;\n-      Parent               : Task_Id;\n-      Elaborated           : Access_Boolean;\n-      Base_Priority        : System.Any_Priority;\n-      Base_CPU             : System.Multiprocessors.CPU_Range;\n-      Domain               : Dispatching_Domain_Access;\n-      Task_Info            : System.Task_Info.Task_Info_Type;\n-      Stack_Size           : System.Parameters.Size_Type;\n-      Secondary_Stack_Size : System.Parameters.Size_Type;\n-      T                    : Task_Id;\n-      Success              : out Boolean);\n+     (Self_ID          : Task_Id;\n+      Task_Entry_Point : Task_Procedure_Access;\n+      Task_Arg         : System.Address;\n+      Parent           : Task_Id;\n+      Elaborated       : Access_Boolean;\n+      Base_Priority    : System.Any_Priority;\n+      Base_CPU         : System.Multiprocessors.CPU_Range;\n+      Domain           : Dispatching_Domain_Access;\n+      Task_Info        : System.Task_Info.Task_Info_Type;\n+      Stack_Size       : System.Parameters.Size_Type;\n+      T                : Task_Id;\n+      Success          : out Boolean);\n    --  Initialize fields of the TCB for task T, and link into global TCB\n    --  structures. Call this only with abort deferred and holding RTS_Lock.\n    --  Self_ID is the calling task (normally the activator of T). Success is"}, {"sha": "7566629ebe0d170dd9ebbd42e09c82c0dfa01c49", "filename": "gcc/ada/s-tassta.adb", "status": "modified", "additions": 20, "deletions": 41, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tassta.adb?ref=eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "patch": "@@ -472,21 +472,20 @@ package body System.Tasking.Stages is\n    --  called to create a new task.\n \n    procedure Create_Task\n-     (Priority             : Integer;\n-      Size                 : System.Parameters.Size_Type;\n-      Secondary_Stack_Size : System.Storage_Elements.Storage_Offset;\n-      Task_Info            : System.Task_Info.Task_Info_Type;\n-      CPU                  : Integer;\n-      Relative_Deadline    : Ada.Real_Time.Time_Span;\n-      Domain               : Dispatching_Domain_Access;\n-      Num_Entries          : Task_Entry_Index;\n-      Master               : Master_Level;\n-      State                : Task_Procedure_Access;\n-      Discriminants        : System.Address;\n-      Elaborated           : Access_Boolean;\n-      Chain                : in out Activation_Chain;\n-      Task_Image           : String;\n-      Created_Task         : out Task_Id)\n+     (Priority          : Integer;\n+      Size              : System.Parameters.Size_Type;\n+      Task_Info         : System.Task_Info.Task_Info_Type;\n+      CPU               : Integer;\n+      Relative_Deadline : Ada.Real_Time.Time_Span;\n+      Domain            : Dispatching_Domain_Access;\n+      Num_Entries       : Task_Entry_Index;\n+      Master            : Master_Level;\n+      State             : Task_Procedure_Access;\n+      Discriminants     : System.Address;\n+      Elaborated        : Access_Boolean;\n+      Chain             : in out Activation_Chain;\n+      Task_Image        : String;\n+      Created_Task      : out Task_Id)\n    is\n       T, P          : Task_Id;\n       Self_ID       : constant Task_Id := STPO.Self;\n@@ -612,8 +611,7 @@ package body System.Tasking.Stages is\n       end if;\n \n       Initialize_ATCB (Self_ID, State, Discriminants, P, Elaborated,\n-        Base_Priority, Base_CPU, Domain, Task_Info, Size,\n-        Secondary_Stack_Size, T, Success);\n+        Base_Priority, Base_CPU, Domain, Task_Info, Size, T, Success);\n \n       if not Success then\n          Free (T);\n@@ -1039,31 +1037,12 @@ package body System.Tasking.Stages is\n       Use_Alternate_Stack : constant Boolean := Alternate_Stack_Size /= 0;\n       --  Whether to use above alternate signal stack for stack overflows\n \n-      function Secondary_Stack_Size return Storage_Elements.Storage_Offset;\n-      --  Returns the size of the secondary stack for the task. The function\n-      --  will return the ATCB field Secondary_Stack_Size if it is not set to\n-      --  Unspecified_Size, otherwise a percentage of the stack is reserved\n-      --  using the System.Parameters.Sec_Stack_Percentage property.\n+      Secondary_Stack_Size :\n+        constant SSE.Storage_Offset :=\n+          Self_ID.Common.Compiler_Data.Pri_Stack_Info.Size *\n+            SSE.Storage_Offset (Parameters.Sec_Stack_Percentage) / 100;\n \n-      function Secondary_Stack_Size return Storage_Elements.Storage_Offset is\n-         use System.Storage_Elements;\n-         use System.Parameters;\n-      begin\n-         if Self_ID.Common.Secondary_Stack_Size = Unspecified_Size then\n-            if Sec_Stack_Percentage = Dynamic then\n-               return Default_Secondary_Stack_Size;\n-            else\n-               return (Self_ID.Common.Compiler_Data.Pri_Stack_Info.Size\n-                       * SSE.Storage_Offset (Sec_Stack_Percentage) / 100);\n-            end if;\n-         else\n-            return Self_ID.Common.Secondary_Stack_Size +\n-                     Storage_Offset (SST.Minimum_Secondary_Stack_Size);\n-         end if;\n-      end Secondary_Stack_Size;\n-\n-      Secondary_Stack : aliased Storage_Elements.Storage_Array\n-                          (1 .. Secondary_Stack_Size);\n+      Secondary_Stack : aliased SSE.Storage_Array (1 .. Secondary_Stack_Size);\n       for Secondary_Stack'Alignment use Standard'Maximum_Alignment;\n       --  Actual area allocated for secondary stack. Note that it is critical\n       --  that this have maximum alignment, since any kind of data can be"}, {"sha": "b25f4bfb8b0f567045d59b047faaaf8a5353c183", "filename": "gcc/ada/s-tassta.ads", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fs-tassta.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fs-tassta.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tassta.ads?ref=eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "patch": "@@ -167,28 +167,26 @@ package System.Tasking.Stages is\n    --  now in order to wake up the activator (the environment task).\n \n    procedure Create_Task\n-     (Priority             : Integer;\n-      Size                 : System.Parameters.Size_Type;\n-      Secondary_Stack_Size : System.Storage_Elements.Storage_Offset;\n-      Task_Info            : System.Task_Info.Task_Info_Type;\n-      CPU                  : Integer;\n-      Relative_Deadline    : Ada.Real_Time.Time_Span;\n-      Domain               : Dispatching_Domain_Access;\n-      Num_Entries          : Task_Entry_Index;\n-      Master               : Master_Level;\n-      State                : Task_Procedure_Access;\n-      Discriminants        : System.Address;\n-      Elaborated           : Access_Boolean;\n-      Chain                : in out Activation_Chain;\n-      Task_Image           : String;\n-      Created_Task         : out Task_Id);\n+     (Priority          : Integer;\n+      Size              : System.Parameters.Size_Type;\n+      Task_Info         : System.Task_Info.Task_Info_Type;\n+      CPU               : Integer;\n+      Relative_Deadline : Ada.Real_Time.Time_Span;\n+      Domain            : Dispatching_Domain_Access;\n+      Num_Entries       : Task_Entry_Index;\n+      Master            : Master_Level;\n+      State             : Task_Procedure_Access;\n+      Discriminants     : System.Address;\n+      Elaborated        : Access_Boolean;\n+      Chain             : in out Activation_Chain;\n+      Task_Image        : String;\n+      Created_Task      : out Task_Id);\n    --  Compiler interface only. Do not call from within the RTS.\n    --  This must be called to create a new task.\n    --\n    --  Priority is the task's priority (assumed to be in range of type\n    --   System.Any_Priority)\n    --  Size is the stack size of the task to create\n-   --  Secondary_Stack_Size is the secondary stack size of the task to create\n    --  Task_Info is the task info associated with the created task, or\n    --   Unspecified_Task_Info if none.\n    --  CPU is the task affinity. Passed as an Integer because the undefined"}, {"sha": "1685ff3d33636ba4b04eaf3aea5b3ca8663c2f1e", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 46, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "patch": "@@ -2065,7 +2065,6 @@ package body Sem_Ch13 is\n                     Aspect_Scalar_Storage_Order |\n                     Aspect_Size                 |\n                     Aspect_Small                |\n-                    Aspect_Secondary_Stack_Size |\n                     Aspect_Simple_Storage_Pool  |\n                     Aspect_Storage_Pool         |\n                     Aspect_Stream_Size          |\n@@ -2429,7 +2428,7 @@ package body Sem_Ch13 is\n                         end if;\n                      end;\n \n-                     --  Handling for these aspects in subprograms is complete\n+                     --  Handling for these Aspects in subprograms is complete\n \n                      goto Continue;\n \n@@ -5697,47 +5696,6 @@ package body Sem_Ch13 is\n             end if;\n          end Scalar_Storage_Order;\n \n-         --------------------------\n-         -- Secondary_Stack_Size --\n-         --------------------------\n-\n-         when Attribute_Secondary_Stack_Size => Secondary_Stack_Size :\n-         begin\n-            --  Secondary_Stack_Size attribute definition clause not allowed\n-            --  except from aspect specification.\n-\n-            if From_Aspect_Specification (N) then\n-               if not Is_Task_Type (U_Ent) then\n-                  Error_Msg_N (\"Secondary Stack Size can only be \" &\n-                               \"defined for task\", Nam);\n-\n-               elsif Duplicate_Clause then\n-                  null;\n-\n-               else\n-                  Check_Restriction (No_Secondary_Stack, Expr);\n-\n-                  --  The expression must be analyzed in the special manner\n-                  --  described in \"Handling of Default and Per-Object\n-                  --  Expressions\" in sem.ads.\n-\n-                  --  The visibility to the discriminants must be restored\n-\n-                  Push_Scope_And_Install_Discriminants (U_Ent);\n-                  Preanalyze_Spec_Expression (Expr, Any_Integer);\n-                  Uninstall_Discriminants_And_Pop_Scope (U_Ent);\n-\n-                  if not Is_OK_Static_Expression (Expr) then\n-                     Check_Restriction (Static_Storage_Size, Expr);\n-                  end if;\n-               end if;\n-\n-            else\n-               Error_Msg_N\n-                 (\"attribute& cannot be set with definition clause\", N);\n-            end if;\n-         end Secondary_Stack_Size;\n-\n          ----------\n          -- Size --\n          ----------\n@@ -9191,9 +9149,6 @@ package body Sem_Ch13 is\n          when Aspect_Relative_Deadline =>\n             T := RTE (RE_Time_Span);\n \n-         when Aspect_Secondary_Stack_Size =>\n-            T := Standard_Integer;\n-\n          when Aspect_Small =>\n             T := Universal_Real;\n "}, {"sha": "f9ffb207eadb3e255c03deb38a268d494e40a996", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 45, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "patch": "@@ -19046,6 +19046,7 @@ package body Sem_Prag is\n          when Pragma_Rename_Pragma => Rename_Pragma : declare\n             New_Name : constant Node_Id := Get_Pragma_Arg (Arg1);\n             Old_Name : constant Node_Id := Get_Pragma_Arg (Arg2);\n+\n          begin\n             GNAT_Pragma;\n             Check_Valid_Configuration_Pragma;\n@@ -20602,50 +20603,6 @@ package body Sem_Prag is\n \n             rv;\n \n-         --------------------------\n-         -- Secondary_Stack_Size --\n-         --------------------------\n-\n-         --  pragma Secondary_Stack_Size (EXPRESSION);\n-\n-         when Pragma_Secondary_Stack_Size => Secondary_Stack_Size : declare\n-            P   : constant Node_Id := Parent (N);\n-            Arg : Node_Id;\n-            Ent : Entity_Id;\n-\n-         begin\n-            GNAT_Pragma;\n-            Check_No_Identifiers;\n-            Check_Arg_Count (1);\n-\n-            if Nkind (P) = N_Task_Definition then\n-               Arg := Get_Pragma_Arg (Arg1);\n-               Ent := Defining_Identifier (Parent (P));\n-\n-               --  The expression must be analyzed in the special\n-               --  manner described in \"Handling of Default Expressions\"\n-               --  in sem.ads.\n-\n-               Preanalyze_Spec_Expression (Arg, Any_Integer);\n-\n-               --  The pragma cannot appear if the No_Secondary_Stack\n-               --  restriction is in effect.\n-\n-               Check_Restriction (No_Secondary_Stack, Arg);\n-\n-            --  Anything else is incorrect\n-\n-            else\n-               Pragma_Misplaced;\n-            end if;\n-\n-            --  Check duplicate pragma before we chain the pragma in the Rep\n-            --  Item chain of Ent.\n-\n-            Check_Duplicate_Pragma (Ent);\n-            Record_Rep_Item (Ent, N);\n-         end Secondary_Stack_Size;\n-\n          --------------------------\n          -- Short_Circuit_And_Or --\n          --------------------------\n@@ -28862,7 +28819,6 @@ package body Sem_Prag is\n       Pragma_Restriction_Warnings           =>  0,\n       Pragma_Restrictions                   =>  0,\n       Pragma_Reviewable                     => -1,\n-      Pragma_Secondary_Stack_Size           => -1,\n       Pragma_Short_Circuit_And_Or           =>  0,\n       Pragma_Share_Generic                  =>  0,\n       Pragma_Shared                         =>  0,"}, {"sha": "b229a6c8fe75e1ff9e66a2fedd74f7f71513805c", "filename": "gcc/ada/sem_prag.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fsem_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fsem_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.ads?ref=eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "patch": "@@ -100,7 +100,6 @@ package Sem_Prag is\n       Pragma_Remote_Access_Type           => True,\n       Pragma_Remote_Call_Interface        => True,\n       Pragma_Remote_Types                 => True,\n-      Pragma_Secondary_Stack_Size         => True,\n       Pragma_Shared                       => True,\n       Pragma_Shared_Passive               => True,\n       Pragma_Simple_Storage_Pool_Type     => True,"}, {"sha": "fe23998311090de48a34ae4c926cf10d00457ff0", "filename": "gcc/ada/snames.adb-tmpl", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fsnames.adb-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fsnames.adb-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb-tmpl?ref=eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "patch": "@@ -134,8 +134,6 @@ package body Snames is\n          return Attribute_Dispatching_Domain;\n       elsif N = Name_Interrupt_Priority then\n          return Attribute_Interrupt_Priority;\n-      elsif N = Name_Secondary_Stack_Size then\n-         return Attribute_Secondary_Stack_Size;\n       else\n          return Attribute_Id'Val (N - First_Attribute_Name);\n       end if;\n@@ -231,8 +229,6 @@ package body Snames is\n             return Pragma_Lock_Free;\n          when Name_Priority                         =>\n             return Pragma_Priority;\n-         when Name_Secondary_Stack_Size             =>\n-            return Pragma_Secondary_Stack_Size;\n          when Name_Storage_Size                     =>\n             return Pragma_Storage_Size;\n          when Name_Storage_Unit                     =>\n@@ -460,7 +456,6 @@ package body Snames is\n         or else N = Name_Interrupt_Priority\n         or else N = Name_Lock_Free\n         or else N = Name_Priority\n-        or else N = Name_Secondary_Stack_Size\n         or else N = Name_Storage_Size\n         or else N = Name_Storage_Unit;\n    end Is_Pragma_Name;"}, {"sha": "a45b895d09ffd842291d798b23c57fbcd7c873d8", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae66578ceb7a6d07dd58f18ee8bba5c31de468d/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=eae66578ceb7a6d07dd58f18ee8bba5c31de468d", "patch": "@@ -175,7 +175,6 @@ package Snames is\n    Name_uRelative_Deadline             : constant Name_Id := N + $;\n    Name_uResult                        : constant Name_Id := N + $;\n    Name_uSecondary_Stack               : constant Name_Id := N + $;\n-   Name_uSecondary_Stack_Size          : constant Name_Id := N + $;\n    Name_uService                       : constant Name_Id := N + $;\n    Name_uSize                          : constant Name_Id := N + $;\n    Name_uStack                         : constant Name_Id := N + $;\n@@ -805,6 +804,7 @@ package Snames is\n    Name_Robustness                     : constant Name_Id := N + $;\n    Name_Runtime                        : constant Name_Id := N + $;\n    Name_SB                             : constant Name_Id := N + $;\n+   Name_Secondary_Stack_Size           : constant Name_Id := N + $;\n    Name_Section                        : constant Name_Id := N + $;\n    Name_Semaphore                      : constant Name_Id := N + $;\n    Name_Simple_Barriers                : constant Name_Id := N + $;\n@@ -1052,9 +1052,8 @@ package Snames is\n \n    --  Names of internal attributes. They are not real attributes but special\n    --  names used internally by GNAT in order to deal with delayed aspects\n-   --  (Aspect_CPU, Aspect_Dispatching_Domain, Aspect_Interrupt_Priority,\n-   --  Aspect_Secondary_Stack_Size) that don't have corresponding pragmas or\n-   --  user-referencable attributes.\n+   --  (Aspect_CPU, Aspect_Dispatching_Domain, Aspect_Interrupt_Priority) that\n+   --  don't have corresponding pragmas or user-referencable attributes.\n \n    --  It is convenient to have these internal attributes available for\n    --  processing the aspects, since the normal approach is to convert an\n@@ -1070,7 +1069,6 @@ package Snames is\n    Name_CPU                            : constant Name_Id := N + $;\n    Name_Dispatching_Domain             : constant Name_Id := N + $;\n    Name_Interrupt_Priority             : constant Name_Id := N + $;\n-   Name_Secondary_Stack_Size           : constant Name_Id := N + $; -- GNAT\n    Last_Internal_Attribute_Name        : constant Name_Id := N + $;\n \n    --  Names of recognized locking policy identifiers\n@@ -1684,11 +1682,10 @@ package Snames is\n \n       Attribute_CPU,\n       Attribute_Dispatching_Domain,\n-      Attribute_Interrupt_Priority,\n-      Attribute_Secondary_Stack_Size);\n+      Attribute_Interrupt_Priority);\n \n    subtype Internal_Attribute_Id is Attribute_Id range\n-     Attribute_CPU .. Attribute_Secondary_Stack_Size;\n+     Attribute_CPU .. Attribute_Interrupt_Priority;\n \n    type Attribute_Class_Array is array (Attribute_Id) of Boolean;\n    --  Type used to build attribute classification flag arrays\n@@ -1996,7 +1993,6 @@ package Snames is\n       Pragma_Interrupt_Priority,\n       Pragma_Lock_Free,\n       Pragma_Priority,\n-      Pragma_Secondary_Stack_Size,\n       Pragma_Storage_Size,\n       Pragma_Storage_Unit,\n \n@@ -2039,8 +2035,7 @@ package Snames is\n \n    function Is_Internal_Attribute_Name (N : Name_Id) return Boolean;\n    --  Test to see if the name N is the name of an INT attribute (Name_CPU,\n-   --  Name_Dispatching_Domain, Name_Interrupt_Priority,\n-   --  Name_Secondary_Stack_Size).\n+   --  Name_Dispatching_Domain, Name_Interrupt_Priority).\n \n    function Is_Procedure_Attribute_Name (N : Name_Id) return Boolean;\n    --  Test to see if the name N is the name of a recognized attribute that"}]}