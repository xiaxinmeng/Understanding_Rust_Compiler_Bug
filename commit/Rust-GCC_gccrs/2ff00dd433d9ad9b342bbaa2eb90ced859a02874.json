{"sha": "2ff00dd433d9ad9b342bbaa2eb90ced859a02874", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZmMDBkZDQzM2Q5YWQ5YjM0MmJiYWEyZWI5MGNlZDg1OWEwMjg3NA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-05-09T06:12:51Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-05-09T06:12:51Z"}, "message": "ifcvt.c (cond_exec_process_insns): New argument prob_val.\n\n        * ifcvt.c (cond_exec_process_insns): New argument prob_val.\n        Attach it to call insns.\n        (cond_exec_process_if_block): Track probability for true and\n        false branches.\n        (dead_or_predicable): Likewise.\n\nFrom-SVN: r33791", "tree": {"sha": "baf7dadcdc1f9baa8f7a30a05e04e1f3d78dcf76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baf7dadcdc1f9baa8f7a30a05e04e1f3d78dcf76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ff00dd433d9ad9b342bbaa2eb90ced859a02874", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ff00dd433d9ad9b342bbaa2eb90ced859a02874", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ff00dd433d9ad9b342bbaa2eb90ced859a02874", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ff00dd433d9ad9b342bbaa2eb90ced859a02874/comments", "author": null, "committer": null, "parents": [{"sha": "afe48e06879c76f8511209b46946210562cd6bd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afe48e06879c76f8511209b46946210562cd6bd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afe48e06879c76f8511209b46946210562cd6bd4"}], "stats": {"total": 44, "additions": 35, "deletions": 9}, "files": [{"sha": "8c2ddee0fbf652b8260887201ad7273155f771b2", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 35, "deletions": 9, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ff00dd433d9ad9b342bbaa2eb90ced859a02874/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ff00dd433d9ad9b342bbaa2eb90ced859a02874/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=2ff00dd433d9ad9b342bbaa2eb90ced859a02874", "patch": "@@ -74,7 +74,7 @@ static int count_bb_insns\t\tPARAMS ((basic_block));\n static rtx first_active_insn\t\tPARAMS ((basic_block));\n static int last_active_insn_p\t\tPARAMS ((basic_block, rtx));\n \n-static int cond_exec_process_insns\tPARAMS ((rtx, rtx, rtx, int));\n+static int cond_exec_process_insns\tPARAMS ((rtx, rtx, rtx, rtx, int));\n static rtx cond_exec_get_condition\tPARAMS ((rtx));\n static int cond_exec_process_if_block\tPARAMS ((basic_block, basic_block,\n \t\t\t\t\t\t basic_block, basic_block));\n@@ -179,10 +179,11 @@ last_active_insn_p (bb, insn)\n    insns were processed.  */\n \n static int\n-cond_exec_process_insns (start, end, test, mod_ok)\n+cond_exec_process_insns (start, end, test, prob_val, mod_ok)\n      rtx start;\t\t\t/* first insn to look at */\n      rtx end;\t\t\t/* last insn to look at */\n      rtx test;\t\t\t/* conditional execution test */\n+     rtx prob_val;\t\t/* probability of branch taken.  */\n      int mod_ok;\t\t/* true if modifications ok last insn.  */\n {\n   int must_be_last = FALSE;\n@@ -212,6 +213,11 @@ cond_exec_process_insns (start, end, test, mod_ok)\n \t\t       gen_rtx_COND_EXEC (VOIDmode, copy_rtx (test),\n \t\t\t\t\t  PATTERN (insn)), 1);\n \n+      if (GET_CODE (insn) == CALL_INSN && prob_val)\n+\tvalidate_change (insn, &REG_NOTES (insn),\n+\t\t\t alloc_EXPR_LIST (REG_BR_PROB, prob_val,\n+\t\t\t\t\t  REG_NOTES (insn)), 1);\n+\n     insn_done:\n       if (insn == end)\n \tbreak;\n@@ -267,6 +273,8 @@ cond_exec_process_if_block (test_bb, then_bb, else_bb, join_bb)\n   int then_mod_ok;\t\t/* whether conditional mods are ok in THEN */\n   rtx true_expr;\t\t/* test for else block insns */\n   rtx false_expr;\t\t/* test for then block insns */\n+  rtx true_prob_val;\t\t/* probability of else block */\n+  rtx false_prob_val;\t\t/* probability of then block */\n   int n_insns;\n \n   /* Find the conditional jump to the ELSE or JOIN part, and isolate\n@@ -324,6 +332,15 @@ cond_exec_process_if_block (test_bb, then_bb, else_bb, join_bb)\n \t\t\t       GET_MODE (true_expr), XEXP (true_expr, 0),\n \t\t\t       XEXP (true_expr, 1));\n \n+  true_prob_val = find_reg_note (test_bb->end, REG_BR_PROB, NULL_RTX);\n+  if (true_prob_val)\n+    {\n+      true_prob_val = XEXP (true_prob_val, 0);\n+      false_prob_val = GEN_INT (REG_BR_PROB_BASE - INTVAL (true_prob_val));\n+    }\n+  else\n+    false_prob_val = NULL_RTX;\n+\n   /* For IF-THEN-ELSE blocks, we don't allow modifications of the test\n      on then THEN block.  */\n   then_mod_ok = (else_bb == NULL_BLOCK);\n@@ -333,12 +350,12 @@ cond_exec_process_if_block (test_bb, then_bb, else_bb, join_bb)\n \n   if (then_end\n       && ! cond_exec_process_insns (then_start, then_end,\n-\t\t\t\t    false_expr, then_mod_ok))\n+\t\t\t\t    false_expr, false_prob_val, then_mod_ok))\n     goto fail;\n \n   if (else_bb\n       && ! cond_exec_process_insns (else_start, else_end,\n-\t\t\t\t    true_expr, TRUE))\n+\t\t\t\t    true_expr, true_prob_val, TRUE))\n     goto fail;\n \n   if (! apply_change_group ())\n@@ -1792,15 +1809,24 @@ dead_or_predicable (test_bb, merge_bb, other_bb, new_dest, reversep)\n \t All that's left is making sure the insns involved can actually\n \t be predicated.  */\n \n-      rtx cond;\n+      rtx cond, prob_val;\n \n       cond = cond_exec_get_condition (jump);\n+\n+      prob_val = find_reg_note (jump, REG_BR_PROB, NULL_RTX);\n+      if (prob_val)\n+\tprob_val = XEXP (prob_val, 0);\n+\n       if (reversep)\n-\tcond = gen_rtx_fmt_ee (reverse_condition (GET_CODE (cond)),\n-\t\t\t       GET_MODE (cond), XEXP (cond, 0),\n-\t\t\t       XEXP (cond, 1));\n+\t{\n+\t  cond = gen_rtx_fmt_ee (reverse_condition (GET_CODE (cond)),\n+\t\t\t         GET_MODE (cond), XEXP (cond, 0),\n+\t\t\t         XEXP (cond, 1));\n+\t  if (prob_val)\n+\t    prob_val = GEN_INT (REG_BR_PROB_BASE - INTVAL (prob_val));\n+\t}\n \n-      if (! cond_exec_process_insns (head, end, cond, 0))\n+      if (! cond_exec_process_insns (head, end, cond, prob_val, 0))\n \tgoto cancel;\n \n       earliest = jump;"}]}