{"sha": "a3e1361d1ac1ae892d25737e0ee21e71db423a07", "node_id": "C_kwDOANBUbNoAKGEzZTEzNjFkMWFjMWFlODkyZDI1NzM3ZTBlZTIxZTcxZGI0MjNhMDc", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-08-23T16:42:17Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-08-25T11:40:28Z"}, "message": "Fix port of NOP_EXPR\n\nNOP_EXPR should fall through into convert and view_convert_exprs.", "tree": {"sha": "ac5f73c594e15ad6943b7e8da0587212f7dac502", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac5f73c594e15ad6943b7e8da0587212f7dac502"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3e1361d1ac1ae892d25737e0ee21e71db423a07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3e1361d1ac1ae892d25737e0ee21e71db423a07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3e1361d1ac1ae892d25737e0ee21e71db423a07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3e1361d1ac1ae892d25737e0ee21e71db423a07/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a8f2fd653afe2e60672678d9cbfe0fa8a5e4124", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a8f2fd653afe2e60672678d9cbfe0fa8a5e4124", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a8f2fd653afe2e60672678d9cbfe0fa8a5e4124"}], "stats": {"total": 10, "additions": 1, "deletions": 9}, "files": [{"sha": "8c0f80b9e3335170d462395b6d1b5064ef1ff5ab", "filename": "gcc/rust/backend/rust-constexpr.cc", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3e1361d1ac1ae892d25737e0ee21e71db423a07/gcc%2Frust%2Fbackend%2Frust-constexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3e1361d1ac1ae892d25737e0ee21e71db423a07/gcc%2Frust%2Fbackend%2Frust-constexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-constexpr.cc?ref=a3e1361d1ac1ae892d25737e0ee21e71db423a07", "patch": "@@ -2080,15 +2080,6 @@ eval_constant_expression (const constexpr_ctx *ctx, tree t, bool lval,\n \t\t\t\t    non_constant_p, overflow_p);\n       break;\n \n-    case NOP_EXPR:\n-      if (REINTERPRET_CAST_P (t))\n-\t{\n-\t  if (!ctx->quiet)\n-\t    error_at (loc, \"%<reinterpret_cast%> is not a constant expression\");\n-\t  *non_constant_p = true;\n-\t  return t;\n-\t}\n-      /* FALLTHROUGH.  */\n     case MODIFY_EXPR:\n       r = eval_store_expression (ctx, t, false, non_constant_p, overflow_p);\n       break;\n@@ -2347,6 +2338,7 @@ eval_constant_expression (const constexpr_ctx *ctx, tree t, bool lval,\n       break;\n \n       /* FALLTHROUGH.  */\n+    case NOP_EXPR:\n     case CONVERT_EXPR:\n       case VIEW_CONVERT_EXPR: {\n \ttree oldop = TREE_OPERAND (t, 0);"}]}