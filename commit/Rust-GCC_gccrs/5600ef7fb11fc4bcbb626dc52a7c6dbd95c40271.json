{"sha": "5600ef7fb11fc4bcbb626dc52a7c6dbd95c40271", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYwMGVmN2ZiMTFmYzRiY2JiNjI2ZGM1MmE3YzZkYmQ5NWM0MDI3MQ==", "commit": {"author": {"name": "Bryce McKinlay", "email": "mckinlay@redhat.com", "date": "2006-05-17T15:09:57Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2006-05-17T15:09:57Z"}, "message": "re PR libgcj/27352 (SecurityManager.checkPermission() called unnecessarily)\n\n        PR libgcj/27352\n        * java/lang/Class.java (getClassLoaderInternal): New method.\n        (forName (String, Class)): Use getClassLoaderInternal.\n        (getPackage): Likewise.\n        (getResource): Likewise.\n        (getResourceAsStream): Likewise.\n        (desiredAssertionStatus): Likewise.\n\nFrom-SVN: r113863", "tree": {"sha": "4b1478e927e77a2c832d8513962880bd615b27b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b1478e927e77a2c832d8513962880bd615b27b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5600ef7fb11fc4bcbb626dc52a7c6dbd95c40271", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5600ef7fb11fc4bcbb626dc52a7c6dbd95c40271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5600ef7fb11fc4bcbb626dc52a7c6dbd95c40271", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5600ef7fb11fc4bcbb626dc52a7c6dbd95c40271/comments", "author": null, "committer": null, "parents": [{"sha": "c93c502529fb81ef96ecf90dcc19568227c5b4cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c93c502529fb81ef96ecf90dcc19568227c5b4cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c93c502529fb81ef96ecf90dcc19568227c5b4cb"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "7647cdf4f5ca672885cd55efa6c23008292c7bf1", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5600ef7fb11fc4bcbb626dc52a7c6dbd95c40271/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5600ef7fb11fc4bcbb626dc52a7c6dbd95c40271/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=5600ef7fb11fc4bcbb626dc52a7c6dbd95c40271", "patch": "@@ -1,3 +1,13 @@\n+2006-05-15  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\tPR libgcj/27352\n+\t* java/lang/Class.java (getClassLoaderInternal): New method.\n+\t(forName (String, Class)): Use getClassLoaderInternal.\n+\t(getPackage): Likewise.\n+\t(getResource): Likewise.\n+\t(getResourceAsStream): Likewise.\n+\t(desiredAssertionStatus): Likewise.\n+\n 2006-05-15  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* stacktrace.cc (StackTrace::FillInFrameInfo): Use"}, {"sha": "db2bf729f191c06ff20da65887a6968f9c8e2bd6", "filename": "libjava/java/lang/Class.java", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5600ef7fb11fc4bcbb626dc52a7c6dbd95c40271/libjava%2Fjava%2Flang%2FClass.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5600ef7fb11fc4bcbb626dc52a7c6dbd95c40271/libjava%2Fjava%2Flang%2FClass.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClass.java?ref=5600ef7fb11fc4bcbb626dc52a7c6dbd95c40271", "patch": "@@ -115,7 +115,7 @@ public static native Class forName (String className)\n   private static Class forName (String className, Class caller)\n     throws ClassNotFoundException\n   {\n-    return forName(className, true, caller.getClassLoader());\n+    return forName(className, true, caller.getClassLoaderInternal());\n   }\n \n \n@@ -192,10 +192,19 @@ private Class[] internalGetClasses()\n    * @see RuntimePermission\n    */\n   public native ClassLoader getClassLoader ();\n-  \n+\n   // A private internal method that is called by compiler-generated code.\n   private final native ClassLoader getClassLoader (Class caller);\n-  \n+\n+  /**\n+   *  Internal method that circumvents the usual security checks when \n+   *  getting the class loader.\n+   */\n+  private ClassLoader getClassLoaderInternal ()\n+  {\n+    return loader;\n+  }\n+\n   /**\n    * If this is an array, get the Class representing the type of array.\n    * Examples: \"[[Ljava.lang.String;\" would return \"[Ljava.lang.String;\", and\n@@ -473,7 +482,7 @@ private Field[] internalGetFields()\n    */\n   public Package getPackage()\n   {\n-    ClassLoader cl = getClassLoader();\n+    ClassLoader cl = getClassLoaderInternal();\n     if (cl != null)\n       return cl.getPackage(getPackagePortion(getName()));\n     else\n@@ -616,7 +625,7 @@ public Method getMethod(String methodName, Class[] args)\n   public URL getResource(String resourceName)\n   {\n     String name = resourcePath(resourceName);\n-    ClassLoader loader = getClassLoader();\n+    ClassLoader loader = getClassLoaderInternal();\n     if (loader == null)\n       return ClassLoader.getSystemResource(name);\n     return loader.getResource(name);\n@@ -644,7 +653,7 @@ public URL getResource(String resourceName)\n   public InputStream getResourceAsStream(String resourceName)\n   {\n     String name = resourcePath(resourceName);\n-    ClassLoader loader = getClassLoader();\n+    ClassLoader loader = getClassLoaderInternal();\n     if (loader == null)\n       return ClassLoader.getSystemResourceAsStream(name);\n     return loader.getResourceAsStream(name);\n@@ -839,7 +848,7 @@ public String toString()\n    */\n   public boolean desiredAssertionStatus()\n   {\n-    ClassLoader c = getClassLoader();\n+    ClassLoader c = getClassLoaderInternal();\n     Object status;\n     if (c == null)\n       return VMClassLoader.defaultAssertionStatus();"}]}