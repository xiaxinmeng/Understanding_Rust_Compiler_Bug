{"sha": "dc76f41ca633e9094e1c2d43b58bbab69a10f973", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM3NmY0MWNhNjMzZTkwOTRlMWMyZDQzYjU4YmJhYjY5YTEwZjk3Mw==", "commit": {"author": {"name": "John David Anglin", "email": "dave@hiauly1.hia.nrc.ca", "date": "2001-03-02T23:15:32Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2001-03-02T23:15:32Z"}, "message": "* cselib.c (hash_rtx): Cast enums to unsigned int.\n\nFrom-SVN: r40196", "tree": {"sha": "4e3117bf6a63f39a9721402d420e6803a6812a16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e3117bf6a63f39a9721402d420e6803a6812a16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc76f41ca633e9094e1c2d43b58bbab69a10f973", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc76f41ca633e9094e1c2d43b58bbab69a10f973", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc76f41ca633e9094e1c2d43b58bbab69a10f973", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc76f41ca633e9094e1c2d43b58bbab69a10f973/comments", "author": null, "committer": null, "parents": [{"sha": "4d2cf7156f52f377023a842613d13d8271607aa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d2cf7156f52f377023a842613d13d8271607aa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d2cf7156f52f377023a842613d13d8271607aa0"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "c71cd60e372b907f49fec09bed634930b0e6afce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc76f41ca633e9094e1c2d43b58bbab69a10f973/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc76f41ca633e9094e1c2d43b58bbab69a10f973/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc76f41ca633e9094e1c2d43b58bbab69a10f973", "patch": "@@ -1,3 +1,7 @@\n+2001-03-02  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* cselib.c (hash_rtx): Cast enums to unsigned int.\n+\n 2001-03-02  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* print-rtl.c (print_rtx): Cast enums to int for comparison."}, {"sha": "0dbc3ab618a288893814d35238136f2fcbfc39d6", "filename": "gcc/cselib.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc76f41ca633e9094e1c2d43b58bbab69a10f973/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc76f41ca633e9094e1c2d43b58bbab69a10f973/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=dc76f41ca633e9094e1c2d43b58bbab69a10f973", "patch": "@@ -584,7 +584,7 @@ hash_rtx (x, mode, create)\n \n     case CONST_INT:\n       hash += ((unsigned) CONST_INT << 7) + (unsigned) mode + INTVAL (x);\n-      return hash ? hash : CONST_INT;\n+      return hash ? hash : (unsigned int) CONST_INT;\n \n     case CONST_DOUBLE:\n       /* This is like the general case, except that it only counts\n@@ -596,18 +596,18 @@ hash_rtx (x, mode, create)\n       else\n \thash += ((unsigned) CONST_DOUBLE_LOW (x)\n \t\t + (unsigned) CONST_DOUBLE_HIGH (x));\n-      return hash ? hash : CONST_DOUBLE;\n+      return hash ? hash : (unsigned int) CONST_DOUBLE;\n \n       /* Assume there is only one rtx object for any given label.  */\n     case LABEL_REF:\n       hash\n \t+= ((unsigned) LABEL_REF << 7) + (unsigned long) XEXP (x, 0);\n-      return hash ? hash : LABEL_REF;\n+      return hash ? hash : (unsigned int) LABEL_REF;\n \n     case SYMBOL_REF:\n       hash\n \t+= ((unsigned) SYMBOL_REF << 7) + (unsigned long) XSTR (x, 0);\n-      return hash ? hash : SYMBOL_REF;\n+      return hash ? hash : (unsigned int) SYMBOL_REF;\n \n     case PRE_DEC:\n     case PRE_INC:\n@@ -681,7 +681,7 @@ hash_rtx (x, mode, create)\n \tabort ();\n     }\n \n-  return hash ? hash : 1 + GET_CODE (x);\n+  return hash ? hash : 1 + (unsigned int) GET_CODE (x);\n }\n \n /* Create a new value structure for VALUE and initialize it.  The mode of the"}]}