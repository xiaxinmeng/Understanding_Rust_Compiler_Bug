{"sha": "43f4a446c24f8a950442c0d432788704a0531bf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNmNGE0NDZjMjRmOGE5NTA0NDJjMGQ0MzI3ODg3MDRhMDUzMWJmMw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2014-08-26T14:47:15Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2014-08-26T14:47:15Z"}, "message": "Properly set gcc_build_dir for in-tree build\n\n\tPR bootstrap/62260\n\t* Makefile.am (gcc_build_dir): Set to @gcc_build_dir@.\n\t* configure.ac (gcc_build_dir): Set and AC_SUBST according to\n\t$host_subdir.\n\t* Makefile.in: Regenerated.\n\t* configure: Likewise.\n\nFrom-SVN: r214524", "tree": {"sha": "8deb0af0974e71649c1b37d9053ef2140e561130", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8deb0af0974e71649c1b37d9053ef2140e561130"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43f4a446c24f8a950442c0d432788704a0531bf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43f4a446c24f8a950442c0d432788704a0531bf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43f4a446c24f8a950442c0d432788704a0531bf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43f4a446c24f8a950442c0d432788704a0531bf3/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "13dfd55471b7294fa33a2f4f78b7e6e016770957", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13dfd55471b7294fa33a2f4f78b7e6e016770957", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13dfd55471b7294fa33a2f4f78b7e6e016770957"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "632c116163cf67687f31cb6325e460587275e6f4", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f4a446c24f8a950442c0d432788704a0531bf3/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f4a446c24f8a950442c0d432788704a0531bf3/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=43f4a446c24f8a950442c0d432788704a0531bf3", "patch": "@@ -1,3 +1,12 @@\n+2014-08-26  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/62260\n+\t* Makefile.am (gcc_build_dir): Set to @gcc_build_dir@.\n+\t* configure.ac (gcc_build_dir): Set and AC_SUBST according to\n+\t$host_subdir.\n+\t* Makefile.in: Regenerated.\n+\t* configure: Likewise.\n+\n 2014-06-13  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* configure.ac (--with-libiberty): New configure option."}, {"sha": "93ea6498c552ed6105e9baa6d290c72652704550", "filename": "lto-plugin/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f4a446c24f8a950442c0d432788704a0531bf3/lto-plugin%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f4a446c24f8a950442c0d432788704a0531bf3/lto-plugin%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FMakefile.am?ref=43f4a446c24f8a950442c0d432788704a0531bf3", "patch": "@@ -15,7 +15,7 @@ override CFLAGS := $(filter-out -fsanitize=address,$(CFLAGS))\n override LDFLAGS := $(filter-out -fsanitize=address,$(LDFLAGS))\n \n libexecsub_LTLIBRARIES = liblto_plugin.la\n-gcc_build_dir = ../$(host_subdir)/gcc\n+gcc_build_dir = @gcc_build_dir@\n in_gcc_libs = $(foreach lib, $(libexecsub_LTLIBRARIES), $(gcc_build_dir)/$(lib))\n \n liblto_plugin_la_SOURCES = lto-plugin.c"}, {"sha": "b15d90197dc63cb682a57bd5154ca4ec9d96e7b6", "filename": "lto-plugin/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f4a446c24f8a950442c0d432788704a0531bf3/lto-plugin%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f4a446c24f8a950442c0d432788704a0531bf3/lto-plugin%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FMakefile.in?ref=43f4a446c24f8a950442c0d432788704a0531bf3", "patch": "@@ -186,6 +186,7 @@ datarootdir = @datarootdir@\n docdir = @docdir@\n dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n+gcc_build_dir = @gcc_build_dir@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -232,7 +233,6 @@ AM_CFLAGS = @ac_lto_plugin_warn_cflags@\n AM_LDFLAGS = @ac_lto_plugin_ldflags@\n AM_LIBTOOLFLAGS = --tag=disable-static\n libexecsub_LTLIBRARIES = liblto_plugin.la\n-gcc_build_dir = ../$(host_subdir)/gcc\n in_gcc_libs = $(foreach lib, $(libexecsub_LTLIBRARIES), $(gcc_build_dir)/$(lib))\n liblto_plugin_la_SOURCES = lto-plugin.c\n # Note that we intentionally override the bindir supplied by ACX_LT_HOST_FLAGS."}, {"sha": "c34e653cfb531313b2b475696c647c7401fda5c0", "filename": "lto-plugin/configure", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f4a446c24f8a950442c0d432788704a0531bf3/lto-plugin%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f4a446c24f8a950442c0d432788704a0531bf3/lto-plugin%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Fconfigure?ref=43f4a446c24f8a950442c0d432788704a0531bf3", "patch": "@@ -622,6 +622,7 @@ EGREP\n GREP\n SED\n LIBTOOL\n+gcc_build_dir\n ac_lto_plugin_ldflags\n ac_lto_plugin_warn_cflags\n am__fastdepCC_FALSE\n@@ -4127,6 +4128,13 @@ if test \"x$have_static_libgcc\" = xyes; then\n fi\n \n \n+if test x\"$host_subdir\" = x.; then\n+   gcc_build_dir=../gcc\n+else\n+   gcc_build_dir=../../$host_subdir/gcc\n+fi\n+\n+\n case `pwd` in\n   *\\ * | *\\\t*)\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: Libtool does not cope well with whitespace in \\`pwd\\`\" >&5\n@@ -10599,7 +10607,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10602 \"configure\"\n+#line 10610 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10705,7 +10713,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10708 \"configure\"\n+#line 10716 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "c3ae93e12a7e8bbd2dd31bbe791a8312c6ab725a", "filename": "lto-plugin/configure.ac", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f4a446c24f8a950442c0d432788704a0531bf3/lto-plugin%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f4a446c24f8a950442c0d432788704a0531bf3/lto-plugin%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Fconfigure.ac?ref=43f4a446c24f8a950442c0d432788704a0531bf3", "patch": "@@ -27,6 +27,13 @@ if test \"x$have_static_libgcc\" = xyes; then\n fi\n AC_SUBST(ac_lto_plugin_ldflags)\n \n+if test x\"$host_subdir\" = x.; then\n+   gcc_build_dir=../gcc\n+else\n+   gcc_build_dir=../../$host_subdir/gcc\n+fi\n+AC_SUBST(gcc_build_dir)\n+\n AM_PROG_LIBTOOL\n ACX_LT_HOST_FLAGS\n AC_SUBST(target_noncanonical)"}]}