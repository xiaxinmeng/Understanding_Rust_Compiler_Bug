{"sha": "7399bcb0fa6d1d49076af0ec79d9ae081eef1fbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM5OWJjYjBmYTZkMWQ0OTA3NmFmMGVjNzlkOWFlMDgxZWVmMWZiYw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-01-18T15:01:18Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-01-18T15:01:18Z"}, "message": "mode-switching.c (optimize_mode_switching): Make it static.\n\n\t* mode-switching.c (optimize_mode_switching): Make it static.\n\t* basic-block.h: Remove the prototype for\n\toptimize_mode_switching.\n\nFrom-SVN: r109887", "tree": {"sha": "d8a192d3814081d946a8ba76c81c6e7330b4436f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8a192d3814081d946a8ba76c81c6e7330b4436f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7399bcb0fa6d1d49076af0ec79d9ae081eef1fbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7399bcb0fa6d1d49076af0ec79d9ae081eef1fbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7399bcb0fa6d1d49076af0ec79d9ae081eef1fbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7399bcb0fa6d1d49076af0ec79d9ae081eef1fbc/comments", "author": null, "committer": null, "parents": [{"sha": "75c752a07f685a29fb15da97e9b540a6455e31fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75c752a07f685a29fb15da97e9b540a6455e31fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75c752a07f685a29fb15da97e9b540a6455e31fb"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "3827a80b2b4d4364bc8d9c59c82e3c8f5c81de41", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7399bcb0fa6d1d49076af0ec79d9ae081eef1fbc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7399bcb0fa6d1d49076af0ec79d9ae081eef1fbc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7399bcb0fa6d1d49076af0ec79d9ae081eef1fbc", "patch": "@@ -1,3 +1,9 @@\n+2006-01-18  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* mode-switching.c (optimize_mode_switching): Make it static.\n+\t* basic-block.h: Remove the prototype for\n+\toptimize_mode_switching.\n+\n 2006-01-18  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/alpha/alpha.c (alpha_split_tfmode_pair): Rename into"}, {"sha": "ab2d927c308245c2d31448094de244f3aba64a64", "filename": "gcc/basic-block.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7399bcb0fa6d1d49076af0ec79d9ae081eef1fbc/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7399bcb0fa6d1d49076af0ec79d9ae081eef1fbc/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=7399bcb0fa6d1d49076af0ec79d9ae081eef1fbc", "patch": "@@ -872,7 +872,6 @@ extern struct edge_list *pre_edge_rev_lcm (FILE *, int, sbitmap *,\n \t\t\t\t\t   sbitmap *, sbitmap **,\n \t\t\t\t\t   sbitmap **);\n extern void compute_available (sbitmap *, sbitmap *, sbitmap *, sbitmap *);\n-extern int optimize_mode_switching (FILE *);\n \n /* In predict.c */\n extern void estimate_probability (struct loops *);"}, {"sha": "3e7ec7e39ba047dc98d5a9e2470781c6aa61de9f", "filename": "gcc/mode-switching.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7399bcb0fa6d1d49076af0ec79d9ae081eef1fbc/gcc%2Fmode-switching.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7399bcb0fa6d1d49076af0ec79d9ae081eef1fbc/gcc%2Fmode-switching.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmode-switching.c?ref=7399bcb0fa6d1d49076af0ec79d9ae081eef1fbc", "patch": "@@ -382,7 +382,7 @@ create_pre_exit (int n_entities, int *entity_map, const int *num_modes)\n /* Find all insns that need a particular mode setting, and insert the\n    necessary mode switches.  Return true if we did work.  */\n \n-int\n+static int\n optimize_mode_switching (FILE *file)\n {\n   rtx insn;"}]}