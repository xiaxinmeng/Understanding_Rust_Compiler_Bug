{"sha": "002b2dee5d23dff9cc0a7f3196838534bc084da4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAyYjJkZWU1ZDIzZGZmOWNjMGE3ZjMxOTY4Mzg1MzRiYzA4NGRhNA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernd.schmidt@codesourcery.com", "date": "2010-03-19T18:18:54Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2010-03-19T18:18:54Z"}, "message": "re PR rtl-optimization/42258 (redundant register move around mul instruction)\n\ngcc/\n\tPR rtl-optimization/42258\n\t* ira-lives.c (check_and_make_def_conflict): Ignore conflict for a\n\tuse that may match DEF.\n\ntestsuite/\n\tPR rtl-optimization/42258\n\t* gcc.target/arm/thumb1-mul-moves.c: New test.\n\nFrom-SVN: r157581", "tree": {"sha": "ede6feafa04bf138a041b65d50a1d8c03a3989ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ede6feafa04bf138a041b65d50a1d8c03a3989ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/002b2dee5d23dff9cc0a7f3196838534bc084da4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/002b2dee5d23dff9cc0a7f3196838534bc084da4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/002b2dee5d23dff9cc0a7f3196838534bc084da4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/002b2dee5d23dff9cc0a7f3196838534bc084da4/comments", "author": null, "committer": null, "parents": [{"sha": "f9ceed32dc9196ddcd2551526637369910a8407b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9ceed32dc9196ddcd2551526637369910a8407b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9ceed32dc9196ddcd2551526637369910a8407b"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "bdc8dae8da080a50bb06068b77d9ba3a3c5bb19f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/002b2dee5d23dff9cc0a7f3196838534bc084da4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/002b2dee5d23dff9cc0a7f3196838534bc084da4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=002b2dee5d23dff9cc0a7f3196838534bc084da4", "patch": "@@ -1,3 +1,9 @@\n+2010-03-19  Bernd Schmidt  <bernd.schmidt@codesourcery.com>\n+\n+\tPR rtl-optimization/42258\n+\t* ira-lives.c (check_and_make_def_conflict): Ignore conflict for a\n+\tuse that may match DEF.\n+\n 2010-03-19  Michael Matz  <matz@suse.de>\n \n \tPR c++/43116"}, {"sha": "b88082a304b533a3d62f913d2aa4cf750a9f4e01", "filename": "gcc/ira-lives.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/002b2dee5d23dff9cc0a7f3196838534bc084da4/gcc%2Fira-lives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/002b2dee5d23dff9cc0a7f3196838534bc084da4/gcc%2Fira-lives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-lives.c?ref=002b2dee5d23dff9cc0a7f3196838534bc084da4", "patch": "@@ -499,6 +499,8 @@ check_and_make_def_conflict (int alt, int def, enum reg_class def_cl)\n \n   for (use = 0; use < recog_data.n_operands; use++)\n     {\n+      int alt1;\n+\n       if (use == def || recog_data.operand_type[use] == OP_OUT)\n \tcontinue;\n \n@@ -507,6 +509,22 @@ check_and_make_def_conflict (int alt, int def, enum reg_class def_cl)\n       else\n \tuse_cl = recog_op_alt[use][alt].cl;\n \n+      /* If there's any alternative that allows USE to match DEF, do not\n+\t record a conflict.  If that causes us to create an invalid\n+\t instruction due to the earlyclobber, reload must fix it up.  */\t \n+      for (alt1 = 0; alt1 < recog_data.n_alternatives; alt1++)\n+\tif (recog_op_alt[use][alt1].matches == def\n+\t    || (use < recog_data.n_operands - 1\n+\t\t&& recog_data.constraints[use][0] == '%'\n+\t\t&& recog_op_alt[use + 1][alt1].matches == def)\n+\t    || (use >= 1\n+\t\t&& recog_data.constraints[use - 1][0] == '%'\n+\t\t&& recog_op_alt[use - 1][alt1].matches == def))\n+\t  break;\n+\n+      if (alt1 < recog_data.n_alternatives)\n+\tcontinue;\n+\n       advance_p = check_and_make_def_use_conflict (dreg, def_cl, use,\n \t\t\t\t\t\t   use_cl, advance_p);\n "}, {"sha": "a13e71208e5a3be4de3ea3b76d96319bbe1eee9a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/002b2dee5d23dff9cc0a7f3196838534bc084da4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/002b2dee5d23dff9cc0a7f3196838534bc084da4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=002b2dee5d23dff9cc0a7f3196838534bc084da4", "patch": "@@ -1,3 +1,8 @@\n+2010-03-19  Bernd Schmidt  <bernd.schmidt@codesourcery.com>\n+\n+\tPR rtl-optimization/42258\n+\t* gcc.target/arm/thumb1-mul-moves.c: New test.\n+\t\n 2010-03-19  Michael Matz  <matz@suse.de>\n \n \tPR c++/43116"}, {"sha": "6235774fe246e27bd46d129106b98c5a5a762844", "filename": "gcc/testsuite/gcc.target/arm/thumb1-mul-moves.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/002b2dee5d23dff9cc0a7f3196838534bc084da4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-mul-moves.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/002b2dee5d23dff9cc0a7f3196838534bc084da4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-mul-moves.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-mul-moves.c?ref=002b2dee5d23dff9cc0a7f3196838534bc084da4", "patch": "@@ -0,0 +1,11 @@\n+/* Check for unnecessary register moves.  */\n+/* { dg-options \"-mthumb -Os\" }  */\n+/* { dg-require-effective-target arm_thumb1_ok } */\n+\n+int f(int x)\n+{\n+  return x*42;\n+}\n+\n+/* { dg-final { scan-assembler-not \"mov\\[\\\\t \\]*r0,\" } } */\n+"}]}