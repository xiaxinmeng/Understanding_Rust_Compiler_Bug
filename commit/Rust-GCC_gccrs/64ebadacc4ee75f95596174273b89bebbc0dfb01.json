{"sha": "64ebadacc4ee75f95596174273b89bebbc0dfb01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRlYmFkYWNjNGVlNzVmOTU1OTYxNzQyNzNiODliZWJiYzBkZmIwMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-02-01T22:14:43Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-02-01T22:14:43Z"}, "message": "vector.tcc (vector::_M_insert_aux(iterator)): Remove, unused.\n\n2004-02-01  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/vector.tcc (vector::_M_insert_aux(iterator)):\n\tRemove, unused.\n\nFrom-SVN: r77081", "tree": {"sha": "2f8afd5ab3830ba1419d9ef79abf327787979629", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f8afd5ab3830ba1419d9ef79abf327787979629"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64ebadacc4ee75f95596174273b89bebbc0dfb01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64ebadacc4ee75f95596174273b89bebbc0dfb01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64ebadacc4ee75f95596174273b89bebbc0dfb01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64ebadacc4ee75f95596174273b89bebbc0dfb01/comments", "author": null, "committer": null, "parents": [{"sha": "f1c25d3b47cbca1052d3f6b91a915f981180307c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1c25d3b47cbca1052d3f6b91a915f981180307c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1c25d3b47cbca1052d3f6b91a915f981180307c"}], "stats": {"total": 51, "additions": 6, "deletions": 45}, "files": [{"sha": "cef5af5e698ed0c8dce3de77abc717bc0f825c63", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64ebadacc4ee75f95596174273b89bebbc0dfb01/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64ebadacc4ee75f95596174273b89bebbc0dfb01/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=64ebadacc4ee75f95596174273b89bebbc0dfb01", "patch": "@@ -1,3 +1,8 @@\n+2004-02-01  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/vector.tcc (vector::_M_insert_aux(iterator)):\n+\tRemove, unused.\n+\n 2004-02-01  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/stl_function.h: Additional minor tweaks."}, {"sha": "ee7e85c5198b994b6b18cfda8dd718d40963e16f", "filename": "libstdc++-v3/include/bits/vector.tcc", "status": "modified", "additions": 1, "deletions": 45, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64ebadacc4ee75f95596174273b89bebbc0dfb01/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64ebadacc4ee75f95596174273b89bebbc0dfb01/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc?ref=64ebadacc4ee75f95596174273b89bebbc0dfb01", "patch": "@@ -268,51 +268,7 @@ namespace __gnu_norm\n         this->_M_end_of_storage = __new_start.base() + __len;\n       }\n     }\n-  \n-  #ifdef _GLIBCXX_DEPRECATED\n-  template<typename _Tp, typename _Alloc>\n-    void\n-    vector<_Tp,_Alloc>::\n-    _M_insert_aux(iterator __position)\n-    {\n-      if (_M_finish != _M_end_of_storage)\n-      {\n-        std::_Construct(_M_finish, *(_M_finish - 1));\n-        ++_M_finish;\n-        std::copy_backward(__position, iterator(_M_finish - 2),\n-\t\t\t   iterator(_M_finish - 1));\n-        *__position = value_type();\n-      }\n-      else\n-      {\n-        const size_type __old_size = size();\n-        const size_type __len = __old_size != 0 ? 2 * __old_size : 1;\n-        pointer __new_start = _M_allocate(__len);\n-        pointer __new_finish = __new_start;\n-        try\n-          {\n-            __new_finish = std::uninitialized_copy(iterator(_M_start), __position,\n-\t\t\t\t\t\t   __new_start);\n-            std::_Construct(__new_finish);\n-            ++__new_finish;\n-            __new_finish = std::uninitialized_copy(__position, iterator(_M_finish),\n-\t\t\t\t\t\t   __new_finish);\n-          }\n-        catch(...)\n-          {\n-            std::_Destroy(__new_start,__new_finish);\n-            _M_deallocate(__new_start,__len);\n-            __throw_exception_again;\n-          }\n-        std::_Destroy(begin(), end());\n-        _M_deallocate(_M_start, _M_end_of_storage - _M_start);\n-        _M_start = __new_start;\n-        _M_finish = __new_finish;\n-        _M_end_of_storage = __new_start + __len;\n-      }\n-    }\n-  #endif\n-  \n+\n   template<typename _Tp, typename _Alloc>\n     void\n     vector<_Tp,_Alloc>::"}]}