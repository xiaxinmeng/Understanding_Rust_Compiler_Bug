{"sha": "56cf9372c0596c4df4003c72dc4665a306fbfe31", "node_id": "C_kwDOANBUbNoAKDU2Y2Y5MzcyYzA1OTZjNGRmNDAwM2M3MmRjNDY2NWEzMDZmYmZlMzE", "commit": {"author": {"name": "Thomas W Rodgers", "email": "rodgert@twrodgers.com", "date": "2023-02-10T18:09:06Z"}, "committer": {"name": "Thomas W Rodgers", "email": "rodgert@twrodgers.com", "date": "2023-02-14T01:46:59Z"}, "message": "libstdc++: Add missing free functions for atomic_flag [PR103934]\n\nThis patch adds -\n  atomic_flag_wait\n  atomic_flag_wait_explicit\n  atomic_flag_notify\n  atomic_flag_notify_explicit\n\nWhich were missed when commit 83a1be introduced C++20 atomic wait.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/103934\n\t* include/std/atomic (atomic_flag_wait): Add.\n\t(atomic_flag_wait_explicit): Add.\n\t(atomic_flag_notify): Add.\n\t(atomic_flag_notify_explicit): Add.\n\t* testsuite/29_atomics/atomic_flag/wait_notify/1.cc:\n\tAdd test case to cover missing atomic_flag free functions.", "tree": {"sha": "a7bcfff63c4650a95be26cb0d0cf461bc5cd7a06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7bcfff63c4650a95be26cb0d0cf461bc5cd7a06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56cf9372c0596c4df4003c72dc4665a306fbfe31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56cf9372c0596c4df4003c72dc4665a306fbfe31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56cf9372c0596c4df4003c72dc4665a306fbfe31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56cf9372c0596c4df4003c72dc4665a306fbfe31/comments", "author": {"login": "rodgert", "id": 120839, "node_id": "MDQ6VXNlcjEyMDgzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/120839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodgert", "html_url": "https://github.com/rodgert", "followers_url": "https://api.github.com/users/rodgert/followers", "following_url": "https://api.github.com/users/rodgert/following{/other_user}", "gists_url": "https://api.github.com/users/rodgert/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodgert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodgert/subscriptions", "organizations_url": "https://api.github.com/users/rodgert/orgs", "repos_url": "https://api.github.com/users/rodgert/repos", "events_url": "https://api.github.com/users/rodgert/events{/privacy}", "received_events_url": "https://api.github.com/users/rodgert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rodgert", "id": 120839, "node_id": "MDQ6VXNlcjEyMDgzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/120839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodgert", "html_url": "https://github.com/rodgert", "followers_url": "https://api.github.com/users/rodgert/followers", "following_url": "https://api.github.com/users/rodgert/following{/other_user}", "gists_url": "https://api.github.com/users/rodgert/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodgert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodgert/subscriptions", "organizations_url": "https://api.github.com/users/rodgert/orgs", "repos_url": "https://api.github.com/users/rodgert/repos", "events_url": "https://api.github.com/users/rodgert/events{/privacy}", "received_events_url": "https://api.github.com/users/rodgert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8d769045b43e8509490362865a85cb31a855ccf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8d769045b43e8509490362865a85cb31a855ccf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8d769045b43e8509490362865a85cb31a855ccf"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "96e87ded864669129a0aa40eddf2e3247e9d52ad", "filename": "libstdc++-v3/include/std/atomic", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56cf9372c0596c4df4003c72dc4665a306fbfe31/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56cf9372c0596c4df4003c72dc4665a306fbfe31/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic?ref=56cf9372c0596c4df4003c72dc4665a306fbfe31", "patch": "@@ -1259,6 +1259,25 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   atomic_flag_clear(volatile atomic_flag* __a) noexcept\n   { atomic_flag_clear_explicit(__a, memory_order_seq_cst); }\n \n+#if __cpp_lib_atomic_wait\n+  inline void\n+  atomic_flag_wait(atomic_flag* __a, bool __old) noexcept\n+  { __a->wait(__old); }\n+\n+  inline void\n+  atomic_flag_wait_explicit(atomic_flag* __a, bool __old,\n+                                memory_order __m) noexcept\n+  { __a->wait(__old, __m); }\n+\n+  inline void\n+  atomic_flag_notify_one(atomic_flag* __a) noexcept\n+  { __a->notify_one(); }\n+\n+  inline void\n+  atomic_flag_notify_all(atomic_flag* __a) noexcept\n+  { __a->notify_all(); }\n+#endif // __cpp_lib_atomic_wait\n+\n   /// @cond undocumented\n   // _GLIBCXX_RESOLVE_LIB_DEFECTS\n   // 3220. P0558 broke conforming C++14 uses of atomic shared_ptr"}, {"sha": "777fa915ea10f20ea6e29867a01528ac5b9eb966", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_flag/wait_notify/1.cc", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56cf9372c0596c4df4003c72dc4665a306fbfe31/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Fwait_notify%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56cf9372c0596c4df4003c72dc4665a306fbfe31/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Fwait_notify%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_flag%2Fwait_notify%2F1.cc?ref=56cf9372c0596c4df4003c72dc4665a306fbfe31", "patch": "@@ -26,8 +26,8 @@\n \n #include <testsuite_hooks.h>\n \n-int\n-main()\n+void\n+test01()\n {\n   std::atomic_flag a;\n   VERIFY( !a.test() );\n@@ -39,5 +39,27 @@ main()\n     });\n   a.wait(false);\n   t.join();\n+}\n+\n+void\n+test02()\n+{\n+  std::atomic_flag a;\n+  VERIFY( !std::atomic_flag_test(&a) );\n+  std::atomic_flag_wait(&a, true);\n+  std::thread t([&]\n+    {\n+      std::atomic_flag_test_and_set(&a);\n+      std::atomic_flag_notify_one(&a);\n+    });\n+    std::atomic_flag_wait(&a, false);\n+    t.join();\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  test02();\n   return 0;\n }"}]}