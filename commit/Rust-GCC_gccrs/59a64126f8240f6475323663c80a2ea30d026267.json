{"sha": "59a64126f8240f6475323663c80a2ea30d026267", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlhNjQxMjZmODI0MGY2NDc1MzIzNjYzYzgwYTJlYTMwZDAyNjI2Nw==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-03-28T22:34:21Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-03-28T22:34:21Z"}, "message": "Makefile.in (LANGUAGES): Add gcov.\n\n\t* Makefile.in (LANGUAGES): Add gcov.\n\t(OBJS): Add profile.o.\n\t(STAGESTUFF): Add gcov.\n\t(profile.o, gcov.o, gcov): Add rules to build them.\n\t(cpp.info, gcc.info, gcc.dvi): Add gcov.texi.\n\t(install-common): Install gcov.\n\nFrom-SVN: r13810", "tree": {"sha": "9c394d55838b02cd2484495777d2d9782b2fc3ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c394d55838b02cd2484495777d2d9782b2fc3ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59a64126f8240f6475323663c80a2ea30d026267", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59a64126f8240f6475323663c80a2ea30d026267", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59a64126f8240f6475323663c80a2ea30d026267", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59a64126f8240f6475323663c80a2ea30d026267/comments", "author": null, "committer": null, "parents": [{"sha": "2be7973ec183d9ee031773b142a25bc14b9fcab5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2be7973ec183d9ee031773b142a25bc14b9fcab5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2be7973ec183d9ee031773b142a25bc14b9fcab5"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "ddd75e0f2a05614d1e5e566141db29581ce0b074", "filename": "gcc/Makefile.in", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a64126f8240f6475323663c80a2ea30d026267/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a64126f8240f6475323663c80a2ea30d026267/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=59a64126f8240f6475323663c80a2ea30d026267", "patch": "@@ -35,7 +35,7 @@ SUBDIRS =\n \n # Selection of languages to be made.\n # This is overridden by configure.\n-LANGUAGES = c objective-c proto\n+LANGUAGES = c objective-c proto gcov\n \n # Selection of languages to be made during stage1 build.\n # This is overridden by configure.\n@@ -542,6 +542,7 @@ OBJS = toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o \\\n  regclass.o local-alloc.o global.o reload.o reload1.o caller-save.o \\\n  insn-peep.o reorg.o sched.o final.o recog.o reg-stack.o \\\n  insn-opinit.o insn-recog.o insn-extract.o insn-output.o insn-emit.o \\\n+ profile.o \\\n  insn-attrtab.o $(out_object_file) getpwd.o convert.o $(EXTRA_OBJS)\n \n # GEN files are listed separately, so they can be built before doing parallel\n@@ -570,6 +571,7 @@ STAGESTUFF = *$(objext) insn-flags.h insn-config.h insn-codes.h \\\n  $(CCCP)$(exeext) cc1obj$(exeext) enquire$(exeext) \\\n  protoize$(exeext) unprotoize$(exeext) \\\n  specs collect2$(exeext) $(USE_COLLECT2) underscore.c \\\n+ gcov$(exeext) *.bp \\\n  *.greg *.lreg *.combine *.flow *.cse *.jump *.rtl *.tree *.loop \\\n  *.dbr *.jump2 *.sched *.cse2 *.sched2 *.stack \\\n  *.[si] \\\n@@ -1298,6 +1300,8 @@ stupid.o : stupid.c $(CONFIG_H) $(RTL_H) regs.h hard-reg-set.h flags.h\n \n cse.o : cse.c $(CONFIG_H) $(RTL_H) regs.h hard-reg-set.h flags.h real.h \\\n    insn-config.h recog.h\n+profile.o : profile.c $(CONFIG_H) $(RTL_H) flags.h insn-flags.h gcov-io.h \\\n+   tree.h output.h\n loop.o : loop.c $(CONFIG_H) $(RTL_H) flags.h loop.h insn-config.h \\\n    insn-flags.h insn-codes.h regs.h hard-reg-set.h recog.h expr.h real.h\n unroll.o : unroll.c $(CONFIG_H) $(RTL_H) insn-config.h insn-codes.h \\\n@@ -1819,6 +1823,11 @@ test-protoize-simple: ./protoize ./unprotoize $(GCC_PASSES)\n \t@echo Expect zero differences.\n \tdiff $(srcdir)/protoize.c tmp-proto.c | cat\n \t-rm -f tmp-proto.[cs] tmp-proto$(objext)\n+\n+gcov.o: gcov.c gcov-io.h\n+\n+gcov: gcov.o $(LIBDEPS)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) gcov.o $(LIBS) -o $@\n \f\n # Build the include directory.  The stamp files are stmp-* rather than\n # stamp-* so that mostlyclean does not force the include directory to\n@@ -1967,14 +1976,14 @@ $(srcdir)/cpp.info: cpp.texi\n \tcd $(srcdir); $(MAKEINFO) $(MAKEINFOFLAGS) cpp.texi\n \n $(srcdir)/gcc.info: gcc.texi extend.texi install.texi invoke.texi \\\n-\t\tmd.texi rtl.texi tm.texi \n+\t\tmd.texi rtl.texi tm.texi gcov.texi\n \tcd $(srcdir); $(MAKEINFO) $(MAKEINFOFLAGS) gcc.texi\n \n dvi: $(srcdir)/gcc.dvi $(srcdir)/cpp.dvi lang.dvi\n \n # This works with GNU Make's default rule.\n $(srcdir)/gcc.dvi: gcc.texi extend.texi install.texi invoke.texi \\\n-\t\tmd.texi rtl.texi tm.texi \n+\t\tmd.texi rtl.texi tm.texi gcov.texi \n \t$(TEXI2DVI) $<\n \n # This works with GNU Make's default rule.\n@@ -2041,6 +2050,7 @@ mostlyclean: bytecode.mostlyclean lang.mostlyclean\n \t-rm -f gcc.vrs gcc.kys gcc.tps gcc.pgs gcc.fns\n # Delete core dumps.\n \t-rm -f core */core\n+\t-rm -f *.bp */*.bp\n \n # Delete all files made by compilation\n # that don't exist in the distribution.\n@@ -2204,6 +2214,13 @@ install-common: native installdirs $(EXTRA_PARTS) lang.install-common\n \tfi\n \t-rm -f $(libsubdir)/cpp$(exeext)\n \t$(INSTALL_PROGRAM) cpp$(exeext) $(libsubdir)/cpp$(exeext)\n+# Install gcov if it was compiled.\n+\t-if [ -f gcov$(exeext) ]; \\\n+\tthen \\\n+\t    rm -f $(bindir)/gcov$(exeext); \\\n+\t    $(INSTALL_PROGRAM) gcov$(exeext) $(bindir)/gcov$(exeext); \\\n+\t    chmod a+x $(bindir)/gcov$(exeext); \\\n+\tfi\n \n # Install the driver program as $(target_alias)-gcc\n # and also as either gcc (if native) or $(tooldir)/bin/gcc."}]}