{"sha": "b02922a4e3bcbb73a8c223a2a89ebc82f70314ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjAyOTIyYTRlM2JjYmI3M2E4YzIyM2EyYTg5ZWJjODJmNzAzMTRhYg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-11-13T21:05:57Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-11-13T21:05:57Z"}, "message": "re PR c++/4206 (ICE with switch in while)\n\ncp:\n\tPR g++/4206\n\t* parse.y (already_scoped_stmt): Remove.\n\t(simple_stmt, WHILE & FOR): Use implicitly_scoped_stmt.\ntestsuite:\n\t* g++.dg/other/forscope1.C: New test.\n\t* g++.dg/ext/forscope1.C: New test.\n\t* g++.dg/ext/forscope2.C: New test.\n\nFrom-SVN: r46992", "tree": {"sha": "7070a235359e569768ce78545f09ea5a0d1efab7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7070a235359e569768ce78545f09ea5a0d1efab7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b02922a4e3bcbb73a8c223a2a89ebc82f70314ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b02922a4e3bcbb73a8c223a2a89ebc82f70314ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b02922a4e3bcbb73a8c223a2a89ebc82f70314ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b02922a4e3bcbb73a8c223a2a89ebc82f70314ab/comments", "author": null, "committer": null, "parents": [{"sha": "4a4ae922546d1108be6301a155a86627911d4da4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a4ae922546d1108be6301a155a86627911d4da4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a4ae922546d1108be6301a155a86627911d4da4"}], "stats": {"total": 105, "additions": 93, "deletions": 12}, "files": [{"sha": "688a55be19fb8356ed5a86d874728aff617762a9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b02922a4e3bcbb73a8c223a2a89ebc82f70314ab/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b02922a4e3bcbb73a8c223a2a89ebc82f70314ab/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b02922a4e3bcbb73a8c223a2a89ebc82f70314ab", "patch": "@@ -1,3 +1,9 @@\n+2001-11-13  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR g++/4206\n+\t* parse.y (already_scoped_stmt): Remove.\n+\t(simple_stmt, WHILE & FOR): Use implicitly_scoped_stmt.\n+\n 2001-11-12  H.J. Lu <hjl@gnu.org>\n \n \t* cp/cvt.c (ocp_convert): Don't warn the address of a weak"}, {"sha": "12e8e2634b57e7663a1b750cd5599a33438e1ab7", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b02922a4e3bcbb73a8c223a2a89ebc82f70314ab/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b02922a4e3bcbb73a8c223a2a89ebc82f70314ab/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=b02922a4e3bcbb73a8c223a2a89ebc82f70314ab", "patch": "@@ -1187,16 +1187,6 @@ compstmtend:\n \t| maybe_label_decls error '}'\n \t;\n \n-already_scoped_stmt:\n-\t  save_lineno '{'\n-\t\t{ $<ttype>$ =  begin_compound_stmt (1); }\n-\t  compstmtend\n-\t\t{ STMT_LINENO ($<ttype>3) = $1;\n-\t\t  finish_compound_stmt (1, $<ttype>3); }\n-\t| save_lineno simple_stmt\n-\t\t{ if ($2) STMT_LINENO ($2) = $1; }\n-\t;\n-\n nontrivial_exprlist:\n \t  expr_no_commas ',' expr_no_commas\n \t\t{ $$ = tree_cons (NULL_TREE, $$, \n@@ -3394,7 +3384,7 @@ simple_stmt:\n \t\t}\n \t  paren_cond_or_null\n                 { finish_while_stmt_cond ($3, $<ttype>2); }\n-\t  already_scoped_stmt\n+\t  implicitly_scoped_stmt\n                 { $$ = $<ttype>2;\n \t\t  finish_while_stmt ($<ttype>2); }\n \t| DO\n@@ -3415,7 +3405,7 @@ simple_stmt:\n                 { finish_for_cond ($6, $<ttype>2); }\n \t  xexpr ')'\n                 { finish_for_expr ($9, $<ttype>2); }\n-\t  already_scoped_stmt\n+\t  implicitly_scoped_stmt\n                 { $$ = $<ttype>2;\n \t\t  finish_for_stmt ($<ttype>2); }\n \t| SWITCH "}, {"sha": "41e0aaca45640ed2646c2a7fd3c40e1ef0d6bb7f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b02922a4e3bcbb73a8c223a2a89ebc82f70314ab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b02922a4e3bcbb73a8c223a2a89ebc82f70314ab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b02922a4e3bcbb73a8c223a2a89ebc82f70314ab", "patch": "@@ -1,3 +1,9 @@\n+2001-11-13  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.dg/other/forscope1.C: New test.\n+\t* g++.dg/ext/forscope1.C: New test.\n+\t* g++.dg/ext/forscope2.C: New test.\n+\n 2001-11-13  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.c-torture/execute/20011113-1.c: New test."}, {"sha": "fa6401a3b9439b3436da23ac1223740b4c0c13f0", "filename": "gcc/testsuite/g++.dg/ext/forscope1.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b02922a4e3bcbb73a8c223a2a89ebc82f70314ab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fforscope1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b02922a4e3bcbb73a8c223a2a89ebc82f70314ab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fforscope1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fforscope1.C?ref=b02922a4e3bcbb73a8c223a2a89ebc82f70314ab", "patch": "@@ -0,0 +1,27 @@\n+// { dg-do compile }\n+// { dg-options -fno-for-scope }\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 4 Sept 2001 <nathan@codesourcery.com>\n+\n+// Bug 4206. We were nesting SCOPE_STMTs badly.\n+\n+\n+struct A\n+{\n+  A ();\n+  ~A ();\n+};\n+\n+\n+void Go( )\n+{\n+  for (int i = 1;;)\n+    {\n+      switch (1) {\n+      default: {}\n+      }\n+      A d;\n+    }\n+  i;\n+}"}, {"sha": "b883effb2552bf255ac0b75c1f431d3e7f755822", "filename": "gcc/testsuite/g++.dg/ext/forscope2.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b02922a4e3bcbb73a8c223a2a89ebc82f70314ab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fforscope2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b02922a4e3bcbb73a8c223a2a89ebc82f70314ab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fforscope2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fforscope2.C?ref=b02922a4e3bcbb73a8c223a2a89ebc82f70314ab", "patch": "@@ -0,0 +1,27 @@\n+// { dg-do compile }\n+// { dg-options -fpermissive }\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 4 Sept 2001 <nathan@codesourcery.com>\n+\n+// Bug 4206. We were nesting SCOPE_STMTs badly.\n+\n+\n+struct A\n+{\n+  A ();\n+  ~A ();\n+};\n+\n+\n+void Go( )\n+{\n+  for (int i = 1;;)\t// { dg-warning \"using obsolete binding\" \"\" }\n+    {\n+      switch (1) {\n+      default: {}\n+      }\n+      A d;\n+    }\n+  i;  // { dg-warning \"name lookup\" \"\" }\n+}"}, {"sha": "e694d6f23326b0136af712874ba746237de981ad", "filename": "gcc/testsuite/g++.dg/other/forscope1.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b02922a4e3bcbb73a8c223a2a89ebc82f70314ab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fforscope1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b02922a4e3bcbb73a8c223a2a89ebc82f70314ab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fforscope1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fforscope1.C?ref=b02922a4e3bcbb73a8c223a2a89ebc82f70314ab", "patch": "@@ -0,0 +1,25 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 4 Sept 2001 <nathan@codesourcery.com>\n+\n+// Bug 4206. We were nesting SCOPE_STMTs badly.\n+\n+struct A\n+{\n+  A ();\n+  ~A ();\n+};\n+\n+\n+void Go( )\n+{\n+  while (1)\n+    {\n+      switch (1) {\n+      default: {}\n+      }\n+      A d;\n+    }\n+  \n+}"}]}