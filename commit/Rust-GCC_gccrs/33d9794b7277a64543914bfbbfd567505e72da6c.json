{"sha": "33d9794b7277a64543914bfbbfd567505e72da6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNkOTc5NGI3Mjc3YTY0NTQzOTE0YmZiYmZkNTY3NTA1ZTcyZGE2Yw==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-06-19T06:07:39Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-06-22T02:44:44Z"}, "message": "RISC-V: Fix compilation failed for frflags builtin in C++ mode\n\n  - g++ will complain too few arguments for frflags builtin like bellow\n    message:\n\n    error: too few arguments to function 'unsigned int __builtin_riscv_frflags(void)'\n\n  - However it's no arguments needed, it because we declare the function\n    type with VOID arguments, that seems like require a VOID argument\n    in the c++ front-end when GCC tried to resolve the function.\n\ngcc/ChangeLog\n\n\t* config/riscv/riscv-builtins.c (RISCV_FTYPE_NAME0): New.\n\t(RISCV_FTYPE_ATYPES0): New.\n\t(riscv_builtins): Using RISCV_USI_FTYPE for frflags.\n\t* config/riscv/riscv-ftypes.def: Remove VOID argument.\n\ngcc/testsuite/ChangeLog\n\n\t* g++.target/riscv/frflags.C: New.", "tree": {"sha": "e226a515d5d0b4b4daa03006a7891d3f44f0628f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e226a515d5d0b4b4daa03006a7891d3f44f0628f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33d9794b7277a64543914bfbbfd567505e72da6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33d9794b7277a64543914bfbbfd567505e72da6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33d9794b7277a64543914bfbbfd567505e72da6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33d9794b7277a64543914bfbbfd567505e72da6c/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f86e11a267aa70c56b300cfe60cfe3a27111b204", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f86e11a267aa70c56b300cfe60cfe3a27111b204", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f86e11a267aa70c56b300cfe60cfe3a27111b204"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "bc959389c76c74a4632cf1ccb992e4567d836d38", "filename": "gcc/config/riscv/riscv-builtins.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33d9794b7277a64543914bfbbfd567505e72da6c/gcc%2Fconfig%2Friscv%2Friscv-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33d9794b7277a64543914bfbbfd567505e72da6c/gcc%2Fconfig%2Friscv%2Friscv-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-builtins.c?ref=33d9794b7277a64543914bfbbfd567505e72da6c", "patch": "@@ -38,6 +38,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n \n /* Macros to create an enumeration identifier for a function prototype.  */\n+#define RISCV_FTYPE_NAME0(A) RISCV_##A##_FTYPE\n #define RISCV_FTYPE_NAME1(A, B) RISCV_##A##_FTYPE_##B\n \n /* Classifies the prototype of a built-in function.  */\n@@ -121,11 +122,13 @@ AVAIL (hard_float, TARGET_HARD_FLOAT)\n \n /* RISCV_FTYPE_ATYPESN takes N RISCV_FTYPES-like type codes and lists\n    their associated RISCV_ATYPEs.  */\n+#define RISCV_FTYPE_ATYPES0(A) \\\n+  RISCV_ATYPE_##A\n #define RISCV_FTYPE_ATYPES1(A, B) \\\n   RISCV_ATYPE_##A, RISCV_ATYPE_##B\n \n static const struct riscv_builtin_description riscv_builtins[] = {\n-  DIRECT_BUILTIN (frflags, RISCV_USI_FTYPE_VOID, hard_float),\n+  DIRECT_BUILTIN (frflags, RISCV_USI_FTYPE, hard_float),\n   DIRECT_NO_TARGET_BUILTIN (fsflags, RISCV_VOID_FTYPE_USI, hard_float)\n };\n "}, {"sha": "1c6bc4e9dce1b13b116288257d3da68dbbd493c1", "filename": "gcc/config/riscv/riscv-ftypes.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33d9794b7277a64543914bfbbfd567505e72da6c/gcc%2Fconfig%2Friscv%2Friscv-ftypes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33d9794b7277a64543914bfbbfd567505e72da6c/gcc%2Fconfig%2Friscv%2Friscv-ftypes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-ftypes.def?ref=33d9794b7277a64543914bfbbfd567505e72da6c", "patch": "@@ -26,5 +26,5 @@ along with GCC; see the file COPYING3.  If not see\n       LIST contains the return-type code followed by the codes for each\n         argument type.  */\n \n-DEF_RISCV_FTYPE (1, (USI, VOID))\n+DEF_RISCV_FTYPE (0, (USI))\n DEF_RISCV_FTYPE (1, (VOID, USI))"}, {"sha": "6353044dcf71cb0a1a2921b6e8cf1801707fc38b", "filename": "gcc/testsuite/g++.target/riscv/frflags.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33d9794b7277a64543914bfbbfd567505e72da6c/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Ffrflags.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33d9794b7277a64543914bfbbfd567505e72da6c/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Ffrflags.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Ffrflags.C?ref=33d9794b7277a64543914bfbbfd567505e72da6c", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-options \"-O2 -march=rv32if -mabi=ilp32f\" } */\n+/* { dg-do compile } */\n+\n+int f()\n+{\n+  return __builtin_riscv_frflags();\n+}"}]}