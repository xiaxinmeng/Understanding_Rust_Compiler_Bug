{"sha": "a6810021afdc4e05a44d7c56682eebe9452c359d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY4MTAwMjFhZmRjNGUwNWE0NGQ3YzU2NjgyZWViZTk0NTJjMzU5ZA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2015-08-11T12:34:06Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-08-11T12:34:06Z"}, "message": "tree-ssa-phiopt.c (minmax_replacement): Create new ssa name if we're not the only contributor to target phi.\n\n\t* tree-ssa-phiopt.c (minmax_replacement): Create new ssa name if\n\twe're not the only contributor to target phi.\n\n\ttestsuite/\n\t* c-c++-common/dfp/operator-comma.c: Call init function.\n\t* c-c++-common/dfp/convert-dfp-2.c: New test.\n\nFrom-SVN: r226778", "tree": {"sha": "975f335631ad9587ccc537fcc29be670766001e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/975f335631ad9587ccc537fcc29be670766001e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6810021afdc4e05a44d7c56682eebe9452c359d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6810021afdc4e05a44d7c56682eebe9452c359d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6810021afdc4e05a44d7c56682eebe9452c359d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6810021afdc4e05a44d7c56682eebe9452c359d/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "739a838e18d8ce5dfbaf3bc40b3b92fd6111a458", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/739a838e18d8ce5dfbaf3bc40b3b92fd6111a458", "html_url": "https://github.com/Rust-GCC/gccrs/commit/739a838e18d8ce5dfbaf3bc40b3b92fd6111a458"}], "stats": {"total": 67, "additions": 66, "deletions": 1}, "files": [{"sha": "3a078162b356c2b3f6e8eea6cc83a1bcee9973aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6810021afdc4e05a44d7c56682eebe9452c359d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6810021afdc4e05a44d7c56682eebe9452c359d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6810021afdc4e05a44d7c56682eebe9452c359d", "patch": "@@ -1,3 +1,8 @@\n+2015-08-11  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* tree-ssa-phiopt.c (minmax_replacement): Create new ssa name if\n+\twe're not the only contributor to target phi.\n+\n 2015-08-11  Jiong Wang  <jiong.wang@arm.com>\n \n \t* config/aarch64/aarch64.h (REG_CLASS_NAMES): Add the missing ',' after"}, {"sha": "8d4903f5b62141b6ae8399374e7238ddbe842127", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6810021afdc4e05a44d7c56682eebe9452c359d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6810021afdc4e05a44d7c56682eebe9452c359d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a6810021afdc4e05a44d7c56682eebe9452c359d", "patch": "@@ -1,3 +1,8 @@\n+2015-08-11  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* c-c++-common/dfp/operator-comma.c: Call init function.\n+\t* c-c++-common/dfp/convert-dfp-2.c: New test.\n+\n 2015-08-10  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.target/i386/builtin_target.c (check_intel_cpu_model):"}, {"sha": "a50b202885c13bcee9cd780b50329b5773c2bfe5", "filename": "gcc/testsuite/c-c++-common/dfp/convert-dfp-2.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6810021afdc4e05a44d7c56682eebe9452c359d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fdfp%2Fconvert-dfp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6810021afdc4e05a44d7c56682eebe9452c359d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fdfp%2Fconvert-dfp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fdfp%2Fconvert-dfp-2.c?ref=a6810021afdc4e05a44d7c56682eebe9452c359d", "patch": "@@ -0,0 +1,45 @@\n+/* { dg-options \"-O0\" } */\n+\n+/* Test decimal fp conversions of zero.  */\n+\n+#include \"dfp-dbg.h\"\n+\n+volatile _Decimal32 d32a, d32c;\n+volatile _Decimal64 d64a, d64c;\n+volatile _Decimal128 d128a, d128c;\n+\n+int\n+main ()\n+{\n+  d32a = d32c;\n+  if (d32a)\n+    FAILURE\n+  d32a = d64c;\n+  if (d32a)\n+    FAILURE\n+  d32a = d128c;\n+  if (d32a)\n+    FAILURE\n+\n+  d64a = d32c;\n+  if (d64a)\n+    FAILURE\n+  d64a = d64c;\n+  if (d64a)\n+    FAILURE\n+  d64a = d128c;\n+  if (d64a)\n+    FAILURE\n+  \n+  d128a = d32c;\n+  if (d128a)\n+    FAILURE\n+  d128a = d64c;\n+  if (d128a)\n+    FAILURE\n+  d128a = d128c;\n+  if (d128a)\n+    FAILURE\n+  \n+  FINISH\n+}"}, {"sha": "7055087ba6e271cb81e656b8de0fd81db41da9e3", "filename": "gcc/testsuite/c-c++-common/dfp/operator-comma.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6810021afdc4e05a44d7c56682eebe9452c359d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fdfp%2Foperator-comma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6810021afdc4e05a44d7c56682eebe9452c359d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fdfp%2Foperator-comma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fdfp%2Foperator-comma.c?ref=a6810021afdc4e05a44d7c56682eebe9452c359d", "patch": "@@ -24,6 +24,8 @@ init ()\n int\n main ()\n {\n+  init ();\n+  \n   d32a = (d32b, d32c);\n   if (d32a != d32c)\n     FAILURE"}, {"sha": "d46ba6229612c86cc1db42ee59683143a5a2b271", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6810021afdc4e05a44d7c56682eebe9452c359d/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6810021afdc4e05a44d7c56682eebe9452c359d/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=a6810021afdc4e05a44d7c56682eebe9452c359d", "patch": "@@ -1277,8 +1277,16 @@ minmax_replacement (basic_block cond_bb, basic_block middle_bb,\n       gsi_move_before (&gsi_from, &gsi);\n     }\n \n+  /* Create an SSA var to hold the min/max result.  If we're the only\n+     things setting the target PHI, then we  can clone the PHI\n+     variable.  Otherwise we must create a new one.  */\n+  result = PHI_RESULT (phi);\n+  if (EDGE_COUNT (gimple_bb (phi)->preds) == 2)\n+    result = duplicate_ssa_name (result, NULL);\n+  else\n+    result = make_ssa_name (TREE_TYPE (result));\n+\n   /* Emit the statement to compute min/max.  */\n-  result = duplicate_ssa_name (PHI_RESULT (phi), NULL);\n   new_stmt = gimple_build_assign (result, minmax, arg0, arg1);\n   gsi = gsi_last_bb (cond_bb);\n   gsi_insert_before (&gsi, new_stmt, GSI_NEW_STMT);"}]}