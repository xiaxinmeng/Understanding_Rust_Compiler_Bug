{"sha": "859e95abb84b67a2cb42d6e6013c16160d9c802d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU5ZTk1YWJiODRiNjdhMmNiNDJkNmU2MDEzYzE2MTYwZDljODAyZA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-10-12T15:37:20Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-10-12T15:37:20Z"}, "message": "shrink-wrap: Testcases for separate shrink-wrapping\n\nA few testcases for separate shrink-wrapping: test whether it works in a\ntrivial case; whether it creates more than one prologue where that is\nuseful; whether it puts prologues inside a loop if that is cheaper.\n\n\ngcc/testsuite/\n\t* gcc.target/powerpc/shrink-wrap-separate-0.c: New testcase.\n\t* gcc.target/powerpc/shrink-wrap-separate-1.c: New testcase.\n\t* gcc.target/powerpc/shrink-wrap-separate-2.c: New testcase.\n\nFrom-SVN: r241066", "tree": {"sha": "7a7081ba8283b28f8c32c81ed01a36e069699009", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a7081ba8283b28f8c32c81ed01a36e069699009"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/859e95abb84b67a2cb42d6e6013c16160d9c802d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/859e95abb84b67a2cb42d6e6013c16160d9c802d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/859e95abb84b67a2cb42d6e6013c16160d9c802d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/859e95abb84b67a2cb42d6e6013c16160d9c802d/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "61f41369f1e1c6d8b83d4b644c24aebcc90f522f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61f41369f1e1c6d8b83d4b644c24aebcc90f522f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61f41369f1e1c6d8b83d4b644c24aebcc90f522f"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "5eb693a652f4b851bec06c3089b6b2d54ac1f972", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/859e95abb84b67a2cb42d6e6013c16160d9c802d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/859e95abb84b67a2cb42d6e6013c16160d9c802d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=859e95abb84b67a2cb42d6e6013c16160d9c802d", "patch": "@@ -1,3 +1,9 @@\n+2016-10-12  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* gcc.target/powerpc/shrink-wrap-separate-0.c: New testcase.\n+\t* gcc.target/powerpc/shrink-wrap-separate-1.c: New testcase.\n+\t* gcc.target/powerpc/shrink-wrap-separate-2.c: New testcase.\n+\n 2016-10-12  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* gcc.target/powerpc/warn-1.c: Change line number in dg-warning."}, {"sha": "dea0611e8fc6542bd6d5728f4d6f956f6238db68", "filename": "gcc/testsuite/gcc.target/powerpc/shrink-wrap-separate-0.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/859e95abb84b67a2cb42d6e6013c16160d9c802d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fshrink-wrap-separate-0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/859e95abb84b67a2cb42d6e6013c16160d9c802d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fshrink-wrap-separate-0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fshrink-wrap-separate-0.c?ref=859e95abb84b67a2cb42d6e6013c16160d9c802d", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-final { scan-assembler {#before\\M.*\\mmflr\\M} } } */\n+\n+/* This tests if shrink-wrapping for separate components works.\n+\n+   r20 (a callee-saved register) is forced live at the start, so that we\n+   get it saved in a prologue at the start of the function.\n+   The link register only needs to be saved if x is non-zero; without\n+   separate shrink-wrapping it would however be saved in the one prologue.\n+   The test tests if the mflr insn ends up behind the prologue.  */\n+\n+void g(void);\n+\n+void f(int x)\n+{\n+\tregister int r20 asm(\"20\") = x;\n+\tasm(\"#before\" : : \"r\"(r20));\n+\tif (x)\n+\t\tg();\n+\tasm(\"\"); // no tailcall of g\n+}"}, {"sha": "735b606e66de266ea278edcb61a6eb9b2b061d4b", "filename": "gcc/testsuite/gcc.target/powerpc/shrink-wrap-separate-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/859e95abb84b67a2cb42d6e6013c16160d9c802d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fshrink-wrap-separate-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/859e95abb84b67a2cb42d6e6013c16160d9c802d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fshrink-wrap-separate-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fshrink-wrap-separate-1.c?ref=859e95abb84b67a2cb42d6e6013c16160d9c802d", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-final { scan-assembler {\\mmflr\\M.*\\mbl\\M.*\\mmflr\\M.*\\mbl\\M} } } */\n+\n+/* This tests if shrink-wrapping for separate components creates more\n+   than one prologue when that is useful.  In this case, it saves the\n+   link register before both the call to g and the call to h.  */\n+\n+void g(void) __attribute__((noreturn));\n+void h(void) __attribute__((noreturn));\n+\n+void f(int x)\n+{\n+\tif (x == 42)\n+\t\tg();\n+\tif (x == 31)\n+\t\th();\n+}"}, {"sha": "b22564a51c5be3315095b2e3d18e67bd64a3782d", "filename": "gcc/testsuite/gcc.target/powerpc/shrink-wrap-separate-2.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/859e95abb84b67a2cb42d6e6013c16160d9c802d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fshrink-wrap-separate-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/859e95abb84b67a2cb42d6e6013c16160d9c802d/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fshrink-wrap-separate-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fshrink-wrap-separate-2.c?ref=859e95abb84b67a2cb42d6e6013c16160d9c802d", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-final { scan-assembler {\\mmflr\\M.*\\mbl\\M.*\\mmflr\\M.*\\mbl\\M} } } */\n+\n+/* This tests if shrink-wrapping for separate components puts a prologue\n+   inside a loop when that is useful.  In this case, it saves the link\n+   register before each call: both calls happen with probability .10,\n+   so saving the link register happens with .80 per execution of f on\n+   average, which is smaller than 1 which you would get if you saved\n+   it outside the loop.  */\n+\n+int *a;\n+void g(void);\n+\n+void f(int x)\n+{\n+\tint j;\n+\tfor (j = 0; j < 4; j++) {\n+\t\tif (__builtin_expect(a[j], 0))\n+\t\t\tg();\n+\t\tasm(\"#\" : : : \"memory\");\n+\t\tif (__builtin_expect(a[j], 0))\n+\t\t\tg();\n+\t\ta[j]++;\n+\t}\n+}"}]}