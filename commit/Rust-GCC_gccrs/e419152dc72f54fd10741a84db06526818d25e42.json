{"sha": "e419152dc72f54fd10741a84db06526818d25e42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQxOTE1MmRjNzJmNTRmZDEwNzQxYTg0ZGIwNjUyNjgxOGQyNWU0Mg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-03-23T19:31:53Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-03-23T19:31:53Z"}, "message": "(RETURN_IN_MEMORY): Delete struct and union references.\n\nFrom-SVN: r3854", "tree": {"sha": "54a12499854d7d1634c162828d8d3b3fb0977181", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54a12499854d7d1634c162828d8d3b3fb0977181"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e419152dc72f54fd10741a84db06526818d25e42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e419152dc72f54fd10741a84db06526818d25e42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e419152dc72f54fd10741a84db06526818d25e42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e419152dc72f54fd10741a84db06526818d25e42/comments", "author": null, "committer": null, "parents": [{"sha": "8712e5c6f316ecc05df846c3c4488005b2d1f9ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8712e5c6f316ecc05df846c3c4488005b2d1f9ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8712e5c6f316ecc05df846c3c4488005b2d1f9ea"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "1907b30904889f11d5366c078c078c305dbaf10b", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e419152dc72f54fd10741a84db06526818d25e42/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e419152dc72f54fd10741a84db06526818d25e42/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=e419152dc72f54fd10741a84db06526818d25e42", "patch": "@@ -674,7 +674,6 @@ enum reg_class { NO_REGS, GENERAL_REGS, FLOAT_REGS, ALL_REGS,\n \n #define RETURN_IN_MEMORY(TYPE) \\\n   (TYPE_MODE (TYPE) == BLKmode \\\n-   || TREE_CODE (TYPE) == RECORD_TYPE || TREE_CODE (TYPE) == UNION_TYPE  \\\n    || (TREE_CODE (TYPE) == INTEGER_TYPE && TYPE_PRECISION (TYPE) > 64))\n \n /* 1 if N is a possible register number for a function value"}, {"sha": "094de4657b94f81f5e3cddcc6b87c09ddb18242d", "filename": "gcc/config/i386/sysv4.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e419152dc72f54fd10741a84db06526818d25e42/gcc%2Fconfig%2Fi386%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e419152dc72f54fd10741a84db06526818d25e42/gcc%2Fconfig%2Fi386%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsysv4.h?ref=e419152dc72f54fd10741a84db06526818d25e42", "patch": "@@ -31,8 +31,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #undef RETURN_IN_MEMORY\n #define RETURN_IN_MEMORY(TYPE) \\\n-  (TYPE_MODE (TYPE) == BLKmode \\\n-   || TREE_CODE (TYPE) == RECORD_TYPE || TREE_CODE(TYPE) == UNION_TYPE)\n+  (TYPE_MODE (TYPE) == BLKmode)\n \n /* Define which macros to predefine.  __svr4__ is our extension.  */\n /* This used to define X86, but james@bigtex.cactus.org says that"}, {"sha": "2e67e6359186d9b128c01ec82f0b0499345d4f44", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e419152dc72f54fd10741a84db06526818d25e42/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e419152dc72f54fd10741a84db06526818d25e42/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=e419152dc72f54fd10741a84db06526818d25e42", "patch": "@@ -1769,9 +1769,7 @@ extern struct mips_frame_info current_frame_info;\n    to give us MIPS cc compatibility.  */\n \n #define RETURN_IN_MEMORY(TYPE)\t\\\n-  ((TYPE_MODE (TYPE) == BLKmode) \\\n-   || (TREE_CODE (TYPE) == RECORD_TYPE) || (TREE_CODE (TYPE) == UNION_TYPE))\n-\n+  (TYPE_MODE (TYPE) == BLKmode)\n \f\n /* A code distinguishing the floating point format of the target\n    machine.  There are three defined values: IEEE_FLOAT_FORMAT,"}, {"sha": "be5de190d877e327580e2439adfaf21250f6d2a5", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e419152dc72f54fd10741a84db06526818d25e42/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e419152dc72f54fd10741a84db06526818d25e42/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=e419152dc72f54fd10741a84db06526818d25e42", "patch": "@@ -644,8 +644,7 @@ enum reg_class { NO_REGS, BASE_REGS, GENERAL_REGS, FLOAT_REGS,\n    For the RS/6000, any structure or union type is returned in memory.  */\n \n #define RETURN_IN_MEMORY(TYPE) \\\n-  (TYPE_MODE (TYPE) == BLKmode \\\n-   || TREE_CODE (TYPE) == RECORD_TYPE || TREE_CODE (TYPE) == UNION_TYPE)\n+  (TYPE_MODE (TYPE) == BLKmode)\n \n /* 1 if N is a possible register number for a function value\n    as seen by the caller."}]}