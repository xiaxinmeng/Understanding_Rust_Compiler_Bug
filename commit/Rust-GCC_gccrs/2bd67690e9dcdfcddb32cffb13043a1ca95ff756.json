{"sha": "2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJkNjc2OTBlOWRjZGZjZGRiMzJjZmZiMTMwNDNhMWNhOTVmZjc1Ng==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-07-17T06:35:13Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-17T06:35:13Z"}, "message": "debug.adb: Remove -gnatdQ.\n\n2014-07-17  Robert Dewar  <dewar@adacore.com>\n\n\t* debug.adb: Remove -gnatdQ.\n\t* exp_disp.adb: Remove -gnatdQ.\n\t* a-ztenio.ads, a-wtinio.ads, a-wtmoio.ads, a-ztcoau.ads, a-tiinio.ads,\n\ta-wtfiio.ads, a-timoio.ads, sem_ch12.adb, a-tifiio.ads, a-ztinio.ads,\n\trtsfind.adb, rtsfind.ads, a-ztmoio.ads, a-wtdeio.ads, a-ztfiio.ads,\n\ta-tideio.ads, a-wtflio.ads, a-ztdeio.ads, sem_ch8.adb, a-tiflio.ads,\n\tsprint.adb, a-ztflio.ads, snames.ads-tmpl, a-wtenio.ads,\n\ta-tienio.ads: Rename Text_IO_Kludge to Text_IO_Special_Unit.\n\nFrom-SVN: r212725", "tree": {"sha": "32444e488d3b2cf3ccc24757d930ec5c8c41ecea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32444e488d3b2cf3ccc24757d930ec5c8c41ecea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/comments", "author": null, "committer": null, "parents": [{"sha": "59f4d03898e13da463a202919875dfa3fac43456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f4d03898e13da463a202919875dfa3fac43456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59f4d03898e13da463a202919875dfa3fac43456"}], "stats": {"total": 833, "additions": 293, "deletions": 540}, "files": [{"sha": "003bde3a19cd330d792b0d19d36db275b2dd164a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -1,3 +1,14 @@\n+2014-07-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* debug.adb: Remove -gnatdQ.\n+\t* exp_disp.adb: Remove -gnatdQ.\n+\t* a-ztenio.ads, a-wtinio.ads, a-wtmoio.ads, a-ztcoau.ads, a-tiinio.ads,\n+\ta-wtfiio.ads, a-timoio.ads, sem_ch12.adb, a-tifiio.ads, a-ztinio.ads,\n+\trtsfind.adb, rtsfind.ads, a-ztmoio.ads, a-wtdeio.ads, a-ztfiio.ads,\n+\ta-tideio.ads, a-wtflio.ads, a-ztdeio.ads, sem_ch8.adb, a-tiflio.ads,\n+\tsprint.adb, a-ztflio.ads, snames.ads-tmpl, a-wtenio.ads,\n+\ta-tienio.ads: Rename Text_IO_Kludge to Text_IO_Special_Unit.\n+\n 2014-07-17  Robert Dewar  <dewar@adacore.com>\n \n \t* back_end.adb: Minor reformatting and comment additions."}, {"sha": "47acdd6ab4573ef64fbb23fe96f26864c5c8c3c3", "filename": "gcc/ada/a-tideio.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-tideio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-tideio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tideio.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -35,9 +35,10 @@\n \n --  In Ada 95, the package Ada.Text_IO.Decimal_IO is a subpackage of Text_IO.\n --  This is for compatibility with Ada 83. In GNAT we make it a child package\n---  to avoid loading the necessary code if Decimal_IO is not instantiated. See\n---  routine Rtsfind.Text_IO_Kludge for a description of how we patch up the\n---  difference in semantics so that it is invisible to the Ada programmer.\n+--  to avoid loading the necessary code if Decimal_IO is not instantiated.\n+--  See routine Rtsfind.Check_Text_IO_Special_Unit for a description of how\n+--  we patch up the difference in semantics so that it is invisible to the\n+--  Ada programmer.\n \n private generic\n    type Num is delta <> digits <>;"}, {"sha": "68f4694321b3dec40f5bb54f40bc4ccbbee3b400", "filename": "gcc/ada/a-tienio.ads", "status": "modified", "additions": 6, "deletions": 26, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-tienio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-tienio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tienio.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -6,39 +6,19 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n---                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n --  In Ada 95, the package Ada.Text_IO.Enumeration_IO is a subpackage of\n --  Text_IO. This is for compatibility with Ada 83. In GNAT we make it a\n --  child package to avoid loading the necessary code if Enumeration_IO is\n---  not instantiated. See routine Rtsfind.Text_IO_Kludge for a description\n---  of how we patch up the difference in semantics so that it is invisible\n---  to the Ada programmer.\n+--  not instantiated. See routine Rtsfind.Check_Text_IO_Special_Unit for a\n+--  description of how we patch up the difference in semantics so that it\n+--  is invisible to the Ada programmer.\n \n private generic\n    type Enum is (<>);"}, {"sha": "265600dbe464a1651f768e4e511719042f51579f", "filename": "gcc/ada/a-tifiio.ads", "status": "modified", "additions": 6, "deletions": 25, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-tifiio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-tifiio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tifiio.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -6,38 +6,19 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n---                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n --  In Ada 95, the package Ada.Text_IO.Fixed_IO is a subpackage of Text_IO.\n --  This is for compatibility with Ada 83. In GNAT we make it a child package\n --  to avoid loading the necessary code if Fixed_IO is not instantiated. See\n---  routine Rtsfind.Text_IO_Kludge for a description of how we patch up the\n---  difference in semantics so that it is invisible to the Ada programmer.\n+--  routine Rtsfind.Check_Text_IO_Special_Unit for a description of how we\n+--  patch up the difference in semantics so that it is invisible to the Ada\n+--  programmer.\n \n private generic\n    type Num is delta <>;"}, {"sha": "89eec9932cf1fcee2e69c9b9071639de3a5da91b", "filename": "gcc/ada/a-tiflio.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-tiflio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-tiflio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiflio.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -36,8 +36,9 @@\n --  In Ada 95, the package Ada.Text_IO.Float_IO is a subpackage of Text_IO.\n --  This is for compatibility with Ada 83. In GNAT we make it a child package\n --  to avoid loading the necessary code if Float_IO is not instantiated. See\n---  routine Rtsfind.Text_IO_Kludge for a description of how we patch up the\n---  difference in semantics so that it is invisible to the Ada programmer.\n+--  routine Rtsfind.Check_Text_IO_Special_Unit for a description of how we\n+--  patch up the difference in semantics so that it is invisible to the Ada\n+--  programmer.\n \n private generic\n    type Num is digits <>;"}, {"sha": "459d6fe5a6edcb14dc91bcb69694705fa52dfa47", "filename": "gcc/ada/a-tiinio.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-tiinio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-tiinio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tiinio.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -35,9 +35,10 @@\n \n --  In Ada 95, the package Ada.Text_IO.Integer_IO is a subpackage of Text_IO.\n --  This is for compatibility with Ada 83. In GNAT we make it a child package\n---  to avoid loading the necessary code if Integer_IO is not instantiated. See\n---  routine Rtsfind.Text_IO_Kludge for a description of how we patch up the\n---  difference in semantics so that it is invisible to the Ada programmer.\n+--  to avoid loading the necessary code if Integer_IO is not instantiated.\n+--  See routine Rtsfind.Check_Text_IO_Special_Unit for a description of how\n+--  we patch up the difference in semantics so that it is invisible to the\n+--  Ada programmer.\n \n private generic\n    type Num is range <>;"}, {"sha": "112adf4b82125cde9b51a7ab02135390e981c75f", "filename": "gcc/ada/a-timoio.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-timoio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-timoio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-timoio.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1993-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1993-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -35,9 +35,10 @@\n \n --  In Ada 95, the package Ada.Text_IO.Modular_IO is a subpackage of Text_IO.\n --  This is for compatibility with Ada 83. In GNAT we make it a child package\n---  to avoid loading the necessary code if Modular_IO is not instantiated. See\n---  routine Rtsfind.Text_IO_Kludge for a description of how we patch up the\n---  difference in semantics so that it is invisible to the Ada programmer.\n+--  to avoid loading the necessary code if Modular_IO is not instantiated.\n+--  See routine Rtsfind.Check_Text_IO_Special_Unit for a description of how\n+--  we patch up the difference in semantics so that it is invisible to the\n+--  Ada programmer.\n \n private generic\n    type Num is mod <>;"}, {"sha": "dbeb80a077bdde22864accc999febd6ac1a60183", "filename": "gcc/ada/a-wtdeio.ads", "status": "modified", "additions": 8, "deletions": 28, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-wtdeio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-wtdeio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtdeio.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -6,38 +6,18 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n---                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  In Ada 95, the package Ada.Wide_Text_IO.Decimal_IO is a subpackage of\n---  Wide_Text_IO. In GNAT we make it a child package to avoid loading the\n---  necessary code if Decimal_IO is not instantiated. See the routine\n---  Rtsfind.Text_IO_Kludge for a description of how we patch up the\n---  difference in semantics so that it is invisible to the Ada programmer.\n+--  In Ada 95, the package Ada.Wide_Text_IO.Decimal_IO is a subpackage\n+--  of Wide_Text_IO. In GNAT we make it a child package to avoid loading\n+--  the necessary code if Decimal_IO is not instantiated. See the routine\n+--  Rtsfind.Check_Text_IO_Special_Unit for a description of how we patch up\n+--  the difference in semantics so that it is invisible to the Ada programmer.\n \n private generic\n    type Num is delta <> digits <>;"}, {"sha": "f0a1c0be135d9a351ab6071cb83032a3d568898f", "filename": "gcc/ada/a-wtenio.ads", "status": "modified", "additions": 5, "deletions": 25, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-wtenio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-wtenio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtenio.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -6,38 +6,18 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n---                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n --  In Ada 95, the package Ada.Wide_Text_IO.Enumeration_IO is a subpackage\n --  of Wide_Text_IO. In GNAT we make it a child package to avoid loading the\n --  necessary code if Enumeration_IO is not instantiated. See the routine\n---  Rtsfind.Text_IO_Kludge for a description of how we patch up the difference\n---  in semantics so that it is invisible to the Ada programmer.\n+--  Rtsfind.Check_Text_IO_Special_Unit for a description of how we patch up\n+--  the difference in semantics so that it is invisible to the Ada programmer.\n \n private generic\n    type Enum is (<>);"}, {"sha": "939229e9dafaf72429cea368d438ae7630353a43", "filename": "gcc/ada/a-wtfiio.ads", "status": "modified", "additions": 5, "deletions": 25, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-wtfiio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-wtfiio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtfiio.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -6,38 +6,18 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n---                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n --  In Ada 95, the package Ada.Wide_Text_IO.Fixed_IO is a subpackage of\n --  Wide_Text_IO. In GNAT we make it a child package to avoid loading\n --  the necessary code if Fixed_IO is not instantiated. See the routine\n---  Rtsfind.Text_IO_Kludge for a description of how we patch up the\n---  difference in semantics so that it is invisible to the Ada programmer.\n+--  Rtsfind.Check_Text_IO_Special_Unit for a description of how we patch up\n+--  the difference in semantics so that it is invisible to the Ada programmer.\n \n private generic\n    type Num is delta <>;"}, {"sha": "445ad26519578dc5d0e75ff967e542d3f8ff1832", "filename": "gcc/ada/a-wtflio.ads", "status": "modified", "additions": 7, "deletions": 27, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-wtflio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-wtflio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtflio.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -6,38 +6,18 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n---                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  In Ada 95, the package Ada.Wide_Text_IO.Float_IO is a subpackage\n---  of Wide_Text_IO. In GNAT we make it a child package to avoid loading\n+--  In Ada 95, the package Ada.Wide_Text_IO.Float_IO is a subpackage of\n+--  Wide_Text_IO. In GNAT we make it a child package to avoid loading\n --  the necessary code if Float_IO is not instantiated. See the routine\n---  Rtsfind.Text_IO_Kludge for a description of how we patch up the\n---  difference in semantics so that it is invisible to the Ada programmer.\n+--  Rtsfind.Check_Text_IO_Special_Unit for a description of how we patch up\n+--  the difference in semantics so that it is invisible to the Ada programmer.\n \n private generic\n    type Num is digits <>;"}, {"sha": "c2821db60dcd172710164591fe7fd5d3351482b0", "filename": "gcc/ada/a-wtinio.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-wtinio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-wtinio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtinio.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -16,8 +16,8 @@\n --  In Ada 95, the package Ada.Wide_Text_IO.Integer_IO is a subpackage\n --  of Wide_Text_IO. In GNAT we make it a child package to avoid loading\n --  the necessary code if Integer_IO is not instantiated. See the routine\n---  Rtsfind.Text_IO_Kludge for a description of how we patch up the\n---  difference in semantics so that it is invisible to the Ada programmer.\n+--  Rtsfind.Check_Text_IO_Special_Unit for a description of how we patch up\n+--  the difference in semantics so that it is invisible to the Ada programmer.\n \n private generic\n    type Num is range <>;"}, {"sha": "9ea1620d1a53550d59e642337fb084c3ba57abe4", "filename": "gcc/ada/a-wtmoio.ads", "status": "modified", "additions": 9, "deletions": 27, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-wtmoio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-wtmoio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-wtmoio.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -6,38 +6,20 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  In Ada 95, the package Ada.Wide_Text_IO.Modular_IO is a subpackage of\n---  Wide_Text_IO. In GNAT we make it a child package to avoid loading the\n---  necessary code if Modular_IO is not instantiated. See the routine\n---  Rtsfind.Text_IO_Kludge for a description of how we patch up the\n---  difference in semantics so that it is invisible to the Ada programmer.\n+--  In Ada 95, the package Ada.Wide_Text_IO.Modular_IO is a subpackage\n+--  of Wide_Text_IO. In GNAT we make it a child package to avoid loading\n+--  the necessary code if Modular_IO is not instantiated. See the routine\n+--  Rtsfind.Check_Text_IO_Special_Unit for a description of how we patch up\n+--  the difference in semantics so that it is invisible to the Ada programmer.\n \n private generic\n    type Num is mod <>;"}, {"sha": "b68c38b18ccd6285fcd9c90eb951b09182f18a1d", "filename": "gcc/ada/a-ztcoau.ads", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-ztcoau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-ztcoau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztcoau.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -6,26 +6,10 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "efe24da4a6c2dca5b0a62a45894685de0785babf", "filename": "gcc/ada/a-ztdeio.ads", "status": "modified", "additions": 8, "deletions": 28, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-ztdeio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-ztdeio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztdeio.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -6,38 +6,18 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n---                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  In Ada 95, the package Ada.Wide_Wide_Text_IO.Decimal_IO is a subpackage of\n---  Wide_Wide_Text_IO. In GNAT we make it a child package to avoid loading the\n---  necessary code if Decimal_IO is not instantiated. See the routine\n---  Rtsfind.Text_IO_Kludge for a description of how we patch up the difference\n---  in semantics so that it is invisible to the Ada programmer.\n+--  In Ada 95, the package Ada.Wide_Wide_Text_IO.Decimal_IO is a subpackage\n+--  of Wide_Wide_Text_IO. In GNAT we make it a child package to avoid loading\n+--  the necessary code if Decimal_IO is not instantiated. See the routine\n+--  Rtsfind.Check_Text_IO_Special_Unit for a description of how we patch up\n+--  the difference in semantics so that it is invisible to the Ada programmer.\n \n private generic\n    type Num is delta <> digits <>;"}, {"sha": "5a003512d2e2334301aa6776b0d5558501abf470", "filename": "gcc/ada/a-ztenio.ads", "status": "modified", "additions": 8, "deletions": 29, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-ztenio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-ztenio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztenio.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -6,39 +6,18 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n---                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  In Ada 95, the package Ada.Wide_Wide_Text_IO.Enumeration_IO is a\n---  subpackage of Wide_Wide_Text_IO. In GNAT we make it a child package to\n---  avoid loading the necessary code if Enumeration_IO is not instantiated.\n---  See the routine Rtsfind.Text_IO_Kludge for a description of how we patch\n---  up the difference in semantics so that it is invisible to the Ada\n---  programmer.\n+--  In Ada 95, the package Ada.Wide_Wide_Text_IO.Enumeration_IO is a subpackage\n+--  of Wide_Wide_Text_IO. In GNAT we make it a child package to avoid loading\n+--  the necessary code if Enumeration_IO is not instantiated. See the routine\n+--  Rtsfind.Check_Text_IO_Special_Unit for a description of how we patch up the\n+--  difference in semantics so that it is invisible to the Ada programmer.\n \n private generic\n    type Enum is (<>);"}, {"sha": "498565c39847f6453ce2539cc27f33d296f741ec", "filename": "gcc/ada/a-ztfiio.ads", "status": "modified", "additions": 5, "deletions": 25, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-ztfiio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-ztfiio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztfiio.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -6,38 +6,18 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n---                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n --  In Ada 95, the package Ada.Wide_Wide_Text_IO.Fixed_IO is a subpackage of\n --  Wide_Wide_Text_IO. In GNAT we make it a child package to avoid loading\n --  the necessary code if Fixed_IO is not instantiated. See the routine\n---  Rtsfind.Text_IO_Kludge for a description of how we patch up the\n---  difference in semantics so that it is invisible to the Ada programmer.\n+--  Rtsfind.Check_Text_IO_Special_Unit for a description of how we patch up\n+--  the difference in semantics so that it is invisible to the Ada programmer.\n \n private generic\n    type Num is delta <>;"}, {"sha": "ca3f86b7716af8f1e4b67abfcac496d52150804d", "filename": "gcc/ada/a-ztflio.ads", "status": "modified", "additions": 7, "deletions": 27, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-ztflio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-ztflio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztflio.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -6,38 +6,18 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n---                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  In Ada 95, the package Ada.Wide_Wide_Text_IO.Float_IO is a subpackage\n---  of Wide_Wide_Text_IO. In GNAT we make it a child package to avoid loading\n+--  In Ada 95, the package Ada.Wide_Wide_Text_IO.Float_IO is a subpackage of\n+--  Wide_Wide_Text_IO. In GNAT we make it a child package to avoid loading\n --  the necessary code if Float_IO is not instantiated. See the routine\n---  Rtsfind.Text_IO_Kludge for a description of how we patch up the\n---  difference in semantics so that it is invisible to the Ada programmer.\n+--  Rtsfind.Check_Text_IO_Special_Unit for a description of how we patch up\n+--  the difference in semantics so that it is invisible to the Ada programmer.\n \n private generic\n    type Num is digits <>;"}, {"sha": "2434f8b3e43a046375927191defe4dc9a4c55c75", "filename": "gcc/ada/a-ztinio.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-ztinio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-ztinio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztinio.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -16,8 +16,8 @@\n --  In Ada 95, the package Ada.Wide_Wide_Text_IO.Integer_IO is a subpackage\n --  of Wide_Wide_Text_IO. In GNAT we make it a child package to avoid loading\n --  the necessary code if Integer_IO is not instantiated. See the routine\n---  Rtsfind.Text_IO_Kludge for a description of how we patch up the\n---  difference in semantics so that it is invisible to the Ada programmer.\n+--  Rtsfind.Check_Text_IO_Special_Unit for a description of how we patch up\n+--  the difference in semantics so that it is invisible to the Ada programmer.\n \n private generic\n    type Num is range <>;"}, {"sha": "11aeaefec025f2d8c57007c7dced2a7cc063979a", "filename": "gcc/ada/a-ztmoio.ads", "status": "modified", "additions": 8, "deletions": 28, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-ztmoio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fa-ztmoio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztmoio.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -6,38 +6,18 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n---                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  In Ada 95, the package Ada.Wide_Wide_Text_IO.Modular_IO is a subpackage of\n---  Wide_Wide_Text_IO. In GNAT we make it a child package to avoid loading the\n---  necessary code if Modular_IO is not instantiated. See the routine\n---  Rtsfind.Text_IO_Kludge for a description of how we patch up the\n---  difference in semantics so that it is invisible to the Ada programmer.\n+--  In Ada 95, the package Ada.Wide_Wide_Text_IO.Modular_IO is a subpackage\n+--  of Wide_Wide_Text_IO. In GNAT we make it a child package to avoid loading\n+--  the necessary code if Modular_IO is not instantiated. See the routine\n+--  Rtsfind.Check_Text_IO_Special_Unit for a description of how we patch up\n+--  the difference in semantics so that it is invisible to the Ada programmer.\n \n private generic\n    type Num is mod <>;"}, {"sha": "869b8cd09a02db8b570fa7547672fe2db5ac4b3a", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -80,7 +80,7 @@ package body Debug is\n    --  dN   No file name information in exception messages\n    --  dO   Output immediate error messages\n    --  dP   Do not check for controlled objects in preelaborable packages\n-   --  dQ   Do not generate runtime check for duplicated external tag\n+   --  dQ\n    --  dR   Bypass check for correct version of s-rpc\n    --  dS   Never convert numbers to machine numbers in Sem_Eval\n    --  dT   Convert to machine numbers only for constant declarations\n@@ -438,12 +438,6 @@ package body Debug is\n    --       in preelaborable packages, but this restriction is a huge pain,\n    --       especially in the predefined library units.\n \n-   --  dQ   Eliminate check for duplicate external tags. This check was added\n-   --       as per AI 0113, and causes some backward compatibility problems.\n-   --       It is never legitimate to have duplicate external tags, so the\n-   --       check is certainly valid, but this debug switch can be useful for\n-   --       enabling previous behavior of ignoring this problem.\n-\n    --  dR   Bypass the check for a proper version of s-rpc being present\n    --       to use the -gnatz? switch. This allows debugging of the use\n    --       of stubs generation without needing to have GLADE (or some"}, {"sha": "8da934f3d3408b9d7c31c68751e0af35c35f47f6", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -6226,7 +6226,6 @@ package body Exp_Disp is\n       if not No_Run_Time_Mode\n         and then Ada_Version >= Ada_2005\n         and then RTE_Available (RE_Check_TSD)\n-        and then not Debug_Flag_QQ\n         and then not Duplicated_Tag_Checks_Suppressed (Typ)\n       then\n          Append_To (Elab_Code,\n@@ -6815,7 +6814,6 @@ package body Exp_Disp is\n       if Ada_Version >= Ada_2005\n         and then Is_Library_Level_Entity (Typ)\n         and then RTE_Available (RE_Check_TSD)\n-        and then not Debug_Flag_QQ\n         and then not Duplicated_Tag_Checks_Suppressed (Typ)\n       then\n          Append_To (Result,"}, {"sha": "499b167bb0a30b75aafbf13d34388c82418d9493", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 146, "deletions": 146, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -173,9 +173,9 @@ package body Rtsfind is\n    --  for the Is_Potentially_Use_Visible flag of the entity for the loaded\n    --  unit (if it is indeed loaded). A value of False means nothing special\n    --  need be done. A value of True indicates that this flag must be set to\n-   --  True. It is needed only in the Text_IO_Kludge procedure, which may\n-   --  materialize an entity of Text_IO (or [Wide_]Wide_Text_IO) that was\n-   --  previously unknown. Id is the RE_Id value of the entity which was\n+   --  True. It is needed only in the Check_Text_IO_Special_Unit procedure,\n+   --  which may materialize an entity of Text_IO (or [Wide_]Wide_Text_IO) that\n+   --  was previously unknown. Id is the RE_Id value of the entity which was\n    --  originally requested. Id is used only for error message detail, and if\n    --  it is RE_Null, then the attempt to output the entity name is ignored.\n \n@@ -264,6 +264,144 @@ package body Rtsfind is\n       end if;\n    end Check_CRT;\n \n+   --------------------------------\n+   -- Check_Text_IO_Special_Unit --\n+   --------------------------------\n+\n+   procedure Check_Text_IO_Special_Unit (Nam : Node_Id) is\n+      Chrs : Name_Id;\n+\n+      type Name_Map_Type is array (Text_IO_Package_Name) of RTU_Id;\n+\n+      Name_Map : constant Name_Map_Type := Name_Map_Type'(\n+        Name_Decimal_IO     => Ada_Text_IO_Decimal_IO,\n+        Name_Enumeration_IO => Ada_Text_IO_Enumeration_IO,\n+        Name_Fixed_IO       => Ada_Text_IO_Fixed_IO,\n+        Name_Float_IO       => Ada_Text_IO_Float_IO,\n+        Name_Integer_IO     => Ada_Text_IO_Integer_IO,\n+        Name_Modular_IO     => Ada_Text_IO_Modular_IO);\n+\n+      Wide_Name_Map : constant Name_Map_Type := Name_Map_Type'(\n+        Name_Decimal_IO     => Ada_Wide_Text_IO_Decimal_IO,\n+        Name_Enumeration_IO => Ada_Wide_Text_IO_Enumeration_IO,\n+        Name_Fixed_IO       => Ada_Wide_Text_IO_Fixed_IO,\n+        Name_Float_IO       => Ada_Wide_Text_IO_Float_IO,\n+        Name_Integer_IO     => Ada_Wide_Text_IO_Integer_IO,\n+        Name_Modular_IO     => Ada_Wide_Text_IO_Modular_IO);\n+\n+      Wide_Wide_Name_Map : constant Name_Map_Type := Name_Map_Type'(\n+        Name_Decimal_IO     => Ada_Wide_Wide_Text_IO_Decimal_IO,\n+        Name_Enumeration_IO => Ada_Wide_Wide_Text_IO_Enumeration_IO,\n+        Name_Fixed_IO       => Ada_Wide_Wide_Text_IO_Fixed_IO,\n+        Name_Float_IO       => Ada_Wide_Wide_Text_IO_Float_IO,\n+        Name_Integer_IO     => Ada_Wide_Wide_Text_IO_Integer_IO,\n+        Name_Modular_IO     => Ada_Wide_Wide_Text_IO_Modular_IO);\n+\n+      To_Load : RTU_Id;\n+      --  Unit to be loaded, from one of the above maps\n+\n+   begin\n+      --  Nothing to do if name is not an identifier or a selected component\n+      --  whose selector_name is an identifier.\n+\n+      if Nkind (Nam) = N_Identifier then\n+         Chrs := Chars (Nam);\n+\n+      elsif Nkind (Nam) = N_Selected_Component\n+        and then Nkind (Selector_Name (Nam)) = N_Identifier\n+      then\n+         Chrs := Chars (Selector_Name (Nam));\n+\n+      else\n+         return;\n+      end if;\n+\n+      --  Nothing to do if name is not one of the Text_IO subpackages\n+      --  Otherwise look through loaded units, and if we find Text_IO\n+      --  or [Wide_]Wide_Text_IO already loaded, then load the proper child.\n+\n+      if Chrs in Text_IO_Package_Name then\n+         for U in Main_Unit .. Last_Unit loop\n+            Get_Name_String (Unit_File_Name (U));\n+\n+            if Name_Len = 12 then\n+\n+               --  Here is where we do the loads if we find one of the units\n+               --  Ada.Text_IO or Ada.[Wide_]Wide_Text_IO. An interesting\n+               --  detail is that these units may already be used (i.e. their\n+               --  In_Use flags may be set). Normally when the In_Use flag is\n+               --  set, the Is_Potentially_Use_Visible flag of all entities in\n+               --  the package is set, but the new entity we are mysteriously\n+               --  adding was not there to have its flag set at the time. So\n+               --  that's why we pass the extra parameter to RTU_Find, to make\n+               --  sure the flag does get set now. Given that those generic\n+               --  packages are in fact child units, we must indicate that\n+               --  they are visible.\n+\n+               if Name_Buffer (1 .. 12) = \"a-textio.ads\" then\n+                  To_Load := Name_Map (Chrs);\n+\n+               elsif Name_Buffer (1 .. 12) = \"a-witeio.ads\" then\n+                  To_Load := Wide_Name_Map (Chrs);\n+\n+               elsif Name_Buffer (1 .. 12) = \"a-ztexio.ads\" then\n+                  To_Load := Wide_Wide_Name_Map (Chrs);\n+\n+               else\n+                  goto Continue;\n+               end if;\n+\n+               Load_RTU (To_Load, Use_Setting => In_Use (Cunit_Entity (U)));\n+               Set_Is_Visible_Lib_Unit (RT_Unit_Table (To_Load).Entity);\n+\n+               --  Prevent creation of an implicit 'with' from (for example)\n+               --  Ada.Wide_Text_IO.Integer_IO to Ada.Text_IO.Integer_IO,\n+               --  because these could create cycles. First check whether the\n+               --  simple names match (\"integer_io\" = \"integer_io\"), and then\n+               --  check whether the parent is indeed one of the\n+               --  [[Wide_]Wide_]Text_IO packages.\n+\n+               if Chrs = Chars (Cunit_Entity (Current_Sem_Unit)) then\n+                  declare\n+                     Parent_Name : constant Unit_Name_Type :=\n+                       Get_Parent_Spec_Name\n+                         (Unit_Name (Current_Sem_Unit));\n+\n+                  begin\n+                     if Parent_Name /= No_Unit_Name then\n+                        Get_Name_String (Parent_Name);\n+\n+                        declare\n+                           P : String renames Name_Buffer (1 .. Name_Len);\n+                        begin\n+                           if P = \"ada.text_io%s\"      or else\n+                             P = \"ada.wide_text_io%s\" or else\n+                             P = \"ada.wide_wide_text_io%s\"\n+                           then\n+                              goto Continue;\n+                           end if;\n+                        end;\n+                     end if;\n+                  end;\n+               end if;\n+\n+               --  Add an implicit with clause from the current unit to the\n+               --  [[Wide_]Wide_]Text_IO child (if necessary).\n+\n+               Maybe_Add_With (RT_Unit_Table (To_Load));\n+            end if;\n+\n+            <<Continue>> null;\n+         end loop;\n+      end if;\n+\n+   exception\n+         --  Generate error message if run-time unit not available\n+\n+      when RE_Not_Available =>\n+         Error_Msg_N (\"& not available\", Nam);\n+   end Check_Text_IO_Special_Unit;\n+\n    ------------------------\n    -- Entity_Not_Defined --\n    ------------------------\n@@ -515,11 +653,11 @@ package body Rtsfind is\n       return Present (E) and then E = Ent;\n    end Is_RTU;\n \n-   ----------------------------\n-   -- Is_Text_IO_Kludge_Unit --\n-   ----------------------------\n+   -----------------------------\n+   -- Is_Text_IO_Special_Unit --\n+   -----------------------------\n \n-   function Is_Text_IO_Kludge_Unit (Nam : Node_Id) return Boolean is\n+   function Is_Text_IO_Special_Unit (Nam : Node_Id) return Boolean is\n       Prf : Node_Id;\n       Sel : Node_Id;\n \n@@ -549,7 +687,7 @@ package body Rtsfind is\n                                  Name_Wide_Wide_Text_IO)\n           and then Nkind (Sel) = N_Identifier\n           and then Chars (Sel) in Text_IO_Package_Name;\n-   end Is_Text_IO_Kludge_Unit;\n+   end Is_Text_IO_Special_Unit;\n \n    ---------------\n    -- Load_Fail --\n@@ -1381,142 +1519,4 @@ package body Rtsfind is\n       end loop;\n    end Set_RTU_Loaded;\n \n-   --------------------\n-   -- Text_IO_Kludge --\n-   --------------------\n-\n-   procedure Text_IO_Kludge (Nam : Node_Id) is\n-      Chrs : Name_Id;\n-\n-      type Name_Map_Type is array (Text_IO_Package_Name) of RTU_Id;\n-\n-      Name_Map : constant Name_Map_Type := Name_Map_Type'(\n-        Name_Decimal_IO     => Ada_Text_IO_Decimal_IO,\n-        Name_Enumeration_IO => Ada_Text_IO_Enumeration_IO,\n-        Name_Fixed_IO       => Ada_Text_IO_Fixed_IO,\n-        Name_Float_IO       => Ada_Text_IO_Float_IO,\n-        Name_Integer_IO     => Ada_Text_IO_Integer_IO,\n-        Name_Modular_IO     => Ada_Text_IO_Modular_IO);\n-\n-      Wide_Name_Map : constant Name_Map_Type := Name_Map_Type'(\n-        Name_Decimal_IO     => Ada_Wide_Text_IO_Decimal_IO,\n-        Name_Enumeration_IO => Ada_Wide_Text_IO_Enumeration_IO,\n-        Name_Fixed_IO       => Ada_Wide_Text_IO_Fixed_IO,\n-        Name_Float_IO       => Ada_Wide_Text_IO_Float_IO,\n-        Name_Integer_IO     => Ada_Wide_Text_IO_Integer_IO,\n-        Name_Modular_IO     => Ada_Wide_Text_IO_Modular_IO);\n-\n-      Wide_Wide_Name_Map : constant Name_Map_Type := Name_Map_Type'(\n-        Name_Decimal_IO     => Ada_Wide_Wide_Text_IO_Decimal_IO,\n-        Name_Enumeration_IO => Ada_Wide_Wide_Text_IO_Enumeration_IO,\n-        Name_Fixed_IO       => Ada_Wide_Wide_Text_IO_Fixed_IO,\n-        Name_Float_IO       => Ada_Wide_Wide_Text_IO_Float_IO,\n-        Name_Integer_IO     => Ada_Wide_Wide_Text_IO_Integer_IO,\n-        Name_Modular_IO     => Ada_Wide_Wide_Text_IO_Modular_IO);\n-\n-      To_Load : RTU_Id;\n-      --  Unit to be loaded, from one of the above maps\n-\n-   begin\n-      --  Nothing to do if name is not an identifier or a selected component\n-      --  whose selector_name is an identifier.\n-\n-      if Nkind (Nam) = N_Identifier then\n-         Chrs := Chars (Nam);\n-\n-      elsif Nkind (Nam) = N_Selected_Component\n-        and then Nkind (Selector_Name (Nam)) = N_Identifier\n-      then\n-         Chrs := Chars (Selector_Name (Nam));\n-\n-      else\n-         return;\n-      end if;\n-\n-      --  Nothing to do if name is not one of the Text_IO subpackages\n-      --  Otherwise look through loaded units, and if we find Text_IO\n-      --  or [Wide_]Wide_Text_IO already loaded, then load the proper child.\n-\n-      if Chrs in Text_IO_Package_Name then\n-         for U in Main_Unit .. Last_Unit loop\n-            Get_Name_String (Unit_File_Name (U));\n-\n-            if Name_Len = 12 then\n-\n-               --  Here is where we do the loads if we find one of the units\n-               --  Ada.Text_IO or Ada.[Wide_]Wide_Text_IO. An interesting\n-               --  detail is that these units may already be used (i.e. their\n-               --  In_Use flags may be set). Normally when the In_Use flag is\n-               --  set, the Is_Potentially_Use_Visible flag of all entities in\n-               --  the package is set, but the new entity we are mysteriously\n-               --  adding was not there to have its flag set at the time. So\n-               --  that's why we pass the extra parameter to RTU_Find, to make\n-               --  sure the flag does get set now. Given that those generic\n-               --  packages are in fact child units, we must indicate that\n-               --  they are visible.\n-\n-               if Name_Buffer (1 .. 12) = \"a-textio.ads\" then\n-                  To_Load := Name_Map (Chrs);\n-\n-               elsif Name_Buffer (1 .. 12) = \"a-witeio.ads\" then\n-                  To_Load := Wide_Name_Map (Chrs);\n-\n-               elsif Name_Buffer (1 .. 12) = \"a-ztexio.ads\" then\n-                  To_Load := Wide_Wide_Name_Map (Chrs);\n-\n-               else\n-                  goto Continue;\n-               end if;\n-\n-               Load_RTU (To_Load, Use_Setting => In_Use (Cunit_Entity (U)));\n-               Set_Is_Visible_Lib_Unit (RT_Unit_Table (To_Load).Entity);\n-\n-               --  Prevent creation of an implicit 'with' from (for example)\n-               --  Ada.Wide_Text_IO.Integer_IO to Ada.Text_IO.Integer_IO,\n-               --  because these could create cycles. First check whether the\n-               --  simple names match (\"integer_io\" = \"integer_io\"), and then\n-               --  check whether the parent is indeed one of the\n-               --  [[Wide_]Wide_]Text_IO packages.\n-\n-               if Chrs = Chars (Cunit_Entity (Current_Sem_Unit)) then\n-                  declare\n-                     Parent_Name : constant Unit_Name_Type :=\n-                                     Get_Parent_Spec_Name\n-                                       (Unit_Name (Current_Sem_Unit));\n-\n-                  begin\n-                     if Parent_Name /= No_Unit_Name then\n-                        Get_Name_String (Parent_Name);\n-\n-                        declare\n-                           P : String renames Name_Buffer (1 .. Name_Len);\n-                        begin\n-                           if P = \"ada.text_io%s\"      or else\n-                              P = \"ada.wide_text_io%s\" or else\n-                              P = \"ada.wide_wide_text_io%s\"\n-                           then\n-                              goto Continue;\n-                           end if;\n-                        end;\n-                     end if;\n-                  end;\n-               end if;\n-\n-               --  Add an implicit with clause from the current unit to the\n-               --  [[Wide_]Wide_]Text_IO child (if necessary).\n-\n-               Maybe_Add_With (RT_Unit_Table (To_Load));\n-            end if;\n-\n-            <<Continue>> null;\n-         end loop;\n-      end if;\n-\n-   exception\n-      --  Generate error message if run-time unit not available\n-\n-      when RE_Not_Available =>\n-         Error_Msg_N (\"& not available\", Nam);\n-   end Text_IO_Kludge;\n-\n end Rtsfind;"}, {"sha": "db4dd0b239c47b068531ddd0f2f16a3a242bc756", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -169,7 +169,7 @@ package Rtsfind is\n       Ada_Strings_Wide_Wide_Superbounded,\n       Ada_Strings_Unbounded,\n \n-      --  Children of Ada.Text_IO (for Text_IO_Kludge)\n+      --  Children of Ada.Text_IO (for Check_Text_IO_Special_Unit)\n \n       Ada_Text_IO_Decimal_IO,\n       Ada_Text_IO_Enumeration_IO,\n@@ -178,7 +178,7 @@ package Rtsfind is\n       Ada_Text_IO_Integer_IO,\n       Ada_Text_IO_Modular_IO,\n \n-      --  Children of Ada.Wide_Text_IO (for Text_IO_Kludge)\n+      --  Children of Ada.Wide_Text_IO (for Check_Text_IO_Special_Unit)\n \n       Ada_Wide_Text_IO_Decimal_IO,\n       Ada_Wide_Text_IO_Enumeration_IO,\n@@ -187,7 +187,7 @@ package Rtsfind is\n       Ada_Wide_Text_IO_Integer_IO,\n       Ada_Wide_Text_IO_Modular_IO,\n \n-      --  Children of Ada.Wide_Wide_Text_IO (for Text_IO_Kludge)\n+      --  Children of Ada.Wide_Wide_Text_IO (for Check_Text_IO_Special_Unit)\n \n       Ada_Wide_Wide_Text_IO_Decimal_IO,\n       Ada_Wide_Wide_Text_IO_Enumeration_IO,\n@@ -3204,6 +3204,20 @@ package Rtsfind is\n    --  occur either because the file in which the entity should be found\n    --  does not exist, or because the entity is not present in the file.\n \n+   procedure Check_Text_IO_Special_Unit (Nam : Node_Id);\n+   --  In Ada 83, and hence for compatibility in later versions of Ada, package\n+   --  Text_IO has generic subpackages (e.g. Integer_IO). They really should be\n+   --  child packages, and in GNAT, they *are* child packages. To maintain the\n+   --  required compatibility, this routine is called for package renamings and\n+   --  generic instantiations, with the simple name of the referenced package.\n+   --  If Text_IO has been with'ed and if the simple name of Nam matches\n+   --  one of the subpackages of Text_IO, then this subpackage is with'ed\n+   --  automatically. The important result of this approach is that Text_IO\n+   --  does not drag in all the code for the subpackages unless they are used.\n+   --  Our test is a little crude, and could drag in stuff when it is not\n+   --  necessary, but that is acceptable. Wide_[Wide_]Text_IO is handled in\n+   --  a similar manner.\n+\n    procedure Initialize;\n    --  Procedure to initialize data structures used by RTE. Called at the\n    --  start of processing a new main source file. Must be called after\n@@ -3226,11 +3240,11 @@ package Rtsfind is\n    --  entity id values are compared and True is returned if Ent is the\n    --  entity for this unit.\n \n-   function Is_Text_IO_Kludge_Unit (Nam : Node_Id) return Boolean;\n+   function Is_Text_IO_Special_Unit (Nam : Node_Id) return Boolean;\n    --  Returns True if the given Nam is an Expanded Name, whose Prefix is Ada,\n    --  and whose selector is either Text_IO.xxx or Wide_Text_IO.xxx or\n    --  Wide_Wide_Text_IO.xxx, where xxx is one of the subpackages of Text_IO\n-   --  that is specially handled as described below for Text_IO_Kludge.\n+   --  that is specially handled as described for Check_Text_IO_Special_Unit.\n \n    function RTE (E : RE_Id) return Entity_Id;\n    --  Given the entity defined in the above tables, as identified by the\n@@ -3306,18 +3320,4 @@ package Rtsfind is\n    procedure Set_RTU_Loaded (N : Node_Id);\n    --  Register the predefined unit N as already loaded\n \n-   procedure Text_IO_Kludge (Nam : Node_Id);\n-   --  In Ada 83, and hence for compatibility in Ada 9X, package Text_IO has\n-   --  generic subpackages (e.g. Integer_IO). They really should be child\n-   --  packages, and in GNAT, they *are* child packages. To maintain the\n-   --  required compatibility, this routine is called for package renamings\n-   --  and generic instantiations, with the simple name of the referenced\n-   --  package. If Text_IO has been with'ed and if the simple name of Nam\n-   --  matches one of the subpackages of Text_IO, then this subpackage is\n-   --  with'ed automatically. The important result of this approach is that\n-   --  Text_IO does not drag in all the code for the subpackages unless they\n-   --  are used. Our test is a little crude, and could drag in stuff when it\n-   --  is not necessary, but that doesn't matter. Wide_[Wide_]Text_IO is\n-   --  handled in a similar manner.\n-\n end Rtsfind;"}, {"sha": "49adf852a52653a97fc6ced3baa9627e551a8efb", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -2362,7 +2362,7 @@ package body Sem_Ch12 is\n    --  Start of processing for Analyze_Formal_Package_Declaration\n \n    begin\n-      Text_IO_Kludge (Gen_Id);\n+      Check_Text_IO_Special_Unit (Gen_Id);\n \n       Init_Env;\n       Check_Generic_Child_Unit (Gen_Id, Parent_Installed);\n@@ -3426,7 +3426,7 @@ package body Sem_Ch12 is\n       --  Very first thing: apply the special kludge for Text_IO processing\n       --  in case we are instantiating one of the children of [Wide_]Text_IO.\n \n-      Text_IO_Kludge (Name (N));\n+      Check_Text_IO_Special_Unit (Name (N));\n \n       --  Make node global for error reporting\n \n@@ -4675,7 +4675,7 @@ package body Sem_Ch12 is\n       --  Of course such an instantiation is bogus (these are packages, not\n       --  subprograms), but we get a better error message if we do this.\n \n-      Text_IO_Kludge (Gen_Id);\n+      Check_Text_IO_Special_Unit (Gen_Id);\n \n       --  Make node global for error reporting\n "}, {"sha": "42a14872fde6f3c988c9d180cda0114ee40f2a2a", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -628,7 +628,7 @@ package body Sem_Ch8 is\n       --  Apply the Text_IO Kludge here, since we may be renaming one of the\n       --  subpackages of Text_IO, then join common routine.\n \n-      Text_IO_Kludge (Name (N));\n+      Check_Text_IO_Special_Unit (Name (N));\n \n       Analyze_Generic_Renaming (N, E_Generic_Package);\n    end Analyze_Generic_Package_Renaming;\n@@ -1319,7 +1319,7 @@ package body Sem_Ch8 is\n \n       --  Apply Text_IO kludge here since we may be renaming a child of Text_IO\n \n-      Text_IO_Kludge (Name (N));\n+      Check_Text_IO_Special_Unit (Name (N));\n \n       if Current_Scope /= Standard_Standard then\n          Set_Is_Pure (New_P, Is_Pure (Current_Scope));"}, {"sha": "755c0169e85b10935379a6dd1c90a43d48a4dc05", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -209,7 +209,7 @@ package Snames is\n    Name_Deallocate                     : constant Name_Id := N + $;\n    Name_Dereference                    : constant Name_Id := N + $;\n \n-   --  Names of Text_IO generic subpackages (see Rtsfind.Text_IO_Kludge)\n+   --  Text_IO generic subpackages (see Rtsfind.Check_Text_IO_Special_Unit)\n \n    First_Text_IO_Package               : constant Name_Id := N + $;\n    Name_Decimal_IO                     : constant Name_Id := N + $;"}, {"sha": "8e33462d3445e3ee112c3b956d10353f7094cd66", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd67690e9dcdfcddb32cffb13043a1ca95ff756/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=2bd67690e9dcdfcddb32cffb13043a1ca95ff756", "patch": "@@ -3307,7 +3307,7 @@ package body Sprint is\n             --  correspond to the non-existent children of Text_IO.\n \n             if Dump_Original_Only\n-              and then Is_Text_IO_Kludge_Unit (Name (Node))\n+              and then Is_Text_IO_Special_Unit (Name (Node))\n             then\n                null;\n "}]}