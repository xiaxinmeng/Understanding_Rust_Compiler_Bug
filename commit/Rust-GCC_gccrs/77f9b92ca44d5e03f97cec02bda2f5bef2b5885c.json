{"sha": "77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdmOWI5MmNhNDRkNWUwM2Y5N2NlYzAyYmRhMmY1YmVmMmI1ODg1Yw==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2003-07-06T20:32:17Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-07-06T20:32:17Z"}, "message": "bad.c: Convert () to (void) in function definitions.\n\n\t* bad.c: Convert () to (void) in function definitions.\n\t* bld.c: Likewise.\n\t* data.c: Likewise.\n\t* equiv.c: Likewise.\n\t* expr.c: Likewise.\n\t* global.c: Likewise.\n\t* implic.c: Likewise.\n\t* info.c: Likewise.\n\t* intdoc.c: Likewise.\n\t* intrin.c: Likewise.\n\t* lab.c: Likewise.\n\t* lex.c: Likewise.\n\t* malloc.c: Likewise.\n\t* src.c: Likewise.\n\t* st.c: Likewise.\n\t* sta.c: Likewise.\n\t* stb.c: Likewise.\n\t* stc.c: Likewise.\n\t* std.c: Likewise.\n\t* ste.c: Likewise.\n\t* storag.c: Likewise.\n\t* stt.c: Likewise.\n\t* stw.c: Likewise.\n\t* symbol.c: Likewise.\n\t* top.c: Likewise.\n\t* where.c: Likewise.\n\n\t* com.c: Convert prototypes to ISO C90.\n\t* com.h: Likewise.\n\t* g77spec.c: Likewise.\n\nFrom-SVN: r69014", "tree": {"sha": "7a7e3dcca38ea8778584051ff27fcd7ea61c6a6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a7e3dcca38ea8778584051ff27fcd7ea61c6a6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "313dd5043568c6969fe11aac05f424e08097c50b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/313dd5043568c6969fe11aac05f424e08097c50b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/313dd5043568c6969fe11aac05f424e08097c50b"}], "stats": {"total": 760, "additions": 386, "deletions": 374}, "files": [{"sha": "ee22ec6c821519db9bc3923c231b817ced2d8596", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -1,3 +1,36 @@\n+2003-07-06  Andreas Jaeger  <aj@suse.de>\n+\n+\t* bad.c: Convert () to (void) in function definitions.\n+\t* bld.c: Likewise.\n+\t* data.c: Likewise.\n+\t* equiv.c: Likewise.\n+\t* expr.c: Likewise.\n+\t* global.c: Likewise.\n+\t* implic.c: Likewise.\n+\t* info.c: Likewise.\n+\t* intdoc.c: Likewise.\n+\t* intrin.c: Likewise.\n+\t* lab.c: Likewise.\n+\t* lex.c: Likewise.\n+\t* malloc.c: Likewise.\n+\t* src.c: Likewise.\n+\t* st.c: Likewise.\n+\t* sta.c: Likewise.\n+\t* stb.c: Likewise.\n+\t* stc.c: Likewise.\n+\t* std.c: Likewise.\n+\t* ste.c: Likewise.\n+\t* storag.c: Likewise.\n+\t* stt.c: Likewise.\n+\t* stw.c: Likewise.\n+\t* symbol.c: Likewise.\n+\t* top.c: Likewise.\n+\t* where.c: Likewise.\n+\n+\t* com.c: Convert prototypes to ISO C90.\n+\t* com.h: Likewise.\n+\t* g77spec.c: Likewise.\n+\n Sun Jul  6 20:01:29 2003  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* top.c (ffe_handle_option): Don't handle filenames."}, {"sha": "bed9734ecc78a24e2429d611ca2af72832d08ce8", "filename": "gcc/f/bad.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fbad.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fbad.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbad.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -1,5 +1,5 @@\n /* bad.c -- Implementation File (module.c template V1.0)\n-   Copyright (C) 1995, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 2002, 2003 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -132,7 +132,7 @@ ffebad_bufputs_ (char buf[], int bufi, const char *s)\n    ffebad_init_0();  */\n \n void\n-ffebad_init_0 ()\n+ffebad_init_0 (void)\n {\n   assert (FFEBAD == ARRAY_SIZE (ffebad_messages_));\n }\n@@ -348,7 +348,7 @@ ffebad_string (const char *string)\n    to actually get it to print (to stderr).  */\n \n void\n-ffebad_finish ()\n+ffebad_finish (void)\n {\n #define MAX_SPACES 132\n   static const char *const spaces"}, {"sha": "6f96f5bf9c5d1165163af3aa0de1dd73d997e136", "filename": "gcc/f/bld.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fbld.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fbld.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbld.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -2380,7 +2380,7 @@ ffebld_constantarray_put (ffebldConstantArray array, ffeinfoBasictype bt,\n    ffebld_init_0();  */\n \n void\n-ffebld_init_0 ()\n+ffebld_init_0 (void)\n {\n   assert (FFEBLD_op == ARRAY_SIZE (ffebld_op_string_));\n   assert (FFEBLD_op == ARRAY_SIZE (ffebld_arity_op_));\n@@ -2391,7 +2391,7 @@ ffebld_init_0 ()\n    ffebld_init_1();  */\n \n void\n-ffebld_init_1 ()\n+ffebld_init_1 (void)\n {\n #if FFEBLD_whereconstCURRENT_ == FFEBLD_whereconstFILE_\n   int i;\n@@ -2452,7 +2452,7 @@ ffebld_init_1 ()\n    ffebld_init_2();  */\n \n void\n-ffebld_init_2 ()\n+ffebld_init_2 (void)\n {\n #if FFEBLD_whereconstCURRENT_ == FFEBLD_whereconstPROGUNIT_\n   int i;\n@@ -2726,7 +2726,7 @@ ffebld_new_two (ffebldOp o, ffebld left, ffebld right)\n    ffebld_pool_pop();  */\n \n void\n-ffebld_pool_pop ()\n+ffebld_pool_pop (void)\n {\n   ffebldPoolstack_ ps;\n "}, {"sha": "7480cd33ddaff38eb08e5de5345d520ca7afc9e5", "filename": "gcc/f/com.c", "status": "modified", "additions": 66, "deletions": 82, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -264,14 +264,14 @@ struct _ffecom_concat_list_\n \n /* Static functions (internal). */\n \n-static tree ffe_type_for_mode PARAMS ((enum machine_mode, int));\n-static tree ffe_type_for_size PARAMS ((unsigned int, int));\n-static tree ffe_unsigned_type PARAMS ((tree));\n-static tree ffe_signed_type PARAMS ((tree));\n-static tree ffe_signed_or_unsigned_type PARAMS ((int, tree));\n-static bool ffe_mark_addressable PARAMS ((tree));\n-static tree ffe_truthvalue_conversion PARAMS ((tree));\n-static void ffecom_init_decl_processing PARAMS ((void));\n+static tree ffe_type_for_mode (enum machine_mode, int);\n+static tree ffe_type_for_size (unsigned int, int);\n+static tree ffe_unsigned_type (tree);\n+static tree ffe_signed_type (tree);\n+static tree ffe_signed_or_unsigned_type (int, tree);\n+static bool ffe_mark_addressable (tree);\n+static tree ffe_truthvalue_conversion (tree);\n+static void ffecom_init_decl_processing (void);\n static tree ffecom_arglist_expr_ (const char *argstring, ffebld args);\n static tree ffecom_widest_expr_type_ (ffebld list);\n static bool ffecom_overlap_ (tree dest_decl, tree dest_offset,\n@@ -1530,8 +1530,7 @@ ffecom_possible_partial_overlap_ (ffebld expr1, ffebld expr2 ATTRIBUTE_UNUSED)\n \n static bool\n ffecom_overlap_ (tree dest_decl, tree dest_offset, tree dest_size,\n-\t\t tree source_tree, ffebld source UNUSED,\n-\t\t bool scalar_arg)\n+\t\t tree source_tree, ffebld source UNUSED, bool scalar_arg)\n {\n   tree source_decl;\n   tree source_offset;\n@@ -1712,9 +1711,8 @@ ffecom_overlap_ (tree dest_decl, tree dest_offset, tree dest_size,\n    in a COMMON area the callee might know about (and thus modify).  */\n \n static bool\n-ffecom_args_overlapping_ (tree dest_tree, ffebld dest UNUSED,\n-\t\t\t  tree args, tree callee_commons,\n-\t\t\t  bool scalar_args)\n+ffecom_args_overlapping_ (tree dest_tree, ffebld dest UNUSED, tree args,\n+\t\t\t  tree callee_commons, bool scalar_args)\n {\n   tree arg;\n   tree dest_decl;\n@@ -1788,10 +1786,9 @@ ffecom_build_f2c_string_ (int i, const char *s)\n    to the arglist a pointer to a temporary to receive the return value.\t */\n \n static tree\n-ffecom_call_ (tree fn, ffeinfoKindtype kt, bool is_f2c_complex,\n-\t      tree type, tree args, tree dest_tree,\n-\t      ffebld dest, bool *dest_used, tree callee_commons,\n-\t      bool scalar_args, tree hook)\n+ffecom_call_ (tree fn, ffeinfoKindtype kt, bool is_f2c_complex, tree type,\n+\t      tree args, tree dest_tree, ffebld dest, bool *dest_used,\n+\t      tree callee_commons, bool scalar_args, tree hook)\n {\n   tree item;\n   tree tempvar;\n@@ -1849,9 +1846,9 @@ ffecom_call_ (tree fn, ffeinfoKindtype kt, bool is_f2c_complex,\n \n static tree\n ffecom_call_binop_ (tree fn, ffeinfoKindtype kt, bool is_f2c_complex,\n-\t\t    tree type, ffebld left, ffebld right,\n-\t\t    tree dest_tree, ffebld dest, bool *dest_used,\n-\t\t    tree callee_commons, bool scalar_args, bool ref, tree hook)\n+\t\t    tree type, ffebld left, ffebld right, tree dest_tree,\n+\t\t    ffebld dest, bool *dest_used, tree callee_commons,\n+\t\t    bool scalar_args, bool ref, tree hook)\n {\n   tree left_tree;\n   tree right_tree;\n@@ -2929,8 +2926,8 @@ ffecom_do_entry_ (ffesymbol fn, int entrynum)\n    made, destination used instead, and dest_used flag set TRUE.  */\n \n static tree\n-ffecom_expr_ (ffebld expr, tree dest_tree, ffebld dest,\n-\t      bool *dest_used, bool assignp, bool widenp)\n+ffecom_expr_ (ffebld expr, tree dest_tree, ffebld dest, bool *dest_used,\n+\t      bool assignp, bool widenp)\n {\n   tree item;\n   tree list;\n@@ -3795,8 +3792,8 @@ ffecom_expr_ (ffebld expr, tree dest_tree, ffebld dest,\n    subroutines.  */\n \n static tree\n-ffecom_expr_intrinsic_ (ffebld expr, tree dest_tree,\n-\t\t\tffebld dest, bool *dest_used)\n+ffecom_expr_intrinsic_ (ffebld expr, tree dest_tree, ffebld dest,\n+\t\t\tbool *dest_used)\n {\n   tree expr_tree;\n   tree saved_expr1;\t\t/* For those who need it. */\n@@ -5901,8 +5898,7 @@ ffecom_f2c_make_type_ (tree *type, int tcode, const char *name)\n    given size.  */\n \n static void\n-ffecom_f2c_set_lio_code_ (ffeinfoBasictype bt, int size,\n-\t\t\t  int code)\n+ffecom_f2c_set_lio_code_ (ffeinfoBasictype bt, int size, int code)\n {\n   int j;\n   tree t;\n@@ -6308,8 +6304,7 @@ ffecom_init_zero_ (tree decl)\n }\n \n static tree\n-ffecom_intrinsic_ichar_ (tree tree_type, ffebld arg,\n-\t\t\t tree *maybe_tree)\n+ffecom_intrinsic_ichar_ (tree tree_type, ffebld arg, tree *maybe_tree)\n {\n   tree expr_tree;\n   tree length_tree;\n@@ -7052,7 +7047,7 @@ ffecom_push_dummy_decls_ (ffebld dummy_list, bool stmtfunc)\n    equivalent of a Fortran program unit.  */\n \n static void\n-ffecom_start_progunit_ ()\n+ffecom_start_progunit_ (void)\n {\n   ffesymbol fn = ffecom_primary_entry_;\n   ffebld arglist;\n@@ -8764,8 +8759,7 @@ ffecom_transform_namelist_ (ffesymbol s)\n    taking into account different units of measurements for offsets.  */\n \n static void\n-ffecom_tree_canonize_ptr_ (tree *decl, tree *offset,\n-\t\t\t   tree t)\n+ffecom_tree_canonize_ptr_ (tree *decl, tree *offset, tree t)\n {\n   switch (TREE_CODE (t))\n     {\n@@ -8850,8 +8844,7 @@ ffecom_tree_canonize_ptr_ (tree *decl, tree *offset,\n    reveal the overlap.  */\n \n static void\n-ffecom_tree_canonize_ref_ (tree *decl, tree *offset,\n-\t\t\t   tree *size, tree t)\n+ffecom_tree_canonize_ref_ (tree *decl, tree *offset, tree *size, tree t)\n {\n   /* The default path is to report a nonexistant decl.  */\n   *decl = NULL_TREE;\n@@ -9004,9 +8997,8 @@ ffecom_tree_canonize_ref_ (tree *decl, tree *offset,\n /* Do divide operation appropriate to type of operands.  */\n \n static tree\n-ffecom_tree_divide_ (tree tree_type, tree left, tree right,\n-\t\t     tree dest_tree, ffebld dest, bool *dest_used,\n-\t\t     tree hook)\n+ffecom_tree_divide_ (tree tree_type, tree left, tree right, tree dest_tree,\n+\t\t     ffebld dest, bool *dest_used, tree hook)\n {\n   if ((left == error_mark_node)\n       || (right == error_mark_node))\n@@ -9093,8 +9085,7 @@ ffecom_tree_divide_ (tree tree_type, tree left, tree right,\n /* Build type info for non-dummy variable.  */\n \n static tree\n-ffecom_type_localvar_ (ffesymbol s, ffeinfoBasictype bt,\n-\t\t       ffeinfoKindtype kt)\n+ffecom_type_localvar_ (ffesymbol s, ffeinfoBasictype bt, ffeinfoKindtype kt)\n {\n   tree type;\n   ffebld dl;\n@@ -9152,7 +9143,7 @@ ffecom_type_localvar_ (ffesymbol s, ffeinfoBasictype bt,\n \n static GTY(()) tree ffecom_type_namelist_var;\n static tree\n-ffecom_type_namelist_ ()\n+ffecom_type_namelist_ (void)\n {\n   if (ffecom_type_namelist_var == NULL_TREE)\n     {\n@@ -9183,7 +9174,7 @@ ffecom_type_namelist_ ()\n \n static GTY(()) tree ffecom_type_vardesc_var;\n static tree\n-ffecom_type_vardesc_ ()\n+ffecom_type_vardesc_ (void)\n {\n   if (ffecom_type_vardesc_var == NULL_TREE)\n     {\n@@ -9547,8 +9538,7 @@ ffecom_1_fn (tree node)\n    checking for certain housekeeping things.  */\n \n tree\n-ffecom_2 (enum tree_code code, tree type, tree node1,\n-\t  tree node2)\n+ffecom_2 (enum tree_code code, tree type, tree node1, tree node2)\n {\n   tree item;\n \n@@ -9903,8 +9893,7 @@ ffecom_2pass_do_entrypoint (ffesymbol entry)\n    TREE_SIDE_EFFECTS.  */\n \n tree\n-ffecom_2s (enum tree_code code, tree type, tree node1,\n-\t   tree node2)\n+ffecom_2s (enum tree_code code, tree type, tree node1, tree node2)\n {\n   tree item;\n \n@@ -9922,8 +9911,7 @@ ffecom_2s (enum tree_code code, tree type, tree node1,\n    checking for certain housekeeping things.  */\n \n tree\n-ffecom_3 (enum tree_code code, tree type, tree node1,\n-\t  tree node2, tree node3)\n+ffecom_3 (enum tree_code code, tree type, tree node1, tree node2, tree node3)\n {\n   tree item;\n \n@@ -9945,8 +9933,7 @@ ffecom_3 (enum tree_code code, tree type, tree node1,\n    TREE_SIDE_EFFECTS.  */\n \n tree\n-ffecom_3s (enum tree_code code, tree type, tree node1,\n-\t   tree node2, tree node3)\n+ffecom_3s (enum tree_code code, tree type, tree node1, tree node2, tree node3)\n {\n   tree item;\n \n@@ -10561,8 +10548,8 @@ ffecom_constantunion (ffebldConstantUnion *cu, ffeinfoBasictype bt,\n /* Transform constant-union to tree, with the type known.  */\n \n tree\n-ffecom_constantunion_with_type (ffebldConstantUnion *cu,\n-\t\t      tree tree_type, ffebldConst ct)\n+ffecom_constantunion_with_type (ffebldConstantUnion *cu, tree tree_type,\n+\t\t\t\tffebldConst ct)\n {\n   tree item;\n \n@@ -10675,8 +10662,7 @@ ffecom_const_expr (ffebld expr)\n /* Handy way to make a field in a struct/union.  */\n \n tree\n-ffecom_decl_field (tree context, tree prevfield,\n-\t\t   const char *name, tree type)\n+ffecom_decl_field (tree context, tree prevfield, const char *name, tree type)\n {\n   tree field;\n \n@@ -10711,7 +10697,7 @@ ffecom_end_compstmt (void)\n    Calls ffecom_sym_end_transition for each global and local symbol.  */\n \n void\n-ffecom_end_transition ()\n+ffecom_end_transition (void)\n {\n   ffebld item;\n \n@@ -10787,7 +10773,7 @@ ffecom_end_transition ()\n    Make sure error updating not inhibited.  */\n \n void\n-ffecom_exec_transition ()\n+ffecom_exec_transition (void)\n {\n   bool inhibited;\n \n@@ -10977,7 +10963,7 @@ ffecom_expr_w (tree type, ffebld expr)\n /* Do global stuff.  */\n \n void\n-ffecom_finish_compile ()\n+ffecom_finish_compile (void)\n {\n   assert (ffecom_outer_function_decl_ == NULL_TREE);\n   assert (current_function_decl == NULL_TREE);\n@@ -10997,7 +10983,7 @@ ffecom_finish_decl (tree decl, tree init, bool is_top_level)\n /* Finish a program unit.  */\n \n void\n-ffecom_finish_progunit ()\n+ffecom_finish_progunit (void)\n {\n   ffecom_end_compstmt ();\n \n@@ -11121,7 +11107,7 @@ ffecom_gfrt_kindtype (ffecomGfrt gfrt)\n }\n \n void\n-ffecom_init_0 ()\n+ffecom_init_0 (void)\n {\n   tree endlink;\n   int i;\n@@ -11889,7 +11875,7 @@ ffecom_init_0 ()\n    ffecom_init_2();  */\n \n void\n-ffecom_init_2 ()\n+ffecom_init_2 (void)\n {\n   assert (ffecom_outer_function_decl_ == NULL_TREE);\n   assert (current_function_decl == NULL_TREE);\n@@ -12049,8 +12035,7 @@ ffecom_lookup_label (ffelab label)\n    the MODIFY_EXPR.  */\n \n tree\n-ffecom_modify (tree newtype, tree lhs,\n-\t       tree rhs)\n+ffecom_modify (tree newtype, tree lhs, tree rhs)\n {\n   if (lhs == error_mark_node || rhs == error_mark_node)\n     return error_mark_node;\n@@ -12992,7 +12977,7 @@ ffecom_sym_retract (ffesymbol s UNUSED)\n /* Create temporary gcc label.  */\n \n tree\n-ffecom_temp_label ()\n+ffecom_temp_label (void)\n {\n   tree glabel;\n   static int mynumber = 0;\n@@ -13106,7 +13091,7 @@ ffecom_type_expr (ffebld expr)\n    first ENTRY statement, and so on).  */\n \n tree\n-ffecom_which_entrypoint_decl ()\n+ffecom_which_entrypoint_decl (void)\n {\n   assert (ffecom_which_entrypoint_decl_ != NULL_TREE);\n \n@@ -13129,7 +13114,7 @@ ffecom_which_entrypoint_decl ()\n    \"bison_rule_foo_\" so they are easy to find.  */\n \n static void\n-bison_rule_pushlevel_ ()\n+bison_rule_pushlevel_ (void)\n {\n   emit_line_note (input_filename, input_line);\n   pushlevel (0);\n@@ -13138,7 +13123,7 @@ bison_rule_pushlevel_ ()\n }\n \n static tree\n-bison_rule_compstmt_ ()\n+bison_rule_compstmt_ (void)\n {\n   tree t;\n   int keep = kept_level_p ();\n@@ -13165,8 +13150,7 @@ bison_rule_compstmt_ ()\n \n tree\n builtin_function (const char *name, tree type, int function_code,\n-\t\t  enum built_in_class class,\n-\t\t  const char *library_name,\n+\t\t  enum built_in_class class, const char *library_name,\n \t\t  tree attrs ATTRIBUTE_UNUSED)\n {\n   tree decl = build_decl (FUNCTION_DECL, get_identifier (name), type);\n@@ -13742,7 +13726,7 @@ lookup_name_current_level (tree name)\n /* Create a new `struct f_binding_level'.  */\n \n static struct f_binding_level *\n-make_binding_level ()\n+make_binding_level (void)\n {\n   /* NOSTRICT */\n   return ggc_alloc (sizeof (struct f_binding_level));\n@@ -13765,7 +13749,7 @@ struct f_function *f_function_chain;\n /* Restore the variables used during compilation of a C function.  */\n \n static void\n-pop_f_function_context ()\n+pop_f_function_context (void)\n {\n   struct f_function *p = f_function_chain;\n   tree link;\n@@ -13801,7 +13785,7 @@ pop_f_function_context ()\n    used during compilation of a C function.  */\n \n static void\n-push_f_function_context ()\n+push_f_function_context (void)\n {\n   struct f_function *p\n   = (struct f_function *) xmalloc (sizeof (struct f_function));\n@@ -14067,21 +14051,21 @@ convert (tree type, tree expr)\n    store the result back using `storedecls' or you will lose.  */\n \n tree\n-getdecls ()\n+getdecls (void)\n {\n   return current_binding_level->names;\n }\n \n /* Nonzero if we are currently in the global binding level.  */\n \n int\n-global_bindings_p ()\n+global_bindings_p (void)\n {\n   return current_binding_level == global_binding_level;\n }\n \n static void\n-ffecom_init_decl_processing ()\n+ffecom_init_decl_processing (void)\n {\n   malloc_init ();\n \n@@ -14120,10 +14104,10 @@ insert_block (tree block)\n }\n \n /* Each front end provides its own.  */\n-static bool ffe_init PARAMS ((void));\n-static void ffe_finish PARAMS ((void));\n-static bool ffe_post_options PARAMS ((const char **));\n-static void ffe_print_identifier PARAMS ((FILE *, tree, int));\n+static bool ffe_init (void);\n+static void ffe_finish (void);\n+static bool ffe_post_options (const char **);\n+static void ffe_print_identifier (FILE *, tree, int);\n \n struct language_function GTY(())\n {\n@@ -14208,8 +14192,7 @@ const char *const tree_code_name[] = {\n #undef DEFTREECODE\n \n static bool\n-ffe_post_options (pfilename)\n-     const char **pfilename;\n+ffe_post_options (const char **pfilename)\n {\n   const char *filename = *pfilename;\n \n@@ -14230,7 +14213,7 @@ ffe_post_options (pfilename)\n \n \n static bool\n-ffe_init ()\n+ffe_init (void)\n {\n #ifdef IO_BUFFER_SIZE\n   setvbuf (finput, (char *) xmalloc (IO_BUFFER_SIZE), _IOFBF, IO_BUFFER_SIZE);\n@@ -14254,7 +14237,7 @@ ffe_init ()\n }\n \n static void\n-ffe_finish ()\n+ffe_finish (void)\n {\n   ffe_terminate_0 ();\n \n@@ -14596,7 +14579,7 @@ pushdecl (tree x)\n /* Nonzero if the current level needs to have a BLOCK made.  */\n \n static int\n-kept_level_p ()\n+kept_level_p (void)\n {\n   tree decl;\n \n@@ -15153,7 +15136,8 @@ static struct file_name_map *read_name_map (const char *dirname);\n    FIRST is the beginning of the chain to append, and LAST is the end.  */\n \n static void\n-append_include_chain (struct file_name_list *first, struct file_name_list *last)\n+append_include_chain (struct file_name_list *first,\n+\t\t      struct file_name_list *last)\n {\n   struct file_name_list *dir;\n "}, {"sha": "4a120afde15f7dfe517c404d72e448cf4ab24910", "filename": "gcc/f/com.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fcom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fcom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.h?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -152,13 +152,13 @@ struct _ffecom_symbol_\n #include \"storag.h\"\n #include \"symbol.h\"\n \n-extern int global_bindings_p\t\t\tPARAMS ((void));\n-extern tree getdecls\t\t\t\tPARAMS ((void));\n-extern void pushlevel\t\t\t\tPARAMS ((int));\n-extern tree poplevel\t\t\t\tPARAMS ((int,int, int));\n-extern void insert_block\t\t\tPARAMS ((tree));\n-extern void set_block\t\t\t\tPARAMS ((tree));\n-extern tree pushdecl\t\t\t\tPARAMS ((tree));\n+extern int global_bindings_p (void);\n+extern tree getdecls (void);\n+extern void pushlevel (int);\n+extern tree poplevel (int,int, int);\n+extern void insert_block (tree);\n+extern void set_block (tree);\n+extern tree pushdecl (tree);\n \n /* Global objects accessed by users of this module. */\n "}, {"sha": "39e7ff8956e70e046218ff82cdf1ff6243c82d75", "filename": "gcc/f/data.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fdata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fdata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fdata.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -314,7 +314,7 @@ ffedata_value (ffetargetIntegerDefault rpt, ffebld value, ffelexToken token)\n    CHARTYPE is CHARACTER*3, for example.  */\n \n static bool\n-ffedata_advance_ ()\n+ffedata_advance_ (void)\n {\n   ffebld next;\n \n@@ -1457,7 +1457,7 @@ ffedata_gather_ (ffestorag mst, ffestorag st)\n    ffedata_pop_();  */\n \n static void\n-ffedata_pop_ ()\n+ffedata_pop_ (void)\n {\n   ffedataImpdo_ victim = ffedata_stack_;\n \n@@ -1473,7 +1473,7 @@ ffedata_pop_ ()\n    ffedata_push_();  */\n \n static void\n-ffedata_push_ ()\n+ffedata_push_ (void)\n {\n   ffedataImpdo_ baby;\n "}, {"sha": "bd7ac6d4d24fdb64a8a14bcd351fabf8bacbbddb", "filename": "gcc/f/equiv.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fequiv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fequiv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fequiv.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -1,5 +1,6 @@\n /* equiv.c -- Implementation File (module.c template V1.0)\n-   Copyright (C) 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1997, 1998, 2003\n+   Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -918,7 +919,7 @@ ffeequiv_add (ffeequiv eq, ffebld list, ffelexToken t)\n    ffeequiv_exec_transition();\t*/\n \n void\n-ffeequiv_exec_transition ()\n+ffeequiv_exec_transition (void)\n {\n   while (ffeequiv_list_.first != (ffeequiv) &ffeequiv_list_.first)\n     ffeequiv_layout_local_ (ffeequiv_list_.first);\n@@ -931,7 +932,7 @@ ffeequiv_exec_transition ()\n    Initializes the list of equivalences.  */\n \n void\n-ffeequiv_init_2 ()\n+ffeequiv_init_2 (void)\n {\n   ffeequiv_list_.first = (ffeequiv) &ffeequiv_list_.first;\n   ffeequiv_list_.last = (ffeequiv) &ffeequiv_list_.first;\n@@ -1312,7 +1313,7 @@ ffeequiv_merge (ffeequiv eq1, ffeequiv eq2, ffelexToken t)\n    objects.  */\n \n ffeequiv\n-ffeequiv_new ()\n+ffeequiv_new (void)\n {\n   ffeequiv eq;\n "}, {"sha": "0c22fb978ee44850397cbfff74903d9ace055a81", "filename": "gcc/f/expr.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fexpr.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -6319,7 +6319,7 @@ ffeexpr_convert_to_sym (ffebld source, ffelexToken source_token,\n /* Initializes the module.  */\n \n void\n-ffeexpr_init_2 ()\n+ffeexpr_init_2 (void)\n {\n   ffeexpr_stack_ = NULL;\n   ffeexpr_level_ = 0;\n@@ -8484,7 +8484,7 @@ ffeexpr_expr_kill_ (ffeexprExpr_ e)\n    Allocates and initializes a new expression object, returns it.  */\n \n static ffeexprExpr_\n-ffeexpr_expr_new_ ()\n+ffeexpr_expr_new_ (void)\n {\n   ffeexprExpr_ e;\n \n@@ -8792,7 +8792,7 @@ ffeexpr_exprstack_push_binary_ (ffeexprExpr_ e)\n    requisite type-assignment.  */\n \n static void\n-ffeexpr_reduce_ ()\n+ffeexpr_reduce_ (void)\n {\n   ffeexprExpr_ operand;\t\t/* This is B in -B or A+B. */\n   ffeexprExpr_ left_operand;\t/* When operator is binary, this is A in A+B. */\n@@ -18534,7 +18534,7 @@ ffeexpr_token_anything_ (ffelexToken ft UNUSED, ffebld expr UNUSED,\n /* Terminate module.  */\n \n void\n-ffeexpr_terminate_2 ()\n+ffeexpr_terminate_2 (void)\n {\n   assert (ffeexpr_stack_ == NULL);\n   assert (ffeexpr_level_ == 0);"}, {"sha": "dc8347c88bbec34c21ef17654413a1be4e033055", "filename": "gcc/f/g77spec.c", "status": "modified", "additions": 7, "deletions": 15, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fg77spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fg77spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77spec.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -93,9 +93,8 @@ typedef enum\n /* The original argument list and related info is copied here.  */\n static int g77_xargc;\n static const char *const *g77_xargv;\n-static void lookup_option PARAMS ((Option *, int *, const char **,\n-\t\t\t\t   const char *));\n-static void append_arg PARAMS ((const char *));\n+static void lookup_option (Option *, int *, const char **, const char *);\n+static void append_arg (const char *);\n \n /* The new argument list will be built here.  */\n static int g77_newargc;\n@@ -118,11 +117,7 @@ static const char **g77_newargv;\n    to short ones, where available, has already been run.  */\n \n static void\n-lookup_option (xopt, xskip, xarg, text)\n-     Option *xopt;\n-     int *xskip;\n-     const char **xarg;\n-     const char *text;\n+lookup_option (Option *xopt, int *xskip, const char **xarg, const char *text)\n {\n   Option opt = OPTION_;\n   int skip;\n@@ -202,8 +197,7 @@ lookup_option (xopt, xskip, xarg, text)\n    the new arg count.  Otherwise allocate a new list, etc.  */\n \n static void\n-append_arg (arg)\n-     const char *arg;\n+append_arg (const char *arg)\n {\n   static int newargsize;\n \n@@ -239,10 +233,8 @@ append_arg (arg)\n }\n \n void\n-lang_specific_driver (in_argc, in_argv, in_added_libraries)\n-     int *in_argc;\n-     const char *const **in_argv;\n-     int *in_added_libraries ATTRIBUTE_UNUSED;\n+lang_specific_driver (int *in_argc, const char *const **in_argv,\n+\t\t      int *in_added_libraries ATTRIBUTE_UNUSED)\n {\n   int argc = *in_argc;\n   const char *const *argv = *in_argv;\n@@ -532,7 +524,7 @@ or type the command `info -f g77 Copying'.\\n\\\n }\n \n /* Called before linking.  Returns 0 on success and -1 on failure. */\n-int lang_specific_pre_link ()  /* Not used for F77. */\n+int lang_specific_pre_link (void)  /* Not used for F77. */\n {\n   return 0;\n }"}, {"sha": "f175f1e6d0fc1035b8869926f37ed30c65f40d6f", "filename": "gcc/f/global.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fglobal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fglobal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fglobal.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -124,7 +124,7 @@ ffeglobal_new_ (ffename n)\n    ffeglobal_init_1();\t*/\n \n void\n-ffeglobal_init_1 ()\n+ffeglobal_init_1 (void)\n {\n #if FFEGLOBAL_ENABLED\n   if (ffeglobal_filewide_ != NULL)\n@@ -1584,6 +1584,6 @@ ffeglobal_size_common (ffesymbol s, ffetargetOffset size)\n \n #endif\n void\n-ffeglobal_terminate_1 ()\n+ffeglobal_terminate_1 (void)\n {\n }"}, {"sha": "c7a28cbc42acc6e23bf459a1ce7bbf1a4dbe02a3", "filename": "gcc/f/implic.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fimplic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fimplic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fimplic.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -1,5 +1,5 @@\n /* implic.c -- Implementation File (module.c template V1.0)\n-   Copyright (C) 1995, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 2002, 2003 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -220,7 +220,7 @@ ffeimplic_establish_symbol (ffesymbol s)\n    Allows for holes in the sequence of letters (i.e. EBCDIC).  */\n \n void\n-ffeimplic_init_2 ()\n+ffeimplic_init_2 (void)\n {\n   ffeimplic_ imp;\n   char c;\n@@ -312,7 +312,7 @@ ffeimplic_init_2 ()\n    Assigns null type information to all initial letters.  */\n \n void\n-ffeimplic_none ()\n+ffeimplic_none (void)\n {\n   ffeimplic_ imp;\n \n@@ -378,6 +378,6 @@ ffeimplic_peek_symbol_type (ffesymbol s, const char *name)\n    Kills info object for each entry in table.  */\n \n void\n-ffeimplic_terminate_2 ()\n+ffeimplic_terminate_2 (void)\n {\n }"}, {"sha": "3c0030f27f8f172514fb5a3719d1c473f9227452", "filename": "gcc/f/info.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Finfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Finfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Finfo.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -1,5 +1,5 @@\n /* info.c -- Implementation File (module.c template V1.0)\n-   Copyright (C) 1995, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 2002, 2003 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -141,7 +141,7 @@ ffeinfo_basictype_string (ffeinfoBasictype basictype)\n    ffeinfo_init_0();  */\n \n void\n-ffeinfo_init_0 ()\n+ffeinfo_init_0 (void)\n {\n   ffeinfoBasictype i;\n   ffeinfoBasictype j;"}, {"sha": "b24c79a481141ffc1da82bc90dd853dcb7c843a4", "filename": "gcc/f/intdoc.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fintdoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fintdoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fintdoc.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -1,5 +1,6 @@\n /* intdoc.c\n-   Copyright (C) 1997, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1997, 2000, 2001, 2003\n+   Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -237,13 +238,13 @@ dumpif (ffeintrinFamily fam)\n }\n \n static void\n-dumpendif ()\n+dumpendif (void)\n {\n   in_ifset = 2;\n }\n \n static void\n-dumpclearif ()\n+dumpclearif (void)\n {\n   if ((in_ifset == 2)\n       || (latest_family != FFEINTRIN_familyNONE))\n@@ -253,7 +254,7 @@ dumpclearif ()\n }\n \n static void\n-dumpem ()\n+dumpem (void)\n {\n   int i;\n "}, {"sha": "a379684ae4c2c229c2053b0426906f1847cd46a3", "filename": "gcc/f/intrin.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fintrin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fintrin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fintrin.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -1589,7 +1589,7 @@ ffeintrin_gfrt_indirect (ffeintrinImp imp)\n }\n \n void\n-ffeintrin_init_0 ()\n+ffeintrin_init_0 (void)\n {\n   int i;\n   const char *p1;"}, {"sha": "8691897c21c15b57de6918068ed1cdd14b72d692", "filename": "gcc/f/lab.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Flab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Flab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flab.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -94,7 +94,7 @@ ffelab_find (ffelabValue v)\n    Kill all the labels on the list.  */\n \n void\n-ffelab_finish ()\n+ffelab_finish (void)\n {\n   ffelab l;\n   ffelab pl;\n@@ -115,7 +115,7 @@ ffelab_finish ()\n    unit is going to be processed.  */\n \n void\n-ffelab_init_3 ()\n+ffelab_init_3 (void)\n {\n   ffelab_list_ = NULL;\n   ffelab_num_news_ = 0;"}, {"sha": "478d76777cad3145371bf656ab1e1b2a0a3a3337", "filename": "gcc/f/lex.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flex.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -834,7 +834,7 @@ ffelex_file_push_ (int old_lineno, const char *filename)\n    typical fixed-form cases.  */\n \n static void\n-ffelex_prepare_eos_ ()\n+ffelex_prepare_eos_ (void)\n {\n   if (ffelex_token_->type != FFELEX_typeNONE)\n     {\n@@ -883,7 +883,7 @@ ffelex_prepare_eos_ ()\n }\n \n static void\n-ffelex_finish_statement_ ()\n+ffelex_finish_statement_ (void)\n {\n   if ((ffelex_number_of_tokens_ == 0)\n       && (ffelex_token_->type == FFELEX_typeNONE))\n@@ -1398,7 +1398,7 @@ ffelex_image_char_ (int c, ffewhereColumnNumber column)\n }\n \n static void\n-ffelex_include_ ()\n+ffelex_include_ (void)\n {\n   ffewhereFile include_wherefile = ffelex_include_wherefile_;\n   FILE *include_file = ffelex_include_file_;\n@@ -1508,15 +1508,15 @@ ffelex_is_free_nonc_ctx_contin_ (ffewhereColumnNumber col)\n }\n \n static void\n-ffelex_next_line_ ()\n+ffelex_next_line_ (void)\n {\n   ffelex_linecount_current_ = ffelex_linecount_next_;\n   ++ffelex_linecount_next_;\n   ++input_line;\n }\n \n static void\n-ffelex_send_token_ ()\n+ffelex_send_token_ (void)\n {\n   ++ffelex_number_of_tokens_;\n \n@@ -1590,7 +1590,7 @@ ffelex_swallow_tokens_ (ffelexToken t)\n }\n \n static ffelexToken\n-ffelex_token_new_ ()\n+ffelex_token_new_ (void)\n {\n   ffelexToken t;\n \n@@ -1688,7 +1688,7 @@ ffelex_display_token (ffelexToken t)\n    return FALSE.  */\n \n bool\n-ffelex_expecting_character ()\n+ffelex_expecting_character (void)\n {\n   return (ffelex_raw_mode_ != 0);\n }\n@@ -3825,7 +3825,7 @@ ffelex_hash_kludge (FILE *finput)\n }\n \n void\n-ffelex_init_1 ()\n+ffelex_init_1 (void)\n {\n   unsigned int i;\n \n@@ -3906,7 +3906,7 @@ ffelex_init_1 ()\n    Must be called while lexer is active, obviously.  */\n \n bool\n-ffelex_is_names_expected ()\n+ffelex_is_names_expected (void)\n {\n   return ffelex_names_;\n }\n@@ -3915,7 +3915,7 @@ ffelex_is_names_expected ()\n    ffelex_linecount_current_.  */\n \n char *\n-ffelex_line ()\n+ffelex_line (void)\n {\n   return ffelex_card_image_;\n }\n@@ -3927,7 +3927,7 @@ ffelex_line ()\n    Must be called while lexer is active, obviously.  */\n \n ffewhereColumnNumber\n-ffelex_line_length ()\n+ffelex_line_length (void)\n {\n   return ffelex_card_length_;\n }\n@@ -3936,7 +3936,7 @@ ffelex_line_length ()\n    is current.  */\n \n ffewhereLineNumber\n-ffelex_line_number ()\n+ffelex_line_number (void)\n {\n   return ffelex_linecount_current_;\n }\n@@ -4371,7 +4371,7 @@ ffelex_token_new_character (const char *s, ffewhereLine l, ffewhereColumn c)\n /* Make a new EOF token right after end of file.  */\n \n ffelexToken\n-ffelex_token_new_eof ()\n+ffelex_token_new_eof (void)\n {\n   ffelexToken t;\n "}, {"sha": "7a84781d9ef95ae64f76300fc1ae1cc839ef56ad", "filename": "gcc/f/malloc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fmalloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fmalloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fmalloc.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -1,5 +1,5 @@\n /* malloc.c -- Implementation File (module.c template V1.0)\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 2003 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -136,7 +136,7 @@ malloc_verify_area_ (mallocPool pool UNUSED, mallocArea_ a UNUSED)\n    Call malloc_init before you do anything else.  */\n \n void\n-malloc_init ()\n+malloc_init (void)\n {\n   if (malloc_reserve_ != NULL)\n     return;"}, {"sha": "54fc7773fef96accdb4e135ddc86530903954111", "filename": "gcc/f/src.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fsrc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fsrc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fsrc.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -1,5 +1,5 @@\n /* src.c -- Implementation File\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 2003 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -93,7 +93,7 @@ bool ffesrc_ok_match_noninit_lower_;\n /* Initialize table of alphabetic matches. */\n \n void\n-ffesrc_init_1 ()\n+ffesrc_init_1 (void)\n {\n   int i;\n "}, {"sha": "cdfdfb596a893d26f9cfd8fd5ce2ddc24e1b0c7c", "filename": "gcc/f/st.c", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fst.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fst.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fst.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -1,5 +1,5 @@\n /* st.c -- Implementation File (module.c template V1.0)\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 2003 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -141,7 +141,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    yet been set.  */\n \n void\n-ffest_confirmed ()\n+ffest_confirmed (void)\n {\n   ffesta_confirmed ();\n }\n@@ -160,7 +160,7 @@ ffest_confirmed ()\n       processing a statement (make and destroy pools, et cetera).  */\n \n void\n-ffest_eof ()\n+ffest_eof (void)\n {\n   ffesta_eof ();\n }\n@@ -242,7 +242,7 @@ ffest_first (ffelexToken t)\n    this list.  Initializes the executable and nonexecutable lists.  */\n \n void\n-ffest_init_0 ()\n+ffest_init_0 (void)\n {\n   ffesta_init_0 ();\n   ffestb_init_0 ();\n@@ -271,7 +271,7 @@ ffest_init_0 ()\n    this list.  Initializes the executable and nonexecutable lists.  */\n \n void\n-ffest_init_1 ()\n+ffest_init_1 (void)\n {\n   ffesta_init_1 ();\n   ffestb_init_1 ();\n@@ -300,7 +300,7 @@ ffest_init_1 ()\n    this list.  Initializes the executable and nonexecutable lists.  */\n \n void\n-ffest_init_2 ()\n+ffest_init_2 (void)\n {\n   ffesta_init_2 ();\n   ffestb_init_2 ();\n@@ -321,7 +321,7 @@ ffest_init_2 ()\n    ffest_init_3();  */\n \n void\n-ffest_init_3 ()\n+ffest_init_3 (void)\n {\n   ffesta_init_3 ();\n   ffestb_init_3 ();\n@@ -344,7 +344,7 @@ ffest_init_3 ()\n    ffest_init_4();  */\n \n void\n-ffest_init_4 ()\n+ffest_init_4 (void)\n {\n   ffesta_init_4 ();\n   ffestb_init_4 ();\n@@ -366,7 +366,7 @@ ffest_init_4 ()\n    Else returns FALSE.  */\n \n bool\n-ffest_is_entry_valid ()\n+ffest_is_entry_valid (void)\n {\n   return ffesta_is_entry_valid;\n }\n@@ -396,7 +396,7 @@ ffest_is_entry_valid ()\n    the ffestb call would be completely dropped without this mechanism.\t*/\n \n bool\n-ffest_is_inhibited ()\n+ffest_is_inhibited (void)\n {\n   return ffesta_is_inhibited ();\n }\n@@ -412,7 +412,7 @@ ffest_is_inhibited ()\n    is being run.  */\n \n bool\n-ffest_seen_first_exec ()\n+ffest_seen_first_exec (void)\n {\n   return ffesta_seen_first_exec;\n }\n@@ -421,7 +421,7 @@ ffest_seen_first_exec ()\n    user with a diagnostic if we're not inhibited.  */\n \n void\n-ffest_shutdown ()\n+ffest_shutdown (void)\n {\n   ffesta_shutdown ();\n }\n@@ -453,7 +453,7 @@ ffest_sym_exec_transition (ffesymbol s)\n    ffest_terminate_0();\t */\n \n void\n-ffest_terminate_0 ()\n+ffest_terminate_0 (void)\n {\n   ffesta_terminate_0 ();\n   ffestb_terminate_0 ();\n@@ -474,7 +474,7 @@ ffest_terminate_0 ()\n    ffest_terminate_1();\t */\n \n void\n-ffest_terminate_1 ()\n+ffest_terminate_1 (void)\n {\n   ffesta_terminate_1 ();\n   ffestb_terminate_1 ();\n@@ -495,7 +495,7 @@ ffest_terminate_1 ()\n    ffest_terminate_2();\t */\n \n void\n-ffest_terminate_2 ()\n+ffest_terminate_2 (void)\n {\n   ffesta_terminate_2 ();\n   ffestb_terminate_2 ();\n@@ -516,7 +516,7 @@ ffest_terminate_2 ()\n    ffest_terminate_3();\t */\n \n void\n-ffest_terminate_3 ()\n+ffest_terminate_3 (void)\n {\n   ffesta_terminate_3 ();\n   ffestb_terminate_3 ();\n@@ -537,7 +537,7 @@ ffest_terminate_3 ()\n    ffest_terminate_4();\t */\n \n void\n-ffest_terminate_4 ()\n+ffest_terminate_4 (void)\n {\n   ffesta_terminate_4 ();\n   ffestb_terminate_4 ();"}, {"sha": "885f44c9912082520708ce3e08ebe7d26b6d20a9", "filename": "gcc/f/sta.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fsta.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fsta.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fsta.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -183,7 +183,7 @@ ffesta_add_possible_ (ffelexHandler fn, bool exec, bool named)\n    invocation of ffestc_exec_transition.  */\n \n static bool\n-ffesta_inhibited_exec_transition_ ()\n+ffesta_inhibited_exec_transition_ (void)\n {\n   bool result;\n \n@@ -208,7 +208,7 @@ ffesta_inhibited_exec_transition_ ()\n    Clears the lists of executable and nonexecutable statements.\t */\n \n static void\n-ffesta_reset_possibles_ ()\n+ffesta_reset_possibles_ (void)\n {\n   ffesta_num_possibles_ = 0;\n \n@@ -1123,7 +1123,7 @@ ffesta_send_two_ (ffelexToken t)\n    yet been set.  */\n \n void\n-ffesta_confirmed ()\n+ffesta_confirmed (void)\n {\n   if (ffesta_inhibit_confirmation_)\n     return;\n@@ -1147,7 +1147,7 @@ ffesta_confirmed ()\n       processing a statement (make and destroy pools, et cetera).  */\n \n void\n-ffesta_eof ()\n+ffesta_eof (void)\n {\n   ffesta_tokens[0] = ffelex_token_new_eof ();\n \n@@ -1314,7 +1314,7 @@ ffesta_first (ffelexToken t)\n    this list.  Initializes the executable and nonexecutable lists.  */\n \n void\n-ffesta_init_0 ()\n+ffesta_init_0 (void)\n {\n   ffestaPossible_ ptr;\n   int i;\n@@ -1339,7 +1339,7 @@ ffesta_init_0 ()\n    ffesta_init_3();  */\n \n void\n-ffesta_init_3 ()\n+ffesta_init_3 (void)\n {\n   ffesta_output_pool = NULL;\t/* May be doing this just before reaching */\n   ffesta_scratch_pool = NULL;\t/* ffesta_zero or ffesta_two. */\n@@ -1376,7 +1376,7 @@ ffesta_init_3 ()\n    the ffestb call would be completely dropped without this mechanism.\t*/\n \n bool\n-ffesta_is_inhibited ()\n+ffesta_is_inhibited (void)\n {\n   assert (ffesta_confirmed_current_ || ffesta_inhibit_confirmation_);\n   return ffesta_is_inhibited_;\n@@ -1525,7 +1525,7 @@ ffesta_ffebad_2t (ffebad errnum, ffelexToken t1, ffelexToken t2)\n }\n \n ffestaPooldisp\n-ffesta_outpooldisp ()\n+ffesta_outpooldisp (void)\n {\n   return ffesta_outpooldisp_;\n }\n@@ -1540,7 +1540,7 @@ ffesta_set_outpooldisp (ffestaPooldisp d)\n    user with a diagnostic if we're not inhibited.  */\n \n void\n-ffesta_shutdown ()\n+ffesta_shutdown (void)\n {\n   if (ffesta_is_inhibited_)\n     ffesta_current_shutdown_ = TRUE;"}, {"sha": "673f96c23c543a72438d11d9b0382a81f1a58ce2", "filename": "gcc/f/stb.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fstb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fstb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstb.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -815,7 +815,7 @@ ffestb_subr_ambig_nope_ (ffelexToken t)\n    in _ents_ (perform housekeeping tasks).  */\n \n static void\n-ffestb_subr_ambig_to_ents_ ()\n+ffestb_subr_ambig_to_ents_ (void)\n {\n   ffelexToken nt;\n \n@@ -9460,7 +9460,7 @@ ffestb_subr_kill_easy_ (ffestpInquireIx max)\n \n #if !FFESTB_KILL_EASY_\n static void\n-ffestb_subr_kill_accept_ ()\n+ffestb_subr_kill_accept_ (void)\n {\n   ffestpAcceptIx ix;\n \n@@ -9486,7 +9486,7 @@ ffestb_subr_kill_accept_ ()\n \n #if !FFESTB_KILL_EASY_\n static void\n-ffestb_subr_kill_beru_ ()\n+ffestb_subr_kill_beru_ (void)\n {\n   ffestpBeruIx ix;\n \n@@ -9511,7 +9511,7 @@ ffestb_subr_kill_beru_ ()\n \n #if !FFESTB_KILL_EASY_\n static void\n-ffestb_subr_kill_close_ ()\n+ffestb_subr_kill_close_ (void)\n {\n   ffestpCloseIx ix;\n \n@@ -9536,7 +9536,7 @@ ffestb_subr_kill_close_ ()\n \n #if !FFESTB_KILL_EASY_\n static void\n-ffestb_subr_kill_delete_ ()\n+ffestb_subr_kill_delete_ (void)\n {\n   ffestpDeleteIx ix;\n \n@@ -9561,7 +9561,7 @@ ffestb_subr_kill_delete_ ()\n \n #if !FFESTB_KILL_EASY_\n static void\n-ffestb_subr_kill_inquire_ ()\n+ffestb_subr_kill_inquire_ (void)\n {\n   ffestpInquireIx ix;\n \n@@ -9586,7 +9586,7 @@ ffestb_subr_kill_inquire_ ()\n \n #if !FFESTB_KILL_EASY_\n static void\n-ffestb_subr_kill_open_ ()\n+ffestb_subr_kill_open_ (void)\n {\n   ffestpOpenIx ix;\n \n@@ -9611,7 +9611,7 @@ ffestb_subr_kill_open_ ()\n \n #if !FFESTB_KILL_EASY_\n static void\n-ffestb_subr_kill_print_ ()\n+ffestb_subr_kill_print_ (void)\n {\n   ffestpPrintIx ix;\n \n@@ -9636,7 +9636,7 @@ ffestb_subr_kill_print_ ()\n \n #if !FFESTB_KILL_EASY_\n static void\n-ffestb_subr_kill_read_ ()\n+ffestb_subr_kill_read_ (void)\n {\n   ffestpReadIx ix;\n \n@@ -9661,7 +9661,7 @@ ffestb_subr_kill_read_ ()\n \n #if !FFESTB_KILL_EASY_\n static void\n-ffestb_subr_kill_rewrite_ ()\n+ffestb_subr_kill_rewrite_ (void)\n {\n   ffestpRewriteIx ix;\n \n@@ -9686,7 +9686,7 @@ ffestb_subr_kill_rewrite_ ()\n \n #if !FFESTB_KILL_EASY_\n static void\n-ffestb_subr_kill_type_ ()\n+ffestb_subr_kill_type_ (void)\n {\n   ffestpTypeIx ix;\n \n@@ -9711,7 +9711,7 @@ ffestb_subr_kill_type_ ()\n \n #if !FFESTB_KILL_EASY_\n static void\n-ffestb_subr_kill_write_ ()\n+ffestb_subr_kill_write_ (void)\n {\n   ffestpWriteIx ix;\n "}, {"sha": "f859fac89df6f98625a1052ba163d6bb8b7807af", "filename": "gcc/f/stc.c", "status": "modified", "additions": 95, "deletions": 95, "changes": 190, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fstc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fstc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstc.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -599,7 +599,7 @@ ffestc_establish_impletter_ (ffelexToken first, ffelexToken last)\n    ffestc_init_3();  */\n \n void\n-ffestc_init_3 ()\n+ffestc_init_3 (void)\n {\n   ffestv_save_state_ = FFESTV_savestateNONE;\n   ffestc_entry_num_ = 0;\n@@ -614,7 +614,7 @@ ffestc_init_3 ()\n    defs, and statement function defs.  */\n \n void\n-ffestc_init_4 ()\n+ffestc_init_4 (void)\n {\n   ffestc_saved_entry_num_ = ffestc_entry_num_;\n   ffestc_entry_num_ = 0;\n@@ -683,7 +683,7 @@ ffestc_kindtype_star_ (ffeinfoBasictype bt, ffetargetCharacterSize val)\n /* Define label as usable for anything without complaint.  */\n \n static void\n-ffestc_labeldef_any_ ()\n+ffestc_labeldef_any_ (void)\n {\n   if ((ffesta_label_token == NULL)\n       || !ffestc_labeldef_begin_ ())\n@@ -700,7 +700,7 @@ ffestc_labeldef_any_ ()\n    ffestc_labeldef_begin_();  */\n \n static bool\n-ffestc_labeldef_begin_ ()\n+ffestc_labeldef_begin_ (void)\n {\n   ffelabValue label_value;\n   ffelab label;\n@@ -757,7 +757,7 @@ ffestc_labeldef_begin_ ()\n    ffestc_labeldef_branch_begin_();  */\n \n static void\n-ffestc_labeldef_branch_begin_ ()\n+ffestc_labeldef_branch_begin_ (void)\n {\n   if ((ffesta_label_token == NULL)\n       || (ffestc_shriek_after1_ != NULL)\n@@ -841,7 +841,7 @@ ffestc_labeldef_branch_begin_ ()\n    which case they must issue a diagnostic).  */\n \n static void\n-ffestc_labeldef_branch_end_ ()\n+ffestc_labeldef_branch_end_ (void)\n {\n   if (ffesta_label_token == NULL)\n     return;\n@@ -865,7 +865,7 @@ ffestc_labeldef_branch_end_ ()\n    ffestc_labeldef_endif_();  */\n \n static void\n-ffestc_labeldef_endif_ ()\n+ffestc_labeldef_endif_ (void)\n {\n   if ((ffesta_label_token == NULL)\n       || (ffestc_shriek_after1_ != NULL)\n@@ -954,7 +954,7 @@ ffestc_labeldef_endif_ ()\n    ffestc_labeldef_format_();  */\n \n static void\n-ffestc_labeldef_format_ ()\n+ffestc_labeldef_format_ (void)\n {\n   if ((ffesta_label_token == NULL)\n       || (ffestc_shriek_after1_ != NULL))\n@@ -1037,7 +1037,7 @@ ffestc_labeldef_format_ ()\n    ffestc_labeldef_invalid_();\t*/\n \n static void\n-ffestc_labeldef_invalid_ ()\n+ffestc_labeldef_invalid_ (void)\n {\n   if ((ffesta_label_token == NULL)\n       || (ffestc_shriek_after1_ != NULL)\n@@ -1062,7 +1062,7 @@ ffestc_labeldef_invalid_ ()\n    be in the \"then\" part of a logical IF, such as a block-IF statement.  */\n \n static void\n-ffestc_labeldef_notloop_ ()\n+ffestc_labeldef_notloop_ (void)\n {\n   if (ffesta_label_token == NULL)\n     return;\n@@ -1156,7 +1156,7 @@ ffestc_labeldef_notloop_ ()\n    loop-ending label.  */\n \n static void\n-ffestc_labeldef_notloop_begin_ ()\n+ffestc_labeldef_notloop_begin_ (void)\n {\n   if ((ffesta_label_token == NULL)\n       || (ffestc_shriek_after1_ != NULL)\n@@ -1244,7 +1244,7 @@ ffestc_labeldef_notloop_begin_ ()\n    ffestc_labeldef_useless_();\t*/\n \n static void\n-ffestc_labeldef_useless_ ()\n+ffestc_labeldef_useless_ (void)\n {\n   if ((ffesta_label_token == NULL)\n       || (ffestc_shriek_after1_ != NULL)\n@@ -1750,7 +1750,7 @@ ffestc_labelref_is_loopend_ (ffelexToken label_token, ffelab *x_label)\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_actiondo_ ()\n+ffestc_order_actiondo_ (void)\n {\n   recurse:\n \n@@ -1795,7 +1795,7 @@ ffestc_order_actiondo_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_actionif_ ()\n+ffestc_order_actionif_ (void)\n {\n   bool update;\n \n@@ -1879,7 +1879,7 @@ ffestc_order_actionif_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_actionwhere_ ()\n+ffestc_order_actionwhere_ (void)\n {\n   bool update;\n \n@@ -1961,7 +1961,7 @@ ffestc_order_actionwhere_ ()\n    doesn't produce any diagnostics.  */\n \n static void\n-ffestc_order_any_ ()\n+ffestc_order_any_ (void)\n {\n   bool update;\n \n@@ -2047,7 +2047,7 @@ ffestc_order_any_ ()\n    now.\t */\n \n static void\n-ffestc_order_bad_ ()\n+ffestc_order_bad_ (void)\n {\n   if (ffewhere_line_is_unknown (ffestw_line (ffestw_stack_top ())))\n     {\n@@ -2073,7 +2073,7 @@ ffestc_order_bad_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_blockdata_ ()\n+ffestc_order_blockdata_ (void)\n {\n   recurse:\n \n@@ -2111,7 +2111,7 @@ ffestc_order_blockdata_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_blockspec_ ()\n+ffestc_order_blockspec_ (void)\n {\n   recurse:\n \n@@ -2186,7 +2186,7 @@ ffestc_order_blockspec_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_data_ ()\n+ffestc_order_data_ (void)\n {\n   recurse:\n \n@@ -2263,7 +2263,7 @@ ffestc_order_data_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_data77_ ()\n+ffestc_order_data77_ (void)\n {\n   recurse:\n \n@@ -2341,7 +2341,7 @@ ffestc_order_data77_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_do_ ()\n+ffestc_order_do_ (void)\n {\n   switch (ffestw_state (ffestw_stack_top ()))\n     {\n@@ -2369,7 +2369,7 @@ ffestc_order_do_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_entry_ ()\n+ffestc_order_entry_ (void)\n {\n   recurse:\n \n@@ -2434,7 +2434,7 @@ ffestc_order_entry_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_exec_ ()\n+ffestc_order_exec_ (void)\n {\n   bool update;\n \n@@ -2519,7 +2519,7 @@ ffestc_order_exec_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_format_ ()\n+ffestc_order_format_ (void)\n {\n   recurse:\n \n@@ -2587,7 +2587,7 @@ ffestc_order_format_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_function_ ()\n+ffestc_order_function_ (void)\n {\n   recurse:\n \n@@ -2625,7 +2625,7 @@ ffestc_order_function_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_iface_ ()\n+ffestc_order_iface_ (void)\n {\n   switch (ffestw_state (ffestw_stack_top ()))\n     {\n@@ -2658,7 +2658,7 @@ ffestc_order_iface_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_ifthen_ ()\n+ffestc_order_ifthen_ (void)\n {\n   switch (ffestw_state (ffestw_stack_top ()))\n     {\n@@ -2686,7 +2686,7 @@ ffestc_order_ifthen_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_implicit_ ()\n+ffestc_order_implicit_ (void)\n {\n   recurse:\n \n@@ -2757,7 +2757,7 @@ ffestc_order_implicit_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_implicitnone_ ()\n+ffestc_order_implicitnone_ (void)\n {\n   recurse:\n \n@@ -2821,7 +2821,7 @@ ffestc_order_implicitnone_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_parameter_ ()\n+ffestc_order_parameter_ (void)\n {\n   recurse:\n \n@@ -2901,7 +2901,7 @@ ffestc_order_parameter_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_program_ ()\n+ffestc_order_program_ (void)\n {\n   recurse:\n \n@@ -2943,7 +2943,7 @@ ffestc_order_program_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_progspec_ ()\n+ffestc_order_progspec_ (void)\n {\n   recurse:\n \n@@ -3025,7 +3025,7 @@ ffestc_order_progspec_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_selectcase_ ()\n+ffestc_order_selectcase_ (void)\n {\n   switch (ffestw_state (ffestw_stack_top ()))\n     {\n@@ -3054,7 +3054,7 @@ ffestc_order_selectcase_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_sfunc_ ()\n+ffestc_order_sfunc_ (void)\n {\n   recurse:\n \n@@ -3113,7 +3113,7 @@ ffestc_order_sfunc_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_subroutine_ ()\n+ffestc_order_subroutine_ (void)\n {\n   recurse:\n \n@@ -3151,7 +3151,7 @@ ffestc_order_subroutine_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_typedecl_ ()\n+ffestc_order_typedecl_ (void)\n {\n   recurse:\n \n@@ -3226,7 +3226,7 @@ ffestc_order_typedecl_ ()\n        return;\t*/\n \n static ffestcOrder_\n-ffestc_order_unit_ ()\n+ffestc_order_unit_ (void)\n {\n   switch (ffestw_state (ffestw_stack_top ()))\n     {\n@@ -3563,7 +3563,7 @@ ffestc_promote_sfdummy_ (ffelexToken t)\n    of a main program unit.  */\n \n static void\n-ffestc_shriek_begin_program_ ()\n+ffestc_shriek_begin_program_ (void)\n {\n   ffestw b;\n   ffesymbol s;\n@@ -4107,7 +4107,7 @@ ffestc_subr_unit_ (ffestpFile *spec)\n    like \"DO 10\", \"IF (...) THEN\", \"10 ELSE\", \"END IF\", \"END\".  */\n \n static void\n-ffestc_try_shriek_do_ ()\n+ffestc_try_shriek_do_ (void)\n {\n   ffelab lab;\n   ffelabType ty;\n@@ -4236,7 +4236,7 @@ ffestc_decl_item (ffelexToken name, ffebld kind, ffelexToken kindt,\n    Gonna specify values for the object now.  */\n \n void\n-ffestc_decl_itemstartvals ()\n+ffestc_decl_itemstartvals (void)\n {\n   switch (ffestc_local_.decl.is_R426)\n     {\n@@ -4298,7 +4298,7 @@ ffestc_decl_itemendvals (ffelexToken t)\n    Just wrap up any local activities.  */\n \n void\n-ffestc_decl_finish ()\n+ffestc_decl_finish (void)\n {\n   switch (ffestc_local_.decl.is_R426)\n     {\n@@ -4339,7 +4339,7 @@ ffestc_elsewhere (ffelexToken where)\n    it.\t*/\n \n void\n-ffestc_end ()\n+ffestc_end (void)\n {\n   ffestw b;\n \n@@ -4422,7 +4422,7 @@ ffestc_end ()\n    block's shriek function to clean up to state NIL.  */\n \n void\n-ffestc_eof ()\n+ffestc_eof (void)\n {\n   if (ffestw_state (ffestw_stack_top ()) != FFESTV_stateNIL)\n     {\n@@ -4457,7 +4457,7 @@ ffestc_eof ()\n    seeing the unrecognized statement?  we do the former at the moment).  */\n \n bool\n-ffestc_exec_transition ()\n+ffestc_exec_transition (void)\n {\n   bool update;\n \n@@ -4561,7 +4561,7 @@ ffestc_ffebad_here_doiter (ffebadIndex i, ffesymbol s)\n    is the R1219 function-stmt case).  */\n \n bool\n-ffestc_is_decl_not_R1219 ()\n+ffestc_is_decl_not_R1219 (void)\n {\n   switch (ffestw_state (ffestw_stack_top ()))\n     {\n@@ -4591,7 +4591,7 @@ ffestc_is_decl_not_R1219 ()\n    if the ENTRY is in a function context.  */\n \n bool\n-ffestc_is_entry_in_subr ()\n+ffestc_is_entry_in_subr (void)\n {\n   ffestvState s;\n \n@@ -4630,7 +4630,7 @@ ffestc_is_entry_in_subr ()\n    explicit typing of name.  */\n \n bool\n-ffestc_is_let_not_V027 ()\n+ffestc_is_let_not_V027 (void)\n {\n   switch (ffestw_state (ffestw_stack_top ()))\n     {\n@@ -4659,7 +4659,7 @@ ffestc_is_let_not_V027 ()\n    defs, and statement function defs.  */\n \n void\n-ffestc_terminate_4 ()\n+ffestc_terminate_4 (void)\n {\n   ffestc_entry_num_ = ffestc_saved_entry_num_;\n }\n@@ -5023,7 +5023,7 @@ ffestc_R501_item (ffelexToken name, ffebld kind, ffelexToken kindt,\n    Gonna specify values for the object now.  */\n \n void\n-ffestc_R501_itemstartvals ()\n+ffestc_R501_itemstartvals (void)\n {\n   ffestc_check_item_startvals_ ();\n \n@@ -5091,7 +5091,7 @@ ffestc_R501_itemendvals (ffelexToken t)\n    Just wrap up any local activities.  */\n \n void\n-ffestc_R501_finish ()\n+ffestc_R501_finish (void)\n {\n   ffestc_check_finish_ ();\n }\n@@ -5103,7 +5103,7 @@ ffestc_R501_finish ()\n    Verify that SAVE is valid here, and flag everything as SAVEd.  */\n \n void\n-ffestc_R522 ()\n+ffestc_R522 (void)\n {\n   ffestc_check_simple_ ();\n   if (ffestc_order_blockspec_ () != FFESTC_orderOK_)\n@@ -5153,7 +5153,7 @@ ffestc_R522 ()\n    Verify that SAVE is valid here, and begin accepting items in the list.  */\n \n void\n-ffestc_R522start ()\n+ffestc_R522start (void)\n {\n   ffestc_check_start_ ();\n   if (ffestc_order_blockspec_ () != FFESTC_orderOK_)\n@@ -5315,7 +5315,7 @@ ffestc_R522item_cblock (ffelexToken name)\n    Just wrap up any local activities.  */\n \n void\n-ffestc_R522finish ()\n+ffestc_R522finish (void)\n {\n   ffestc_check_finish_ ();\n   if (!ffestc_ok_)\n@@ -5487,7 +5487,7 @@ ffestc_R524_item (ffelexToken name, ffesttDimList dims)\n    Just wrap up any local activities.  */\n \n void\n-ffestc_R524_finish ()\n+ffestc_R524_finish (void)\n {\n   ffestc_check_finish_ ();\n   if (!ffestc_ok_)\n@@ -5503,7 +5503,7 @@ ffestc_R524_finish ()\n    Verify that DATA is valid here, and begin accepting items in the list.  */\n \n void\n-ffestc_R528_start ()\n+ffestc_R528_start (void)\n {\n   ffestcOrder_ order;\n \n@@ -5561,7 +5561,7 @@ ffestc_R528_item_object (ffebld expr, ffelexToken expr_token UNUSED)\n    No more objects, gonna specify values for the list of objects now.  */\n \n void\n-ffestc_R528_item_startvals ()\n+ffestc_R528_item_startvals (void)\n {\n   ffestc_check_item_startvals_ ();\n   if (!ffestc_ok_)\n@@ -5644,7 +5644,7 @@ ffestc_R528_item_endvals (ffelexToken t)\n    Just wrap up any local activities.  */\n \n void\n-ffestc_R528_finish ()\n+ffestc_R528_finish (void)\n {\n   ffestc_check_finish_ ();\n \n@@ -5662,7 +5662,7 @@ ffestc_R528_finish ()\n    list.  */\n \n void\n-ffestc_R537_start ()\n+ffestc_R537_start (void)\n {\n   ffestc_check_start_ ();\n   if (ffestc_order_parameter_ () != FFESTC_orderOK_)\n@@ -5745,7 +5745,7 @@ ffestc_R537_item (ffebld dest, ffelexToken dest_token, ffebld source,\n    Just wrap up any local activities.  */\n \n void\n-ffestc_R537_finish ()\n+ffestc_R537_finish (void)\n {\n   ffestc_check_finish_ ();\n   if (!ffestc_ok_)\n@@ -5761,7 +5761,7 @@ ffestc_R537_finish ()\n    Verify that the IMPLICIT NONE statement is ok here and implement.  */\n \n void\n-ffestc_R539 ()\n+ffestc_R539 (void)\n {\n   ffestc_check_simple_ ();\n   if (ffestc_order_implicitnone_ () != FFESTC_orderOK_)\n@@ -5780,7 +5780,7 @@ ffestc_R539 ()\n    Verify that the IMPLICIT statement is ok here and implement.\t */\n \n void\n-ffestc_R539start ()\n+ffestc_R539start (void)\n {\n   ffestc_check_start_ ();\n   if (ffestc_order_implicit_ () != FFESTC_orderOK_)\n@@ -5835,7 +5835,7 @@ ffestc_R539item (ffestpType type, ffebld kind, ffelexToken kindt,\n    Finish up any local activities.  */\n \n void\n-ffestc_R539finish ()\n+ffestc_R539finish (void)\n {\n   ffestc_check_finish_ ();\n   if (!ffestc_ok_)\n@@ -5852,7 +5852,7 @@ ffestc_R539finish ()\n    list.  */\n \n void\n-ffestc_R542_start ()\n+ffestc_R542_start (void)\n {\n   ffestc_check_start_ ();\n   if (ffestc_order_progspec_ () != FFESTC_orderOK_)\n@@ -6017,7 +6017,7 @@ ffestc_R542_item_nitem (ffelexToken name)\n    Just wrap up any local activities.  */\n \n void\n-ffestc_R542_finish ()\n+ffestc_R542_finish (void)\n {\n   ffestc_check_finish_ ();\n   if (!ffestc_ok_)\n@@ -6036,7 +6036,7 @@ ffestc_R542_finish ()\n    list.  */\n \n void\n-ffestc_R544_start ()\n+ffestc_R544_start (void)\n {\n   ffestc_check_start_ ();\n   if (ffestc_order_blockspec_ () != FFESTC_orderOK_)\n@@ -6163,7 +6163,7 @@ ffestc_R544_equiv_ (ffebld expr, ffelexToken t)\n    Just wrap up any local activities.  */\n \n void\n-ffestc_R544_finish ()\n+ffestc_R544_finish (void)\n {\n   ffestc_check_finish_ ();\n }\n@@ -6175,7 +6175,7 @@ ffestc_R544_finish ()\n    Verify that COMMON is valid here, and begin accepting items in the list.  */\n \n void\n-ffestc_R547_start ()\n+ffestc_R547_start (void)\n {\n   ffestc_check_start_ ();\n   if (ffestc_order_blockspec_ () != FFESTC_orderOK_)\n@@ -6444,7 +6444,7 @@ ffestc_R547_item_cblock (ffelexToken name)\n    Just wrap up any local activities.  */\n \n void\n-ffestc_R547_finish ()\n+ffestc_R547_finish (void)\n {\n   ffestc_check_finish_ ();\n   if (!ffestc_ok_)\n@@ -6875,7 +6875,7 @@ ffestc_R810 (ffesttCaseList cases, ffelexToken name)\n \t       && ((ffeinfo_basictype (ffebld_info (caseobj->expr1))\n \t\t    != s->type)\n \t\t   || ((ffeinfo_kindtype (ffebld_info (caseobj->expr1))\n-\t\t       != s->kindtype) \n+\t\t       != s->kindtype)\n \t\t       && (ffeinfo_kindtype (ffebld_info (caseobj->expr1)) != FFEINFO_kindtypeINTEGER1 ))\n \t      || ((caseobj->range)\n \t\t  && (caseobj->expr2 != NULL)\n@@ -7788,7 +7788,7 @@ ffestc_R840 (ffebld expr, ffelexToken expr_token UNUSED,\n    ffestc_R841();  */\n \n void\n-ffestc_R841 ()\n+ffestc_R841 (void)\n {\n   ffestc_check_simple_ ();\n \n@@ -7860,7 +7860,7 @@ ffestc_R843 (ffebld expr, ffelexToken expr_token UNUSED)\n    Make sure an OPEN is valid in the current context, and implement it.\t */\n \n void\n-ffestc_R904 ()\n+ffestc_R904 (void)\n {\n   int i;\n   int expect_file;\n@@ -8105,7 +8105,7 @@ ffestc_R904 ()\n    Make sure a CLOSE is valid in the current context, and implement it.\t */\n \n void\n-ffestc_R907 ()\n+ffestc_R907 (void)\n {\n   static const char *const status_strs[] =\n   {\n@@ -8497,7 +8497,7 @@ ffestc_R909_item (ffebld expr, ffelexToken expr_token)\n    Just wrap up any local activities.  */\n \n void\n-ffestc_R909_finish ()\n+ffestc_R909_finish (void)\n {\n   ffestc_check_finish_ ();\n   if (!ffestc_ok_)\n@@ -8518,7 +8518,7 @@ ffestc_R909_finish ()\n    list.  */\n \n void\n-ffestc_R910_start ()\n+ffestc_R910_start (void)\n {\n   ffestvUnit unit;\n   ffestvFormat format;\n@@ -8737,7 +8737,7 @@ ffestc_R910_item (ffebld expr, ffelexToken expr_token)\n    Just wrap up any local activities.  */\n \n void\n-ffestc_R910_finish ()\n+ffestc_R910_finish (void)\n {\n   ffestc_check_finish_ ();\n   if (!ffestc_ok_)\n@@ -8758,7 +8758,7 @@ ffestc_R910_finish ()\n    list.  */\n \n void\n-ffestc_R911_start ()\n+ffestc_R911_start (void)\n {\n   ffestvFormat format;\n \n@@ -8822,7 +8822,7 @@ ffestc_R911_item (ffebld expr, ffelexToken expr_token)\n    Just wrap up any local activities.  */\n \n void\n-ffestc_R911_finish ()\n+ffestc_R911_finish (void)\n {\n   ffestc_check_finish_ ();\n   if (!ffestc_ok_)\n@@ -8842,7 +8842,7 @@ ffestc_R911_finish ()\n    Make sure a BACKSPACE is valid in the current context, and implement it.  */\n \n void\n-ffestc_R919 ()\n+ffestc_R919 (void)\n {\n   ffestc_check_simple_ ();\n   if (ffestc_order_actionif_ () != FFESTC_orderOK_)\n@@ -8867,7 +8867,7 @@ ffestc_R919 ()\n    Make sure a ENDFILE is valid in the current context, and implement it.  */\n \n void\n-ffestc_R920 ()\n+ffestc_R920 (void)\n {\n   ffestc_check_simple_ ();\n   if (ffestc_order_actionif_ () != FFESTC_orderOK_)\n@@ -8892,7 +8892,7 @@ ffestc_R920 ()\n    Make sure a REWIND is valid in the current context, and implement it.  */\n \n void\n-ffestc_R921 ()\n+ffestc_R921 (void)\n {\n   ffestc_check_simple_ ();\n   if (ffestc_order_actionif_ () != FFESTC_orderOK_)\n@@ -8917,7 +8917,7 @@ ffestc_R921 ()\n    Make sure an INQUIRE is valid in the current context, and implement it.  */\n \n void\n-ffestc_R923A ()\n+ffestc_R923A (void)\n {\n   bool by_file;\n   bool by_unit;\n@@ -8994,7 +8994,7 @@ ffestc_R923A ()\n    list.  */\n \n void\n-ffestc_R923B_start ()\n+ffestc_R923B_start (void)\n {\n   ffestc_check_start_ ();\n   if (ffestc_order_actionif_ () != FFESTC_orderOK_)\n@@ -9032,7 +9032,7 @@ ffestc_R923B_item (ffebld expr, ffelexToken expr_token UNUSED)\n    Just wrap up any local activities.  */\n \n void\n-ffestc_R923B_finish ()\n+ffestc_R923B_finish (void)\n {\n   ffestc_check_finish_ ();\n   if (!ffestc_ok_)\n@@ -9254,7 +9254,7 @@ ffestc_R1112 (ffelexToken name)\n    Verify that EXTERNAL is valid here, and begin accepting items in the list.  */\n \n void\n-ffestc_R1207_start ()\n+ffestc_R1207_start (void)\n {\n   ffestc_check_start_ ();\n   if (ffestc_order_progspec_ () != FFESTC_orderOK_)\n@@ -9328,7 +9328,7 @@ ffestc_R1207_item (ffelexToken name)\n    Just wrap up any local activities.  */\n \n void\n-ffestc_R1207_finish ()\n+ffestc_R1207_finish (void)\n {\n   ffestc_check_finish_ ();\n   if (!ffestc_ok_)\n@@ -9344,7 +9344,7 @@ ffestc_R1207_finish ()\n    Verify that INTRINSIC is valid here, and begin accepting items in the list.\t*/\n \n void\n-ffestc_R1208_start ()\n+ffestc_R1208_start (void)\n {\n   ffestc_check_start_ ();\n   if (ffestc_order_progspec_ () != FFESTC_orderOK_)\n@@ -9447,7 +9447,7 @@ ffestc_R1208_item (ffelexToken name)\n    Just wrap up any local activities.  */\n \n void\n-ffestc_R1208_finish ()\n+ffestc_R1208_finish (void)\n {\n   ffestc_check_finish_ ();\n   if (!ffestc_ok_)\n@@ -10232,7 +10232,7 @@ ffestc_S3P4 (ffebld filename, ffelexToken filename_token UNUSED)\n    list.  */\n \n void\n-ffestc_V014_start ()\n+ffestc_V014_start (void)\n {\n   ffestc_check_start_ ();\n   if (ffestc_order_progspec_ () != FFESTC_orderOK_)\n@@ -10288,7 +10288,7 @@ ffestc_V014_item_cblock (ffelexToken name)\n    Just wrap up any local activities.  */\n \n void\n-ffestc_V014_finish ()\n+ffestc_V014_finish (void)\n {\n   ffestc_check_finish_ ();\n   if (!ffestc_ok_)\n@@ -10305,7 +10305,7 @@ ffestc_V014_finish ()\n    list.  */\n \n void\n-ffestc_V020_start ()\n+ffestc_V020_start (void)\n {\n   ffestvFormat format;\n \n@@ -10369,7 +10369,7 @@ ffestc_V020_item (ffebld expr, ffelexToken expr_token)\n    Just wrap up any local activities.  */\n \n void\n-ffestc_V020_finish ()\n+ffestc_V020_finish (void)\n {\n   ffestc_check_finish_ ();\n   if (!ffestc_ok_)\n@@ -10389,7 +10389,7 @@ ffestc_V020_finish ()\n    Verify that PARAMETER is valid here, and begin accepting items in the list.\t*/\n \n void\n-ffestc_V027_start ()\n+ffestc_V027_start (void)\n {\n   ffestc_check_start_ ();\n   if (ffestc_order_parameter_ () != FFESTC_orderOK_)\n@@ -10429,7 +10429,7 @@ ffestc_V027_item (ffelexToken dest_token, ffebld source,\n    Just wrap up any local activities.  */\n \n void\n-ffestc_V027_finish ()\n+ffestc_V027_finish (void)\n {\n   ffestc_check_finish_ ();\n   if (!ffestc_ok_)\n@@ -10442,7 +10442,7 @@ ffestc_V027_finish ()\n    like the statement for a logical IF are reset.  */\n \n void\n-ffestc_any ()\n+ffestc_any (void)\n {\n   ffestc_check_simple_ ();\n "}, {"sha": "863214e92923e3f76a341dd98979388f6430bd82", "filename": "gcc/f/std.c", "status": "modified", "additions": 39, "deletions": 39, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fstd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fstd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstd.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -555,7 +555,7 @@ ffestd_stmt_new_ (ffestdStmtId_ id)\n    ffestd_stmt_pass_();\t */\n \n static void\n-ffestd_stmt_pass_ ()\n+ffestd_stmt_pass_ (void)\n {\n   ffestdStmt_ stmt;\n   ffestdExprItem_ expr;\t\t/* For traversing lists. */\n@@ -1102,7 +1102,7 @@ ffestd_subr_labels_ (bool unexpected)\n    ffestd_subr_vxt_();\t*/\n \n static void\n-ffestd_subr_vxt_ ()\n+ffestd_subr_vxt_ (void)\n {\n   ffebad_start (FFEBAD_VXT_UNSUPPORTED);\n   ffebad_here (0, ffelex_token_where_line (ffesta_tokens[0]),\n@@ -1121,7 +1121,7 @@ ffestd_subr_vxt_ ()\n    handling them as a single block rather than one statement at a time).  */\n \n void\n-ffestd_begin_uses ()\n+ffestd_begin_uses (void)\n {\n }\n \n@@ -1177,7 +1177,7 @@ ffestd_end_R807 (bool ok UNUSED)\n    ffestd_exec_begin();\t */\n \n void\n-ffestd_exec_begin ()\n+ffestd_exec_begin (void)\n {\n   ffecom_exec_transition ();\n \n@@ -1209,7 +1209,7 @@ ffestd_exec_begin ()\n    ffestd_exec_end();  */\n \n void\n-ffestd_exec_end ()\n+ffestd_exec_end (void)\n {\n   location_t old_loc = input_location;\n \n@@ -1251,7 +1251,7 @@ ffestd_exec_end ()\n    ffestd_init_3();  */\n \n void\n-ffestd_init_3 ()\n+ffestd_init_3 (void)\n {\n   ffestd_stmt_list_.first = (ffestdStmt_) &ffestd_stmt_list_.first;\n   ffestd_stmt_list_.last = (ffestdStmt_) &ffestd_stmt_list_.first;\n@@ -1312,7 +1312,7 @@ ffestd_labeldef_useless (ffelab label UNUSED)\n    Verify that SAVE is valid here, and flag everything as SAVEd.  */\n \n void\n-ffestd_R522 ()\n+ffestd_R522 (void)\n {\n   ffestd_check_simple_ ();\n }\n@@ -1324,7 +1324,7 @@ ffestd_R522 ()\n    Verify that SAVE is valid here, and begin accepting items in the list.  */\n \n void\n-ffestd_R522start ()\n+ffestd_R522start (void)\n {\n   ffestd_check_start_ ();\n }\n@@ -1360,7 +1360,7 @@ ffestd_R522item_cblock (ffelexToken name UNUSED)\n    Just wrap up any local activities.  */\n \n void\n-ffestd_R522finish ()\n+ffestd_R522finish (void)\n {\n   ffestd_check_finish_ ();\n }\n@@ -1396,7 +1396,7 @@ ffestd_R524_item (ffelexToken name UNUSED, ffesttDimList dims UNUSED)\n    Just wrap up any local activities.  */\n \n void\n-ffestd_R524_finish ()\n+ffestd_R524_finish (void)\n {\n   ffestd_check_finish_ ();\n }\n@@ -1408,7 +1408,7 @@ ffestd_R524_finish ()\n    Verify that PARAMETER is valid here, and begin accepting items in the list.\t*/\n \n void\n-ffestd_R537_start ()\n+ffestd_R537_start (void)\n {\n   ffestd_check_start_ ();\n }\n@@ -1433,7 +1433,7 @@ ffestd_R537_item (ffebld dest UNUSED, ffebld source UNUSED)\n    Just wrap up any local activities.  */\n \n void\n-ffestd_R537_finish ()\n+ffestd_R537_finish (void)\n {\n   ffestd_check_finish_ ();\n }\n@@ -1445,7 +1445,7 @@ ffestd_R537_finish ()\n    Verify that the IMPLICIT NONE statement is ok here and implement.  */\n \n void\n-ffestd_R539 ()\n+ffestd_R539 (void)\n {\n   ffestd_check_simple_ ();\n }\n@@ -1457,7 +1457,7 @@ ffestd_R539 ()\n    Verify that the IMPLICIT statement is ok here and implement.\t */\n \n void\n-ffestd_R539start ()\n+ffestd_R539start (void)\n {\n   ffestd_check_start_ ();\n }\n@@ -1483,7 +1483,7 @@ ffestd_R539item (ffestpType type UNUSED, ffebld kind UNUSED,\n    Finish up any local activities.  */\n \n void\n-ffestd_R539finish ()\n+ffestd_R539finish (void)\n {\n   ffestd_check_finish_ ();\n }\n@@ -1495,7 +1495,7 @@ ffestd_R539finish ()\n    Verify that NAMELIST is valid here, and begin accepting items in the list.  */\n \n void\n-ffestd_R542_start ()\n+ffestd_R542_start (void)\n {\n   ffestd_check_start_ ();\n }\n@@ -1531,7 +1531,7 @@ ffestd_R542_item_nitem (ffelexToken name UNUSED)\n    Just wrap up any local activities.  */\n \n void\n-ffestd_R542_finish ()\n+ffestd_R542_finish (void)\n {\n   ffestd_check_finish_ ();\n }\n@@ -1543,7 +1543,7 @@ ffestd_R542_finish ()\n    Verify that COMMON is valid here, and begin accepting items in the list.  */\n \n void\n-ffestd_R547_start ()\n+ffestd_R547_start (void)\n {\n   ffestd_check_start_ ();\n }\n@@ -1580,7 +1580,7 @@ ffestd_R547_item_cblock (ffelexToken name UNUSED)\n    Just wrap up any local activities.  */\n \n void\n-ffestd_R547_finish ()\n+ffestd_R547_finish (void)\n {\n   ffestd_check_finish_ ();\n }\n@@ -2096,7 +2096,7 @@ ffestd_R843 (ffebld expr)\n    Make sure an OPEN is valid in the current context, and implement it.\t */\n \n void\n-ffestd_R904 ()\n+ffestd_R904 (void)\n {\n   ffestdStmt_ stmt;\n \n@@ -2151,7 +2151,7 @@ ffestd_R904 ()\n    Make sure a CLOSE is valid in the current context, and implement it.\t */\n \n void\n-ffestd_R907 ()\n+ffestd_R907 (void)\n {\n   ffestdStmt_ stmt;\n \n@@ -2246,7 +2246,7 @@ ffestd_R909_item (ffebld expr, ffelexToken expr_token)\n    Just wrap up any local activities.  */\n \n void\n-ffestd_R909_finish ()\n+ffestd_R909_finish (void)\n {\n   ffestd_check_finish_ ();\n }\n@@ -2323,7 +2323,7 @@ ffestd_R910_item (ffebld expr, ffelexToken expr_token)\n    Just wrap up any local activities.  */\n \n void\n-ffestd_R910_finish ()\n+ffestd_R910_finish (void)\n {\n   ffestd_check_finish_ ();\n }\n@@ -2383,7 +2383,7 @@ ffestd_R911_item (ffebld expr, ffelexToken expr_token)\n    Just wrap up any local activities.  */\n \n void\n-ffestd_R911_finish ()\n+ffestd_R911_finish (void)\n {\n   ffestd_check_finish_ ();\n }\n@@ -2395,7 +2395,7 @@ ffestd_R911_finish ()\n    Make sure a BACKSPACE is valid in the current context, and implement it.  */\n \n void\n-ffestd_R919 ()\n+ffestd_R919 (void)\n {\n   ffestdStmt_ stmt;\n \n@@ -2416,7 +2416,7 @@ ffestd_R919 ()\n    Make sure a ENDFILE is valid in the current context, and implement it.  */\n \n void\n-ffestd_R920 ()\n+ffestd_R920 (void)\n {\n   ffestdStmt_ stmt;\n \n@@ -2437,7 +2437,7 @@ ffestd_R920 ()\n    Make sure a REWIND is valid in the current context, and implement it.  */\n \n void\n-ffestd_R921 ()\n+ffestd_R921 (void)\n {\n   ffestdStmt_ stmt;\n \n@@ -2506,7 +2506,7 @@ ffestd_R923A (bool by_file)\n    list.  */\n \n void\n-ffestd_R923B_start ()\n+ffestd_R923B_start (void)\n {\n   ffestdStmt_ stmt;\n \n@@ -2551,7 +2551,7 @@ ffestd_R923B_item (ffebld expr)\n    Just wrap up any local activities.  */\n \n void\n-ffestd_R923B_finish ()\n+ffestd_R923B_finish (void)\n {\n   ffestd_check_finish_ ();\n }\n@@ -3168,7 +3168,7 @@ ffestd_R1112 (bool ok UNUSED)\n    Verify that EXTERNAL is valid here, and begin accepting items in the list.  */\n \n void\n-ffestd_R1207_start ()\n+ffestd_R1207_start (void)\n {\n   ffestd_check_start_ ();\n }\n@@ -3193,7 +3193,7 @@ ffestd_R1207_item (ffelexToken name)\n    Just wrap up any local activities.  */\n \n void\n-ffestd_R1207_finish ()\n+ffestd_R1207_finish (void)\n {\n   ffestd_check_finish_ ();\n }\n@@ -3205,7 +3205,7 @@ ffestd_R1207_finish ()\n    Verify that INTRINSIC is valid here, and begin accepting items in the list.\t*/\n \n void\n-ffestd_R1208_start ()\n+ffestd_R1208_start (void)\n {\n   ffestd_check_start_ ();\n }\n@@ -3230,7 +3230,7 @@ ffestd_R1208_item (ffelexToken name)\n    Just wrap up any local activities.  */\n \n void\n-ffestd_R1208_finish ()\n+ffestd_R1208_finish (void)\n {\n   ffestd_check_finish_ ();\n }\n@@ -3495,7 +3495,7 @@ ffestd_S3P4 (ffebld filename)\n    Verify that VOLATILE is valid here, and begin accepting items in the list.  */\n \n void\n-ffestd_V014_start ()\n+ffestd_V014_start (void)\n {\n   ffestd_check_start_ ();\n }\n@@ -3531,7 +3531,7 @@ ffestd_V014_item_cblock (ffelexToken name UNUSED)\n    Just wrap up any local activities.  */\n \n void\n-ffestd_V014_finish ()\n+ffestd_V014_finish (void)\n {\n   ffestd_check_finish_ ();\n }\n@@ -3569,7 +3569,7 @@ ffestd_V020_item (ffebld expr UNUSED)\n    Just wrap up any local activities.  */\n \n void\n-ffestd_V020_finish ()\n+ffestd_V020_finish (void)\n {\n   ffestd_check_finish_ ();\n }\n@@ -3581,7 +3581,7 @@ ffestd_V020_finish ()\n    Verify that PARAMETER is valid here, and begin accepting items in the list.\t*/\n \n void\n-ffestd_V027_start ()\n+ffestd_V027_start (void)\n {\n   ffestd_check_start_ ();\n   ffestd_subr_vxt_ ();\n@@ -3607,15 +3607,15 @@ ffestd_V027_item (ffelexToken dest_token UNUSED, ffebld source UNUSED)\n    Just wrap up any local activities.  */\n \n void\n-ffestd_V027_finish ()\n+ffestd_V027_finish (void)\n {\n   ffestd_check_finish_ ();\n }\n \n /* Any executable statement.  */\n \n void\n-ffestd_any ()\n+ffestd_any (void)\n {\n   ffestdStmt_ stmt;\n "}, {"sha": "53a20d89c234c2f45dc3655c93e6040a57fb9229", "filename": "gcc/f/ste.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fste.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fste.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fste.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -335,7 +335,7 @@ static void ffeste_subr_beru_ (ffestpBeruStmt *info, ffecomGfrt rt);\n       tree exq = (Exp);\t\t\t\t\t\t\t      \\\n       tree lenexq = (Lenexp);\t\t\t\t\t\t      \\\n       int need_exq = (! exq);\t\t\t\t\t\t      \\\n-      int need_lenexq = (! lenexq); \t\t\t\t\t      \\\n+      int need_lenexq = (! lenexq);\t\t\t\t\t      \\\n       if (need_exq || need_lenexq)\t\t\t\t\t      \\\n \t{\t\t\t\t\t\t\t\t      \\\n \t  exq = ffecom_arg_ptr_to_expr ((Spec)->u.expr, &lenexq);\t      \\\n@@ -2368,7 +2368,7 @@ ffeste_do (ffestw block)\n    Applies to *only* logical IF, not to IF-THEN.  */\n \n void\n-ffeste_end_R807 ()\n+ffeste_end_R807 (void)\n {\n   ffeste_emit_line_note_ ();\n \n@@ -2824,7 +2824,7 @@ ffeste_R819B (ffestw block, ffelab label UNUSED, ffebld expr)\n    ending an iterative DO statement, even one that ends at a label.  */\n \n void\n-ffeste_R825 ()\n+ffeste_R825 (void)\n {\n   ffeste_check_simple_ ();\n \n@@ -3097,7 +3097,7 @@ ffeste_R840 (ffebld expr, ffelab neg, ffelab zero, ffelab pos)\n /* CONTINUE statement.  */\n \n void\n-ffeste_R841 ()\n+ffeste_R841 (void)\n {\n   ffeste_check_simple_ ();\n \n@@ -3638,7 +3638,7 @@ ffeste_R909_item (ffebld expr, ffelexToken expr_token)\n /* READ statement -- end.  */\n \n void\n-ffeste_R909_finish ()\n+ffeste_R909_finish (void)\n {\n   ffeste_check_finish_ ();\n \n@@ -3869,7 +3869,7 @@ ffeste_R910_item (ffebld expr, ffelexToken expr_token)\n /* WRITE statement -- end.  */\n \n void\n-ffeste_R910_finish ()\n+ffeste_R910_finish (void)\n {\n   ffeste_check_finish_ ();\n \n@@ -3996,7 +3996,7 @@ ffeste_R911_item (ffebld expr, ffelexToken expr_token)\n /* PRINT statement -- end.  */\n \n void\n-ffeste_R911_finish ()\n+ffeste_R911_finish (void)\n {\n   ffeste_check_finish_ ();\n \n@@ -4167,7 +4167,7 @@ ffeste_R923B_item (ffebld expr UNUSED)\n /* INQUIRE(IOLENGTH=expr) statement -- end.  */\n \n void\n-ffeste_R923B_finish ()\n+ffeste_R923B_finish (void)\n {\n   ffeste_check_finish_ ();\n }\n@@ -4227,14 +4227,14 @@ ffeste_R1001 (ffests s)\n /* END PROGRAM.  */\n \n void\n-ffeste_R1103 ()\n+ffeste_R1103 (void)\n {\n }\n \n /* END BLOCK DATA.  */\n \n void\n-ffeste_R1112 ()\n+ffeste_R1112 (void)\n {\n }\n \n@@ -4363,14 +4363,14 @@ ffeste_R1212 (ffebld expr)\n /* END FUNCTION.  */\n \n void\n-ffeste_R1221 ()\n+ffeste_R1221 (void)\n {\n }\n \n /* END SUBROUTINE.  */\n \n void\n-ffeste_R1225 ()\n+ffeste_R1225 (void)\n {\n }\n \n@@ -4456,7 +4456,7 @@ ffeste_V020_item (ffebld expr UNUSED)\n /* TYPE statement -- end.  */\n \n void\n-ffeste_V020_finish ()\n+ffeste_V020_finish (void)\n {\n   ffeste_check_finish_ ();\n }"}, {"sha": "db3382725f9530904e3056231007d04adb47e420", "filename": "gcc/f/storag.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fstorag.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fstorag.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstorag.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -162,7 +162,7 @@ ffestorag_dump (ffestorag s)\n    ffestorag_init_2();\t*/\n \n void\n-ffestorag_init_2 ()\n+ffestorag_init_2 (void)\n {\n   ffestorag_list_.first = ffestorag_list_.last\n   = (ffestorag) &ffestorag_list_.first;\n@@ -431,7 +431,7 @@ ffestorag_new (ffestoragList sl)\n /* Report info on LOCAL non-sym-assoc'ed entities if needed.  */\n \n void\n-ffestorag_report ()\n+ffestorag_report (void)\n {\n   ffestorag s;\n "}, {"sha": "455f4e1b62172e3056454799f320eadc0c8be126", "filename": "gcc/f/stt.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fstt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fstt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstt.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -1,5 +1,5 @@\n /* stt.c -- Implementation File (module.c template V1.0)\n-   Copyright (C) 1995, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1997, 2003 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -99,7 +99,7 @@ ffestt_caselist_append (ffesttCaseList list, bool range, ffebld case1,\n    The list is allocated out of the scratch pool.  */\n \n ffesttCaseList\n-ffestt_caselist_create ()\n+ffestt_caselist_create (void)\n {\n   ffesttCaseList new;\n \n@@ -396,7 +396,7 @@ ffestt_dimlist_as_expr (ffesttDimList list, ffeinfoRank *rank,\n    The list is allocated out of the scratch pool.  */\n \n ffesttDimList\n-ffestt_dimlist_create ()\n+ffestt_dimlist_create (void)\n {\n   ffesttDimList new;\n \n@@ -521,7 +521,7 @@ ffestt_exprlist_append (ffesttExprList list, ffebld expr, ffelexToken t)\n    The list is allocated out of the scratch pool.  */\n \n ffesttExprList\n-ffestt_exprlist_create ()\n+ffestt_exprlist_create (void)\n {\n   ffesttExprList new;\n \n@@ -738,7 +738,7 @@ ffestt_implist_append (ffesttImpList list, ffelexToken first, ffelexToken last)\n    The list is allocated out of the scratch pool.  */\n \n ffesttImpList\n-ffestt_implist_create ()\n+ffestt_implist_create (void)\n {\n   ffesttImpList new;\n \n@@ -825,7 +825,7 @@ ffestt_tokenlist_append (ffesttTokenList tl, ffelexToken t)\n    The list is allocated out of the scratch pool.  */\n \n ffesttTokenList\n-ffestt_tokenlist_create ()\n+ffestt_tokenlist_create (void)\n {\n   ffesttTokenList tl;\n "}, {"sha": "af68522d2e87be48a4364f243a8c4e5768ec06bc", "filename": "gcc/f/stw.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fstw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fstw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstw.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -1,5 +1,5 @@\n /* stw.c -- Implementation File (module.c template V1.0)\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 2003 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -278,7 +278,7 @@ ffestw_display_state (void)\n    ffestw_init_0();  */\n \n void\n-ffestw_init_0 ()\n+ffestw_init_0 (void)\n {\n   ffestw b;\n "}, {"sha": "addacc8f14429affa399d96b560f65a252a2b26c", "filename": "gcc/f/symbol.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fsymbol.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -178,7 +178,7 @@ ffesymbol_check_token_ (ffelexToken t, char *c)\n /* Kill manifest (g77-picked) names.  */\n \n static void\n-ffesymbol_kill_manifest_ ()\n+ffesymbol_kill_manifest_ (void)\n {\n   if (ffesymbol_token_blank_common_ != NULL)\n     ffelex_token_kill (ffesymbol_token_blank_common_);\n@@ -822,7 +822,7 @@ ffesymbol_error (ffesymbol s, ffelexToken t)\n }\n \n void\n-ffesymbol_init_0 ()\n+ffesymbol_init_0 (void)\n {\n   ffesymbolAttrs attrs = FFESYMBOL_attrsetNONE;\n \n@@ -834,20 +834,20 @@ ffesymbol_init_0 ()\n }\n \n void\n-ffesymbol_init_1 ()\n+ffesymbol_init_1 (void)\n {\n #if FFESYMBOL_globalCURRENT_ == FFESYMBOL_globalFILE_\n   ffesymbol_global_ = ffename_space_new (ffe_pool_file ());\n #endif\n }\n \n void\n-ffesymbol_init_2 ()\n+ffesymbol_init_2 (void)\n {\n }\n \n void\n-ffesymbol_init_3 ()\n+ffesymbol_init_3 (void)\n {\n #if FFESYMBOL_globalCURRENT_ == FFESYMBOL_globalPROGUNIT_\n   ffesymbol_global_ = ffename_space_new (ffe_pool_program_unit ());\n@@ -856,7 +856,7 @@ ffesymbol_init_3 ()\n }\n \n void\n-ffesymbol_init_4 ()\n+ffesymbol_init_4 (void)\n {\n   ffesymbol_sfunc_ = ffename_space_new (ffe_pool_program_unit ());\n }\n@@ -1060,7 +1060,7 @@ ffesymbol_retract (bool retract)\n /* Return retractable flag.  */\n \n bool\n-ffesymbol_retractable ()\n+ffesymbol_retractable (void)\n {\n   return ffesymbol_retractable_;\n }\n@@ -1134,12 +1134,12 @@ ffesymbol_state_string (ffesymbolState state)\n }\n \n void\n-ffesymbol_terminate_0 ()\n+ffesymbol_terminate_0 (void)\n {\n }\n \n void\n-ffesymbol_terminate_1 ()\n+ffesymbol_terminate_1 (void)\n {\n #if FFESYMBOL_globalCURRENT_ == FFESYMBOL_globalFILE_\n   ffename_space_drive_symbol (ffesymbol_global_, ffesymbol_unhook_);\n@@ -1151,15 +1151,15 @@ ffesymbol_terminate_1 ()\n }\n \n void\n-ffesymbol_terminate_2 ()\n+ffesymbol_terminate_2 (void)\n {\n #if FFESYMBOL_globalCURRENT_ == FFESYMBOL_globalPROGUNIT_\n   ffesymbol_kill_manifest_ ();\n #endif\n }\n \n void\n-ffesymbol_terminate_3 ()\n+ffesymbol_terminate_3 (void)\n {\n #if FFESYMBOL_globalCURRENT_ == FFESYMBOL_globalPROGUNIT_\n   ffename_space_drive_symbol (ffesymbol_global_, ffesymbol_unhook_);\n@@ -1174,7 +1174,7 @@ ffesymbol_terminate_3 ()\n }\n \n void\n-ffesymbol_terminate_4 ()\n+ffesymbol_terminate_4 (void)\n {\n   ffename_space_drive_symbol (ffesymbol_sfunc_, ffesymbol_unhook_);\n   ffename_space_kill (ffesymbol_sfunc_);"}, {"sha": "ce39dd09bf4c233c11a50b635caceee7c475a3dc", "filename": "gcc/f/top.c", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Ftop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Ftop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftop.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -1,5 +1,6 @@\n /* top.c -- Implementation File (module.c template V1.0)\n-   Copyright (C) 1995, 1996, 1997, 1999, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1997, 1999, 2001, 2003\n+   Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -629,7 +630,7 @@ ffe_file (ffewhereFile wf, FILE *f)\n    Performs per-image invocation.  */\n \n void\n-ffe_init_0 ()\n+ffe_init_0 (void)\n {\n   ++ffe_count_0;\n   ffe_in_0 = TRUE;\n@@ -664,7 +665,7 @@ ffe_init_0 ()\n    Performs per-source-file invocation (not including INCLUDEd files).\t*/\n \n void\n-ffe_init_1 ()\n+ffe_init_1 (void)\n {\n   ++ffe_count_1;\n   ffe_in_1 = TRUE;\n@@ -704,7 +705,7 @@ ffe_init_1 ()\n    Performs per-program-unit invocation.  */\n \n void\n-ffe_init_2 ()\n+ffe_init_2 (void)\n {\n   ++ffe_count_2;\n   ffe_in_2 = TRUE;\n@@ -748,7 +749,7 @@ ffe_init_2 ()\n    of inits, from 0-3, breaks here; level 4 must be invoked independently).  */\n \n void\n-ffe_init_3 ()\n+ffe_init_3 (void)\n {\n   ++ffe_count_3;\n   ffe_in_3 = TRUE;\n@@ -784,7 +785,7 @@ ffe_init_3 ()\n    ffe_init_4();  */\n \n void\n-ffe_init_4 ()\n+ffe_init_4 (void)\n {\n   ++ffe_count_4;\n   ffe_in_4 = TRUE;\n@@ -817,7 +818,7 @@ ffe_init_4 ()\n    ffe_terminate_0();  */\n \n void\n-ffe_terminate_0 ()\n+ffe_terminate_0 (void)\n {\n   ffe_count_1 = 0;\n   ffe_in_0 = FALSE;\n@@ -850,7 +851,7 @@ ffe_terminate_0 ()\n    ffe_terminate_1();  */\n \n void\n-ffe_terminate_1 ()\n+ffe_terminate_1 (void)\n {\n   ffe_count_2 = 0;\n   ffe_in_1 = FALSE;\n@@ -889,7 +890,7 @@ ffe_terminate_1 ()\n    ffe_terminate_2();  */\n \n void\n-ffe_terminate_2 ()\n+ffe_terminate_2 (void)\n {\n   ffe_count_3 = 0;\n   ffe_in_2 = FALSE;\n@@ -928,7 +929,7 @@ ffe_terminate_2 ()\n    ffe_terminate_3();  */\n \n void\n-ffe_terminate_3 ()\n+ffe_terminate_3 (void)\n {\n   ffe_count_4 = 0;\n   ffe_in_3 = FALSE;\n@@ -965,7 +966,7 @@ ffe_terminate_3 ()\n    ffe_terminate_4();  */\n \n void\n-ffe_terminate_4 ()\n+ffe_terminate_4 (void)\n {\n   ffe_in_4 = FALSE;\n "}, {"sha": "b409a4681f5247e9b508b7577078c6282a0b2287", "filename": "gcc/f/where.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fwhere.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f9b92ca44d5e03f97cec02bda2f5bef2b5885c/gcc%2Ff%2Fwhere.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fwhere.c?ref=77f9b92ca44d5e03f97cec02bda2f5bef2b5885c", "patch": "@@ -1,5 +1,5 @@\n /* where.c -- Implementation File (module.c template V1.0)\n-   Copyright (C) 1995, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 2002, 2003 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -161,7 +161,7 @@ ffewhere_file_set (ffewhereFile wf, bool have_num, ffewhereLineNumber ln)\n /* Do initializations.  */\n \n void\n-ffewhere_init_1 ()\n+ffewhere_init_1 (void)\n {\n   ffewhere_root_line_.first = ffewhere_root_line_.last\n   = (ffewhereLine) &ffewhere_root_line_.first;"}]}