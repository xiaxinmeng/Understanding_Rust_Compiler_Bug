{"sha": "265af872a1f8d7ffda2c4056d1d80a3ec4fc8650", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY1YWY4NzJhMWY4ZDdmZmRhMmM0MDU2ZDFkODBhM2VjNGZjODY1MA==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde@tbsaunde.org", "date": "2021-06-06T20:30:29Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@tbsaunde.org", "date": "2021-06-17T08:43:27Z"}, "message": "return auto_vec from cgraph_node::collect_callers\n\nThis ensures the callers of collect_callers () take ownership of the vector and\nfree it when appropriate.\n\nSigned-off-by: Trevor Saunders <tbsaunde@tbsaunde.org>\n\ngcc/ChangeLog:\n\n\t* cgraph.c (cgraph_node::collect_callers): Return\n\tauto_vec<cgraph_edge *>.\n\t* cgraph.h (cgraph_node::collect_callers): Likewise.\n\t* ipa-cp.c (create_specialized_node): Adjust.\n\t(decide_about_value): Likewise.\n\t(decide_whether_version_node): Likewise.\n\t* ipa-sra.c (process_isra_node_results): Likewise.", "tree": {"sha": "ee5fef6ca6bb101bc48ba0c0762694f0a43b1967", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee5fef6ca6bb101bc48ba0c0762694f0a43b1967"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/265af872a1f8d7ffda2c4056d1d80a3ec4fc8650", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/265af872a1f8d7ffda2c4056d1d80a3ec4fc8650", "html_url": "https://github.com/Rust-GCC/gccrs/commit/265af872a1f8d7ffda2c4056d1d80a3ec4fc8650", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/265af872a1f8d7ffda2c4056d1d80a3ec4fc8650/comments", "author": {"login": "tbsaunde", "id": 349840, "node_id": "MDQ6VXNlcjM0OTg0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/349840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbsaunde", "html_url": "https://github.com/tbsaunde", "followers_url": "https://api.github.com/users/tbsaunde/followers", "following_url": "https://api.github.com/users/tbsaunde/following{/other_user}", "gists_url": "https://api.github.com/users/tbsaunde/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbsaunde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbsaunde/subscriptions", "organizations_url": "https://api.github.com/users/tbsaunde/orgs", "repos_url": "https://api.github.com/users/tbsaunde/repos", "events_url": "https://api.github.com/users/tbsaunde/events{/privacy}", "received_events_url": "https://api.github.com/users/tbsaunde/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbsaunde", "id": 349840, "node_id": "MDQ6VXNlcjM0OTg0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/349840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbsaunde", "html_url": "https://github.com/tbsaunde", "followers_url": "https://api.github.com/users/tbsaunde/followers", "following_url": "https://api.github.com/users/tbsaunde/following{/other_user}", "gists_url": "https://api.github.com/users/tbsaunde/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbsaunde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbsaunde/subscriptions", "organizations_url": "https://api.github.com/users/tbsaunde/orgs", "repos_url": "https://api.github.com/users/tbsaunde/repos", "events_url": "https://api.github.com/users/tbsaunde/events{/privacy}", "received_events_url": "https://api.github.com/users/tbsaunde/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9681f5725f54a58098678cdea19d1e90d9a36e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9681f5725f54a58098678cdea19d1e90d9a36e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9681f5725f54a58098678cdea19d1e90d9a36e3"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "abe4e3ebfb3e5a70beaec40c1bf26d708318787a", "filename": "gcc/cgraph.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265af872a1f8d7ffda2c4056d1d80a3ec4fc8650/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265af872a1f8d7ffda2c4056d1d80a3ec4fc8650/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=265af872a1f8d7ffda2c4056d1d80a3ec4fc8650", "patch": "@@ -3074,10 +3074,10 @@ collect_callers_of_node_1 (cgraph_node *node, void *data)\n /* Collect all callers of cgraph_node and its aliases that are known to lead to\n    cgraph_node (i.e. are not overwritable).  */\n \n-vec<cgraph_edge *>\n+auto_vec<cgraph_edge *>\n cgraph_node::collect_callers (void)\n {\n-  vec<cgraph_edge *> redirect_callers = vNULL;\n+  auto_vec<cgraph_edge *> redirect_callers;\n   call_for_symbol_thunks_and_aliases (collect_callers_of_node_1,\n \t\t\t\t    &redirect_callers, false);\n   return redirect_callers;"}, {"sha": "9f4338fdf875ea330988e20e4fa3a37621043afd", "filename": "gcc/cgraph.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265af872a1f8d7ffda2c4056d1d80a3ec4fc8650/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265af872a1f8d7ffda2c4056d1d80a3ec4fc8650/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=265af872a1f8d7ffda2c4056d1d80a3ec4fc8650", "patch": "@@ -1139,7 +1139,7 @@ struct GTY((tag (\"SYMTAB_FUNCTION\"))) cgraph_node : public symtab_node\n \n   /* Collect all callers of cgraph_node and its aliases that are known to lead\n      to NODE (i.e. are not overwritable) and that are not thunks.  */\n-  vec<cgraph_edge *> collect_callers (void);\n+  auto_vec<cgraph_edge *> collect_callers (void);\n \n   /* Remove all callers from the node.  */\n   void remove_callers (void);"}, {"sha": "57c18af2baba4ef1f5eb418d64528377b1616baf", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265af872a1f8d7ffda2c4056d1d80a3ec4fc8650/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265af872a1f8d7ffda2c4056d1d80a3ec4fc8650/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=265af872a1f8d7ffda2c4056d1d80a3ec4fc8650", "patch": "@@ -4527,7 +4527,7 @@ create_specialized_node (struct cgraph_node *node,\n \t\t\t vec<tree> known_csts,\n \t\t\t vec<ipa_polymorphic_call_context> known_contexts,\n \t\t\t struct ipa_agg_replacement_value *aggvals,\n-\t\t\t vec<cgraph_edge *> callers)\n+\t\t\t vec<cgraph_edge *> &callers)\n {\n   ipa_node_params *new_info, *info = ipa_node_params_sum->get (node);\n   vec<ipa_replace_map *, va_gc> *replace_trees = NULL;\n@@ -4672,7 +4672,6 @@ create_specialized_node (struct cgraph_node *node,\n \n   ipcp_discover_new_direct_edges (new_node, known_csts, known_contexts, aggvals);\n \n-  callers.release ();\n   return new_node;\n }\n \n@@ -5562,6 +5561,7 @@ decide_about_value (struct cgraph_node *node, int index, HOST_WIDE_INT offset,\n \t\t\t\t\t\t      offset, val->value));\n   val->spec_node = create_specialized_node (node, known_csts, known_contexts,\n \t\t\t\t\t    aggvals, callers);\n+  callers.release ();\n   overall_size += val->local_size_cost;\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     fprintf (dump_file, \"     overall size reached %li\\n\",\n@@ -5638,7 +5638,7 @@ decide_whether_version_node (struct cgraph_node *node)\n \t}\n \n       struct cgraph_node *clone;\n-      vec<cgraph_edge *> callers = node->collect_callers ();\n+      auto_vec<cgraph_edge *> callers = node->collect_callers ();\n \n       for (int i = callers.length () - 1; i >= 0; i--)\n \t{\n@@ -5654,7 +5654,6 @@ decide_whether_version_node (struct cgraph_node *node)\n \t  /* If node is not called by anyone, or all its caller edges are\n \t     self-recursive, the node is not really in use, no need to do\n \t     cloning.  */\n-\t  callers.release ();\n \t  info->do_clone_for_all_contexts = false;\n \t  return ret;\n \t}"}, {"sha": "3272daf56e4626f639b4a9beb484f754a38d2c2c", "filename": "gcc/ipa-sra.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/265af872a1f8d7ffda2c4056d1d80a3ec4fc8650/gcc%2Fipa-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/265af872a1f8d7ffda2c4056d1d80a3ec4fc8650/gcc%2Fipa-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-sra.c?ref=265af872a1f8d7ffda2c4056d1d80a3ec4fc8650", "patch": "@@ -3755,7 +3755,7 @@ process_isra_node_results (cgraph_node *node,\n   unsigned &suffix_counter = clone_num_suffixes->get_or_insert (\n \t\t\t       IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (\n \t\t\t\t node->decl)));\n-  vec<cgraph_edge *> callers = node->collect_callers ();\n+  auto_vec<cgraph_edge *> callers = node->collect_callers ();\n   cgraph_node *new_node\n     = node->create_virtual_clone (callers, NULL, new_adjustments, \"isra\",\n \t\t\t\t  suffix_counter);"}]}