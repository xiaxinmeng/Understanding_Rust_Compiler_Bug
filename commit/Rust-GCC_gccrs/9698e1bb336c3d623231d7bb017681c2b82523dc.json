{"sha": "9698e1bb336c3d623231d7bb017681c2b82523dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY5OGUxYmIzMzZjM2Q2MjMyMzFkN2JiMDE3NjgxYzJiODI1MjNkYw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2017-05-28T19:12:45Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2017-05-28T19:12:45Z"}, "message": "Fix libgfortran FMA3/FMA4 tests\n\n\t* acinclude.m4 (LIBGFOR_CHECK_FMA3): Use test from\n\tcheck_effective_target_fma in gcc.target/i386/i386.exp.\n\t(LIBGFOR_CHECK_FMA4): Use test from check_effective_target_fma4.\n\t* configure: Regenerate.\n\nFrom-SVN: r248547", "tree": {"sha": "50b127f72fd0832fb01d1d6fad18a2a0aa044911", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50b127f72fd0832fb01d1d6fad18a2a0aa044911"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9698e1bb336c3d623231d7bb017681c2b82523dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9698e1bb336c3d623231d7bb017681c2b82523dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9698e1bb336c3d623231d7bb017681c2b82523dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9698e1bb336c3d623231d7bb017681c2b82523dc/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8364e6aca3381e6572b54ed49299e94887610f9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8364e6aca3381e6572b54ed49299e94887610f9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8364e6aca3381e6572b54ed49299e94887610f9e"}], "stats": {"total": 43, "additions": 31, "deletions": 12}, "files": [{"sha": "eaeac6ad0b7d03fc9fe0dd805a3b752f6fc278f3", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9698e1bb336c3d623231d7bb017681c2b82523dc/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9698e1bb336c3d623231d7bb017681c2b82523dc/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=9698e1bb336c3d623231d7bb017681c2b82523dc", "patch": "@@ -1,3 +1,10 @@\n+2017-05-28  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* acinclude.m4 (LIBGFOR_CHECK_FMA3): Use test from\n+\tcheck_effective_target_fma in gcc.target/i386/i386.exp.\n+\t(LIBGFOR_CHECK_FMA4): Use test from check_effective_target_fma4.\n+\t* configure: Regenerate.\n+\n 2017-05-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR boostrap/80889"}, {"sha": "90df4eea7b763f56d4910709b5525bc361786740", "filename": "libgfortran/acinclude.m4", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9698e1bb336c3d623231d7bb017681c2b82523dc/libgfortran%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9698e1bb336c3d623231d7bb017681c2b82523dc/libgfortran%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Facinclude.m4?ref=9698e1bb336c3d623231d7bb017681c2b82523dc", "patch": "@@ -459,10 +459,13 @@ AC_DEFUN([LIBGFOR_CHECK_FMA3], [\n   ac_save_CFLAGS=\"$CFLAGS\"\n   CFLAGS=\"-O2 -mfma -mno-fma4\"\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-\tfloat\n-\tflt_mul_add (float a, float b, float c)\n+        typedef float __m128 __attribute__ ((__vector_size__ (16)));\n+\ttypedef float __v4sf __attribute__ ((__vector_size__ (16)));\n+\t__m128 _mm_macc_ps(__m128 __A, __m128 __B, __m128 __C)\n \t{\n-\t\treturn __builtin_fmaf (a, b, c);\n+\t    return (__m128) __builtin_ia32_vfmaddps ((__v4sf)__A,\n+\t\t\t\t\t\t     (__v4sf)__B,\n+\t\t\t\t\t\t     (__v4sf)__C);\n         }]], [[]])],\n \tAC_DEFINE(HAVE_FMA3, 1,\n \t[Define if FMA3 instructions can be compiled.]),\n@@ -476,10 +479,13 @@ AC_DEFUN([LIBGFOR_CHECK_FMA4], [\n   ac_save_CFLAGS=\"$CFLAGS\"\n   CFLAGS=\"-O2 -mfma4 -mno-fma\"\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-\tfloat\n-\tflt_mul_add (float a, float b, float c)\n+        typedef float __m128 __attribute__ ((__vector_size__ (16)));\n+\ttypedef float __v4sf __attribute__ ((__vector_size__ (16)));\n+\t__m128 _mm_macc_ps(__m128 __A, __m128 __B, __m128 __C)\n \t{\n-\t\treturn __builtin_fmaf (a, b, c);\n+\t    return (__m128) __builtin_ia32_vfmaddps ((__v4sf)__A,\n+\t\t\t\t\t\t     (__v4sf)__B,\n+\t\t\t\t\t\t     (__v4sf)__C);\n         }]], [[]])],\n \tAC_DEFINE(HAVE_FMA4, 1,\n \t[Define if FMA4 instructions can be compiled.]),"}, {"sha": "87c83cab73a9364037b965f974bd60a91732e269", "filename": "libgfortran/configure", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9698e1bb336c3d623231d7bb017681c2b82523dc/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9698e1bb336c3d623231d7bb017681c2b82523dc/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=9698e1bb336c3d623231d7bb017681c2b82523dc", "patch": "@@ -26372,10 +26372,13 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-\tfloat\n-\tflt_mul_add (float a, float b, float c)\n+        typedef float __m128 __attribute__ ((__vector_size__ (16)));\n+\ttypedef float __v4sf __attribute__ ((__vector_size__ (16)));\n+\t__m128 _mm_macc_ps(__m128 __A, __m128 __B, __m128 __C)\n \t{\n-\t\treturn __builtin_fmaf (a, b, c);\n+\t    return (__m128) __builtin_ia32_vfmaddps ((__v4sf)__A,\n+\t\t\t\t\t\t     (__v4sf)__B,\n+\t\t\t\t\t\t     (__v4sf)__C);\n         }\n int\n main ()\n@@ -26401,10 +26404,13 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-\tfloat\n-\tflt_mul_add (float a, float b, float c)\n+        typedef float __m128 __attribute__ ((__vector_size__ (16)));\n+\ttypedef float __v4sf __attribute__ ((__vector_size__ (16)));\n+\t__m128 _mm_macc_ps(__m128 __A, __m128 __B, __m128 __C)\n \t{\n-\t\treturn __builtin_fmaf (a, b, c);\n+\t    return (__m128) __builtin_ia32_vfmaddps ((__v4sf)__A,\n+\t\t\t\t\t\t     (__v4sf)__B,\n+\t\t\t\t\t\t     (__v4sf)__C);\n         }\n int\n main ()"}]}