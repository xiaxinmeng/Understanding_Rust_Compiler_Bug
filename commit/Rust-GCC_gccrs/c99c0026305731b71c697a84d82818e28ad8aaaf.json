{"sha": "c99c0026305731b71c697a84d82818e28ad8aaaf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk5YzAwMjYzMDU3MzFiNzFjNjk3YTg0ZDgyODE4ZTI4YWQ4YWFhZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-05-07T19:58:29Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-05-07T19:58:29Z"}, "message": "langhooks.h (lang_hooks_for_types): Change global_bindings_p's return type to bool and adjust comment.\n\n2011-05-07 \u00a0Eric Botcazou \u00a0<ebotcazou@adacore.com>\n\n\t* langhooks.h (lang_hooks_for_types): Change global_bindings_p's return\n\ttype to bool and adjust comment.\n\t* fold-const.c (fold_range_test): Adjust call to global_bindings_p.\n\t(fold_mathfn_compare): Remove calls to global_bindings_p.\n\t(fold_inf_compare): Likewise.\n\t* stor-layout.c (variable_size): Adjust call to global_bindings_p.\n\t* c-tree.h (global_bindings_p): Adjust prototype.\n\t* c-decl.c (global_bindings_p): Return bool and simplify.\nada/\n\t* gcc-interface/gigi.h (global_bindings_p): Adjust prototype.\n\t* gcc-interface/utils.c (global_bindings_p): Return bool and simplify.\ncp/\n\t* name-lookup.h (global_bindings_p): Adjust prototype.\n\t* name-lookup.c (global_bindings_p): Return bool.\nfortran/\n\t* f95-lang.c (global_bindings_p): Return bool and simplify.\ngo/\n\t* go-lang.c (global_bindings_p): Return bool and simplify.\njava/\n\t* java-tree.h (global_bindings_p): Adjust prototype.\n\t* decl.c (global_bindings_p): Return bool.\nlto/\n\t* lto-lang.c (global_bindings_p): Return bool.\n\nFrom-SVN: r173535", "tree": {"sha": "67d27c098a1229b2020c6d36424e17ce028e09da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67d27c098a1229b2020c6d36424e17ce028e09da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c99c0026305731b71c697a84d82818e28ad8aaaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c99c0026305731b71c697a84d82818e28ad8aaaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c99c0026305731b71c697a84d82818e28ad8aaaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c99c0026305731b71c697a84d82818e28ad8aaaf/comments", "author": null, "committer": null, "parents": [{"sha": "1400c8e5013a0901298b3adfeb9c5dbfcef2f494", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1400c8e5013a0901298b3adfeb9c5dbfcef2f494", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1400c8e5013a0901298b3adfeb9c5dbfcef2f494"}], "stats": {"total": 133, "additions": 80, "deletions": 53}, "files": [{"sha": "61b6bcd0048dd1c4f0e74cd543234d8fffbb9db7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -1,3 +1,14 @@\n+2011-05-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* langhooks.h (lang_hooks_for_types): Change global_bindings_p's return\n+\ttype to bool and adjust comment.\n+\t* fold-const.c (fold_range_test): Adjust call to global_bindings_p.\n+\t(fold_mathfn_compare): Remove calls to global_bindings_p.\n+\t(fold_inf_compare): Likewise.\n+\t* stor-layout.c (variable_size): Adjust call to global_bindings_p.\n+\t* c-tree.h (global_bindings_p): Adjust prototype.\n+\t* c-decl.c (global_bindings_p): Return bool and simplify.\n+\n 2011-05-07  Zdenek Dvorak  <ook@ucw.cz>\n \n \tPR tree-optimization/48837"}, {"sha": "b13e734c8096937de681f6901980b9a1b38812f0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -1,7 +1,11 @@\n+2011-05-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/gigi.h (global_bindings_p): Adjust prototype.\n+\t* gcc-interface/utils.c (global_bindings_p): Return bool and simplify.\n+\n 2011-05-05  Nathan Froyd  <froydnj@codesourcery.com>\n \n-\t* gcc-interface/trans.c (Case_Statement_to_gnu): Call\n-\tbuild_case_label.\n+\t* gcc-interface/trans.c (Case_Statement_to_gnu): Call build_case_label.\n \n 2011-05-05  Nathan Froyd  <froydnj@codesourcery.com>\n "}, {"sha": "c1f1217a59441d4c2d71715be6cb19e9b94cfa27", "filename": "gcc/ada/gcc-interface/gigi.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fgigi.h?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -422,8 +422,8 @@ extern GTY(()) tree gnat_raise_decls_ext[(int) LAST_REASON_CODE + 1];\n /* Routines expected by the gcc back-end. They must have exactly the same\n    prototype and names as below.  */\n \n-/* Returns nonzero if we are currently in the global binding level.  */\n-extern int global_bindings_p (void);\n+/* Return true if we are in the global binding level.  */\n+extern bool global_bindings_p (void);\n \n /* Enter and exit a new binding level.  */\n extern void gnat_pushlevel (void);"}, {"sha": "cfa58b939978f4bc5e8407046815c67ccb8dc57a", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -365,12 +365,12 @@ build_dummy_unc_pointer_types (Entity_Id gnat_desig_type, tree gnu_desig_type)\n   TYPE_OBJECT_RECORD_TYPE (gnu_desig_type) = gnu_object_type;\n }\n \f\n-/* Return nonzero if we are currently in the global binding level.  */\n+/* Return true if we are in the global binding level.  */\n \n-int\n+bool\n global_bindings_p (void)\n {\n-  return ((force_global || !current_function_decl) ? -1 : 0);\n+  return force_global || current_function_decl == NULL_TREE;\n }\n \n /* Enter a new binding level.  */"}, {"sha": "6e359a9f41ec233e32c5ad9f5c8be6033e366363", "filename": "gcc/c-decl.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -845,14 +845,12 @@ objc_mark_locals_volatile (void *enclosing_blk)\n     }\n }\n \n-/* Nonzero if we are currently in file scope.  */\n+/* Return true if we are in the global binding level.  */\n \n-int\n+bool\n global_bindings_p (void)\n {\n-  return (current_scope == file_scope && !c_override_global_bindings_to_false\n-\t  ? -1\n-\t  : 0);\n+  return current_scope == file_scope && !c_override_global_bindings_to_false;\n }\n \n void"}, {"sha": "e2b42bf83177b4bc19d586795aa2454798a3abb9", "filename": "gcc/c-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -413,7 +413,7 @@ extern struct obstack parser_obstack;\n extern tree c_break_label;\n extern tree c_cont_label;\n \n-extern int global_bindings_p (void);\n+extern bool global_bindings_p (void);\n extern void push_scope (void);\n extern tree pop_scope (void);\n extern void c_bindings_start_stmt_expr (struct c_spot_bindings *);"}, {"sha": "f56be1d5744e3005592a8b97e7f678901a8837c0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -1,3 +1,8 @@\n+2011-05-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* name-lookup.h (global_bindings_p): Adjust prototype.\n+\t* name-lookup.c (global_bindings_p): Return bool.\n+\n 2011-05-06  Jason Merrill  <jason@redhat.com>\n \n \t* decl.c (stabilize_save_expr_r): Set *walk_subtrees as"}, {"sha": "3d1c64d85cf73e2e1e652fd7c763e846efbd53a5", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -1576,9 +1576,9 @@ maybe_push_cleanup_level (tree type)\n     }\n }\n \n-/* Nonzero if we are currently in the global binding level.  */\n+/* Return true if we are in the global binding level.  */\n \n-int\n+bool\n global_bindings_p (void)\n {\n   return global_scope_p (current_binding_level);"}, {"sha": "4bf253f3680fbac3385f534554c6572ce78c9024", "filename": "gcc/cp/name-lookup.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fcp%2Fname-lookup.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fcp%2Fname-lookup.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.h?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -290,7 +290,7 @@ extern GTY(()) tree global_type_node;\n \n extern cxx_scope *leave_scope (void);\n extern bool kept_level_p (void);\n-extern int global_bindings_p (void);\n+extern bool global_bindings_p (void);\n extern bool toplevel_bindings_p\t(void);\n extern bool namespace_bindings_p (void);\n extern bool template_parm_scope_p (void);"}, {"sha": "a42921b685873b4cd8dbbf41682fb720796e4a5e", "filename": "gcc/fold-const.c", "status": "modified", "additions": 6, "deletions": 19, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -4849,8 +4849,8 @@ fold_range_test (location_t loc, enum tree_code code, tree type,\n \t\t\t   ? TRUTH_AND_EXPR : TRUTH_OR_EXPR,\n \t\t\t   type, op0, op1);\n \n-      else if (lang_hooks.decls.global_bindings_p () == 0\n-\t       && ! CONTAINS_PLACEHOLDER_P (lhs))\n+      else if (!lang_hooks.decls.global_bindings_p ()\n+\t       && !CONTAINS_PLACEHOLDER_P (lhs))\n \t{\n \t  tree common = save_expr (lhs);\n \n@@ -6148,10 +6148,6 @@ fold_mathfn_compare (location_t loc,\n \t\t\t\t    build_real (TREE_TYPE (arg), dconst0));\n \n \t      /* sqrt(x) < y is x >= 0 && x != +Inf, when y is large.  */\n-\t      if (lang_hooks.decls.global_bindings_p () != 0\n-\t\t  || CONTAINS_PLACEHOLDER_P (arg))\n-\t\treturn NULL_TREE;\n-\n \t      arg = save_expr (arg);\n \t      return fold_build2_loc (loc, TRUTH_ANDIF_EXPR, type,\n \t\t\t\t  fold_build2_loc (loc, GE_EXPR, type, arg,\n@@ -6168,18 +6164,14 @@ fold_mathfn_compare (location_t loc,\n \t\t\t\tbuild_real (TREE_TYPE (arg), c2));\n \n \t  /* sqrt(x) < c is the same as x >= 0 && x < c*c.  */\n-\t  if (lang_hooks.decls.global_bindings_p () == 0\n-\t      && ! CONTAINS_PLACEHOLDER_P (arg))\n-\t    {\n-\t      arg = save_expr (arg);\n-\t      return fold_build2_loc (loc, TRUTH_ANDIF_EXPR, type,\n+\t  arg = save_expr (arg);\n+\t  return fold_build2_loc (loc, TRUTH_ANDIF_EXPR, type,\n \t\t\t\t  fold_build2_loc (loc, GE_EXPR, type, arg,\n \t\t\t\t\t       build_real (TREE_TYPE (arg),\n \t\t\t\t\t\t\t   dconst0)),\n \t\t\t\t  fold_build2_loc (loc, code, type, arg,\n \t\t\t\t\t       build_real (TREE_TYPE (arg),\n \t\t\t\t\t\t\t   c2)));\n-\t    }\n \t}\n     }\n \n@@ -6226,13 +6218,8 @@ fold_inf_compare (location_t loc, enum tree_code code, tree type,\n \treturn omit_one_operand_loc (loc, type, integer_one_node, arg0);\n \n       /* x <= +Inf is the same as x == x, i.e. isfinite(x).  */\n-      if (lang_hooks.decls.global_bindings_p () == 0\n-\t  && ! CONTAINS_PLACEHOLDER_P (arg0))\n-\t{\n-\t  arg0 = save_expr (arg0);\n-\t  return fold_build2_loc (loc, EQ_EXPR, type, arg0, arg0);\n-\t}\n-      break;\n+      arg0 = save_expr (arg0);\n+      return fold_build2_loc (loc, EQ_EXPR, type, arg0, arg0);\n \n     case EQ_EXPR:\n     case GE_EXPR:"}, {"sha": "162da2e5c986361a04b360c4f881cb7e083eecba", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -1,3 +1,7 @@\n+2011-05-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* f95-lang.c (global_bindings_p): Return bool and simplify.\n+\n 2011-05-07  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/18918"}, {"sha": "e247d70a6c014220f95702033b0a5d7e58f4c17e", "filename": "gcc/fortran/f95-lang.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Ffortran%2Ff95-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Ffortran%2Ff95-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ff95-lang.c?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -91,7 +91,7 @@ static void gfc_finish (void);\n static void gfc_write_global_declarations (void);\n static void gfc_print_identifier (FILE *, tree, int);\n void do_function_end (void);\n-int global_bindings_p (void);\n+bool global_bindings_p (void);\n static void clear_binding_stack (void);\n static void gfc_be_parse_file (void);\n static alias_set_type gfc_get_alias_set (tree);\n@@ -373,12 +373,12 @@ static GTY(()) struct binding_level *global_binding_level;\n static struct binding_level clear_binding_level = { NULL, NULL, NULL };\n \n \n-/* Return nonzero if we are currently in the global binding level.  */\n+/* Return true if we are in the global binding level.  */\n \n-int\n+bool\n global_bindings_p (void)\n {\n-  return current_binding_level == global_binding_level ? -1 : 0;\n+  return current_binding_level == global_binding_level;\n }\n \n tree"}, {"sha": "4136702481bca89e4bc02a4aff9cf1abd03c354d", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -1,3 +1,7 @@\n+2011-05-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* go-lang.c (global_bindings_p): Return bool and simplify.\n+\n 2011-05-05  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* go-gcc.cc (Gcc_backend::switch_statement): Call build_case_label."}, {"sha": "84c7f8d159158b8254fe4fb20a6fcb0ce39e2821", "filename": "gcc/go/go-lang.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fgo%2Fgo-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fgo%2Fgo-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-lang.c?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -308,10 +308,12 @@ go_langhook_builtin_function (tree decl)\n   return decl;\n }\n \n-static int\n+/* Return true if we are in the global binding level.  */\n+\n+static bool\n go_langhook_global_bindings_p (void)\n {\n-  return current_function_decl == NULL ? 1 : 0;\n+  return current_function_decl == NULL_TREE;\n }\n \n /* Push a declaration into the current binding level.  We can't"}, {"sha": "bdc0aa7bdaf337a4fc1b62a7fdefcaa8745da76a", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -1,3 +1,8 @@\n+2011-05-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* java-tree.h (global_bindings_p): Adjust prototype.\n+\t* decl.c (global_bindings_p): Return bool.\n+\n 2011-05-05  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* expr.c (expand_java_switch): Call build_case_label."}, {"sha": "47b4ebe8de97ac850588689ae07dbc95f9cc8de1", "filename": "gcc/java/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -1302,9 +1302,9 @@ pushdecl_function_level (tree x)\n   return t;\n }\n \n-/* Nonzero if we are currently in the global binding level.  */\n+/* Return true if we are in the global binding level.  */\n \n-int\n+bool\n global_bindings_p (void)\n {\n   return current_binding_level == global_binding_level;"}, {"sha": "7743c6e5c82bf418c6f8d862b3d89238a1d88116", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -983,7 +983,7 @@ extern tree ident_subst (const char *, int, const char *, int, int,\n \t\t\t const char *);\n extern tree identifier_subst (const tree, const char *, int, int,\n \t\t\t      const char *);\n-extern int global_bindings_p (void);\n+extern bool global_bindings_p (void);\n extern tree getdecls (void);\n extern void pushlevel (int);\n extern tree poplevel (int,int, int);"}, {"sha": "89e74f936813135110c58ec8d6c1bd3adee02887", "filename": "gcc/langhooks.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -148,9 +148,10 @@ struct lang_hooks_for_types\n \n struct lang_hooks_for_decls\n {\n-  /* Returns nonzero if we are in the global binding level.  Ada\n-     returns -1 for an undocumented reason used in stor-layout.c.  */\n-  int (*global_bindings_p) (void);\n+  /* Return true if we are in the global binding level.  This hook is really\n+     needed only if the language supports variable-sized types at the global\n+     level, i.e. declared outside subprograms.  */\n+  bool (*global_bindings_p) (void);\n \n   /* Function to add a decl to the current scope level.  Takes one\n      argument, a decl to add.  Returns that decl, or, if the same"}, {"sha": "46779ff192bc1ddf7731731337c1f8c83fa005e0", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -1,3 +1,7 @@\n+2011-05-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* lto-lang.c (global_bindings_p): Return bool.\n+\n 2011-05-07  Jan Hubicka  <jh@suse.cz>\n \n \t* lto.c (lto_materialize_function): Use cgraph_function_with_gimple_body_p."}, {"sha": "5872928be0ddb03181deaebbcba3cb12bdaf33ed", "filename": "gcc/lto/lto-lang.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Flto%2Flto-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Flto%2Flto-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-lang.c?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -938,8 +938,10 @@ lto_type_for_mode (enum machine_mode mode, int unsigned_p)\n   return NULL_TREE;\n }\n \n-static int\n-lto_global_bindings_p (void) \n+/* Return true if we are in the global binding level.  */\n+\n+static bool\n+lto_global_bindings_p (void)\n {\n   return cfun == NULL;\n }"}, {"sha": "12ccd803999f47e6182b9f8c0f4221a0ba3ca53e", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99c0026305731b71c697a84d82818e28ad8aaaf/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=c99c0026305731b71c697a84d82818e28ad8aaaf", "patch": "@@ -89,10 +89,10 @@ variable_size (tree size)\n   if (CONTAINS_PLACEHOLDER_P (size))\n     return self_referential_size (size);\n \n-  /* If the language-processor is to take responsibility for variable-sized\n-     items (e.g., languages which have elaboration procedures like Ada),\n-     just return SIZE unchanged.  */\n-  if (lang_hooks.decls.global_bindings_p () < 0)\n+  /* If we are in the global binding level, we can't make a SAVE_EXPR\n+     since it may end up being shared across functions, so it is up\n+     to the front-end to deal with this case.  */\n+  if (lang_hooks.decls.global_bindings_p ())\n     return size;\n \n   return save_expr (size);"}]}