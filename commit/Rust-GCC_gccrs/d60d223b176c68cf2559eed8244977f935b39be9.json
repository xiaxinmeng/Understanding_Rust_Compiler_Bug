{"sha": "d60d223b176c68cf2559eed8244977f935b39be9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYwZDIyM2IxNzZjNjhjZjI1NTllZWQ4MjQ0OTc3ZjkzNWIzOWJlOQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-07-27T15:07:40Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-07-27T15:07:40Z"}, "message": "class.c (finish_struct_1): When copying the primary base's VFIELD, make sure we find it is at offset zero.\n\ncp:\n\t* class.c (finish_struct_1): When copying the primary base's\n\tVFIELD, make sure we find it is at offset zero.\ntestsuite:\n\t* g++.dg/abi/vbase8-10.C: New test.\n\nFrom-SVN: r44421", "tree": {"sha": "9e995882baa499a8e21aa023f3eb814b35513a47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e995882baa499a8e21aa023f3eb814b35513a47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d60d223b176c68cf2559eed8244977f935b39be9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d60d223b176c68cf2559eed8244977f935b39be9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d60d223b176c68cf2559eed8244977f935b39be9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d60d223b176c68cf2559eed8244977f935b39be9/comments", "author": null, "committer": null, "parents": [{"sha": "08ecdbebab368105c958935c47f6fde5d225e41a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08ecdbebab368105c958935c47f6fde5d225e41a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08ecdbebab368105c958935c47f6fde5d225e41a"}], "stats": {"total": 110, "additions": 100, "deletions": 10}, "files": [{"sha": "361b20dd6cadaddb8c7b56c7e0a4af12700e4f2a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60d223b176c68cf2559eed8244977f935b39be9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60d223b176c68cf2559eed8244977f935b39be9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d60d223b176c68cf2559eed8244977f935b39be9", "patch": "@@ -1,10 +1,16 @@\n+2001-07-27  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* class.c (finish_struct_1): When copying the primary base's\n+\tVFIELD, make sure we find it is at offset zero.\n+\n 2001-07-26  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \t* pt.c (tsubst_template_parms): Call maybe_fold_nontype_arg and\n \ttsubst_expr for default template arguments.\n \n 2001-07-26  Nathan Sidwell  <nathan@codesourcery.com>\n \n+\tPR c++/3621\n \t* spew.c (yylex): Only copy the token's lineno, if it is\n \tnon-zero.\n "}, {"sha": "18ade132d171943853653e4e747115a12e47ad68", "filename": "gcc/cp/class.c", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60d223b176c68cf2559eed8244977f935b39be9/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60d223b176c68cf2559eed8244977f935b39be9/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=d60d223b176c68cf2559eed8244977f935b39be9", "patch": "@@ -5092,20 +5092,25 @@ finish_struct_1 (t)\n \n   /* Make sure that we get our own copy of the vfield FIELD_DECL.  */\n   vfield = TYPE_VFIELD (t);\n-  if (vfield != NULL_TREE\n-      && DECL_FIELD_CONTEXT (vfield) != t)\n-    {\n-      tree binfo = get_binfo (DECL_FIELD_CONTEXT (vfield), t, 0);\n-\n+  if (vfield && CLASSTYPE_HAS_PRIMARY_BASE_P (t))\n+    {\n+      tree primary = CLASSTYPE_PRIMARY_BINFO (t);\n+\n+      my_friendly_assert (same_type_p (DECL_FIELD_CONTEXT (vfield),\n+\t\t\t\t       BINFO_TYPE (primary)),\n+\t\t\t  20010726);\n+      /* The vtable better be at the start. */\n+      my_friendly_assert (integer_zerop (DECL_FIELD_OFFSET (vfield)),\n+\t\t\t  20010726);\n+      my_friendly_assert (integer_zerop (BINFO_OFFSET (primary)),\n+\t\t\t  20010726);\n+      \n       vfield = copy_decl (vfield);\n-\n       DECL_FIELD_CONTEXT (vfield) = t;\n-      DECL_FIELD_OFFSET (vfield)\n-\t= size_binop (PLUS_EXPR,\n-\t\t      BINFO_OFFSET (binfo),\n-\t\t      DECL_FIELD_OFFSET (vfield));\n       TYPE_VFIELD (t) = vfield;\n     }\n+  else\n+    my_friendly_assert (!vfield || DECL_FIELD_CONTEXT (vfield) == t, 20010726);\n \n   overridden_virtuals \n     = modify_all_vtables (t, &vfuns, nreverse (overridden_virtuals));"}, {"sha": "4753dc2f50cd5f00faf95fc5c4a3344588dadecd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60d223b176c68cf2559eed8244977f935b39be9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60d223b176c68cf2559eed8244977f935b39be9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d60d223b176c68cf2559eed8244977f935b39be9", "patch": "@@ -1,3 +1,7 @@\n+2001-07-27  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.dg/abi/vbase8-10.C: New test.\n+\n 2001-07-27  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* lib/g++.exp (g++_set_ld_library_path): Renamed to"}, {"sha": "81896ed64e78cd12ac0cf2fefc0eb44e272dd7bb", "filename": "gcc/testsuite/g++.dg/abi/vbase8-10.C", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60d223b176c68cf2559eed8244977f935b39be9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvbase8-10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60d223b176c68cf2559eed8244977f935b39be9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvbase8-10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fvbase8-10.C?ref=d60d223b176c68cf2559eed8244977f935b39be9", "patch": "@@ -0,0 +1,75 @@\n+// { dg-options -w }\n+// { dg-do run }\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 26 Jul 2001 <nathan@codesourcery.com>\n+\n+// Origin stefan@space.twc.de\n+// Bug 3145 case 10. Horribly complicated class hierarchy\n+\n+class C0\n+{};\n+class C1\n+ :  public C0\n+{};\n+class C2\n+ :  public C1\n+ ,  virtual public C0\n+{};\n+class C3\n+ :  public C1\n+ ,  public C2\n+ ,  virtual public C0\n+{};\n+class C4\n+ :  virtual public C1\n+ ,  virtual public C0\n+ ,  virtual public C3\n+ ,  public C2\n+{};\n+class C5\n+ :  public C3\n+ ,  virtual public C0\n+ ,  virtual public C2\n+{};\n+class C6\n+ :  public C1\n+ ,  public C2\n+ ,  virtual public C5\n+ ,  virtual public C3\n+ ,  virtual public C0\n+{};\n+class C7\n+ :  public C1\n+ ,  virtual public C5\n+ ,  virtual public C4\n+ ,  virtual public C2\n+ ,  virtual public C0\n+ ,  virtual public C6\n+{};\n+class C8\n+ :  virtual public C4\n+ ,  public C3\n+ ,  public C0\n+ ,  virtual public C7\n+ ,  virtual public C6\n+{};\n+class C9\n+ :  virtual public C0\n+ ,  public C4\n+ ,  public C8\n+ ,  public C1\n+ ,  public C6\n+{};\n+main() {\n+  C0 c0;\n+  C1 c1;\n+  C2 c2;\n+  C3 c3;\n+  C4 c4;\n+  C5 c5;\n+  C6 c6;\n+  C7 c7;\n+  C8 c8;\n+  C9 c9;\n+}"}]}