{"sha": "8adcc78b5fcd47320c710bfe768f1cee9d094e1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFkY2M3OGI1ZmNkNDczMjBjNzEwYmZlNzY4ZjFjZWU5ZDA5NGUxZA==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2014-01-24T21:32:38Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2014-01-24T21:32:38Z"}, "message": "rs6000.c (rs6000_expand_vec_perm_const_1): Remove correction for little endian...\n\n2014-01-24  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* config/rs6000/rs6000.c (rs6000_expand_vec_perm_const_1): Remove\n\tcorrection for little endian...\n\t* config/rs6000/vsx.md (vsx_xxpermdi2_<mode>_1): ...and move it to\n\there.\n\nFrom-SVN: r207062", "tree": {"sha": "230877160c5cd25787f9bf9bc02743f377e1b1bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/230877160c5cd25787f9bf9bc02743f377e1b1bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8adcc78b5fcd47320c710bfe768f1cee9d094e1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8adcc78b5fcd47320c710bfe768f1cee9d094e1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8adcc78b5fcd47320c710bfe768f1cee9d094e1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8adcc78b5fcd47320c710bfe768f1cee9d094e1d/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d75049621434125a972a3fc738437d33d35ca8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d75049621434125a972a3fc738437d33d35ca8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d75049621434125a972a3fc738437d33d35ca8a"}], "stats": {"total": 50, "additions": 32, "deletions": 18}, "files": [{"sha": "49bf95f5f2b4d8d3348902eddea5aba817b5e045", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8adcc78b5fcd47320c710bfe768f1cee9d094e1d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8adcc78b5fcd47320c710bfe768f1cee9d094e1d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8adcc78b5fcd47320c710bfe768f1cee9d094e1d", "patch": "@@ -1,3 +1,10 @@\n+2014-01-24  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_expand_vec_perm_const_1): Remove\n+\tcorrection for little endian...\n+\t* config/rs6000/vsx.md (vsx_xxpermdi2_<mode>_1): ...and move it to\n+\there.\n+\n 2014-01-24  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/59919"}, {"sha": "801b9dc04cf0bc6d234d7073dcf1bbf7363d5832", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8adcc78b5fcd47320c710bfe768f1cee9d094e1d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8adcc78b5fcd47320c710bfe768f1cee9d094e1d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=8adcc78b5fcd47320c710bfe768f1cee9d094e1d", "patch": "@@ -30140,22 +30140,6 @@ rs6000_expand_vec_perm_const_1 (rtx target, rtx op0, rtx op1,\n       vmode = GET_MODE (target);\n       gcc_assert (GET_MODE_NUNITS (vmode) == 2);\n       dmode = mode_for_vector (GET_MODE_INNER (vmode), 4);\n-\n-      /* For little endian, swap operands and invert/swap selectors\n-\t to get the correct xxpermdi.  The operand swap sets up the\n-\t inputs as a little endian array.  The selectors are swapped\n-\t because they are defined to use big endian ordering.  The\n-\t selectors are inverted to get the correct doublewords for\n-\t little endian ordering.  */\n-      if (!BYTES_BIG_ENDIAN)\n-\t{\n-\t  int n;\n-\t  perm0 = 3 - perm0;\n-\t  perm1 = 3 - perm1;\n-\t  n = perm0, perm0 = perm1, perm1 = n;\n-\t  x = op0, op0 = op1, op1 = x;\n-\t}\n-\n       x = gen_rtx_VEC_CONCAT (dmode, op0, op1);\n       v = gen_rtvec (2, GEN_INT (perm0), GEN_INT (perm1));\n       x = gen_rtx_VEC_SELECT (vmode, x, gen_rtx_PARALLEL (VOIDmode, v));"}, {"sha": "a63e34e0ff576c1ebb49be20840b2a0fc3500e87", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8adcc78b5fcd47320c710bfe768f1cee9d094e1d/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8adcc78b5fcd47320c710bfe768f1cee9d094e1d/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=8adcc78b5fcd47320c710bfe768f1cee9d094e1d", "patch": "@@ -1634,9 +1634,32 @@\n \t\t     (match_operand 4 \"const_2_to_3_operand\" \"\")])))]\n   \"VECTOR_MEM_VSX_P (<MODE>mode)\"\n {\n-  int mask = (INTVAL (operands[3]) << 1) | (INTVAL (operands[4]) - 2);\n+  int op3, op4, mask;\n+\n+  /* For little endian, swap operands and invert/swap selectors\n+     to get the correct xxpermdi.  The operand swap sets up the\n+     inputs as a little endian array.  The selectors are swapped\n+     because they are defined to use big endian ordering.  The\n+     selectors are inverted to get the correct doublewords for\n+     little endian ordering.  */\n+  if (BYTES_BIG_ENDIAN)\n+    {\n+      op3 = INTVAL (operands[3]);\n+      op4 = INTVAL (operands[4]);\n+    }\n+  else\n+    {\n+      op3 = 3 - INTVAL (operands[4]);\n+      op4 = 3 - INTVAL (operands[3]);\n+    }\n+\n+  mask = (op3 << 1) | (op4 - 2);\n   operands[3] = GEN_INT (mask);\n-  return \"xxpermdi %x0,%x1,%x2,%3\";\n+\n+  if (BYTES_BIG_ENDIAN)\n+    return \"xxpermdi %x0,%x1,%x2,%3\";\n+  else\n+    return \"xxpermdi %x0,%x2,%x1,%3\";\n }\n   [(set_attr \"type\" \"vecperm\")])\n "}]}