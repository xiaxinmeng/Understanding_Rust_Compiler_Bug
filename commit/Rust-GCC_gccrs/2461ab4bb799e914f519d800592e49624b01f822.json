{"sha": "2461ab4bb799e914f519d800592e49624b01f822", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ2MWFiNGJiNzk5ZTkxNGY1MTlkODAwNTkyZTQ5NjI0YjAxZjgyMg==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-10-10T11:18:57Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-10-10T11:18:57Z"}, "message": "In libobjc/: 2010-10-10 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn libobjc/:\n2010-10-10  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        * Makefile.in (OBJC_DEPRECATED_H): Added struct_objc_category.h,\n        struct_objc_ivar.h, struct_objc_ivar_list.h, struct_objc_method.h,\n        struct_objc_method_list.h, struct_objc_module.h,\n        struct_objc_protocol_list.h, struct_objc_symtab.h.\n        * objc/deprecated/struct_objc_category.h: New.\n        * objc/deprecated/struct_objc_ivar.h: New.\n        * objc/deprecated/struct_objc_ivar_list.h: New.\n        * objc/deprecated/struct_objc_method.h: New.\n        * objc/deprecated/struct_objc_method_list.h: New.\n        * objc/deprecated/struct_objc_module.h: New.\n        * objc/deprecated/struct_objc_protocol_list.h: New.\n        * objc/deprecated/struct_objc_symtab.h: New.\n        * objc/deprecated/struct_objc_static_instances.h: New.\n        * objc/objc-api.h: Definitions of deprecated structures moved into\n        the above header fragment files in objc/deprecated/.  Include the\n        files instead of definition the structures here.  Updated\n        comments.\n        * objc/runtime.h: Updated comments.  Do not include objc-api.h.\n        (objc_set_enumeration_mutation_handler): Renamed to\n        objc_setEnumerationMutationHandler.\n        * objc-foreach.c (objc_set_enumeration_mutation_handler): Renamed\n        to objc_setEnumerationMutationHandler.\n        * objc/objc-exception.h (objc_set_exception_matcher): Renamed to\n        objc_setExceptionMatcher.\n        (objc_set_uncaught_exception_handler): Renamed to\n        objc_setUncaughtExceptionHandler.\n        * exception.c: Same changes.\n\nFrom-SVN: r165249", "tree": {"sha": "50f7678e246b076ee7bac19c6059eedeb35e3e3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50f7678e246b076ee7bac19c6059eedeb35e3e3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2461ab4bb799e914f519d800592e49624b01f822", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2461ab4bb799e914f519d800592e49624b01f822", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2461ab4bb799e914f519d800592e49624b01f822", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2461ab4bb799e914f519d800592e49624b01f822/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "32af57e2269904ec2a56a9918f8a054e60aa5ef4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32af57e2269904ec2a56a9918f8a054e60aa5ef4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32af57e2269904ec2a56a9918f8a054e60aa5ef4"}], "stats": {"total": 407, "additions": 240, "deletions": 167}, "files": [{"sha": "99f09c03ca576c739bff4402bf7275d1472289e6", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=2461ab4bb799e914f519d800592e49624b01f822", "patch": "@@ -1,3 +1,33 @@\n+2010-10-10  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* Makefile.in (OBJC_DEPRECATED_H): Added struct_objc_category.h,\n+\tstruct_objc_ivar.h, struct_objc_ivar_list.h, struct_objc_method.h,\n+\tstruct_objc_method_list.h, struct_objc_module.h,\n+\tstruct_objc_protocol_list.h, struct_objc_symtab.h.\n+\t* objc/deprecated/struct_objc_category.h: New.\n+\t* objc/deprecated/struct_objc_ivar.h: New.\n+\t* objc/deprecated/struct_objc_ivar_list.h: New.\n+\t* objc/deprecated/struct_objc_method.h: New.\n+\t* objc/deprecated/struct_objc_method_list.h: New.\n+\t* objc/deprecated/struct_objc_module.h: New.\n+\t* objc/deprecated/struct_objc_protocol_list.h: New.\n+\t* objc/deprecated/struct_objc_symtab.h: New.\n+\t* objc/deprecated/struct_objc_static_instances.h: New.\n+\t* objc/objc-api.h: Definitions of deprecated structures moved into\n+\tthe above header fragment files in objc/deprecated/.  Include the\n+\tfiles instead of definition the structures here.  Updated\n+\tcomments.\n+\t* objc/runtime.h: Updated comments.  Do not include objc-api.h.\n+\t(objc_set_enumeration_mutation_handler): Renamed to\n+\tobjc_setEnumerationMutationHandler.\n+\t* objc-foreach.c (objc_set_enumeration_mutation_handler): Renamed\n+\tto objc_setEnumerationMutationHandler.\n+\t* objc/objc-exception.h (objc_set_exception_matcher): Renamed to\n+\tobjc_setExceptionMatcher.\n+\t(objc_set_uncaught_exception_handler): Renamed to\n+\tobjc_setUncaughtExceptionHandler.\n+\t* exception.c: Same changes.\n+\n 2010-10-10  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc-sync.c: Include objc-private/common.h."}, {"sha": "aeb68923a3eb24f1e533bf1c51634b76bf3040a7", "filename": "libobjc/Makefile.in", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FMakefile.in?ref=2461ab4bb799e914f519d800592e49624b01f822", "patch": "@@ -142,9 +142,17 @@ OBJC_DEPRECATED_H = \\\n   objc_unexpected_exception.h \\\n   objc_valloc.h \\\n   sarray.h \\\n+  struct_objc_category.h \\\n   struct_objc_class.h \\\n+  struct_objc_ivar.h \\\n+  struct_objc_ivar_list.h \\\n+  struct_objc_method.h \\\n+  struct_objc_method_list.h \\\n+  struct_objc_module.h \\\n   struct_objc_protocol.h \\\n+  struct_objc_protocol_list.h \\\n   struct_objc_selector.h \\\n+  struct_objc_symtab.h \\\n   typedstream.h \n \n # Objective-C source files to compile"}, {"sha": "a221a3e77e30fb70878e10d0ad8d0ccc6eefa897", "filename": "libobjc/exception.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fexception.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fexception.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fexception.c?ref=2461ab4bb799e914f519d800592e49624b01f822", "patch": "@@ -69,7 +69,7 @@ static objc_exception_matcher\n __objc_exception_matcher = is_kind_of_exception_matcher;\n \n objc_exception_matcher\n-objc_set_exception_matcher (objc_exception_matcher new_matcher)\n+objc_setExceptionMatcher (objc_exception_matcher new_matcher)\n {\n   objc_exception_matcher old_matcher = __objc_exception_matcher;\n   __objc_exception_matcher = new_matcher;\n@@ -81,8 +81,8 @@ static objc_uncaught_exception_handler\n __objc_uncaught_exception_handler = NULL;\n \n objc_uncaught_exception_handler\n-objc_set_uncaught_exception_handler (objc_uncaught_exception_handler \n-\t\t\t\t     new_handler)\n+objc_setUncaughtExceptionHandler (objc_uncaught_exception_handler \n+\t\t\t\t  new_handler)\n {\n   objc_uncaught_exception_handler old_handler \n     = __objc_uncaught_exception_handler;"}, {"sha": "047f0cbbf44583ade2617326031abae23afb0df4", "filename": "libobjc/objc-foreach.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc-foreach.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc-foreach.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc-foreach.c?ref=2461ab4bb799e914f519d800592e49624b01f822", "patch": "@@ -35,7 +35,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n static void (*__objc_enumeration_mutation_handler)(id) = NULL;\n \n void\n-objc_set_enumeration_mutation_handler (void (*handler)(id))\n+objc_setEnumerationMutationHandler (void (*handler)(id))\n {\n   __objc_enumeration_mutation_handler = handler;\n }"}, {"sha": "2b7a74bc9d776e68d1997ef0a8c91baf38c0e9d9", "filename": "libobjc/objc/deprecated/struct_objc_category.h", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_category.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_category.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_category.h?ref=2461ab4bb799e914f519d800592e49624b01f822", "patch": "@@ -0,0 +1,21 @@\n+/*\n+** The compiler generates one of these structures for each category.  A class\n+** may have many categories and contain both instance and factory methods.  \n+*/\n+typedef struct objc_category {\n+  const char*   category_name;                /* Name of the category.  Name\n+                                                contained in the () of the\n+                                                category definition. */\n+  const char*   class_name;                   /* Name of the class to which\n+                                                the category belongs. */\n+  MethodList_t  instance_methods;             /* Linked list of instance\n+                                                methods defined in the \n+                                                category. NULL indicates no\n+                                                instance methods defined. */\n+  MethodList_t  class_methods;                /* Linked list of factory \n+                                                methods defined in the\n+                                                category.  NULL indicates no\n+                                                class methods defined. */\n+  struct objc_protocol_list *protocols;\t      /* List of Protocols \n+\t\t\t\t\t         conformed to */\n+} Category, *Category_t;"}, {"sha": "57170ad1160328cd0e4e3afb257cd4f4d48718cb", "filename": "libobjc/objc/deprecated/struct_objc_ivar.h", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_ivar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_ivar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_ivar.h?ref=2461ab4bb799e914f519d800592e49624b01f822", "patch": "@@ -0,0 +1,15 @@\n+/*\n+** The compiler generates one of these structures for a class that has\n+** instance variables defined in its specification. \n+*/\n+typedef struct objc_ivar {\n+    const char* ivar_name;                      /* Name of the instance\n+                                                  variable as entered in the\n+                                                  class definition. */\n+    const char* ivar_type;                      /* Description of the Ivar's\n+                                                  type.  Useful for \n+                                                  debuggers. */\n+    int        ivar_offset;                    /* Byte offset from the base \n+                                                  address of the instance \n+                                                  structure to the variable. */\n+} *Ivar_t;"}, {"sha": "8f5051fb9675f601ee4822da1196c5d822479770", "filename": "libobjc/objc/deprecated/struct_objc_ivar_list.h", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_ivar_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_ivar_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_ivar_list.h?ref=2461ab4bb799e914f519d800592e49624b01f822", "patch": "@@ -0,0 +1,10 @@\n+typedef struct objc_ivar_list {\n+  int   ivar_count;                             /* Number of structures (Ivar) \n+                                                  contained in the list.  One\n+                                                  structure per instance \n+                                                  variable defined in the\n+                                                  class. */\n+  struct objc_ivar ivar_list[1];               /* Variable length \n+                                                  structure. */\n+} IvarList, *IvarList_t;\n+"}, {"sha": "10a3b3bf7fc2b1aac969b5c97610e0fe9f50c998", "filename": "libobjc/objc/deprecated/struct_objc_method.h", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_method.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_method.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_method.h?ref=2461ab4bb799e914f519d800592e49624b01f822", "patch": "@@ -0,0 +1,21 @@\n+/*\n+** The compiler generates one (or more) of these structures for a class that\n+** has methods defined in its specification. \n+** \n+** The implementation of a class can be broken into separate pieces in a file\n+** and categories can break them across modules. To handle this problem is a\n+** singly linked list of methods. \n+*/\n+typedef struct objc_method {\n+  SEL         method_name;                  /* This variable is the method's \n+                                               name.  It is a char*. \n+                                               The unique integer passed to \n+                                               objc_msg_send is a char* too.  \n+                                               It is compared against \n+                                               method_name using strcmp. */\n+  const char* method_types;                 /* Description of the method's\n+                                               parameter list.  Useful for\n+                                               debuggers. */\n+  IMP         method_imp;                   /* Address of the method in the \n+                                               executable. */\n+} Method, *Method_t;"}, {"sha": "5156cabbf2d263aec5c3d4719fb88f7d63da2d13", "filename": "libobjc/objc/deprecated/struct_objc_method_list.h", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_method_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_method_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_method_list.h?ref=2461ab4bb799e914f519d800592e49624b01f822", "patch": "@@ -0,0 +1,9 @@\n+typedef struct objc_method_list {\n+  struct objc_method_list*  method_next;    /* This variable is used to link \n+                                               a method list to another.  It \n+                                               is a singly linked list. */\n+  int            method_count;              /* Number of methods defined in \n+                                               this structure. */\n+  Method method_list[1];                    /* Variable length \n+                                               structure. */\n+} MethodList, *MethodList_t;"}, {"sha": "57950851faef632efe0fc396fb3f02ec04758744", "filename": "libobjc/objc/deprecated/struct_objc_module.h", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_module.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_module.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_module.h?ref=2461ab4bb799e914f519d800592e49624b01f822", "patch": "@@ -0,0 +1,24 @@\n+/*\n+** The compiler generates one of these structures for each module that\n+** composes the executable (eg main.m).  \n+** \n+** This data structure is the root of the definition tree for the module.  \n+** \n+** A collect program runs between ld stages and creates a ObjC ctor array. \n+** That array holds a pointer to each module structure of the executable. \n+*/\n+typedef struct objc_module {\n+  unsigned long version; /* Version of the Module data structure.  */\n+  unsigned long size;    /* sizeof(Module) according to the compiler -\n+\t\t\t    only used to sanity check that it matches\n+\t\t\t    sizeof(Module) according to the\n+\t\t\t    runtime.  */\n+  const char* name;      /* Name of the file used to compile the\n+\t\t\t    module - not set by modern compilers for\n+\t\t\t    security reasons.  */\n+  Symtab_t    symtab;    /* Pointer to the Symtab of the module.  The\n+\t\t\t    Symtab holds an array of pointers to the\n+\t\t\t    classes and categories defined in the\n+\t\t\t    module. */\n+} Module, *Module_t;\n+"}, {"sha": "5e5788b503977691b37ef609a270a53abb23633c", "filename": "libobjc/objc/deprecated/struct_objc_protocol_list.h", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_protocol_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_protocol_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_protocol_list.h?ref=2461ab4bb799e914f519d800592e49624b01f822", "patch": "@@ -0,0 +1,5 @@\n+struct objc_protocol_list {\n+  struct objc_protocol_list *next;\n+  size_t count;\n+  Protocol *list[1];\n+};"}, {"sha": "9d889bfc08c0c1753c6aac449c63da49dc1367f6", "filename": "libobjc/objc/deprecated/struct_objc_static_instances.h", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_static_instances.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_static_instances.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_static_instances.h?ref=2461ab4bb799e914f519d800592e49624b01f822", "patch": "@@ -0,0 +1,14 @@\n+/* For every class which happens to have statically allocated instances in\n+   this module, one OBJC_STATIC_INSTANCES is allocated by the compiler.\n+   INSTANCES is NULL terminated and points to all statically allocated\n+   instances of this class.  */\n+struct objc_static_instances\n+{\n+  char *class_name;\n+#ifdef __cplusplus\n+  id instances[1];\n+#else\n+  id instances[0];\n+#endif\n+};\n+"}, {"sha": "8e14d63ee345be661171dbfccd7bf9f0c9e9879e", "filename": "libobjc/objc/deprecated/struct_objc_symtab.h", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_symtab.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_symtab.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fdeprecated%2Fstruct_objc_symtab.h?ref=2461ab4bb799e914f519d800592e49624b01f822", "patch": "@@ -0,0 +1,23 @@\n+/* Whereas a Module (defined further down) is the root (typically) of a file,\n+   a Symtab is the root of the class and category definitions within the\n+   module.  \n+   \n+   A Symtab contains a variable length array of pointers to classes and\n+   categories  defined in the module.   */\n+typedef struct objc_symtab {\n+  unsigned long sel_ref_cnt;                     /* Unknown. */\n+  SEL        refs;                              /* Unknown. */\n+  unsigned short cls_def_cnt;                   /* Number of classes compiled\n+                                                  (defined) in the module. */\n+  unsigned short cat_def_cnt;                   /* Number of categories \n+                                                  compiled (defined) in the \n+                                                  module. */\n+\n+  void      *defs[1];                           /* Variable array of pointers.\n+                                                  cls_def_cnt of type Class \n+                                                  followed by cat_def_cnt of\n+                                                  type Category_t, followed\n+\t\t\t\t\t\t  by a NULL terminated array\n+\t\t\t\t\t\t  of objc_static_instances. */\n+} Symtab,   *Symtab_t;\n+"}, {"sha": "fb60d5911fd083b3e4613acda890f533b2927e8a", "filename": "libobjc/objc/objc-api.h", "status": "modified", "additions": 30, "deletions": 149, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fobjc-api.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fobjc-api.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fobjc-api.h?ref=2461ab4bb799e914f519d800592e49624b01f822", "patch": "@@ -23,10 +23,30 @@ a copy of the GCC Runtime Library Exception along with this program;\n see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n <http://www.gnu.org/licenses/>.  */\n \n-\n #ifndef __objc_api_INCLUDE_GNU\n #define __objc_api_INCLUDE_GNU\n \n+/*\n+  This file declares the \"traditional\" GNU Objective-C Runtime API.\n+  It is the API supported by older versions of the GNU Objective-C\n+  Runtime.  Include this file to use it.\n+\n+  This API is being replaced by the \"modern\" GNU Objective-C Runtime\n+  API, which is declared in objc/runtime.h.  The \"modern\" API is very\n+  similar to the API used by the modern Apple/NeXT runtime.\n+\n+  Because the two APIs have some conflicting definitions (in\n+  particular, Method and Category are defined differently) you should\n+  include either objc/objc-api.h (to use the traditional GNU\n+  Objective-C Runtime API) or objc/runtime.h (to use the modern GNU\n+  Objective-C Runtime API), but not both.\n+*/\n+/*\n+#ifdef __objc_runtime_INCLUDE_GNU\n+# error You can not include both objc/objc-api.h and objc/runtime.h.  Include objc/objc-api.h for the traditional GNU Objective-C Runtime API and objc/runtime.h for the modern one.\n+#endif\n+*/\n+\n #include \"objc.h\"\n #ifndef GNU_LIBOBJC_COMPILING_LIBOBJC_ITSELF\n # include \"deprecated/hash.h\"\n@@ -91,133 +111,14 @@ struct objc_method_description\n \n #include \"deprecated/objc_error.h\"\n \n-/* For every class which happens to have statically allocated instances in\n-   this module, one OBJC_STATIC_INSTANCES is allocated by the compiler.\n-   INSTANCES is NULL terminated and points to all statically allocated\n-   instances of this class.  */\n-struct objc_static_instances\n-{\n-  char *class_name;\n-#ifdef __cplusplus\n-  id instances[1];\n-#else\n-  id instances[0];\n-#endif\n-};\n-\n-/* Whereas a Module (defined further down) is the root (typically) of a file,\n-   a Symtab is the root of the class and category definitions within the\n-   module.  \n-   \n-   A Symtab contains a variable length array of pointers to classes and\n-   categories  defined in the module.   */\n-typedef struct objc_symtab {\n-  unsigned long sel_ref_cnt;                     /* Unknown. */\n-  SEL        refs;                              /* Unknown. */\n-  unsigned short cls_def_cnt;                   /* Number of classes compiled\n-                                                  (defined) in the module. */\n-  unsigned short cat_def_cnt;                   /* Number of categories \n-                                                  compiled (defined) in the \n-                                                  module. */\n-\n-  void      *defs[1];                           /* Variable array of pointers.\n-                                                  cls_def_cnt of type Class \n-                                                  followed by cat_def_cnt of\n-                                                  type Category_t, followed\n-\t\t\t\t\t\t  by a NULL terminated array\n-\t\t\t\t\t\t  of objc_static_instances. */\n-} Symtab,   *Symtab_t;\n-\n-\n-/*\n-** The compiler generates one of these structures for each module that\n-** composes the executable (eg main.m).  \n-** \n-** This data structure is the root of the definition tree for the module.  \n-** \n-** A collect program runs between ld stages and creates a ObjC ctor array. \n-** That array holds a pointer to each module structure of the executable. \n-*/\n-typedef struct objc_module {\n-  unsigned long version; /* Version of the Module data structure.  */\n-  unsigned long size;    /* sizeof(Module) according to the compiler -\n-\t\t\t    only used to sanity check that it matches\n-\t\t\t    sizeof(Module) according to the\n-\t\t\t    runtime.  */\n-  const char* name;      /* Name of the file used to compile the\n-\t\t\t    module - not set by modern compilers for\n-\t\t\t    security reasons.  */\n-  Symtab_t    symtab;    /* Pointer to the Symtab of the module.  The\n-\t\t\t    Symtab holds an array of pointers to the\n-\t\t\t    classes and categories defined in the\n-\t\t\t    module. */\n-} Module, *Module_t;\n-\n-\n-/*\n-** The compiler generates one of these structures for a class that has\n-** instance variables defined in its specification. \n-*/\n-typedef struct objc_ivar {\n-    const char* ivar_name;                      /* Name of the instance\n-                                                  variable as entered in the\n-                                                  class definition. */\n-    const char* ivar_type;                      /* Description of the Ivar's\n-                                                  type.  Useful for \n-                                                  debuggers. */\n-    int        ivar_offset;                    /* Byte offset from the base \n-                                                  address of the instance \n-                                                  structure to the variable. */\n-} *Ivar_t;\n-\n-typedef struct objc_ivar_list {\n-  int   ivar_count;                             /* Number of structures (Ivar) \n-                                                  contained in the list.  One\n-                                                  structure per instance \n-                                                  variable defined in the\n-                                                  class. */\n-  struct objc_ivar ivar_list[1];               /* Variable length \n-                                                  structure. */\n-} IvarList, *IvarList_t;\n-\n-\n-/*\n-** The compiler generates one (or more) of these structures for a class that\n-** has methods defined in its specification. \n-** \n-** The implementation of a class can be broken into separate pieces in a file\n-** and categories can break them across modules. To handle this problem is a\n-** singly linked list of methods. \n-*/\n-typedef struct objc_method {\n-  SEL         method_name;                  /* This variable is the method's \n-                                               name.  It is a char*. \n-                                               The unique integer passed to \n-                                               objc_msg_send is a char* too.  \n-                                               It is compared against \n-                                               method_name using strcmp. */\n-  const char* method_types;                 /* Description of the method's\n-                                               parameter list.  Useful for\n-                                               debuggers. */\n-  IMP         method_imp;                   /* Address of the method in the \n-                                               executable. */\n-} Method, *Method_t;\n-\n-typedef struct objc_method_list {\n-  struct objc_method_list*  method_next;    /* This variable is used to link \n-                                               a method list to another.  It \n-                                               is a singly linked list. */\n-  int            method_count;              /* Number of methods defined in \n-                                               this structure. */\n-  Method method_list[1];                    /* Variable length \n-                                               structure. */\n-} MethodList, *MethodList_t;\n-\n-struct objc_protocol_list {\n-  struct objc_protocol_list *next;\n-  size_t count;\n-  Protocol *list[1];\n-};\n+#include \"deprecated/struct_objc_static_instances.h\"\n+#include \"deprecated/struct_objc_symtab.h\"\n+#include \"deprecated/struct_objc_module.h\"\n+#include \"deprecated/struct_objc_ivar.h\"\n+#include \"deprecated/struct_objc_ivar_list.h\"\n+#include \"deprecated/struct_objc_method.h\"\n+#include \"deprecated/struct_objc_method_list.h\"\n+#include \"deprecated/struct_objc_protocol_list.h\"\n \n /*\n ** This is used to assure consistent access to the info field of \n@@ -266,27 +167,7 @@ struct objc_protocol_list {\n      (cls)->info >>= (HOST_BITS_PER_LONG/2); \\\n      __CLS_SETINFO(cls, (((unsigned long)num) << (HOST_BITS_PER_LONG/2))); })\n \n-/*\n-** The compiler generates one of these structures for each category.  A class\n-** may have many categories and contain both instance and factory methods.  \n-*/\n-typedef struct objc_category {\n-  const char*   category_name;                /* Name of the category.  Name\n-                                                contained in the () of the\n-                                                category definition. */\n-  const char*   class_name;                   /* Name of the class to which\n-                                                the category belongs. */\n-  MethodList_t  instance_methods;             /* Linked list of instance\n-                                                methods defined in the \n-                                                category. NULL indicates no\n-                                                instance methods defined. */\n-  MethodList_t  class_methods;                /* Linked list of factory \n-                                                methods defined in the\n-                                                category.  NULL indicates no\n-                                                class methods defined. */\n-  struct objc_protocol_list *protocols;\t      /* List of Protocols \n-\t\t\t\t\t         conformed to */\n-} Category, *Category_t;\n+#include \"deprecated/struct_objc_category.h\"\n \n /* We include message.h for compatibility with the old objc-api.h\n    which included the declarations currently in message.h.  The"}, {"sha": "d584014a28d9ca32147fd69efe7fe3d2e16318f7", "filename": "libobjc/objc/objc-exception.h", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fobjc-exception.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fobjc-exception.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fobjc-exception.h?ref=2461ab4bb799e914f519d800592e49624b01f822", "patch": "@@ -89,7 +89,7 @@ typedef int (*objc_exception_matcher)(Class catch_class, id exception);\n    multi-threaded environment because other threads may be trying to\n    invoke the exception matcher while you change it!  */\n objc_exception_matcher\n-objc_set_exception_matcher (objc_exception_matcher new_matcher);\n+objc_setExceptionMatcher (objc_exception_matcher new_matcher);\n \n \n /* An 'objc_uncaught_exception_handler' function is a function that\n@@ -103,12 +103,7 @@ typedef void (*objc_uncaught_exception_handler)(id exception);\n    it.\n */\n objc_uncaught_exception_handler\n-objc_set_uncaught_exception_handler (objc_uncaught_exception_handler new_handler);\n-\n-\n-/* For compatibility with the Apple/NeXT runtime.  */\n-#define objc_setExceptionMatcher objc_set_exception_matcher\n-#define objc_setUncaughtExceptionHandler objc_set_uncaught_exception_handler\n+objc_setUncaughtExceptionHandler (objc_uncaught_exception_handler new_handler);\n \n #ifdef __cplusplus\n }"}, {"sha": "c46fe670eb15ecb58ff357d567b1db65ac9f0194", "filename": "libobjc/objc/runtime.h", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2461ab4bb799e914f519d800592e49624b01f822/libobjc%2Fobjc%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fruntime.h?ref=2461ab4bb799e914f519d800592e49624b01f822", "patch": "@@ -26,11 +26,30 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #ifndef __objc_runtime_INCLUDE_GNU\n #define __objc_runtime_INCLUDE_GNU\n \n-#include \"objc.h\"\n+/*\n+  This file declares the \"modern\" GNU Objective-C Runtime API.\n+  Include this file to use it.\n+\n+  This API is replacing the \"traditional\" GNU Objective-C Runtime API\n+  (declared in objc/objc-api.h) which is the one supported by older\n+  versions of the GNU Objective-C Runtime.  The \"modern\" API is very\n+  similar to the API used by the modern Apple/NeXT runtime.\n+\n+  Because the two APIs have some conflicting definitions (in\n+  particular, Method and Category are defined differently) you should\n+  include either objc/objc-api.h (to use the traditional GNU\n+  Objective-C Runtime API) or objc/runtime.h (to use the modern GNU\n+  Objective-C Runtime API), but not both.\n+*/\n+/*\n+#ifdef __objc_api_INCLUDE_GNU\n+# error You can not include both objc/objc-api.h and objc/runtime.h.  Include objc/objc-api.h for the traditional GNU Objective-C Runtime API and objc/runtime.h for the modern one.\n+#endif\n+*/\n \n-/* The following is temporary, until all code from objc-api.h has been\n-   moved into this file and objc-api.h will include runtime.h.  */\n-#include \"objc-api.h\"\n+/* TODO: This file is incomplete.  */\n+\n+#include \"objc.h\"\n \n /* 'objc_enumerationMutation()' is called when a collection is\n    mutated while being \"fast enumerated\".  That is a hard error, and\n@@ -63,7 +82,7 @@ objc_EXPORT void objc_enumerationMutation (id collection);\n    You probably shouldn't use this function unless you are writing\n    your own Foundation library.\n */\n-objc_EXPORT void objc_set_enumeration_mutation_handler (void (*handler)(id));\n+objc_EXPORT void objc_setEnumerationMutationHandler (void (*handler)(id));\n \n /* This structure (used during fast enumeration) is automatically\n    defined by the compiler (it is as if this definition was always\n@@ -82,7 +101,5 @@ struct __objcFastEnumerationState\n   unsigned long extra[5];\n };\n */\n-/* For compatibility with the Apple/NeXT runtime.  */\n-#define objc_setEnumerationMutationHandler objc_set_enumeration_mutation_handler\n \n #endif"}]}