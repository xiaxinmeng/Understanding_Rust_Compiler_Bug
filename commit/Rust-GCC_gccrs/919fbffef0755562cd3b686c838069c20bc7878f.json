{"sha": "919fbffef0755562cd3b686c838069c20bc7878f", "node_id": "C_kwDOANBUbNoAKDkxOWZiZmZlZjA3NTU1NjJjZDNiNjg2YzgzODA2OWMyMGJjNzg3OGY", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2022-03-21T12:54:30Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2022-03-22T08:31:34Z"}, "message": "Extend splitter pattern to reversed condition by swapping then and else rtx. [PR target/104982]\n\nFailed to match this instruction:\n(set (reg/v:SI 88 [ z ])\n    (if_then_else:SI (eq (zero_extract:SI (reg:SI 92)\n                (const_int 1 [0x1])\n                (zero_extend:SI (subreg:QI (reg:SI 93) 0)))\n            (const_int 0 [0]))\n        (reg:SI 95)\n        (reg:SI 94)))\n\nbut it's equal to\n\n(set (reg/v:SI 88 [ z ])\n    (if_then_else:SI (ne (zero_extract:SI (reg:SI 92)\n                (const_int 1 [0x1])\n                (zero_extend:SI (subreg:QI (reg:SI 93) 0)))\n            (const_int 0 [0]))\n        (reg:SI 94)\n        (reg:SI 95)))\n\nwhich is the exact existing splitter.\n\nThe patch will fix below regressions:\n\nOn x86-64, r12-7687 caused:\n\nFAIL: gcc.target/i386/bt-5.c scan-assembler-not sar[lq][ \\t]\nFAIL: gcc.target/i386/bt-5.c scan-assembler-times bt[lq][ \\t] 7\n\ngcc/ChangeLog:\n\n\tPR target/104982\n\t* config/i386/i386.md (*jcc_bt<mode>_mask): Extend the\n\tfollowing splitter to reversed condition.", "tree": {"sha": "9da11ffc30ea692e46fcc3e0d4444fef3c578c7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9da11ffc30ea692e46fcc3e0d4444fef3c578c7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/919fbffef0755562cd3b686c838069c20bc7878f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/919fbffef0755562cd3b686c838069c20bc7878f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/919fbffef0755562cd3b686c838069c20bc7878f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/919fbffef0755562cd3b686c838069c20bc7878f/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d5ee289510f0c7ac2c318e396c8a6f0d0d93db0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d5ee289510f0c7ac2c318e396c8a6f0d0d93db0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d5ee289510f0c7ac2c318e396c8a6f0d0d93db0"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "c74edd1aaef38672b7e207f7b273e61db9c166c3", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/919fbffef0755562cd3b686c838069c20bc7878f/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/919fbffef0755562cd3b686c838069c20bc7878f/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=919fbffef0755562cd3b686c838069c20bc7878f", "patch": "@@ -14182,12 +14182,12 @@\n (define_split\n   [(set (match_operand:SWI248 0 \"register_operand\")\n \t(if_then_else:SWI248\n-\t (ne\n-\t  (zero_extract:SWI48\n-\t   (match_operand:SWI48 1 \"register_operand\")\n-\t   (const_int 1)\n-\t   (zero_extend:SI (match_operand:QI 2 \"register_operand\")))\n-\t  (const_int 0))\n+\t (match_operator 5 \"bt_comparison_operator\"\n+\t  [(zero_extract:SWI48\n+\t    (match_operand:SWI48 1 \"register_operand\")\n+\t    (const_int 1)\n+\t    (zero_extend:SI (match_operand:QI 2 \"register_operand\")))\n+\t   (const_int 0)])\n \t (match_operand:SWI248 3 \"nonimmediate_operand\")\n \t (match_operand:SWI248 4 \"nonimmediate_operand\")))]\n   \"TARGET_USE_BT && TARGET_CMOVE\n@@ -14202,6 +14202,8 @@\n \t\t\t     (match_dup 3)\n \t\t\t     (match_dup 4)))]\n {\n+  if (GET_CODE (operands[5]) == EQ)\n+    std::swap (operands[3], operands[4]);\n   operands[2] = lowpart_subreg (SImode, operands[2], QImode);\n })\n "}]}