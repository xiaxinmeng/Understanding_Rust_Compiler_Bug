{"sha": "78bd5210e7d719cf462c189681f3037d63b14c76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhiZDUyMTBlN2Q3MTljZjQ2MmMxODk2ODFmMzAzN2Q2M2IxNGM3Ng==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-02-19T03:39:30Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-02-19T03:39:30Z"}, "message": "convert.c (convert_to_real): Also optimize (float)log(x) into logf(x) where x is a float, i.e.\n\n\n\t* convert.c (convert_to_real): Also optimize (float)log(x) into\n\tlogf(x) where x is a float, i.e. also handle BUILT_IN_LOG{,L}.\n\nFrom-SVN: r63087", "tree": {"sha": "741e6c5858ede0c113657002a0e38326d9827c12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/741e6c5858ede0c113657002a0e38326d9827c12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78bd5210e7d719cf462c189681f3037d63b14c76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78bd5210e7d719cf462c189681f3037d63b14c76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78bd5210e7d719cf462c189681f3037d63b14c76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78bd5210e7d719cf462c189681f3037d63b14c76/comments", "author": null, "committer": null, "parents": [{"sha": "34fcb7c802299a46d61b7ac7fc03bd80fe307cd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34fcb7c802299a46d61b7ac7fc03bd80fe307cd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34fcb7c802299a46d61b7ac7fc03bd80fe307cd7"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "8e5b2976a06f79aef46f8dc21725bd441266dec8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78bd5210e7d719cf462c189681f3037d63b14c76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78bd5210e7d719cf462c189681f3037d63b14c76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78bd5210e7d719cf462c189681f3037d63b14c76", "patch": "@@ -1,3 +1,8 @@\n+2003-02-18  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* convert.c (convert_to_real): Also optimize (float)log(x) into\n+\tlogf(x) where x is a float, i.e. also handle BUILT_IN_LOG{,L}.\n+\n 2003-02-18  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n         * config/sh/sh.c (unspec_caller_rtx_p): New."}, {"sha": "4ac23a7f44ce8c9f66f99e3f7309987514fefe24", "filename": "gcc/convert.c", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78bd5210e7d719cf462c189681f3037d63b14c76/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78bd5210e7d719cf462c189681f3037d63b14c76/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=78bd5210e7d719cf462c189681f3037d63b14c76", "patch": "@@ -1,6 +1,6 @@\n /* Utility routines for data type conversion for GNU C.\n-   Copyright (C) 1987, 1988, 1991, 1992, 1993, 1994, 1995, 1997,\n-   1998 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1991, 1992, 1993, 1994, 1995, 1997, 1998,\n+   2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -133,15 +133,17 @@ convert_to_real (type, expr)\n   /* Disable until we figure out how to decide whether the functions are\n      present in runtime.  */\n   /* Convert (float)sqrt((double)x) where x is float into sqrtf(x) */\n-  if ((fcode == BUILT_IN_SQRT\n-       || fcode == BUILT_IN_SQRTL\n-       || fcode == BUILT_IN_SIN\n-       || fcode == BUILT_IN_SINL\n-       || fcode == BUILT_IN_COS\n-       || fcode == BUILT_IN_COSL\n-       || fcode == BUILT_IN_EXP\n-       || fcode == BUILT_IN_EXPL)\n-      && optimize\n+  if (optimize\n+      && (fcode == BUILT_IN_SQRT\n+\t  || fcode == BUILT_IN_SQRTL\n+\t  || fcode == BUILT_IN_SIN\n+\t  || fcode == BUILT_IN_SINL\n+\t  || fcode == BUILT_IN_COS\n+\t  || fcode == BUILT_IN_COSL\n+\t  || fcode == BUILT_IN_EXP\n+\t  || fcode == BUILT_IN_EXPL\n+\t  || fcode == BUILT_IN_LOG\n+\t  || fcode == BUILT_IN_LOGL)\n       && (TYPE_MODE (type) == TYPE_MODE (double_type_node)\n           || TYPE_MODE (type) == TYPE_MODE (float_type_node)))\n     {"}]}