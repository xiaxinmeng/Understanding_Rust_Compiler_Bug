{"sha": "e5abd1cb9160619721336ed800779a01548231f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVhYmQxY2I5MTYwNjE5NzIxMzM2ZWQ4MDA3NzlhMDE1NDgyMzFmMQ==", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-05-18T18:27:29Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-05-18T18:27:29Z"}, "message": "PR fortran/95053 - division by zero constants\n\n\tPartially revert the fix for PR93499.  Replace by checks for valid\n\texpressions in the declaration of array shape and PDT KIND and LEN\n\texpressions at a later stage.\n\ngcc/fortran/\n\n2020-05-18  Harald Anlauf  <anlauf@gmx.de>\n\n\tPR fortran/95053\n\t* arith.c (gfc_divide): Revert hunk introduced by patch for\n\tPR93499.\n\t* decl.c (variable_decl): Generate error for array shape not being\n\tan INTEGER constant.\n\t(gfc_get_pdt_instance): Generate error if KIND or LEN expressions\n\tin declaration of a PDT instance do not simplify to INTEGER\n\tconstants.\n\ngcc/testsuite/\n\n2020-05-18  Harald Anlauf  <anlauf@gmx.de>\n\n\tPR fortran/95053\n\t* gfortran.dg/dec_structure_23.f90: Adjust to new error messages.\n\t* gfortran.dg/pr93499.f90: Adjust to new error messages.\n\t* gfortran.dg/pr95053_2.f90: New test.\n\t* gfortran.dg/pr95053_3.f90: New test.", "tree": {"sha": "074aab3a0818e1397808b016439d56afc5ac9125", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/074aab3a0818e1397808b016439d56afc5ac9125"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5abd1cb9160619721336ed800779a01548231f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5abd1cb9160619721336ed800779a01548231f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5abd1cb9160619721336ed800779a01548231f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5abd1cb9160619721336ed800779a01548231f1/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c832ffedf06ff614fc36c44ab6c892d84075e08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c832ffedf06ff614fc36c44ab6c892d84075e08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c832ffedf06ff614fc36c44ab6c892d84075e08"}], "stats": {"total": 100, "additions": 63, "deletions": 37}, "files": [{"sha": "ab79158f7b6b4bcb4faf20a0c3766549754d2226", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5abd1cb9160619721336ed800779a01548231f1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5abd1cb9160619721336ed800779a01548231f1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e5abd1cb9160619721336ed800779a01548231f1", "patch": "@@ -1,3 +1,14 @@\n+2020-05-18  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/95053\n+\t* arith.c (gfc_divide): Revert hunk introduced by patch for\n+\tPR93499.\n+\t* decl.c (variable_decl): Generate error for array shape not being\n+\tan INTEGER constant.\n+\t(gfc_get_pdt_instance): Generate error if KIND or LEN expressions\n+\tin declaration of a PDT instance do not simplify to INTEGER\n+\tconstants.\n+\n 2020-05-15  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/94690"}, {"sha": "c770569eb81fd3a649540958017054c74a315836", "filename": "gcc/fortran/arith.c", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5abd1cb9160619721336ed800779a01548231f1/gcc%2Ffortran%2Farith.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5abd1cb9160619721336ed800779a01548231f1/gcc%2Ffortran%2Farith.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farith.c?ref=e5abd1cb9160619721336ed800779a01548231f1", "patch": "@@ -1806,38 +1806,6 @@ gfc_multiply (gfc_expr *op1, gfc_expr *op2)\n gfc_expr *\n gfc_divide (gfc_expr *op1, gfc_expr *op2)\n {\n-  if (op2 && op2->expr_type == EXPR_CONSTANT)\n-    {\n-      arith rc = ARITH_OK;\n-      switch (op2->ts.type)\n-\t{\n-\tcase BT_INTEGER:\n-\t  /* non-integer divided by integer 0 is handled elsewhere.  */\n-\t  if (mpz_sgn (op2->value.integer) == 0\n-\t      && op1->ts.type == BT_INTEGER)\n-\t    rc = ARITH_DIV0;\n-\t  break;\n-\tcase BT_REAL:\n-\t  if (mpfr_sgn (op2->value.real) == 0\n-\t      && flag_range_check == 1)\n-\t    rc = ARITH_DIV0;\n-\t  break;\n-\tcase BT_COMPLEX:\n-\t  if (mpc_cmp_si_si (op2->value.complex, 0, 0) == 0\n-\t      && flag_range_check == 1)\n-\t    rc = ARITH_DIV0;\n-\t  break;\n-\tdefault:\n-\t  /* basic type is non-numeric, handle this elsewhere.  */\n-\t  break;\n-\t}\n-      if (rc == ARITH_DIV0)\n-\t{\n-\t  gfc_seen_div0 = true;\n-\t  gfc_error (\"Division by zero at %L\", &op2->where);\n-\t  return NULL;\n-\t}\n-    }\n   return eval_intrinsic_f3 (INTRINSIC_DIVIDE, gfc_arith_divide, op1, op2);\n }\n "}, {"sha": "3ad5559c3ecb8057f81a18ad5bb23850f7cdbc2e", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5abd1cb9160619721336ed800779a01548231f1/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5abd1cb9160619721336ed800779a01548231f1/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=e5abd1cb9160619721336ed800779a01548231f1", "patch": "@@ -2607,6 +2607,14 @@ variable_decl (int elem)\n \t      gfc_free_expr (e);\n \t    }\n \n+\t  if (not_constant && e->ts.type != BT_INTEGER)\n+\t    {\n+\t      gfc_error (\"Explicit array shape at %C must be constant of \"\n+\t\t\t \"INTEGER type and not %s type\",\n+\t\t\t gfc_basic_typename (e->ts.type));\n+\t      m = MATCH_ERROR;\n+\t      goto cleanup;\n+\t    }\n \t  if (not_constant)\n \t    {\n \t      gfc_error (\"Explicit shaped array with nonconstant bounds at %C\");\n@@ -3741,8 +3749,9 @@ gfc_get_pdt_instance (gfc_actual_arglist *param_list, gfc_symbol **sym,\n       if (kind_expr)\n \t{\n \t  /* Try simplification even for LEN expressions.  */\n+\t  bool ok;\n \t  gfc_resolve_expr (kind_expr);\n-\t  gfc_simplify_expr (kind_expr, 1);\n+\t  ok = gfc_simplify_expr (kind_expr, 1);\n \t  /* Variable expressions seem to default to BT_PROCEDURE.\n \t     TODO find out why this is and fix it.  */\n \t  if (kind_expr->ts.type != BT_INTEGER\n@@ -3753,6 +3762,12 @@ gfc_get_pdt_instance (gfc_actual_arglist *param_list, gfc_symbol **sym,\n \t\t\t gfc_basic_typename (kind_expr->ts.type));\n \t      goto error_return;\n \t    }\n+\t  if (kind_expr->ts.type == BT_INTEGER && !ok)\n+\t    {\n+\t      gfc_error (\"The parameter expression at %C does not \"\n+\t\t\t \"simplify to an INTEGER constant\");\n+\t      goto error_return;\n+\t    }\n \n \t  tail->expr = gfc_copy_expr (kind_expr);\n \t}"}, {"sha": "858eb60c609005d2913b203477bdc2484fc0abea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5abd1cb9160619721336ed800779a01548231f1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5abd1cb9160619721336ed800779a01548231f1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e5abd1cb9160619721336ed800779a01548231f1", "patch": "@@ -1,3 +1,11 @@\n+2020-05-18  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/95053\n+\t* gfortran.dg/dec_structure_23.f90: Adjust to new error messages.\n+\t* gfortran.dg/pr93499.f90: Adjust to new error messages.\n+\t* gfortran.dg/pr95053_2.f90: New test.\n+\t* gfortran.dg/pr95053_3.f90: New test.\n+\n 2020-05-18  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/95143"}, {"sha": "39e5369c056f02c0433f25a2eee7b5544f50897a", "filename": "gcc/testsuite/gfortran.dg/dec_structure_23.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5abd1cb9160619721336ed800779a01548231f1/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_23.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5abd1cb9160619721336ed800779a01548231f1/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_23.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_structure_23.f90?ref=e5abd1cb9160619721336ed800779a01548231f1", "patch": "@@ -13,8 +13,8 @@ program p\n   integer :: nn\n   real :: rr\n   structure /s/\n-    integer x(n)    /1/   ! { dg-error \"array with nonconstant bounds\" }\n+    integer x(n)    /1/   ! { dg-error \"must be constant of INTEGER type\" }\n     integer xx(nn)  /1/   ! { dg-error \"array with nonconstant bounds\" }\n-    integer xxx(rr) /1.0/ ! { dg-error \"array with nonconstant bounds\" }\n+    integer xxx(rr) /1.0/ ! { dg-error \"must be constant of INTEGER type\" }\n   end structure\n end"}, {"sha": "e3e1eda7781d232a8254974ad3ee834a506ccf3c", "filename": "gcc/testsuite/gfortran.dg/pr93499.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5abd1cb9160619721336ed800779a01548231f1/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93499.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5abd1cb9160619721336ed800779a01548231f1/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93499.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr93499.f90?ref=e5abd1cb9160619721336ed800779a01548231f1", "patch": "@@ -2,9 +2,9 @@\n ! PR 93499 - this used to ICE. Original test case by Gerhard Steinmetz.\n \n program p\n-  integer :: a((0.)/0)  ! { dg-error \"Division by zero\" }\n+  integer :: a((0.)/0)  ! { dg-error \"must be constant of INTEGER type\" }\n   type t(n)\n      integer, len :: n\n   end type t\n-  type(t((0)/0))  :: x  ! { dg-error \"Division by zero\" }\n+  type(t((0)/0))  :: x  ! { dg-error \"does not simplify to an INTEGER constant\" }\n end"}, {"sha": "7bb941ab46e7c7d5b960ffa9523e04c51b129929", "filename": "gcc/testsuite/gfortran.dg/pr95053_2.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5abd1cb9160619721336ed800779a01548231f1/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95053_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5abd1cb9160619721336ed800779a01548231f1/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95053_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95053_2.f90?ref=e5abd1cb9160619721336ed800779a01548231f1", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+! PR 95053 - make sure we do not regress on 521.wrf_r from spec2017\n+!\n+function f (x)\n+  real, parameter :: cldeps = 0.\n+  f = 0.\n+  if (cldeps > 0.) then\n+     f = floor (x/cldeps) * cldeps\n+  end if\n+end function f"}, {"sha": "eae3d8fc41e82e6bde72fa5d7d1ed88e1b67cd7f", "filename": "gcc/testsuite/gfortran.dg/pr95053_3.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5abd1cb9160619721336ed800779a01548231f1/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95053_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5abd1cb9160619721336ed800779a01548231f1/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95053_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95053_3.f90?ref=e5abd1cb9160619721336ed800779a01548231f1", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+! Related to PR 93499 - this used to ICE.\n+\n+program p\n+  type t(n)\n+     integer, kind :: n\n+  end type t\n+  type u(n)\n+     integer, len :: n\n+  end type u\n+  type(t((0)/0))  :: x  ! { dg-error \"does not simplify to an INTEGER\" }\n+  type(t((0.)/0)) :: y  ! { dg-error \"must be of INTEGER type\" }\n+  type(u(0/(0.))) :: z  ! { dg-error \"must be of INTEGER type\" }\n+end"}]}