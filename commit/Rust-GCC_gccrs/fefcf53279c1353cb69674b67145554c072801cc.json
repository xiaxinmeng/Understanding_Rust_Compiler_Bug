{"sha": "fefcf53279c1353cb69674b67145554c072801cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVmY2Y1MzI3OWMxMzUzY2I2OTY3NGI2NzE0NTU1NGMwNzI4MDFjYw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-04-27T14:56:10Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-04-27T14:56:10Z"}, "message": "[combine][obvious] Use std::swap instead of manually swapping\n\n\t* combine.c (simplify_if_then_else): Use std::swap instead\n\tof manually swapping.\n\t(known_cond): Likewise.\n\t(simplify_comparison): Likewise.\n\nFrom-SVN: r222468", "tree": {"sha": "255e17259775da7a82f065a83806572e22888716", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/255e17259775da7a82f065a83806572e22888716"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fefcf53279c1353cb69674b67145554c072801cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fefcf53279c1353cb69674b67145554c072801cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fefcf53279c1353cb69674b67145554c072801cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fefcf53279c1353cb69674b67145554c072801cc/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01f61a78c6961d875dbb0c1db16d8c921b6952fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01f61a78c6961d875dbb0c1db16d8c921b6952fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01f61a78c6961d875dbb0c1db16d8c921b6952fc"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "b08be1e76ba1b717872b50346779f770678f5040", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fefcf53279c1353cb69674b67145554c072801cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fefcf53279c1353cb69674b67145554c072801cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fefcf53279c1353cb69674b67145554c072801cc", "patch": "@@ -1,3 +1,10 @@\n+2015-04-27  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* combine.c (simplify_if_then_else): Use std::swap instead\n+\tof manually swapping.\n+\t(known_cond): Likewise.\n+\t(simplify_comparison): Likewise.\n+\n 2015-04-27  Peter Bergner  <bergner@vnet.ibm.com>\n \n \tPR target/64579"}, {"sha": "c04146ae645a766a923d335c7c2d246cea9ee0fc", "filename": "gcc/combine.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fefcf53279c1353cb69674b67145554c072801cc/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fefcf53279c1353cb69674b67145554c072801cc/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=fefcf53279c1353cb69674b67145554c072801cc", "patch": "@@ -6194,7 +6194,7 @@ simplify_if_then_else (rtx x)\n       if (false_code == EQ)\n \t{\n \t  swapped = 1, true_code = EQ, false_code = NE;\n-\t  temp = true_rtx, true_rtx = false_rtx, false_rtx = temp;\n+\t  std::swap (true_rtx, false_rtx);\n \t}\n \n       /* If we are comparing against zero and the expression being tested has\n@@ -6259,7 +6259,7 @@ simplify_if_then_else (rtx x)\n       SUBST (XEXP (x, 1), false_rtx);\n       SUBST (XEXP (x, 2), true_rtx);\n \n-      temp = true_rtx, true_rtx = false_rtx, false_rtx = temp;\n+      std::swap (true_rtx, false_rtx);\n       cond = XEXP (x, 0);\n \n       /* It is possible that the conditional has been simplified out.  */\n@@ -9031,7 +9031,6 @@ static rtx\n known_cond (rtx x, enum rtx_code cond, rtx reg, rtx val)\n {\n   enum rtx_code code = GET_CODE (x);\n-  rtx temp;\n   const char *fmt;\n   int i, j;\n \n@@ -9071,7 +9070,10 @@ known_cond (rtx x, enum rtx_code cond, rtx reg, rtx val)\n   else if (COMPARISON_P (x) || COMMUTATIVE_ARITH_P (x))\n     {\n       if (rtx_equal_p (XEXP (x, 0), val))\n-\tcond = swap_condition (cond), temp = val, val = reg, reg = temp;\n+        {\n+\t  std::swap (val, reg);\n+\t  cond = swap_condition (cond);\n+        }\n \n       if (rtx_equal_p (XEXP (x, 0), reg) && rtx_equal_p (XEXP (x, 1), val))\n \t{\n@@ -11448,7 +11450,7 @@ simplify_comparison (enum rtx_code code, rtx *pop0, rtx *pop1)\n      is already a constant integer.  */\n   if (swap_commutative_operands_p (op0, op1))\n     {\n-      tem = op0, op0 = op1, op1 = tem;\n+      std::swap (op0, op1);\n       code = swap_condition (code);\n     }\n \n@@ -12335,7 +12337,7 @@ simplify_comparison (enum rtx_code code, rtx *pop0, rtx *pop1)\n   /* We may have changed the comparison operands.  Re-canonicalize.  */\n   if (swap_commutative_operands_p (op0, op1))\n     {\n-      tem = op0, op0 = op1, op1 = tem;\n+      std::swap (op0, op1);\n       code = swap_condition (code);\n     }\n "}]}