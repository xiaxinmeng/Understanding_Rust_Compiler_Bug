{"sha": "9b4c97f7a7bc984c7da38aa9de61531357016370", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI0Yzk3ZjdhN2JjOTg0YzdkYTM4YWE5ZGU2MTUzMTM1NzAxNjM3MA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2012-06-13T21:48:00Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2012-06-13T21:48:00Z"}, "message": "* cpplib.pot: Regenerate.\n\nFrom-SVN: r188533", "tree": {"sha": "efa0a33164080dda52ad5420c3a1d52494f9d134", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efa0a33164080dda52ad5420c3a1d52494f9d134"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b4c97f7a7bc984c7da38aa9de61531357016370", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b4c97f7a7bc984c7da38aa9de61531357016370", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b4c97f7a7bc984c7da38aa9de61531357016370", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b4c97f7a7bc984c7da38aa9de61531357016370/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cda8ad3d0585d36fe07c3d5d28bfbd6f4744074", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cda8ad3d0585d36fe07c3d5d28bfbd6f4744074", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cda8ad3d0585d36fe07c3d5d28bfbd6f4744074"}], "stats": {"total": 339, "additions": 145, "deletions": 194}, "files": [{"sha": "543b049400cf636779e4ae3687b982363fa89c4c", "filename": "libcpp/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b4c97f7a7bc984c7da38aa9de61531357016370/libcpp%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b4c97f7a7bc984c7da38aa9de61531357016370/libcpp%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2FChangeLog?ref=9b4c97f7a7bc984c7da38aa9de61531357016370", "patch": "@@ -1,3 +1,7 @@\n+2012-06-13  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* cpplib.pot: Regenerate.\n+\n 2012-06-13  Joseph Myers  <joseph@codesourcery.com>\n \n \t* sr.po: New."}, {"sha": "cdc3ed7a8c6f436847ac31db69bfacf0d9596a23", "filename": "libcpp/po/cpplib.pot", "status": "modified", "additions": 141, "deletions": 194, "changes": 335, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b4c97f7a7bc984c7da38aa9de61531357016370/libcpp%2Fpo%2Fcpplib.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b4c97f7a7bc984c7da38aa9de61531357016370/libcpp%2Fpo%2Fcpplib.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2Fcpplib.pot?ref=9b4c97f7a7bc984c7da38aa9de61531357016370", "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: http://gcc.gnu.org/bugs.html\\n\"\n-\"POT-Creation-Date: 2012-03-18 14:03+0000\\n\"\n+\"POT-Creation-Date: 2012-06-13 21:46+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -75,7 +75,7 @@ msgid \"%.*s is not a valid universal character\"\n msgstr \"\"\n \n #: charset.c:1056\n-#: lex.c:1051\n+#: lex.c:1114\n msgid \"'$' in identifier or number\"\n msgstr \"\"\n \n@@ -314,102 +314,102 @@ msgstr \"\"\n msgid \"registering pragma with NULL handler\"\n msgstr \"\"\n \n-#: directives.c:1462\n+#: directives.c:1434\n msgid \"#pragma once in main file\"\n msgstr \"\"\n \n-#: directives.c:1485\n+#: directives.c:1457\n msgid \"invalid #pragma push_macro directive\"\n msgstr \"\"\n \n-#: directives.c:1540\n+#: directives.c:1512\n msgid \"invalid #pragma pop_macro directive\"\n msgstr \"\"\n \n-#: directives.c:1595\n+#: directives.c:1567\n msgid \"invalid #pragma GCC poison directive\"\n msgstr \"\"\n \n-#: directives.c:1604\n+#: directives.c:1576\n #, c-format\n msgid \"poisoning existing macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.c:1623\n+#: directives.c:1595\n msgid \"#pragma system_header ignored outside include file\"\n msgstr \"\"\n \n-#: directives.c:1648\n+#: directives.c:1620\n #, c-format\n msgid \"cannot find source file %s\"\n msgstr \"\"\n \n-#: directives.c:1652\n+#: directives.c:1624\n #, c-format\n msgid \"current file is older than %s\"\n msgstr \"\"\n \n-#: directives.c:1837\n+#: directives.c:1806\n msgid \"_Pragma takes a parenthesized string literal\"\n msgstr \"\"\n \n-#: directives.c:1958\n+#: directives.c:1927\n msgid \"#else without #if\"\n msgstr \"\"\n \n-#: directives.c:1963\n+#: directives.c:1932\n msgid \"#else after #else\"\n msgstr \"\"\n \n-#: directives.c:1965\n-#: directives.c:1998\n+#: directives.c:1934\n+#: directives.c:1967\n msgid \"the conditional began here\"\n msgstr \"\"\n \n-#: directives.c:1991\n+#: directives.c:1960\n msgid \"#elif without #if\"\n msgstr \"\"\n \n-#: directives.c:1996\n+#: directives.c:1965\n msgid \"#elif after #else\"\n msgstr \"\"\n \n-#: directives.c:2034\n+#: directives.c:2003\n msgid \"#endif without #if\"\n msgstr \"\"\n \n-#: directives.c:2114\n+#: directives.c:2083\n msgid \"missing '(' after predicate\"\n msgstr \"\"\n \n-#: directives.c:2129\n+#: directives.c:2098\n msgid \"missing ')' to complete answer\"\n msgstr \"\"\n \n-#: directives.c:2149\n+#: directives.c:2118\n msgid \"predicate's answer is empty\"\n msgstr \"\"\n \n-#: directives.c:2176\n+#: directives.c:2145\n msgid \"assertion without predicate\"\n msgstr \"\"\n \n-#: directives.c:2179\n+#: directives.c:2148\n msgid \"predicate must be an identifier\"\n msgstr \"\"\n \n-#: directives.c:2265\n+#: directives.c:2234\n #, c-format\n msgid \"\\\"%s\\\" re-asserted\"\n msgstr \"\"\n \n-#: directives.c:2556\n+#: directives.c:2525\n #, c-format\n msgid \"unterminated #%s\"\n msgstr \"\"\n \n #: directives-only.c:222\n-#: lex.c:2132\n+#: lex.c:2227\n #: traditional.c:163\n msgid \"unterminated comment\"\n msgstr \"\"\n@@ -423,519 +423,466 @@ msgstr \"\"\n msgid \"%s: %s\"\n msgstr \"\"\n \n-#: expr.c:424\n-msgid \"too many decimal points in number\"\n-msgstr \"\"\n-\n-#: expr.c:453\n-#: expr.c:547\n-msgid \"fixed-point constants are a GCC extension\"\n-msgstr \"\"\n-\n-#: expr.c:466\n-#, c-format\n-msgid \"invalid digit \\\"%c\\\" in binary constant\"\n-msgstr \"\"\n-\n #: expr.c:468\n-#, c-format\n-msgid \"invalid digit \\\"%c\\\" in octal constant\"\n+#: expr.c:566\n+msgid \"fixed-point constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:476\n+#: expr.c:493\n msgid \"invalid prefix \\\"0b\\\" for floating constant\"\n msgstr \"\"\n \n-#: expr.c:481\n-msgid \"no digits in hexadecimal floating constant\"\n-msgstr \"\"\n-\n-#: expr.c:485\n+#: expr.c:503\n msgid \"use of C99 hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:494\n-msgid \"exponent has no digits\"\n-msgstr \"\"\n-\n-#: expr.c:501\n-msgid \"hexadecimal floating constants require an exponent\"\n-msgstr \"\"\n-\n-#: expr.c:515\n+#: expr.c:534\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on floating constant\"\n msgstr \"\"\n \n-#: expr.c:526\n-#: expr.c:585\n+#: expr.c:545\n+#: expr.c:605\n #, c-format\n msgid \"traditional C rejects the \\\"%.*s\\\" suffix\"\n msgstr \"\"\n \n-#: expr.c:534\n+#: expr.c:553\n msgid \"suffix for double constant is a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:540\n+#: expr.c:559\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" with hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:551\n+#: expr.c:570\n msgid \"decimal float constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:569\n+#: expr.c:588\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on integer constant\"\n msgstr \"\"\n \n-#: expr.c:593\n+#: expr.c:613\n msgid \"use of C++0x long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:594\n+#: expr.c:614\n msgid \"use of C99 long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:608\n+#: expr.c:630\n msgid \"imaginary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:611\n+#: expr.c:633\n msgid \"binary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:704\n+#: expr.c:726\n msgid \"integer constant is too large for its type\"\n msgstr \"\"\n \n-#: expr.c:735\n+#: expr.c:757\n msgid \"integer constant is so large that it is unsigned\"\n msgstr \"\"\n \n-#: expr.c:830\n+#: expr.c:852\n msgid \"missing ')' after \\\"defined\\\"\"\n msgstr \"\"\n \n-#: expr.c:837\n+#: expr.c:859\n msgid \"operator \\\"defined\\\" requires an identifier\"\n msgstr \"\"\n \n-#: expr.c:845\n+#: expr.c:867\n #, c-format\n msgid \"(\\\"%s\\\" is an alternative token for \\\"%s\\\" in C++)\"\n msgstr \"\"\n \n-#: expr.c:855\n+#: expr.c:877\n msgid \"this use of \\\"defined\\\" may not be portable\"\n msgstr \"\"\n \n-#: expr.c:914\n+#: expr.c:937\n msgid \"user-defined literal in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:919\n+#: expr.c:942\n msgid \"floating constant in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:925\n+#: expr.c:948\n msgid \"imaginary number in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:972\n+#: expr.c:996\n #, c-format\n msgid \"\\\"%s\\\" is not defined\"\n msgstr \"\"\n \n-#: expr.c:984\n+#: expr.c:1009\n msgid \"assertions are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:987\n+#: expr.c:1012\n msgid \"assertions are a deprecated extension\"\n msgstr \"\"\n \n-#: expr.c:1120\n-#: expr.c:1149\n-#, c-format\n-msgid \"missing binary operator before token \\\"%s\\\"\"\n-msgstr \"\"\n-\n-#: expr.c:1140\n-#, c-format\n-msgid \"token \\\"%s\\\" is not valid in preprocessor expressions\"\n-msgstr \"\"\n-\n-#: expr.c:1157\n-msgid \"missing expression between '(' and ')'\"\n-msgstr \"\"\n-\n-#: expr.c:1160\n-#, c-format\n-msgid \"%s with no expression\"\n-msgstr \"\"\n-\n-#: expr.c:1163\n-#, c-format\n-msgid \"operator '%s' has no right operand\"\n-msgstr \"\"\n-\n-#: expr.c:1168\n-#, c-format\n-msgid \"operator '%s' has no left operand\"\n-msgstr \"\"\n-\n-#: expr.c:1194\n-msgid \" ':' without preceding '?'\"\n-msgstr \"\"\n-\n-#: expr.c:1222\n+#: expr.c:1257\n #, c-format\n msgid \"unbalanced stack in %s\"\n msgstr \"\"\n \n-#: expr.c:1242\n+#: expr.c:1277\n #, c-format\n msgid \"impossible operator '%u'\"\n msgstr \"\"\n \n-#: expr.c:1343\n+#: expr.c:1378\n msgid \"missing ')' in expression\"\n msgstr \"\"\n \n-#: expr.c:1372\n+#: expr.c:1407\n msgid \"'?' without following ':'\"\n msgstr \"\"\n \n-#: expr.c:1382\n+#: expr.c:1417\n msgid \"integer overflow in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1387\n+#: expr.c:1422\n msgid \"missing '(' in expression\"\n msgstr \"\"\n \n-#: expr.c:1419\n+#: expr.c:1454\n #, c-format\n msgid \"the left operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1424\n+#: expr.c:1459\n #, c-format\n msgid \"the right operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1683\n+#: expr.c:1718\n msgid \"traditional C rejects the unary plus operator\"\n msgstr \"\"\n \n-#: expr.c:1766\n+#: expr.c:1801\n msgid \"comma operator in operand of #if\"\n msgstr \"\"\n \n-#: expr.c:1902\n+#: expr.c:1937\n msgid \"division by zero in #if\"\n msgstr \"\"\n \n-#: files.c:463\n+#: files.c:496\n msgid \"NULL directory in find_file\"\n msgstr \"\"\n \n-#: files.c:500\n+#: files.c:533\n msgid \"one or more PCH files were found, but they were invalid\"\n msgstr \"\"\n \n-#: files.c:503\n+#: files.c:536\n msgid \"use -Winvalid-pch for more information\"\n msgstr \"\"\n \n-#: files.c:594\n+#: files.c:627\n #, c-format\n msgid \"%s is a block device\"\n msgstr \"\"\n \n-#: files.c:611\n+#: files.c:644\n #, c-format\n msgid \"%s is too large\"\n msgstr \"\"\n \n-#: files.c:646\n+#: files.c:679\n #, c-format\n msgid \"%s is shorter than expected\"\n msgstr \"\"\n \n-#: files.c:881\n+#: files.c:914\n #, c-format\n msgid \"no include path in which to search for %s\"\n msgstr \"\"\n \n-#: files.c:1305\n+#: files.c:1338\n msgid \"Multiple include guards may be useful for:\\n\"\n msgstr \"\"\n \n-#: init.c:512\n+#: init.c:519\n msgid \"cppchar_t must be an unsigned type\"\n msgstr \"\"\n \n-#: init.c:516\n+#: init.c:523\n #, c-format\n msgid \"\"\n \"preprocessor arithmetic has maximum precision of %lu bits; target requires \"\n \"%lu bits\"\n msgstr \"\"\n \n-#: init.c:523\n+#: init.c:530\n msgid \"CPP arithmetic must be at least as precise as a target int\"\n msgstr \"\"\n \n-#: init.c:526\n+#: init.c:533\n msgid \"target char is less than 8 bits wide\"\n msgstr \"\"\n \n-#: init.c:530\n+#: init.c:537\n msgid \"target wchar_t is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:534\n+#: init.c:541\n msgid \"target int is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:539\n+#: init.c:546\n msgid \"CPP half-integer narrower than CPP character\"\n msgstr \"\"\n \n-#: init.c:543\n+#: init.c:550\n #, c-format\n msgid \"\"\n \"CPP on this host cannot handle wide character constants over %lu bits, but \"\n \"the target requires %lu bits\"\n msgstr \"\"\n \n-#: lex.c:845\n+#: lex.c:908\n msgid \"backslash and newline separated by space\"\n msgstr \"\"\n \n-#: lex.c:850\n+#: lex.c:913\n msgid \"backslash-newline at end of file\"\n msgstr \"\"\n \n-#: lex.c:866\n+#: lex.c:929\n #, c-format\n msgid \"trigraph ??%c converted to %c\"\n msgstr \"\"\n \n-#: lex.c:874\n+#: lex.c:937\n #, c-format\n msgid \"trigraph ??%c ignored, use -trigraphs to enable\"\n msgstr \"\"\n \n-#: lex.c:923\n+#: lex.c:986\n msgid \"\\\"/*\\\" within comment\"\n msgstr \"\"\n \n-#: lex.c:981\n+#: lex.c:1044\n #, c-format\n msgid \"%s in preprocessing directive\"\n msgstr \"\"\n \n-#: lex.c:990\n+#: lex.c:1053\n msgid \"null character(s) ignored\"\n msgstr \"\"\n \n-#: lex.c:1027\n+#: lex.c:1090\n #, c-format\n msgid \"`%.*s' is not in NFKC\"\n msgstr \"\"\n \n-#: lex.c:1030\n+#: lex.c:1093\n #, c-format\n msgid \"`%.*s' is not in NFC\"\n msgstr \"\"\n \n-#: lex.c:1098\n-#: lex.c:1175\n+#: lex.c:1161\n+#: lex.c:1238\n #, c-format\n msgid \"attempt to use poisoned \\\"%s\\\"\"\n msgstr \"\"\n \n-#: lex.c:1106\n-#: lex.c:1183\n+#: lex.c:1169\n+#: lex.c:1246\n msgid \"__VA_ARGS__ can only appear in the expansion of a C99 variadic macro\"\n msgstr \"\"\n \n-#: lex.c:1112\n-#: lex.c:1189\n+#: lex.c:1175\n+#: lex.c:1252\n #, c-format\n msgid \"identifier \\\"%s\\\" is a special operator name in C++\"\n msgstr \"\"\n \n-#: lex.c:1333\n+#: lex.c:1396\n msgid \"raw string delimiter longer than 16 characters\"\n msgstr \"\"\n \n-#: lex.c:1336\n+#: lex.c:1399\n #, c-format\n msgid \"invalid character '%c' in raw string delimiter\"\n msgstr \"\"\n \n-#: lex.c:1459\n-#: lex.c:1481\n+#: lex.c:1522\n+#: lex.c:1544\n msgid \"unterminated raw string\"\n msgstr \"\"\n \n-#: lex.c:1600\n+#: lex.c:1568\n+#: lex.c:1699\n+msgid \"\"\n+\"invalid suffix on literal; C++11 requires a space between literal and \"\n+\"identifier\"\n+msgstr \"\"\n+\n+#: lex.c:1679\n msgid \"null character(s) preserved in literal\"\n msgstr \"\"\n \n-#: lex.c:1603\n+#: lex.c:1682\n #, c-format\n msgid \"missing terminating %c character\"\n msgstr \"\"\n \n-#: lex.c:2143\n+#: lex.c:2238\n msgid \"C++ style comments are not allowed in ISO C90\"\n msgstr \"\"\n \n-#: lex.c:2145\n+#: lex.c:2240\n msgid \"(this will be reported only once per input file)\"\n msgstr \"\"\n \n-#: lex.c:2150\n+#: lex.c:2245\n msgid \"multi-line comment\"\n msgstr \"\"\n \n-#: lex.c:2470\n+#: lex.c:2565\n #, c-format\n msgid \"unspellable token %s\"\n msgstr \"\"\n \n-#: macro.c:188\n+#: macro.c:193\n #, c-format\n msgid \"macro \\\"%s\\\" is not used\"\n msgstr \"\"\n \n-#: macro.c:226\n-#: macro.c:423\n+#: macro.c:231\n+#: macro.c:428\n #, c-format\n msgid \"invalid built-in macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:260\n+#: macro.c:265\n msgid \"could not determine file timestamp\"\n msgstr \"\"\n \n-#: macro.c:358\n+#: macro.c:363\n msgid \"could not determine date and time\"\n msgstr \"\"\n \n-#: macro.c:374\n+#: macro.c:379\n msgid \"__COUNTER__ expanded inside directive with -fdirectives-only\"\n msgstr \"\"\n \n-#: macro.c:532\n+#: macro.c:537\n msgid \"invalid string literal, ignoring final '\\\\'\"\n msgstr \"\"\n \n-#: macro.c:592\n+#: macro.c:599\n #, c-format\n msgid \"pasting \\\"%s\\\" and \\\"%s\\\" does not give a valid preprocessing token\"\n msgstr \"\"\n \n-#: macro.c:682\n+#: macro.c:721\n msgid \"ISO C99 requires rest arguments to be used\"\n msgstr \"\"\n \n-#: macro.c:687\n+#: macro.c:726\n #, c-format\n msgid \"macro \\\"%s\\\" requires %u arguments, but only %u given\"\n msgstr \"\"\n \n-#: macro.c:692\n+#: macro.c:731\n #, c-format\n msgid \"macro \\\"%s\\\" passed %u arguments, but takes just %u\"\n msgstr \"\"\n \n-#: macro.c:886\n+#: macro.c:925\n #: traditional.c:681\n #, c-format\n msgid \"unterminated argument list invoking macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:1026\n+#: macro.c:1076\n #, c-format\n msgid \"function-like macro \\\"%s\\\" must be used with arguments in traditional C\"\n msgstr \"\"\n \n-#: macro.c:1694\n+#: macro.c:1748\n #, c-format\n msgid \"\"\n \"invoking macro %s argument %d: empty macro arguments are undefined in ISO \"\n \"C90 and ISO C++98\"\n msgstr \"\"\n \n-#: macro.c:2596\n+#: macro.c:2710\n #, c-format\n msgid \"duplicate macro parameter \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:2642\n+#: macro.c:2756\n #, c-format\n msgid \"\\\"%s\\\" may not appear in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:2650\n+#: macro.c:2764\n msgid \"macro parameters must be comma-separated\"\n msgstr \"\"\n \n-#: macro.c:2667\n+#: macro.c:2781\n msgid \"parameter name missing\"\n msgstr \"\"\n \n-#: macro.c:2685\n+#: macro.c:2799\n msgid \"anonymous variadic macros were introduced in C99\"\n msgstr \"\"\n \n-#: macro.c:2690\n+#: macro.c:2804\n msgid \"ISO C does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:2699\n+#: macro.c:2813\n msgid \"missing ')' in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:2748\n+#: macro.c:2862\n msgid \"'##' cannot appear at either end of a macro expansion\"\n msgstr \"\"\n \n-#: macro.c:2783\n+#: macro.c:2897\n msgid \"ISO C99 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:2807\n+#: macro.c:2921\n msgid \"missing whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:2841\n+#: macro.c:2955\n msgid \"'#' is not followed by a macro parameter\"\n msgstr \"\"\n \n-#: macro.c:2999\n+#: macro.c:3113\n #, c-format\n msgid \"\\\"%s\\\" redefined\"\n msgstr \"\"\n \n-#: macro.c:3005\n+#: macro.c:3119\n msgid \"this is the location of the previous definition\"\n msgstr \"\"\n \n-#: macro.c:3066\n+#: macro.c:3180\n #, c-format\n msgid \"macro argument \\\"%s\\\" would be stringified in traditional C\"\n msgstr \"\"\n \n-#: macro.c:3093\n+#: macro.c:3207\n #, c-format\n msgid \"invalid hash type %d in cpp_macro_definition\"\n msgstr \"\""}]}