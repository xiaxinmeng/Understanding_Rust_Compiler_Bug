{"sha": "7355a9408b990cdd20db91e2e1ba0b03e801d6a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM1NWE5NDA4Yjk5MGNkZDIwZGI5MWUyZTFiYTBiMDNlODAxZDZhNg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-07-27T10:30:24Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-07-27T14:18:15Z"}, "message": "expr: build string_constant only for a char type\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/96058\n\t* expr.c (string_constant): Build string_constant only\n\tfor a type that has same precision as char_type_node\n\tand is an integral type.", "tree": {"sha": "b4ac93ea3879309cc588bdcfcc05e89a5da238b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4ac93ea3879309cc588bdcfcc05e89a5da238b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7355a9408b990cdd20db91e2e1ba0b03e801d6a6", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl8e4icACgkQTcGC3A+n\nN4XEvwgAp/fPdBe0QM9KHvERYWit7sWP/12xEqtn7r38kzdGjnbiLrULYkGo1x/1\n/P6zK3LNljziuMehKIUA0y4QCOPeM0pTdyX6nZSQNGgTTNzRnxlCRs3ibo7VZJHA\nVzGIckb13DC5BO6pn7DMvIi7U0pm8/OKWsRTQx7JrGZelzDKH0ko6yiJxLW8trJo\nn42NauL7kGA4l2hUtH8SPOL+CbIuvcm1BHTFGPZA3yOxfItkV3ifFl756hW2P8lN\nsZMhUsfN2mkEkvjYT+yktyV6DUbSsAFSX9VK0J+G+8zmpzv3gKbVTGkz5njYPuM1\npy5gtRKsYJaBx5W3V1KjmAOmFvbqPg==\n=ScvO\n-----END PGP SIGNATURE-----", "payload": "tree b4ac93ea3879309cc588bdcfcc05e89a5da238b6\nparent 8e5584f7a1746ec1c3e187084832e5a58432ac74\nauthor Martin Liska <mliska@suse.cz> 1595845824 +0200\ncommitter Martin Liska <mliska@suse.cz> 1595859495 +0200\n\nexpr: build string_constant only for a char type\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/96058\n\t* expr.c (string_constant): Build string_constant only\n\tfor a type that has same precision as char_type_node\n\tand is an integral type.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7355a9408b990cdd20db91e2e1ba0b03e801d6a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7355a9408b990cdd20db91e2e1ba0b03e801d6a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7355a9408b990cdd20db91e2e1ba0b03e801d6a6/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e5584f7a1746ec1c3e187084832e5a58432ac74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e5584f7a1746ec1c3e187084832e5a58432ac74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e5584f7a1746ec1c3e187084832e5a58432ac74"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "a150fa0d3b54155d2cdd04ed536742c399c225b1", "filename": "gcc/expr.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7355a9408b990cdd20db91e2e1ba0b03e801d6a6/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7355a9408b990cdd20db91e2e1ba0b03e801d6a6/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=7355a9408b990cdd20db91e2e1ba0b03e801d6a6", "patch": "@@ -11828,17 +11828,22 @@ string_constant (tree arg, tree *ptr_offset, tree *mem_size, tree *decl)\n \tchartype = TREE_TYPE (chartype);\n       while (TREE_CODE (chartype) == ARRAY_TYPE)\n \tchartype = TREE_TYPE (chartype);\n-      /* Convert a char array to an empty STRING_CST having an array\n-\t of the expected type and size.  */\n-      if (!initsize)\n-\t  initsize = integer_zero_node;\n \n-      unsigned HOST_WIDE_INT size = tree_to_uhwi (initsize);\n-      init = build_string_literal (size, NULL, chartype, size);\n-      init = TREE_OPERAND (init, 0);\n-      init = TREE_OPERAND (init, 0);\n+      if (INTEGRAL_TYPE_P (chartype)\n+\t  && TYPE_PRECISION (chartype) == TYPE_PRECISION (char_type_node))\n+\t{\n+\t  /* Convert a char array to an empty STRING_CST having an array\n+\t     of the expected type and size.  */\n+\t  if (!initsize)\n+\t    initsize = integer_zero_node;\n+\n+\t  unsigned HOST_WIDE_INT size = tree_to_uhwi (initsize);\n+\t  init = build_string_literal (size, NULL, chartype, size);\n+\t  init = TREE_OPERAND (init, 0);\n+\t  init = TREE_OPERAND (init, 0);\n \n-      *ptr_offset = integer_zero_node;\n+\t  *ptr_offset = integer_zero_node;\n+\t}\n     }\n \n   if (decl)"}]}