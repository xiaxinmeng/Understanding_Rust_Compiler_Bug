{"sha": "3aab916f4ff9b41222273e712e1d435013ac8150", "node_id": "C_kwDOANBUbNoAKDNhYWI5MTZmNGZmOWI0MTIyMjI3M2U3MTJlMWQ0MzUwMTNhYzgxNTA", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-07-14T17:06:57Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-07-15T09:41:04Z"}, "message": "Use pp_vrange for ranges in dump_ssaname_info.\n\nThis changes the ad-hoc dumping of ranges in the gimple pretty printer\nto use the pp_vrange utility function, which has the benefit of\nhandling all range types going forward and unifying the dumping code.\n\nInstead of:\n\t# RANGE [0, 51] NONZERO 0x3f\n\t# RANGE ~[5, 10]\n\nwe would now get:\n\n\t# RANGE [irange] long unsigned int [0, 51] NONZERO 0x3f\n\t# RANGE [irange] int [-MIN, 4][11, MAX]\n\nTested on x86-64 Linux.\n\ngcc/ChangeLog:\n\n\t* gimple-pretty-print.cc (dump_ssaname_info): Use pp_vrange.", "tree": {"sha": "080d3bf66009a10f691dbd1e811c8de92964d2d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/080d3bf66009a10f691dbd1e811c8de92964d2d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3aab916f4ff9b41222273e712e1d435013ac8150", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aab916f4ff9b41222273e712e1d435013ac8150", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3aab916f4ff9b41222273e712e1d435013ac8150", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aab916f4ff9b41222273e712e1d435013ac8150/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64864aa9e6ea347a4f9c7027941be898ce993f85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64864aa9e6ea347a4f9c7027941be898ce993f85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64864aa9e6ea347a4f9c7027941be898ce993f85"}], "stats": {"total": 32, "additions": 4, "deletions": 28}, "files": [{"sha": "f18baec438a91b8638ef3eb465ea8c4f2c5ede7a", "filename": "gcc/gimple-pretty-print.cc", "status": "modified", "additions": 4, "deletions": 28, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aab916f4ff9b41222273e712e1d435013ac8150/gcc%2Fgimple-pretty-print.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aab916f4ff9b41222273e712e1d435013ac8150/gcc%2Fgimple-pretty-print.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-pretty-print.cc?ref=3aab916f4ff9b41222273e712e1d435013ac8150", "patch": "@@ -30,6 +30,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ssa.h\"\n #include \"cgraph.h\"\n #include \"gimple-pretty-print.h\"\n+#include \"value-range-pretty-print.h\"\n #include \"internal-fn.h\"\n #include \"tree-eh.h\"\n #include \"gimple-iterator.h\"\n@@ -2335,35 +2336,10 @@ dump_ssaname_info (pretty_printer *buffer, tree node, int spc)\n   if (!POINTER_TYPE_P (TREE_TYPE (node))\n       && SSA_NAME_RANGE_INFO (node))\n     {\n-      wide_int min, max, nonzero_bits;\n-      value_range r;\n-\n+      Value_Range r (TREE_TYPE (node));\n       get_global_range_query ()->range_of_expr (r, node);\n-      value_range_kind range_type = r.kind ();\n-      if (!r.undefined_p ())\n-\t{\n-\t  min = wi::to_wide (r.min ());\n-\t  max = wi::to_wide (r.max ());\n-\t}\n-\n-      // FIXME: Use irange::dump() instead.\n-      if (range_type == VR_VARYING)\n-\tpp_printf (buffer, \"# RANGE VR_VARYING\");\n-      else if (range_type == VR_RANGE || range_type == VR_ANTI_RANGE)\n-\t{\n-\t  pp_printf (buffer, \"# RANGE \");\n-\t  pp_printf (buffer, \"%s[\", range_type == VR_RANGE ? \"\" : \"~\");\n-\t  pp_wide_int (buffer, min, TYPE_SIGN (TREE_TYPE (node)));\n-\t  pp_printf (buffer, \", \");\n-\t  pp_wide_int (buffer, max, TYPE_SIGN (TREE_TYPE (node)));\n-\t  pp_printf (buffer, \"]\");\n-\t}\n-      nonzero_bits = get_nonzero_bits (node);\n-      if (nonzero_bits != -1)\n-\t{\n-\t  pp_string (buffer, \" NONZERO \");\n-\t  pp_wide_int (buffer, nonzero_bits, UNSIGNED);\n-\t}\n+      pp_string (buffer, \"# RANGE \");\n+      pp_vrange (buffer, &r);\n       newline_and_indent (buffer, spc);\n     }\n }"}]}