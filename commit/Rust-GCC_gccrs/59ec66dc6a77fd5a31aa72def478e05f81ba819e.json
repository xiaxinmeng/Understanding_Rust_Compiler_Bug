{"sha": "59ec66dc6a77fd5a31aa72def478e05f81ba819e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTllYzY2ZGM2YTc3ZmQ1YTMxYWE3MmRlZjQ3OGUwNWY4MWJhODE5ZQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1998-09-23T23:28:17Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-09-23T23:28:17Z"}, "message": "rtl.h (init_virtual_regs): New function.\n\n\t* rtl.h (init_virtual_regs): New function.\n\t* emit-rtl.c (init_virtual_regs): Define.\n\t(insn_emit): Use it.\n\t* integrate.c (save_for_inline_copying): Likewise.\n\nFrom-SVN: r22563", "tree": {"sha": "3b24405bdbc98bfccda73944703c58621ce54fc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b24405bdbc98bfccda73944703c58621ce54fc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59ec66dc6a77fd5a31aa72def478e05f81ba819e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59ec66dc6a77fd5a31aa72def478e05f81ba819e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59ec66dc6a77fd5a31aa72def478e05f81ba819e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59ec66dc6a77fd5a31aa72def478e05f81ba819e/comments", "author": null, "committer": null, "parents": [{"sha": "a5f421658c4dfe336f6b50153ffbe1fbc203107f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5f421658c4dfe336f6b50153ffbe1fbc203107f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5f421658c4dfe336f6b50153ffbe1fbc203107f"}], "stats": {"total": 41, "additions": 32, "deletions": 9}, "files": [{"sha": "4a14dcc44b6f5ca249bb40c1c40d30d6aa87bb67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59ec66dc6a77fd5a31aa72def478e05f81ba819e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59ec66dc6a77fd5a31aa72def478e05f81ba819e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=59ec66dc6a77fd5a31aa72def478e05f81ba819e", "patch": "@@ -1,3 +1,10 @@\n+Wed Sep 23 22:32:31 1998  Mark Mitchell  <mark@markmitchell.com>\n+\n+\t* rtl.h (init_virtual_regs): New function.\n+\t* emit-rtl.c (init_virtual_regs): Define.\n+\t(insn_emit): Use it.\n+\t* integrate.c (save_for_inline_copying): Likewise.\n+\n Wed Sep 23 16:22:01 1998  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/arm/thumb.h: The following patches were made by Jim Wilson:"}, {"sha": "e6e0e609e54e9720463bca997f10dd87c00aab7f", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59ec66dc6a77fd5a31aa72def478e05f81ba819e/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59ec66dc6a77fd5a31aa72def478e05f81ba819e/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=59ec66dc6a77fd5a31aa72def478e05f81ba819e", "patch": "@@ -3297,6 +3297,18 @@ gen_sequence ()\n   return result;\n }\n \f\n+/* Put the various virtual registers into REGNO_REG_RTX.  */\n+\n+void\n+init_virtual_regs ()\n+{\n+  regno_reg_rtx[VIRTUAL_INCOMING_ARGS_REGNUM] = virtual_incoming_args_rtx;\n+  regno_reg_rtx[VIRTUAL_STACK_VARS_REGNUM] = virtual_stack_vars_rtx;\n+  regno_reg_rtx[VIRTUAL_STACK_DYNAMIC_REGNUM] = virtual_stack_dynamic_rtx;\n+  regno_reg_rtx[VIRTUAL_OUTGOING_ARGS_REGNUM] = virtual_outgoing_args_rtx;\n+  regno_reg_rtx[VIRTUAL_CFA_REGNUM] = virtual_cfa_rtx;\n+}\n+\n /* Initialize data structures and variables in this file\n    before generating rtl for each function.  */\n \n@@ -3339,11 +3351,7 @@ init_emit ()\n   bzero ((char *) regno_reg_rtx, regno_pointer_flag_length * sizeof (rtx));\n \n   /* Put copies of all the virtual register rtx into regno_reg_rtx.  */\n-  regno_reg_rtx[VIRTUAL_INCOMING_ARGS_REGNUM] = virtual_incoming_args_rtx;\n-  regno_reg_rtx[VIRTUAL_STACK_VARS_REGNUM] = virtual_stack_vars_rtx;\n-  regno_reg_rtx[VIRTUAL_STACK_DYNAMIC_REGNUM] = virtual_stack_dynamic_rtx;\n-  regno_reg_rtx[VIRTUAL_OUTGOING_ARGS_REGNUM] = virtual_outgoing_args_rtx;\n-  regno_reg_rtx[VIRTUAL_CFA_REGNUM] = virtual_cfa_rtx;\n+  init_virtual_regs ();\n \n   /* Indicate that the virtual registers and stack locations are\n      all pointers.  */"}, {"sha": "d3fb05bbbfcf482ae682e601137b5927dfe98dc2", "filename": "gcc/integrate.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59ec66dc6a77fd5a31aa72def478e05f81ba819e/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59ec66dc6a77fd5a31aa72def478e05f81ba819e/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=59ec66dc6a77fd5a31aa72def478e05f81ba819e", "patch": "@@ -561,10 +561,7 @@ save_for_inline_copying (fndecl)\n   regno_reg_rtx = reg_map;\n \n   /* Put copies of all the virtual register rtx into the new regno_reg_rtx.  */\n-  regno_reg_rtx[VIRTUAL_INCOMING_ARGS_REGNUM] = virtual_incoming_args_rtx;\n-  regno_reg_rtx[VIRTUAL_STACK_VARS_REGNUM] = virtual_stack_vars_rtx;\n-  regno_reg_rtx[VIRTUAL_STACK_DYNAMIC_REGNUM] = virtual_stack_dynamic_rtx;\n-  regno_reg_rtx[VIRTUAL_OUTGOING_ARGS_REGNUM] = virtual_outgoing_args_rtx;\n+  init_virtual_regs ();\n \n   /* Likewise each label rtx must have a unique rtx as its copy.  */\n "}, {"sha": "dc432f34505c0e5d1e725008bcab680d3fd61c29", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59ec66dc6a77fd5a31aa72def478e05f81ba819e/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59ec66dc6a77fd5a31aa72def478e05f81ba819e/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=59ec66dc6a77fd5a31aa72def478e05f81ba819e", "patch": "@@ -1310,6 +1310,7 @@ extern void add_insn_after\t\t\tPROTO ((rtx, rtx));\n extern void reorder_insns_with_line_notes\tPROTO ((rtx, rtx, rtx));\n extern void emit_insn_after_with_line_notes\tPROTO ((rtx, rtx, rtx));\n extern enum rtx_code classify_insn\t\tPROTO ((rtx));\n+extern void init_virtual_regs                   PROTO ((void));\n extern rtx emit\t\t\t\t\tPROTO ((rtx));\n /* Query and clear/ restore no_line_numbers.  This is used by the\n    switch / case handling in stmt.c to give proper line numbers in"}, {"sha": "2d17b33e6011b8d8fe2b6b710861d40530093cb4", "filename": "gcc/testsuite/g++.old-deja/g++.other/local2.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59ec66dc6a77fd5a31aa72def478e05f81ba819e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flocal2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59ec66dc6a77fd5a31aa72def478e05f81ba819e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flocal2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flocal2.C?ref=59ec66dc6a77fd5a31aa72def478e05f81ba819e", "patch": "@@ -0,0 +1,10 @@\n+// Build don't link:\n+// Special g++ Options: -O2\n+\n+void f ()\n+{\n+  struct Init {\n+    Init () {\n+    }\n+  };\n+}"}]}