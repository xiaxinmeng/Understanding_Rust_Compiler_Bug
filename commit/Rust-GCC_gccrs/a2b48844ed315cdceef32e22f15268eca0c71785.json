{"sha": "a2b48844ed315cdceef32e22f15268eca0c71785", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJiNDg4NDRlZDMxNWNkY2VlZjMyZTIyZjE1MjY4ZWNhMGM3MTc4NQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-02-21T18:29:57Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-02-21T18:29:57Z"}, "message": "re PR rtl-optimization/79593 (Poor/Worse code generation for FPU on versions after 6)\n\n\tPR target/79593\n\t* config/i386/i386.md (standard_x87sse_constant_load splitter):\n\tUse nonimmediate_operand instead of memory_operand for operand 1.\n\t(float-extend standard_x87sse_constant_load splitter): Ditto.\n\ntestsuite/ChangeLog:\n\n\tPR target/79593\n\t* gcc.target/i386/pr79593.c: New test.\n\nFrom-SVN: r245640", "tree": {"sha": "d901bd6b97927a752cb588af33aa476c6ba5f3db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d901bd6b97927a752cb588af33aa476c6ba5f3db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2b48844ed315cdceef32e22f15268eca0c71785", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2b48844ed315cdceef32e22f15268eca0c71785", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2b48844ed315cdceef32e22f15268eca0c71785", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2b48844ed315cdceef32e22f15268eca0c71785/comments", "author": null, "committer": null, "parents": [{"sha": "b7280ac2708e2a36337347de3c27e8fda914683e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7280ac2708e2a36337347de3c27e8fda914683e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7280ac2708e2a36337347de3c27e8fda914683e"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "23f2ea022db64a4c21b3b00f3aad9f776174ad70", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b48844ed315cdceef32e22f15268eca0c71785/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b48844ed315cdceef32e22f15268eca0c71785/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=a2b48844ed315cdceef32e22f15268eca0c71785", "patch": "@@ -3660,7 +3660,7 @@\n \n (define_split\n   [(set (match_operand 0 \"any_fp_register_operand\")\n-\t(match_operand 1 \"memory_operand\"))]\n+\t(match_operand 1 \"nonimmediate_operand\"))]\n   \"reload_completed\n    && (GET_MODE (operands[0]) == TFmode\n        || GET_MODE (operands[0]) == XFmode\n@@ -3672,7 +3672,7 @@\n \n (define_split\n   [(set (match_operand 0 \"any_fp_register_operand\")\n-\t(float_extend (match_operand 1 \"memory_operand\")))]\n+\t(float_extend (match_operand 1 \"nonimmediate_operand\")))]\n   \"reload_completed\n    && (GET_MODE (operands[0]) == TFmode\n        || GET_MODE (operands[0]) == XFmode"}, {"sha": "c1166341854ea03172dbf31483f78751891da595", "filename": "gcc/testsuite/gcc.target/i386/pr79593.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2b48844ed315cdceef32e22f15268eca0c71785/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79593.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2b48844ed315cdceef32e22f15268eca0c71785/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79593.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79593.c?ref=a2b48844ed315cdceef32e22f15268eca0c71785", "patch": "@@ -0,0 +1,17 @@\n+/* PR target/79593 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Ofast -mfpmath=387\" } */\n+\n+extern float global_data[1024];\n+\n+static long double MIN (long double a, long double b) { return a < b ? a : b; }\n+static long double MAX (long double a, long double b) { return a > b ? a : b; }\n+\n+float bar (void)\n+{\n+  long double delta = (global_data[0]);\n+\n+  return (MIN (MAX (delta, 0.0l), 1.0l));\n+}\n+\n+/* { dg-final { scan-assembler-not \"fld\\[ \\t\\]+%st\" } } */"}]}