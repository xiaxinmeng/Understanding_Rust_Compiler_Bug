{"sha": "ad4f9e7ebb58d2530243b3d77bfe5265dfdf0693", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ0ZjllN2ViYjU4ZDI1MzAyNDNiM2Q3N2JmZTUyNjVkZmRmMDY5Mw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-12-23T07:23:31Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-12-23T07:23:31Z"}, "message": "i386.md (btsq, btrq, btcq): Fix modes.\n\n        * config/i386/i386.md (btsq, btrq, btcq): Fix modes.\n        (bt peepholes): Likewise.\n\nFrom-SVN: r92534", "tree": {"sha": "fd8d8c67531b6eee9974301b46105b87369a6f52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd8d8c67531b6eee9974301b46105b87369a6f52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad4f9e7ebb58d2530243b3d77bfe5265dfdf0693", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad4f9e7ebb58d2530243b3d77bfe5265dfdf0693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad4f9e7ebb58d2530243b3d77bfe5265dfdf0693", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad4f9e7ebb58d2530243b3d77bfe5265dfdf0693/comments", "author": null, "committer": null, "parents": [{"sha": "d5606ec91fcc4962b73ffc9e373c42322a5552f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5606ec91fcc4962b73ffc9e373c42322a5552f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5606ec91fcc4962b73ffc9e373c42322a5552f3"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "722a951537a7ee9d2d141ed8968e841665a41a7e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4f9e7ebb58d2530243b3d77bfe5265dfdf0693/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4f9e7ebb58d2530243b3d77bfe5265dfdf0693/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad4f9e7ebb58d2530243b3d77bfe5265dfdf0693", "patch": "@@ -1,5 +1,8 @@\n 2004-12-22  Richard Henderson  <rth@redhat.com>\n \n+\t* config/i386/i386.md (btsq, btrq, btcq): Fix modes.\n+\t(bt peepholes): Likewise.\n+\n \t* varasm.c (force_const_mem): Call set_mem_align.\n \n 2004-12-22  Richard Henderson  <rth@redhat.com>"}, {"sha": "648748cadeb032fd082a330c833076164ad8003f", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad4f9e7ebb58d2530243b3d77bfe5265dfdf0693/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad4f9e7ebb58d2530243b3d77bfe5265dfdf0693/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=ad4f9e7ebb58d2530243b3d77bfe5265dfdf0693", "patch": "@@ -12218,29 +12218,29 @@\n ;; negdf respectively, so they can never be disabled entirely.\n \n (define_insn \"*btsq\"\n-  [(set (zero_extract:DI (match_operand 0 \"register_operand\" \"+r\")\n+  [(set (zero_extract:DI (match_operand:DI 0 \"register_operand\" \"+r\")\n \t\t\t (const_int 1)\n-\t\t\t (match_operand 1 \"const_0_to_63_operand\" \"\"))\n+\t\t\t (match_operand:DI 1 \"const_0_to_63_operand\" \"\"))\n \t(const_int 1))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_64BIT && (TARGET_USE_BT || reload_completed)\"\n   \"bts{q} %1,%0\"\n   [(set_attr \"type\" \"alu1\")])\n \n (define_insn \"*btrq\"\n-  [(set (zero_extract:DI (match_operand 0 \"register_operand\" \"+r\")\n+  [(set (zero_extract:DI (match_operand:DI 0 \"register_operand\" \"+r\")\n \t\t\t (const_int 1)\n-\t\t\t (match_operand 1 \"const_0_to_63_operand\" \"\"))\n+\t\t\t (match_operand:DI 1 \"const_0_to_63_operand\" \"\"))\n \t(const_int 0))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_64BIT && (TARGET_USE_BT || reload_completed)\"\n   \"btr{q} %1,%0\"\n   [(set_attr \"type\" \"alu1\")])\n \n (define_insn \"*btcq\"\n-  [(set (zero_extract:DI (match_operand 0 \"register_operand\" \"+r\")\n+  [(set (zero_extract:DI (match_operand:DI 0 \"register_operand\" \"+r\")\n \t\t\t (const_int 1)\n-\t\t\t (match_operand 1 \"const_0_to_63_operand\" \"\"))\n+\t\t\t (match_operand:DI 1 \"const_0_to_63_operand\" \"\"))\n \t(not:DI (zero_extract:DI (match_dup 0) (const_int 1) (match_dup 1))))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_64BIT && (TARGET_USE_BT || reload_completed)\"\n@@ -12252,9 +12252,9 @@\n (define_peephole2\n   [(match_scratch:DI 2 \"r\")\n    (parallel [(set (zero_extract:DI\n-\t\t     (match_operand 0 \"register_operand\" \"\")\n+\t\t     (match_operand:DI 0 \"register_operand\" \"\")\n \t\t     (const_int 1)\n-\t\t     (match_operand 1 \"const_0_to_63_operand\" \"\"))\n+\t\t     (match_operand:DI 1 \"const_0_to_63_operand\" \"\"))\n \t\t   (const_int 1))\n \t      (clobber (reg:CC FLAGS_REG))])]\n   \"TARGET_64BIT && !TARGET_USE_BT\"\n@@ -12284,9 +12284,9 @@\n (define_peephole2\n   [(match_scratch:DI 2 \"r\")\n    (parallel [(set (zero_extract:DI\n-\t\t     (match_operand 0 \"register_operand\" \"\")\n+\t\t     (match_operand:DI 0 \"register_operand\" \"\")\n \t\t     (const_int 1)\n-\t\t     (match_operand 1 \"const_0_to_63_operand\" \"\"))\n+\t\t     (match_operand:DI 1 \"const_0_to_63_operand\" \"\"))\n \t\t   (const_int 0))\n \t      (clobber (reg:CC FLAGS_REG))])]\n   \"TARGET_64BIT && !TARGET_USE_BT\"\n@@ -12316,9 +12316,9 @@\n (define_peephole2\n   [(match_scratch:DI 2 \"r\")\n    (parallel [(set (zero_extract:DI\n-\t\t     (match_operand 0 \"register_operand\" \"\")\n+\t\t     (match_operand:DI 0 \"register_operand\" \"\")\n \t\t     (const_int 1)\n-\t\t     (match_operand 1 \"const_0_to_63_operand\" \"\"))\n+\t\t     (match_operand:DI 1 \"const_0_to_63_operand\" \"\"))\n \t      (not:DI (zero_extract:DI\n \t\t\t(match_dup 0) (const_int 1) (match_dup 1))))\n \t      (clobber (reg:CC FLAGS_REG))])]"}]}