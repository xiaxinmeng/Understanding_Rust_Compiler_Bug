{"sha": "585df50b0c63b895742726b556732faac623fa35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg1ZGY1MGIwYzYzYjg5NTc0MjcyNmI1NTY3MzJmYWFjNjIzZmEzNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-01T10:47:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-01T10:47:27Z"}, "message": "rtsfind.ads: Add block IO versions of stream routines for Strings.\n\n2008-08-01  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* rtsfind.ads: Add block IO versions of stream routines for Strings.\n\n\t* bindgen.adb, gnat_rm.texi, gnat_ugn.texi, opt.ads,\n\tsem_prag.adb, snames.adb, snames.ads, snames.h,\n\tpar-prag.adb: Undo Canonical_Streams related changes.\n\n\t* s-rident.ads: Add new restriction No_Stream_Optimizations.\n\n\t* s-ststop.ads, s-ststop.adb: Comment reformatting.\n\tDefine enumeration type to designate different IO mechanisms.\n\tEnchance generic package Stream_Ops_Internal to include an\n\timplementation of Input and Output.\n\n\t* exp_attr.adb (Find_Stream_Subprogram): If restriction\n\tNo_Stream_Optimization is active, choose the default byte IO\n\timplementations of stream attributes for Strings.\n\tOtherwise use the corresponding block IO version.\n\nFrom-SVN: r138511", "tree": {"sha": "901aa00917dc6e453a022ff13c76ed721ac6fb44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/901aa00917dc6e453a022ff13c76ed721ac6fb44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/585df50b0c63b895742726b556732faac623fa35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/585df50b0c63b895742726b556732faac623fa35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/585df50b0c63b895742726b556732faac623fa35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/585df50b0c63b895742726b556732faac623fa35/comments", "author": null, "committer": null, "parents": [{"sha": "20b40e7b4413bac4698d39675c32ce4b0eb61e45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20b40e7b4413bac4698d39675c32ce4b0eb61e45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20b40e7b4413bac4698d39675c32ce4b0eb61e45"}], "stats": {"total": 2313, "additions": 1240, "deletions": 1073}, "files": [{"sha": "dc260b7f66064f060a9570ff5e12a07f73af73f2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=585df50b0c63b895742726b556732faac623fa35", "patch": "@@ -1,7 +1,32 @@\n+2008-08-01  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* rtsfind.ads: Add block IO versions of stream routines for Strings.\n+\t\n+\t* bindgen.adb, gnat_rm.texi, gnat_ugn.texi, opt.ads,\n+\tsem_prag.adb, snames.adb, snames.ads, snames.h,\n+\tpar-prag.adb: Undo previous stream related changes.\n+\t\n+\t* s-rident.ads: Add new restriction No_Stream_Optimizations.\n+\t\n+\t* s-ststop.ads, s-ststop.adb: Comment reformatting.\n+\tDefine enumeration type to designate different IO mechanisms.\n+\tEnchance generic package Stream_Ops_Internal to include an\n+\timplementation of Input and Output.\n+\n+\t* exp_attr.adb (Find_Stream_Subprogram): If restriction\n+\tNo_Stream_Optimization is active, choose the default byte IO\n+\timplementations of stream attributes for Strings.\n+\tOtherwise use the corresponding block IO version.\n+\n 2008-08-01  Olivier Hainque  <hainque@adacore.com>\n \t\n-\t* decl.c (gnat_to_gnu_entity) <case E_Function>: Do not turn Ada\n-\tPure into GCC const, now implicitely implying nothrow as well.\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <case E_Function>: Do not\n+\tturn Ada Pure into GCC const, now implicitely implying nothrow as well.\n+\n+2008-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par-ch3.adb (P_Defining_Identifier): Avoid repeated attempt to\n+\tconvert plain identifier into defining identifier.\n \n 2008-08-01  Robert Dewar  <dewar@adacore.com>\n "}, {"sha": "070651cbd6a19777e6a641afa2aeec4d7915a890", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=585df50b0c63b895742726b556732faac623fa35", "patch": "@@ -126,7 +126,6 @@ package body Bindgen is\n    --     Detect_Blocking               : Integer;\n    --     Default_Stack_Size            : Integer;\n    --     Leap_Seconds_Support          : Integer;\n-   --     Canonical_Streams             : Integer;\n \n    --  Main_Priority is the priority value set by pragma Priority in the main\n    --  program. If no such pragma is present, the value is -1.\n@@ -212,10 +211,6 @@ package body Bindgen is\n    --  disabled. A value of zero indicates that leap seconds are turned \"off\",\n    --  while a value of one signifies \"on\" status.\n \n-   --  Canonical_Streams indicates whether stream-related optimizations are\n-   --  active. A value of zero indicates that all optimizations are active,\n-   --  while a value of one signifies that they have been disabled.\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n@@ -596,9 +591,6 @@ package body Bindgen is\n          WBI (\"      Leap_Seconds_Support : Integer;\");\n          WBI (\"      pragma Import (C, Leap_Seconds_Support, \" &\n               \"\"\"__gl_leap_seconds_support\"\");\");\n-         WBI (\"      Canonical_Streams : Integer;\");\n-         WBI (\"      pragma Import (C, Canonical_Streams, \" &\n-              \"\"\"__gl_canonical_streams\"\");\");\n \n          --  Import entry point for elaboration time signal handler\n          --  installation, and indication of if it's been called previously.\n@@ -767,17 +759,6 @@ package body Bindgen is\n          Set_String (\";\");\n          Write_Statement_Buffer;\n \n-         Set_String (\"      Canonical_Streams := \");\n-\n-         if Canonical_Streams then\n-            Set_Int (1);\n-         else\n-            Set_Int (0);\n-         end if;\n-\n-         Set_String (\";\");\n-         Write_Statement_Buffer;\n-\n          --  Generate call to Install_Handler\n \n          WBI (\"\");\n@@ -1059,18 +1040,6 @@ package body Bindgen is\n          Set_String (\";\");\n          Write_Statement_Buffer;\n \n-         WBI (\"   extern int __gl_canonical_streams;\");\n-         Set_String (\"   __gl_canonical_streams = \");\n-\n-         if Canonical_Streams then\n-            Set_Int (1);\n-         else\n-            Set_Int (0);\n-         end if;\n-\n-         Set_String (\";\");\n-         Write_Statement_Buffer;\n-\n          WBI (\"\");\n \n          --  Install elaboration time signal handler"}, {"sha": "8e0a83b5d43eae6c2b0b24468bd85852d222dedf", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 72, "deletions": 25, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=585df50b0c63b895742726b556732faac623fa35", "patch": "@@ -5365,53 +5365,100 @@ package body Exp_Attr is\n         and then\n           not Is_Predefined_File_Name (Unit_File_Name (Current_Sem_Unit))\n       then\n-\n          --  String as defined in package Ada\n \n          if Base_Typ = Standard_String then\n-            if Nam = TSS_Stream_Input then\n-               return RTE (RE_String_Input);\n+            if Restriction_Active (No_Stream_Optimizations) then\n+               if Nam = TSS_Stream_Input then\n+                  return RTE (RE_String_Input);\n+\n+               elsif Nam = TSS_Stream_Output then\n+                  return RTE (RE_String_Output);\n+\n+               elsif Nam = TSS_Stream_Read then\n+                  return RTE (RE_String_Read);\n \n-            elsif Nam = TSS_Stream_Output then\n-               return RTE (RE_String_Output);\n+               else pragma Assert (Nam = TSS_Stream_Write);\n+                  return RTE (RE_String_Write);\n+               end if;\n+\n+            else\n+               if Nam = TSS_Stream_Input then\n+                  return RTE (RE_String_Input_Blk_IO);\n \n-            elsif Nam = TSS_Stream_Read then\n-               return RTE (RE_String_Read);\n+               elsif Nam = TSS_Stream_Output then\n+                  return RTE (RE_String_Output_Blk_IO);\n \n-            else pragma Assert (Nam = TSS_Stream_Write);\n-               return RTE (RE_String_Write);\n+               elsif Nam = TSS_Stream_Read then\n+                  return RTE (RE_String_Read_Blk_IO);\n+\n+               else pragma Assert (Nam = TSS_Stream_Write);\n+                  return RTE (RE_String_Write_Blk_IO);\n+               end if;\n             end if;\n \n          --  Wide_String as defined in package Ada\n \n          elsif Base_Typ = Standard_Wide_String then\n-            if Nam = TSS_Stream_Input then\n-               return RTE (RE_Wide_String_Input);\n+            if Restriction_Active (No_Stream_Optimizations) then\n+               if Nam = TSS_Stream_Input then\n+                  return RTE (RE_Wide_String_Input);\n+\n+               elsif Nam = TSS_Stream_Output then\n+                  return RTE (RE_Wide_String_Output);\n+\n+               elsif Nam = TSS_Stream_Read then\n+                  return RTE (RE_Wide_String_Read);\n+\n+               else pragma Assert (Nam = TSS_Stream_Write);\n+                  return RTE (RE_Wide_String_Write);\n+               end if;\n+\n+            else\n+               if Nam = TSS_Stream_Input then\n+                  return RTE (RE_Wide_String_Input_Blk_IO);\n \n-            elsif Nam = TSS_Stream_Output then\n-               return RTE (RE_Wide_String_Output);\n+               elsif Nam = TSS_Stream_Output then\n+                  return RTE (RE_Wide_String_Output_Blk_IO);\n \n-            elsif Nam = TSS_Stream_Read then\n-               return RTE (RE_Wide_String_Read);\n+               elsif Nam = TSS_Stream_Read then\n+                  return RTE (RE_Wide_String_Read_Blk_IO);\n \n-            else pragma Assert (Nam = TSS_Stream_Write);\n-               return RTE (RE_Wide_String_Write);\n+               else pragma Assert (Nam = TSS_Stream_Write);\n+                  return RTE (RE_Wide_String_Write_Blk_IO);\n+               end if;\n             end if;\n \n          --  Wide_Wide_String as defined in package Ada\n \n          elsif Base_Typ = Standard_Wide_Wide_String then\n-            if Nam = TSS_Stream_Input then\n-               return RTE (RE_Wide_Wide_String_Input);\n+            if Restriction_Active (No_Stream_Optimizations) then\n+               if Nam = TSS_Stream_Input then\n+                  return RTE (RE_Wide_Wide_String_Input);\n+\n+               elsif Nam = TSS_Stream_Output then\n+                  return RTE (RE_Wide_Wide_String_Output);\n \n-            elsif Nam = TSS_Stream_Output then\n-               return RTE (RE_Wide_Wide_String_Output);\n+               elsif Nam = TSS_Stream_Read then\n+                  return RTE (RE_Wide_Wide_String_Read);\n \n-            elsif Nam = TSS_Stream_Read then\n-               return RTE (RE_Wide_Wide_String_Read);\n+               else pragma Assert (Nam = TSS_Stream_Write);\n+                  return RTE (RE_Wide_Wide_String_Write);\n+               end if;\n \n-            else pragma Assert (Nam = TSS_Stream_Write);\n-               return RTE (RE_Wide_Wide_String_Write);\n+            else\n+               if Nam = TSS_Stream_Input then\n+                  return RTE (RE_Wide_Wide_String_Input_Blk_IO);\n+\n+               elsif Nam = TSS_Stream_Output then\n+                  return RTE (RE_Wide_Wide_String_Output_Blk_IO);\n+\n+               elsif Nam = TSS_Stream_Read then\n+                  return RTE (RE_Wide_Wide_String_Read_Blk_IO);\n+\n+               else pragma Assert (Nam = TSS_Stream_Write);\n+                  return RTE (RE_Wide_Wide_String_Write_Blk_IO);\n+               end if;\n             end if;\n          end if;\n       end if;"}, {"sha": "29c1aec6dae85ec1cb3c62d1ee83b665900280a1", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=585df50b0c63b895742726b556732faac623fa35", "patch": "@@ -104,7 +104,6 @@ Implementation Defined Pragmas\n * Pragma Assert::\n * Pragma Ast_Entry::\n * Pragma C_Pass_By_Copy::\n-* Pragma Canonical_Streams::\n * Pragma Check::\n * Pragma Check_Name::\n * Pragma Check_Policy::\n@@ -706,7 +705,6 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Assert::\n * Pragma Ast_Entry::\n * Pragma C_Pass_By_Copy::\n-* Pragma Canonical_Streams::\n * Pragma Check::\n * Pragma Check_Name::\n * Pragma Check_Policy::\n@@ -1059,27 +1057,6 @@ You can also pass records by copy by specifying the convention\n @code{Import} and @code{Export} pragmas, which allow specification of\n passing mechanisms on a parameter by parameter basis.\n \n-@node Pragma Canonical_Streams\n-@unnumberedsec Canonical Streams\n-@cindex Canonical streams\n-@findex Canonical_Streams\n-@noindent\n-Syntax:\n-@smallexample @c ada\n-pragma Canonical_Streams;\n-@end smallexample\n-\n-@noindent\n-This configuration pragma affects the behavior of stream attributes of any \n-@code{String}, @code{Wide_String} or @code{Wide_Wide_String} based type. When \n-this pragma is present, @code{'Input}, @code{'Output}, @code{'Read} and \n-@code{'Write} exibit Ada 95 canonical behavior, in other words, streaming of \n-values is done character by character.\n-\n-@noindent\n-The use of this pragma is intended to bypass any implementation-related \n-optimizations allowed by Ada 2005 RM 13.13.2 (56/2) Implementation Permission.\n-\n @node Pragma Check\n @unnumberedsec Pragma Check\n @cindex Assertions"}, {"sha": "99df83f9918f13e5eddb0fd1b70ab2eb0787e66e", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=585df50b0c63b895742726b556732faac623fa35", "patch": "@@ -10925,7 +10925,6 @@ recognized by GNAT:\n    Ada_2005\n    Assertion_Policy\n    C_Pass_By_Copy\n-   Canonical_Streams\n    Check_Name\n    Check_Policy\n    Compile_Time_Error"}, {"sha": "600231c737aca1945c6998ccf4982b729a33a4c7", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=585df50b0c63b895742726b556732faac623fa35", "patch": "@@ -283,11 +283,6 @@ package Opt is\n    --  is set True, or if pragma No_Run_Time is used. See the spec of Rtsfind\n    --  for details on the handling of the latter pragma.\n \n-   Canonical_Streams : Boolean := False;\n-   --  GNAT, GNATBIND\n-   --  Set to True if configuration pragma Canonical_Streams is present. It\n-   --  controls the canonical behaviour of stream operations for String types.\n-\n    Constant_Condition_Warnings : Boolean := False;\n    --  GNAT\n    --  Set to True to activate warnings on constant conditions"}, {"sha": "ba32f387b6a236afdd3b812da8d0eaa836800e7c", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=585df50b0c63b895742726b556732faac623fa35", "patch": "@@ -1058,7 +1058,6 @@ begin\n            Pragma_Atomic                        |\n            Pragma_Atomic_Components             |\n            Pragma_Attach_Handler                |\n-           Pragma_Canonical_Streams             |\n            Pragma_Check                         |\n            Pragma_Check_Name                    |\n            Pragma_Check_Policy                  |"}, {"sha": "1808cd8a4060849a7384c8dc09cc6a815a133814", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=585df50b0c63b895742726b556732faac623fa35", "patch": "@@ -1331,17 +1331,29 @@ package Rtsfind is\n      RE_Str_Concat_5,                    -- System.String_Ops_Concat_5\n \n      RE_String_Input,                    -- System.Strings.Stream_Ops\n+     RE_String_Input_Blk_IO,             -- System.Strings.Stream_Ops\n      RE_String_Output,                   -- System.Strings.Stream_Ops\n+     RE_String_Output_Blk_IO,            -- System.Strings.Stream_Ops\n      RE_String_Read,                     -- System.Strings.Stream_Ops\n+     RE_String_Read_Blk_IO,              -- System.Strings.Stream_Ops\n      RE_String_Write,                    -- System.Strings.Stream_Ops\n+     RE_String_Write_Blk_IO,             -- System.Strings.Stream_Ops\n      RE_Wide_String_Input,               -- System.Strings.Stream_Ops\n+     RE_Wide_String_Input_Blk_IO,        -- System.Strings.Stream_Ops\n      RE_Wide_String_Output,              -- System.Strings.Stream_Ops\n+     RE_Wide_String_Output_Blk_IO,       -- System.Strings.Stream_Ops\n      RE_Wide_String_Read,                -- System.Strings.Stream_Ops\n+     RE_Wide_String_Read_Blk_IO,         -- System.Strings.Stream_Ops\n      RE_Wide_String_Write,               -- System.Strings.Stream_Ops\n+     RE_Wide_String_Write_Blk_IO,        -- System.Strings.Stream_Ops\n      RE_Wide_Wide_String_Input,          -- System.Strings.Stream_Ops\n+     RE_Wide_Wide_String_Input_Blk_IO,   -- System.Strings.Stream_Ops\n      RE_Wide_Wide_String_Output,         -- System.Strings.Stream_Ops\n+     RE_Wide_Wide_String_Output_Blk_IO,  -- System.Strings.Stream_Ops\n      RE_Wide_Wide_String_Read,           -- System.Strings.Stream_Ops\n+     RE_Wide_Wide_String_Read_Blk_IO,    -- System.Strings.Stream_Ops\n      RE_Wide_Wide_String_Write,          -- System.Strings.Stream_Ops\n+     RE_Wide_Wide_String_Write_Blk_IO,   -- System.Strings.Stream_Ops\n \n      RE_Task_Info_Type,                  -- System.Task_Info\n      RE_Unspecified_Task_Info,           -- System.Task_Info\n@@ -2473,17 +2485,29 @@ package Rtsfind is\n      RE_Str_Concat_5                     => System_String_Ops_Concat_5,\n \n      RE_String_Input                     => System_Strings_Stream_Ops,\n+     RE_String_Input_Blk_IO              => System_Strings_Stream_Ops,\n      RE_String_Output                    => System_Strings_Stream_Ops,\n+     RE_String_Output_Blk_IO             => System_Strings_Stream_Ops,\n      RE_String_Read                      => System_Strings_Stream_Ops,\n+     RE_String_Read_Blk_IO               => System_Strings_Stream_Ops,\n      RE_String_Write                     => System_Strings_Stream_Ops,\n+     RE_String_Write_Blk_IO              => System_Strings_Stream_Ops,\n      RE_Wide_String_Input                => System_Strings_Stream_Ops,\n+     RE_Wide_String_Input_Blk_IO         => System_Strings_Stream_Ops,\n      RE_Wide_String_Output               => System_Strings_Stream_Ops,\n+     RE_Wide_String_Output_Blk_IO        => System_Strings_Stream_Ops,\n      RE_Wide_String_Read                 => System_Strings_Stream_Ops,\n+     RE_Wide_String_Read_Blk_IO          => System_Strings_Stream_Ops,\n      RE_Wide_String_Write                => System_Strings_Stream_Ops,\n+     RE_Wide_String_Write_Blk_IO         => System_Strings_Stream_Ops,\n      RE_Wide_Wide_String_Input           => System_Strings_Stream_Ops,\n+     RE_Wide_Wide_String_Input_Blk_IO    => System_Strings_Stream_Ops,\n      RE_Wide_Wide_String_Output          => System_Strings_Stream_Ops,\n+     RE_Wide_Wide_String_Output_Blk_IO   => System_Strings_Stream_Ops,\n      RE_Wide_Wide_String_Read            => System_Strings_Stream_Ops,\n+     RE_Wide_Wide_String_Read_Blk_IO     => System_Strings_Stream_Ops,\n      RE_Wide_Wide_String_Write           => System_Strings_Stream_Ops,\n+     RE_Wide_Wide_String_Write_Blk_IO    => System_Strings_Stream_Ops,\n \n      RE_Task_Info_Type                   => System_Task_Info,\n      RE_Unspecified_Task_Info            => System_Task_Info,"}, {"sha": "b31d212b85a756f577e1b04f9b35269fb29250c0", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=585df50b0c63b895742726b556732faac623fa35", "patch": "@@ -102,6 +102,7 @@ package System.Rident is\n       No_Select_Statements,                    -- GNAT (Ravenscar)\n       No_Specific_Termination_Handlers,        -- (RM D.7(10.7/2))\n       No_Standard_Storage_Pools,               -- GNAT\n+      No_Stream_Optimizations,                 -- GNAT\n       No_Streams,                              -- GNAT\n       No_Task_Allocators,                      -- (RM D.7(7))\n       No_Task_Attributes_Package,              -- GNAT"}, {"sha": "ca5c880fb311769f605cbcb497eac8395aa77b79", "filename": "gcc/ada/s-ststop.adb", "status": "modified", "additions": 244, "deletions": 146, "changes": 390, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fs-ststop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fs-ststop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-ststop.adb?ref=585df50b0c63b895742726b556732faac623fa35", "patch": "@@ -43,6 +43,11 @@ with System.Stream_Attributes; use System;\n \n package body System.Strings.Stream_Ops is\n \n+   --  The following type describes the low-level IO mechanism used in package\n+   --  Stream_Ops_Internal.\n+\n+   type IO_Kind is (Byte_IO, Block_IO);\n+\n    --  The following package provides an IO framework for strings. Depending\n    --  on the version of System.Stream_Attributes as well as the size of\n    --  formal parameter Character_Type, the package will either utilize block\n@@ -53,13 +58,24 @@ package body System.Strings.Stream_Ops is\n       type String_Type is array (Positive range <>) of Character_Type;\n \n    package Stream_Ops_Internal is\n+      function Input\n+        (Strm : access Root_Stream_Type'Class;\n+         IO   : IO_Kind) return String_Type;\n+\n+      procedure Output\n+        (Strm : access Root_Stream_Type'Class;\n+         Item : String_Type;\n+         IO   : IO_Kind);\n+\n       procedure Read\n         (Strm : access Root_Stream_Type'Class;\n-         Item : out String_Type);\n+         Item : out String_Type;\n+         IO   : IO_Kind);\n \n       procedure Write\n         (Strm : access Root_Stream_Type'Class;\n-         Item : String_Type);\n+         Item : String_Type;\n+         IO   : IO_Kind);\n    end Stream_Ops_Internal;\n \n    -------------------------\n@@ -92,28 +108,6 @@ package body System.Strings.Stream_Ops is\n \n       subtype String_Block is String_Type (1 .. C_In_Default_Block);\n \n-      Flag : Integer;\n-      pragma Import (C, Flag, \"__gl_canonical_streams\");\n-      --  This imported value is used to determine whether configuration pragma\n-      --  Canonical_Streams is present. A value of zero indicates whether any\n-      --  stream-related optimizations are enabled, while a value of one\n-      --  indicates a disabled status.\n-      --  What is all this rubbish about C flags for a global config pragma???\n-\n-      Canonical_Streams : constant Boolean := Flag = 1;\n-      --  This seems dubious, surely it should be (Flag /= 0) for normal\n-      --  C semantics. Why not just import as a pragma Convention C Boolean\n-      --  anyway, avoiding the need for junk flag ???\n-\n-      --  Block IO is used when the low level can support block IO, the size\n-      --  of the character type is a multiple of the stream element type and\n-      --  the compilation can use stream optimizations.\n-\n-      Use_Block_IO : constant Boolean :=\n-                       Stream_Attributes.Block_IO_OK\n-                         and then C_Size mod SE_Size = 0\n-                         and then not Canonical_Streams;\n-\n       --  Conversions to and from Default_Block\n \n       function To_Default_Block is\n@@ -122,13 +116,74 @@ package body System.Strings.Stream_Ops is\n       function To_String_Block is\n         new Ada.Unchecked_Conversion (Default_Block, String_Block);\n \n+      -----------\n+      -- Input --\n+      -----------\n+\n+      function Input\n+        (Strm : access Root_Stream_Type'Class;\n+         IO   : IO_Kind) return String_Type\n+      is\n+      begin\n+         if Strm = null then\n+            raise Constraint_Error;\n+         end if;\n+\n+         declare\n+            Low  : Positive;\n+            High : Positive;\n+\n+         begin\n+            --  Read the bounds of the string\n+\n+            Positive'Read (Strm, Low);\n+            Positive'Read (Strm, High);\n+\n+            declare\n+               Item : String_Type (Low .. High);\n+\n+            begin\n+               --  Read the character content of the string\n+\n+               Read (Strm, Item, IO);\n+\n+               return Item;\n+            end;\n+         end;\n+      end Input;\n+\n+      ------------\n+      -- Output --\n+      ------------\n+\n+      procedure Output\n+        (Strm : access Root_Stream_Type'Class;\n+         Item : String_Type;\n+         IO   : IO_Kind)\n+      is\n+      begin\n+         if Strm = null then\n+            raise Constraint_Error;\n+         end if;\n+\n+         --  Write the bounds of the string\n+\n+         Positive'Write (Strm, Item'First);\n+         Positive'Write (Strm, Item'Last);\n+\n+         --  Write the character content of the string\n+\n+         Write (Strm, Item, IO);\n+      end Output;\n+\n       ----------\n       -- Read --\n       ----------\n \n       procedure Read\n         (Strm : access Root_Stream_Type'Class;\n-         Item : out String_Type)\n+         Item : out String_Type;\n+         IO   : IO_Kind)\n       is\n       begin\n          if Strm = null then\n@@ -141,7 +196,11 @@ package body System.Strings.Stream_Ops is\n             return;\n          end if;\n \n-         if Use_Block_IO then\n+         --  Block IO\n+\n+         if IO = Block_IO\n+           and then Stream_Attributes.Block_IO_OK\n+         then\n             declare\n                --  Determine the size in BITS of the block necessary to contain\n                --  the whole string.\n@@ -225,7 +284,7 @@ package body System.Strings.Stream_Ops is\n                end if;\n             end;\n \n-         --  Character-by-character IO\n+         --  Byte IO\n \n          else\n             declare\n@@ -246,7 +305,8 @@ package body System.Strings.Stream_Ops is\n \n       procedure Write\n         (Strm : access Root_Stream_Type'Class;\n-         Item : String_Type)\n+         Item : String_Type;\n+         IO   : IO_Kind)\n       is\n       begin\n          if Strm = null then\n@@ -259,7 +319,11 @@ package body System.Strings.Stream_Ops is\n             return;\n          end if;\n \n-         if Use_Block_IO then\n+         --  Block IO\n+\n+         if IO = Block_IO\n+           and then Stream_Attributes.Block_IO_OK\n+         then\n             declare\n                --  Determine the size in BITS of the block necessary to contain\n                --  the whole string.\n@@ -313,7 +377,7 @@ package body System.Strings.Stream_Ops is\n                end if;\n             end;\n \n-         --  Character-by-character IO\n+         --  Byte IO\n \n          else\n             for Index in Item'First .. Item'Last loop\n@@ -323,7 +387,7 @@ package body System.Strings.Stream_Ops is\n       end Write;\n    end Stream_Ops_Internal;\n \n-   --  Specific instantiations for different string types\n+   --  Specific instantiations for all Ada string types\n \n    package String_Ops is\n      new Stream_Ops_Internal\n@@ -348,32 +412,19 @@ package body System.Strings.Stream_Ops is\n      (Strm : access Ada.Streams.Root_Stream_Type'Class) return String\n    is\n    begin\n-      if Strm = null then\n-         raise Constraint_Error;\n-      end if;\n-\n-      declare\n-         Low  : Positive;\n-         High : Positive;\n-\n-      begin\n-         --  Read the bounds of the string\n-\n-         Positive'Read (Strm, Low);\n-         Positive'Read (Strm, High);\n-\n-         declare\n-            Item : String (Low .. High);\n-\n-         begin\n-            --  Read the character content of the string\n+      return String_Ops.Input (Strm, Byte_IO);\n+   end String_Input;\n \n-            String_Read (Strm, Item);\n+   -------------------------\n+   -- String_Input_Blk_IO --\n+   -------------------------\n \n-            return Item;\n-         end;\n-      end;\n-   end String_Input;\n+   function String_Input_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class) return String\n+   is\n+   begin\n+      return String_Ops.Input (Strm, Block_IO);\n+   end String_Input_Blk_IO;\n \n    -------------------\n    -- String_Output --\n@@ -384,19 +435,20 @@ package body System.Strings.Stream_Ops is\n       Item : String)\n    is\n    begin\n-      if Strm = null then\n-         raise Constraint_Error;\n-      end if;\n-\n-      --  Write the bounds of the string\n-\n-      Positive'Write (Strm, Item'First);\n-      Positive'Write (Strm, Item'Last);\n+      String_Ops.Output (Strm, Item, Byte_IO);\n+   end String_Output;\n \n-      --  Write the character content of the string\n+   --------------------------\n+   -- String_Output_Blk_IO --\n+   --------------------------\n \n-      String_Write (Strm, Item);\n-   end String_Output;\n+   procedure String_Output_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class;\n+      Item : String)\n+   is\n+   begin\n+      String_Ops.Output (Strm, Item, Block_IO);\n+   end String_Output_Blk_IO;\n \n    -----------------\n    -- String_Read --\n@@ -407,9 +459,21 @@ package body System.Strings.Stream_Ops is\n       Item : out String)\n    is\n    begin\n-      String_Ops.Read (Strm, Item);\n+      String_Ops.Read (Strm, Item, Byte_IO);\n    end String_Read;\n \n+   ------------------------\n+   -- String_Read_Blk_IO --\n+   ------------------------\n+\n+   procedure String_Read_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class;\n+      Item : out String)\n+   is\n+   begin\n+      String_Ops.Read (Strm, Item, Block_IO);\n+   end String_Read_Blk_IO;\n+\n    ------------------\n    -- String_Write --\n    ------------------\n@@ -419,44 +483,42 @@ package body System.Strings.Stream_Ops is\n       Item : String)\n    is\n    begin\n-      String_Ops.Write (Strm, Item);\n+      String_Ops.Write (Strm, Item, Byte_IO);\n    end String_Write;\n \n+   -------------------------\n+   -- String_Write_Blk_IO --\n+   -------------------------\n+\n+   procedure String_Write_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class;\n+      Item : String)\n+   is\n+   begin\n+      String_Ops.Write (Strm, Item, Block_IO);\n+   end String_Write_Blk_IO;\n+\n    -----------------------\n    -- Wide_String_Input --\n    -----------------------\n \n    function Wide_String_Input\n-     (Strm : access Ada.Streams.Root_Stream_Type'Class)\n-      return Wide_String\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class) return Wide_String\n    is\n    begin\n-      if Strm = null then\n-         raise Constraint_Error;\n-      end if;\n-\n-      declare\n-         Low  : Positive;\n-         High : Positive;\n-\n-      begin\n-         --  Read the bounds of the string\n-\n-         Positive'Read (Strm, Low);\n-         Positive'Read (Strm, High);\n-\n-         declare\n-            Item : Wide_String (Low .. High);\n-\n-         begin\n-            --  Read the character content of the string\n+      return Wide_String_Ops.Input (Strm, Byte_IO);\n+   end Wide_String_Input;\n \n-            Wide_String_Read (Strm, Item);\n+   ------------------------------\n+   -- Wide_String_Input_Blk_IO --\n+   ------------------------------\n \n-            return Item;\n-         end;\n-      end;\n-   end Wide_String_Input;\n+   function Wide_String_Input_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class) return Wide_String\n+   is\n+   begin\n+      return Wide_String_Ops.Input (Strm, Block_IO);\n+   end Wide_String_Input_Blk_IO;\n \n    ------------------------\n    -- Wide_String_Output --\n@@ -467,19 +529,20 @@ package body System.Strings.Stream_Ops is\n       Item : Wide_String)\n    is\n    begin\n-      if Strm = null then\n-         raise Constraint_Error;\n-      end if;\n-\n-      --  Write the bounds of the string\n-\n-      Positive'Write (Strm, Item'First);\n-      Positive'Write (Strm, Item'Last);\n+      Wide_String_Ops.Output (Strm, Item, Byte_IO);\n+   end Wide_String_Output;\n \n-      --  Write the character content of the string\n+   -------------------------------\n+   -- Wide_String_Output_Blk_IO --\n+   -------------------------------\n \n-      Wide_String_Write (Strm, Item);\n-   end Wide_String_Output;\n+   procedure Wide_String_Output_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class;\n+      Item : Wide_String)\n+   is\n+   begin\n+      Wide_String_Ops.Output (Strm, Item, Block_IO);\n+   end Wide_String_Output_Blk_IO;\n \n    ----------------------\n    -- Wide_String_Read --\n@@ -490,9 +553,21 @@ package body System.Strings.Stream_Ops is\n       Item : out Wide_String)\n    is\n    begin\n-      Wide_String_Ops.Read (Strm, Item);\n+      Wide_String_Ops.Read (Strm, Item, Byte_IO);\n    end Wide_String_Read;\n \n+   -----------------------------\n+   -- Wide_String_Read_Blk_IO --\n+   -----------------------------\n+\n+   procedure Wide_String_Read_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class;\n+      Item : out Wide_String)\n+   is\n+   begin\n+      Wide_String_Ops.Read (Strm, Item, Block_IO);\n+   end Wide_String_Read_Blk_IO;\n+\n    -----------------------\n    -- Wide_String_Write --\n    -----------------------\n@@ -502,44 +577,42 @@ package body System.Strings.Stream_Ops is\n       Item : Wide_String)\n    is\n    begin\n-      Wide_String_Ops.Write (Strm, Item);\n+      Wide_String_Ops.Write (Strm, Item, Byte_IO);\n    end Wide_String_Write;\n \n+   ------------------------------\n+   -- Wide_String_Write_Blk_IO --\n+   ------------------------------\n+\n+   procedure Wide_String_Write_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class;\n+      Item : Wide_String)\n+   is\n+   begin\n+      Wide_String_Ops.Write (Strm, Item, Block_IO);\n+   end Wide_String_Write_Blk_IO;\n+\n    ----------------------------\n    -- Wide_Wide_String_Input --\n    ----------------------------\n \n    function Wide_Wide_String_Input\n-     (Strm : access Ada.Streams.Root_Stream_Type'Class)\n-      return Wide_Wide_String\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class) return Wide_Wide_String\n    is\n    begin\n-      if Strm = null then\n-         raise Constraint_Error;\n-      end if;\n-\n-      declare\n-         Low  : Positive;\n-         High : Positive;\n-\n-      begin\n-         --  Read the bounds of the string\n-\n-         Positive'Read (Strm, Low);\n-         Positive'Read (Strm, High);\n-\n-         declare\n-            Item : Wide_Wide_String (Low .. High);\n-\n-         begin\n-            --  Read the character content of the string\n+      return Wide_Wide_String_Ops.Input (Strm, Byte_IO);\n+   end Wide_Wide_String_Input;\n \n-            Wide_Wide_String_Read (Strm, Item);\n+   -----------------------------------\n+   -- Wide_Wide_String_Input_Blk_IO --\n+   -----------------------------------\n \n-            return Item;\n-         end;\n-      end;\n-   end Wide_Wide_String_Input;\n+   function Wide_Wide_String_Input_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class) return Wide_Wide_String\n+   is\n+   begin\n+      return Wide_Wide_String_Ops.Input (Strm, Block_IO);\n+   end Wide_Wide_String_Input_Blk_IO;\n \n    -----------------------------\n    -- Wide_Wide_String_Output --\n@@ -550,19 +623,20 @@ package body System.Strings.Stream_Ops is\n       Item : Wide_Wide_String)\n    is\n    begin\n-      if Strm = null then\n-         raise Constraint_Error;\n-      end if;\n-\n-      --  Write the bounds of the string\n-\n-      Positive'Write (Strm, Item'First);\n-      Positive'Write (Strm, Item'Last);\n+      Wide_Wide_String_Ops.Output (Strm, Item, Byte_IO);\n+   end Wide_Wide_String_Output;\n \n-      --  Write the character content of the string\n+   ------------------------------------\n+   -- Wide_Wide_String_Output_Blk_IO --\n+   ------------------------------------\n \n-      Wide_Wide_String_Write (Strm, Item);\n-   end Wide_Wide_String_Output;\n+   procedure Wide_Wide_String_Output_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class;\n+      Item : Wide_Wide_String)\n+   is\n+   begin\n+      Wide_Wide_String_Ops.Output (Strm, Item, Block_IO);\n+   end Wide_Wide_String_Output_Blk_IO;\n \n    ---------------------------\n    -- Wide_Wide_String_Read --\n@@ -573,9 +647,21 @@ package body System.Strings.Stream_Ops is\n       Item : out Wide_Wide_String)\n    is\n    begin\n-      Wide_Wide_String_Ops.Read (Strm, Item);\n+      Wide_Wide_String_Ops.Read (Strm, Item, Byte_IO);\n    end Wide_Wide_String_Read;\n \n+   ----------------------------------\n+   -- Wide_Wide_String_Read_Blk_IO --\n+   ----------------------------------\n+\n+   procedure Wide_Wide_String_Read_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class;\n+      Item : out Wide_Wide_String)\n+   is\n+   begin\n+      Wide_Wide_String_Ops.Read (Strm, Item, Block_IO);\n+   end Wide_Wide_String_Read_Blk_IO;\n+\n    ----------------------------\n    -- Wide_Wide_String_Write --\n    ----------------------------\n@@ -585,7 +671,19 @@ package body System.Strings.Stream_Ops is\n       Item : Wide_Wide_String)\n    is\n    begin\n-      Wide_Wide_String_Ops.Write (Strm, Item);\n+      Wide_Wide_String_Ops.Write (Strm, Item, Byte_IO);\n    end Wide_Wide_String_Write;\n \n+   -----------------------------------\n+   -- Wide_Wide_String_Write_Blk_IO --\n+   -----------------------------------\n+\n+   procedure Wide_Wide_String_Write_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class;\n+      Item : Wide_Wide_String)\n+   is\n+   begin\n+      Wide_Wide_String_Ops.Write (Strm, Item, Block_IO);\n+   end Wide_Wide_String_Write_Blk_IO;\n+\n end System.Strings.Stream_Ops;"}, {"sha": "432b1335d50fd603c04462b69ac23305dea8f65e", "filename": "gcc/ada/s-ststop.ads", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fs-ststop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fs-ststop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-ststop.ads?ref=585df50b0c63b895742726b556732faac623fa35", "patch": "@@ -45,6 +45,8 @@\n --  will be expanded into:\n --\n --     String_Output (Some_Stream, Some_String);\n+--       or\n+--     String_Output_Blk_IO (Some_Stream, Some_String);\n \n pragma Warnings (Off);\n pragma Compiler_Unit;\n@@ -62,18 +64,34 @@ package System.Strings.Stream_Ops is\n      (Strm : access Ada.Streams.Root_Stream_Type'Class)\n       return String;\n \n+   function String_Input_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class)\n+      return String;\n+\n    procedure String_Output\n      (Strm : access Ada.Streams.Root_Stream_Type'Class;\n       Item : String);\n \n+   procedure String_Output_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class;\n+      Item : String);\n+\n    procedure String_Read\n      (Strm : access Ada.Streams.Root_Stream_Type'Class;\n       Item : out String);\n \n+   procedure String_Read_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class;\n+      Item : out String);\n+\n    procedure String_Write\n      (Strm : access Ada.Streams.Root_Stream_Type'Class;\n       Item : String);\n \n+   procedure String_Write_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class;\n+      Item : String);\n+\n    -----------------------------------\n    -- Wide_String stream operations --\n    -----------------------------------\n@@ -82,18 +100,34 @@ package System.Strings.Stream_Ops is\n      (Strm : access Ada.Streams.Root_Stream_Type'Class)\n       return Wide_String;\n \n+   function Wide_String_Input_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class)\n+      return Wide_String;\n+\n    procedure Wide_String_Output\n      (Strm : access Ada.Streams.Root_Stream_Type'Class;\n       Item : Wide_String);\n \n+   procedure Wide_String_Output_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class;\n+      Item : Wide_String);\n+\n    procedure Wide_String_Read\n      (Strm : access Ada.Streams.Root_Stream_Type'Class;\n       Item : out Wide_String);\n \n+   procedure Wide_String_Read_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class;\n+      Item : out Wide_String);\n+\n    procedure Wide_String_Write\n      (Strm : access Ada.Streams.Root_Stream_Type'Class;\n       Item : Wide_String);\n \n+   procedure Wide_String_Write_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class;\n+      Item : Wide_String);\n+\n    ----------------------------------------\n    -- Wide_Wide_String stream operations --\n    ----------------------------------------\n@@ -102,16 +136,32 @@ package System.Strings.Stream_Ops is\n      (Strm : access Ada.Streams.Root_Stream_Type'Class)\n       return Wide_Wide_String;\n \n+   function Wide_Wide_String_Input_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class)\n+      return Wide_Wide_String;\n+\n    procedure Wide_Wide_String_Output\n      (Strm : access Ada.Streams.Root_Stream_Type'Class;\n       Item : Wide_Wide_String);\n \n+   procedure Wide_Wide_String_Output_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class;\n+      Item : Wide_Wide_String);\n+\n    procedure Wide_Wide_String_Read\n      (Strm : access Ada.Streams.Root_Stream_Type'Class;\n       Item : out Wide_Wide_String);\n \n+   procedure Wide_Wide_String_Read_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class;\n+      Item : out Wide_Wide_String);\n+\n    procedure Wide_Wide_String_Write\n      (Strm : access Ada.Streams.Root_Stream_Type'Class;\n       Item : Wide_Wide_String);\n \n+   procedure Wide_Wide_String_Write_Blk_IO\n+     (Strm : access Ada.Streams.Root_Stream_Type'Class;\n+      Item : Wide_Wide_String);\n+\n end System.Strings.Stream_Ops;"}, {"sha": "f62d6c8944a4206541eb137ac3f1189ce2811f41", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=585df50b0c63b895742726b556732faac623fa35", "patch": "@@ -5646,18 +5646,6 @@ package body Sem_Prag is\n             end if;\n          end C_Pass_By_Copy;\n \n-         -----------------------\n-         -- Canonical_Streams --\n-         -----------------------\n-\n-         --  pragma Canonical_Streams;\n-\n-         when Pragma_Canonical_Streams =>\n-            GNAT_Pragma;\n-            Check_Arg_Count (0);\n-            Check_Valid_Configuration_Pragma;\n-            Canonical_Streams := True;\n-\n          -----------\n          -- Check --\n          -----------\n@@ -12214,7 +12202,6 @@ package body Sem_Prag is\n       Pragma_Atomic                        =>  0,\n       Pragma_Atomic_Components             =>  0,\n       Pragma_Attach_Handler                => -1,\n-      Pragma_Canonical_Streams             => -1,\n       Pragma_Check                         => 99,\n       Pragma_Check_Name                    =>  0,\n       Pragma_Check_Policy                  =>  0,"}, {"sha": "d780bc138e4b9bdacc921a2e7fc44e5ba5fffa4e", "filename": "gcc/ada/snames.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb?ref=585df50b0c63b895742726b556732faac623fa35", "patch": "@@ -183,7 +183,6 @@ package body Snames is\n      \"ada_2005#\" &\n      \"assertion_policy#\" &\n      \"c_pass_by_copy#\" &\n-     \"canonical_streams#\" &\n      \"check_name#\" &\n      \"check_policy#\" &\n      \"compile_time_error#\" &"}, {"sha": "85447f7e9ce7015637f37c269b2824f89c96efb5", "filename": "gcc/ada/snames.ads", "status": "modified", "additions": 658, "deletions": 660, "changes": 1318, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fsnames.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fsnames.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads?ref=585df50b0c63b895742726b556732faac623fa35", "patch": "@@ -341,173 +341,172 @@ package Snames is\n    Name_Ada_2005                       : constant Name_Id := N + 122; -- GNAT\n    Name_Assertion_Policy               : constant Name_Id := N + 123; -- Ada 05\n    Name_C_Pass_By_Copy                 : constant Name_Id := N + 124; -- GNAT\n-   Name_Canonical_Streams              : constant Name_Id := N + 125; -- GNAT\n-   Name_Check_Name                     : constant Name_Id := N + 126; -- GNAT\n-   Name_Check_Policy                   : constant Name_Id := N + 127; -- GNAT\n-   Name_Compile_Time_Error             : constant Name_Id := N + 128; -- GNAT\n-   Name_Compile_Time_Warning           : constant Name_Id := N + 129; -- GNAT\n-   Name_Compiler_Unit                  : constant Name_Id := N + 130; -- GNAT\n-   Name_Component_Alignment            : constant Name_Id := N + 131; -- GNAT\n-   Name_Convention_Identifier          : constant Name_Id := N + 132; -- GNAT\n-   Name_Debug_Policy                   : constant Name_Id := N + 133; -- GNAT\n-   Name_Detect_Blocking                : constant Name_Id := N + 134; -- Ada 05\n-   Name_Discard_Names                  : constant Name_Id := N + 135;\n-   Name_Elaboration_Checks             : constant Name_Id := N + 136; -- GNAT\n-   Name_Eliminate                      : constant Name_Id := N + 137; -- GNAT\n-   Name_Extend_System                  : constant Name_Id := N + 138; -- GNAT\n-   Name_Extensions_Allowed             : constant Name_Id := N + 139; -- GNAT\n-   Name_External_Name_Casing           : constant Name_Id := N + 140; -- GNAT\n+   Name_Check_Name                     : constant Name_Id := N + 125; -- GNAT\n+   Name_Check_Policy                   : constant Name_Id := N + 126; -- GNAT\n+   Name_Compile_Time_Error             : constant Name_Id := N + 127; -- GNAT\n+   Name_Compile_Time_Warning           : constant Name_Id := N + 128; -- GNAT\n+   Name_Compiler_Unit                  : constant Name_Id := N + 129; -- GNAT\n+   Name_Component_Alignment            : constant Name_Id := N + 130; -- GNAT\n+   Name_Convention_Identifier          : constant Name_Id := N + 131; -- GNAT\n+   Name_Debug_Policy                   : constant Name_Id := N + 132; -- GNAT\n+   Name_Detect_Blocking                : constant Name_Id := N + 133; -- Ada 05\n+   Name_Discard_Names                  : constant Name_Id := N + 134;\n+   Name_Elaboration_Checks             : constant Name_Id := N + 135; -- GNAT\n+   Name_Eliminate                      : constant Name_Id := N + 136; -- GNAT\n+   Name_Extend_System                  : constant Name_Id := N + 137; -- GNAT\n+   Name_Extensions_Allowed             : constant Name_Id := N + 138; -- GNAT\n+   Name_External_Name_Casing           : constant Name_Id := N + 139; -- GNAT\n \n    --  Note: Fast_Math is not in this list because its name matches   -- GNAT\n    --  the name of the corresponding attribute. However, it is\n    --  included in the definition of the type Pragma_Id, and the\n    --  functions Get_Pragma_Id, Is_[Configuration_]Pragma_Id, and\n    --  correctly recognize and process Fast_Math.\n \n-   Name_Favor_Top_Level                : constant Name_Id := N + 141; -- GNAT\n-   Name_Float_Representation           : constant Name_Id := N + 142; -- GNAT\n-   Name_Implicit_Packing               : constant Name_Id := N + 143; -- GNAT\n-   Name_Initialize_Scalars             : constant Name_Id := N + 144; -- GNAT\n-   Name_Interrupt_State                : constant Name_Id := N + 145; -- GNAT\n-   Name_License                        : constant Name_Id := N + 146; -- GNAT\n-   Name_Locking_Policy                 : constant Name_Id := N + 147;\n-   Name_Long_Float                     : constant Name_Id := N + 148; -- VMS\n-   Name_No_Run_Time                    : constant Name_Id := N + 149; -- GNAT\n-   Name_No_Strict_Aliasing             : constant Name_Id := N + 150; -- GNAT\n-   Name_Normalize_Scalars              : constant Name_Id := N + 151;\n-   Name_Optimize_Alignment             : constant Name_Id := N + 152; -- GNAT\n-   Name_Persistent_BSS                 : constant Name_Id := N + 153; -- GNAT\n-   Name_Polling                        : constant Name_Id := N + 154; -- GNAT\n-   Name_Priority_Specific_Dispatching  : constant Name_Id := N + 155; -- Ada 05\n-   Name_Profile                        : constant Name_Id := N + 156; -- Ada 05\n-   Name_Profile_Warnings               : constant Name_Id := N + 157; -- GNAT\n-   Name_Propagate_Exceptions           : constant Name_Id := N + 158; -- GNAT\n-   Name_Queuing_Policy                 : constant Name_Id := N + 159;\n-   Name_Ravenscar                      : constant Name_Id := N + 160; -- GNAT\n-   Name_Restricted_Run_Time            : constant Name_Id := N + 161; -- GNAT\n-   Name_Restrictions                   : constant Name_Id := N + 162;\n-   Name_Restriction_Warnings           : constant Name_Id := N + 163; -- GNAT\n-   Name_Reviewable                     : constant Name_Id := N + 164;\n-   Name_Source_File_Name               : constant Name_Id := N + 165; -- GNAT\n-   Name_Source_File_Name_Project       : constant Name_Id := N + 166; -- GNAT\n-   Name_Style_Checks                   : constant Name_Id := N + 167; -- GNAT\n-   Name_Suppress                       : constant Name_Id := N + 168;\n-   Name_Suppress_Exception_Locations   : constant Name_Id := N + 169; -- GNAT\n-   Name_Task_Dispatching_Policy        : constant Name_Id := N + 170;\n-   Name_Universal_Data                 : constant Name_Id := N + 171; -- AAMP\n-   Name_Unsuppress                     : constant Name_Id := N + 172; -- Ada 05\n-   Name_Use_VADS_Size                  : constant Name_Id := N + 173; -- GNAT\n-   Name_Validity_Checks                : constant Name_Id := N + 174; -- GNAT\n-   Name_Warnings                       : constant Name_Id := N + 175; -- GNAT\n-   Name_Wide_Character_Encoding        : constant Name_Id := N + 176; -- GNAT\n-   Last_Configuration_Pragma_Name      : constant Name_Id := N + 176;\n+   Name_Favor_Top_Level                : constant Name_Id := N + 140; -- GNAT\n+   Name_Float_Representation           : constant Name_Id := N + 141; -- GNAT\n+   Name_Implicit_Packing               : constant Name_Id := N + 142; -- GNAT\n+   Name_Initialize_Scalars             : constant Name_Id := N + 143; -- GNAT\n+   Name_Interrupt_State                : constant Name_Id := N + 144; -- GNAT\n+   Name_License                        : constant Name_Id := N + 145; -- GNAT\n+   Name_Locking_Policy                 : constant Name_Id := N + 146;\n+   Name_Long_Float                     : constant Name_Id := N + 147; -- VMS\n+   Name_No_Run_Time                    : constant Name_Id := N + 148; -- GNAT\n+   Name_No_Strict_Aliasing             : constant Name_Id := N + 149; -- GNAT\n+   Name_Normalize_Scalars              : constant Name_Id := N + 150;\n+   Name_Optimize_Alignment             : constant Name_Id := N + 151; -- GNAT\n+   Name_Persistent_BSS                 : constant Name_Id := N + 152; -- GNAT\n+   Name_Polling                        : constant Name_Id := N + 153; -- GNAT\n+   Name_Priority_Specific_Dispatching  : constant Name_Id := N + 154; -- Ada 05\n+   Name_Profile                        : constant Name_Id := N + 155; -- Ada 05\n+   Name_Profile_Warnings               : constant Name_Id := N + 156; -- GNAT\n+   Name_Propagate_Exceptions           : constant Name_Id := N + 157; -- GNAT\n+   Name_Queuing_Policy                 : constant Name_Id := N + 158;\n+   Name_Ravenscar                      : constant Name_Id := N + 159; -- GNAT\n+   Name_Restricted_Run_Time            : constant Name_Id := N + 160; -- GNAT\n+   Name_Restrictions                   : constant Name_Id := N + 161;\n+   Name_Restriction_Warnings           : constant Name_Id := N + 162; -- GNAT\n+   Name_Reviewable                     : constant Name_Id := N + 163;\n+   Name_Source_File_Name               : constant Name_Id := N + 164; -- GNAT\n+   Name_Source_File_Name_Project       : constant Name_Id := N + 165; -- GNAT\n+   Name_Style_Checks                   : constant Name_Id := N + 166; -- GNAT\n+   Name_Suppress                       : constant Name_Id := N + 167;\n+   Name_Suppress_Exception_Locations   : constant Name_Id := N + 168; -- GNAT\n+   Name_Task_Dispatching_Policy        : constant Name_Id := N + 169;\n+   Name_Universal_Data                 : constant Name_Id := N + 170; -- AAMP\n+   Name_Unsuppress                     : constant Name_Id := N + 171; -- Ada 05\n+   Name_Use_VADS_Size                  : constant Name_Id := N + 172; -- GNAT\n+   Name_Validity_Checks                : constant Name_Id := N + 173; -- GNAT\n+   Name_Warnings                       : constant Name_Id := N + 174; -- GNAT\n+   Name_Wide_Character_Encoding        : constant Name_Id := N + 175; -- GNAT\n+   Last_Configuration_Pragma_Name      : constant Name_Id := N + 175;\n \n    --  Remaining pragma names\n \n-   Name_Abort_Defer                    : constant Name_Id := N + 177; -- GNAT\n-   Name_All_Calls_Remote               : constant Name_Id := N + 178;\n-   Name_Annotate                       : constant Name_Id := N + 179; -- GNAT\n+   Name_Abort_Defer                    : constant Name_Id := N + 176; -- GNAT\n+   Name_All_Calls_Remote               : constant Name_Id := N + 177;\n+   Name_Annotate                       : constant Name_Id := N + 178; -- GNAT\n \n    --  Note: AST_Entry is not in this list because its name matches   -- VMS\n    --  the name of the corresponding attribute. However, it is\n    --  included in the definition of the type Pragma_Id, and the\n    --  functions Get_Pragma_Id and Is_Pragma_Id correctly recognize\n    --  and process Name_AST_Entry.\n \n-   Name_Assert                         : constant Name_Id := N + 180; -- Ada 05\n-   Name_Asynchronous                   : constant Name_Id := N + 181;\n-   Name_Atomic                         : constant Name_Id := N + 182;\n-   Name_Atomic_Components              : constant Name_Id := N + 183;\n-   Name_Attach_Handler                 : constant Name_Id := N + 184;\n-   Name_Check                          : constant Name_Id := N + 185; -- GNAT\n-   Name_CIL_Constructor                : constant Name_Id := N + 186; -- GNAT\n-   Name_Comment                        : constant Name_Id := N + 187; -- GNAT\n-   Name_Common_Object                  : constant Name_Id := N + 188; -- GNAT\n-   Name_Complete_Representation        : constant Name_Id := N + 189; -- GNAT\n-   Name_Complex_Representation         : constant Name_Id := N + 190; -- GNAT\n-   Name_Controlled                     : constant Name_Id := N + 191;\n-   Name_Convention                     : constant Name_Id := N + 192;\n-   Name_CPP_Class                      : constant Name_Id := N + 193; -- GNAT\n-   Name_CPP_Constructor                : constant Name_Id := N + 194; -- GNAT\n-   Name_CPP_Virtual                    : constant Name_Id := N + 195; -- GNAT\n-   Name_CPP_Vtable                     : constant Name_Id := N + 196; -- GNAT\n-   Name_Debug                          : constant Name_Id := N + 197; -- GNAT\n-   Name_Elaborate                      : constant Name_Id := N + 198; -- Ada 83\n-   Name_Elaborate_All                  : constant Name_Id := N + 199;\n-   Name_Elaborate_Body                 : constant Name_Id := N + 200;\n-   Name_Export                         : constant Name_Id := N + 201;\n-   Name_Export_Exception               : constant Name_Id := N + 202; -- VMS\n-   Name_Export_Function                : constant Name_Id := N + 203; -- GNAT\n-   Name_Export_Object                  : constant Name_Id := N + 204; -- GNAT\n-   Name_Export_Procedure               : constant Name_Id := N + 205; -- GNAT\n-   Name_Export_Value                   : constant Name_Id := N + 206; -- GNAT\n-   Name_Export_Valued_Procedure        : constant Name_Id := N + 207; -- GNAT\n-   Name_External                       : constant Name_Id := N + 208; -- GNAT\n-   Name_Finalize_Storage_Only          : constant Name_Id := N + 209; -- GNAT\n-   Name_Ident                          : constant Name_Id := N + 210; -- VMS\n-   Name_Implemented_By_Entry           : constant Name_Id := N + 211; -- Ada 05\n-   Name_Import                         : constant Name_Id := N + 212;\n-   Name_Import_Exception               : constant Name_Id := N + 213; -- VMS\n-   Name_Import_Function                : constant Name_Id := N + 214; -- GNAT\n-   Name_Import_Object                  : constant Name_Id := N + 215; -- GNAT\n-   Name_Import_Procedure               : constant Name_Id := N + 216; -- GNAT\n-   Name_Import_Valued_Procedure        : constant Name_Id := N + 217; -- GNAT\n-   Name_Inline                         : constant Name_Id := N + 218;\n-   Name_Inline_Always                  : constant Name_Id := N + 219; -- GNAT\n-   Name_Inline_Generic                 : constant Name_Id := N + 220; -- GNAT\n-   Name_Inspection_Point               : constant Name_Id := N + 221;\n+   Name_Assert                         : constant Name_Id := N + 179; -- Ada 05\n+   Name_Asynchronous                   : constant Name_Id := N + 180;\n+   Name_Atomic                         : constant Name_Id := N + 181;\n+   Name_Atomic_Components              : constant Name_Id := N + 182;\n+   Name_Attach_Handler                 : constant Name_Id := N + 183;\n+   Name_Check                          : constant Name_Id := N + 184; -- GNAT\n+   Name_CIL_Constructor                : constant Name_Id := N + 185; -- GNAT\n+   Name_Comment                        : constant Name_Id := N + 186; -- GNAT\n+   Name_Common_Object                  : constant Name_Id := N + 187; -- GNAT\n+   Name_Complete_Representation        : constant Name_Id := N + 188; -- GNAT\n+   Name_Complex_Representation         : constant Name_Id := N + 189; -- GNAT\n+   Name_Controlled                     : constant Name_Id := N + 190;\n+   Name_Convention                     : constant Name_Id := N + 191;\n+   Name_CPP_Class                      : constant Name_Id := N + 192; -- GNAT\n+   Name_CPP_Constructor                : constant Name_Id := N + 193; -- GNAT\n+   Name_CPP_Virtual                    : constant Name_Id := N + 194; -- GNAT\n+   Name_CPP_Vtable                     : constant Name_Id := N + 195; -- GNAT\n+   Name_Debug                          : constant Name_Id := N + 196; -- GNAT\n+   Name_Elaborate                      : constant Name_Id := N + 197; -- Ada 83\n+   Name_Elaborate_All                  : constant Name_Id := N + 198;\n+   Name_Elaborate_Body                 : constant Name_Id := N + 199;\n+   Name_Export                         : constant Name_Id := N + 200;\n+   Name_Export_Exception               : constant Name_Id := N + 201; -- VMS\n+   Name_Export_Function                : constant Name_Id := N + 202; -- GNAT\n+   Name_Export_Object                  : constant Name_Id := N + 203; -- GNAT\n+   Name_Export_Procedure               : constant Name_Id := N + 204; -- GNAT\n+   Name_Export_Value                   : constant Name_Id := N + 205; -- GNAT\n+   Name_Export_Valued_Procedure        : constant Name_Id := N + 206; -- GNAT\n+   Name_External                       : constant Name_Id := N + 207; -- GNAT\n+   Name_Finalize_Storage_Only          : constant Name_Id := N + 208; -- GNAT\n+   Name_Ident                          : constant Name_Id := N + 209; -- VMS\n+   Name_Implemented_By_Entry           : constant Name_Id := N + 210; -- Ada 05\n+   Name_Import                         : constant Name_Id := N + 211;\n+   Name_Import_Exception               : constant Name_Id := N + 212; -- VMS\n+   Name_Import_Function                : constant Name_Id := N + 213; -- GNAT\n+   Name_Import_Object                  : constant Name_Id := N + 214; -- GNAT\n+   Name_Import_Procedure               : constant Name_Id := N + 215; -- GNAT\n+   Name_Import_Valued_Procedure        : constant Name_Id := N + 216; -- GNAT\n+   Name_Inline                         : constant Name_Id := N + 217;\n+   Name_Inline_Always                  : constant Name_Id := N + 218; -- GNAT\n+   Name_Inline_Generic                 : constant Name_Id := N + 219; -- GNAT\n+   Name_Inspection_Point               : constant Name_Id := N + 220;\n \n    --  Note: Interface is not in this list because its name matches   -- GNAT\n    --  an Ada 2005 keyword. However it is included in the definition\n    --  of the type Attribute_Id, and the functions Get_Pragma_Id and\n    --  Is_Pragma_Id correctly recognize and process Name_Storage_Size.\n \n-   Name_Interface_Name                 : constant Name_Id := N + 222; -- GNAT\n-   Name_Interrupt_Handler              : constant Name_Id := N + 223;\n-   Name_Interrupt_Priority             : constant Name_Id := N + 224;\n-   Name_Java_Constructor               : constant Name_Id := N + 225; -- GNAT\n-   Name_Java_Interface                 : constant Name_Id := N + 226; -- GNAT\n-   Name_Keep_Names                     : constant Name_Id := N + 227; -- GNAT\n-   Name_Link_With                      : constant Name_Id := N + 228; -- GNAT\n-   Name_Linker_Alias                   : constant Name_Id := N + 229; -- GNAT\n-   Name_Linker_Constructor             : constant Name_Id := N + 230; -- GNAT\n-   Name_Linker_Destructor              : constant Name_Id := N + 231; -- GNAT\n-   Name_Linker_Options                 : constant Name_Id := N + 232;\n-   Name_Linker_Section                 : constant Name_Id := N + 233; -- GNAT\n-   Name_List                           : constant Name_Id := N + 234;\n-   Name_Machine_Attribute              : constant Name_Id := N + 235; -- GNAT\n-   Name_Main                           : constant Name_Id := N + 236; -- GNAT\n-   Name_Main_Storage                   : constant Name_Id := N + 237; -- GNAT\n-   Name_Memory_Size                    : constant Name_Id := N + 238; -- Ada 83\n-   Name_No_Body                        : constant Name_Id := N + 239; -- GNAT\n-   Name_No_Return                      : constant Name_Id := N + 240; -- GNAT\n-   Name_Obsolescent                    : constant Name_Id := N + 241; -- GNAT\n-   Name_Optimize                       : constant Name_Id := N + 242;\n-   Name_Pack                           : constant Name_Id := N + 243;\n-   Name_Page                           : constant Name_Id := N + 244;\n-   Name_Passive                        : constant Name_Id := N + 245; -- GNAT\n-   Name_Postcondition                  : constant Name_Id := N + 246; -- GNAT\n-   Name_Precondition                   : constant Name_Id := N + 247; -- GNAT\n-   Name_Preelaborable_Initialization   : constant Name_Id := N + 248; -- Ada 05\n-   Name_Preelaborate                   : constant Name_Id := N + 249;\n-   Name_Preelaborate_05                : constant Name_Id := N + 250; -- GNAT\n+   Name_Interface_Name                 : constant Name_Id := N + 221; -- GNAT\n+   Name_Interrupt_Handler              : constant Name_Id := N + 222;\n+   Name_Interrupt_Priority             : constant Name_Id := N + 223;\n+   Name_Java_Constructor               : constant Name_Id := N + 224; -- GNAT\n+   Name_Java_Interface                 : constant Name_Id := N + 225; -- GNAT\n+   Name_Keep_Names                     : constant Name_Id := N + 226; -- GNAT\n+   Name_Link_With                      : constant Name_Id := N + 227; -- GNAT\n+   Name_Linker_Alias                   : constant Name_Id := N + 228; -- GNAT\n+   Name_Linker_Constructor             : constant Name_Id := N + 229; -- GNAT\n+   Name_Linker_Destructor              : constant Name_Id := N + 230; -- GNAT\n+   Name_Linker_Options                 : constant Name_Id := N + 231;\n+   Name_Linker_Section                 : constant Name_Id := N + 232; -- GNAT\n+   Name_List                           : constant Name_Id := N + 233;\n+   Name_Machine_Attribute              : constant Name_Id := N + 234; -- GNAT\n+   Name_Main                           : constant Name_Id := N + 235; -- GNAT\n+   Name_Main_Storage                   : constant Name_Id := N + 236; -- GNAT\n+   Name_Memory_Size                    : constant Name_Id := N + 237; -- Ada 83\n+   Name_No_Body                        : constant Name_Id := N + 238; -- GNAT\n+   Name_No_Return                      : constant Name_Id := N + 239; -- GNAT\n+   Name_Obsolescent                    : constant Name_Id := N + 240; -- GNAT\n+   Name_Optimize                       : constant Name_Id := N + 241;\n+   Name_Pack                           : constant Name_Id := N + 242;\n+   Name_Page                           : constant Name_Id := N + 243;\n+   Name_Passive                        : constant Name_Id := N + 244; -- GNAT\n+   Name_Postcondition                  : constant Name_Id := N + 245; -- GNAT\n+   Name_Precondition                   : constant Name_Id := N + 246; -- GNAT\n+   Name_Preelaborable_Initialization   : constant Name_Id := N + 247; -- Ada 05\n+   Name_Preelaborate                   : constant Name_Id := N + 248;\n+   Name_Preelaborate_05                : constant Name_Id := N + 249; -- GNAT\n \n    --  Note: Priority is not in this list because its name matches\n    --  the name of the corresponding attribute. However, it is\n    --  included in the definition of the type Pragma_Id, and the\n    --  functions Get_Pragma_Id and Is_Pragma_Id correctly recognize\n    --  and process Priority. Priority is a standard Ada 95 pragma.\n \n-   Name_Psect_Object                   : constant Name_Id := N + 251; -- VMS\n-   Name_Pure                           : constant Name_Id := N + 252;\n-   Name_Pure_05                        : constant Name_Id := N + 253; -- GNAT\n-   Name_Pure_Function                  : constant Name_Id := N + 254; -- GNAT\n-   Name_Relative_Deadline              : constant Name_Id := N + 255; -- Ada 05\n-   Name_Remote_Call_Interface          : constant Name_Id := N + 256;\n-   Name_Remote_Types                   : constant Name_Id := N + 257;\n-   Name_Share_Generic                  : constant Name_Id := N + 258; -- GNAT\n-   Name_Shared                         : constant Name_Id := N + 259; -- Ada 83\n-   Name_Shared_Passive                 : constant Name_Id := N + 260;\n+   Name_Psect_Object                   : constant Name_Id := N + 250; -- VMS\n+   Name_Pure                           : constant Name_Id := N + 251;\n+   Name_Pure_05                        : constant Name_Id := N + 252; -- GNAT\n+   Name_Pure_Function                  : constant Name_Id := N + 253; -- GNAT\n+   Name_Relative_Deadline              : constant Name_Id := N + 254; -- Ada 05\n+   Name_Remote_Call_Interface          : constant Name_Id := N + 255;\n+   Name_Remote_Types                   : constant Name_Id := N + 256;\n+   Name_Share_Generic                  : constant Name_Id := N + 257; -- GNAT\n+   Name_Shared                         : constant Name_Id := N + 258; -- Ada 83\n+   Name_Shared_Passive                 : constant Name_Id := N + 259;\n \n    --  Note: Storage_Size is not in this list because its name\n    --  matches the name of the corresponding attribute. However,\n@@ -518,30 +517,30 @@ package Snames is\n    --  Note: Storage_Unit is also omitted from the list because\n    --  of a clash with an attribute name, and is treated similarly.\n \n-   Name_Source_Reference               : constant Name_Id := N + 261; -- GNAT\n-   Name_Static_Elaboration_Desired     : constant Name_Id := N + 262; -- GNAT\n-   Name_Stream_Convert                 : constant Name_Id := N + 263; -- GNAT\n-   Name_Subtitle                       : constant Name_Id := N + 264; -- GNAT\n-   Name_Suppress_All                   : constant Name_Id := N + 265; -- GNAT\n-   Name_Suppress_Debug_Info            : constant Name_Id := N + 266; -- GNAT\n-   Name_Suppress_Initialization        : constant Name_Id := N + 267; -- GNAT\n-   Name_System_Name                    : constant Name_Id := N + 268; -- Ada 83\n-   Name_Task_Info                      : constant Name_Id := N + 269; -- GNAT\n-   Name_Task_Name                      : constant Name_Id := N + 270; -- GNAT\n-   Name_Task_Storage                   : constant Name_Id := N + 271; -- VMS\n-   Name_Time_Slice                     : constant Name_Id := N + 272; -- GNAT\n-   Name_Title                          : constant Name_Id := N + 273; -- GNAT\n-   Name_Unchecked_Union                : constant Name_Id := N + 274; -- Ada 05\n-   Name_Unimplemented_Unit             : constant Name_Id := N + 275; -- GNAT\n-   Name_Universal_Aliasing             : constant Name_Id := N + 276; -- GNAT\n-   Name_Unmodified                     : constant Name_Id := N + 277; -- GNAT\n-   Name_Unreferenced                   : constant Name_Id := N + 278; -- GNAT\n-   Name_Unreferenced_Objects           : constant Name_Id := N + 279; -- GNAT\n-   Name_Unreserve_All_Interrupts       : constant Name_Id := N + 280; -- GNAT\n-   Name_Volatile                       : constant Name_Id := N + 281;\n-   Name_Volatile_Components            : constant Name_Id := N + 282;\n-   Name_Weak_External                  : constant Name_Id := N + 283; -- GNAT\n-   Last_Pragma_Name                    : constant Name_Id := N + 283;\n+   Name_Source_Reference               : constant Name_Id := N + 260; -- GNAT\n+   Name_Static_Elaboration_Desired     : constant Name_Id := N + 261; -- GNAT\n+   Name_Stream_Convert                 : constant Name_Id := N + 262; -- GNAT\n+   Name_Subtitle                       : constant Name_Id := N + 263; -- GNAT\n+   Name_Suppress_All                   : constant Name_Id := N + 264; -- GNAT\n+   Name_Suppress_Debug_Info            : constant Name_Id := N + 265; -- GNAT\n+   Name_Suppress_Initialization        : constant Name_Id := N + 266; -- GNAT\n+   Name_System_Name                    : constant Name_Id := N + 267; -- Ada 83\n+   Name_Task_Info                      : constant Name_Id := N + 268; -- GNAT\n+   Name_Task_Name                      : constant Name_Id := N + 269; -- GNAT\n+   Name_Task_Storage                   : constant Name_Id := N + 270; -- VMS\n+   Name_Time_Slice                     : constant Name_Id := N + 271; -- GNAT\n+   Name_Title                          : constant Name_Id := N + 272; -- GNAT\n+   Name_Unchecked_Union                : constant Name_Id := N + 273; -- Ada 05\n+   Name_Unimplemented_Unit             : constant Name_Id := N + 274; -- GNAT\n+   Name_Universal_Aliasing             : constant Name_Id := N + 275; -- GNAT\n+   Name_Unmodified                     : constant Name_Id := N + 276; -- GNAT\n+   Name_Unreferenced                   : constant Name_Id := N + 277; -- GNAT\n+   Name_Unreferenced_Objects           : constant Name_Id := N + 278; -- GNAT\n+   Name_Unreserve_All_Interrupts       : constant Name_Id := N + 279; -- GNAT\n+   Name_Volatile                       : constant Name_Id := N + 280;\n+   Name_Volatile_Components            : constant Name_Id := N + 281;\n+   Name_Weak_External                  : constant Name_Id := N + 282; -- GNAT\n+   Last_Pragma_Name                    : constant Name_Id := N + 282;\n \n    --  Language convention names for pragma Convention/Export/Import/Interface\n    --  Note that Name_C is not included in this list, since it was already\n@@ -552,120 +551,120 @@ package Snames is\n    --  Entry and Protected, this is because these conventions cannot be\n    --  specified by a pragma.\n \n-   First_Convention_Name               : constant Name_Id := N + 284;\n-   Name_Ada                            : constant Name_Id := N + 284;\n-   Name_Assembler                      : constant Name_Id := N + 285;\n-   Name_CIL                            : constant Name_Id := N + 286;\n-   Name_COBOL                          : constant Name_Id := N + 287;\n-   Name_CPP                            : constant Name_Id := N + 288;\n-   Name_Fortran                        : constant Name_Id := N + 289;\n-   Name_Intrinsic                      : constant Name_Id := N + 290;\n-   Name_Java                           : constant Name_Id := N + 291;\n-   Name_Stdcall                        : constant Name_Id := N + 292;\n-   Name_Stubbed                        : constant Name_Id := N + 293;\n-   Last_Convention_Name                : constant Name_Id := N + 293;\n+   First_Convention_Name               : constant Name_Id := N + 283;\n+   Name_Ada                            : constant Name_Id := N + 283;\n+   Name_Assembler                      : constant Name_Id := N + 284;\n+   Name_CIL                            : constant Name_Id := N + 285;\n+   Name_COBOL                          : constant Name_Id := N + 286;\n+   Name_CPP                            : constant Name_Id := N + 287;\n+   Name_Fortran                        : constant Name_Id := N + 288;\n+   Name_Intrinsic                      : constant Name_Id := N + 289;\n+   Name_Java                           : constant Name_Id := N + 290;\n+   Name_Stdcall                        : constant Name_Id := N + 291;\n+   Name_Stubbed                        : constant Name_Id := N + 292;\n+   Last_Convention_Name                : constant Name_Id := N + 292;\n \n    --  The following names are preset as synonyms for Assembler\n \n-   Name_Asm                            : constant Name_Id := N + 294;\n-   Name_Assembly                       : constant Name_Id := N + 295;\n+   Name_Asm                            : constant Name_Id := N + 293;\n+   Name_Assembly                       : constant Name_Id := N + 294;\n \n    --  The following names are preset as synonyms for C\n \n-   Name_Default                        : constant Name_Id := N + 296;\n+   Name_Default                        : constant Name_Id := N + 295;\n    --  Name_External (previously defined as pragma)\n \n    --  The following names are preset as synonyms for CPP\n \n-   Name_C_Plus_Plus                    : constant Name_Id := N + 297;\n+   Name_C_Plus_Plus                    : constant Name_Id := N + 296;\n \n    --  The following names are present as synonyms for Stdcall\n \n-   Name_DLL                            : constant Name_Id := N + 298;\n-   Name_Win32                          : constant Name_Id := N + 299;\n+   Name_DLL                            : constant Name_Id := N + 297;\n+   Name_Win32                          : constant Name_Id := N + 298;\n \n    --  Other special names used in processing pragmas\n \n-   Name_As_Is                          : constant Name_Id := N + 300;\n-   Name_Assertion                      : constant Name_Id := N + 301;\n-   Name_Attribute_Name                 : constant Name_Id := N + 302;\n-   Name_Body_File_Name                 : constant Name_Id := N + 303;\n-   Name_Boolean_Entry_Barriers         : constant Name_Id := N + 304;\n-   Name_Casing                         : constant Name_Id := N + 305;\n-   Name_Code                           : constant Name_Id := N + 306;\n-   Name_Component                      : constant Name_Id := N + 307;\n-   Name_Component_Size_4               : constant Name_Id := N + 308;\n-   Name_Copy                           : constant Name_Id := N + 309;\n-   Name_D_Float                        : constant Name_Id := N + 310;\n-   Name_Descriptor                     : constant Name_Id := N + 311;\n-   Name_Dot_Replacement                : constant Name_Id := N + 312;\n-   Name_Dynamic                        : constant Name_Id := N + 313;\n-   Name_Entity                         : constant Name_Id := N + 314;\n-   Name_Entry_Count                    : constant Name_Id := N + 315;\n-   Name_External_Name                  : constant Name_Id := N + 316;\n-   Name_First_Optional_Parameter       : constant Name_Id := N + 317;\n-   Name_Form                           : constant Name_Id := N + 318;\n-   Name_G_Float                        : constant Name_Id := N + 319;\n-   Name_Gcc                            : constant Name_Id := N + 320;\n-   Name_Gnat                           : constant Name_Id := N + 321;\n-   Name_GPL                            : constant Name_Id := N + 322;\n-   Name_IEEE_Float                     : constant Name_Id := N + 323;\n-   Name_Ignore                         : constant Name_Id := N + 324;\n-   Name_Info                           : constant Name_Id := N + 325;\n-   Name_Internal                       : constant Name_Id := N + 326;\n-   Name_Link_Name                      : constant Name_Id := N + 327;\n-   Name_Lowercase                      : constant Name_Id := N + 328;\n-   Name_Max_Entry_Queue_Depth          : constant Name_Id := N + 329;\n-   Name_Max_Entry_Queue_Length         : constant Name_Id := N + 330;\n-   Name_Max_Size                       : constant Name_Id := N + 331;\n-   Name_Mechanism                      : constant Name_Id := N + 332;\n-   Name_Message                        : constant Name_Id := N + 333;\n-   Name_Mixedcase                      : constant Name_Id := N + 334;\n-   Name_Modified_GPL                   : constant Name_Id := N + 335;\n-   Name_Name                           : constant Name_Id := N + 336;\n-   Name_NCA                            : constant Name_Id := N + 337;\n-   Name_No                             : constant Name_Id := N + 338;\n-   Name_No_Dependence                  : constant Name_Id := N + 339;\n-   Name_No_Dynamic_Attachment          : constant Name_Id := N + 340;\n-   Name_No_Dynamic_Interrupts          : constant Name_Id := N + 341;\n-   Name_No_Requeue                     : constant Name_Id := N + 342;\n-   Name_No_Requeue_Statements          : constant Name_Id := N + 343;\n-   Name_No_Task_Attributes             : constant Name_Id := N + 344;\n-   Name_No_Task_Attributes_Package     : constant Name_Id := N + 345;\n-   Name_On                             : constant Name_Id := N + 346;\n-   Name_Parameter_Types                : constant Name_Id := N + 347;\n-   Name_Reference                      : constant Name_Id := N + 348;\n-   Name_Restricted                     : constant Name_Id := N + 349;\n-   Name_Result_Mechanism               : constant Name_Id := N + 350;\n-   Name_Result_Type                    : constant Name_Id := N + 351;\n-   Name_Runtime                        : constant Name_Id := N + 352;\n-   Name_SB                             : constant Name_Id := N + 353;\n-   Name_Secondary_Stack_Size           : constant Name_Id := N + 354;\n-   Name_Section                        : constant Name_Id := N + 355;\n-   Name_Semaphore                      : constant Name_Id := N + 356;\n-   Name_Short_Descriptor               : constant Name_Id := N + 357;\n-   Name_Simple_Barriers                : constant Name_Id := N + 358;\n-   Name_Spec_File_Name                 : constant Name_Id := N + 359;\n-   Name_State                          : constant Name_Id := N + 360;\n-   Name_Static                         : constant Name_Id := N + 361;\n-   Name_Stack_Size                     : constant Name_Id := N + 362;\n-   Name_Subunit_File_Name              : constant Name_Id := N + 363;\n-   Name_Task_Stack_Size_Default        : constant Name_Id := N + 364;\n-   Name_Task_Type                      : constant Name_Id := N + 365;\n-   Name_Time_Slicing_Enabled           : constant Name_Id := N + 366;\n-   Name_Top_Guard                      : constant Name_Id := N + 367;\n-   Name_UBA                            : constant Name_Id := N + 368;\n-   Name_UBS                            : constant Name_Id := N + 369;\n-   Name_UBSB                           : constant Name_Id := N + 370;\n-   Name_Unit_Name                      : constant Name_Id := N + 371;\n-   Name_Unknown                        : constant Name_Id := N + 372;\n-   Name_Unrestricted                   : constant Name_Id := N + 373;\n-   Name_Uppercase                      : constant Name_Id := N + 374;\n-   Name_User                           : constant Name_Id := N + 375;\n-   Name_VAX_Float                      : constant Name_Id := N + 376;\n-   Name_VMS                            : constant Name_Id := N + 377;\n-   Name_Vtable_Ptr                     : constant Name_Id := N + 378;\n-   Name_Working_Storage                : constant Name_Id := N + 379;\n+   Name_As_Is                          : constant Name_Id := N + 299;\n+   Name_Assertion                      : constant Name_Id := N + 300;\n+   Name_Attribute_Name                 : constant Name_Id := N + 301;\n+   Name_Body_File_Name                 : constant Name_Id := N + 302;\n+   Name_Boolean_Entry_Barriers         : constant Name_Id := N + 303;\n+   Name_Casing                         : constant Name_Id := N + 304;\n+   Name_Code                           : constant Name_Id := N + 305;\n+   Name_Component                      : constant Name_Id := N + 306;\n+   Name_Component_Size_4               : constant Name_Id := N + 307;\n+   Name_Copy                           : constant Name_Id := N + 308;\n+   Name_D_Float                        : constant Name_Id := N + 309;\n+   Name_Descriptor                     : constant Name_Id := N + 310;\n+   Name_Dot_Replacement                : constant Name_Id := N + 311;\n+   Name_Dynamic                        : constant Name_Id := N + 312;\n+   Name_Entity                         : constant Name_Id := N + 313;\n+   Name_Entry_Count                    : constant Name_Id := N + 314;\n+   Name_External_Name                  : constant Name_Id := N + 315;\n+   Name_First_Optional_Parameter       : constant Name_Id := N + 316;\n+   Name_Form                           : constant Name_Id := N + 317;\n+   Name_G_Float                        : constant Name_Id := N + 318;\n+   Name_Gcc                            : constant Name_Id := N + 319;\n+   Name_Gnat                           : constant Name_Id := N + 320;\n+   Name_GPL                            : constant Name_Id := N + 321;\n+   Name_IEEE_Float                     : constant Name_Id := N + 322;\n+   Name_Ignore                         : constant Name_Id := N + 323;\n+   Name_Info                           : constant Name_Id := N + 324;\n+   Name_Internal                       : constant Name_Id := N + 325;\n+   Name_Link_Name                      : constant Name_Id := N + 326;\n+   Name_Lowercase                      : constant Name_Id := N + 327;\n+   Name_Max_Entry_Queue_Depth          : constant Name_Id := N + 328;\n+   Name_Max_Entry_Queue_Length         : constant Name_Id := N + 329;\n+   Name_Max_Size                       : constant Name_Id := N + 330;\n+   Name_Mechanism                      : constant Name_Id := N + 331;\n+   Name_Message                        : constant Name_Id := N + 332;\n+   Name_Mixedcase                      : constant Name_Id := N + 333;\n+   Name_Modified_GPL                   : constant Name_Id := N + 334;\n+   Name_Name                           : constant Name_Id := N + 335;\n+   Name_NCA                            : constant Name_Id := N + 336;\n+   Name_No                             : constant Name_Id := N + 337;\n+   Name_No_Dependence                  : constant Name_Id := N + 338;\n+   Name_No_Dynamic_Attachment          : constant Name_Id := N + 339;\n+   Name_No_Dynamic_Interrupts          : constant Name_Id := N + 340;\n+   Name_No_Requeue                     : constant Name_Id := N + 341;\n+   Name_No_Requeue_Statements          : constant Name_Id := N + 342;\n+   Name_No_Task_Attributes             : constant Name_Id := N + 343;\n+   Name_No_Task_Attributes_Package     : constant Name_Id := N + 344;\n+   Name_On                             : constant Name_Id := N + 345;\n+   Name_Parameter_Types                : constant Name_Id := N + 346;\n+   Name_Reference                      : constant Name_Id := N + 347;\n+   Name_Restricted                     : constant Name_Id := N + 348;\n+   Name_Result_Mechanism               : constant Name_Id := N + 349;\n+   Name_Result_Type                    : constant Name_Id := N + 350;\n+   Name_Runtime                        : constant Name_Id := N + 351;\n+   Name_SB                             : constant Name_Id := N + 352;\n+   Name_Secondary_Stack_Size           : constant Name_Id := N + 353;\n+   Name_Section                        : constant Name_Id := N + 354;\n+   Name_Semaphore                      : constant Name_Id := N + 355;\n+   Name_Short_Descriptor               : constant Name_Id := N + 356;\n+   Name_Simple_Barriers                : constant Name_Id := N + 357;\n+   Name_Spec_File_Name                 : constant Name_Id := N + 358;\n+   Name_State                          : constant Name_Id := N + 359;\n+   Name_Static                         : constant Name_Id := N + 360;\n+   Name_Stack_Size                     : constant Name_Id := N + 361;\n+   Name_Subunit_File_Name              : constant Name_Id := N + 362;\n+   Name_Task_Stack_Size_Default        : constant Name_Id := N + 363;\n+   Name_Task_Type                      : constant Name_Id := N + 364;\n+   Name_Time_Slicing_Enabled           : constant Name_Id := N + 365;\n+   Name_Top_Guard                      : constant Name_Id := N + 366;\n+   Name_UBA                            : constant Name_Id := N + 367;\n+   Name_UBS                            : constant Name_Id := N + 368;\n+   Name_UBSB                           : constant Name_Id := N + 369;\n+   Name_Unit_Name                      : constant Name_Id := N + 370;\n+   Name_Unknown                        : constant Name_Id := N + 371;\n+   Name_Unrestricted                   : constant Name_Id := N + 372;\n+   Name_Uppercase                      : constant Name_Id := N + 373;\n+   Name_User                           : constant Name_Id := N + 374;\n+   Name_VAX_Float                      : constant Name_Id := N + 375;\n+   Name_VMS                            : constant Name_Id := N + 376;\n+   Name_Vtable_Ptr                     : constant Name_Id := N + 377;\n+   Name_Working_Storage                : constant Name_Id := N + 378;\n \n    --  Names of recognized attributes. The entries with the comment \"Ada 83\"\n    --  are attributes that are defined in Ada 83, but not in Ada 95. These\n@@ -679,482 +678,482 @@ package Snames is\n    --  The entries marked VMS are recognized only in OpenVMS implementations\n    --  of GNAT, and are treated as illegal in all other contexts.\n \n-   First_Attribute_Name                : constant Name_Id := N + 380;\n-   Name_Abort_Signal                   : constant Name_Id := N + 380; -- GNAT\n-   Name_Access                         : constant Name_Id := N + 381;\n-   Name_Address                        : constant Name_Id := N + 382;\n-   Name_Address_Size                   : constant Name_Id := N + 383; -- GNAT\n-   Name_Aft                            : constant Name_Id := N + 384;\n-   Name_Alignment                      : constant Name_Id := N + 385;\n-   Name_Asm_Input                      : constant Name_Id := N + 386; -- GNAT\n-   Name_Asm_Output                     : constant Name_Id := N + 387; -- GNAT\n-   Name_AST_Entry                      : constant Name_Id := N + 388; -- VMS\n-   Name_Bit                            : constant Name_Id := N + 389; -- GNAT\n-   Name_Bit_Order                      : constant Name_Id := N + 390;\n-   Name_Bit_Position                   : constant Name_Id := N + 391; -- GNAT\n-   Name_Body_Version                   : constant Name_Id := N + 392;\n-   Name_Callable                       : constant Name_Id := N + 393;\n-   Name_Caller                         : constant Name_Id := N + 394;\n-   Name_Code_Address                   : constant Name_Id := N + 395; -- GNAT\n-   Name_Component_Size                 : constant Name_Id := N + 396;\n-   Name_Compose                        : constant Name_Id := N + 397;\n-   Name_Constrained                    : constant Name_Id := N + 398;\n-   Name_Count                          : constant Name_Id := N + 399;\n-   Name_Default_Bit_Order              : constant Name_Id := N + 400; -- GNAT\n-   Name_Definite                       : constant Name_Id := N + 401;\n-   Name_Delta                          : constant Name_Id := N + 402;\n-   Name_Denorm                         : constant Name_Id := N + 403;\n-   Name_Digits                         : constant Name_Id := N + 404;\n-   Name_Elaborated                     : constant Name_Id := N + 405; -- GNAT\n-   Name_Emax                           : constant Name_Id := N + 406; -- Ada 83\n-   Name_Enabled                        : constant Name_Id := N + 407; -- GNAT\n-   Name_Enum_Rep                       : constant Name_Id := N + 408; -- GNAT\n-   Name_Enum_Val                       : constant Name_Id := N + 409; -- GNAT\n-   Name_Epsilon                        : constant Name_Id := N + 410; -- Ada 83\n-   Name_Exponent                       : constant Name_Id := N + 411;\n-   Name_External_Tag                   : constant Name_Id := N + 412;\n-   Name_Fast_Math                      : constant Name_Id := N + 413; -- GNAT\n-   Name_First                          : constant Name_Id := N + 414;\n-   Name_First_Bit                      : constant Name_Id := N + 415;\n-   Name_Fixed_Value                    : constant Name_Id := N + 416; -- GNAT\n-   Name_Fore                           : constant Name_Id := N + 417;\n-   Name_Has_Access_Values              : constant Name_Id := N + 418; -- GNAT\n-   Name_Has_Discriminants              : constant Name_Id := N + 419; -- GNAT\n-   Name_Has_Tagged_Values              : constant Name_Id := N + 420; -- GNAT\n-   Name_Identity                       : constant Name_Id := N + 421;\n-   Name_Img                            : constant Name_Id := N + 422; -- GNAT\n-   Name_Integer_Value                  : constant Name_Id := N + 423; -- GNAT\n-   Name_Invalid_Value                  : constant Name_Id := N + 424; -- GNAT\n-   Name_Large                          : constant Name_Id := N + 425; -- Ada 83\n-   Name_Last                           : constant Name_Id := N + 426;\n-   Name_Last_Bit                       : constant Name_Id := N + 427;\n-   Name_Leading_Part                   : constant Name_Id := N + 428;\n-   Name_Length                         : constant Name_Id := N + 429;\n-   Name_Machine_Emax                   : constant Name_Id := N + 430;\n-   Name_Machine_Emin                   : constant Name_Id := N + 431;\n-   Name_Machine_Mantissa               : constant Name_Id := N + 432;\n-   Name_Machine_Overflows              : constant Name_Id := N + 433;\n-   Name_Machine_Radix                  : constant Name_Id := N + 434;\n-   Name_Machine_Rounding               : constant Name_Id := N + 435; -- Ada 05\n-   Name_Machine_Rounds                 : constant Name_Id := N + 436;\n-   Name_Machine_Size                   : constant Name_Id := N + 437; -- GNAT\n-   Name_Mantissa                       : constant Name_Id := N + 438; -- Ada 83\n-   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 439;\n-   Name_Maximum_Alignment              : constant Name_Id := N + 440; -- GNAT\n-   Name_Mechanism_Code                 : constant Name_Id := N + 441; -- GNAT\n-   Name_Mod                            : constant Name_Id := N + 442; -- Ada 05\n-   Name_Model_Emin                     : constant Name_Id := N + 443;\n-   Name_Model_Epsilon                  : constant Name_Id := N + 444;\n-   Name_Model_Mantissa                 : constant Name_Id := N + 445;\n-   Name_Model_Small                    : constant Name_Id := N + 446;\n-   Name_Modulus                        : constant Name_Id := N + 447;\n-   Name_Null_Parameter                 : constant Name_Id := N + 448; -- GNAT\n-   Name_Object_Size                    : constant Name_Id := N + 449; -- GNAT\n-   Name_Old                            : constant Name_Id := N + 450; -- GNAT\n-   Name_Partition_ID                   : constant Name_Id := N + 451;\n-   Name_Passed_By_Reference            : constant Name_Id := N + 452; -- GNAT\n-   Name_Pool_Address                   : constant Name_Id := N + 453;\n-   Name_Pos                            : constant Name_Id := N + 454;\n-   Name_Position                       : constant Name_Id := N + 455;\n-   Name_Priority                       : constant Name_Id := N + 456; -- Ada 05\n-   Name_Range                          : constant Name_Id := N + 457;\n-   Name_Range_Length                   : constant Name_Id := N + 458; -- GNAT\n-   Name_Result                         : constant Name_Id := N + 459; -- GNAT\n-   Name_Round                          : constant Name_Id := N + 460;\n-   Name_Safe_Emax                      : constant Name_Id := N + 461; -- Ada 83\n-   Name_Safe_First                     : constant Name_Id := N + 462;\n-   Name_Safe_Large                     : constant Name_Id := N + 463; -- Ada 83\n-   Name_Safe_Last                      : constant Name_Id := N + 464;\n-   Name_Safe_Small                     : constant Name_Id := N + 465; -- Ada 83\n-   Name_Scale                          : constant Name_Id := N + 466;\n-   Name_Scaling                        : constant Name_Id := N + 467;\n-   Name_Signed_Zeros                   : constant Name_Id := N + 468;\n-   Name_Size                           : constant Name_Id := N + 469;\n-   Name_Small                          : constant Name_Id := N + 470;\n-   Name_Storage_Size                   : constant Name_Id := N + 471;\n-   Name_Storage_Unit                   : constant Name_Id := N + 472; -- GNAT\n-   Name_Stream_Size                    : constant Name_Id := N + 473; -- Ada 05\n-   Name_Tag                            : constant Name_Id := N + 474;\n-   Name_Target_Name                    : constant Name_Id := N + 475; -- GNAT\n-   Name_Terminated                     : constant Name_Id := N + 476;\n-   Name_To_Address                     : constant Name_Id := N + 477; -- GNAT\n-   Name_Type_Class                     : constant Name_Id := N + 478; -- GNAT\n-   Name_UET_Address                    : constant Name_Id := N + 479; -- GNAT\n-   Name_Unbiased_Rounding              : constant Name_Id := N + 480;\n-   Name_Unchecked_Access               : constant Name_Id := N + 481;\n-   Name_Unconstrained_Array            : constant Name_Id := N + 482;\n-   Name_Universal_Literal_String       : constant Name_Id := N + 483; -- GNAT\n-   Name_Unrestricted_Access            : constant Name_Id := N + 484; -- GNAT\n-   Name_VADS_Size                      : constant Name_Id := N + 485; -- GNAT\n-   Name_Val                            : constant Name_Id := N + 486;\n-   Name_Valid                          : constant Name_Id := N + 487;\n-   Name_Value_Size                     : constant Name_Id := N + 488; -- GNAT\n-   Name_Version                        : constant Name_Id := N + 489;\n-   Name_Wchar_T_Size                   : constant Name_Id := N + 490; -- GNAT\n-   Name_Wide_Wide_Width                : constant Name_Id := N + 491; -- Ada 05\n-   Name_Wide_Width                     : constant Name_Id := N + 492;\n-   Name_Width                          : constant Name_Id := N + 493;\n-   Name_Word_Size                      : constant Name_Id := N + 494; -- GNAT\n+   First_Attribute_Name                : constant Name_Id := N + 379;\n+   Name_Abort_Signal                   : constant Name_Id := N + 379; -- GNAT\n+   Name_Access                         : constant Name_Id := N + 380;\n+   Name_Address                        : constant Name_Id := N + 381;\n+   Name_Address_Size                   : constant Name_Id := N + 382; -- GNAT\n+   Name_Aft                            : constant Name_Id := N + 383;\n+   Name_Alignment                      : constant Name_Id := N + 384;\n+   Name_Asm_Input                      : constant Name_Id := N + 385; -- GNAT\n+   Name_Asm_Output                     : constant Name_Id := N + 386; -- GNAT\n+   Name_AST_Entry                      : constant Name_Id := N + 387; -- VMS\n+   Name_Bit                            : constant Name_Id := N + 388; -- GNAT\n+   Name_Bit_Order                      : constant Name_Id := N + 389;\n+   Name_Bit_Position                   : constant Name_Id := N + 390; -- GNAT\n+   Name_Body_Version                   : constant Name_Id := N + 391;\n+   Name_Callable                       : constant Name_Id := N + 392;\n+   Name_Caller                         : constant Name_Id := N + 393;\n+   Name_Code_Address                   : constant Name_Id := N + 394; -- GNAT\n+   Name_Component_Size                 : constant Name_Id := N + 395;\n+   Name_Compose                        : constant Name_Id := N + 396;\n+   Name_Constrained                    : constant Name_Id := N + 397;\n+   Name_Count                          : constant Name_Id := N + 398;\n+   Name_Default_Bit_Order              : constant Name_Id := N + 399; -- GNAT\n+   Name_Definite                       : constant Name_Id := N + 400;\n+   Name_Delta                          : constant Name_Id := N + 401;\n+   Name_Denorm                         : constant Name_Id := N + 402;\n+   Name_Digits                         : constant Name_Id := N + 403;\n+   Name_Elaborated                     : constant Name_Id := N + 404; -- GNAT\n+   Name_Emax                           : constant Name_Id := N + 405; -- Ada 83\n+   Name_Enabled                        : constant Name_Id := N + 406; -- GNAT\n+   Name_Enum_Rep                       : constant Name_Id := N + 407; -- GNAT\n+   Name_Enum_Val                       : constant Name_Id := N + 408; -- GNAT\n+   Name_Epsilon                        : constant Name_Id := N + 409; -- Ada 83\n+   Name_Exponent                       : constant Name_Id := N + 410;\n+   Name_External_Tag                   : constant Name_Id := N + 411;\n+   Name_Fast_Math                      : constant Name_Id := N + 412; -- GNAT\n+   Name_First                          : constant Name_Id := N + 413;\n+   Name_First_Bit                      : constant Name_Id := N + 414;\n+   Name_Fixed_Value                    : constant Name_Id := N + 415; -- GNAT\n+   Name_Fore                           : constant Name_Id := N + 416;\n+   Name_Has_Access_Values              : constant Name_Id := N + 417; -- GNAT\n+   Name_Has_Discriminants              : constant Name_Id := N + 418; -- GNAT\n+   Name_Has_Tagged_Values              : constant Name_Id := N + 419; -- GNAT\n+   Name_Identity                       : constant Name_Id := N + 420;\n+   Name_Img                            : constant Name_Id := N + 421; -- GNAT\n+   Name_Integer_Value                  : constant Name_Id := N + 422; -- GNAT\n+   Name_Invalid_Value                  : constant Name_Id := N + 423; -- GNAT\n+   Name_Large                          : constant Name_Id := N + 424; -- Ada 83\n+   Name_Last                           : constant Name_Id := N + 425;\n+   Name_Last_Bit                       : constant Name_Id := N + 426;\n+   Name_Leading_Part                   : constant Name_Id := N + 427;\n+   Name_Length                         : constant Name_Id := N + 428;\n+   Name_Machine_Emax                   : constant Name_Id := N + 429;\n+   Name_Machine_Emin                   : constant Name_Id := N + 430;\n+   Name_Machine_Mantissa               : constant Name_Id := N + 431;\n+   Name_Machine_Overflows              : constant Name_Id := N + 432;\n+   Name_Machine_Radix                  : constant Name_Id := N + 433;\n+   Name_Machine_Rounding               : constant Name_Id := N + 434; -- Ada 05\n+   Name_Machine_Rounds                 : constant Name_Id := N + 435;\n+   Name_Machine_Size                   : constant Name_Id := N + 436; -- GNAT\n+   Name_Mantissa                       : constant Name_Id := N + 437; -- Ada 83\n+   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 438;\n+   Name_Maximum_Alignment              : constant Name_Id := N + 439; -- GNAT\n+   Name_Mechanism_Code                 : constant Name_Id := N + 440; -- GNAT\n+   Name_Mod                            : constant Name_Id := N + 441; -- Ada 05\n+   Name_Model_Emin                     : constant Name_Id := N + 442;\n+   Name_Model_Epsilon                  : constant Name_Id := N + 443;\n+   Name_Model_Mantissa                 : constant Name_Id := N + 444;\n+   Name_Model_Small                    : constant Name_Id := N + 445;\n+   Name_Modulus                        : constant Name_Id := N + 446;\n+   Name_Null_Parameter                 : constant Name_Id := N + 447; -- GNAT\n+   Name_Object_Size                    : constant Name_Id := N + 448; -- GNAT\n+   Name_Old                            : constant Name_Id := N + 449; -- GNAT\n+   Name_Partition_ID                   : constant Name_Id := N + 450;\n+   Name_Passed_By_Reference            : constant Name_Id := N + 451; -- GNAT\n+   Name_Pool_Address                   : constant Name_Id := N + 452;\n+   Name_Pos                            : constant Name_Id := N + 453;\n+   Name_Position                       : constant Name_Id := N + 454;\n+   Name_Priority                       : constant Name_Id := N + 455; -- Ada 05\n+   Name_Range                          : constant Name_Id := N + 456;\n+   Name_Range_Length                   : constant Name_Id := N + 457; -- GNAT\n+   Name_Result                         : constant Name_Id := N + 458; -- GNAT\n+   Name_Round                          : constant Name_Id := N + 459;\n+   Name_Safe_Emax                      : constant Name_Id := N + 460; -- Ada 83\n+   Name_Safe_First                     : constant Name_Id := N + 461;\n+   Name_Safe_Large                     : constant Name_Id := N + 462; -- Ada 83\n+   Name_Safe_Last                      : constant Name_Id := N + 463;\n+   Name_Safe_Small                     : constant Name_Id := N + 464; -- Ada 83\n+   Name_Scale                          : constant Name_Id := N + 465;\n+   Name_Scaling                        : constant Name_Id := N + 466;\n+   Name_Signed_Zeros                   : constant Name_Id := N + 467;\n+   Name_Size                           : constant Name_Id := N + 468;\n+   Name_Small                          : constant Name_Id := N + 469;\n+   Name_Storage_Size                   : constant Name_Id := N + 470;\n+   Name_Storage_Unit                   : constant Name_Id := N + 471; -- GNAT\n+   Name_Stream_Size                    : constant Name_Id := N + 472; -- Ada 05\n+   Name_Tag                            : constant Name_Id := N + 473;\n+   Name_Target_Name                    : constant Name_Id := N + 474; -- GNAT\n+   Name_Terminated                     : constant Name_Id := N + 475;\n+   Name_To_Address                     : constant Name_Id := N + 476; -- GNAT\n+   Name_Type_Class                     : constant Name_Id := N + 477; -- GNAT\n+   Name_UET_Address                    : constant Name_Id := N + 478; -- GNAT\n+   Name_Unbiased_Rounding              : constant Name_Id := N + 479;\n+   Name_Unchecked_Access               : constant Name_Id := N + 480;\n+   Name_Unconstrained_Array            : constant Name_Id := N + 481;\n+   Name_Universal_Literal_String       : constant Name_Id := N + 482; -- GNAT\n+   Name_Unrestricted_Access            : constant Name_Id := N + 483; -- GNAT\n+   Name_VADS_Size                      : constant Name_Id := N + 484; -- GNAT\n+   Name_Val                            : constant Name_Id := N + 485;\n+   Name_Valid                          : constant Name_Id := N + 486;\n+   Name_Value_Size                     : constant Name_Id := N + 487; -- GNAT\n+   Name_Version                        : constant Name_Id := N + 488;\n+   Name_Wchar_T_Size                   : constant Name_Id := N + 489; -- GNAT\n+   Name_Wide_Wide_Width                : constant Name_Id := N + 490; -- Ada 05\n+   Name_Wide_Width                     : constant Name_Id := N + 491;\n+   Name_Width                          : constant Name_Id := N + 492;\n+   Name_Word_Size                      : constant Name_Id := N + 493; -- GNAT\n \n    --  Attributes that designate attributes returning renamable functions,\n    --  i.e. functions that return other than a universal value and that\n    --  have non-universal arguments.\n \n-   First_Renamable_Function_Attribute  : constant Name_Id := N + 495;\n-   Name_Adjacent                       : constant Name_Id := N + 495;\n-   Name_Ceiling                        : constant Name_Id := N + 496;\n-   Name_Copy_Sign                      : constant Name_Id := N + 497;\n-   Name_Floor                          : constant Name_Id := N + 498;\n-   Name_Fraction                       : constant Name_Id := N + 499;\n-   Name_Image                          : constant Name_Id := N + 500;\n-   Name_Input                          : constant Name_Id := N + 501;\n-   Name_Machine                        : constant Name_Id := N + 502;\n-   Name_Max                            : constant Name_Id := N + 503;\n-   Name_Min                            : constant Name_Id := N + 504;\n-   Name_Model                          : constant Name_Id := N + 505;\n-   Name_Pred                           : constant Name_Id := N + 506;\n-   Name_Remainder                      : constant Name_Id := N + 507;\n-   Name_Rounding                       : constant Name_Id := N + 508;\n-   Name_Succ                           : constant Name_Id := N + 509;\n-   Name_Truncation                     : constant Name_Id := N + 510;\n-   Name_Value                          : constant Name_Id := N + 511;\n-   Name_Wide_Image                     : constant Name_Id := N + 512;\n-   Name_Wide_Wide_Image                : constant Name_Id := N + 513;\n-   Name_Wide_Value                     : constant Name_Id := N + 514;\n-   Name_Wide_Wide_Value                : constant Name_Id := N + 515;\n-   Last_Renamable_Function_Attribute   : constant Name_Id := N + 515;\n+   First_Renamable_Function_Attribute  : constant Name_Id := N + 494;\n+   Name_Adjacent                       : constant Name_Id := N + 494;\n+   Name_Ceiling                        : constant Name_Id := N + 495;\n+   Name_Copy_Sign                      : constant Name_Id := N + 496;\n+   Name_Floor                          : constant Name_Id := N + 497;\n+   Name_Fraction                       : constant Name_Id := N + 498;\n+   Name_Image                          : constant Name_Id := N + 499;\n+   Name_Input                          : constant Name_Id := N + 500;\n+   Name_Machine                        : constant Name_Id := N + 501;\n+   Name_Max                            : constant Name_Id := N + 502;\n+   Name_Min                            : constant Name_Id := N + 503;\n+   Name_Model                          : constant Name_Id := N + 504;\n+   Name_Pred                           : constant Name_Id := N + 505;\n+   Name_Remainder                      : constant Name_Id := N + 506;\n+   Name_Rounding                       : constant Name_Id := N + 507;\n+   Name_Succ                           : constant Name_Id := N + 508;\n+   Name_Truncation                     : constant Name_Id := N + 509;\n+   Name_Value                          : constant Name_Id := N + 510;\n+   Name_Wide_Image                     : constant Name_Id := N + 511;\n+   Name_Wide_Wide_Image                : constant Name_Id := N + 512;\n+   Name_Wide_Value                     : constant Name_Id := N + 513;\n+   Name_Wide_Wide_Value                : constant Name_Id := N + 514;\n+   Last_Renamable_Function_Attribute   : constant Name_Id := N + 514;\n \n    --  Attributes that designate procedures\n \n-   First_Procedure_Attribute           : constant Name_Id := N + 516;\n-   Name_Output                         : constant Name_Id := N + 516;\n-   Name_Read                           : constant Name_Id := N + 517;\n-   Name_Write                          : constant Name_Id := N + 518;\n-   Last_Procedure_Attribute            : constant Name_Id := N + 518;\n+   First_Procedure_Attribute           : constant Name_Id := N + 515;\n+   Name_Output                         : constant Name_Id := N + 515;\n+   Name_Read                           : constant Name_Id := N + 516;\n+   Name_Write                          : constant Name_Id := N + 517;\n+   Last_Procedure_Attribute            : constant Name_Id := N + 517;\n \n    --  Remaining attributes are ones that return entities\n \n-   First_Entity_Attribute_Name         : constant Name_Id := N + 519;\n-   Name_Elab_Body                      : constant Name_Id := N + 519; -- GNAT\n-   Name_Elab_Spec                      : constant Name_Id := N + 520; -- GNAT\n-   Name_Storage_Pool                   : constant Name_Id := N + 521;\n+   First_Entity_Attribute_Name         : constant Name_Id := N + 518;\n+   Name_Elab_Body                      : constant Name_Id := N + 518; -- GNAT\n+   Name_Elab_Spec                      : constant Name_Id := N + 519; -- GNAT\n+   Name_Storage_Pool                   : constant Name_Id := N + 520;\n \n    --  These attributes are the ones that return types\n \n-   First_Type_Attribute_Name           : constant Name_Id := N + 522;\n-   Name_Base                           : constant Name_Id := N + 522;\n-   Name_Class                          : constant Name_Id := N + 523;\n-   Name_Stub_Type                      : constant Name_Id := N + 524;\n-   Last_Type_Attribute_Name            : constant Name_Id := N + 524;\n-   Last_Entity_Attribute_Name          : constant Name_Id := N + 524;\n-   Last_Attribute_Name                 : constant Name_Id := N + 524;\n+   First_Type_Attribute_Name           : constant Name_Id := N + 521;\n+   Name_Base                           : constant Name_Id := N + 521;\n+   Name_Class                          : constant Name_Id := N + 522;\n+   Name_Stub_Type                      : constant Name_Id := N + 523;\n+   Last_Type_Attribute_Name            : constant Name_Id := N + 523;\n+   Last_Entity_Attribute_Name          : constant Name_Id := N + 523;\n+   Last_Attribute_Name                 : constant Name_Id := N + 523;\n \n    --  Names of recognized locking policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. C for Ceiling_Locking). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Locking_Policy_Name           : constant Name_Id := N + 525;\n-   Name_Ceiling_Locking                : constant Name_Id := N + 525;\n-   Name_Inheritance_Locking            : constant Name_Id := N + 526;\n-   Last_Locking_Policy_Name            : constant Name_Id := N + 526;\n+   First_Locking_Policy_Name           : constant Name_Id := N + 524;\n+   Name_Ceiling_Locking                : constant Name_Id := N + 524;\n+   Name_Inheritance_Locking            : constant Name_Id := N + 525;\n+   Last_Locking_Policy_Name            : constant Name_Id := N + 525;\n \n    --  Names of recognized queuing policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_Queuing). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Queuing_Policy_Name           : constant Name_Id := N + 527;\n-   Name_FIFO_Queuing                   : constant Name_Id := N + 527;\n-   Name_Priority_Queuing               : constant Name_Id := N + 528;\n-   Last_Queuing_Policy_Name            : constant Name_Id := N + 528;\n+   First_Queuing_Policy_Name           : constant Name_Id := N + 526;\n+   Name_FIFO_Queuing                   : constant Name_Id := N + 526;\n+   Name_Priority_Queuing               : constant Name_Id := N + 527;\n+   Last_Queuing_Policy_Name            : constant Name_Id := N + 527;\n \n    --  Names of recognized task dispatching policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_Within_Priorities). If new policy names\n    --  are added, the first character must be distinct.\n \n-   First_Task_Dispatching_Policy_Name    : constant Name_Id := N + 529;\n-   Name_EDF_Across_Priorities            : constant Name_Id := N + 529;\n-   Name_FIFO_Within_Priorities           : constant Name_Id := N + 530;\n-   Name_Non_Preemptive_Within_Priorities : constant Name_Id := N + 531;\n-   Name_Round_Robin_Within_Priorities    : constant Name_Id := N + 532;\n-   Last_Task_Dispatching_Policy_Name     : constant Name_Id := N + 532;\n+   First_Task_Dispatching_Policy_Name    : constant Name_Id := N + 528;\n+   Name_EDF_Across_Priorities            : constant Name_Id := N + 528;\n+   Name_FIFO_Within_Priorities           : constant Name_Id := N + 529;\n+   Name_Non_Preemptive_Within_Priorities : constant Name_Id := N + 530;\n+   Name_Round_Robin_Within_Priorities    : constant Name_Id := N + 531;\n+   Last_Task_Dispatching_Policy_Name     : constant Name_Id := N + 531;\n \n    --  Names of recognized checks for pragma Suppress\n \n-   First_Check_Name                    : constant Name_Id := N + 533;\n-   Name_Access_Check                   : constant Name_Id := N + 533;\n-   Name_Accessibility_Check            : constant Name_Id := N + 534;\n-   Name_Alignment_Check                : constant Name_Id := N + 535; -- GNAT\n-   Name_Discriminant_Check             : constant Name_Id := N + 536;\n-   Name_Division_Check                 : constant Name_Id := N + 537;\n-   Name_Elaboration_Check              : constant Name_Id := N + 538;\n-   Name_Index_Check                    : constant Name_Id := N + 539;\n-   Name_Length_Check                   : constant Name_Id := N + 540;\n-   Name_Overflow_Check                 : constant Name_Id := N + 541;\n-   Name_Range_Check                    : constant Name_Id := N + 542;\n-   Name_Storage_Check                  : constant Name_Id := N + 543;\n-   Name_Tag_Check                      : constant Name_Id := N + 544;\n-   Name_Validity_Check                 : constant Name_Id := N + 545; -- GNAT\n-   Name_All_Checks                     : constant Name_Id := N + 546;\n-   Last_Check_Name                     : constant Name_Id := N + 546;\n+   First_Check_Name                    : constant Name_Id := N + 532;\n+   Name_Access_Check                   : constant Name_Id := N + 532;\n+   Name_Accessibility_Check            : constant Name_Id := N + 533;\n+   Name_Alignment_Check                : constant Name_Id := N + 534; -- GNAT\n+   Name_Discriminant_Check             : constant Name_Id := N + 535;\n+   Name_Division_Check                 : constant Name_Id := N + 536;\n+   Name_Elaboration_Check              : constant Name_Id := N + 537;\n+   Name_Index_Check                    : constant Name_Id := N + 538;\n+   Name_Length_Check                   : constant Name_Id := N + 539;\n+   Name_Overflow_Check                 : constant Name_Id := N + 540;\n+   Name_Range_Check                    : constant Name_Id := N + 541;\n+   Name_Storage_Check                  : constant Name_Id := N + 542;\n+   Name_Tag_Check                      : constant Name_Id := N + 543;\n+   Name_Validity_Check                 : constant Name_Id := N + 544; -- GNAT\n+   Name_All_Checks                     : constant Name_Id := N + 545;\n+   Last_Check_Name                     : constant Name_Id := N + 545;\n \n    --  Names corresponding to reserved keywords, excluding those already\n    --  declared in the attribute list (Access, Delta, Digits, Mod, Range).\n \n-   Name_Abort                          : constant Name_Id := N + 547;\n-   Name_Abs                            : constant Name_Id := N + 548;\n-   Name_Accept                         : constant Name_Id := N + 549;\n-   Name_And                            : constant Name_Id := N + 550;\n-   Name_All                            : constant Name_Id := N + 551;\n-   Name_Array                          : constant Name_Id := N + 552;\n-   Name_At                             : constant Name_Id := N + 553;\n-   Name_Begin                          : constant Name_Id := N + 554;\n-   Name_Body                           : constant Name_Id := N + 555;\n-   Name_Case                           : constant Name_Id := N + 556;\n-   Name_Constant                       : constant Name_Id := N + 557;\n-   Name_Declare                        : constant Name_Id := N + 558;\n-   Name_Delay                          : constant Name_Id := N + 559;\n-   Name_Do                             : constant Name_Id := N + 560;\n-   Name_Else                           : constant Name_Id := N + 561;\n-   Name_Elsif                          : constant Name_Id := N + 562;\n-   Name_End                            : constant Name_Id := N + 563;\n-   Name_Entry                          : constant Name_Id := N + 564;\n-   Name_Exception                      : constant Name_Id := N + 565;\n-   Name_Exit                           : constant Name_Id := N + 566;\n-   Name_For                            : constant Name_Id := N + 567;\n-   Name_Function                       : constant Name_Id := N + 568;\n-   Name_Generic                        : constant Name_Id := N + 569;\n-   Name_Goto                           : constant Name_Id := N + 570;\n-   Name_If                             : constant Name_Id := N + 571;\n-   Name_In                             : constant Name_Id := N + 572;\n-   Name_Is                             : constant Name_Id := N + 573;\n-   Name_Limited                        : constant Name_Id := N + 574;\n-   Name_Loop                           : constant Name_Id := N + 575;\n-   Name_New                            : constant Name_Id := N + 576;\n-   Name_Not                            : constant Name_Id := N + 577;\n-   Name_Null                           : constant Name_Id := N + 578;\n-   Name_Of                             : constant Name_Id := N + 579;\n-   Name_Or                             : constant Name_Id := N + 580;\n-   Name_Others                         : constant Name_Id := N + 581;\n-   Name_Out                            : constant Name_Id := N + 582;\n-   Name_Package                        : constant Name_Id := N + 583;\n-   Name_Pragma                         : constant Name_Id := N + 584;\n-   Name_Private                        : constant Name_Id := N + 585;\n-   Name_Procedure                      : constant Name_Id := N + 586;\n-   Name_Raise                          : constant Name_Id := N + 587;\n-   Name_Record                         : constant Name_Id := N + 588;\n-   Name_Rem                            : constant Name_Id := N + 589;\n-   Name_Renames                        : constant Name_Id := N + 590;\n-   Name_Return                         : constant Name_Id := N + 591;\n-   Name_Reverse                        : constant Name_Id := N + 592;\n-   Name_Select                         : constant Name_Id := N + 593;\n-   Name_Separate                       : constant Name_Id := N + 594;\n-   Name_Subtype                        : constant Name_Id := N + 595;\n-   Name_Task                           : constant Name_Id := N + 596;\n-   Name_Terminate                      : constant Name_Id := N + 597;\n-   Name_Then                           : constant Name_Id := N + 598;\n-   Name_Type                           : constant Name_Id := N + 599;\n-   Name_Use                            : constant Name_Id := N + 600;\n-   Name_When                           : constant Name_Id := N + 601;\n-   Name_While                          : constant Name_Id := N + 602;\n-   Name_With                           : constant Name_Id := N + 603;\n-   Name_Xor                            : constant Name_Id := N + 604;\n+   Name_Abort                          : constant Name_Id := N + 546;\n+   Name_Abs                            : constant Name_Id := N + 547;\n+   Name_Accept                         : constant Name_Id := N + 548;\n+   Name_And                            : constant Name_Id := N + 549;\n+   Name_All                            : constant Name_Id := N + 550;\n+   Name_Array                          : constant Name_Id := N + 551;\n+   Name_At                             : constant Name_Id := N + 552;\n+   Name_Begin                          : constant Name_Id := N + 553;\n+   Name_Body                           : constant Name_Id := N + 554;\n+   Name_Case                           : constant Name_Id := N + 555;\n+   Name_Constant                       : constant Name_Id := N + 556;\n+   Name_Declare                        : constant Name_Id := N + 557;\n+   Name_Delay                          : constant Name_Id := N + 558;\n+   Name_Do                             : constant Name_Id := N + 559;\n+   Name_Else                           : constant Name_Id := N + 560;\n+   Name_Elsif                          : constant Name_Id := N + 561;\n+   Name_End                            : constant Name_Id := N + 562;\n+   Name_Entry                          : constant Name_Id := N + 563;\n+   Name_Exception                      : constant Name_Id := N + 564;\n+   Name_Exit                           : constant Name_Id := N + 565;\n+   Name_For                            : constant Name_Id := N + 566;\n+   Name_Function                       : constant Name_Id := N + 567;\n+   Name_Generic                        : constant Name_Id := N + 568;\n+   Name_Goto                           : constant Name_Id := N + 569;\n+   Name_If                             : constant Name_Id := N + 570;\n+   Name_In                             : constant Name_Id := N + 571;\n+   Name_Is                             : constant Name_Id := N + 572;\n+   Name_Limited                        : constant Name_Id := N + 573;\n+   Name_Loop                           : constant Name_Id := N + 574;\n+   Name_New                            : constant Name_Id := N + 575;\n+   Name_Not                            : constant Name_Id := N + 576;\n+   Name_Null                           : constant Name_Id := N + 577;\n+   Name_Of                             : constant Name_Id := N + 578;\n+   Name_Or                             : constant Name_Id := N + 579;\n+   Name_Others                         : constant Name_Id := N + 580;\n+   Name_Out                            : constant Name_Id := N + 581;\n+   Name_Package                        : constant Name_Id := N + 582;\n+   Name_Pragma                         : constant Name_Id := N + 583;\n+   Name_Private                        : constant Name_Id := N + 584;\n+   Name_Procedure                      : constant Name_Id := N + 585;\n+   Name_Raise                          : constant Name_Id := N + 586;\n+   Name_Record                         : constant Name_Id := N + 587;\n+   Name_Rem                            : constant Name_Id := N + 588;\n+   Name_Renames                        : constant Name_Id := N + 589;\n+   Name_Return                         : constant Name_Id := N + 590;\n+   Name_Reverse                        : constant Name_Id := N + 591;\n+   Name_Select                         : constant Name_Id := N + 592;\n+   Name_Separate                       : constant Name_Id := N + 593;\n+   Name_Subtype                        : constant Name_Id := N + 594;\n+   Name_Task                           : constant Name_Id := N + 595;\n+   Name_Terminate                      : constant Name_Id := N + 596;\n+   Name_Then                           : constant Name_Id := N + 597;\n+   Name_Type                           : constant Name_Id := N + 598;\n+   Name_Use                            : constant Name_Id := N + 599;\n+   Name_When                           : constant Name_Id := N + 600;\n+   Name_While                          : constant Name_Id := N + 601;\n+   Name_With                           : constant Name_Id := N + 602;\n+   Name_Xor                            : constant Name_Id := N + 603;\n \n    --  Names of intrinsic subprograms\n \n    --  Note: Asm is missing from this list, since Asm is a legitimate\n    --  convention name. So is To_Address, which is a GNAT attribute.\n \n-   First_Intrinsic_Name                 : constant Name_Id := N + 605;\n-   Name_Divide                          : constant Name_Id := N + 605;\n-   Name_Enclosing_Entity                : constant Name_Id := N + 606;\n-   Name_Exception_Information           : constant Name_Id := N + 607;\n-   Name_Exception_Message               : constant Name_Id := N + 608;\n-   Name_Exception_Name                  : constant Name_Id := N + 609;\n-   Name_File                            : constant Name_Id := N + 610;\n-   Name_Generic_Dispatching_Constructor : constant Name_Id := N + 611;\n-   Name_Import_Address                  : constant Name_Id := N + 612;\n-   Name_Import_Largest_Value            : constant Name_Id := N + 613;\n-   Name_Import_Value                    : constant Name_Id := N + 614;\n-   Name_Is_Negative                     : constant Name_Id := N + 615;\n-   Name_Line                            : constant Name_Id := N + 616;\n-   Name_Rotate_Left                     : constant Name_Id := N + 617;\n-   Name_Rotate_Right                    : constant Name_Id := N + 618;\n-   Name_Shift_Left                      : constant Name_Id := N + 619;\n-   Name_Shift_Right                     : constant Name_Id := N + 620;\n-   Name_Shift_Right_Arithmetic          : constant Name_Id := N + 621;\n-   Name_Source_Location                 : constant Name_Id := N + 622;\n-   Name_Unchecked_Conversion            : constant Name_Id := N + 623;\n-   Name_Unchecked_Deallocation          : constant Name_Id := N + 624;\n-   Name_To_Pointer                      : constant Name_Id := N + 625;\n-   Last_Intrinsic_Name                  : constant Name_Id := N + 625;\n+   First_Intrinsic_Name                 : constant Name_Id := N + 604;\n+   Name_Divide                          : constant Name_Id := N + 604;\n+   Name_Enclosing_Entity                : constant Name_Id := N + 605;\n+   Name_Exception_Information           : constant Name_Id := N + 606;\n+   Name_Exception_Message               : constant Name_Id := N + 607;\n+   Name_Exception_Name                  : constant Name_Id := N + 608;\n+   Name_File                            : constant Name_Id := N + 609;\n+   Name_Generic_Dispatching_Constructor : constant Name_Id := N + 610;\n+   Name_Import_Address                  : constant Name_Id := N + 611;\n+   Name_Import_Largest_Value            : constant Name_Id := N + 612;\n+   Name_Import_Value                    : constant Name_Id := N + 613;\n+   Name_Is_Negative                     : constant Name_Id := N + 614;\n+   Name_Line                            : constant Name_Id := N + 615;\n+   Name_Rotate_Left                     : constant Name_Id := N + 616;\n+   Name_Rotate_Right                    : constant Name_Id := N + 617;\n+   Name_Shift_Left                      : constant Name_Id := N + 618;\n+   Name_Shift_Right                     : constant Name_Id := N + 619;\n+   Name_Shift_Right_Arithmetic          : constant Name_Id := N + 620;\n+   Name_Source_Location                 : constant Name_Id := N + 621;\n+   Name_Unchecked_Conversion            : constant Name_Id := N + 622;\n+   Name_Unchecked_Deallocation          : constant Name_Id := N + 623;\n+   Name_To_Pointer                      : constant Name_Id := N + 624;\n+   Last_Intrinsic_Name                  : constant Name_Id := N + 624;\n \n    --  Names used in processing intrinsic calls\n \n-   Name_Free                           : constant Name_Id := N + 626;\n+   Name_Free                           : constant Name_Id := N + 625;\n \n    --  Reserved words used only in Ada 95\n \n-   First_95_Reserved_Word              : constant Name_Id := N + 627;\n-   Name_Abstract                       : constant Name_Id := N + 627;\n-   Name_Aliased                        : constant Name_Id := N + 628;\n-   Name_Protected                      : constant Name_Id := N + 629;\n-   Name_Until                          : constant Name_Id := N + 630;\n-   Name_Requeue                        : constant Name_Id := N + 631;\n-   Name_Tagged                         : constant Name_Id := N + 632;\n-   Last_95_Reserved_Word               : constant Name_Id := N + 632;\n+   First_95_Reserved_Word              : constant Name_Id := N + 626;\n+   Name_Abstract                       : constant Name_Id := N + 626;\n+   Name_Aliased                        : constant Name_Id := N + 627;\n+   Name_Protected                      : constant Name_Id := N + 628;\n+   Name_Until                          : constant Name_Id := N + 629;\n+   Name_Requeue                        : constant Name_Id := N + 630;\n+   Name_Tagged                         : constant Name_Id := N + 631;\n+   Last_95_Reserved_Word               : constant Name_Id := N + 631;\n \n    subtype Ada_95_Reserved_Words is\n      Name_Id range First_95_Reserved_Word .. Last_95_Reserved_Word;\n \n    --  Miscellaneous names used in semantic checking\n \n-   Name_Raise_Exception                : constant Name_Id := N + 633;\n+   Name_Raise_Exception                : constant Name_Id := N + 632;\n \n    --  Additional reserved words and identifiers used in GNAT Project Files\n    --  Note that Name_External is already previously declared\n \n-   Name_Ada_Roots                      : constant Name_Id := N + 634;\n-   Name_Aggregate                      : constant Name_Id := N + 635;\n-   Name_Archive_Builder                : constant Name_Id := N + 636;\n-   Name_Archive_Builder_Append_Option  : constant Name_Id := N + 637;\n-   Name_Archive_Indexer                : constant Name_Id := N + 638;\n-   Name_Archive_Suffix                 : constant Name_Id := N + 639;\n-   Name_Binder                         : constant Name_Id := N + 640;\n-   Name_Binder_Prefix                  : constant Name_Id := N + 641;\n-   Name_Body_Suffix                    : constant Name_Id := N + 642;\n-   Name_Builder                        : constant Name_Id := N + 643;\n-   Name_Builder_Switches               : constant Name_Id := N + 644;\n-   Name_Compiler                       : constant Name_Id := N + 645;\n-   Name_Compiler_Kind                  : constant Name_Id := N + 646;\n-   Name_Config_Body_File_Name          : constant Name_Id := N + 647;\n-   Name_Config_Body_File_Name_Pattern  : constant Name_Id := N + 648;\n-   Name_Config_File_Switches           : constant Name_Id := N + 649;\n-   Name_Config_File_Unique             : constant Name_Id := N + 650;\n-   Name_Config_Spec_File_Name          : constant Name_Id := N + 651;\n-   Name_Config_Spec_File_Name_Pattern  : constant Name_Id := N + 652;\n-   Name_Configuration                  : constant Name_Id := N + 653;\n-   Name_Cross_Reference                : constant Name_Id := N + 654;\n-   Name_Default_Language               : constant Name_Id := N + 655;\n-   Name_Default_Switches               : constant Name_Id := N + 656;\n-   Name_Dependency_Driver              : constant Name_Id := N + 657;\n-   Name_Dependency_File_Kind           : constant Name_Id := N + 658;\n-   Name_Dependency_Switches            : constant Name_Id := N + 659;\n-   Name_Driver                         : constant Name_Id := N + 660;\n-   Name_Excluded_Source_Dirs           : constant Name_Id := N + 661;\n-   Name_Excluded_Source_Files          : constant Name_Id := N + 662;\n-   Name_Excluded_Source_List_File      : constant Name_Id := N + 663;\n-   Name_Exec_Dir                       : constant Name_Id := N + 664;\n-   Name_Executable                     : constant Name_Id := N + 665;\n-   Name_Executable_Suffix              : constant Name_Id := N + 666;\n-   Name_Extends                        : constant Name_Id := N + 667;\n-   Name_Externally_Built               : constant Name_Id := N + 668;\n-   Name_Finder                         : constant Name_Id := N + 669;\n-   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 670;\n-   Name_Global_Config_File             : constant Name_Id := N + 671;\n-   Name_Gnatls                         : constant Name_Id := N + 672;\n-   Name_Gnatstub                       : constant Name_Id := N + 673;\n-   Name_Implementation                 : constant Name_Id := N + 674;\n-   Name_Implementation_Exceptions      : constant Name_Id := N + 675;\n-   Name_Implementation_Suffix          : constant Name_Id := N + 676;\n-   Name_Include_Switches               : constant Name_Id := N + 677;\n-   Name_Include_Path                   : constant Name_Id := N + 678;\n-   Name_Include_Path_File              : constant Name_Id := N + 679;\n-   Name_Inherit_Source_Path            : constant Name_Id := N + 680;\n-   Name_Language_Kind                  : constant Name_Id := N + 681;\n-   Name_Language_Processing            : constant Name_Id := N + 682;\n-   Name_Languages                      : constant Name_Id := N + 683;\n-   Name_Library                        : constant Name_Id := N + 684;\n-   Name_Library_Ali_Dir                : constant Name_Id := N + 685;\n-   Name_Library_Auto_Init              : constant Name_Id := N + 686;\n-   Name_Library_Auto_Init_Supported    : constant Name_Id := N + 687;\n-   Name_Library_Builder                : constant Name_Id := N + 688;\n-   Name_Library_Dir                    : constant Name_Id := N + 689;\n-   Name_Library_GCC                    : constant Name_Id := N + 690;\n-   Name_Library_Interface              : constant Name_Id := N + 691;\n-   Name_Library_Kind                   : constant Name_Id := N + 692;\n-   Name_Library_Name                   : constant Name_Id := N + 693;\n-   Name_Library_Major_Minor_Id_Supported : constant Name_Id := N + 694;\n-   Name_Library_Options                : constant Name_Id := N + 695;\n-   Name_Library_Partial_Linker         : constant Name_Id := N + 696;\n-   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 697;\n-   Name_Library_Src_Dir                : constant Name_Id := N + 698;\n-   Name_Library_Support                : constant Name_Id := N + 699;\n-   Name_Library_Symbol_File            : constant Name_Id := N + 700;\n-   Name_Library_Symbol_Policy          : constant Name_Id := N + 701;\n-   Name_Library_Version                : constant Name_Id := N + 702;\n-   Name_Library_Version_Switches       : constant Name_Id := N + 703;\n-   Name_Linker                         : constant Name_Id := N + 704;\n-   Name_Linker_Executable_Option       : constant Name_Id := N + 705;\n-   Name_Linker_Lib_Dir_Option          : constant Name_Id := N + 706;\n-   Name_Linker_Lib_Name_Option         : constant Name_Id := N + 707;\n-   Name_Local_Config_File              : constant Name_Id := N + 708;\n-   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 709;\n-   Name_Locally_Removed_Files          : constant Name_Id := N + 710;\n-   Name_Map_File_Option                : constant Name_Id := N + 711;\n-   Name_Mapping_File_Switches          : constant Name_Id := N + 712;\n-   Name_Mapping_Spec_Suffix            : constant Name_Id := N + 713;\n-   Name_Mapping_Body_Suffix            : constant Name_Id := N + 714;\n-   Name_Metrics                        : constant Name_Id := N + 715;\n-   Name_Naming                         : constant Name_Id := N + 716;\n-   Name_Object_Generated               : constant Name_Id := N + 717;\n-   Name_Objects_Linked                 : constant Name_Id := N + 718;\n-   Name_Objects_Path                   : constant Name_Id := N + 719;\n-   Name_Objects_Path_File              : constant Name_Id := N + 720;\n-   Name_Object_Dir                     : constant Name_Id := N + 721;\n-   Name_Path_Syntax                    : constant Name_Id := N + 722;\n-   Name_Pic_Option                     : constant Name_Id := N + 723;\n-   Name_Pretty_Printer                 : constant Name_Id := N + 724;\n-   Name_Prefix                         : constant Name_Id := N + 725;\n-   Name_Project                        : constant Name_Id := N + 726;\n-   Name_Roots                          : constant Name_Id := N + 727;\n-   Name_Required_Switches              : constant Name_Id := N + 728;\n-   Name_Run_Path_Option                : constant Name_Id := N + 729;\n-   Name_Runtime_Project                : constant Name_Id := N + 730;\n-   Name_Shared_Library_Minimum_Switches : constant Name_Id := N + 731;\n-   Name_Shared_Library_Prefix          : constant Name_Id := N + 732;\n-   Name_Shared_Library_Suffix          : constant Name_Id := N + 733;\n-   Name_Separate_Suffix                : constant Name_Id := N + 734;\n-   Name_Source_Dirs                    : constant Name_Id := N + 735;\n-   Name_Source_Files                   : constant Name_Id := N + 736;\n-   Name_Source_List_File               : constant Name_Id := N + 737;\n-   Name_Spec                           : constant Name_Id := N + 738;\n-   Name_Spec_Suffix                    : constant Name_Id := N + 739;\n-   Name_Specification                  : constant Name_Id := N + 740;\n-   Name_Specification_Exceptions       : constant Name_Id := N + 741;\n-   Name_Specification_Suffix           : constant Name_Id := N + 742;\n-   Name_Stack                          : constant Name_Id := N + 743;\n-   Name_Switches                       : constant Name_Id := N + 744;\n-   Name_Symbolic_Link_Supported        : constant Name_Id := N + 745;\n-   Name_Sync                           : constant Name_Id := N + 746;\n-   Name_Synchronize                    : constant Name_Id := N + 747;\n-   Name_Toolchain_Description          : constant Name_Id := N + 748;\n-   Name_Toolchain_Version              : constant Name_Id := N + 749;\n-   Name_Runtime_Library_Dir            : constant Name_Id := N + 750;\n+   Name_Ada_Roots                      : constant Name_Id := N + 633;\n+   Name_Aggregate                      : constant Name_Id := N + 634;\n+   Name_Archive_Builder                : constant Name_Id := N + 635;\n+   Name_Archive_Builder_Append_Option  : constant Name_Id := N + 636;\n+   Name_Archive_Indexer                : constant Name_Id := N + 637;\n+   Name_Archive_Suffix                 : constant Name_Id := N + 638;\n+   Name_Binder                         : constant Name_Id := N + 639;\n+   Name_Binder_Prefix                  : constant Name_Id := N + 640;\n+   Name_Body_Suffix                    : constant Name_Id := N + 641;\n+   Name_Builder                        : constant Name_Id := N + 642;\n+   Name_Builder_Switches               : constant Name_Id := N + 643;\n+   Name_Compiler                       : constant Name_Id := N + 644;\n+   Name_Compiler_Kind                  : constant Name_Id := N + 645;\n+   Name_Config_Body_File_Name          : constant Name_Id := N + 646;\n+   Name_Config_Body_File_Name_Pattern  : constant Name_Id := N + 647;\n+   Name_Config_File_Switches           : constant Name_Id := N + 648;\n+   Name_Config_File_Unique             : constant Name_Id := N + 649;\n+   Name_Config_Spec_File_Name          : constant Name_Id := N + 650;\n+   Name_Config_Spec_File_Name_Pattern  : constant Name_Id := N + 651;\n+   Name_Configuration                  : constant Name_Id := N + 652;\n+   Name_Cross_Reference                : constant Name_Id := N + 653;\n+   Name_Default_Language               : constant Name_Id := N + 654;\n+   Name_Default_Switches               : constant Name_Id := N + 655;\n+   Name_Dependency_Driver              : constant Name_Id := N + 656;\n+   Name_Dependency_File_Kind           : constant Name_Id := N + 657;\n+   Name_Dependency_Switches            : constant Name_Id := N + 658;\n+   Name_Driver                         : constant Name_Id := N + 659;\n+   Name_Excluded_Source_Dirs           : constant Name_Id := N + 660;\n+   Name_Excluded_Source_Files          : constant Name_Id := N + 661;\n+   Name_Excluded_Source_List_File      : constant Name_Id := N + 662;\n+   Name_Exec_Dir                       : constant Name_Id := N + 663;\n+   Name_Executable                     : constant Name_Id := N + 664;\n+   Name_Executable_Suffix              : constant Name_Id := N + 665;\n+   Name_Extends                        : constant Name_Id := N + 666;\n+   Name_Externally_Built               : constant Name_Id := N + 667;\n+   Name_Finder                         : constant Name_Id := N + 668;\n+   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 669;\n+   Name_Global_Config_File             : constant Name_Id := N + 670;\n+   Name_Gnatls                         : constant Name_Id := N + 671;\n+   Name_Gnatstub                       : constant Name_Id := N + 672;\n+   Name_Implementation                 : constant Name_Id := N + 673;\n+   Name_Implementation_Exceptions      : constant Name_Id := N + 674;\n+   Name_Implementation_Suffix          : constant Name_Id := N + 675;\n+   Name_Include_Switches               : constant Name_Id := N + 676;\n+   Name_Include_Path                   : constant Name_Id := N + 677;\n+   Name_Include_Path_File              : constant Name_Id := N + 678;\n+   Name_Inherit_Source_Path            : constant Name_Id := N + 679;\n+   Name_Language_Kind                  : constant Name_Id := N + 680;\n+   Name_Language_Processing            : constant Name_Id := N + 681;\n+   Name_Languages                      : constant Name_Id := N + 682;\n+   Name_Library                        : constant Name_Id := N + 683;\n+   Name_Library_Ali_Dir                : constant Name_Id := N + 684;\n+   Name_Library_Auto_Init              : constant Name_Id := N + 685;\n+   Name_Library_Auto_Init_Supported    : constant Name_Id := N + 686;\n+   Name_Library_Builder                : constant Name_Id := N + 687;\n+   Name_Library_Dir                    : constant Name_Id := N + 688;\n+   Name_Library_GCC                    : constant Name_Id := N + 689;\n+   Name_Library_Interface              : constant Name_Id := N + 690;\n+   Name_Library_Kind                   : constant Name_Id := N + 691;\n+   Name_Library_Name                   : constant Name_Id := N + 692;\n+   Name_Library_Major_Minor_Id_Supported : constant Name_Id := N + 693;\n+   Name_Library_Options                : constant Name_Id := N + 694;\n+   Name_Library_Partial_Linker         : constant Name_Id := N + 695;\n+   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 696;\n+   Name_Library_Src_Dir                : constant Name_Id := N + 697;\n+   Name_Library_Support                : constant Name_Id := N + 698;\n+   Name_Library_Symbol_File            : constant Name_Id := N + 699;\n+   Name_Library_Symbol_Policy          : constant Name_Id := N + 700;\n+   Name_Library_Version                : constant Name_Id := N + 701;\n+   Name_Library_Version_Switches       : constant Name_Id := N + 702;\n+   Name_Linker                         : constant Name_Id := N + 703;\n+   Name_Linker_Executable_Option       : constant Name_Id := N + 704;\n+   Name_Linker_Lib_Dir_Option          : constant Name_Id := N + 705;\n+   Name_Linker_Lib_Name_Option         : constant Name_Id := N + 706;\n+   Name_Local_Config_File              : constant Name_Id := N + 707;\n+   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 708;\n+   Name_Locally_Removed_Files          : constant Name_Id := N + 709;\n+   Name_Map_File_Option                : constant Name_Id := N + 710;\n+   Name_Mapping_File_Switches          : constant Name_Id := N + 711;\n+   Name_Mapping_Spec_Suffix            : constant Name_Id := N + 712;\n+   Name_Mapping_Body_Suffix            : constant Name_Id := N + 713;\n+   Name_Metrics                        : constant Name_Id := N + 714;\n+   Name_Naming                         : constant Name_Id := N + 715;\n+   Name_Object_Generated               : constant Name_Id := N + 716;\n+   Name_Objects_Linked                 : constant Name_Id := N + 717;\n+   Name_Objects_Path                   : constant Name_Id := N + 718;\n+   Name_Objects_Path_File              : constant Name_Id := N + 719;\n+   Name_Object_Dir                     : constant Name_Id := N + 720;\n+   Name_Path_Syntax                    : constant Name_Id := N + 721;\n+   Name_Pic_Option                     : constant Name_Id := N + 722;\n+   Name_Pretty_Printer                 : constant Name_Id := N + 723;\n+   Name_Prefix                         : constant Name_Id := N + 724;\n+   Name_Project                        : constant Name_Id := N + 725;\n+   Name_Roots                          : constant Name_Id := N + 726;\n+   Name_Required_Switches              : constant Name_Id := N + 727;\n+   Name_Run_Path_Option                : constant Name_Id := N + 728;\n+   Name_Runtime_Project                : constant Name_Id := N + 729;\n+   Name_Shared_Library_Minimum_Switches : constant Name_Id := N + 730;\n+   Name_Shared_Library_Prefix          : constant Name_Id := N + 731;\n+   Name_Shared_Library_Suffix          : constant Name_Id := N + 732;\n+   Name_Separate_Suffix                : constant Name_Id := N + 733;\n+   Name_Source_Dirs                    : constant Name_Id := N + 734;\n+   Name_Source_Files                   : constant Name_Id := N + 735;\n+   Name_Source_List_File               : constant Name_Id := N + 736;\n+   Name_Spec                           : constant Name_Id := N + 737;\n+   Name_Spec_Suffix                    : constant Name_Id := N + 738;\n+   Name_Specification                  : constant Name_Id := N + 739;\n+   Name_Specification_Exceptions       : constant Name_Id := N + 740;\n+   Name_Specification_Suffix           : constant Name_Id := N + 741;\n+   Name_Stack                          : constant Name_Id := N + 742;\n+   Name_Switches                       : constant Name_Id := N + 743;\n+   Name_Symbolic_Link_Supported        : constant Name_Id := N + 744;\n+   Name_Sync                           : constant Name_Id := N + 745;\n+   Name_Synchronize                    : constant Name_Id := N + 746;\n+   Name_Toolchain_Description          : constant Name_Id := N + 747;\n+   Name_Toolchain_Version              : constant Name_Id := N + 748;\n+   Name_Runtime_Library_Dir            : constant Name_Id := N + 749;\n \n    --  Other miscellaneous names used in front end\n \n-   Name_Unaligned_Valid                : constant Name_Id := N + 751;\n+   Name_Unaligned_Valid                : constant Name_Id := N + 750;\n \n    --  Ada 2005 reserved words\n \n-   First_2005_Reserved_Word            : constant Name_Id := N + 752;\n-   Name_Interface                      : constant Name_Id := N + 752;\n-   Name_Overriding                     : constant Name_Id := N + 753;\n-   Name_Synchronized                   : constant Name_Id := N + 754;\n-   Last_2005_Reserved_Word             : constant Name_Id := N + 754;\n+   First_2005_Reserved_Word            : constant Name_Id := N + 751;\n+   Name_Interface                      : constant Name_Id := N + 751;\n+   Name_Overriding                     : constant Name_Id := N + 752;\n+   Name_Synchronized                   : constant Name_Id := N + 753;\n+   Last_2005_Reserved_Word             : constant Name_Id := N + 753;\n \n    subtype Ada_2005_Reserved_Words is\n      Name_Id range First_2005_Reserved_Word .. Last_2005_Reserved_Word;\n \n    --  Mark last defined name for consistency check in Snames body\n \n-   Last_Predefined_Name                : constant Name_Id := N + 754;\n+   Last_Predefined_Name                : constant Name_Id := N + 753;\n \n    ---------------------------------------\n    -- Subtypes Defining Name Categories --\n@@ -1395,7 +1394,6 @@ package Snames is\n       Pragma_Ada_2005,\n       Pragma_Assertion_Policy,\n       Pragma_C_Pass_By_Copy,\n-      Pragma_Canonical_Streams,\n       Pragma_Check_Name,\n       Pragma_Check_Policy,\n       Pragma_Compile_Time_Error,"}, {"sha": "5724e17fc342f8df3a98356b1d56bf40ab52c362", "filename": "gcc/ada/snames.h", "status": "modified", "additions": 164, "deletions": 165, "changes": 329, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fsnames.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/585df50b0c63b895742726b556732faac623fa35/gcc%2Fada%2Fsnames.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.h?ref=585df50b0c63b895742726b556732faac623fa35", "patch": "@@ -227,170 +227,169 @@ extern unsigned char Get_Pragma_Id (int);\n #define  Pragma_Ada_2005                      3\n #define  Pragma_Assertion_Policy              4\n #define  Pragma_C_Pass_By_Copy                5\n-#define  Pragma_Canonical_Streams             6\n-#define  Pragma_Check_Name                    7\n-#define  Pragma_Check_Policy                  8\n-#define  Pragma_Compile_Time_Error            9\n-#define  Pragma_Compile_Time_Warning          10\n-#define  Pragma_Compiler_Unit                 11\n-#define  Pragma_Component_Alignment           12\n-#define  Pragma_Convention_Identifier         13\n-#define  Pragma_Debug_Policy                  14\n-#define  Pragma_Detect_Blocking               15\n-#define  Pragma_Discard_Names                 16\n-#define  Pragma_Elaboration_Checks            17\n-#define  Pragma_Eliminate                     18\n-#define  Pragma_Extend_System                 19\n-#define  Pragma_Extensions_Allowed            20\n-#define  Pragma_External_Name_Casing          21\n-#define  Pragma_Favor_Top_Level               22\n-#define  Pragma_Float_Representation          23\n-#define  Pragma_Implicit_Packing              24\n-#define  Pragma_Initialize_Scalars            25\n-#define  Pragma_Interrupt_State               26\n-#define  Pragma_License                       27\n-#define  Pragma_Locking_Policy                28\n-#define  Pragma_Long_Float                    29\n-#define  Pragma_No_Run_Time                   30\n-#define  Pragma_No_Strict_Aliasing            31\n-#define  Pragma_Normalize_Scalars             32\n-#define  Pragma_Optimize_Alignment            33\n-#define  Pragma_Persistent_BSS                34\n-#define  Pragma_Polling                       35\n-#define  Pragma_Priority_Specific_Dispatching 36\n-#define  Pragma_Profile                       37\n-#define  Pragma_Profile_Warnings              38\n-#define  Pragma_Propagate_Exceptions          39\n-#define  Pragma_Queuing_Policy                40\n-#define  Pragma_Ravenscar                     41\n-#define  Pragma_Restricted_Run_Time           42\n-#define  Pragma_Restrictions                  43\n-#define  Pragma_Restriction_Warnings          44\n-#define  Pragma_Reviewable                    45\n-#define  Pragma_Source_File_Name              46\n-#define  Pragma_Source_File_Name_Project      47\n-#define  Pragma_Style_Checks                  48\n-#define  Pragma_Suppress                      49\n-#define  Pragma_Suppress_Exception_Locations  50\n-#define  Pragma_Task_Dispatching_Policy       51\n-#define  Pragma_Universal_Data                52\n-#define  Pragma_Unsuppress                    53\n-#define  Pragma_Use_VADS_Size                 54\n-#define  Pragma_Validity_Checks               55\n-#define  Pragma_Warnings                      56\n-#define  Pragma_Wide_Character_Encoding       57\n-#define  Pragma_Abort_Defer                   58\n-#define  Pragma_All_Calls_Remote              59\n-#define  Pragma_Annotate                      60\n-#define  Pragma_Assert                        61\n-#define  Pragma_Asynchronous                  62\n-#define  Pragma_Atomic                        63\n-#define  Pragma_Atomic_Components             64\n-#define  Pragma_Attach_Handler                65\n-#define  Pragma_Check                         66\n-#define  Pragma_CIL_Constructor               67\n-#define  Pragma_Comment                       68\n-#define  Pragma_Common_Object                 69\n-#define  Pragma_Complete_Representation       70\n-#define  Pragma_Complex_Representation        71\n-#define  Pragma_Controlled                    72\n-#define  Pragma_Convention                    73\n-#define  Pragma_CPP_Class                     74\n-#define  Pragma_CPP_Constructor               75\n-#define  Pragma_CPP_Virtual                   76\n-#define  Pragma_CPP_Vtable                    77\n-#define  Pragma_Debug                         78\n-#define  Pragma_Elaborate                     79\n-#define  Pragma_Elaborate_All                 80\n-#define  Pragma_Elaborate_Body                81\n-#define  Pragma_Export                        82\n-#define  Pragma_Export_Exception              83\n-#define  Pragma_Export_Function               84\n-#define  Pragma_Export_Object                 85\n-#define  Pragma_Export_Procedure              86\n-#define  Pragma_Export_Value                  87\n-#define  Pragma_Export_Valued_Procedure       88\n-#define  Pragma_External                      89\n-#define  Pragma_Finalize_Storage_Only         90\n-#define  Pragma_Ident                         91\n-#define  Pragma_Implemented_By_Entry          92\n-#define  Pragma_Import                        93\n-#define  Pragma_Import_Exception              94\n-#define  Pragma_Import_Function               95\n-#define  Pragma_Import_Object                 96\n-#define  Pragma_Import_Procedure              97\n-#define  Pragma_Import_Valued_Procedure       98\n-#define  Pragma_Inline                        99\n-#define  Pragma_Inline_Always                 100\n-#define  Pragma_Inline_Generic                101\n-#define  Pragma_Inspection_Point              102\n-#define  Pragma_Interface_Name                103\n-#define  Pragma_Interrupt_Handler             104\n-#define  Pragma_Interrupt_Priority            105\n-#define  Pragma_Java_Constructor              106\n-#define  Pragma_Java_Interface                107\n-#define  Pragma_Keep_Names                    108\n-#define  Pragma_Link_With                     109\n-#define  Pragma_Linker_Alias                  110\n-#define  Pragma_Linker_Constructor            111\n-#define  Pragma_Linker_Destructor             112\n-#define  Pragma_Linker_Options                113\n-#define  Pragma_Linker_Section                114\n-#define  Pragma_List                          115\n-#define  Pragma_Machine_Attribute             116\n-#define  Pragma_Main                          117\n-#define  Pragma_Main_Storage                  118\n-#define  Pragma_Memory_Size                   119\n-#define  Pragma_No_Body                       120\n-#define  Pragma_No_Return                     121\n-#define  Pragma_Obsolescent                   122\n-#define  Pragma_Optimize                      123\n-#define  Pragma_Pack                          124\n-#define  Pragma_Page                          125\n-#define  Pragma_Passive                       126\n-#define  Pragma_Postcondition                 127\n-#define  Pragma_Precondition                  128\n-#define  Pragma_Preelaborable_Initialization  129\n-#define  Pragma_Preelaborate                  130\n-#define  Pragma_Preelaborate_05               131\n-#define  Pragma_Psect_Object                  132\n-#define  Pragma_Pure                          133\n-#define  Pragma_Pure_05                       134\n-#define  Pragma_Pure_Function                 135\n-#define  Pragma_Relative_Deadline             136\n-#define  Pragma_Remote_Call_Interface         137\n-#define  Pragma_Remote_Types                  138\n-#define  Pragma_Share_Generic                 139\n-#define  Pragma_Shared                        140\n-#define  Pragma_Shared_Passive                141\n-#define  Pragma_Source_Reference              142\n-#define  Pragma_Static_Elaboration_Desired    143\n-#define  Pragma_Stream_Convert                144\n-#define  Pragma_Subtitle                      145\n-#define  Pragma_Suppress_All                  146\n-#define  Pragma_Suppress_Debug_Info           147\n-#define  Pragma_Suppress_Initialization       148\n-#define  Pragma_System_Name                   149\n-#define  Pragma_Task_Info                     150\n-#define  Pragma_Task_Name                     151\n-#define  Pragma_Task_Storage                  152\n-#define  Pragma_Time_Slice                    153\n-#define  Pragma_Title                         154\n-#define  Pragma_Unchecked_Union               155\n-#define  Pragma_Unimplemented_Unit            156\n-#define  Pragma_Universal_Aliasing            157\n-#define  Pragma_Unmodified                    158\n-#define  Pragma_Unreferenced                  159\n-#define  Pragma_Unreferenced_Objects          160\n-#define  Pragma_Unreserve_All_Interrupts      161\n-#define  Pragma_Volatile                      162\n-#define  Pragma_Volatile_Components           163\n-#define  Pragma_Weak_External                 164\n-#define  Pragma_AST_Entry                     165\n-#define  Pragma_Fast_Math                     166\n-#define  Pragma_Interface                     167\n-#define  Pragma_Priority                      168\n-#define  Pragma_Storage_Size                  169\n-#define  Pragma_Storage_Unit                  170\n+#define  Pragma_Check_Name                    6\n+#define  Pragma_Check_Policy                  7\n+#define  Pragma_Compile_Time_Error            8\n+#define  Pragma_Compile_Time_Warning          9\n+#define  Pragma_Compiler_Unit                 10\n+#define  Pragma_Component_Alignment           11\n+#define  Pragma_Convention_Identifier         12\n+#define  Pragma_Debug_Policy                  13\n+#define  Pragma_Detect_Blocking               14\n+#define  Pragma_Discard_Names                 15\n+#define  Pragma_Elaboration_Checks            16\n+#define  Pragma_Eliminate                     17\n+#define  Pragma_Extend_System                 18\n+#define  Pragma_Extensions_Allowed            19\n+#define  Pragma_External_Name_Casing          20\n+#define  Pragma_Favor_Top_Level               21\n+#define  Pragma_Float_Representation          22\n+#define  Pragma_Implicit_Packing              23\n+#define  Pragma_Initialize_Scalars            24\n+#define  Pragma_Interrupt_State               25\n+#define  Pragma_License                       26\n+#define  Pragma_Locking_Policy                27\n+#define  Pragma_Long_Float                    28\n+#define  Pragma_No_Run_Time                   29\n+#define  Pragma_No_Strict_Aliasing            30\n+#define  Pragma_Normalize_Scalars             31\n+#define  Pragma_Optimize_Alignment            32\n+#define  Pragma_Persistent_BSS                33\n+#define  Pragma_Polling                       34\n+#define  Pragma_Priority_Specific_Dispatching 35\n+#define  Pragma_Profile                       36\n+#define  Pragma_Profile_Warnings              37\n+#define  Pragma_Propagate_Exceptions          38\n+#define  Pragma_Queuing_Policy                39\n+#define  Pragma_Ravenscar                     40\n+#define  Pragma_Restricted_Run_Time           41\n+#define  Pragma_Restrictions                  42\n+#define  Pragma_Restriction_Warnings          43\n+#define  Pragma_Reviewable                    44\n+#define  Pragma_Source_File_Name              45\n+#define  Pragma_Source_File_Name_Project      46\n+#define  Pragma_Style_Checks                  47\n+#define  Pragma_Suppress                      48\n+#define  Pragma_Suppress_Exception_Locations  49\n+#define  Pragma_Task_Dispatching_Policy       50\n+#define  Pragma_Universal_Data                51\n+#define  Pragma_Unsuppress                    52\n+#define  Pragma_Use_VADS_Size                 53\n+#define  Pragma_Validity_Checks               54\n+#define  Pragma_Warnings                      55\n+#define  Pragma_Wide_Character_Encoding       56\n+#define  Pragma_Abort_Defer                   57\n+#define  Pragma_All_Calls_Remote              58\n+#define  Pragma_Annotate                      59\n+#define  Pragma_Assert                        60\n+#define  Pragma_Asynchronous                  61\n+#define  Pragma_Atomic                        62\n+#define  Pragma_Atomic_Components             63\n+#define  Pragma_Attach_Handler                64\n+#define  Pragma_Check                         65\n+#define  Pragma_CIL_Constructor               66\n+#define  Pragma_Comment                       67\n+#define  Pragma_Common_Object                 68\n+#define  Pragma_Complete_Representation       69\n+#define  Pragma_Complex_Representation        70\n+#define  Pragma_Controlled                    71\n+#define  Pragma_Convention                    72\n+#define  Pragma_CPP_Class                     73\n+#define  Pragma_CPP_Constructor               74\n+#define  Pragma_CPP_Virtual                   75\n+#define  Pragma_CPP_Vtable                    76\n+#define  Pragma_Debug                         77\n+#define  Pragma_Elaborate                     78\n+#define  Pragma_Elaborate_All                 79\n+#define  Pragma_Elaborate_Body                80\n+#define  Pragma_Export                        81\n+#define  Pragma_Export_Exception              82\n+#define  Pragma_Export_Function               83\n+#define  Pragma_Export_Object                 84\n+#define  Pragma_Export_Procedure              85\n+#define  Pragma_Export_Value                  86\n+#define  Pragma_Export_Valued_Procedure       87\n+#define  Pragma_External                      88\n+#define  Pragma_Finalize_Storage_Only         89\n+#define  Pragma_Ident                         90\n+#define  Pragma_Implemented_By_Entry          91\n+#define  Pragma_Import                        92\n+#define  Pragma_Import_Exception              93\n+#define  Pragma_Import_Function               94\n+#define  Pragma_Import_Object                 95\n+#define  Pragma_Import_Procedure              96\n+#define  Pragma_Import_Valued_Procedure       97\n+#define  Pragma_Inline                        98\n+#define  Pragma_Inline_Always                 99\n+#define  Pragma_Inline_Generic                100\n+#define  Pragma_Inspection_Point              101\n+#define  Pragma_Interface_Name                102\n+#define  Pragma_Interrupt_Handler             103\n+#define  Pragma_Interrupt_Priority            104\n+#define  Pragma_Java_Constructor              105\n+#define  Pragma_Java_Interface                106\n+#define  Pragma_Keep_Names                    107\n+#define  Pragma_Link_With                     108\n+#define  Pragma_Linker_Alias                  109\n+#define  Pragma_Linker_Constructor            110\n+#define  Pragma_Linker_Destructor             111\n+#define  Pragma_Linker_Options                112\n+#define  Pragma_Linker_Section                113\n+#define  Pragma_List                          114\n+#define  Pragma_Machine_Attribute             115\n+#define  Pragma_Main                          116\n+#define  Pragma_Main_Storage                  117\n+#define  Pragma_Memory_Size                   118\n+#define  Pragma_No_Body                       119\n+#define  Pragma_No_Return                     120\n+#define  Pragma_Obsolescent                   121\n+#define  Pragma_Optimize                      122\n+#define  Pragma_Pack                          123\n+#define  Pragma_Page                          124\n+#define  Pragma_Passive                       125\n+#define  Pragma_Postcondition                 126\n+#define  Pragma_Precondition                  127\n+#define  Pragma_Preelaborable_Initialization  128\n+#define  Pragma_Preelaborate                  129\n+#define  Pragma_Preelaborate_05               130\n+#define  Pragma_Psect_Object                  131\n+#define  Pragma_Pure                          132\n+#define  Pragma_Pure_05                       133\n+#define  Pragma_Pure_Function                 134\n+#define  Pragma_Relative_Deadline             135\n+#define  Pragma_Remote_Call_Interface         136\n+#define  Pragma_Remote_Types                  137\n+#define  Pragma_Share_Generic                 138\n+#define  Pragma_Shared                        139\n+#define  Pragma_Shared_Passive                140\n+#define  Pragma_Source_Reference              141\n+#define  Pragma_Static_Elaboration_Desired    142\n+#define  Pragma_Stream_Convert                143\n+#define  Pragma_Subtitle                      144\n+#define  Pragma_Suppress_All                  145\n+#define  Pragma_Suppress_Debug_Info           146\n+#define  Pragma_Suppress_Initialization       147\n+#define  Pragma_System_Name                   148\n+#define  Pragma_Task_Info                     149\n+#define  Pragma_Task_Name                     150\n+#define  Pragma_Task_Storage                  151\n+#define  Pragma_Time_Slice                    152\n+#define  Pragma_Title                         153\n+#define  Pragma_Unchecked_Union               154\n+#define  Pragma_Unimplemented_Unit            155\n+#define  Pragma_Universal_Aliasing            156\n+#define  Pragma_Unmodified                    157\n+#define  Pragma_Unreferenced                  158\n+#define  Pragma_Unreferenced_Objects          159\n+#define  Pragma_Unreserve_All_Interrupts      160\n+#define  Pragma_Volatile                      161\n+#define  Pragma_Volatile_Components           162\n+#define  Pragma_Weak_External                 163\n+#define  Pragma_AST_Entry                     164\n+#define  Pragma_Fast_Math                     165\n+#define  Pragma_Interface                     166\n+#define  Pragma_Priority                      167\n+#define  Pragma_Storage_Size                  168\n+#define  Pragma_Storage_Unit                  169\n \n /* End of snames.h (C version of Snames package spec) */"}]}