{"sha": "fa8718d79986441d176217e893f759b876a69bce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE4NzE4ZDc5OTg2NDQxZDE3NjIxN2U4OTNmNzU5Yjg3NmE2OWJjZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-03-07T13:47:37Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-03-07T13:47:37Z"}, "message": "flow.c (regs_live_at_setjmp): Make it static.\n\n\t* flow.c (regs_live_at_setjmp): Make it static.\n\t* flow.h: Remove the corresponding prototype.\n\nFrom-SVN: r96013", "tree": {"sha": "d227e0d9d39a19f804fc1ec5cc7e79d62ebf7b00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d227e0d9d39a19f804fc1ec5cc7e79d62ebf7b00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa8718d79986441d176217e893f759b876a69bce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa8718d79986441d176217e893f759b876a69bce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa8718d79986441d176217e893f759b876a69bce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa8718d79986441d176217e893f759b876a69bce/comments", "author": null, "committer": null, "parents": [{"sha": "0405cc0e8d137d6e30eb48cfab5833bafff22393", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0405cc0e8d137d6e30eb48cfab5833bafff22393", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0405cc0e8d137d6e30eb48cfab5833bafff22393"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "7345b4e671ab730587d173fde7b167cfb58b0d64", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa8718d79986441d176217e893f759b876a69bce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa8718d79986441d176217e893f759b876a69bce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa8718d79986441d176217e893f759b876a69bce", "patch": "@@ -5,6 +5,9 @@\n \n \t* calls (stack_arg_under_construction): Make it static.\n \n+\t* flow.c (regs_live_at_setjmp): Make it static.\n+\t* flow.h: Remove the corresponding prototype.\n+\n 2005-03-07  David Billinghurst <David.Billinghurst@riotinto.com>\n \n \t* config/i386/cygwin1.c(mingw_scan): Use xstrdup in calls to putenv."}, {"sha": "fb69f35029768f159ad13b7bbbaa429fe5274dd3", "filename": "gcc/basic-block.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa8718d79986441d176217e893f759b876a69bce/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa8718d79986441d176217e893f759b876a69bce/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=fa8718d79986441d176217e893f759b876a69bce", "patch": "@@ -397,10 +397,6 @@ extern GTY(()) varray_type basic_block_info;\n #define FOR_ALL_BB(BB) \\\n   for (BB = ENTRY_BLOCK_PTR; BB; BB = BB->next_bb)\n \n-/* What registers are live at the setjmp call.  */\n-\n-extern regset regs_live_at_setjmp;\n-\n /* Special labels found during CFG build.  */\n \n extern GTY(()) rtx label_value_list;"}, {"sha": "e60feb83c12e0f49b19f15148685d8f1b744c772", "filename": "gcc/flow.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa8718d79986441d176217e893f759b876a69bce/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa8718d79986441d176217e893f759b876a69bce/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=fa8718d79986441d176217e893f759b876a69bce", "patch": "@@ -184,7 +184,7 @@ varray_type reg_n_info;\n /* Regset of regs live when calls to `setjmp'-like functions happen.  */\n /* ??? Does this exist only for the setjmp-clobbered warning message?  */\n \n-regset regs_live_at_setjmp;\n+static regset regs_live_at_setjmp;\n \n /* List made of EXPR_LIST rtx's which gives pairs of pseudo registers\n    that have to go in the same hard reg."}]}