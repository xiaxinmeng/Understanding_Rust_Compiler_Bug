{"sha": "bf2cf6f3f1851054237ee7df99bdf60bf5a3e3ae", "node_id": "C_kwDOANBUbNoAKGJmMmNmNmYzZjE4NTEwNTQyMzdlZTdkZjk5YmRmNjBiZjVhM2UzYWU", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2023-02-01T13:49:36Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2023-02-01T13:51:00Z"}, "message": "Fortran: Extend align-clause checks of OpenMP's allocate directive\n\ngcc/fortran/ChangeLog:\n\n\t* openmp.cc (resolve_omp_clauses): Check also for\n\tpower of two.\n\nlibgomp/ChangeLog:\n\n\t* testsuite/libgomp.fortran/allocate-3.f90: Fix ALIGN\n\tusage, remove unused -fdump-tree-original.\n\t* testsuite/libgomp.fortran/allocate-4.f90: New.", "tree": {"sha": "9794597af3a0400017e378d2d44de06d2a92d0cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9794597af3a0400017e378d2d44de06d2a92d0cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf2cf6f3f1851054237ee7df99bdf60bf5a3e3ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf2cf6f3f1851054237ee7df99bdf60bf5a3e3ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf2cf6f3f1851054237ee7df99bdf60bf5a3e3ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf2cf6f3f1851054237ee7df99bdf60bf5a3e3ae/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ce8961b46f050a96e8c542b34b1cf024ba95f1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ce8961b46f050a96e8c542b34b1cf024ba95f1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ce8961b46f050a96e8c542b34b1cf024ba95f1b"}], "stats": {"total": 55, "additions": 49, "deletions": 6}, "files": [{"sha": "1897e1dbc717010350ea6974b8590dec0edcf088", "filename": "gcc/fortran/openmp.cc", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2cf6f3f1851054237ee7df99bdf60bf5a3e3ae/gcc%2Ffortran%2Fopenmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2cf6f3f1851054237ee7df99bdf60bf5a3e3ae/gcc%2Ffortran%2Fopenmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.cc?ref=bf2cf6f3f1851054237ee7df99bdf60bf5a3e3ae", "patch": "@@ -7392,11 +7392,12 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \t      || n->u.align->ts.type != BT_INTEGER\n \t      || n->u.align->rank != 0\n \t      || gfc_extract_int (n->u.align, &alignment)\n-\t      || alignment <= 0)\n+\t      || alignment <= 0\n+\t      || !pow2p_hwi (alignment))\n \t    {\n-\t      gfc_error (\"ALIGN modifier requires a scalar positive \"\n-\t\t\t \"constant integer alignment expression at %L\",\n-\t\t\t &n->u.align->where);\n+\t      gfc_error (\"ALIGN modifier requires at %L a scalar positive \"\n+\t\t\t \"constant integer alignment expression that is a \"\n+\t\t\t \"power of two\", &n->u.align->where);\n \t      break;\n \t    }\n \t}"}, {"sha": "1fa0bb932c3eaf9fecb76afeeaa3609b983c1ee5", "filename": "libgomp/testsuite/libgomp.fortran/allocate-3.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2cf6f3f1851054237ee7df99bdf60bf5a3e3ae/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocate-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2cf6f3f1851054237ee7df99bdf60bf5a3e3ae/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocate-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocate-3.f90?ref=bf2cf6f3f1851054237ee7df99bdf60bf5a3e3ae", "patch": "@@ -1,5 +1,4 @@\n ! { dg-do compile }\n-! { dg-additional-options \"-fdump-tree-original\" }\n \n use omp_lib\n implicit none\n@@ -23,6 +22,7 @@\n ! { dg-error \"Object 'omp_high_bw_mem_alloc' is not a variable\" \"\" { target *-*-* } .-1 }\n !$omp end parallel\n \n-!$omp parallel allocate( align(q) : x) firstprivate(x) ! { dg-error \"31:ALIGN modifier requires a scalar positive constant integer alignment expression at\" }\n+!$omp parallel allocate( align(128) : x) firstprivate(x) ! OK\n !$omp end parallel\n+\n end"}, {"sha": "ddb507ba8e40fc278aa5a2ad66e3c688f178b22f", "filename": "libgomp/testsuite/libgomp.fortran/allocate-4.f90", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2cf6f3f1851054237ee7df99bdf60bf5a3e3ae/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocate-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2cf6f3f1851054237ee7df99bdf60bf5a3e3ae/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocate-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocate-4.f90?ref=bf2cf6f3f1851054237ee7df99bdf60bf5a3e3ae", "patch": "@@ -0,0 +1,42 @@\n+! { dg-do compile }\n+\n+\n+subroutine test()\n+use iso_c_binding, only: c_intptr_t\n+implicit none\n+integer, parameter :: omp_allocator_handle_kind = 1 !! <<<\n+integer (kind=omp_allocator_handle_kind), &\n+                 parameter :: omp_high_bw_mem_alloc = 4\n+integer :: q, x,y,z\n+integer, parameter :: cnst(2) = [64, 101]\n+\n+!$omp parallel allocate( omp_high_bw_mem_alloc : x)  firstprivate(x) ! { dg-error \"Expected integer expression of the 'omp_allocator_handle_kind' kind\" }\n+!$omp end parallel\n+\n+!$omp parallel allocate( allocator (omp_high_bw_mem_alloc) : x)  firstprivate(x) ! { dg-error \"Expected integer expression of the 'omp_allocator_handle_kind' kind\" }\n+!$omp end parallel\n+\n+!$omp parallel allocate( align (q) : x)  firstprivate(x) ! { dg-error \"32:ALIGN modifier requires at \\\\(1\\\\) a scalar positive constant integer alignment expression that is a power of two\" }\n+!$omp end parallel\n+\n+!$omp parallel allocate( align (32) : x)  firstprivate(x) ! OK\n+!$omp end parallel\n+\n+!$omp parallel allocate( align(q) : x) firstprivate(x) ! { dg-error \"31:ALIGN modifier requires at \\\\(1\\\\) a scalar positive constant integer alignment expression that is a power of two\" }\n+!$omp end parallel\n+\n+!$omp parallel allocate( align(cnst(1)) : x ) firstprivate(x) ! OK\n+!$omp end parallel\n+\n+!$omp parallel allocate( align(cnst(2)) : x) firstprivate(x)  ! { dg-error \"31:ALIGN modifier requires at \\\\(1\\\\) a scalar positive constant integer alignment expression that is a power of two\" }\n+!$omp end parallel\n+\n+!$omp parallel allocate( align( 31) :x) firstprivate(x)  ! { dg-error \"32:ALIGN modifier requires at \\\\(1\\\\) a scalar positive constant integer alignment expression that is a power of two\" }\n+!$omp end parallel\n+\n+!$omp parallel allocate( align (32.0): x) firstprivate(x)  ! { dg-error \"32:ALIGN modifier requires at \\\\(1\\\\) a scalar positive constant integer alignment expression that is a power of two\" }\n+!$omp end parallel\n+\n+!$omp parallel allocate( align(cnst ) : x ) firstprivate(x)  ! { dg-error \"31:ALIGN modifier requires at \\\\(1\\\\) a scalar positive constant integer alignment expression that is a power of two\" }\n+!$omp end parallel\n+end"}]}