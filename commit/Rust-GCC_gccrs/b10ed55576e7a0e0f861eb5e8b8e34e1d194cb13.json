{"sha": "b10ed55576e7a0e0f861eb5e8b8e34e1d194cb13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjEwZWQ1NTU3NmU3YTBlMGY4NjFlYjVlOGI4ZTM0ZTFkMTk0Y2IxMw==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-05-15T01:32:32Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-05-15T01:32:32Z"}, "message": "(movsicc, case NE): Don't generate unrecognizable insn.\n\n(movdicc, case NE): Likewise.\n\nFrom-SVN: r9685", "tree": {"sha": "3efda1e24ecd618e068a96a545915aa30df8d499", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3efda1e24ecd618e068a96a545915aa30df8d499"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b10ed55576e7a0e0f861eb5e8b8e34e1d194cb13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b10ed55576e7a0e0f861eb5e8b8e34e1d194cb13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b10ed55576e7a0e0f861eb5e8b8e34e1d194cb13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b10ed55576e7a0e0f861eb5e8b8e34e1d194cb13/comments", "author": null, "committer": null, "parents": [{"sha": "ba68fc32bc83b21b54c7d9106bc7f0e81f07f1b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba68fc32bc83b21b54c7d9106bc7f0e81f07f1b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba68fc32bc83b21b54c7d9106bc7f0e81f07f1b1"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "aa745abb6f383e5c83a6628a0e8fbf50c1e642a7", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b10ed55576e7a0e0f861eb5e8b8e34e1d194cb13/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b10ed55576e7a0e0f861eb5e8b8e34e1d194cb13/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=b10ed55576e7a0e0f861eb5e8b8e34e1d194cb13", "patch": "@@ -2234,13 +2234,18 @@\n   \"\n {\n   rtx op0,op1;\n-  enum rtx_code code = GET_CODE (operands[1]);\n+  enum rtx_code code = GET_CODE (operands[1]), code2 = NE;\n \n   if (alpha_compare_fp_p)\n     FAIL;\n   switch (code)\n     {\n-    case EQ: case NE: case LE: case LT:\n+    case EQ: case LE: case LT:\n+      op0 = alpha_compare_op0;\n+      op1 = alpha_compare_op1;\n+      break;\n+    case NE:\n+      code = code2 = EQ;\n       op0 = alpha_compare_op0;\n       op1 = alpha_compare_op1;\n       break;\n@@ -2259,7 +2264,7 @@\n     }\n   operands[1] = gen_rtx (code, DImode, op0, op1);\n   operands[4] = gen_reg_rtx (DImode);\n-  operands[5] = gen_rtx (NE, VOIDmode, operands[4], CONST0_RTX (DImode));\n+  operands[5] = gen_rtx (code2, VOIDmode, operands[4], CONST0_RTX (DImode));\n }\")\n \n (define_expand \"movdicc\"\n@@ -2272,13 +2277,18 @@\n   \"\n {\n   rtx op0,op1;\n-  enum rtx_code code = GET_CODE (operands[1]);\n+  enum rtx_code code = GET_CODE (operands[1]), code2 = NE;\n \n   if (alpha_compare_fp_p)\n     FAIL;\n   switch (code)\n     {\n-    case EQ: case NE: case LE: case LT:\n+    case EQ: case LE: case LT:\n+      op0 = alpha_compare_op0;\n+      op1 = alpha_compare_op1;\n+      break;\n+    case NE:\n+      code = code2 = EQ;\n       op0 = alpha_compare_op0;\n       op1 = alpha_compare_op1;\n       break;\n@@ -2297,7 +2307,7 @@\n     }\n   operands[1] = gen_rtx (code, DImode, op0, op1);\n   operands[4] = gen_reg_rtx (DImode);\n-  operands[5] = gen_rtx (NE, VOIDmode, operands[4], CONST0_RTX (DImode));\n+  operands[5] = gen_rtx (code2, VOIDmode, operands[4], CONST0_RTX (DImode));\n }\")\n \n (define_expand \"movsfcc\""}]}