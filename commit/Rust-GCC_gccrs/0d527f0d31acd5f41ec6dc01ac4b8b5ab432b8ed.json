{"sha": "0d527f0d31acd5f41ec6dc01ac4b8b5ab432b8ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ1MjdmMGQzMWFjZDVmNDFlYzZkYzAxYWM0YjhiNWFiNDMyYjhlZA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2019-02-23T00:14:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-02-23T00:14:52Z"}, "message": "re PR tree-optimization/88074 (g++ hangs on math expression)\n\n\tPR middle-end/88074\n\t* simplify.c (norm2_do_sqrt, gfc_simplify_norm2): Use\n\tmpfr_number_p && !mpfr_zero_p instead of mpfr_regular_p.\n\t(norm2_add_squared): Likewise.  Use mp_exp_t rather than mpfr_exp_t.\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r269139", "tree": {"sha": "5927151576089aa92ef77733188bd5f8a3c8bd54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5927151576089aa92ef77733188bd5f8a3c8bd54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d527f0d31acd5f41ec6dc01ac4b8b5ab432b8ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d527f0d31acd5f41ec6dc01ac4b8b5ab432b8ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d527f0d31acd5f41ec6dc01ac4b8b5ab432b8ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d527f0d31acd5f41ec6dc01ac4b8b5ab432b8ed/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01d3d58151a8e8f21e92b4b29069be6fe6af7057", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01d3d58151a8e8f21e92b4b29069be6fe6af7057", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01d3d58151a8e8f21e92b4b29069be6fe6af7057"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "054936b6886f9509654a297919aee387b79a0bf1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d527f0d31acd5f41ec6dc01ac4b8b5ab432b8ed/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d527f0d31acd5f41ec6dc01ac4b8b5ab432b8ed/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0d527f0d31acd5f41ec6dc01ac4b8b5ab432b8ed", "patch": "@@ -1,3 +1,11 @@\n+2019-02-23  David Malcolm  <dmalcolm@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/88074\n+\t* simplify.c (norm2_do_sqrt, gfc_simplify_norm2): Use\n+\tmpfr_number_p && !mpfr_zero_p instead of mpfr_regular_p.\n+\t(norm2_add_squared): Likewise.  Use mp_exp_t rather than mpfr_exp_t.\n+\n 2019-02-22  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/83057"}, {"sha": "942f2eea3fcf955718f18d021c4d1ca871744199", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d527f0d31acd5f41ec6dc01ac4b8b5ab432b8ed/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d527f0d31acd5f41ec6dc01ac4b8b5ab432b8ed/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=0d527f0d31acd5f41ec6dc01ac4b8b5ab432b8ed", "patch": "@@ -6061,8 +6061,8 @@ norm2_add_squared (gfc_expr *result, gfc_expr *e)\n \n   gfc_set_model_kind (result->ts.kind);\n   int index = gfc_validate_kind (BT_REAL, result->ts.kind, false);\n-  mpfr_exp_t exp;\n-  if (mpfr_regular_p (result->value.real))\n+  mp_exp_t exp;\n+  if (mpfr_number_p (result->value.real) && !mpfr_zero_p (result->value.real))\n     {\n       exp = mpfr_get_exp (result->value.real);\n       /* If result is getting close to overflowing, scale down.  */\n@@ -6076,7 +6076,7 @@ norm2_add_squared (gfc_expr *result, gfc_expr *e)\n     }\n \n   mpfr_init (tmp);\n-  if (mpfr_regular_p (e->value.real))\n+  if (mpfr_number_p (e->value.real) && !mpfr_zero_p (e->value.real))\n     {\n       exp = mpfr_get_exp (e->value.real);\n       /* If e**2 would overflow or close to overflowing, scale down.  */\n@@ -6117,7 +6117,9 @@ norm2_do_sqrt (gfc_expr *result, gfc_expr *e)\n   if (result != e)\n     mpfr_set (result->value.real, e->value.real, GFC_RND_MODE);\n   mpfr_sqrt (result->value.real, result->value.real, GFC_RND_MODE);\n-  if (norm2_scale && mpfr_regular_p (result->value.real))\n+  if (norm2_scale\n+      && mpfr_number_p (result->value.real)\n+      && !mpfr_zero_p (result->value.real))\n     {\n       mpfr_t tmp;\n       mpfr_init (tmp);\n@@ -6156,7 +6158,9 @@ gfc_simplify_norm2 (gfc_expr *e, gfc_expr *dim)\n       result = simplify_transformation_to_scalar (result, e, NULL,\n \t\t\t\t\t\t  norm2_add_squared);\n       mpfr_sqrt (result->value.real, result->value.real, GFC_RND_MODE);\n-      if (norm2_scale && mpfr_regular_p (result->value.real))\n+      if (norm2_scale\n+\t  && mpfr_number_p (result->value.real)\n+\t  && !mpfr_zero_p (result->value.real))\n \t{\n \t  mpfr_t tmp;\n \t  mpfr_init (tmp);"}]}