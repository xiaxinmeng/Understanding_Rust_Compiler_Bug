{"sha": "6a1f27f45e44bcfbcc06a1aad74bb076e56eda36", "node_id": "C_kwDOANBUbNoAKDZhMWYyN2Y0NWU0NGJjZmJjYzA2YTFhYWQ3NGJiMDc2ZTU2ZWRhMzY", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-10-31T17:37:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-11-01T01:23:02Z"}, "message": "c++: formatting tweaks\n\ngcc/cp/ChangeLog:\n\n\t* decl.cc (duplicate_decls): Reformat loop.\n\t* parser.cc (cp_parser_member_declaration): Add newline.\n\t* semantics.cc: Remove newline.", "tree": {"sha": "b7b41c00189ba664002ac76b099f4fd0fc3d572f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7b41c00189ba664002ac76b099f4fd0fc3d572f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a1f27f45e44bcfbcc06a1aad74bb076e56eda36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a1f27f45e44bcfbcc06a1aad74bb076e56eda36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a1f27f45e44bcfbcc06a1aad74bb076e56eda36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a1f27f45e44bcfbcc06a1aad74bb076e56eda36/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b9a5cc9ec08e9f239dd2096edcc447b7a72f64a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b9a5cc9ec08e9f239dd2096edcc447b7a72f64a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b9a5cc9ec08e9f239dd2096edcc447b7a72f64a"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "87cb7a6c3a41992b45a5eeeef6e6132c92f3ba63", "filename": "gcc/cp/decl.cc", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a1f27f45e44bcfbcc06a1aad74bb076e56eda36/gcc%2Fcp%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a1f27f45e44bcfbcc06a1aad74bb076e56eda36/gcc%2Fcp%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.cc?ref=6a1f27f45e44bcfbcc06a1aad74bb076e56eda36", "patch": "@@ -2343,12 +2343,9 @@ duplicate_decls (tree newdecl, tree olddecl, bool hiding, bool was_hidden)\n \t  DECL_INITIAL (old_result) = DECL_INITIAL (new_result);\n \t  if (DECL_FUNCTION_TEMPLATE_P (newdecl))\n \t    {\n-\t      tree parm;\n-\t      DECL_ARGUMENTS (old_result)\n-\t\t= DECL_ARGUMENTS (new_result);\n-\t      for (parm = DECL_ARGUMENTS (old_result); parm;\n-\t\t   parm = DECL_CHAIN (parm))\n-\t\tDECL_CONTEXT (parm) = old_result;\n+\t      DECL_ARGUMENTS (old_result) = DECL_ARGUMENTS (new_result);\n+\t      for (tree p = DECL_ARGUMENTS (old_result); p; p = DECL_CHAIN (p))\n+\t\tDECL_CONTEXT (p) = old_result;\n \n \t      if (tree fc = DECL_FRIEND_CONTEXT (new_result))\n \t\tSET_DECL_FRIEND_CONTEXT (old_result, fc);"}, {"sha": "6a5b0652a0934792b3b5718a00d9f16161400606", "filename": "gcc/cp/parser.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a1f27f45e44bcfbcc06a1aad74bb076e56eda36/gcc%2Fcp%2Fparser.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a1f27f45e44bcfbcc06a1aad74bb076e56eda36/gcc%2Fcp%2Fparser.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.cc?ref=6a1f27f45e44bcfbcc06a1aad74bb076e56eda36", "patch": "@@ -27522,6 +27522,7 @@ cp_parser_member_declaration (cp_parser* parser)\n \t      decl = grokfield (declarator, &decl_specifiers,\n \t\t\t\tinitializer, /*init_const_expr_p=*/true,\n \t\t\t\tasm_specification, attributes);\n+\n \t      if (parser->fully_implicit_function_template_p)\n \t\t{\n \t\t  if (friend_p)"}, {"sha": "7c5f90b512704b27b42f40033d122096de41fd1f", "filename": "gcc/cp/semantics.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a1f27f45e44bcfbcc06a1aad74bb076e56eda36/gcc%2Fcp%2Fsemantics.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a1f27f45e44bcfbcc06a1aad74bb076e56eda36/gcc%2Fcp%2Fsemantics.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.cc?ref=6a1f27f45e44bcfbcc06a1aad74bb076e56eda36", "patch": "@@ -731,7 +731,6 @@ end_maybe_infinite_loop (tree cond)\n     }\n }\n \n-\n /* Begin a conditional that might contain a declaration.  When generating\n    normal code, we want the declaration to appear before the statement\n    containing the conditional.  When generating template code, we want the"}]}