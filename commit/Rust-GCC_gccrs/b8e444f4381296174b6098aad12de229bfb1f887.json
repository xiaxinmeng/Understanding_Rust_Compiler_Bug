{"sha": "b8e444f4381296174b6098aad12de229bfb1f887", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhlNDQ0ZjQzODEyOTYxNzRiNjA5OGFhZDEyZGUyMjliZmIxZjg4Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-08-19T22:51:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-08-19T22:51:20Z"}, "message": "re PR middle-end/41123 (ICE in expand_expr_real_1)\n\n\tPR middle-end/41123\n\t* expr.c (expand_expr_real_1) <normal_inner_ref>: Handle all kinds\n\tof CONCAT, not just bitpos 0 bitsize size of the whole CONCAT.\n\n\t* gcc.dg/pr41123.c: New test.\n\nFrom-SVN: r150946", "tree": {"sha": "e967345a26c84656cfebfc8e15d937bdfd7e968a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e967345a26c84656cfebfc8e15d937bdfd7e968a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8e444f4381296174b6098aad12de229bfb1f887", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8e444f4381296174b6098aad12de229bfb1f887", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8e444f4381296174b6098aad12de229bfb1f887", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8e444f4381296174b6098aad12de229bfb1f887/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0115d4a36f4ec51a9d70efe91d595b8a002facd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0115d4a36f4ec51a9d70efe91d595b8a002facd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0115d4a36f4ec51a9d70efe91d595b8a002facd2"}], "stats": {"total": 94, "additions": 84, "deletions": 10}, "files": [{"sha": "3a6e261997495f131a9024c5381dac9f093c20cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8e444f4381296174b6098aad12de229bfb1f887/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8e444f4381296174b6098aad12de229bfb1f887/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b8e444f4381296174b6098aad12de229bfb1f887", "patch": "@@ -1,3 +1,9 @@\n+2009-08-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/41123\n+\t* expr.c (expand_expr_real_1) <normal_inner_ref>: Handle all kinds\n+\tof CONCAT, not just bitpos 0 bitsize size of the whole CONCAT.\n+\n 2009-08-19  Jason Merrill  <jason@redhat.com>\n \n \t* doc/invoke.texi (C++ Dialect Options): Note change of minimum"}, {"sha": "6805cdc6e6df427ed168567aab7b7dc908cf1e47", "filename": "gcc/expr.c", "status": "modified", "additions": 27, "deletions": 10, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8e444f4381296174b6098aad12de229bfb1f887/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8e444f4381296174b6098aad12de229bfb1f887/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=b8e444f4381296174b6098aad12de229bfb1f887", "patch": "@@ -7871,6 +7871,33 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \t\t\t  || mode1 == BLKmode\n \t\t\t  || bitpos + bitsize > GET_MODE_BITSIZE (mode2));\n \n+\t/* Handle CONCAT first.  */\n+\tif (GET_CODE (op0) == CONCAT && !must_force_mem)\n+\t  {\n+\t    if (bitpos == 0\n+\t\t&& bitsize == GET_MODE_BITSIZE (GET_MODE (op0)))\n+\t      return op0;\n+\t    if (bitpos == 0\n+\t\t&& bitsize == GET_MODE_BITSIZE (GET_MODE (XEXP (op0, 0)))\n+\t\t&& bitsize)\n+\t      {\n+\t\top0 = XEXP (op0, 0);\n+\t\tmode2 = GET_MODE (op0);\n+\t      }\n+\t    else if (bitpos == GET_MODE_BITSIZE (GET_MODE (XEXP (op0, 0)))\n+\t\t     && bitsize == GET_MODE_BITSIZE (GET_MODE (XEXP (op0, 1)))\n+\t\t     && bitpos\n+\t\t     && bitsize)\n+\t      {\n+\t\top0 = XEXP (op0, 1);\n+\t\tbitpos = 0;\n+\t\tmode2 = GET_MODE (op0);\n+\t      }\n+\t    else\n+\t      /* Otherwise force into memory.  */\n+\t      must_force_mem = 1;\n+\t  }\n+\n \t/* If this is a constant, put it in a register if it is a legitimate\n \t   constant and we don't need a memory reference.  */\n \tif (CONSTANT_P (op0)\n@@ -7944,16 +7971,6 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \t    MEM_VOLATILE_P (op0) = 1;\n \t  }\n \n-\t/* The following code doesn't handle CONCAT.\n-\t   Assume only bitpos == 0 can be used for CONCAT, due to\n-\t   one element arrays having the same mode as its element.  */\n-\tif (GET_CODE (op0) == CONCAT)\n-\t  {\n-\t    gcc_assert (bitpos == 0\n-\t\t\t&& bitsize == GET_MODE_BITSIZE (GET_MODE (op0)));\n-\t    return op0;\n-\t  }\n-\n \t/* In cases where an aligned union has an unaligned object\n \t   as a field, we might be extracting a BLKmode value from\n \t   an integer-mode (e.g., SImode) object.  Handle this case"}, {"sha": "993f2c3bfecbe3789ed6e628543e8593486e96db", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8e444f4381296174b6098aad12de229bfb1f887/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8e444f4381296174b6098aad12de229bfb1f887/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b8e444f4381296174b6098aad12de229bfb1f887", "patch": "@@ -1,3 +1,8 @@\n+2009-08-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/41123\n+\t* gcc.dg/pr41123.c: New test.\n+\n 2009-08-19  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/41120"}, {"sha": "076edb46ee53884435e5863c1d1edd4ff3c8a7f2", "filename": "gcc/testsuite/gcc.dg/pr41123.c", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8e444f4381296174b6098aad12de229bfb1f887/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41123.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8e444f4381296174b6098aad12de229bfb1f887/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41123.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41123.c?ref=b8e444f4381296174b6098aad12de229bfb1f887", "patch": "@@ -0,0 +1,46 @@\n+/* PR middle-end/41123 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-strict-aliasing\" } */\n+\n+struct S { char a, b, c, d, e, f, g, h; };\n+struct T { int a, b; };\n+\n+struct S\n+f1 (float _Complex x)\n+{\n+  return *(struct S *) & x;\n+}\n+\n+int\n+f2 (float _Complex x)\n+{\n+  struct S f = f1 (x);\n+  return f.b;\n+}\n+\n+struct T\n+f3 (float _Complex x)\n+{\n+  return *(struct T *) & x;\n+}\n+\n+int\n+f4 (float _Complex x)\n+{\n+  struct T f = f3 (x);\n+  return f.a;\n+}\n+\n+int\n+f5 (float _Complex x)\n+{\n+  struct T f = f3 (x);\n+  return f.b;\n+}\n+\n+struct T\n+f6 (float _Complex x)\n+{\n+  struct T f = f3 (x);\n+  return f;\n+}"}]}