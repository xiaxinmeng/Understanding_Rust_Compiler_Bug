{"sha": "778f72f2cf96b678b32f4b327adb050a0ec864d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc4ZjcyZjJjZjk2YjY3OGIzMmY0YjMyN2FkYjA1MGEwZWM4NjRkOA==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2005-01-15T16:06:17Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2005-01-15T16:06:17Z"}, "message": "harg-reg-set.h (reg_class_names): Prototype global array.\n\n\n\t* harg-reg-set.h (reg_class_names): Prototype global array.\n\t* regclass.c (reg_class_names): Declare here and initialize to\n\tREG_CLASS_NAMES.\n\t(dump_regclass): Remove local declaration of reg_class_names.\n\t(regclass): Likewise.\n\t* cfg.c (dump_flow_info): Likewise.\n\t* ra-debug.c (reg_class_names): Likewise.\n\t* regrename.c (reg_class_names): Likewise.\n\t* reload.c (reg_class_names): Likewise.\n\t* reload1.c (spill_failure): Likewise.\n\t* config/m68hc11/m68hc11.c (reg_class_names): Likewise.\n\nFrom-SVN: r93696", "tree": {"sha": "122e9687be647e2b1f0b34ecee7bb59c9eb26914", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/122e9687be647e2b1f0b34ecee7bb59c9eb26914"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/778f72f2cf96b678b32f4b327adb050a0ec864d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/778f72f2cf96b678b32f4b327adb050a0ec864d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/778f72f2cf96b678b32f4b327adb050a0ec864d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/778f72f2cf96b678b32f4b327adb050a0ec864d8/comments", "author": null, "committer": null, "parents": [{"sha": "9c3c3dcc1fbd186af72e62bc6d4579ec963611bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c3c3dcc1fbd186af72e62bc6d4579ec963611bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c3c3dcc1fbd186af72e62bc6d4579ec963611bd"}], "stats": {"total": 51, "additions": 31, "deletions": 20}, "files": [{"sha": "42c0e98166ffa6d9d276100dc747a16f387ecf8f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/778f72f2cf96b678b32f4b327adb050a0ec864d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/778f72f2cf96b678b32f4b327adb050a0ec864d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=778f72f2cf96b678b32f4b327adb050a0ec864d8", "patch": "@@ -1,3 +1,17 @@\n+2004-01-15  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* harg-reg-set.h (reg_class_names): Prototype global array.\n+\t* regclass.c (reg_class_names): Declare here and initialize to\n+\tREG_CLASS_NAMES.\n+\t(dump_regclass): Remove local declaration of reg_class_names.\n+\t(regclass): Likewise.\n+\t* cfg.c (dump_flow_info): Likewise.\n+\t* ra-debug.c (reg_class_names): Likewise.\n+\t* regrename.c (reg_class_names): Likewise.\n+\t* reload.c (reg_class_names): Likewise.\n+\t* reload1.c (spill_failure): Likewise.\n+\t* config/m68hc11/m68hc11.c (reg_class_names): Likewise.\n+\n 2005-01-15  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390.md (\"reload_outti\"): Remove predicate for"}, {"sha": "bc68faab799775ad8ae3301b1eac541a65886a6d", "filename": "gcc/cfg.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/778f72f2cf96b678b32f4b327adb050a0ec864d8/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/778f72f2cf96b678b32f4b327adb050a0ec864d8/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=778f72f2cf96b678b32f4b327adb050a0ec864d8", "patch": "@@ -1,6 +1,7 @@\n /* Control flow graph manipulation code for GNU compiler.\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -515,7 +516,6 @@ dump_flow_info (FILE *file)\n {\n   int i;\n   basic_block bb;\n-  static const char * const reg_class_names[] = REG_CLASS_NAMES;\n \n   /* There are no pseudo registers after reload.  Don't dump them.  */\n   if (reg_n_info && !reload_completed)"}, {"sha": "f2a44fb8def04d54bfa8f46c2317fbae93ef4228", "filename": "gcc/config/m68hc11/m68hc11.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/778f72f2cf96b678b32f4b327adb050a0ec864d8/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/778f72f2cf96b678b32f4b327adb050a0ec864d8/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c?ref=778f72f2cf96b678b32f4b327adb050a0ec864d8", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for code generation on Motorola 68HC11 and 68HC12.\n-   Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004\n+   Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005\n    Free Software Foundation, Inc.\n    Contributed by Stephane Carrez (stcarrez@nerim.fr)\n \n@@ -387,8 +387,6 @@ m68hc11_conditional_register_usage (void)\n \n /* Reload and register operations.  */\n \n-static const char *const reg_class_names[] = REG_CLASS_NAMES;\n-\n \n void\n create_regs_rtx (void)"}, {"sha": "c78527e4cf6033bedf1aade42f3404077b8a5d89", "filename": "gcc/hard-reg-set.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/778f72f2cf96b678b32f4b327adb050a0ec864d8/gcc%2Fhard-reg-set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/778f72f2cf96b678b32f4b327adb050a0ec864d8/gcc%2Fhard-reg-set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhard-reg-set.h?ref=778f72f2cf96b678b32f4b327adb050a0ec864d8", "patch": "@@ -1,5 +1,5 @@\n /* Sets (bit vectors) of hard registers, and operations on them.\n-   Copyright (C) 1987, 1992, 1994, 2000, 2003, 2004\n+   Copyright (C) 1987, 1992, 1994, 2000, 2003, 2004, 2005\n    Free Software Foundation, Inc.\n \n This file is part of GCC\n@@ -490,6 +490,10 @@ extern int n_non_fixed_regs;\n \n extern const char * reg_names[FIRST_PSEUDO_REGISTER];\n \n+/* Vector indexed by reg class giving its name.  */\n+\n+extern const char * reg_class_names[];\n+\n /* Given a hard REGN a FROM mode and a TO mode, return nonzero if\n    REGN cannot change modes between the specified modes.  */\n #define REG_CANNOT_CHANGE_MODE_P(REGN, FROM, TO)                          \\"}, {"sha": "1d4bfc722c48a1d9435ad4f20bcead2886c11ead", "filename": "gcc/ra-debug.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/778f72f2cf96b678b32f4b327adb050a0ec864d8/gcc%2Fra-debug.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/778f72f2cf96b678b32f4b327adb050a0ec864d8/gcc%2Fra-debug.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fra-debug.c?ref=778f72f2cf96b678b32f4b327adb050a0ec864d8", "patch": "@@ -1,5 +1,5 @@\n /* Graph coloring register allocator\n-   Copyright (C) 2001, 2002, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002, 2004, 2005 Free Software Foundation, Inc.\n    Contributed by Michael Matz <matz@suse.de>\n    and Daniel Berlin <dan@cgsoftware.com>.\n \n@@ -41,9 +41,6 @@ static void ra_print_rtx_2op (FILE *, rtx);\n static void ra_print_rtx_3op (FILE *, rtx);\n static void ra_print_rtx_object (FILE *, rtx);\n \n-/* The hardregs as names, for debugging.  */\n-static const char *const reg_class_names[] = REG_CLASS_NAMES;\n-\n /* Print a message to the dump file, if debug_new_regalloc and LEVEL\n    have any bits in common.  */\n "}, {"sha": "ab8f7c8a780fc0d2a286a0a020e87a9fc3273d03", "filename": "gcc/regclass.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/778f72f2cf96b678b32f4b327adb050a0ec864d8/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/778f72f2cf96b678b32f4b327adb050a0ec864d8/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=778f72f2cf96b678b32f4b327adb050a0ec864d8", "patch": "@@ -1,6 +1,6 @@\n /* Compute register class preferences for pseudo-registers.\n    Copyright (C) 1987, 1988, 1991, 1992, 1993, 1994, 1995, 1996\n-   1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+   1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -192,6 +192,10 @@ enum reg_class reg_class_superunion[N_REG_CLASSES][N_REG_CLASSES];\n \n const char * reg_names[] = REGISTER_NAMES;\n \n+/* Array containing all of the register class names.  */\n+\n+const char * reg_class_names[] = REG_CLASS_NAMES;\n+\n /* For each hard register, the widest mode object that it can contain.\n    This will be a MODE_INT mode if the register can hold integers.  Otherwise\n    it will be a MODE_FLOAT or a MODE_CC mode, whichever is valid for the\n@@ -925,7 +929,6 @@ regclass_init (void)\n static void\n dump_regclass (FILE *dump)\n {\n-  static const char *const reg_class_names[] = REG_CLASS_NAMES;\n   int i;\n   for (i = FIRST_PSEUDO_REGISTER; i < max_regno; i++)\n     {\n@@ -1348,7 +1351,6 @@ regclass (rtx f, int nregs, FILE *dump)\n \t      && (reg_pref[i].prefclass != (int) best\n \t\t  || reg_pref[i].altclass != (int) alt))\n \t    {\n-\t      static const char *const reg_class_names[] = REG_CLASS_NAMES;\n \t      fprintf (dump, \"  Register %i\", i);\n \t      if (alt == ALL_REGS || best == ALL_REGS)\n \t\tfprintf (dump, \" pref %s\\n\", reg_class_names[(int) best]);"}, {"sha": "eec594c764710f82c60b11ce4b72bc3854fb6fd7", "filename": "gcc/regrename.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/778f72f2cf96b678b32f4b327adb050a0ec864d8/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/778f72f2cf96b678b32f4b327adb050a0ec864d8/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=778f72f2cf96b678b32f4b327adb050a0ec864d8", "patch": "@@ -1,5 +1,6 @@\n /* Register renaming for the GNU compiler.\n-   Copyright (C) 2000, 2001, 2002, 2003, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005\n+   Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -36,8 +37,6 @@\n #include \"toplev.h\"\n #include \"obstack.h\"\n \n-static const char *const reg_class_names[] = REG_CLASS_NAMES;\n-\n struct du_chain\n {\n   struct du_chain *next_chain;"}, {"sha": "0b865a1925f2b86fa0c7bf3785448dea577633e7", "filename": "gcc/reload.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/778f72f2cf96b678b32f4b327adb050a0ec864d8/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/778f72f2cf96b678b32f4b327adb050a0ec864d8/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=778f72f2cf96b678b32f4b327adb050a0ec864d8", "patch": "@@ -1,6 +1,6 @@\n /* Search an insn for pseudo regs that must be in hard regs and are not.\n    Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -7017,8 +7017,6 @@ static const char *const reload_when_needed_name[] =\n   \"RELOAD_FOR_OTHER_ADDRESS\"\n };\n \n-static const char * const reg_class_names[] = REG_CLASS_NAMES;\n-\n /* These functions are used to print the variables set by 'find_reloads' */\n \n void"}, {"sha": "7961c99b9c463a85f74a3647792dc0b228106545", "filename": "gcc/reload1.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/778f72f2cf96b678b32f4b327adb050a0ec864d8/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/778f72f2cf96b678b32f4b327adb050a0ec864d8/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=778f72f2cf96b678b32f4b327adb050a0ec864d8", "patch": "@@ -1861,7 +1861,6 @@ delete_caller_save_insns (void)\n static void\n spill_failure (rtx insn, enum reg_class class)\n {\n-  static const char *const reg_class_names[] = REG_CLASS_NAMES;\n   if (asm_noperands (PATTERN (insn)) >= 0)\n     error_for_asm (insn, \"can't find a register in class %qs while \"\n \t\t   \"reloading %<asm%>\","}]}