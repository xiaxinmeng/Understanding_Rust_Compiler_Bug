{"sha": "c95aa61c547c0366a3698be8dea47faaac54b6e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk1YWE2MWM1NDdjMDM2NmEzNjk4YmU4ZGVhNDdmYWFhYzU0YjZlNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T12:38:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T12:38:27Z"}, "message": "[multiple changes]\n\n2011-08-29  Robert Dewar  <dewar@adacore.com>\n\n\t* a-convec.adb, exp_disp.adb: Minor reformatting.\n\n2011-08-29  Tristan Gingold  <gingold@adacore.com>\n\n\t* a-exexpr-gcc.adb (GNAT_GCC_Exception_Access): Set to convention C.\n\nFrom-SVN: r178213", "tree": {"sha": "47c9ebb692db65b23c7bde04163822c20f85bf97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47c9ebb692db65b23c7bde04163822c20f85bf97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c95aa61c547c0366a3698be8dea47faaac54b6e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c95aa61c547c0366a3698be8dea47faaac54b6e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c95aa61c547c0366a3698be8dea47faaac54b6e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c95aa61c547c0366a3698be8dea47faaac54b6e5/comments", "author": null, "committer": null, "parents": [{"sha": "624e168838b4e0b8c9ba2533f517f1b779dc004d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/624e168838b4e0b8c9ba2533f517f1b779dc004d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/624e168838b4e0b8c9ba2533f517f1b779dc004d"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "1abc64fd94aa5f1f7eaecbdb2f37df2714cefed8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c95aa61c547c0366a3698be8dea47faaac54b6e5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c95aa61c547c0366a3698be8dea47faaac54b6e5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c95aa61c547c0366a3698be8dea47faaac54b6e5", "patch": "@@ -1,3 +1,11 @@\n+2011-08-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-convec.adb, exp_disp.adb: Minor reformatting.\n+\n+2011-08-29  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* a-exexpr-gcc.adb (GNAT_GCC_Exception_Access): Set to convention C.\n+\n 2011-08-29  Gary Dismukes  <dismukes@adacore.com>\n \n \t* exp_ch3.adb (Build_Record_Init_Proc.Build_Init_Procedure): Set"}, {"sha": "f61809adf407fdb6a467f6c99f498dda797d7628", "filename": "gcc/ada/a-convec.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c95aa61c547c0366a3698be8dea47faaac54b6e5/gcc%2Fada%2Fa-convec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c95aa61c547c0366a3698be8dea47faaac54b6e5/gcc%2Fada%2Fa-convec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-convec.adb?ref=c95aa61c547c0366a3698be8dea47faaac54b6e5", "patch": "@@ -2176,12 +2176,10 @@ package body Ada.Containers.Vectors is\n       return No_Element;\n    end Next;\n \n-   function Next (Object : Iterator; Position : Cursor) return Cursor\n-   is\n+   function Next (Object : Iterator; Position : Cursor) return Cursor is\n    begin\n       if Position.Index = Object.Container.Last then\n          return  No_Element;\n-\n       else\n          return (Object.Container, Position.Index + 1);\n       end if;\n@@ -2255,8 +2253,7 @@ package body Ada.Containers.Vectors is\n       return No_Element;\n    end Previous;\n \n-   function Previous (Object : Iterator; Position : Cursor) return Cursor\n-   is\n+   function Previous (Object : Iterator; Position : Cursor) return Cursor is\n    begin\n       if Position.Index > Index_Type'First then\n          return (Object.Container, Position.Index - 1);"}, {"sha": "12202d8b1200e7e6b62033968ea56aa4681db6cf", "filename": "gcc/ada/a-exexpr-gcc.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c95aa61c547c0366a3698be8dea47faaac54b6e5/gcc%2Fada%2Fa-exexpr-gcc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c95aa61c547c0366a3698be8dea47faaac54b6e5/gcc%2Fada%2Fa-exexpr-gcc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexpr-gcc.adb?ref=c95aa61c547c0366a3698be8dea47faaac54b6e5", "patch": "@@ -166,6 +166,7 @@ package body Exception_Propagation is\n    --  to maintain anyway.\n \n    type GNAT_GCC_Exception_Access is access all GNAT_GCC_Exception;\n+   pragma Convention (C, GNAT_GCC_Exception_Access);\n \n    function To_GCC_Exception is new\n      Unchecked_Conversion (GNAT_GCC_Exception_Access, GCC_Exception_Access);"}, {"sha": "0d752703328c7887af184a3cd8e3ff2657b82fc4", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c95aa61c547c0366a3698be8dea47faaac54b6e5/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c95aa61c547c0366a3698be8dea47faaac54b6e5/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=c95aa61c547c0366a3698be8dea47faaac54b6e5", "patch": "@@ -3698,8 +3698,9 @@ package body Exp_Disp is\n          Typ         : Entity_Id)\n       is\n          Comp : Entity_Id;\n-         function Is_Actual_For_Formal_Incomplete_Type (T : Entity_Id)\n-            return Boolean;\n+\n+         function Is_Actual_For_Formal_Incomplete_Type\n+           (T : Entity_Id) return Boolean;\n          --  In Ada2012, if a nested generic has an incomplete formal type, the\n          --  actual may be (and usually is) a private type whose completion\n          --  appears later. It is safe to build the dispatch table in this\n@@ -3709,11 +3710,12 @@ package body Exp_Disp is\n          -- Is_Actual_For_Formal_Incomplete_Type --\n          ------------------------------------------\n \n-         function Is_Actual_For_Formal_Incomplete_Type (T : Entity_Id)\n-            return Boolean\n+         function Is_Actual_For_Formal_Incomplete_Type\n+           (T : Entity_Id) return Boolean\n          is\n             Gen_Par : Entity_Id;\n             F       : Node_Id;\n+\n          begin\n             if not Is_Generic_Instance (Current_Scope)\n               or else not Used_As_Generic_Actual (T)\n@@ -3739,6 +3741,8 @@ package body Exp_Disp is\n             return False;\n          end Is_Actual_For_Formal_Incomplete_Type;\n \n+      --  Start of processing for Check_Premature_Freezing\n+\n       begin\n          if Present (N)\n            and then Is_Private_Type (Typ)\n@@ -3761,7 +3765,7 @@ package body Exp_Disp is\n               and then Present (Comp)\n               and then not Is_Frozen (Comp)\n               and then\n-               not Is_Actual_For_Formal_Incomplete_Type (Comp)\n+                not Is_Actual_For_Formal_Incomplete_Type (Comp)\n             then\n                Error_Msg_Sloc := Sloc (Subp);\n                Error_Msg_Node_2 := Subp;"}]}