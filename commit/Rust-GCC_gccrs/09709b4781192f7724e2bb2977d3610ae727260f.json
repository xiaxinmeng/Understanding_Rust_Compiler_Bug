{"sha": "09709b4781192f7724e2bb2977d3610ae727260f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk3MDliNDc4MTE5MmY3NzI0ZTJiYjI5NzdkMzYxMGFlNzI3MjYwZg==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2019-09-19T08:13:58Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-09-19T08:13:58Z"}, "message": "[Ada] Allow constants of access type in Global contracts\n\nNow that SPARK supports access types, global constants of access type\nmay appear as outputs of a subprogram, with the meaning that the\nunderlying memory can be modified (see SPARK RM 3.10).\n\n2019-09-19  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* sem_prag.adb (Analyze_Global_In_Decl_Part): Do not issue an\n\terror when a constant of an access type is used as output in a\n\tGlobal contract.\n\t(Analyze_Depends_In_Decl_Part): Do not issue an error when a\n\tconstant of an access type is used as output in a Depends\n\tcontract.\n\ngcc/testsuite/\n\n\t* gnat.dg/global2.adb, gnat.dg/global2.ads: New testcase.\n\nFrom-SVN: r275947", "tree": {"sha": "e59c2a3e5005c53d438b9fde16dce04994fe1584", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e59c2a3e5005c53d438b9fde16dce04994fe1584"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09709b4781192f7724e2bb2977d3610ae727260f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09709b4781192f7724e2bb2977d3610ae727260f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09709b4781192f7724e2bb2977d3610ae727260f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09709b4781192f7724e2bb2977d3610ae727260f/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7005758ce72896e478245ed2de0aa146427a2ec9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7005758ce72896e478245ed2de0aa146427a2ec9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7005758ce72896e478245ed2de0aa146427a2ec9"}], "stats": {"total": 66, "additions": 61, "deletions": 5}, "files": [{"sha": "070b8a125bd345e7881fdc82134e4302f81de81b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09709b4781192f7724e2bb2977d3610ae727260f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09709b4781192f7724e2bb2977d3610ae727260f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=09709b4781192f7724e2bb2977d3610ae727260f", "patch": "@@ -1,3 +1,12 @@\n+2019-09-19  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Global_In_Decl_Part): Do not issue an\n+\terror when a constant of an access type is used as output in a\n+\tGlobal contract.\n+\t(Analyze_Depends_In_Decl_Part): Do not issue an error when a\n+\tconstant of an access type is used as output in a Depends\n+\tcontract.\n+\n 2019-09-19  Arnaud Charlet  <charlet@adacore.com>\n \n \t* exp_attr.adb: Remove obsolete comment."}, {"sha": "43673830c830bf89bca829b7afe689065204e552", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 30, "deletions": 5, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09709b4781192f7724e2bb2977d3610ae727260f/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09709b4781192f7724e2bb2977d3610ae727260f/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=09709b4781192f7724e2bb2977d3610ae727260f", "patch": "@@ -1262,8 +1262,28 @@ package body Sem_Prag is\n            (Item_Is_Input  : out Boolean;\n             Item_Is_Output : out Boolean)\n          is\n+            --  A constant or IN parameter of access type should be handled\n+            --  like a variable, as the underlying memory pointed-to can be\n+            --  modified. Use Adjusted_Kind to do this adjustment.\n+\n+            Adjusted_Kind : Entity_Kind := Ekind (Item_Id);\n+\n          begin\n-            case Ekind (Item_Id) is\n+            if Ekind_In (Item_Id, E_Constant,\n+                                  E_Generic_In_Parameter,\n+                                  E_In_Parameter)\n+\n+              --  If Item_Id is of a private type whose completion has not been\n+              --  analyzed yet, its Underlying_Type is empty and we handle it\n+              --  as a constant.\n+\n+              and then Present (Underlying_Type (Etype (Item_Id)))\n+              and then Is_Access_Type (Underlying_Type (Etype (Item_Id)))\n+            then\n+               Adjusted_Kind := E_Variable;\n+            end if;\n+\n+            case Adjusted_Kind is\n \n                --  Abstract states\n \n@@ -1303,7 +1323,9 @@ package body Sem_Prag is\n \n                   Item_Is_Output := False;\n \n-               --  Variables and IN OUT parameters\n+               --  Variables and IN OUT parameters, as well as constants and\n+               --  IN parameters of access type which are handled like\n+               --  variables.\n \n                when E_Generic_In_Out_Parameter\n                   | E_In_Out_Parameter\n@@ -2412,10 +2434,13 @@ package body Sem_Prag is\n \n                --  Constant related checks\n \n-               elsif Ekind (Item_Id) = E_Constant then\n+               elsif Ekind (Item_Id) = E_Constant\n+                 and then\n+                   not Is_Access_Type (Underlying_Type (Etype (Item_Id)))\n+               then\n \n-                  --  A constant is a read-only item, therefore it cannot act\n-                  --  as an output.\n+                  --  Unless it is of an access type, a constant is a read-only\n+                  --  item, therefore it cannot act as an output.\n \n                   if Nam_In (Global_Mode, Name_In_Out, Name_Output) then\n                      SPARK_Msg_NE"}, {"sha": "da23e2cd5af1b2b9231ce89ccbe94452c5e1a97f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09709b4781192f7724e2bb2977d3610ae727260f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09709b4781192f7724e2bb2977d3610ae727260f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=09709b4781192f7724e2bb2977d3610ae727260f", "patch": "@@ -1,3 +1,7 @@\n+2019-09-19  Yannick Moy  <moy@adacore.com>\n+\n+\t* gnat.dg/global2.adb, gnat.dg/global2.ads: New testcase.\n+\n 2019-09-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/access9.adb: New testcase."}, {"sha": "b18d9ac1fdaeab9161eefad67221eb93f611f413", "filename": "gcc/testsuite/gnat.dg/global2.adb", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09709b4781192f7724e2bb2977d3610ae727260f/gcc%2Ftestsuite%2Fgnat.dg%2Fglobal2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09709b4781192f7724e2bb2977d3610ae727260f/gcc%2Ftestsuite%2Fgnat.dg%2Fglobal2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fglobal2.adb?ref=09709b4781192f7724e2bb2977d3610ae727260f", "patch": "@@ -0,0 +1,12 @@\n+--  { dg-do compile }\n+\n+package body Global2 is\n+   procedure Change_X is\n+   begin\n+      X.all := 1;\n+   end Change_X;\n+   procedure Change2_X is\n+   begin\n+      X.all := 1;\n+   end Change2_X;\n+end Global2;\n\\ No newline at end of file"}, {"sha": "4de3158a4a2fc588275fed46b616ef7266d6a2be", "filename": "gcc/testsuite/gnat.dg/global2.ads", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09709b4781192f7724e2bb2977d3610ae727260f/gcc%2Ftestsuite%2Fgnat.dg%2Fglobal2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09709b4781192f7724e2bb2977d3610ae727260f/gcc%2Ftestsuite%2Fgnat.dg%2Fglobal2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fglobal2.ads?ref=09709b4781192f7724e2bb2977d3610ae727260f", "patch": "@@ -0,0 +1,6 @@\n+package Global2 is\n+   type Int_Acc is access Integer;\n+   X : constant Int_Acc := new Integer'(34);\n+   procedure Change_X with Global => (In_Out => X);\n+   procedure Change2_X with Depends => (X => X);\n+end Global2;"}]}