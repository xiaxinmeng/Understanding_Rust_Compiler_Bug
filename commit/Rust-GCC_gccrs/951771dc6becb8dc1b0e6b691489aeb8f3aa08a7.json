{"sha": "951771dc6becb8dc1b0e6b691489aeb8f3aa08a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUxNzcxZGM2YmVjYjhkYzFiMGU2YjY5MTQ4OWFlYjhmM2FhMDhhNw==", "commit": {"author": {"name": "James E. Wilson", "email": "wilson@codesourcery.com", "date": "2010-05-20T06:26:52Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2010-05-20T06:26:52Z"}, "message": "re PR target/43764 (-mrelax-pic-calls fails with complex types)\n\nPR target/43764\n* mips.c (mips_call_expr_from_insn): New arg second_call.  Set it.\n(mips_annotate_pic_calls): Pass new arg to mips_call_expr_from_insn.\nUse it.\n\nFrom-SVN: r159610", "tree": {"sha": "445cf456f3f7d845409bbb0971019da3abf14bef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/445cf456f3f7d845409bbb0971019da3abf14bef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/951771dc6becb8dc1b0e6b691489aeb8f3aa08a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/951771dc6becb8dc1b0e6b691489aeb8f3aa08a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/951771dc6becb8dc1b0e6b691489aeb8f3aa08a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/951771dc6becb8dc1b0e6b691489aeb8f3aa08a7/comments", "author": null, "committer": null, "parents": [{"sha": "6d1b0f922a46b7459c0a9441f728e9214b1bcd80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d1b0f922a46b7459c0a9441f728e9214b1bcd80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d1b0f922a46b7459c0a9441f728e9214b1bcd80"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "d372423708c5b5ab0e144614f683b4c709f6e4f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/951771dc6becb8dc1b0e6b691489aeb8f3aa08a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/951771dc6becb8dc1b0e6b691489aeb8f3aa08a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=951771dc6becb8dc1b0e6b691489aeb8f3aa08a7", "patch": "@@ -1,3 +1,10 @@\n+2010-05-19  James E. Wilson  <wilson@codesourcery.com>\n+\n+\tPR target/43764\n+\t* mips.c (mips_call_expr_from_insn): New arg second_call.  Set it.\n+\t(mips_annotate_pic_calls): Pass new arg to mips_call_expr_from_insn.\n+\tUse it.\n+\n 2010-05-19  Joseph Myers  <joseph@codesourcery.com>\n \n \t* diagnostic.c (FLOAT, FFS): Don't undefine."}, {"sha": "38664b5aac485d6123a02ae550374f5f70400468", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/951771dc6becb8dc1b0e6b691489aeb8f3aa08a7/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/951771dc6becb8dc1b0e6b691489aeb8f3aa08a7/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=951771dc6becb8dc1b0e6b691489aeb8f3aa08a7", "patch": "@@ -14006,23 +14006,35 @@ r10k_insert_cache_barriers (void)\n }\n \f\n /* If INSN is a call, return the underlying CALL expr.  Return NULL_RTX\n-   otherwise.  */\n+   otherwise.  If INSN has two call rtx, then store the second one in\n+   SECOND_CALL.  */\n \n static rtx\n-mips_call_expr_from_insn (rtx insn)\n+mips_call_expr_from_insn (rtx insn, rtx *second_call)\n {\n   rtx x;\n+  rtx x2;\n \n   if (!CALL_P (insn))\n     return NULL_RTX;\n \n   x = PATTERN (insn);\n   if (GET_CODE (x) == PARALLEL)\n-    x = XVECEXP (x, 0, 0);\n+    {\n+      /* Calls returning complex values have two CALL rtx.  Look for the second\n+\t one here, and return it via the SECOND_CALL arg.  */\n+      x2 = XVECEXP (x, 0, 1);\n+      if (GET_CODE (x2) == SET)\n+\tx2 = XEXP (x2, 1);\n+      if (GET_CODE (x2) == CALL)\n+\t*second_call = x2;\n+\n+      x = XVECEXP (x, 0, 0);\n+    }\n   if (GET_CODE (x) == SET)\n     x = XEXP (x, 1);\n-\n   gcc_assert (GET_CODE (x) == CALL);\n+\n   return x;\n }\n \n@@ -14154,9 +14166,10 @@ mips_annotate_pic_calls (void)\n   FOR_EACH_BB (bb)\n     FOR_BB_INSNS (bb, insn)\n     {\n-      rtx call, reg, symbol;\n+      rtx call, reg, symbol, second_call;\n \n-      call = mips_call_expr_from_insn (insn);\n+      second_call = 0;\n+      call = mips_call_expr_from_insn (insn, &second_call);\n       if (!call)\n \tcontinue;\n       gcc_assert (MEM_P (XEXP (call, 0)));\n@@ -14166,7 +14179,11 @@ mips_annotate_pic_calls (void)\n \n       symbol = mips_find_pic_call_symbol (insn, reg);\n       if (symbol)\n-\tmips_annotate_pic_call_expr (call, symbol);\n+\t{\n+\t  mips_annotate_pic_call_expr (call, symbol);\n+\t  if (second_call)\n+\t    mips_annotate_pic_call_expr (second_call, symbol);\n+\t}\n     }\n }\n \f"}]}