{"sha": "0af2372948f7d3eec3b71e78acdecbaec8589926", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFmMjM3Mjk0OGY3ZDNlZWMzYjcxZTc4YWNkZWNiYWVjODU4OTkyNg==", "commit": {"author": {"name": "Michael Kohler", "email": "michaelkohler@live.com", "date": "2010-08-06T05:45:23Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2010-08-06T05:45:23Z"}, "message": "Fix spelling errors\n\nFrom-SVN: r162938", "tree": {"sha": "9bb85a1baed965dd85f093ee69c91846a652d465", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bb85a1baed965dd85f093ee69c91846a652d465"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0af2372948f7d3eec3b71e78acdecbaec8589926", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0af2372948f7d3eec3b71e78acdecbaec8589926", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0af2372948f7d3eec3b71e78acdecbaec8589926", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0af2372948f7d3eec3b71e78acdecbaec8589926/comments", "author": {"login": "MichaelKohler", "id": 330324, "node_id": "MDQ6VXNlcjMzMDMyNA==", "avatar_url": "https://avatars.githubusercontent.com/u/330324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MichaelKohler", "html_url": "https://github.com/MichaelKohler", "followers_url": "https://api.github.com/users/MichaelKohler/followers", "following_url": "https://api.github.com/users/MichaelKohler/following{/other_user}", "gists_url": "https://api.github.com/users/MichaelKohler/gists{/gist_id}", "starred_url": "https://api.github.com/users/MichaelKohler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MichaelKohler/subscriptions", "organizations_url": "https://api.github.com/users/MichaelKohler/orgs", "repos_url": "https://api.github.com/users/MichaelKohler/repos", "events_url": "https://api.github.com/users/MichaelKohler/events{/privacy}", "received_events_url": "https://api.github.com/users/MichaelKohler/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "07b6d9efd946c195216841ef71150441f870954d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b6d9efd946c195216841ef71150441f870954d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07b6d9efd946c195216841ef71150441f870954d"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "e9a5d0b53e14413c1e619c91d51709ca00106513", "filename": "libffi/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0af2372948f7d3eec3b71e78acdecbaec8589926/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0af2372948f7d3eec3b71e78acdecbaec8589926/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=0af2372948f7d3eec3b71e78acdecbaec8589926", "patch": "@@ -22,6 +22,13 @@\n \t* fficonfig.h.in: Regenerate.\n \t* src/x86/sysv.S (.eh_frame): Use .ascii, .string or error.\n \n+2010-05-05  Michael Kohler <michaelkohler@live.com>\n+\n+\t* src/dlmalloc.c (dlfree): Fix spelling.\n+\t* src/ia64/ffi.c (ffi_prep_cif_machdep): Ditto.\n+\t* configure.ac: Ditto.\n+\t* configure: Rebuilt.\n+\n 2010-04-07  Jakub Jelinek  <jakub@redhat.com>\n \n \t* regex.c (byte_re_match_2_internal): Avoid set but not used"}, {"sha": "e92677a6b60ed77e9deb97b09148ecef67ca4a05", "filename": "libffi/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0af2372948f7d3eec3b71e78acdecbaec8589926/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0af2372948f7d3eec3b71e78acdecbaec8589926/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=0af2372948f7d3eec3b71e78acdecbaec8589926", "patch": "@@ -11320,7 +11320,7 @@ TARGETDIR=\"unknown\"\n case \"$host\" in\n   alpha*-*-*)\n \tTARGET=ALPHA; TARGETDIR=alpha;\n-\t# Support 128-bit long double, changable via command-line switch.\n+\t# Support 128-bit long double, changeable via command-line switch.\n \tHAVE_LONG_DOUBLE='defined(__LONG_DOUBLE_128__)'\n \t;;\n "}, {"sha": "61e746068dd65352d7258f5cd0bce5ac133fc353", "filename": "libffi/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0af2372948f7d3eec3b71e78acdecbaec8589926/libffi%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0af2372948f7d3eec3b71e78acdecbaec8589926/libffi%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.ac?ref=0af2372948f7d3eec3b71e78acdecbaec8589926", "patch": "@@ -43,7 +43,7 @@ TARGETDIR=\"unknown\"\n case \"$host\" in\n   alpha*-*-*)\n \tTARGET=ALPHA; TARGETDIR=alpha;\n-\t# Support 128-bit long double, changable via command-line switch.\n+\t# Support 128-bit long double, changeable via command-line switch.\n \tHAVE_LONG_DOUBLE='defined(__LONG_DOUBLE_128__)'\n \t;;\n "}, {"sha": "2195b73cbdb23b1065c2d93af4b107aea8fadbda", "filename": "libffi/src/dlmalloc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0af2372948f7d3eec3b71e78acdecbaec8589926/libffi%2Fsrc%2Fdlmalloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0af2372948f7d3eec3b71e78acdecbaec8589926/libffi%2Fsrc%2Fdlmalloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fdlmalloc.c?ref=0af2372948f7d3eec3b71e78acdecbaec8589926", "patch": "@@ -4192,7 +4192,7 @@ void* dlmalloc(size_t bytes) {\n \n void dlfree(void* mem) {\n   /*\n-     Consolidate freed chunks with preceeding or succeeding bordering\n+     Consolidate freed chunks with preceding or succeeding bordering\n      free chunks, if they exist, and then place in a bin.  Intermixed\n      with special cases for top, dv, mmapped chunks, and usage errors.\n   */"}, {"sha": "84b144868ed54e79125148639a73177976c3e71d", "filename": "libffi/src/ia64/ffi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0af2372948f7d3eec3b71e78acdecbaec8589926/libffi%2Fsrc%2Fia64%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0af2372948f7d3eec3b71e78acdecbaec8589926/libffi%2Fsrc%2Fia64%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fia64%2Fffi.c?ref=0af2372948f7d3eec3b71e78acdecbaec8589926", "patch": "@@ -225,7 +225,7 @@ ffi_prep_cif_machdep(ffi_cif *cif)\n   int flags;\n \n   /* Adjust cif->bytes to include space for the bits of the ia64_args frame\n-     that preceeds the integer register portion.  The estimate that the \n+     that precedes the integer register portion.  The estimate that the\n      generic bits did for the argument space required is good enough for the\n      integer component.  */\n   cif->bytes += offsetof(struct ia64_args, gp_regs[0]);"}]}