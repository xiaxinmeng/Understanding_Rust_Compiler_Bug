{"sha": "0175478decf822d4b10d8ff850e55751a50bf70a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE3NTQ3OGRlY2Y4MjJkNGIxMGQ4ZmY4NTBlNTU3NTFhNTBiZjcwYQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2010-01-15T01:47:43Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2010-01-15T01:47:43Z"}, "message": "re PR fortran/42684 (ICE when interface operator(xx) available through host and use assoc in module procedure)\n\n2010-01-14 Jerry DeLisle <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/42684\n\t* interface.c (check_interface1): Pass symbol name rather than NULL to\n\tgfc_compare_interfaces.\t(gfc_compare_interfaces): Add assert to\n\ttrap MULL.\n\t* resolve.c (check_generic_tbp_ambiguity): Pass symbol name rather\n\tthan NULL to gfc_compare_interfaces.\n\nFrom-SVN: r155930", "tree": {"sha": "46bace48ee8dd222b909c1c263606a7425cece35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46bace48ee8dd222b909c1c263606a7425cece35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0175478decf822d4b10d8ff850e55751a50bf70a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0175478decf822d4b10d8ff850e55751a50bf70a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0175478decf822d4b10d8ff850e55751a50bf70a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0175478decf822d4b10d8ff850e55751a50bf70a/comments", "author": null, "committer": null, "parents": [{"sha": "ab69346017b152c6ae4c1bcffe87cbf5e33ee263", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab69346017b152c6ae4c1bcffe87cbf5e33ee263", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab69346017b152c6ae4c1bcffe87cbf5e33ee263"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "af85555a2e7ec2325ff319b70a9908f827e75d20", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0175478decf822d4b10d8ff850e55751a50bf70a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0175478decf822d4b10d8ff850e55751a50bf70a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0175478decf822d4b10d8ff850e55751a50bf70a", "patch": "@@ -1,3 +1,12 @@\n+2010-01-14 Jerry DeLisle <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/42684\n+\t* interface.c (check_interface1): Pass symbol name rather than NULL to\n+\tgfc_compare_interfaces.\t(gfc_compare_interfaces): Add assert to\n+\ttrap MULL.\n+\t* resolve.c (check_generic_tbp_ambiguity): Pass symbol name rather\n+\tthan NULL to gfc_compare_interfaces.\n+\n 2010-01-14  Paul Thomas  <pault@gcc.gnu.org>\n \n         PR fortran/41478"}, {"sha": "2a5ece1c465e0eab4c7bfb02c6f4521f3c9b4398", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0175478decf822d4b10d8ff850e55751a50bf70a/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0175478decf822d4b10d8ff850e55751a50bf70a/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=0175478decf822d4b10d8ff850e55751a50bf70a", "patch": "@@ -955,6 +955,8 @@ gfc_compare_interfaces (gfc_symbol *s1, gfc_symbol *s2, const char *name2,\n {\n   gfc_formal_arglist *f1, *f2;\n \n+  gcc_assert (name2 != NULL);\n+\n   if (s1->attr.function && (s2->attr.subroutine\n       || (!s2->attr.function && s2->ts.type == BT_UNKNOWN\n \t  && gfc_get_default_type (name2, s2->ns)->type == BT_UNKNOWN)))\n@@ -1126,7 +1128,7 @@ check_interface1 (gfc_interface *p, gfc_interface *q0,\n \tif (p->sym->name == q->sym->name && p->sym->module == q->sym->module)\n \t  continue;\n \n-\tif (gfc_compare_interfaces (p->sym, q->sym, NULL, generic_flag, 0,\n+\tif (gfc_compare_interfaces (p->sym, q->sym, q->sym->name, generic_flag, 0,\n \t\t\t\t    NULL, 0))\n \t  {\n \t    if (referenced)"}, {"sha": "9212521b2f39654164295637aeb82a7c3dfa9297", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0175478decf822d4b10d8ff850e55751a50bf70a/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0175478decf822d4b10d8ff850e55751a50bf70a/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=0175478decf822d4b10d8ff850e55751a50bf70a", "patch": "@@ -9712,7 +9712,7 @@ check_generic_tbp_ambiguity (gfc_tbp_generic* t1, gfc_tbp_generic* t2,\n     }\n \n   /* Compare the interfaces.  */\n-  if (gfc_compare_interfaces (sym1, sym2, NULL, 1, 0, NULL, 0))\n+  if (gfc_compare_interfaces (sym1, sym2, sym2->name, 1, 0, NULL, 0))\n     {\n       gfc_error (\"'%s' and '%s' for GENERIC '%s' at %L are ambiguous\",\n \t\t sym1->name, sym2->name, generic_name, &where);"}]}