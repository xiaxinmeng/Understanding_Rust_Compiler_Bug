{"sha": "026351f55206fb1127961d7c3ce198d653585b0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI2MzUxZjU1MjA2ZmIxMTI3OTYxZDdjM2NlMTk4ZDY1MzU4NWIwZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-08-26T05:30:51Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-08-26T05:30:51Z"}, "message": "intrinsic_sr_kind.f90: Disable the bits that expect kind=8 to be the largest real kind.\n\n\t* gfortran.fortran-torture/execute/intrinsic_sr_kind.f90: Disable\n        the bits that expect kind=8 to be the largest real kind.\n\nFrom-SVN: r86604", "tree": {"sha": "c7b2945fc428c043d6ab1b9369f2d1fc3653a676", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7b2945fc428c043d6ab1b9369f2d1fc3653a676"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/026351f55206fb1127961d7c3ce198d653585b0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/026351f55206fb1127961d7c3ce198d653585b0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/026351f55206fb1127961d7c3ce198d653585b0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/026351f55206fb1127961d7c3ce198d653585b0e/comments", "author": null, "committer": null, "parents": [{"sha": "7e233208cdc2d479fd020ed0973a067765784e94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e233208cdc2d479fd020ed0973a067765784e94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e233208cdc2d479fd020ed0973a067765784e94"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "2858b420de1f10a9f816927e4b448cf74d7bf5a5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/026351f55206fb1127961d7c3ce198d653585b0e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/026351f55206fb1127961d7c3ce198d653585b0e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=026351f55206fb1127961d7c3ce198d653585b0e", "patch": "@@ -1,3 +1,8 @@\n+2004-08-25  Richard Henderson  <rth@redhat.com>\n+\n+\t* gfortran.fortran-torture/execute/intrinsic_sr_kind.f90: Disable\n+\tthe bits that expect kind=8 to be the largest real kind.\n+\n 2004-08-25  Ziemowit Laski  <zlaski@apple.com>\n \n \t* objc.dg/const-str-3.m: Include <stdlib.h> and <memory.h>."}, {"sha": "c34a6ca5568d462303bfe9d24addafde27c174fe", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/intrinsic_sr_kind.f90", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/026351f55206fb1127961d7c3ce198d653585b0e/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_sr_kind.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/026351f55206fb1127961d7c3ce198d653585b0e/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_sr_kind.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fintrinsic_sr_kind.f90?ref=026351f55206fb1127961d7c3ce198d653585b0e", "patch": "@@ -18,8 +18,9 @@ Program test_sr_kind\n   res = selected_real_kind (r = i8)\n   if (res .ne. 8) call abort\n \n-  res = selected_real_kind (r = (i8 + 1))\n-  if (res .ne. -2) call abort\n+! We can in fact have kinds wider than r8.  How do we want to check?\n+! res = selected_real_kind (r = (i8 + 1))\n+! if (res .ne. -2) call abort\n \n   res = selected_real_kind (p = precision (r4))\n   if (res .ne. 4) call abort\n@@ -30,8 +31,8 @@ Program test_sr_kind\n   res = selected_real_kind (p = precision (r4), r = i8)\n   if (res .ne. 8) call abort\n \n-  res = selected_real_kind (p = precision (r4), r = i8 + 1)\n-  if (res .ne. -2) call abort\n+! res = selected_real_kind (p = precision (r4), r = i8 + 1)\n+! if (res .ne. -2) call abort\n \n   res = selected_real_kind (p = precision (r8))\n   if (res .ne. 8) call abort\n@@ -42,20 +43,20 @@ Program test_sr_kind\n   res = selected_real_kind (p = precision (r8), r = i8)\n   if (res .ne. 8) call abort\n \n-  res = selected_real_kind (p = precision (r8), r = i8 + 1)\n-  if (res .ne. -2) call abort\n+! res = selected_real_kind (p = precision (r8), r = i8 + 1)\n+! if (res .ne. -2) call abort\n \n-  res = selected_real_kind (p = (precision (r8) + 1))\n-  if (res .ne. -1) call abort\n+! res = selected_real_kind (p = (precision (r8) + 1))\n+! if (res .ne. -1) call abort\n \n-  res = selected_real_kind (p = (precision (r8) + 1), r = i4)\n-  if (res .ne. -1) call abort\n+! res = selected_real_kind (p = (precision (r8) + 1), r = i4)\n+! if (res .ne. -1) call abort\n \n-  res = selected_real_kind (p = (precision (r8) + 1), r = i8)\n-  if (res .ne. -1) call abort\n+! res = selected_real_kind (p = (precision (r8) + 1), r = i8)\n+! if (res .ne. -1) call abort\n \n-  res = selected_real_kind (p = (precision (r8) + 1), r = i8 + 1)\n-  if (res .ne. -3) call abort\n+! res = selected_real_kind (p = (precision (r8) + 1), r = i8 + 1)\n+! if (res .ne. -3) call abort\n \n end\n "}]}