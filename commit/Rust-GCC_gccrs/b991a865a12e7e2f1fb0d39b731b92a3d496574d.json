{"sha": "b991a865a12e7e2f1fb0d39b731b92a3d496574d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk5MWE4NjVhMTJlN2UyZjFmYjBkMzliNzMxYjkyYTNkNDk2NTc0ZA==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2002-10-18T00:30:23Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2002-10-18T00:30:23Z"}, "message": "rs6000.h (HARD_REGNO_MODE_OK): Allow arbitrary modes in CTR/LR/MQ.\n\n\t* config/rs6000/rs6000.h (HARD_REGNO_MODE_OK): Allow arbitrary modes\n\tin CTR/LR/MQ.\n\t* config/rs6000/rs6000.md (movcc_internal1): Support CCmode moves\n\tto/from CTR/LR/MQ.\n\t(movsf_hardfloat): Support SFmode moves to/from CTR/LR/MQ.\n\t(movsf_softfloat): Likewise.\n\nFrom-SVN: r58267", "tree": {"sha": "92e2a606dbbb7101dd5df5f04607a7aeeeccda82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92e2a606dbbb7101dd5df5f04607a7aeeeccda82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b991a865a12e7e2f1fb0d39b731b92a3d496574d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b991a865a12e7e2f1fb0d39b731b92a3d496574d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b991a865a12e7e2f1fb0d39b731b92a3d496574d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b991a865a12e7e2f1fb0d39b731b92a3d496574d/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "768bf0ab4d7bd8c4bb8a6d70290ea890517d4ac9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/768bf0ab4d7bd8c4bb8a6d70290ea890517d4ac9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/768bf0ab4d7bd8c4bb8a6d70290ea890517d4ac9"}], "stats": {"total": 45, "additions": 31, "deletions": 14}, "files": [{"sha": "5ec9c6f1ebb54f78b9720deb75e4f6b34c99b8b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b991a865a12e7e2f1fb0d39b731b92a3d496574d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b991a865a12e7e2f1fb0d39b731b92a3d496574d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b991a865a12e7e2f1fb0d39b731b92a3d496574d", "patch": "@@ -1,3 +1,12 @@\n+2002-10-17  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* config/rs6000/rs6000.h (HARD_REGNO_MODE_OK): Allow arbitrary modes\n+\tin CTR/LR/MQ.\n+\t* config/rs6000/rs6000.md (movcc_internal1): Support CCmode moves\n+\tto/from CTR/LR/MQ.\n+\t(movsf_hardfloat): Support SFmode moves to/from CTR/LR/MQ.\n+\t(movsf_softfloat): Likewise.\n+\n 2002-10-17  Janis Johnson  <janis187@us.ibm.com>\n \n \t* Makefile.in (site.exp): Add ALT_CXX_UNDER_TEST and COMPAT_OPTIONS."}, {"sha": "40731b8126a39815f1d56a60b487375c6866fa5e", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b991a865a12e7e2f1fb0d39b731b92a3d496574d/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b991a865a12e7e2f1fb0d39b731b92a3d496574d/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=b991a865a12e7e2f1fb0d39b731b92a3d496574d", "patch": "@@ -903,8 +903,7 @@ extern int rs6000_default_long_calls;\n    : SPE_SIMD_REGNO_P (REGNO) && TARGET_SPE && SPE_VECTOR_MODE (MODE) ? 1 \\\n    : CR_REGNO_P (REGNO) ? GET_MODE_CLASS (MODE) == MODE_CC\t\t\\\n    : XER_REGNO_P (REGNO) ? (MODE) == PSImode\t\t\t\t\\\n-   : ! INT_REGNO_P (REGNO) ? (GET_MODE_CLASS (MODE) == MODE_INT\t\t\\\n-\t\t\t      && GET_MODE_SIZE (MODE) <= UNITS_PER_WORD) \\\n+   : ! INT_REGNO_P (REGNO) ? GET_MODE_SIZE (MODE) <= UNITS_PER_WORD\t\\\n    : 1)\n \n /* Value is 1 if it is a good idea to tie two pseudo registers"}, {"sha": "66ceacf0274d0fd7809dffef845c4cf5906d151f", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 21, "deletions": 12, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b991a865a12e7e2f1fb0d39b731b92a3d496574d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b991a865a12e7e2f1fb0d39b731b92a3d496574d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=b991a865a12e7e2f1fb0d39b731b92a3d496574d", "patch": "@@ -8349,8 +8349,8 @@\n   \"\")\n \n (define_insn \"*movcc_internal1\"\n-  [(set (match_operand:CC 0 \"nonimmediate_operand\" \"=y,x,y,r,r,r,r,m\")\n-\t(match_operand:CC 1 \"nonimmediate_operand\" \"y,r,r,x,y,r,m,r\"))]\n+  [(set (match_operand:CC 0 \"nonimmediate_operand\" \"=y,x,y,r,r,r,cl,q,r,r,m\")\n+\t(match_operand:CC 1 \"nonimmediate_operand\" \"y,r,r,x,y,r,r,r,h,m,r\"))]\n   \"register_operand (operands[0], CCmode)\n    || register_operand (operands[1], CCmode)\"\n   \"@\n@@ -8360,10 +8360,13 @@\n    mfcr %0\n    mfcr %0\\;{rlinm|rlwinm} %0,%0,%f1,0xf0000000\n    mr %0,%1\n+   mt%0 %1\n+   mt%0 %1\n+   mf%1 %0\n    {l%U1%X1|lwz%U1%X1} %0,%1\n    {st%U0%U1|stw%U0%U1} %1,%0\"\n-  [(set_attr \"type\" \"cr_logical,cr_logical,cr_logical,cr_logical,cr_logical,*,load,store\")\n-   (set_attr \"length\" \"*,*,12,*,8,*,*,*\")])\n+  [(set_attr \"type\" \"cr_logical,cr_logical,cr_logical,cr_logical,cr_logical,*,*,mtjmpr,*,load,store\")\n+   (set_attr \"length\" \"4,4,12,4,8,4,4,4,4,4,4\")])\n \f\n ;; For floating-point, we normally deal with the floating-point registers\n ;; unless -msoft-float is used.  The sole exception is that parameter passing\n@@ -8402,8 +8405,8 @@\n }\")\n \n (define_insn \"*movsf_hardfloat\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=!r,!r,m,f,f,m,!r,!r\")\n-\t(match_operand:SF 1 \"input_operand\" \"r,m,r,f,m,f,G,Fn\"))]\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=!r,!r,m,f,f,m,!cl,!q,!r,!r,!r\")\n+\t(match_operand:SF 1 \"input_operand\" \"r,m,r,f,m,f,r,r,h,G,Fn\"))]\n   \"(gpc_reg_operand (operands[0], SFmode)\n    || gpc_reg_operand (operands[1], SFmode))\n    && (TARGET_HARD_FLOAT && TARGET_FPRS)\"\n@@ -8414,28 +8417,34 @@\n    fmr %0,%1\n    lfs%U1%X1 %0,%1\n    stfs%U0%X0 %1,%0\n+   mt%0 %1\n+   mt%0 %1\n+   mf%1 %0\n    #\n    #\"\n-  [(set_attr \"type\" \"*,load,store,fp,fpload,fpstore,*,*\")\n-   (set_attr \"length\" \"4,4,4,4,4,4,4,8\")])\n+  [(set_attr \"type\" \"*,load,store,fp,fpload,fpstore,*,mtjmpr,*,*,*\")\n+   (set_attr \"length\" \"4,4,4,4,4,4,4,4,4,4,8\")])\n \n (define_insn \"*movsf_softfloat\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=r,r,m,r,r,r,r,r\")\n-\t(match_operand:SF 1 \"input_operand\" \"r,m,r,I,L,R,G,Fn\"))]\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=r,cl,q,r,r,m,r,r,r,r,r\")\n+\t(match_operand:SF 1 \"input_operand\" \"r,r,r,h,m,r,I,L,R,G,Fn\"))]\n   \"(gpc_reg_operand (operands[0], SFmode)\n    || gpc_reg_operand (operands[1], SFmode))\n    && (TARGET_SOFT_FLOAT || !TARGET_FPRS)\"\n   \"@\n    mr %0,%1\n+   mt%0 %1\n+   mt%0 %1\n+   mf%1 %0\n    {l%U1%X1|lwz%U1%X1} %0,%1\n    {st%U0%X0|stw%U0%X0} %1,%0\n    {lil|li} %0,%1\n    {liu|lis} %0,%v1\n    {cal|la} %0,%a1\n    #\n    #\"\n-  [(set_attr \"type\" \"*,load,store,*,*,*,*,*\")\n-   (set_attr \"length\" \"4,4,4,4,4,4,4,8\")])\n+  [(set_attr \"type\" \"*,mtjmpr,*,*,load,store,*,*,*,*,*\")\n+   (set_attr \"length\" \"4,4,4,4,4,4,4,4,4,4,8\")])\n \n \f\n (define_expand \"movdf\""}]}