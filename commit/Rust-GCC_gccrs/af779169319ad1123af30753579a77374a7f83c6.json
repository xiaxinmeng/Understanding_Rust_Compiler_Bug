{"sha": "af779169319ad1123af30753579a77374a7f83c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY3NzkxNjkzMTlhZDExMjNhZjMwNzUzNTc5YTc3Mzc0YTdmODNjNg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-04-28T14:30:07Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-04-28T14:30:07Z"}, "message": "char.cc: Remove bom usage.\n\n\n2003-04-28  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/22_locale/codecvt/unicode/char.cc: Remove bom usage.\n\t* testsuite/22_locale/codecvt/unicode/wchar_t.cc: Same.\n\nFrom-SVN: r66170", "tree": {"sha": "24b916ac8690b587b509591cffa06a5bffa10275", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24b916ac8690b587b509591cffa06a5bffa10275"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af779169319ad1123af30753579a77374a7f83c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af779169319ad1123af30753579a77374a7f83c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af779169319ad1123af30753579a77374a7f83c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af779169319ad1123af30753579a77374a7f83c6/comments", "author": null, "committer": null, "parents": [{"sha": "e31603c46cf2d4fc62993fe9f626d8004c2d903a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e31603c46cf2d4fc62993fe9f626d8004c2d903a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e31603c46cf2d4fc62993fe9f626d8004c2d903a"}], "stats": {"total": 43, "additions": 21, "deletions": 22}, "files": [{"sha": "597c68f300f7e2182e0429f3f1920b726a0a5618", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af779169319ad1123af30753579a77374a7f83c6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af779169319ad1123af30753579a77374a7f83c6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=af779169319ad1123af30753579a77374a7f83c6", "patch": "@@ -1,3 +1,8 @@\n+2003-04-28  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/22_locale/codecvt/unicode/char.cc: Remove bom usage.\n+\t* testsuite/22_locale/codecvt/unicode/wchar_t.cc: Same.\n+\t\n 2003-04-27  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/std/std_fstream.h (basic_filebuf): _M_pback_destroy to"}, {"sha": "76f67b70aa3e8a7ea5b00521cca475ee1312ffb0", "filename": "libstdc++-v3/testsuite/22_locale/codecvt/unicode/char.cc", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af779169319ad1123af30753579a77374a7f83c6/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Funicode%2Fchar.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af779169319ad1123af30753579a77374a7f83c6/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Funicode%2Fchar.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Funicode%2Fchar.cc?ref=af779169319ad1123af30753579a77374a7f83c6", "patch": "@@ -1,6 +1,6 @@\n // 2000-08-22 Benjamin Kosnik <bkoz@cygnus.com>\n \n-// Copyright (C) 2000, 2001, 2002 Free Software Foundation\n+// Copyright (C) 2000, 2001, 2002, 2003 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -19,12 +19,9 @@\n // USA.\n \n // 22.2.1.5 - Template class codecvt [lib.locale.codecvt]\n-\n #include <locale>\n #include <testsuite_hooks.h>\n \n-\n-\n #ifdef _GLIBCPP_USE___ENC_TRAITS\n \n // Need some char_traits specializations for this to work.\n@@ -156,7 +153,8 @@ void test01()\n   const unicode_codecvt&\tcvt = use_facet<unicode_codecvt>(loc); \n \n   // in\n-  unicode_codecvt::state_type state01(\"UCS-2BE\", \"ISO-8859-15\", 0xfeff, 0);\n+  //  unicode_codecvt::state_type state01(\"UCS-2BE\", \"ISO-8859-15\", 0xfeff, 0);\n+  unicode_codecvt::state_type state01(\"UCS-2BE\", \"ISO-8859-15\", 0, 0);\n   initialize_state(state01);\n   // internal encoding is bigger because of bom\n   result r1 = cvt.in(state01, e_lit, e_lit + size, efrom_next, \n@@ -167,7 +165,7 @@ void test01()\n   VERIFY( ito_next == i_arr + size );\n \n   // out\n-  unicode_codecvt::state_type state02(\"UCS-2BE\", \"ISO-8859-15\", 0xfeff, 0);\n+  unicode_codecvt::state_type state02(\"UCS-2BE\", \"ISO-8859-15\", 0, 0);\n   initialize_state(state02);  \n   result r2 = cvt.out(state02, i_lit, i_lit + size, ifrom_next, \n \t\t       e_arr, e_arr + size, eto_next);\n@@ -178,7 +176,7 @@ void test01()\n \n   // unshift\n   ext_traits::copy(e_arr, e_lit, size);\n-  unicode_codecvt::state_type state03(\"UCS-2BE\", \"ISO-8859-15\", 0xfeff, 0);\n+  unicode_codecvt::state_type state03(\"UCS-2BE\", \"ISO-8859-15\", 0, 0);\n   initialize_state(state03);\n   result r3 = cvt.unshift(state03, e_arr, e_arr + size, eto_next);\n   VERIFY( r3 == codecvt_base::noconv );\n@@ -190,7 +188,7 @@ void test01()\n \n   VERIFY( !cvt.always_noconv() );\n \n-  unicode_codecvt::state_type state04(\"UCS-2BE\", \"ISO-8859-15\", 0xfeff, 0);\n+  unicode_codecvt::state_type state04(\"UCS-2BE\", \"ISO-8859-15\", 0, 0);\n   initialize_state(state04);\n   int j = cvt.length(state03, e_lit, e_lit + size, 5);\n   VERIFY( j == 5 );\n@@ -244,7 +242,7 @@ void test02()\n   const unicode_codecvt&\tcvt = use_facet<unicode_codecvt>(loc); \n \n   // in\n-  unicode_codecvt::state_type state01(\"UCS-2LE\", \"ISO-8859-15\", 0xfeff, 0);\n+  unicode_codecvt::state_type state01(\"UCS-2LE\", \"ISO-8859-15\", 0, 0);\n   initialize_state(state01);\n   // internal encoding is bigger because of bom\n   result r1 = cvt.in(state01, e_lit, e_lit + size, efrom_next, \n@@ -255,7 +253,7 @@ void test02()\n   VERIFY( ito_next == i_arr + size );\n \n   // out\n-  unicode_codecvt::state_type state02(\"UCS-2LE\", \"ISO-8859-15\", 0xfeff, 0);\n+  unicode_codecvt::state_type state02(\"UCS-2LE\", \"ISO-8859-15\", 0, 0);\n   initialize_state(state02);  \n   result r2 = cvt.out(state02, i_lit, i_lit + size, ifrom_next, \n \t\t       e_arr, e_arr + size, eto_next);\n@@ -266,7 +264,7 @@ void test02()\n \n   // unshift\n   ext_traits::copy(e_arr, e_lit, size);\n-  unicode_codecvt::state_type state03(\"UCS-2LE\", \"ISO-8859-15\", 0xfeff, 0);\n+  unicode_codecvt::state_type state03(\"UCS-2LE\", \"ISO-8859-15\", 0, 0);\n   initialize_state(state03);\n   result r3 = cvt.unshift(state03, e_arr, e_arr + size, eto_next);\n   VERIFY( r3 == codecvt_base::noconv );\n@@ -278,7 +276,7 @@ void test02()\n \n   VERIFY( !cvt.always_noconv() );\n \n-  unicode_codecvt::state_type state04(\"UCS-2LE\", \"ISO-8859-15\", 0xfeff, 0);\n+  unicode_codecvt::state_type state04(\"UCS-2LE\", \"ISO-8859-15\", 0, 0);\n   initialize_state(state04);\n   int j = cvt.length(state03, e_lit, e_lit + size, 5);\n   VERIFY( j == 5 );\n@@ -298,6 +296,5 @@ int main ()\n   test01();\n   test02();\n #endif \n-\n   return 0;\n }"}, {"sha": "a03ce95983ff4b53d92572aab1f77001aa0851f9", "filename": "libstdc++-v3/testsuite/22_locale/codecvt/unicode/wchar_t.cc", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af779169319ad1123af30753579a77374a7f83c6/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Funicode%2Fwchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af779169319ad1123af30753579a77374a7f83c6/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Funicode%2Fwchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Funicode%2Fwchar_t.cc?ref=af779169319ad1123af30753579a77374a7f83c6", "patch": "@@ -1,6 +1,6 @@\n // 2000-08-23 Benjamin Kosnik <bkoz@cygnus.com>\n \n-// Copyright (C) 2000, 2001, 2002 Free Software Foundation\n+// Copyright (C) 2000, 2001, 2002, 2003 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -24,7 +24,6 @@\n #include <testsuite_hooks.h>\n \n #ifdef _GLIBCPP_USE___ENC_TRAITS\n-#ifdef _GLIBCPP_USE_WCHAR_T\n \n // Need some char_traits specializations for this to work.\n typedef unsigned short\t\t\tunicode_t;\n@@ -142,7 +141,8 @@ void test01()\n   const unicode_codecvt&\tcvt = use_facet<unicode_codecvt>(loc); \n \n   // in\n-  unicode_codecvt::state_type state01(\"UCS-2BE\", \"UCS-4BE\", 0xfeff, 0);\n+  //  unicode_codecvt::state_type state01(\"UCS-2BE\", \"UCS-4BE\", 0xfeff, 0);\n+  unicode_codecvt::state_type state01(\"UCS-2BE\", \"UCS-4BE\", 0, 0);\n   initialize_state(state01);\n   result r1 = cvt.in(state01, e_lit, e_lit + size, efrom_next, \n \t\t     i_arr, i_arr + size + 1, ito_next);\n@@ -152,7 +152,7 @@ void test01()\n   VERIFY( ito_next == i_arr + size );\n \n   // out\n-  unicode_codecvt::state_type state02(\"UCS-2BE\", \"UCS-4BE\", 0xfeff, 0);\n+  unicode_codecvt::state_type state02(\"UCS-2BE\", \"UCS-4BE\", 0, 0);\n   initialize_state(state02);  \n   result r2 = cvt.out(state02, i_lit, i_lit + size, ifrom_next, \n \t\t       e_arr, e_arr + size, eto_next);\n@@ -163,7 +163,7 @@ void test01()\n \n   // unshift\n   ext_traits::copy(e_arr, e_lit, size);\n-  unicode_codecvt::state_type state03(\"UCS-2BE\", \"UCS-4BE\", 0xfeff, 0);\n+  unicode_codecvt::state_type state03(\"UCS-2BE\", \"UCS-4BE\", 0, 0);\n   initialize_state(state03);\n   result r3 = cvt.unshift(state03, e_arr, e_arr + size, eto_next);\n   VERIFY( r3 == codecvt_base::noconv );\n@@ -175,7 +175,7 @@ void test01()\n \n   VERIFY( !cvt.always_noconv() );\n \n-  unicode_codecvt::state_type state04(\"UCS-2BE\", \"UCS-4BE\", 0xfeff, 0);\n+  unicode_codecvt::state_type state04(\"UCS-2BE\", \"UCS-4BE\", 0, 0);\n   initialize_state(state04);\n   int j = cvt.length(state03, e_lit, e_lit + size, 5);\n   VERIFY( j == 5 );\n@@ -186,15 +186,12 @@ void test01()\n   delete [] e_arr;\n   delete [] i_arr;\n }\n-#endif // _GLIBCPP_USE_WCHAR_T\n #endif // _GLIBCPP_USE___ENC_TRAITS\n \n int main ()\n {\n #ifdef _GLIBCPP_USE___ENC_TRAITS\n-#ifdef _GLIBCPP_USE_WCHAR_T\n   test01();\n-#endif\n #endif \n   return 0;\n }"}]}