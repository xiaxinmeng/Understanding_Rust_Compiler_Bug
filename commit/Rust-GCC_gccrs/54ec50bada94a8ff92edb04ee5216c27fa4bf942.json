{"sha": "54ec50bada94a8ff92edb04ee5216c27fa4bf942", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRlYzUwYmFkYTk0YThmZjkyZWRiMDRlZTUyMTZjMjdmYTRiZjk0Mg==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-07-27T11:24:34Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-07-28T11:13:06Z"}, "message": "d: Wrong evaluation order of binary expressions (PR101640)\n\nThe use of fold_build2 can in some cases swap the order of its operands\nif that is the more optimal thing to do.  However this breaks semantic\nguarantee of left-to-right evaluation in D.\n\n\tPR d/101640\n\ngcc/d/ChangeLog:\n\n\t* expr.cc (binary_op): Use build2 instead of fold_build2.\n\ngcc/testsuite/ChangeLog:\n\n\t* gdc.dg/pr96429.d: Update test.\n\t* gdc.dg/pr101640.d: New test.", "tree": {"sha": "41d105545a3cacb3ca44c1487c20ef03a29d640c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41d105545a3cacb3ca44c1487c20ef03a29d640c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54ec50bada94a8ff92edb04ee5216c27fa4bf942", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54ec50bada94a8ff92edb04ee5216c27fa4bf942", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54ec50bada94a8ff92edb04ee5216c27fa4bf942", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54ec50bada94a8ff92edb04ee5216c27fa4bf942/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c936c39f86c74b3bfc6831f694b3165296c99dc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c936c39f86c74b3bfc6831f694b3165296c99dc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c936c39f86c74b3bfc6831f694b3165296c99dc0"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "b78778eb8ef0649db54924f67156391e4ae28d22", "filename": "gcc/d/expr.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ec50bada94a8ff92edb04ee5216c27fa4bf942/gcc%2Fd%2Fexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ec50bada94a8ff92edb04ee5216c27fa4bf942/gcc%2Fd%2Fexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fexpr.cc?ref=54ec50bada94a8ff92edb04ee5216c27fa4bf942", "patch": "@@ -157,7 +157,7 @@ binary_op (tree_code code, tree type, tree arg0, tree arg1)\n \t  eptype = type;\n \t}\n \n-      ret = fold_build2 (code, eptype, arg0, arg1);\n+      ret = build2 (code, eptype, arg0, arg1);\n     }\n \n   return d_convert (type, ret);"}, {"sha": "68de40885127e5edbd453d7b4495d1d7cf0ef9ac", "filename": "gcc/testsuite/gdc.dg/pr101640.d", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ec50bada94a8ff92edb04ee5216c27fa4bf942/gcc%2Ftestsuite%2Fgdc.dg%2Fpr101640.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ec50bada94a8ff92edb04ee5216c27fa4bf942/gcc%2Ftestsuite%2Fgdc.dg%2Fpr101640.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fpr101640.d?ref=54ec50bada94a8ff92edb04ee5216c27fa4bf942", "patch": "@@ -0,0 +1,11 @@\n+// https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101640\n+// { dg-do compile }\n+// { dg-options \"-fdump-tree-original\" }\n+\n+int fun101640(ref int);\n+\n+int test101640(int val)\n+{\n+    // { dg-final { scan-tree-dump \"= val \\\\\\+ fun101640 \\\\\\(\\\\\\(int &\\\\\\) &val\\\\\\);\" \"original\" } }\n+    return val + fun101640(val);\n+}"}, {"sha": "9940a03e0ecbfc11e85aa5ccbebf7799fc3c5f8a", "filename": "gcc/testsuite/gdc.dg/pr96429.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54ec50bada94a8ff92edb04ee5216c27fa4bf942/gcc%2Ftestsuite%2Fgdc.dg%2Fpr96429.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54ec50bada94a8ff92edb04ee5216c27fa4bf942/gcc%2Ftestsuite%2Fgdc.dg%2Fpr96429.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fpr96429.d?ref=54ec50bada94a8ff92edb04ee5216c27fa4bf942", "patch": "@@ -3,7 +3,7 @@\n // { dg-options \"-fdump-tree-original\" }\n ptrdiff_t subbyte(byte* bp1, byte* bp2)\n {\n-    // { dg-final { scan-tree-dump \"bp1 - bp2;\" \"original\" } }\n+    // { dg-final { scan-tree-dump \"\\\\\\(bp1 - bp2\\\\\\) /\\\\\\[ex\\\\\\] 1;\" \"original\" } }\n     return bp1 - bp2;\n }\n "}]}