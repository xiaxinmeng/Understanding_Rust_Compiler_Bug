{"sha": "93bfadf3a1db7d73e9ca4a4a3d40f7f81ea16d39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNiZmFkZjNhMWRiN2Q3M2U5Y2E0YTRhM2Q0MGY3ZjgxZWExNmQzOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-14T10:38:11Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-14T17:24:10Z"}, "message": "c-family: Add fix-it suggestions for more <stdlib.h> names [PR101052]\n\n\tPR c++/101052\n\ngcc/c-family/ChangeLog:\n\n\t* known-headers.cc (get_stdlib_header_for_name): Add known\n\theaders for EXIT_FAILURE, EXIT_SUCCESS, abort, atexit, calloc,\n\texit, and getenv.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/spellcheck-stdlib.C: Add checks for <cstdlib> names.\n\t* gcc.dg/spellcheck-stdlib.c: Likewise.", "tree": {"sha": "6cc8a3d4594065f9ed349dc780d51aff4ed46461", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cc8a3d4594065f9ed349dc780d51aff4ed46461"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93bfadf3a1db7d73e9ca4a4a3d40f7f81ea16d39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93bfadf3a1db7d73e9ca4a4a3d40f7f81ea16d39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93bfadf3a1db7d73e9ca4a4a3d40f7f81ea16d39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93bfadf3a1db7d73e9ca4a4a3d40f7f81ea16d39/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "046a3beb1673bf4a61c131373b6a5e84158e92bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/046a3beb1673bf4a61c131373b6a5e84158e92bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/046a3beb1673bf4a61c131373b6a5e84158e92bf"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "a3912468a8d95cc341da26633d964e42446cfe8c", "filename": "gcc/c-family/known-headers.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93bfadf3a1db7d73e9ca4a4a3d40f7f81ea16d39/gcc%2Fc-family%2Fknown-headers.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93bfadf3a1db7d73e9ca4a4a3d40f7f81ea16d39/gcc%2Fc-family%2Fknown-headers.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fknown-headers.cc?ref=93bfadf3a1db7d73e9ca4a4a3d40f7f81ea16d39", "patch": "@@ -162,7 +162,14 @@ get_stdlib_header_for_name (const char *name, enum stdlib lib)\n     {\"stdout\", {\"<stdio.h>\", \"<cstdio>\"} },\n \n     /* <stdlib.h> and <cstdlib>.  */\n+    {\"EXIT_FAILURE\", {\"<stdlib.h>\", \"<cstdlib>\"} },\n+    {\"EXIT_SUCCESS\", {\"<stdlib.h>\", \"<cstdlib>\"} },\n+    {\"abort\", {\"<stdlib.h>\", \"<cstdlib>\"} },\n+    {\"atexit\", {\"<stdlib.h>\", \"<cstdlib>\"} },\n+    {\"calloc\", {\"<stdlib.h>\", \"<cstdlib>\"} },\n+    {\"exit\", {\"<stdlib.h>\", \"<cstdlib>\"} },\n     {\"free\", {\"<stdlib.h>\", \"<cstdlib>\"} },\n+    {\"getenv\", {\"<stdlib.h>\", \"<cstdlib>\"} },\n     {\"malloc\", {\"<stdlib.h>\", \"<cstdlib>\"} },\n     {\"realloc\", {\"<stdlib.h>\", \"<cstdlib>\"} },\n "}, {"sha": "87736b25e54bdbe0064f8ad32902f1b010aa524e", "filename": "gcc/testsuite/g++.dg/spellcheck-stdlib.C", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93bfadf3a1db7d73e9ca4a4a3d40f7f81ea16d39/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspellcheck-stdlib.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93bfadf3a1db7d73e9ca4a4a3d40f7f81ea16d39/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspellcheck-stdlib.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspellcheck-stdlib.C?ref=93bfadf3a1db7d73e9ca4a4a3d40f7f81ea16d39", "patch": "@@ -138,6 +138,24 @@ void test_cstdlib (void *q)\n   // { dg-message \"'#include <cstdlib>'\" \"\" { target *-*-* } .-1 }\n   q = realloc (q, 1024); // { dg-error \"was not declared\" }\n   // { dg-message \"'#include <cstdlib>'\" \"\" { target *-*-* } .-1 }\n+  q = calloc (8, 8); // { dg-error \"was not declared\" }\n+  // { dg-message \"'#include <cstdlib>'\" \"\" { target *-*-* } .-1 }\n+\n+  void callback ();\n+  atexit (callback); // { dg-error \"was not declared\" }\n+  // { dg-message \"'#include <cstdlib>'\" \"\" { target *-*-* } .-1 }\n+  int i;\n+  i = EXIT_SUCCESS; // { dg-error \"was not declared\" }\n+  // { dg-message \"'#include <cstdlib>'\" \"\" { target *-*-* } .-1 }\n+  i = EXIT_FAILURE; // { dg-error \"was not declared\" }\n+  // { dg-message \"'#include <cstdlib>'\" \"\" { target *-*-* } .-1 }\n+  exit (i); // { dg-error \"was not declared\" }\n+  // { dg-message \"'#include <cstdlib>'\" \"\" { target *-*-* } .-1 }\n+  abort (); // { dg-error \"was not declared\" }\n+  // { dg-message \"'#include <cstdlib>'\" \"\" { target *-*-* } .-1 }\n+\n+  getenv (\"foo\"); // { dg-error \"was not declared\" }\n+  // { dg-message \"'#include <cstdlib>'\" \"\" { target *-*-* } .-1 }\n }\n \n /* Verify that we don't offer suggestions to stdlib globals names when"}, {"sha": "7297a92368f648d98bc6e35a60dfd688b9b4937f", "filename": "gcc/testsuite/gcc.dg/spellcheck-stdlib.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93bfadf3a1db7d73e9ca4a4a3d40f7f81ea16d39/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-stdlib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93bfadf3a1db7d73e9ca4a4a3d40f7f81ea16d39/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-stdlib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-stdlib.c?ref=93bfadf3a1db7d73e9ca4a4a3d40f7f81ea16d39", "patch": "@@ -38,6 +38,16 @@ void test_stdio_h (void)\n   /* { dg-message \"'EOF' is defined in header '<stdio.h>'; did you forget to '#include <stdio.h>'?\" \"\" { target *-*-* } .-1 } */\n }\n \n+/* Missing <stdlib.h>.  */\n+\n+void test_stdlib (int i)\n+{\n+  i = EXIT_SUCCESS; /* { dg-error \"'EXIT_SUCCESS' undeclared\" } */\n+  /* { dg-message \"'EXIT_SUCCESS' is defined in header '<stdlib.h>'; did you forget to '#include <stdlib.h>'?\" \"\" { target *-*-* } .-1 } */\n+  i = EXIT_FAILURE; /* { dg-error \"'EXIT_FAILURE' undeclared\" } */\n+  /* { dg-message \"'EXIT_FAILURE' is defined in header '<stdlib.h>'; did you forget to '#include <stdlib.h>'?\" \"\" { target *-*-* } .-1 } */\n+}\n+\n /* Missing <errno.h>.  */\n \n int test_errno_h (void)"}]}