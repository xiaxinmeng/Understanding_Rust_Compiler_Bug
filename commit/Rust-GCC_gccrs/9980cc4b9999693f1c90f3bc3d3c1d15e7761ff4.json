{"sha": "9980cc4b9999693f1c90f3bc3d3c1d15e7761ff4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk4MGNjNGI5OTk5NjkzZjFjOTBmM2JjM2QzYzFkMTVlNzc2MWZmNA==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2004-02-26T05:30:01Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2004-02-26T05:30:01Z"}, "message": "parse.y (build_assertion): If we're in an inner class, create the class$ helper routine in the outer class.\n\n\n\t* parse.y (build_assertion):  If we're in an inner class, create the\n\tclass$ helper routine in the outer class.\n\nFrom-SVN: r78489", "tree": {"sha": "2a8fa5f5fbbde9d8a5a8bd24377fd97312f098ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a8fa5f5fbbde9d8a5a8bd24377fd97312f098ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9980cc4b9999693f1c90f3bc3d3c1d15e7761ff4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9980cc4b9999693f1c90f3bc3d3c1d15e7761ff4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9980cc4b9999693f1c90f3bc3d3c1d15e7761ff4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9980cc4b9999693f1c90f3bc3d3c1d15e7761ff4/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e15fd46ada9f56060f3fdb780035ff46e561f703", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e15fd46ada9f56060f3fdb780035ff46e561f703", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e15fd46ada9f56060f3fdb780035ff46e561f703"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "a1a368508ce84bd44acfdb9cff0acce8b936c863", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9980cc4b9999693f1c90f3bc3d3c1d15e7761ff4/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9980cc4b9999693f1c90f3bc3d3c1d15e7761ff4/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=9980cc4b9999693f1c90f3bc3d3c1d15e7761ff4", "patch": "@@ -1,3 +1,8 @@\n+2004-02-25  Per Bothner  <per@bothner.com>\n+\n+\t* parse.y (build_assertion):  If we're in an inner class, create the\n+\tclass$ helper routine in the outer class.\n+\n 2004-02-19  Richard Henderson  <rth@redhat.com>\n \n \t* parse.y (switch_label): Use make_node for DEFAULT_EXPR."}, {"sha": "8e419a55d776b192c69a90da5a854e64f7f1d3e1", "filename": "gcc/java/parse.y", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9980cc4b9999693f1c90f3bc3d3c1d15e7761ff4/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9980cc4b9999693f1c90f3bc3d3c1d15e7761ff4/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=9980cc4b9999693f1c90f3bc3d3c1d15e7761ff4", "patch": "@@ -15301,6 +15301,10 @@ build_assertion (int location, tree condition, tree value)\n     {\n       tree field, classdollar, id, call;\n       tree class_type = TREE_TYPE (klass);\n+      tree outer_class = klass;\n+      while (INNER_CLASS_DECL_P (outer_class))\n+\touter_class = DECL_CONTEXT (outer_class);\n+      outer_class = TREE_TYPE (outer_class);\n \n       field = add_field (class_type,\n \t\t\t get_identifier (\"$assertionsDisabled\"),\n@@ -15309,9 +15313,10 @@ build_assertion (int location, tree condition, tree value)\n       MAYBE_CREATE_VAR_LANG_DECL_SPECIFIC (field);\n       FIELD_SYNTHETIC (field) = 1;\n \n-      if (!TYPE_DOT_CLASS (class_type))\n-\tbuild_dot_class_method (class_type);\n-      classdollar = build_dot_class_method_invocation (class_type, class_type);\n+      if (!TYPE_DOT_CLASS (outer_class))\n+\tbuild_dot_class_method (outer_class);\n+      classdollar\n+\t= build_dot_class_method_invocation (outer_class, class_type);\n \n       /* Call CLASS.desiredAssertionStatus().  */\n       id = build_wfl_node (get_identifier (\"desiredAssertionStatus\"));"}]}