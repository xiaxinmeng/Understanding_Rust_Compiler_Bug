{"sha": "423df44a090846b9c59650efb11745f07914f1d5", "node_id": "C_kwDOANBUbNoAKDQyM2RmNDRhMDkwODQ2YjljNTk2NTBlZmIxMTc0NWYwNzkxNGYxZDU", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-22T14:22:50Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-22T14:26:05Z"}, "message": "Update selftest such that [-Inf, +Inf] is always VARYING for -ffinite-math-only.\n\n[-Inf, +Inf] +-NAN gets normalized as VARYING.  There is a test that\ndrops the NAN possibility, and tests that the range is no longer\nVARYING but [-Inf, +Inf].  However, for -ffinite-math-only targets\n(Vax, RX, etc) the range would still be VARYING because the VARYING\nrange never had a NAN to begin with.  This fixes the test.\n\nI have a precommit hook that does self-tests with\n-fno-finite-math-only, -ffinite-math-only, and -ffast-math as a sanity\ncheck, but my precommit hook last week was disabled because there was\na tree-ssa.exp in mainline failing which was throwing off my scripts.\nMy apologies.\n\ngcc/ChangeLog:\n\n\t* value-range.cc (range_tests_floats): Predicate [-Inf, +Inf] test\n\twith !flag_finite_math_only.", "tree": {"sha": "cf9f2b56a3cf8c7ba634065d0ca52787d04512c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf9f2b56a3cf8c7ba634065d0ca52787d04512c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/423df44a090846b9c59650efb11745f07914f1d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/423df44a090846b9c59650efb11745f07914f1d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/423df44a090846b9c59650efb11745f07914f1d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/423df44a090846b9c59650efb11745f07914f1d5/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0927d7ddca154b1a5151da698e205593cb8912e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0927d7ddca154b1a5151da698e205593cb8912e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0927d7ddca154b1a5151da698e205593cb8912e"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "d779e9819e2e4288c4bf617a67203edbc0c3f6f0", "filename": "gcc/value-range.cc", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423df44a090846b9c59650efb11745f07914f1d5/gcc%2Fvalue-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423df44a090846b9c59650efb11745f07914f1d5/gcc%2Fvalue-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.cc?ref=423df44a090846b9c59650efb11745f07914f1d5", "patch": "@@ -3960,8 +3960,11 @@ range_tests_floats ()\n   if (r0.maybe_isnan ())\n     ASSERT_TRUE (r0.varying_p ());\n   // ...unless it has some special property...\n-  r0.clear_nan ();\n-  ASSERT_FALSE (r0.varying_p ());\n+  if (!flag_finite_math_only)\n+    {\n+      r0.clear_nan ();\n+      ASSERT_FALSE (r0.varying_p ());\n+    }\n \n   // For most architectures, where float and double are different\n   // sizes, having the same endpoints does not necessarily mean the"}]}