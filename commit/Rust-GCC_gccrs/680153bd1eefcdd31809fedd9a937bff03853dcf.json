{"sha": "680153bd1eefcdd31809fedd9a937bff03853dcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgwMTUzYmQxZWVmY2RkMzE4MDlmZWRkOWE5MzdiZmYwMzg1M2RjZg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-12-16T16:26:08Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-12-16T16:26:08Z"}, "message": "[AArch64] Split X-reg UBFIZ into W-reg LSL when possible\n\n\t* config/aarch64/aarch64.md: New define_split above bswap<mode>2.\n\n\t* gcc.target/aarch64/ubfiz_lsl_1.c: New test.\n\nFrom-SVN: r243756", "tree": {"sha": "00be7995ada4c57e55b468434321eaaa9a451aaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00be7995ada4c57e55b468434321eaaa9a451aaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/680153bd1eefcdd31809fedd9a937bff03853dcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/680153bd1eefcdd31809fedd9a937bff03853dcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/680153bd1eefcdd31809fedd9a937bff03853dcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/680153bd1eefcdd31809fedd9a937bff03853dcf/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bcb036c515a43d2c3ded6399aa486fbc3d7f8a76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcb036c515a43d2c3ded6399aa486fbc3d7f8a76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcb036c515a43d2c3ded6399aa486fbc3d7f8a76"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "9aecfdc9d9409c2791329caef6692cbadae4a1b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/680153bd1eefcdd31809fedd9a937bff03853dcf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/680153bd1eefcdd31809fedd9a937bff03853dcf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=680153bd1eefcdd31809fedd9a937bff03853dcf", "patch": "@@ -1,3 +1,7 @@\n+2016-12-16  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.md: New define_split above bswap<mode>2.\n+\n 2016-12-16  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64.md: New define_split above insv<mode>."}, {"sha": "6d89e31fdebb8588fc789e264b31e3dde25f558b", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/680153bd1eefcdd31809fedd9a937bff03853dcf/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/680153bd1eefcdd31809fedd9a937bff03853dcf/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=680153bd1eefcdd31809fedd9a937bff03853dcf", "patch": "@@ -4439,6 +4439,24 @@\n   [(set_attr \"type\" \"bfx\")]\n )\n \n+;; When the bit position and width of the equivalent extraction add up to 32\n+;; we can use a W-reg LSL instruction taking advantage of the implicit\n+;; zero-extension of the X-reg.\n+(define_split\n+  [(set (match_operand:DI 0 \"register_operand\")\n+\t(and:DI (ashift:DI (match_operand:DI 1 \"register_operand\")\n+\t\t\t     (match_operand 2 \"const_int_operand\"))\n+\t\t (match_operand 3 \"const_int_operand\")))]\n+ \"aarch64_mask_and_shift_for_ubfiz_p (DImode, operands[3], operands[2])\n+  && (INTVAL (operands[2]) + popcount_hwi (INTVAL (operands[3])))\n+      == GET_MODE_BITSIZE (SImode)\"\n+  [(set (match_dup 0)\n+\t(zero_extend:DI (ashift:SI (match_dup 4) (match_dup 2))))]\n+  {\n+    operands[4] = gen_lowpart (SImode, operands[1]);\n+  }\n+)\n+\n (define_insn \"bswap<mode>2\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=r\")\n         (bswap:GPI (match_operand:GPI 1 \"register_operand\" \"r\")))]"}, {"sha": "30f89311da84ab9edaabdf3919d1183bd180dc6a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/680153bd1eefcdd31809fedd9a937bff03853dcf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/680153bd1eefcdd31809fedd9a937bff03853dcf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=680153bd1eefcdd31809fedd9a937bff03853dcf", "patch": "@@ -1,3 +1,7 @@\n+2016-12-16  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/aarch64/ubfiz_lsl_1.c: New test.\n+\n 2016-12-16  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/aarch64/ubfx_lsr_1.c: New test."}, {"sha": "d3fd3f234f2324d71813298210fdcf0660ac45b4", "filename": "gcc/testsuite/gcc.target/aarch64/ubfiz_lsl_1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/680153bd1eefcdd31809fedd9a937bff03853dcf/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fubfiz_lsl_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/680153bd1eefcdd31809fedd9a937bff03853dcf/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fubfiz_lsl_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fubfiz_lsl_1.c?ref=680153bd1eefcdd31809fedd9a937bff03853dcf", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+/* Check that an X-reg UBFIZ can be simplified into a W-reg LSL.  */\n+\n+long long\n+f2 (long long x)\n+{\n+  return (x << 5) & 0xffffffff;\n+}\n+\n+/* { dg-final { scan-assembler \"lsl\\tw\" } } */\n+/* { dg-final { scan-assembler-not \"ubfiz\\tx\" } } */"}]}