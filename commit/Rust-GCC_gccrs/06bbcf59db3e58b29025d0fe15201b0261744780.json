{"sha": "06bbcf59db3e58b29025d0fe15201b0261744780", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZiYmNmNTlkYjNlNThiMjkwMjVkMGZlMTUyMDFiMDI2MTc0NDc4MA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2009-01-11T17:25:23Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2009-01-11T17:25:23Z"}, "message": "regex (basic_regex::basic_regex): Use range constructor for _M_pattern.\n\n\t* include/tr1_impl/regex (basic_regex::basic_regex): Use range\n\tconstructor for _M_pattern.\n\t* testsuite/tr1/7_regular_expressions/basic_regex/ctors/char/\n\tstring.cc: Test construction from different basic_string type.\n\t* testsuite/tr1/7_regular_expressions/basic_regex/ctors/wchar_t/\n\tstring.cc: Likewise.\n\nFrom-SVN: r143275", "tree": {"sha": "5e1581b4cbf051628f7453eee489702e591a173a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e1581b4cbf051628f7453eee489702e591a173a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06bbcf59db3e58b29025d0fe15201b0261744780", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06bbcf59db3e58b29025d0fe15201b0261744780", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06bbcf59db3e58b29025d0fe15201b0261744780", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06bbcf59db3e58b29025d0fe15201b0261744780/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1027047119fcb737bd24ea302c13ad3bd19ac3e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1027047119fcb737bd24ea302c13ad3bd19ac3e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1027047119fcb737bd24ea302c13ad3bd19ac3e4"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "e56bd23ac2a2f33c9ac6a9f9d590e60220d429b7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bbcf59db3e58b29025d0fe15201b0261744780/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bbcf59db3e58b29025d0fe15201b0261744780/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=06bbcf59db3e58b29025d0fe15201b0261744780", "patch": "@@ -1,3 +1,12 @@\n+2009-01-11  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* include/tr1_impl/regex (basic_regex::basic_regex): Use range\n+\tconstructor for _M_pattern.\n+\t* testsuite/tr1/7_regular_expressions/basic_regex/ctors/char/\n+\tstring.cc: Test construction from different basic_string type.\n+\t* testsuite/tr1/7_regular_expressions/basic_regex/ctors/wchar_t/\n+\tstring.cc: Likewise.\n+\n 2009-01-07  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Jonathan Larmour  <jifl@eCosCentric.com>\n "}, {"sha": "80bc394e96d744726c2ff08f2f2841ba5b5bbc10", "filename": "libstdc++-v3/include/tr1_impl/regex", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bbcf59db3e58b29025d0fe15201b0261744780/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fregex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bbcf59db3e58b29025d0fe15201b0261744780/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fregex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fregex?ref=06bbcf59db3e58b29025d0fe15201b0261744780", "patch": "@@ -796,18 +796,18 @@ namespace regex_constants\n \n       /**\n        * @brief Constructs a basic regular expression from the string\n-       * @p interpreted according to the flags in @p f.\n+       * @p s interpreted according to the flags in @p f.\n        *\n-       * @param p A string containing a regular expression.\n+       * @param s A string containing a regular expression.\n        * @param f Flags indicating the syntax rules and options.\n        *\n-       * @throws regex_error if @p p is not a valid regular expression.\n+       * @throws regex_error if @p s is not a valid regular expression.\n        */\n       template<typename _Ch_traits, typename _Ch_alloc>\n         explicit\n         basic_regex(const basic_string<_Ch_type, _Ch_traits, _Ch_alloc>& __s,\n \t\t    flag_type __f = regex_constants::ECMAScript)\n-\t: _M_flags(__f), _M_pattern(__s), _M_mark_count(0)\n+\t: _M_flags(__f), _M_pattern(__s.begin(), __s.end()), _M_mark_count(0)\n         { _M_compile(); }\n \n       /**"}, {"sha": "39cce6c6472611906f8276f30d2157125bb5d885", "filename": "libstdc++-v3/testsuite/tr1/7_regular_expressions/basic_regex/ctors/char/string.cc", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bbcf59db3e58b29025d0fe15201b0261744780/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F7_regular_expressions%2Fbasic_regex%2Fctors%2Fchar%2Fstring.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bbcf59db3e58b29025d0fe15201b0261744780/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F7_regular_expressions%2Fbasic_regex%2Fctors%2Fchar%2Fstring.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F7_regular_expressions%2Fbasic_regex%2Fctors%2Fchar%2Fstring.cc?ref=06bbcf59db3e58b29025d0fe15201b0261744780", "patch": "@@ -25,6 +25,7 @@\n #include <string>\n #include <tr1/regex>\n #include <testsuite_hooks.h>\n+#include <testsuite_allocator.h>\n \n // Tests C++ string constructor of the basic_regex class.  \n void test01()\n@@ -35,9 +36,19 @@ void test01()\n   test_type re(s);\n }\n \n+void test02()\n+{\n+  typedef std::tr1::basic_regex<char> test_type;\n+  typedef __gnu_test::tracker_allocator<char> alloc_type;\n+\n+  std::basic_string<char, std::char_traits<char>, alloc_type> s(\"a*b\");\n+  test_type re(s);\n+}\n+\n int\n main()\n { \n   test01();\n+  test02();\n   return 0;\n };"}, {"sha": "9e6a9adc9a2dd735d544dfbb8d39816e5aefef63", "filename": "libstdc++-v3/testsuite/tr1/7_regular_expressions/basic_regex/ctors/wchar_t/string.cc", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bbcf59db3e58b29025d0fe15201b0261744780/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F7_regular_expressions%2Fbasic_regex%2Fctors%2Fwchar_t%2Fstring.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bbcf59db3e58b29025d0fe15201b0261744780/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F7_regular_expressions%2Fbasic_regex%2Fctors%2Fwchar_t%2Fstring.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F7_regular_expressions%2Fbasic_regex%2Fctors%2Fwchar_t%2Fstring.cc?ref=06bbcf59db3e58b29025d0fe15201b0261744780", "patch": "@@ -25,6 +25,7 @@\n #include <string>\n #include <tr1/regex>\n #include <testsuite_hooks.h>\n+#include <testsuite_allocator.h>\n \n // Tests C++ string constructor of the basic_regex class.  \n void test01()\n@@ -35,9 +36,19 @@ void test01()\n   test_type re(s);\n }\n \n+void test02()\n+{\n+  typedef std::tr1::basic_regex<wchar_t> test_type;\n+  typedef __gnu_test::tracker_allocator<wchar_t> alloc_type;\n+\n+  std::basic_string<wchar_t, std::char_traits<wchar_t>, alloc_type> s(L\"a*b\");\n+  test_type re(s);\n+}\n+\n int\n main()\n { \n   test01();\n+  test02();\n   return 0;\n };"}]}