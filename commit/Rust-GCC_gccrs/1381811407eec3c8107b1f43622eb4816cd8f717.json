{"sha": "1381811407eec3c8107b1f43622eb4816cd8f717", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM4MTgxMTQwN2VlYzNjODEwN2IxZjQzNjIyZWI0ODE2Y2Q4ZjcxNw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-12-08T13:23:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-12-08T13:23:54Z"}, "message": "re PR tree-optimization/49772 (ICE: in ipa_pta_execute, at tree-ssa-structalias.c:6790 with -fipa-pta)\n\n2011-12-08  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/49772\n\t* tree-inline.c (optimize_inline_calls): Remove bail out\n\ton errors.\n\nFrom-SVN: r182110", "tree": {"sha": "87cd62c041f8629d28b0836fd11c848df771226b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87cd62c041f8629d28b0836fd11c848df771226b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1381811407eec3c8107b1f43622eb4816cd8f717", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1381811407eec3c8107b1f43622eb4816cd8f717", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1381811407eec3c8107b1f43622eb4816cd8f717", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1381811407eec3c8107b1f43622eb4816cd8f717/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cffef825957253ae4845acff731398f51a461aa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cffef825957253ae4845acff731398f51a461aa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cffef825957253ae4845acff731398f51a461aa6"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "b8831739a94a930f90789a8e64fa0699d376c61a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1381811407eec3c8107b1f43622eb4816cd8f717/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1381811407eec3c8107b1f43622eb4816cd8f717/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1381811407eec3c8107b1f43622eb4816cd8f717", "patch": "@@ -1,3 +1,9 @@\n+2011-12-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/49772\n+\t* tree-inline.c (optimize_inline_calls): Remove bail out\n+\ton errors.\n+\n 2011-12-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/50747"}, {"sha": "13ad8153fa9ab2f0e8c92b85302992c829860387", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1381811407eec3c8107b1f43622eb4816cd8f717/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1381811407eec3c8107b1f43622eb4816cd8f717/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=1381811407eec3c8107b1f43622eb4816cd8f717", "patch": "@@ -4216,12 +4216,6 @@ optimize_inline_calls (tree fn)\n   struct gimplify_ctx gctx;\n   bool inlined_p = false;\n \n-  /* There is no point in performing inlining if errors have already\n-     occurred -- and we might crash if we try to inline invalid\n-     code.  */\n-  if (seen_error ())\n-    return 0;\n-\n   /* Clear out ID.  */\n   memset (&id, 0, sizeof (id));\n "}]}