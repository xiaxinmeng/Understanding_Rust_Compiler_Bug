{"sha": "ad8c162bc1f1ea2113598c0009fdba2c1c0b361d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ4YzE2MmJjMWYxZWEyMTEzNTk4YzAwMDlmZGJhMmMxYzBiMzYxZA==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2004-08-18T01:58:13Z"}, "committer": {"name": "Ziemowit Laski", "email": "zlaski@gcc.gnu.org", "date": "2004-08-18T01:58:13Z"}, "message": "gcc.c (default_compilers): Add info about \".mm\", \".M\" and \".mii\" Objective-C++ extensions.\n\n[gcc/ChangeLog]\n2004-08-18  Ziemowit Laski  <zlaski@apple.com>\n\n        * gcc.c (default_compilers): Add info about \".mm\", \".M\" and \".mii\"\n        Objective-C++ extensions.\n        * gengtype.c (get_file_basename): Match entire subdirectory name\n        ('cp', 'objc', 'objcp') rather than just its suffix.\n        (get_base_file_bitmap): Allow for files to belong to more than one\n        language.\n        (get_output_file_with_visibility): Treat objc/objc-act.h as a header\n        used by more than one front-end.\n\nFrom-SVN: r86167", "tree": {"sha": "e96c191583dd94357f6928dca746faaf24ca6aa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e96c191583dd94357f6928dca746faaf24ca6aa5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad8c162bc1f1ea2113598c0009fdba2c1c0b361d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad8c162bc1f1ea2113598c0009fdba2c1c0b361d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad8c162bc1f1ea2113598c0009fdba2c1c0b361d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad8c162bc1f1ea2113598c0009fdba2c1c0b361d/comments", "author": null, "committer": null, "parents": [{"sha": "3bc268e64b4167a3566c8b53decda0b06668f6fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bc268e64b4167a3566c8b53decda0b06668f6fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bc268e64b4167a3566c8b53decda0b06668f6fe"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "dab997443d24d10c50699d1a81b8f7d12bfb4281", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad8c162bc1f1ea2113598c0009fdba2c1c0b361d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad8c162bc1f1ea2113598c0009fdba2c1c0b361d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad8c162bc1f1ea2113598c0009fdba2c1c0b361d", "patch": "@@ -1,3 +1,14 @@\n+2004-08-18  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* gcc.c (default_compilers): Add info about \".mm\", \".M\" and \".mii\"\n+\tObjective-C++ extensions.\n+\t* gengtype.c (get_file_basename): Match entire subdirectory name\n+\t('cp', 'objc', 'objcp') rather than just its suffix.\n+\t(get_base_file_bitmap): Allow for files to belong to more than one\n+\tlanguage.\n+\t(get_output_file_with_visibility): Treat objc/objc-act.h as a header\n+\tused by more than one front-end.\n+\n 2004-08-18  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.md (addsi3, subsi3, andsi3, iorsi3, movsi, movhi): Rework to\n@@ -211,7 +222,7 @@\n 2004-08-16  Adam Nemet  <anemet@lnxw.com>\n \n \t* Makefile.in (LIBS): Move $(LIBIBERTY) after $(BANSHEELIB).\n-\n+\t\n 2004-08-16  Andrew Pinski  <apinski@apple.com>\n \n \t* target-def.h (TARGET_EH_RETURN_FILTER_MODE): Remove"}, {"sha": "bce27bcd5dcd40032d0413784dbdfb65db204ec4", "filename": "gcc/gcc.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad8c162bc1f1ea2113598c0009fdba2c1c0b361d/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad8c162bc1f1ea2113598c0009fdba2c1c0b361d/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=ad8c162bc1f1ea2113598c0009fdba2c1c0b361d", "patch": "@@ -918,6 +918,8 @@ static const struct compiler default_compilers[] =\n      and be given a more meaningful error than \"file not used since\n      linking is not done\".  */\n   {\".m\",  \"#Objective-C\", 0, 0, 0}, {\".mi\",  \"#Objective-C\", 0, 0, 0},\n+  {\".mm\", \"#Objective-C++\", 0, 0, 0}, {\".M\", \"#Objective-C++\", 0, 0, 0},\n+  {\".mii\", \"#Objective-C++\", 0, 0, 0},\n   {\".cc\", \"#C++\", 0, 0, 0}, {\".cxx\", \"#C++\", 0, 0, 0}, \n   {\".cpp\", \"#C++\", 0, 0, 0}, {\".cp\", \"#C++\", 0, 0, 0}, \n   {\".c++\", \"#C++\", 0, 0, 0}, {\".C\", \"#C++\", 0, 0, 0},"}, {"sha": "6cb89f0e8725a5f4f8b8edaf5e9c62349859e555", "filename": "gcc/gengtype.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad8c162bc1f1ea2113598c0009fdba2c1c0b361d/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad8c162bc1f1ea2113598c0009fdba2c1c0b361d/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=ad8c162bc1f1ea2113598c0009fdba2c1c0b361d", "patch": "@@ -1096,7 +1096,7 @@ get_file_basename (const char *f)\n       s2 = lang_dir_names [i];\n       l1 = strlen (s1);\n       l2 = strlen (s2);\n-      if (l1 >= l2 && !memcmp (s1, s2, l2))\n+      if (l1 >= l2 && IS_DIR_SEPARATOR (s1[-1]) && !memcmp (s1, s2, l2))\n         {\n           basename -= l2 + 1;\n           if ((basename - f - 1) != srcdir_len)\n@@ -1125,6 +1125,10 @@ get_base_file_bitmap (const char *input_file)\n   unsigned k;\n   unsigned bitmap;\n \n+  /* If the file resides in a language subdirectory (e.g., 'cp'), assume that\n+     it belongs to the corresponding language.  The file may belong to other\n+     languages as well (which is checked for below).  */\n+\n   if (slashpos)\n     {\n       size_t i;\n@@ -1134,10 +1138,7 @@ get_base_file_bitmap (const char *input_file)\n           {\n             /* It's in a language directory, set that language.  */\n             bitmap = 1 << i;\n-            return bitmap;\n           }\n-\n-      abort (); /* Should have found the language.  */\n     }\n \n   /* If it's in any config-lang.in, then set for the languages\n@@ -1200,11 +1201,19 @@ get_output_file_with_visibility (const char *input_file)\n       memcpy (s, \".h\", sizeof (\".h\"));\n       for_name = basename;\n     }\n+  /* Some headers get used by more than one front-end; hence, it\n+     would be inappropriate to spew them out to a single gtype-<lang>.h\n+     (and gengtype doesn't know how to direct spewage into multiple\n+     gtype-<lang>.h headers at this time).  Instead, we pair up these\n+     headers with source files (and their special purpose gt-*.h headers).  */\n   else if (strcmp (basename, \"c-common.h\") == 0)\n     output_name = \"gt-c-common.h\", for_name = \"c-common.c\";\n   else if (strcmp (basename, \"c-tree.h\") == 0)\n     output_name = \"gt-c-decl.h\", for_name = \"c-decl.c\";\n-  else\n+  else if (strncmp (basename, \"objc\", 4) == 0 && IS_DIR_SEPARATOR (basename[4])\n+\t   && strcmp (basename + 5, \"objc-act.h\") == 0)\n+    output_name = \"gt-objc-objc-act.h\", for_name = \"objc/objc-act.c\";\n+  else \n     {\n       size_t i;\n "}]}