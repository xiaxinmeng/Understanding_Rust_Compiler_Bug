{"sha": "21d818ff361c99286d2749a10392a32c1dd77187", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFkODE4ZmYzNjFjOTkyODZkMjc0OWExMDM5MmEzMmMxZGQ3NzE4Nw==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2007-08-21T17:22:46Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2007-08-21T17:22:46Z"}, "message": "rs6000.c (expand_block_clear): Add TARGET_SPE cases to set eight bytes at a time.\n\ngcc/\n\t* config/rs6000/rs6000.c (expand_block_clear): Add TARGET_SPE\n\tcases to set eight bytes at a time.\n\t(expand_block_move): Likewise.\n\ngcc/testsuite/\n\t* gcc.target/powerpc/spe-vector-memset.c: New testcase.\n\t* gcc.target/powerpc/spe-vector-memcpy.c: New testcase.\n\nFrom-SVN: r127670", "tree": {"sha": "d531bf25a112d1b71ba7a4f06b5da98307951c73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d531bf25a112d1b71ba7a4f06b5da98307951c73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21d818ff361c99286d2749a10392a32c1dd77187", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21d818ff361c99286d2749a10392a32c1dd77187", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21d818ff361c99286d2749a10392a32c1dd77187", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21d818ff361c99286d2749a10392a32c1dd77187/comments", "author": null, "committer": null, "parents": [{"sha": "d6b3c79757281c980f71f24d62d5b68a0b933d09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6b3c79757281c980f71f24d62d5b68a0b933d09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6b3c79757281c980f71f24d62d5b68a0b933d09"}], "stats": {"total": 53, "additions": 50, "deletions": 3}, "files": [{"sha": "6cbda5f9d59fc48818bbf14018d9c284b26f495c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21d818ff361c99286d2749a10392a32c1dd77187/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21d818ff361c99286d2749a10392a32c1dd77187/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=21d818ff361c99286d2749a10392a32c1dd77187", "patch": "@@ -1,3 +1,9 @@\n+2007-08-21  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* config/rs6000/rs6000.c (expand_block_clear): Add TARGET_SPE\n+\tcases to set eight bytes at a time.\n+\t(expand_block_move): Likewise.\n+\t\n 2007-08-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/32610"}, {"sha": "44e492854c52cb9d6a9d9521dafacbdf01bfb27d", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21d818ff361c99286d2749a10392a32c1dd77187/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21d818ff361c99286d2749a10392a32c1dd77187/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=21d818ff361c99286d2749a10392a32c1dd77187", "patch": "@@ -9852,6 +9852,8 @@ expand_block_clear (rtx operands[])\n     clear_step = 16;\n   else if (TARGET_POWERPC64 && align >= 32)\n     clear_step = 8;\n+  else if (TARGET_SPE && align >= 64)\n+    clear_step = 8;\n   else\n     clear_step = 4;\n \n@@ -9870,10 +9872,15 @@ expand_block_clear (rtx operands[])\n \t  clear_bytes = 16;\n \t  mode = V4SImode;\n \t}\n+      else if (bytes >= 8 && TARGET_SPE && align >= 64)\n+        {\n+          clear_bytes = 8;\n+          mode = V2SImode;\n+        }\n       else if (bytes >= 8 && TARGET_POWERPC64\n-\t  /* 64-bit loads and stores require word-aligned\n-\t     displacements.  */\n-\t  && (align >= 64 || (!STRICT_ALIGNMENT && align >= 32)))\n+\t       /* 64-bit loads and stores require word-aligned\n+\t\t  displacements.  */\n+\t       && (align >= 64 || (!STRICT_ALIGNMENT && align >= 32)))\n \t{\n \t  clear_bytes = 8;\n \t  mode = DImode;\n@@ -9963,6 +9970,12 @@ expand_block_move (rtx operands[])\n \t  mode = V4SImode;\n \t  gen_func.mov = gen_movv4si;\n \t}\n+      else if (TARGET_SPE && bytes >= 8 && align >= 64)\n+        {\n+          move_bytes = 8;\n+          mode = V2SImode;\n+          gen_func.mov = gen_movv2si;\n+        }\n       else if (TARGET_STRING\n \t  && bytes > 24\t\t/* move up to 32 bytes at a time */\n \t  && ! fixed_regs[5]"}, {"sha": "9800a7f742def7f51f2586721194e29c69676345", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21d818ff361c99286d2749a10392a32c1dd77187/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21d818ff361c99286d2749a10392a32c1dd77187/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=21d818ff361c99286d2749a10392a32c1dd77187", "patch": "@@ -1,3 +1,8 @@\n+2007-08-21  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* gcc.target/powerpc/spe-vector-memset.c: New testcase.\n+\t* gcc.target/powerpc/spe-vector-memcpy.c: New testcase.\n+\n 2007-08-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/32610"}, {"sha": "d12f6696eb05d2613530bf1b053f294746b07626", "filename": "gcc/testsuite/gcc.target/powerpc/spe-vector-memcpy.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21d818ff361c99286d2749a10392a32c1dd77187/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fspe-vector-memcpy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21d818ff361c99286d2749a10392a32c1dd77187/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fspe-vector-memcpy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fspe-vector-memcpy.c?ref=21d818ff361c99286d2749a10392a32c1dd77187", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-require-effective-target powerpc_spe } */\n+/* { dg-options \"-O -mspe=yes\" } */\n+/* { dg-final { scan-assembler \"evstdd\" } } */\n+\n+void foo(void)\n+{\n+  int x[8] __attribute__((aligned(64))) = { 1, 1, 1, 1, 1, 1, 1, 1 };\n+  bar (x);\n+}"}, {"sha": "7ecaf1037064ca2278275b793c1c0ac963b5ae52", "filename": "gcc/testsuite/gcc.target/powerpc/spe-vector-memset.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21d818ff361c99286d2749a10392a32c1dd77187/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fspe-vector-memset.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21d818ff361c99286d2749a10392a32c1dd77187/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fspe-vector-memset.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fspe-vector-memset.c?ref=21d818ff361c99286d2749a10392a32c1dd77187", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-require-effective-target powerpc_spe } */\n+/* { dg-options \"-O -mspe=yes\" } */\n+/* { dg-final { scan-assembler \"evstdd\" } } */\n+\n+#include <string.h>\n+\n+void foo(void)\n+{\n+  int x[8] __attribute__((aligned(64)));\n+  memset (x, 0, sizeof (x));\n+  bar (x);\n+}"}]}