{"sha": "829c6349e96c5bfa8603aaef8858b38e237a2f33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI5YzYzNDllOTZjNWJmYTg2MDNhYWVmODg1OGIzOGUyMzdhMmYzMw==", "commit": {"author": {"name": "Chung-Lin Tang", "email": "cltang@codesourcery.com", "date": "2018-06-20T16:35:15Z"}, "committer": {"name": "Cesar Philippidis", "email": "cesar@gcc.gnu.org", "date": "2018-06-20T16:35:15Z"}, "message": "Update OpenACC data clause semantics to the 2.5 behavior\n\n\tgcc/c-family/\n\t* c-pragma.h (enum pragma_omp_clause): Add\n\tPRAGMA_OACC_CLAUSE_{FINALIZE,IF_PRESENT}. Remove\n\tPRAGMA_OACC_CLAUSE_PRESENT_OR_{COPY,COPYIN,COPYOUT,CREATE}.\n\n\tgcc/c/\n\t* c-parser.c (c_parser_omp_clause_name): Add support for finalize\n\tand if_present. Make present_or_{copy,copyin,copyout,create} aliases\n\tto their non-present_or_* counterparts. Make 'self' an alias to\n\tPRAGMA_OACC_CLAUSE_HOST.\n\t(c_parser_oacc_data_clause): Update GOMP mappings for\n\tPRAGMA_OACC_CLAUSE_{COPY,COPYIN,COPYOUT,CREATE,DELETE}. Remove\n\tPRAGMA_OACC_CLAUSE_{SELF,PRESENT_OR_*}.\n\t(c_parser_oacc_all_clauses): Handle finalize and if_present clauses.\n\tRemove support for present_or_* clauses.\n\t(OACC_KERNELS_CLAUSE_MASK): Remove PRESENT_OR_* clauses.\n\t(OACC_PARALLEL_CLAUSE_MASK): Likewise.\n\t(OACC_DECLARE_CLAUSE_MASK): Likewise.\n\t(OACC_DATA_CLAUSE_MASK): Likewise.\n\t(OACC_ENTER_DATA_CLAUSE_MASK): Remove PRESENT_OR_* clauses.\n\t(OACC_EXIT_DATA_CLAUSE_MASK): Add FINALIZE clause.\n\t(OACC_UPDATE_CLAUSE_MASK): Remove SELF, add IF_PRESENT.\n\t(c_parser_oacc_declare): Remove PRESENT_OR_* clauses.\n\t* c-typeck.c (c_finish_omp_clauses): Handle IF_PRESENT and FINALIZE.\n\n\tgcc/cp/\n\t* parser.c (cp_parser_omp_clause_name): Add support for finalize\n\tand if_present. Make present_or_{copy,copyin,copyout,create} aliases\n\tto their non-present_or_* counterparts. Make 'self' an alias to\n\tPRAGMA_OACC_CLAUSE_HOST.\n\t(cp_parser_oacc_data_clause): Update GOMP mappings for\n\tPRAGMA_OACC_CLAUSE_{COPY,COPYIN,COPYOUT,CREATE,DELETE}. Remove\n\tPRAGMA_OACC_CLAUSE_{SELF,PRESENT_OR_*}.\n\t(cp_parser_oacc_all_clauses): Handle finalize and if_present clauses.\n\tRemove support for present_or_* clauses.\n\t(OACC_KERNELS_CLAUSE_MASK): Remove PRESENT_OR_* clauses.\n\t(OACC_PARALLEL_CLAUSE_MASK): Likewise.\n\t(OACC_DECLARE_CLAUSE_MASK): Likewise.\n\t(OACC_DATA_CLAUSE_MASK): Likewise.\n\t(OACC_ENTER_DATA_CLAUSE_MASK): Remove PRESENT_OR_* clauses.\n\t(OACC_EXIT_DATA_CLAUSE_MASK): Add FINALIZE clause.\n\t(OACC_UPDATE_CLAUSE_MASK): Remove SELF, add IF_PRESENT.\n\t(cp_parser_oacc_declare): Remove PRESENT_OR_* clauses.\n\t* pt.c (tsubst_omp_clauses): Handle IF_PRESENT and FINALIZE.\n\t* semantics.c (finish_omp_clauses): Handle IF_PRESENT and FINALIZE.\n\n\tgcc/fortran/\n\t* gfortran.h (gfc_omp_clauses): Add unsigned if_present, finalize\n\tbitfields.\n\t* openmp.c (enum omp_mask2): Remove OMP_CLAUSE_PRESENT_OR_*. Add\n\tOMP_CLAUSE_{IF_PRESENT,FINALIZE}.\n\t(gfc_match_omp_clauses): Update handling of copy, copyin, copyout,\n\tcreate, deviceptr, present_of_*. Add support for finalize and\n\tif_present.\n\t(OACC_PARALLEL_CLAUSES): Remove PRESENT_OR_* clauses.\n\t(OACC_KERNELS_CLAUSES): Likewise.\n\t(OACC_DATA_CLAUSES): Likewise.\n\t(OACC_DECLARE_CLAUSES): Likewise.\n\t(OACC_UPDATE_CLAUSES): Add IF_PRESENT clause.\n\t(OACC_ENTER_DATA_CLAUSES): Remove PRESENT_OR_* clauses.\n\t(OACC_EXIT_DATA_CLAUSES): Add FINALIZE clause.\n\t(gfc_match_oacc_declare): Update to OpenACC 2.5 semantics.\n\t* trans-openmp.c (gfc_trans_omp_clauses): Add support for IF_PRESENT\n\tand FINALIZE.\n\n\tgcc/\n\t* gimplify.c (gimplify_scan_omp_clauses): Add support for\n\tOMP_CLAUSE_{IF_PRESENT,FINALIZE}.\n\t(gimplify_adjust_omp_clauses): Likewise.\n\t(gimplify_oacc_declare_1): Add support for GOMP_MAP_RELEASE, remove\n\tsupport for GOMP_MAP_FORCE_{ALLOC,TO,FROM,TOFROM}.\n\t(gimplify_omp_target_update): Update handling of acc update and\n\tenter/exit data.\n\t* omp-low.c (install_var_field): Remove unused parameter\n\tbase_pointers_restrict.\n\t(scan_sharing_clauses): Remove base_pointers_restrict parameter.\n\tUpdate call to install_var_field. Handle OMP_CLAUSE_{IF_PRESENT,\n\tFINALIZE}\n\t(omp_target_base_pointers_restrict_p): Delete.\n\t(scan_omp_target): Update call to scan_sharing_clauses.\n\t* tree-core.h (enum omp_clause_code): Add OMP_CLAUSE_{IF_PRESENT,\n\tFINALIZE}.\n\t* tree-nested.c (convert_nonlocal_omp_clauses): Handle\n\tOMP_CLAUSE_{IF_PRESENT,FINALIZE}.\n\t(convert_local_omp_clauses): Likewise.\n\t* tree-pretty-print.c (dump_omp_clause): Likewise.\n\t* tree.c (omp_clause_num_ops): Add entries for \tOMP_CLAUSE_{IF_PRESENT,\n\tFINALIZE}.\n\t(omp_clause_code_name): Likewise.\n\n\tgcc/testsuite/\n\t* c-c++-common/goacc/declare-1.c: Update test case to utilize OpenACC\n\t2.5 data clause semantics.\n\t* c-c++-common/goacc/declare-2.c: Likewise.\n\t* c-c++-common/goacc/default-4.c: Likewise.\n\t* c-c++-common/goacc/finalize-1.c: New test.\n\t* c-c++-common/goacc/kernels-alias-2.c: Update test case to utilize\n\tOpenACC 2.5 data clause semantics.\n\t* c-c++-common/goacc/kernels-alias.c: Likewise.\n\t* c-c++-common/goacc/routine-5.c: Likewise.\n\t* c-c++-common/goacc/update-if_present-1.c: New test.\n\t* c-c++-common/goacc/update-if_present-2.c: New test.\n\t* g++.dg/goacc/template.C: Update test case to utilize OpenACC\n\t2.5 data clause semantics.\n\t* gfortran.dg/goacc/combined-directives.f90: Likewise.\n\t* gfortran.dg/goacc/data-tree.f95: Likewise.\n\t* gfortran.dg/goacc/declare-2.f95: Likewise.\n\t* gfortran.dg/goacc/default-4.f: Likewise.\n\t* gfortran.dg/goacc/enter-exit-data.f95: Likewise.\n\t* gfortran.dg/goacc/finalize-1.f: New test.\n\t* gfortran.dg/goacc/kernels-alias-2.f95: Update test case to utilize\n\tOpenACC 2.5 data clause semantics.\n\t* gfortran.dg/goacc/kernels-alias.f95: Likewise.\n\t* gfortran.dg/goacc/kernels-tree.f95: Likewise.\n\t* gfortran.dg/goacc/nested-function-1.f90: Likewise.\n\t* gfortran.dg/goacc/parallel-tree.f95: Likewise.\n\t* gfortran.dg/goacc/reduction-promotions.f90: Likewise.\n\t* gfortran.dg/goacc/update-if_present-1.f90: New test.\n\t* gfortran.dg/goacc/update-if_present-2.f90: New test.\n\n\tlibgomp/\n\t* libgomp.h (struct splay_tree_key_s): Add dynamic_refcount member.\n\t(gomp_acc_remove_pointer): Update declaration.\n\t(gomp_acc_declare_allocate): Declare.\n\t(gomp_remove_var): Declare.\n\t* libgomp.map (OACC_2.5): Define.\n\t* oacc-mem.c (acc_map_data): Update refcount.\n\t(acc_unmap_data): Likewise.\n\t(present_create_copy): Likewise.\n\t(acc_create): Add FLAG_PRESENT when calling present_create_copy.\n\t(acc_copyin): Likewise.\n\t(FLAG_FINALIZE): Define.\n\t(delete_copyout): Update dynamic refcounts, add support for FINALIZE.\n\t(acc_delete_finalize): New function.\n\t(acc_delete_finalize_async): New function.\n\t(acc_copyout_finalize): New function.\n\t(acc_copyout_finalize_async): New function.\n\t(gomp_acc_insert_pointer): Update refcounts.\n\t(gomp_acc_remove_pointer): Return if data is not present on the\n\taccelerator.\n\t* oacc-parallel.c (find_pset): Rename to find_pointer.\n\t(find_pointer): Add support for GOMP_MAP_POINTER.\n\t(handle_ftn_pointers): New function.\n\t(GOACC_parallel_keyed): Update refcounts of variables.\n\t(GOACC_enter_exit_data): Add support for finalized data mappings.\n\tAdd support for GOMP_MAP_{TO,ALLOC,RELESE,FROM}. Update handling\n\tof fortran arrays.\n\t(GOACC_update): Add support for GOMP_MAP_{ALWAYS_POINTER,TO,FROM}.\n\t(GOACC_declare): Add support for GOMP_MAP_RELEASE, remove support\n\tfor GOMP_MAP_FORCE_FROM.\n\t* openacc.f90 (module openacc_internal): Add\n\tacc_copyout_finalize_{32_h,64_h,array_h,_l}, and\n\tacc_delete_finalize_{32_h,64_h,array_h,_l}. Add interfaces for\n\tacc_copyout_finalize and acc_delete_finalize.\n\t(acc_copyout_finalize_32_h): New subroutine.\n\t(acc_copyout_finalize_64_h): New subroutine.\n\t(acc_copyout_finalize_array_h): New subroutine.\n\t(acc_delete_finalize_32_h): New subroutine.\n\t(acc_delete_finalize_64_h): New subroutine.\n\t(acc_delete_finalize_array_h): New subroutine.\n\t* openacc.h (acc_copyout_finalize): Declare.\n\t(acc_copyout_finalize_async): Declare.\n\t(acc_delete_finalize): Declare.\n\t(acc_delete_finalize_async): Declare.\n\t* openacc_lib.h (acc_copyout_finalize): New interface.\n\t(acc_delete_finalize): New interface.\n\t* target.c (gomp_map_vars): Update dynamic_refcount.\n\t(gomp_remove_var): New function.\n\t(gomp_unmap_vars): Use it.\n\t(gomp_unload_image_from_device): Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/data-already-1.c: Update test\n\tcase to utilize OpenACC 2.5 data clause semantics.\n\t* testsuite/libgomp.oacc-c-c++-common/data-already-2.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/data-already-3.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/data-already-4.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/data-already-5.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/data-already-6.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/data-already-7.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/data-already-8.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/lib-16.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/lib-25.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/lib-32.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/lib-83.c: Likewise.\n\t* testsuite/libgomp.oacc-fortran/data-5.f90: New test.\n\t* testsuite/libgomp.oacc-fortran/data-already-1.f: Update test case to\n\tutilize OpenACC 2.5 data clause semantics.\n\t* testsuite/libgomp.oacc-fortran/data-already-2.f: Likewise.\n\t* testsuite/libgomp.oacc-fortran/data-already-3.f: Likewise.\n\t* testsuite/libgomp.oacc-fortran/data-already-4.f: Likewise.\n\t* testsuite/libgomp.oacc-fortran/data-already-5.f: Likewise.\n\t* testsuite/libgomp.oacc-fortran/data-already-6.f: Likewise.\n\t* testsuite/libgomp.oacc-fortran/data-already-7.f: Likewise.\n\t* testsuite/libgomp.oacc-fortran/data-already-8.f: Likewise.\n\t* testsuite/libgomp.oacc-fortran/lib-32-1.f: Likewise.\n\t* testsuite/libgomp.oacc-fortran/lib-32-2.f: Likewise.\n\nCo-Authored-By: Cesar Philippidis <cesar@codesourcery.com>\nCo-Authored-By: Thomas Schwinge <thomas@codesourcery.com>\n\nFrom-SVN: r261813", "tree": {"sha": "b837e0637cd6e85b4e6c19935c6595fc7a99b075", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b837e0637cd6e85b4e6c19935c6595fc7a99b075"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/829c6349e96c5bfa8603aaef8858b38e237a2f33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/829c6349e96c5bfa8603aaef8858b38e237a2f33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/829c6349e96c5bfa8603aaef8858b38e237a2f33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/829c6349e96c5bfa8603aaef8858b38e237a2f33/comments", "author": {"login": "cltang", "id": 4055966, "node_id": "MDQ6VXNlcjQwNTU5NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4055966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cltang", "html_url": "https://github.com/cltang", "followers_url": "https://api.github.com/users/cltang/followers", "following_url": "https://api.github.com/users/cltang/following{/other_user}", "gists_url": "https://api.github.com/users/cltang/gists{/gist_id}", "starred_url": "https://api.github.com/users/cltang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cltang/subscriptions", "organizations_url": "https://api.github.com/users/cltang/orgs", "repos_url": "https://api.github.com/users/cltang/repos", "events_url": "https://api.github.com/users/cltang/events{/privacy}", "received_events_url": "https://api.github.com/users/cltang/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f41b7612a9bbc18652f6577f79bf814a13d1510c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f41b7612a9bbc18652f6577f79bf814a13d1510c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f41b7612a9bbc18652f6577f79bf814a13d1510c"}], "stats": {"total": 2039, "additions": 1420, "deletions": 619}, "files": [{"sha": "37fc7daf9b22bf4f7700b1b3629abd22af34dac4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -1,3 +1,31 @@\n+2018-06-20  Chung-Lin Tang <cltang@codesourcery.com>\n+\t    Thomas Schwinge <thomas@codesourcery.com>\n+\t    Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* gimplify.c (gimplify_scan_omp_clauses): Add support for\n+\tOMP_CLAUSE_{IF_PRESENT,FINALIZE}.\n+\t(gimplify_adjust_omp_clauses): Likewise.\n+\t(gimplify_oacc_declare_1): Add support for GOMP_MAP_RELEASE, remove\n+\tsupport for GOMP_MAP_FORCE_{ALLOC,TO,FROM,TOFROM}.\n+\t(gimplify_omp_target_update): Update handling of acc update and\n+\tenter/exit data.\n+\t* omp-low.c (install_var_field): Remove unused parameter\n+\tbase_pointers_restrict.\n+\t(scan_sharing_clauses): Remove base_pointers_restrict parameter.\n+\tUpdate call to install_var_field. Handle OMP_CLAUSE_{IF_PRESENT,\n+\tFINALIZE}\n+\t(omp_target_base_pointers_restrict_p): Delete.\n+\t(scan_omp_target): Update call to scan_sharing_clauses.\n+\t* tree-core.h (enum omp_clause_code): Add OMP_CLAUSE_{IF_PRESENT,\n+\tFINALIZE}.\n+\t* tree-nested.c (convert_nonlocal_omp_clauses): Handle\n+\tOMP_CLAUSE_{IF_PRESENT,FINALIZE}.\n+\t(convert_local_omp_clauses): Likewise.\n+\t* tree-pretty-print.c (dump_omp_clause): Likewise.\n+\t* tree.c (omp_clause_num_ops): Add entries for \tOMP_CLAUSE_{IF_PRESENT,\n+\tFINALIZE}.\n+\t(omp_clause_code_name): Likewise.\n+\n 2018-06-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/86194"}, {"sha": "fc7f7de1ed4bc5ed5c1a622b2efcb194f6fa0fa6", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -1,3 +1,11 @@\n+2018-06-20  Chung-Lin Tang <cltang@codesourcery.com>\n+\t    Thomas Schwinge <thomas@codesourcery.com>\n+\t    Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* c-pragma.h (enum pragma_omp_clause): Add\n+\tPRAGMA_OACC_CLAUSE_{FINALIZE,IF_PRESENT}. Remove\n+\tPRAGMA_OACC_CLAUSE_PRESENT_OR_{COPY,COPYIN,COPYOUT,CREATE}.\n+\n 2018-06-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/86210"}, {"sha": "b322547b11a752df47b0496ea329f0415cd0490d", "filename": "gcc/c-family/c-pragma.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fc-family%2Fc-pragma.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fc-family%2Fc-pragma.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.h?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -138,16 +138,13 @@ enum pragma_omp_clause {\n   PRAGMA_OACC_CLAUSE_DELETE,\n   PRAGMA_OACC_CLAUSE_DEVICEPTR,\n   PRAGMA_OACC_CLAUSE_DEVICE_RESIDENT,\n+  PRAGMA_OACC_CLAUSE_FINALIZE,\n   PRAGMA_OACC_CLAUSE_GANG,\n   PRAGMA_OACC_CLAUSE_HOST,\n   PRAGMA_OACC_CLAUSE_INDEPENDENT,\n   PRAGMA_OACC_CLAUSE_NUM_GANGS,\n   PRAGMA_OACC_CLAUSE_NUM_WORKERS,\n   PRAGMA_OACC_CLAUSE_PRESENT,\n-  PRAGMA_OACC_CLAUSE_PRESENT_OR_COPY,\n-  PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYIN,\n-  PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYOUT,\n-  PRAGMA_OACC_CLAUSE_PRESENT_OR_CREATE,\n   PRAGMA_OACC_CLAUSE_SELF,\n   PRAGMA_OACC_CLAUSE_SEQ,\n   PRAGMA_OACC_CLAUSE_TILE,\n@@ -156,6 +153,7 @@ enum pragma_omp_clause {\n   PRAGMA_OACC_CLAUSE_VECTOR_LENGTH,\n   PRAGMA_OACC_CLAUSE_WAIT,\n   PRAGMA_OACC_CLAUSE_WORKER,\n+  PRAGMA_OACC_CLAUSE_IF_PRESENT,\n   PRAGMA_OACC_CLAUSE_COLLAPSE = PRAGMA_OMP_CLAUSE_COLLAPSE,\n   PRAGMA_OACC_CLAUSE_COPYIN = PRAGMA_OMP_CLAUSE_COPYIN,\n   PRAGMA_OACC_CLAUSE_DEVICE = PRAGMA_OMP_CLAUSE_DEVICE,"}, {"sha": "1ba1173e9c212efe5b4c45fb2ccba314e5f83f5d", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -1,3 +1,26 @@\n+2018-06-20  Chung-Lin Tang <cltang@codesourcery.com>\n+\t    Thomas Schwinge <thomas@codesourcery.com>\n+\t    Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* c-parser.c (c_parser_omp_clause_name): Add support for finalize\n+\tand if_present. Make present_or_{copy,copyin,copyout,create} aliases\n+\tto their non-present_or_* counterparts. Make 'self' an alias to\n+\tPRAGMA_OACC_CLAUSE_HOST.\n+\t(c_parser_oacc_data_clause): Update GOMP mappings for\n+\tPRAGMA_OACC_CLAUSE_{COPY,COPYIN,COPYOUT,CREATE,DELETE}. Remove\n+\tPRAGMA_OACC_CLAUSE_{SELF,PRESENT_OR_*}.\n+\t(c_parser_oacc_all_clauses): Handle finalize and if_present clauses.\n+\tRemove support for present_or_* clauses.\n+\t(OACC_KERNELS_CLAUSE_MASK): Remove PRESENT_OR_* clauses.\n+\t(OACC_PARALLEL_CLAUSE_MASK): Likewise.\n+\t(OACC_DECLARE_CLAUSE_MASK): Likewise.\n+\t(OACC_DATA_CLAUSE_MASK): Likewise.\n+\t(OACC_ENTER_DATA_CLAUSE_MASK): Remove PRESENT_OR_* clauses.\n+\t(OACC_EXIT_DATA_CLAUSE_MASK): Add FINALIZE clause.\n+\t(OACC_UPDATE_CLAUSE_MASK): Remove SELF, add IF_PRESENT.\n+\t(c_parser_oacc_declare): Remove PRESENT_OR_* clauses.\n+\t* c-typeck.c (c_finish_omp_clauses): Handle IF_PRESENT and FINALIZE.\n+\n 2018-06-16  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \t* c-typeck.c (build_unary_op): Handle ABSU_EXPR;"}, {"sha": "7a926285f3a98fea7444ccd617a8d206e2449c35", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 37, "deletions": 78, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -11259,6 +11259,8 @@ c_parser_omp_clause_name (c_parser *parser)\n \tcase 'f':\n \t  if (!strcmp (\"final\", p))\n \t    result = PRAGMA_OMP_CLAUSE_FINAL;\n+\t  else if (!strcmp (\"finalize\", p))\n+\t    result = PRAGMA_OACC_CLAUSE_FINALIZE;\n \t  else if (!strcmp (\"firstprivate\", p))\n \t    result = PRAGMA_OMP_CLAUSE_FIRSTPRIVATE;\n \t  else if (!strcmp (\"from\", p))\n@@ -11277,7 +11279,9 @@ c_parser_omp_clause_name (c_parser *parser)\n \t    result = PRAGMA_OACC_CLAUSE_HOST;\n \t  break;\n \tcase 'i':\n-\t  if (!strcmp (\"inbranch\", p))\n+\t  if (!strcmp (\"if_present\", p))\n+\t    result = PRAGMA_OACC_CLAUSE_IF_PRESENT;\n+\t  else if (!strcmp (\"inbranch\", p))\n \t    result = PRAGMA_OMP_CLAUSE_INBRANCH;\n \t  else if (!strcmp (\"independent\", p))\n \t    result = PRAGMA_OACC_CLAUSE_INDEPENDENT;\n@@ -11325,18 +11329,20 @@ c_parser_omp_clause_name (c_parser *parser)\n \t    result = PRAGMA_OMP_CLAUSE_PARALLEL;\n \t  else if (!strcmp (\"present\", p))\n \t    result = PRAGMA_OACC_CLAUSE_PRESENT;\n+\t  /* As of OpenACC 2.5, these are now aliases of the non-present_or\n+\t     clauses.  */\n \t  else if (!strcmp (\"present_or_copy\", p)\n \t\t   || !strcmp (\"pcopy\", p))\n-\t    result = PRAGMA_OACC_CLAUSE_PRESENT_OR_COPY;\n+\t    result = PRAGMA_OACC_CLAUSE_COPY;\n \t  else if (!strcmp (\"present_or_copyin\", p)\n \t\t   || !strcmp (\"pcopyin\", p))\n-\t    result = PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYIN;\n+\t    result = PRAGMA_OACC_CLAUSE_COPYIN;\n \t  else if (!strcmp (\"present_or_copyout\", p)\n \t\t   || !strcmp (\"pcopyout\", p))\n-\t    result = PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYOUT;\n+\t    result = PRAGMA_OACC_CLAUSE_COPYOUT;\n \t  else if (!strcmp (\"present_or_create\", p)\n \t\t   || !strcmp (\"pcreate\", p))\n-\t    result = PRAGMA_OACC_CLAUSE_PRESENT_OR_CREATE;\n+\t    result = PRAGMA_OACC_CLAUSE_CREATE;\n \t  else if (!strcmp (\"priority\", p))\n \t    result = PRAGMA_OMP_CLAUSE_PRIORITY;\n \t  else if (!strcmp (\"private\", p))\n@@ -11355,6 +11361,8 @@ c_parser_omp_clause_name (c_parser *parser)\n \t    result = PRAGMA_OMP_CLAUSE_SCHEDULE;\n \t  else if (!strcmp (\"sections\", p))\n \t    result = PRAGMA_OMP_CLAUSE_SECTIONS;\n+\t  else if (!strcmp (\"self\", p)) /* \"self\" is a synonym for \"host\".  */\n+\t    result = PRAGMA_OACC_CLAUSE_HOST;\n \t  else if (!strcmp (\"seq\", p))\n \t    result = PRAGMA_OACC_CLAUSE_SEQ;\n \t  else if (!strcmp (\"shared\", p))\n@@ -11363,8 +11371,6 @@ c_parser_omp_clause_name (c_parser *parser)\n \t    result = PRAGMA_OMP_CLAUSE_SIMD;\n \t  else if (!strcmp (\"simdlen\", p))\n \t    result = PRAGMA_OMP_CLAUSE_SIMDLEN;\n-\t  else if (!strcmp (\"self\", p))\n-\t    result = PRAGMA_OACC_CLAUSE_SELF;\n \t  break;\n \tcase 't':\n \t  if (!strcmp (\"taskgroup\", p))\n@@ -11646,15 +11652,7 @@ c_parser_omp_var_list_parens (c_parser *parser, enum omp_clause_code kind,\n    copyout ( variable-list )\n    create ( variable-list )\n    delete ( variable-list )\n-   present ( variable-list )\n-   present_or_copy ( variable-list )\n-     pcopy ( variable-list )\n-   present_or_copyin ( variable-list )\n-     pcopyin ( variable-list )\n-   present_or_copyout ( variable-list )\n-     pcopyout ( variable-list )\n-   present_or_create ( variable-list )\n-     pcreate ( variable-list ) */\n+   present ( variable-list ) */\n \n static tree\n c_parser_oacc_data_clause (c_parser *parser, pragma_omp_clause c_kind,\n@@ -11664,19 +11662,19 @@ c_parser_oacc_data_clause (c_parser *parser, pragma_omp_clause c_kind,\n   switch (c_kind)\n     {\n     case PRAGMA_OACC_CLAUSE_COPY:\n-      kind = GOMP_MAP_FORCE_TOFROM;\n+      kind = GOMP_MAP_TOFROM;\n       break;\n     case PRAGMA_OACC_CLAUSE_COPYIN:\n-      kind = GOMP_MAP_FORCE_TO;\n+      kind = GOMP_MAP_TO;\n       break;\n     case PRAGMA_OACC_CLAUSE_COPYOUT:\n-      kind = GOMP_MAP_FORCE_FROM;\n+      kind = GOMP_MAP_FROM;\n       break;\n     case PRAGMA_OACC_CLAUSE_CREATE:\n-      kind = GOMP_MAP_FORCE_ALLOC;\n+      kind = GOMP_MAP_ALLOC;\n       break;\n     case PRAGMA_OACC_CLAUSE_DELETE:\n-      kind = GOMP_MAP_DELETE;\n+      kind = GOMP_MAP_RELEASE;\n       break;\n     case PRAGMA_OACC_CLAUSE_DEVICE:\n       kind = GOMP_MAP_FORCE_TO;\n@@ -11685,7 +11683,6 @@ c_parser_oacc_data_clause (c_parser *parser, pragma_omp_clause c_kind,\n       kind = GOMP_MAP_DEVICE_RESIDENT;\n       break;\n     case PRAGMA_OACC_CLAUSE_HOST:\n-    case PRAGMA_OACC_CLAUSE_SELF:\n       kind = GOMP_MAP_FORCE_FROM;\n       break;\n     case PRAGMA_OACC_CLAUSE_LINK:\n@@ -11694,18 +11691,6 @@ c_parser_oacc_data_clause (c_parser *parser, pragma_omp_clause c_kind,\n     case PRAGMA_OACC_CLAUSE_PRESENT:\n       kind = GOMP_MAP_FORCE_PRESENT;\n       break;\n-    case PRAGMA_OACC_CLAUSE_PRESENT_OR_COPY:\n-      kind = GOMP_MAP_TOFROM;\n-      break;\n-    case PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYIN:\n-      kind = GOMP_MAP_TO;\n-      break;\n-    case PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYOUT:\n-      kind = GOMP_MAP_FROM;\n-      break;\n-    case PRAGMA_OACC_CLAUSE_PRESENT_OR_CREATE:\n-      kind = GOMP_MAP_ALLOC;\n-      break;\n     default:\n       gcc_unreachable ();\n     }\n@@ -12597,8 +12582,9 @@ c_parser_oacc_shape_clause (c_parser *parser, omp_clause_code kind,\n   return list;\n }\n \n-/* OpenACC:\n+/* OpenACC 2.5:\n    auto\n+   finalize\n    independent\n    nohost\n    seq */\n@@ -13955,6 +13941,11 @@ c_parser_oacc_all_clauses (c_parser *parser, omp_clause_mask mask,\n \t  clauses = c_parser_oacc_data_clause (parser, c_kind, clauses);\n \t  c_name = \"device_resident\";\n \t  break;\n+\tcase PRAGMA_OACC_CLAUSE_FINALIZE:\n+\t  clauses = c_parser_oacc_simple_clause (parser, OMP_CLAUSE_FINALIZE,\n+\t\t\t\t\t\t clauses);\n+\t  c_name = \"finalize\";\n+\t  break;\n \tcase PRAGMA_OACC_CLAUSE_FIRSTPRIVATE:\n \t  clauses = c_parser_omp_clause_firstprivate (parser, clauses);\n \t  c_name = \"firstprivate\";\n@@ -13972,6 +13963,11 @@ c_parser_oacc_all_clauses (c_parser *parser, omp_clause_mask mask,\n \t  clauses = c_parser_omp_clause_if (parser, clauses, false);\n \t  c_name = \"if\";\n \t  break;\n+\tcase PRAGMA_OACC_CLAUSE_IF_PRESENT:\n+\t  clauses = c_parser_oacc_simple_clause (parser, OMP_CLAUSE_IF_PRESENT,\n+\t\t\t\t\t\t clauses);\n+\t  c_name = \"if_present\";\n+\t  break;\n \tcase PRAGMA_OACC_CLAUSE_INDEPENDENT:\n \t  clauses = c_parser_oacc_simple_clause (parser, OMP_CLAUSE_INDEPENDENT,\n \t\t\t\t\t\tclauses);\n@@ -13997,22 +13993,6 @@ c_parser_oacc_all_clauses (c_parser *parser, omp_clause_mask mask,\n \t  clauses = c_parser_oacc_data_clause (parser, c_kind, clauses);\n \t  c_name = \"present\";\n \t  break;\n-\tcase PRAGMA_OACC_CLAUSE_PRESENT_OR_COPY:\n-\t  clauses = c_parser_oacc_data_clause (parser, c_kind, clauses);\n-\t  c_name = \"present_or_copy\";\n-\t  break;\n-\tcase PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYIN:\n-\t  clauses = c_parser_oacc_data_clause (parser, c_kind, clauses);\n-\t  c_name = \"present_or_copyin\";\n-\t  break;\n-\tcase PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYOUT:\n-\t  clauses = c_parser_oacc_data_clause (parser, c_kind, clauses);\n-\t  c_name = \"present_or_copyout\";\n-\t  break;\n-\tcase PRAGMA_OACC_CLAUSE_PRESENT_OR_CREATE:\n-\t  clauses = c_parser_oacc_data_clause (parser, c_kind, clauses);\n-\t  c_name = \"present_or_create\";\n-\t  break;\n \tcase PRAGMA_OACC_CLAUSE_PRIVATE:\n \t  clauses = c_parser_omp_clause_private (parser, clauses);\n \t  c_name = \"private\";\n@@ -14021,10 +14001,6 @@ c_parser_oacc_all_clauses (c_parser *parser, omp_clause_mask mask,\n \t  clauses = c_parser_omp_clause_reduction (parser, clauses);\n \t  c_name = \"reduction\";\n \t  break;\n-\tcase PRAGMA_OACC_CLAUSE_SELF:\n-\t  clauses = c_parser_oacc_data_clause (parser, c_kind, clauses);\n-\t  c_name = \"self\";\n-\t  break;\n \tcase PRAGMA_OACC_CLAUSE_SEQ:\n \t  clauses = c_parser_oacc_simple_clause (parser, OMP_CLAUSE_SEQ,\n \t\t\t\t\t\tclauses);\n@@ -14417,11 +14393,7 @@ c_parser_oacc_cache (location_t loc, c_parser *parser)\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_CREATE)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_DEVICEPTR)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_IF)\t\t\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT)\t\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPY)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYIN)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYOUT)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_CREATE) )\n+\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT))\n \n static tree\n c_parser_oacc_data (location_t loc, c_parser *parser, bool *if_p)\n@@ -14451,11 +14423,7 @@ c_parser_oacc_data (location_t loc, c_parser *parser, bool *if_p)\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_DEVICEPTR)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_DEVICE_RESIDENT)\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_LINK)\t\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT)\t\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPY)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYIN)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYOUT)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_CREATE) )\n+\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT))\n \n static void\n c_parser_oacc_declare (c_parser *parser)\n@@ -14490,8 +14458,8 @@ c_parser_oacc_declare (c_parser *parser)\n       switch (OMP_CLAUSE_MAP_KIND (t))\n \t{\n \tcase GOMP_MAP_FIRSTPRIVATE_POINTER:\n-\tcase GOMP_MAP_FORCE_ALLOC:\n-\tcase GOMP_MAP_FORCE_TO:\n+\tcase GOMP_MAP_ALLOC:\n+\tcase GOMP_MAP_TO:\n \tcase GOMP_MAP_FORCE_DEVICEPTR:\n \tcase GOMP_MAP_DEVICE_RESIDENT:\n \t  break;\n@@ -14604,15 +14572,14 @@ c_parser_oacc_declare (c_parser *parser)\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_ASYNC)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_COPYIN)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_CREATE)\t\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYIN)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_CREATE)\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_WAIT) )\n \n #define OACC_EXIT_DATA_CLAUSE_MASK\t\t\t\t\t\\\n \t( (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_IF)\t\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_ASYNC)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_COPYOUT)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_DELETE) \t\t\\\n+\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_FINALIZE) \t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_WAIT) )\n \n static void\n@@ -14756,10 +14723,6 @@ c_parser_oacc_loop (location_t loc, c_parser *parser, char *p_name,\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_NUM_GANGS)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_NUM_WORKERS)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT)\t\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPY)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYIN)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYOUT)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_CREATE)\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_VECTOR_LENGTH)\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_WAIT) )\n \n@@ -14777,10 +14740,6 @@ c_parser_oacc_loop (location_t loc, c_parser *parser, char *p_name,\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_NUM_GANGS)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_NUM_WORKERS)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT)\t\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPY)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYIN)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYOUT)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_CREATE)\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_REDUCTION)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_VECTOR_LENGTH)\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_WAIT) )\n@@ -15008,7 +14967,7 @@ c_finish_oacc_routine (struct oacc_routine_data *data, tree fndecl,\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_DEVICE)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_HOST)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_IF)\t\t\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_SELF)\t\t\\\n+\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_IF_PRESENT)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_WAIT) )\n \n static void"}, {"sha": "90ae306c99ac2cd33124747150d6c95aaed9beff", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -13897,6 +13897,8 @@ c_finish_omp_clauses (tree clauses, enum c_omp_region_type ort)\n \tcase OMP_CLAUSE_WORKER:\n \tcase OMP_CLAUSE_VECTOR:\n \tcase OMP_CLAUSE_TILE:\n+\tcase OMP_CLAUSE_IF_PRESENT:\n+\tcase OMP_CLAUSE_FINALIZE:\n \t  pc = &OMP_CLAUSE_CHAIN (c);\n \t  continue;\n "}, {"sha": "56cecfae45f906807f073775bf28b676e308e5b8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -1,3 +1,27 @@\n+2018-06-20  Chung-Lin Tang <cltang@codesourcery.com>\n+\t    Thomas Schwinge <thomas@codesourcery.com>\n+\t    Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* parser.c (cp_parser_omp_clause_name): Add support for finalize\n+\tand if_present. Make present_or_{copy,copyin,copyout,create} aliases\n+\tto their non-present_or_* counterparts. Make 'self' an alias to\n+\tPRAGMA_OACC_CLAUSE_HOST.\n+\t(cp_parser_oacc_data_clause): Update GOMP mappings for\n+\tPRAGMA_OACC_CLAUSE_{COPY,COPYIN,COPYOUT,CREATE,DELETE}. Remove\n+\tPRAGMA_OACC_CLAUSE_{SELF,PRESENT_OR_*}.\n+\t(cp_parser_oacc_all_clauses): Handle finalize and if_present clauses.\n+\tRemove support for present_or_* clauses.\n+\t(OACC_KERNELS_CLAUSE_MASK): Remove PRESENT_OR_* clauses.\n+\t(OACC_PARALLEL_CLAUSE_MASK): Likewise.\n+\t(OACC_DECLARE_CLAUSE_MASK): Likewise.\n+\t(OACC_DATA_CLAUSE_MASK): Likewise.\n+\t(OACC_ENTER_DATA_CLAUSE_MASK): Remove PRESENT_OR_* clauses.\n+\t(OACC_EXIT_DATA_CLAUSE_MASK): Add FINALIZE clause.\n+\t(OACC_UPDATE_CLAUSE_MASK): Remove SELF, add IF_PRESENT.\n+\t(cp_parser_oacc_declare): Remove PRESENT_OR_* clauses.\n+\t* pt.c (tsubst_omp_clauses): Handle IF_PRESENT and FINALIZE.\n+\t* semantics.c (finish_omp_clauses): Handle IF_PRESENT and FINALIZE.\n+\n 2018-06-20  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/86240"}, {"sha": "154729c641dc907ebd838a20face6e9747a8d042", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 36, "deletions": 78, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -31375,6 +31375,8 @@ cp_parser_omp_clause_name (cp_parser *parser)\n \tcase 'f':\n \t  if (!strcmp (\"final\", p))\n \t    result = PRAGMA_OMP_CLAUSE_FINAL;\n+\t  else if (!strcmp (\"finalize\", p))\n+\t    result = PRAGMA_OACC_CLAUSE_FINALIZE;\n \t  else if (!strcmp (\"firstprivate\", p))\n \t    result = PRAGMA_OMP_CLAUSE_FIRSTPRIVATE;\n \t  else if (!strcmp (\"from\", p))\n@@ -31393,7 +31395,9 @@ cp_parser_omp_clause_name (cp_parser *parser)\n \t    result = PRAGMA_OACC_CLAUSE_HOST;\n \t  break;\n \tcase 'i':\n-\t  if (!strcmp (\"inbranch\", p))\n+\t  if (!strcmp (\"if_present\", p))\n+\t    result = PRAGMA_OACC_CLAUSE_IF_PRESENT;\n+\t  else if (!strcmp (\"inbranch\", p))\n \t    result = PRAGMA_OMP_CLAUSE_INBRANCH;\n \t  else if (!strcmp (\"independent\", p))\n \t    result = PRAGMA_OACC_CLAUSE_INDEPENDENT;\n@@ -31443,16 +31447,16 @@ cp_parser_omp_clause_name (cp_parser *parser)\n \t    result = PRAGMA_OACC_CLAUSE_PRESENT;\n \t  else if (!strcmp (\"present_or_copy\", p)\n \t\t   || !strcmp (\"pcopy\", p))\n-\t    result = PRAGMA_OACC_CLAUSE_PRESENT_OR_COPY;\n+\t    result = PRAGMA_OACC_CLAUSE_COPY;\n \t  else if (!strcmp (\"present_or_copyin\", p)\n \t\t   || !strcmp (\"pcopyin\", p))\n-\t    result = PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYIN;\n+\t    result = PRAGMA_OACC_CLAUSE_COPYIN;\n \t  else if (!strcmp (\"present_or_copyout\", p)\n \t\t   || !strcmp (\"pcopyout\", p))\n-\t    result = PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYOUT;\n+\t    result = PRAGMA_OACC_CLAUSE_COPYOUT;\n \t  else if (!strcmp (\"present_or_create\", p)\n \t\t   || !strcmp (\"pcreate\", p))\n-\t    result = PRAGMA_OACC_CLAUSE_PRESENT_OR_CREATE;\n+\t    result = PRAGMA_OACC_CLAUSE_CREATE;\n \t  else if (!strcmp (\"priority\", p))\n \t    result = PRAGMA_OMP_CLAUSE_PRIORITY;\n \t  else if (!strcmp (\"proc_bind\", p))\n@@ -31469,8 +31473,8 @@ cp_parser_omp_clause_name (cp_parser *parser)\n \t    result = PRAGMA_OMP_CLAUSE_SCHEDULE;\n \t  else if (!strcmp (\"sections\", p))\n \t    result = PRAGMA_OMP_CLAUSE_SECTIONS;\n-\t  else if (!strcmp (\"self\", p))\n-\t    result = PRAGMA_OACC_CLAUSE_SELF;\n+\t  else if (!strcmp (\"self\", p)) /* \"self\" is a synonym for \"host\".  */\n+\t    result = PRAGMA_OACC_CLAUSE_HOST;\n \t  else if (!strcmp (\"seq\", p))\n \t    result = PRAGMA_OACC_CLAUSE_SEQ;\n \t  else if (!strcmp (\"shared\", p))\n@@ -31730,15 +31734,7 @@ cp_parser_omp_var_list (cp_parser *parser, enum omp_clause_code kind, tree list)\n    copyout ( variable-list )\n    create ( variable-list )\n    delete ( variable-list )\n-   present ( variable-list )\n-   present_or_copy ( variable-list )\n-     pcopy ( variable-list )\n-   present_or_copyin ( variable-list )\n-     pcopyin ( variable-list )\n-   present_or_copyout ( variable-list )\n-     pcopyout ( variable-list )\n-   present_or_create ( variable-list )\n-     pcreate ( variable-list ) */\n+   present ( variable-list ) */\n \n static tree\n cp_parser_oacc_data_clause (cp_parser *parser, pragma_omp_clause c_kind,\n@@ -31748,19 +31744,19 @@ cp_parser_oacc_data_clause (cp_parser *parser, pragma_omp_clause c_kind,\n   switch (c_kind)\n     {\n     case PRAGMA_OACC_CLAUSE_COPY:\n-      kind = GOMP_MAP_FORCE_TOFROM;\n+      kind = GOMP_MAP_TOFROM;\n       break;\n     case PRAGMA_OACC_CLAUSE_COPYIN:\n-      kind = GOMP_MAP_FORCE_TO;\n+      kind = GOMP_MAP_TO;\n       break;\n     case PRAGMA_OACC_CLAUSE_COPYOUT:\n-      kind = GOMP_MAP_FORCE_FROM;\n+      kind = GOMP_MAP_FROM;\n       break;\n     case PRAGMA_OACC_CLAUSE_CREATE:\n-      kind = GOMP_MAP_FORCE_ALLOC;\n+      kind = GOMP_MAP_ALLOC;\n       break;\n     case PRAGMA_OACC_CLAUSE_DELETE:\n-      kind = GOMP_MAP_DELETE;\n+      kind = GOMP_MAP_RELEASE;\n       break;\n     case PRAGMA_OACC_CLAUSE_DEVICE:\n       kind = GOMP_MAP_FORCE_TO;\n@@ -31769,7 +31765,6 @@ cp_parser_oacc_data_clause (cp_parser *parser, pragma_omp_clause c_kind,\n       kind = GOMP_MAP_DEVICE_RESIDENT;\n       break;\n     case PRAGMA_OACC_CLAUSE_HOST:\n-    case PRAGMA_OACC_CLAUSE_SELF:\n       kind = GOMP_MAP_FORCE_FROM;\n       break;\n     case PRAGMA_OACC_CLAUSE_LINK:\n@@ -31778,18 +31773,6 @@ cp_parser_oacc_data_clause (cp_parser *parser, pragma_omp_clause c_kind,\n     case PRAGMA_OACC_CLAUSE_PRESENT:\n       kind = GOMP_MAP_FORCE_PRESENT;\n       break;\n-    case PRAGMA_OACC_CLAUSE_PRESENT_OR_COPY:\n-      kind = GOMP_MAP_TOFROM;\n-      break;\n-    case PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYIN:\n-      kind = GOMP_MAP_TO;\n-      break;\n-    case PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYOUT:\n-      kind = GOMP_MAP_FROM;\n-      break;\n-    case PRAGMA_OACC_CLAUSE_PRESENT_OR_CREATE:\n-      kind = GOMP_MAP_ALLOC;\n-      break;\n     default:\n       gcc_unreachable ();\n     }\n@@ -31828,8 +31811,9 @@ cp_parser_oacc_data_clause_deviceptr (cp_parser *parser, tree list)\n   return list;\n }\n \n-/* OpenACC 2.0:\n+/* OpenACC 2.5:\n    auto\n+   finalize\n    independent\n    nohost\n    seq */\n@@ -33794,6 +33778,11 @@ cp_parser_oacc_all_clauses (cp_parser *parser, omp_clause_mask mask,\n \t  clauses = cp_parser_oacc_data_clause (parser, c_kind, clauses);\n \t  c_name = \"device_resident\";\n \t  break;\n+\tcase PRAGMA_OACC_CLAUSE_FINALIZE:\n+\t  clauses = cp_parser_oacc_simple_clause (parser, OMP_CLAUSE_FINALIZE,\n+\t\t\t\t\t\t  clauses, here);\n+\t  c_name = \"finalize\";\n+\t  break;\n \tcase PRAGMA_OACC_CLAUSE_FIRSTPRIVATE:\n \t  clauses = cp_parser_omp_var_list (parser, OMP_CLAUSE_FIRSTPRIVATE,\n \t\t\t\t\t    clauses);\n@@ -33812,6 +33801,12 @@ cp_parser_oacc_all_clauses (cp_parser *parser, omp_clause_mask mask,\n \t  clauses = cp_parser_omp_clause_if (parser, clauses, here, false);\n \t  c_name = \"if\";\n \t  break;\n+\tcase PRAGMA_OACC_CLAUSE_IF_PRESENT:\n+\t  clauses = cp_parser_oacc_simple_clause (parser,\n+\t\t\t\t\t\t  OMP_CLAUSE_IF_PRESENT,\n+\t\t\t\t\t\t  clauses, here);\n+\t  c_name = \"if_present\";\n+\t  break;\n \tcase PRAGMA_OACC_CLAUSE_INDEPENDENT:\n \t  clauses = cp_parser_oacc_simple_clause (parser,\n \t\t\t\t\t\t  OMP_CLAUSE_INDEPENDENT,\n@@ -33838,22 +33833,6 @@ cp_parser_oacc_all_clauses (cp_parser *parser, omp_clause_mask mask,\n \t  clauses = cp_parser_oacc_data_clause (parser, c_kind, clauses);\n \t  c_name = \"present\";\n \t  break;\n-\tcase PRAGMA_OACC_CLAUSE_PRESENT_OR_COPY:\n-\t  clauses = cp_parser_oacc_data_clause (parser, c_kind, clauses);\n-\t  c_name = \"present_or_copy\";\n-\t  break;\n-\tcase PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYIN:\n-\t  clauses = cp_parser_oacc_data_clause (parser, c_kind, clauses);\n-\t  c_name = \"present_or_copyin\";\n-\t  break;\n-\tcase PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYOUT:\n-\t  clauses = cp_parser_oacc_data_clause (parser, c_kind, clauses);\n-\t  c_name = \"present_or_copyout\";\n-\t  break;\n-\tcase PRAGMA_OACC_CLAUSE_PRESENT_OR_CREATE:\n-\t  clauses = cp_parser_oacc_data_clause (parser, c_kind, clauses);\n-\t  c_name = \"present_or_create\";\n-\t  break;\n \tcase PRAGMA_OACC_CLAUSE_PRIVATE:\n \t  clauses = cp_parser_omp_var_list (parser, OMP_CLAUSE_PRIVATE,\n \t\t\t\t\t    clauses);\n@@ -33863,10 +33842,6 @@ cp_parser_oacc_all_clauses (cp_parser *parser, omp_clause_mask mask,\n \t  clauses = cp_parser_omp_clause_reduction (parser, clauses);\n \t  c_name = \"reduction\";\n \t  break;\n-\tcase PRAGMA_OACC_CLAUSE_SELF:\n-\t  clauses = cp_parser_oacc_data_clause (parser, c_kind, clauses);\n-\t  c_name = \"self\";\n-\t  break;\n \tcase PRAGMA_OACC_CLAUSE_SEQ:\n \t  clauses = cp_parser_oacc_simple_clause (parser, OMP_CLAUSE_SEQ,\n \t\t\t\t\t\t clauses, here);\n@@ -36802,11 +36777,7 @@ cp_parser_oacc_cache (cp_parser *parser, cp_token *pragma_tok)\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_CREATE)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_DEVICEPTR)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_IF)\t\t\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT)\t\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPY)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYIN)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYOUT)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_CREATE))\n+\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT) )\n \n static tree\n cp_parser_oacc_data (cp_parser *parser, cp_token *pragma_tok, bool *if_p)\n@@ -36861,11 +36832,7 @@ cp_parser_oacc_host_data (cp_parser *parser, cp_token *pragma_tok, bool *if_p)\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_DEVICEPTR)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_DEVICE_RESIDENT)\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_LINK)\t\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT)\t\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPY)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYIN)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYOUT)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_CREATE))\n+\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT) )\n \n static tree\n cp_parser_oacc_declare (cp_parser *parser, cp_token *pragma_tok)\n@@ -36898,8 +36865,8 @@ cp_parser_oacc_declare (cp_parser *parser, cp_token *pragma_tok)\n       switch (OMP_CLAUSE_MAP_KIND (t))\n \t{\n \tcase GOMP_MAP_FIRSTPRIVATE_POINTER:\n-\tcase GOMP_MAP_FORCE_ALLOC:\n-\tcase GOMP_MAP_FORCE_TO:\n+\tcase GOMP_MAP_ALLOC:\n+\tcase GOMP_MAP_TO:\n \tcase GOMP_MAP_FORCE_DEVICEPTR:\n \tcase GOMP_MAP_DEVICE_RESIDENT:\n \t  break;\n@@ -37010,15 +36977,14 @@ cp_parser_oacc_declare (cp_parser *parser, cp_token *pragma_tok)\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_ASYNC)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_COPYIN)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_CREATE)\t\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYIN)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_CREATE)\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_WAIT) )\n \n #define OACC_EXIT_DATA_CLAUSE_MASK\t\t\t\t\t\\\n \t( (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_IF)\t\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_ASYNC)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_COPYOUT)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_DELETE) \t\t\\\n+\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_FINALIZE) \t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_WAIT) )\n \n static tree\n@@ -37131,10 +37097,6 @@ cp_parser_oacc_loop (cp_parser *parser, cp_token *pragma_tok, char *p_name,\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_NUM_GANGS)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_NUM_WORKERS)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT)\t\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPY)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYIN)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYOUT)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_CREATE)\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_VECTOR_LENGTH)\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_WAIT) )\n \n@@ -37151,10 +37113,6 @@ cp_parser_oacc_loop (cp_parser *parser, cp_token *pragma_tok, char *p_name,\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_NUM_GANGS)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_NUM_WORKERS)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT)\t\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPY)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYIN)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_COPYOUT)\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRESENT_OR_CREATE)   \\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_PRIVATE)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_REDUCTION)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_VECTOR_LENGTH)       \\\n@@ -37215,7 +37173,7 @@ cp_parser_oacc_kernels_parallel (cp_parser *parser, cp_token *pragma_tok,\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_DEVICE)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_HOST)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_IF)\t\t\t\\\n-\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_SELF)\t\t\\\n+\t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_IF_PRESENT)\t\t\\\n \t| (OMP_CLAUSE_MASK_1 << PRAGMA_OACC_CLAUSE_WAIT))\n \n static tree"}, {"sha": "c5433dc46ae81e39376b2a08480950ebc69ec124", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -16107,6 +16107,8 @@ tsubst_omp_clauses (tree clauses, enum c_omp_region_type ort,\n \tcase OMP_CLAUSE_INDEPENDENT:\n \tcase OMP_CLAUSE_AUTO:\n \tcase OMP_CLAUSE_SEQ:\n+\tcase OMP_CLAUSE_IF_PRESENT:\n+\tcase OMP_CLAUSE_FINALIZE:\n \t  break;\n \tdefault:\n \t  gcc_unreachable ();"}, {"sha": "bad712ee6e8e021ce6666e2b987c847ea469348e", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -7091,6 +7091,8 @@ finish_omp_clauses (tree clauses, enum c_omp_region_type ort)\n \tcase OMP_CLAUSE_AUTO:\n \tcase OMP_CLAUSE_INDEPENDENT:\n \tcase OMP_CLAUSE_SEQ:\n+\tcase OMP_CLAUSE_IF_PRESENT:\n+\tcase OMP_CLAUSE_FINALIZE:\n \t  break;\n \n \tcase OMP_CLAUSE_TILE:"}, {"sha": "99a311490c558aea9f29658219af37d6c5caa57f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -1,3 +1,25 @@\n+2018-06-20  Chung-Lin Tang <cltang@codesourcery.com>\n+\t    Thomas Schwinge <thomas@codesourcery.com>\n+\t    Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* gfortran.h (gfc_omp_clauses): Add unsigned if_present, finalize\n+\tbitfields.\n+\t* openmp.c (enum omp_mask2): Remove OMP_CLAUSE_PRESENT_OR_*. Add\n+\tOMP_CLAUSE_{IF_PRESENT,FINALIZE}.\n+\t(gfc_match_omp_clauses): Update handling of copy, copyin, copyout,\n+\tcreate, deviceptr, present_of_*. Add support for finalize and\n+\tif_present.\n+\t(OACC_PARALLEL_CLAUSES): Remove PRESENT_OR_* clauses.\n+\t(OACC_KERNELS_CLAUSES): Likewise.\n+\t(OACC_DATA_CLAUSES): Likewise.\n+\t(OACC_DECLARE_CLAUSES): Likewise.\n+\t(OACC_UPDATE_CLAUSES): Add IF_PRESENT clause.\n+\t(OACC_ENTER_DATA_CLAUSES): Remove PRESENT_OR_* clauses.\n+\t(OACC_EXIT_DATA_CLAUSES): Add FINALIZE clause.\n+\t(gfc_match_oacc_declare): Update to OpenACC 2.5 semantics.\n+\t* trans-openmp.c (gfc_trans_omp_clauses): Add support for IF_PRESENT\n+\tand FINALIZE.\n+\n 2018-06-18  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* trans-decl.c (gfc_get_fake_result_decl): Revert latest change."}, {"sha": "0b89f8de950385579ef9a468a795abcae4eb81f9", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -1344,6 +1344,7 @@ typedef struct gfc_omp_clauses\n   gfc_expr_list *tile_list;\n   unsigned async:1, gang:1, worker:1, vector:1, seq:1, independent:1;\n   unsigned wait:1, par_auto:1, gang_static:1;\n+  unsigned if_present:1, finalize:1;\n   locus loc;\n \n }"}, {"sha": "94a7f7eaa5082a74c0e74318944ad0d02915d20c", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 56, "deletions": 49, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -796,10 +796,6 @@ enum omp_mask2\n   OMP_CLAUSE_COPYOUT,\n   OMP_CLAUSE_CREATE,\n   OMP_CLAUSE_PRESENT,\n-  OMP_CLAUSE_PRESENT_OR_COPY,\n-  OMP_CLAUSE_PRESENT_OR_COPYIN,\n-  OMP_CLAUSE_PRESENT_OR_COPYOUT,\n-  OMP_CLAUSE_PRESENT_OR_CREATE,\n   OMP_CLAUSE_DEVICEPTR,\n   OMP_CLAUSE_GANG,\n   OMP_CLAUSE_WORKER,\n@@ -813,6 +809,8 @@ enum omp_mask2\n   OMP_CLAUSE_DELETE,\n   OMP_CLAUSE_AUTO,\n   OMP_CLAUSE_TILE,\n+  OMP_CLAUSE_IF_PRESENT,\n+  OMP_CLAUSE_FINALIZE,\n   /* This must come last.  */\n   OMP_MASK2_LAST\n };\n@@ -1041,15 +1039,15 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \t  if ((mask & OMP_CLAUSE_COPY)\n \t      && gfc_match (\"copy ( \") == MATCH_YES\n \t      && gfc_match_omp_map_clause (&c->lists[OMP_LIST_MAP],\n-\t\t\t\t\t   OMP_MAP_FORCE_TOFROM))\n+\t\t\t\t\t   OMP_MAP_TOFROM))\n \t    continue;\n \t  if (mask & OMP_CLAUSE_COPYIN)\n \t    {\n \t      if (openacc)\n \t\t{\n \t\t  if (gfc_match (\"copyin ( \") == MATCH_YES\n \t\t      && gfc_match_omp_map_clause (&c->lists[OMP_LIST_MAP],\n-\t\t\t\t\t\t   OMP_MAP_FORCE_TO))\n+\t\t\t\t\t\t   OMP_MAP_TO))\n \t\t    continue;\n \t\t}\n \t      else if (gfc_match_omp_variable_list (\"copyin (\",\n@@ -1060,7 +1058,7 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \t  if ((mask & OMP_CLAUSE_COPYOUT)\n \t      && gfc_match (\"copyout ( \") == MATCH_YES\n \t      && gfc_match_omp_map_clause (&c->lists[OMP_LIST_MAP],\n-\t\t\t\t\t   OMP_MAP_FORCE_FROM))\n+\t\t\t\t\t   OMP_MAP_FROM))\n \t    continue;\n \t  if ((mask & OMP_CLAUSE_COPYPRIVATE)\n \t      && gfc_match_omp_variable_list (\"copyprivate (\",\n@@ -1070,7 +1068,7 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \t  if ((mask & OMP_CLAUSE_CREATE)\n \t      && gfc_match (\"create ( \") == MATCH_YES\n \t      && gfc_match_omp_map_clause (&c->lists[OMP_LIST_MAP],\n-\t\t\t\t\t   OMP_MAP_FORCE_ALLOC))\n+\t\t\t\t\t   OMP_MAP_ALLOC))\n \t    continue;\n \t  break;\n \tcase 'd':\n@@ -1106,7 +1104,7 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \t  if ((mask & OMP_CLAUSE_DELETE)\n \t      && gfc_match (\"delete ( \") == MATCH_YES\n \t      && gfc_match_omp_map_clause (&c->lists[OMP_LIST_MAP],\n-\t\t\t\t\t   OMP_MAP_DELETE))\n+\t\t\t\t\t   OMP_MAP_RELEASE))\n \t    continue;\n \t  if ((mask & OMP_CLAUSE_DEPEND)\n \t      && gfc_match (\"depend ( \") == MATCH_YES)\n@@ -1161,19 +1159,10 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \t\t\t\t\t   OMP_MAP_FORCE_TO))\n \t    continue;\n \t  if ((mask & OMP_CLAUSE_DEVICEPTR)\n-\t      && gfc_match (\"deviceptr ( \") == MATCH_YES)\n-\t    {\n-\t      gfc_omp_namelist **list = &c->lists[OMP_LIST_MAP];\n-\t      gfc_omp_namelist **head = NULL;\n-\t      if (gfc_match_omp_variable_list (\"\", list, true, NULL,\n-\t\t\t\t\t       &head, false) == MATCH_YES)\n-\t\t{\n-\t\t  gfc_omp_namelist *n;\n-\t\t  for (n = *head; n; n = n->next)\n-\t\t    n->u.map_op = OMP_MAP_FORCE_DEVICEPTR;\n-\t\t  continue;\n-\t\t}\n-\t    }\n+\t      && gfc_match (\"deviceptr ( \") == MATCH_YES\n+\t      && gfc_match_omp_map_clause (&c->lists[OMP_LIST_MAP],\n+\t\t\t\t\t   OMP_MAP_FORCE_DEVICEPTR))\n+\t    continue;\n \t  if ((mask & OMP_CLAUSE_DEVICE_RESIDENT)\n \t      && gfc_match_omp_variable_list\n \t\t   (\"device_resident (\",\n@@ -1202,6 +1191,14 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \t      && c->final_expr == NULL\n \t      && gfc_match (\"final ( %e )\", &c->final_expr) == MATCH_YES)\n \t    continue;\n+\t  if ((mask & OMP_CLAUSE_FINALIZE)\n+\t      && !c->finalize\n+\t      && gfc_match (\"finalize\") == MATCH_YES)\n+\t    {\n+\t      c->finalize = true;\n+\t      needs_space = true;\n+\t      continue;\n+\t    }\n \t  if ((mask & OMP_CLAUSE_FIRSTPRIVATE)\n \t      && gfc_match_omp_variable_list (\"firstprivate (\",\n \t\t\t\t\t      &c->lists[OMP_LIST_FIRSTPRIVATE],\n@@ -1274,6 +1271,14 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \t\t}\n \t      gfc_current_locus = old_loc;\n \t    }\n+\t  if ((mask & OMP_CLAUSE_IF_PRESENT)\n+\t      && !c->if_present\n+\t      && gfc_match (\"if_present\") == MATCH_YES)\n+\t    {\n+\t      c->if_present = true;\n+\t      needs_space = true;\n+\t      continue;\n+\t    }\n \t  if ((mask & OMP_CLAUSE_INBRANCH)\n \t      && !c->inbranch\n \t      && !c->notinbranch\n@@ -1503,22 +1508,22 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \t    }\n \t  break;\n \tcase 'p':\n-\t  if ((mask & OMP_CLAUSE_PRESENT_OR_COPY)\n+\t  if ((mask & OMP_CLAUSE_COPY)\n \t      && gfc_match (\"pcopy ( \") == MATCH_YES\n \t      && gfc_match_omp_map_clause (&c->lists[OMP_LIST_MAP],\n \t\t\t\t\t   OMP_MAP_TOFROM))\n \t    continue;\n-\t  if ((mask & OMP_CLAUSE_PRESENT_OR_COPYIN)\n+\t  if ((mask & OMP_CLAUSE_COPYIN)\n \t      && gfc_match (\"pcopyin ( \") == MATCH_YES\n \t      && gfc_match_omp_map_clause (&c->lists[OMP_LIST_MAP],\n \t\t\t\t\t   OMP_MAP_TO))\n \t    continue;\n-\t  if ((mask & OMP_CLAUSE_PRESENT_OR_COPYOUT)\n+\t  if ((mask & OMP_CLAUSE_COPYOUT)\n \t      && gfc_match (\"pcopyout ( \") == MATCH_YES\n \t      && gfc_match_omp_map_clause (&c->lists[OMP_LIST_MAP],\n \t\t\t\t\t   OMP_MAP_FROM))\n \t    continue;\n-\t  if ((mask & OMP_CLAUSE_PRESENT_OR_CREATE)\n+\t  if ((mask & OMP_CLAUSE_CREATE)\n \t      && gfc_match (\"pcreate ( \") == MATCH_YES\n \t      && gfc_match_omp_map_clause (&c->lists[OMP_LIST_MAP],\n \t\t\t\t\t   OMP_MAP_ALLOC))\n@@ -1528,22 +1533,22 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \t      && gfc_match_omp_map_clause (&c->lists[OMP_LIST_MAP],\n \t\t\t\t\t   OMP_MAP_FORCE_PRESENT))\n \t    continue;\n-\t  if ((mask & OMP_CLAUSE_PRESENT_OR_COPY)\n+\t  if ((mask & OMP_CLAUSE_COPY)\n \t      && gfc_match (\"present_or_copy ( \") == MATCH_YES\n \t      && gfc_match_omp_map_clause (&c->lists[OMP_LIST_MAP],\n \t\t\t\t\t   OMP_MAP_TOFROM))\n \t    continue;\n-\t  if ((mask & OMP_CLAUSE_PRESENT_OR_COPYIN)\n+\t  if ((mask & OMP_CLAUSE_COPYIN)\n \t      && gfc_match (\"present_or_copyin ( \") == MATCH_YES\n \t      && gfc_match_omp_map_clause (&c->lists[OMP_LIST_MAP],\n \t\t\t\t\t   OMP_MAP_TO))\n \t    continue;\n-\t  if ((mask & OMP_CLAUSE_PRESENT_OR_COPYOUT)\n+\t  if ((mask & OMP_CLAUSE_COPYOUT)\n \t      && gfc_match (\"present_or_copyout ( \") == MATCH_YES\n \t      && gfc_match_omp_map_clause (&c->lists[OMP_LIST_MAP],\n \t\t\t\t\t   OMP_MAP_FROM))\n \t    continue;\n-\t  if ((mask & OMP_CLAUSE_PRESENT_OR_CREATE)\n+\t  if ((mask & OMP_CLAUSE_CREATE)\n \t      && gfc_match (\"present_or_create ( \") == MATCH_YES\n \t      && gfc_match_omp_map_clause (&c->lists[OMP_LIST_MAP],\n \t\t\t\t\t   OMP_MAP_ALLOC))\n@@ -1925,23 +1930,19 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n   (omp_mask (OMP_CLAUSE_IF) | OMP_CLAUSE_ASYNC | OMP_CLAUSE_NUM_GANGS\t      \\\n    | OMP_CLAUSE_NUM_WORKERS | OMP_CLAUSE_VECTOR_LENGTH | OMP_CLAUSE_REDUCTION \\\n    | OMP_CLAUSE_COPY | OMP_CLAUSE_COPYIN | OMP_CLAUSE_COPYOUT\t\t      \\\n-   | OMP_CLAUSE_CREATE | OMP_CLAUSE_PRESENT | OMP_CLAUSE_PRESENT_OR_COPY      \\\n-   | OMP_CLAUSE_PRESENT_OR_COPYIN | OMP_CLAUSE_PRESENT_OR_COPYOUT\t      \\\n-   | OMP_CLAUSE_PRESENT_OR_CREATE | OMP_CLAUSE_DEVICEPTR | OMP_CLAUSE_PRIVATE \\\n-   | OMP_CLAUSE_FIRSTPRIVATE | OMP_CLAUSE_DEFAULT | OMP_CLAUSE_WAIT)\n+   | OMP_CLAUSE_CREATE | OMP_CLAUSE_PRESENT | OMP_CLAUSE_DEVICEPTR\t      \\\n+   | OMP_CLAUSE_PRIVATE | OMP_CLAUSE_FIRSTPRIVATE | OMP_CLAUSE_DEFAULT\t      \\\n+   | OMP_CLAUSE_WAIT)\n #define OACC_KERNELS_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_IF) | OMP_CLAUSE_ASYNC | OMP_CLAUSE_NUM_GANGS\t      \\\n    | OMP_CLAUSE_NUM_WORKERS | OMP_CLAUSE_VECTOR_LENGTH | OMP_CLAUSE_DEVICEPTR \\\n    | OMP_CLAUSE_COPY | OMP_CLAUSE_COPYIN | OMP_CLAUSE_COPYOUT\t\t      \\\n-   | OMP_CLAUSE_CREATE | OMP_CLAUSE_PRESENT | OMP_CLAUSE_PRESENT_OR_COPY      \\\n-   | OMP_CLAUSE_PRESENT_OR_COPYIN | OMP_CLAUSE_PRESENT_OR_COPYOUT\t      \\\n-   | OMP_CLAUSE_PRESENT_OR_CREATE | OMP_CLAUSE_DEFAULT | OMP_CLAUSE_WAIT)\n+   | OMP_CLAUSE_CREATE | OMP_CLAUSE_PRESENT | OMP_CLAUSE_DEFAULT\t      \\\n+   | OMP_CLAUSE_WAIT)\n #define OACC_DATA_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_IF) | OMP_CLAUSE_DEVICEPTR  | OMP_CLAUSE_COPY\t      \\\n    | OMP_CLAUSE_COPYIN | OMP_CLAUSE_COPYOUT | OMP_CLAUSE_CREATE\t\t      \\\n-   | OMP_CLAUSE_PRESENT | OMP_CLAUSE_PRESENT_OR_COPY\t\t\t      \\\n-   | OMP_CLAUSE_PRESENT_OR_COPYIN | OMP_CLAUSE_PRESENT_OR_COPYOUT\t      \\\n-   | OMP_CLAUSE_PRESENT_OR_CREATE)\n+   | OMP_CLAUSE_PRESENT)\n #define OACC_LOOP_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_COLLAPSE) | OMP_CLAUSE_GANG | OMP_CLAUSE_WORKER\t      \\\n    | OMP_CLAUSE_VECTOR | OMP_CLAUSE_SEQ | OMP_CLAUSE_INDEPENDENT\t      \\\n@@ -1955,19 +1956,17 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n #define OACC_DECLARE_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_COPY) | OMP_CLAUSE_COPYIN | OMP_CLAUSE_COPYOUT\t      \\\n    | OMP_CLAUSE_CREATE | OMP_CLAUSE_DEVICEPTR | OMP_CLAUSE_DEVICE_RESIDENT    \\\n-   | OMP_CLAUSE_PRESENT | OMP_CLAUSE_PRESENT_OR_COPY\t\t\t      \\\n-   | OMP_CLAUSE_PRESENT_OR_COPYIN | OMP_CLAUSE_PRESENT_OR_COPYOUT\t      \\\n-   | OMP_CLAUSE_PRESENT_OR_CREATE | OMP_CLAUSE_LINK)\n+   | OMP_CLAUSE_PRESENT\t\t\t      \\\n+   | OMP_CLAUSE_LINK)\n #define OACC_UPDATE_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_IF) | OMP_CLAUSE_ASYNC | OMP_CLAUSE_HOST_SELF\t      \\\n-   | OMP_CLAUSE_DEVICE | OMP_CLAUSE_WAIT)\n+   | OMP_CLAUSE_DEVICE | OMP_CLAUSE_WAIT | OMP_CLAUSE_IF_PRESENT)\n #define OACC_ENTER_DATA_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_IF) | OMP_CLAUSE_ASYNC | OMP_CLAUSE_WAIT\t      \\\n-   | OMP_CLAUSE_COPYIN | OMP_CLAUSE_CREATE | OMP_CLAUSE_PRESENT_OR_COPYIN     \\\n-   | OMP_CLAUSE_PRESENT_OR_CREATE)\n+   | OMP_CLAUSE_COPYIN | OMP_CLAUSE_CREATE)\n #define OACC_EXIT_DATA_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_IF) | OMP_CLAUSE_ASYNC | OMP_CLAUSE_WAIT\t      \\\n-   | OMP_CLAUSE_COPYOUT | OMP_CLAUSE_DELETE)\n+   | OMP_CLAUSE_COPYOUT | OMP_CLAUSE_DELETE | OMP_CLAUSE_FINALIZE)\n #define OACC_WAIT_CLAUSES \\\n   omp_mask (OMP_CLAUSE_ASYNC)\n #define OACC_ROUTINE_CLAUSES \\\n@@ -2061,8 +2060,7 @@ gfc_match_oacc_declare (void)\n \n       if (s->ns->proc_name && s->ns->proc_name->attr.proc == PROC_MODULE)\n \t{\n-\t  if (n->u.map_op != OMP_MAP_FORCE_ALLOC\n-\t      && n->u.map_op != OMP_MAP_FORCE_TO)\n+\t  if (n->u.map_op != OMP_MAP_ALLOC && n->u.map_op != OMP_MAP_TO)\n \t    {\n \t      gfc_error (\"Invalid clause in module with !$ACC DECLARE at %L\",\n \t\t\t &where);\n@@ -2072,6 +2070,13 @@ gfc_match_oacc_declare (void)\n \t  module_var = true;\n \t}\n \n+      if (ns->proc_name->attr.oacc_function)\n+\t{\n+\t  gfc_error (\"Invalid declare in routine with $!ACC DECLARE at %L\",\n+\t\t     &where);\n+\t  return MATCH_ERROR;\n+\t}\n+\n       if (s->attr.use_assoc)\n \t{\n \t  gfc_error (\"Variable is USE-associated with !$ACC DECLARE at %L\",\n@@ -2090,10 +2095,12 @@ gfc_match_oacc_declare (void)\n       switch (n->u.map_op)\n \t{\n \t  case OMP_MAP_FORCE_ALLOC:\n+\t  case OMP_MAP_ALLOC:\n \t    s->attr.oacc_declare_create = 1;\n \t    break;\n \n \t  case OMP_MAP_FORCE_TO:\n+\t  case OMP_MAP_TO:\n \t    s->attr.oacc_declare_copyin = 1;\n \t    break;\n "}, {"sha": "f038f4c5bf8f632bb11e69b2bbc7b6ea8670b6f5", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -2895,6 +2895,16 @@ gfc_trans_omp_clauses (stmtblock_t *block, gfc_omp_clauses *clauses,\n       c = build_omp_clause (where.lb->location, OMP_CLAUSE_AUTO);\n       omp_clauses = gfc_trans_add_clause (c, omp_clauses);\n     }\n+  if (clauses->if_present)\n+    {\n+      c = build_omp_clause (where.lb->location, OMP_CLAUSE_IF_PRESENT);\n+      omp_clauses = gfc_trans_add_clause (c, omp_clauses);\n+    }\n+  if (clauses->finalize)\n+    {\n+      c = build_omp_clause (where.lb->location, OMP_CLAUSE_FINALIZE);\n+      omp_clauses = gfc_trans_add_clause (c, omp_clauses);\n+    }\n   if (clauses->independent)\n     {\n       c = build_omp_clause (where.lb->location, OMP_CLAUSE_INDEPENDENT);"}, {"sha": "97543ed5f705d83c58a4489dddf8826a262b7274", "filename": "gcc/gimplify.c", "status": "modified", "additions": 52, "deletions": 15, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -8524,6 +8524,8 @@ gimplify_scan_omp_clauses (tree *list_p, gimple_seq *pre_p,\n \tcase OMP_CLAUSE_NOGROUP:\n \tcase OMP_CLAUSE_THREADS:\n \tcase OMP_CLAUSE_SIMD:\n+\tcase OMP_CLAUSE_IF_PRESENT:\n+\tcase OMP_CLAUSE_FINALIZE:\n \t  break;\n \n \tcase OMP_CLAUSE_DEFAULTMAP:\n@@ -9305,6 +9307,8 @@ gimplify_adjust_omp_clauses (gimple_seq *pre_p, gimple_seq body, tree *list_p,\n \tcase OMP_CLAUSE_AUTO:\n \tcase OMP_CLAUSE_SEQ:\n \tcase OMP_CLAUSE_TILE:\n+\tcase OMP_CLAUSE_IF_PRESENT:\n+\tcase OMP_CLAUSE_FINALIZE:\n \t  break;\n \n \tdefault:\n@@ -9361,21 +9365,7 @@ gimplify_oacc_declare_1 (tree clause)\n   switch (kind)\n     {\n       case GOMP_MAP_ALLOC:\n-      case GOMP_MAP_FORCE_ALLOC:\n-      case GOMP_MAP_FORCE_TO:\n-\tnew_op = GOMP_MAP_DELETE;\n-\tret = true;\n-\tbreak;\n-\n-      case GOMP_MAP_FORCE_FROM:\n-\tOMP_CLAUSE_SET_MAP_KIND (clause, GOMP_MAP_FORCE_ALLOC);\n-\tnew_op = GOMP_MAP_FORCE_FROM;\n-\tret = true;\n-\tbreak;\n-\n-      case GOMP_MAP_FORCE_TOFROM:\n-\tOMP_CLAUSE_SET_MAP_KIND (clause, GOMP_MAP_FORCE_TO);\n-\tnew_op = GOMP_MAP_FORCE_FROM;\n+\tnew_op = GOMP_MAP_RELEASE;\n \tret = true;\n \tbreak;\n \n@@ -10817,6 +10807,53 @@ gimplify_omp_target_update (tree *expr_p, gimple_seq *pre_p)\n \t\t\t     ort, TREE_CODE (expr));\n   gimplify_adjust_omp_clauses (pre_p, NULL, &OMP_STANDALONE_CLAUSES (expr),\n \t\t\t       TREE_CODE (expr));\n+  if (TREE_CODE (expr) == OACC_UPDATE\n+      && omp_find_clause (OMP_STANDALONE_CLAUSES (expr),\n+\t\t\t  OMP_CLAUSE_IF_PRESENT))\n+    {\n+      /* The runtime uses GOMP_MAP_{TO,FROM} to denote the if_present\n+\t clause.  */\n+      for (tree c = OMP_STANDALONE_CLAUSES (expr); c; c = OMP_CLAUSE_CHAIN (c))\n+\tif (OMP_CLAUSE_CODE (c) == OMP_CLAUSE_MAP)\n+\t  switch (OMP_CLAUSE_MAP_KIND (c))\n+\t    {\n+\t    case GOMP_MAP_FORCE_TO:\n+\t      OMP_CLAUSE_SET_MAP_KIND (c, GOMP_MAP_TO);\n+\t      break;\n+\t    case GOMP_MAP_FORCE_FROM:\n+\t      OMP_CLAUSE_SET_MAP_KIND (c, GOMP_MAP_FROM);\n+\t      break;\n+\t    default:\n+\t      break;\n+\t    }\n+    }\n+  else if (TREE_CODE (expr) == OACC_EXIT_DATA\n+\t   && omp_find_clause (OMP_STANDALONE_CLAUSES (expr),\n+\t\t\t       OMP_CLAUSE_FINALIZE))\n+    {\n+      /* Use GOMP_MAP_DELETE/GOMP_MAP_FORCE_FROM to denote that \"finalize\"\n+\t semantics apply to all mappings of this OpenACC directive.  */\n+      bool finalize_marked = false;\n+      for (tree c = OMP_STANDALONE_CLAUSES (expr); c; c = OMP_CLAUSE_CHAIN (c))\n+\tif (OMP_CLAUSE_CODE (c) == OMP_CLAUSE_MAP)\n+\t  switch (OMP_CLAUSE_MAP_KIND (c))\n+\t    {\n+\t    case GOMP_MAP_FROM:\n+\t      OMP_CLAUSE_SET_MAP_KIND (c, GOMP_MAP_FORCE_FROM);\n+\t      finalize_marked = true;\n+\t      break;\n+\t    case GOMP_MAP_RELEASE:\n+\t      OMP_CLAUSE_SET_MAP_KIND (c, GOMP_MAP_DELETE);\n+\t      finalize_marked = true;\n+\t      break;\n+\t    default:\n+\t      /* Check consistency: libgomp relies on the very first data\n+\t\t mapping clause being marked, so make sure we did that before\n+\t\t any other mapping clauses.  */\n+\t      gcc_assert (finalize_marked);\n+\t      break;\n+\t    }\n+    }\n   stmt = gimple_build_omp_target (NULL, kind, OMP_STANDALONE_CLAUSES (expr));\n \n   gimplify_seq_add_stmt (pre_p, stmt);"}, {"sha": "c591231d8f168b04db1292f7f07b3c1e986d326f", "filename": "gcc/omp-low.c", "status": "modified", "additions": 10, "deletions": 83, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -642,8 +642,7 @@ build_sender_ref (tree var, omp_context *ctx)\n    BASE_POINTERS_RESTRICT, declare the field with restrict.  */\n \n static void\n-install_var_field (tree var, bool by_ref, int mask, omp_context *ctx,\n-\t\t   bool base_pointers_restrict = false)\n+install_var_field (tree var, bool by_ref, int mask, omp_context *ctx)\n {\n   tree field, type, sfield = NULL_TREE;\n   splay_tree_key key = (splay_tree_key) var;\n@@ -674,11 +673,7 @@ install_var_field (tree var, bool by_ref, int mask, omp_context *ctx,\n       type = build_pointer_type (build_pointer_type (type));\n     }\n   else if (by_ref)\n-    {\n-      type = build_pointer_type (type);\n-      if (base_pointers_restrict)\n-\ttype = build_qualified_type (type, TYPE_QUAL_RESTRICT);\n-    }\n+    type = build_pointer_type (type);\n   else if ((mask & 3) == 1 && omp_is_reference (var))\n     type = TREE_TYPE (type);\n \n@@ -992,12 +987,10 @@ fixup_child_record_type (omp_context *ctx)\n }\n \n /* Instantiate decls as necessary in CTX to satisfy the data sharing\n-   specified by CLAUSES.  If BASE_POINTERS_RESTRICT, install var field with\n-   restrict.  */\n+   specified by CLAUSES.  */\n \n static void\n-scan_sharing_clauses (tree clauses, omp_context *ctx,\n-\t\t      bool base_pointers_restrict = false)\n+scan_sharing_clauses (tree clauses, omp_context *ctx)\n {\n   tree c, decl;\n   bool scan_array_reductions = false;\n@@ -1256,8 +1249,7 @@ scan_sharing_clauses (tree clauses, omp_context *ctx,\n \t\t      && TREE_CODE (TREE_TYPE (decl)) == ARRAY_TYPE)\n \t\t    install_var_field (decl, true, 7, ctx);\n \t\t  else\n-\t\t    install_var_field (decl, true, 3, ctx,\n-\t\t\t\t       base_pointers_restrict);\n+\t\t    install_var_field (decl, true, 3, ctx);\n \t\t  if (is_gimple_omp_offloaded (ctx->stmt)\n \t\t      && !OMP_CLAUSE_MAP_IN_REDUCTION (c))\n \t\t    install_var_local (decl, ctx);\n@@ -1328,6 +1320,8 @@ scan_sharing_clauses (tree clauses, omp_context *ctx,\n \tcase OMP_CLAUSE_TILE:\n \tcase OMP_CLAUSE__SIMT_:\n \tcase OMP_CLAUSE_DEFAULT:\n+\tcase OMP_CLAUSE_IF_PRESENT:\n+\tcase OMP_CLAUSE_FINALIZE:\n \t  break;\n \n \tcase OMP_CLAUSE_ALIGNED:\n@@ -1499,6 +1493,8 @@ scan_sharing_clauses (tree clauses, omp_context *ctx,\n \tcase OMP_CLAUSE_TILE:\n \tcase OMP_CLAUSE__GRIDDIM_:\n \tcase OMP_CLAUSE__SIMT_:\n+\tcase OMP_CLAUSE_IF_PRESENT:\n+\tcase OMP_CLAUSE_FINALIZE:\n \t  break;\n \n \tcase OMP_CLAUSE__CACHE_:\n@@ -2266,68 +2262,6 @@ scan_omp_single (gomp_single *stmt, omp_context *outer_ctx)\n     layout_type (ctx->record_type);\n }\n \n-/* Return true if the CLAUSES of an omp target guarantee that the base pointers\n-   used in the corresponding offloaded function are restrict.  */\n-\n-static bool\n-omp_target_base_pointers_restrict_p (tree clauses)\n-{\n-  /* The analysis relies on the GOMP_MAP_FORCE_* mapping kinds, which are only\n-     used by OpenACC.  */\n-  if (flag_openacc == 0)\n-    return false;\n-\n-  /* I.  Basic example:\n-\n-       void foo (void)\n-       {\n-\t unsigned int a[2], b[2];\n-\n-\t #pragma acc kernels \\\n-\t   copyout (a) \\\n-\t   copyout (b)\n-\t {\n-\t   a[0] = 0;\n-\t   b[0] = 1;\n-\t }\n-       }\n-\n-     After gimplification, we have:\n-\n-       #pragma omp target oacc_kernels \\\n-\t map(force_from:a [len: 8]) \\\n-\t map(force_from:b [len: 8])\n-       {\n-\t a[0] = 0;\n-\t b[0] = 1;\n-       }\n-\n-     Because both mappings have the force prefix, we know that they will be\n-     allocated when calling the corresponding offloaded function, which means we\n-     can mark the base pointers for a and b in the offloaded function as\n-     restrict.  */\n-\n-  tree c;\n-  for (c = clauses; c; c = OMP_CLAUSE_CHAIN (c))\n-    {\n-      if (OMP_CLAUSE_CODE (c) != OMP_CLAUSE_MAP)\n-\treturn false;\n-\n-      switch (OMP_CLAUSE_MAP_KIND (c))\n-\t{\n-\tcase GOMP_MAP_FORCE_ALLOC:\n-\tcase GOMP_MAP_FORCE_TO:\n-\tcase GOMP_MAP_FORCE_FROM:\n-\tcase GOMP_MAP_FORCE_TOFROM:\n-\t  break;\n-\tdefault:\n-\t  return false;\n-\t}\n-    }\n-\n-  return true;\n-}\n-\n /* Scan a GIMPLE_OMP_TARGET.  */\n \n static void\n@@ -2349,20 +2283,13 @@ scan_omp_target (gomp_target *stmt, omp_context *outer_ctx)\n   TYPE_NAME (ctx->record_type) = name;\n   TYPE_ARTIFICIAL (ctx->record_type) = 1;\n \n-  bool base_pointers_restrict = false;\n   if (offloaded)\n     {\n       create_omp_child_function (ctx, false);\n       gimple_omp_target_set_child_fn (stmt, ctx->cb.dst_fn);\n-\n-      base_pointers_restrict = omp_target_base_pointers_restrict_p (clauses);\n-      if (base_pointers_restrict\n-\t  && dump_file && (dump_flags & TDF_DETAILS))\n-\tfprintf (dump_file,\n-\t\t \"Base pointers in offloaded function are restrict\\n\");\n     }\n \n-  scan_sharing_clauses (clauses, ctx, base_pointers_restrict);\n+  scan_sharing_clauses (clauses, ctx);\n   scan_omp (gimple_omp_body_ptr (stmt), ctx);\n \n   if (TYPE_FIELDS (ctx->record_type) == NULL)"}, {"sha": "1c06223d668980df503ce2824ec70536c7b08ba4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -1,3 +1,36 @@\n+2018-06-20  Chung-Lin Tang <cltang@codesourcery.com>\n+\t    Thomas Schwinge <thomas@codesourcery.com>\n+\t    Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* c-c++-common/goacc/declare-1.c: Update test case to utilize OpenACC\n+\t2.5 data clause semantics.\n+\t* c-c++-common/goacc/declare-2.c: Likewise.\n+\t* c-c++-common/goacc/default-4.c: Likewise.\n+\t* c-c++-common/goacc/finalize-1.c: New test.\n+\t* c-c++-common/goacc/kernels-alias-2.c: Update test case to utilize\n+\tOpenACC 2.5 data clause semantics.\n+\t* c-c++-common/goacc/kernels-alias.c: Likewise.\n+\t* c-c++-common/goacc/routine-5.c: Likewise.\n+\t* c-c++-common/goacc/update-if_present-1.c: New test.\n+\t* c-c++-common/goacc/update-if_present-2.c: New test.\n+\t* g++.dg/goacc/template.C: Update test case to utilize OpenACC\n+\t2.5 data clause semantics.\n+\t* gfortran.dg/goacc/combined-directives.f90: Likewise.\n+\t* gfortran.dg/goacc/data-tree.f95: Likewise.\n+\t* gfortran.dg/goacc/declare-2.f95: Likewise.\n+\t* gfortran.dg/goacc/default-4.f: Likewise.\n+\t* gfortran.dg/goacc/enter-exit-data.f95: Likewise.\n+\t* gfortran.dg/goacc/finalize-1.f: New test.\n+\t* gfortran.dg/goacc/kernels-alias-2.f95: Update test case to utilize\n+\tOpenACC 2.5 data clause semantics.\n+\t* gfortran.dg/goacc/kernels-alias.f95: Likewise.\n+\t* gfortran.dg/goacc/kernels-tree.f95: Likewise.\n+\t* gfortran.dg/goacc/nested-function-1.f90: Likewise.\n+\t* gfortran.dg/goacc/parallel-tree.f95: Likewise.\n+\t* gfortran.dg/goacc/reduction-promotions.f90: Likewise.\n+\t* gfortran.dg/goacc/update-if_present-1.f90: New test.\n+\t* gfortran.dg/goacc/update-if_present-2.f90: New test.\n+\n 2018-06-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/86210"}, {"sha": "35b1ccd367bdd516bd27f1ebba8e38914dc92d60", "filename": "gcc/testsuite/c-c++-common/goacc/declare-1.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdeclare-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdeclare-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdeclare-1.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -19,6 +19,12 @@ int v4;\n int v5, v6, v7, v8;\n #pragma acc declare create(v5, v6) copyin(v7, v8)\n \n+int v9;\n+#pragma acc declare present_or_copyin(v9)\n+\n+int v10;\n+#pragma acc declare present_or_create(v10)\n+\n void\n f (void)\n {\n@@ -49,6 +55,12 @@ f (void)\n   extern int ve4;\n #pragma acc declare link(ve4)\n \n+  extern int ve5;\n+#pragma acc declare present_or_copyin(ve5)\n+ \n+  extern int ve6;\n+#pragma acc declare present_or_create(ve6)\n+\n   int va5;\n #pragma acc declare copy(va5)\n "}, {"sha": "33b82459bfc5029ba91546c9b210ed004d974a67", "filename": "gcc/testsuite/c-c++-common/goacc/declare-2.c", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdeclare-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdeclare-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdeclare-2.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -29,13 +29,7 @@ int v6;\n #pragma acc declare present_or_copy(v6) /* { dg-error \"at file scope\" } */\n \n int v7;\n-#pragma acc declare present_or_copyin(v7) /* { dg-error \"at file scope\" } */\n-\n-int v8;\n-#pragma acc declare present_or_copyout(v8) /* { dg-error \"at file scope\" } */\n-\n-int v9;\n-#pragma acc declare present_or_create(v9) /* { dg-error \"at file scope\" } */\n+#pragma acc declare present_or_copyout(v7) /* { dg-error \"at file scope\" } */\n \n int va10;\n #pragma acc declare create (va10)\n@@ -67,13 +61,7 @@ f (void)\n #pragma acc declare present_or_copy(ve3) /* { dg-error \"invalid use of\" } */\n \n   extern int ve4;\n-#pragma acc declare present_or_copyin(ve4) /* { dg-error \"invalid use of\" } */\n-\n-  extern int ve5;\n-#pragma acc declare present_or_copyout(ve5) /* { dg-error \"invalid use of\" } */\n-\n-  extern int ve6;\n-#pragma acc declare present_or_create(ve6) /* { dg-error \"invalid use of\" } */\n+#pragma acc declare present_or_copyout(ve4) /* { dg-error \"invalid use of\" } */\n \n-#pragma acc declare present (v9) /* { dg-error \"invalid use of\" } */\n+#pragma acc declare present (v2) /* { dg-error \"invalid use of\" } */\n }"}, {"sha": "867175d484734aba553f8ee9a81109b21176a8dd", "filename": "gcc/testsuite/c-c++-common/goacc/default-4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-4.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -8,7 +8,7 @@ void f1 ()\n   float f1_b[2];\n \n #pragma acc data copyin (f1_a) copyout (f1_b)\n-  /* { dg-final { scan-tree-dump-times \"omp target oacc_data map\\\\(force_from:f1_b \\[^\\\\)\\]+\\\\) map\\\\(force_to:f1_a\" 1 \"gimple\" } } */\n+  /* { dg-final { scan-tree-dump-times \"omp target oacc_data map\\\\(from:f1_b \\[^\\\\)\\]+\\\\) map\\\\(to:f1_a\" 1 \"gimple\" } } */\n   {\n #pragma acc kernels\n     /* { dg-final { scan-tree-dump-times \"omp target oacc_kernels map\\\\(tofrom:f1_b \\[^\\\\)\\]+\\\\) map\\\\(tofrom:f1_a\" 1 \"gimple\" } } */\n@@ -29,7 +29,7 @@ void f2 ()\n   float f2_b[2];\n \n #pragma acc data copyin (f2_a) copyout (f2_b)\n-  /* { dg-final { scan-tree-dump-times \"omp target oacc_data map\\\\(force_from:f2_b \\[^\\\\)\\]+\\\\) map\\\\(force_to:f2_a\" 1 \"gimple\" } } */\n+  /* { dg-final { scan-tree-dump-times \"omp target oacc_data map\\\\(from:f2_b \\[^\\\\)\\]+\\\\) map\\\\(to:f2_a\" 1 \"gimple\" } } */\n   {\n #pragma acc kernels default (none)\n     /* { dg-final { scan-tree-dump-times \"omp target oacc_kernels default\\\\(none\\\\) map\\\\(tofrom:f2_b \\[^\\\\)\\]+\\\\) map\\\\(tofrom:f2_a\" 1 \"gimple\" } } */\n@@ -50,7 +50,7 @@ void f3 ()\n   float f3_b[2];\n \n #pragma acc data copyin (f3_a) copyout (f3_b)\n-  /* { dg-final { scan-tree-dump-times \"omp target oacc_data map\\\\(force_from:f3_b \\[^\\\\)\\]+\\\\) map\\\\(force_to:f3_a\" 1 \"gimple\" } } */\n+  /* { dg-final { scan-tree-dump-times \"omp target oacc_data map\\\\(from:f3_b \\[^\\\\)\\]+\\\\) map\\\\(to:f3_a\" 1 \"gimple\" } } */\n   {\n #pragma acc kernels default (present)\n     /* { dg-final { scan-tree-dump-times \"omp target oacc_kernels default\\\\(present\\\\) map\\\\(tofrom:f3_b \\[^\\\\)\\]+\\\\) map\\\\(tofrom:f3_a\" 1 \"gimple\" } } */"}, {"sha": "94820290b94335fd5feca6b2e16df73d2522e34b", "filename": "gcc/testsuite/c-c++-common/goacc/finalize-1.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Ffinalize-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Ffinalize-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Ffinalize-1.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -0,0 +1,28 @@\n+/* Test valid usage and processing of the finalize clause.  */\n+\n+/* { dg-additional-options \"-fdump-tree-original -fdump-tree-gimple\" } */\n+\n+extern int del_r;\n+extern float del_f[3];\n+extern double cpo_r[8];\n+extern long cpo_f;\n+\n+void f ()\n+{\n+#pragma acc exit data delete (del_r)\n+/* { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(release:del_r\\\\);$\" 1 \"original\" } }\n+   { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data map\\\\(release:del_r \\\\\\[len: \\[0-9\\]+\\\\\\]\\\\)$\" 1 \"gimple\" } } */\n+\n+#pragma acc exit data finalize delete (del_f)\n+/* { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(release:del_f\\\\) finalize;$\" 1 \"original\" } }\n+   { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data map\\\\(delete:del_f \\\\\\[len: \\[0-9\\]+\\\\\\]\\\\) finalize$\" 1 \"gimple\" } } */\n+\n+#pragma acc exit data copyout (cpo_r)\n+/* { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(from:cpo_r\\\\);$\" 1 \"original\" } }\n+   { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data map\\\\(from:cpo_r \\\\\\[len: \\[0-9\\]+\\\\\\]\\\\)$\" 1 \"gimple\" } } */\n+\n+#pragma acc exit data copyout (cpo_f) finalize\n+/* { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data finalize map\\\\(from:cpo_f\\\\);$\" 1 \"original\" } }\n+   { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data finalize map\\\\(force_from:cpo_f \\\\\\[len: \\[0-9\\]+\\\\\\]\\\\)$\" 1 \"gimple\" } } */\n+}\n+"}, {"sha": "7576a6484f13f8be0b7cc835585fee5f2bf6f90f", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-alias-2.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-alias-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-alias-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-alias-2.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -18,10 +18,12 @@ foo (void)\n   }\n }\n \n+/* The xfails occur due to the OpenACC 2.5 data semantics.  */\n+\n /* { dg-final { scan-tree-dump-times \"clique 1 base 1\" 4 \"ealias\" } } */\n-/* { dg-final { scan-tree-dump-times \"clique 1 base 2\" 1 \"ealias\" } } */\n-/* { dg-final { scan-tree-dump-times \"clique 1 base 3\" 1 \"ealias\" } } */\n-/* { dg-final { scan-tree-dump-times \"clique 1 base 4\" 1 \"ealias\" } } */\n-/* { dg-final { scan-tree-dump-times \"clique 1 base 5\" 1 \"ealias\" } } */\n+/* { dg-final { scan-tree-dump-times \"clique 1 base 2\" 1 \"ealias\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"clique 1 base 3\" 1 \"ealias\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"clique 1 base 4\" 1 \"ealias\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"clique 1 base 5\" 1 \"ealias\" { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"(?n)clique .* base .*\" 8 \"ealias\" } } */\n "}, {"sha": "e8ff018d512022f2b0b89a9d8d93f26eb07b3611", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-alias.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-alias.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -20,10 +20,12 @@ foo (void)\n   }\n }\n \n+/* The xfails occur due to the OpenACC 2.5 data semantics.  */\n+\n /* { dg-final { scan-tree-dump-times \"clique 1 base 1\" 4 \"ealias\" } } */\n-/* { dg-final { scan-tree-dump-times \"clique 1 base 2\" 1 \"ealias\" } } */\n-/* { dg-final { scan-tree-dump-times \"clique 1 base 3\" 1 \"ealias\" } } */\n-/* { dg-final { scan-tree-dump-times \"clique 1 base 4\" 1 \"ealias\" } } */\n-/* { dg-final { scan-tree-dump-times \"clique 1 base 5\" 1 \"ealias\" } } */\n+/* { dg-final { scan-tree-dump-times \"clique 1 base 2\" 1 \"ealias\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"clique 1 base 3\" 1 \"ealias\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"clique 1 base 4\" 1 \"ealias\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"clique 1 base 5\" 1 \"ealias\" { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"(?n)clique .* base .*\" 8 \"ealias\" } } */\n "}, {"sha": "b759db3292dea548d7402f68e195330aa32e7de2", "filename": "gcc/testsuite/c-c++-common/goacc/routine-5.c", "status": "modified", "additions": 54, "deletions": 96, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Froutine-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Froutine-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Froutine-5.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -4,11 +4,11 @@\n \n struct PC\n {\n-#pragma acc routine /* { dg-error \".#pragma acc routine. must be at file scope\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. must be at file scope\" } */\n };\n \n void PC1( /* { dg-bogus \"variable or field .PC1. declared void\" \"TODO\" { xfail c++ } } */\n-#pragma acc routine\n+#pragma acc routine seq\n \t /* { dg-error \".#pragma acc routine. must be at file scope\" \"\" { target c } .-1 }\n \t    { dg-error \".#pragma. is not allowed here\" \"\" { target c++ } .-2 } */\n ) /* { dg-bogus \"expected declaration specifiers or .\\\\.\\\\.\\\\.. before .\\\\). token\" \"TODO\" { xfail c } } */\n@@ -18,26 +18,26 @@ void PC1( /* { dg-bogus \"variable or field .PC1. declared void\" \"TODO\" { xfail c\n void PC2()\n {\n   if (0)\n-#pragma acc routine /* { dg-error \".#pragma acc routine. must be at file scope\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. must be at file scope\" } */\n     ;\n }\n \n void PC3()\n {\n-#pragma acc routine /* { dg-error \".#pragma acc routine. must be at file scope\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. must be at file scope\" } */\n }\n \n \n /* \"( name )\" syntax.  */\n \n #pragma acc routine ( /* { dg-error \"expected (function name|unqualified-id) before end of line\" } */\n-#pragma acc routine () /* { dg-error \"expected (function name|unqualified-id) before .\\\\). token\" } */\n-#pragma acc routine (+) /* { dg-error \"expected (function name|unqualified-id) before .\\\\+. token\" } */\n-#pragma acc routine (?) /* { dg-error \"expected (function name|unqualified-id) before .\\\\?. token\" } */\n-#pragma acc routine (:) /* { dg-error \"expected (function name|unqualified-id) before .:. token\" } */\n-#pragma acc routine (4) /* { dg-error \"expected (function name|unqualified-id) before numeric constant\" } */\n+#pragma acc routine () seq /* { dg-error \"expected (function name|unqualified-id) before .\\\\). token\" } */\n+#pragma acc routine (+) seq /* { dg-error \"expected (function name|unqualified-id) before .\\\\+. token\" } */\n+#pragma acc routine (?) seq /* { dg-error \"expected (function name|unqualified-id) before .\\\\?. token\" } */\n+#pragma acc routine (:) seq /* { dg-error \"expected (function name|unqualified-id) before .:. token\" } */\n+#pragma acc routine (4) seq /* { dg-error \"expected (function name|unqualified-id) before numeric constant\" } */\n #pragma acc routine ('4') /* { dg-error \"expected (function name|unqualified-id) before .4.\" } */\n-#pragma acc routine (\"4\") /* { dg-error \"expected (function name|unqualified-id) before string constant\" } */\n+#pragma acc routine (\"4\") seq /* { dg-error \"expected (function name|unqualified-id) before string constant\" } */\n extern void R1(void);\n extern void R2(void);\n #pragma acc routine (R1, R2, R3) worker /* { dg-error \"expected .\\\\). before .,. token\" } */\n@@ -49,84 +49,84 @@ extern void R2(void);\n /* \"#pragma acc routine\" not immediately followed by (a single) function\n    declaration or definition.  */\n \n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n int a;\n \n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by a single function declaration or definition\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by a single function declaration or definition\" } */\n void fn1 (void), fn1b (void);\n \n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n int b, fn2 (void);\n \n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n int b_, fn2_ (void), B_;\n \n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by a single function declaration or definition\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by a single function declaration or definition\" } */\n int fn3 (void), b2;\n \n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n typedef struct c c;\n \n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n struct d {} d;\n \n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by a single function declaration or definition\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by a single function declaration or definition\" } */\n void fn1_2 (void), fn1b_2 (void);\n \n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n #pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n int b_2, fn2_2 (void);\n \n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n int b_2_, fn2_2_ (void), B_2_;\n \n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by a single function declaration or definition\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by a single function declaration or definition\" } */\n int fn3_2 (void), b2_2;\n \n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n typedef struct c_2 c_2;\n \n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n struct d_2 {} d_2;\n \n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n-#pragma acc routine\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine seq\n int fn4 (void);\n \n int fn5a (void);\n int fn5b (void);\n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n-#pragma acc routine (fn5a)\n-#pragma acc routine (fn5b)\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine (fn5a) seq\n+#pragma acc routine (fn5b) seq\n int fn5 (void);\n \n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n-#pragma acc routine (fn6a) /* { dg-error \".fn6a. has not been declared\" } */\n-#pragma acc routine (fn6b) /* { dg-error \".fn6b. has not been declared\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine (fn6a) seq /* { dg-error \".fn6a. has not been declared\" } */\n+#pragma acc routine (fn6b) seq /* { dg-error \".fn6b. has not been declared\" } */\n int fn6 (void);\n \n #ifdef __cplusplus\n \n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" \"\" { target c++ } } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" \"\" { target c++ } } */\n namespace f {}\n \n namespace g {}\n \n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" \"\" { target c++ } } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" \"\" { target c++ } } */\n using namespace g;\n \n-#pragma acc routine (g) /* { dg-error \".g. does not refer to a function\" \"\" { target c++ } } */\n+#pragma acc routine (g) seq /* { dg-error \".g. does not refer to a function\" \"\" { target c++ } } */\n \n #endif /* __cplusplus */\n \n-#pragma acc routine (a) /* { dg-error \".a. does not refer to a function\" } */\n+#pragma acc routine (a) seq /* { dg-error \".a. does not refer to a function\" } */\n   \n-#pragma acc routine (c) /* { dg-error \".c. does not refer to a function\" } */\n+#pragma acc routine (c) seq /* { dg-error \".c. does not refer to a function\" } */\n \n \n /* Static assert.  */\n@@ -143,66 +143,24 @@ static_assert(0, \"\"); /* { dg-error \"static assertion failed\" \"\" { target c++11\n #endif\n void f_static_assert();\n /* Check that we already recognized \"f_static_assert\" as an OpenACC routine.  */\n-#pragma acc routine (f_static_assert) /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*f_static_assert\" \"TODO\" { xfail *-*-* } } */\n+#pragma acc routine (f_static_assert) seq /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*f_static_assert\" \"TODO\" { xfail *-*-* } } */\n \n \n /* __extension__ usage.  */\n \n-#pragma acc routine\n+#pragma acc routine seq\n __extension__ extern void ex1();\n #pragma acc routine (ex1) /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*ex1\" } */\n \n-#pragma acc routine\n+#pragma acc routine seq\n __extension__ __extension__ __extension__ __extension__ __extension__ void ex2()\n {\n }\n #pragma acc routine (ex2) /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*ex2\" } */\n \n-#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n __extension__ int ex3;\n-#pragma acc routine (ex3) /* { dg-error \".ex3. does not refer to a function\" } */\n-\n-\n-/* \"#pragma acc routine\" already applied.  */\n-\n-extern void fungsi_1();\n-#pragma acc routine(fungsi_1) gang\n-#pragma acc routine(fungsi_1) gang /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_1\" } */\n-#pragma acc routine(fungsi_1) worker /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_1\" } */\n-#pragma acc routine(fungsi_1) vector /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_1\" } */\n-\n-#pragma acc routine seq\n-extern void fungsi_2();\n-#pragma acc routine(fungsi_2) seq /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_2.\" } */\n-#pragma acc routine(fungsi_2) worker /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_2.\" } */\n-#pragma acc routine(fungsi_2) /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_2.\" } */\n-\n-#pragma acc routine vector\n-extern void fungsi_3();\n-#pragma acc routine vector /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_3.\" } */\n-void fungsi_3()\n-{\n-}\n-\n-extern void fungsi_4();\n-#pragma acc routine (fungsi_4) worker\n-#pragma acc routine gang /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_4.\" } */\n-void fungsi_4()\n-{\n-}\n-\n-#pragma acc routine gang\n-void fungsi_5()\n-{\n-}\n-#pragma acc routine (fungsi_5) worker /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_5.\" } */\n-\n-#pragma acc routine seq\n-void fungsi_6()\n-{\n-}\n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_6.\" } */\n-extern void fungsi_6();\n+#pragma acc routine (ex3) seq /* { dg-error \".ex3. does not refer to a function\" } */\n \n \n /* \"#pragma acc routine\" must be applied before.  */\n@@ -214,11 +172,11 @@ void Foo ()\n   Bar ();\n }\n \n-#pragma acc routine (Bar) // { dg-error \".#pragma acc routine. must be applied before use\" }\n+#pragma acc routine (Bar) seq // { dg-error \".#pragma acc routine. must be applied before use\" }\n \n #pragma acc routine (Foo) gang // { dg-error \".#pragma acc routine. must be applied before definition\" }\n \n-#pragma acc routine (Baz) // { dg-error \"not been declared\" }\n+#pragma acc routine (Baz) seq // { dg-error \"not been declared\" }\n \n \n /* OpenACC declare.  */\n@@ -227,7 +185,7 @@ int vb1;\t\t/* { dg-error \"directive for use\" } */\n extern int vb2;\t\t/* { dg-error \"directive for use\" } */\n static int vb3;\t\t/* { dg-error \"directive for use\" } */\n \n-#pragma acc routine\n+#pragma acc routine seq\n int\n func1 (int a)\n {\n@@ -238,7 +196,7 @@ func1 (int a)\n   return vb3;\n }\n \n-#pragma acc routine\n+#pragma acc routine seq\n int\n func2 (int a)\n {\n@@ -256,7 +214,7 @@ extern int vb6;\t\t\t/* { dg-error \"clause used in\" } */\n static int vb7;\t\t\t/* { dg-error \"clause used in\" } */\n #pragma acc declare link (vb7)\n \n-#pragma acc routine\n+#pragma acc routine seq\n int\n func3 (int a)\n {\n@@ -273,7 +231,7 @@ extern int vb9;\n static int vb10;\n #pragma acc declare create (vb10)\n \n-#pragma acc routine\n+#pragma acc routine seq\n int\n func4 (int a)\n {\n@@ -291,7 +249,7 @@ extern int vb12;\n extern int vb13;\n #pragma acc declare device_resident (vb13)\n \n-#pragma acc routine\n+#pragma acc routine seq\n int\n func5 (int a)\n {\n@@ -302,7 +260,7 @@ func5 (int a)\n   return vb13;\n }\n \n-#pragma acc routine\n+#pragma acc routine seq\n int\n func6 (int a)\n {"}, {"sha": "c34a0e480651430e82a4cc377cfa021fb11c7fa5", "filename": "gcc/testsuite/c-c++-common/goacc/update-if_present-1.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fupdate-if_present-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fupdate-if_present-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fupdate-if_present-1.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -0,0 +1,28 @@\n+/* Test valid usages of the if_present clause.  */\n+\n+/* { dg-additional-options \"-fdump-tree-omplower\" } */\n+\n+void\n+t ()\n+{\n+  int a, b, c[10];\n+\n+#pragma acc update self(a) if_present\n+#pragma acc update device(b) async if_present\n+#pragma acc update host(c[1:3]) wait(4) if_present\n+#pragma acc update self(c) device(b) host (a) async(10) if (a == 5) if_present\n+\n+#pragma acc update self(a)\n+#pragma acc update device(b) async\n+#pragma acc update host(c[1:3]) wait(4)\n+#pragma acc update self(c) device(b) host (a) async(10) if (a == 5)\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"omp target oacc_update if_present map.from:a .len: 4..\" 1 \"omplower\" } } */\n+/* { dg-final { scan-tree-dump-times \"omp target oacc_update if_present async.-1. map.to:b .len: 4..\" 1 \"omplower\" } } */\n+/* { dg-final { scan-tree-dump-times \"omp target oacc_update if_present wait.4. map.from:c.1. .len: 12..\" 1 \"omplower\" } } */\n+/* { dg-final { scan-tree-dump-times \"omp target oacc_update if_present if.... async.10. map.from:a .len: 4.. map.to:b .len: 4.. map.from:c .len: 40..\" 1 \"omplower\" } } */\n+/* { dg-final { scan-tree-dump-times \"omp target oacc_update map.force_from:a .len: 4..\" 1 \"omplower\" } } */\n+/* { dg-final { scan-tree-dump-times \"omp target oacc_update async.-1. map.force_to:b .len: 4..\" 1 \"omplower\" } } */\n+/* { dg-final { scan-tree-dump-times \"omp target oacc_update wait.4. map.force_from:c.1. .len: 12..\" 1 \"omplower\" } } */\n+/* { dg-final { scan-tree-dump-times \"omp target oacc_update if.... async.10. map.force_from:a .len: 4.. map.force_to:b .len: 4.. map.force_from:c .len: 40..\" 1 \"omplower\" } } */"}, {"sha": "974f1b8c42753518dcf9b33570e2b6a6a87eb7fb", "filename": "gcc/testsuite/c-c++-common/goacc/update-if_present-2.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fupdate-if_present-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fupdate-if_present-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fupdate-if_present-2.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -0,0 +1,42 @@\n+/* Test invalid usages of the if_present clause.  */\n+\n+#pragma acc routine gang if_present /* { dg-error \"'if_present' is not valid\" } */\n+void\n+t1 ()\n+{\n+  int a, b, c[10];\n+\n+#pragma acc enter data copyin(a) if_present /* { dg-error \"'if_present' is not valid\" } */\n+#pragma acc exit data copyout(a) if_present /* { dg-error \"'if_present' is not valid\" } */\n+\n+#pragma acc data copy(a) if_present /* { dg-error \"'if_present' is not valid\" } */\n+  {\n+  }\n+\n+#pragma acc declare create(c) if_present /* { dg-error \"'if_present' is not valid\" } */\n+\n+#pragma acc init if_present\n+#pragma acc shutdown if_present\n+}\n+\n+void\n+t2 ()\n+{\n+  int a, b, c[10];\n+\n+#pragma acc update self(a)\n+#pragma acc parallel\n+#pragma acc loop if_present /* { dg-error \"'if_present' is not valid\" } */\n+  for (b = 1; b < 10; b++)\n+    ;\n+#pragma acc end parallel\n+\n+#pragma acc kernels loop if_present /* { dg-error \"'if_present' is not valid\" } */\n+  for (b = 1; b < 10; b++)\n+    ;\n+\n+#pragma acc parallel loop if_present /* { dg-error \"'if_present' is not valid\" } */\n+    for (b = 1; b < 10; b++)\n+    ;\n+}\n+"}, {"sha": "dae92b089879c23e1a6f2720449d521b14da83dc", "filename": "gcc/testsuite/g++.dg/goacc/template.C", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgoacc%2Ftemplate.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgoacc%2Ftemplate.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgoacc%2Ftemplate.C?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -1,4 +1,4 @@\n-#pragma acc routine\n+#pragma acc routine seq\n template <typename T> T\n accDouble(int val)\n {\n@@ -31,7 +31,7 @@ oacc_parallel_copy (T a)\n \n #pragma acc parallel num_gangs (a) if (1)\n   {\n-#pragma acc loop independent collapse (2) gang\n+#pragma acc loop independent collapse (2)\n     for (int i = 0; i < a; i++)\n       for (int j = 0; j < 5; j++)\n \tb = a;\n@@ -86,6 +86,8 @@ oacc_parallel_copy (T a)\n #pragma acc update self (b)\n #pragma acc update device (b)\n #pragma acc exit data delete (b)\n+#pragma acc exit data finalize copyout (b)\n+#pragma acc exit data delete (b) finalize\n \n   return b;\n }\n@@ -133,6 +135,13 @@ oacc_kernels_copy (T a)\n     b = a;\n   }\n \n+#pragma acc update host (b)\n+#pragma acc update self (b)\n+#pragma acc update device (b)\n+#pragma acc exit data delete (b)\n+#pragma acc exit data finalize copyout (b)\n+#pragma acc exit data delete (b) finalize\n+\n   return b;\n }\n "}, {"sha": "956349204f4d2353648adbe71a407400b92e6e5f", "filename": "gcc/testsuite/gfortran.dg/goacc/combined-directives.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcombined-directives.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcombined-directives.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fcombined-directives.f90?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -146,5 +146,5 @@ end subroutine test\n ! { dg-final { scan-tree-dump-times \"acc loop private.i. private.j. tile.2, 3\" 2 \"gimple\" } }\n ! { dg-final { scan-tree-dump-times \"acc loop private.i. independent\" 2 \"gimple\" } }\n ! { dg-final { scan-tree-dump-times \"private.z\" 2 \"gimple\" } }\n-! { dg-final { scan-tree-dump-times \"omp target oacc_\\[^ \\]+ map.force_tofrom:y\" 2 \"gimple\" } }\n+! { dg-final { scan-tree-dump-times \"omp target oacc_\\[^ \\]+ map.tofrom:y\" 2 \"gimple\" } }\n ! { dg-final { scan-tree-dump-times \"acc loop private.i. reduction..:y.\" 2 \"gimple\" } }"}, {"sha": "f16d62cce69131ca47276f9ed8707477cda11fd7", "filename": "gcc/testsuite/gfortran.dg/goacc/data-tree.f95", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdata-tree.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdata-tree.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdata-tree.f95?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -15,10 +15,10 @@ end program test\n ! { dg-final { scan-tree-dump-times \"pragma acc data\" 1 \"original\" } } \n \n ! { dg-final { scan-tree-dump-times \"if\" 1 \"original\" } }\n-! { dg-final { scan-tree-dump-times \"map\\\\(force_tofrom:i\\\\)\" 1 \"original\" } } \n-! { dg-final { scan-tree-dump-times \"map\\\\(force_to:j\\\\)\" 1 \"original\" } } \n-! { dg-final { scan-tree-dump-times \"map\\\\(force_from:k\\\\)\" 1 \"original\" } } \n-! { dg-final { scan-tree-dump-times \"map\\\\(force_alloc:m\\\\)\" 1 \"original\" } } \n+! { dg-final { scan-tree-dump-times \"map\\\\(tofrom:i\\\\)\" 1 \"original\" } } \n+! { dg-final { scan-tree-dump-times \"map\\\\(to:j\\\\)\" 1 \"original\" } } \n+! { dg-final { scan-tree-dump-times \"map\\\\(from:k\\\\)\" 1 \"original\" } } \n+! { dg-final { scan-tree-dump-times \"map\\\\(alloc:m\\\\)\" 1 \"original\" } } \n \n ! { dg-final { scan-tree-dump-times \"map\\\\(force_present:o\\\\)\" 1 \"original\" } } \n ! { dg-final { scan-tree-dump-times \"map\\\\(tofrom:p\\\\)\" 1 \"original\" } } "}, {"sha": "7aa3dab4707b16b6d7d9391267c04ce9a1401fc5", "filename": "gcc/testsuite/gfortran.dg/goacc/declare-2.f95", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdeclare-2.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdeclare-2.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdeclare-2.f95?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -11,11 +11,11 @@ subroutine asubr (b)\n   !$acc declare copyout (b) ! { dg-error \"Invalid clause in module\" }\n   !$acc declare present (b) ! { dg-error \"Invalid clause in module\" }\n   !$acc declare present_or_copy (b) ! { dg-error \"Invalid clause in module\" }\n-  !$acc declare present_or_copyin (b) ! { dg-error \"Invalid clause in module\" }\n+  !$acc declare present_or_copyin (b) ! { dg-error \"present on multiple\" }\n   !$acc declare present_or_copyout (b) ! { dg-error \"Invalid clause in module\" }\n-  !$acc declare present_or_create (b) ! { dg-error \"Invalid clause in module\" }\n+  !$acc declare present_or_create (b) ! { dg-error \"present on multiple\" }\n   !$acc declare deviceptr (b) ! { dg-error \"Invalid clause in module\" }\n-  !$acc declare create (b) copyin (b) ! { dg-error \"present on multiple clauses\" }\n+  !$acc declare create (b) copyin (b) ! { dg-error \"present on multiple\" }\n \n end subroutine\n "}, {"sha": "30f411f70ab684f691251c5db5acc6a7da248cfe", "filename": "gcc/testsuite/gfortran.dg/goacc/default-4.f", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-4.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-4.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-4.f?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -8,7 +8,7 @@ SUBROUTINE F1\n       REAL, DIMENSION (2) :: F1_B\n \n !$ACC DATA COPYIN (F1_A) COPYOUT (F1_B)\n-! { dg-final { scan-tree-dump-times \"omp target oacc_data map\\\\(force_to:f1_a \\[^\\\\)\\]+\\\\) map\\\\(force_from:f1_b\" 1 \"gimple\" } }\n+! { dg-final { scan-tree-dump-times \"omp target oacc_data map\\\\(to:f1_a \\[^\\\\)\\]+\\\\) map\\\\(from:f1_b\" 1 \"gimple\" } }\n !$ACC KERNELS\n ! { dg-final { scan-tree-dump-times \"omp target oacc_kernels map\\\\(tofrom:f1_b \\[^\\\\)\\]+\\\\) map\\\\(tofrom:f1_a\" 1 \"gimple\" } }\n       F1_B(1) = F1_A;\n@@ -26,7 +26,7 @@ SUBROUTINE F2\n       REAL, DIMENSION (2) :: F2_B\n \n !$ACC DATA COPYIN (F2_A) COPYOUT (F2_B)\n-! { dg-final { scan-tree-dump-times \"omp target oacc_data map\\\\(force_to:f2_a \\[^\\\\)\\]+\\\\) map\\\\(force_from:f2_b\" 1 \"gimple\" } }\n+! { dg-final { scan-tree-dump-times \"omp target oacc_data map\\\\(to:f2_a \\[^\\\\)\\]+\\\\) map\\\\(from:f2_b\" 1 \"gimple\" } }\n !$ACC KERNELS DEFAULT (NONE)\n ! { dg-final { scan-tree-dump-times \"omp target oacc_kernels default\\\\(none\\\\) map\\\\(tofrom:f2_b \\[^\\\\)\\]+\\\\) map\\\\(tofrom:f2_a\" 1 \"gimple\" } }\n       F2_B(1) = F2_A;\n@@ -44,7 +44,7 @@ SUBROUTINE F3\n       REAL, DIMENSION (2) :: F3_B\n \n !$ACC DATA COPYIN (F3_A) COPYOUT (F3_B)\n-! { dg-final { scan-tree-dump-times \"omp target oacc_data map\\\\(force_to:f3_a \\[^\\\\)\\]+\\\\) map\\\\(force_from:f3_b\" 1 \"gimple\" } }\n+! { dg-final { scan-tree-dump-times \"omp target oacc_data map\\\\(to:f3_a \\[^\\\\)\\]+\\\\) map\\\\(from:f3_b\" 1 \"gimple\" } }\n !$ACC KERNELS DEFAULT (PRESENT)\n ! { dg-final { scan-tree-dump-times \"omp target oacc_kernels default\\\\(present\\\\) map\\\\(tofrom:f3_b \\[^\\\\)\\]+\\\\) map\\\\(tofrom:f3_a\" 1 \"gimple\" } }\n       F3_B(1) = F3_A;"}, {"sha": "805459c1bb0ac3beb6cabb87fbf2506b1ea5b7e0", "filename": "gcc/testsuite/gfortran.dg/goacc/enter-exit-data.f95", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fenter-exit-data.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fenter-exit-data.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fenter-exit-data.f95?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -84,5 +84,8 @@ subroutine foo (vi)\n   !$acc exit data delete (tip) ! { dg-error \"POINTER\" }\n   !$acc exit data delete (tia) ! { dg-error \"ALLOCATABLE\" }\n   !$acc exit data copyout (i) delete (i) ! { dg-error \"multiple clauses\" }\n+  !$acc exit data finalize\n+  !$acc exit data finalize copyout (i)\n+  !$acc exit data finalize delete (i)\n   end subroutine foo\n end module test"}, {"sha": "5c7a921a2e37f4ae45a46cb9a526609ddf2dc791", "filename": "gcc/testsuite/gfortran.dg/goacc/finalize-1.f", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Ffinalize-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Ffinalize-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Ffinalize-1.f?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -0,0 +1,27 @@\n+! Test valid usage and processing of the finalize clause.\n+\n+! { dg-additional-options \"-fdump-tree-original -fdump-tree-gimple\" }\n+\n+      SUBROUTINE f\n+      IMPLICIT NONE\n+      INTEGER :: del_r\n+      REAL, DIMENSION (3) :: del_f\n+      DOUBLE PRECISION, DIMENSION (8) :: cpo_r\n+      LOGICAL :: cpo_f\n+\n+!$ACC EXIT DATA DELETE (del_r)\n+! { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(release:del_r\\\\);$\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data map\\\\(release:del_r \\\\\\[len: \\[0-9\\]+\\\\\\]\\\\)$\" 1 \"gimple\" } }\n+\n+!$ACC EXIT DATA FINALIZE DELETE (del_f)\n+! { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(release:del_f\\\\) finalize;$\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data map\\\\(delete:del_f \\\\\\[len: \\[0-9\\]+\\\\\\]\\\\) finalize$\" 1 \"gimple\" } }\n+\n+!$ACC EXIT DATA COPYOUT (cpo_r)\n+! { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(from:cpo_r\\\\);$\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data map\\\\(from:cpo_r \\\\\\[len: \\[0-9\\]+\\\\\\]\\\\)$\" 1 \"gimple\" } }\n+\n+!$ACC EXIT DATA COPYOUT (cpo_f) FINALIZE\n+! { dg-final { scan-tree-dump-times \"(?n)#pragma acc exit data map\\\\(from:cpo_f\\\\) finalize;$\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"(?n)#pragma omp target oacc_enter_exit_data map\\\\(force_from:cpo_f \\\\\\[len: \\[0-9\\]+\\\\\\]\\\\) finalize$\" 1 \"gimple\" } }\n+      END SUBROUTINE f"}, {"sha": "6a9f241a59686961872559b924b09292f106a5a3", "filename": "gcc/testsuite/gfortran.dg/goacc/kernels-alias-2.f95", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fkernels-alias-2.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fkernels-alias-2.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fkernels-alias-2.f95?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -15,9 +15,11 @@ program main\n \n end program main\n \n+! The xfails occur in light of the new OpenACC data semantics.\n+\n ! { dg-final { scan-tree-dump-times \"clique 1 base 1\" 4 \"ealias\" } }\n-! { dg-final { scan-tree-dump-times \"clique 1 base 2\" 1 \"ealias\" } }\n-! { dg-final { scan-tree-dump-times \"clique 1 base 3\" 1 \"ealias\" } }\n-! { dg-final { scan-tree-dump-times \"clique 1 base 4\" 1 \"ealias\" } }\n-! { dg-final { scan-tree-dump-times \"clique 1 base 5\" 1 \"ealias\" } }\n+! { dg-final { scan-tree-dump-times \"clique 1 base 2\" 1 \"ealias\" { xfail *-*-* } } }\n+! { dg-final { scan-tree-dump-times \"clique 1 base 3\" 1 \"ealias\" { xfail *-*-* } } }\n+! { dg-final { scan-tree-dump-times \"clique 1 base 4\" 1 \"ealias\" { xfail *-*-* } } }\n+! { dg-final { scan-tree-dump-times \"clique 1 base 5\" 1 \"ealias\" { xfail *-*-* } } }\n ! { dg-final { scan-tree-dump-times \"(?n)clique .* base .*\" 8 \"ealias\" } }"}, {"sha": "62f9a713991c0b92597ec779b10ac1d6c0757160", "filename": "gcc/testsuite/gfortran.dg/goacc/kernels-alias.f95", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fkernels-alias.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fkernels-alias.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fkernels-alias.f95?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -15,9 +15,11 @@ program main\n \n end program main\n \n+! The xfails occur in light of the new OpenACC data semantics.\n+\n ! { dg-final { scan-tree-dump-times \"clique 1 base 1\" 4 \"ealias\" } }\n-! { dg-final { scan-tree-dump-times \"clique 1 base 2\" 1 \"ealias\" } }\n-! { dg-final { scan-tree-dump-times \"clique 1 base 3\" 1 \"ealias\" } }\n-! { dg-final { scan-tree-dump-times \"clique 1 base 4\" 1 \"ealias\" } }\n-! { dg-final { scan-tree-dump-times \"clique 1 base 5\" 1 \"ealias\" } }\n+! { dg-final { scan-tree-dump-times \"clique 1 base 2\" 1 \"ealias\" { xfail *-*-* } } }\n+! { dg-final { scan-tree-dump-times \"clique 1 base 3\" 1 \"ealias\" { xfail *-*-* } } }\n+! { dg-final { scan-tree-dump-times \"clique 1 base 4\" 1 \"ealias\" { xfail *-*-* } } }\n+! { dg-final { scan-tree-dump-times \"clique 1 base 5\" 1 \"ealias\" { xfail *-*-* } } }\n ! { dg-final { scan-tree-dump-times \"(?n)clique .* base .*\" 8 \"ealias\" } }"}, {"sha": "a70f1e737bd1f4e170e6891d8bdffe7867a429a6", "filename": "gcc/testsuite/gfortran.dg/goacc/kernels-tree.f95", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fkernels-tree.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fkernels-tree.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fkernels-tree.f95?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -21,10 +21,10 @@ end program test\n ! { dg-final { scan-tree-dump-times \"num_workers\" 1 \"original\" } } \n ! { dg-final { scan-tree-dump-times \"vector_length\" 1 \"original\" } } \n \n-! { dg-final { scan-tree-dump-times \"map\\\\(force_tofrom:i\\\\)\" 1 \"original\" } } \n-! { dg-final { scan-tree-dump-times \"map\\\\(force_to:j\\\\)\" 1 \"original\" } } \n-! { dg-final { scan-tree-dump-times \"map\\\\(force_from:k\\\\)\" 1 \"original\" } } \n-! { dg-final { scan-tree-dump-times \"map\\\\(force_alloc:m\\\\)\" 1 \"original\" } } \n+! { dg-final { scan-tree-dump-times \"map\\\\(tofrom:i\\\\)\" 1 \"original\" } } \n+! { dg-final { scan-tree-dump-times \"map\\\\(to:j\\\\)\" 1 \"original\" } } \n+! { dg-final { scan-tree-dump-times \"map\\\\(from:k\\\\)\" 1 \"original\" } } \n+! { dg-final { scan-tree-dump-times \"map\\\\(alloc:m\\\\)\" 1 \"original\" } } \n \n ! { dg-final { scan-tree-dump-times \"map\\\\(force_present:o\\\\)\" 1 \"original\" } } \n ! { dg-final { scan-tree-dump-times \"map\\\\(tofrom:p\\\\)\" 1 \"original\" } } "}, {"sha": "005193f30a7c21458454c211561d7a88f7c75abf", "filename": "gcc/testsuite/gfortran.dg/goacc/nested-function-1.f90", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fnested-function-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fnested-function-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fnested-function-1.f90?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -25,6 +25,8 @@ subroutine local ()\n     local_a (:) = 5\n     local_arg = 5\n \n+    !$acc update device(local_a) if_present\n+\n     !$acc kernels loop &\n     !$acc gang(num:local_arg) worker(local_arg) vector(local_arg) &\n     !$acc wait async(local_arg)\n@@ -54,12 +56,16 @@ subroutine local ()\n        enddo\n     enddo\n     !$acc end kernels loop\n+\n+    !$acc exit data copyout(local_a) delete(local_i) finalize\n   end subroutine local\n \n   subroutine nonlocal ()\n     nonlocal_a (:) = 5\n     nonlocal_arg = 5\n \n+    !$acc update device(nonlocal_a) if_present\n+\n     !$acc kernels loop &\n     !$acc gang(num:nonlocal_arg) worker(nonlocal_arg) vector(nonlocal_arg) &\n     !$acc wait async(nonlocal_arg)\n@@ -89,5 +95,7 @@ subroutine nonlocal ()\n        enddo\n     enddo\n     !$acc end kernels loop\n+\n+    !$acc exit data copyout(nonlocal_a) delete(nonlocal_i) finalize\n   end subroutine nonlocal\n end program main"}, {"sha": "2697bb79e7f0be836d6cc2cbc05ab6200f5190a2", "filename": "gcc/testsuite/gfortran.dg/goacc/parallel-tree.f95", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fparallel-tree.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fparallel-tree.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fparallel-tree.f95?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -1,5 +1,4 @@\n-! { dg-do compile } \n-! { dg-additional-options \"-fdump-tree-original\" } \n+! { dg-additional-options \"-fdump-tree-original\" }\n \n ! test for tree-dump-original and spaces-commas\n \n@@ -15,6 +14,7 @@ program test\n   !$acc end parallel\n \n end program test\n+\n ! { dg-final { scan-tree-dump-times \"pragma acc parallel\" 1 \"original\" } } \n \n ! { dg-final { scan-tree-dump-times \"if\" 1 \"original\" } }\n@@ -24,10 +24,10 @@ end program test\n ! { dg-final { scan-tree-dump-times \"vector_length\" 1 \"original\" } } \n \n ! { dg-final { scan-tree-dump-times \"reduction\\\\(max:q\\\\)\" 1 \"original\" } } \n-! { dg-final { scan-tree-dump-times \"map\\\\(force_tofrom:i\\\\)\" 1 \"original\" } } \n-! { dg-final { scan-tree-dump-times \"map\\\\(force_to:j\\\\)\" 1 \"original\" } } \n-! { dg-final { scan-tree-dump-times \"map\\\\(force_from:k\\\\)\" 1 \"original\" } } \n-! { dg-final { scan-tree-dump-times \"map\\\\(force_alloc:m\\\\)\" 1 \"original\" } } \n+! { dg-final { scan-tree-dump-times \"map\\\\(tofrom:i\\\\)\" 1 \"original\" } } \n+! { dg-final { scan-tree-dump-times \"map\\\\(to:j\\\\)\" 1 \"original\" } } \n+! { dg-final { scan-tree-dump-times \"map\\\\(from:k\\\\)\" 1 \"original\" } } \n+! { dg-final { scan-tree-dump-times \"map\\\\(alloc:m\\\\)\" 1 \"original\" } } \n \n ! { dg-final { scan-tree-dump-times \"map\\\\(force_present:o\\\\)\" 1 \"original\" } } \n ! { dg-final { scan-tree-dump-times \"map\\\\(tofrom:p\\\\)\" 1 \"original\" } } "}, {"sha": "1d247ca238e217314e87df600316ee1d03627397", "filename": "gcc/testsuite/gfortran.dg/goacc/reduction-promotions.f90", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Freduction-promotions.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Freduction-promotions.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Freduction-promotions.f90?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -38,9 +38,7 @@ program test\n   !$acc end parallel\n end program test\n \n-! { dg-final { scan-tree-dump-times \"map.tofrom:v1\" 8 \"gimple\" } }\n-! { dg-final { scan-tree-dump-times \"map.tofrom:v2\" 8 \"gimple\" } }\n-! { dg-final { scan-tree-dump-times \"map.force_tofrom:v1\" 1 \"gimple\" } }\n-! { dg-final { scan-tree-dump-times \"map.force_tofrom:v2\" 1 \"gimple\" } }\n+! { dg-final { scan-tree-dump-times \"map.tofrom:v1\" 9 \"gimple\" } }\n+! { dg-final { scan-tree-dump-times \"map.tofrom:v2\" 9 \"gimple\" } }\n ! { dg-final { scan-tree-dump-times \"map.force_present:v1\" 1 \"gimple\" } }\n ! { dg-final { scan-tree-dump-times \"map.force_present:v2\" 1 \"gimple\" } }"}, {"sha": "a183aae44c5faf4d727e1ed2b759ec775d6021a7", "filename": "gcc/testsuite/gfortran.dg/goacc/update-if_present-1.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fupdate-if_present-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fupdate-if_present-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fupdate-if_present-1.f90?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -0,0 +1,27 @@\n+! Test valid usages of the if_present clause.\n+\n+! { dg-additional-options \"-fdump-tree-omplower\" }\n+\n+subroutine t\n+  implicit none\n+  integer a, b, c(10)\n+  real, allocatable :: x, y, z(:)\n+  \n+  a = 5\n+  b = 10\n+  c(:) = -1\n+\n+  allocate (x, y, z(100))\n+  \n+  !$acc update self(a) if_present\n+  !$acc update device(b) if_present async\n+  !$acc update host(c(1:3)) wait(4) if_present\n+  !$acc update self(c) device(a) host(b) if_present async(10) if(a == 10) \n+\n+  !$acc update self(x) if_present\n+  !$acc update device(y) if_present async\n+  !$acc update host(z(1:3)) wait(3) if_present\n+  !$acc update self(z) device(y) host(x) if_present async(4) if(a == 1) \n+end subroutine t\n+\n+! { dg-final { scan-tree-dump-times \" if_present\" 8 \"omplower\" } }"}, {"sha": "e73c2dc0875428eadda79d3e77772855fa101612", "filename": "gcc/testsuite/gfortran.dg/goacc/update-if_present-2.f90", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fupdate-if_present-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fupdate-if_present-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fupdate-if_present-2.f90?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -0,0 +1,52 @@\n+! Test invalid usages of the if_present clause.\n+\n+subroutine t1\n+  implicit none\n+  !$acc routine gang if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  integer a, b, c(10)\n+  real, allocatable :: x, y, z(:)\n+\n+  a = 5\n+  b = 10\n+  c(:) = -1\n+\n+  allocate (x, y, z(100))\n+\n+  !$acc enter data copyin(a) if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc exit data copyout(a) if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n+\n+  !$acc data copy(a) if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc end data ! { dg-error \"Unexpected ..ACC END DATA statement\" }\n+\n+  !$acc declare link(a) if_present ! { dg-error \"Unexpected junk after\" }\n+\n+  !$acc init if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc shutdown if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  \n+  !$acc update self(a) device_type(nvidia) device(b) if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n+end subroutine t1\n+\n+subroutine t2\n+  implicit none\n+  integer a, b, c(10)\n+\n+  a = 5\n+  b = 10\n+  c(:) = -1\n+\n+  !$acc parallel\n+  !$acc loop if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  do b = 1, 10\n+  end do\n+  !$acc end parallel\n+\n+  !$acc kernels loop if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  do b = 1, 10\n+  end do\n+  !$acc end kernels loop ! { dg-error \"Unexpected ..ACC END KERNELS LOOP statement\" }\n+\n+  !$acc parallel loop if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  do b = 1, 10\n+  end do\n+  !$acc end parallel loop   ! { dg-error \"Unexpected ..ACC END PARALLEL LOOP statement\" }\n+end subroutine t2"}, {"sha": "4a04e9e8b26d76d2ce0a415e800a6cd858337c88", "filename": "gcc/tree-core.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftree-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftree-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-core.h?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -454,7 +454,13 @@ enum omp_clause_code {\n \n   /* OpenMP internal-only clause to specify grid dimensions of a gridified\n      kernel.  */\n-  OMP_CLAUSE__GRIDDIM_\n+  OMP_CLAUSE__GRIDDIM_,\n+\n+  /* OpenACC clause: if_present.  */\n+  OMP_CLAUSE_IF_PRESENT,\n+\n+  /* OpenACC clause: finalize.  */\n+  OMP_CLAUSE_FINALIZE\n };\n \n #undef DEFTREESTRUCT"}, {"sha": "257ceae6f2da26cc4802f492c08c62ce91e4a82e", "filename": "gcc/tree-nested.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftree-nested.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftree-nested.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nested.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -1333,6 +1333,8 @@ convert_nonlocal_omp_clauses (tree *pclauses, struct walk_stmt_info *wi)\n \tcase OMP_CLAUSE_SEQ:\n \tcase OMP_CLAUSE_INDEPENDENT:\n \tcase OMP_CLAUSE_AUTO:\n+\tcase OMP_CLAUSE_IF_PRESENT:\n+\tcase OMP_CLAUSE_FINALIZE:\n \t  break;\n \n \t  /* The following clause belongs to the OpenACC cache directive, which\n@@ -2022,6 +2024,8 @@ convert_local_omp_clauses (tree *pclauses, struct walk_stmt_info *wi)\n \tcase OMP_CLAUSE_SEQ:\n \tcase OMP_CLAUSE_INDEPENDENT:\n \tcase OMP_CLAUSE_AUTO:\n+\tcase OMP_CLAUSE_IF_PRESENT:\n+\tcase OMP_CLAUSE_FINALIZE:\n \t  break;\n \n \t  /* The following clause belongs to the OpenACC cache directive, which"}, {"sha": "e65c40a41a333a7424fd1cead72234158a0f02dc", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -1045,6 +1045,12 @@ dump_omp_clause (pretty_printer *pp, tree clause, int spc, dump_flags_t flags)\n \t\t\t false);\n       pp_right_paren (pp);\n       break;\n+    case OMP_CLAUSE_IF_PRESENT:\n+      pp_string (pp, \"if_present\");\n+      break;\n+    case OMP_CLAUSE_FINALIZE:\n+      pp_string (pp, \"finalize\");\n+      break;\n \n     default:\n       /* Should never happen.  */"}, {"sha": "608ca7e5abd9ebb722cf13bc4f5746ba6c661a08", "filename": "gcc/tree.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -343,6 +343,8 @@ unsigned const char omp_clause_num_ops[] =\n   1, /* OMP_CLAUSE_VECTOR_LENGTH  */\n   3, /* OMP_CLAUSE_TILE  */\n   2, /* OMP_CLAUSE__GRIDDIM_  */\n+  0, /* OMP_CLAUSE_IF_PRESENT */\n+  0, /* OMP_CLAUSE_FINALIZE */\n };\n \n const char * const omp_clause_code_name[] =\n@@ -413,7 +415,9 @@ const char * const omp_clause_code_name[] =\n   \"num_workers\",\n   \"vector_length\",\n   \"tile\",\n-  \"_griddim_\"\n+  \"_griddim_\",\n+  \"if_present\",\n+  \"finalize\",\n };\n \n \n@@ -11594,6 +11598,8 @@ walk_tree_1 (tree *tp, walk_tree_fn func, void *data,\n \tcase OMP_CLAUSE_SEQ:\n \tcase OMP_CLAUSE_TILE:\n \tcase OMP_CLAUSE__SIMT_:\n+\tcase OMP_CLAUSE_IF_PRESENT:\n+\tcase OMP_CLAUSE_FINALIZE:\n \t  WALK_SUBTREE_TAIL (OMP_CLAUSE_CHAIN (*tp));\n \n \tcase OMP_CLAUSE_LASTPRIVATE:"}, {"sha": "c4ba406386ba7c2c7dacd4314a834c3793fe800f", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -1,3 +1,82 @@\n+2018-06-20  Chung-Lin Tang <cltang@codesourcery.com>\n+\t    Thomas Schwinge <thomas@codesourcery.com>\n+\t    Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* libgomp.h (struct splay_tree_key_s): Add dynamic_refcount member.\n+\t(gomp_acc_remove_pointer): Update declaration.\n+\t(gomp_acc_declare_allocate): Declare.\n+\t(gomp_remove_var): Declare.\n+\t* libgomp.map (OACC_2.5): Define.\n+\t* oacc-mem.c (acc_map_data): Update refcount.\n+\t(acc_unmap_data): Likewise.\n+\t(present_create_copy): Likewise.\n+\t(acc_create): Add FLAG_PRESENT when calling present_create_copy.\n+\t(acc_copyin): Likewise.\n+\t(FLAG_FINALIZE): Define.\n+\t(delete_copyout): Update dynamic refcounts, add support for FINALIZE.\n+\t(acc_delete_finalize): New function.\n+\t(acc_delete_finalize_async): New function.\n+\t(acc_copyout_finalize): New function.\n+\t(acc_copyout_finalize_async): New function.\n+\t(gomp_acc_insert_pointer): Update refcounts.\n+\t(gomp_acc_remove_pointer): Return if data is not present on the\n+\taccelerator.\n+\t* oacc-parallel.c (find_pset): Rename to find_pointer.\n+\t(find_pointer): Add support for GOMP_MAP_POINTER.\n+\t(handle_ftn_pointers): New function.\n+\t(GOACC_parallel_keyed): Update refcounts of variables.\n+\t(GOACC_enter_exit_data): Add support for finalized data mappings.\n+\tAdd support for GOMP_MAP_{TO,ALLOC,RELESE,FROM}. Update handling\n+\tof fortran arrays.\n+\t(GOACC_update): Add support for GOMP_MAP_{ALWAYS_POINTER,TO,FROM}.\n+\t(GOACC_declare): Add support for GOMP_MAP_RELEASE, remove support\n+\tfor GOMP_MAP_FORCE_FROM.\n+\t* openacc.f90 (module openacc_internal): Add\n+\tacc_copyout_finalize_{32_h,64_h,array_h,_l}, and\n+\tacc_delete_finalize_{32_h,64_h,array_h,_l}. Add interfaces for\n+\tacc_copyout_finalize and acc_delete_finalize.\n+\t(acc_copyout_finalize_32_h): New subroutine.\n+\t(acc_copyout_finalize_64_h): New subroutine.\n+\t(acc_copyout_finalize_array_h): New subroutine.\n+\t(acc_delete_finalize_32_h): New subroutine.\n+\t(acc_delete_finalize_64_h): New subroutine.\n+\t(acc_delete_finalize_array_h): New subroutine.\n+\t* openacc.h (acc_copyout_finalize): Declare.\n+\t(acc_copyout_finalize_async): Declare.\n+\t(acc_delete_finalize): Declare.\n+\t(acc_delete_finalize_async): Declare.\n+\t* openacc_lib.h (acc_copyout_finalize): New interface.\n+\t(acc_delete_finalize): New interface.\n+\t* target.c (gomp_map_vars): Update dynamic_refcount.\n+\t(gomp_remove_var): New function.\n+\t(gomp_unmap_vars): Use it.\n+\t(gomp_unload_image_from_device): Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/data-already-1.c: Update test\n+\tcase to utilize OpenACC 2.5 data clause semantics.\n+\t* testsuite/libgomp.oacc-c-c++-common/data-already-2.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/data-already-3.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/data-already-4.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/data-already-5.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/data-already-6.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/data-already-7.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/data-already-8.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/lib-16.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/lib-25.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/lib-32.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/lib-83.c: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/data-5.f90: New test.\n+\t* testsuite/libgomp.oacc-fortran/data-already-1.f: Update test case to\n+\tutilize OpenACC 2.5 data clause semantics.\n+\t* testsuite/libgomp.oacc-fortran/data-already-2.f: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/data-already-3.f: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/data-already-4.f: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/data-already-5.f: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/data-already-6.f: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/data-already-7.f: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/data-already-8.f: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/lib-32-1.f: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/lib-32-2.f: Likewise.\n+\n 2018-05-21  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/85841"}, {"sha": "3a8cc2bd7d6e7f07eb755b81f1a500d0fa18da15", "filename": "libgomp/libgomp.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Flibgomp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Flibgomp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.h?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -853,6 +853,8 @@ struct splay_tree_key_s {\n   uintptr_t tgt_offset;\n   /* Reference count.  */\n   uintptr_t refcount;\n+  /* Dynamic reference count.  */\n+  uintptr_t dynamic_refcount;\n   /* Pointer to the original mapping of \"omp declare target link\" object.  */\n   splay_tree_key link_key;\n };\n@@ -991,7 +993,9 @@ enum gomp_map_vars_kind\n };\n \n extern void gomp_acc_insert_pointer (size_t, void **, size_t *, void *);\n-extern void gomp_acc_remove_pointer (void *, bool, int, int);\n+extern void gomp_acc_remove_pointer (void *, size_t, bool, int, int, int);\n+extern void gomp_acc_declare_allocate (bool, size_t, void **, size_t *,\n+\t\t\t\t       unsigned short *);\n \n extern struct target_mem_desc *gomp_map_vars (struct gomp_device_descr *,\n \t\t\t\t\t      size_t, void **, void **,\n@@ -1001,6 +1005,7 @@ extern void gomp_unmap_vars (struct target_mem_desc *, bool);\n extern void gomp_init_device (struct gomp_device_descr *);\n extern void gomp_free_memmap (struct splay_tree_s *);\n extern void gomp_unload_device (struct gomp_device_descr *);\n+extern bool gomp_remove_var (struct gomp_device_descr *, splay_tree_key);\n \n /* work.c */\n "}, {"sha": "2cd3bf524bc740c26350a2888854ac1de4e3422a", "filename": "libgomp/libgomp.map", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Flibgomp.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Flibgomp.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.map?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -386,6 +386,18 @@ OACC_2.0.1 {\n \tacc_pcreate;\n } OACC_2.0;\n \n+OACC_2.5 {\n+  global:\n+\tacc_copyout_finalize;\n+\tacc_copyout_finalize_32_h_;\n+\tacc_copyout_finalize_64_h_;\n+\tacc_copyout_finalize_array_h_;\n+\tacc_delete_finalize;\n+\tacc_delete_finalize_32_h_;\n+\tacc_delete_finalize_64_h_;\n+\tacc_delete_finalize_array_h_;\n+} OACC_2.0.1;\n+\n GOACC_2.0 {\n   global:\n \tGOACC_data_end;"}, {"sha": "3787ce49e38798723cd8b13649e7fd74d0c91d70", "filename": "libgomp/oacc-mem.c", "status": "modified", "additions": 162, "deletions": 34, "changes": 196, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Foacc-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Foacc-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Foacc-mem.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -347,6 +347,7 @@ acc_map_data (void *h, void *d, size_t s)\n \n       tgt = gomp_map_vars (acc_dev, mapnum, &hostaddrs, &devaddrs, &sizes,\n \t\t\t   &kinds, true, GOMP_MAP_VARS_OPENACC);\n+      tgt->list[0].key->refcount = REFCOUNT_INFINITY;\n     }\n \n   gomp_mutex_lock (&acc_dev->lock);\n@@ -389,6 +390,9 @@ acc_unmap_data (void *h)\n \t\t  (void *) n->host_start, (int) host_size, (void *) h);\n     }\n \n+  /* Mark for removal.  */\n+  n->refcount = 1;\n+\n   t = n->tgt;\n \n   if (t->refcount == 2)\n@@ -460,6 +464,11 @@ present_create_copy (unsigned f, void *h, size_t s)\n \t  gomp_fatal (\"[%p,+%d] not mapped\", (void *)h, (int)s);\n \t}\n \n+      if (n->refcount != REFCOUNT_INFINITY)\n+\t{\n+\t  n->refcount++;\n+\t  n->dynamic_refcount++;\n+\t}\n       gomp_mutex_unlock (&acc_dev->lock);\n     }\n   else if (!(f & FLAG_CREATE))\n@@ -483,6 +492,8 @@ present_create_copy (unsigned f, void *h, size_t s)\n \n       tgt = gomp_map_vars (acc_dev, mapnum, &hostaddrs, NULL, &s, &kinds, true,\n \t\t\t   GOMP_MAP_VARS_OPENACC);\n+      /* Initialize dynamic refcount.  */\n+      tgt->list[0].key->dynamic_refcount = 1;\n \n       gomp_mutex_lock (&acc_dev->lock);\n \n@@ -499,13 +510,13 @@ present_create_copy (unsigned f, void *h, size_t s)\n void *\n acc_create (void *h, size_t s)\n {\n-  return present_create_copy (FLAG_CREATE, h, s);\n+  return present_create_copy (FLAG_PRESENT | FLAG_CREATE, h, s);\n }\n \n void *\n acc_copyin (void *h, size_t s)\n {\n-  return present_create_copy (FLAG_CREATE | FLAG_COPY, h, s);\n+  return present_create_copy (FLAG_PRESENT | FLAG_CREATE | FLAG_COPY, h, s);\n }\n \n void *\n@@ -542,7 +553,8 @@ acc_pcopyin (void *h, size_t s)\n }\n #endif\n \n-#define FLAG_COPYOUT (1 << 0)\n+#define FLAG_COPYOUT  (1 << 0)\n+#define FLAG_FINALIZE (1 << 1)\n \n static void\n delete_copyout (unsigned f, void *h, size_t s, const char *libfnname)\n@@ -581,15 +593,52 @@ delete_copyout (unsigned f, void *h, size_t s, const char *libfnname)\n \t\t  (void *) n->host_start, (int) host_size, (void *) h, (int) s);\n     }\n \n-  gomp_mutex_unlock (&acc_dev->lock);\n+  if (n->refcount == REFCOUNT_INFINITY)\n+    {\n+      n->refcount = 0;\n+      n->dynamic_refcount = 0;\n+    }\n+  if (n->refcount < n->dynamic_refcount)\n+    {\n+      gomp_mutex_unlock (&acc_dev->lock);\n+      gomp_fatal (\"Dynamic reference counting assert fail\\n\");\n+    }\n \n-  if (f & FLAG_COPYOUT)\n-    acc_dev->dev2host_func (acc_dev->target_id, h, d, s);\n+  if (f & FLAG_FINALIZE)\n+    {\n+      n->refcount -= n->dynamic_refcount;\n+      n->dynamic_refcount = 0;\n+    }\n+  else if (n->dynamic_refcount)\n+    {\n+      n->dynamic_refcount--;\n+      n->refcount--;\n+    }\n \n-  acc_unmap_data (h);\n+  if (n->refcount == 0)\n+    {\n+      if (n->tgt->refcount == 2)\n+\t{\n+\t  struct target_mem_desc *tp, *t;\n+\t  for (tp = NULL, t = acc_dev->openacc.data_environ; t != NULL;\n+\t       tp = t, t = t->prev)\n+\t    if (n->tgt == t)\n+\t      {\n+\t\tif (tp)\n+\t\t  tp->prev = t->prev;\n+\t\telse\n+\t\t  acc_dev->openacc.data_environ = t->prev;\n+\t\tbreak;\n+\t      }\n+\t}\n \n-  if (!acc_dev->free_func (acc_dev->target_id, d))\n-    gomp_fatal (\"error in freeing device memory in %s\", libfnname);\n+      if (f & FLAG_COPYOUT)\n+\tacc_dev->dev2host_func (acc_dev->target_id, h, d, s);\n+\n+      gomp_remove_var (acc_dev, n);\n+    }\n+\n+  gomp_mutex_unlock (&acc_dev->lock);\n }\n \n void\n@@ -598,12 +647,36 @@ acc_delete (void *h , size_t s)\n   delete_copyout (0, h, s, __FUNCTION__);\n }\n \n+void\n+acc_delete_finalize (void *h , size_t s)\n+{\n+  delete_copyout (FLAG_FINALIZE, h, s, __FUNCTION__);\n+}\n+\n+void\n+acc_delete_finalize_async (void *h , size_t s, int async)\n+{\n+  delete_copyout (FLAG_FINALIZE, h, s, __FUNCTION__);\n+}\n+\n void\n acc_copyout (void *h, size_t s)\n {\n   delete_copyout (FLAG_COPYOUT, h, s, __FUNCTION__);\n }\n \n+void\n+acc_copyout_finalize (void *h, size_t s)\n+{\n+  delete_copyout (FLAG_COPYOUT | FLAG_FINALIZE, h, s, __FUNCTION__);\n+}\n+\n+void\n+acc_copyout_finalize_async (void *h, size_t s, int async)\n+{\n+  delete_copyout (FLAG_COPYOUT | FLAG_FINALIZE, h, s, __FUNCTION__);\n+}\n+\n static void\n update_dev_host (int is_dev, void *h, size_t s)\n {\n@@ -659,26 +732,56 @@ gomp_acc_insert_pointer (size_t mapnum, void **hostaddrs, size_t *sizes,\n   struct goacc_thread *thr = goacc_thread ();\n   struct gomp_device_descr *acc_dev = thr->dev;\n \n+  if (acc_is_present (*hostaddrs, *sizes))\n+    {\n+      splay_tree_key n;\n+      gomp_mutex_lock (&acc_dev->lock);\n+      n = lookup_host (acc_dev, *hostaddrs, *sizes);\n+      gomp_mutex_unlock (&acc_dev->lock);\n+\n+      tgt = n->tgt;\n+      for (size_t i = 0; i < tgt->list_count; i++)\n+\tif (tgt->list[i].key == n)\n+\t  {\n+\t    for (size_t j = 0; j < mapnum; j++)\n+\t      if (i + j < tgt->list_count && tgt->list[i + j].key)\n+\t\t{\n+\t\t  tgt->list[i + j].key->refcount++;\n+\t\t  tgt->list[i + j].key->dynamic_refcount++;\n+\t\t}\n+\t    return;\n+\t  }\n+      /* Should not reach here.  */\n+      gomp_fatal (\"Dynamic refcount incrementing failed for pointer/pset\");\n+    }\n+\n   gomp_debug (0, \"  %s: prepare mappings\\n\", __FUNCTION__);\n   tgt = gomp_map_vars (acc_dev, mapnum, hostaddrs,\n \t\t       NULL, sizes, kinds, true, GOMP_MAP_VARS_OPENACC);\n   gomp_debug (0, \"  %s: mappings prepared\\n\", __FUNCTION__);\n \n+  /* Initialize dynamic refcount.  */\n+  tgt->list[0].key->dynamic_refcount = 1;\n+\n   gomp_mutex_lock (&acc_dev->lock);\n   tgt->prev = acc_dev->openacc.data_environ;\n   acc_dev->openacc.data_environ = tgt;\n   gomp_mutex_unlock (&acc_dev->lock);\n }\n \n void\n-gomp_acc_remove_pointer (void *h, bool force_copyfrom, int async, int mapnum)\n+gomp_acc_remove_pointer (void *h, size_t s, bool force_copyfrom, int async,\n+\t\t\t int finalize, int mapnum)\n {\n   struct goacc_thread *thr = goacc_thread ();\n   struct gomp_device_descr *acc_dev = thr->dev;\n   splay_tree_key n;\n   struct target_mem_desc *t;\n   int minrefs = (mapnum == 1) ? 2 : 3;\n \n+  if (!acc_is_present (h, s))\n+    return;\n+\n   gomp_mutex_lock (&acc_dev->lock);\n \n   n = lookup_host (acc_dev, h, 1);\n@@ -693,40 +796,65 @@ gomp_acc_remove_pointer (void *h, bool force_copyfrom, int async, int mapnum)\n \n   t = n->tgt;\n \n-  struct target_mem_desc *tp;\n+  if (n->refcount < n->dynamic_refcount)\n+    {\n+      gomp_mutex_unlock (&acc_dev->lock);\n+      gomp_fatal (\"Dynamic reference counting assert fail\\n\");\n+    }\n \n-  if (t->refcount == minrefs)\n+  if (finalize)\n     {\n-      /* This is the last reference, so pull the descriptor off the\n-\t chain. This avoids gomp_unmap_vars via gomp_unmap_tgt from\n-\t freeing the device memory. */\n-      t->tgt_end = 0;\n-      t->to_free = 0;\n+      n->refcount -= n->dynamic_refcount;\n+      n->dynamic_refcount = 0;\n+    }\n+  else if (n->dynamic_refcount)\n+    {\n+      n->dynamic_refcount--;\n+      n->refcount--;\n+    }\n \n-      for (tp = NULL, t = acc_dev->openacc.data_environ; t != NULL;\n-\t   tp = t, t = t->prev)\n+  gomp_mutex_unlock (&acc_dev->lock);\n+\n+  if (n->refcount == 0)\n+    {\n+      if (t->refcount == minrefs)\n \t{\n-\t  if (n->tgt == t)\n+\t  /* This is the last reference, so pull the descriptor off the\n+\t     chain. This prevents gomp_unmap_vars via gomp_unmap_tgt from\n+\t     freeing the device memory. */\n+\t  struct target_mem_desc *tp;\n+\t  for (tp = NULL, t = acc_dev->openacc.data_environ; t != NULL;\n+\t       tp = t, t = t->prev)\n \t    {\n-\t      if (tp)\n-\t\ttp->prev = t->prev;\n-\t      else\n-\t\tacc_dev->openacc.data_environ = t->prev;\n-\t      break;\n+\t      if (n->tgt == t)\n+\t\t{\n+\t\t  if (tp)\n+\t\t    tp->prev = t->prev;\n+\t\t  else\n+\t\t    acc_dev->openacc.data_environ = t->prev;\n+\t\t  break;\n+\t\t}\n \t    }\n \t}\n-    }\n \n-  if (force_copyfrom)\n-    t->list[0].copy_from = 1;\n+      /* Set refcount to 1 to allow gomp_unmap_vars to unmap it.  */\n+      n->refcount = 1;\n+      t->refcount = minrefs;\n+      for (size_t i = 0; i < t->list_count; i++)\n+\tif (t->list[i].key == n)\n+\t  {\n+\t    t->list[i].copy_from = force_copyfrom ? 1 : 0;\n+\t    break;\n+\t  }\n \n-  gomp_mutex_unlock (&acc_dev->lock);\n+      /* If running synchronously, unmap immediately.  */\n+      if (async < acc_async_noval)\n+\tgomp_unmap_vars (t, true);\n+      else\n+\tt->device_descr->openacc.register_async_cleanup_func (t, async);\n+    }\n \n-  /* If running synchronously, unmap immediately.  */\n-  if (async_synchronous_p (async))\n-    gomp_unmap_vars (t, true);\n-  else\n-    t->device_descr->openacc.register_async_cleanup_func (t, async);\n+  gomp_mutex_unlock (&acc_dev->lock);\n \n   gomp_debug (0, \"  %s: mappings restored\\n\", __FUNCTION__);\n }"}, {"sha": "b80ace585907d2a45063b48fd49cc87f3412d119", "filename": "libgomp/oacc-parallel.c", "status": "modified", "additions": 170, "deletions": 28, "changes": 198, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Foacc-parallel.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Foacc-parallel.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Foacc-parallel.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -38,15 +38,68 @@\n #include <stdarg.h>\n #include <assert.h>\n \n+/* Returns the number of mappings associated with the pointer or pset. PSET\n+   have three mappings, whereas pointer have two.  */\n+\n static int\n-find_pset (int pos, size_t mapnum, unsigned short *kinds)\n+find_pointer (int pos, size_t mapnum, unsigned short *kinds)\n {\n   if (pos + 1 >= mapnum)\n     return 0;\n \n   unsigned char kind = kinds[pos+1] & 0xff;\n \n-  return kind == GOMP_MAP_TO_PSET;\n+  if (kind == GOMP_MAP_TO_PSET)\n+    return 3;\n+  else if (kind == GOMP_MAP_POINTER)\n+    return 2;\n+\n+  return 0;\n+}\n+\n+/* Handle the mapping pair that are presented when a\n+   deviceptr clause is used with Fortran.  */\n+\n+static void\n+handle_ftn_pointers (size_t mapnum, void **hostaddrs, size_t *sizes,\n+\t\t     unsigned short *kinds)\n+{\n+  int i;\n+\n+  for (i = 0; i < mapnum; i++)\n+    {\n+      unsigned short kind1 = kinds[i] & 0xff;\n+\n+      /* Handle Fortran deviceptr clause.  */\n+      if (kind1 == GOMP_MAP_FORCE_DEVICEPTR)\n+\t{\n+\t  unsigned short kind2;\n+\n+\t  if (i < (signed)mapnum - 1)\n+\t    kind2 = kinds[i + 1] & 0xff;\n+\t  else\n+\t    kind2 = 0xffff;\n+\n+\t  if (sizes[i] == sizeof (void *))\n+\t    continue;\n+\n+\t  /* At this point, we're dealing with a Fortran deviceptr.\n+\t     If the next element is not what we're expecting, then\n+\t     this is an instance of where the deviceptr variable was\n+\t     not used within the region and the pointer was removed\n+\t     by the gimplifier.  */\n+\t  if (kind2 == GOMP_MAP_POINTER\n+\t      && sizes[i + 1] == 0\n+\t      && hostaddrs[i] == *(void **)hostaddrs[i + 1])\n+\t    {\n+\t      kinds[i+1] = kinds[i];\n+\t      sizes[i+1] = sizeof (void *);\n+\t    }\n+\n+\t  /* Invalidate the entry.  */\n+\t  hostaddrs[i] = NULL;\n+\t}\n+    }\n }\n \n static void goacc_wait (int async, int num_waits, va_list *ap);\n@@ -88,6 +141,8 @@ GOACC_parallel_keyed (int device, void (*fn) (void *),\n   thr = goacc_thread ();\n   acc_dev = thr->dev;\n \n+  handle_ftn_pointers (mapnum, hostaddrs, sizes, kinds);\n+\n   /* Host fallback if \"if\" clause is false or if the current device is set to\n      the host.  */\n   if (host_fallback)\n@@ -183,10 +238,29 @@ GOACC_parallel_keyed (int device, void (*fn) (void *),\n \t\t\t      async, dims, tgt);\n \n   /* If running synchronously, unmap immediately.  */\n+  bool copyfrom = true;\n   if (async_synchronous_p (async))\n     gomp_unmap_vars (tgt, true);\n   else\n-    tgt->device_descr->openacc.register_async_cleanup_func (tgt, async);\n+    {\n+      bool async_unmap = false;\n+      for (size_t i = 0; i < tgt->list_count; i++)\n+\t{\n+\t  splay_tree_key k = tgt->list[i].key;\n+\t  if (k && k->refcount == 1)\n+\t    {\n+\t      async_unmap = true;\n+\t      break;\n+\t    }\n+\t}\n+      if (async_unmap)\n+\ttgt->device_descr->openacc.register_async_cleanup_func (tgt, async);\n+      else\n+\t{\n+\t  copyfrom = false;\n+\t  gomp_unmap_vars (tgt, copyfrom);\n+\t}\n+    }\n \n   acc_dev->openacc.async_set_async_func (acc_async_sync);\n }\n@@ -286,6 +360,17 @@ GOACC_enter_exit_data (int device, size_t mapnum,\n       va_end (ap);\n     }\n \n+  /* Determine whether \"finalize\" semantics apply to all mappings of this\n+     OpenACC directive.  */\n+  bool finalize = false;\n+  if (mapnum > 0)\n+    {\n+      unsigned char kind = kinds[0] & 0xff;\n+      if (kind == GOMP_MAP_DELETE\n+\t  || kind == GOMP_MAP_FORCE_FROM)\n+\tfinalize = true;\n+    }\n+\n   acc_dev->openacc.async_set_async_func (async);\n \n   /* Determine if this is an \"acc enter data\".  */\n@@ -298,45 +383,57 @@ GOACC_enter_exit_data (int device, size_t mapnum,\n \n       if (kind == GOMP_MAP_FORCE_ALLOC\n \t  || kind == GOMP_MAP_FORCE_PRESENT\n-\t  || kind == GOMP_MAP_FORCE_TO)\n+\t  || kind == GOMP_MAP_FORCE_TO\n+\t  || kind == GOMP_MAP_TO\n+\t  || kind == GOMP_MAP_ALLOC)\n \t{\n \t  data_enter = true;\n \t  break;\n \t}\n \n-      if (kind == GOMP_MAP_DELETE\n+      if (kind == GOMP_MAP_RELEASE\n+\t  || kind == GOMP_MAP_DELETE\n+\t  || kind == GOMP_MAP_FROM\n \t  || kind == GOMP_MAP_FORCE_FROM)\n \tbreak;\n \n       gomp_fatal (\">>>> GOACC_enter_exit_data UNHANDLED kind 0x%.2x\",\n \t\t      kind);\n     }\n \n+  /* In c, non-pointers and arrays are represented by a single data clause.\n+     Dynamically allocated arrays and subarrays are represented by a data\n+     clause followed by an internal GOMP_MAP_POINTER.\n+\n+     In fortran, scalars and not allocated arrays are represented by a\n+     single data clause. Allocated arrays and subarrays have three mappings:\n+     1) the original data clause, 2) a PSET 3) a pointer to the array data.\n+  */\n+\n   if (data_enter)\n     {\n       for (i = 0; i < mapnum; i++)\n \t{\n \t  unsigned char kind = kinds[i] & 0xff;\n \n-\t  /* Scan for PSETs.  */\n-\t  int psets = find_pset (i, mapnum, kinds);\n+\t  /* Scan for pointers and PSETs.  */\n+\t  int pointer = find_pointer (i, mapnum, kinds);\n \n-\t  if (!psets)\n+\t  if (!pointer)\n \t    {\n \t      switch (kind)\n \t\t{\n-\t\tcase GOMP_MAP_POINTER:\n-\t\t  gomp_acc_insert_pointer (1, &hostaddrs[i], &sizes[i],\n-\t\t\t\t\t&kinds[i]);\n+\t\tcase GOMP_MAP_ALLOC:\n+\t\t  acc_present_or_create (hostaddrs[i], sizes[i]);\n \t\t  break;\n \t\tcase GOMP_MAP_FORCE_ALLOC:\n \t\t  acc_create (hostaddrs[i], sizes[i]);\n \t\t  break;\n-\t\tcase GOMP_MAP_FORCE_PRESENT:\n+\t\tcase GOMP_MAP_TO:\n \t\t  acc_present_or_copyin (hostaddrs[i], sizes[i]);\n \t\t  break;\n \t\tcase GOMP_MAP_FORCE_TO:\n-\t\t  acc_present_or_copyin (hostaddrs[i], sizes[i]);\n+\t\t  acc_copyin (hostaddrs[i], sizes[i]);\n \t\t  break;\n \t\tdefault:\n \t\t  gomp_fatal (\">>>> GOACC_enter_exit_data UNHANDLED kind 0x%.2x\",\n@@ -346,12 +443,13 @@ GOACC_enter_exit_data (int device, size_t mapnum,\n \t    }\n \t  else\n \t    {\n-\t      gomp_acc_insert_pointer (3, &hostaddrs[i], &sizes[i], &kinds[i]);\n+\t      gomp_acc_insert_pointer (pointer, &hostaddrs[i],\n+\t\t\t\t       &sizes[i], &kinds[i]);\n \t      /* Increment 'i' by two because OpenACC requires fortran\n \t\t arrays to be contiguous, so each PSET is associated with\n \t\t one of MAP_FORCE_ALLOC/MAP_FORCE_PRESET/MAP_FORCE_TO, and\n \t\t one MAP_POINTER.  */\n-\t      i += 2;\n+\t      i += pointer - 1;\n \t    }\n \t}\n     }\n@@ -360,22 +458,28 @@ GOACC_enter_exit_data (int device, size_t mapnum,\n       {\n \tunsigned char kind = kinds[i] & 0xff;\n \n-\tint psets = find_pset (i, mapnum, kinds);\n+\tint pointer = find_pointer (i, mapnum, kinds);\n \n-\tif (!psets)\n+\tif (!pointer)\n \t  {\n \t    switch (kind)\n \t      {\n-\t      case GOMP_MAP_POINTER:\n-\t\tgomp_acc_remove_pointer (hostaddrs[i], (kinds[i] & 0xff)\n-\t\t\t\t\t == GOMP_MAP_FORCE_FROM,\n-\t\t\t\t\t async, 1);\n-\t\tbreak;\n+\t      case GOMP_MAP_RELEASE:\n \t      case GOMP_MAP_DELETE:\n-\t\tacc_delete (hostaddrs[i], sizes[i]);\n+\t\tif (acc_is_present (hostaddrs[i], sizes[i]))\n+\t\t  {\n+\t\t    if (finalize)\n+\t\t      acc_delete_finalize (hostaddrs[i], sizes[i]);\n+\t\t    else\n+\t\t      acc_delete (hostaddrs[i], sizes[i]);\n+\t\t  }\n \t\tbreak;\n+\t      case GOMP_MAP_FROM:\n \t      case GOMP_MAP_FORCE_FROM:\n-\t\tacc_copyout (hostaddrs[i], sizes[i]);\n+\t\tif (finalize)\n+\t\t  acc_copyout_finalize (hostaddrs[i], sizes[i]);\n+\t\telse\n+\t\t  acc_copyout (hostaddrs[i], sizes[i]);\n \t\tbreak;\n \t      default:\n \t\tgomp_fatal (\">>>> GOACC_enter_exit_data UNHANDLED kind 0x%.2x\",\n@@ -385,10 +489,12 @@ GOACC_enter_exit_data (int device, size_t mapnum,\n \t  }\n \telse\n \t  {\n-\t    gomp_acc_remove_pointer (hostaddrs[i], (kinds[i] & 0xff)\n-\t\t\t\t     == GOMP_MAP_FORCE_FROM, async, 3);\n+\t    bool copyfrom = (kind == GOMP_MAP_FORCE_FROM\n+\t\t\t     || kind == GOMP_MAP_FROM);\n+\t    gomp_acc_remove_pointer (hostaddrs[i], sizes[i], copyfrom, async,\n+\t\t\t\t     finalize, pointer);\n \t    /* See the above comment.  */\n-\t    i += 2;\n+\t    i += pointer - 1;\n \t  }\n       }\n \n@@ -447,6 +553,7 @@ GOACC_update (int device, size_t mapnum,\n \n   acc_dev->openacc.async_set_async_func (async);\n \n+  bool update_device = false;\n   for (i = 0; i < mapnum; ++i)\n     {\n       unsigned char kind = kinds[i] & 0xff;\n@@ -457,11 +564,46 @@ GOACC_update (int device, size_t mapnum,\n \tcase GOMP_MAP_TO_PSET:\n \t  break;\n \n+\tcase GOMP_MAP_ALWAYS_POINTER:\n+\t  if (update_device)\n+\t    {\n+\t      /* Save the contents of the host pointer.  */\n+\t      void *dptr = acc_deviceptr (hostaddrs[i-1]);\n+\t      uintptr_t t = *(uintptr_t *) hostaddrs[i];\n+\n+\t      /* Update the contents of the host pointer to reflect\n+\t\t the value of the allocated device memory in the\n+\t\t previous pointer.  */\n+\t      *(uintptr_t *) hostaddrs[i] = (uintptr_t)dptr;\n+\t      acc_update_device (hostaddrs[i], sizeof (uintptr_t));\n+\n+\t      /* Restore the host pointer.  */\n+\t      *(uintptr_t *) hostaddrs[i] = t;\n+\t      update_device = false;\n+\t    }\n+\t  break;\n+\n+\tcase GOMP_MAP_TO:\n+\t  if (!acc_is_present (hostaddrs[i], sizes[i]))\n+\t    {\n+\t      update_device = false;\n+\t      break;\n+\t    }\n+\t  /* Fallthru  */\n \tcase GOMP_MAP_FORCE_TO:\n+\t  update_device = true;\n \t  acc_update_device (hostaddrs[i], sizes[i]);\n \t  break;\n \n+\tcase GOMP_MAP_FROM:\n+\t  if (!acc_is_present (hostaddrs[i], sizes[i]))\n+\t    {\n+\t      update_device = false;\n+\t      break;\n+\t    }\n+\t  /* Fallthru  */\n \tcase GOMP_MAP_FORCE_FROM:\n+\t  update_device = false;\n \t  acc_update_self (hostaddrs[i], sizes[i]);\n \t  break;\n \n@@ -522,6 +664,7 @@ GOACC_declare (int device, size_t mapnum,\n \t  case GOMP_MAP_FORCE_FROM:\n \t  case GOMP_MAP_FORCE_TO:\n \t  case GOMP_MAP_POINTER:\n+\t  case GOMP_MAP_RELEASE:\n \t  case GOMP_MAP_DELETE:\n \t    GOACC_enter_exit_data (device, 1, &hostaddrs[i], &sizes[i],\n \t\t\t\t   &kinds[i], GOMP_ASYNC_SYNC, 0);\n@@ -543,7 +686,6 @@ GOACC_declare (int device, size_t mapnum,\n \t    break;\n \n \t  case GOMP_MAP_FROM:\n-\t    kinds[i] = GOMP_MAP_FORCE_FROM;\n \t    GOACC_enter_exit_data (device, 1, &hostaddrs[i], &sizes[i],\n \t\t\t\t   &kinds[i], GOMP_ASYNC_SYNC, 0);\n \t    break;"}, {"sha": "84a8700f072144656f28bdcb0aea290d4af67a36", "filename": "libgomp/openacc.f90", "status": "modified", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Fopenacc.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Fopenacc.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fopenacc.f90?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -222,6 +222,24 @@ subroutine acc_copyout_array_h (a)\n       type (*), dimension (..), contiguous :: a\n     end subroutine\n \n+    subroutine acc_copyout_finalize_32_h (a, len)\n+      use iso_c_binding, only: c_int32_t\n+      !GCC$ ATTRIBUTES NO_ARG_CHECK :: a\n+      type (*), dimension (*) :: a\n+      integer (c_int32_t) len\n+    end subroutine\n+\n+    subroutine acc_copyout_finalize_64_h (a, len)\n+      use iso_c_binding, only: c_int64_t\n+      !GCC$ ATTRIBUTES NO_ARG_CHECK :: a\n+      type (*), dimension (*) :: a\n+      integer (c_int64_t) len\n+    end subroutine\n+\n+    subroutine acc_copyout_finalize_array_h (a)\n+      type (*), dimension (..), contiguous :: a\n+    end subroutine\n+\n     subroutine acc_delete_32_h (a, len)\n       use iso_c_binding, only: c_int32_t\n       !GCC$ ATTRIBUTES NO_ARG_CHECK :: a\n@@ -240,6 +258,24 @@ subroutine acc_delete_array_h (a)\n       type (*), dimension (..), contiguous :: a\n     end subroutine\n \n+    subroutine acc_delete_finalize_32_h (a, len)\n+      use iso_c_binding, only: c_int32_t\n+      !GCC$ ATTRIBUTES NO_ARG_CHECK :: a\n+      type (*), dimension (*) :: a\n+      integer (c_int32_t) len\n+    end subroutine\n+\n+    subroutine acc_delete_finalize_64_h (a, len)\n+      use iso_c_binding, only: c_int64_t\n+      !GCC$ ATTRIBUTES NO_ARG_CHECK :: a\n+      type (*), dimension (*) :: a\n+      integer (c_int64_t) len\n+    end subroutine\n+\n+    subroutine acc_delete_finalize_array_h (a)\n+      type (*), dimension (..), contiguous :: a\n+    end subroutine\n+\n     subroutine acc_update_device_32_h (a, len)\n       use iso_c_binding, only: c_int32_t\n       !GCC$ ATTRIBUTES NO_ARG_CHECK :: a\n@@ -426,6 +462,14 @@ subroutine acc_copyout_l (a, len) &\n       integer (c_size_t), value :: len\n     end subroutine\n \n+    subroutine acc_copyout_finalize_l (a, len) &\n+        bind (C, name = \"acc_copyout_finalize\")\n+      use iso_c_binding, only: c_size_t\n+      !GCC$ ATTRIBUTES NO_ARG_CHECK :: a\n+      type (*), dimension (*) :: a\n+      integer (c_size_t), value :: len\n+    end subroutine\n+\n     subroutine acc_delete_l (a, len) &\n         bind (C, name = \"acc_delete\")\n       use iso_c_binding, only: c_size_t\n@@ -434,6 +478,14 @@ subroutine acc_delete_l (a, len) &\n       integer (c_size_t), value :: len\n     end subroutine\n \n+    subroutine acc_delete_finalize_l (a, len) &\n+        bind (C, name = \"acc_delete_finalize\")\n+      use iso_c_binding, only: c_size_t\n+      !GCC$ ATTRIBUTES NO_ARG_CHECK :: a\n+      type (*), dimension (*) :: a\n+      integer (c_size_t), value :: len\n+    end subroutine\n+\n     subroutine acc_update_device_l (a, len) &\n         bind (C, name = \"acc_update_device\")\n       use iso_c_binding, only: c_size_t\n@@ -598,12 +650,24 @@ module openacc\n     procedure :: acc_copyout_array_h\n   end interface\n \n+  interface acc_copyout_finalize\n+    procedure :: acc_copyout_finalize_32_h\n+    procedure :: acc_copyout_finalize_64_h\n+    procedure :: acc_copyout_finalize_array_h\n+  end interface\n+\n   interface acc_delete\n     procedure :: acc_delete_32_h\n     procedure :: acc_delete_64_h\n     procedure :: acc_delete_array_h\n   end interface\n \n+  interface acc_delete_finalize\n+    procedure :: acc_delete_finalize_32_h\n+    procedure :: acc_delete_finalize_64_h\n+    procedure :: acc_delete_finalize_array_h\n+  end interface\n+\n   interface acc_update_device\n     procedure :: acc_update_device_32_h\n     procedure :: acc_update_device_64_h\n@@ -860,6 +924,30 @@ subroutine acc_copyout_array_h (a)\n   call acc_copyout_l (a, sizeof (a))\n end subroutine\n \n+subroutine acc_copyout_finalize_32_h (a, len)\n+  use iso_c_binding, only: c_int32_t, c_size_t\n+  use openacc_internal, only: acc_copyout_finalize_l\n+  !GCC$ ATTRIBUTES NO_ARG_CHECK :: a\n+  type (*), dimension (*) :: a\n+  integer (c_int32_t) len\n+  call acc_copyout_finalize_l (a, int (len, kind = c_size_t))\n+end subroutine\n+\n+subroutine acc_copyout_finalize_64_h (a, len)\n+  use iso_c_binding, only: c_int64_t, c_size_t\n+  use openacc_internal, only: acc_copyout_finalize_l\n+  !GCC$ ATTRIBUTES NO_ARG_CHECK :: a\n+  type (*), dimension (*) :: a\n+  integer (c_int64_t) len\n+  call acc_copyout_finalize_l (a, int (len, kind = c_size_t))\n+end subroutine\n+\n+subroutine acc_copyout_finalize_array_h (a)\n+  use openacc_internal, only: acc_copyout_finalize_l\n+  type (*), dimension (..), contiguous :: a\n+  call acc_copyout_finalize_l (a, sizeof (a))\n+end subroutine\n+\n subroutine acc_delete_32_h (a, len)\n   use iso_c_binding, only: c_int32_t, c_size_t\n   use openacc_internal, only: acc_delete_l\n@@ -884,6 +972,30 @@ subroutine acc_delete_array_h (a)\n   call acc_delete_l (a, sizeof (a))\n end subroutine\n \n+subroutine acc_delete_finalize_32_h (a, len)\n+  use iso_c_binding, only: c_int32_t, c_size_t\n+  use openacc_internal, only: acc_delete_finalize_l\n+  !GCC$ ATTRIBUTES NO_ARG_CHECK :: a\n+  type (*), dimension (*) :: a\n+  integer (c_int32_t) len\n+  call acc_delete_finalize_l (a, int (len, kind = c_size_t))\n+end subroutine\n+\n+subroutine acc_delete_finalize_64_h (a, len)\n+  use iso_c_binding, only: c_int64_t, c_size_t\n+  use openacc_internal, only: acc_delete_finalize_l\n+  !GCC$ ATTRIBUTES NO_ARG_CHECK :: a\n+  type (*), dimension (*) :: a\n+  integer (c_int64_t) len\n+  call acc_delete_finalize_l (a, int (len, kind = c_size_t))\n+end subroutine\n+\n+subroutine acc_delete_finalize_array_h (a)\n+  use openacc_internal, only: acc_delete_finalize_l\n+  type (*), dimension (..), contiguous :: a\n+  call acc_delete_finalize_l (a, sizeof (a))\n+end subroutine\n+\n subroutine acc_update_device_32_h (a, len)\n   use iso_c_binding, only: c_int32_t, c_size_t\n   use openacc_internal, only: acc_update_device_l"}, {"sha": "02a85a09ddbe6dfe7f21b81cc343bc2ada1add3a", "filename": "libgomp/openacc.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Fopenacc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Fopenacc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fopenacc.h?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -109,6 +109,12 @@ int acc_is_present (void *, size_t) __GOACC_NOTHROW;\n void acc_memcpy_to_device (void *, void *, size_t) __GOACC_NOTHROW;\n void acc_memcpy_from_device (void *, void *, size_t) __GOACC_NOTHROW;\n \n+/* Finalize versions of copyout/delete functions, specified in OpenACC 2.5.  */\n+void acc_copyout_finalize (void *, size_t) __GOACC_NOTHROW;\n+void acc_copyout_finalize_async (void *, size_t, int) __GOACC_NOTHROW;\n+void acc_delete_finalize (void *, size_t) __GOACC_NOTHROW;\n+void acc_delete_finalize_async (void *, size_t, int) __GOACC_NOTHROW;\n+\n /* CUDA-specific routines.  */\n void *acc_get_current_cuda_device (void) __GOACC_NOTHROW;\n void *acc_get_current_cuda_context (void) __GOACC_NOTHROW;"}, {"sha": "737c582041d9297bc87242353c3c1762711e984a", "filename": "libgomp/openacc_lib.h", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Fopenacc_lib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Fopenacc_lib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fopenacc_lib.h?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -273,6 +273,26 @@\n         end subroutine\n       end interface\n \n+      interface acc_copyout_finalize\n+        subroutine acc_copyout_finalize_32_h (a, len)\n+          use iso_c_binding, only: c_int32_t\n+          !GCC$ ATTRIBUTES NO_ARG_CHECK :: a\n+          type (*), dimension (*) :: a\n+          integer (c_int32_t) len\n+        end subroutine\n+\n+        subroutine acc_copyout_finalize_64_h (a, len)\n+          use iso_c_binding, only: c_int64_t\n+          !GCC$ ATTRIBUTES NO_ARG_CHECK :: a\n+          type (*), dimension (*) :: a\n+          integer (c_int64_t) len\n+        end subroutine\n+\n+        subroutine acc_copyout_finalize_array_h (a)\n+          type (*), dimension (..), contiguous :: a\n+        end subroutine\n+      end interface\n+\n       interface acc_delete\n         subroutine acc_delete_32_h (a, len)\n           use iso_c_binding, only: c_int32_t\n@@ -293,6 +313,26 @@\n         end subroutine\n       end interface\n \n+      interface acc_delete_finalize\n+        subroutine acc_delete_finalize_32_h (a, len)\n+          use iso_c_binding, only: c_int32_t\n+          !GCC$ ATTRIBUTES NO_ARG_CHECK :: a\n+          type (*), dimension (*) :: a\n+          integer (c_int32_t) len\n+        end subroutine\n+\n+        subroutine acc_delete_finalize_64_h (a, len)\n+          use iso_c_binding, only: c_int64_t\n+          !GCC$ ATTRIBUTES NO_ARG_CHECK :: a\n+          type (*), dimension (*) :: a\n+          integer (c_int64_t) len\n+        end subroutine\n+\n+        subroutine acc_delete_finalize_array_h (a)\n+          type (*), dimension (..), contiguous :: a\n+        end subroutine\n+      end interface\n+\n       interface acc_update_device\n         subroutine acc_update_device_32_h (a, len)\n           use iso_c_binding, only: c_int32_t"}, {"sha": "dda041cdbef1958c4173d06d7e0b313c252e4769", "filename": "libgomp/target.c", "status": "modified", "additions": 20, "deletions": 21, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftarget.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftarget.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftarget.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -859,6 +859,7 @@ gomp_map_vars (struct gomp_device_descr *devicep, size_t mapnum,\n \t\ttgt->list[i].offset = 0;\n \t\ttgt->list[i].length = k->host_end - k->host_start;\n \t\tk->refcount = 1;\n+\t\tk->dynamic_refcount = 0;\n \t\ttgt->refcount++;\n \t\tarray->left = NULL;\n \t\tarray->right = NULL;\n@@ -1011,6 +1012,23 @@ gomp_unmap_tgt (struct target_mem_desc *tgt)\n   free (tgt);\n }\n \n+attribute_hidden bool\n+gomp_remove_var (struct gomp_device_descr *devicep, splay_tree_key k)\n+{\n+  bool is_tgt_unmapped = false;\n+  splay_tree_remove (&devicep->mem_map, k);\n+  if (k->link_key)\n+    splay_tree_insert (&devicep->mem_map, (splay_tree_node) k->link_key);\n+  if (k->tgt->refcount > 1)\n+    k->tgt->refcount--;\n+  else\n+    {\n+      is_tgt_unmapped = true;\n+      gomp_unmap_tgt (k->tgt);\n+    }\n+  return is_tgt_unmapped;\n+}\n+\n /* Unmap variables described by TGT.  If DO_COPYFROM is true, copy relevant\n    variables back from device to host: if it is false, it is assumed that this\n    has been done already.  */\n@@ -1059,16 +1077,7 @@ gomp_unmap_vars (struct target_mem_desc *tgt, bool do_copyfrom)\n \t\t\t\t      + tgt->list[i].offset),\n \t\t\t    tgt->list[i].length);\n       if (do_unmap)\n-\t{\n-\t  splay_tree_remove (&devicep->mem_map, k);\n-\t  if (k->link_key)\n-\t    splay_tree_insert (&devicep->mem_map,\n-\t\t\t       (splay_tree_node) k->link_key);\n-\t  if (k->tgt->refcount > 1)\n-\t    k->tgt->refcount--;\n-\t  else\n-\t    gomp_unmap_tgt (k->tgt);\n-\t}\n+\tgomp_remove_var (devicep, k);\n     }\n \n   if (tgt->refcount > 1)\n@@ -1298,17 +1307,7 @@ gomp_unload_image_from_device (struct gomp_device_descr *devicep,\n       else\n \t{\n \t  splay_tree_key n = splay_tree_lookup (&devicep->mem_map, &k);\n-\t  splay_tree_remove (&devicep->mem_map, n);\n-\t  if (n->link_key)\n-\t    {\n-\t      if (n->tgt->refcount > 1)\n-\t\tn->tgt->refcount--;\n-\t      else\n-\t\t{\n-\t\t  is_tgt_unmapped = true;\n-\t\t  gomp_unmap_tgt (n->tgt);\n-\t\t}\n-\t    }\n+\t  is_tgt_unmapped = gomp_remove_var (devicep, n);\n \t}\n     }\n "}, {"sha": "fd3b77dcff5ab1f74c04f5e09962fccd95cb7894", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/data-already-1.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-1.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -18,5 +18,3 @@ main (int argc, char *argv[])\n }\n \n /* { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" } */\n-/* { dg-output \"Trying to map into device \\\\\\[\\[0-9a-fA-FxX\\]+..\\[0-9a-fA-FxX\\]+\\\\\\) object when \\\\\\[\\[0-9a-fA-FxX\\]+..\\[0-9a-fA-FxX\\]+\\\\\\) is already mapped\" } */\n-/* { dg-shouldfail \"\" } */"}, {"sha": "0118b2568e2340656913fce72a70f4213e552d96", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/data-already-2.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-2.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -18,5 +18,3 @@ main (int argc, char *argv[])\n }\n \n /* { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" } */\n-/* { dg-output \"Trying to map into device \\\\\\[\\[0-9a-fA-FxX\\]+..\\[0-9a-fA-FxX\\]+\\\\\\) object when \\\\\\[\\[0-9a-fA-FxX\\]+..\\[0-9a-fA-FxX\\]+\\\\\\) is already mapped\" } */\n-/* { dg-shouldfail \"\" } */"}, {"sha": "b346c69826fb4f92f5b922fd89e3d9ee52f7a237", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/data-already-3.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-3.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -18,5 +18,3 @@ main (int argc, char *argv[])\n }\n \n /* { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" } */\n-/* { dg-output \"already mapped to\" } */\n-/* { dg-shouldfail \"\" } */"}, {"sha": "e99ad33d9bea49b8ee8d010feaf16ffa4715d25b", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/data-already-4.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-4.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -16,5 +16,3 @@ main (int argc, char *argv[])\n }\n \n /* { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" } */\n-/* { dg-output \"already mapped to\" } */\n-/* { dg-shouldfail \"\" } */"}, {"sha": "f8370c006df19d4aa113e46c8bfd4694d899add3", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/data-already-5.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-5.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -16,5 +16,3 @@ main (int argc, char *argv[])\n }\n \n /* { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" } */\n-/* { dg-output \"already mapped to\" } */\n-/* { dg-shouldfail \"\" } */"}, {"sha": "d7f4deb18e48738deedc1d40dfde21e8b92870fe", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/data-already-6.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-6.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -16,5 +16,3 @@ main (int argc, char *argv[])\n }\n \n /* { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" } */\n-/* { dg-output \"already mapped to\" } */\n-/* { dg-shouldfail \"\" } */"}, {"sha": "54be59507ca043b10daaeeeae5d45c9cb7927fa4", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/data-already-7.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-7.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -16,5 +16,3 @@ main (int argc, char *argv[])\n }\n \n /* { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" } */\n-/* { dg-output \"already mapped to\" } */\n-/* { dg-shouldfail \"\" } */"}, {"sha": "e5c0f9cfb32375f2710d9b045f1f8c7f28d464e3", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/data-already-8.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fdata-already-8.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -18,5 +18,3 @@ main (int argc, char *argv[])\n }\n \n /* { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" } */\n-/* { dg-output \"Trying to map into device \\\\\\[\\[0-9a-fA-FxX\\]+..\\[0-9a-fA-FxX\\]+\\\\\\) object when \\\\\\[\\[0-9a-fA-FxX\\]+..\\[0-9a-fA-FxX\\]+\\\\\\) is already mapped\" } */\n-/* { dg-shouldfail \"\" } */"}, {"sha": "9a1c9d30bef263d03622604c69d7d9eb3eab0a55", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/lib-16.c", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-16.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -1,8 +1,5 @@\n-/* Test if duplicate data mappings with acc_copy_in.  */\n+/* Test if acc_copyin has present_or_ and reference counting behavior.  */\n \n-/* { dg-do run { target openacc_nvidia_accel_selected } } */\n-\n-#include <stdio.h>\n #include <stdlib.h>\n #include <openacc.h>\n \n@@ -21,15 +18,21 @@ main (int argc, char **argv)\n     }\n \n   (void) acc_copyin (h, N);\n-\n-  fprintf (stderr, \"CheCKpOInT\\n\");\n   (void) acc_copyin (h, N);\n \n+  acc_copyout (h, N);\n+\n+  if (!acc_is_present (h, N))\n+    abort ();\n+\n+  acc_copyout (h, N);\n+\n+#if !ACC_MEM_SHARED\n+  if (acc_is_present (h, N))\n+    abort ();\n+#endif\n+\n   free (h);\n \n   return 0;\n }\n-\n-/* { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" } */\n-/* { dg-output \"\\\\\\[\\[0-9a-fA-FxX\\]+,\\\\\\+256\\\\\\] already mapped to \\\\\\[\\[0-9a-fA-FxX\\]+,\\\\\\+256\\\\\\]\" } */\n-/* { dg-shouldfail \"\" } */"}, {"sha": "9b42dee9d8721da0d89dc1c5356ad0feff4f91cd", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/lib-25.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-25.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -1,8 +1,5 @@\n-/* Exercise acc_create and acc_delete on nvidia targets.  */\n+/* Exercise acc_create and acc_delete.  */\n \n-/* { dg-do run { target openacc_nvidia_accel_selected } } */\n-\n-#include <stdio.h>\n #include <stdlib.h>\n #include <openacc.h>\n \n@@ -19,18 +16,23 @@ main (int argc, char **argv)\n   if (!d)\n     abort ();\n \n-  fprintf (stderr, \"CheCKpOInT\\n\");\n   d = acc_create (h, N);\n   if (!d)\n     abort ();\n \n   acc_delete (h, N);\n \n+  if (!acc_is_present (h, N))\n+    abort ();\n+\n+  acc_delete (h, N);\n+\n+#if !ACC_MEM_SHARED\n+  if (acc_is_present (h, N))\n+    abort ();\n+#endif\n+\n   free (h);\n \n   return 0;\n }\n-\n-/* { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" } */\n-/* { dg-output \"\\\\\\[\\[0-9a-fA-FxX\\]+,\\\\\\+256\\\\\\] already mapped to \\\\\\[\\[0-9a-fA-FxX\\]+,\\\\\\+256\\\\\\]\" } */\n-/* { dg-shouldfail \"\" } */"}, {"sha": "9ec345361d8e215b535d93e9e537fbd63e6f09df", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/lib-32.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-32.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -127,7 +127,7 @@ main (int argc, char **argv)\n       h[i] = i + 10;\n     }\n \n-  acc_copyout (h, S);\n+  acc_copyout_finalize (h, S);\n   d = NULL;\n   if (!shared_mem)\n     if (acc_is_present (h, S))\n@@ -236,7 +236,7 @@ main (int argc, char **argv)\n \tabort ();\n     }\n \n-  acc_delete (h, S);\n+  acc_delete_finalize (h, S);\n   d = NULL;\n   if (!shared_mem)\n     if (acc_is_present (h, S))"}, {"sha": "51b7ee73b9cec71080653751a9ba08912dddf9d2", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/lib-83.c", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-83.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-83.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-83.c?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -5,21 +5,19 @@\n #include <stdlib.h>\n #include <unistd.h>\n #include <openacc.h>\n-#include \"timer.h\"\n+#include <cuda.h>\n+#include <sys/time.h>\n \n int\n main (int argc, char **argv)\n {\n-  float atime;\n   CUstream stream;\n   CUresult r;\n+  struct timeval tv1, tv2;\n+  time_t t1;\n \n   acc_init (acc_device_nvidia);\n \n-  (void) acc_get_device_num (acc_device_nvidia);\n-\n-  init_timers (1);\n-\n   stream = (CUstream) acc_get_cuda_stream (0);\n   if (stream != NULL)\n     abort ();\n@@ -34,22 +32,22 @@ main (int argc, char **argv)\n   if (!acc_set_cuda_stream (0, stream))\n     abort ();\n \n-  start_timer (0);\n+  gettimeofday (&tv1, NULL);\n \n   acc_wait_all_async (0);\n \n   acc_wait (0);\n \n-  atime = stop_timer (0);\n+  gettimeofday (&tv2, NULL);\n \n-  if (0.010 < atime)\n+  t1 = ((tv2.tv_sec - tv1.tv_sec) * 1000000) + (tv2.tv_usec - tv1.tv_usec);\n+\n+  if (t1 > 1000)\n     {\n-      fprintf (stderr, \"actual time too long\\n\");\n+      fprintf (stderr, \"too long\\n\");\n       abort ();\n     }\n \n-  fini_timers ();\n-\n   acc_shutdown (acc_device_nvidia);\n \n   exit (0);"}, {"sha": "a8843dedc22281b4762ce0ecc5378e48a2bf6cfb", "filename": "libgomp/testsuite/libgomp.oacc-fortran/data-5.f90", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-5.f90?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -0,0 +1,56 @@\n+! { dg-do run }\n+! { dg-skip-if \"\" { *-*-* } { \"*\" } { \"-DACC_MEM_SHARED=0\" } }\n+\n+program refcount_test\n+  use openacc\n+  integer, allocatable :: h(:)\n+  integer i, N\n+\n+  N = 256\n+  allocate (h(N))\n+\n+  do i = 1, N\n+     h(i) = i\n+  end do\n+\n+  !$acc enter data create (h(1:N))\n+  !$acc enter data copyin (h(1:N))\n+  !$acc enter data copyin (h(1:N))\n+  !$acc enter data copyin (h(1:N))\n+\n+  call acc_update_self (h)\n+  do i = 1, N\n+     if (h(i) .eq. i) c = c + 1\n+  end do\n+  ! h[] should be filled with uninitialized device values,\n+  ! abort if it's not.\n+  if (c .eq. N) call abort\n+\n+  h(:) = 0\n+\n+  !$acc parallel present (h(1:N))\n+  do i = 1, N\n+     h(i) = 111\n+  end do\n+  !$acc end parallel\n+\n+  ! No actual copyout should happen.\n+  call acc_copyout (h)\n+  do i = 1, N\n+     if (h(i) .ne. 0) call abort\n+  end do\n+\n+  !$acc exit data delete (h(1:N))\n+\n+  ! This should not actually be deleted yet.\n+  if (acc_is_present (h) .eqv. .FALSE.) call abort\n+\n+  !$acc exit data copyout (h(1:N)) finalize\n+\n+  do i = 1, N\n+     if (h(i) .ne. 111) call abort\n+  end do\n+\n+  if (acc_is_present (h) .eqv. .TRUE.) call abort\n+\n+end program refcount_test"}, {"sha": "fab0ffc99cc34c0ecdf89adec13fbba33a64a715", "filename": "libgomp/testsuite/libgomp.oacc-fortran/data-already-1.f", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-1.f?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -14,5 +14,3 @@\n       END\n \n ! { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" }\n-! { dg-output \"Trying to map into device \\\\\\[\\[0-9a-fA-FxX\\]+..\\[0-9a-fA-FxX\\]+\\\\\\) object when \\\\\\[\\[0-9a-fA-FxX\\]+..\\[0-9a-fA-FxX\\]+\\\\\\) is already mapped\" }\n-! { dg-shouldfail \"\" }"}, {"sha": "bd03062670f0f0e2a9346dcd5d650da3c6f935b0", "filename": "libgomp/testsuite/libgomp.oacc-fortran/data-already-2.f", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-2.f?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -14,5 +14,3 @@\n       END\n \n ! { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" }\n-! { dg-output \"Trying to map into device \\\\\\[\\[0-9a-fA-FxX\\]+..\\[0-9a-fA-FxX\\]+\\\\\\) object when \\\\\\[\\[0-9a-fA-FxX\\]+..\\[0-9a-fA-FxX\\]+\\\\\\) is already mapped\" }\n-! { dg-shouldfail \"\" }"}, {"sha": "60ea3864e4e086f52a97b2ca8dc7576548ee06cb", "filename": "libgomp/testsuite/libgomp.oacc-fortran/data-already-3.f", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-3.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-3.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-3.f?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -13,5 +13,3 @@\n       END\n \n ! { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" }\n-! { dg-output \"already mapped to\" }\n-! { dg-shouldfail \"\" }"}, {"sha": "2abdbf0f868a4e94d22ab35d110ed9489455b2f6", "filename": "libgomp/testsuite/libgomp.oacc-fortran/data-already-4.f", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-4.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-4.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-4.f?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -12,5 +12,3 @@\n       END\n \n ! { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" }\n-! { dg-output \"already mapped to\" }\n-! { dg-shouldfail \"\" }"}, {"sha": "f361d8c177231188043563c912f212dbb602463c", "filename": "libgomp/testsuite/libgomp.oacc-fortran/data-already-5.f", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-5.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-5.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-5.f?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -12,5 +12,3 @@\n       END\n \n ! { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" }\n-! { dg-output \"already mapped to\" }\n-! { dg-shouldfail \"\" }"}, {"sha": "a864737c69238ad11943bb339793d6e4410ebfe9", "filename": "libgomp/testsuite/libgomp.oacc-fortran/data-already-6.f", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-6.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-6.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-6.f?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -12,5 +12,3 @@\n       END\n \n ! { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" }\n-! { dg-output \"already mapped to\" }\n-! { dg-shouldfail \"\" }"}, {"sha": "0d893280e40bf662980a85812479d9f4dc249fa2", "filename": "libgomp/testsuite/libgomp.oacc-fortran/data-already-7.f", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-7.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-7.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-7.f?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -12,5 +12,3 @@\n       END\n \n ! { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" }\n-! { dg-output \"already mapped to\" }\n-! { dg-shouldfail \"\" }"}, {"sha": "7a41f67225a427ffb21e8159c9c5446be9852969", "filename": "libgomp/testsuite/libgomp.oacc-fortran/data-already-8.f", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-8.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-8.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fdata-already-8.f?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -14,5 +14,3 @@\n       END\n \n ! { dg-output \"CheCKpOInT(\\n|\\r\\n|\\r).*\" }\n-! { dg-output \"Trying to map into device \\\\\\[\\[0-9a-fA-FxX\\]+..\\[0-9a-fA-FxX\\]+\\\\\\) object when \\\\\\[\\[0-9a-fA-FxX\\]+..\\[0-9a-fA-FxX\\]+\\\\\\) is already mapped\" }\n-! { dg-shouldfail \"\" }"}, {"sha": "3f979eba034407c087a62eaea83c502220cc29c1", "filename": "libgomp/testsuite/libgomp.oacc-fortran/lib-32-1.f", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-32-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-32-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-32-1.f?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -90,7 +90,7 @@ PROGRAM MAIN\n          H(I) = I + 10\n       END DO\n \n-      CALL ACC_COPYOUT (H, INT (SIZEOF (H), 4))\n+      CALL ACC_COPYOUT_FINALIZE (H, INT (SIZEOF (H), 4))\n       IF (.NOT. SHARED_MEM) THEN\n          IF (ACC_IS_PRESENT (H, INT (SIZEOF (H), 8))) STOP 11\n       ENDIF\n@@ -163,7 +163,7 @@ PROGRAM MAIN\n          IF (H(I) .NE. I + MERGE (18, 17, SHARED_MEM)) STOP 23\n       END DO\n \n-      CALL ACC_DELETE (H)\n+      CALL ACC_DELETE_FINALIZE (H)\n       IF (.NOT. SHARED_MEM) THEN\n          IF (ACC_IS_PRESENT (H, INT (SIZEOF (H), 4))) STOP 24\n       ENDIF"}, {"sha": "642552cae60edd5ef15381ffc70165a1309d746d", "filename": "libgomp/testsuite/libgomp.oacc-fortran/lib-32-2.f", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-32-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c6349e96c5bfa8603aaef8858b38e237a2f33/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-32-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-32-2.f?ref=829c6349e96c5bfa8603aaef8858b38e237a2f33", "patch": "@@ -90,7 +90,7 @@ PROGRAM MAIN\n          H(I) = I + 10\n       END DO\n \n-      CALL ACC_COPYOUT (H, INT (SIZEOF (H), 4))\n+      CALL ACC_COPYOUT_FINALIZE (H, INT (SIZEOF (H), 4))\n       IF (.NOT. SHARED_MEM) THEN\n          IF (ACC_IS_PRESENT (H, INT (SIZEOF (H), 8))) STOP 11\n       ENDIF\n@@ -163,7 +163,7 @@ PROGRAM MAIN\n          IF (H(I) .NE. I + MERGE (18, 17, SHARED_MEM)) STOP 23\n       END DO\n \n-      CALL ACC_DELETE (H)\n+      CALL ACC_DELETE_FINALIZE (H)\n       IF (.NOT. SHARED_MEM) THEN\n          IF (ACC_IS_PRESENT (H, INT (SIZEOF (H), 4))) STOP 24\n       ENDIF"}]}