{"sha": "23c4ff9bd4ea80f3c034f1a2c4318073513bed9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNjNGZmOWJkNGVhODBmM2MwMzRmMWEyYzQzMTgwNzM1MTNiZWQ5Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T09:35:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T09:35:45Z"}, "message": "[multiple changes]\n\n2009-07-13  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-env.adb (Create_Config_Pragmas_File): Iterate on sources rather\n\tthan units.\n\n2009-07-13  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch3.adb (Process_Full_View): Propagate Has_Specified_Stream_{Read,\n\tWrite,Input,Output} from private view to full view.\n\n\t* sem_type.adb, sem_type.ads: Minor reformatting\n\n2009-07-13  Nicolas Setton  <setton@adacore.com>\n\n\t* exp_dbug.ads: Add documentation note on the utility of\n\tDW_AT_GNAT_encoding for IDEs.\n\n2009-07-13  Robert Dewar  <dewar@adacore.com>\n\n\t* g-socthi-vxworks.adb: Minor reformatting\n\n\t* gnatcmd.adb: Minor reformatting\n\nFrom-SVN: r149561", "tree": {"sha": "5cab2bb05255ab0b1bfa15428a1ebaaa86c6f50a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cab2bb05255ab0b1bfa15428a1ebaaa86c6f50a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f/comments", "author": null, "committer": null, "parents": [{"sha": "72a3d7c71d19380804659c30babab27015a14c07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72a3d7c71d19380804659c30babab27015a14c07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72a3d7c71d19380804659c30babab27015a14c07"}], "stats": {"total": 205, "additions": 111, "deletions": 94}, "files": [{"sha": "026acffaffefb6425c032d24c507843d5db05635", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=23c4ff9bd4ea80f3c034f1a2c4318073513bed9f", "patch": "@@ -1,3 +1,26 @@\n+2009-07-13  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-env.adb (Create_Config_Pragmas_File): Iterate on sources rather\n+\tthan units.\n+\n+2009-07-13  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch3.adb (Process_Full_View): Propagate Has_Specified_Stream_{Read,\n+\tWrite,Input,Output} from private view to full view.\n+\n+\t* sem_type.adb, sem_type.ads: Minor reformatting\n+\n+2009-07-13  Nicolas Setton  <setton@adacore.com>\n+\n+\t* exp_dbug.ads: Add documentation note on the utility of\n+\tDW_AT_GNAT_encoding for IDEs.\n+\n+2009-07-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-socthi-vxworks.adb: Minor reformatting\n+\n+\t* gnatcmd.adb: Minor reformatting\n+\n 2009-07-13  Thomas Quinot  <quinot@adacore.com>\n \n \t* rtsfind.ads, exp_dist.adb (RE_Allocate_Buffer): Runtime entry"}, {"sha": "15e83aaf11316c8d7ccbf94266a77b3cf1bb3260", "filename": "gcc/ada/exp_dbug.ads", "status": "modified", "additions": 29, "deletions": 24, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f/gcc%2Fada%2Fexp_dbug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f/gcc%2Fada%2Fexp_dbug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.ads?ref=23c4ff9bd4ea80f3c034f1a2c4318073513bed9f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1996-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1522,33 +1522,38 @@ package Exp_Dbug is\n    --  to DWARF2/3 are generated, with the following variations from the above\n    --  specification.\n \n-   --   Change in the contents of the DW_AT_name attribute.\n-   --    The operators are represented in their natural form. (Ie, the addition\n-   --    operator is written as \"+\" instead of \"Oadd\").\n-   --    The component separation string is \".\" instead of \"__\"\n+   --   Change in the contents of the DW_AT_name attribute\n \n-   --   Introduction of DW_AT_GNAT_encoding, encoded with value 0x2301.\n-   --    Any debugging information entry representing a program entity, named\n-   --    or implicit, may have a DW_AT_GNAT_encoding attribute. The value of\n-   --    this attribute is a string representing the suffix internally added\n-   --    by GNAT for various purposes, mainly for representing debug\n-   --    information compatible with other formats.\n+   --     The operators are represented in their natural form. (for example,\n+   --     the addition operator is written as \"+\" instead of \"Oadd\"). The\n+   --     component separator is \".\" instead of \"__\"\n \n-   --    If a debugging information entry has multiple encodings, all of them\n-   --    will be listed in DW_AT_GNAT_encoding. The separator for this list\n-   --    is ':'.\n+   --   Introduction of DW_AT_GNAT_encoding, encoded with value 0x2301\n+\n+   --     Any debugging information entry representing a program entity, named\n+   --     or implicit, may have a DW_AT_GNAT_encoding attribute. The value of\n+   --     this attribute is a string representing the suffix internally added\n+   --     by GNAT for various purposes, mainly for representing debug\n+   --     information compatible with other formats. In particular this is\n+   --     useful for IDEs which need to filter out information internal to\n+   --     GNAT from their graphical interfaces.\n+\n+   --     If a debugging information entry has multiple encodings, all of them\n+   --     will be listed in DW_AT_GNAT_encoding using the list separator ':'.\n \n    --   Introduction of DW_AT_GNAT_descriptive_type, encoded with value 0x2302\n-   --    Any debugging information entry representing a type may have a\n-   --    DW_AT_GNAT_descriptive_type attribute whose value is a reference,\n-   --    pointing to a debugging information entry representing another type\n-   --    associated to the type.\n-\n-   --   Modification of the contents of the DW_AT_producer string.\n-   --    When emitting full GNAT Vendor extensions to DWARF2/3, \"-gdwarf+\"\n-   --    is appended to the DW_AT_producer string.\n+\n+   --     Any debugging information entry representing a type may have a\n+   --     DW_AT_GNAT_descriptive_type attribute whose value is a reference,\n+   --     pointing to a debugging information entry representing another type\n+   --     associated to the type.\n+\n+   --   Modification of the contents of the DW_AT_producer string\n+\n+   --     When emitting full GNAT Vendor extensions to DWARF2/3, \"-gdwarf+\"\n+   --     is appended to the DW_AT_producer string.\n    --\n-   --    When emitting only DW_AT_GNAT_descriptive_type, \"-gdwarf+-\" is\n-   --    appended to the DW_AT_producer string.\n+   --     When emitting only DW_AT_GNAT_descriptive_type, \"-gdwarf+-\" is\n+   --     appended to the DW_AT_producer string.\n \n end Exp_Dbug;"}, {"sha": "96d0cfca7a38b0b90a3924170596b2225c39864b", "filename": "gcc/ada/g-socthi-vxworks.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f/gcc%2Fada%2Fg-socthi-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f/gcc%2Fada%2Fg-socthi-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.adb?ref=23c4ff9bd4ea80f3c034f1a2c4318073513bed9f", "patch": "@@ -369,12 +369,15 @@ package body GNAT.Sockets.Thin is\n    begin\n       loop\n          if To = Null_Address then\n+\n             --  In violation of the standard sockets API, VxWorks does not\n             --  support sendto(2) calls on connected sockets with a null\n             --  destination address, so use send(2) instead in that case.\n \n             Res := Syscall_Send (S, Msg, Len, Flags);\n \n+         --  Normal case where destination address is non-null\n+\n          else\n             Res := Syscall_Sendto (S, Msg, Len, Flags, To, Tolen);\n          end if;"}, {"sha": "8349d439318527f66ecf53662b3af59c2195fbfb", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=23c4ff9bd4ea80f3c034f1a2c4318073513bed9f", "patch": "@@ -364,7 +364,7 @@ procedure GNATCmd is\n                            File :=\n                              new String'\n                                (Get_Name_String\n-                                    (Proj.Project.Object_Directory.Name)     &\n+                                 (Proj.Project.Object_Directory.Name)        &\n                                 B_Start.all                                  &\n                                 MLib.Fil.Ext_To\n                                   (Get_Name_String\n@@ -390,7 +390,7 @@ procedure GNATCmd is\n                            File :=\n                              new String'\n                                (Get_Name_String\n-                                    (Proj.Project.Object_Directory.Name)     &\n+                                 (Proj.Project.Object_Directory.Name)        &\n                                 B_Start.all                                  &\n                                 Get_Name_String (Proj.Project.Library_Name)  &\n                                 \".ci\");\n@@ -1080,9 +1080,7 @@ procedure GNATCmd is\n                               --  replace the file with the absolute path.\n \n                               Last_Switches.Table (J) :=\n-                                new String'\n-                                  (Dir\n-                                   & ALI_File (1 .. Last));\n+                                new String'(Dir & ALI_File (1 .. Last));\n \n                               --  And we are done\n "}, {"sha": "55f025d83595ced1275c37a5c763774a3f43ca58", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 20, "deletions": 38, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=23c4ff9bd4ea80f3c034f1a2c4318073513bed9f", "patch": "@@ -401,9 +401,9 @@ package body Prj.Env is\n       File_Name : Path_Name_Type  := No_Path;\n       File      : File_Descriptor := Invalid_FD;\n \n-      Current_Unit : Unit_Index := Units_Htable.Get_First (In_Tree.Units_HT);\n-\n       Current_Naming  : Naming_Id;\n+      Iter            : Source_Iterator;\n+      Source          : Source_Id;\n \n       Status : Boolean;\n       --  For call to Close\n@@ -418,11 +418,7 @@ package body Prj.Env is\n       --  If not, create one, and put its name in the project data,\n       --  with the indication that it is a temporary file.\n \n-      procedure Put\n-        (Unit_Name : Name_Id;\n-         File_Name : File_Name_Type;\n-         Unit_Kind : Spec_Or_Body;\n-         Index     : Int);\n+      procedure Put (Source : Source_Id);\n       --  Put an SFN pragma in the temporary file\n \n       procedure Put (File : File_Descriptor; S : String);\n@@ -449,7 +445,7 @@ package body Prj.Env is\n \n          if Lang = null then\n             if Current_Verbosity = High then\n-               Write_Str (\"Languages does not contain Ada, nothing to do\");\n+               Write_Line (\"   Languages does not contain Ada, nothing to do\");\n             end if;\n \n             return;\n@@ -559,12 +555,7 @@ package body Prj.Env is\n       -- Put --\n       ---------\n \n-      procedure Put\n-        (Unit_Name : Name_Id;\n-         File_Name : File_Name_Type;\n-         Unit_Kind : Spec_Or_Body;\n-         Index     : Int)\n-      is\n+      procedure Put (Source : Source_Id) is\n       begin\n          --  A temporary file needs to be open\n \n@@ -573,20 +564,20 @@ package body Prj.Env is\n          --  Put the pragma SFN for the unit kind (spec or body)\n \n          Put (File, \"pragma Source_File_Name_Project (\");\n-         Put (File, Namet.Get_Name_String (Unit_Name));\n+         Put (File, Namet.Get_Name_String (Source.Unit.Name));\n \n-         if Unit_Kind = Spec then\n+         if Source.Kind = Spec then\n             Put (File, \", Spec_File_Name => \"\"\");\n          else\n             Put (File, \", Body_File_Name => \"\"\");\n          end if;\n \n-         Put (File, Namet.Get_Name_String (File_Name));\n+         Put (File, Namet.Get_Name_String (Source.File));\n          Put (File, \"\"\"\");\n \n-         if Index /= 0 then\n+         if Source.Index /= 0 then\n             Put (File, \", Index =>\");\n-            Put (File, Index'Img);\n+            Put (File, Source.Index'Img);\n          end if;\n \n          Put_Line (File, \");\");\n@@ -652,30 +643,21 @@ package body Prj.Env is\n \n          Check_Imported_Projects (For_Project, Dummy, Imported_First => False);\n \n-         --  Visit all the units and process those that need an SFN pragma\n+         --  Visit all the files and process those that need an SFN pragma\n \n-         while Current_Unit /= No_Unit_Index loop\n-            if Current_Unit.File_Names (Spec) /= null\n-              and then Current_Unit.File_Names (Spec).Naming_Exception\n-              and then not Current_Unit.File_Names (Spec).Locally_Removed\n-            then\n-               Put (Current_Unit.Name,\n-                    Current_Unit.File_Names (Spec).File,\n-                    Spec,\n-                    Current_Unit.File_Names (Spec).Index);\n-            end if;\n+         Iter := For_Each_Source (In_Tree, For_Project);\n \n-            if Current_Unit.File_Names (Impl) /= null\n-              and then Current_Unit.File_Names (Impl).Naming_Exception\n-              and then not Current_Unit.File_Names (Impl).Locally_Removed\n+         while Element (Iter) /= No_Source loop\n+            Source := Element (Iter);\n+\n+            if Source.Index >= 1\n+              and then not Source.Locally_Removed\n+              and then Source.Unit /= null\n             then\n-               Put (Current_Unit.Name,\n-                    Current_Unit.File_Names (Impl).File,\n-                    Impl,\n-                    Current_Unit.File_Names (Impl).Index);\n+               Put (Source);\n             end if;\n \n-            Current_Unit := Units_Htable.Get_Next (In_Tree.Units_HT);\n+            Next (Iter);\n          end loop;\n \n          --  If there are no non standard naming scheme, issue the GNAT"}, {"sha": "9c289e751360e961d2d64000e1f651b7196c6851", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=23c4ff9bd4ea80f3c034f1a2c4318073513bed9f", "patch": "@@ -7905,7 +7905,7 @@ package body Sem_Ch3 is\n       --  declaration, all clauses are inherited.\n \n       if No (First_Rep_Item (Def_Id)) then\n-         Set_First_Rep_Item    (Def_Id, First_Rep_Item (T));\n+         Set_First_Rep_Item (Def_Id, First_Rep_Item (T));\n       end if;\n \n       if Is_Tagged_Type (T) then\n@@ -16443,6 +16443,22 @@ package body Sem_Ch3 is\n          Set_Is_CPP_Class (Full_T);\n          Set_Convention   (Full_T, Convention_CPP);\n       end if;\n+\n+      --  If the private view has user specified stream attributes, then so has\n+      --  the full view.\n+\n+      if Has_Specified_Stream_Read (Priv_T) then\n+         Set_Has_Specified_Stream_Read (Full_T);\n+      end if;\n+      if Has_Specified_Stream_Write (Priv_T) then\n+         Set_Has_Specified_Stream_Write (Full_T);\n+      end if;\n+      if Has_Specified_Stream_Input (Priv_T) then\n+         Set_Has_Specified_Stream_Input (Full_T);\n+      end if;\n+      if Has_Specified_Stream_Output (Priv_T) then\n+         Set_Has_Specified_Stream_Output (Full_T);\n+      end if;\n    end Process_Full_View;\n \n    -----------------------------------"}, {"sha": "fad78d49d9b48cd7bc7ab084b05db12dd84cf046", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=23c4ff9bd4ea80f3c034f1a2c4318073513bed9f", "patch": "@@ -1204,9 +1204,9 @@ package body Sem_Type is\n       --  for special handling of expressions with universal operands, see\n       --  comments to Has_Abstract_Interpretation below.\n \n-      ------------------------\n-      --  In_Generic_Actual --\n-      ------------------------\n+      -----------------------\n+      -- In_Generic_Actual --\n+      -----------------------\n \n       function In_Generic_Actual (Exp : Node_Id) return Boolean is\n          Par : constant Node_Id := Parent (Exp);\n@@ -2147,9 +2147,8 @@ package body Sem_Type is\n    -------------------------\n \n    function Has_Compatible_Type\n-     (N    : Node_Id;\n-      Typ  : Entity_Id)\n-      return Boolean\n+     (N   : Node_Id;\n+      Typ : Entity_Id) return Boolean\n    is\n       I  : Interp_Index;\n       It : Interp;\n@@ -2597,9 +2596,8 @@ package body Sem_Type is\n    ---------------------------\n \n    function Is_Invisible_Operator\n-     (N    : Node_Id;\n-      T    : Entity_Id)\n-      return Boolean\n+     (N : Node_Id;\n+      T : Entity_Id) return Boolean\n    is\n       Orig_Node : constant Node_Id := Original_Node (N);\n \n@@ -2809,9 +2807,8 @@ package body Sem_Type is\n               and then Base_Type (T1) = Base_Type (T)\n               and then Is_Numeric_Type (T);\n \n-         --  for division and multiplication, a user-defined function does\n-         --  not match the predefined universal_fixed operation, except in\n-         --  Ada83 mode.\n+         --  For division and multiplication, a user-defined function does not\n+         --  match the predefined universal_fixed operation, except in Ada 83.\n \n          elsif Op_Name = Name_Op_Divide then\n             return (Base_Type (T1) = Base_Type (T2)\n@@ -2892,7 +2889,7 @@ package body Sem_Type is\n       II : Interp_Index;\n \n    begin\n-      --  Find end of Interp list and copy downward to erase the discarded one\n+      --  Find end of interp list and copy downward to erase the discarded one\n \n       II := I + 1;\n       while Present (All_Interp.Table (II).Typ) loop\n@@ -2903,7 +2900,7 @@ package body Sem_Type is\n          All_Interp.Table (J - 1) := All_Interp.Table (J);\n       end loop;\n \n-      --  Back up interp. index to insure that iterator will pick up next\n+      --  Back up interp index to insure that iterator will pick up next\n       --  available interpretation.\n \n       I := I - 1;"}, {"sha": "cfbc579bf08fa9c0e1b0a6fdbb74a630d98c3623", "filename": "gcc/ada/sem_type.ads", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f/gcc%2Fada%2Fsem_type.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23c4ff9bd4ea80f3c034f1a2c4318073513bed9f/gcc%2Fada%2Fsem_type.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.ads?ref=23c4ff9bd4ea80f3c034f1a2c4318073513bed9f", "patch": "@@ -103,10 +103,7 @@ package Sem_Type is\n    --  in N. If the name is an expanded name, the homonyms are only those that\n    --  belong to the same scope.\n \n-   function Is_Invisible_Operator\n-     (N    : Node_Id;\n-      T    : Entity_Id)\n-      return Boolean;\n+   function Is_Invisible_Operator (N : Node_Id; T : Entity_Id) return Boolean;\n    --  Check whether a predefined operation with universal operands appears in\n    --  a context in which the operators of the expected type are not visible.\n \n@@ -172,8 +169,7 @@ package Sem_Type is\n    function Disambiguate\n      (N      : Node_Id;\n       I1, I2 : Interp_Index;\n-      Typ    : Entity_Id)\n-      return   Interp;\n+      Typ    : Entity_Id) return Interp;\n    --  If more than one interpretation of a name in a call is legal, apply\n    --  preference rules (universal types first) and operator visibility in\n    --  order to remove ambiguity. I1 and I2 are the first two interpretations\n@@ -191,10 +187,7 @@ package Sem_Type is\n    --  right operand, which has one interpretation compatible with that of L.\n    --  Return the type intersection of the two.\n \n-   function Has_Compatible_Type\n-     (N    : Node_Id;\n-      Typ  : Entity_Id)\n-      return Boolean;\n+   function Has_Compatible_Type (N : Node_Id; Typ : Entity_Id) return Boolean;\n    --  Verify that some interpretation of the node N has a type compatible with\n    --  Typ. If N is not overloaded, then its unique type must be compatible\n    --  with Typ. Otherwise iterate through the interpretations of N looking for\n@@ -220,11 +213,11 @@ package Sem_Type is\n \n    function Is_Ancestor (T1, T2 : Entity_Id) return Boolean;\n    --  T1 is a tagged type (not class-wide). Verify that it is one of the\n-   --  ancestors of type T2 (which may or not be class-wide)\n+   --  ancestors of type T2 (which may or not be class-wide).\n \n    function Is_Subtype_Of (T1 : Entity_Id; T2 : Entity_Id) return Boolean;\n    --  Checks whether T1 is any subtype of T2 directly or indirectly. Applies\n-   --  only to scalar subtypes ???\n+   --  only to scalar subtypes???\n \n    function Operator_Matches_Spec (Op, New_S : Entity_Id) return Boolean;\n    --  Used to resolve subprograms renaming operators, and calls to user"}]}