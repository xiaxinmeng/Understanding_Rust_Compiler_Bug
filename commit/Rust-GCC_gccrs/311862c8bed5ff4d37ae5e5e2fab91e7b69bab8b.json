{"sha": "311862c8bed5ff4d37ae5e5e2fab91e7b69bab8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzExODYyYzhiZWQ1ZmY0ZDM3YWU1ZTVlMmZhYjkxZTdiNjliYWI4Yg==", "commit": {"author": {"name": "Gerald Baumgartner", "email": "gb@andros.cygnus.com", "date": "1994-07-08T20:22:37Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1994-07-08T20:22:37Z"}, "message": "partial merge for isgnature stuff\n\nFrom-SVN: r7680", "tree": {"sha": "34f34a4d153d8dadc44ca692e69cc9b2fbc716db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34f34a4d153d8dadc44ca692e69cc9b2fbc716db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/311862c8bed5ff4d37ae5e5e2fab91e7b69bab8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/311862c8bed5ff4d37ae5e5e2fab91e7b69bab8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/311862c8bed5ff4d37ae5e5e2fab91e7b69bab8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/311862c8bed5ff4d37ae5e5e2fab91e7b69bab8b/comments", "author": null, "committer": null, "parents": [{"sha": "a98b1078b7baf999498fdd09dfe7eb3ac669f51d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a98b1078b7baf999498fdd09dfe7eb3ac669f51d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a98b1078b7baf999498fdd09dfe7eb3ac669f51d"}], "stats": {"total": 59, "additions": 58, "deletions": 1}, "files": [{"sha": "af52a29a21ed802b8c6f442df074ab31970b987c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/311862c8bed5ff4d37ae5e5e2fab91e7b69bab8b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/311862c8bed5ff4d37ae5e5e2fab91e7b69bab8b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=311862c8bed5ff4d37ae5e5e2fab91e7b69bab8b", "patch": "@@ -1,3 +1,15 @@\n+Thu Jul  7 22:20:46 1994  Gerald Baumgartner  (gb@andros.cygnus.com)\n+\n+\t* cp-tree.h (walk_sigtables): Created extern declaration.\n+\t* decl2.c (walk_sigtables): Created function, patterned after\n+\twalk_vtables, even though we only need it to write out sigtables.\n+\t(finish_sigtable_vardecl): Created function.\n+\t(finish_vtable_vardecl): Changed 0 to NULL_PTR.\n+\t(finish_file): Call walk_sigtables.\n+\n+\t* sig.c (build_signature_table_constructor): Mark class member\n+\tfunction pointed to from signature table entry as addressable.\n+\n Wed Jul  6 20:25:48 1994  Mike Stump  (mrs@cygnus.com)\n \n \t* except.c (init_exception_processing): Setup interim_eh_hook to"}, {"sha": "3eb25cf6790ad2fd786b845f78f1b7d6e6a8b08e", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/311862c8bed5ff4d37ae5e5e2fab91e7b69bab8b/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/311862c8bed5ff4d37ae5e5e2fab91e7b69bab8b/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=311862c8bed5ff4d37ae5e5e2fab91e7b69bab8b", "patch": "@@ -1984,6 +1984,7 @@ extern void finish_builtin_type\t\t\tPROTO((tree, char *, tree *, int, tree));\n extern tree coerce_new_type\t\t\tPROTO((tree));\n extern tree coerce_delete_type\t\t\tPROTO((tree));\n extern void walk_vtables\t\t\tPROTO((void (*)(), void (*)()));\n+extern void walk_sigtables\t\t\tPROTO((void (*)(), void (*)()));\n extern void finish_file\t\t\t\tPROTO((void));\n extern void warn_if_unknown_interface\t\tPROTO((void));\n extern tree grok_x_components\t\t\tPROTO((tree, tree));"}, {"sha": "31a24756d37e9f5059ee8582665d6de6346b1922", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 44, "deletions": 1, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/311862c8bed5ff4d37ae5e5e2fab91e7b69bab8b/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/311862c8bed5ff4d37ae5e5e2fab91e7b69bab8b/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=311862c8bed5ff4d37ae5e5e2fab91e7b69bab8b", "patch": "@@ -2439,7 +2439,7 @@ finish_vtable_vardecl (prev, vars)\n \t}\n #endif /* DWARF_DEBUGGING_INFO */\n \n-      rest_of_decl_compilation (vars, 0, 1, 1);\n+      rest_of_decl_compilation (vars, NULL_PTR, 1, 1);\n     }\n   else if (TREE_USED (vars) && flag_vtable_thunks)\n     assemble_external (vars);\n@@ -2474,6 +2474,48 @@ walk_vtables (typedecl_fn, vardecl_fn)\n     }\n }\n \n+static void\n+finish_sigtable_vardecl (prev, vars)\n+     tree prev, vars;\n+{\n+  /* We don't need to mark sigtable entries as addressable here as is done\n+     for vtables.  Since sigtables, unlike vtables, are always written out,\n+     that was already done in build_signature_table_constructor.  */\n+\n+  rest_of_decl_compilation (vars, NULL_PTR, 1, 1);\n+\n+  /* We know that PREV must be non-zero here.  */\n+  TREE_CHAIN (prev) = TREE_CHAIN (vars);\n+}\n+\n+void\n+walk_sigtables (typedecl_fn, vardecl_fn)\n+     register void (*typedecl_fn)();\n+     register void (*vardecl_fn)();\n+{\n+  tree prev, vars;\n+\n+  for (prev = 0, vars = getdecls (); vars; vars = TREE_CHAIN (vars))\n+    {\n+      register tree type = TREE_TYPE (vars);\n+\n+      if (TREE_CODE (vars) == TYPE_DECL\n+\t  && type != error_mark_node\n+\t  && IS_SIGNATURE (type))\n+\t{\n+\t  if (typedecl_fn) (*typedecl_fn) (prev, vars);\n+\t}\n+      else if (TREE_CODE (vars) == VAR_DECL\n+\t       && TREE_TYPE (vars) != error_mark_node\n+\t       && IS_SIGNATURE (TREE_TYPE (vars)))\n+\t{\n+\t  if (vardecl_fn) (*vardecl_fn) (prev, vars);\n+\t}\n+      else\n+\tprev = vars;\n+    }\n+}\n+\n extern int parse_time, varconst_time;\n \n #define TIMEVAR(VAR, BODY)    \\\n@@ -2756,6 +2798,7 @@ finish_file ()\n #endif\n \n   walk_vtables ((void (*)())0, finish_vtable_vardecl);\n+  walk_sigtables ((void (*)())0, finish_sigtable_vardecl);\n \n   for (vars = getdecls (); vars; vars = TREE_CHAIN (vars))\n     {"}, {"sha": "14261684a1a50f20dd3b4395a314dd547e9d8abf", "filename": "gcc/cp/sig.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/311862c8bed5ff4d37ae5e5e2fab91e7b69bab8b/gcc%2Fcp%2Fsig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/311862c8bed5ff4d37ae5e5e2fab91e7b69bab8b/gcc%2Fcp%2Fsig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsig.c?ref=311862c8bed5ff4d37ae5e5e2fab91e7b69bab8b", "patch": "@@ -591,6 +591,7 @@ build_signature_table_constructor (sig_ty, rhs)\n \t      offset = integer_zero_node;\n \t      pfn = build_unary_op (ADDR_EXPR, rhs_method, 0);\n \t      TREE_TYPE (pfn) = ptr_type_node;\n+\t      TREE_ADDRESSABLE (rhs_method) = 1;\n \t    }\n \n \t  tbl_entry = tree_cons (NULL_TREE, code,"}]}