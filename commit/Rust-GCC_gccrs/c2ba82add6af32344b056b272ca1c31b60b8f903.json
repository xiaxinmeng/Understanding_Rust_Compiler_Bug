{"sha": "c2ba82add6af32344b056b272ca1c31b60b8f903", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJiYTgyYWRkNmFmMzIzNDRiMDU2YjI3MmNhMWMzMWI2MGI4ZjkwMw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-06-05T09:35:25Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-15T13:43:01Z"}, "message": "[Ada] Cleanup in Convert_To_Positional after previous work\n\ngcc/ada/\n\n\t* exp_aggr.adb (Flatten): Adjust description.\n\t(Convert_To_Positional): Remove obsolete ??? comment and use\n\tCompile_Time_Known_Value in the final test.", "tree": {"sha": "f01f2a3547555802b736653e9c97505f9258a3b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f01f2a3547555802b736653e9c97505f9258a3b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2ba82add6af32344b056b272ca1c31b60b8f903", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2ba82add6af32344b056b272ca1c31b60b8f903", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2ba82add6af32344b056b272ca1c31b60b8f903", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2ba82add6af32344b056b272ca1c31b60b8f903/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8092c19930b6cdf3087825f9063cb830cd2de479", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8092c19930b6cdf3087825f9063cb830cd2de479", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8092c19930b6cdf3087825f9063cb830cd2de479"}], "stats": {"total": 18, "additions": 3, "deletions": 15}, "files": [{"sha": "29d3f1490953f457dd5fd332ddc5bee82ea141bd", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ba82add6af32344b056b272ca1c31b60b8f903/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ba82add6af32344b056b272ca1c31b60b8f903/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=c2ba82add6af32344b056b272ca1c31b60b8f903", "patch": "@@ -4969,9 +4969,8 @@ package body Exp_Aggr is\n          Dims : Nat;\n          Ix   : Node_Id;\n          Ixb  : Node_Id) return Boolean;\n-      --  Convert the aggregate into a purely positional form if possible. On\n-      --  entry the bounds of all dimensions are known to be static, and the\n-      --  total number of components is safe enough to expand.\n+      --  Convert the aggregate into a purely positional form if possible after\n+      --  checking that the bounds of all dimensions are known to be static.\n \n       function Is_Flat (N : Node_Id; Dims : Nat) return Boolean;\n       --  Return True if the aggregate N is flat (which is not trivial in the\n@@ -5476,10 +5475,6 @@ package body Exp_Aggr is\n       --  compatible with the upper bound of the type, and therefore it is\n       --  worth flattening such aggregates as well.\n \n-      --  For now the back-end expands these aggregates into individual\n-      --  assignments to the target anyway, but it is conceivable that\n-      --  it will eventually be able to treat such aggregates statically???\n-\n       if Aggr_Size_OK (N, Typ)\n         and then\n           Flatten (N, Dims, First_Index (Typ), First_Index (Base_Type (Typ)))\n@@ -5506,14 +5501,7 @@ package body Exp_Aggr is\n             if Nkind (N) = N_Aggregate and then Present (Expressions (N)) then\n                Expr := First (Expressions (N));\n                while Present (Expr) loop\n-                  if Nkind_In (Expr, N_Integer_Literal, N_Real_Literal)\n-                    or else\n-                      (Is_Entity_Name (Expr)\n-                        and then Ekind (Entity (Expr)) = E_Enumeration_Literal)\n-                  then\n-                     null;\n-\n-                  else\n+                  if not Compile_Time_Known_Value (Expr) then\n                      Error_Msg_N\n                        (\"non-static object requires elaboration code??\", N);\n                      exit;"}]}