{"sha": "4c60db9a7b033fc58a93fd93eb36a4f0bb311b63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM2MGRiOWE3YjAzM2ZjNThhOTNmZDkzZWIzNmE0ZjBiYjMxMWI2Mw==", "commit": {"author": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-06-21T20:19:24Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-06-21T20:19:24Z"}, "message": "PR c++/90490 - fix decltype issues in noexcept-specifier.\n\n\t* except.c (build_noexcept_spec): Call\n\tinstantiate_non_dependent_expr_sfinae before\n\tbuild_converted_constant_expr instead of calling\n\tinstantiate_non_dependent_expr after it.  Add\n\tprocessing_template_decl_sentinel.\n\n\t* g++.dg/cpp0x/noexcept43.C: New test.\n\t* g++.dg/cpp0x/noexcept44.C: New test.\n\nFrom-SVN: r272568", "tree": {"sha": "32f0ebc475ff899a3bddcfb9f97c178b8c679703", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32f0ebc475ff899a3bddcfb9f97c178b8c679703"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c60db9a7b033fc58a93fd93eb36a4f0bb311b63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c60db9a7b033fc58a93fd93eb36a4f0bb311b63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c60db9a7b033fc58a93fd93eb36a4f0bb311b63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c60db9a7b033fc58a93fd93eb36a4f0bb311b63/comments", "author": null, "committer": null, "parents": [{"sha": "c27d68ee6d1a15cc12ef20458342202c6c9d4203", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c27d68ee6d1a15cc12ef20458342202c6c9d4203", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c27d68ee6d1a15cc12ef20458342202c6c9d4203"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "0afd0e6debf03c172ffdbe32643073224a98f798", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c60db9a7b033fc58a93fd93eb36a4f0bb311b63/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c60db9a7b033fc58a93fd93eb36a4f0bb311b63/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4c60db9a7b033fc58a93fd93eb36a4f0bb311b63", "patch": "@@ -1,3 +1,12 @@\n+2019-06-21  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/90490 - fix decltype issues in noexcept-specifier.\n+\t* except.c (build_noexcept_spec): Call\n+\tinstantiate_non_dependent_expr_sfinae before\n+\tbuild_converted_constant_expr instead of calling\n+\tinstantiate_non_dependent_expr after it.  Add\n+\tprocessing_template_decl_sentinel.\n+\n 2019-06-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/90950"}, {"sha": "71f5d609f1006890832e8d22a82489725225c449", "filename": "gcc/cp/except.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c60db9a7b033fc58a93fd93eb36a4f0bb311b63/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c60db9a7b033fc58a93fd93eb36a4f0bb311b63/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=4c60db9a7b033fc58a93fd93eb36a4f0bb311b63", "patch": "@@ -1285,8 +1285,10 @@ build_noexcept_spec (tree expr, tsubst_flags_t complain)\n   if (TREE_CODE (expr) != DEFERRED_NOEXCEPT\n       && !value_dependent_expression_p (expr))\n     {\n+      expr = instantiate_non_dependent_expr_sfinae (expr, complain);\n+      /* Don't let convert_like_real create more template codes.  */\n+      processing_template_decl_sentinel s;\n       expr = build_converted_constant_bool_expr (expr, complain);\n-      expr = instantiate_non_dependent_expr (expr);\n       expr = cxx_constant_value (expr);\n     }\n   if (TREE_CODE (expr) == INTEGER_CST)"}, {"sha": "b56645fc0cf6c177ea832916a9e022bfd1d4c701", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c60db9a7b033fc58a93fd93eb36a4f0bb311b63/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c60db9a7b033fc58a93fd93eb36a4f0bb311b63/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4c60db9a7b033fc58a93fd93eb36a4f0bb311b63", "patch": "@@ -1,3 +1,9 @@\n+2019-06-21  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/90490 - fix decltype issues in noexcept-specifier.\n+\t* g++.dg/cpp0x/noexcept43.C: New test.\n+\t* g++.dg/cpp0x/noexcept44.C: New test.\n+\n 2019-06-21  Matthew Beliveau  <mbelivea@redhat.com>\n \n \tPR c++/90875 - added -Wswitch-outside-range option\n@@ -13,7 +19,7 @@\n \n 2019-06-21  Jeff Law  <law@redhat.com>\n \n-        PR tree-optimization/90949\n+\tPR tree-optimization/90949\n \t* gcc.c-torture/execute/pr90949.c: New test.\n \n 2019-06-21  Marek Polacek  <polacek@redhat.com>"}, {"sha": "faa7d146029c713d76ce7e4f3d13724cbfad698d", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept43.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c60db9a7b033fc58a93fd93eb36a4f0bb311b63/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept43.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c60db9a7b033fc58a93fd93eb36a4f0bb311b63/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept43.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept43.C?ref=4c60db9a7b033fc58a93fd93eb36a4f0bb311b63", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/90490\n+// { dg-do compile { target c++11 } }\n+\n+struct R { constexpr operator bool() { return false;} };\n+\n+template <typename>\n+struct S {\n+  void g() noexcept(decltype(R{ }) { }) {\n+  }\n+};"}, {"sha": "78c9d12f2b71922b6a5b4b95d97a9f0fceac18ae", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept44.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c60db9a7b033fc58a93fd93eb36a4f0bb311b63/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept44.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c60db9a7b033fc58a93fd93eb36a4f0bb311b63/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept44.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept44.C?ref=4c60db9a7b033fc58a93fd93eb36a4f0bb311b63", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/90490\n+// { dg-do compile { target c++11 } }\n+\n+template <typename>\n+struct S {\n+  void g() noexcept(decltype(int{ }) { }) {\n+  }\n+};"}]}