{"sha": "0c016888ffd569c4b70722cf7df2efcc003f397b", "node_id": "C_kwDOANBUbNoAKDBjMDE2ODg4ZmZkNTY5YzRiNzA3MjJjZjdkZjJlZmNjMDAzZjM5N2I", "commit": {"author": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2022-03-18T18:23:40Z"}, "committer": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2022-03-18T18:25:09Z"}, "message": "[PR104961] LRA: split hard reg for reload pseudo with clobber.\n\nSplitting hard register live range did not work for subreg of a\nmulti-reg reload pseudo.  Reload insns for such pseudo contain clobber\nof the pseudo and splitting did not take this into account.  The patch\nfixes it.\n\ngcc/ChangeLog:\n\n\tPR rtl-optimization/104961\n\t* lra-assigns.cc (find_reload_regno_insns): Process reload pseudo clobber.\n\ngcc/testsuite/ChangeLog:\n\n\tPR rtl-optimization/104961\n\t* gcc.target/i386/pr104961.c: New.", "tree": {"sha": "d5628dc0c252c6adb47ccb1955eba0a2c2bac15b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5628dc0c252c6adb47ccb1955eba0a2c2bac15b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c016888ffd569c4b70722cf7df2efcc003f397b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c016888ffd569c4b70722cf7df2efcc003f397b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c016888ffd569c4b70722cf7df2efcc003f397b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c016888ffd569c4b70722cf7df2efcc003f397b/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eabf8cad2ba1c261a3de9b07be8874d57303d9ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eabf8cad2ba1c261a3de9b07be8874d57303d9ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eabf8cad2ba1c261a3de9b07be8874d57303d9ec"}], "stats": {"total": 48, "additions": 34, "deletions": 14}, "files": [{"sha": "af30a673142ce316695284ee6a8ffd8277a9ddba", "filename": "gcc/lra-assigns.cc", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c016888ffd569c4b70722cf7df2efcc003f397b/gcc%2Flra-assigns.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c016888ffd569c4b70722cf7df2efcc003f397b/gcc%2Flra-assigns.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-assigns.cc?ref=0c016888ffd569c4b70722cf7df2efcc003f397b", "patch": "@@ -1706,36 +1706,41 @@ find_reload_regno_insns (int regno, rtx_insn * &start, rtx_insn * &finish)\n {\n   unsigned int uid;\n   bitmap_iterator bi;\n-  int n = 0;\n+  int insns_num = 0;\n+  bool clobber_p = false;\n   rtx_insn *prev_insn, *next_insn;\n   rtx_insn *start_insn = NULL, *first_insn = NULL, *second_insn = NULL;\n   \n   EXECUTE_IF_SET_IN_BITMAP (&lra_reg_info[regno].insn_bitmap, 0, uid, bi)\n     {\n       if (start_insn == NULL)\n \tstart_insn = lra_insn_recog_data[uid]->insn;\n-      n++;\n+      if (GET_CODE (PATTERN (lra_insn_recog_data[uid]->insn)) == CLOBBER)\n+\tclobber_p = true;\n+      else\n+\tinsns_num++;\n     }\n-  /* For reload pseudo we should have at most 3 insns referring for\n+  /* For reload pseudo we should have at most 3 insns besides clobber referring for\n      it: input/output reload insns and the original insn.  */\n-  if (n > 3)\n+  if (insns_num > 3)\n     return false;\n-  if (n > 1)\n+  if (clobber_p)\n+    insns_num++;\n+  if (insns_num > 1)\n     {\n       for (prev_insn = PREV_INSN (start_insn),\n \t     next_insn = NEXT_INSN (start_insn);\n-\t   n != 1 && (prev_insn != NULL || next_insn != NULL); )\n+\t   insns_num != 1 && (prev_insn != NULL || next_insn != NULL); )\n \t{\n-\t  if (prev_insn != NULL && first_insn == NULL)\n+\t  if (prev_insn != NULL)\n \t    {\n-\t      if (! bitmap_bit_p (&lra_reg_info[regno].insn_bitmap,\n-\t\t\t\t  INSN_UID (prev_insn)))\n-\t\tprev_insn = PREV_INSN (prev_insn);\n-\t      else\n+\t      if (bitmap_bit_p (&lra_reg_info[regno].insn_bitmap,\n+\t\t\t\tINSN_UID (prev_insn)))\n \t\t{\n \t\t  first_insn = prev_insn;\n-\t\t  n--;\n+\t\t  insns_num--;\n \t\t}\n+\t\tprev_insn = PREV_INSN (prev_insn);\n \t    }\n \t  if (next_insn != NULL && second_insn == NULL)\n \t    {\n@@ -1745,11 +1750,11 @@ find_reload_regno_insns (int regno, rtx_insn * &start, rtx_insn * &finish)\n \t      else\n \t\t{\n \t\t  second_insn = next_insn;\n-\t\t  n--;\n+\t\t  insns_num--;\n \t\t}\n \t    }\n \t}\n-      if (n > 1)\n+      if (insns_num > 1)\n \treturn false;\n     }\n   start = first_insn != NULL ? first_insn : start_insn;"}, {"sha": "11ea95afe44c4ca996d4a6bd4f1120529270c847", "filename": "gcc/testsuite/gcc.target/i386/pr104961.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c016888ffd569c4b70722cf7df2efcc003f397b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104961.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c016888ffd569c4b70722cf7df2efcc003f397b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104961.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104961.c?ref=0c016888ffd569c4b70722cf7df2efcc003f397b", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile { target int128 } } */\n+/* { dg-options \"-Og\" } */\n+\n+__int128 i;\n+\n+void bar (int);\n+\n+void\n+foo (int a, char b, _Complex unsigned char c)\n+{\n+  __int128 j = i * i;\n+  c -= 1;\n+  bar (j);\n+  bar (__imag__ c);\n+}"}]}