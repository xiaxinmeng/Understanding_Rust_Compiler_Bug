{"sha": "fb0653ab96ba450a5f364cbf9463060dfe5729f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIwNjUzYWI5NmJhNDUwYTVmMzY0Y2JmOTQ2MzA2MGRmZTU3MjlmNQ==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2015-02-13T09:44:07Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-02-13T09:44:07Z"}, "message": "re PR tree-optimization/65002 (ICE: Segmentation fault)\n\ngcc/\n\n\tPR tree-optimization/65002\n\t* tree-cfg.c (pass_data_fixup_cfg): Don't update\n\tSSA on start.\n\t* tree-sra.c (some_callers_have_no_vuse_p): New.\n\t(ipa_early_sra): Reject functions whose callers\n\tassume function is read only.\n\ngcc/testsuite/\n\n\tPR tree-optimization/65002\n\t* gcc.dg/pr65002.C: New.\n\nFrom-SVN: r220679", "tree": {"sha": "4b2a3f514eba8ef119ef3719ecd498308e88ca4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b2a3f514eba8ef119ef3719ecd498308e88ca4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb0653ab96ba450a5f364cbf9463060dfe5729f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb0653ab96ba450a5f364cbf9463060dfe5729f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb0653ab96ba450a5f364cbf9463060dfe5729f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb0653ab96ba450a5f364cbf9463060dfe5729f5/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3c780bb2d55431af3ade07c418f831ff19505735", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c780bb2d55431af3ade07c418f831ff19505735", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c780bb2d55431af3ade07c418f831ff19505735"}], "stats": {"total": 65, "additions": 64, "deletions": 1}, "files": [{"sha": "19e729bba97d5a71a5ec4698d34c522c5fa20489", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb0653ab96ba450a5f364cbf9463060dfe5729f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb0653ab96ba450a5f364cbf9463060dfe5729f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb0653ab96ba450a5f364cbf9463060dfe5729f5", "patch": "@@ -1,3 +1,12 @@\n+2015-02-13  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR tree-optimization/65002\n+\t* tree-cfg.c (pass_data_fixup_cfg): Don't update\n+\tSSA on start.\n+\t* tree-sra.c (some_callers_have_no_vuse_p): New.\n+\t(ipa_early_sra): Reject functions whose callers\n+\tassume function is read only.\n+\n 2015-02-13  Richard Biener  <rguenther@suse.de>\n \n \tPR lto/65015"}, {"sha": "1aca0b55a9247fdfc514b761595ea20fd46637af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb0653ab96ba450a5f364cbf9463060dfe5729f5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb0653ab96ba450a5f364cbf9463060dfe5729f5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fb0653ab96ba450a5f364cbf9463060dfe5729f5", "patch": "@@ -1,3 +1,8 @@\n+2015-02-13  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR tree-optimization/65002\n+\t* gcc.dg/pr65002.C: New.\n+\n 2015-02-13  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/65040"}, {"sha": "ac7c66bd19ad1f1fdf0883cebd2296f78761271b", "filename": "gcc/testsuite/gcc.dg/pr65002.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb0653ab96ba450a5f364cbf9463060dfe5729f5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr65002.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb0653ab96ba450a5f364cbf9463060dfe5729f5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr65002.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr65002.C?ref=fb0653ab96ba450a5f364cbf9463060dfe5729f5", "patch": "@@ -0,0 +1,26 @@\n+/* PR tree-optimization/65002 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+namespace fastmath {\n+  template <typename T> float floor(const T &) __attribute__((const));\n+  template <typename T> float floor(const T &p1) { return p1; }\n+}\n+using fastmath::floor;\n+class A {\n+public:\n+  A(int, int);\n+  virtual int m_fn1(float) const;\n+};\n+class B : A {\n+public:\n+  B(int, int p2) : A(entity, p2) {}\n+  int m_fn1(float p1) const { long b(floor(p1)); }\n+  int entity;\n+};\n+\n+int a;\n+void Convert() {\n+  if (int *c = 0)\n+    B(*c, a);\n+}"}, {"sha": "006bc08bbcac7d85f7841eda58a0e5b9b1fa404a", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb0653ab96ba450a5f364cbf9463060dfe5729f5/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb0653ab96ba450a5f364cbf9463060dfe5729f5/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=fb0653ab96ba450a5f364cbf9463060dfe5729f5", "patch": "@@ -8754,7 +8754,7 @@ const pass_data pass_data_fixup_cfg =\n   PROP_cfg, /* properties_required */\n   0, /* properties_provided */\n   0, /* properties_destroyed */\n-  TODO_update_ssa_only_virtuals, /* todo_flags_start */\n+  0, /* todo_flags_start */\n   0, /* todo_flags_finish */\n };\n "}, {"sha": "023b8172300415bf9f5e775823c7d85fa6ef1df0", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb0653ab96ba450a5f364cbf9463060dfe5729f5/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb0653ab96ba450a5f364cbf9463060dfe5729f5/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=fb0653ab96ba450a5f364cbf9463060dfe5729f5", "patch": "@@ -4890,6 +4890,20 @@ some_callers_have_mismatched_arguments_p (struct cgraph_node *node,\n   return false;\n }\n \n+/* Return false if all callers have vuse attached to a call statement.  */\n+\n+static bool\n+some_callers_have_no_vuse_p (struct cgraph_node *node,\n+\t\t\t     void *data ATTRIBUTE_UNUSED)\n+{\n+  struct cgraph_edge *cs;\n+  for (cs = node->callers; cs; cs = cs->next_caller)\n+    if (!cs->call_stmt || !gimple_vuse (cs->call_stmt))\n+      return true;\n+\n+  return false;\n+}\n+\n /* Convert all callers of NODE.  */\n \n static bool\n@@ -5116,6 +5130,15 @@ ipa_early_sra (void)\n       goto simple_out;\n     }\n \n+  if (node->call_for_symbol_thunks_and_aliases\n+       (some_callers_have_no_vuse_p, NULL, true))\n+    {\n+      if (dump_file)\n+\tfprintf (dump_file, \"There are callers with no VUSE attached \"\n+\t\t \"to a call stmt.\\n\");\n+      goto simple_out;\n+    }\n+\n   bb_dereferences = XCNEWVEC (HOST_WIDE_INT,\n \t\t\t\t func_param_count\n \t\t\t\t * last_basic_block_for_fn (cfun));"}]}