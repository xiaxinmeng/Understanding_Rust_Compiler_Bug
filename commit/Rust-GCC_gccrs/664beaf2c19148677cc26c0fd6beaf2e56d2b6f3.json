{"sha": "664beaf2c19148677cc26c0fd6beaf2e56d2b6f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY0YmVhZjJjMTkxNDg2NzdjYzI2YzBmZDZiZWFmMmU1NmQyYjZmMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-02-21T17:48:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-02-21T17:48:57Z"}, "message": "re PR c++/79639 (ICE with -O and constexpr)\n\n\tPR c++/79639\n\t* constexpr.c (cxx_eval_store_expression): If *valp is a PTRMEM_CST,\n\tcall cplus_expand_constant on it first.\n\n\t* g++.dg/cpp1y/constexpr-79639.C: New test.\n\nFrom-SVN: r245635", "tree": {"sha": "6743da82496b663c0f92397eeada8e809092e6e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6743da82496b663c0f92397eeada8e809092e6e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/664beaf2c19148677cc26c0fd6beaf2e56d2b6f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/664beaf2c19148677cc26c0fd6beaf2e56d2b6f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/664beaf2c19148677cc26c0fd6beaf2e56d2b6f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/664beaf2c19148677cc26c0fd6beaf2e56d2b6f3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "956d3e61a029d40846994b99b7b2b12986ccb047", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/956d3e61a029d40846994b99b7b2b12986ccb047", "html_url": "https://github.com/Rust-GCC/gccrs/commit/956d3e61a029d40846994b99b7b2b12986ccb047"}], "stats": {"total": 45, "additions": 41, "deletions": 4}, "files": [{"sha": "26ead8ac6c6da732722fed2b005daa07d0e4db56", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/664beaf2c19148677cc26c0fd6beaf2e56d2b6f3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/664beaf2c19148677cc26c0fd6beaf2e56d2b6f3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=664beaf2c19148677cc26c0fd6beaf2e56d2b6f3", "patch": "@@ -1,3 +1,9 @@\n+2017-02-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/79639\n+\t* constexpr.c (cxx_eval_store_expression): If *valp is a PTRMEM_CST,\n+\tcall cplus_expand_constant on it first.\n+\n 2017-02-19  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/78139 - destructor needed by new-expression"}, {"sha": "14af617f2a8667a4ab0a4ac6c7b6c2c9dee43f18", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/664beaf2c19148677cc26c0fd6beaf2e56d2b6f3/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/664beaf2c19148677cc26c0fd6beaf2e56d2b6f3/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=664beaf2c19148677cc26c0fd6beaf2e56d2b6f3", "patch": "@@ -3517,11 +3517,12 @@ cxx_eval_store_expression (const constexpr_ctx *ctx, tree t,\n \t wants to modify it.  */\n       if (*valp == NULL_TREE)\n \t{\n-\t  *valp = new_ctx.ctor = build_constructor (type, NULL);\n-\t  CONSTRUCTOR_NO_IMPLICIT_ZERO (new_ctx.ctor) = no_zero_init;\n+\t  *valp = build_constructor (type, NULL);\n+\t  CONSTRUCTOR_NO_IMPLICIT_ZERO (*valp) = no_zero_init;\n \t}\n-      else\n-\tnew_ctx.ctor = *valp;\n+      else if (TREE_CODE (*valp) == PTRMEM_CST)\n+\t*valp = cplus_expand_constant (*valp);\n+      new_ctx.ctor = *valp;\n       new_ctx.object = target;\n     }\n "}, {"sha": "342f23f3d912d3beb7601933b201ef83054d0af6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/664beaf2c19148677cc26c0fd6beaf2e56d2b6f3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/664beaf2c19148677cc26c0fd6beaf2e56d2b6f3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=664beaf2c19148677cc26c0fd6beaf2e56d2b6f3", "patch": "@@ -1,5 +1,8 @@\n 2017-02-21  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/79639\n+\t* g++.dg/cpp1y/constexpr-79639.C: New test. \n+\n \tPR target/79633\n \t* gcc.target/i386/mpx/pr79633.c: New test.\n "}, {"sha": "03e6b8466f23d3ab085b9eba8ffdd8839515e462", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-79639.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/664beaf2c19148677cc26c0fd6beaf2e56d2b6f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-79639.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/664beaf2c19148677cc26c0fd6beaf2e56d2b6f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-79639.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-79639.C?ref=664beaf2c19148677cc26c0fd6beaf2e56d2b6f3", "patch": "@@ -0,0 +1,27 @@\n+// PR c++/79639\n+// { dg-do compile { target c++14 } }\n+\n+struct A\n+{\n+  void foo () {}\n+  void bar () {}\n+};\n+typedef void (A::*T) ();\n+\n+constexpr T\n+foo (T f)\n+{\n+  f = 0;\n+  return f;\n+}\n+\n+constexpr T\n+bar (T f)\n+{\n+  f = &A::bar;\n+  return f;\n+}\n+\n+constexpr T a = foo (&A::foo);\n+constexpr T b = foo (&A::foo);\n+static_assert (a == nullptr, \"\");"}]}