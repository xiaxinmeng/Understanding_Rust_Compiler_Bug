{"sha": "98cf223ca9c9d0536d56aa16c198b3ecb3951509", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThjZjIyM2NhOWM5ZDA1MzZkNTZhYTE2YzE5OGIzZWNiMzk1MTUwOQ==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-11-29T20:45:49Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-11-29T20:45:49Z"}, "message": "In gcc/objc/: 2010-11-29 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/objc/:\n2010-11-29  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc-act.c (start_class): When a class is reimplemented,\n\tgenerate an error and avoid adding the class to the list of\n\timplemented classes again, but do not return error_mark_node.\n\nIn gcc/testsuite/:\n2010-11-29  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc.dg/duplicate-class-1.m: New.\n\t* obj-c++.dg/duplicate-class-1.mm: New.\n\nFrom-SVN: r167270", "tree": {"sha": "5fbe0db7e4a7ed1c71df82aac25a743af0e5c20d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fbe0db7e4a7ed1c71df82aac25a743af0e5c20d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98cf223ca9c9d0536d56aa16c198b3ecb3951509", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98cf223ca9c9d0536d56aa16c198b3ecb3951509", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98cf223ca9c9d0536d56aa16c198b3ecb3951509", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98cf223ca9c9d0536d56aa16c198b3ecb3951509/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d402edc15d4b829e03d9f0a904e813bb24627a02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d402edc15d4b829e03d9f0a904e813bb24627a02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d402edc15d4b829e03d9f0a904e813bb24627a02"}], "stats": {"total": 82, "additions": 79, "deletions": 3}, "files": [{"sha": "47c896a7073ffaa699cf225e6f8c86df6dea3a1e", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98cf223ca9c9d0536d56aa16c198b3ecb3951509/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98cf223ca9c9d0536d56aa16c198b3ecb3951509/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=98cf223ca9c9d0536d56aa16c198b3ecb3951509", "patch": "@@ -1,3 +1,9 @@\n+2010-11-29  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc-act.c (start_class): When a class is reimplemented,\n+\tgenerate an error and avoid adding the class to the list of\n+\timplemented classes again, but do not return error_mark_node.\n+\n 2010-11-29  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc-act.c (objc_maybe_build_component_ref): Removed TODO."}, {"sha": "8de8e255e24093e7b42b020b9780b224d6c0ad57", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98cf223ca9c9d0536d56aa16c198b3ecb3951509/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98cf223ca9c9d0536d56aa16c198b3ecb3951509/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=98cf223ca9c9d0536d56aa16c198b3ecb3951509", "patch": "@@ -9537,10 +9537,13 @@ start_class (enum tree_code code, tree class_name, tree super_name,\n \t    {\n \t      error (\"reimplementation of class %qE\",\n \t\t     class_name);\n-\t      return error_mark_node;\n+\t      /* TODO: error message saying where it was previously\n+\t\t implemented.  */\n+\t      break;\n \t    }\n-\timplemented_classes = tree_cons (NULL_TREE, class_name,\n-\t\t\t\t\t implemented_classes);\n+\tif (chain == NULL_TREE)\n+\t  implemented_classes = tree_cons (NULL_TREE, class_name,\n+\t\t\t\t\t   implemented_classes);\n       }\n \n       /* Reset for multiple classes per file.  */"}, {"sha": "5792e66d131bc707b247d7bb97cd5b756a15fca5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98cf223ca9c9d0536d56aa16c198b3ecb3951509/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98cf223ca9c9d0536d56aa16c198b3ecb3951509/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=98cf223ca9c9d0536d56aa16c198b3ecb3951509", "patch": "@@ -1,3 +1,8 @@\n+2010-11-29  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc.dg/duplicate-class-1.m: New.\n+\t* obj-c++.dg/duplicate-class-1.mm: New.\n+\n 2010-11-29  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc.dg/property/dotsyntax-21.m"}, {"sha": "9476533d1eace7bad2b6f2bacd614e2c909b574b", "filename": "gcc/testsuite/obj-c++.dg/duplicate-class-1.mm", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98cf223ca9c9d0536d56aa16c198b3ecb3951509/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fduplicate-class-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98cf223ca9c9d0536d56aa16c198b3ecb3951509/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fduplicate-class-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fduplicate-class-1.mm?ref=98cf223ca9c9d0536d56aa16c198b3ecb3951509", "patch": "@@ -0,0 +1,31 @@\n+/* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, November 2010.  */\n+/* { dg-do compile } */\n+\n+/* Test that a duplicated @implementation for the same class does not\n+   crash the compiler.  */\n+\n+@interface Test\n+{\n+  Class isa;\n+}\n+- (int) test;\n+@end\n+\n+@implementation Test\n+- (int) test\n+{\n+  return 4;\n+}\n+@end\n+\n+/* The most likely cause is that the programmer meant this to be a\n+   category, so check what happens if we have some different methods\n+   in there.  */\n+@implementation Test /* { dg-error \"reimplementation of class .Test.\" } */\n+- (int) test2\n+{\n+  return [self test];\n+}\n+@end\n+/* { dg-warning \"incomplete implementation\" \"\" { target *-*-* } 29 } */\n+/* { dg-warning \"not found\" \"\" { target *-*-* } 29 } */"}, {"sha": "f86159211b384c6f197eaada48b940e3b3074b5c", "filename": "gcc/testsuite/objc.dg/duplicate-class-1.m", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98cf223ca9c9d0536d56aa16c198b3ecb3951509/gcc%2Ftestsuite%2Fobjc.dg%2Fduplicate-class-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98cf223ca9c9d0536d56aa16c198b3ecb3951509/gcc%2Ftestsuite%2Fobjc.dg%2Fduplicate-class-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fduplicate-class-1.m?ref=98cf223ca9c9d0536d56aa16c198b3ecb3951509", "patch": "@@ -0,0 +1,31 @@\n+/* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, November 2010.  */\n+/* { dg-do compile } */\n+\n+/* Test that a duplicated @implementation for the same class does not\n+   crash the compiler.  */\n+\n+@interface Test\n+{\n+  Class isa;\n+}\n+- (int) test;\n+@end\n+\n+@implementation Test\n+- (int) test\n+{\n+  return 4;\n+}\n+@end\n+\n+/* The most likely cause is that the programmer meant this to be a\n+   category, so check what happens if we have some different methods\n+   in there.  */\n+@implementation Test\n+- (int) test2  /* { dg-error \"reimplementation of class .Test.\" } */\n+{\n+  return [self test];\n+}\n+@end\n+/* { dg-warning \"incomplete implementation\" \"\" { target *-*-* } 29 } */\n+/* { dg-warning \"not found\" \"\" { target *-*-* } 29 } */"}]}