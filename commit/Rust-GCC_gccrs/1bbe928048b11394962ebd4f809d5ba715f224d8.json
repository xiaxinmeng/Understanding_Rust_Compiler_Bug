{"sha": "1bbe928048b11394962ebd4f809d5ba715f224d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJiZTkyODA0OGIxMTM5NDk2MmViZDRmODA5ZDViYTcxNWYyMjRkOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-25T22:31:38Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-25T22:31:38Z"}, "message": "(initializer_constant_valid_p): Really use endtype.\n\nFrom-SVN: r2249", "tree": {"sha": "a661f6b674b4df2cc6b1e4ef99f7d2aef42ddb35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a661f6b674b4df2cc6b1e4ef99f7d2aef42ddb35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bbe928048b11394962ebd4f809d5ba715f224d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bbe928048b11394962ebd4f809d5ba715f224d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bbe928048b11394962ebd4f809d5ba715f224d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bbe928048b11394962ebd4f809d5ba715f224d8/comments", "author": null, "committer": null, "parents": [{"sha": "b1af4777420641d90fc71bc8f34782d9568b3f01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1af4777420641d90fc71bc8f34782d9568b3f01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1af4777420641d90fc71bc8f34782d9568b3f01"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "79834130753b5728c9cbd78d357be93897bdd7fc", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bbe928048b11394962ebd4f809d5ba715f224d8/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bbe928048b11394962ebd4f809d5ba715f224d8/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=1bbe928048b11394962ebd4f809d5ba715f224d8", "patch": "@@ -4185,8 +4185,8 @@ initializer_constant_valid_p (value, endtype)\n       return 0;\n \n     case PLUS_EXPR:\n-      if (TREE_CODE (TREE_TYPE (value)) == INTEGER_TYPE\n-\t  && TYPE_PRECISION (TREE_TYPE (value)) < POINTER_SIZE)\n+      if (TREE_CODE (endtype) == INTEGER_TYPE\n+\t  && TYPE_PRECISION (endtype) < POINTER_SIZE)\n \treturn 0;\n       {\n \ttree valid0 = initializer_constant_valid_p (TREE_OPERAND (value, 0),\n@@ -4202,8 +4202,8 @@ initializer_constant_valid_p (value, endtype)\n       }\n \n     case MINUS_EXPR:\n-      if (TREE_CODE (TREE_TYPE (value)) == INTEGER_TYPE\n-\t  && TYPE_PRECISION (TREE_TYPE (value)) < POINTER_SIZE)\n+      if (TREE_CODE (endtype) == INTEGER_TYPE\n+\t  && TYPE_PRECISION (endtype) < POINTER_SIZE)\n \treturn 0;\n       {\n \ttree valid0 = initializer_constant_valid_p (TREE_OPERAND (value, 0),"}]}