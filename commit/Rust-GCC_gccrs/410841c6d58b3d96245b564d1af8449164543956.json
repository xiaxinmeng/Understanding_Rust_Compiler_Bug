{"sha": "410841c6d58b3d96245b564d1af8449164543956", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDEwODQxYzZkNThiM2Q5NjI0NWI1NjRkMWFmODQ0OTE2NDU0Mzk1Ng==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-08-20T20:57:56Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-08-20T20:57:56Z"}, "message": "Cast to unsigned short/char first for _mm_extract_epi16/_mm_extract_epi8.\n\ngcc/\n\n2010-08-20  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/45336\n\t* config/i386/emmintrin.h (_mm_extract_epi16): Cast to unsigned\n\tshort first.\n\n\t* config/i386/smmintrin.h (_mm_extract_epi8): Cast to unsigned\n\tchar first.\n\ngcc/testsuite/\n\n2010-08-20  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/45336\n\t* gcc.target/i386/pr45336-1.c: New.\n\t* gcc.target/i386/pr45336-2.c: Likewise.\n\t* gcc.target/i386/pr45336-3.c: Likewise.\n\t* gcc.target/i386/pr45336-4.c: Likewise.\n\nFrom-SVN: r163421", "tree": {"sha": "3fdebaa5aeacce0c4fd97369c27c1bb07d91c5d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fdebaa5aeacce0c4fd97369c27c1bb07d91c5d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/410841c6d58b3d96245b564d1af8449164543956", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/410841c6d58b3d96245b564d1af8449164543956", "html_url": "https://github.com/Rust-GCC/gccrs/commit/410841c6d58b3d96245b564d1af8449164543956", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/410841c6d58b3d96245b564d1af8449164543956/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "50d724a75026efc61783b772dae0f12a823fb720", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50d724a75026efc61783b772dae0f12a823fb720", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50d724a75026efc61783b772dae0f12a823fb720"}], "stats": {"total": 90, "additions": 86, "deletions": 4}, "files": [{"sha": "9f7a8c58791927c3ca755c386033b5405d00d1d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/410841c6d58b3d96245b564d1af8449164543956/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/410841c6d58b3d96245b564d1af8449164543956/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=410841c6d58b3d96245b564d1af8449164543956", "patch": "@@ -1,3 +1,12 @@\n+2010-08-20  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/45336\n+\t* config/i386/emmintrin.h (_mm_extract_epi16): Cast to unsigned\n+\tshort first.\n+\n+\t* config/i386/smmintrin.h (_mm_extract_epi8): Cast to unsigned\n+\tchar first.\n+\n 2010-08-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/45336"}, {"sha": "596d28ff8e80c1e517fe2704a0949dd026a1dc63", "filename": "gcc/config/i386/emmintrin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/410841c6d58b3d96245b564d1af8449164543956/gcc%2Fconfig%2Fi386%2Femmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/410841c6d58b3d96245b564d1af8449164543956/gcc%2Fconfig%2Fi386%2Femmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Femmintrin.h?ref=410841c6d58b3d96245b564d1af8449164543956", "patch": "@@ -1309,7 +1309,7 @@ _mm_cmpgt_epi32 (__m128i __A, __m128i __B)\n extern __inline int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n _mm_extract_epi16 (__m128i const __A, int const __N)\n {\n-  return __builtin_ia32_vec_ext_v8hi ((__v8hi)__A, __N);\n+  return (unsigned short) __builtin_ia32_vec_ext_v8hi ((__v8hi)__A, __N);\n }\n \n extern __inline __m128i __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n@@ -1319,7 +1319,7 @@ _mm_insert_epi16 (__m128i const __A, int const __D, int const __N)\n }\n #else\n #define _mm_extract_epi16(A, N) \\\n-  ((int) __builtin_ia32_vec_ext_v8hi ((__v8hi)(__m128i)(A), (int)(N)))\n+  ((int) (unsigned short) __builtin_ia32_vec_ext_v8hi ((__v8hi)(__m128i)(A), (int)(N)))\n #define _mm_insert_epi16(A, D, N)\t\t\t\t\\\n   ((__m128i) __builtin_ia32_vec_set_v8hi ((__v8hi)(__m128i)(A),\t\\\n \t\t\t\t\t  (int)(D), (int)(N)))"}, {"sha": "357b527367c327caebdc36998aec2ff6bed2a5cb", "filename": "gcc/config/i386/smmintrin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/410841c6d58b3d96245b564d1af8449164543956/gcc%2Fconfig%2Fi386%2Fsmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/410841c6d58b3d96245b564d1af8449164543956/gcc%2Fconfig%2Fi386%2Fsmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsmmintrin.h?ref=410841c6d58b3d96245b564d1af8449164543956", "patch": "@@ -439,7 +439,7 @@ _mm_insert_epi64 (__m128i __D, long long __S, const int __N)\n extern __inline int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n _mm_extract_epi8 (__m128i __X, const int __N)\n {\n-   return __builtin_ia32_vec_ext_v16qi ((__v16qi)__X, __N);\n+   return (unsigned char) __builtin_ia32_vec_ext_v16qi ((__v16qi)__X, __N);\n }\n \n extern __inline int __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n@@ -457,7 +457,7 @@ _mm_extract_epi64 (__m128i __X, const int __N)\n #endif\n #else\n #define _mm_extract_epi8(X, N) \\\n-  ((int) __builtin_ia32_vec_ext_v16qi ((__v16qi)(__m128i)(X), (int)(N)))\n+  ((int) (unsigned char) __builtin_ia32_vec_ext_v16qi ((__v16qi)(__m128i)(X), (int)(N)))\n #define _mm_extract_epi32(X, N) \\\n   ((int) __builtin_ia32_vec_ext_v4si ((__v4si)(__m128i)(X), (int)(N)))\n "}, {"sha": "878b6aa242e3fe6c7414b74a10622ab7c23df4f6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/410841c6d58b3d96245b564d1af8449164543956/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/410841c6d58b3d96245b564d1af8449164543956/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=410841c6d58b3d96245b564d1af8449164543956", "patch": "@@ -1,3 +1,11 @@\n+2010-08-20  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/45336\n+\t* gcc.target/i386/pr45336-1.c: New.\n+\t* gcc.target/i386/pr45336-2.c: Likewise.\n+\t* gcc.target/i386/pr45336-3.c: Likewise.\n+\t* gcc.target/i386/pr45336-4.c: Likewise.\n+\n 2010-08-20  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR testsuite/45361"}, {"sha": "e2b4f658a3ffd3e9d0cd43c9d1ce075d37e7b236", "filename": "gcc/testsuite/gcc.target/i386/pr45336-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/410841c6d58b3d96245b564d1af8449164543956/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/410841c6d58b3d96245b564d1af8449164543956/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-1.c?ref=410841c6d58b3d96245b564d1af8449164543956", "patch": "@@ -0,0 +1,16 @@\n+/* PR target/45336 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse4 -mtune=generic\" } */\n+/* { dg-final { scan-assembler-not \"movsbl\" } } */\n+/* { dg-final { scan-assembler-not \"movswl\" } } */\n+/* { dg-final { scan-assembler-not \"movzbl\" } } */\n+/* { dg-final { scan-assembler-not \"movzwl\" } } */\n+/* { dg-final { scan-assembler-not \"cwtl\" } } */\n+/* { dg-final { scan-assembler \"pextrb\" } } */\n+/* { dg-final { scan-assembler \"pextrw\" } } */\n+/* { dg-final { scan-assembler \"pextrd\" } } */\n+\n+#include <smmintrin.h>\n+unsigned int foo8(__m128i x) { return _mm_extract_epi8(x, 4); }\n+unsigned int foo16(__m128i x) { return _mm_extract_epi16(x, 3); }\n+unsigned int foo32(__m128i x) { return _mm_extract_epi32(x, 2); }"}, {"sha": "83470021660ebb2029baa229b7987acddacf1440", "filename": "gcc/testsuite/gcc.target/i386/pr45336-2.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/410841c6d58b3d96245b564d1af8449164543956/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/410841c6d58b3d96245b564d1af8449164543956/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-2.c?ref=410841c6d58b3d96245b564d1af8449164543956", "patch": "@@ -0,0 +1,21 @@\n+/* PR target/45336 */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target lp64 } */\n+/* { dg-options \"-O2 -msse4 -mtune=generic\" } */\n+/* { dg-final { scan-assembler-not \"movsbl\" } } */\n+/* { dg-final { scan-assembler-not \"movswl\" } } */\n+/* { dg-final { scan-assembler-not \"movzbl\" } } */\n+/* { dg-final { scan-assembler-not \"movzwl\" } } */\n+/* { dg-final { scan-assembler-not \"cwtl\" } } */\n+/* { dg-final { scan-assembler-not \"cltq\" } } */\n+/* { dg-final { scan-assembler \"pextrb\" } } */\n+/* { dg-final { scan-assembler \"pextrw\" } } */\n+/* { dg-final { scan-assembler \"pextrd\" } } */\n+\n+#include <smmintrin.h>\n+unsigned long long int foo8(__m128i x) { return _mm_extract_epi8(x, 4); }\n+unsigned long long int foo16(__m128i x) { return _mm_extract_epi16(x, 3); }\n+unsigned long long int foo32(__m128i x)\n+{ \n+  return (unsigned int) _mm_extract_epi32(x, 2);\n+}"}, {"sha": "055e3148703cbf57b933cc2aeb59fca51aa6a165", "filename": "gcc/testsuite/gcc.target/i386/pr45336-3.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/410841c6d58b3d96245b564d1af8449164543956/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/410841c6d58b3d96245b564d1af8449164543956/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-3.c?ref=410841c6d58b3d96245b564d1af8449164543956", "patch": "@@ -0,0 +1,13 @@\n+/* PR target/45336 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse4 -mtune=generic\" } */\n+/* { dg-final { scan-assembler \"movsbl\" } } */\n+/* { dg-final { scan-assembler \"(movswl|cwtl)\" } } */\n+/* { dg-final { scan-assembler \"pextrb\" } } */\n+/* { dg-final { scan-assembler \"pextrw\" } } */\n+/* { dg-final { scan-assembler \"pextrd\" } } */\n+\n+#include <smmintrin.h>\n+int foo8(__m128i x) { return (char) _mm_extract_epi8(x, 4); }\n+int foo16(__m128i x) { return (short) _mm_extract_epi16(x, 3); }\n+int foo32(__m128i x) { return _mm_extract_epi32(x, 2); }"}, {"sha": "00c93191627776a87e15ef64d78a1571558aadac", "filename": "gcc/testsuite/gcc.target/i386/pr45336-4.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/410841c6d58b3d96245b564d1af8449164543956/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/410841c6d58b3d96245b564d1af8449164543956/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45336-4.c?ref=410841c6d58b3d96245b564d1af8449164543956", "patch": "@@ -0,0 +1,15 @@\n+/* PR target/45336 */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target lp64 } */\n+/* { dg-options \"-O2 -msse4 -mtune=generic\" } */\n+/* { dg-final { scan-assembler \"movsbq\" } } */\n+/* { dg-final { scan-assembler \"movswq\" } } */\n+/* { dg-final { scan-assembler \"(cltq|movslq)\" } } */\n+/* { dg-final { scan-assembler \"pextrb\" } } */\n+/* { dg-final { scan-assembler \"pextrw\" } } */\n+/* { dg-final { scan-assembler \"pextrd\" } } */\n+\n+#include <smmintrin.h>\n+long long int foo8(__m128i x) { return (char) _mm_extract_epi8(x, 4); }\n+long long int foo16(__m128i x) { return (short) _mm_extract_epi16(x, 3); }\n+long long int foo32(__m128i x) { return (int) _mm_extract_epi32(x, 2); }"}]}