{"sha": "6a9ddc71985f33dbe9e22a3dff99533f881f5ba1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE5ZGRjNzE5ODVmMzNkYmU5ZTIyYTNkZmY5OTUzM2Y4ODFmNWJhMQ==", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2020-05-26T16:43:19Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T21:13:15Z"}, "message": "Ensure number of arguments match number of parameters to function before type analysis", "tree": {"sha": "04bae1069dc029e00a07542436c94cfbd4b04365", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04bae1069dc029e00a07542436c94cfbd4b04365"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a9ddc71985f33dbe9e22a3dff99533f881f5ba1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a9ddc71985f33dbe9e22a3dff99533f881f5ba1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a9ddc71985f33dbe9e22a3dff99533f881f5ba1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a9ddc71985f33dbe9e22a3dff99533f881f5ba1/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "121ebe3f8338aeef47846cef83e4108c5e3aa0e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/121ebe3f8338aeef47846cef83e4108c5e3aa0e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/121ebe3f8338aeef47846cef83e4108c5e3aa0e6"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "03f3d274ed410a72ba75bc2e311ac8c3390acf89", "filename": "gcc/rust/analysis/rust-type-resolution.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9ddc71985f33dbe9e22a3dff99533f881f5ba1/gcc%2Frust%2Fanalysis%2Frust-type-resolution.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9ddc71985f33dbe9e22a3dff99533f881f5ba1/gcc%2Frust%2Fanalysis%2Frust-type-resolution.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fanalysis%2Frust-type-resolution.cc?ref=6a9ddc71985f33dbe9e22a3dff99533f881f5ba1", "patch": "@@ -471,6 +471,14 @@ TypeResolution::visit (AST::CallExpr &expr)\n   if (fndecl == NULL)\n     return;\n \n+  // check num args match\n+  if (fndecl->function_params.size () != expr.params.size ())\n+    {\n+      rust_error_at (expr.get_locus_slow (),\n+\t\t     \"differing number of arguments vs parameters to function\");\n+      return;\n+    }\n+\n   typeBuffer.push_back (fndecl->return_type.get ());\n   expr.fndeclRef = fndecl;\n "}]}