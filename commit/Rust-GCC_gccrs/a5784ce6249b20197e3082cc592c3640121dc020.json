{"sha": "a5784ce6249b20197e3082cc592c3640121dc020", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU3ODRjZTYyNDliMjAxOTdlMzA4MmNjNTkyYzM2NDAxMjFkYzAyMA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2013-03-25T14:55:05Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2013-03-25T14:55:05Z"}, "message": "Fix ChangeLog formatting.\n\ngcc/\nFix ChangeLog formatting.\n\ngcc/testsuite\n2013-03-25  Kyrylo Tkachov  <kyrylo.tkachov at arm.com>\n\n\t* gcc.target/aarch64/atomic-comp-swap-release-acquire.c: Move test\n\tbody from here...\n\t* gcc.target/aarch64/atomic-comp-swap-release-acquire.x: ... to here.\n\t* gcc.target/aarch64/atomic-op-acq_rel.c: Move test body from here...\n\t* gcc.target/aarch64/atomic-op-acq_rel.x: ... to here.\n\t* gcc.target/aarch64/atomic-op-acquire.c: Move test body from here...\n\t* gcc.target/aarch64/atomic-op-acquire.x: ... to here.\n\t* gcc.target/aarch64/atomic-op-char.c: Move test body from here...\n\t* gcc.target/aarch64/atomic-op-char.x: ... to here.\n\t* gcc.target/aarch64/atomic-op-consume.c: Move test body from here...\n\t* gcc.target/aarch64/atomic-op-consume.x: ... to here.\n\t* gcc.target/aarch64/atomic-op-int.c: Move test body from here...\n\t* gcc.target/aarch64/atomic-op-int.x: ... to here.\n\t* gcc.target/aarch64/atomic-op-relaxed.c: Move test body from here...\n\t* gcc.target/aarch64/atomic-op-relaxed.x: ... to here.\n\t* gcc.target/aarch64/atomic-op-release.c: Move test body from here...\n\t* gcc.target/aarch64/atomic-op-release.x: ... to here.\n\t* gcc.target/aarch64/atomic-op-seq_cst.c: Move test body from here...\n\t* gcc.target/aarch64/atomic-op-seq_cst.x: ... to here.\n\t* gcc.target/aarch64/atomic-op-short.c: Move test body from here...\n\t* gcc.target/aarch64/atomic-op-short.x: ... to here.\n\t* gcc.target/arm/atomic-comp-swap-release-acquire.c: New test.\n\t* gcc.target/arm/atomic-op-acq_rel.c: Likewise.\n\t* gcc.target/arm/atomic-op-acquire.c: Likewise.\n\t* gcc.target/arm/atomic-op-char.c: Likewise.\n\t* gcc.target/arm/atomic-op-consume.c: Likewise.\n\t* gcc.target/arm/atomic-op-int.c: Likewise.\n\t* gcc.target/arm/atomic-op-relaxed.c: Likewise.\n\t* gcc.target/arm/atomic-op-release.c: Likewise.\n\t* gcc.target/arm/atomic-op-seq_cst.c: Likewise.\n\t* gcc.target/arm/atomic-op-short.c: Likewise.\n\nFrom-SVN: r197051", "tree": {"sha": "c38902d91095910b014e69cfec65400cdd5c06f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c38902d91095910b014e69cfec65400cdd5c06f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5784ce6249b20197e3082cc592c3640121dc020", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5784ce6249b20197e3082cc592c3640121dc020", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5784ce6249b20197e3082cc592c3640121dc020", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5784ce6249b20197e3082cc592c3640121dc020/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "55446c7e557773390aac5cea0ecc2227c254423a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55446c7e557773390aac5cea0ecc2227c254423a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55446c7e557773390aac5cea0ecc2227c254423a"}], "stats": {"total": 882, "additions": 514, "deletions": 368}, "files": [{"sha": "f48ead2329f79b42d8b5078c840c7911907759c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -70,6 +70,7 @@\n \tfor microMIPS.add<mode>3\"\n \n 2013-03-25  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n \tPR target/56720\n \t* config/arm/iterators.md (v_cmp_result): New mode attribute.\n \t* config/arm/neon.md (vcond<mode><mode>): Handle unordered cases."}, {"sha": "f6addcf762d35433b628987666592bb394af1aa2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -1,3 +1,37 @@\n+2013-03-25  Kyrylo Tkachov  <kyrylo.tkachov at arm.com>\n+\n+\t* gcc.target/aarch64/atomic-comp-swap-release-acquire.c: Move test\n+\tbody from here...\n+\t* gcc.target/aarch64/atomic-comp-swap-release-acquire.x: ... to here.\n+\t* gcc.target/aarch64/atomic-op-acq_rel.c: Move test body from here...\n+\t* gcc.target/aarch64/atomic-op-acq_rel.x: ... to here.\n+\t* gcc.target/aarch64/atomic-op-acquire.c: Move test body from here...\n+\t* gcc.target/aarch64/atomic-op-acquire.x: ... to here.\n+\t* gcc.target/aarch64/atomic-op-char.c: Move test body from here...\n+\t* gcc.target/aarch64/atomic-op-char.x: ... to here.\n+\t* gcc.target/aarch64/atomic-op-consume.c: Move test body from here...\n+\t* gcc.target/aarch64/atomic-op-consume.x: ... to here.\n+\t* gcc.target/aarch64/atomic-op-int.c: Move test body from here...\n+\t* gcc.target/aarch64/atomic-op-int.x: ... to here.\n+\t* gcc.target/aarch64/atomic-op-relaxed.c: Move test body from here...\n+\t* gcc.target/aarch64/atomic-op-relaxed.x: ... to here.\n+\t* gcc.target/aarch64/atomic-op-release.c: Move test body from here...\n+\t* gcc.target/aarch64/atomic-op-release.x: ... to here.\n+\t* gcc.target/aarch64/atomic-op-seq_cst.c: Move test body from here...\n+\t* gcc.target/aarch64/atomic-op-seq_cst.x: ... to here.\n+\t* gcc.target/aarch64/atomic-op-short.c: Move test body from here...\n+\t* gcc.target/aarch64/atomic-op-short.x: ... to here.\n+\t* gcc.target/arm/atomic-comp-swap-release-acquire.c: New test.\n+\t* gcc.target/arm/atomic-op-acq_rel.c: Likewise.\n+\t* gcc.target/arm/atomic-op-acquire.c: Likewise.\n+\t* gcc.target/arm/atomic-op-char.c: Likewise.\n+\t* gcc.target/arm/atomic-op-consume.c: Likewise.\n+\t* gcc.target/arm/atomic-op-int.c: Likewise.\n+\t* gcc.target/arm/atomic-op-relaxed.c: Likewise.\n+\t* gcc.target/arm/atomic-op-release.c: Likewise.\n+\t* gcc.target/arm/atomic-op-seq_cst.c: Likewise.\n+\t* gcc.target/arm/atomic-op-short.c: Likewise.\n+\n 2013-03-25  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/56694"}, {"sha": "9785bca4f5154da9895edbd09ffaec0b4b10f725", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-comp-swap-release-acquire.c", "status": "modified", "additions": 1, "deletions": 35, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-comp-swap-release-acquire.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-comp-swap-release-acquire.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-comp-swap-release-acquire.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -1,41 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n-#define STRONG 0\n-#define WEAK 1\n-int v = 0;\n-\n-int\n-atomic_compare_exchange_STRONG_RELEASE_ACQUIRE (int a, int b)\n-{\n-  return __atomic_compare_exchange (&v, &a, &b,\n-\t\t\t\t    STRONG, __ATOMIC_RELEASE,\n-\t\t\t\t    __ATOMIC_ACQUIRE);\n-}\n-\n-int\n-atomic_compare_exchange_WEAK_RELEASE_ACQUIRE (int a, int b)\n-{\n-  return __atomic_compare_exchange (&v, &a, &b,\n-\t\t\t\t    WEAK, __ATOMIC_RELEASE,\n-\t\t\t\t    __ATOMIC_ACQUIRE);\n-}\n-\n-int\n-atomic_compare_exchange_n_STRONG_RELEASE_ACQUIRE (int a, int b)\n-{\n-  return __atomic_compare_exchange_n (&v, &a, b,\n-\t\t\t\t      STRONG, __ATOMIC_RELEASE,\n-\t\t\t\t      __ATOMIC_ACQUIRE);\n-}\n-\n-int\n-atomic_compare_exchange_n_WEAK_RELEASE_ACQUIRE (int a, int b)\n-{\n-  return __atomic_compare_exchange_n (&v, &a, b,\n-\t\t\t\t      WEAK, __ATOMIC_RELEASE,\n-\t\t\t\t      __ATOMIC_ACQUIRE);\n-}\n+#include \"atomic-comp-swap-release-acquire.x\"\n \n /* { dg-final { scan-assembler-times \"ldaxr\\tw\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 4 } } */\n /* { dg-final { scan-assembler-times \"stlxr\\tw\\[0-9\\]+, w\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 4 } } */"}, {"sha": "4403afd64558a2073678f72ac996d26361ea9b93", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-comp-swap-release-acquire.x", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-comp-swap-release-acquire.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-comp-swap-release-acquire.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-comp-swap-release-acquire.x?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,36 @@\n+\n+#define STRONG 0\n+#define WEAK 1\n+int v = 0;\n+\n+int\n+atomic_compare_exchange_STRONG_RELEASE_ACQUIRE (int a, int b)\n+{\n+  return __atomic_compare_exchange (&v, &a, &b,\n+\t\t\t\t    STRONG, __ATOMIC_RELEASE,\n+\t\t\t\t    __ATOMIC_ACQUIRE);\n+}\n+\n+int\n+atomic_compare_exchange_WEAK_RELEASE_ACQUIRE (int a, int b)\n+{\n+  return __atomic_compare_exchange (&v, &a, &b,\n+\t\t\t\t    WEAK, __ATOMIC_RELEASE,\n+\t\t\t\t    __ATOMIC_ACQUIRE);\n+}\n+\n+int\n+atomic_compare_exchange_n_STRONG_RELEASE_ACQUIRE (int a, int b)\n+{\n+  return __atomic_compare_exchange_n (&v, &a, b,\n+\t\t\t\t      STRONG, __ATOMIC_RELEASE,\n+\t\t\t\t      __ATOMIC_ACQUIRE);\n+}\n+\n+int\n+atomic_compare_exchange_n_WEAK_RELEASE_ACQUIRE (int a, int b)\n+{\n+  return __atomic_compare_exchange_n (&v, &a, b,\n+\t\t\t\t      WEAK, __ATOMIC_RELEASE,\n+\t\t\t\t      __ATOMIC_ACQUIRE);\n+}"}, {"sha": "8569ac0dfc936e072af130ceb09f9998ca942d06", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-op-acq_rel.c", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-acq_rel.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-acq_rel.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-acq_rel.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -1,43 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n-int v = 0;\n-\n-int\n-atomic_fetch_add_ACQ_REL (int a)\n-{\n-  return __atomic_fetch_add (&v, a, __ATOMIC_ACQ_REL);\n-}\n-\n-int\n-atomic_fetch_sub_ACQ_REL (int a)\n-{\n-  return __atomic_fetch_sub (&v, a, __ATOMIC_ACQ_REL);\n-}\n-\n-int\n-atomic_fetch_and_ACQ_REL (int a)\n-{\n-  return __atomic_fetch_and (&v, a, __ATOMIC_ACQ_REL);\n-}\n-\n-int\n-atomic_fetch_nand_ACQ_REL (int a)\n-{\n-  return __atomic_fetch_nand (&v, a, __ATOMIC_ACQ_REL);\n-}\n-\n-int\n-atomic_fetch_xor_ACQ_REL (int a)\n-{\n-  return __atomic_fetch_xor (&v, a, __ATOMIC_ACQ_REL);\n-}\n-\n-int\n-atomic_fetch_or_ACQ_REL (int a)\n-{\n-  return __atomic_fetch_or (&v, a, __ATOMIC_ACQ_REL);\n-}\n+#include \"atomic-op-acq_rel.x\"\n \n /* { dg-final { scan-assembler-times \"ldaxr\\tw\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */\n /* { dg-final { scan-assembler-times \"stlxr\\tw\\[0-9\\]+, w\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */"}, {"sha": "9970bbb252455fa9ecac372ba2f62dd8ecd77be3", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-op-acq_rel.x", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-acq_rel.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-acq_rel.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-acq_rel.x?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,37 @@\n+int v = 0;\n+\n+int\n+atomic_fetch_add_ACQ_REL (int a)\n+{\n+  return __atomic_fetch_add (&v, a, __ATOMIC_ACQ_REL);\n+}\n+\n+int\n+atomic_fetch_sub_ACQ_REL (int a)\n+{\n+  return __atomic_fetch_sub (&v, a, __ATOMIC_ACQ_REL);\n+}\n+\n+int\n+atomic_fetch_and_ACQ_REL (int a)\n+{\n+  return __atomic_fetch_and (&v, a, __ATOMIC_ACQ_REL);\n+}\n+\n+int\n+atomic_fetch_nand_ACQ_REL (int a)\n+{\n+  return __atomic_fetch_nand (&v, a, __ATOMIC_ACQ_REL);\n+}\n+\n+int\n+atomic_fetch_xor_ACQ_REL (int a)\n+{\n+  return __atomic_fetch_xor (&v, a, __ATOMIC_ACQ_REL);\n+}\n+\n+int\n+atomic_fetch_or_ACQ_REL (int a)\n+{\n+  return __atomic_fetch_or (&v, a, __ATOMIC_ACQ_REL);\n+}"}, {"sha": "57e6d57d5ef2f431c7642d0233329e8694f81fdd", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-op-acquire.c", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-acquire.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-acquire.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-acquire.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -1,43 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n-int v = 0;\n-\n-int\n-atomic_fetch_add_ACQUIRE (int a)\n-{\n-  return __atomic_fetch_add (&v, a, __ATOMIC_ACQUIRE);\n-}\n-\n-int\n-atomic_fetch_sub_ACQUIRE (int a)\n-{\n-  return __atomic_fetch_sub (&v, a, __ATOMIC_ACQUIRE);\n-}\n-\n-int\n-atomic_fetch_and_ACQUIRE (int a)\n-{\n-  return __atomic_fetch_and (&v, a, __ATOMIC_ACQUIRE);\n-}\n-\n-int\n-atomic_fetch_nand_ACQUIRE (int a)\n-{\n-  return __atomic_fetch_nand (&v, a, __ATOMIC_ACQUIRE);\n-}\n-\n-int\n-atomic_fetch_xor_ACQUIRE (int a)\n-{\n-  return __atomic_fetch_xor (&v, a, __ATOMIC_ACQUIRE);\n-}\n-\n-int\n-atomic_fetch_or_ACQUIRE (int a)\n-{\n-  return __atomic_fetch_or (&v, a, __ATOMIC_ACQUIRE);\n-}\n+#include \"atomic-op-acquire.x\"\n \n /* { dg-final { scan-assembler-times \"ldaxr\\tw\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */\n /* { dg-final { scan-assembler-times \"stxr\\tw\\[0-9\\]+, w\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */"}, {"sha": "7eeb7f84583631a08a7ad80d2abe001dc69759fd", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-op-acquire.x", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-acquire.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-acquire.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-acquire.x?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,37 @@\n+int v = 0;\n+\n+int\n+atomic_fetch_add_ACQUIRE (int a)\n+{\n+  return __atomic_fetch_add (&v, a, __ATOMIC_ACQUIRE);\n+}\n+\n+int\n+atomic_fetch_sub_ACQUIRE (int a)\n+{\n+  return __atomic_fetch_sub (&v, a, __ATOMIC_ACQUIRE);\n+}\n+\n+int\n+atomic_fetch_and_ACQUIRE (int a)\n+{\n+  return __atomic_fetch_and (&v, a, __ATOMIC_ACQUIRE);\n+}\n+\n+int\n+atomic_fetch_nand_ACQUIRE (int a)\n+{\n+  return __atomic_fetch_nand (&v, a, __ATOMIC_ACQUIRE);\n+}\n+\n+int\n+atomic_fetch_xor_ACQUIRE (int a)\n+{\n+  return __atomic_fetch_xor (&v, a, __ATOMIC_ACQUIRE);\n+}\n+\n+int\n+atomic_fetch_or_ACQUIRE (int a)\n+{\n+  return __atomic_fetch_or (&v, a, __ATOMIC_ACQUIRE);\n+}"}, {"sha": "d6c2aa593baa2f3bf42d9c5571dbe8e4358601cd", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-op-char.c", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-char.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -1,43 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n-char v = 0;\n-\n-char\n-atomic_fetch_add_RELAXED (char a)\n-{\n-  return __atomic_fetch_add (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-char\n-atomic_fetch_sub_RELAXED (char a)\n-{\n-  return __atomic_fetch_sub (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-char\n-atomic_fetch_and_RELAXED (char a)\n-{\n-  return __atomic_fetch_and (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-char\n-atomic_fetch_nand_RELAXED (char a)\n-{\n-  return __atomic_fetch_nand (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-char\n-atomic_fetch_xor_RELAXED (char a)\n-{\n-  return __atomic_fetch_xor (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-char\n-atomic_fetch_or_RELAXED (char a)\n-{\n-  return __atomic_fetch_or (&v, a, __ATOMIC_RELAXED);\n-}\n+#include \"atomic-op-char.x\"\n \n /* { dg-final { scan-assembler-times \"ldxrb\\tw\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */\n /* { dg-final { scan-assembler-times \"stxrb\\tw\\[0-9\\]+, w\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */"}, {"sha": "a543aa9e09dee05f9cf371cea6eaaa630a228675", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-op-char.x", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-char.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-char.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-char.x?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,37 @@\n+char v = 0;\n+\n+char\n+atomic_fetch_add_RELAXED (char a)\n+{\n+  return __atomic_fetch_add (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+char\n+atomic_fetch_sub_RELAXED (char a)\n+{\n+  return __atomic_fetch_sub (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+char\n+atomic_fetch_and_RELAXED (char a)\n+{\n+  return __atomic_fetch_and (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+char\n+atomic_fetch_nand_RELAXED (char a)\n+{\n+  return __atomic_fetch_nand (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+char\n+atomic_fetch_xor_RELAXED (char a)\n+{\n+  return __atomic_fetch_xor (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+char\n+atomic_fetch_or_RELAXED (char a)\n+{\n+  return __atomic_fetch_or (&v, a, __ATOMIC_RELAXED);\n+}"}, {"sha": "38d6c2cfb2c1cea6511c72c7901626fc31278a9f", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-op-consume.c", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-consume.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-consume.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-consume.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -1,43 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n-int v = 0;\n-\n-int\n-atomic_fetch_add_CONSUME (int a)\n-{\n-  return __atomic_fetch_add (&v, a, __ATOMIC_CONSUME);\n-}\n-\n-int\n-atomic_fetch_sub_CONSUME (int a)\n-{\n-  return __atomic_fetch_sub (&v, a, __ATOMIC_CONSUME);\n-}\n-\n-int\n-atomic_fetch_and_CONSUME (int a)\n-{\n-  return __atomic_fetch_and (&v, a, __ATOMIC_CONSUME);\n-}\n-\n-int\n-atomic_fetch_nand_CONSUME (int a)\n-{\n-  return __atomic_fetch_nand (&v, a, __ATOMIC_CONSUME);\n-}\n-\n-int\n-atomic_fetch_xor_CONSUME (int a)\n-{\n-  return __atomic_fetch_xor (&v, a, __ATOMIC_CONSUME);\n-}\n-\n-int\n-atomic_fetch_or_CONSUME (int a)\n-{\n-  return __atomic_fetch_or (&v, a, __ATOMIC_CONSUME);\n-}\n+#include \"atomic-op-consume.x\"\n \n /* { dg-final { scan-assembler-times \"ldxr\\tw\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */\n /* { dg-final { scan-assembler-times \"stxr\\tw\\[0-9\\]+, w\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */"}, {"sha": "c6b0792ba0482c0899fb5ee38f8de2d173c26682", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-op-consume.x", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-consume.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-consume.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-consume.x?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,37 @@\n+int v = 0;\n+\n+int\n+atomic_fetch_add_CONSUME (int a)\n+{\n+  return __atomic_fetch_add (&v, a, __ATOMIC_CONSUME);\n+}\n+\n+int\n+atomic_fetch_sub_CONSUME (int a)\n+{\n+  return __atomic_fetch_sub (&v, a, __ATOMIC_CONSUME);\n+}\n+\n+int\n+atomic_fetch_and_CONSUME (int a)\n+{\n+  return __atomic_fetch_and (&v, a, __ATOMIC_CONSUME);\n+}\n+\n+int\n+atomic_fetch_nand_CONSUME (int a)\n+{\n+  return __atomic_fetch_nand (&v, a, __ATOMIC_CONSUME);\n+}\n+\n+int\n+atomic_fetch_xor_CONSUME (int a)\n+{\n+  return __atomic_fetch_xor (&v, a, __ATOMIC_CONSUME);\n+}\n+\n+int\n+atomic_fetch_or_CONSUME (int a)\n+{\n+  return __atomic_fetch_or (&v, a, __ATOMIC_CONSUME);\n+}"}, {"sha": "9ad7a794fc937dcbbb02254a99bd37ac4cd0c3b3", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-op-int.c", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-int.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -1,43 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n-int v = 0;\n-\n-int\n-atomic_fetch_add_RELAXED (int a)\n-{\n-  return __atomic_fetch_add (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-int\n-atomic_fetch_sub_RELAXED (int a)\n-{\n-  return __atomic_fetch_sub (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-int\n-atomic_fetch_and_RELAXED (int a)\n-{\n-  return __atomic_fetch_and (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-int\n-atomic_fetch_nand_RELAXED (int a)\n-{\n-  return __atomic_fetch_nand (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-int\n-atomic_fetch_xor_RELAXED (int a)\n-{\n-  return __atomic_fetch_xor (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-int\n-atomic_fetch_or_RELAXED (int a)\n-{\n-  return __atomic_fetch_or (&v, a, __ATOMIC_RELAXED);\n-}\n+#include \"atomic-op-int.x\"\n \n /* { dg-final { scan-assembler-times \"ldxr\\tw\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */\n /* { dg-final { scan-assembler-times \"stxr\\tw\\[0-9\\]+, w\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */"}, {"sha": "74ab6323c6da82f528af753cbf42a414918204a7", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-op-int.x", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-int.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-int.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-int.x?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,37 @@\n+int v = 0;\n+\n+int\n+atomic_fetch_add_RELAXED (int a)\n+{\n+  return __atomic_fetch_add (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+int\n+atomic_fetch_sub_RELAXED (int a)\n+{\n+  return __atomic_fetch_sub (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+int\n+atomic_fetch_and_RELAXED (int a)\n+{\n+  return __atomic_fetch_and (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+int\n+atomic_fetch_nand_RELAXED (int a)\n+{\n+  return __atomic_fetch_nand (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+int\n+atomic_fetch_xor_RELAXED (int a)\n+{\n+  return __atomic_fetch_xor (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+int\n+atomic_fetch_or_RELAXED (int a)\n+{\n+  return __atomic_fetch_or (&v, a, __ATOMIC_RELAXED);\n+}"}, {"sha": "cd3fe2c3eadefeb97898b703dd08900f0134249d", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-op-relaxed.c", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-relaxed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-relaxed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-relaxed.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -1,43 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n-int v = 0;\n-\n-int\n-atomic_fetch_add_RELAXED (int a)\n-{\n-  return __atomic_fetch_add (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-int\n-atomic_fetch_sub_RELAXED (int a)\n-{\n-  return __atomic_fetch_sub (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-int\n-atomic_fetch_and_RELAXED (int a)\n-{\n-  return __atomic_fetch_and (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-int\n-atomic_fetch_nand_RELAXED (int a)\n-{\n-  return __atomic_fetch_nand (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-int\n-atomic_fetch_xor_RELAXED (int a)\n-{\n-  return __atomic_fetch_xor (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-int\n-atomic_fetch_or_RELAXED (int a)\n-{\n-  return __atomic_fetch_or (&v, a, __ATOMIC_RELAXED);\n-}\n+#include \"atomic-op-relaxed.x\"\n \n /* { dg-final { scan-assembler-times \"ldxr\\tw\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */\n /* { dg-final { scan-assembler-times \"stxr\\tw\\[0-9\\]+, w\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */"}, {"sha": "74ab6323c6da82f528af753cbf42a414918204a7", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-op-relaxed.x", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-relaxed.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-relaxed.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-relaxed.x?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,37 @@\n+int v = 0;\n+\n+int\n+atomic_fetch_add_RELAXED (int a)\n+{\n+  return __atomic_fetch_add (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+int\n+atomic_fetch_sub_RELAXED (int a)\n+{\n+  return __atomic_fetch_sub (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+int\n+atomic_fetch_and_RELAXED (int a)\n+{\n+  return __atomic_fetch_and (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+int\n+atomic_fetch_nand_RELAXED (int a)\n+{\n+  return __atomic_fetch_nand (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+int\n+atomic_fetch_xor_RELAXED (int a)\n+{\n+  return __atomic_fetch_xor (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+int\n+atomic_fetch_or_RELAXED (int a)\n+{\n+  return __atomic_fetch_or (&v, a, __ATOMIC_RELAXED);\n+}"}, {"sha": "2fc04b210deb57a584fb04d0b832b6a9ed2f2795", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-op-release.c", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-release.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-release.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-release.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -1,43 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n-int v = 0;\n-\n-int\n-atomic_fetch_add_RELEASE (int a)\n-{\n-  return __atomic_fetch_add (&v, a, __ATOMIC_RELEASE);\n-}\n-\n-int\n-atomic_fetch_sub_RELEASE (int a)\n-{\n-  return __atomic_fetch_sub (&v, a, __ATOMIC_RELEASE);\n-}\n-\n-int\n-atomic_fetch_and_RELEASE (int a)\n-{\n-  return __atomic_fetch_and (&v, a, __ATOMIC_RELEASE);\n-}\n-\n-int\n-atomic_fetch_nand_RELEASE (int a)\n-{\n-  return __atomic_fetch_nand (&v, a, __ATOMIC_RELEASE);\n-}\n-\n-int\n-atomic_fetch_xor_RELEASE (int a)\n-{\n-  return __atomic_fetch_xor (&v, a, __ATOMIC_RELEASE);\n-}\n-\n-int\n-atomic_fetch_or_RELEASE (int a)\n-{\n-  return __atomic_fetch_or (&v, a, __ATOMIC_RELEASE);\n-}\n+#include \"atomic-op-release.x\"\n \n /* { dg-final { scan-assembler-times \"ldxr\\tw\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */\n /* { dg-final { scan-assembler-times \"stlxr\\tw\\[0-9\\]+, w\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */"}, {"sha": "343f09b5264f9a93c4c7ec1439245aaf9e181c57", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-op-release.x", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-release.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-release.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-release.x?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,37 @@\n+int v = 0;\n+\n+int\n+atomic_fetch_add_RELEASE (int a)\n+{\n+  return __atomic_fetch_add (&v, a, __ATOMIC_RELEASE);\n+}\n+\n+int\n+atomic_fetch_sub_RELEASE (int a)\n+{\n+  return __atomic_fetch_sub (&v, a, __ATOMIC_RELEASE);\n+}\n+\n+int\n+atomic_fetch_and_RELEASE (int a)\n+{\n+  return __atomic_fetch_and (&v, a, __ATOMIC_RELEASE);\n+}\n+\n+int\n+atomic_fetch_nand_RELEASE (int a)\n+{\n+  return __atomic_fetch_nand (&v, a, __ATOMIC_RELEASE);\n+}\n+\n+int\n+atomic_fetch_xor_RELEASE (int a)\n+{\n+  return __atomic_fetch_xor (&v, a, __ATOMIC_RELEASE);\n+}\n+\n+int\n+atomic_fetch_or_RELEASE (int a)\n+{\n+  return __atomic_fetch_or (&v, a, __ATOMIC_RELEASE);\n+}"}, {"sha": "202d471d08369537162572e1345ec8aba0e514b9", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-op-seq_cst.c", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-seq_cst.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-seq_cst.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-seq_cst.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -1,43 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n-int v = 0;\n-\n-int\n-atomic_fetch_add_SEQ_CST (int a)\n-{\n-  return __atomic_fetch_add (&v, a, __ATOMIC_SEQ_CST);\n-}\n-\n-int\n-atomic_fetch_sub_SEQ_CST (int a)\n-{\n-  return __atomic_fetch_sub (&v, a, __ATOMIC_SEQ_CST);\n-}\n-\n-int\n-atomic_fetch_and_SEQ_CST (int a)\n-{\n-  return __atomic_fetch_and (&v, a, __ATOMIC_SEQ_CST);\n-}\n-\n-int\n-atomic_fetch_nand_SEQ_CST (int a)\n-{\n-  return __atomic_fetch_nand (&v, a, __ATOMIC_SEQ_CST);\n-}\n-\n-int\n-atomic_fetch_xor_SEQ_CST (int a)\n-{\n-  return __atomic_fetch_xor (&v, a, __ATOMIC_SEQ_CST);\n-}\n-\n-int\n-atomic_fetch_or_SEQ_CST (int a)\n-{\n-  return __atomic_fetch_or (&v, a, __ATOMIC_SEQ_CST);\n-}\n+#include \"atomic-op-seq_cst.x\"\n \n /* { dg-final { scan-assembler-times \"ldaxr\\tw\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */\n /* { dg-final { scan-assembler-times \"stlxr\\tw\\[0-9\\]+, w\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */"}, {"sha": "e654a74e2afca9eecf88c64c7dbee77085623230", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-op-seq_cst.x", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-seq_cst.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-seq_cst.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-seq_cst.x?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,37 @@\n+int v = 0;\n+\n+int\n+atomic_fetch_add_SEQ_CST (int a)\n+{\n+  return __atomic_fetch_add (&v, a, __ATOMIC_SEQ_CST);\n+}\n+\n+int\n+atomic_fetch_sub_SEQ_CST (int a)\n+{\n+  return __atomic_fetch_sub (&v, a, __ATOMIC_SEQ_CST);\n+}\n+\n+int\n+atomic_fetch_and_SEQ_CST (int a)\n+{\n+  return __atomic_fetch_and (&v, a, __ATOMIC_SEQ_CST);\n+}\n+\n+int\n+atomic_fetch_nand_SEQ_CST (int a)\n+{\n+  return __atomic_fetch_nand (&v, a, __ATOMIC_SEQ_CST);\n+}\n+\n+int\n+atomic_fetch_xor_SEQ_CST (int a)\n+{\n+  return __atomic_fetch_xor (&v, a, __ATOMIC_SEQ_CST);\n+}\n+\n+int\n+atomic_fetch_or_SEQ_CST (int a)\n+{\n+  return __atomic_fetch_or (&v, a, __ATOMIC_SEQ_CST);\n+}"}, {"sha": "39e71c18a93495a144c02fd1d138400a9ca06dba", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-op-short.c", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-short.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -1,43 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n-short v = 0;\n-\n-short\n-atomic_fetch_add_RELAXED (short a)\n-{\n-  return __atomic_fetch_add (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-short\n-atomic_fetch_sub_RELAXED (short a)\n-{\n-  return __atomic_fetch_sub (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-short\n-atomic_fetch_and_RELAXED (short a)\n-{\n-  return __atomic_fetch_and (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-short\n-atomic_fetch_nand_RELAXED (short a)\n-{\n-  return __atomic_fetch_nand (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-short\n-atomic_fetch_xor_RELAXED (short a)\n-{\n-  return __atomic_fetch_xor (&v, a, __ATOMIC_RELAXED);\n-}\n-\n-short\n-atomic_fetch_or_RELAXED (short a)\n-{\n-  return __atomic_fetch_or (&v, a, __ATOMIC_RELAXED);\n-}\n+#include \"atomic-op-short.x\"\n \n /* { dg-final { scan-assembler-times \"ldxrh\\tw\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */\n /* { dg-final { scan-assembler-times \"stxrh\\tw\\[0-9\\]+, w\\[0-9\\]+, \\\\\\[x\\[0-9\\]+\\\\\\]\" 6 } } */"}, {"sha": "2fd70f59eb26c66d69cfb8666e89bb27a786273d", "filename": "gcc/testsuite/gcc.target/aarch64/atomic-op-short.x", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-short.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-short.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fatomic-op-short.x?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,37 @@\n+short v = 0;\n+\n+short\n+atomic_fetch_add_RELAXED (short a)\n+{\n+  return __atomic_fetch_add (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+short\n+atomic_fetch_sub_RELAXED (short a)\n+{\n+  return __atomic_fetch_sub (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+short\n+atomic_fetch_and_RELAXED (short a)\n+{\n+  return __atomic_fetch_and (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+short\n+atomic_fetch_nand_RELAXED (short a)\n+{\n+  return __atomic_fetch_nand (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+short\n+atomic_fetch_xor_RELAXED (short a)\n+{\n+  return __atomic_fetch_xor (&v, a, __ATOMIC_RELAXED);\n+}\n+\n+short\n+atomic_fetch_or_RELAXED (short a)\n+{\n+  return __atomic_fetch_or (&v, a, __ATOMIC_RELAXED);\n+}"}, {"sha": "1c1028ce147c127dcd21a321e938e1718f179ba5", "filename": "gcc/testsuite/gcc.target/arm/atomic-comp-swap-release-acquire.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-comp-swap-release-acquire.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-comp-swap-release-acquire.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-comp-swap-release-acquire.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-require-effective-target arm_arch_v8a_ok } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8a } */\n+\n+#include \"../aarch64/atomic-comp-swap-release-acquire.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldaex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 4 } } */\n+/* { dg-final { scan-assembler-times \"stlex\" 4 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "2f091f2905773ca79d175103d69292f29cdaa1e1", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-acq_rel.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acq_rel.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acq_rel.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acq_rel.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-require-effective-target arm_arch_v8a_ok } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8a } */\n+\n+#include \"../aarch64/atomic-op-acq_rel.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldaex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"stlex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "977c2fab97cf18d4cb78b0974603c9952b3fe747", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-acquire.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acquire.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acquire.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-acquire.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-require-effective-target arm_arch_v8a_ok } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8a } */\n+\n+#include \"../aarch64/atomic-op-acquire.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldaex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"strex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "63e34c1d3e8dd5863681f4b34adb745942cedb61", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-char.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-char.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-require-effective-target arm_arch_v8a_ok } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8a } */\n+\n+#include \"../aarch64/atomic-op-char.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldrexb\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"strexb\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "8e1779e238154a61b540fb847bcf51f62cade603", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-consume.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-consume.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-consume.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-consume.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-require-effective-target arm_arch_v8a_ok } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8a } */\n+\n+#include \"../aarch64/atomic-op-consume.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldrex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"strex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "1476c52607aa7745d2a3469ff11c68950f46385f", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-int.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-int.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-require-effective-target arm_arch_v8a_ok } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8a } */\n+\n+#include \"../aarch64/atomic-op-int.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldrex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"strex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "cae83230bd976795c58c1bf9b66f0a50294642f9", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-relaxed.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-relaxed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-relaxed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-relaxed.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-require-effective-target arm_arch_v8a_ok } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8a } */\n+\n+#include \"../aarch64/atomic-op-relaxed.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldrex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"strex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "ed90aab2edd9af1927706398d7f83c6888448a66", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-release.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-release.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-release.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-release.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-require-effective-target arm_arch_v8a_ok } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8a } */\n+\n+#include \"../aarch64/atomic-op-release.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldrex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"stlex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "c7b93eb6d611065369219e5e12b9c65c02540093", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-seq_cst.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-seq_cst.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-seq_cst.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-seq_cst.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-require-effective-target arm_arch_v8a_ok } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8a } */\n+\n+#include \"../aarch64/atomic-op-seq_cst.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldaex\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"stlex\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}, {"sha": "f4d6262e0051746d3420e49220d45cbb6132ca04", "filename": "gcc/testsuite/gcc.target/arm/atomic-op-short.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5784ce6249b20197e3082cc592c3640121dc020/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fatomic-op-short.c?ref=a5784ce6249b20197e3082cc592c3640121dc020", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-require-effective-target arm_arch_v8a_ok } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_arch_v8a } */\n+\n+#include \"../aarch64/atomic-op-short.x\"\n+\n+/* { dg-final { scan-assembler-times \"ldrexh\\tr\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-times \"strexh\\t...?, r\\[0-9\\]+, \\\\\\[r\\[0-9\\]+\\\\\\]\" 6 } } */\n+/* { dg-final { scan-assembler-not \"dmb\" } } */"}]}