{"sha": "8c58f4b798177d419c5af37b7e23c490849f2d45", "node_id": "C_kwDOANBUbNoAKDhjNThmNGI3OTgxNzdkNDE5YzVhZjM3YjdlMjNjNDkwODQ5ZjJkNDU", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2023-02-24T16:22:02Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2023-02-28T01:04:20Z"}, "message": "testsuite: Add -fno-ivopts to gcc.dg/Wuse-after-free-2.c, PR108828\n\nFor cris-elf before this patch, ever since it was added,\nthis test gets:\n\nRunning /x/gcc/testsuite/gcc.dg/dg.exp ...\nFAIL: gcc.dg/Wuse-after-free-2.c  (test for warnings, line 115)\nFAIL: gcc.dg/Wuse-after-free-2.c  (test for warnings, line 116)\n\nand comparing tree dumps with a native x86_64-pc-linux-gnu\nrun shows a suspicious difference in the \"180t.ivopts\" dump.\nIndeed -fno-ivopts makes the warning appear for cris-elf\ntoo.  It was suggested to simply add -fno-ivopts to the\ntest-flags, like before -fno-tree-loop-distribute-patterns\nwas added; thus.\n\n\tPR tree-optimization/108828\n\t* gcc.dg/Wuse-after-free-2.c: Add -fno-ivopts.", "tree": {"sha": "7931668e03cd4c421fa4dd6e37ad4a8c29ba19f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7931668e03cd4c421fa4dd6e37ad4a8c29ba19f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c58f4b798177d419c5af37b7e23c490849f2d45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c58f4b798177d419c5af37b7e23c490849f2d45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c58f4b798177d419c5af37b7e23c490849f2d45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c58f4b798177d419c5af37b7e23c490849f2d45/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bf0e0fc0ea47698c81ddb0eb00a71f9ad251c4a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf0e0fc0ea47698c81ddb0eb00a71f9ad251c4a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf0e0fc0ea47698c81ddb0eb00a71f9ad251c4a1"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "ebc051690db523d0633eb4b041698bb8148618fd", "filename": "gcc/testsuite/gcc.dg/Wuse-after-free-2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c58f4b798177d419c5af37b7e23c490849f2d45/gcc%2Ftestsuite%2Fgcc.dg%2FWuse-after-free-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c58f4b798177d419c5af37b7e23c490849f2d45/gcc%2Ftestsuite%2Fgcc.dg%2FWuse-after-free-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWuse-after-free-2.c?ref=8c58f4b798177d419c5af37b7e23c490849f2d45", "patch": "@@ -1,6 +1,6 @@\n /* PR middle-end/104232 - spurious -Wuse-after-free after conditional free\n    { dg-do compile }\n-   { dg-options \"-O2 -Wall -fno-tree-loop-distribute-patterns\" }  */\n+   { dg-options \"-O2 -Wall -fno-tree-loop-distribute-patterns -fno-ivopts\" }  */\n \n void free (void*);\n \n@@ -108,7 +108,8 @@ int warn_cond_loop (char *p)\n   char *q = p;\n \n   /*  -fno-tree-loop-distribute-patterns ensures this does not get converted\n-      into rawmemchr (making q and p unrelated).  */\n+      into rawmemchr (making q and p unrelated).  Also, -fno-ivopts is required\n+      for some targets, to not lose track of the pointer.  */\n   while (*q)\n     ++q;\n "}]}