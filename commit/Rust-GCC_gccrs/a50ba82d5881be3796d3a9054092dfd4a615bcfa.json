{"sha": "a50ba82d5881be3796d3a9054092dfd4a615bcfa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUwYmE4MmQ1ODgxYmUzNzk2ZDNhOTA1NDA5MmRmZDRhNjE1YmNmYQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-09-18T21:25:40Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-09-18T21:25:40Z"}, "message": "re PR fortran/31119 (-fbounds-check: Check for presence of optional arguments before bound checking)\n\n\tPR fortran/31119\n\n\t* trans-array.c (gfc_conv_ss_startstride): Only perform bounds\n\tchecking for optional args when they are present.\n\n\t* gfortran.dg/bounds_check_9.f90: New test.\n\t* gfortran.dg/bounds_check_fail_2.f90: New test.\n\nFrom-SVN: r128587", "tree": {"sha": "840b670afbca3676c80e2e73b02d1cc9ae3a0c25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/840b670afbca3676c80e2e73b02d1cc9ae3a0c25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a50ba82d5881be3796d3a9054092dfd4a615bcfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a50ba82d5881be3796d3a9054092dfd4a615bcfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a50ba82d5881be3796d3a9054092dfd4a615bcfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a50ba82d5881be3796d3a9054092dfd4a615bcfa/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf962a2a455efcd5b1afe2df85374db48165ef1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf962a2a455efcd5b1afe2df85374db48165ef1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf962a2a455efcd5b1afe2df85374db48165ef1a"}], "stats": {"total": 105, "additions": 103, "deletions": 2}, "files": [{"sha": "c79242d9dd5cce9d31a4ef1e743be79fb6b1cb8e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50ba82d5881be3796d3a9054092dfd4a615bcfa/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50ba82d5881be3796d3a9054092dfd4a615bcfa/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a50ba82d5881be3796d3a9054092dfd4a615bcfa", "patch": "@@ -1,3 +1,9 @@\n+2007-09-18  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/31119\n+\t* trans-array.c (gfc_conv_ss_startstride): Only perform bounds\n+\tchecking for optional args when they are present.\n+\n 2007-09-18  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/33231"}, {"sha": "64a62dbd018d62be050f2f0bd9721414c375ff03", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50ba82d5881be3796d3a9054092dfd4a615bcfa/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50ba82d5881be3796d3a9054092dfd4a615bcfa/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=a50ba82d5881be3796d3a9054092dfd4a615bcfa", "patch": "@@ -2993,8 +2993,22 @@ gfc_conv_ss_startstride (gfc_loopinfo * loop)\n \t         others against this.  */\n \t      if (size[n])\n \t\t{\n-\t\t  tree tmp3\n-\t\t    = fold_build2 (NE_EXPR, boolean_type_node, tmp, size[n]);\n+\t\t  tree tmp3;\n+\n+\t\t  tmp3 = fold_build2 (NE_EXPR, boolean_type_node, tmp, size[n]);\n+\n+\t\t  /* For optional arguments, only check bounds if the\n+\t\t     argument is present.  */\n+\t\t  if (ss->expr->symtree->n.sym->attr.optional\n+\t\t      || ss->expr->symtree->n.sym->attr.not_always_present)\n+\t\t    {\n+\t\t      tree cond;\n+\n+\t\t      cond = gfc_conv_expr_present (ss->expr->symtree->n.sym);\n+\t\t      tmp3 = fold_build2 (TRUTH_AND_EXPR, boolean_type_node,\n+\t\t\t\t\t  cond, tmp3);\n+\t\t    }\n+\n \t\t  asprintf (&msg, \"%s, size mismatch for dimension %d \"\n \t\t\t    \"of array '%s' (%%ld/%%ld)\", gfc_msg_bounds,\n \t\t\t    info->dim[n]+1, ss->expr->symtree->name);"}, {"sha": "b0e1b9fa6cd1ce8f37825dac85cb400feca76af9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50ba82d5881be3796d3a9054092dfd4a615bcfa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50ba82d5881be3796d3a9054092dfd4a615bcfa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a50ba82d5881be3796d3a9054092dfd4a615bcfa", "patch": "@@ -1,3 +1,9 @@\n+2007-09-18  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/31119\n+\t* gfortran.dg/bounds_check_9.f90: New test.\n+\t* gfortran.dg/bounds_check_fail_2.f90: New test.\n+\n 2007-09-18  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR c++/33462 (again)"}, {"sha": "c0abd2896ece95821dc844fce39eacd977be29c7", "filename": "gcc/testsuite/gfortran.dg/bounds_check_9.f90", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50ba82d5881be3796d3a9054092dfd4a615bcfa/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50ba82d5881be3796d3a9054092dfd4a615bcfa/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_9.f90?ref=a50ba82d5881be3796d3a9054092dfd4a615bcfa", "patch": "@@ -0,0 +1,36 @@\n+! { dg-do run }\n+! { dg-options \"-fbounds-check\" }\n+! PR fortran/31119\n+!\n+module sub_mod\n+contains\n+elemental subroutine set_optional(i,idef,iopt)\n+  integer, intent(out) :: i\n+  integer, intent(in) :: idef\n+  integer, intent(in), optional :: iopt\n+  if (present(iopt)) then\n+    i = iopt\n+  else\n+    i = idef\n+  end if\n+  end subroutine set_optional\n+\n+  subroutine sub(ivec)\n+    integer, intent(in), optional :: ivec(:)\n+    integer :: ivec_(2)\n+    call set_optional(ivec_,(/1,2/))\n+    if (any (ivec_ /= (/1, 2/))) call abort\n+    call set_optional(ivec_,(/1,2/),ivec)\n+    if (present (ivec)) then\n+      if (any (ivec_ /= ivec)) call abort\n+    else\n+      if (any (ivec_ /= (/1, 2/))) call abort\n+    end if\n+  end subroutine sub\n+end module sub_mod\n+\n+program main\n+  use sub_mod, only: sub\n+  call sub()\n+  call sub((/4,5/))\n+end program main"}, {"sha": "bb2c247bf311c683706094bb51580c735ef57a1f", "filename": "gcc/testsuite/gfortran.dg/bounds_check_fail_2.f90", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a50ba82d5881be3796d3a9054092dfd4a615bcfa/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a50ba82d5881be3796d3a9054092dfd4a615bcfa/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_2.f90?ref=a50ba82d5881be3796d3a9054092dfd4a615bcfa", "patch": "@@ -0,0 +1,39 @@\n+! { dg-do run }\n+! { dg-options \"-fbounds-check\" }\n+! { dg-shouldfail \"foo\" }\n+!\n+! PR 31119\n+module sub_mod\n+contains\n+  elemental subroutine set_optional(i,idef,iopt)\n+    integer, intent(out)          :: i\n+    integer, intent(in)           :: idef\n+    integer, intent(in), optional :: iopt\n+    if (present(iopt)) then\n+      i = iopt\n+    else\n+      i = idef\n+    end if\n+  end subroutine set_optional\n+\n+  subroutine sub(ivec)\n+    integer          , intent(in), optional :: ivec(:)\n+    integer                                 :: ivec_(2)\n+    call set_optional(ivec_,(/1,2/))\n+    if (any (ivec_ /= (/1,2/))) call abort\n+    call set_optional(ivec_,(/1,2/),ivec)\n+    if (present (ivec)) then\n+      if (any (ivec_ /= ivec)) call abort\n+    else\n+      if (any (ivec_ /= (/1,2/))) call abort\n+    end if\n+  end subroutine sub\n+end module sub_mod\n+\n+program main\n+  use sub_mod, only: sub\n+  call sub()\n+  call sub((/4,5/))\n+  call sub((/4/))\n+end program main\n+! { dg-output \"Fortran runtime error: Array bound mismatch\" }"}]}