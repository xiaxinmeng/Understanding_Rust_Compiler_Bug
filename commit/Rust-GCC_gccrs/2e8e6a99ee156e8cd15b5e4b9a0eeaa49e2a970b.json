{"sha": "2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU4ZTZhOTllZTE1NmU4Y2QxNWI1ZTRiOWEwZWVhYTQ5ZTJhOTcwYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-01-07T00:22:51Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-01-07T00:22:51Z"}, "message": "re PR libstdc++/26701 (std::time_get parses only 2 digits of year, in en_GB locale.)\n\n2010-01-06  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/26701\n\t* include/bits/locale_facets_nonio.tcc (time_get<>::_M_extract_num):\n\tEncode short two digits over four parsings to negative numbers.\n\t(time_get<>::_M_extract_via_format): Adjust, accept both two digits\n\tand four digits for both 'y' and 'Y'.\n\t(time_get<>::do_get_year): Call time_get<>::_M_extract_num.\n\t* doc/xml/manual/prerequisites.xml: Add en_GB.\n\t* testsuite/lib/libstdc++.exp: Adjust\n\t* testsuite/22_locale/time_get/get_date/char/26701.cc: New.\n\t* testsuite/22_locale/time_get/get_date/wchar_t/26701.cc: Likewise.\n\nFrom-SVN: r155685", "tree": {"sha": "4c72dfc64a8a21dead648354eaf800ea69e50865", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c72dfc64a8a21dead648354eaf800ea69e50865"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b/comments", "author": null, "committer": null, "parents": [{"sha": "83c3322912062f7254f542cf9334569e270caace", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83c3322912062f7254f542cf9334569e270caace", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83c3322912062f7254f542cf9334569e270caace"}], "stats": {"total": 176, "additions": 158, "deletions": 18}, "files": [{"sha": "cb10263e0bd32e71ea6412b6c4ae3f3916187ffd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b", "patch": "@@ -1,3 +1,16 @@\n+2010-01-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/26701\n+\t* include/bits/locale_facets_nonio.tcc (time_get<>::_M_extract_num):\n+\tEncode short two digits over four parsings to negative numbers.\n+\t(time_get<>::_M_extract_via_format): Adjust, accept both two digits\n+\tand four digits for both 'y' and 'Y'.\n+\t(time_get<>::do_get_year): Call time_get<>::_M_extract_num.\n+\t* doc/xml/manual/prerequisites.xml: Add en_GB.\n+\t* testsuite/lib/libstdc++.exp: Adjust\n+\t* testsuite/22_locale/time_get/get_date/char/26701.cc: New.\n+\t* testsuite/22_locale/time_get/get_date/wchar_t/26701.cc: Likewise.\n+\n 2010-01-06  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/42491"}, {"sha": "8391fe459ddab21137d6009e2e064c38933e4397", "filename": "libstdc++-v3/doc/xml/manual/prerequisites.xml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fprerequisites.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fprerequisites.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fprerequisites.xml?ref=2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b", "patch": "@@ -73,6 +73,7 @@\n <programlisting>\n de_DE               ISO-8859-1\n de_DE@euro          ISO-8859-15\n+en_GB               ISO-8859-1\n en_HK               ISO-8859-1\n en_PH               ISO-8859-1\n en_US               ISO-8859-1"}, {"sha": "e788457e2abee2aeb485d8c7430969e70207e775", "filename": "libstdc++-v3/include/bits/locale_facets_nonio.tcc", "status": "modified", "additions": 15, "deletions": 18, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.tcc?ref=2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b", "patch": "@@ -778,16 +778,16 @@ _GLIBCXX_END_LDBL_NAMESPACE\n \t\t  break;\n \t\tcase 'y':\n \t\tcase 'C': // C99\n-\t\t  // Two digit year. [tm_year]\n-\t\t  __beg = _M_extract_num(__beg, __end, __tm->tm_year, 0, 99, 2,\n-\t\t\t\t\t __io, __tmperr);\n-\t\t  break;\n+\t\t  // Two digit year.\n \t\tcase 'Y':\n-\t\t  // Year [1900). [tm_year]\n+\t\t  // Year [1900).\n+\t\t  // NB: We parse either two digits, implicitly years since\n+\t\t  // 1900, or 4 digits, full year.  In both cases we can \n+\t\t  // reconstruct [tm_year].  See also libstdc++/26701.\n \t\t  __beg = _M_extract_num(__beg, __end, __mem, 0, 9999, 4,\n \t\t\t\t\t __io, __tmperr);\n \t\t  if (!__tmperr)\n-\t\t    __tm->tm_year = __mem - 1900;\n+\t\t    __tm->tm_year = __mem < 0 ? __mem + 100 : __mem - 1900;\n \t\t  break;\n \t\tcase 'Z':\n \t\t  // Timezone info.\n@@ -865,6 +865,9 @@ _GLIBCXX_END_LDBL_NAMESPACE\n \t}\n       if (__i == __len)\n \t__member = __value;\n+      // Special encoding for do_get_year, 'y', and 'Y' above.\n+      else if (__len == 4 && __i == 2)\n+\t__member = __value - 100;\n       else\n \t__err |= ios_base::failbit;\n \n@@ -1116,19 +1119,13 @@ _GLIBCXX_END_LDBL_NAMESPACE\n     {\n       const locale& __loc = __io._M_getloc();\n       const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc);\n+      int __tmpyear;\n+      ios_base::iostate __tmperr = ios_base::goodbit;\n \n-      size_t __i = 0;\n-      int __value = 0;\n-      for (; __beg != __end && __i < 4; ++__beg, ++__i)\n-\t{\n-\t  const char __c = __ctype.narrow(*__beg, '*');\n-\t  if (__c >= '0' && __c <= '9')\n-\t    __value = __value * 10 + (__c - '0');\n-\t  else\n-\t    break;\n-\t}\n-      if (__i == 2 || __i == 4)\n-\t__tm->tm_year = __i == 2 ? __value : __value - 1900;\n+      __beg = _M_extract_num(__beg, __end, __tmpyear, 0, 9999, 4,\n+\t\t\t     __io, __tmperr);\n+      if (!__tmperr)\n+\t__tm->tm_year = __tmpyear < 0 ? __tmpyear + 100 : __tmpyear - 1900;\n       else\n \t__err |= ios_base::failbit;\n "}, {"sha": "b02fefef5969ef93ac08da68f65c3f98c6b50a4d", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_date/char/26701.cc", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fchar%2F26701.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fchar%2F26701.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fchar%2F26701.cc?ref=2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b", "patch": "@@ -0,0 +1,64 @@\n+// { dg-require-namedlocale \"\" }\n+\n+// 2010-01-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 22.2.5.1.1 time_get members\n+\n+#include <locale>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/26701\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef istreambuf_iterator<char> iterator_type;\n+\n+  locale loc_en = locale(\"en_GB\");\n+  \n+  tm tm0 = __gnu_test::test_tm(0, 0, 0, 0, 0, 0, 0, 0, 0);\n+\n+  iterator_type end;\n+\n+  istringstream iss; \n+  iss.imbue(loc_en);\n+  const time_get<char>& tg = use_facet<time_get<char> >(iss.getloc());\n+\n+  const ios_base::iostate good = ios_base::goodbit;\n+  ios_base::iostate errorstate = good;\n+\n+  iss.str(\"01/02/2003\");\n+  iterator_type is_it0(iss);\n+  \n+  errorstate = good;\n+  tg.get_date(is_it0, end, iss, errorstate, &tm0);\n+  VERIFY( errorstate == ios_base::eofbit );\n+  VERIFY( tm0.tm_year + 1900 == 2003 );\n+  VERIFY( tm0.tm_mon + 1 == 2 );\n+  VERIFY( tm0.tm_mday == 1 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "2f4980a234c6f87c4d18df58eb5b0b2f0f97814a", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_date/wchar_t/26701.cc", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fwchar_t%2F26701.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fwchar_t%2F26701.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_date%2Fwchar_t%2F26701.cc?ref=2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b", "patch": "@@ -0,0 +1,64 @@\n+// { dg-require-namedlocale \"\" }\n+\n+// 2010-01-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 22.2.5.1.1 time_get members\n+\n+#include <locale>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/26701\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  typedef istreambuf_iterator<wchar_t> iterator_type;\n+\n+  locale loc_en = locale(\"en_GB\");\n+  \n+  tm tm0 = __gnu_test::test_tm(0, 0, 0, 0, 0, 0, 0, 0, 0);\n+\n+  iterator_type end;\n+\n+  wistringstream iss; \n+  iss.imbue(loc_en);\n+  const time_get<wchar_t>& tg = use_facet<time_get<wchar_t> >(iss.getloc());\n+\n+  const ios_base::iostate good = ios_base::goodbit;\n+  ios_base::iostate errorstate = good;\n+\n+  iss.str(L\"01/02/2003\");\n+  iterator_type is_it0(iss);\n+  \n+  errorstate = good;\n+  tg.get_date(is_it0, end, iss, errorstate, &tm0);\n+  VERIFY( errorstate == ios_base::eofbit );\n+  VERIFY( tm0.tm_year + 1900 == 2003 );\n+  VERIFY( tm0.tm_mon + 1 == 2 );\n+  VERIFY( tm0.tm_mday == 1 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "45a43dea5fd554cfc83ce0459a61caf81f0136be", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=2e8e6a99ee156e8cd15b5e4b9a0eeaa49e2a970b", "patch": "@@ -869,6 +869,7 @@ proc check_v3_target_namedlocale { } {\n \tputs $f \"     locale(\\\"de_DE\\\");\"\n \tputs $f \"     locale(\\\"de_DE.ISO-8859-15@euro\\\");\"\n \tputs $f \"     locale(\\\"de_DE@euro\\\");\"\n+\tputs $f \"     locale(\\\"en_GB\\\");\"\n \tputs $f \"     locale(\\\"en_HK\\\");\"\n \tputs $f \"     locale(\\\"en_PH\\\");\"\n \tputs $f \"     locale(\\\"en_US\\\");\""}]}