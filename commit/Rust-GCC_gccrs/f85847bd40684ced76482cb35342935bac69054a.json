{"sha": "f85847bd40684ced76482cb35342935bac69054a", "node_id": "C_kwDOANBUbNoAKGY4NTg0N2JkNDA2ODRjZWQ3NjQ4MmNiMzUzNDI5MzViYWM2OTA1NGE", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-09-22T00:19:09Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-09-22T00:19:09Z"}, "message": "Daily bump.", "tree": {"sha": "d500356e485a106107200980ada4ca05c34fe735", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d500356e485a106107200980ada4ca05c34fe735"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f85847bd40684ced76482cb35342935bac69054a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f85847bd40684ced76482cb35342935bac69054a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f85847bd40684ced76482cb35342935bac69054a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f85847bd40684ced76482cb35342935bac69054a/comments", "author": null, "committer": null, "parents": [{"sha": "5814816641389dd76153aae63e8ccb67a1a9a321", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5814816641389dd76153aae63e8ccb67a1a9a321", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5814816641389dd76153aae63e8ccb67a1a9a321"}], "stats": {"total": 140, "additions": 139, "deletions": 1}, "files": [{"sha": "f18943c8793e45b78f86aa20fba595b2ef7384b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f85847bd40684ced76482cb35342935bac69054a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f85847bd40684ced76482cb35342935bac69054a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f85847bd40684ced76482cb35342935bac69054a", "patch": "@@ -1,3 +1,67 @@\n+2022-09-21  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR tree-optimization/106967\n+\t* value-range.cc (frange::set): Set known NANs to undefined for\n+\tflag_finite_math_only.\n+\n+2022-09-21  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-range.cc (frange::combine_zeros): Call set_undefined.\n+\t(frange::intersect_nans): Same.\n+\t(frange::intersect): Same.\n+\t(frange::verify_range): Undefined ranges do not have a type.\n+\t* value-range.h (frange::set_undefined): Clear NAN flags and type.\n+\n+2022-09-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106984\n+\t* tsan.cc (instrument_builtin_call): Build the COND_EXPR condition in\n+\ta separate statement.\n+\n+2022-09-21  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.h (HAVE_LOCAL_CPU_DETECT,\n+\tEXTRA_SPEC_FUNCTIONS, MCPU_MTUNE_NATIVE_SPECS): Move definitions up before\n+\tOPTION_DEFAULT_SPECS.\n+\t(MCPU_MTUNE_NATIVE_SPECS): Pass \"cpu\" to\n+\tlocal_cpu_detect when rewriting -march=native and no -mcpu or -mtune\n+\tis given.\n+\t(CONFIG_TUNE_SPEC): Define.\n+\t(OPTION_DEFAULT_SPECS): Use CONFIG_TUNE_SPEC for \"tune\".\n+\n+2022-09-21  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR tree-optimization/106967\n+\t* range-op-float.cc (foperator_equal::fold_range): Adjust for NAN.\n+\t(foperator_equal::op1_range): Same.\n+\t(foperator_not_equal::fold_range): Same.\n+\t(foperator_not_equal::op1_range): Same.\n+\t(foperator_lt::fold_range): Same.\n+\t(foperator_lt::op1_range): Same.\n+\t(foperator_lt::op2_range): Same.\n+\t(foperator_le::fold_range): Same.\n+\t(foperator_le::op1_range): Same.\n+\t(foperator_le::op2_range): Same.\n+\t(foperator_gt::fold_range): Same.\n+\t(foperator_gt::op1_range): Same.\n+\t(foperator_gt::op2_range): Same.\n+\t(foperator_ge::fold_range): Same.\n+\t(foperator_ge::op1_range): Same.\n+\t(foperator_ge::op2_range): Same.\n+\t(foperator_unordered::op1_range): Same.\n+\t(foperator_ordered::fold_range): Same.\n+\t(foperator_ordered::op1_range): Same.\n+\t(build_le): Assert that we don't have a NAN.\n+\t(build_lt): Same.\n+\t(build_gt): Same.\n+\t(build_ge): Same.\n+\n+2022-09-21  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR tree-optimization/106963\n+\t* tree-vect-loop.cc (vect_create_nonlinear_iv_init): Use\n+\tvec_gen_perm_mask_any instead of vec_gen_perm_mask_check.\n+\n 2022-09-20  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* value-range.h (frange::maybe_isnan): Return false for"}, {"sha": "6fbb09fe858635bba6b870b3d97e2ba5ef402ee1", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f85847bd40684ced76482cb35342935bac69054a/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f85847bd40684ced76482cb35342935bac69054a/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=f85847bd40684ced76482cb35342935bac69054a", "patch": "@@ -1 +1 @@\n-20220921\n+20220922"}, {"sha": "68f8231020bedc732811b24476eb5b8842e70b34", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f85847bd40684ced76482cb35342935bac69054a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f85847bd40684ced76482cb35342935bac69054a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f85847bd40684ced76482cb35342935bac69054a", "patch": "@@ -1,3 +1,21 @@\n+2022-09-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106984\n+\t* gcc.dg/tsan/pr106984.c: New testcase.\n+\n+2022-09-21  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* gfortran.dg/ieee/rounding_3.f90: New test.\n+\n+2022-09-21  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR tree-optimization/106967\n+\t* gcc.dg/tree-ssa/pr106967.c: New test.\n+\n+2022-09-21  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/pr106963.c: New test.\n+\n 2022-09-20  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/104143"}, {"sha": "864bf6a5be6c4109e8edd6d54f5ad09790f41396", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f85847bd40684ced76482cb35342935bac69054a/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f85847bd40684ced76482cb35342935bac69054a/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=f85847bd40684ced76482cb35342935bac69054a", "patch": "@@ -1,3 +1,13 @@\n+2022-09-21  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* ieee/ieee_arithmetic.F90 (IEEE_SET_ROUNDING_MODE): Handle\n+\tRADIX argument better.\n+\n+2022-09-21  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* gfortran.map: Add symbols for IEEE_GET_MODES\n+\tand IEEE_SET_MODES.\n+\n 2022-09-19  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* ieee/ieee_exceptions.F90: Add IEEE_MODES_TYPE, IEEE_GET_MODES"}, {"sha": "dcd90b54924b19fc79e73d17c45ce1adaa1de156", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f85847bd40684ced76482cb35342935bac69054a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f85847bd40684ced76482cb35342935bac69054a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f85847bd40684ced76482cb35342935bac69054a", "patch": "@@ -1,3 +1,49 @@\n+2022-09-21  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/91456\n+\t* testsuite/20_util/function/91456.cc: Add comment with PR\n+\tnumber.\n+\t* testsuite/20_util/is_invocable/91456.cc: Likewise. Replace\n+\tstd::function checks with std::is_invocable_r checks.\n+\n+2022-09-21  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/17_intro/headers/c++1998/all_attributes.cc: Remove\n+\tunnecessary main function.\n+\t* testsuite/17_intro/headers/c++2011/all_attributes.cc:\n+\tLikewise.\n+\t* testsuite/17_intro/headers/c++2014/all_attributes.cc:\n+\tLikewise.\n+\t* testsuite/17_intro/headers/c++2017/all_attributes.cc:\n+\tLikewise.\n+\t* testsuite/17_intro/headers/c++2020/all_attributes.cc:\n+\tLikewise.\n+\n+2022-09-21  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/20_util/headers/memory/synopsis.cc: Add declarations\n+\tfrom C++11 and later.\n+\n+2022-09-21  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/documentation_hacking.xml: Remove trailing\n+\twhitespace.\n+\t* doc/xml/manual/policy_data_structures.xml: Likewise.\n+\n+2022-09-21  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/c_compatibility/stdlib.h [!_GLIBCXX_HOSTED]: Add\n+\tusing-declaration for _Exit.\n+\n+2022-09-21  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/18_support/uncaught_exception/14026.cc: Qualify\n+\tcall to std::abort.\n+\n+2022-09-21  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/ranges_base.h: Include <initializer_list>.\n+\n 2022-09-20  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/c_global/cstdlib [!_GLIBCXX_HOSTED] (quick_exit): Fix"}]}