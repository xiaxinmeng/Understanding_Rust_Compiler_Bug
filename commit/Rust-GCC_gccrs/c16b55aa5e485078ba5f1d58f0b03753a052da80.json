{"sha": "c16b55aa5e485078ba5f1d58f0b03753a052da80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE2YjU1YWE1ZTQ4NTA3OGJhNWYxZDU4ZjBiMDM3NTNhMDUyZGE4MA==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "1998-05-28T09:20:28Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "1998-05-28T09:20:28Z"}, "message": "Added exclusion of C++ files for double slash fix\n\nFrom-SVN: r20117", "tree": {"sha": "f5671f6b06e15d9c07f49579cf0f7a8b173a1275", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5671f6b06e15d9c07f49579cf0f7a8b173a1275"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c16b55aa5e485078ba5f1d58f0b03753a052da80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c16b55aa5e485078ba5f1d58f0b03753a052da80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c16b55aa5e485078ba5f1d58f0b03753a052da80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c16b55aa5e485078ba5f1d58f0b03753a052da80/comments", "author": null, "committer": null, "parents": [{"sha": "8a5b8e20b7f9b40a971b514ac250d953ca30c4d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a5b8e20b7f9b40a971b514ac250d953ca30c4d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a5b8e20b7f9b40a971b514ac250d953ca30c4d2"}], "stats": {"total": 3498, "additions": 1758, "deletions": 1740}, "files": [{"sha": "62a5892b5482bdaeb7ee4a5501527ca89d2d156d", "filename": "contrib/fixinc/fixincl.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c16b55aa5e485078ba5f1d58f0b03753a052da80/contrib%2Ffixinc%2Ffixincl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c16b55aa5e485078ba5f1d58f0b03753a052da80/contrib%2Ffixinc%2Ffixincl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ffixinc%2Ffixincl.c?ref=c16b55aa5e485078ba5f1d58f0b03753a052da80", "patch": "@@ -1,5 +1,5 @@\n /*\n- * $Id: fixincl.c,v 1.1 1998/03/20 16:19:41 korbb Exp $\n+ * $Id: fixincl.c,v 1.4 1998/08/05 10:20:11 korbb Exp $\n  *\n  * Install modified versions of certain ANSI-incompatible system header\n  * files which are fixed to work correctly with ANSI C and placed in a\n@@ -28,16 +28,13 @@\n #include <sys/param.h>\n #include <sys/stat.h>\n #include <sys/types.h>\n-#include <sys/stropts.h>\n #include <sys/wait.h>\n #include <signal.h>\n #include <stdio.h>\n #include <unistd.h>\n #include <stdlib.h>\n #include <errno.h>\n #include <string.h>\n-#include <stropts.h>\n-#include <poll.h>\n #include <fcntl.h>\n #include <ctype.h>\n \n@@ -138,7 +135,7 @@ main (argc, argv)\n \n       if (strcmp (argv[1], \"-v\") == 0)\n \t{\n-\t  fputs (\"$Id: fixincl.c,v 1.1 1998/03/20 16:19:41 korbb Exp $\\n\", stderr);\n+\t  fputs (\"$Id: fixincl.c,v 1.3 1998/06/02 07:00:12 korbb Exp $\\n\", stderr);\n \t  exit (EXIT_SUCCESS);\n         }\n \n@@ -448,17 +445,18 @@ createFile (pzFile)\n }\n \n tSuccess\n-testTest (pTest)\n+testTest (pTest, pzFile)\n      tTestDesc *pTest;\n+     char*      pzFile;\n {\n   char *pzRes;\n   tSuccess res = FAILURE;\n \n   static char zCmdBuf[4096];\n-  tSCC zCmdFmt[] = \"if ( test %s ) > /dev/null 2>&1\\n\"\n+  tSCC zCmdFmt[] = \"f=%s\\nif ( test %s ) > /dev/null 2>&1\\n\"\n   \"then echo TRUE\\n\" \"else echo FALSE\\n\" \"fi\";\n \n-  sprintf (zCmdBuf, zCmdFmt, pTest->pzTest);\n+  sprintf (zCmdBuf, zCmdFmt, pzFile, pTest->pzTest);\n   pzRes = runShell (zCmdBuf);\n   if (*pzRes == 'T')\n     res = SUCCESS;\n@@ -643,7 +641,7 @@ process (pzDta, pzDir, pzFile)\n \t       *  IF *any* of the shell tests fail,\n \t       *  THEN do not process the fix.\n \t       */\n-\t      if (!SUCCESSFUL (testTest (pTD)))\n+\t      if (!SUCCESSFUL (testTest (pTD, pzFile)))\n \t\tgoto nextFix;\n \t      break;\n "}, {"sha": "c231933d233ca12aba3a514a08bff3a44b8b691f", "filename": "contrib/fixinc/fixincl.sh", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c16b55aa5e485078ba5f1d58f0b03753a052da80/contrib%2Ffixinc%2Ffixincl.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c16b55aa5e485078ba5f1d58f0b03753a052da80/contrib%2Ffixinc%2Ffixincl.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ffixinc%2Ffixincl.sh?ref=c16b55aa5e485078ba5f1d58f0b03753a052da80", "patch": "@@ -2,7 +2,7 @@\n #\n # DO NOT EDIT THIS FILE   (fixincl.sh)\n # \n-# It has been autogen-ed  Thursday March 19, 1998 at 08:37:00 AM PST\n+# It has been autogen-ed  Thursday May 28, 1998 at 08:21:16 AM PDT\n # From the definitions    inclhack.def\n # and the template file   inclhack.tpl\n #\n@@ -14,19 +14,19 @@\n #\n # See README-fixinc for more information.\n #\n-# inclhack is free software.\n+# fixincludes is free software.\n # \n # You may redistribute it and/or modify it under the terms of the\n # GNU General Public License, as published by the Free Software\n # Foundation; either version 2, or (at your option) any later version.\n # \n-# inclhack is distributed in the hope that it will be useful,\n+# fixincludes is distributed in the hope that it will be useful,\n # but WITHOUT ANY WARRANTY; without even the implied warranty of\n # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n # See the GNU General Public License for more details.\n # \n # You should have received a copy of the GNU General Public License\n-# along with inclhack.  See the file \"COPYING\".  If not,\n+# along with fixincludes.  See the file \"COPYING\".  If not,\n # write to:  The Free Software Foundation, Inc.,\n #            59 Temple Place - Suite 330,\n #            Boston,  MA  02111-1307, USA.\n@@ -80,6 +80,7 @@ if test -z \"${target_canonical}\" ; then\n     target_canonical=\"`config.guess`\" ; fi\n   test -z \"${target_canonical}\" && target_canonical=unknown\n fi\n+export target_canonical\n \n # # # # # # # # # # # # # # # # # # # # #\n #\n@@ -108,7 +109,7 @@ case $LIB in\n     ;;\n esac\n \n-echo Building fixed headers in ${LIB}\n+echo Fixing headers into ${LIB} for ${target_canonical} target\n  \n # Determine whether this system has symbolic links.\n if ln -s X $LIB/ShouldNotExist 2>/dev/null; then"}, {"sha": "c43e40a6e419dcbf25bf336a2c5a91ed0e0b584e", "filename": "contrib/fixinc/fixincl.x", "status": "modified", "additions": 81, "deletions": 74, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c16b55aa5e485078ba5f1d58f0b03753a052da80/contrib%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c16b55aa5e485078ba5f1d58f0b03753a052da80/contrib%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ffixinc%2Ffixincl.x?ref=c16b55aa5e485078ba5f1d58f0b03753a052da80", "patch": "@@ -1,7 +1,7 @@\n /*\n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been autogen-ed  Thursday March 19, 1998 at 08:34:20 AM PST\n+ * It has been autogen-ed  Thursday May 28, 1998 at 08:21:12 AM PDT\n  * From the definitions    inclhack.def\n  * and the template file   fixincl.tpl\n  *\n@@ -56,7 +56,7 @@ tTestDesc aAix_SyswaitTests[] = {\n  */\n const char* apzAix_SyswaitPatch[] = { \"sed\",\n     \"-e\" \"/^extern pid_t wait3();$/i\\\\\\n\"\n-       \"struct rusage;\",\n+       \"struct rusage;\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -275,13 +275,13 @@ tSCC zAvoid_BoolList[] =\n  */\n const char* apzAvoid_BoolPatch[] = { \"sed\",\n     \"-e\" \"/^#[ \\t]*define[ \\t][ \\t]*bool[ \\t][ \\t]*char[ \\t]*$/i\\\\\\n\"\n-       \"#ifndef __cplusplus\",\n+       \"#ifndef __cplusplus\\n\",\n     \"-e\" \"/^#[ \\t]*define[ \\t][ \\t]*bool[ \\t][ \\t]*char[ \\t]*$/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     \"-e\" \"/^typedef[ \\t][ \\t]*char[ \\t][ \\t]*bool[ \\t]*;/i\\\\\\n\"\n-       \"#ifndef __cplusplus\",\n+       \"#ifndef __cplusplus\\n\",\n     \"-e\" \"/^typedef[ \\t][ \\t]*char[ \\t][ \\t]*bool[ \\t]*;/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -314,11 +314,11 @@ const char* apzBad_Malloc_DeclPatch[] = { \"sed\",\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"extern \\\"C\\\" {\\\\\\n\"\n        \"#endif\\\\\\n\"\n-       \"\",\n+       \"\\n\",\n     \"-e\" \"$a\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"}\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -405,7 +405,7 @@ tTestDesc aBroken_Assert_StdioTests[] = {\n  */\n const char* apzBroken_Assert_StdioPatch[] = { \"sed\",\n     \"-e\" \"1i\\\\\\n\"\n-       \"#include <stdio.h>\",\n+       \"#include <stdio.h>\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -444,7 +444,7 @@ const char* apzBroken_Assert_StdlibPatch[] = { \"sed\",\n     \"-e\" \"1i\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"#include <stdlib.h>\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -766,11 +766,11 @@ const char* apzHpux_Cxx_UnreadyPatch[] = { \"sed\",\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"extern \\\"C\\\" {\\\\\\n\"\n        \"#endif\\\\\\n\"\n-       \"\",\n+       \"\\n\",\n     \"-e\" \"$a\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"}\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -792,9 +792,9 @@ tSCC zHpux_MaxintList[] =\n  */\n const char* apzHpux_MaxintPatch[] = { \"sed\",\n     \"-e\" \"/^#[ \\t]*define[ \\t]*MAXINT[ \\t]/i\\\\\\n\"\n-       \"#ifndef MAXINT\",\n+       \"#ifndef MAXINT\\n\",\n     \"-e\" \"/^#[ \\t]*define[ \\t]*MAXINT[ \\t]/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1082,7 +1082,7 @@ tTestDesc aIrix_SockaddrTests[] = {\n  */\n const char* apzIrix_SockaddrPatch[] = { \"sed\",\n     \"-e\" \"/authdes_create.*struct sockaddr/i\\\\\\n\"\n-       \"struct sockaddr;\",\n+       \"struct sockaddr;\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1104,7 +1104,7 @@ tSCC zIrix_Struct__FileList[] =\n  */\n const char* apzIrix_Struct__FilePatch[] = { \"sed\",\n     \"-e\" \"/xdrstdio_create.*struct __file_s/i\\\\\\n\"\n-       \"struct __file_s;\",\n+       \"struct __file_s;\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1239,29 +1239,29 @@ tTestDesc aLimits_IfndefsTests[] = {\n  */\n const char* apzLimits_IfndefsPatch[] = { \"sed\",\n     \"-e\" \"/[ \\t]FLT_MIN[ \\t]/i\\\\\\n\"\n-       \"#ifndef FLT_MIN\",\n+       \"#ifndef FLT_MIN\\n\",\n     \"-e\" \"/[ \\t]FLT_MIN[ \\t]/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     \"-e\" \"/[ \\t]FLT_MAX[ \\t]/i\\\\\\n\"\n-       \"#ifndef FLT_MAX\",\n+       \"#ifndef FLT_MAX\\n\",\n     \"-e\" \"/[ \\t]FLT_MAX[ \\t]/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     \"-e\" \"/[ \\t]FLT_DIG[ \\t]/i\\\\\\n\"\n-       \"#ifndef FLT_DIG\",\n+       \"#ifndef FLT_DIG\\n\",\n     \"-e\" \"/[ \\t]FLT_DIG[ \\t]/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     \"-e\" \"/[ \\t]DBL_MIN[ \\t]/i\\\\\\n\"\n-       \"#ifndef DBL_MIN\",\n+       \"#ifndef DBL_MIN\\n\",\n     \"-e\" \"/[ \\t]DBL_MIN[ \\t]/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     \"-e\" \"/[ \\t]DBL_MAX[ \\t]/i\\\\\\n\"\n-       \"#ifndef DBL_MAX\",\n+       \"#ifndef DBL_MAX\\n\",\n     \"-e\" \"/[ \\t]DBL_MAX[ \\t]/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     \"-e\" \"/[ \\t]DBL_DIG[ \\t]/i\\\\\\n\"\n-       \"#ifndef DBL_DIG\",\n+       \"#ifndef DBL_DIG\\n\",\n     \"-e\" \"/[ \\t]DBL_DIG[ \\t]/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1345,7 +1345,7 @@ const char* apzM88k_Bad_Hypot_OptPatch[] = { \"sed\",\n        \"{\\\\\\n\"\n        \"\\treturn fabs (hypot (x, y));\\\\\\n\"\n        \"}\\\\\\n\"\n-       \"#define hypot\\tfake_hypot\",\n+       \"#define hypot\\tfake_hypot\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1506,19 +1506,19 @@ const char* apzMath_ExceptionPatch[] = { \"sed\",\n     \"-e\" \"/struct exception/i\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"#define exception __math_exception\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     \"-e\" \"/struct exception/a\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"#undef exception\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     \"-e\" \"/matherr/i\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"#define exception __math_exception\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     \"-e\" \"/matherr/a\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"#undef exception\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1599,7 +1599,7 @@ const char* apzMotorola_Stupid_OptPatch[] = { \"sed\",\n        \"{\\\\\\n\"\n        \"\\treturn fabs (hypot (x, y));\\\\\\n\"\n        \"}\\\\\\n\"\n-       \"#define hypot\\tfake_hypot\",\n+       \"#define hypot\\tfake_hypot\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1650,9 +1650,9 @@ tTestDesc aNews_Os_RecursionTests[] = {\n  */\n const char* apzNews_Os_RecursionPatch[] = { \"sed\",\n     \"-e\" \"/^#include <stdlib.h>/i\\\\\\n\"\n-       \"#ifdef BOGUS_RECURSION\",\n+       \"#ifdef BOGUS_RECURSION\\n\",\n     \"-e\" \"/^#include <stdlib.h>/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1794,8 +1794,15 @@ tSCC zNo_Double_SlashName[] =\n tSCC zNo_Double_SlashSelect0[] =\n        \"//[^*]\";\n \n-#define    NO_DOUBLE_SLASH_TEST_CT  1\n+/*\n+ *  content test pattern.  A shell will deal with it later.\n+ */\n+tSCC zNo_Double_SlashTest0[] =\n+       \"-z \\\"`echo ${f}|grep ++`\\\"\";\n+\n+#define    NO_DOUBLE_SLASH_TEST_CT  2\n tTestDesc aNo_Double_SlashTests[] = {\n+    { TT_TEST,   zNo_Double_SlashTest0, 0 /* unused */ },\n     { TT_EGREP,  zNo_Double_SlashSelect0, (regex_t*)NULL } };\n \n /*\n@@ -1887,7 +1894,7 @@ const char* apzOsf_Namespace_BPatch[] = { \"sed\",\n     \"-e\" \"/#include <reg_types.h>/a\\\\\\n\"\n        \"typedef __regex_t\\tregex_t;\\\\\\n\"\n        \"typedef __regoff_t\\tregoff_t;\\\\\\n\"\n-       \"typedef __regmatch_t\\tregmatch_t;\",\n+       \"typedef __regmatch_t\\tregmatch_t;\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1946,9 +1953,9 @@ tTestDesc aRs6000_DoubleTests[] = {\n  */\n const char* apzRs6000_DoublePatch[] = { \"sed\",\n     \"-e\" \"/class[(]/i\\\\\\n\"\n-       \"#ifndef __cplusplus\",\n+       \"#ifndef __cplusplus\\n\",\n     \"-e\" \"/class[(]/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2186,9 +2193,9 @@ const char* apzSun_CatmacroPatch[] = { \"sed\",\n     \"-e\" \"/^#define[ \\t]CAT(a,b)/ i\\\\\\n\"\n        \"#ifdef __STDC__ \\\\\\n\"\n        \"#define CAT(a,b) a##b\\\\\\n\"\n-       \"#else\",\n+       \"#else\\n\",\n     \"-e\" \"/^#define[ \\t]CAT(a,b)/ a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2260,7 +2267,7 @@ const char* apzSun_MemcpyPatch[] = { \"sed\",\n        \"\\\\\\n\"\n        \"extern int memcmp();\\\\\\n\"\n        \"\\\\\\n\"\n-       \"#endif /* __memory_h__ */\",\n+       \"#endif /* __memory_h__ */\\n\",\n     \"-e\" \"1,$d\",\n     (char*)NULL };\n \n@@ -2323,9 +2330,9 @@ const char* apzSun_SignalPatch[] = { \"sed\",\n     \"-e\" \"/^void\\t(\\\\*signal())();$/i\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"void\\t(*signal(...))(...);\\\\\\n\"\n-       \"#else\",\n+       \"#else\\n\",\n     \"-e\" \"/^void\\t(\\\\*signal())();$/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2404,7 +2411,7 @@ tTestDesc aSunos_Matherr_DeclTests[] = {\n  */\n const char* apzSunos_Matherr_DeclPatch[] = { \"sed\",\n     \"-e\" \"/matherr/i\\\\\\n\"\n-       \"struct exception;\",\n+       \"struct exception;\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2469,20 +2476,20 @@ const char* apzSystypesPatch[] = { \"sed\",\n     \"-e\" \"/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]size_t/i\\\\\\n\"\n        \"#ifndef __SIZE_TYPE__\\\\\\n\"\n        \"#define __SIZE_TYPE__ long unsigned int\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     \"-e\" \"s/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]size_t/typedef __SIZE_TYPE__ size_t/\",\n     \"-e\" \"/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]ptrdiff_t/i\\\\\\n\"\n        \"#ifndef __PTRDIFF_TYPE__\\\\\\n\"\n        \"#define __PTRDIFF_TYPE__ long int\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     \"-e\" \"s/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]ptrdiff_t/typedef __PTRDIFF_TYPE__ ptrdiff_t/\",\n     \"-e\" \"/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]wchar_t/i\\\\\\n\"\n        \"#ifndef __WCHAR_TYPE__\\\\\\n\"\n        \"#define __WCHAR_TYPE__ int\\\\\\n\"\n        \"#endif\\\\\\n\"\n-       \"#ifndef __cplusplus\",\n+       \"#ifndef __cplusplus\\n\",\n     \"-e\" \"/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]wchar_t/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     \"-e\" \"s/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]wchar_t/typedef __WCHAR_TYPE__ wchar_t/\",\n     (char*)NULL };\n \n@@ -2514,9 +2521,9 @@ tTestDesc aSystypes_For_AixTests[] = {\n const char* apzSystypes_For_AixPatch[] = { \"sed\",\n     \"-e\" \"/typedef[ \\t][ \\t]*[A-Za-z_][ \\tA-Za-z_]*[ \\t]size_t/i\\\\\\n\"\n        \"#ifndef _GCC_SIZE_T\\\\\\n\"\n-       \"#define _GCC_SIZE_T\",\n+       \"#define _GCC_SIZE_T\\n\",\n     \"-e\" \"/typedef[ \\t][ \\t]*[A-Za-z_][ \\tA-Za-z_]*[ \\t]size_t/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2576,9 +2583,9 @@ const char* apzSysz_Stdlib_For_SunPatch[] = { \"sed\",\n     \"-e\" \"s/int[ \\t][ \\t]*exit/void\\texit/g\",\n     \"-e\" \"/typedef[ \\ta-zA-Z_]*[ \\t]size_t[ \\t]*;/i\\\\\\n\"\n        \"#ifndef _GCC_SIZE_T\\\\\\n\"\n-       \"#define _GCC_SIZE_T\",\n+       \"#define _GCC_SIZE_T\\n\",\n     \"-e\" \"/typedef[ \\ta-zA-Z_]*[ \\t]size_t[ \\t]*;/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2601,19 +2608,19 @@ tSCC zSysz_Stdtypes_For_SunList[] =\n const char* apzSysz_Stdtypes_For_SunPatch[] = { \"sed\",\n     \"-e\" \"/[\\t ]size_t.*;/i\\\\\\n\"\n        \"#ifndef _GCC_SIZE_T\\\\\\n\"\n-       \"#define _GCC_SIZE_T\",\n+       \"#define _GCC_SIZE_T\\n\",\n     \"-e\" \"/[\\t ]size_t.*;/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     \"-e\" \"/[\\t ]ptrdiff_t.*;/i\\\\\\n\"\n        \"#ifndef _GCC_PTRDIFF_T\\\\\\n\"\n-       \"#define _GCC_PTRDIFF_T\",\n+       \"#define _GCC_PTRDIFF_T\\n\",\n     \"-e\" \"/[\\t ]ptrdiff_t.*;/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     \"-e\" \"/[\\t ]wchar_t.*;/i\\\\\\n\"\n        \"#ifndef _GCC_WCHAR_T\\\\\\n\"\n-       \"#define _GCC_WCHAR_T\",\n+       \"#define _GCC_WCHAR_T\\n\",\n     \"-e\" \"/[\\t ]wchar_t.*;/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2664,7 +2671,7 @@ tTestDesc aUltrix_Ansi_CompatTests[] = {\n  */\n const char* apzUltrix_Ansi_CompatPatch[] = { \"sed\",\n     \"-e\" \"1i\\\\\\n\"\n-       \"/* This file intentionally left blank. */\",\n+       \"/* This file intentionally left blank. */\\n\",\n     \"-e\" \"1,$d\",\n     (char*)NULL };\n \n@@ -2836,7 +2843,7 @@ tTestDesc aUndefine_NullTests[] = {\n  */\n const char* apzUndefine_NullPatch[] = { \"sed\",\n     \"-e\" \"/^#[ \\t]*define[ \\t][ \\t]*NULL[ \\t]/i\\\\\\n\"\n-       \"#undef NULL\",\n+       \"#undef NULL\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2939,19 +2946,19 @@ const char* apzVxworks_Gcc_ProblemPatch[] = { \"sed\",\n     \"-e\" \"s/#ifdef __GNUC_TYPEOF_FEATURE_BROKEN_USE_DEFAULT_UNTIL_FIXED__/#if 1/\",\n     \"-e\" \"/[ \\t]size_t/i\\\\\\n\"\n        \"#ifndef _GCC_SIZE_T\\\\\\n\"\n-       \"#define _GCC_SIZE_T\",\n+       \"#define _GCC_SIZE_T\\n\",\n     \"-e\" \"/[ \\t]size_t/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     \"-e\" \"/[ \\t]ptrdiff_t/i\\\\\\n\"\n        \"#ifndef _GCC_PTRDIFF_T\\\\\\n\"\n-       \"#define _GCC_PTRDIFF_T\",\n+       \"#define _GCC_PTRDIFF_T\\n\",\n     \"-e\" \"/[ \\t]ptrdiff_t/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     \"-e\" \"/[ \\t]wchar_t/i\\\\\\n\"\n        \"#ifndef _GCC_WCHAR_T\\\\\\n\"\n-       \"#define _GCC_WCHAR_T\",\n+       \"#define _GCC_WCHAR_T\\n\",\n     \"-e\" \"/[ \\t]wchar_t/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -3023,7 +3030,7 @@ tTestDesc aVxworks_Needs_VxworksTests[] = {\n  */\n const char* apzVxworks_Needs_VxworksPatch[] = { \"sed\",\n     \"-e\" \"/#[ \\t]define[ \\t][ \\t]*__INCstath/a\\\\\\n\"\n-       \"#include <types/vxTypesOld.h>\",\n+       \"#include <types/vxTypesOld.h>\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -3067,7 +3074,7 @@ const char* apzVxworks_TimePatch[] = { \"sed\",\n        \"typedef void (*__gcc_VOIDFUNCPTR) ();\\\\\\n\"\n        \"#endif\\\\\\n\"\n        \"#define __gcc_VOIDFUNCPTR_defined\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     \"-e\" \"s/VOIDFUNCPTR/__gcc_VOIDFUNCPTR/g\",\n     (char*)NULL };\n \n@@ -3100,9 +3107,9 @@ const char* apzX11_ClassPatch[] = { \"sed\",\n     \"-e\" \"/char [*]class;/i\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"\\tchar *c_class;\\\\\\n\"\n-       \"#else\",\n+       \"#else\\n\",\n     \"-e\" \"/char [*]class;/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -3163,9 +3170,9 @@ const char* apzX11_NewPatch[] = { \"sed\",\n     \"-e\" \"/Widget\\told, new;/i\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"\\tWidget\\told, c_new;\\\\\\n\"\n-       \"#else\",\n+       \"#else\\n\",\n     \"-e\" \"/Widget\\told, new;/a\\\\\\n\"\n-       \"#endif\",\n+       \"#endif\\n\",\n     \"-e\" \"s/Widget new,/Widget c_new,/g\",\n     (char*)NULL };\n "}, {"sha": "77db04f9b880a9a929195ec2eda102c8168aa594", "filename": "contrib/fixinc/inclhack.def", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c16b55aa5e485078ba5f1d58f0b03753a052da80/contrib%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c16b55aa5e485078ba5f1d58f0b03753a052da80/contrib%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ffixinc%2Finclhack.def?ref=c16b55aa5e485078ba5f1d58f0b03753a052da80", "patch": "@@ -1,4 +1,4 @@\n-/* -*- Mode: C -*-  $Id: inclhack.def,v 1.1 1998/03/20 16:19:41 korbb Exp $  */\n+/* -*- Mode: C -*-  $Id: inclhack.def,v 1.6 1998/09/22 07:22:00 korbb Exp $  */\n \n autogen definitions inclhack;\n \n@@ -991,9 +991,12 @@ fix = {\n /*\n  *  Remove the double-slash comments\n  *  They *must* be removed so it will not create nested comments!!\n+ *  However, they will *not* be removed if '++' is in any part of\n+ *  their file name.\n  */\n fix = {\n     hackname = no_double_slash;\n+    test     = '-z \"`echo ${f}|grep ++`\"';\n     select = '//[^*]';\n     sed    = '/\\/\\/[^*]/' \"s|//\\\\(.*\\\\)$|/* \\\\1 */|\";\n };"}, {"sha": "24583731f78af8a6d11a3d37085dcbc32b262673", "filename": "contrib/fixinc/inclhack.sh", "status": "modified", "additions": 1660, "deletions": 1651, "changes": 3311, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c16b55aa5e485078ba5f1d58f0b03753a052da80/contrib%2Ffixinc%2Finclhack.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c16b55aa5e485078ba5f1d58f0b03753a052da80/contrib%2Ffixinc%2Finclhack.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ffixinc%2Finclhack.sh?ref=c16b55aa5e485078ba5f1d58f0b03753a052da80"}]}