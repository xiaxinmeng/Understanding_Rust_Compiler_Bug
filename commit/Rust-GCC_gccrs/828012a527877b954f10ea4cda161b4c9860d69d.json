{"sha": "828012a527877b954f10ea4cda161b4c9860d69d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI4MDEyYTUyNzg3N2I5NTRmMTBlYTRjZGExNjFiNGM5ODYwZDY5ZA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2013-05-24T09:23:33Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2013-05-24T09:23:33Z"}, "message": "Use -z ignore instead of --as-needed on Solaris\n\n\t* acinclude.m4 (libgfor_cv_have_as_needed): Check for -z ignore, too.\n\t* configure: Regenerate.\n\nFrom-SVN: r199285", "tree": {"sha": "d1dcff032474a779e717176fb89cb748ad236427", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1dcff032474a779e717176fb89cb748ad236427"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/828012a527877b954f10ea4cda161b4c9860d69d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/828012a527877b954f10ea4cda161b4c9860d69d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/828012a527877b954f10ea4cda161b4c9860d69d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/828012a527877b954f10ea4cda161b4c9860d69d/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "905b92cb0163ccff04b243053660754b583c3f61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/905b92cb0163ccff04b243053660754b583c3f61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/905b92cb0163ccff04b243053660754b583c3f61"}], "stats": {"total": 77, "additions": 67, "deletions": 10}, "files": [{"sha": "59ac4da949f60bf311b82b2f175de993bcc29e94", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828012a527877b954f10ea4cda161b4c9860d69d/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828012a527877b954f10ea4cda161b4c9860d69d/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=828012a527877b954f10ea4cda161b4c9860d69d", "patch": "@@ -1,3 +1,8 @@\n+2013-05-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* acinclude.m4 (libgfor_cv_have_as_needed): Check for -z ignore, too.\n+\t* configure: Regenerate.\n+\n 2013-05-05  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* caf/libcaf.h (_gfortran_caf_critical): Add a prototype."}, {"sha": "ba890f9839118840c0a8560e1e5ef0aafb0a75fe", "filename": "libgfortran/acinclude.m4", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828012a527877b954f10ea4cda161b4c9860d69d/libgfortran%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828012a527877b954f10ea4cda161b4c9860d69d/libgfortran%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Facinclude.m4?ref=828012a527877b954f10ea4cda161b4c9860d69d", "patch": "@@ -296,31 +296,47 @@ AC_DEFUN([LIBGFOR_CHECK_FLOAT128], [\n   if test \"x$libgfor_cv_have_float128\" = xyes; then\n     AC_DEFINE(HAVE_FLOAT128, 1, [Define if have a usable __float128 type.])\n \n-    dnl Check whether -Wl,--as-needed is supported\n+    dnl Check whether -Wl,--as-needed resp. -Wl,-zignore is supported\n     dnl \n     dnl Turn warnings into error to avoid testsuite breakage.  So enable\n     dnl AC_LANG_WERROR, but there's currently (autoconf 2.64) no way to turn\n     dnl it off again.  As a workaround, save and restore werror flag like\n     dnl AC_PATH_XTRA.\n     dnl Cf. http://gcc.gnu.org/ml/gcc-patches/2010-05/msg01889.html\n     ac_xsave_[]_AC_LANG_ABBREV[]_werror_flag=$ac_[]_AC_LANG_ABBREV[]_werror_flag\n-    AC_CACHE_CHECK([whether --as-needed works],\n+    AC_CACHE_CHECK([whether --as-needed/-z ignore works],\n       [libgfor_cv_have_as_needed],\n       [\n+      # Test for native Solaris options first.\n+      # No whitespace after -z to pass it through -Wl.\n+      libgfor_cv_as_needed_option=\"-zignore\"\n+      libgfor_cv_no_as_needed_option=\"-zrecord\"\n       save_LDFLAGS=\"$LDFLAGS\"\n-      LDFLAGS=\"$LDFLAGS -Wl,--as-needed -lm -Wl,--no-as-needed\"\n+      LDFLAGS=\"$LDFLAGS -Wl,$libgfor_cv_as_needed_option -lm -Wl,$libgfor_cv_no_as_needed_option\"\n       libgfor_cv_have_as_needed=no\n       AC_LANG_WERROR\n       AC_LINK_IFELSE([AC_LANG_PROGRAM([])],\n \t\t     [libgfor_cv_have_as_needed=yes],\n \t\t     [libgfor_cv_have_as_needed=no])\n       LDFLAGS=\"$save_LDFLAGS\"\n+      if test \"x$libgfor_cv_have_as_needed\" = xno; then\n+\tlibgfor_cv_as_needed_option=\"--as-needed\"\n+\tlibgfor_cv_no_as_needed_option=\"--no-as-needed\"\n+\tsave_LDFLAGS=\"$LDFLAGS\"\n+\tLDFLAGS=\"$LDFLAGS -Wl,$libgfor_cv_as_needed_option -lm -Wl,$libgfor_cv_no_as_needed_option\"\n+\tlibgfor_cv_have_as_needed=no\n+\tAC_LANG_WERROR\n+\tAC_LINK_IFELSE([AC_LANG_PROGRAM([])],\n+\t\t       [libgfor_cv_have_as_needed=yes],\n+\t\t       [libgfor_cv_have_as_needed=no])\n+\tLDFLAGS=\"$save_LDFLAGS\"\n+      fi\n       ac_[]_AC_LANG_ABBREV[]_werror_flag=$ac_xsave_[]_AC_LANG_ABBREV[]_werror_flag\n     ])\n \n     dnl For static libgfortran linkage, depend on libquadmath only if needed.\n     if test \"x$libgfor_cv_have_as_needed\" = xyes; then\n-      LIBQUADSPEC=\"%{static-libgfortran:--as-needed} -lquadmath %{static-libgfortran:--no-as-needed}\"\n+      LIBQUADSPEC=\"%{static-libgfortran:$libgfor_cv_as_needed_option} -lquadmath %{static-libgfortran:$libgfor_cv_no_as_needed_option}\"\n     else\n       LIBQUADSPEC=\"-lquadmath\"\n     fi"}, {"sha": "8601d8440fa909e520f50a5fdbc23de620d5b7f8", "filename": "libgfortran/configure", "status": "modified", "additions": 42, "deletions": 6, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828012a527877b954f10ea4cda161b4c9860d69d/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828012a527877b954f10ea4cda161b4c9860d69d/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=828012a527877b954f10ea4cda161b4c9860d69d", "patch": "@@ -600,6 +600,7 @@ ac_includes_default=\"\\\n ac_header_list=\n ac_func_list=\n ac_c_werror_flag=\n+ac_c_werror_flag=\n ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n@@ -12333,7 +12334,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12336 \"configure\"\n+#line 12337 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12439,7 +12440,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12442 \"configure\"\n+#line 12443 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -25720,14 +25721,18 @@ $as_echo \"#define HAVE_FLOAT128 1\" >>confdefs.h\n \n \n                                 ac_xsave_c_werror_flag=$ac_c_werror_flag\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether --as-needed works\" >&5\n-$as_echo_n \"checking whether --as-needed works... \" >&6; }\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether --as-needed/-z ignore works\" >&5\n+$as_echo_n \"checking whether --as-needed/-z ignore works... \" >&6; }\n if test \"${libgfor_cv_have_as_needed+set}\" = set; then :\n   $as_echo_n \"(cached) \" >&6\n else\n \n+      # Test for native Solaris options first.\n+      # No whitespace after -z to pass it through -Wl.\n+      libgfor_cv_as_needed_option=\"-zignore\"\n+      libgfor_cv_no_as_needed_option=\"-zrecord\"\n       save_LDFLAGS=\"$LDFLAGS\"\n-      LDFLAGS=\"$LDFLAGS -Wl,--as-needed -lm -Wl,--no-as-needed\"\n+      LDFLAGS=\"$LDFLAGS -Wl,$libgfor_cv_as_needed_option -lm -Wl,$libgfor_cv_no_as_needed_option\"\n       libgfor_cv_have_as_needed=no\n \n ac_c_werror_flag=yes\n@@ -25753,14 +25758,45 @@ fi\n rm -f core conftest.err conftest.$ac_objext \\\n     conftest$ac_exeext conftest.$ac_ext\n       LDFLAGS=\"$save_LDFLAGS\"\n+      if test \"x$libgfor_cv_have_as_needed\" = xno; then\n+\tlibgfor_cv_as_needed_option=\"--as-needed\"\n+\tlibgfor_cv_no_as_needed_option=\"--no-as-needed\"\n+\tsave_LDFLAGS=\"$LDFLAGS\"\n+\tLDFLAGS=\"$LDFLAGS -Wl,$libgfor_cv_as_needed_option -lm -Wl,$libgfor_cv_no_as_needed_option\"\n+\tlibgfor_cv_have_as_needed=no\n+\n+ac_c_werror_flag=yes\n+\tif test x$gcc_no_link = xyes; then\n+  as_fn_error \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n+fi\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  libgfor_cv_have_as_needed=yes\n+else\n+  libgfor_cv_have_as_needed=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+\tLDFLAGS=\"$save_LDFLAGS\"\n+      fi\n       ac_c_werror_flag=$ac_xsave_c_werror_flag\n \n fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $libgfor_cv_have_as_needed\" >&5\n $as_echo \"$libgfor_cv_have_as_needed\" >&6; }\n \n         if test \"x$libgfor_cv_have_as_needed\" = xyes; then\n-      LIBQUADSPEC=\"%{static-libgfortran:--as-needed} -lquadmath %{static-libgfortran:--no-as-needed}\"\n+      LIBQUADSPEC=\"%{static-libgfortran:$libgfor_cv_as_needed_option} -lquadmath %{static-libgfortran:$libgfor_cv_no_as_needed_option}\"\n     else\n       LIBQUADSPEC=\"-lquadmath\"\n     fi"}]}