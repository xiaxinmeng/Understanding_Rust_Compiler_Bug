{"sha": "c54eb7f40ce09bc22aca2aea7cdde6e286249ada", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU0ZWI3ZjQwY2UwOWJjMjJhY2EyYWVhN2NkZGU2ZTI4NjI0OWFkYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2019-05-21T16:00:37Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2019-05-21T16:00:37Z"}, "message": "sse.md (VF1_AVX2): New mode iterator.\n\n\t* config/i386/sse.md (VF1_AVX2): New mode iterator.\n\t(signbit<mode>2): New expander\n\ntestsuite/ChangeLog:\n\n\t* gcc.target/i386/vect-signbitf.c: New test.\n\nFrom-SVN: r271473", "tree": {"sha": "3cbc4f3c9b472f0d24f59f787c317551c4c1eb49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cbc4f3c9b472f0d24f59f787c317551c4c1eb49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c54eb7f40ce09bc22aca2aea7cdde6e286249ada", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c54eb7f40ce09bc22aca2aea7cdde6e286249ada", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c54eb7f40ce09bc22aca2aea7cdde6e286249ada", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c54eb7f40ce09bc22aca2aea7cdde6e286249ada/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c9ae62c2645f1fb02b781d41a0942cf9fac496ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9ae62c2645f1fb02b781d41a0942cf9fac496ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9ae62c2645f1fb02b781d41a0942cf9fac496ac"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "0651fbabed2bbb7978701ea7ffa86dced4af34f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54eb7f40ce09bc22aca2aea7cdde6e286249ada/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54eb7f40ce09bc22aca2aea7cdde6e286249ada/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c54eb7f40ce09bc22aca2aea7cdde6e286249ada", "patch": "@@ -1,3 +1,8 @@\n+2019-05-21  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sse.md (VF1_AVX2): New mode iterator.\n+\t(signbit<mode>2): New expander\n+\n 2019-05-21  James Clarke  <jrtc27@jrtc27.com>\n \n \tPR bootstrap/87338"}, {"sha": "7e7b3417cfc847b5314fa8dbdfd6c8a446388211", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54eb7f40ce09bc22aca2aea7cdde6e286249ada/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54eb7f40ce09bc22aca2aea7cdde6e286249ada/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=c54eb7f40ce09bc22aca2aea7cdde6e286249ada", "patch": "@@ -279,6 +279,9 @@\n (define_mode_iterator VF1\n   [(V16SF \"TARGET_AVX512F\") (V8SF \"TARGET_AVX\") V4SF])\n \n+(define_mode_iterator VF1_AVX2\n+  [(V16SF \"TARGET_AVX512F\") (V8SF \"TARGET_AVX2\") V4SF])\n+\n ;; 128- and 256-bit SF vector modes\n (define_mode_iterator VF1_128_256\n   [(V8SF \"TARGET_AVX\") V4SF])\n@@ -3523,6 +3526,15 @@\n   operands[4] = gen_reg_rtx (<MODE>mode);\n })\n \n+(define_expand \"signbit<mode>2\"\n+  [(set (match_operand:<sseintvecmode> 0 \"register_operand\")\n+\t(lshiftrt:<sseintvecmode>\n+\t  (subreg:<sseintvecmode>\n+\t    (match_operand:VF1_AVX2 1 \"register_operand\") 0)\n+\t  (match_dup 2)))]\n+  \"TARGET_SSE2\"\n+  \"operands[2] = GEN_INT (GET_MODE_UNIT_BITSIZE (<MODE>mode)-1);\")\n+\n ;; Also define scalar versions.  These are used for abs, neg, and\n ;; conditional move.  Using subregs into vector modes causes register\n ;; allocation lossage.  These patterns do not allow memory operands"}, {"sha": "6206ef52c4a890aaead02d4693f05f690a97b9bc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54eb7f40ce09bc22aca2aea7cdde6e286249ada/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54eb7f40ce09bc22aca2aea7cdde6e286249ada/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c54eb7f40ce09bc22aca2aea7cdde6e286249ada", "patch": "@@ -1,3 +1,7 @@\n+2019-05-21  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/vect-signbitf.c: New test.\n+\n 2019-05-21  Nathan Sidwell  <nathan@acm.org>\n \n \t* g++.dg/lookup/using53.C: Adjust diagnostic."}, {"sha": "b3ef1062c83aaadd16cef9bf19d35bb606fabeef", "filename": "gcc/testsuite/gcc.target/i386/vect-signbitf.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c54eb7f40ce09bc22aca2aea7cdde6e286249ada/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-signbitf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c54eb7f40ce09bc22aca2aea7cdde6e286249ada/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-signbitf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-signbitf.c?ref=c54eb7f40ce09bc22aca2aea7cdde6e286249ada", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do run { target sse2_runtime } } */\n+/* { dg-options \"-O2 -msse2 -ftree-vectorize -fdump-tree-vect-details -save-temps\" } */\n+\n+extern void abort ();\n+\n+#define N 1024\n+float a[N] = {0.0f, -0.0f, 1.0f, -1.0f,\n+\t      -2.0f, 3.0f, -5.0f, -8.0f,\n+\t      13.0f, 21.0f, -25.0f, 33.0f};\n+int r[N];\n+\n+int\n+main (void)\n+{\n+  int i;\n+\n+  for (i = 0; i < N; i++)\n+    r[i] = __builtin_signbitf (a[i]);\n+\n+  /* check results:  */\n+  for (i = 0; i < N; i++)\n+    if (__builtin_signbit (a[i]) && !r[i])\n+      abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-assembler-not \"-2147483648\" } } */\n+/* { dg-final { scan-assembler \"psrld\" } } */"}]}