{"sha": "0042ca7b770aadd6ccf8f53109fdf955f44c18c3", "node_id": "C_kwDOANBUbNoAKDAwNDJjYTdiNzcwYWFkZDZjY2Y4ZjUzMTA5ZmRmOTU1ZjQ0YzE4YzM", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2021-10-21T11:30:21Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2022-01-20T11:14:43Z"}, "message": "arm: Disambiguate multiple crypto patterns with the same name.\n\nNo functional change, but arm/crypto.md has multiple pattenrs all\ncalled crypto_<crypto_pattern>, which makes references to them\nambiguous, so add the iterator base to the pattern name so that it is\ndistinct in the commit logs.\n\ngcc/ChangeLog:\n\n\t* config/arm/crypto.md (crypto_<CRYPTO_AESMC:crypto_pattern>): Add\n\titerator to pattern name to disambiguate.\n\t(crypto_<CRYPTO_AES:crypto_pattern>): Likewise.\n\t(crypto_<CRYPTO_BINARY:crypto_pattern>): Likewise.\n\t(crypto_<CRYPTO_TERNARY:crypto_pattern>): Likewise.\n\t(crypto_<CRYPTO_SELECTING:crypto_pattern>): Likewise.\n\t(crypto_<CRYPTO_SELECTING:crypto_pattern>_lb): Likewise.", "tree": {"sha": "42a3fefa7335e901dc0a0c445bfcae2d97306bc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42a3fefa7335e901dc0a0c445bfcae2d97306bc4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0042ca7b770aadd6ccf8f53109fdf955f44c18c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0042ca7b770aadd6ccf8f53109fdf955f44c18c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0042ca7b770aadd6ccf8f53109fdf955f44c18c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0042ca7b770aadd6ccf8f53109fdf955f44c18c3/comments", "author": null, "committer": null, "parents": [{"sha": "6d51a27fb17d9dc4e583c119fd976d39e575180f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d51a27fb17d9dc4e583c119fd976d39e575180f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d51a27fb17d9dc4e583c119fd976d39e575180f"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "6071ea17eacbc88e926d61b4c5ede0a44cf465ec", "filename": "gcc/config/arm/crypto.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0042ca7b770aadd6ccf8f53109fdf955f44c18c3/gcc%2Fconfig%2Farm%2Fcrypto.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0042ca7b770aadd6ccf8f53109fdf955f44c18c3/gcc%2Fconfig%2Farm%2Fcrypto.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcrypto.md?ref=0042ca7b770aadd6ccf8f53109fdf955f44c18c3", "patch": "@@ -19,7 +19,7 @@\n ;; <http://www.gnu.org/licenses/>.\n \n \n-(define_insn \"crypto_<crypto_pattern>\"\n+(define_insn \"crypto_<CRYPTO_AESMC:crypto_pattern>\"\n   [(set (match_operand:<crypto_mode> 0 \"register_operand\" \"=w\")\n \t(unspec:<crypto_mode>\n \t\t[(match_operand:<crypto_mode> 1 \"register_operand\" \"w\")]\n@@ -29,7 +29,7 @@\n   [(set_attr \"type\" \"<crypto_type>\")]\n )\n \n-(define_insn \"crypto_<crypto_pattern>\"\n+(define_insn \"crypto_<CRYPTO_AES:crypto_pattern>\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=w\")\n \t(unspec:V16QI\n \t\t[(xor:V16QI\n@@ -83,7 +83,7 @@\n    (set_attr \"length\" \"8\")]\n )\n \n-(define_insn \"crypto_<crypto_pattern>\"\n+(define_insn \"crypto_<CRYPTO_BINARY:crypto_pattern>\"\n   [(set (match_operand:<crypto_mode> 0 \"register_operand\" \"=w\")\n \t(unspec:<crypto_mode>\n \t\t[(match_operand:<crypto_mode> 1 \"register_operand\" \"0\")\n@@ -94,7 +94,7 @@\n   [(set_attr \"type\" \"<crypto_type>\")]\n )\n \n-(define_insn \"crypto_<crypto_pattern>\"\n+(define_insn \"crypto_<CRYPTO_TERNARY:crypto_pattern>\"\n   [(set (match_operand:<crypto_mode> 0 \"register_operand\" \"=w\")\n         (unspec:<crypto_mode> [(match_operand:<crypto_mode> 1 \"register_operand\" \"0\")\n                       (match_operand:<crypto_mode> 2 \"register_operand\" \"w\")\n@@ -145,7 +145,7 @@\n    of the V4SI, adjusted for endianness. Required due to neon_vget_lane and\n    neon_set_lane that change the element ordering in memory for big-endian.  */\n \n-(define_expand \"crypto_<crypto_pattern>\"\n+(define_expand \"crypto_<CRYPTO_SELECTING:crypto_pattern>\"\n   [(set (match_operand:V4SI 0 \"register_operand\")\n \t(unspec:<crypto_mode>\n \t\t[(match_operand:<crypto_mode> 1 \"register_operand\")\n@@ -160,7 +160,7 @@\n   DONE;\n })\n \n-(define_insn \"crypto_<crypto_pattern>_lb\"\n+(define_insn \"crypto_<CRYPTO_SELECTING:crypto_pattern>_lb\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=w\")\n         (unspec:<crypto_mode>\n                      [(match_operand:<crypto_mode> 1 \"register_operand\" \"0\")"}]}