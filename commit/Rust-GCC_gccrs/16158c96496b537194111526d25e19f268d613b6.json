{"sha": "16158c96496b537194111526d25e19f268d613b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYxNThjOTY0OTZiNTM3MTk0MTExNTI2ZDI1ZTE5ZjI2OGQ2MTNiNg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-07-22T13:48:27Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-07-27T11:04:18Z"}, "message": "libstdc++: Remove unnecessary uses of <utility>\n\nThe <algorithm> header includes <utility>, with a comment referring to\nUK-300, a National Body comment on the C++11 draft. That comment\nproposed to move std::swap to <utility> and then require <algorithm> to\ninclude <utility>. The comment was rejected, so we do not need to\nimplement the suggestion. For backwards compatibility with C++03 we do\nwant <algorithm> to define std::swap, but it does so anyway via\n<bits/move.h>. We don't need the whole of <utility> to do that.\n\nA few other headers that need std::swap can include <bits/move.h> to\nget it, instead of <utility>.\n\nThere are several headers that include <utility> to get std::pair, but\nthey can use <bits/stl_pair.h> to get it without also including the\nrel_ops namespace and other contents of <utility>.\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/algorithm: Do not include <utility>.\n\t* include/std/functional: Likewise.\n\t* include/std/regex: Include <bits/stl_pair.h> instead of\n\t<utility>.\n\t* include/debug/map.h: Likewise.\n\t* include/debug/multimap.h: Likewise.\n\t* include/debug/multiset.h: Likewise.\n\t* include/debug/set.h: Likewise.\n\t* include/debug/vector: Likewise.\n\t* include/bits/fs_path.h: Likewise.\n\t* include/bits/unique_ptr.h: Do not include <utility>.\n\t* include/experimental/any: Likewise.\n\t* include/experimental/executor: Likewise.\n\t* include/experimental/memory: Likewise.\n\t* include/experimental/optional: Likewise.\n\t* include/experimental/socket: Use __exchange instead\n\tof std::exchange.\n\t* src/filesystem/ops-common.h: Likewise.\n\t* testsuite/20_util/default_delete/48631_neg.cc: Adjust expected\n\terrors to not use a hardcoded line number.\n\t* testsuite/20_util/default_delete/void_neg.cc: Likewise.\n\t* testsuite/20_util/specialized_algorithms/uninitialized_copy/constrained.cc:\n\tInclude <utility> for std::as_const.\n\t* testsuite/20_util/specialized_algorithms/uninitialized_default_construct/constrained.cc:\n\tLikewise.\n\t* testsuite/20_util/specialized_algorithms/uninitialized_move/constrained.cc:\n\tLikewise.\n\t* testsuite/20_util/specialized_algorithms/uninitialized_value_construct/constrained.cc:\n\tLikewise.\n\t* testsuite/23_containers/vector/cons/destructible_debug_neg.cc:\n\tAdjust dg-error line number.", "tree": {"sha": "4b77042b0fb21913b7a7e550b24390a5940b8aae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b77042b0fb21913b7a7e550b24390a5940b8aae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16158c96496b537194111526d25e19f268d613b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16158c96496b537194111526d25e19f268d613b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16158c96496b537194111526d25e19f268d613b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16158c96496b537194111526d25e19f268d613b6/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "261d5a4a459bd49942e53bc83334ccc7154a09d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/261d5a4a459bd49942e53bc83334ccc7154a09d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/261d5a4a459bd49942e53bc83334ccc7154a09d5"}], "stats": {"total": 45, "additions": 22, "deletions": 23}, "files": [{"sha": "3151af1e9019ead840082e79cd5a0e4308c3bd42", "filename": "libstdc++-v3/include/bits/fs_path.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -32,7 +32,6 @@\n \n #if __cplusplus >= 201703L\n \n-#include <utility>\n #include <type_traits>\n #include <locale>\n #include <iosfwd>\n@@ -41,6 +40,7 @@\n #include <string_view>\n #include <system_error>\n #include <bits/stl_algobase.h>\n+#include <bits/stl_pair.h>\n #include <bits/locale_conv.h>\n #include <ext/concurrence.h>\n #include <bits/shared_ptr.h>"}, {"sha": "2d8b9ed3fae6425f541eee6ad8c0e48de9eaa0fa", "filename": "libstdc++-v3/include/bits/unique_ptr.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -33,7 +33,6 @@\n #include <bits/c++config.h>\n #include <debug/assertions.h>\n #include <type_traits>\n-#include <utility>\n #include <tuple>\n #include <bits/stl_function.h>\n #include <bits/functional_hash.h>"}, {"sha": "c0153d09abeb4c56ad73c2b47a636e8ef2a7ff8b", "filename": "libstdc++-v3/include/debug/map.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmap.h?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -32,7 +32,7 @@\n #include <debug/safe_sequence.h>\n #include <debug/safe_container.h>\n #include <debug/safe_iterator.h>\n-#include <utility>\n+#include <bits/stl_pair.h>\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {"}, {"sha": "94929344a9d343be34bf383457d1f04b13bbda27", "filename": "libstdc++-v3/include/debug/multimap.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultimap.h?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -32,7 +32,7 @@\n #include <debug/safe_sequence.h>\n #include <debug/safe_container.h>\n #include <debug/safe_iterator.h>\n-#include <utility>\n+#include <bits/stl_pair.h>\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {"}, {"sha": "bb68d8c8f180a8abb0624f1ea37a0ae29063beca", "filename": "libstdc++-v3/include/debug/multiset.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultiset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultiset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultiset.h?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -32,7 +32,7 @@\n #include <debug/safe_sequence.h>\n #include <debug/safe_container.h>\n #include <debug/safe_iterator.h>\n-#include <utility>\n+#include <bits/stl_pair.h>\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {"}, {"sha": "cdf35ea539676591d68b44f2839c746b9e3de32e", "filename": "libstdc++-v3/include/debug/set.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fset.h?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -32,7 +32,7 @@\n #include <debug/safe_sequence.h>\n #include <debug/safe_container.h>\n #include <debug/safe_iterator.h>\n-#include <utility>\n+#include <bits/stl_pair.h>\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {"}, {"sha": "79ccf527dd627e2e5630aa1511b11a3b3fdd2702", "filename": "libstdc++-v3/include/debug/vector", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -37,7 +37,6 @@ namespace std _GLIBCXX_VISIBILITY(default) { namespace __debug {\n } } // namespace std::__debug\n \n #include <vector>\n-#include <utility>\n #include <debug/safe_sequence.h>\n #include <debug/safe_container.h>\n #include <debug/safe_iterator.h>"}, {"sha": "7d18f267e8b53714529675916663f0a849192e2e", "filename": "libstdc++-v3/include/experimental/any", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fany?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -36,8 +36,8 @@\n \n #include <typeinfo>\n #include <new>\n-#include <utility>\n #include <type_traits>\n+#include <bits/move.h>\n #include <experimental/bits/lfts_config.h>\n \n namespace std _GLIBCXX_VISIBILITY(default)"}, {"sha": "4322a7f5caf18b618be0d55fe1fd54c0ab69f7e1", "filename": "libstdc++-v3/include/experimental/executor", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fexecutor", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fexecutor", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fexecutor?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -43,7 +43,6 @@\n #include <thread>\n #include <tuple>\n #include <unordered_map>\n-#include <utility>\n #include <experimental/netfwd>\n #include <bits/unique_ptr.h>\n #include <experimental/bits/net.h>"}, {"sha": "a89a5ecfa84daf15faaa7275a9b821913133e8e2", "filename": "libstdc++-v3/include/experimental/memory", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fmemory", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fmemory", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fmemory?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -40,7 +40,6 @@\n \n #include <memory>\n #include <type_traits>\n-#include <utility>\n #include <experimental/bits/shared_ptr.h>\n #include <bits/functional_hash.h>\n "}, {"sha": "431d23631cf16a35886f31cbe1335ecac44fb295", "filename": "libstdc++-v3/include/experimental/optional", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Foptional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Foptional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Foptional?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -32,14 +32,14 @@\n \n #if __cplusplus >= 201402L\n \n-#include <utility>\n #include <type_traits>\n #include <stdexcept>\n #include <new>\n #include <initializer_list>\n #include <bits/functexcept.h>\n #include <bits/functional_hash.h>\n #include <bits/enable_special_members.h>\n+#include <bits/move.h>\n #include <experimental/bits/lfts_config.h>\n \n namespace std _GLIBCXX_VISIBILITY(default)"}, {"sha": "6d1c114254a753caa21f4ce31e5c524d1beb8dbe", "filename": "libstdc++-v3/include/experimental/socket", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fsocket", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fsocket", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fsocket?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -429,16 +429,16 @@ inline namespace v1\n \n     __socket_impl(__socket_impl&& __rhs)\n     : _M_ctx(__rhs._M_ctx),\n-      _M_sockfd(std::exchange(__rhs._M_sockfd, -1)),\n-      _M_bits(std::exchange(__rhs._M_bits, {}))\n+      _M_sockfd(std::__exchange(__rhs._M_sockfd, -1)),\n+      _M_bits(std::__exchange(__rhs._M_bits, {}))\n     { }\n \n     __socket_impl&\n     operator=(__socket_impl&& __rhs)\n     {\n       _M_ctx = __rhs._M_ctx;\n-      _M_sockfd = std::exchange(__rhs._M_sockfd, -1);\n-      _M_bits = std::exchange(__rhs._M_bits, {});\n+      _M_sockfd = std::__exchange(__rhs._M_sockfd, -1);\n+      _M_bits = std::__exchange(__rhs._M_bits, {});\n       return *this;\n     }\n \n@@ -615,7 +615,7 @@ inline namespace v1\n       {\n \t__glibcxx_assert(is_open());\n \tcancel(__ec);\n-\treturn std::exchange(_M_sockfd, -1);\n+\treturn std::__exchange(_M_sockfd, -1);\n       }\n \n       template<typename _SettableSocketOption>"}, {"sha": "c9df7eae1fffb38caf31d0ae3bd7dcd583182a50", "filename": "libstdc++-v3/include/std/algorithm", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Falgorithm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Falgorithm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Falgorithm?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -57,7 +57,6 @@\n \n #pragma GCC system_header\n \n-#include <utility> // UK-300.\n #include <bits/stl_algobase.h>\n #include <bits/stl_algo.h>\n #if __cplusplus > 201703L"}, {"sha": "131e6629341cb0c92c74e4c62d710e38cda474b2", "filename": "libstdc++-v3/include/std/functional", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -61,7 +61,6 @@\n # include <unordered_map>\n # include <vector>\n # include <array>\n-# include <utility>\n # include <bits/stl_algo.h>\n #endif\n #if __cplusplus > 201703L"}, {"sha": "e623a6ed498a88f72b9090fd7289f09bb3d97c4b", "filename": "libstdc++-v3/include/std/regex", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fregex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fregex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fregex?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -47,14 +47,14 @@\n #include <stack>\n #include <stdexcept>\n #include <string>\n-#include <utility>\n #include <vector>\n #include <map>\n #include <cstring>\n \n #include <ext/aligned_buffer.h>\n #include <ext/numeric_traits.h>\n #include <bits/std_function.h>\n+#include <bits/stl_pair.h>\n #include <bits/regex_constants.h>\n #include <bits/regex_error.h>\n #include <bits/regex_automaton.h>"}, {"sha": "43311e6c38fab3bc5b66b87efb0d3a43b4f403bd", "filename": "libstdc++-v3/src/filesystem/ops-common.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops-common.h?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -26,6 +26,7 @@\n #define _GLIBCXX_OPS_COMMON_H 1\n \n #include <chrono>\n+#include <bits/move.h> // std::__exchange\n \n #ifdef _GLIBCXX_HAVE_UNISTD_H\n # include <unistd.h>\n@@ -407,7 +408,7 @@ _GLIBCXX_BEGIN_NAMESPACE_FILESYSTEM\n \n     struct CloseFD {\n       ~CloseFD() { if (fd != -1) posix::close(fd); }\n-      bool close() { return posix::close(std::exchange(fd, -1)) == 0; }\n+      bool close() { return posix::close(std::__exchange(fd, -1)) == 0; }\n       int fd;\n     };\n "}, {"sha": "3e80b73603ef7b3729931fb3b42d2cbc41851761", "filename": "libstdc++-v3/testsuite/20_util/default_delete/48631_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdefault_delete%2F48631_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdefault_delete%2F48631_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdefault_delete%2F48631_neg.cc?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -26,4 +26,4 @@ struct D : B { };\n D d;\n std::default_delete<B[]> db;\n typedef decltype(db(&d)) type; // { dg-error \"no match\" }\n-// { dg-error \"no type\" \"\" { target *-*-* } 116 }\n+// { dg-prune-output \"no type named 'type' in 'struct std::enable_if\" }"}, {"sha": "ac4eabc53412cfebae3bcbf1dd366dacfb2e452a", "filename": "libstdc++-v3/testsuite/20_util/default_delete/void_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdefault_delete%2Fvoid_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdefault_delete%2Fvoid_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdefault_delete%2Fvoid_neg.cc?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -25,5 +25,5 @@ void test01()\n {\n   std::default_delete<void> d;\n   d(nullptr);   // { dg-error \"here\" }\n-  // { dg-error \"incomplete\" \"\" { target *-*-* } 81 }\n+  // { dg-error \"delete pointer to incomplete type\" \"\" { target *-*-* } 0 }\n }"}, {"sha": "7946effcf3af3eaf60cc339172c63de450e492a2", "filename": "libstdc++-v3/testsuite/20_util/specialized_algorithms/uninitialized_copy/constrained.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_copy%2Fconstrained.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_copy%2Fconstrained.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_copy%2Fconstrained.cc?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -25,6 +25,7 @@\n #include <span>\n #include <string>\n #include <vector>\n+#include <utility>\n \n #include <testsuite_hooks.h>\n #include <testsuite_iterators.h>"}, {"sha": "7267738a4af0802e04cb6f4dd76082d2ef06b143", "filename": "libstdc++-v3/testsuite/20_util/specialized_algorithms/uninitialized_default_construct/constrained.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_default_construct%2Fconstrained.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_default_construct%2Fconstrained.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_default_construct%2Fconstrained.cc?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -25,6 +25,7 @@\n #include <span>\n #include <string>\n #include <vector>\n+#include <utility>\n \n #include <testsuite_hooks.h>\n #include <testsuite_iterators.h>"}, {"sha": "8759d042bb60fa0607f111567bff99dc6815e43a", "filename": "libstdc++-v3/testsuite/20_util/specialized_algorithms/uninitialized_move/constrained.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_move%2Fconstrained.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_move%2Fconstrained.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_move%2Fconstrained.cc?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -25,6 +25,7 @@\n #include <span>\n #include <string>\n #include <vector>\n+#include <utility>\n \n #include <testsuite_hooks.h>\n #include <testsuite_iterators.h>"}, {"sha": "164d9ca667b30adfd4b3addd0202f6c3f76424d0", "filename": "libstdc++-v3/testsuite/20_util/specialized_algorithms/uninitialized_value_construct/constrained.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_value_construct%2Fconstrained.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_value_construct%2Fconstrained.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Funinitialized_value_construct%2Fconstrained.cc?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -25,6 +25,7 @@\n #include <span>\n #include <string>\n #include <vector>\n+#include <utility>\n \n #include <testsuite_hooks.h>\n #include <testsuite_iterators.h>"}, {"sha": "b85199e693fd3e5984947db3231d9f8218af53d2", "filename": "libstdc++-v3/testsuite/23_containers/vector/cons/destructible_debug_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2Fdestructible_debug_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16158c96496b537194111526d25e19f268d613b6/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2Fdestructible_debug_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcons%2Fdestructible_debug_neg.cc?ref=16158c96496b537194111526d25e19f268d613b6", "patch": "@@ -46,7 +46,7 @@ test02()\n // { dg-error \"value type is destructible\" \"\" { target *-*-* } 0 }\n \n // In Debug Mode the \"required from here\" errors come from <debug/vector>\n-// { dg-error \"required from here\" \"\" { target *-*-* } 173 }\n+// { dg-error \"required from here\" \"\" { target *-*-* } 172 }\n \n // Needed because of PR c++/92193\n // { dg-prune-output \"deleted function\" }"}]}