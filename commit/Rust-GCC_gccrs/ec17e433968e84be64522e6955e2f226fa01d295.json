{"sha": "ec17e433968e84be64522e6955e2f226fa01d295", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMxN2U0MzM5NjhlODRiZTY0NTIyZTY5NTVlMmYyMjZmYTAxZDI5NQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-11-13T12:28:54Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-11-13T12:28:54Z"}, "message": "Fix memory leaks in graphite\n\n\t* graphite-poly.c (free_scop): Release scop->drs vector.\n\t* graphite-scop-detection.c (scop_detection::harmful_stmt_in_region):\n\tRelease dom vector.\n\t(try_generate_gimple_bb): Use vNULL as a default initialization\n\tfor vectors.\n\nFrom-SVN: r230312", "tree": {"sha": "81fe881afee0e3d324dd6e666a0fcb37af25dd66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81fe881afee0e3d324dd6e666a0fcb37af25dd66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec17e433968e84be64522e6955e2f226fa01d295", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec17e433968e84be64522e6955e2f226fa01d295", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec17e433968e84be64522e6955e2f226fa01d295", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec17e433968e84be64522e6955e2f226fa01d295/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c9ab724f84ee63a89e95a8b1995e30aed253d295", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9ab724f84ee63a89e95a8b1995e30aed253d295", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9ab724f84ee63a89e95a8b1995e30aed253d295"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "9c3e6dff8a0a74f9f45e342c4eddbee9bfa6e4a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec17e433968e84be64522e6955e2f226fa01d295/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec17e433968e84be64522e6955e2f226fa01d295/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec17e433968e84be64522e6955e2f226fa01d295", "patch": "@@ -1,3 +1,11 @@\n+2015-11-13  Martin Liska  <mliska@suse.cz>\n+\n+\t* graphite-poly.c (free_scop): Release scop->drs vector.\n+\t* graphite-scop-detection.c (scop_detection::harmful_stmt_in_region):\n+\tRelease dom vector.\n+\t(try_generate_gimple_bb): Use vNULL as a default initialization\n+\tfor vectors.\n+\n 2015-11-13  Martin Liska  <mliska@suse.cz>\n \n \tPR ipa/68311"}, {"sha": "809670ab3308901a141d20ccbb5695acdcf53f8d", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec17e433968e84be64522e6955e2f226fa01d295/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec17e433968e84be64522e6955e2f226fa01d295/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=ec17e433968e84be64522e6955e2f226fa01d295", "patch": "@@ -328,6 +328,7 @@ free_scop (scop_p scop)\n     free_poly_bb (pbb);\n \n   scop->pbbs.release ();\n+  scop->drs.release ();\n \n   isl_set_free (scop->param_context);\n   isl_union_map_free (scop->must_raw);"}, {"sha": "b5298d7e0a2ee14cfc30521903411fff9d105eb1", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec17e433968e84be64522e6955e2f226fa01d295/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec17e433968e84be64522e6955e2f226fa01d295/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=ec17e433968e84be64522e6955e2f226fa01d295", "patch": "@@ -522,6 +522,11 @@ class scop_detection\n public:\n   scop_detection () : scops (vNULL) {}\n \n+  ~scop_detection ()\n+  {\n+    scops.release ();\n+  }\n+\n   /* A marker for invalid sese_l.  */\n   static sese_l invalid_sese;\n \n@@ -1065,13 +1070,20 @@ scop_detection::harmful_stmt_in_region (sese_l scop) const\n \n       /* The basic block should not be part of an irreducible loop.  */\n       if (bb->flags & BB_IRREDUCIBLE_LOOP)\n-        return true;\n+\t{\n+\t  dom.release ();\n+\t  return true;\n+\t}\n \n       if (harmful_stmt_in_bb (scop, bb))\n-\treturn true;\n+\t{\n+\t  dom.release ();\n+\t  return true;\n+\t}\n     }\n \n-    return false;\n+  dom.release ();\n+  return false;\n }\n \n /* Returns true if S1 subsumes/surrounds S2.  */\n@@ -1749,12 +1761,9 @@ graphite_find_cross_bb_scalar_vars (scop_p scop, gimple *stmt,\n static gimple_poly_bb_p\n try_generate_gimple_bb (scop_p scop, basic_block bb)\n {\n-  vec<data_reference_p> drs;\n-  drs.create (3);\n-  vec<tree> writes;\n-  writes.create (3);\n-  vec<scalar_use> reads;\n-  reads.create (3);\n+  vec<data_reference_p> drs = vNULL;\n+  vec<tree> writes = vNULL;\n+  vec<scalar_use> reads = vNULL;\n \n   sese_l region = scop->scop_info->region;\n   loop_p nest = outermost_loop_in_sese (region, bb);"}]}