{"sha": "9e15ef052036441d9cd932891c2176d2a12f3d7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUxNWVmMDUyMDM2NDQxZDljZDkzMjg5MWMyMTc2ZDJhMTJmM2Q3YQ==", "commit": {"author": {"name": "Dave Love", "email": "fx@gnu.org", "date": "1999-10-12T08:39:35Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-10-12T08:39:35Z"}, "message": "aclocal.m4: Re-write, defining LIBU77_GETTIMEOFDAY, not LIBU77_HAVE_STRUCT_TIMEZONE.\n\n        * libU77/aclocal.m4: Re-write, defining LIBU77_GETTIMEOFDAY, not\n        LIBU77_HAVE_STRUCT_TIMEZONE.\n\n        * libU77/configure.in: Use LIBU77_GETTIMEOFDAY, not\n        LIBU77_HAVE_STRUCT_TIMEZONE.  Don't check for gettimeofday\n        separately.\n\n        * libU77/datetime_.c (G77_date_and_time_0): Use\n        GETTIMEOFDAY_ONE_ARGUMENT.\n\nFrom-SVN: r29917", "tree": {"sha": "afea8f99cf901655279f903d5a8387f390d0590d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afea8f99cf901655279f903d5a8387f390d0590d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e15ef052036441d9cd932891c2176d2a12f3d7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e15ef052036441d9cd932891c2176d2a12f3d7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e15ef052036441d9cd932891c2176d2a12f3d7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e15ef052036441d9cd932891c2176d2a12f3d7a/comments", "author": {"login": "loveshack", "id": 6197299, "node_id": "MDQ6VXNlcjYxOTcyOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/6197299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loveshack", "html_url": "https://github.com/loveshack", "followers_url": "https://api.github.com/users/loveshack/followers", "following_url": "https://api.github.com/users/loveshack/following{/other_user}", "gists_url": "https://api.github.com/users/loveshack/gists{/gist_id}", "starred_url": "https://api.github.com/users/loveshack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loveshack/subscriptions", "organizations_url": "https://api.github.com/users/loveshack/orgs", "repos_url": "https://api.github.com/users/loveshack/repos", "events_url": "https://api.github.com/users/loveshack/events{/privacy}", "received_events_url": "https://api.github.com/users/loveshack/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6c7318be0ffa7b4f8b6b3f860a0fa9d65e0ab967", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c7318be0ffa7b4f8b6b3f860a0fa9d65e0ab967", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c7318be0ffa7b4f8b6b3f860a0fa9d65e0ab967"}], "stats": {"total": 312, "additions": 261, "deletions": 51}, "files": [{"sha": "94668e03f10f8a7059b09b0d52e2b2b83a75f3ec", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e15ef052036441d9cd932891c2176d2a12f3d7a/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e15ef052036441d9cd932891c2176d2a12f3d7a/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=9e15ef052036441d9cd932891c2176d2a12f3d7a", "patch": "@@ -1,3 +1,15 @@\n+1999-10-22  Dave Love  <fx@gnu.org>\n+\n+\t* libU77/aclocal.m4: Re-write, defining LIBU77_GETTIMEOFDAY, not\n+\tLIBU77_HAVE_STRUCT_TIMEZONE.\n+\n+\t* libU77/configure.in: Use LIBU77_GETTIMEOFDAY, not\n+\tLIBU77_HAVE_STRUCT_TIMEZONE.  Don't check for gettimeofday\n+\tseparately.\n+\n+\t* libU77/datetime_.c (G77_date_and_time_0): Use\n+\tGETTIMEOFDAY_ONE_ARGUMENT.\n+\n Tue Sep 14 01:44:01 1999  Marc Espie <espie@cvs.openbsd.org>\n \n \t* Makefile.in:  Prepend $(SHELL) to move-if-change calls."}, {"sha": "b9a74fd82f6125dcc86072fc9f25a35ed4455a40", "filename": "libf2c/libU77/aclocal.m4", "status": "modified", "additions": 64, "deletions": 16, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e15ef052036441d9cd932891c2176d2a12f3d7a/libf2c%2FlibU77%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e15ef052036441d9cd932891c2176d2a12f3d7a/libf2c%2FlibU77%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Faclocal.m4?ref=9e15ef052036441d9cd932891c2176d2a12f3d7a", "patch": "@@ -1,16 +1,64 @@\n-dnl See whether we have struct timezone\n-dnl LIBU77_HAVE_STRUCT_TIMEZONE\n-AC_DEFUN(LIBU77_HAVE_STRUCT_TIMEZONE,\n-[AC_MSG_CHECKING([whether struct timezone exists])\n-AC_CACHE_VAL(libu77_cv_have_struct_timezone,\n-[AC_TRY_COMPILE([#include <sys/time.h>],\n-[struct timezone tz;],\n-libu77_ac_have_struct_timezone=yes, libu77_ac_have_struct_timezone=no)])\n-if test $libu77_ac_have_struct_timezone = yes; then\n-  AC_MSG_RESULT(yes)\n-  AC_DEFINE_UNQUOTED(HAVE_STRUCT_TIMEZONE)\n-else\n-  AC_MSG_RESULT(no)\n-fi\n-])dnl\n-\n+dnl Check:\n+dnl * If we have gettimeofday;\n+dnl * If we have struct timezone for use in calling it;\n+dnl * If calling it with a timezone pointer actually works -- this is deemed\n+dnl   obsolete or undefined on some systems which say you should use a null\n+dnl   pointer -- and undefine HAVE_TIMEZONE if so;\n+dnl * Whether it only takes one arg.\n+AC_DEFUN(LIBU77_GETTIMEOFDAY, [\n+  AC_CHECK_FUNCS(gettimeofday)\n+  if test \"$ac_cv_func_gettimeofday\" = yes; then\n+    AC_CACHE_CHECK([for struct timezone], g77_cv_struct_timezone,\n+      [AC_TRY_COMPILE([#include <sys/time.h>],\n+      [struct timezone tz;],\n+      g77_cv_struct_timezone=yes, g77_cv_struct_timezone=no)])\n+    if test $g77_cv_struct_timezone = yes; then\n+      dnl It may be that we can't call gettimeofday with a non-null pointer.\n+      dnl In that case we'll lie about struct timezone.\n+      AC_TRY_RUN([\n+#ifdef TIME_WITH_SYS_TIME\n+#include <sys/time.h>\n+#include <time.h>\n+#else\n+#ifdef HAVE_SYS_TIME_H\n+#include <sys/time.h>\n+#else\n+#include <time.h>\n+#endif\n+#endif\n+main ()\n+{\n+  struct timeval time;\n+  struct timezone dummy;\n+  if (gettimeofday (&time, &dummy))\n+    exit (1);\n+  else\n+    exit (0);\n+}],\n+      [AC_DEFINE(HAVE_TIMEZONE)], ,[AC_DEFINE(HAVE_TIMEZONE)])\n+    fi\n+    AC_REQUIRE([AC_HEADER_TIME])\n+    AC_CACHE_CHECK(whether gettimeofday can accept two arguments,\n+      emacs_cv_gettimeofday_two_arguments,\n+      AC_TRY_LINK([\n+#ifdef TIME_WITH_SYS_TIME\n+#include <sys/time.h>\n+#include <time.h>\n+#else\n+#ifdef HAVE_SYS_TIME_H\n+#include <sys/time.h>\n+#else\n+#include <time.h>\n+#endif\n+#endif\n+      ],\n+      [\n+      struct timeval time;\n+      struct timezone dummy;\n+      gettimeofday (&time, &dummy);],\n+      emacs_cv_gettimeofday_two_arguments=yes,\n+      emacs_cv_gettimeofday_two_arguments=no))\n+    if test $emacs_cv_gettimeofday_two_arguments = no; then\n+      AC_DEFINE(GETTIMEOFDAY_ONE_ARGUMENT)\n+    fi\n+  fi])"}, {"sha": "b9a3b22e05e638b811de05a356c70524e05466f2", "filename": "libf2c/libU77/configure", "status": "modified", "additions": 162, "deletions": 21, "changes": 183, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e15ef052036441d9cd932891c2176d2a12f3d7a/libf2c%2FlibU77%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e15ef052036441d9cd932891c2176d2a12f3d7a/libf2c%2FlibU77%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fconfigure?ref=9e15ef052036441d9cd932891c2176d2a12f3d7a", "patch": "@@ -1448,16 +1448,15 @@ fi\n \n \n for ac_func in symlink getcwd getwd lstat gethostname strerror clock \\\n-  getrusage times alarm getlogin getgid getuid kill link ttyname \\\n-  gettimeofday\n+  getrusage times alarm getlogin getgid getuid kill link ttyname\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1456: checking for $ac_func\" >&5\n+echo \"configure:1455: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1461 \"configure\"\n+#line 1460 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1480,7 +1479,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1484: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1483: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1504,46 +1503,188 @@ else\n fi\n done\n \n-test $ac_cv_func_symlink = yes && MAYBES=\"$MAYBES symlnk_.o\"\n-test $ac_cv_func_lstat = yes && MAYBES=\"$MAYBES lstat_.o\"\n-test $ac_cv_func_gethostname = yes && MAYBES=\"$MAYBES hostnm_.o\"\n-test $ac_cv_func_clock = yes && MAYBES=\"$MAYBES mclock_.o\"\n \n \n-echo $ac_n \"checking whether struct timezone exists\"\"... $ac_c\" 1>&6\n-echo \"configure:1515: checking whether struct timezone exists\" >&5\n-if eval \"test \\\"`echo '$''{'libu77_cv_have_struct_timezone'+set}'`\\\" = set\"; then\n+  for ac_func in gettimeofday\n+do\n+echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n+echo \"configure:1512: checking for $ac_func\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1520 \"configure\"\n+#line 1517 \"configure\"\n #include \"confdefs.h\"\n-#include <sys/time.h>\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char $ac_func(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char $ac_func();\n+\n int main() {\n-struct timezone tz;\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_$ac_func) || defined (__stub___$ac_func)\n+choke me\n+#else\n+$ac_func();\n+#endif\n+\n ; return 0; }\n EOF\n-if { (eval echo configure:1527: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1540: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n-  libu77_ac_have_struct_timezone=yes\n+  eval \"ac_cv_func_$ac_func=yes\"\n else\n   echo \"configure: failed program was:\" >&5\n   cat conftest.$ac_ext >&5\n   rm -rf conftest*\n-  libu77_ac_have_struct_timezone=no\n+  eval \"ac_cv_func_$ac_func=no\"\n fi\n rm -f conftest*\n fi\n \n-if test $libu77_ac_have_struct_timezone = yes; then\n+if eval \"test \\\"`echo '$ac_cv_func_'$ac_func`\\\" = yes\"; then\n   echo \"$ac_t\"\"yes\" 1>&6\n+    ac_tr_func=HAVE_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n   cat >> confdefs.h <<EOF\n-#define HAVE_STRUCT_TIMEZONE 1\n+#define $ac_tr_func 1\n EOF\n-\n+ \n else\n   echo \"$ac_t\"\"no\" 1>&6\n fi\n+done\n+\n+  if test \"$ac_cv_func_gettimeofday\" = yes; then\n+    echo $ac_n \"checking for struct timezone\"\"... $ac_c\" 1>&6\n+echo \"configure:1566: checking for struct timezone\" >&5\n+if eval \"test \\\"`echo '$''{'g77_cv_struct_timezone'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1571 \"configure\"\n+#include \"confdefs.h\"\n+#include <sys/time.h>\n+int main() {\n+struct timezone tz;\n+; return 0; }\n+EOF\n+if { (eval echo configure:1578: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+  rm -rf conftest*\n+  g77_cv_struct_timezone=yes\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  g77_cv_struct_timezone=no\n+fi\n+rm -f conftest*\n+fi\n+\n+echo \"$ac_t\"\"$g77_cv_struct_timezone\" 1>&6\n+    if test $g77_cv_struct_timezone = yes; then\n+                  if test \"$cross_compiling\" = yes; then\n+  cat >> confdefs.h <<\\EOF\n+#define HAVE_TIMEZONE 1\n+EOF\n+\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1599 \"configure\"\n+#include \"confdefs.h\"\n+\n+#ifdef TIME_WITH_SYS_TIME\n+#include <sys/time.h>\n+#include <time.h>\n+#else\n+#ifdef HAVE_SYS_TIME_H\n+#include <sys/time.h>\n+#else\n+#include <time.h>\n+#endif\n+#endif\n+main ()\n+{\n+  struct timeval time;\n+  struct timezone dummy;\n+  if (gettimeofday (&time, &dummy))\n+    exit (1);\n+  else\n+    exit (0);\n+}\n+EOF\n+if { (eval echo configure:1622: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+then\n+  cat >> confdefs.h <<\\EOF\n+#define HAVE_TIMEZONE 1\n+EOF\n+\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+fi\n+rm -fr conftest*\n+fi\n+\n+    fi\n+    \n+    echo $ac_n \"checking whether gettimeofday can accept two arguments\"\"... $ac_c\" 1>&6\n+echo \"configure:1638: checking whether gettimeofday can accept two arguments\" >&5\n+if eval \"test \\\"`echo '$''{'emacs_cv_gettimeofday_two_arguments'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1643 \"configure\"\n+#include \"confdefs.h\"\n+\n+#ifdef TIME_WITH_SYS_TIME\n+#include <sys/time.h>\n+#include <time.h>\n+#else\n+#ifdef HAVE_SYS_TIME_H\n+#include <sys/time.h>\n+#else\n+#include <time.h>\n+#endif\n+#endif\n+      \n+int main() {\n+\n+      struct timeval time;\n+      struct timezone dummy;\n+      gettimeofday (&time, &dummy);\n+; return 0; }\n+EOF\n+if { (eval echo configure:1664: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+  rm -rf conftest*\n+  emacs_cv_gettimeofday_two_arguments=yes\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  emacs_cv_gettimeofday_two_arguments=no\n+fi\n+rm -f conftest*\n+fi\n+\n+echo \"$ac_t\"\"$emacs_cv_gettimeofday_two_arguments\" 1>&6\n+    if test $emacs_cv_gettimeofday_two_arguments = no; then\n+      cat >> confdefs.h <<\\EOF\n+#define GETTIMEOFDAY_ONE_ARGUMENT 1\n+EOF\n+\n+    fi\n+  fi\n+\n+test $ac_cv_func_symlink = yes && MAYBES=\"$MAYBES symlnk_.o\"\n+test $ac_cv_func_lstat = yes && MAYBES=\"$MAYBES lstat_.o\"\n+test $ac_cv_func_gethostname = yes && MAYBES=\"$MAYBES hostnm_.o\"\n+test $ac_cv_func_clock = yes && MAYBES=\"$MAYBES mclock_.o\"\n \n \n "}, {"sha": "460e3dc8f0e949b346c10a246affb185f0a5327d", "filename": "libf2c/libU77/configure.in", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e15ef052036441d9cd932891c2176d2a12f3d7a/libf2c%2FlibU77%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e15ef052036441d9cd932891c2176d2a12f3d7a/libf2c%2FlibU77%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fconfigure.in?ref=9e15ef052036441d9cd932891c2176d2a12f3d7a", "patch": "@@ -1,5 +1,5 @@\n # Process this file with autoconf to produce a configure script.\n-#   Copyright (C) 1995, 1998 Free Software Foundation, Inc.\n+#   Copyright (C) 1995, 1998, 1999 Free Software Foundation, Inc.\n #   Contributed by Dave Love (d.love@dl.ac.uk).\n #\n #This file is part of the GNU Fortran libU77 library.\n@@ -86,16 +86,19 @@ AC_CHECK_LIB(socket, gethostname, [LIBS=\"$LIBS -lsocket\"])\n dnl Checks for library functions.\n \n AC_CHECK_FUNCS(symlink getcwd getwd lstat gethostname strerror clock \\\n-  getrusage times alarm getlogin getgid getuid kill link ttyname \\\n-  gettimeofday)\n+  getrusage times alarm getlogin getgid getuid kill link ttyname)\n+\n+dnl The standard autoconf HAVE_STRUCT_TIMEZONE doesn't actually check\n+dnl for struct timezone, as you might think.  We also need to check how\n+dnl to call gettimeofday if we have it.\n+LIBU77_GETTIMEOFDAY\n+\n test $ac_cv_func_symlink = yes && MAYBES=\"$MAYBES symlnk_.o\"\n test $ac_cv_func_lstat = yes && MAYBES=\"$MAYBES lstat_.o\"\n test $ac_cv_func_gethostname = yes && MAYBES=\"$MAYBES hostnm_.o\"\n test $ac_cv_func_clock = yes && MAYBES=\"$MAYBES mclock_.o\"\n AC_SUBST(MAYBES)\n \n-LIBU77_HAVE_STRUCT_TIMEZONE\n-\n AC_SUBST(CROSS)\n AC_SUBST(RANLIB)\n AC_SUBST(RANLIB_TEST)"}, {"sha": "1ea77319e9684a1318b2377b5f400d2fbd17cde2", "filename": "libf2c/libU77/datetime_.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e15ef052036441d9cd932891c2176d2a12f3d7a/libf2c%2FlibU77%2Fdatetime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e15ef052036441d9cd932891c2176d2a12f3d7a/libf2c%2FlibU77%2Fdatetime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fdatetime_.c?ref=9e15ef052036441d9cd932891c2176d2a12f3d7a", "patch": "@@ -57,24 +57,30 @@ int G77_date_and_time_0 (char *date, char *fftime, char *zone,\n   vals[4] = ltime.tm_hour;\n   vals[5] = ltime.tm_min;\n   vals[6] = ltime.tm_sec;\n-  vals[7] = 0;                  /* no STDC way to get this */\n+  vals[7] = 0;                  /* no STDC/POSIX way to get this */\n   /* GNUish way; maybe use `ftime' on other systems. */\n #if HAVE_GETTIMEOFDAY\n   {\n     struct timeval tp;\n-#if HAVE_STRUCT_TIMEZONE\n+#  if GETTIMEOFDAY_ONE_ARGUMENT\n+    if (! gettimeofday (&tp))\n+#  else\n+#    if HAVE_STRUCT_TIMEZONE\n     struct timezone tzp;\n-    /* This is still not strictly correct on some systems such as HPUX, \n-       which does have struct timezone, but gettimeofday takes void* as \n-       the 2nd arg.  However, the effect of passing anything other than a null \n-       pointer is unspecified on HPUX. */\n+    /* Some systems such as HPUX, do have struct timezone, but\n+       gettimeofday takes void* as the 2nd arg.  However, the effect\n+       of passing anything other than a null pointer is unspecified on\n+       HPUX.  Configure checks if gettimeofday actually fails with a\n+       non-NULL arg and pretends that struct timezone is missing if it\n+       does fail.  */\n     if (! gettimeofday (&tp, &tzp))\n-#else\n+#    else\n     if (! gettimeofday (&tp, (void *) 0))\n-#endif\n+#    endif /* HAVE_STRUCT_TIMEZONE */\n+#  endif /* GETTIMEOFDAY_ONE_ARGUMENT */\n       vals[7] = tp.tv_usec/1000;\n   }\n-#endif\n+#endif /* HAVE_GETTIMEOFDAY */\n   if (values)\t\t\t/* null pointer for missing optional */\n     for (i=0; i<=7; i++)\n       values[i] = vals[i];"}]}