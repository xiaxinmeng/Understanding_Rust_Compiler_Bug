{"sha": "5bd4b19068c8ab8b8324fd3b8f20c4c3cb5cd277", "node_id": "C_kwDOANBUbNoAKDViZDRiMTkwNjhjOGFiOGI4MzI0ZmQzYjhmMjBjNGMzY2I1Y2QyNzc", "commit": {"author": {"name": "goar5670", "email": "mahadelr19@gmail.com", "date": "2023-03-06T22:25:39Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-03-08T10:26:22Z"}, "message": "typecheck: Add basic typechecking for ReferenceType\n\ngcc/rust/ChangeLog:\n\t* hir/tree/rust-hir-pattern.h (HIR::ReferencePattern):\n\tadded get_referenced_pattern function.\n\t* resolve/rust-ast-resolve-pattern.h\n\t(Resolve::PatternDeclaration): add visit function for\n\tAST::ReferencePattern\n\t* typecheck/rust-hir-type-check-pattern.cc\n\t(Resolver::TypeCheckPattern): add visit function for\n\tHIR::ReferencePattern\n\ngcc/testsuite/ChangeLog:\n\t* rust/compile/ref_pattern_fn_param.rs: New test.\n\nSigned-off-by: Mahmoud Mohamed <mahadelr19@gmail.com>", "tree": {"sha": "033c8c7314684f62bd1d5e0f19ef5284311e1e73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/033c8c7314684f62bd1d5e0f19ef5284311e1e73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bd4b19068c8ab8b8324fd3b8f20c4c3cb5cd277", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bd4b19068c8ab8b8324fd3b8f20c4c3cb5cd277", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bd4b19068c8ab8b8324fd3b8f20c4c3cb5cd277", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bd4b19068c8ab8b8324fd3b8f20c4c3cb5cd277/comments", "author": {"login": "goar5670", "id": 40712841, "node_id": "MDQ6VXNlcjQwNzEyODQx", "avatar_url": "https://avatars.githubusercontent.com/u/40712841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goar5670", "html_url": "https://github.com/goar5670", "followers_url": "https://api.github.com/users/goar5670/followers", "following_url": "https://api.github.com/users/goar5670/following{/other_user}", "gists_url": "https://api.github.com/users/goar5670/gists{/gist_id}", "starred_url": "https://api.github.com/users/goar5670/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goar5670/subscriptions", "organizations_url": "https://api.github.com/users/goar5670/orgs", "repos_url": "https://api.github.com/users/goar5670/repos", "events_url": "https://api.github.com/users/goar5670/events{/privacy}", "received_events_url": "https://api.github.com/users/goar5670/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a33a5cf6b3c04500ecda83116e36b6021f98796", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a33a5cf6b3c04500ecda83116e36b6021f98796", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a33a5cf6b3c04500ecda83116e36b6021f98796"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "63725fa79d843ce2b1e3784f6a7aa403afd94506", "filename": "gcc/rust/hir/tree/rust-hir-pattern.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd4b19068c8ab8b8324fd3b8f20c4c3cb5cd277/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-pattern.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd4b19068c8ab8b8324fd3b8f20c4c3cb5cd277/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-pattern.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-pattern.h?ref=5bd4b19068c8ab8b8324fd3b8f20c4c3cb5cd277", "patch": "@@ -477,6 +477,12 @@ class ReferencePattern : public Pattern\n     return PatternType::REFERENCE;\n   }\n \n+  std::unique_ptr<Pattern> &get_referenced_pattern ()\n+  {\n+    rust_assert (pattern != nullptr);\n+    return pattern;\n+  }\n+\n protected:\n   /* Use covariance to implement clone function as returning this object rather\n    * than base */"}, {"sha": "12d2b5986e80d1a26818a9537b4d3826d429179f", "filename": "gcc/rust/resolve/rust-ast-resolve-pattern.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd4b19068c8ab8b8324fd3b8f20c4c3cb5cd277/gcc%2Frust%2Fresolve%2Frust-ast-resolve-pattern.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd4b19068c8ab8b8324fd3b8f20c4c3cb5cd277/gcc%2Frust%2Fresolve%2Frust-ast-resolve-pattern.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-pattern.h?ref=5bd4b19068c8ab8b8324fd3b8f20c4c3cb5cd277", "patch": "@@ -75,6 +75,11 @@ class PatternDeclaration : public ResolverBase\n     pattern.get_pattern_in_parens ()->accept_vis (*this);\n   }\n \n+  void visit (AST::ReferencePattern &pattern) override\n+  {\n+    pattern.get_referenced_pattern ()->accept_vis (*this);\n+  }\n+\n   // cases in a match expression\n   void visit (AST::PathInExpression &pattern) override;\n "}, {"sha": "e7ed54250a079b7b33a37dd80a392aee1b65654c", "filename": "gcc/rust/typecheck/rust-hir-type-check-pattern.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd4b19068c8ab8b8324fd3b8f20c4c3cb5cd277/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-pattern.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd4b19068c8ab8b8324fd3b8f20c4c3cb5cd277/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-pattern.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-pattern.cc?ref=5bd4b19068c8ab8b8324fd3b8f20c4c3cb5cd277", "patch": "@@ -410,8 +410,13 @@ TypeCheckPattern::visit (HIR::QualifiedPathInExpression &pattern)\n void\n TypeCheckPattern::visit (HIR::ReferencePattern &pattern)\n {\n-  rust_sorry_at (pattern.get_locus (),\n-\t\t \"type checking qualified path patterns not supported\");\n+  if (parent->get_kind () != TyTy::TypeKind::REF)\n+    rust_error_at (pattern.get_locus (), \"expected %s, found reference\",\n+\t\t   parent->as_string ().c_str ());\n+\n+  TyTy::ReferenceType *ref_ty_ty = static_cast<TyTy::ReferenceType *> (parent);\n+  TypeCheckPattern::Resolve (pattern.get_referenced_pattern ().get (),\n+\t\t\t     ref_ty_ty->get_base ());\n }\n \n void"}, {"sha": "67ea033a2b23b79c2747d316b85cc348990fc222", "filename": "gcc/testsuite/rust/compile/ref_pattern_fn_param.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bd4b19068c8ab8b8324fd3b8f20c4c3cb5cd277/gcc%2Ftestsuite%2Frust%2Fcompile%2Fref_pattern_fn_param.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bd4b19068c8ab8b8324fd3b8f20c4c3cb5cd277/gcc%2Ftestsuite%2Frust%2Fcompile%2Fref_pattern_fn_param.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fref_pattern_fn_param.rs?ref=5bd4b19068c8ab8b8324fd3b8f20c4c3cb5cd277", "patch": "@@ -0,0 +1 @@\n+fn f(&b: i32) {} // { dg-error \"expected i32, found reference\" }"}]}