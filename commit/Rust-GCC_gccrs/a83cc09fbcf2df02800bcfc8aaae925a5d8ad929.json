{"sha": "a83cc09fbcf2df02800bcfc8aaae925a5d8ad929", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTgzY2MwOWZiY2YyZGYwMjgwMGJjZmM4YWFhZTkyNWE1ZDhhZDkyOQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-01-12T18:27:19Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-01-12T18:27:19Z"}, "message": "Support for .sdata/.sbss/.sdata2/.sbss2\n\nFrom-SVN: r10968", "tree": {"sha": "b6225572c3b80dc4fcfede492cdc7ca4fd09a579", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6225572c3b80dc4fcfede492cdc7ca4fd09a579"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a83cc09fbcf2df02800bcfc8aaae925a5d8ad929", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a83cc09fbcf2df02800bcfc8aaae925a5d8ad929", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a83cc09fbcf2df02800bcfc8aaae925a5d8ad929", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a83cc09fbcf2df02800bcfc8aaae925a5d8ad929/comments", "author": null, "committer": null, "parents": [{"sha": "3c0f5ae642ea75acc61853a642f557109f3bb9e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c0f5ae642ea75acc61853a642f557109f3bb9e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c0f5ae642ea75acc61853a642f557109f3bb9e4"}], "stats": {"total": 118, "additions": 92, "deletions": 26}, "files": [{"sha": "a9c605721c600753e9d23b5085d658bfd1ad3f06", "filename": "gcc/config/rs6000/eabi-ci.asm", "status": "modified", "additions": 28, "deletions": 5, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a83cc09fbcf2df02800bcfc8aaae925a5d8ad929/gcc%2Fconfig%2Frs6000%2Feabi-ci.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a83cc09fbcf2df02800bcfc8aaae925a5d8ad929/gcc%2Fconfig%2Frs6000%2Feabi-ci.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi-ci.asm?ref=a83cc09fbcf2df02800bcfc8aaae925a5d8ad929", "patch": "@@ -50,27 +50,50 @@ __GOT_START__:\n _GLOBAL_OFFSET_TABLE_:\n _SDA_BASE_:\n \n-\t.section \".got1\",\"w\"\n+\t.section \".got1\",\"aw\"\n \t.globl\t__GOT1_START__\n \t.type\t__GOT1_START__,@object\n __GOT1_START__:\n \n-\t.section \".got2\",\"w\"\n+\t.section \".got2\",\"aw\"\n \t.globl\t__GOT2_START__\n \t.type\t__GOT2_START__,@object\n __GOT2_START__:\n \n-\t.section \".fixup\",\"w\"\n+\t.section \".fixup\",\"aw\"\n \t.globl\t__FIXUP_START__\n \t.type\t__FIXUP_START__,@object\n __FIXUP_START__:\n \n-\t.section \".ctors\",\"w\"\n+\t.section \".ctors\",\"aw\"\n \t.globl\t__CTOR_LIST__\n \t.type\t__CTOR_LIST__,@object\n __CTOR_LIST__:\n \n-\t.section \".dtors\",\"w\"\n+\t.section \".dtors\",\"aw\"\n \t.globl\t__DTOR_LIST__\n \t.type\t__DTOR_LIST__,@object\n __DTOR_LIST__:\n+\n+\t.section \".sdata\",\"aw\"\n+\t.globl\t__SDATA_START__\n+\t.type\t__SDATA_START__,@object\n+__SDATA_START__:\n+\n+\t.section \".sbss\",\"aw\"\n+\t.globl\t__SBSS_START__\n+\t.type\t__SBSS_START__,@object\n+__SBSS_START__:\n+\n+\t.section \".sdata2\",\"aw\"\n+\t.globl\t_SDA2_BASE_\n+\t.type\t_SDA2_BASE_,@object\n+\t.globl\t__SDATA2_START__\n+\t.type\t__SDATA2_START__,@object\n+__SDATA2_START__:\n+_SDA2_BASE_ = .+32768\n+\n+\t.section \".sbss2\",\"aw\"\n+\t.globl\t__SBSS2_START__\n+\t.type\t__SBSS2_START__,@object\n+__SBSS2_START__:"}, {"sha": "1d9b033175a3f87caaa6498026d95bba9be47557", "filename": "gcc/config/rs6000/eabi-cn.asm", "status": "modified", "additions": 33, "deletions": 6, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a83cc09fbcf2df02800bcfc8aaae925a5d8ad929/gcc%2Fconfig%2Frs6000%2Feabi-cn.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a83cc09fbcf2df02800bcfc8aaae925a5d8ad929/gcc%2Fconfig%2Frs6000%2Feabi-cn.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi-cn.asm?ref=a83cc09fbcf2df02800bcfc8aaae925a5d8ad929", "patch": "@@ -39,32 +39,59 @@\n \t.file\t\"crtn.s\"\n \t.ident\t\"GNU C crtn.s\"\n \n-\t.section \".got\",\"w\"\n+\t.section \".got\",\"aw\"\n \t.globl\t__GOT_END__\n \t.type\t__GOT_END__,@object\n __GOT_END__:\n \n-\t.section \".got1\",\"w\"\n+\t.section \".got1\",\"aw\"\n \t.globl\t__GOT1_END__\n \t.type\t__GOT1_END__,@object\n __GOT1_END__:\n \n-\t.section \".got2\",\"w\"\n+\t.section \".got2\",\"aw\"\n \t.globl\t__GOT2_END__\n \t.type\t__GOT2_END__,@object\n __GOT2_END__:\n \n-\t.section \".fixup\",\"w\"\n+\t.section \".fixup\",\"aw\"\n \t.globl\t__FIXUP_END__\n \t.type\t__FIXUP_END__,@object\n __FIXUP_END__:\n \n-\t.section \".ctors\",\"w\"\n+\t.section \".ctors\",\"aw\"\n \t.globl\t__CTOR_END__\n \t.type\t__CTOR_END__,@object\n __CTOR_END__:\n \n-\t.section \".dtors\",\"w\"\n+\t.section \".dtors\",\"aw\"\n \t.globl\t__DTOR_END__\n \t.type\t__DTOR_END__,@object\n __DTOR_END__:\n+\n+# Put a blrl instruction in the special .got.blrl section, which\n+# the GNU linker puts at _GLOBAL_OFFSET_TABLE-4, so that a program\n+# can find the _GLOBAL_OFFSET_TABLE_ address in a painless fashion.\n+\n+\t.section \".got.blrl\",\"awx\"\n+\tblrl\n+\n+\t.section \".sdata\",\"aw\"\n+\t.globl\t__SDATA_END__\n+\t.type\t__SDATA_END__,@object\n+__SDATA_END__:\n+\n+\t.section \".sbss\",\"aw\"\n+\t.globl\t__SBSS_END__\n+\t.type\t__SBSS_END__,@object\n+__SBSS_END__:\n+\n+\t.section \".sdata2\",\"aw\"\n+\t.globl\t__SDATA2_END__\n+\t.type\t__SDATA2_END__,@object\n+__SDATA2_END__:\n+\n+\t.section \".sbss2\",\"aw\"\n+\t.globl\t__SBSS2_END__\n+\t.type\t__SBSS2_END__,@object\n+__SBSS2_END__:"}, {"sha": "e5483ed759a7190149ee1bd6c34f5f0a15c79d4e", "filename": "gcc/config/rs6000/eabi.asm", "status": "modified", "additions": 31, "deletions": 15, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a83cc09fbcf2df02800bcfc8aaae925a5d8ad929/gcc%2Fconfig%2Frs6000%2Feabi.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a83cc09fbcf2df02800bcfc8aaae925a5d8ad929/gcc%2Fconfig%2Frs6000%2Feabi.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabi.asm?ref=a83cc09fbcf2df02800bcfc8aaae925a5d8ad929", "patch": "@@ -48,14 +48,23 @@\n .Ltable = .-.LCTOC1\n \t.long\t.LCTOC1\t\t\t\t/* address we are really at */\n \n-.Lgot = .-.LCTOC1\n-\t.long\t_GLOBAL_OFFSET_TABLE_\t\t/* normal GOT address */\n+.Lsda = .-.LCTOC1\n+\t.long\t_SDA_BASE_\t\t\t/* address of the first small data area */\n \n-.Lgots = .-.LCTOC1\n-\t.long\t__GOT_START__\t\t\t/* start of .got section */\n+.Lsdas = .-.LCTOC1\n+\t.long\t__SDATA_START__\t\t\t/* start of .sdata/.sbss section */\n \n-.Lgote = .-.LCTOC1\n-\t.long\t__GOT_END__\t\t\t/* end of .got section */\n+.Lsdae = .-.LCTOC1\n+\t.long\t__SBSS_END__\t\t\t/* end of .sdata/.sbss section */\n+\n+.Lsda2 = .-.LCTOC1\n+\t.long\t_SDA2_BASE_\t\t\t/* address of the second small data area */\n+\n+.Lsda2s = .-.LCTOC1\n+\t.long\t__SDATA2_START__\t\t/* start of .sdata2/.sbss2 section */\n+\n+.Lsda2e = .-.LCTOC1\n+\t.long\t__SBSS2_END__\t\t\t/* end of .sdata2/.sbss2 section */\n \n .Lgot2s = .-.LCTOC1\n \t.long\t__GOT2_START__\t\t\t/* -mrelocatable GOT pointers start */\n@@ -110,20 +119,27 @@ FUNC_START(__eabi)\n \tstwx\t1,10,12\t\t\t\t/* store a non-zero value in the done flag */\n \tbne\t0,.Lreloc\t\t\t/* skip if we need to relocate */\n \n-/* Only load up register 2 if there is a .got section */\n+/* Only load up register 13 if there is a .sdata and/or .sbss section */\n \n-\tlwz\t3,.Lgots(11)\t\t\t/* start of .got section */\n-\tlwz\t4,.Lgote(11)\t\t\t/* end of .got section */\n-\tcmpw\t1,3,4\t\t\t\t/* .got section non-empty? */\n-\tbc\t12,6,.Ldone\n+\tlwz\t3,.Lsdas(11)\t\t\t/* start of .sdata/.sbss section */\n+\tlwz\t4,.Lsdae(11)\t\t\t/* end of .sdata/.sbss section */\n+\tcmpw\t1,3,4\t\t\t\t/* .sdata/.sbss section non-empty? */\n+\tbeq\t1,.Lsda2l\t\t\t/* skip loading r13 */\n+\n+\tlwz\t13,.Lsda(11)\t\t\t/* load r13 with _SDA_BASE address */\n+\n+/* Only load up register 2 if there is a .sdata2 and/or .sbss2 section */\n \n-/* Normal program, load up register 2 */\n+.Lsda2l:\t\n+\tlwz\t3,.Lsda2s(11)\t\t\t/* start of .sdata/.sbss section */\n+\tlwz\t4,.Lsda2e(11)\t\t\t/* end of .sdata/.sbss section */\n+\tcmpw\t1,3,4\t\t\t\t/* .sdata/.sbss section non-empty? */\n+\tbeq\t1,.Ldone\t\t\t/* skip loading r2 */\n \n-\tlwz\t2,.Lgot(11)\t\t\t/* normal GOT address (obsolete in register 2) */\n-\tmr\t13,2\t\t\t\t/* also same as _SDA_BASE_ (V.4 small data ptr) */\n+\tlwz\t2,.Lsda2(11)\t\t\t/* load r2 with _SDA2_BASE address */\n \tb\tFUNC_NAME(__do_global_ctors)\t/* do any C++ global constructors (which returns to caller) */\n \n-/* We need to relocate the .got2 pointers.  Don't load register 2 */\n+/* We need to relocate the .got2 pointers.  Don't load registers 2 or 13 */\n \n .Lreloc:\n \tlwz\t3,.Lgot2s(11)\t\t\t/* GOT pointers start */"}]}