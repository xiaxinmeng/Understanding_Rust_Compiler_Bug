{"sha": "8e70c271ec0d77772ffa04b7985d1599f064e963", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU3MGMyNzFlYzBkNzc3NzJmZmEwNGI3OTg1ZDE1OTlmMDY0ZTk2Mw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2009-10-02T03:52:05Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2009-10-02T03:52:05Z"}, "message": "re PR fortran/33197 (Fortran 2008: math functions)\n\n\tPR fortran/33197\n\t* gfortran.h (HAVE_mpc_arc): Define.\n\t* simplify.c (gfc_simplify_acos): Handle complex acos.\n\t(gfc_simplify_acosh): Likewise for acosh.\n\t(gfc_simplify_asin): Likewise for asin.\n\t(gfc_simplify_asinh): Likewise for asinh.\n\t(gfc_simplify_atan): Likewise for atan.\n\t(gfc_simplify_atanh): Likewise for atanh.\n\nFrom-SVN: r152394", "tree": {"sha": "408921fa9a67315131afa2c70e4eaade2e8ff08b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/408921fa9a67315131afa2c70e4eaade2e8ff08b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e70c271ec0d77772ffa04b7985d1599f064e963", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e70c271ec0d77772ffa04b7985d1599f064e963", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e70c271ec0d77772ffa04b7985d1599f064e963", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e70c271ec0d77772ffa04b7985d1599f064e963/comments", "author": null, "committer": null, "parents": [{"sha": "9a801c3884c8e8c8e4e2294c3e882d0b9f4e632c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a801c3884c8e8c8e4e2294c3e882d0b9f4e632c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a801c3884c8e8c8e4e2294c3e882d0b9f4e632c"}], "stats": {"total": 55, "additions": 52, "deletions": 3}, "files": [{"sha": "55386acffe09401659fa073018af45fbe1e781e5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e70c271ec0d77772ffa04b7985d1599f064e963/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e70c271ec0d77772ffa04b7985d1599f064e963/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8e70c271ec0d77772ffa04b7985d1599f064e963", "patch": "@@ -1,3 +1,14 @@\n+2009-10-01  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\tPR fortran/33197\n+\t* gfortran.h (HAVE_mpc_arc): Define.\n+\t* simplify.c (gfc_simplify_acos): Handle complex acos.\n+\t(gfc_simplify_acosh): Likewise for acosh.\n+\t(gfc_simplify_asin): Likewise for asin.\n+\t(gfc_simplify_asinh): Likewise for asinh.\n+\t(gfc_simplify_atan): Likewise for atan.\n+\t(gfc_simplify_atanh): Likewise for atanh.\n+\n 2009-10-01  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/41515"}, {"sha": "b40f01ba4bf05c5eec03b49473ff91f04555e9c6", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e70c271ec0d77772ffa04b7985d1599f064e963/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e70c271ec0d77772ffa04b7985d1599f064e963/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=8e70c271ec0d77772ffa04b7985d1599f064e963", "patch": "@@ -1616,6 +1616,9 @@ gfc_intrinsic_sym;\n # if MPC_VERSION >= MPC_VERSION_NUM(0,6,1)\n #  define HAVE_mpc_pow\n # endif\n+# if MPC_VERSION >= MPC_VERSION_NUM(0,7,1)\n+#  define HAVE_mpc_arc\n+# endif\n #else\n #define mpc_realref(X) ((X).r)\n #define mpc_imagref(X) ((X).i)"}, {"sha": "9856b2eabbd967e736e439f7273b914e0ad916b0", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 38, "deletions": 3, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e70c271ec0d77772ffa04b7985d1599f064e963/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e70c271ec0d77772ffa04b7985d1599f064e963/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=8e70c271ec0d77772ffa04b7985d1599f064e963", "patch": "@@ -745,16 +745,21 @@ gfc_simplify_acos (gfc_expr *x)\n \t\t       &x->where);\n \t    return &gfc_bad_expr;\n \t  }\n+\tresult = gfc_constant_result (x->ts.type, x->ts.kind, &x->where);\n+\tmpfr_acos (result->value.real, x->value.real, GFC_RND_MODE);\n \tbreak;\n       case BT_COMPLEX:\n+#ifdef HAVE_mpc_arc\n+\tresult = gfc_constant_result (x->ts.type, x->ts.kind, &x->where);\n+\tmpc_acos (result->value.complex, x->value.complex, GFC_MPC_RND_MODE);\n+\tbreak;\n+#else\n \treturn NULL;\n+#endif\n       default:\n \tgfc_internal_error (\"in gfc_simplify_acos(): Bad type\");\n     }\n \n-  result = gfc_constant_result (x->ts.type, x->ts.kind, &x->where);\n-\n-  mpfr_acos (result->value.real, x->value.real, GFC_RND_MODE);\n \n   return range_check (result, \"ACOS\");\n }\n@@ -781,7 +786,13 @@ gfc_simplify_acosh (gfc_expr *x)\n \tmpfr_acosh (result->value.real, x->value.real, GFC_RND_MODE);\n \tbreak;\n       case BT_COMPLEX:\n+#ifdef HAVE_mpc_arc\n+\tresult = gfc_constant_result (x->ts.type, x->ts.kind, &x->where);\n+\tmpc_acosh (result->value.complex, x->value.complex, GFC_MPC_RND_MODE);\n+\tbreak;\n+#else\n \treturn NULL;\n+#endif\n       default:\n \tgfc_internal_error (\"in gfc_simplify_acosh(): Bad type\");\n     }\n@@ -1043,7 +1054,13 @@ gfc_simplify_asin (gfc_expr *x)\n \tmpfr_asin (result->value.real, x->value.real, GFC_RND_MODE);\n \tbreak;\n       case BT_COMPLEX:\n+#ifdef HAVE_mpc_arc\n+\tresult = gfc_constant_result (x->ts.type, x->ts.kind, &x->where);\n+\tmpc_asin (result->value.complex, x->value.complex, GFC_MPC_RND_MODE);\n+\tbreak;\n+#else\n \treturn NULL;\n+#endif\n       default:\n \tgfc_internal_error (\"in gfc_simplify_asin(): Bad type\");\n     }\n@@ -1067,7 +1084,13 @@ gfc_simplify_asinh (gfc_expr *x)\n \tmpfr_asinh (result->value.real, x->value.real, GFC_RND_MODE);\n \tbreak;\n       case BT_COMPLEX:\n+#ifdef HAVE_mpc_arc\n+\tresult = gfc_constant_result (x->ts.type, x->ts.kind, &x->where);\n+\tmpc_asinh (result->value.complex, x->value.complex, GFC_MPC_RND_MODE);\n+\tbreak;\n+#else\n \treturn NULL;\n+#endif\n       default:\n \tgfc_internal_error (\"in gfc_simplify_asinh(): Bad type\");\n     }\n@@ -1091,7 +1114,13 @@ gfc_simplify_atan (gfc_expr *x)\n \tmpfr_atan (result->value.real, x->value.real, GFC_RND_MODE);\n \tbreak;\n       case BT_COMPLEX:\n+#ifdef HAVE_mpc_arc\n+\tresult = gfc_constant_result (x->ts.type, x->ts.kind, &x->where);\n+\tmpc_atan (result->value.complex, x->value.complex, GFC_MPC_RND_MODE);\n+\tbreak;\n+#else\n \treturn NULL;\n+#endif\n       default:\n \tgfc_internal_error (\"in gfc_simplify_atan(): Bad type\");\n     }\n@@ -1123,7 +1152,13 @@ gfc_simplify_atanh (gfc_expr *x)\n \tmpfr_atanh (result->value.real, x->value.real, GFC_RND_MODE);\n \tbreak;\n       case BT_COMPLEX:\n+#ifdef HAVE_mpc_arc\n+\tresult = gfc_constant_result (x->ts.type, x->ts.kind, &x->where);\n+\tmpc_atanh (result->value.complex, x->value.complex, GFC_MPC_RND_MODE);\n+\tbreak;\n+#else\n \treturn NULL;\n+#endif\n       default:\n \tgfc_internal_error (\"in gfc_simplify_atanh(): Bad type\");\n     }"}]}