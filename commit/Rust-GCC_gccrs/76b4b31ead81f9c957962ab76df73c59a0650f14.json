{"sha": "76b4b31ead81f9c957962ab76df73c59a0650f14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZiNGIzMWVhZDgxZjljOTU3OTYyYWI3NmRmNzNjNTlhMDY1MGYxNA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-05-07T11:44:09Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-05-07T11:44:09Z"}, "message": "Handle missing vfprintf() & _doprnt() functions with linked in modules,\n\nplus do some general cleanup of variable argument handling.\n        * aclocal.m4 (GCC_FUNC_VFPRINTF_DOPRNT): New macro.\n        * configure.in: Add a call to GCC_FUNC_VFPRINTF_DOPRNT.\n        (AC_CHECK_HEADERS): Remove unused check for varargs.h,sys/varargs.h.\n        (AC_CHECK_FUNCS): Remove unused check for vprintf.\n        * Makefile.in: Add support for linking in vfprintf.c and doprint.c.\n        (cccp.o): Depend on gansidecl.h.\n        (cexp.o): Likewise.\n        * cccp.c: Convert from using PRINTF_ALIST/PRINTF_DCL to VPROTO as\n        per the rest of gcc source.\n        * cexp.y: Likewise.  Include gansidecl.h and remove all code made\n        redundant.\n        * cccp.c: Remove checks for HAVE_VPRINTF and the associated code\n        used when vfprintf is missing.\n        * cexp.y: Likewise.\n        * gcc.c: Likewise.\n        * genattrtab.c: Likewise.\n        * mips-tfile.c: Likewise.\n        * toplev.c: Likewise.\n        * vfprintf.c: New file.\n        * doprint.c: Likewise.\n\nFrom-SVN: r19610", "tree": {"sha": "5f6e3c811759ee18df724c996ca8d1989e3b49b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f6e3c811759ee18df724c996ca8d1989e3b49b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76b4b31ead81f9c957962ab76df73c59a0650f14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76b4b31ead81f9c957962ab76df73c59a0650f14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76b4b31ead81f9c957962ab76df73c59a0650f14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76b4b31ead81f9c957962ab76df73c59a0650f14/comments", "author": null, "committer": null, "parents": [{"sha": "bebc46636dadf957cf8d1eac2fe1e73c292e9983", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bebc46636dadf957cf8d1eac2fe1e73c292e9983", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bebc46636dadf957cf8d1eac2fe1e73c292e9983"}], "stats": {"total": 965, "additions": 669, "deletions": 296}, "files": [{"sha": "36d43c037e2e282fec4a2041fb67f6a66e67ff8f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=76b4b31ead81f9c957962ab76df73c59a0650f14", "patch": "@@ -1,3 +1,31 @@\n+Thu May  7 14:26:05 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* aclocal.m4 (GCC_FUNC_VFPRINTF_DOPRNT): New macro.\n+\t\n+\t* configure.in: Add a call to GCC_FUNC_VFPRINTF_DOPRNT.\n+\t(AC_CHECK_HEADERS): Remove unused check for varargs.h,sys/varargs.h.\n+\t(AC_CHECK_FUNCS): Remove unused check for vprintf.\n+\t\n+\t* Makefile.in: Add support for linking in vfprintf.c and doprint.c.\n+\t(cccp.o): Depend on gansidecl.h.\n+\t(cexp.o): Likewise.\n+\n+\t* cccp.c: Convert from using PRINTF_ALIST/PRINTF_DCL to VPROTO as\n+ \tper the rest of gcc source.\n+  \t* cexp.y: Likewise.  Include gansidecl.h and remove all code made\n+ \tredundant.\n+\n+\t* cccp.c: Remove checks for HAVE_VPRINTF and the associated code\n+\tused when vfprintf is missing.\n+\t* cexp.y: Likewise.\n+\t* gcc.c: Likewise.\n+\t* genattrtab.c: Likewise.\n+\t* mips-tfile.c: Likewise.\n+\t* toplev.c: Likewise.\n+\n+\t* vfprintf.c: New file.\n+\t* doprint.c: New file.\n+\n Thu May  7 10:18:41 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* config/linux.h (ASM_COMMENT_START): Remove from here,"}, {"sha": "9e56cedf3f7b4479fb3c8159c1af50a60dfc790a", "filename": "gcc/Makefile.in", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=76b4b31ead81f9c957962ab76df73c59a0650f14", "patch": "@@ -265,6 +265,10 @@ CLIB=\n # system library.\n OBSTACK=obstack.o\n \n+# Configure will set these if you need vfprintf and possibly _doprnt support.\n+VFPRINTF=@vfprintf@\n+DOPRINT=@doprint@\n+\n # Specify the rule for actually making libgcc.a,\n LIBGCC = libgcc.a\n # and the rule for installing it.\n@@ -410,6 +414,8 @@ HOST_CPPFLAGS=$(ALL_CPPFLAGS)\n HOST_ALLOCA=$(ALLOCA)\n HOST_MALLOC=$(MALLOC)\n HOST_OBSTACK=$(OBSTACK)\n+HOST_VFPRINTF=$(VFPRINTF)\n+HOST_DOPRINT=$(DOPRINT)\n \n # Actual name to use when installing a native compiler.\n GCC_INSTALL_NAME = `t='$(program_transform_name)'; echo gcc | sed -e $$t`\n@@ -493,25 +499,27 @@ USE_ALLOCA= ${ALLOCA}\n USE_HOST_ALLOCA= ` case \"${HOST_ALLOCA}\" in ?*) echo ${HOST_PREFIX}${HOST_ALLOCA} ;; esac `\n USE_HOST_MALLOC= ` case \"${HOST_MALLOC}\" in ?*) echo ${HOST_PREFIX}${HOST_MALLOC} ;; esac `\n USE_HOST_OBSTACK= ` case \"${HOST_OBSTACK}\" in ?*) echo ${HOST_PREFIX}${HOST_OBSTACK} ;; esac `\n+USE_HOST_VFPRINTF= ` case \"${HOST_VFPRINTF}\" in ?*) echo ${HOST_PREFIX}${HOST_VFPRINTF} ;; esac `\n+USE_HOST_DOPRINT= ` case \"${HOST_DOPRINT}\" in ?*) echo ${HOST_PREFIX}${HOST_DOPRINT} ;; esac `\n \n # Dependency on obstack, alloca, malloc or whatever library facilities\n # are not installed in the system libraries.\n # We don't use USE_ALLOCA because backquote expansion doesn't work in deps.\n-LIBDEPS= $(OBSTACK) $(ALLOCA) $(MALLOC)\n+LIBDEPS= $(OBSTACK) $(ALLOCA) $(MALLOC) $(VFPRINTF) $(DOPRINT)\n \n # Likewise, for use in the tools that must run on this machine\n # even if we are cross-building GCC.\n # We don't use USE_ALLOCA because backquote expansion doesn't work in deps.\n-HOST_LIBDEPS= $(HOST_PREFIX)$(HOST_OBSTACK) $(HOST_PREFIX)$(HOST_ALLOCA) $(HOST_PREFIX)$(HOST_MALLOC)\n+HOST_LIBDEPS= $(HOST_PREFIX)$(HOST_OBSTACK) $(HOST_PREFIX)$(HOST_ALLOCA) $(HOST_PREFIX)$(HOST_MALLOC) $(HOST_PREFIX)$(HOST_VFPRINTF) $(HOST_PREFIX)$(HOST_DOPRINT)\n \n # How to link with both our special library facilities\n # and the system's installed libraries.\n-LIBS = $(OBSTACK) $(USE_ALLOCA) $(MALLOC) $(CLIB)\n+LIBS = $(OBSTACK) $(USE_ALLOCA) $(MALLOC) $(VFPRINTF) $(DOPRINT) $(CLIB)\n \n # Likewise, for use in the tools that must run on this machine\n # even if we are cross-building GCC.\n HOST_LIBS = $(USE_HOST_OBSTACK) $(USE_HOST_ALLOCA) $(USE_HOST_MALLOC)  \\\n-\t    $(HOST_CLIB)\n+\t    $(USE_HOST_VFPRINTF) $(USE_HOST_DOPRINT) $(HOST_CLIB)\n \n HOST_RTL = $(HOST_PREFIX)rtl.o\n HOST_RTLANAL = $(HOST_PREFIX)rtlanal.o\n@@ -1731,6 +1739,16 @@ $(HOST_PREFIX_1)obstack.o: obstack.c\n \tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/obstack.c > $(HOST_PREFIX)obstack.c\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)obstack.c\n \n+$(HOST_PREFIX_1)vfprintf.o: vfprintf.c\n+\trm -f $(HOST_PREFIX)vfprintf.c\n+\tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/vfprintf.c > $(HOST_PREFIX)vfprintf.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)vfprintf.c\n+\n+$(HOST_PREFIX_1)doprint.o: doprint.c\n+\trm -f $(HOST_PREFIX)doprint.c\n+\tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/doprint.c > $(HOST_PREFIX)doprint.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)doprint.c\n+\n $(HOST_PREFIX_1)malloc.o: malloc.c\n \trm -f $(HOST_PREFIX)malloc.c\n \tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/malloc.c > $(HOST_PREFIX)malloc.c\n@@ -1751,12 +1769,12 @@ cpp$(exeext): $(CCCP)$(exeext)\n cccp$(exeext): cccp.o cexp.o version.o prefix.o $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ cccp.o cexp.o prefix.o \\\n \t  version.o $(LIBS)\n-cexp.o: $(srcdir)/cexp.c $(CONFIG_H) system.h\n+cexp.o: $(srcdir)/cexp.c $(CONFIG_H) system.h gansidecl.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c $(srcdir)/cexp.c\n $(srcdir)/cexp.c: $(srcdir)/cexp.y\n \tcd $(srcdir); $(BISON) -o cexp.c cexp.y\n \n-cccp.o: cccp.c $(CONFIG_H) pcp.h version.c config.status system.h\n+cccp.o: cccp.c $(CONFIG_H) pcp.h version.c config.status system.h gansidecl.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n \t  -DGPLUSPLUS_INCLUDE_DIR=\\\"$(gxx_include_dir)\\\" \\"}, {"sha": "007fb5eb5f6f0b40f60eef4495cd0b7dd9792f56", "filename": "gcc/aclocal.m4", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faclocal.m4?ref=76b4b31ead81f9c957962ab76df73c59a0650f14", "patch": "@@ -42,6 +42,22 @@ GCC_NEED_DECLARATION($ac_func)\n done\n ])\n \n+dnl Check if we have vprintf and possibly _doprnt.\n+dnl Note autoconf checks for vprintf even though we care about vfprintf.\n+AC_DEFUN(GCC_FUNC_VFPRINTF_DOPRNT,\n+[AC_FUNC_VPRINTF\n+vfprintf=\n+doprint=\n+if test $ac_cv_func_vprintf != yes ; then\n+  vfprintf=vfprintf.o\n+  if test $ac_cv_func__doprnt != yes ; then\n+    doprint=doprint.o\n+  fi\n+fi\n+AC_SUBST(vfprintf)\n+AC_SUBST(doprint)\n+])    \n+\n dnl See if the printf functions in libc support %p in format strings.\n AC_DEFUN(GCC_FUNC_PRINTF_PTR,\n [AC_CACHE_CHECK(whether the printf functions support %p,"}, {"sha": "cecdd2ac4eb65e9b473c922e9bea4dd473a2431c", "filename": "gcc/cccp.c", "status": "modified", "additions": 88, "deletions": 58, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=76b4b31ead81f9c957962ab76df73c59a0650f14", "patch": "@@ -19,26 +19,14 @@ Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA. */\n \n #include \"config.h\"\n-#if defined (__STDC__) && defined (HAVE_VPRINTF)\n+#ifdef __STDC__\n # include <stdarg.h>\n-# define PRINTF_ALIST(msg) char *msg, ...\n-# define PRINTF_DCL(msg)\n-# define PRINTF_PROTO(ARGS, m, n) PROTO (ARGS) __attribute__ ((format (__printf__, m, n)))\n #else\n # include <varargs.h>\n-# define PRINTF_ALIST(msg) msg, va_alist\n-# define PRINTF_DCL(msg) char *msg; va_dcl\n-# define PRINTF_PROTO(ARGS, m, n) () __attribute__ ((format (__printf__, m, n)))\n-# define vfprintf(file, msg, args) \\\n-    { \\\n-      char *a0 = va_arg(args, char *); \\\n-      char *a1 = va_arg(args, char *); \\\n-      char *a2 = va_arg(args, char *); \\\n-      char *a3 = va_arg(args, char *); \\\n-      fprintf (file, msg, a0, a1, a2, a3); \\\n-    }\n #endif\n \n+#define PRINTF_PROTO(ARGS, m, n) PVPROTO (ARGS) ATTRIBUTE_PRINTF(m, n)\n+\n #define PRINTF_PROTO_1(ARGS) PRINTF_PROTO(ARGS, 1, 2)\n #define PRINTF_PROTO_2(ARGS) PRINTF_PROTO(ARGS, 2, 3)\n #define PRINTF_PROTO_3(ARGS) PRINTF_PROTO(ARGS, 3, 4)\n@@ -61,10 +49,6 @@ typedef unsigned char U_CHAR;\n #define GET_ENVIRONMENT(ENV_VALUE,ENV_NAME) ENV_VALUE = getenv (ENV_NAME)\n #endif\n \n-#if __GNUC__ < 2 || (__GNUC__ == 2 && __GNUC_MINOR__ < 7)\n-# define __attribute__(x)\n-#endif\n-\n #ifndef STANDARD_INCLUDE_DIR\n # define STANDARD_INCLUDE_DIR \"/usr/include\"\n #endif\n@@ -8881,12 +8865,19 @@ my_strerror (errnum)\n /* error - print error message and increment count of errors.  */\n \n void\n-error (PRINTF_ALIST (msg))\n-     PRINTF_DCL (msg)\n+error VPROTO ((char * msg, ...))\n {\n+#ifndef __STDC__\n+  char * msg;\n+#endif\n   va_list args;\n \n   VA_START (args, msg);\n+\n+#ifndef __STDC__\n+  msg = va_arg (args, char *);\n+#endif\n+\n   verror (msg, args);\n   va_end (args);\n }\n@@ -8947,12 +8938,19 @@ error_from_errno (name)\n /* Print error message but don't count it.  */\n \n void\n-warning (PRINTF_ALIST (msg))\n-     PRINTF_DCL (msg)\n+warning VPROTO ((char * msg, ...))\n {\n+#ifndef __STDC__\n+  char * msg;\n+#endif\n   va_list args;\n \n   VA_START (args, msg);\n+\n+#ifndef __STDC__\n+  msg = va_arg (args, char *);\n+#endif\n+\n   vwarning (msg, args);\n   va_end (args);\n }\n@@ -8989,17 +8987,21 @@ vwarning (msg, args)\n }\n \n static void\n-#if defined (__STDC__) && defined (HAVE_VPRINTF)\n-error_with_line (int line, PRINTF_ALIST (msg))\n-#else\n-error_with_line (line, PRINTF_ALIST (msg))\n-     int line;\n-     PRINTF_DCL (msg)\n-#endif\n+error_with_line VPROTO ((int line, char * msg, ...))\n {\n+#ifndef __STDC__\n+  int line;\n+  char * msg;\n+#endif\n   va_list args;\n \n   VA_START (args, msg);\n+\n+#ifndef __STDC__\n+  line = va_arg (args, int);\n+  msg = va_arg (args, char *);\n+#endif\n+\n   verror_with_line (line, msg, args);\n   va_end (args);\n }\n@@ -9031,17 +9033,21 @@ verror_with_line (line, msg, args)\n }\n \n static void\n-#if defined (__STDC__) && defined (HAVE_VPRINTF)\n-warning_with_line (int line, PRINTF_ALIST (msg))\n-#else\n-warning_with_line (line, PRINTF_ALIST (msg))\n-     int line;\n-     PRINTF_DCL (msg)\n-#endif\n+warning_with_line VPROTO ((int line, char * msg, ...))\n {\n+#ifndef __STDC__\n+  int line;\n+  char * msg;\n+#endif\n   va_list args;\n \n   VA_START (args, msg);\n+\n+#ifndef __STDC__\n+  line = va_arg (args, int);\n+  msg = va_arg (args, char *);\n+#endif\n+\n   vwarning_with_line (line, msg, args);\n   va_end (args);\n }\n@@ -9081,12 +9087,19 @@ vwarning_with_line (line, msg, args)\n /* Print an error message and maybe count it.  */\n \n void\n-pedwarn (PRINTF_ALIST (msg))\n-     PRINTF_DCL (msg)\n+pedwarn VPROTO ((char * msg, ...))\n {\n+#ifndef __STDC__\n+  char * msg;\n+#endif\n   va_list args;\n \n   VA_START (args, msg);\n+ \n+#ifndef __STDC__\n+  msg = va_arg (args, char *);\n+#endif\n+ \n   if (pedantic_errors)\n     verror (msg, args);\n   else\n@@ -9095,17 +9108,21 @@ pedwarn (PRINTF_ALIST (msg))\n }\n \n void\n-#if defined (__STDC__) && defined (HAVE_VPRINTF)\n-pedwarn_with_line (int line, PRINTF_ALIST (msg))\n-#else\n-pedwarn_with_line (line, PRINTF_ALIST (msg))\n-     int line;\n-     PRINTF_DCL (msg)\n-#endif\n+pedwarn_with_line VPROTO ((int line, char * msg, ...))\n {\n+#ifndef __STDC__\n+  int line;\n+  char * msg;\n+#endif\n   va_list args;\n \n   VA_START (args, msg);\n+ \n+#ifndef __STDC__\n+  line = va_arg (args, int);\n+  msg = va_arg (args, char *);\n+#endif\n+ \n   if (pedantic_errors)\n     verror_with_line (line, msg, args);\n   else\n@@ -9117,17 +9134,15 @@ pedwarn_with_line (line, PRINTF_ALIST (msg))\n    giving specified file name and line number, not current.  */\n \n static void\n-#if defined (__STDC__) && defined (HAVE_VPRINTF)\n-pedwarn_with_file_and_line (char *file, size_t file_len, int line,\n-\t\t\t    PRINTF_ALIST (msg))\n-#else\n-pedwarn_with_file_and_line (file, file_len, line, PRINTF_ALIST (msg))\n-     char *file;\n-     size_t file_len;\n-     int line;\n-     PRINTF_DCL (msg)\n-#endif\n+pedwarn_with_file_and_line VPROTO ((char *file, size_t file_len, int line,\n+\t\t\t\t    char * msg, ...))\n {\n+#ifndef __STDC__\n+  char *file;\n+  size_t file_len;\n+  int line;\n+  char * msg;\n+#endif\n   va_list args;\n \n   if (!pedantic_errors && inhibit_warnings)\n@@ -9141,6 +9156,14 @@ pedwarn_with_file_and_line (file, file_len, line, PRINTF_ALIST (msg))\n   if (!pedantic_errors)\n     fprintf (stderr, \"warning: \");\n   VA_START (args, msg);\n+ \n+#ifndef __STDC__\n+  file = va_arg (args, char *);\n+  file_len = va_arg (args, size_t);\n+  line = va_arg (args, int);\n+  msg = va_arg (args, char *);\n+#endif\n+ \n   vfprintf (stderr, msg, args);\n   va_end (args);\n   fprintf (stderr, \"\\n\");\n@@ -10147,13 +10170,20 @@ deps_output (string, spacer)\n }\n \f\n static void\n-fatal (PRINTF_ALIST (msg))\n-     PRINTF_DCL (msg)\n+fatal VPROTO ((char * msg, ...))\n {\n+#ifndef __STDC__\n+  char * msg;\n+#endif\n   va_list args;\n \n   fprintf (stderr, \"%s: \", progname);\n   VA_START (args, msg);\n+ \n+#ifndef __STDC__\n+  msg = va_arg (args, char *);\n+#endif\n+ \n   vfprintf (stderr, msg, args);\n   va_end (args);\n   fprintf (stderr, \"\\n\");"}, {"sha": "f9c6d847406bc09f8f260ea11c35a4cebbebf350", "filename": "gcc/cexp.c", "status": "modified", "additions": 32, "deletions": 53, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fcexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fcexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.c?ref=76b4b31ead81f9c957962ab76df73c59a0650f14", "patch": "@@ -22,28 +22,14 @@\n #line 27 \"cexp.y\"\n \n #include \"config.h\"\n-#if defined (__STDC__) && defined (HAVE_VPRINTF)\n+#ifdef __STDC__\n # include <stdarg.h>\n-# define VA_START(va_list, var) va_start (va_list, var)\n-# define PRINTF_ALIST(msg) char *msg, ...\n-# define PRINTF_DCL(msg)\n-# define PRINTF_PROTO(ARGS, m, n) PROTO (ARGS) __attribute__ ((format (__printf__, m, n)))\n #else\n # include <varargs.h>\n-# define VA_START(va_list, var) va_start (va_list)\n-# define PRINTF_ALIST(msg) msg, va_alist\n-# define PRINTF_DCL(msg) char *msg; va_dcl\n-# define PRINTF_PROTO(ARGS, m, n) () __attribute__ ((format (__printf__, m, n)))\n-# define vfprintf(file, msg, args) \\\n-    { \\\n-      char *a0 = va_arg(args, char *); \\\n-      char *a1 = va_arg(args, char *); \\\n-      char *a2 = va_arg(args, char *); \\\n-      char *a3 = va_arg(args, char *); \\\n-      fprintf (file, msg, a0, a1, a2, a3); \\\n-    }\n #endif\n \n+#define PRINTF_PROTO(ARGS, m, n) PVPROTO (ARGS) ATTRIBUTE_PRINTF(m, n)\n+\n #define PRINTF_PROTO_1(ARGS) PRINTF_PROTO(ARGS, 1, 2)\n \n #include \"system.h\"\n@@ -54,6 +40,8 @@\n #include <locale.h>\n #endif\n \n+#include \"gansidecl.h\"\n+\n typedef unsigned char U_CHAR;\n \n /* This is used for communicating lists of keywords with cccp.c.  */\n@@ -64,24 +52,6 @@ struct arglist {\n   int argno;\n };\n \n-/* Define a generic NULL if one hasn't already been defined.  */\n-\n-#ifndef NULL\n-#define NULL 0\n-#endif\n-\n-#ifndef GENERIC_PTR\n-#if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n-#define GENERIC_PTR void *\n-#else\n-#define GENERIC_PTR char *\n-#endif\n-#endif\n-\n-#ifndef NULL_PTR\n-#define NULL_PTR ((GENERIC_PTR) 0)\n-#endif\n-\n /* Find the largest host integer type and set its size and type.\n    Watch out: on some crazy hosts `long' is shorter than `int'.  */\n \n@@ -115,18 +85,6 @@ struct arglist {\n #define HOST_BITS_PER_WIDE_INT (CHAR_BIT * sizeof (HOST_WIDE_INT))\n #endif\n \n-#if __GNUC__ < 2 || (__GNUC__ == 2 && __GNUC_MINOR__ < 7)\n-# define __attribute__(x)\n-#endif\n-\n-#ifndef PROTO\n-# if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n-#  define PROTO(ARGS) ARGS\n-# else\n-#  define PROTO(ARGS) ()\n-# endif\n-#endif\n-\n HOST_WIDE_INT parse_c_expression PROTO((char *, int));\n \n static int yylex PROTO((void));\n@@ -2095,38 +2053,59 @@ initialize_random_junk ()\n }\n \n void\n-error (PRINTF_ALIST (msg))\n-     PRINTF_DCL (msg)\n+error VPROTO ((char * msg, ...))\n {\n+#ifndef __STDC__\n+  char * msg;\n+#endif\n   va_list args;\n \n   VA_START (args, msg);\n+ \n+#ifndef __STDC__\n+  msg = va_arg (args, char *);\n+#endif\n+ \n   fprintf (stderr, \"error: \");\n   vfprintf (stderr, msg, args);\n   fprintf (stderr, \"\\n\");\n   va_end (args);\n }\n \n void\n-pedwarn (PRINTF_ALIST (msg))\n-     PRINTF_DCL (msg)\n+pedwarn VPROTO ((char * msg, ...))\n {\n+#ifndef __STDC__\n+  char * msg;\n+#endif\n   va_list args;\n \n   VA_START (args, msg);\n+ \n+#ifndef __STDC__\n+  msg = va_arg (args, char *);\n+#endif\n+ \n   fprintf (stderr, \"pedwarn: \");\n   vfprintf (stderr, msg, args);\n   fprintf (stderr, \"\\n\");\n   va_end (args);\n }\n \n void\n-warning (PRINTF_ALIST (msg))\n-     PRINTF_DCL (msg)\n+warning VPROTO ((char * msg, ...))\n {\n+#ifndef __STDC__\n+  char * msg;\n+#endif\n   va_list args;\n \n   VA_START (args, msg);\n+ \n+#ifndef __STDC__\n+  msg = va_arg (args, char *);\n+#endif\n+ \n   fprintf (stderr, \"warning: \");\n   vfprintf (stderr, msg, args);\n   fprintf (stderr, \"\\n\");"}, {"sha": "6280aedeb80affe07a8b8c0896c2e1a64768251f", "filename": "gcc/cexp.y", "status": "modified", "additions": 32, "deletions": 53, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fcexp.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fcexp.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.y?ref=76b4b31ead81f9c957962ab76df73c59a0650f14", "patch": "@@ -26,28 +26,14 @@ Boston, MA 02111-1307, USA.\n    \n %{\n #include \"config.h\"\n-#if defined (__STDC__) && defined (HAVE_VPRINTF)\n+#ifdef __STDC__\n # include <stdarg.h>\n-# define VA_START(va_list, var) va_start (va_list, var)\n-# define PRINTF_ALIST(msg) char *msg, ...\n-# define PRINTF_DCL(msg)\n-# define PRINTF_PROTO(ARGS, m, n) PROTO (ARGS) __attribute__ ((format (__printf__, m, n)))\n #else\n # include <varargs.h>\n-# define VA_START(va_list, var) va_start (va_list)\n-# define PRINTF_ALIST(msg) msg, va_alist\n-# define PRINTF_DCL(msg) char *msg; va_dcl\n-# define PRINTF_PROTO(ARGS, m, n) () __attribute__ ((format (__printf__, m, n)))\n-# define vfprintf(file, msg, args) \\\n-    { \\\n-      char *a0 = va_arg(args, char *); \\\n-      char *a1 = va_arg(args, char *); \\\n-      char *a2 = va_arg(args, char *); \\\n-      char *a3 = va_arg(args, char *); \\\n-      fprintf (file, msg, a0, a1, a2, a3); \\\n-    }\n #endif\n \n+#define PRINTF_PROTO(ARGS, m, n) PVPROTO (ARGS) ATTRIBUTE_PRINTF(m, n)\n+\n #define PRINTF_PROTO_1(ARGS) PRINTF_PROTO(ARGS, 1, 2)\n \n #include \"system.h\"\n@@ -58,6 +44,8 @@ Boston, MA 02111-1307, USA.\n #include <locale.h>\n #endif\n \n+#include \"gansidecl.h\"\n+\n typedef unsigned char U_CHAR;\n \n /* This is used for communicating lists of keywords with cccp.c.  */\n@@ -68,24 +56,6 @@ struct arglist {\n   int argno;\n };\n \n-/* Define a generic NULL if one hasn't already been defined.  */\n-\n-#ifndef NULL\n-#define NULL 0\n-#endif\n-\n-#ifndef GENERIC_PTR\n-#if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n-#define GENERIC_PTR void *\n-#else\n-#define GENERIC_PTR char *\n-#endif\n-#endif\n-\n-#ifndef NULL_PTR\n-#define NULL_PTR ((GENERIC_PTR) 0)\n-#endif\n-\n /* Find the largest host integer type and set its size and type.\n    Watch out: on some crazy hosts `long' is shorter than `int'.  */\n \n@@ -119,18 +89,6 @@ struct arglist {\n #define HOST_BITS_PER_WIDE_INT (CHAR_BIT * sizeof (HOST_WIDE_INT))\n #endif\n \n-#if __GNUC__ < 2 || (__GNUC__ == 2 && __GNUC_MINOR__ < 7)\n-# define __attribute__(x)\n-#endif\n-\n-#ifndef PROTO\n-# if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n-#  define PROTO(ARGS) ARGS\n-# else\n-#  define PROTO(ARGS) ()\n-# endif\n-#endif\n-\n HOST_WIDE_INT parse_c_expression PROTO((char *, int));\n \n static int yylex PROTO((void));\n@@ -1179,38 +1137,59 @@ initialize_random_junk ()\n }\n \n void\n-error (PRINTF_ALIST (msg))\n-     PRINTF_DCL (msg)\n+error VPROTO ((char * msg, ...))\n {\n+#ifndef __STDC__\n+  char * msg;\n+#endif\n   va_list args;\n \n   VA_START (args, msg);\n+ \n+#ifndef __STDC__\n+  msg = va_arg (args, char *);\n+#endif\n+ \n   fprintf (stderr, \"error: \");\n   vfprintf (stderr, msg, args);\n   fprintf (stderr, \"\\n\");\n   va_end (args);\n }\n \n void\n-pedwarn (PRINTF_ALIST (msg))\n-     PRINTF_DCL (msg)\n+pedwarn VPROTO ((char * msg, ...))\n {\n+#ifndef __STDC__\n+  char * msg;\n+#endif\n   va_list args;\n \n   VA_START (args, msg);\n+ \n+#ifndef __STDC__\n+  msg = va_arg (args, char *);\n+#endif\n+ \n   fprintf (stderr, \"pedwarn: \");\n   vfprintf (stderr, msg, args);\n   fprintf (stderr, \"\\n\");\n   va_end (args);\n }\n \n void\n-warning (PRINTF_ALIST (msg))\n-     PRINTF_DCL (msg)\n+warning VPROTO ((char * msg, ...))\n {\n+#ifndef __STDC__\n+  char * msg;\n+#endif\n   va_list args;\n \n   VA_START (args, msg);\n+ \n+#ifndef __STDC__\n+  msg = va_arg (args, char *);\n+#endif\n+ \n   fprintf (stderr, \"warning: \");\n   vfprintf (stderr, msg, args);\n   fprintf (stderr, \"\\n\");"}, {"sha": "772c165e248d5cf27f97ab142f5b04893c0df393", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=76b4b31ead81f9c957962ab76df73c59a0650f14", "patch": "@@ -47,6 +47,12 @@\n /* Whether abort must be declared even if <stdlib.h> is included.  */\n #undef NEED_DECLARATION_ABORT\n \n+/* Define if you don't have vprintf but do have _doprnt.  */\n+#undef HAVE_DOPRNT\n+\n+/* Define if you have the vprintf function.  */\n+#undef HAVE_VPRINTF\n+\n /* Define if you have the ANSI C header files.  */\n #undef STDC_HEADERS\n \n@@ -113,9 +119,6 @@\n /* Define if you have the sysconf function.  */\n #undef HAVE_SYSCONF\n \n-/* Define if you have the vprintf function.  */\n-#undef HAVE_VPRINTF\n-\n /* Define if you have the <fcntl.h> header file.  */\n #undef HAVE_FCNTL_H\n \n@@ -152,9 +155,6 @@\n /* Define if you have the <sys/times.h> header file.  */\n #undef HAVE_SYS_TIMES_H\n \n-/* Define if you have the <sys/varargs.h> header file.  */\n-#undef HAVE_SYS_VARARGS_H\n-\n /* Define if you have the <sys/wait.h> header file.  */\n #undef HAVE_SYS_WAIT_H\n \n@@ -164,8 +164,5 @@\n /* Define if you have the <unistd.h> header file.  */\n #undef HAVE_UNISTD_H\n \n-/* Define if you have the <varargs.h> header file.  */\n-#undef HAVE_VARARGS_H\n-\n /* Define if you have the <wait.h> header file.  */\n #undef HAVE_WAIT_H"}, {"sha": "ce2613c41efc1180c9fd0b7b1541b785621d35f0", "filename": "gcc/configure", "status": "modified", "additions": 132, "deletions": 14, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=76b4b31ead81f9c957962ab76df73c59a0650f14", "patch": "@@ -1494,7 +1494,7 @@ EOF\n \n fi\n \n-for ac_hdr in limits.h stddef.h string.h strings.h stdlib.h time.h fcntl.h unistd.h stab.h sys/file.h sys/time.h sys/resource.h sys/param.h sys/times.h varargs.h sys/varargs.h wait.h sys/wait.h\n+for ac_hdr in limits.h stddef.h string.h strings.h stdlib.h time.h fcntl.h unistd.h stab.h sys/file.h sys/time.h sys/resource.h sys/param.h sys/times.h wait.h sys/wait.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n@@ -1675,17 +1675,17 @@ fi\n \n echo \"$ac_t\"\"$gcc_cv_header_inttypes_h\" 1>&6\n \n-for ac_func in strtoul bsearch strerror putenv popen vprintf bcopy bzero bcmp \\\n+for ac_func in strtoul bsearch strerror putenv popen bcopy bzero bcmp \\\n \tindex rindex strchr strrchr kill getrlimit setrlimit atoll atoq \\\n \tsysconf isascii\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1683: checking for $ac_func\" >&5\n+echo \"configure:1684: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1688 \"configure\"\n+#line 1689 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1708,7 +1708,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1711: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:1712: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1733,16 +1733,132 @@ fi\n done\n \n \n+echo $ac_n \"checking for vprintf\"\"... $ac_c\" 1>&6\n+echo \"configure:1738: checking for vprintf\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func_vprintf'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1743 \"configure\"\n+#include \"confdefs.h\"\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char vprintf(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char vprintf();\n+\n+int main() {\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub_vprintf) || defined (__stub___vprintf)\n+choke me\n+#else\n+vprintf();\n+#endif\n+\n+; return 0; }\n+EOF\n+if { (eval echo configure:1766: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+  rm -rf conftest*\n+  eval \"ac_cv_func_vprintf=yes\"\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_func_vprintf=no\"\n+fi\n+rm -f conftest*\n+fi\n+\n+if eval \"test \\\"`echo '$ac_cv_func_'vprintf`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+  cat >> confdefs.h <<\\EOF\n+#define HAVE_VPRINTF 1\n+EOF\n+\n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+\n+if test \"$ac_cv_func_vprintf\" != yes; then\n+echo $ac_n \"checking for _doprnt\"\"... $ac_c\" 1>&6\n+echo \"configure:1790: checking for _doprnt\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_func__doprnt'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1795 \"configure\"\n+#include \"confdefs.h\"\n+/* System header to define __stub macros and hopefully few prototypes,\n+    which can conflict with char _doprnt(); below.  */\n+#include <assert.h>\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+/* We use char because int might match the return type of a gcc2\n+    builtin and then its argument prototype would still apply.  */\n+char _doprnt();\n+\n+int main() {\n+\n+/* The GNU C library defines this for functions which it implements\n+    to always fail with ENOSYS.  Some functions are actually named\n+    something starting with __ and the normal name is an alias.  */\n+#if defined (__stub__doprnt) || defined (__stub____doprnt)\n+choke me\n+#else\n+_doprnt();\n+#endif\n+\n+; return 0; }\n+EOF\n+if { (eval echo configure:1818: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+  rm -rf conftest*\n+  eval \"ac_cv_func__doprnt=yes\"\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_func__doprnt=no\"\n+fi\n+rm -f conftest*\n+fi\n+\n+if eval \"test \\\"`echo '$ac_cv_func_'_doprnt`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+  cat >> confdefs.h <<\\EOF\n+#define HAVE_DOPRNT 1\n+EOF\n+\n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+\n+fi\n+\n+vfprintf=\n+doprint=\n+if test $ac_cv_func_vprintf != yes ; then\n+  vfprintf=vfprintf.o\n+  if test $ac_cv_func__doprnt != yes ; then\n+    doprint=doprint.o\n+  fi\n+fi\n+\n+\n+\n echo $ac_n \"checking whether the printf functions support %p\"\"... $ac_c\" 1>&6\n-echo \"configure:1737: checking whether the printf functions support %p\" >&5\n+echo \"configure:1854: checking whether the printf functions support %p\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_func_printf_ptr'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   gcc_cv_func_printf_ptr=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1745 \"configure\"\n+#line 1862 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n \n@@ -1755,7 +1871,7 @@ main()\n   exit (p != q);\n }\n EOF\n-if { (eval echo configure:1758: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:1875: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null\n then\n   gcc_cv_func_printf_ptr=yes\n else\n@@ -1783,12 +1899,12 @@ for ac_func in malloc realloc calloc free bcopy bzero bcmp \\\n \tindex rindex getenv atol sbrk abort atof\n do\n echo $ac_n \"checking whether $ac_func must be declared\"\"... $ac_c\" 1>&6\n-echo \"configure:1786: checking whether $ac_func must be declared\" >&5\n+echo \"configure:1903: checking whether $ac_func must be declared\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_decl_needed_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1791 \"configure\"\n+#line 1908 \"configure\"\n #include \"confdefs.h\"\n \n #include <stdio.h>\n@@ -1815,7 +1931,7 @@ int main() {\n char *(*pfn) = (char *(*)) $ac_func\n ; return 0; }\n EOF\n-if { (eval echo configure:1818: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1935: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   eval \"gcc_cv_decl_needed_$ac_func=no\"\n else\n@@ -1842,12 +1958,12 @@ done\n \n \n echo $ac_n \"checking for sys_siglist declaration in signal.h or unistd.h\"\"... $ac_c\" 1>&6\n-echo \"configure:1845: checking for sys_siglist declaration in signal.h or unistd.h\" >&5\n+echo \"configure:1962: checking for sys_siglist declaration in signal.h or unistd.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_decl_sys_siglist'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1850 \"configure\"\n+#line 1967 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <signal.h>\n@@ -1859,7 +1975,7 @@ int main() {\n char *msg = *(sys_siglist + 1);\n ; return 0; }\n EOF\n-if { (eval echo configure:1862: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1979: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_decl_sys_siglist=yes\n else\n@@ -5319,6 +5435,8 @@ s%@INSTALL@%$INSTALL%g\n s%@INSTALL_PROGRAM@%$INSTALL_PROGRAM%g\n s%@INSTALL_DATA@%$INSTALL_DATA%g\n s%@CPP@%$CPP%g\n+s%@vfprintf@%$vfprintf%g\n+s%@doprint@%$doprint%g\n s%@manext@%$manext%g\n s%@objext@%$objext%g\n s%@gthread_flags@%$gthread_flags%g"}, {"sha": "766ed283fdca86ee952bfbd8e1d2111d92262de7", "filename": "gcc/configure.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=76b4b31ead81f9c957962ab76df73c59a0650f14", "patch": "@@ -148,7 +148,7 @@ EGCS_PROG_INSTALL\n \n AC_HEADER_STDC\n AC_HEADER_TIME\n-AC_CHECK_HEADERS(limits.h stddef.h string.h strings.h stdlib.h time.h fcntl.h unistd.h stab.h sys/file.h sys/time.h sys/resource.h sys/param.h sys/times.h varargs.h sys/varargs.h wait.h sys/wait.h)\n+AC_CHECK_HEADERS(limits.h stddef.h string.h strings.h stdlib.h time.h fcntl.h unistd.h stab.h sys/file.h sys/time.h sys/resource.h sys/param.h sys/times.h wait.h sys/wait.h)\n \n # Check for thread headers.\n AC_CHECK_HEADER(thread.h, [have_thread_h=yes], [have_thread_h=])\n@@ -180,10 +180,11 @@ AC_CACHE_VAL(gcc_cv_header_inttypes_h,\n   gcc_cv_header_inttypes_h=no)])\n AC_MSG_RESULT($gcc_cv_header_inttypes_h)\n \n-AC_CHECK_FUNCS(strtoul bsearch strerror putenv popen vprintf bcopy bzero bcmp \\\n+AC_CHECK_FUNCS(strtoul bsearch strerror putenv popen bcopy bzero bcmp \\\n \tindex rindex strchr strrchr kill getrlimit setrlimit atoll atoq \\\n \tsysconf isascii)\n \n+GCC_FUNC_VFPRINTF_DOPRNT\n GCC_FUNC_PRINTF_PTR\n \n GCC_NEED_DECLARATIONS(malloc realloc calloc free bcopy bzero bcmp \\"}, {"sha": "dc36254006ec6dea9d3a183f508fdab29de0bbab", "filename": "gcc/doprint.c", "status": "added", "additions": 286, "deletions": 0, "changes": 286, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fdoprint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fdoprint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoprint.c?ref=76b4b31ead81f9c957962ab76df73c59a0650f14", "patch": "@@ -0,0 +1,286 @@\n+/* Provide a version _doprnt in terms of fprintf.\n+   By Kaveh Ghazi  (ghazi@caip.rutgers.edu)  3/29/98\n+   Copyright (C) 1998 Free Software Foundation, Inc.\n+ */\n+\n+#include \"config.h\"\n+#ifdef __STDC__\n+#include <stdarg.h>\n+#else\n+#include <varargs.h>\n+#endif\n+#include \"system.h\"\n+#include \"gansidecl.h\"\n+#undef _doprnt\n+\n+#ifdef TEST /* Make sure to use the internal one. */\n+#define _doprnt my_doprnt\n+#endif\n+\n+#define COPY_VA_INT \\\n+  do { \\\n+\t const int value = abs (va_arg (ap, int)); \\\n+\t char buf[32]; \\\n+\t ptr++; /* Go past the asterisk. */ \\\n+\t *sptr = '\\0'; /* NULL terminate sptr. */ \\\n+\t sprintf(buf, \"%d\", value); \\\n+\t strcat(sptr, buf); \\\n+\t while (*sptr) sptr++; \\\n+     } while (0)\n+\n+#define PRINT_CHAR(CHAR) \\\n+  do { \\\n+\t putc(CHAR, stream); \\\n+\t ptr++; \\\n+\t total_printed++; \\\n+\t continue; \\\n+     } while (0)\n+\n+#define PRINT_TYPE(TYPE) \\\n+  do { \\\n+\tint result; \\\n+\tTYPE value = va_arg (ap, TYPE); \\\n+\t*sptr++ = *ptr++; /* Copy the type specifier. */ \\\n+\t*sptr = '\\0'; /* NULL terminate sptr. */ \\\n+\tresult = fprintf(stream, specifier, value); \\\n+\tif (result == -1) \\\n+\t  return -1; \\\n+\telse \\\n+\t  { \\\n+\t    total_printed += result; \\\n+\t    continue; \\\n+\t  } \\\n+      } while (0)\n+\n+int\n+_doprnt (format, ap, stream)\n+  const char * format;\n+  va_list ap;\n+  FILE * stream;\n+{\n+  const char * ptr = format;\n+  char specifier[128];\n+  int total_printed = 0;\n+  \n+  while (*ptr != '\\0')\n+    {\n+      if (*ptr != '%') /* While we have regular characters, print them. */\n+\tPRINT_CHAR(*ptr);\n+      else /* We got a format specifier! */\n+\t{\n+\t  char * sptr = specifier;\n+\t  int wide_width = 0, short_width = 0;\n+\t  \n+\t  *sptr++ = *ptr++; /* Copy the % and move forward. */\n+\n+\t  while (strchr (\"-+ #0\", *ptr)) /* Move past flags. */\n+\t    *sptr++ = *ptr++;\n+\n+\t  if (*ptr == '*')\n+\t    COPY_VA_INT;\n+\t  else\n+\t    while (isdigit(*ptr)) /* Handle explicit numeric value. */\n+\t      *sptr++ = *ptr++;\n+\t  \n+\t  if (*ptr == '.')\n+\t    {\n+\t      *sptr++ = *ptr++; /* Copy and go past the period. */\n+\t      if (*ptr == '*')\n+\t\tCOPY_VA_INT;\n+\t      else\n+\t\twhile (isdigit(*ptr)) /* Handle explicit numeric value. */\n+\t\t  *sptr++ = *ptr++;\n+\t    }\n+\t  while (strchr (\"hlL\", *ptr))\n+\t    {\n+\t      switch (*ptr)\n+\t\t{\n+\t\tcase 'h':\n+\t\t  short_width = 1;\n+\t\t  break;\n+\t\tcase 'l':\n+\t\t  wide_width++;\n+\t\t  break;\n+\t\tcase 'L':\n+\t\t  wide_width = 2;\n+\t\t  break;\n+\t\tdefault:\n+\t\t  abort();\n+\t\t}\n+\t      *sptr++ = *ptr++;\n+\t    }\n+\n+\t  switch (*ptr)\n+\t    {\n+\t    case 'd':\n+\t    case 'i':\n+\t    case 'o':\n+\t    case 'u':\n+\t    case 'x':\n+\t    case 'X':\n+\t    case 'c':\n+\t      {\n+\t\t/* Short values are promoted to int, so just copy it\n+                   as an int and trust the C library printf to cast it\n+                   to the right width. */\n+\t\tif (short_width)\n+\t\t  PRINT_TYPE(int);\n+\t\telse\n+\t\t  {\n+\t\t    switch (wide_width)\n+\t\t      {\n+\t\t      case 0:\n+\t\t\tPRINT_TYPE(int);\n+\t\t\tbreak;\n+\t\t      case 1:\n+\t\t\tPRINT_TYPE(long);\n+\t\t\tbreak;\n+\t\t      case 2:\n+\t\t      default:\n+#if defined(__GNUC__) || defined(HAVE_LONG_LONG)\n+\t\t\tPRINT_TYPE(long long);\n+#else\n+\t\t\tPRINT_TYPE(long); /* Fake it and hope for the best. */\n+#endif\n+\t\t\tbreak;\n+\t\t      } /* End of switch (wide_width) */\n+\t\t  } /* End of else statement */\n+\t      } /* End of integer case */\n+\t      break;\n+\t    case 'f':\n+\t    case 'e':\n+\t    case 'E':\n+\t    case 'g':\n+\t    case 'G':\n+\t      {\n+\t\tif (wide_width == 0)\n+\t\t  PRINT_TYPE(double);\n+\t\telse\n+\t\t  {\n+#if defined(__GNUC__) || defined(HAVE_LONG_DOUBLE)\n+\t\t    PRINT_TYPE(long double);\n+#else\n+\t\t    PRINT_TYPE(double); /* Fake it and hope for the best. */\n+#endif\n+\t\t  }\n+\t      }\n+\t      break;\n+\t    case 's':\n+\t      PRINT_TYPE(char *);\n+\t      break;\n+\t    case 'p':\n+\t      PRINT_TYPE(void *);\n+\t      break;\n+\t    case '%':\n+\t      PRINT_CHAR('%');\n+\t      break;\n+\t    default:\n+\t      abort();\n+\t    } /* End of switch (*ptr) */\n+\t} /* End of else statement */\n+    }\n+\n+  return total_printed;\n+}\n+\n+#ifdef TEST\n+\n+#include <math.h>\n+#ifndef M_PI\n+#define M_PI (3.1415926535897932385)\n+#endif\n+\n+#define RESULT(x) do \\\n+{ \\\n+    int i = (x); \\\n+    printf (\"printed %d characters\\n\", i); \\\n+    fflush(stdin); \\\n+} while (0)\n+\n+static int checkit PVPROTO ((const char * format, ...)) ATTRIBUTE_PRINTF_1;\n+\n+static int\n+checkit VPROTO ((const char* format, ...))\n+{\n+  va_list args;\n+  int result;\n+\n+#ifndef __STDC__\n+  char *format;\n+#endif\n+\n+  VA_START (args, format);\n+\n+#ifndef __STDC__\n+  format = va_arg (args, char *);\n+#endif\n+\n+  result = _doprnt (format, args, stdout);\n+  va_end(args);\n+\n+  return result;\n+}\n+\n+int\n+main ()\n+{\n+  RESULT(checkit (\"<%d>\\n\", 0x12345678));\n+  RESULT(printf (\"<%d>\\n\", 0x12345678));\n+\n+  RESULT(checkit (\"<%200d>\\n\", 5));\n+  RESULT(printf (\"<%200d>\\n\", 5));\n+\n+  RESULT(checkit (\"<%.300d>\\n\", 6));\n+  RESULT(printf (\"<%.300d>\\n\", 6));\n+\n+  RESULT(checkit (\"<%100.150d>\\n\", 7));\n+  RESULT(printf (\"<%100.150d>\\n\", 7));\n+\n+  RESULT(checkit (\"<%s>\\n\",\n+\t\t  \"jjjjjjjjjiiiiiiiiiiiiiiioooooooooooooooooppppppppppppaa\\n\\\n+777777777777777777333333333333366666666666622222222222777777777777733333\"));\n+  RESULT(printf (\"<%s>\\n\",\n+\t\t \"jjjjjjjjjiiiiiiiiiiiiiiioooooooooooooooooppppppppppppaa\\n\\\n+777777777777777777333333333333366666666666622222222222777777777777733333\"));\n+\n+  RESULT(checkit (\"<%f><%0+#f>%s%d%s>\\n\",\n+\t\t  1.0, 1.0, \"foo\", 77, \"asdjffffffffffffffiiiiiiiiiiixxxxx\"));\n+  RESULT(printf (\"<%f><%0+#f>%s%d%s>\\n\",\n+\t\t 1.0, 1.0, \"foo\", 77, \"asdjffffffffffffffiiiiiiiiiiixxxxx\"));\n+\n+  RESULT(checkit (\"<%4f><%.4f><%%><%4.4f>\\n\", M_PI, M_PI, M_PI));\n+  RESULT(printf (\"<%4f><%.4f><%%><%4.4f>\\n\", M_PI, M_PI, M_PI));\n+\n+  RESULT(checkit (\"<%*f><%.*f><%%><%*.*f>\\n\", 3, M_PI, 3, M_PI, 3, 3, M_PI));\n+  RESULT(printf (\"<%*f><%.*f><%%><%*.*f>\\n\", 3, M_PI, 3, M_PI, 3, 3, M_PI));\n+\n+  RESULT(checkit (\"<%d><%i><%o><%u><%x><%X><%c>\\n\",\n+\t\t  75, 75, 75, 75, 75, 75, 75));\n+  RESULT(printf (\"<%d><%i><%o><%u><%x><%X><%c>\\n\",\n+\t\t 75, 75, 75, 75, 75, 75, 75));\n+\n+  RESULT(checkit (\"<%d><%i><%o><%u><%x><%X><%c>\\n\",\n+\t\t  75, 75, 75, 75, 75, 75, 75));\n+  RESULT(printf (\"<%d><%i><%o><%u><%x><%X><%c>\\n\",\n+\t\t 75, 75, 75, 75, 75, 75, 75));\n+\n+  RESULT(checkit (\"Testing (hd) short: <%d><%ld><%hd><%hd><%d>\\n\", 123, (long)234, 345, 123456789, 456));\n+  RESULT(printf (\"Testing (hd) short: <%d><%ld><%hd><%hd><%d>\\n\", 123, (long)234, 345, 123456789, 456));\n+\n+#if defined(__GNUC__) || defined (HAVE_LONG_LONG)\n+  RESULT(checkit (\"Testing (lld) long long: <%d><%lld><%d>\\n\", 123, 234234234234234234LL, 345));\n+  RESULT(printf (\"Testing (lld) long long: <%d><%lld><%d>\\n\", 123, 234234234234234234LL, 345));\n+  RESULT(checkit (\"Testing (Ld) long long: <%d><%Ld><%d>\\n\", 123, 234234234234234234LL, 345));\n+  RESULT(printf (\"Testing (Ld) long long: <%d><%Ld><%d>\\n\", 123, 234234234234234234LL, 345));\n+#endif\n+\n+#if defined(__GNUC__) || defined (HAVE_LONG_DOUBLE)\n+  RESULT(checkit (\"Testing (Lf) long double: <%.20f><%.20Lf><%0+#.20f>\\n\",\n+\t\t  1.23456, 1.234567890123456789L, 1.23456));\n+  RESULT(printf (\"Testing (Lf) long double: <%.20f><%.20Lf><%0+#.20f>\\n\",\n+\t\t 1.23456, 1.234567890123456789L, 1.23456));\n+#endif\n+\n+  return 0;\n+}\n+#endif /* TEST */"}, {"sha": "1941aed2751d7dff8abae731def47436c80b5556", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 36, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=76b4b31ead81f9c957962ab76df73c59a0650f14", "patch": "@@ -246,25 +246,15 @@ static void print_multilib_info\tPROTO((void));\n static void pfatal_with_name\tPROTO((char *));\n static void perror_with_name\tPROTO((char *));\n static void pfatal_pexecute\tPROTO((char *, char *));\n-#ifdef HAVE_VPRINTF\n static void fatal\t\tPVPROTO((char *, ...));\n static void error\t\tPVPROTO((char *, ...));\n-#else\n-/* We must not provide any prototype here, even if ANSI C.  */\n-static void fatal\t\tPROTO(());\n-static void error\t\tPROTO(());\n-#endif\n \n void fancy_abort ();\n char *xmalloc ();\n char *xrealloc ();\n \n #ifdef LANG_SPECIFIC_DRIVER\n-#ifdef HAVE_VPRINTF\n-extern void lang_specific_driver PROTO ((void (*) (char *, ...), int *, char ***, int *));\n-#else\n-extern void lang_specific_driver PROTO ((void (*) (), int *, char ***, int *));\n-#endif\n+extern void lang_specific_driver PROTO ((void (*) PVPROTO((char *, ...)), int *, char ***, int *));\n #endif\n \f\n /* Specs are strings containing lines, each of which (if not blank)\n@@ -5048,8 +5038,6 @@ fancy_abort ()\n   fatal (\"Internal gcc abort.\");\n }\n \f\n-#ifdef HAVE_VPRINTF\n-\n /* Output an error message and exit */\n \n static void\n@@ -5094,29 +5082,6 @@ error VPROTO((char *format, ...))\n \n   fprintf (stderr, \"\\n\");\n }\n-\n-#else /* not HAVE_VPRINTF */\n-\n-static void\n-fatal (msg, arg1, arg2)\n-     char *msg, *arg1, *arg2;\n-{\n-  error (msg, arg1, arg2);\n-  delete_temp_files ();\n-  exit (1);\n-}\n-\n-static void\n-error (msg, arg1, arg2)\n-     char *msg, *arg1, *arg2;\n-{\n-  fprintf (stderr, \"%s: \", programname);\n-  fprintf (stderr, msg, arg1, arg2);\n-  fprintf (stderr, \"\\n\");\n-}\n-\n-#endif /* not HAVE_VPRINTF */\n-\n \f\n static void\n validate_all_switches ()"}, {"sha": "a1538f28090f72813621fa06848cf991027f1a8d", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=76b4b31ead81f9c957962ab76df73c59a0650f14", "patch": "@@ -366,12 +366,7 @@ rtx pic_offset_table_rtx;\n static void attr_hash_add_rtx\tPROTO((int, rtx));\n static void attr_hash_add_string PROTO((int, char *));\n static rtx attr_rtx\t\tPVPROTO((enum rtx_code, ...));\n-#ifdef HAVE_VPRINTF\n static char *attr_printf\tPVPROTO((int, char *, ...));\n-#else\n-static char *attr_printf ();\n-#endif\n-\n static char *attr_string        PROTO((char *, int));\n static rtx check_attr_test\tPROTO((rtx, int));\n static rtx check_attr_value\tPROTO((rtx, struct attr_desc *));\n@@ -736,8 +731,6 @@ attr_rtx VPROTO((enum rtx_code code, ...))\n \n    rtx attr_printf (len, format, [arg1, ..., argn])  */\n \n-#ifdef HAVE_VPRINTF\n-\n /*VARARGS2*/\n static char *\n attr_printf VPROTO((register int len, char *fmt, ...))\n@@ -764,24 +757,6 @@ attr_printf VPROTO((register int len, char *fmt, ...))\n   return attr_string (str, strlen (str));\n }\n \n-#else /* not HAVE_VPRINTF */\n-\n-static char *\n-attr_printf (len, fmt, arg1, arg2, arg3)\n-     int len;\n-     char *fmt;\n-     char *arg1, *arg2, *arg3; /* also int */\n-{\n-  register char *str;\n-\n-  /* Print the string into a temporary location.  */\n-  str = (char *) alloca (len);\n-  sprintf (str, fmt, arg1, arg2, arg3);\n-\n-  return attr_string (str, strlen (str));\n-}\n-#endif /* not HAVE_VPRINTF */\n-\n rtx\n attr_eq (name, value)\n      char *name, *value;"}, {"sha": "1c4b935daa27bd664c830e1f487f3c56017569c6", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=76b4b31ead81f9c957962ab76df73c59a0650f14", "patch": "@@ -671,15 +671,8 @@ extern PTR_T\txcalloc\t\t__proto((Size_t, Size_t));\n extern PTR_T\txrealloc\t__proto((PTR_T, Size_t));\n extern void\txfree\t\t__proto((PTR_T));\n \n-#ifdef HAVE_VPRINTF\n extern void\tfatal\t\tPVPROTO((const char *format, ...));\n extern void\terror\t\tPVPROTO((const char *format, ...));\n-#else\n-/* We must not provide any prototype here, even if ANSI C.  */\n-extern void\tfatal\t\t__proto(());\n-extern void\terror\t\t__proto(());\n-#endif\n-\n \f\n #ifndef MIPS_DEBUGGING_INFO\n \n@@ -5565,8 +5558,6 @@ free_thead (ptr)\n #endif /* MIPS_DEBUGGING_INFO */\n \n \f\n-#ifdef HAVE_VPRINTF\n-\n /* Output an error message and exit */\n \n /*VARARGS*/\n@@ -5630,27 +5621,6 @@ error VPROTO((const char *format, ...))\n   saber_stop ();\n }\n \n-#else /* not HAVE_VPRINTF */\n-\n-void\n-fatal (msg, arg1, arg2)\n-     char *msg, *arg1, *arg2;\n-{\n-  error (msg, arg1, arg2);\n-  exit (1);\n-}\n-\n-void\n-error (msg, arg1, arg2)\n-     char *msg, *arg1, *arg2;\n-{\n-  fprintf (stderr, \"%s: \", progname);\n-  fprintf (stderr, msg, arg1, arg2);\n-  fprintf (stderr, \"\\n\");\n-}\n-\n-#endif /* not HAVE_VPRINTF */\n-\n /* More 'friendly' abort that prints the line and file.\n    config.h can #define abort fancy_abort if you like that sort of thing.  */\n "}, {"sha": "d933b1beea957e0d73adc9bf758a6df29463c613", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=76b4b31ead81f9c957962ab76df73c59a0650f14", "patch": "@@ -1262,17 +1262,7 @@ vmessage (prefix, s, ap)\n   if (prefix)\n     fprintf (stderr, \"%s: \", prefix);\n \n-#ifdef HAVE_VPRINTF\n   vfprintf (stderr, s, ap);\n-#else\n-  {\n-    HOST_WIDE_INT v1 = va_arg(ap, HOST_WIDE_INT);\n-    HOST_WIDE_INT v2 = va_arg(ap, HOST_WIDE_INT);\n-    HOST_WIDE_INT v3 = va_arg(ap, HOST_WIDE_INT);\n-    HOST_WIDE_INT v4 = va_arg(ap, HOST_WIDE_INT);\n-    fprintf (stderr, s, v1, v2, v3, v4);\n-  }\n-#endif\n }\n \n /* Print a message relevant to line LINE of file FILE.  */"}, {"sha": "db7b2ff4c19e0f92e7548e11430ec79fbba6465f", "filename": "gcc/vfprintf.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fvfprintf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b4b31ead81f9c957962ab76df73c59a0650f14/gcc%2Fvfprintf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvfprintf.c?ref=76b4b31ead81f9c957962ab76df73c59a0650f14", "patch": "@@ -0,0 +1,21 @@\n+/* Provide a version vfprintf in terms of _doprnt.\n+   By Kaveh Ghazi  (ghazi@caip.rutgers.edu)  3/29/98\n+   Copyright (C) 1998 Free Software Foundation, Inc.\n+ */\n+\n+#ifdef __STDC__\n+#include <stdarg.h>\n+#else\n+#include <varargs.h>\n+#endif\n+#include <stdio.h>\n+#undef vfprintf\n+\n+int\n+vfprintf (stream, format, ap)\n+  FILE * stream;\n+  const char * format;\n+  va_list ap;\n+{\n+  return _doprnt (format, ap, stream);\n+}"}]}