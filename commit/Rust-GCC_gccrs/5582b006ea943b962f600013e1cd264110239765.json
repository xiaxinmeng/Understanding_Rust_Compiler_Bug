{"sha": "5582b006ea943b962f600013e1cd264110239765", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU4MmIwMDZlYTk0M2I5NjJmNjAwMDEzZTFjZDI2NDExMDIzOTc2NQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-11T16:48:40Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-11T16:48:40Z"}, "message": "(expand_call): Ensure we call force_operand on structure_value_addr.\n\nFrom-SVN: r7885", "tree": {"sha": "913faa0dd03aa0564b6e3ad44d81a68e241226fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/913faa0dd03aa0564b6e3ad44d81a68e241226fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5582b006ea943b962f600013e1cd264110239765", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5582b006ea943b962f600013e1cd264110239765", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5582b006ea943b962f600013e1cd264110239765", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5582b006ea943b962f600013e1cd264110239765/comments", "author": null, "committer": null, "parents": [{"sha": "89e7a14a5c5c6060f6b5c6b105d2a1ca16bd9f92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89e7a14a5c5c6060f6b5c6b105d2a1ca16bd9f92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89e7a14a5c5c6060f6b5c6b105d2a1ca16bd9f92"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "38b1033fc4a91b86900d1aee528cda66451ca5f0", "filename": "gcc/calls.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5582b006ea943b962f600013e1cd264110239765/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5582b006ea943b962f600013e1cd264110239765/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=5582b006ea943b962f600013e1cd264110239765", "patch": "@@ -901,15 +901,18 @@ expand_call (exp, target, ignore)\n      as if it were an extra parameter.  */\n   if (structure_value_addr && struct_value_rtx == 0)\n     {\n+      /* If structure_value_addr is a REG other than\n+\t virtual_outgoing_args_rtx, we can use always use it.  If it\n+\t is not a REG, we must always copy it into a register.\n+\t If it is virtual_outgoing_args_rtx, we must copy it to another\n+\t register in some cases.  */\n+      rtx temp = (GET_CODE (structure_value_addr) != REG\n #ifdef ACCUMULATE_OUTGOING_ARGS\n-      /* If the stack will be adjusted, make sure the structure address\n-\t does not refer to virtual_outgoing_args_rtx.  */\n-      rtx temp = (stack_arg_under_construction\n-\t\t  ? copy_addr_to_reg (structure_value_addr)\n-\t\t  : force_reg (Pmode, structure_value_addr));\n-#else\n-      rtx temp = force_reg (Pmode, structure_value_addr);\n+\t\t  || (stack_arg_under_construction\n+\t\t      && structure_value_addr == virtual_outgoing_args_rtx)\n #endif\n+\t\t  ? copy_addr_to_reg (structure_value_addr)\n+\t\t  : structure_value_addr);\n \n       actparms\n \t= tree_cons (error_mark_node,"}]}