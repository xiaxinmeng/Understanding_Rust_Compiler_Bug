{"sha": "80559c31a6955c02751911a9af2a8446432f2eae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA1NTljMzFhNjk1NWMwMjc1MTkxMWE5YWYyYTg0NDY0MzJmMmVhZQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-09-22T20:11:22Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-09-22T20:11:22Z"}, "message": "pa.md (subsi3): Turn into an expander.\n\n        * pa.md (subsi3): Turn into an expander.  Create two anonymous\n        patterns.  One for PA2.0 one for PA1.x.  Use mtsarcm for PA2.0.\n        * pa.h (EXTRA_CONSTRAINT): Handle 'S'.\n\nFrom-SVN: r29597", "tree": {"sha": "9d4da045fbfbef6a557d7c5d1605c695505824a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d4da045fbfbef6a557d7c5d1605c695505824a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80559c31a6955c02751911a9af2a8446432f2eae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80559c31a6955c02751911a9af2a8446432f2eae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80559c31a6955c02751911a9af2a8446432f2eae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80559c31a6955c02751911a9af2a8446432f2eae/comments", "author": null, "committer": null, "parents": [{"sha": "635d1437cbd05f98760849ae56a87e0e94e6b431", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/635d1437cbd05f98760849ae56a87e0e94e6b431", "html_url": "https://github.com/Rust-GCC/gccrs/commit/635d1437cbd05f98760849ae56a87e0e94e6b431"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "6cd7f82c4ce4bfa97548e550b33cad65efa5b8c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80559c31a6955c02751911a9af2a8446432f2eae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80559c31a6955c02751911a9af2a8446432f2eae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80559c31a6955c02751911a9af2a8446432f2eae", "patch": "@@ -39,6 +39,7 @@ Wed Sep 22 06:06:57 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* pa.md (subsi3): Turn into an expander.  Create two anonymous\n \tpatterns.  One for PA2.0 one for PA1.x.  Use mtsarcm for PA2.0.\n+\t* pa.h (EXTRA_CONSTRAINT): Handle 'S'.\n \n \t* pa.md (floatunssisf2, floatunssidf2): Generate different RTL\n \tfor TARGET_PA_20."}, {"sha": "ffbccea61aea8aed1df5b3c3f5892353d7ceed30", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80559c31a6955c02751911a9af2a8446432f2eae/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80559c31a6955c02751911a9af2a8446432f2eae/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=80559c31a6955c02751911a9af2a8446432f2eae", "patch": "@@ -1315,7 +1315,7 @@ extern struct rtx_def *hppa_va_arg();\n \n    `R' is used for scaled indexed addresses.\n \n-   `S' is unused.\n+   `S' is the constant 31.\n \n    `T' is for fp loads and stores.  */\n #define EXTRA_CONSTRAINT(OP, C)\t\t\t\t\\\n@@ -1343,7 +1343,9 @@ extern struct rtx_def *hppa_va_arg();\n        && memory_address_p (DFmode, XEXP (OP, 0))\t\\\n        && !(GET_CODE (XEXP (OP, 0)) == PLUS\t\t\\\n \t    && (GET_CODE (XEXP (XEXP (OP, 0), 0)) == MULT\\\n-\t\t|| GET_CODE (XEXP (XEXP (OP, 0), 1)) == MULT))) : 0)))\n+\t\t|| GET_CODE (XEXP (XEXP (OP, 0), 1)) == MULT)))\n+   : ((C) == 'S' ?\t\t\t\t\t\\\n+      (GET_CODE (OP) == CONST_INT && INTVAL (OP) == 31) : 0))))\n \n /* The macros REG_OK_FOR..._P assume that the arg is a REG rtx\n    and check its validity for a certain class.\n@@ -1706,7 +1708,7 @@ while (0)\n /* Specify the machine mode that pointers have.\n    After generation of rtl, the compiler makes no further distinction\n    between pointers and any other objects of this machine mode.  */\n-#define Pmode word_mode\n+#define Pmode SImode\n \n /* Add any extra modes needed to represent the condition code.\n "}]}