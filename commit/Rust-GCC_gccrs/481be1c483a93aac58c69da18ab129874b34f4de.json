{"sha": "481be1c483a93aac58c69da18ab129874b34f4de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDgxYmUxYzQ4M2E5M2FhYzU4YzY5ZGExOGFiMTI5ODc0YjM0ZjRkZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-04-08T09:50:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-04-08T09:50:48Z"}, "message": "alias.c (find_base_term): Fix thinko in previous change.\n\n2013-04-08  Richard Biener  <rguenther@suse.de>\n\n\t* alias.c (find_base_term): Fix thinko in previous change.\n\nFrom-SVN: r197572", "tree": {"sha": "8471160907336e7e3addaaa20ae71b9fa9a32efe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8471160907336e7e3addaaa20ae71b9fa9a32efe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/481be1c483a93aac58c69da18ab129874b34f4de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/481be1c483a93aac58c69da18ab129874b34f4de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/481be1c483a93aac58c69da18ab129874b34f4de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/481be1c483a93aac58c69da18ab129874b34f4de/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "42109ab9406243dd6cb9e9d2c1ed83c0d1d02cb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42109ab9406243dd6cb9e9d2c1ed83c0d1d02cb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42109ab9406243dd6cb9e9d2c1ed83c0d1d02cb9"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "dca24bfe236b5ce510020fc5414f0a5fdf5ece01", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/481be1c483a93aac58c69da18ab129874b34f4de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/481be1c483a93aac58c69da18ab129874b34f4de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=481be1c483a93aac58c69da18ab129874b34f4de", "patch": "@@ -1,3 +1,7 @@\n+2013-04-08  Richard Biener  <rguenther@suse.de>\n+\n+\t* alias.c (find_base_term): Fix thinko in previous change.\n+\n 2013-04-08  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tree-loop-distribution.c (const_with_all_bytes_same): New function."}, {"sha": "ef11c6a2b9ce39e04b51757a792eebfe017ab996", "filename": "gcc/alias.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/481be1c483a93aac58c69da18ab129874b34f4de/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/481be1c483a93aac58c69da18ab129874b34f4de/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=481be1c483a93aac58c69da18ab129874b34f4de", "patch": "@@ -1687,16 +1687,16 @@ find_base_term (rtx x)\n \t   term is from a pointer or is a named object or a special address\n \t   (like an argument or stack reference), then use it for the\n \t   base term.  */\n-\ttmp1 = find_base_term (tmp1);\n-\tif (tmp1 != NULL_RTX\n+\trtx base = find_base_term (tmp1);\n+\tif (base != NULL_RTX\n \t    && ((REG_P (tmp1) && REG_POINTER (tmp1))\n-\t\t || known_base_value_p (tmp1)))\n-\t  return tmp1;\n-\ttmp2 = find_base_term (tmp2);\n-\tif (tmp2 != NULL_RTX\n+\t\t || known_base_value_p (base)))\n+\t  return base;\n+\tbase = find_base_term (tmp2);\n+\tif (base != NULL_RTX\n \t    && ((REG_P (tmp2) && REG_POINTER (tmp2))\n-\t\t || known_base_value_p (tmp2)))\n-\t  return tmp2;\n+\t\t || known_base_value_p (base)))\n+\t  return base;\n \n \t/* We could not determine which of the two operands was the\n \t   base register and which was the index.  So we can determine"}]}