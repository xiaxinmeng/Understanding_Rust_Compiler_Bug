{"sha": "4a176b2331bb589fd7c77b720292b72db3ca2f8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGExNzZiMjMzMWJiNTg5ZmQ3Yzc3YjcyMDI5MmI3MmRiM2NhMmY4Yw==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2013-01-07T12:45:13Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2013-01-07T12:45:13Z"}, "message": "re PR target/55243 (STAMP variable is not defined in t-avr)\n\n\tPR55243\n\t* config/avr/t-avr: Don't automatically rebuild\n\t$(srcdir)/config/avr/t-multilib\n\t$(srcdir)/config/avr/avr-tables.opt\n\t$(srcdir)/doc/avr-mmcu.texi\n\t(avr-mcus): New phony target to build them on request.\n\t(s-avr-mlib, s-avr-mmcu-texi): Remove.\n\t* avr/avr-mcus.def: Adjust comments.\n\nFrom-SVN: r194968", "tree": {"sha": "9da3d73b0897c7ce9c12ceb521f089a7452a6c77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9da3d73b0897c7ce9c12ceb521f089a7452a6c77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a176b2331bb589fd7c77b720292b72db3ca2f8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a176b2331bb589fd7c77b720292b72db3ca2f8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a176b2331bb589fd7c77b720292b72db3ca2f8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a176b2331bb589fd7c77b720292b72db3ca2f8c/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7afdc98c595d19fff6243c341b2808000b097f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7afdc98c595d19fff6243c341b2808000b097f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7afdc98c595d19fff6243c341b2808000b097f2"}], "stats": {"total": 104, "additions": 67, "deletions": 37}, "files": [{"sha": "07a4c04df923314f43bd2956b5a9c375004762f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a176b2331bb589fd7c77b720292b72db3ca2f8c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a176b2331bb589fd7c77b720292b72db3ca2f8c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a176b2331bb589fd7c77b720292b72db3ca2f8c", "patch": "@@ -1,3 +1,14 @@\n+2013-01-07  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR55243\n+\t* config/avr/t-avr: Don't automatically rebuild\n+\t$(srcdir)/config/avr/t-multilib\n+\t$(srcdir)/config/avr/avr-tables.opt\n+\t$(srcdir)/doc/avr-mmcu.texi\n+\t(avr-mcus): New phony target to build them on request.\n+\t(s-avr-mlib, s-avr-mmcu-texi): Remove.\n+\t* avr/avr-mcus.def: Adjust comments.\n+\n 2013-01-07  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (DEFAULT_PCC_STRUCT_RETURN): Remove."}, {"sha": "8b06fa3446029c4a490603569ff7e15312a191ba", "filename": "gcc/config/avr/avr-mcus.def", "status": "modified", "additions": 39, "deletions": 8, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a176b2331bb589fd7c77b720292b72db3ca2f8c/gcc%2Fconfig%2Favr%2Favr-mcus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a176b2331bb589fd7c77b720292b72db3ca2f8c/gcc%2Fconfig%2Favr%2Favr-mcus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-mcus.def?ref=4a176b2331bb589fd7c77b720292b72db3ca2f8c", "patch": "@@ -18,19 +18,50 @@\n    along with GCC; see the file COPYING3.  If not see\n    <http://www.gnu.org/licenses/>.  */\n \n-/* List of all known AVR MCU types - if updated, it has to be kept\n-   in sync in several places (FIXME: is there a better way?):\n-    - here;\n-    - gas/config/tc-avr.c;\n-    - avr-libc.\n+/* List of all known AVR MCU types.  If updated, cd to $(builddir)/gcc and run\n+\n+   $ make avr-mcus\n+\n+   This will regenerate / update the following source files:\n+\n+   -  $(srcdir)/config/avr/t-multilib\n+   -  $(srcdir)/config/avr/avr-tables.opt\n+   -  $(srcdir)/doc/avr-mmcu.texi\n+\n+   After that, rebuild everything and check-in the new sources to the repo.\n+   The device list below has to be kept in sync with the following places:\n+\n+   -  here\n+   -  gas/config/tc-avr.c\n+   -  avr-libc\n \n    Before including this file, define a macro:\n \n-   AVR_MCU (NAME, ARCH, MACRO, SHORT_SP, ERRATA_SKIP, DATA_SEC, N_FLASH, LIBRARY_NAME)\n+   AVR_MCU (NAME, ARCH, MACRO, SHORT_SP, ERRATA_SKIP, DATA_SEC, N_FLASH,\n+            LIBRARY_NAME)\n+\n+   where the arguments are the fields of struct mcu_type_s:\n+   \n+       NAME         Accept -mmcu=<NAME>\n+\n+       ARCH         Specifies the multilib variant together with SHORT_SP\n+\n+       MACRO        If NULL, this is a core and not a device.  If non-NULL,\n+                    supply respective built-in macro.\n+\n+       SHORT_SP     The device / multilib has an 8-bit stack pointer (no SPH).\n+\n+       ERRATA_SKIP  Apply work-around for the \"skip 32-bit instruction\"\n+                    silicon bug:  Don't skip 32-bit instrctions.\n+\n+       DATA_SEC     First address of SRAM, used in  -Tdata=  by the driver.\n+\n+       N_FLASH      Number of 64 KiB flash segments, rounded up.\n \n-   where the arguments are the fields of struct mcu_type_s.  */\n+       LIBRARY_NAME Used by the driver to linke startup code from avr-libc\n+                    as of  crt<LIBRARY_NAME>.o\n \n-/* \"avr2\" must be first for the \"0\" default to work as intended.  */\n+   \"avr2\" must be first for the \"0\" default to work as intended.  */\n \n /* Classic, <= 8K.  */\n AVR_MCU (\"avr2\",                 ARCH_AVR2, NULL,                        0, 1, 0x0060, 6, \"s8515\")"}, {"sha": "3d3b817ffdb8f6024c4ff875cbaf2ad1ec8e81bb", "filename": "gcc/config/avr/t-avr", "status": "modified", "additions": 17, "deletions": 29, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a176b2331bb589fd7c77b720292b72db3ca2f8c/gcc%2Fconfig%2Favr%2Ft-avr", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a176b2331bb589fd7c77b720292b72db3ca2f8c/gcc%2Fconfig%2Favr%2Ft-avr", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Ft-avr?ref=4a176b2331bb589fd7c77b720292b72db3ca2f8c", "patch": "@@ -40,48 +40,36 @@ avr.o avr-c.o: $(srcdir)/config/avr/builtins.def\n \n AVR_MCUS = $(srcdir)/config/avr/avr-mcus.def\n \n+# Run `avr-mcus' after you changed or added devices in  avr-mcus.def\n+\n+.PHONY: avr-mcus\n+\n+avr-mcus: $(srcdir)/config/avr/t-multilib \\\n+\t  $(srcdir)/config/avr/avr-tables.opt \\\n+\t  $(srcdir)/doc/avr-mmcu.texi ; @true\n+\n+# Make sure that -mmcu= is supported for devices from avr-mcus.def and\n+# is displaed all -mmcu= values are displayed on the help screen\n $(srcdir)/config/avr/avr-tables.opt: $(srcdir)/config/avr/genopt.sh $(AVR_MCUS)\n \t$(SHELL) $< $(AVR_MCUS) > $@\n \n+# Make sure that -mmcu= support is in sync with -mmcu= documentation.\n gen-avr-mmcu-texi$(build_exeext): $(srcdir)/config/avr/gen-avr-mmcu-texi.c \\\n   $(AVR_MCUS) $(srcdir)/config/avr/avr-devices.c \\\n   $(srcdir)/config/avr/avr-arch.h\n \t$(CC_FOR_BUILD) $(CFLAGS_FOR_BUILD) $< -o $@\n \n-# Make sure that the -mmcu= documentation is in sync with the compiler.\n-$(srcdir)/doc/avr-mmcu.texi: s-avr-mmcu-texi; @true\n-\n-# invoke.texi @includes avr-mmcu.texi.  Put this dependency here instead\n-# of in the global Makefile so that developers of other backends are not\n-# bothered with AVR stuff. \n-$(srcdir)/doc/invoke.texi: $(srcdir)/doc/avr-mmcu.texi\n-\n-# Ensure that device support is in sync with -mmcu= documentation.\n-s-avr-mmcu-texi: gen-avr-mmcu-texi$(build_exeext)\n-\t$(RUN_GEN) ./$< > tmp-avr-mmcu.texi\n-\t$(SHELL) $(srcdir)/../move-if-change tmp-avr-mmcu.texi avr-mmcu.texi\n-\t@if cmp -s $(srcdir)/doc/avr-mmcu.texi avr-mmcu.texi; then \\\n-\t  $(STAMP) $@;\t\t\\\n-\telse\t\t\t\\\n-\t  echo >&2 ;\t\t\\\n-\t  echo \"***\" >&2 ;\t\\\n-\t  echo \"*** Verify that you have permission to grant a\" >&2 ;\t\\\n-\t  echo \"*** GFDL license for all new text in\" >&2 ; \t\t\\\n-\t  echo \"*** avr-mmcu.texi, then copy it to $(srcdir)/doc/avr-mmcu.texi\" >&2 ; \\\n-\t  echo \"***\" >&2 ;\t\\\n-\t  false; \t\t\\\n-\tfi\n+$(srcdir)/doc/avr-mmcu.texi: gen-avr-mmcu-texi$(build_exeext)\n+\t$(RUN_GEN) ./$< > $@\n \n+# Map -mmcu= to the right multilib variant\n # MULTILIB_OPTIONS\n # MULTILIB_DIRNAMES\n # MULTILIB_EXCEPTIONS\n # MULTILIB_MATCHES\n-$(srcdir)/config/avr/t-multilib: s-avr-mlib; @true\n \n s-mlib: $(srcdir)/config/avr/t-multilib\n \n-s-avr-mlib: $(srcdir)/config/avr/genmultilib.awk $(AVR_MCUS)\n-\t$(AWK) -f $< -v FORMAT=Makefile   $< $(AVR_MCUS) > tmp-avr-mlib\n-\t$(SHELL) $(srcdir)/../move-if-change \\\n-\t\ttmp-avr-mlib \t$(srcdir)/config/avr/t-multilib\n-\t$(STAMP) $@\n+$(srcdir)/config/avr/t-multilib: $(srcdir)/config/avr/genmultilib.awk \\\n+\t\t\t\t $(AVR_MCUS)\n+\t$(AWK) -f $< -v FORMAT=Makefile   $< $(AVR_MCUS) > $@"}]}