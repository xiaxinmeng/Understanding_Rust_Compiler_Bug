{"sha": "55400d514897f18f5d251dfad337d666da0b588e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU0MDBkNTE0ODk3ZjE4ZjVkMjUxZGZhZDMzN2Q2NjZkYTBiNTg4ZQ==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-03-02T13:47:11Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-03-02T13:47:11Z"}, "message": "Initial revision\n\nFrom-SVN: r375", "tree": {"sha": "3e0b134ced0f5fe4be4c49ef4089f8bb95e593e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e0b134ced0f5fe4be4c49ef4089f8bb95e593e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55400d514897f18f5d251dfad337d666da0b588e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55400d514897f18f5d251dfad337d666da0b588e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55400d514897f18f5d251dfad337d666da0b588e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55400d514897f18f5d251dfad337d666da0b588e/comments", "author": null, "committer": null, "parents": [{"sha": "7e1966ca45824f2765cfa4a797f08a5f9980917f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e1966ca45824f2765cfa4a797f08a5f9980917f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e1966ca45824f2765cfa4a797f08a5f9980917f"}], "stats": {"total": 99, "additions": 99, "deletions": 0}, "files": [{"sha": "2b0d8f92e9c964016c1d44a63df54f69786bb763", "filename": "gcc/config/ns32k/pc532-min.h", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55400d514897f18f5d251dfad337d666da0b588e/gcc%2Fconfig%2Fns32k%2Fpc532-min.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55400d514897f18f5d251dfad337d666da0b588e/gcc%2Fconfig%2Fns32k%2Fpc532-min.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fpc532-min.h?ref=55400d514897f18f5d251dfad337d666da0b588e", "patch": "@@ -0,0 +1,36 @@\n+/* Definitions of target machine for GNU compiler.\n+   PC532 with National 32532, running Minix.\n+   Works with pc532 Minix 1.5hybrid.\n+   Copyright (C) 1990 Free Software Foundation, Inc.\n+\n+   Derived from SEQUENT NS32000, written originally\n+   by Bruce Culbertson <culberts@hplabs.hp.com>,\n+   hacked for easier fit in gcc by Jyrki Kuoppala <jkp@cs.hut.fi>.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#include \"pc532.h\"\n+\n+/* Minix has crtso.o instead of crt0.o */\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC  \\\n+  \"%{pg:gcrtso.o%s}%{!pg:%{p:mcrtso.o%s}%{!p:crtso.o%s}}\"\n+\n+/* our setjmp doesn't save registers, so we must tell gcc to save\n+   call-saved-regs in a function calling setjmp */\n+\n+#define NON_SAVING_SETJMP (current_function_calls_setjmp)"}, {"sha": "e2c4dfde95113fc59a962ffbc2f627c640eb47f7", "filename": "gcc/config/ns32k/pc532.h", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55400d514897f18f5d251dfad337d666da0b588e/gcc%2Fconfig%2Fns32k%2Fpc532.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55400d514897f18f5d251dfad337d666da0b588e/gcc%2Fconfig%2Fns32k%2Fpc532.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fpc532.h?ref=55400d514897f18f5d251dfad337d666da0b588e", "patch": "@@ -0,0 +1,63 @@\n+/* Definitions of target machine for GNU compiler.\n+   PC532 with National 32532.\n+   Copyright (C) 1990 Free Software Foundation, Inc.\n+   Contributed by Jukka Virtanen <jtv@hut.fi>, Jyrki Kuoppala <jkp@cs.hut.fi>,\n+   Tatu Yl|nen <ylo@ngs.fi>, Johannes Helander <jvh@cs.hut.fi>.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#include \"ns32k.h\"\n+\n+/* Compile for the floating point unit & 32532 by default;\n+   also presume SB is zero */\n+\n+#define TARGET_DEFAULT 25\n+\n+/* Write DBX debugging info for gdb to read */\n+\n+#define DBX_DEBUGGING_INFO\n+\n+/* Use the re-entrant and potentially faster method */\n+\n+#undef PCC_STATIC_STRUCT_RETURN\n+\n+/* 32-bit alignment for efficiency */\n+#undef POINTER_BOUNDARY\n+#define POINTER_BOUNDARY 32\n+\n+/* 32-bit alignment for efficiency */\n+#undef FUNCTION_BOUNDARY\n+#define FUNCTION_BOUNDARY 32\n+\n+/* 32532 spec says it can handle any alignment.  Rumor from tm-ns32k.h\n+   tells this might not be actually true (but it's for 32032, perhaps\n+   National has fixed the bug for 32532).  You might have to change this\n+   if the bug still exists. */\n+\n+#undef STRICT_ALIGNMENT\n+\n+/* Maybe someone needs to know which processor we're running on */\n+\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \"-Dns32000 -Dns32532 -Dpc532 -Dunix\"\n+\n+/* Use pc relative addressing whenever possible,\n+   it's more efficient than absolute (out-ns32k.c)\n+   You have to fix a bug in gas 1.38.1 to make this work with gas,\n+   patch available from jkp@cs.hut.fi. */\n+\n+#define PC_RELATIVE"}]}