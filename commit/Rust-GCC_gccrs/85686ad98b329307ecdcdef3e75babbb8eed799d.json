{"sha": "85686ad98b329307ecdcdef3e75babbb8eed799d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU2ODZhZDk4YjMyOTMwN2VjZGNkZWYzZTc1YmFiYmI4ZWVkNzk5ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-07T13:17:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-07T13:17:29Z"}, "message": "[multiple changes]\n\n2009-07-07  Robert Dewar  <dewar@adacore.com>\n\n\t* prj-nmsc.adb: Minor reformatting\n\n2009-07-07  Pascal Obry  <obry@adacore.com>\n\n\t* a-stwise.adb, a-stzsea.adb, a-strsea.adb (Index): properly handle\n\tcases where Pattern is longer than Source.\n\n2009-07-07  Pascal Obry  <obry@adacore.com>\n\n\t* s-osprim-mingw.adb (Get_Base_Time): Avoid infinite loop.\n\nFrom-SVN: r149326", "tree": {"sha": "1e562c0445072b89dd2bfe94a28901abce44a340", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e562c0445072b89dd2bfe94a28901abce44a340"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85686ad98b329307ecdcdef3e75babbb8eed799d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85686ad98b329307ecdcdef3e75babbb8eed799d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85686ad98b329307ecdcdef3e75babbb8eed799d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85686ad98b329307ecdcdef3e75babbb8eed799d/comments", "author": null, "committer": null, "parents": [{"sha": "54ecb428e7c408f1d8e018be6bb35147756ae0a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54ecb428e7c408f1d8e018be6bb35147756ae0a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54ecb428e7c408f1d8e018be6bb35147756ae0a4"}], "stats": {"total": 115, "additions": 94, "deletions": 21}, "files": [{"sha": "4693dd40ad498df44a8e3882f5848f24e3609367", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85686ad98b329307ecdcdef3e75babbb8eed799d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85686ad98b329307ecdcdef3e75babbb8eed799d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=85686ad98b329307ecdcdef3e75babbb8eed799d", "patch": "@@ -1,3 +1,16 @@\n+2009-07-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* prj-nmsc.adb: Minor reformatting\n+\n+2009-07-07  Pascal Obry  <obry@adacore.com>\n+\n+\t* a-stwise.adb, a-stzsea.adb, a-strsea.adb (Index): properly handle\n+\tcases where Pattern is longer than Source.\n+\n+2009-07-07  Pascal Obry  <obry@adacore.com>\n+\n+\t* s-osprim-mingw.adb (Get_Base_Time): Avoid infinite loop.\n+\n 2009-07-07  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj-nmsc.adb (Process_Naming): canonicalize file suffixes read in the"}, {"sha": "dbeb0e462a43d121e1b303e18b2acd335b679282", "filename": "gcc/ada/a-strsea.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85686ad98b329307ecdcdef3e75babbb8eed799d/gcc%2Fada%2Fa-strsea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85686ad98b329307ecdcdef3e75babbb8eed799d/gcc%2Fada%2Fa-strsea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strsea.adb?ref=85686ad98b329307ecdcdef3e75babbb8eed799d", "patch": "@@ -246,6 +246,12 @@ package body Ada.Strings.Search is\n          raise Pattern_Error;\n       end if;\n \n+      --  If Pattern longer than Source it can't be found\n+\n+      if Pattern'Length > Source'Length then\n+         return 0;\n+      end if;\n+\n       --  Forwards case\n \n       if Going = Forward then\n@@ -348,6 +354,12 @@ package body Ada.Strings.Search is\n          raise Constraint_Error;\n       end if;\n \n+      --  If Pattern longer than Source it can't be found\n+\n+      if Pattern'Length > Source'Length then\n+         return 0;\n+      end if;\n+\n       --  Forwards case\n \n       if Going = Forward then"}, {"sha": "852b781233f25b8d6128443646cbd102e0105f8b", "filename": "gcc/ada/a-stwise.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85686ad98b329307ecdcdef3e75babbb8eed799d/gcc%2Fada%2Fa-stwise.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85686ad98b329307ecdcdef3e75babbb8eed799d/gcc%2Fada%2Fa-stwise.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwise.adb?ref=85686ad98b329307ecdcdef3e75babbb8eed799d", "patch": "@@ -241,6 +241,12 @@ package body Ada.Strings.Wide_Search is\n          raise Pattern_Error;\n       end if;\n \n+      --  If Pattern longer than Source it can't be found\n+\n+      if Pattern'Length > Source'Length then\n+         return 0;\n+      end if;\n+\n       --  Forwards case\n \n       if Going = Forward then\n@@ -343,6 +349,12 @@ package body Ada.Strings.Wide_Search is\n          raise Constraint_Error;\n       end if;\n \n+      --  If Pattern longer than Source it can't be found\n+\n+      if Pattern'Length > Source'Length then\n+         return 0;\n+      end if;\n+\n       --  Forwards case\n \n       if Going = Forward then"}, {"sha": "d6341ae12004cb83e42a0cff880e8c7a5c5a49a5", "filename": "gcc/ada/a-stzsea.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85686ad98b329307ecdcdef3e75babbb8eed799d/gcc%2Fada%2Fa-stzsea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85686ad98b329307ecdcdef3e75babbb8eed799d/gcc%2Fada%2Fa-stzsea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzsea.adb?ref=85686ad98b329307ecdcdef3e75babbb8eed799d", "patch": "@@ -245,6 +245,12 @@ package body Ada.Strings.Wide_Wide_Search is\n          raise Pattern_Error;\n       end if;\n \n+      --  If Pattern longer than Source it can't be found\n+\n+      if Pattern'Length > Source'Length then\n+         return 0;\n+      end if;\n+\n       --  Forwards case\n \n       if Going = Forward then\n@@ -348,6 +354,12 @@ package body Ada.Strings.Wide_Wide_Search is\n          raise Constraint_Error;\n       end if;\n \n+      --  If Pattern longer than Source it can't be found\n+\n+      if Pattern'Length > Source'Length then\n+         return 0;\n+      end if;\n+\n       --  Forwards case\n \n       if Going = Forward then"}, {"sha": "aa5b10104c3114c3bdcd88633a2f298fba1434c7", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85686ad98b329307ecdcdef3e75babbb8eed799d/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85686ad98b329307ecdcdef3e75babbb8eed799d/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=85686ad98b329307ecdcdef3e75babbb8eed799d", "patch": "@@ -3358,26 +3358,27 @@ package body Prj.Nmsc is\n       ----------------------------\n \n       procedure Initialize_Naming_Data is\n-         Specs  : Array_Element_Id :=\n-           Util.Value_Of\n-             (Name_Spec_Suffix,\n-              Naming.Decl.Arrays,\n-              In_Tree);\n-         Impls  : Array_Element_Id :=\n-           Util.Value_Of\n-             (Name_Body_Suffix,\n-              Naming.Decl.Arrays,\n-              In_Tree);\n+         Specs : Array_Element_Id :=\n+                   Util.Value_Of\n+                     (Name_Spec_Suffix,\n+                      Naming.Decl.Arrays,\n+                      In_Tree);\n+\n+         Impls : Array_Element_Id :=\n+                   Util.Value_Of\n+                     (Name_Body_Suffix,\n+                      Naming.Decl.Arrays,\n+                      In_Tree);\n+\n          Lang      : Language_Ptr;\n          Lang_Name : Name_Id;\n          Value     : Variable_Value;\n          Extended  : Project_Id;\n \n       begin\n-         --  At this stage, the project already contains the default\n-         --  extensions for the various languages. We now merge those\n-         --  suffixes read in the user project, and they override the\n-         --  default\n+         --  At this stage, the project already contains the default extensions\n+         --  for the various languages. We now merge those suffixes read in the\n+         --  user project, and they override the default.\n \n          while Specs /= No_Array_Element loop\n             Lang_Name := In_Tree.Array_Elements.Table (Specs).Index;"}, {"sha": "0984f49cacca550c31fe30ec0e5db9f44d7c7580", "filename": "gcc/ada/s-osprim-mingw.adb", "status": "modified", "additions": 30, "deletions": 7, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85686ad98b329307ecdcdef3e75babbb8eed799d/gcc%2Fada%2Fs-osprim-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85686ad98b329307ecdcdef3e75babbb8eed799d/gcc%2Fada%2Fs-osprim-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-mingw.adb?ref=85686ad98b329307ecdcdef3e75babbb8eed799d", "patch": "@@ -156,23 +156,38 @@ package body System.OS_Primitives is\n       --  Therefore, the elapsed time reported by GetSystemTime between both\n       --  actions should be null.\n \n-      Max_Elapsed : constant := 0;\n-\n-      Test_Now : aliased Long_Long_Integer;\n+      Max_Elapsed    : constant := 0;\n \n       epoch_1970     : constant := 16#19D_B1DE_D53E_8000#; -- win32 UTC epoch\n       system_time_ns : constant := 100;                    -- 100 ns per tick\n       Sec_Unit       : constant := 10#1#E9;\n \n+      Test_Now       : aliased Long_Long_Integer;\n+\n+      Loc_Ticks      : aliased LARGE_INTEGER;\n+      Loc_Time       : aliased Long_Long_Integer;\n+      Elapsed        : Long_Long_Integer;\n+      Current_Max    : Long_Long_Integer := Long_Long_Integer'Last;\n+\n    begin\n       --  Here we must be sure that both of these calls are done in a short\n       --  amount of time. Both are base time and should in theory be taken\n       --  at the very same time.\n \n-      loop\n-         GetSystemTimeAsFileTime (Base_Time'Access);\n+      --  The goal of the following loop is to synchronize the system time\n+      --  with the Win32 performance counter by getting a base offset for both.\n+      --  Using these offsets it is then possible to compute actual time using\n+      --  a performance counter which has a better precision than the Win32\n+      --  time API.\n+\n+      --  Try at most 10th times to reach the best synchronisation (below 1\n+      --  millisecond) otherwise the runtime will use the best value\n+      --  reached during the runs.\n \n-         if QueryPerformanceCounter (Base_Ticks'Access) = Win32.FALSE then\n+      for K in 1 .. 10 loop\n+         GetSystemTimeAsFileTime (Loc_Time'Access);\n+\n+         if QueryPerformanceCounter (Loc_Ticks'Access) = Win32.FALSE then\n             pragma Assert\n               (Standard.False,\n                \"Could not query high performance counter in Clock\");\n@@ -181,7 +196,15 @@ package body System.OS_Primitives is\n \n          GetSystemTimeAsFileTime (Test_Now'Access);\n \n-         exit when Test_Now - Base_Time = Max_Elapsed;\n+         Elapsed := Test_Now - Loc_Time;\n+\n+         if Elapsed < Current_Max then\n+            Base_Time   := Loc_Time;\n+            Base_Ticks  := Loc_Ticks;\n+            Current_Max := Elapsed;\n+         end if;\n+\n+         exit when Elapsed = Max_Elapsed;\n       end loop;\n \n       Base_Clock := Duration"}]}