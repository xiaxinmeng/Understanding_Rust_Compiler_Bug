{"sha": "1ff2fd21dc21c02b1da0e31b4a39ec782a371a0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZmMmZkMjFkYzIxYzAyYjFkYTBlMzFiNGEzOWVjNzgyYTM3MWEwYQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2011-11-15T22:10:46Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2011-11-15T22:10:46Z"}, "message": "re PR rtl-optimization/51051 (build fails on cris-elf building libstdc++-v3)\n\n\tPR rtl-optimization/51051\n\tPR bootstrap/51086\n\t* function.c (thread_prologue_and_epilogue_insns): Guard\n\temitting return with single_succ_p test.\n\nFrom-SVN: r181391", "tree": {"sha": "c814da4f13ebed12c285b46b9e5e6e88467e11b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c814da4f13ebed12c285b46b9e5e6e88467e11b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ff2fd21dc21c02b1da0e31b4a39ec782a371a0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ff2fd21dc21c02b1da0e31b4a39ec782a371a0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ff2fd21dc21c02b1da0e31b4a39ec782a371a0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ff2fd21dc21c02b1da0e31b4a39ec782a371a0a/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e35525e9b44270dd312522094fe82246c572f034", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e35525e9b44270dd312522094fe82246c572f034", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e35525e9b44270dd312522094fe82246c572f034"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "a7fb9ea48a644dff2893457ff9faccfe81dd7b0c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ff2fd21dc21c02b1da0e31b4a39ec782a371a0a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ff2fd21dc21c02b1da0e31b4a39ec782a371a0a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ff2fd21dc21c02b1da0e31b4a39ec782a371a0a", "patch": "@@ -1,3 +1,10 @@\n+2011-11-16  Alan Modra  <amodra@gmail.com>\n+\n+\tPR rtl-optimization/51051\n+\tPR bootstrap/51086\n+\t* function.c (thread_prologue_and_epilogue_insns): Guard\n+\temitting return with single_succ_p test.\n+\n 2011-11-15  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* config/epiphany/epiphany.md (mov<mode>cc): Fix code to"}, {"sha": "664858a29e3b9e4577bef79918e9b5557b41a365", "filename": "gcc/function.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ff2fd21dc21c02b1da0e31b4a39ec782a371a0a/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ff2fd21dc21c02b1da0e31b4a39ec782a371a0a/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=1ff2fd21dc21c02b1da0e31b4a39ec782a371a0a", "patch": "@@ -6230,7 +6230,8 @@ thread_prologue_and_epilogue_insns (void)\n \t      && !active_insn_between (BB_HEAD (last_bb), BB_END (last_bb)))\n \t    convert_jumps_to_returns (last_bb, false, NULL);\n \n-\t  if (EDGE_COUNT (exit_fallthru_edge->src->preds) != 0)\n+\t  if (EDGE_COUNT (last_bb->preds) != 0\n+\t      && single_succ_p (last_bb))\n \t    {\n \t      last_bb = emit_return_for_exit (exit_fallthru_edge, false);\n \t      epilogue_end = returnjump = BB_END (last_bb);"}]}