{"sha": "d366a1a795d7b5c40abc3efae2dcc12e9e324b01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM2NmExYTc5NWQ3YjVjNDBhYmMzZWZhZTJkY2MxMmU5ZTMyNGIwMQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-03-02T14:31:46Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-03-02T14:31:46Z"}, "message": "re PR ipa/65270 (issues with merging memory accesses from different code paths)\n\n2015-03-02  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/65270\n\t* ipa-icf-gimple.c: Include builtins.h.\n\t(func_checker::compare_memory_operand): Compare base alignment.\n\nFrom-SVN: r221117", "tree": {"sha": "3461e06a1a6f8e8435c6627a1547260fa007dd65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3461e06a1a6f8e8435c6627a1547260fa007dd65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d366a1a795d7b5c40abc3efae2dcc12e9e324b01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d366a1a795d7b5c40abc3efae2dcc12e9e324b01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d366a1a795d7b5c40abc3efae2dcc12e9e324b01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d366a1a795d7b5c40abc3efae2dcc12e9e324b01/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd1a470ab20ef25928fdf69085bb178339872468", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd1a470ab20ef25928fdf69085bb178339872468", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd1a470ab20ef25928fdf69085bb178339872468"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "862f83901155ae4b578ef951227c91400ba7f1fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d366a1a795d7b5c40abc3efae2dcc12e9e324b01/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d366a1a795d7b5c40abc3efae2dcc12e9e324b01/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d366a1a795d7b5c40abc3efae2dcc12e9e324b01", "patch": "@@ -1,3 +1,9 @@\n+2015-03-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/65270\n+\t* ipa-icf-gimple.c: Include builtins.h.\n+\t(func_checker::compare_memory_operand): Compare base alignment.\n+\n 2015-03-02  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \tPR target/65184"}, {"sha": "ffb4a50cb6d950bc999b4384ef6425264f383c1b", "filename": "gcc/ipa-icf-gimple.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d366a1a795d7b5c40abc3efae2dcc12e9e324b01/gcc%2Fipa-icf-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d366a1a795d7b5c40abc3efae2dcc12e9e324b01/gcc%2Fipa-icf-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf-gimple.c?ref=d366a1a795d7b5c40abc3efae2dcc12e9e324b01", "patch": "@@ -77,6 +77,7 @@ along with GCC; see the file COPYING3.  If not see\n #include <list>\n #include \"tree-ssanames.h\"\n #include \"tree-eh.h\"\n+#include \"builtins.h\"\n \n #include \"ipa-icf-gimple.h\"\n #include \"ipa-icf.h\"\n@@ -286,6 +287,24 @@ func_checker::compare_memory_operand (tree t1, tree t2)\n       if (ao_ref_alias_set (&r1) != ao_ref_alias_set (&r2)\n \t  || ao_ref_base_alias_set (&r1) != ao_ref_base_alias_set (&r2))\n \treturn return_false_with_msg (\"ao alias sets are different\");\n+\n+      /* We can't simply use get_object_alignment_1 on the full\n+         reference as for accesses with variable indexes this reports\n+\t too conservative alignment.  We also can't use the ao_ref_base\n+\t base objects as ao_ref_base happily strips MEM_REFs around\n+\t decls even though that may carry alignment info.  */\n+      b1 = t1;\n+      while (handled_component_p (b1))\n+\tb1 = TREE_OPERAND (b1, 0);\n+      b2 = t2;\n+      while (handled_component_p (b2))\n+\tb2 = TREE_OPERAND (b2, 0);\n+      unsigned int align1, align2;\n+      unsigned HOST_WIDE_INT tem;\n+      get_object_alignment_1 (b1, &align1, &tem);\n+      get_object_alignment_1 (b2, &align2, &tem);\n+      if (align1 != align2)\n+\treturn return_false_with_msg (\"different access alignment\");\n     }\n \n   return compare_operand (t1, t2);"}]}