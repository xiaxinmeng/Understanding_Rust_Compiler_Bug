{"sha": "65fdb418d1c0211451609a5b012ac7cddfcad471", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVmZGI0MThkMWMwMjExNDUxNjA5YTViMDEyYWM3Y2RkZmNhZDQ3MQ==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2014-12-05T16:00:52Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2014-12-05T16:00:52Z"}, "message": "re PR target/64003 (valgrind complains about get_attr_length_nobnd in insn-attrtab.c from i386.md)\n\n\tPR target/64003\n\t* config/i386/i386.md (*jcc_1_bnd): New.\n\t(*jcc_2_bnd): New.\n\t(jump_bnd): New.\n\t(*jcc_1): Remove bnd prefix.\n\t(*jcc_2): Likewise.\n\t(jump): Likewise.\n\nFrom-SVN: r218426", "tree": {"sha": "3bc8c3e90a2a454c95a1a95f8d701c2402e662a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bc8c3e90a2a454c95a1a95f8d701c2402e662a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65fdb418d1c0211451609a5b012ac7cddfcad471", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65fdb418d1c0211451609a5b012ac7cddfcad471", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65fdb418d1c0211451609a5b012ac7cddfcad471", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65fdb418d1c0211451609a5b012ac7cddfcad471/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3edaf26de0dd7a7475646809d1e2841be665a59c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3edaf26de0dd7a7475646809d1e2841be665a59c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3edaf26de0dd7a7475646809d1e2841be665a59c"}], "stats": {"total": 73, "additions": 67, "deletions": 6}, "files": [{"sha": "2b81193af9443b0423f4d7a50a11b6407e0a70fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65fdb418d1c0211451609a5b012ac7cddfcad471/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65fdb418d1c0211451609a5b012ac7cddfcad471/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=65fdb418d1c0211451609a5b012ac7cddfcad471", "patch": "@@ -1,3 +1,13 @@\n+2014-12-05  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR target/64003\n+\t* config/i386/i386.md (*jcc_1_bnd): New.\n+\t(*jcc_2_bnd): New.\n+\t(jump_bnd): New.\n+\t(*jcc_1): Remove bnd prefix.\n+\t(*jcc_2): Likewise.\n+\t(jump): Likewise.\n+\n 2014-12-05  Renlin Li  <renlin.li@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_parse_cpu): Don't define"}, {"sha": "9019ed892a4d3937958075feb0768875103b77e8", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 57, "deletions": 6, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65fdb418d1c0211451609a5b012ac7cddfcad471/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65fdb418d1c0211451609a5b012ac7cddfcad471/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=65fdb418d1c0211451609a5b012ac7cddfcad471", "patch": "@@ -10958,35 +10958,71 @@\n ;; Basic conditional jump instructions.\n ;; We ignore the overflow flag for signed branch instructions.\n \n+(define_insn \"*jcc_1_bnd\"\n+  [(set (pc)\n+\t(if_then_else (match_operator 1 \"ix86_comparison_operator\"\n+\t\t\t\t      [(reg FLAGS_REG) (const_int 0)])\n+\t\t      (label_ref (match_operand 0))\n+\t\t      (pc)))]\n+  \"TARGET_MPX && ix86_bnd_prefixed_insn_p (insn)\"\n+  \"bnd %+j%C1\\t%l0\"\n+  [(set_attr \"type\" \"ibr\")\n+   (set_attr \"modrm\" \"0\")\n+   (set (attr \"length\")\n+\t   (if_then_else (and (ge (minus (match_dup 0) (pc))\n+\t\t\t\t  (const_int -126))\n+\t\t\t      (lt (minus (match_dup 0) (pc))\n+\t\t\t\t  (const_int 128)))\n+\t     (const_int 3)\n+\t     (const_int 7)))])\n+\n (define_insn \"*jcc_1\"\n   [(set (pc)\n \t(if_then_else (match_operator 1 \"ix86_comparison_operator\"\n \t\t\t\t      [(reg FLAGS_REG) (const_int 0)])\n \t\t      (label_ref (match_operand 0))\n \t\t      (pc)))]\n   \"\"\n-  \"%!%+j%C1\\t%l0\"\n+  \"%+j%C1\\t%l0\"\n   [(set_attr \"type\" \"ibr\")\n    (set_attr \"modrm\" \"0\")\n-   (set (attr \"length_nobnd\")\n+   (set (attr \"length\")\n \t   (if_then_else (and (ge (minus (match_dup 0) (pc))\n \t\t\t\t  (const_int -126))\n \t\t\t      (lt (minus (match_dup 0) (pc))\n \t\t\t\t  (const_int 128)))\n \t     (const_int 2)\n \t     (const_int 6)))])\n \n+(define_insn \"*jcc_2_bnd\"\n+  [(set (pc)\n+\t(if_then_else (match_operator 1 \"ix86_comparison_operator\"\n+\t\t\t\t      [(reg FLAGS_REG) (const_int 0)])\n+\t\t      (pc)\n+\t\t      (label_ref (match_operand 0))))]\n+  \"TARGET_MPX && ix86_bnd_prefixed_insn_p (insn)\"\n+  \"bnd %+j%c1\\t%l0\"\n+  [(set_attr \"type\" \"ibr\")\n+   (set_attr \"modrm\" \"0\")\n+   (set (attr \"length\")\n+\t   (if_then_else (and (ge (minus (match_dup 0) (pc))\n+\t\t\t\t  (const_int -126))\n+\t\t\t      (lt (minus (match_dup 0) (pc))\n+\t\t\t\t  (const_int 128)))\n+\t     (const_int 3)\n+\t     (const_int 7)))])\n+\n (define_insn \"*jcc_2\"\n   [(set (pc)\n \t(if_then_else (match_operator 1 \"ix86_comparison_operator\"\n \t\t\t\t      [(reg FLAGS_REG) (const_int 0)])\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0))))]\n   \"\"\n-  \"%!%+j%c1\\t%l0\"\n+  \"%+j%c1\\t%l0\"\n   [(set_attr \"type\" \"ibr\")\n    (set_attr \"modrm\" \"0\")\n-   (set (attr \"length_nobnd\")\n+   (set (attr \"length\")\n \t   (if_then_else (and (ge (minus (match_dup 0) (pc))\n \t\t\t\t  (const_int -126))\n \t\t\t      (lt (minus (match_dup 0) (pc))\n@@ -11420,13 +11456,28 @@\n \f\n ;; Unconditional and other jump instructions\n \n+(define_insn \"jump_bnd\"\n+  [(set (pc)\n+\t(label_ref (match_operand 0)))]\n+  \"TARGET_MPX && ix86_bnd_prefixed_insn_p (insn)\"\n+  \"bnd jmp\\t%l0\"\n+  [(set_attr \"type\" \"ibr\")\n+   (set (attr \"length\")\n+\t   (if_then_else (and (ge (minus (match_dup 0) (pc))\n+\t\t\t\t  (const_int -126))\n+\t\t\t      (lt (minus (match_dup 0) (pc))\n+\t\t\t\t  (const_int 128)))\n+\t     (const_int 3)\n+\t     (const_int 6)))\n+   (set_attr \"modrm\" \"0\")])\n+\n (define_insn \"jump\"\n   [(set (pc)\n \t(label_ref (match_operand 0)))]\n   \"\"\n-  \"%!jmp\\t%l0\"\n+  \"jmp\\t%l0\"\n   [(set_attr \"type\" \"ibr\")\n-   (set (attr \"length_nobnd\")\n+   (set (attr \"length\")\n \t   (if_then_else (and (ge (minus (match_dup 0) (pc))\n \t\t\t\t  (const_int -126))\n \t\t\t      (lt (minus (match_dup 0) (pc))"}]}