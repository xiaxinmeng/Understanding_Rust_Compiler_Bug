{"sha": "faa761528882e35ca300dc3ea035571ba598be94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFhNzYxNTI4ODgyZTM1Y2EzMDBkYzNlYTAzNTU3MWJhNTk4YmU5NA==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2008-08-05T09:04:18Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-05T09:04:18Z"}, "message": "a-rttiev.adb: Minor reformatting (comments)\n\n2008-08-05  Thomas Quinot  <quinot@adacore.com>\n\n\t* a-rttiev.adb: Minor reformatting (comments)\n\nFrom-SVN: r138678", "tree": {"sha": "e0dba15d04bedfa09c21975af236aaf16fafe6f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0dba15d04bedfa09c21975af236aaf16fafe6f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/faa761528882e35ca300dc3ea035571ba598be94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faa761528882e35ca300dc3ea035571ba598be94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faa761528882e35ca300dc3ea035571ba598be94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faa761528882e35ca300dc3ea035571ba598be94/comments", "author": null, "committer": null, "parents": [{"sha": "8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b79ad42d8bb2cf2352fb6465ed7d31ebb9b1f54"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "2b1dacf192587b287fdd277eb22c7666f3cbc3f9", "filename": "gcc/ada/a-rttiev.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faa761528882e35ca300dc3ea035571ba598be94/gcc%2Fada%2Fa-rttiev.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faa761528882e35ca300dc3ea035571ba598be94/gcc%2Fada%2Fa-rttiev.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-rttiev.adb?ref=faa761528882e35ca300dc3ea035571ba598be94", "patch": "@@ -152,8 +152,8 @@ package body Ada.Real_Time.Timing_Events is\n             return;\n          end if;\n \n-         --  We have an event that has timed out so we will process it. It\n-         --  must be the first in the queue so no search is needed.\n+         --  We have an event that has timed out so we will process it. It must\n+         --  be the first in the queue so no search is needed.\n \n          All_Events.Delete_First;\n \n@@ -174,7 +174,7 @@ package body Ada.Real_Time.Timing_Events is\n          declare\n             Handler : constant Timing_Event_Handler := Next_Event.Handler;\n          begin\n-            --  The first act is to clear the event, per D.15 (13/2). Besides,\n+            --  The first act is to clear the event, per D.15(13/2). Besides,\n             --  we cannot clear the handler pointer *after* invoking the\n             --  handler because the handler may have re-inserted the event via\n             --  Set_Event. Thus we take a copy and then clear the component.\n@@ -186,7 +186,7 @@ package body Ada.Real_Time.Timing_Events is\n             end if;\n \n          --  Ignore exceptions propagated by Handler.all, as required by\n-         --  RM-D.15(21/2)\n+         --  RM D.15(21/2).\n \n          exception\n             when others =>\n@@ -266,7 +266,7 @@ package body Ada.Real_Time.Timing_Events is\n       Remove_From_Queue (Event'Unchecked_Access);\n       Event.Handler := null;\n \n-      --  RM-D.15(15/2) requires that at this point, we check whether the time\n+      --  RM D.15(15/2) requires that at this point, we check whether the time\n       --  has already passed, and if so, call Handler.all directly from here\n       --  instead of doing the enqueuing below. However, this causes a nasty\n       --  race condition and potential deadlock. If the current task has\n@@ -294,7 +294,7 @@ package body Ada.Real_Time.Timing_Events is\n       Remove_From_Queue (Event'Unchecked_Access);\n       Event.Handler := null;\n \n-      --  See comment in the other Set_Handler above.\n+      --  See comment in the other Set_Handler above\n \n       if Handler /= null then\n          Event.Timeout := Clock + In_Time;"}]}