{"sha": "70b50ed7b5730785d6a16d6f7faae180e58af06b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBiNTBlZDdiNTczMDc4NWQ2YTE2ZDZmN2ZhYWUxODBlNThhZjA2Yg==", "commit": {"author": {"name": "Tim Shen", "email": "timshen91@gmail.com", "date": "2013-10-01T15:26:50Z"}, "committer": {"name": "Tim Shen", "email": "timshen@gcc.gnu.org", "date": "2013-10-01T15:26:50Z"}, "message": "re PR libstdc++/58576 (std::regex_match() reports mismatched braces on a valid regex)\n\n2013-10-01  Tim Shen  <timshen91@gmail.com>\n\n\tPR libstdc++/58576\n\t* include/bits/regex_automaton.tcc (_NFA<>::_M_eliminate_dummy)\n\t(_StateSeq<>::_M_clone): Add _S_opcode_subexpr_lookahead branch.\n\t* testsuite/28_regex/algorithms/regex_match/ecma/char/58576.cc: New.\n\nFrom-SVN: r203067", "tree": {"sha": "361212cb84460e9074fad63cb9dd9eee059ddcb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/361212cb84460e9074fad63cb9dd9eee059ddcb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70b50ed7b5730785d6a16d6f7faae180e58af06b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70b50ed7b5730785d6a16d6f7faae180e58af06b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70b50ed7b5730785d6a16d6f7faae180e58af06b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70b50ed7b5730785d6a16d6f7faae180e58af06b/comments", "author": {"login": "timshen91", "id": 1157432, "node_id": "MDQ6VXNlcjExNTc0MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1157432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timshen91", "html_url": "https://github.com/timshen91", "followers_url": "https://api.github.com/users/timshen91/followers", "following_url": "https://api.github.com/users/timshen91/following{/other_user}", "gists_url": "https://api.github.com/users/timshen91/gists{/gist_id}", "starred_url": "https://api.github.com/users/timshen91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timshen91/subscriptions", "organizations_url": "https://api.github.com/users/timshen91/orgs", "repos_url": "https://api.github.com/users/timshen91/repos", "events_url": "https://api.github.com/users/timshen91/events{/privacy}", "received_events_url": "https://api.github.com/users/timshen91/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8da00d65132a5565ac574553a8f30b0c7c06afea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8da00d65132a5565ac574553a8f30b0c7c06afea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8da00d65132a5565ac574553a8f30b0c7c06afea"}], "stats": {"total": 114, "additions": 111, "deletions": 3}, "files": [{"sha": "44e0d95c60112331b1fc3b87aa2013ceed858077", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70b50ed7b5730785d6a16d6f7faae180e58af06b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70b50ed7b5730785d6a16d6f7faae180e58af06b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=70b50ed7b5730785d6a16d6f7faae180e58af06b", "patch": "@@ -1,3 +1,10 @@\n+2013-10-01  Tim Shen  <timshen91@gmail.com>\n+\n+\tPR libstdc++/58576\n+\t* include/bits/regex_automaton.tcc (_NFA<>::_M_eliminate_dummy)\n+\t(_StateSeq<>::_M_clone): Add _S_opcode_subexpr_lookahead branch.\n+\t* testsuite/28_regex/algorithms/regex_match/ecma/char/58576.cc: New.\n+\n 2013-09-30  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/parallel/algo.h (__find_switch): Use __binder2nd."}, {"sha": "3402ef33d398e0d0a0e9f0b824269cad6973ea2d", "filename": "libstdc++-v3/include/bits/regex_automaton.tcc", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70b50ed7b5730785d6a16d6f7faae180e58af06b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_automaton.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70b50ed7b5730785d6a16d6f7faae180e58af06b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_automaton.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_automaton.tcc?ref=70b50ed7b5730785d6a16d6f7faae180e58af06b", "patch": "@@ -175,7 +175,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  while (__it._M_next >= 0 && (*this)[__it._M_next]._M_opcode\n \t\t == _S_opcode_dummy)\n \t    __it._M_next = (*this)[__it._M_next]._M_next;\n-\t  if (__it._M_opcode == _S_opcode_alternative)\n+\t  if (__it._M_opcode == _S_opcode_alternative\n+\t      || __it._M_opcode == _S_opcode_subexpr_lookahead)\n \t    while (__it._M_alt >= 0 && (*this)[__it._M_alt]._M_opcode\n \t\t   == _S_opcode_dummy)\n \t      __it._M_alt = (*this)[__it._M_alt]._M_next;\n@@ -201,7 +202,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t    continue;\n \t  if (__m.count(__dup._M_next) == 0)\n \t    __stack.push(__dup._M_next);\n-\t  if (__dup._M_opcode == _S_opcode_alternative)\n+\t  if (__dup._M_opcode == _S_opcode_alternative\n+\t      || __dup._M_opcode == _S_opcode_subexpr_lookahead)\n \t    if (__m.count(__dup._M_alt) == 0)\n \t      __stack.push(__dup._M_alt);\n \t}\n@@ -213,7 +215,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t      _GLIBCXX_DEBUG_ASSERT(__m.count(__ref._M_next));\n \t      __ref._M_next = __m[__ref._M_next];\n \t    }\n-\t  if (__ref._M_opcode == _S_opcode_alternative)\n+\t  if (__ref._M_opcode == _S_opcode_alternative\n+\t      || __ref._M_opcode == _S_opcode_subexpr_lookahead)\n \t    if (__ref._M_alt != -1)\n \t      {\n \t\t_GLIBCXX_DEBUG_ASSERT(__m.count(__ref._M_alt));"}, {"sha": "1a1365ceea2fd10c918fe9765f34a99deb539438", "filename": "libstdc++-v3/testsuite/28_regex/algorithms/regex_match/ecma/char/58576.cc", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70b50ed7b5730785d6a16d6f7faae180e58af06b/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fecma%2Fchar%2F58576.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70b50ed7b5730785d6a16d6f7faae180e58af06b/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fecma%2Fchar%2F58576.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_match%2Fecma%2Fchar%2F58576.cc?ref=70b50ed7b5730785d6a16d6f7faae180e58af06b", "patch": "@@ -0,0 +1,98 @@\n+// { dg-options \"-std=gnu++11\" }\n+\n+//\n+// 2013-10-01  Tim Shen <timshen91@gmail.com>\n+//\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 28.11.2 regex_match\n+\n+#include <regex>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/58576\n+void\n+test01()\n+{\n+  using namespace std;\n+\n+  bool test __attribute__((unused)) = true;\n+\n+  string domain_name = \"valid.hostname.org\";\n+  /**\n+   * based on http://stackoverflow.com/questions/1418423/the-hostname-regex\n+   */\n+  regex fqdn_regex\n+  (\n+    \"^\"\n+    \"(?=.{1,255}$)\"\n+    \"[[:alnum:]]\"\n+    \"(\"\n+\t    \"(([[:alnum:]]|-)\"\n+\t    \"{0,61})\"\n+\t    \"[[:alnum:]]\"\n+    \")?\"\n+    \"(\"\n+\t    \"\\\\.\"\n+\t    \"[[:alnum:]]\"\n+\t    \"(\"\n+\t\t    \"(([[:alnum:]]|-)\"\n+\t\t    \"{0,61})\"\n+\t\t    \"[[:alnum:]]\"\n+\t    \")?\"\n+    \")*\"\n+    \"\\\\.?\"\n+    \"$\"\n+  );\n+\n+  smatch m;\n+  const char* sol[] =\n+  {\n+    \"valid.hostname.org\",\n+    \"alid\",\n+    \"ali\",\n+    \"i\",\n+    \".org\",\n+    \"rg\",\n+    \"r\",\n+    \"r\",\n+  };\n+  try\n+    {\n+      VERIFY(regex_match( domain_name, m, fqdn_regex ));\n+      VERIFY(m.size() == sizeof(sol) / sizeof(*sol));\n+      for (int i = 0; i < (int)m.size(); i++) {\n+\t  string s(m[i].first, m[i].second);\n+\t  VERIFY(s == sol[i]);\n+      }\n+    }\n+  catch ( const regex_error& ex )\n+    {\n+      if ( ex.code() == regex_constants::error_brack )\n+\t{\n+\t  throw;\n+\t}\n+    }\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  return 0;\n+}"}]}