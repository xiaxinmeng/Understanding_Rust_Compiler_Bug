{"sha": "99ebea03824c55b060cd74001658c7b0d025a608", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTllYmVhMDM4MjRjNTViMDYwY2Q3NDAwMTY1OGM3YjBkMDI1YTYwOA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-04-03T15:44:02Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-04-03T15:44:02Z"}, "message": "unix.c: Adapt stat DEFINEs since MinGW64 supports LFS.\n\n2011-04-04  Tobias Burnus  <burnus@net-b.de>\n\n        * unix.c: Adapt stat DEFINEs since MinGW64 supports LFS.\n        (fallback_access, open_internal4, compare_file_filename,\n        find_file, file_size, inquire_sequential, inquire_direct,\n        inquire_formatted): Use \"struct stat\" instead of gfstat_t.\n\nFrom-SVN: r171911", "tree": {"sha": "296f4a2019453ece0963470031b4b63322a11ed9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/296f4a2019453ece0963470031b4b63322a11ed9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99ebea03824c55b060cd74001658c7b0d025a608", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99ebea03824c55b060cd74001658c7b0d025a608", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99ebea03824c55b060cd74001658c7b0d025a608", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99ebea03824c55b060cd74001658c7b0d025a608/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6733afe1b8300e011b4f3354b668aca2e5372a7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6733afe1b8300e011b4f3354b668aca2e5372a7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6733afe1b8300e011b4f3354b668aca2e5372a7b"}], "stats": {"total": 34, "additions": 21, "deletions": 13}, "files": [{"sha": "bae9d3c5d45f6af2efc5305d52d7ca01edaf132f", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99ebea03824c55b060cd74001658c7b0d025a608/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99ebea03824c55b060cd74001658c7b0d025a608/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=99ebea03824c55b060cd74001658c7b0d025a608", "patch": "@@ -1,3 +1,10 @@\n+2011-04-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* unix.c: Adapt stat DEFINEs since MinGW64 supports LFS.\n+\t(fallback_access, open_internal4, compare_file_filename,\n+\tfind_file, file_size, inquire_sequential, inquire_direct,\n+\tinquire_formatted): Use \"struct stat\" instead of gfstat_t.\n+\n 2011-03-27  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/18918"}, {"sha": "d14d2b4ec147043b44be5d367294bd1270fa999e", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99ebea03824c55b060cd74001658c7b0d025a608/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99ebea03824c55b060cd74001658c7b0d025a608/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=99ebea03824c55b060cd74001658c7b0d025a608", "patch": "@@ -48,10 +48,14 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n \n+#if !defined(_FILE_OFFSET_BITS) || _FILE_OFFSET_BITS != 64\n+#undef lseek\n #define lseek _lseeki64\n+#undef fstat\n #define fstat _fstati64\n+#undef stat\n #define stat _stati64\n-typedef struct _stati64 gfstat_t;\n+#endif\n \n #ifndef HAVE_WORKING_STAT\n static uint64_t\n@@ -96,9 +100,6 @@ id_from_fd (const int fd)\n }\n \n #endif\n-\n-#else\n-typedef struct stat gfstat_t;\n #endif\n \n #ifndef PATH_MAX\n@@ -156,7 +157,7 @@ fallback_access (const char *path, int mode)\n \n   if (mode == F_OK)\n     {\n-      gfstat_t st;\n+      struct stat st;\n       return stat (path, &st);\n     }\n \n@@ -924,7 +925,7 @@ open_internal4 (char *base, int length, gfc_offset offset)\n static stream *\n fd_to_stream (int fd)\n {\n-  gfstat_t statbuf;\n+  struct stat statbuf;\n   unix_stream *s;\n \n   s = get_mem (sizeof (unix_stream));\n@@ -1405,7 +1406,7 @@ int\n compare_file_filename (gfc_unit *u, const char *name, int len)\n {\n   char path[PATH_MAX + 1];\n-  gfstat_t st;\n+  struct stat st;\n #ifdef HAVE_WORKING_STAT\n   unix_stream *s;\n #else\n@@ -1446,7 +1447,7 @@ compare_file_filename (gfc_unit *u, const char *name, int len)\n \n \n #ifdef HAVE_WORKING_STAT\n-# define FIND_FILE0_DECL gfstat_t *st\n+# define FIND_FILE0_DECL struct stat *st\n # define FIND_FILE0_ARGS st\n #else\n # define FIND_FILE0_DECL uint64_t id, const char *file, gfc_charlen_type file_len\n@@ -1505,7 +1506,7 @@ gfc_unit *\n find_file (const char *file, gfc_charlen_type file_len)\n {\n   char path[PATH_MAX + 1];\n-  gfstat_t st[1];\n+  struct stat st[1];\n   gfc_unit *u;\n #if defined(__MINGW32__) && !HAVE_WORKING_STAT\n   uint64_t id = 0ULL;\n@@ -1656,7 +1657,7 @@ GFC_IO_INT\n file_size (const char *file, gfc_charlen_type file_len)\n {\n   char path[PATH_MAX + 1];\n-  gfstat_t statbuf;\n+  struct stat statbuf;\n \n   if (unpack_filename (path, file, file_len))\n     return -1;\n@@ -1677,7 +1678,7 @@ const char *\n inquire_sequential (const char *string, int len)\n {\n   char path[PATH_MAX + 1];\n-  gfstat_t statbuf;\n+  struct stat statbuf;\n \n   if (string == NULL ||\n       unpack_filename (path, string, len) || stat (path, &statbuf) < 0)\n@@ -1701,7 +1702,7 @@ const char *\n inquire_direct (const char *string, int len)\n {\n   char path[PATH_MAX + 1];\n-  gfstat_t statbuf;\n+  struct stat statbuf;\n \n   if (string == NULL ||\n       unpack_filename (path, string, len) || stat (path, &statbuf) < 0)\n@@ -1725,7 +1726,7 @@ const char *\n inquire_formatted (const char *string, int len)\n {\n   char path[PATH_MAX + 1];\n-  gfstat_t statbuf;\n+  struct stat statbuf;\n \n   if (string == NULL ||\n       unpack_filename (path, string, len) || stat (path, &statbuf) < 0)"}]}