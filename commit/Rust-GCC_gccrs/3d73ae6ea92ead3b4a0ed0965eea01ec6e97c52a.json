{"sha": "3d73ae6ea92ead3b4a0ed0965eea01ec6e97c52a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q3M2FlNmVhOTJlYWQzYjRhMGVkMDk2NWVlYTAxZWM2ZTk3YzUyYQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-05-11T12:39:28Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-05-11T12:39:28Z"}, "message": "libstdc++/71049 fix --disable-libstdcxx-dual-abi bootstrap\n\n\tPR libstdc++/71049\n\t* src/c++11/cow-stdexcept.cc [!_GLIBCXX_USE_DUAL_ABI]: Don't define\n\texception constructors with __sso_string parameters.\n\nFrom-SVN: r236118", "tree": {"sha": "96b62b116976c35c7af895f57906092e5037e1dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96b62b116976c35c7af895f57906092e5037e1dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d73ae6ea92ead3b4a0ed0965eea01ec6e97c52a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d73ae6ea92ead3b4a0ed0965eea01ec6e97c52a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d73ae6ea92ead3b4a0ed0965eea01ec6e97c52a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d73ae6ea92ead3b4a0ed0965eea01ec6e97c52a/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebc1b29edb3428dd18e76cba8626625bfb184f1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebc1b29edb3428dd18e76cba8626625bfb184f1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebc1b29edb3428dd18e76cba8626625bfb184f1d"}], "stats": {"total": 43, "additions": 26, "deletions": 17}, "files": [{"sha": "a9bea1e8f5d9925d59f0134d88b7285f1ef9bf15", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d73ae6ea92ead3b4a0ed0965eea01ec6e97c52a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d73ae6ea92ead3b4a0ed0965eea01ec6e97c52a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3d73ae6ea92ead3b4a0ed0965eea01ec6e97c52a", "patch": "@@ -1,3 +1,9 @@\n+2016-05-11  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/71049\n+\t* src/c++11/cow-stdexcept.cc [!_GLIBCXX_USE_DUAL_ABI]: Don't define\n+\texception constructors with __sso_string parameters.\n+\n 2016-05-10  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/experimental/bits/fs_dir.h (begin, end): Add noexcept."}, {"sha": "31a89dfd5541aba4253f7d6de44012905780ab9f", "filename": "libstdc++-v3/src/c++11/cow-stdexcept.cc", "status": "modified", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d73ae6ea92ead3b4a0ed0965eea01ec6e97c52a/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcow-stdexcept.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d73ae6ea92ead3b4a0ed0965eea01ec6e97c52a/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcow-stdexcept.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcow-stdexcept.cc?ref=3d73ae6ea92ead3b4a0ed0965eea01ec6e97c52a", "patch": "@@ -292,13 +292,15 @@ _txnal_cow_string_c_str(const void* that)\n   return (const char*) txnal_read_ptr((void**)&bs->_M_dataplus._M_p);\n }\n \n+#if _GLIBCXX_USE_DUAL_ABI\n const char*\n _txnal_sso_string_c_str(const void* that)\n {\n   return (const char*) txnal_read_ptr(\n       (void* const*)const_cast<char* const*>(\n \t  &((const std::__sso_string*) that)->_M_s._M_p));\n }\n+#endif\n \n void\n _txnal_cow_string_D1_commit(void* data)\n@@ -344,9 +346,24 @@ _txnal_runtime_error_get_msg(void* e)\n // result in undefined behavior, which is in this case not initializing this\n // string.\n #if _GLIBCXX_USE_DUAL_ABI\n-#define CTORDTORSTRINGCSTR(s) _txnal_sso_string_c_str((s))\n+#define CTORS_FROM_SSOSTRING(NAME, CLASS, BASE)\t\t\t\\\n+void\t\t\t\t\t\t\t\t\t\\\n+_ZGTtNSt##NAME##C1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE( \\\n+    CLASS* that, const std::__sso_string& s)\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  CLASS e(\"\");\t\t\t\t\t\t\t\t\\\n+  _ITM_memcpyRnWt(that, &e, sizeof(CLASS));\t\t\t\t\\\n+  /* Get the C string from the SSO string.  */\t\t\t\t\\\n+  _txnal_cow_string_C1_for_exceptions(_txnal_##BASE##_get_msg(that),\t\\\n+\t\t\t\t      _txnal_sso_string_c_str(&s), that); \\\n+}\t\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\t\\\n+_ZGTtNSt##NAME##C2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE( \\\n+    CLASS*, const std::__sso_string&) __attribute__((alias\t\t\\\n+(\"_ZGTtNSt\" #NAME\t\t\t\t\t\t\t\\\n+  \"C1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\")));\n #else\n-#define CTORDTORSTRINGCSTR(s) \"\"\n+#define CTORS_FROM_SSOSTRING(NAME, CLASS, BASE)\n #endif\n \n // This macro defines transaction constructors and destructors for a specific\n@@ -373,21 +390,7 @@ _ZGTtNSt##NAME##C1EPKc (CLASS* that, const char* s)\t\t\t\\\n void\t\t\t\t\t\t\t\t\t\\\n _ZGTtNSt##NAME##C2EPKc (CLASS*, const char*)\t\t\t\t\\\n   __attribute__((alias (\"_ZGTtNSt\" #NAME \"C1EPKc\")));\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-_ZGTtNSt##NAME##C1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE( \\\n-    CLASS* that, const std::__sso_string& s)\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  CLASS e(\"\");\t\t\t\t\t\t\t\t\\\n-  _ITM_memcpyRnWt(that, &e, sizeof(CLASS));\t\t\t\t\\\n-  /* Get the C string from the SSO string.  */\t\t\t\t\\\n-  _txnal_cow_string_C1_for_exceptions(_txnal_##BASE##_get_msg(that),\t\\\n-\t\t\t\t      CTORDTORSTRINGCSTR(&s), that);\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-_ZGTtNSt##NAME##C2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE( \\\n-    CLASS*, const std::__sso_string&) __attribute__((alias\t\t\\\n-(\"_ZGTtNSt\" #NAME\t\t\t\t\t\t\t\\\n-  \"C1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\")));\t\\\n+CTORS_FROM_SSOSTRING(NAME, CLASS, BASE)\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\t\\\n _ZGTtNSt##NAME##D1Ev(CLASS* that)\t\t\t\t\t\\\n { _txnal_cow_string_D1(_txnal_##BASE##_get_msg(that)); }\t\t\\"}]}