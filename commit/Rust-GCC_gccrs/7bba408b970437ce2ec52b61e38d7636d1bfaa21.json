{"sha": "7bba408b970437ce2ec52b61e38d7636d1bfaa21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2JiYTQwOGI5NzA0MzdjZTJlYzUyYjYxZTM4ZDc2MzZkMWJmYWEyMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-05-23T09:36:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-05-23T09:36:05Z"}, "message": "re PR middle-end/48973 (Inliner bug with one-bit (1-bit) bitfield)\n\n\tPR middle-end/48973\n\t* expr.c (expand_expr_real_2) <case LT_EXPR>: If do_store_flag\n\tfailed and the comparison has a single bit signed type, use\n\tconstm1_rtx instead of const1_rtx for true value.\n\t(do_store_flag): If ops->type is single bit signed type, disable\n\tsignel bit test optimization and pass -1 instead of 1 as last\n\tparameter to emit_store_flag_force.\n\n\t* gcc.c-torture/execute/pr48973-1.c: New test.\n\t* gcc.c-torture/execute/pr48973-2.c: New test.\n\nFrom-SVN: r174060", "tree": {"sha": "ca69f48c8a8153515aeec23bcd9eb79666cf46ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca69f48c8a8153515aeec23bcd9eb79666cf46ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7bba408b970437ce2ec52b61e38d7636d1bfaa21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bba408b970437ce2ec52b61e38d7636d1bfaa21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bba408b970437ce2ec52b61e38d7636d1bfaa21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bba408b970437ce2ec52b61e38d7636d1bfaa21/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c11e39b0bdfc580582012fe56f0cce1b84f064f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c11e39b0bdfc580582012fe56f0cce1b84f064f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c11e39b0bdfc580582012fe56f0cce1b84f064f4"}], "stats": {"total": 62, "additions": 59, "deletions": 3}, "files": [{"sha": "04218110da561ddeb06894550b65c132e0935d1d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bba408b970437ce2ec52b61e38d7636d1bfaa21/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bba408b970437ce2ec52b61e38d7636d1bfaa21/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7bba408b970437ce2ec52b61e38d7636d1bfaa21", "patch": "@@ -1,3 +1,13 @@\n+2011-05-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/48973\n+\t* expr.c (expand_expr_real_2) <case LT_EXPR>: If do_store_flag\n+\tfailed and the comparison has a single bit signed type, use\n+\tconstm1_rtx instead of const1_rtx for true value.\n+\t(do_store_flag): If ops->type is single bit signed type, disable\n+\tsignel bit test optimization and pass -1 instead of 1 as last\n+\tparameter to emit_store_flag_force.\n+\n 2011-05-23  Tom de Vries  <tom@codesourcery.com>\n \n \tPR target/45098"}, {"sha": "971432c19af49f52e52ed6a9918b790f2ca31af4", "filename": "gcc/expr.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bba408b970437ce2ec52b61e38d7636d1bfaa21/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bba408b970437ce2ec52b61e38d7636d1bfaa21/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=7bba408b970437ce2ec52b61e38d7636d1bfaa21", "patch": "@@ -8105,7 +8105,10 @@ expand_expr_real_2 (sepops ops, rtx target, enum machine_mode tmode,\n       op1 = gen_label_rtx ();\n       jumpifnot_1 (code, treeop0, treeop1, op1, -1);\n \n-      emit_move_insn (target, const1_rtx);\n+      if (TYPE_PRECISION (type) == 1 && !TYPE_UNSIGNED (type))\n+\temit_move_insn (target, constm1_rtx);\n+      else\n+\temit_move_insn (target, const1_rtx);\n \n       emit_label (op1);\n       return target;\n@@ -10050,7 +10053,8 @@ do_store_flag (sepops ops, rtx target, enum machine_mode mode)\n \n   if ((code == NE || code == EQ)\n       && TREE_CODE (arg0) == BIT_AND_EXPR && integer_zerop (arg1)\n-      && integer_pow2p (TREE_OPERAND (arg0, 1)))\n+      && integer_pow2p (TREE_OPERAND (arg0, 1))\n+      && (TYPE_PRECISION (ops->type) != 1 || TYPE_UNSIGNED (ops->type)))\n     {\n       tree type = lang_hooks.types.type_for_mode (mode, unsignedp);\n       return expand_expr (fold_single_bit_test (loc,\n@@ -10070,7 +10074,9 @@ do_store_flag (sepops ops, rtx target, enum machine_mode mode)\n \n   /* Try a cstore if possible.  */\n   return emit_store_flag_force (target, code, op0, op1,\n-\t\t\t        operand_mode, unsignedp, 1);\n+\t\t\t\toperand_mode, unsignedp,\n+\t\t\t\t(TYPE_PRECISION (ops->type) == 1\n+\t\t\t\t && !TYPE_UNSIGNED (ops->type)) ? -1 : 1);\n }\n \f\n "}, {"sha": "2429b60bf24a97694689cea91ecf0a21e20fd45c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bba408b970437ce2ec52b61e38d7636d1bfaa21/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bba408b970437ce2ec52b61e38d7636d1bfaa21/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7bba408b970437ce2ec52b61e38d7636d1bfaa21", "patch": "@@ -1,3 +1,9 @@\n+2011-05-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/48973\n+\t* gcc.c-torture/execute/pr48973-1.c: New test.\n+\t* gcc.c-torture/execute/pr48973-2.c: New test.\n+\n 2011-05-23  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \tPR c++/18016"}, {"sha": "02688a0ea5f38ccff7a4f0fabb23ce928611635e", "filename": "gcc/testsuite/gcc.c-torture/execute/pr48973-1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bba408b970437ce2ec52b61e38d7636d1bfaa21/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr48973-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bba408b970437ce2ec52b61e38d7636d1bfaa21/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr48973-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr48973-1.c?ref=7bba408b970437ce2ec52b61e38d7636d1bfaa21", "patch": "@@ -0,0 +1,20 @@\n+/* PR middle-end/48973 */\n+\n+extern void abort (void);\n+struct S { int f : 1; } s;\n+int v = -1;\n+\n+void\n+foo (unsigned int x)\n+{\n+  if (x != -1U)\n+    abort ();\n+}\n+\n+int\n+main ()\n+{\n+  s.f = (v & 1) > 0;\n+  foo (s.f);\n+  return 0;\n+}"}, {"sha": "a64d4918e4b4c63c10594add3e7517411717b69c", "filename": "gcc/testsuite/gcc.c-torture/execute/pr48973-2.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bba408b970437ce2ec52b61e38d7636d1bfaa21/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr48973-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bba408b970437ce2ec52b61e38d7636d1bfaa21/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr48973-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr48973-2.c?ref=7bba408b970437ce2ec52b61e38d7636d1bfaa21", "patch": "@@ -0,0 +1,14 @@\n+/* PR middle-end/48973 */\n+\n+extern void abort (void);\n+struct S { int f : 1; } s;\n+int v = -1;\n+\n+int\n+main ()\n+{\n+  s.f = v < 0;\n+  if ((unsigned int) s.f != -1U)\n+    abort ();\n+  return 0;\n+}"}]}