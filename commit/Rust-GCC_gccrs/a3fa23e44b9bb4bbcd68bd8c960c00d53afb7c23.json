{"sha": "a3fa23e44b9bb4bbcd68bd8c960c00d53afb7c23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNmYTIzZTQ0YjliYjRiYmNkNjhiZDhjOTYwYzAwZDUzYWZiN2MyMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-02-10T17:43:51Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-02-10T17:43:51Z"}, "message": "47628.cc: Do not test in C++0x mode.\n\n2011-02-10  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/23_containers/multimap/modifiers/erase/47628.cc: Do\n\tnot test in C++0x mode.\n\t* testsuite/23_containers/map/modifiers/erase/47628.cc: Likewise.\n\t* testsuite/20_util/headers/utility/synopsis.cc: Tweak to work\n\tin C++0x mode too.\n\nFrom-SVN: r170016", "tree": {"sha": "4fa41f885f21038638fb7eccae1a410a5190c208", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fa41f885f21038638fb7eccae1a410a5190c208"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3fa23e44b9bb4bbcd68bd8c960c00d53afb7c23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3fa23e44b9bb4bbcd68bd8c960c00d53afb7c23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3fa23e44b9bb4bbcd68bd8c960c00d53afb7c23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3fa23e44b9bb4bbcd68bd8c960c00d53afb7c23/comments", "author": null, "committer": null, "parents": [{"sha": "4fac45bdb4c2c1bd6cb97c99b482941dafe32ec1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fac45bdb4c2c1bd6cb97c99b482941dafe32ec1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fac45bdb4c2c1bd6cb97c99b482941dafe32ec1"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "1f6d2e46938f864b3e3a6c32295f39a160382c99", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3fa23e44b9bb4bbcd68bd8c960c00d53afb7c23/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3fa23e44b9bb4bbcd68bd8c960c00d53afb7c23/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a3fa23e44b9bb4bbcd68bd8c960c00d53afb7c23", "patch": "@@ -1,3 +1,11 @@\n+2011-02-10  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/23_containers/multimap/modifiers/erase/47628.cc: Do\n+\tnot test in C++0x mode.\n+\t* testsuite/23_containers/map/modifiers/erase/47628.cc: Likewise.\n+\t* testsuite/20_util/headers/utility/synopsis.cc: Tweak to work\n+\tin C++0x mode too.\n+\n 2011-02-10  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* doc/xml/manual/status_cxx200x.xml: Update."}, {"sha": "aea7bb3bf40e0a74694cffdbb9aac898308918ab", "filename": "libstdc++-v3/testsuite/20_util/headers/utility/synopsis.cc", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3fa23e44b9bb4bbcd68bd8c960c00d53afb7c23/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fheaders%2Futility%2Fsynopsis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3fa23e44b9bb4bbcd68bd8c960c00d53afb7c23/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fheaders%2Futility%2Fsynopsis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fheaders%2Futility%2Fsynopsis.cc?ref=a3fa23e44b9bb4bbcd68bd8c960c00d53afb7c23", "patch": "@@ -1,6 +1,6 @@\n // { dg-do compile }\n \n-// Copyright (C) 2007, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -31,15 +31,15 @@ namespace std {\n   //  lib.pairs, pairs:\n   template <class T1, class T2> struct pair;\n   template <class T1, class T2>\n-  bool operator==(const pair<T1,T2>&, const pair<T1,T2>&);\n+  _GLIBCXX_CONSTEXPR bool operator==(const pair<T1,T2>&, const pair<T1,T2>&);\n   template <class T1, class T2>\n-  bool operator< (const pair<T1,T2>&, const pair<T1,T2>&);\n+  _GLIBCXX_CONSTEXPR bool operator< (const pair<T1,T2>&, const pair<T1,T2>&);\n   template <class T1, class T2>\n-  bool operator!=(const pair<T1,T2>&, const pair<T1,T2>&);\n+  _GLIBCXX_CONSTEXPR bool operator!=(const pair<T1,T2>&, const pair<T1,T2>&);\n   template <class T1, class T2>\n-  bool operator> (const pair<T1,T2>&, const pair<T1,T2>&);\n+  _GLIBCXX_CONSTEXPR bool operator> (const pair<T1,T2>&, const pair<T1,T2>&);\n   template <class T1, class T2>\n-  bool operator>=(const pair<T1,T2>&, const pair<T1,T2>&);\n+  _GLIBCXX_CONSTEXPR bool operator>=(const pair<T1,T2>&, const pair<T1,T2>&);\n   template <class T1, class T2>\n-  bool operator<=(const pair<T1,T2>&, const pair<T1,T2>&);\n+  _GLIBCXX_CONSTEXPR bool operator<=(const pair<T1,T2>&, const pair<T1,T2>&);\n }"}, {"sha": "6c61b94303c58cbea90a1bdea3b65b2c466ff76a", "filename": "libstdc++-v3/testsuite/23_containers/map/modifiers/erase/47628.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3fa23e44b9bb4bbcd68bd8c960c00d53afb7c23/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Ferase%2F47628.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3fa23e44b9bb4bbcd68bd8c960c00d53afb7c23/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Ferase%2F47628.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fmodifiers%2Ferase%2F47628.cc?ref=a3fa23e44b9bb4bbcd68bd8c960c00d53afb7c23", "patch": "@@ -33,13 +33,14 @@ struct Key\n   bool operator<(const Key&) const;\n };\n \n-typedef std::map<Key, int> Map;\n-\n+#ifndef __GXX_EXPERIMENTAL_CXX0X__\n // libstdc++/47628\n void f()\n {\n+  typedef std::map<Key, int> Map;\n   Map m;\n   m.insert(Map::value_type());\n   Map::iterator i = m.begin();\n   m.erase(i);\n }\n+#endif"}, {"sha": "c45013a12d593114ca1bf572f509a3ef5788c1ef", "filename": "libstdc++-v3/testsuite/23_containers/multimap/modifiers/erase/47628.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3fa23e44b9bb4bbcd68bd8c960c00d53afb7c23/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Ferase%2F47628.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3fa23e44b9bb4bbcd68bd8c960c00d53afb7c23/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Ferase%2F47628.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fmodifiers%2Ferase%2F47628.cc?ref=a3fa23e44b9bb4bbcd68bd8c960c00d53afb7c23", "patch": "@@ -33,13 +33,14 @@ struct Key\n   bool operator<(const Key&) const;\n };\n \n-typedef std::multimap<Key, int> MMap;\n-\n+#ifndef __GXX_EXPERIMENTAL_CXX0X__\n // libstdc++/47628\n void f()\n {\n+  typedef std::multimap<Key, int> MMap;\n   MMap mm;\n   mm.insert(MMap::value_type());\n   MMap::iterator i = mm.begin();\n   mm.erase(i);\n }\n+#endif"}]}