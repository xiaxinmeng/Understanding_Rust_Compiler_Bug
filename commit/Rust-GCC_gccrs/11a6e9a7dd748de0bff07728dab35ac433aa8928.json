{"sha": "11a6e9a7dd748de0bff07728dab35ac433aa8928", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFhNmU5YTdkZDc0OGRlMGJmZjA3NzI4ZGFiMzVhYzQzM2FhODkyOA==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@sourceware.cygnus.com", "date": "2000-05-22T20:56:51Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2000-05-22T20:56:51Z"}, "message": "acinclude.m4: If the new pragma isn't supported, don't kill -Werror...\n\n2000-05-22  Phil Edwards  <pme@sourceware.cygnus.com>\n\n\t* acinclude.m4:  If the new pragma isn't supported, don't kill -Werror;\n\t  keep -Werror and add -Wno-unknown-pragma.  -Werror Is Good.\n\t* aclocal.m4:  Regenerate.\n\t* configure:  Regenerate.\n\nFrom-SVN: r34088", "tree": {"sha": "1172819d64a57f27a7b72703b8f23f3498e988c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1172819d64a57f27a7b72703b8f23f3498e988c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11a6e9a7dd748de0bff07728dab35ac433aa8928", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11a6e9a7dd748de0bff07728dab35ac433aa8928", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11a6e9a7dd748de0bff07728dab35ac433aa8928", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11a6e9a7dd748de0bff07728dab35ac433aa8928/comments", "author": null, "committer": null, "parents": [{"sha": "678164a58ea994d4602b1f6b778cd354bcdf1593", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/678164a58ea994d4602b1f6b778cd354bcdf1593", "html_url": "https://github.com/Rust-GCC/gccrs/commit/678164a58ea994d4602b1f6b778cd354bcdf1593"}], "stats": {"total": 45, "additions": 26, "deletions": 19}, "files": [{"sha": "bf0ef0f971ed354ac13153f6d02affab1cd02fcf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a6e9a7dd748de0bff07728dab35ac433aa8928/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a6e9a7dd748de0bff07728dab35ac433aa8928/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=11a6e9a7dd748de0bff07728dab35ac433aa8928", "patch": "@@ -1,3 +1,10 @@\n+2000-05-22  Phil Edwards  <pme@sourceware.cygnus.com>\n+\n+\t* acinclude.m4:  If the new pragma isn't supported, don't kill -Werror;\n+\t  keep -Werror and add -Wno-unknown-pragma.  -Werror Is Good.\n+\t* aclocal.m4:  Regenerate.\n+\t* configure:  Regenerate.\n+\n 2000-05-19   Nathan C. Myers  <ncm@cantrip.org>\n \n       \t* bits/generic_shadow.h: s/swamp/legacy/"}, {"sha": "09074fee77a6db1a29fceed80fb9f0122941d5dd", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a6e9a7dd748de0bff07728dab35ac433aa8928/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a6e9a7dd748de0bff07728dab35ac433aa8928/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=11a6e9a7dd748de0bff07728dab35ac433aa8928", "patch": "@@ -171,6 +171,7 @@ AC_DEFUN(GLIBCPP_CHECK_COMPILER_VERSION, [\n   ], gpp_satisfactory=yes, AC_MSG_ERROR(\"please upgrade to gcc-2.95 or above\"))\n   AC_MSG_RESULT($gpp_satisfactory)\n \n+  WERROR='-Werror'\n   AC_MSG_CHECKING([for g++ that supports new system_header pragma])\n   AC_LANG_SAVE\n   AC_LANG_CPLUSPLUS\n@@ -180,19 +181,18 @@ AC_DEFUN(GLIBCPP_CHECK_COMPILER_VERSION, [\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n   CXXFLAGS='-Wunknown-pragmas -Werror'\n   AC_TRY_COMPILE([#pragma system_header], [int foo;\n-  ], [WERROR='-Werror'], [WERROR=''])\n+  ], [ac_newpragma=yes], [ac_newpragma=no])\n   if test \"$ac_test_CXXFLAGS\" = set; then\n     CXXFLAGS=\"$ac_save_CXXFLAGS\"\n   else\n     # this is the suspicious part\n     CXXFLAGS=''\n   fi\n   AC_LANG_RESTORE\n-  if test \"$WERROR\" = \"\"; then\n-    AC_MSG_RESULT(no)\n-  else\n-    AC_MSG_RESULT(yes)\n+  if test \"$ac_newpragma\" = \"no\"; then\n+    WERROR=\"$WERROR -Wno-unknown-pragmas\"\n   fi\n+  AC_MSG_RESULT($ac_newpragma)\n \n   AC_MSG_CHECKING([for g++ that supports new inlining mechanism])\n   AC_EGREP_CPP([ok], ["}, {"sha": "5162795db0d2abda1e3ce0de52260506de0043b9", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a6e9a7dd748de0bff07728dab35ac433aa8928/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a6e9a7dd748de0bff07728dab35ac433aa8928/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=11a6e9a7dd748de0bff07728dab35ac433aa8928", "patch": "@@ -183,6 +183,7 @@ AC_DEFUN(GLIBCPP_CHECK_COMPILER_VERSION, [\n   ], gpp_satisfactory=yes, AC_MSG_ERROR(\"please upgrade to gcc-2.95 or above\"))\n   AC_MSG_RESULT($gpp_satisfactory)\n \n+  WERROR='-Werror'\n   AC_MSG_CHECKING([for g++ that supports new system_header pragma])\n   AC_LANG_SAVE\n   AC_LANG_CPLUSPLUS\n@@ -192,19 +193,18 @@ AC_DEFUN(GLIBCPP_CHECK_COMPILER_VERSION, [\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n   CXXFLAGS='-Wunknown-pragmas -Werror'\n   AC_TRY_COMPILE([#pragma system_header], [int foo;\n-  ], [WERROR='-Werror'], [WERROR=''])\n+  ], [ac_newpragma=yes], [ac_newpragma=no])\n   if test \"$ac_test_CXXFLAGS\" = set; then\n     CXXFLAGS=\"$ac_save_CXXFLAGS\"\n   else\n     # this is the suspicious part\n     CXXFLAGS=''\n   fi\n   AC_LANG_RESTORE\n-  if test \"$WERROR\" = \"\"; then\n-    AC_MSG_RESULT(no)\n-  else\n-    AC_MSG_RESULT(yes)\n+  if test \"$ac_newpragma\" = \"no\"; then\n+    WERROR=\"$WERROR -Wno-unknown-pragmas\"\n   fi\n+  AC_MSG_RESULT($ac_newpragma)\n \n   AC_MSG_CHECKING([for g++ that supports new inlining mechanism])\n   AC_EGREP_CPP([ok], ["}, {"sha": "db8f29adf019dac710adf87c0130af8d863c20ae", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a6e9a7dd748de0bff07728dab35ac433aa8928/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a6e9a7dd748de0bff07728dab35ac433aa8928/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=11a6e9a7dd748de0bff07728dab35ac433aa8928", "patch": "@@ -2098,8 +2098,9 @@ rm -f conftest*\n \n   echo \"$ac_t\"\"$gpp_satisfactory\" 1>&6\n \n+  WERROR='-Werror'\n   echo $ac_n \"checking for g++ that supports new system_header pragma\"\"... $ac_c\" 1>&6\n-echo \"configure:2103: checking for g++ that supports new system_header pragma\" >&5\n+echo \"configure:2104: checking for g++ that supports new system_header pragma\" >&5\n   \n   ac_ext=C\n # CXXFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.\n@@ -2114,22 +2115,22 @@ cross_compiling=$ac_cv_prog_cxx_cross\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n   CXXFLAGS='-Wunknown-pragmas -Werror'\n   cat > conftest.$ac_ext <<EOF\n-#line 2118 \"configure\"\n+#line 2119 \"configure\"\n #include \"confdefs.h\"\n #pragma system_header\n int main() {\n int foo;\n   \n ; return 0; }\n EOF\n-if { (eval echo configure:2126: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2127: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n-  WERROR='-Werror'\n+  ac_newpragma=yes\n else\n   echo \"configure: failed program was:\" >&5\n   cat conftest.$ac_ext >&5\n   rm -rf conftest*\n-  WERROR=''\n+  ac_newpragma=no\n fi\n rm -f conftest*\n   if test \"$ac_test_CXXFLAGS\" = set; then\n@@ -2145,11 +2146,10 @@ ac_compile='${CC-cc} -c $CFLAGS $CPPFLAGS conftest.$ac_ext 1>&5'\n ac_link='${CC-cc} -o conftest${ac_exeext} $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&5'\n cross_compiling=$ac_cv_prog_cc_cross\n \n-  if test \"$WERROR\" = \"\"; then\n-    echo \"$ac_t\"\"no\" 1>&6\n-  else\n-    echo \"$ac_t\"\"yes\" 1>&6\n+  if test \"$ac_newpragma\" = \"no\"; then\n+    WERROR=\"$WERROR -Wno-unknown-pragmas\"\n   fi\n+  echo \"$ac_t\"\"$ac_newpragma\" 1>&6\n \n   echo $ac_n \"checking for g++ that supports new inlining mechanism\"\"... $ac_c\" 1>&6\n echo \"configure:2156: checking for g++ that supports new inlining mechanism\" >&5"}]}