{"sha": "d791ea1e0a2341a8fb2ca8b593063af8e471fcac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc5MWVhMWUwYTIzNDFhOGZiMmNhOGI1OTMwNjNhZjhlNDcxZmNhYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2001-04-02T08:08:22Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2001-04-02T08:08:22Z"}, "message": "fold-const.c (fold): Before optimizing unsigned comparison with 0x7fffffffU...\n\n\t* fold-const.c (fold): Before optimizing unsigned comparison with\n\t0x7fffffffU, make sure arg0 is integral type.\n\n\t* gcc.c-torture/execute/20010329-1.c: New test.\n\nFrom-SVN: r41000", "tree": {"sha": "6f9d0c57a696399a9f82b1e41a0aad581a8490a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f9d0c57a696399a9f82b1e41a0aad581a8490a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d791ea1e0a2341a8fb2ca8b593063af8e471fcac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d791ea1e0a2341a8fb2ca8b593063af8e471fcac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d791ea1e0a2341a8fb2ca8b593063af8e471fcac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d791ea1e0a2341a8fb2ca8b593063af8e471fcac/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c6955d85188d84404ae1fdfe594e59166d90b755", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6955d85188d84404ae1fdfe594e59166d90b755", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6955d85188d84404ae1fdfe594e59166d90b755"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "81bd6e7f63bb74f2414e394b83d736f70875a47b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d791ea1e0a2341a8fb2ca8b593063af8e471fcac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d791ea1e0a2341a8fb2ca8b593063af8e471fcac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d791ea1e0a2341a8fb2ca8b593063af8e471fcac", "patch": "@@ -1,3 +1,8 @@\n+2001-04-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* fold-const.c (fold): Before optimizing unsigned comparison with\n+\t0x7fffffffU, make sure arg0 is integral type.\n+\n 2001-04-02  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* c-tree.texi: Document representation of wide strings."}, {"sha": "a595b6e40660a32fa8b0b0e258a55111367eb11d", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d791ea1e0a2341a8fb2ca8b593063af8e471fcac/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d791ea1e0a2341a8fb2ca8b593063af8e471fcac/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=d791ea1e0a2341a8fb2ca8b593063af8e471fcac", "patch": "@@ -6613,7 +6613,9 @@ fold (expr)\n \t    else if (TREE_INT_CST_HIGH (arg1) == 0\n \t\t      && (TREE_INT_CST_LOW (arg1)\n \t\t\t  == ((unsigned HOST_WIDE_INT) 1 << (width - 1)) - 1)\n-\t\t      && TREE_UNSIGNED (TREE_TYPE (arg1)))\n+\t\t      && TREE_UNSIGNED (TREE_TYPE (arg1))\n+\t\t\t /* signed_type does not work on pointer types.  */\n+\t\t      && INTEGRAL_TYPE_P (TREE_TYPE (arg1)))\n \n \t      switch (TREE_CODE (t))\n \t\t{"}, {"sha": "61ee72e23fbff54f48dd7fda4b025943289ab09a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d791ea1e0a2341a8fb2ca8b593063af8e471fcac/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d791ea1e0a2341a8fb2ca8b593063af8e471fcac/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d791ea1e0a2341a8fb2ca8b593063af8e471fcac", "patch": "@@ -1,3 +1,7 @@\n+2001-04-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c-torture/execute/20010329-1.c: New test.\n+\n 2001-03-28  Loren J. Rittle  <ljrittle@acm.org>\n \n \t* g++.old-deja/g++.other/eh4.C: Fix typo."}, {"sha": "e28d6d7c72e910b40c9bb4c8fc87ca68b636845c", "filename": "gcc/testsuite/gcc.c-torture/execute/20010329-1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d791ea1e0a2341a8fb2ca8b593063af8e471fcac/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010329-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d791ea1e0a2341a8fb2ca8b593063af8e471fcac/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010329-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20010329-1.c?ref=d791ea1e0a2341a8fb2ca8b593063af8e471fcac", "patch": "@@ -0,0 +1,14 @@\n+#include <limits.h>\n+\n+int main (void)\n+{\n+  void *x = ((void *)((unsigned int)INT_MAX + 2));\n+  void *y = ((void *)((unsigned long)LONG_MAX + 2));\n+  if (x >= ((void *)((unsigned int)INT_MAX + 1))\n+      && x <= ((void *)((unsigned int)INT_MAX + 6))\n+      && y >= ((void *)((unsigned long)LONG_MAX + 1))\n+      && y <= ((void *)((unsigned long)LONG_MAX + 6)))\n+    exit (0);\n+  else\n+    abort ();\n+}"}]}