{"sha": "51937d2c986f362de353e17daed695ad4a28ee32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE5MzdkMmM5ODZmMzYyZGUzNTNlMTdkYWVkNjk1YWQ0YTI4ZWUzMg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2002-07-24T19:49:21Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-07-24T19:49:21Z"}, "message": "re PR libstdc++/7286 (placement operator delete issue)\n\n\n2002-07-24  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/7286\n\t* libsupc++/new: Add placement delete.\n\t* testsuite/18_support/new_delete_placement.cc: New.\n\n\t* docs/html/abi.txt: Fix typos.\n\nFrom-SVN: r55718", "tree": {"sha": "9d0a80e1bbe2cb5048fa2696df17b135786db5a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d0a80e1bbe2cb5048fa2696df17b135786db5a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51937d2c986f362de353e17daed695ad4a28ee32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51937d2c986f362de353e17daed695ad4a28ee32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51937d2c986f362de353e17daed695ad4a28ee32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51937d2c986f362de353e17daed695ad4a28ee32/comments", "author": null, "committer": null, "parents": [{"sha": "3ade30eaf7694319bd1acac3d798582d63886d37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ade30eaf7694319bd1acac3d798582d63886d37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ade30eaf7694319bd1acac3d798582d63886d37"}], "stats": {"total": 70, "additions": 61, "deletions": 9}, "files": [{"sha": "801925ad42d8b84c6395ed15be89e12055c5c380", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51937d2c986f362de353e17daed695ad4a28ee32/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51937d2c986f362de353e17daed695ad4a28ee32/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=51937d2c986f362de353e17daed695ad4a28ee32", "patch": "@@ -1,3 +1,11 @@\n+2002-07-24  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/7286\n+\t* libsupc++/new: Add placement delete.\n+\t* testsuite/18_support/new_delete_placement.cc: New.\n+\n+\t* docs/html/abi.txt: Fix typos.\n+\t\n 2002-07-23  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* docs/html/documentation.html: Remove libstdc++-v3.0.86 links,"}, {"sha": "175e743ae6030c8c633585833398fbe76ca867d3", "filename": "libstdc++-v3/docs/html/abi.txt", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51937d2c986f362de353e17daed695ad4a28ee32/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fabi.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51937d2c986f362de353e17daed695ad4a28ee32/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fabi.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fabi.txt?ref=51937d2c986f362de353e17daed695ad4a28ee32", "patch": "@@ -139,15 +139,15 @@ one with a new compiler and an old library, and the other with an old\n compiler and a new library, and look for testsuite regressions)\n \n Two.  \n-Have the libstdc++ testesuite proactively check the library\n-ABI. Probably a couple of items would be covered, although perhaps not\n-all would need to be done at once for this to be useful. Compute the\n-list of names exported in the shared version of libstdc++\n-binary. Then, save this list of names. Have this list of names\n-re-computed for each new binary of the same version. Next, use sizeof\n-and offset to compute offsets for each structure and type in the\n-standard library, saving to another datafile. Then, compute this for\n-new binaries, and look for differences.\n+Have the libstdc++ testsuite proactive check the library ABI. Probably\n+a couple of items would be covered, although perhaps not all would\n+need to be done at once for this to be useful. Compute the list of\n+names exported in the shared version of libstdc++ binary. Then, save\n+this list of names. Have this list of names re-computed for each new\n+binary of the same version. Next, use sizeof, alignof, and offset to\n+compute offsets for each structure and type in the standard library,\n+saving to another datafile. Then, compute this for new binaries, and\n+look for differences.\n \n The thought is to choose one or both of these approaches, and to use a\n Makefile hook, perhaps 'make check-abi', to add this capability to the"}, {"sha": "ad37c52789b8b72ed5ba83378343c0432b5b0c6d", "filename": "libstdc++-v3/libsupc++/new", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51937d2c986f362de353e17daed695ad4a28ee32/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51937d2c986f362de353e17daed695ad4a28ee32/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fnew?ref=51937d2c986f362de353e17daed695ad4a28ee32", "patch": "@@ -91,6 +91,10 @@ void operator delete[](void*, const std::nothrow_t&) throw();\n // Default placement versions of operator new.\n inline void* operator new(std::size_t, void* __p) throw() { return __p; }\n inline void* operator new[](std::size_t, void* __p) throw() { return __p; }\n+\n+// Default placement versions of operator delete.\n+inline void  operator delete  (void* ptr, void*) throw() { };\n+inline void  operator delete[](void* ptr, void*) throw() { };\n //@}\n } // extern \"C++\"\n "}, {"sha": "e65f19ca57f7056fbedb72db3da255474e15369a", "filename": "libstdc++-v3/testsuite/18_support/new_delete_placement.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51937d2c986f362de353e17daed695ad4a28ee32/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnew_delete_placement.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51937d2c986f362de353e17daed695ad4a28ee32/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnew_delete_placement.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnew_delete_placement.cc?ref=51937d2c986f362de353e17daed695ad4a28ee32", "patch": "@@ -0,0 +1,40 @@\n+// 2002-07-24 Benjamin Kosnik\n+\n+// Copyright (C) 2002 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 18.4.1.3 - Placement forms\n+\n+#include <new>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/7286\n+void test01()\n+{\n+  void* pc = new char;\n+  void* pa = new char[10];\n+  void* tmp;\n+  operator delete(pc, tmp);\n+  operator delete[](pa, tmp);\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}