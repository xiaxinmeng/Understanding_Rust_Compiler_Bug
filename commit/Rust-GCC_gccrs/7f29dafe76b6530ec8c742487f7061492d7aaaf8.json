{"sha": "7f29dafe76b6530ec8c742487f7061492d7aaaf8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2YyOWRhZmU3NmI2NTMwZWM4Yzc0MjQ4N2Y3MDYxNDkyZDdhYWFmOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-11-22T09:54:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-11-22T09:54:14Z"}, "message": "re PR c++/87229 (ICE: tree code 'call_expr' is not supported in LTO streams)\n\n2018-11-22  Richard Biener  <rguenther@suse.de>\n\n\tPR lto/87229\n\tPR lto/88112\n\t* lto-streamer-out.c (lto_is_streamable): Allow CALL_EXPRs\n\twhich can appear in size expressions.\n\t* tree-streamer-in.c (unpack_ts_base_value_fields): Stream\n\tCALL_EXPR_BY_DESCRIPTOR.\n\t(streamer_read_tree_bitfields): Stream CALL_EXPR_IFN.\n\t* tree-streamer-out.c (pack_ts_base_value_fields): Stream\n\tCALL_EXPR_BY_DESCRIPTOR.\n\t(streamer_write_tree_bitfields): Stream CALL_EXPR_IFN.\n\n\tRevert\n\tPR lto/87229\n\t* tree.c (free_lang_data_in_one_sizepos): Free non-gimple-val\n\tsizepos values.\n\nFrom-SVN: r266372", "tree": {"sha": "11e2bf2f66bf672dc32d6aa0ada91ad0306fd52c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11e2bf2f66bf672dc32d6aa0ada91ad0306fd52c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f29dafe76b6530ec8c742487f7061492d7aaaf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f29dafe76b6530ec8c742487f7061492d7aaaf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f29dafe76b6530ec8c742487f7061492d7aaaf8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f29dafe76b6530ec8c742487f7061492d7aaaf8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d42ef0f85fa3ceacfa64fdded5c08f5bfb669185", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d42ef0f85fa3ceacfa64fdded5c08f5bfb669185", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d42ef0f85fa3ceacfa64fdded5c08f5bfb669185"}], "stats": {"total": 40, "additions": 32, "deletions": 8}, "files": [{"sha": "b54ecfc1306ce50402a6280f3434f36695c2ac7b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f29dafe76b6530ec8c742487f7061492d7aaaf8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f29dafe76b6530ec8c742487f7061492d7aaaf8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f29dafe76b6530ec8c742487f7061492d7aaaf8", "patch": "@@ -1,3 +1,21 @@\n+2018-11-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR lto/87229\n+\tPR lto/88112\n+\t* lto-streamer-out.c (lto_is_streamable): Allow CALL_EXPRs\n+\twhich can appear in size expressions.\n+\t* tree-streamer-in.c (unpack_ts_base_value_fields): Stream\n+\tCALL_EXPR_BY_DESCRIPTOR.\n+\t(streamer_read_tree_bitfields): Stream CALL_EXPR_IFN.\n+\t* tree-streamer-out.c (pack_ts_base_value_fields): Stream\n+\tCALL_EXPR_BY_DESCRIPTOR.\n+\t(streamer_write_tree_bitfields): Stream CALL_EXPR_IFN.\n+\n+\tRevert\n+\tPR lto/87229\n+\t* tree.c (free_lang_data_in_one_sizepos): Free non-gimple-val\n+\tsizepos values.\n+\n 2018-11-22  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/88069"}, {"sha": "01193390cab4a7130d6414694037e44ea700ba8c", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f29dafe76b6530ec8c742487f7061492d7aaaf8/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f29dafe76b6530ec8c742487f7061492d7aaaf8/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=7f29dafe76b6530ec8c742487f7061492d7aaaf8", "patch": "@@ -306,7 +306,6 @@ lto_is_streamable (tree expr)\n      name version in lto_output_tree_ref (see output_ssa_names).  */\n   return !is_lang_specific (expr)\n \t && code != SSA_NAME\n-\t && code != CALL_EXPR\n \t && code != LANG_TYPE\n \t && code != MODIFY_EXPR\n \t && code != INIT_EXPR"}, {"sha": "09ea70b1cbadbba3810d1d7a64e172a1bf2a8675", "filename": "gcc/tree-streamer-in.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f29dafe76b6530ec8c742487f7061492d7aaaf8/gcc%2Ftree-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f29dafe76b6530ec8c742487f7061492d7aaaf8/gcc%2Ftree-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-in.c?ref=7f29dafe76b6530ec8c742487f7061492d7aaaf8", "patch": "@@ -158,6 +158,11 @@ unpack_ts_base_value_fields (struct bitpack_d *bp, tree expr)\n       SSA_NAME_IS_DEFAULT_DEF (expr) = (unsigned) bp_unpack_value (bp, 1);\n       bp_unpack_value (bp, 8);\n     }\n+  else if (TREE_CODE (expr) == CALL_EXPR)\n+    {\n+      CALL_EXPR_BY_DESCRIPTOR (expr) = (unsigned) bp_unpack_value (bp, 1);\n+      bp_unpack_value (bp, 8);\n+    }\n   else\n     bp_unpack_value (bp, 9);\n }\n@@ -521,6 +526,8 @@ streamer_read_tree_bitfields (struct lto_input_block *ib,\n \t    MR_DEPENDENCE_BASE (expr)\n \t      = (unsigned)bp_unpack_value (&bp, sizeof (short) * 8);\n \t}\n+      else if (code == CALL_EXPR)\n+\tCALL_EXPR_IFN (expr) = bp_unpack_enum (&bp, internal_fn, IFN_LAST);\n     }\n \n   if (CODE_CONTAINS_STRUCT (code, TS_BLOCK))"}, {"sha": "4e7c7429561f139003ca28fc85bc3480d747aa4c", "filename": "gcc/tree-streamer-out.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f29dafe76b6530ec8c742487f7061492d7aaaf8/gcc%2Ftree-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f29dafe76b6530ec8c742487f7061492d7aaaf8/gcc%2Ftree-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-out.c?ref=7f29dafe76b6530ec8c742487f7061492d7aaaf8", "patch": "@@ -129,6 +129,11 @@ pack_ts_base_value_fields (struct bitpack_d *bp, tree expr)\n       bp_pack_value (bp, SSA_NAME_IS_DEFAULT_DEF (expr), 1);\n       bp_pack_value (bp, 0, 8);\n     }\n+  else if (TREE_CODE (expr) == CALL_EXPR)\n+    {\n+      bp_pack_value (bp, CALL_EXPR_BY_DESCRIPTOR (expr), 1);\n+      bp_pack_value (bp, 0, 8);\n+    }\n   else\n     bp_pack_value (bp, 0, 9);\n }\n@@ -457,6 +462,8 @@ streamer_write_tree_bitfields (struct output_block *ob, tree expr)\n \t  if (MR_DEPENDENCE_CLIQUE (expr) != 0)\n \t    bp_pack_value (&bp, MR_DEPENDENCE_BASE (expr), sizeof (short) * 8);\n \t}\n+      else if (code == CALL_EXPR)\n+\tbp_pack_enum (&bp, internal_fn, IFN_LAST, CALL_EXPR_IFN (expr));\n     }\n \n   if (CODE_CONTAINS_STRUCT (code, TS_BLOCK))"}, {"sha": "39a924644144498726c5cf0f07da8cacb6d6e18c", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f29dafe76b6530ec8c742487f7061492d7aaaf8/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f29dafe76b6530ec8c742487f7061492d7aaaf8/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=7f29dafe76b6530ec8c742487f7061492d7aaaf8", "patch": "@@ -5347,13 +5347,6 @@ free_lang_data_in_one_sizepos (tree *expr_p)\n   tree expr = *expr_p;\n   if (CONTAINS_PLACEHOLDER_P (expr))\n     *expr_p = build0 (PLACEHOLDER_EXPR, TREE_TYPE (expr));\n-  /* ???  We have to reset all non-GIMPLE sizepos because those eventually\n-     refer to trees we cannot stream.  See for example PR87229 which\n-     shows an example with non-gimplified abstract origins in C++.\n-     Note this should only happen for abstract copies so setting sizes\n-     to NULL is OK (but we cannot easily assert this).  */\n-  else if (expr && !is_gimple_val (expr))\n-    *expr_p = NULL_TREE;\n }\n \n "}]}