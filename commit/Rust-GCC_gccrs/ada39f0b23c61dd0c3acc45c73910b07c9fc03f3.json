{"sha": "ada39f0b23c61dd0c3acc45c73910b07c9fc03f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRhMzlmMGIyM2M2MWRkMGMzYWNjNDVjNzM5MTBiMDdjOWZjMDNmMw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-04-15T16:12:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-04-15T16:12:01Z"}, "message": "omp-low.c (lower_rec_input_clauses): Build correct address expressions.\n\n2009-04-15  Richard Guenther  <rguenther@suse.de>\n\n\t* omp-low.c (lower_rec_input_clauses): Build correct address\n\texpressions.\n\t(expand_omp_for_generic): Fix multiplication type.\n\t* tree-loop-distribution.c (build_size_arg): Build a\n\tsize_t argument.\n\t(generate_memset_zero): Fix types.\n\t* tree-profile.c (prepare_instrumented_value): Correctly\n\twiden a pointer.\n\nFrom-SVN: r146129", "tree": {"sha": "df6e6b24e71dfa49774871537c516ac031b4d427", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df6e6b24e71dfa49774871537c516ac031b4d427"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ada39f0b23c61dd0c3acc45c73910b07c9fc03f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ada39f0b23c61dd0c3acc45c73910b07c9fc03f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ada39f0b23c61dd0c3acc45c73910b07c9fc03f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ada39f0b23c61dd0c3acc45c73910b07c9fc03f3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6866c6e8ff0cbc1d57f9ae603b5af155def03484", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6866c6e8ff0cbc1d57f9ae603b5af155def03484", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6866c6e8ff0cbc1d57f9ae603b5af155def03484"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "7df2ef940c285647b9561bd9ce5068c5678a88d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada39f0b23c61dd0c3acc45c73910b07c9fc03f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada39f0b23c61dd0c3acc45c73910b07c9fc03f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ada39f0b23c61dd0c3acc45c73910b07c9fc03f3", "patch": "@@ -1,3 +1,14 @@\n+2009-04-15  Richard Guenther  <rguenther@suse.de>\n+\n+\t* omp-low.c (lower_rec_input_clauses): Build correct address\n+\texpressions.\n+\t(expand_omp_for_generic): Fix multiplication type.\n+\t* tree-loop-distribution.c (build_size_arg): Build a\n+\tsize_t argument.\n+\t(generate_memset_zero): Fix types.\n+\t* tree-profile.c (prepare_instrumented_value): Correctly\n+\twiden a pointer.\n+\n 2009-04-15  Ian Lance Taylor  <iant@google.com>\n \n \t* c.opt (Wenum-compare): Enable for C and Objc.  Initialize to -1."}, {"sha": "c28bbb0a1caef737d67f97a12244da7e54c66efd", "filename": "gcc/omp-low.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada39f0b23c61dd0c3acc45c73910b07c9fc03f3/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada39f0b23c61dd0c3acc45c73910b07c9fc03f3/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=ada39f0b23c61dd0c3acc45c73910b07c9fc03f3", "patch": "@@ -2318,14 +2318,14 @@ lower_rec_input_clauses (tree clauses, gimple_seq *ilist, gimple_seq *dlist,\n \t\t\t\t\t  name);\n \t\t  gimple_add_tmp_var (x);\n \t\t  TREE_ADDRESSABLE (x) = 1;\n-\t\t  x = build_fold_addr_expr_with_type (x, TREE_TYPE (new_var));\n+\t\t  x = build_fold_addr_expr (x);\n \t\t}\n \t      else\n \t\t{\n \t\t  x = build_call_expr (built_in_decls[BUILT_IN_ALLOCA], 1, x);\n-\t\t  x = fold_convert (TREE_TYPE (new_var), x);\n \t\t}\n \n+\t      x = fold_convert (TREE_TYPE (new_var), x);\n \t      gimplify_assign (new_var, x, ilist);\n \n \t      new_var = build_fold_indirect_ref (new_var);\n@@ -3843,7 +3843,8 @@ expand_omp_for_generic (struct omp_region *region,\n \t    itype = lang_hooks.types.type_for_size (TYPE_PRECISION (vtype), 0);\n \t  t = fold_build2 (TRUNC_MOD_EXPR, type, tem, counts[i]);\n \t  t = fold_convert (itype, t);\n-\t  t = fold_build2 (MULT_EXPR, itype, t, fd->loops[i].step);\n+\t  t = fold_build2 (MULT_EXPR, itype, t,\n+\t\t\t   fold_convert (itype, fd->loops[i].step));\n \t  if (POINTER_TYPE_P (vtype))\n \t    t = fold_build2 (POINTER_PLUS_EXPR, vtype,\n \t\t\t     fd->loops[i].n1, fold_convert (sizetype, t));"}, {"sha": "a5c73165cb49fd7bef5fe24f68338537eced4b19", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada39f0b23c61dd0c3acc45c73910b07c9fc03f3/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada39f0b23c61dd0c3acc45c73910b07c9fc03f3/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=ada39f0b23c61dd0c3acc45c73910b07c9fc03f3", "patch": "@@ -216,16 +216,18 @@ generate_loops_for_partition (struct loop *loop, bitmap partition, bool copy_p)\n   return true;\n }\n \n-/* Build size argument.  */\n+/* Build the size argument for a memset call.  */\n \n static inline tree\n build_size_arg (tree nb_iter, tree op, gimple_seq* stmt_list)\n {\n     tree nb_bytes;\n     gimple_seq stmts = NULL;\n \n-    nb_bytes = fold_build2 (MULT_EXPR, TREE_TYPE (nb_iter),\n-\t\t\t    nb_iter, TYPE_SIZE_UNIT (TREE_TYPE (op)));\n+    nb_bytes = fold_build2 (MULT_EXPR, size_type_node,\n+\t\t\t    fold_convert (size_type_node, nb_iter),\n+\t\t\t    fold_convert (size_type_node,\n+\t\t\t\t\t  TYPE_SIZE_UNIT (TREE_TYPE (op))));\n     nb_bytes = force_gimple_operand (nb_bytes, &stmts, true, NULL);\n     gimple_seq_add_seq (stmt_list, stmts);\n \n@@ -272,7 +274,8 @@ generate_memset_zero (gimple stmt, tree op0, tree nb_iter,\n     {\n       nb_bytes = build_size_arg (nb_iter, op0, &stmt_list);\n       addr_base = size_binop (PLUS_EXPR, DR_OFFSET (dr), DR_INIT (dr));\n-      addr_base = fold_build2 (MINUS_EXPR, sizetype, addr_base, nb_bytes);\n+      addr_base = fold_build2 (MINUS_EXPR, sizetype, addr_base,\n+\t\t\t       fold_convert (sizetype, nb_bytes));\n       addr_base = force_gimple_operand (addr_base, &stmts, true, NULL);\n       gimple_seq_add_seq (&stmt_list, stmts);\n \n@@ -291,7 +294,7 @@ generate_memset_zero (gimple stmt, tree op0, tree nb_iter,\n   fn = build1 (ADDR_EXPR, build_pointer_type (fntype), fndecl);\n \n   if (!nb_bytes)\n-      nb_bytes = build_size_arg (nb_iter, op0, &stmt_list);\n+    nb_bytes = build_size_arg (nb_iter, op0, &stmt_list);\n   fn_call = gimple_build_call (fn, 3, mem, integer_zero_node, nb_bytes);\n   gimple_seq_add_stmt (&stmt_list, fn_call);\n "}, {"sha": "8ffedf1823edbd80d921d1629e51c76dba01abd6", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ada39f0b23c61dd0c3acc45c73910b07c9fc03f3/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ada39f0b23c61dd0c3acc45c73910b07c9fc03f3/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=ada39f0b23c61dd0c3acc45c73910b07c9fc03f3", "patch": "@@ -208,6 +208,8 @@ static tree\n prepare_instrumented_value (gimple_stmt_iterator *gsi, histogram_value value)\n {\n   tree val = value->hvalue.value;\n+  if (POINTER_TYPE_P (TREE_TYPE (val)))\n+    val = fold_convert (sizetype, val);\n   return force_gimple_operand_gsi (gsi, fold_convert (gcov_type_node, val),\n \t\t\t\t   true, NULL_TREE, true, GSI_SAME_STMT);\n }"}]}