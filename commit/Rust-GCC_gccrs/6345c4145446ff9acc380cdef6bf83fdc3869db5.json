{"sha": "6345c4145446ff9acc380cdef6bf83fdc3869db5", "node_id": "C_kwDOANBUbNoAKDYzNDVjNDE0NTQ0NmZmOWFjYzM4MGNkZWY2YmY4M2ZkYzM4NjlkYjU", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-07-08T00:16:22Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-07-08T00:16:22Z"}, "message": "Daily bump.", "tree": {"sha": "9e87f2a7ca9bc22d4d5ad432a4db698fea8c8504", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e87f2a7ca9bc22d4d5ad432a4db698fea8c8504"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6345c4145446ff9acc380cdef6bf83fdc3869db5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6345c4145446ff9acc380cdef6bf83fdc3869db5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6345c4145446ff9acc380cdef6bf83fdc3869db5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6345c4145446ff9acc380cdef6bf83fdc3869db5/comments", "author": null, "committer": null, "parents": [{"sha": "d8ddf1fa098fa50929ea0a1569a8e38d80fadbaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8ddf1fa098fa50929ea0a1569a8e38d80fadbaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8ddf1fa098fa50929ea0a1569a8e38d80fadbaf"}], "stats": {"total": 231, "additions": 230, "deletions": 1}, "files": [{"sha": "2f5be38bf545f9de5e340f2ed2bb2320ff046f64", "filename": "gcc/ChangeLog", "status": "modified", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6345c4145446ff9acc380cdef6bf83fdc3869db5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6345c4145446ff9acc380cdef6bf83fdc3869db5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6345c4145446ff9acc380cdef6bf83fdc3869db5", "patch": "@@ -1,3 +1,77 @@\n+2022-07-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* diagnostic-format-json.cc (json_from_location_range): Update for\n+\tremoval of label_text::maybe_free in favor of automatic memory\n+\tmanagement.\n+\t* diagnostic-format-sarif.cc\n+\t(sarif_builder::make_location_object): Likewise.\n+\t* diagnostic-show-locus.cc (struct pod_label_text): New.\n+\t(class line_label): Convert m_text from label_text to pod_label_text.\n+\t(layout::print_any_labels): Move \"text\" to the line_label.\n+\t* tree-diagnostic-path.cc (path_label::get_text): Update for\n+\tremoval of label_text::maybe_free in favor of automatic memory\n+\tmanagement.\n+\t(event_range::print): Likewise.\n+\t(default_tree_diagnostic_path_printer): Likewise.\n+\t(default_tree_make_json_for_path): Likewise.\n+\n+2022-07-07  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\t* statistics.cc (get_function_name): Add check to see if fn is not NULL.\n+\n+2022-07-07  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-into-ssa.cc (iterating_old_ssa_names): New.\n+\t(add_new_name_mapping): Grow {new,old}_ssa_names separately\n+\tand only when actually needed.  Assert we are not growing\n+\tthe old_ssa_names set when iterating over it.\n+\t(update_ssa): Remove old_ssa_names copying and empty_p\n+\tquery, note we are iterating over it and expect no set changes.\n+\n+2022-07-07  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* config/i386/intelmic-mkoffload.cc (generate_host_descr_file)\n+\t(prepare_target_image, main): Handle OpenMP 'requires'.\n+\t(generate_host_descr_file): Switch to 'GOMP_offload_register_ver',\n+\t'GOMP_offload_unregister_ver'.\n+\n+2022-07-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR target/106219\n+\t* config/i386/i386-builtins.cc (ix86_add_new_builtins): Properly\n+\tset DECL_PURE_P.\n+\n+2022-07-07  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-loop-manip.cc (add_exit_phis_var): Return the\n+\tnumber of LC PHIs inserted.\n+\t(add_exit_phis): Return whether any variable required\n+\tmultiple LC PHI nodes.\n+\t(rewrite_into_loop_closed_ssa_1): Use TODO_update_ssa_no_phi\n+\twhen possible.\n+\n+2022-07-07  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-loop-manip.cc (compute_live_loop_exits): Take\n+\tthe def loop exit block bitmap as argument instead of\n+\tre-computing it here.\n+\t(add_exit_phis_var): Adjust.\n+\t(loop_name_cmp): New function.\n+\t(add_exit_phis): Sort variables to insert LC PHI nodes\n+\tafter definition loop, for each definition loop compute\n+\tthe exit block bitmap once.\n+\t(get_loops_exit): Remove.\n+\t(rewrite_into_loop_closed_ssa_1): Do not pre-record\n+\tall loop exit blocks into bitmaps.  Record loop exits\n+\tif required.\n+\n+2022-07-07  Dimitrije Milosevic  <Dimitrije.Milosevic@Syrmia.com>\n+\n+\t* config/mips/mips.cc (mips_asan_shadow_offset): Reformat\n+\tto handle the N32 ABI.\n+\t* config/mips/mips.h (SUBTARGET_SHADOW_OFFSET): Remove\n+\tthe macro, as it is not needed anymore.\n+\n 2022-07-06  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* config/gcn/mkoffload.cc (process_obj): Clarify 'target_data' ->"}, {"sha": "aa8fe3c891120c640793632e255e2fb56bd7a0d9", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6345c4145446ff9acc380cdef6bf83fdc3869db5/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6345c4145446ff9acc380cdef6bf83fdc3869db5/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=6345c4145446ff9acc380cdef6bf83fdc3869db5", "patch": "@@ -1 +1 @@\n-20220707\n+20220708"}, {"sha": "06d845465fa615becf1c80888d5dd62180a282ad", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6345c4145446ff9acc380cdef6bf83fdc3869db5/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6345c4145446ff9acc380cdef6bf83fdc3869db5/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=6345c4145446ff9acc380cdef6bf83fdc3869db5", "patch": "@@ -1,3 +1,46 @@\n+2022-07-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* checker-path.cc (start_cfg_edge_event::get_desc): Update for\n+\tsuperedge::get_description returning a label_text.\n+\t* engine.cc (feasibility_state::maybe_update_for_edge): Likewise.\n+\t* supergraph.cc (superedge::dump): Likewise.\n+\t(superedge::get_description): Convert return type from char * to\n+\tlabel_text.\n+\t* supergraph.h (superedge::get_description): Likewise.\n+\n+2022-07-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* call-info.cc (call_info::print): Update for removal of\n+\tlabel_text::maybe_free in favor of automatic memory management.\n+\t* checker-path.cc (checker_event::dump): Likewise.\n+\t(checker_event::prepare_for_emission): Likewise.\n+\t(state_change_event::get_desc): Likewise.\n+\t(superedge_event::should_filter_p): Likewise.\n+\t(start_cfg_edge_event::get_desc): Likewise.\n+\t(warning_event::get_desc): Likewise.\n+\t(checker_path::dump): Likewise.\n+\t(checker_path::debug): Likewise.\n+\t* diagnostic-manager.cc\n+\t(diagnostic_manager::prune_for_sm_diagnostic): Likewise.\n+\t(diagnostic_manager::prune_interproc_events): Likewise.\n+\t* program-state.cc (sm_state_map::to_json): Likewise.\n+\t* region.cc (region::to_json): Likewise.\n+\t* sm-malloc.cc (inform_nonnull_attribute): Likewise.\n+\t* store.cc (binding_map::to_json): Likewise.\n+\t(store::to_json): Likewise.\n+\t* svalue.cc (svalue::to_json): Likewise.\n+\n+2022-07-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/106225\n+\t* sm-taint.cc (taint_state_machine::on_stmt): Move handling of\n+\tassignments from division to...\n+\t(taint_state_machine::check_for_tainted_divisor): ...this new\n+\tfunction.  Reject warning when the divisor is known to be non-zero.\n+\t* sm.cc: Include \"analyzer/program-state.h\".\n+\t(sm_context::get_old_region_model): New.\n+\t* sm.h (sm_context::get_old_region_model): New decl.\n+\n 2022-07-06  Immad Mir  <mirimmad@outlook.com>\n \n \tPR analyzer/106184"}, {"sha": "e16014feaae3adeb9d3117af6d1eff5157713867", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6345c4145446ff9acc380cdef6bf83fdc3869db5/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6345c4145446ff9acc380cdef6bf83fdc3869db5/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=6345c4145446ff9acc380cdef6bf83fdc3869db5", "patch": "@@ -1,3 +1,9 @@\n+2022-07-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* c-format.cc (range_label_for_format_type_mismatch::get_text):\n+\tUpdate for removal of label_text::maybe_free in favor of automatic\n+\tmemory management.\n+\n 2022-07-06  Lewis Hyatt  <lhyatt@gmail.com>\n \n \tPR preprocessor/53920"}, {"sha": "ad72c03dd429d3220eeeb9aa890e151f516a6e8c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6345c4145446ff9acc380cdef6bf83fdc3869db5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6345c4145446ff9acc380cdef6bf83fdc3869db5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6345c4145446ff9acc380cdef6bf83fdc3869db5", "patch": "@@ -1,3 +1,25 @@\n+2022-07-07  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105956\n+\t* pt.cc (template_arg_to_parm): Define.\n+\t(tsubst_argument_pack): Try to reuse the corresponding\n+\tARGUMENT_PACK from 'args' when substituting into a generic\n+\tARGUMENT_PACK for a variadic template parameter.\n+\t(tsubst_template_args): Move variable declarations closer to\n+\ttheir first use.  Replace 'orig_t' with 'r'.  Rename 'need_new'\n+\tto 'const_subst_p'.  Heuristically detect if the substituted\n+\telements are identical to that of a level from 'args' and avoid\n+\tallocating a new TREE_VEC if so.  Add sanity check for the\n+\tlength of the new TREE_VEC, and remove dead ARGUMENT_PACK_P test.\n+\t(tsubst_decl) <case TYPE_DECL, case VAR_DECL>: Revert\n+\tr13-1045-gcb7fd1ea85feea change for avoiding substitution into\n+\tDECL_TI_ARGS, but still avoid coercion in this case.\n+\n+2022-07-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/87729\n+\t* class.cc (warn_hidden): Ignore [cd]tors.\n+\n 2022-07-06  Lewis Hyatt  <lhyatt@gmail.com>\n \n \tPR c++/53431"}, {"sha": "1c948f52947d469de9c800934e385f1e9ed24ad3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6345c4145446ff9acc380cdef6bf83fdc3869db5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6345c4145446ff9acc380cdef6bf83fdc3869db5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6345c4145446ff9acc380cdef6bf83fdc3869db5", "patch": "@@ -1,3 +1,29 @@\n+2022-07-07  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105956\n+\t* g++.dg/cpp0x/variadic183.C: New test.\n+\n+2022-07-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/106225\n+\t* gcc.dg/analyzer/taint-divisor-1.c: Add test coverage for various\n+\tcorrect and incorrect checks against zero.\n+\n+2022-07-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/87729\n+\t* g++.dg/warn/Woverloaded-virt3.C: New test.\n+\n+2022-07-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR target/106219\n+\t* g++.dg/pr106219.C: New testcase.\n+\n+2022-07-07  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* gcc.target/powerpc/ppc-fortran/pr80108-1.f90: Change\n+\t-mfloat128-type to -mfloat128.\n+\n 2022-07-06  Lewis Hyatt  <lhyatt@gmail.com>\n \n \tPR preprocessor/53920"}, {"sha": "d81db6b863870edff3d1a80b4136c4af9dfba647", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6345c4145446ff9acc380cdef6bf83fdc3869db5/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6345c4145446ff9acc380cdef6bf83fdc3869db5/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=6345c4145446ff9acc380cdef6bf83fdc3869db5", "patch": "@@ -1,3 +1,14 @@\n+2022-07-07  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* macho.c (backtrace_initialize) [HAVE_MACH_O_DYLD_H]: Don't exit\n+\tloop if we can't find debug info for one shared library.\n+\n+2022-07-07  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* Makefile.am (MAKETESTS): New variable split out of TESTS.\n+\t(CLEANFILES): Replace TESTS with BUILDTESTS and MAKETESTS.\n+\t* Makefile.in: Regenerate.\n+\n 2022-06-27  Ian Lance Taylor  <iant@golang.org>\n \n \t* configure.ac: Use grep instead of fgrep."}, {"sha": "6b883a08b02b42554e1ba8fc9c96ced2e4644d2b", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6345c4145446ff9acc380cdef6bf83fdc3869db5/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6345c4145446ff9acc380cdef6bf83fdc3869db5/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=6345c4145446ff9acc380cdef6bf83fdc3869db5", "patch": "@@ -1,3 +1,12 @@\n+2022-07-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* include/line-map.h: Include <utility>.\n+\t(class label_text): Delete maybe_free method in favor of a\n+\tdestructor.  Add move ctor and assignment operator.  Add deletion\n+\tof the copy ctor and copy-assignment operator.  Rename field\n+\tm_caller_owned to m_owned.  Add std::move where necessary; add\n+\tmoved_from member function.\n+\n 2022-06-28  Lewis Hyatt  <lhyatt@gmail.com>\n \n \t* ucnid.h: Regenerated for Unicode 14.0."}, {"sha": "11d4f5629ae210afc580d3eb92198009e5d445ab", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6345c4145446ff9acc380cdef6bf83fdc3869db5/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6345c4145446ff9acc380cdef6bf83fdc3869db5/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=6345c4145446ff9acc380cdef6bf83fdc3869db5", "patch": "@@ -1,3 +1,24 @@\n+2022-07-07  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* target.c (GOMP_offload_register, GOMP_offload_unregister):\n+\tDenote as legacy entry points.\n+\t* testsuite/lib/libgomp.exp\n+\t(check_effective_target_offload_target_any): New proc.\n+\t* testsuite/libgomp.c-c++-common/requires-1.c: Enable for\n+\t'offload_target_any'.\n+\t* testsuite/libgomp.c-c++-common/requires-3.c: Likewise.\n+\t* testsuite/libgomp.c-c++-common/requires-7.c: Likewise.\n+\t* testsuite/libgomp.fortran/requires-1.f90: Likewise.\n+\n+2022-07-07  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.c-c++-common/requires-4.c: Enhance testing.\n+\t* testsuite/libgomp.c-c++-common/requires-5.c: Likewise.\n+\n+2022-07-07  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.c-c++-common/requires-3.c: Adjust.\n+\n 2022-07-06  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* target.c (GOMP_offload_register_ver): Clarify 'target_data' ->"}, {"sha": "3cd8bb7b4900ce32339a7c8ea95e83c4881ce6f7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6345c4145446ff9acc380cdef6bf83fdc3869db5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6345c4145446ff9acc380cdef6bf83fdc3869db5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6345c4145446ff9acc380cdef6bf83fdc3869db5", "patch": "@@ -1,3 +1,9 @@\n+2022-07-07  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR c++/89074\n+\t* include/bits/char_traits.h (__gnu_cxx::char_traits::move):\n+\tRemove workaround for front-end bug.\n+\n 2022-07-05  Alexandre Oliva  <oliva@adacore.com>\n \n \t* testsuite/util/testsuite_fs.h (nonexistent_path): Explain"}, {"sha": "16e44c8eed426faaefce1d792faec9a392eefbe0", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6345c4145446ff9acc380cdef6bf83fdc3869db5/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6345c4145446ff9acc380cdef6bf83fdc3869db5/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=6345c4145446ff9acc380cdef6bf83fdc3869db5", "patch": "@@ -1,3 +1,14 @@\n+2022-07-07  Martin Liska  <mliska@suse.cz>\n+\n+\tPR lto/106170\n+\t* configure.ac: Configure HAVE_PTHREAD_LOCKING.\n+\t* lto-plugin.c (LOCK_SECTION): New.\n+\t(UNLOCK_SECTION): New.\n+\t(claim_file_handler): Use the newly added macros.\n+\t(onload): Likewise.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\n 2022-07-01  Pekka Sepp\u00e4nen  <pexu@gcc.mail.kapsi.fi>\n \n \tPR lto/106118"}]}