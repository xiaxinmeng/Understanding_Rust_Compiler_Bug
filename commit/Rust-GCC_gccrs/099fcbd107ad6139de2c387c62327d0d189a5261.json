{"sha": "099fcbd107ad6139de2c387c62327d0d189a5261", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk5ZmNiZDEwN2FkNjEzOWRlMmMzODdjNjIzMjdkMGQxODlhNTI2MQ==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-03-29T11:04:21Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-03-29T11:04:21Z"}, "message": "Add missing testcase for generics", "tree": {"sha": "2c847bf7c2fdaadeb1cf9fac8b7793b3d37f29f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c847bf7c2fdaadeb1cf9fac8b7793b3d37f29f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/099fcbd107ad6139de2c387c62327d0d189a5261", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/099fcbd107ad6139de2c387c62327d0d189a5261", "html_url": "https://github.com/Rust-GCC/gccrs/commit/099fcbd107ad6139de2c387c62327d0d189a5261", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/099fcbd107ad6139de2c387c62327d0d189a5261/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf10b0258810aaa4d4241af2ee28e7469e12cb89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf10b0258810aaa4d4241af2ee28e7469e12cb89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf10b0258810aaa4d4241af2ee28e7469e12cb89"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "6307b7967848164ac25c2ebd1bac0fae842ad890", "filename": "gcc/testsuite/rust.test/compile/generics10.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/099fcbd107ad6139de2c387c62327d0d189a5261/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics10.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/099fcbd107ad6139de2c387c62327d0d189a5261/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics10.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompile%2Fgenerics10.rs?ref=099fcbd107ad6139de2c387c62327d0d189a5261", "patch": "@@ -0,0 +1,18 @@\n+struct Foo<T>(T);\n+\n+struct Bar<T> {\n+    a: Foo<T>,\n+    b: bool,\n+}\n+\n+fn test<T>(a: Bar<T>) -> Foo<T> {\n+    a.a\n+}\n+\n+fn main() {\n+    let a: Bar<i32> = Bar::<i32> {\n+        a: Foo::<i32>(123),\n+        b: true,\n+    };\n+    let b: Foo<i32> = test(a);\n+}"}]}