{"sha": "40aae1784298218b225bfe9a237496a0e77acbed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBhYWUxNzg0Mjk4MjE4YjIyNWJmZTlhMjM3NDk2YTBlNzdhY2JlZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2003-10-22T02:14:36Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-10-22T02:14:36Z"}, "message": "stor-layout.c (layout_decl): Do packed field alignment for bit-fields, too.\n\n        * stor-layout.c (layout_decl): Do packed field alignment for\n        bit-fields, too.\n\nFrom-SVN: r72786", "tree": {"sha": "9731cdb1e2059fbfa58ca96694e42d88548b9735", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9731cdb1e2059fbfa58ca96694e42d88548b9735"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40aae1784298218b225bfe9a237496a0e77acbed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40aae1784298218b225bfe9a237496a0e77acbed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40aae1784298218b225bfe9a237496a0e77acbed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40aae1784298218b225bfe9a237496a0e77acbed/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "18fd68a8b39900352967c54496fc1b394e7c48f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18fd68a8b39900352967c54496fc1b394e7c48f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18fd68a8b39900352967c54496fc1b394e7c48f2"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "afcd8bcb341272af463bef1223f58456408bddc8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40aae1784298218b225bfe9a237496a0e77acbed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40aae1784298218b225bfe9a237496a0e77acbed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40aae1784298218b225bfe9a237496a0e77acbed", "patch": "@@ -1,3 +1,8 @@\n+2003-10-21  Jason Merrill  <jason@redhat.com>\n+\n+\t* stor-layout.c (layout_decl): Do packed field alignment for\n+\tbit-fields, too.\n+\n 2003-10-21  Eric Christopher  <echristo@redhat.com>\n \n \t* expr.c (convert_move): Use FLOAT_EXTEND for extensions."}, {"sha": "6e128e3560d1e4b7ebbab44d6b2247a608956002", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40aae1784298218b225bfe9a237496a0e77acbed/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40aae1784298218b225bfe9a237496a0e77acbed/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=40aae1784298218b225bfe9a237496a0e77acbed", "patch": "@@ -397,6 +397,8 @@ layout_decl (tree decl, unsigned int known_align)\n   else\n     /* For fields, it's a bit more complicated...  */\n     {\n+      bool old_user_align = DECL_USER_ALIGN (decl);\n+\n       if (DECL_BIT_FIELD (decl))\n \t{\n \t  DECL_BIT_FIELD_TYPE (decl) = type;\n@@ -454,22 +456,21 @@ layout_decl (tree decl, unsigned int known_align)\n \t   supercede USER_ALIGN inherited from the type, but defer to\n \t   alignment explicitly specified on the field decl.  */;\n       else\n-\t{\n-\t  do_type_align (type, decl);\n-\n-\t  /* If the field is of variable size, we can't misalign it since we\n-\t     have no way to make a temporary to align the result.  But this\n-\t     isn't an issue if the decl is not addressable.  Likewise if it\n-\t     is of unknown size.\n-\n-\t     Note that do_type_align may set DECL_USER_ALIGN, so we don't\n-\t     want to check it again here.  */\n-\t  if (DECL_PACKED (decl)\n-\t      && (DECL_NONADDRESSABLE_P (decl)\n-\t\t  || DECL_SIZE_UNIT (decl) == 0\n-\t\t  || TREE_CODE (DECL_SIZE_UNIT (decl)) == INTEGER_CST))\n-\t    DECL_ALIGN (decl) = MIN (DECL_ALIGN (decl), BITS_PER_UNIT);\n-\t}\n+\tdo_type_align (type, decl);\n+\n+      /* If the field is of variable size, we can't misalign it since we\n+\t have no way to make a temporary to align the result.  But this\n+\t isn't an issue if the decl is not addressable.  Likewise if it\n+\t is of unknown size.\n+\n+\t Note that do_type_align may set DECL_USER_ALIGN, so we need to\n+\t check old_user_align instead.  */\n+      if (DECL_PACKED (decl)\n+\t  && !old_user_align\n+\t  && (DECL_NONADDRESSABLE_P (decl)\n+\t      || DECL_SIZE_UNIT (decl) == 0\n+\t      || TREE_CODE (DECL_SIZE_UNIT (decl)) == INTEGER_CST))\n+\tDECL_ALIGN (decl) = MIN (DECL_ALIGN (decl), BITS_PER_UNIT);\n \n       /* Should this be controlled by DECL_USER_ALIGN, too?  */\n       if (maximum_field_alignment != 0)"}]}