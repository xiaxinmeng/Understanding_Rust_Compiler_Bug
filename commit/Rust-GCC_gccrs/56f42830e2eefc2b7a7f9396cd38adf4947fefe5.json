{"sha": "56f42830e2eefc2b7a7f9396cd38adf4947fefe5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZmNDI4MzBlMmVlZmMyYjdhN2Y5Mzk2Y2QzOGFkZjQ5NDdmZWZlNQ==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2006-01-02T17:28:54Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2006-01-02T17:28:54Z"}, "message": "arm.c (all_fpus): Fix comment typo.\n\n\t* config/arm/arm.c (all_fpus): Fix comment typo.\n\t* config/darwin.c: Likewise.\n\t* config/frv/frv.h (FRV_STRUCT_VALUE_REGNUM): Likewise.\n\t* config/h8300/h8300.md (extendqisi2_h8300hs): Likewise.\n\t* config/m68hc11/m68hc11.c (m68hc11_reload_operands): Likewise.\n\nFrom-SVN: r109238", "tree": {"sha": "8bbb54e16c42a9cc8cdcea81293e09bcf2d805fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bbb54e16c42a9cc8cdcea81293e09bcf2d805fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56f42830e2eefc2b7a7f9396cd38adf4947fefe5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56f42830e2eefc2b7a7f9396cd38adf4947fefe5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56f42830e2eefc2b7a7f9396cd38adf4947fefe5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56f42830e2eefc2b7a7f9396cd38adf4947fefe5/comments", "author": null, "committer": null, "parents": [{"sha": "56bbd9d6aa0374c942f843ab796bbcf7eab6e39d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56bbd9d6aa0374c942f843ab796bbcf7eab6e39d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56bbd9d6aa0374c942f843ab796bbcf7eab6e39d"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "9a481120f56f2fd8b9cddf4d1ce9b15377ffe6b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56f42830e2eefc2b7a7f9396cd38adf4947fefe5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56f42830e2eefc2b7a7f9396cd38adf4947fefe5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56f42830e2eefc2b7a7f9396cd38adf4947fefe5", "patch": "@@ -1,3 +1,11 @@\n+2006-01-02  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\t* config/arm/arm.c (all_fpus): Fix comment typo.\n+\t* config/darwin.c: Likewise.\n+\t* config/frv/frv.h (FRV_STRUCT_VALUE_REGNUM): Likewise.\n+\t* config/h8300/h8300.md (extendqisi2_h8300hs): Likewise.\n+\t* config/m68hc11/m68hc11.c (m68hc11_reload_operands): Likewise.\n+\n 2006-01-01  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/rs6000.c (rs6000_expand_compare_and_swapqhi): New."}, {"sha": "8e3ade5caabacbe74fe275bec403b9f8b5c9c51f", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56f42830e2eefc2b7a7f9396cd38adf4947fefe5/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56f42830e2eefc2b7a7f9396cd38adf4947fefe5/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=56f42830e2eefc2b7a7f9396cd38adf4947fefe5", "patch": "@@ -638,7 +638,7 @@ struct fpu_desc\n };\n \n \n-/* Available values for for -mfpu=.  */\n+/* Available values for -mfpu=.  */\n \n static const struct fpu_desc all_fpus[] =\n {"}, {"sha": "6525bddba107cc71f166deb8abc29838fc33e8d7", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56f42830e2eefc2b7a7f9396cd38adf4947fefe5/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56f42830e2eefc2b7a7f9396cd38adf4947fefe5/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=56f42830e2eefc2b7a7f9396cd38adf4947fefe5", "patch": "@@ -53,7 +53,7 @@ Boston, MA 02110-1301, USA.  */\n    able to do easily.  These changes allow gdb to load in\n    recompilation of a translation unit that has been changed into a\n    running program and replace existing functions and methods of that\n-   translation unit with with versions of those functions and methods\n+   translation unit with versions of those functions and methods\n    from the newly compiled translation unit.  The new functions access\n    the existing static symbols from the old translation unit, if the\n    symbol existed in the unit to be replaced, and from the new"}, {"sha": "9c1c1e2d39fc6ad418dc26550495552530832cc1", "filename": "gcc/config/frv/frv.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56f42830e2eefc2b7a7f9396cd38adf4947fefe5/gcc%2Fconfig%2Ffrv%2Ffrv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56f42830e2eefc2b7a7f9396cd38adf4947fefe5/gcc%2Fconfig%2Ffrv%2Ffrv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.h?ref=56f42830e2eefc2b7a7f9396cd38adf4947fefe5", "patch": "@@ -1808,7 +1808,7 @@ typedef struct frv_stack {\n \f\n /* How Large Values are Returned.  */\n \n-/* The number of the register that is used to to pass the structure\n+/* The number of the register that is used to pass the structure\n    value address.  */\n #define FRV_STRUCT_VALUE_REGNUM (GPR_FIRST + 3)\n "}, {"sha": "65fea7e13e0dc5331f410d1c83d5e3401661d25d", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56f42830e2eefc2b7a7f9396cd38adf4947fefe5/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56f42830e2eefc2b7a7f9396cd38adf4947fefe5/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=56f42830e2eefc2b7a7f9396cd38adf4947fefe5", "patch": "@@ -2775,7 +2775,7 @@\n   [(set_attr \"length\" \"8,12\")])\n \n ;; The following pattern is needed because without the pattern, the\n-;; combiner would split (sign_extend:SI (reg:QI)) into into two 24-bit\n+;; combiner would split (sign_extend:SI (reg:QI)) into two 24-bit\n ;; shifts, one ashift and one ashiftrt.\n \n (define_insn_and_split \"*extendqisi2_h8300hs\""}, {"sha": "2a0c725f1c5bb2b79297c291953e6d830f602919", "filename": "gcc/config/m68hc11/m68hc11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56f42830e2eefc2b7a7f9396cd38adf4947fefe5/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56f42830e2eefc2b7a7f9396cd38adf4947fefe5/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c?ref=56f42830e2eefc2b7a7f9396cd38adf4947fefe5", "patch": "@@ -822,7 +822,7 @@ m68hc11_reload_operands (rtx operands[])\n \t}\n \n       /* If the offset is out of range, we have to compute the address\n-         with a separate add instruction.  We try to do with with an 8-bit\n+         with a separate add instruction.  We try to do this with an 8-bit\n          add on the A register.  This is possible only if the lowest part\n          of the offset (i.e., big_offset % 256) is a valid constant offset\n          with respect to the mode.  If it's not, we have to generate a"}]}