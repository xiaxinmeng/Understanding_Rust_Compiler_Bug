{"sha": "0a42aa4ed5b5d2a6e31a465db1515a716332d509", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE0MmFhNGVkNWI1ZDJhNmUzMWE0NjVkYjE1MTVhNzE2MzMyZDUwOQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-06-11T15:12:48Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-06-11T15:12:48Z"}, "message": "ipa-pure-const.c (special_builtlin_state): New function.\n\n\t* ipa-pure-const.c (special_builtlin_state): New function.\n\t(check_call): Use it instead of special casign BUILT_IN_RETURN.\n\t(propagate_pure_const): Use it.\n\n\t* gcc.dg/ipa/pure-const-2.c: New testcase.\n\nFrom-SVN: r160615", "tree": {"sha": "16ca667e2dfda5b37d37f56cf98736d96c7b23a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16ca667e2dfda5b37d37f56cf98736d96c7b23a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a42aa4ed5b5d2a6e31a465db1515a716332d509", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a42aa4ed5b5d2a6e31a465db1515a716332d509", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a42aa4ed5b5d2a6e31a465db1515a716332d509", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a42aa4ed5b5d2a6e31a465db1515a716332d509/comments", "author": null, "committer": null, "parents": [{"sha": "f6bcb591f71bf7a73393b402dcf955b9e843b4f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6bcb591f71bf7a73393b402dcf955b9e843b4f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6bcb591f71bf7a73393b402dcf955b9e843b4f2"}], "stats": {"total": 95, "additions": 88, "deletions": 7}, "files": [{"sha": "13e4ee6a5fcb4c0f5adf959bb979f317bee8a503", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a42aa4ed5b5d2a6e31a465db1515a716332d509/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a42aa4ed5b5d2a6e31a465db1515a716332d509/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a42aa4ed5b5d2a6e31a465db1515a716332d509", "patch": "@@ -1,3 +1,9 @@\n+2010-06-11  Jan Hubicka  <jh@suse.cz>\n+\n+\t* ipa-pure-const.c (special_builtlin_state): New function.\n+\t(check_call): Use it instead of special casign BUILT_IN_RETURN.\n+\t(propagate_pure_const): Use it.\n+\n 2010-06-11  Jan Hubicka  <jh@suse.cz>\n \n \t* df-problems.c (df_live_scratch): Convert to bitmap_head."}, {"sha": "8678663ed6cc45990aaf0e090ea2c9f874f2b0ad", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 48, "deletions": 5, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a42aa4ed5b5d2a6e31a465db1515a716332d509/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a42aa4ed5b5d2a6e31a465db1515a716332d509/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=0a42aa4ed5b5d2a6e31a465db1515a716332d509", "patch": "@@ -420,6 +420,40 @@ worse_state (enum pure_const_state_e *state, bool *looping,\n   *looping = MAX (*looping, looping2);\n }\n \n+/* Recognize special cases of builtins that are by themself not pure or const\n+   but function using them is.  */\n+static bool\n+special_builtlin_state (enum pure_const_state_e *state, bool *looping,\n+\t\t\ttree callee)\n+{\n+  if (DECL_BUILT_IN_CLASS (callee) == BUILT_IN_NORMAL)\n+    switch (DECL_FUNCTION_CODE (callee))\n+      {\n+\tcase BUILT_IN_RETURN:\n+\tcase BUILT_IN_UNREACHABLE:\n+\tcase BUILT_IN_ALLOCA:\n+\tcase BUILT_IN_STACK_SAVE:\n+\tcase BUILT_IN_STACK_RESTORE:\n+\tcase BUILT_IN_EH_POINTER:\n+\tcase BUILT_IN_EH_FILTER:\n+\tcase BUILT_IN_UNWIND_RESUME:\n+\tcase BUILT_IN_CXA_END_CLEANUP:\n+\tcase BUILT_IN_EH_COPY_VALUES:\n+\tcase BUILT_IN_FRAME_ADDRESS:\n+\tcase BUILT_IN_APPLY:\n+\tcase BUILT_IN_APPLY_ARGS:\n+\tcase BUILT_IN_ARGS_INFO:\n+\t  *looping = false;\n+\t  *state = IPA_CONST;\n+\t  return true;\n+\tcase BUILT_IN_PREFETCH:\n+\t  *looping = true;\n+\t  *state = IPA_CONST;\n+\t  return true;\n+      }\n+  return false;\n+}\n+\n /* Check the parameters of a function call to CALL_EXPR to see if\n    there are any references in the parameters that are not allowed for\n    pure or const functions.  Also check to see if this is either an\n@@ -470,9 +504,15 @@ check_call (funct_state local, gimple call, bool ipa)\n      graph.  */\n   if (callee_t)\n     {\n-      /* built_in_return is really just an return statemnt.  */\n-      if (gimple_call_builtin_p (call, BUILT_IN_RETURN))\n-\treturn;\n+      enum pure_const_state_e call_state;\n+      bool call_looping;\n+\n+      if (special_builtlin_state (&call_state, &call_looping, callee_t))\n+\t{\n+\t  worse_state (&local->pure_const_state, &local->looping,\n+\t\t       call_state, call_looping);\n+\t  return;\n+\t}\n       /* When bad things happen to bad functions, they cannot be const\n \t or pure.  */\n       if (setjmp_call_p (callee_t))\n@@ -1153,10 +1193,13 @@ propagate_pure_const (void)\n \t\t      edge_looping = y_l->looping;\n \t\t    }\n \t\t}\n+\t      else if (special_builtlin_state (&edge_state, &edge_looping,\n+\t\t\t\t\t       y->decl))\n+\t\t;\n \t      else\n \t\tstate_from_flags (&edge_state, &edge_looping,\n-\t\t\t          flags_from_decl_or_type (y->decl),\n-\t\t\t          cgraph_edge_cannot_lead_to_return (e));\n+\t\t\t\t  flags_from_decl_or_type (y->decl),\n+\t\t\t\t  cgraph_edge_cannot_lead_to_return (e));\n \n \t      /* Merge the results with what we already know.  */\n \t      better_state (&edge_state, &edge_looping,"}, {"sha": "ce3db3ef9452bcfe3b84bc26c34f0173711944fd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a42aa4ed5b5d2a6e31a465db1515a716332d509/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a42aa4ed5b5d2a6e31a465db1515a716332d509/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0a42aa4ed5b5d2a6e31a465db1515a716332d509", "patch": "@@ -1,7 +1,11 @@\n 2010-06-11  Jan Hubicka  <jh@suse.cz>\n \n-\t* testsuite/gcc.dg/noreturn-7.c: Update.\n-\t* testsuite/gcc.dg/noreturn-4.c: Update.\n+\t* gcc.dg/ipa/pure-const-2.c: New testcase.\n+\n+2010-06-11  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcc.dg/noreturn-7.c: Update.\n+\t* gcc.dg/noreturn-4.c: Update.\n \n 2010-06-10  Dodji Seketeli  <dodji@redhat.com>\n "}, {"sha": "51d779776bc7daf844be111b096447d4191eee64", "filename": "gcc/testsuite/gcc.dg/ipa/pure-const-2.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a42aa4ed5b5d2a6e31a465db1515a716332d509/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpure-const-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a42aa4ed5b5d2a6e31a465db1515a716332d509/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpure-const-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpure-const-2.c?ref=0a42aa4ed5b5d2a6e31a465db1515a716332d509", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fdump-tree-local-pure-const1 -fdump-tree-optimized\" } */\n+static __attribute__ ((noinline, noclone))\n+int i_am_pure(char *c, int n)\n+{\n+  char *d=__builtin_alloca (n);\n+  int i;\n+  int sum;\n+  for (i=0;i<n;i++)\n+    d[i] = c[i];\n+  for (i=0;i<n;i++)\n+    d[i] *= c[n-i];\n+  for (i=0;i<n;i++)\n+    sum+=d[i];\n+  if (sum)\n+    __builtin_unreachable ();\n+  return sum;\n+}\n+char array[11];\n+int\n+main(void)\n+{\n+  i_am_pure (array,5);\n+  i_am_pure (array,11);\n+  return 0;\n+}\n+/* { dg-final { scan-tree-dump \"found to be pure: i_am_pure\" \"local-pure-const1\"} } */\n+/* { dg-final { scan-tree-dump-not \"i_am_pure\" \"optimized\"} } */"}]}