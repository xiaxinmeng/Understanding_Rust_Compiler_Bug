{"sha": "14ae1d508d156407fdb838a39b9eaee2f5c427b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRhZTFkNTA4ZDE1NjQwN2ZkYjgzOGEzOWI5ZWFlZTJmNWM0MjdiNQ==", "commit": {"author": {"name": "Gerald Pfeifer", "email": "pfeifer@dbai.tuwien.ac.at", "date": "2000-11-08T11:01:22Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2000-11-08T11:01:22Z"}, "message": "* README.gnat: Remove file.\n\nFrom-SVN: r37315", "tree": {"sha": "c7313c000effe6024f514ced2ad2bc21a62532e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7313c000effe6024f514ced2ad2bc21a62532e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14ae1d508d156407fdb838a39b9eaee2f5c427b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14ae1d508d156407fdb838a39b9eaee2f5c427b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14ae1d508d156407fdb838a39b9eaee2f5c427b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14ae1d508d156407fdb838a39b9eaee2f5c427b5/comments", "author": null, "committer": null, "parents": [{"sha": "f0cbb7aca82e5eaae873a3dfe69f016e18c66f29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0cbb7aca82e5eaae873a3dfe69f016e18c66f29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0cbb7aca82e5eaae873a3dfe69f016e18c66f29"}], "stats": {"total": 439, "additions": 4, "deletions": 435}, "files": [{"sha": "67c8b208bc826ea917eb8faae21c9c6275f8ba01", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14ae1d508d156407fdb838a39b9eaee2f5c427b5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14ae1d508d156407fdb838a39b9eaee2f5c427b5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=14ae1d508d156407fdb838a39b9eaee2f5c427b5", "patch": "@@ -1,3 +1,7 @@\n+2000-11-08  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n+\n+\t* README.gnat: Remove file.\n+\n 2000-11-08  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* mklibgcc.in (EXTRA_MULTILIB_PARTS): Generate multilib parts"}, {"sha": "2746665c8060c27aada362f16ee058d9af8d416e", "filename": "gcc/README.gnat", "status": "removed", "additions": 0, "deletions": 435, "changes": 435, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0cbb7aca82e5eaae873a3dfe69f016e18c66f29/gcc%2FREADME.gnat", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0cbb7aca82e5eaae873a3dfe69f016e18c66f29/gcc%2FREADME.gnat", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FREADME.gnat?ref=f0cbb7aca82e5eaae873a3dfe69f016e18c66f29", "patch": "@@ -1,435 +0,0 @@\n-The following patches are needed in order to build GNAT with EGCS.\n-\n-These patches were tested with egcs-980308 and gnat-3.10p on a mips-sgi-irix6.3\n-system.  The gnat build succeeded as per the instructions in the gnat\n-README.BUILD file for building one library, except that CFLAGS=\"-O -g\" and\n-GNATLIBCFLAGS=\"-O -g\" were substituted for the recommended \"-O2\" so that the\n-build could be debugged.  There was no attempt to run the resulting build\n-against any testsuite or validation suite.\n-\n---\n-\n-Developers Notes:\n-\n-Every use of sizetype in the Ada front end should be checked to see if perhaps\n-it should be using bitsizetype instead.  The change to maybe_pad_type is just\n-a hack to work around this problem, and may not be desirable in the long term.\n-\n-There are many places in the Ada front end where it calls operand_equal_p to\n-see if two type sizes are the same.  operand_equal_p fails if the two\n-arguments have different TYPE_MODEs.  sizetype and bitsizetype can have\n-different TYPE_MODEs.  Thus this code can fail if one type size is based\n-on sizetype, and the other is based on bitsizetype.  The change to\n-maybe_pad_type fixes one very critical place where this happens.  There may\n-be others.\n-\n---\n-\n-Mon Mar 16 11:00:25 1998  Jim Wilson  <wilson@cygnus.com>\n-\n-\t* a-gtran3.c (maybe_pad_type): Convert both size and orig_size to\n-\tsizetype if they have differing modes.\n-\t* a-misc.c (gnat_tree_code_type): Change from string to char array.\n-\t(init_lex): Delete realloc calls for tree_code_* globals.  Adjust\n-\tbcopy call for gnat_tree_code_type change.\n-\t* a-tree.def: Adjust for tree_code_* type changes.\n-\n-\t* a-misc.c (init_lex): Rename to init_parse.\n-\n-diff -c ada/a-gtran3.c /home/brolley/comp/egcs/tmp/ada/a-gtran3.c\n-*** ada/a-gtran3.c\tMon Mar 30 16:29:04 1998\n---- /home/brolley/comp/egcs/tmp/ada/a-gtran3.c\tThu Apr  2 17:16:15 1998\n-***************\n-*** 3329,3334 ****\n---- 3329,3341 ----\n-       isn't changing.  Likewise, clear the alignment if it isn't being\n-       changed.  Then return if we aren't doing anything.  */\n-  \n-+     if (size != 0\n-+ \t&& TYPE_MODE (TREE_TYPE (size)) != TYPE_MODE (TREE_TYPE (orig_size)))\n-+       {\n-+ \tsize = convert (sizetype, size);\n-+ \torig_size = convert (sizetype, orig_size);\n-+       }\n-+  \n-    if (size != 0\n-        && (operand_equal_p (size, orig_size, 0)\n-  \t  || (TREE_CODE (orig_size) == INTEGER_CST\n-diff -c ada/a-misc.c /home/brolley/comp/egcs/tmp/ada/a-misc.c\n-*** ada/a-misc.c\tMon Mar 30 16:29:05 1998\n---- /home/brolley/comp/egcs/tmp/ada/a-misc.c\tThu Apr  2 17:36:19 1998\n-***************\n-*** 70,77 ****\n-  \n-  #define DEFTREECODE(SYM, NAME, TYPE, LENGTH) TYPE,\n-  \n-! char *gnat_tree_code_type[] = {\n-!   \"x\",\n-  #include \"a-tree.def\"\n-  };\n-  #undef DEFTREECODE\n---- 70,77 ----\n-  \n-  #define DEFTREECODE(SYM, NAME, TYPE, LENGTH) TYPE,\n-  \n-! char gnat_tree_code_type[] = {\n-!   'x',\n-  #include \"a-tree.def\"\n-  };\n-  #undef DEFTREECODE\n-***************\n-*** 254,259 ****\n---- 254,268 ----\n-  print_lang_statistics ()\n-  {}\n-  \n-+ void\n-+ lang_print_xnode (file, node, indent)\n-+      FILE *file;\n-+      tree node;\n-+      int indent;\n-+ {\n-+ }\n-+  \n-+ \n-  /* integrate_decl_tree calls this function, but since we don't use the\n-     DECL_LANG_SPECIFIC field, this is a no-op.  */\n-  \n-***************\n-*** 603,622 ****\n-     it, but it's where g++ does it.  */\n-  \n-  void\n-! init_lex ()\n-  {\n-    lang_expand_expr = gnat_expand_expr;\n-  \n--   tree_code_type\n--     = (char **) realloc (tree_code_type,\n-- \t\t\t sizeof (char *) * LAST_GNAT_TREE_CODE);\n--   tree_code_length\n--     = (int *) realloc (tree_code_length,\n-- \t\t       sizeof (int) * LAST_GNAT_TREE_CODE);\n--   tree_code_name\n--     = (char **) realloc (tree_code_name,\n-- \t\t\t sizeof (char *) * LAST_GNAT_TREE_CODE);\n-- \n-    bcopy ((char *) gnat_tree_code_type,\n-  \t (char *) (tree_code_type + (int) LAST_AND_UNUSED_TREE_CODE),\n-  \t ((LAST_GNAT_TREE_CODE - (int) LAST_AND_UNUSED_TREE_CODE)\n---- 612,622 ----\n-     it, but it's where g++ does it.  */\n-  \n-  void\n-! init_parse (filename)\n-!      char *filename;\n-  {\n-    lang_expand_expr = gnat_expand_expr;\n-  \n-    bcopy ((char *) gnat_tree_code_type,\n-  \t (char *) (tree_code_type + (int) LAST_AND_UNUSED_TREE_CODE),\n-  \t ((LAST_GNAT_TREE_CODE - (int) LAST_AND_UNUSED_TREE_CODE)\n-***************\n-*** 629,636 ****\n-  \n-    bcopy ((char *) gnat_tree_code_name,\n-  \t (char *) (tree_code_name + (int) LAST_AND_UNUSED_TREE_CODE),\n-! \t ((LAST_GNAT_TREE_CODE - (int) LAST_AND_UNUSED_TREE_CODE)\n-! \t  * sizeof (char *)));\n-  }\n-  \n-  /* Sets some debug flags for the parsed. It does nothing here.  */\n---- 629,640 ----\n-  \n-    bcopy ((char *) gnat_tree_code_name,\n-  \t (char *) (tree_code_name + (int) LAST_AND_UNUSED_TREE_CODE),\n-! \t LAST_GNAT_TREE_CODE - (int) LAST_AND_UNUSED_TREE_CODE);\n-! }\n-! \n-! void\n-! finish_parse ()\n-! {\n-  }\n-  \n-  /* Sets some debug flags for the parsed. It does nothing here.  */\n-diff -c ada/a-tree.def /home/brolley/comp/egcs/tmp/ada/a-tree.def\n-*** ada/a-tree.def\tMon Mar 30 16:29:09 1998\n---- /home/brolley/comp/egcs/tmp/ada/a-tree.def\tThu Apr  2 17:20:38 1998\n-***************\n-*** 31,69 ****\n-     The only field used if TREE_COMPLEXITY, which contains the GNAT node\n-     number.  */\n-  \n-! DEFTREECODE (TRANSFORM_EXPR, \"transform_expr\", \"e\", 0)\n-  \n-  /* Perform an unchecked conversion between the input and the output. \n-     if TREE_ADDRESSABLE is set, it means this is in an LHS; in that case,\n-     we can only use techniques, such as pointer punning, that leave the\n-     expression a \"name\".  */\n-  \n-! DEFTREECODE (UNCHECKED_CONVERT_EXPR, \"unchecked_convert_expr\", \"1\", 1)\n-  \n-  /* A type that is an unconstrained array itself.  This node is never passed\n-     to GCC. TREE_TYPE is the type of the fat pointer and TYPE_OBJECT_RECORD_TYPE\n-     is the type of a record containing the template and data.  */\n-  \n-! DEFTREECODE (UNCONSTRAINED_ARRAY_TYPE, \"unconstrained_array_type\", \"t\", 0)\n-  \n-  /* A reference to an unconstrained array.  This node only exists as an\n-     intermediate node during the translation of a GNAT tree to a GCC tree;\n-     it is never passed to GCC.  The only field used is operand 0, which\n-     is the fat pointer object.  */\n-  \n-! DEFTREECODE (UNCONSTRAINED_ARRAY_REF, \"unconstrained_array_ref\", \"r\", 1)\n-  \n-  /* An expression that returns an RTL suitable for its type.  Operand 0\n-     is an expression to be evaluated for side effects only.  */\n-  \n-! DEFTREECODE (NULL_EXPR, \"null_expr\", \"e\", 1)\n-  \n-  /* An expression that emits a USE for its single operand.  */\n-  \n-! DEFTREECODE (USE_EXPR, \"use_expr\", \"e\", 1)\n-  \n-  /* An expression that is treated as a conversion while generating code, but is\n-     used to prevent infinite recursion when conversions of biased types are\n-     involved.  */\n-  \n-! DEFTREECODE (GNAT_NOP_EXPR, \"gnat_nop_expr\", \"1\", 1)\n---- 31,69 ----\n-     The only field used if TREE_COMPLEXITY, which contains the GNAT node\n-     number.  */\n-  \n-! DEFTREECODE (TRANSFORM_EXPR, \"transform_expr\", 'e', 0)\n-  \n-  /* Perform an unchecked conversion between the input and the output. \n-     if TREE_ADDRESSABLE is set, it means this is in an LHS; in that case,\n-     we can only use techniques, such as pointer punning, that leave the\n-     expression a \"name\".  */\n-  \n-! DEFTREECODE (UNCHECKED_CONVERT_EXPR, \"unchecked_convert_expr\", '1', 1)\n-  \n-  /* A type that is an unconstrained array itself.  This node is never passed\n-     to GCC. TREE_TYPE is the type of the fat pointer and TYPE_OBJECT_RECORD_TYPE\n-     is the type of a record containing the template and data.  */\n-  \n-! DEFTREECODE (UNCONSTRAINED_ARRAY_TYPE, \"unconstrained_array_type\", 't', 0)\n-  \n-  /* A reference to an unconstrained array.  This node only exists as an\n-     intermediate node during the translation of a GNAT tree to a GCC tree;\n-     it is never passed to GCC.  The only field used is operand 0, which\n-     is the fat pointer object.  */\n-  \n-! DEFTREECODE (UNCONSTRAINED_ARRAY_REF, \"unconstrained_array_ref\", 'r', 1)\n-  \n-  /* An expression that returns an RTL suitable for its type.  Operand 0\n-     is an expression to be evaluated for side effects only.  */\n-  \n-! DEFTREECODE (NULL_EXPR, \"null_expr\", 'e', 1)\n-  \n-  /* An expression that emits a USE for its single operand.  */\n-  \n-! DEFTREECODE (USE_EXPR, \"use_expr\", 'e', 1)\n-  \n-  /* An expression that is treated as a conversion while generating code, but is\n-     used to prevent infinite recursion when conversions of biased types are\n-     involved.  */\n-  \n-! DEFTREECODE (GNAT_NOP_EXPR, \"gnat_nop_expr\", '1', 1)\n-\n-\n-This patch from Fred Fish to GNAT may make building simpler.  We haven't\n-tested it.\n-\n-> I put a very short blurb in the faq.  GNAT is complicated enough that\n-> we should probably write a whole page on how to build/install it.\n-\n-You may want to use some or all of these patches:\n-\n-\t* Make-lang.in (gnattools): Depends upon GCC_PARTS.\n-\t(ada.start.encap): Depends upon gnattools.\n-\t(ada.rest.encap): Depends upon gnatlib.\n-\t* Makefile.in (../stamp-gnatlib1): Since we are still in the rts\n-\tsubdir when the rule runs, we need to touch ../../stamp-gnatlib1.\n-\t(../stamp-gnatlib1): Don't unconditionally remove the rts directory,\n-\tcreate it if one does not exist.\n-\t(gnatlib): Remove superflous leading blank char at *-*-pe line.\n-\t* a-init.c: Define NULL if not yet defined.\n-\n-Index: Make-lang.in\n-===================================================================\n-RCS file: /cvsroot/gg/egcs/gcc/ada/Make-lang.in,v\n-retrieving revision 1.1.1.1\n-retrieving revision 1.3\n-diff -c -r1.1.1.1 -r1.3\n-*** Make-lang.in\t1997/10/17 06:19:09\t1.1.1.1\n---- Make-lang.in\t1998/03/17 14:26:14\t1.3\n-***************\n-*** 100,106 ****\n-  \n-  # use host-gcc\n-  # getopt*.o has to be built before CC=../xgcc\n-! gnattools: getopt.o getopt1.o force\n-  \t$(MAKE) $(FLAGS_TO_PASS) $(ADA_FLAGS_TO_PASS)\\\n-  \t   CC=\"../xgcc -B../\" GNATBIND=\"../gnatbind\" \\\n-  \t   gnatf gnatlink gnatkr gnatmake gnatcmd gnatprep \\\n---- 100,107 ----\n-  \n-  # use host-gcc\n-  # getopt*.o has to be built before CC=../xgcc\n-! # GCC_PARTS has to be built before CC=../xgcc\n-! gnattools: getopt.o getopt1.o $(GCC_PARTS) force\n-  \t$(MAKE) $(FLAGS_TO_PASS) $(ADA_FLAGS_TO_PASS)\\\n-  \t   CC=\"../xgcc -B../\" GNATBIND=\"../gnatbind\" \\\n-  \t   gnatf gnatlink gnatkr gnatmake gnatcmd gnatprep \\\n-***************\n-*** 163,170 ****\n-  \t-if [ -f gnatls$(exeext) ] ; then\\\n-  \t  mv gnatls$(exeext)    gnatls-cross$(exeext); fi\n-  \n-! ada.start.encap:\n-! ada.rest.encap:\n-  ada.info:\n-  ada.dvi:\n-  \f\n---- 164,171 ----\n-  \t-if [ -f gnatls$(exeext) ] ; then\\\n-  \t  mv gnatls$(exeext)    gnatls-cross$(exeext); fi\n-  \n-! ada.start.encap: gnattools\n-! ada.rest.encap: gnatlib\n-  ada.info:\n-  ada.dvi:\n-  \f\n-Index: Makefile.in\n-===================================================================\n-RCS file: /cvsroot/gg/egcs/gcc/ada/Makefile.in,v\n-retrieving revision 1.1.1.1\n-retrieving revision 1.5\n-diff -c -r1.1.1.1 -r1.5\n-*** Makefile.in\t1997/10/17 06:19:09\t1.1.1.1\n---- Makefile.in\t1998/02/19 14:16:34\t1.5\n-***************\n-*** 798,806 ****\n-     #  3. copy 3xyyy.ad[sb] -->-- i-yyy.ad[sb] \n-  \n-  ../stamp-gnatlib1: Makefile ../stamp-gnatlib2\n-! \trm -rf rts\n-! \tmkdir rts\n-! \tchmod u+w rts\n-  \t(\\\n-  \t   case $(target) in \\\n-  \t\tsparc-sun-sunos4*) \tletter=u ;;\\\n---- 800,806 ----\n-     #  3. copy 3xyyy.ad[sb] -->-- i-yyy.ad[sb] \n-  \n-  ../stamp-gnatlib1: Makefile ../stamp-gnatlib2\n-! \tif [ -d rts ]; then true; else mkdir rts; chmod u+w rts; fi\n-  \t(\\\n-  \t   case $(target) in \\\n-  \t\tsparc-sun-sunos4*) \tletter=u ;;\\\n-***************\n-*** 888,894 ****\n-  \t\t   done;; \\\n-  \t   esac ; \\\n-  \t   rm -f ../stamp-gnatlib ;  \\\n-! \t   touch ../stamp-gnatlib1)\n-  \n-  gnatlib-common: ../stamp-gnatlib1\n-  \t(subdir=`cd $(srcdir); pwd`; \\\n---- 888,894 ----\n-  \t\t   done;; \\\n-  \t   esac ; \\\n-  \t   rm -f ../stamp-gnatlib ;  \\\n-! \t   touch ../../stamp-gnatlib1)\n-  \n-  gnatlib-common: ../stamp-gnatlib1\n-  \t(subdir=`cd $(srcdir); pwd`; \\\n-***************\n-*** 923,929 ****\n-  \t\tmips-sni-*\t       |\\\n-  \t\t*-*-cygwin32*          |\\\n-  \t\t*-*-mingw32*           |\\\n-!  \t\t*-*-pe                 |\\\n-                  *)\t\t       \\\n-                  \\\n-  \t\t $(MAKE)  CC=\"../../xgcc -B../../\" \\\n---- 923,929 ----\n-  \t\tmips-sni-*\t       |\\\n-  \t\t*-*-cygwin32*          |\\\n-  \t\t*-*-mingw32*           |\\\n-! \t\t*-*-pe                 |\\\n-                  *)\t\t       \\\n-                  \\\n-  \t\t $(MAKE)  CC=\"../../xgcc -B../../\" \\\n-Index: a-init.c\n-===================================================================\n-RCS file: /cvsroot/gg/egcs/gcc/ada/a-init.c,v\n-retrieving revision 1.1.1.1\n-retrieving revision 1.2\n-diff -c -r1.1.1.1 -r1.2\n-*** a-init.c\t1997/10/17 06:19:10\t1.1.1.1\n---- a-init.c\t1998/01/04 23:11:42\t1.2\n-***************\n-*** 516,521 ****\n---- 516,525 ----\n-    __gnat_raise (exception);\n-  }\n-  \n-+ #ifndef NULL\n-+ #define NULL 0\n-+ #endif\n-+ \n-  static void\n-  __gnat_install_handler ()\n-  {\n-\n-Wed Jun 24 15:06:09 1998  Dave Brolley  <brolley@cygnus.com>\n-\n-\t* a-misc.c (lang_decode_option): New interface.\n-\t* a-misc.h (lang_decode_option): New interface.\n-\n-*** /home/brolley/tmp/a-misc.c\tWed Jun 24 15:01:22 1998\n---- ada/a-misc.c\tWed Jun 24 15:02:42 1998\n-*************** init_gnat_args ()\n-*** 162,170 ****\n-     it returns 0. */\n-  \n-  int\n-! lang_decode_option (p)\n-!      char *p;\n-  {\n-    extern int  save_argc;\n-    extern char **save_argv;\n-  \n---- 162,172 ----\n-     it returns 0. */\n-  \n-  int\n-! lang_decode_option (argc, argv)\n-!      int argc;\n-!      char **argv;\n-  {\n-+   char *p = argv[0];\n-    extern int  save_argc;\n-    extern char **save_argv;\n-  \n-*** /home/brolley/tmp/a-misc.h\tWed Jun 24 15:01:22 1998\n---- ada/a-misc.h\tWed Jun 24 15:03:20 1998\n-*************** enum gnat_tree_code {\n-*** 63,69 ****\n-     option decoding phase of GCC calls this routine on the flags that it cannot\n-     decode. This routine returns 1 if it is successful, otherwise it\n-     returns 0. */\n-! extern int lang_decode_option\tPROTO((char *));\n-  \n-  /* Perform all the initialization steps that are language-specific.  */\n-  extern void lang_init\t\tPROTO((void));\n---- 63,69 ----\n-     option decoding phase of GCC calls this routine on the flags that it cannot\n-     decode. This routine returns 1 if it is successful, otherwise it\n-     returns 0. */\n-! extern int lang_decode_option\tPROTO((int, char **));\n-  \n-  /* Perform all the initialization steps that are language-specific.  */\n-  extern void lang_init\t\tPROTO((void));"}]}