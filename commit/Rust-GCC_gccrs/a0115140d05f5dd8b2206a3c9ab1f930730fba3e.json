{"sha": "a0115140d05f5dd8b2206a3c9ab1f930730fba3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAxMTUxNDBkMDVmNWRkOGIyMjA2YTNjOWFiMWY5MzA3MzBmYmEzZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-11-06T10:36:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-11-06T10:36:33Z"}, "message": "sparc.h (ASM_OUTPUT_MI_THUNK): On sparc64 we need to adjust %o1, not %o0 if the return type is large structure.\n\n\t* config/sparc/sparc.h (ASM_OUTPUT_MI_THUNK): On sparc64 we need to\n\tadjust %o1, not %o0 if the return type is large structure.\n\nFrom-SVN: r37273", "tree": {"sha": "853b212764d7c98fd5c44b16845cf7cb361b5e6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/853b212764d7c98fd5c44b16845cf7cb361b5e6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0115140d05f5dd8b2206a3c9ab1f930730fba3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0115140d05f5dd8b2206a3c9ab1f930730fba3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0115140d05f5dd8b2206a3c9ab1f930730fba3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0115140d05f5dd8b2206a3c9ab1f930730fba3e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9ea2bda9ab92ebc604af6f37642162961eaff1dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ea2bda9ab92ebc604af6f37642162961eaff1dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ea2bda9ab92ebc604af6f37642162961eaff1dc"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "e7d8a0e05ca14e4202baf4f03431c93b1dae97c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0115140d05f5dd8b2206a3c9ab1f930730fba3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0115140d05f5dd8b2206a3c9ab1f930730fba3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0115140d05f5dd8b2206a3c9ab1f930730fba3e", "patch": "@@ -1,3 +1,8 @@\n+2000-11-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/sparc/sparc.h (ASM_OUTPUT_MI_THUNK): On sparc64 we need to\n+\tadjust %o1, not %o0 if the return type is large structure.\n+\n 2000-11-06  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/sparc/sparc.md (smulsi3_highpart_v8plus, ashldi3_v8plus+1,"}, {"sha": "3fa2a6db3842bc2c5e98784e43af9e4d8a0c68b0", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0115140d05f5dd8b2206a3c9ab1f930730fba3e/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0115140d05f5dd8b2206a3c9ab1f930730fba3e/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=a0115140d05f5dd8b2206a3c9ab1f930730fba3e", "patch": "@@ -3231,10 +3231,16 @@ do {\t\t\t\t\t\t\t\t\t\\\n    Used for C++ multiple inheritance.  */\n #define ASM_OUTPUT_MI_THUNK(FILE, THUNK_FNDECL, DELTA, FUNCTION)\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n+  int reg = 0;\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  if (TARGET_ARCH64\t\t\t\t\t\t\t\\\n+      && aggregate_value_p (TREE_TYPE (TREE_TYPE (FUNCTION))))\t\t\\\n+    reg = 1;\t\t\t\t\t\t\t\t\\\n   if ((DELTA) >= 4096 || (DELTA) < -4096)\t\t\t\t\\\n-    fprintf (FILE, \"\\tset\\t%d, %%g1\\n\\tadd\\t%%o0, %%g1, %%o0\\n\", (DELTA));\\\n+    fprintf (FILE, \"\\tset\\t%d, %%g1\\n\\tadd\\t%%o%d, %%g1, %%o%d\\n\",\t\\\n+\t     (DELTA), reg, reg);\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\tadd\\t%%o0, %d, %%o0\\n\", DELTA);\t\t\t\\\n+    fprintf (FILE, \"\\tadd\\t%%o%d, %d, %%o%d\\n\", reg, (DELTA), reg);\t\\\n   fprintf (FILE, \"\\tor\\t%%o7, %%g0, %%g1\\n\");\t\t\t\t\\\n   fprintf (FILE, \"\\tcall\\t\");\t\t\t\t\t\t\\\n   assemble_name (FILE, XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0));\t\\"}]}