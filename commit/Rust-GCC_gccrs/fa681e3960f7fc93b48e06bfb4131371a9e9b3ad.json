{"sha": "fa681e3960f7fc93b48e06bfb4131371a9e9b3ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE2ODFlMzk2MGY3ZmM5M2I0OGUwNmJmYjQxMzEzNzFhOWU5YjNhZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-02-16T18:36:01Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-02-16T18:36:01Z"}, "message": "i386.h (x86_use_xchgb): New.\n\n        * config/i386/i386.h (x86_use_xchgb): New.\n        (TARGET_USE_XCHGB): New macro.\n        * config/i386/i386.c (x86_use_xchgb): Set for PENT4.\n        * config/i386/i386.md (*rotlhi3_1 splitter, *rotrhi3_1 splitter):\n        Split after reload into bswaphi for shifts of 8.\n        (bswaphi_lowpart): Generate rolw insn for HImode byte swaps.\n        (*bswaphi_lowpart_1): Generate xchgb for Q registers for TARGET_XCHGB\n        or when optimizing for size.\n\ntestsuite/ChangeLog:\n\n        * gcc.target/i386/builtin-bswap-1.c: Remove -march=nocona.\n        * gcc.target/i386/builtin-bswap-3.c: Ditto.\n        * gcc.target/i386/xchg-1.c: New test.\n        * gcc.target/i386/xchg-2.c: New test.\n\nFrom-SVN: r122049", "tree": {"sha": "1833442ed772629bbb3c8f04dd569abd773e57b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1833442ed772629bbb3c8f04dd569abd773e57b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad/comments", "author": null, "committer": null, "parents": [{"sha": "ce359ed91662f2c14f882613a094f75110a0eba2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce359ed91662f2c14f882613a094f75110a0eba2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce359ed91662f2c14f882613a094f75110a0eba2"}], "stats": {"total": 98, "additions": 83, "deletions": 15}, "files": [{"sha": "d63934496d954686ff7c3091d96b52d4be8dae6c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa681e3960f7fc93b48e06bfb4131371a9e9b3ad", "patch": "@@ -1,5 +1,16 @@\n+2007-02-16  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.h (x86_use_xchgb): New.\n+\t(TARGET_USE_XCHGB): New macro.\n+\t* config/i386/i386.c (x86_use_xchgb): Set for PENT4.\n+\t* config/i386/i386.md (*rotlhi3_1 splitter, *rotrhi3_1 splitter):\n+\tSplit after reload into bswaphi for shifts of 8.\n+\t(bswaphi_lowpart): Generate rolw insn for HImode byte swaps.\n+\t(*bswaphi_lowpart_1): Generate xchgb for Q registers for TARGET_XCHGB\n+\tor when optimizing for size.\n+\t\n 2007-02-16  Richard Guenther  <rguenther@suse.de>\n-\tChristian Bruel  <christian.bruel@st.com>\n+\t    Christian Bruel  <christian.bruel@st.com>\n \n \t* fold-const.c (tree_swap_operands_p): Treat SSA_NAMEs like\n \tDECLs but prefer SSA_NAMEs over DECLs."}, {"sha": "8ad98d80eea6ac6b14432775f853417370a2149f", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=fa681e3960f7fc93b48e06bfb4131371a9e9b3ad", "patch": "@@ -1044,6 +1044,8 @@ const int x86_use_simode_fiop = ~(m_PPRO | m_ATHLON_K8_AMDFAM10 | m_PENT\n                                   | m_CORE2 | m_GENERIC);\n const int x86_use_mov0 = m_K6;\n const int x86_use_cltd = ~(m_PENT | m_K6 | m_CORE2 | m_GENERIC);\n+/* Use xchgb %rh,%rl instead of rolw/rorw $8,rx.  */\n+const int x86_use_xchgb = m_PENT4;\n const int x86_read_modify_write = ~m_PENT;\n const int x86_read_modify = ~(m_PENT | m_PPRO);\n const int x86_split_long_moves = m_PPRO;"}, {"sha": "1664a8fb40315c39f0266fd946b1154d492e6710", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=fa681e3960f7fc93b48e06bfb4131371a9e9b3ad", "patch": "@@ -185,8 +185,8 @@ extern const int x86_use_bit_test, x86_cmove, x86_deep_branch;\n extern const int x86_branch_hints, x86_unroll_strlen;\n extern const int x86_double_with_add, x86_partial_reg_stall, x86_movx;\n extern const int x86_use_himode_fiop, x86_use_simode_fiop;\n-extern const int x86_use_mov0, x86_use_cltd, x86_read_modify_write;\n-extern const int x86_read_modify, x86_split_long_moves;\n+extern const int x86_use_mov0, x86_use_cltd, x86_use_xchgb;\n+extern const int x86_read_modify_write, x86_read_modify, x86_split_long_moves;\n extern const int x86_promote_QImode, x86_single_stringop, x86_fast_prefix;\n extern const int x86_himode_math, x86_qimode_math, x86_promote_qi_regs;\n extern const int x86_promote_hi_regs, x86_integer_DFmode_moves;\n@@ -228,6 +228,7 @@ extern int x86_prefetch_sse, x86_cmpxchg16b;\n #define TARGET_USE_SIMODE_FIOP (x86_use_simode_fiop & TUNEMASK)\n #define TARGET_USE_MOV0 (x86_use_mov0 & TUNEMASK)\n #define TARGET_USE_CLTD (x86_use_cltd & TUNEMASK)\n+#define TARGET_USE_XCHGB (x86_use_xchgb & TUNEMASK)\n #define TARGET_SPLIT_LONG_MOVES (x86_split_long_moves & TUNEMASK)\n #define TARGET_READ_MODIFY_WRITE (x86_read_modify_write & TUNEMASK)\n #define TARGET_READ_MODIFY (x86_read_modify & TUNEMASK)"}, {"sha": "ad7ae22d2d5b28a6a95c52d4f0d9d4a24548dece", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 38, "deletions": 9, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=fa681e3960f7fc93b48e06bfb4131371a9e9b3ad", "patch": "@@ -13025,6 +13025,16 @@\n   [(set_attr \"type\" \"rotate\")\n    (set_attr \"mode\" \"HI\")])\n \n+(define_split\n+ [(set (match_operand:HI 0 \"register_operand\" \"\")\n+       (rotate:HI (match_dup 0) (const_int 8)))\n+  (clobber (reg:CC FLAGS_REG))]\n+ \"reload_completed\"\n+ [(parallel [(set (strict_low_part (match_dup 0))\n+\t\t  (bswap:HI (match_dup 0)))\n+\t     (clobber (reg:CC FLAGS_REG))])]\n+ \"\")\n+\n (define_expand \"rotlqi3\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n \t(rotate:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n@@ -13240,7 +13250,7 @@\n \t(const_string \"2\")\n \t(const_string \"*\")))])\n \n-(define_insn \"*rotrhi3\"\n+(define_insn \"*rotrhi3_1\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=rm,rm\")\n \t(rotatert:HI (match_operand:HI 1 \"nonimmediate_operand\" \"0,0\")\n \t\t     (match_operand:QI 2 \"nonmemory_operand\" \"I,c\")))\n@@ -13252,6 +13262,16 @@\n   [(set_attr \"type\" \"rotate\")\n    (set_attr \"mode\" \"HI\")])\n \n+(define_split\n+ [(set (match_operand:HI 0 \"register_operand\" \"\")\n+       (rotatert:HI (match_dup 0) (const_int 8)))\n+  (clobber (reg:CC FLAGS_REG))]\n+ \"reload_completed\"\n+ [(parallel [(set (strict_low_part (match_dup 0))\n+\t\t  (bswap:HI (match_dup 0)))\n+\t     (clobber (reg:CC FLAGS_REG))])]\n+ \"\")\n+\n (define_expand \"rotrqi3\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n \t(rotatert:QI (match_operand:QI 1 \"nonimmediate_operand\" \"\")\n@@ -15016,16 +15036,25 @@\n   [(set_attr \"prefix_0f\" \"1\")\n    (set_attr \"length\" \"2\")])\n \n+(define_insn \"*bswaphi_lowpart_1\"\n+  [(set (strict_low_part (match_operand:HI 0 \"register_operand\" \"+Q,r\"))\n+\t(bswap:HI (match_dup 0)))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_USE_XCHGB || optimize_size\"\n+  \"@\n+    xchg{b}\\t{%h0, %b0|%b0, %h0}\n+    rol{w}\\t{$8, %0|%0, 8}\"\n+  [(set_attr \"length\" \"2,4\")\n+   (set_attr \"mode\" \"QI,HI\")])\n+\n (define_insn \"bswaphi_lowpart\"\n-  [(set (strict_low_part (match_operand:HI 0 \"register_operand\" \"+Q\"))\n-\t(bswap:HI (match_dup 0)))]\n+  [(set (strict_low_part (match_operand:HI 0 \"register_operand\" \"+r\"))\n+\t(bswap:HI (match_dup 0)))\n+   (clobber (reg:CC FLAGS_REG))]\n   \"\"\n-  \"xchg{b}\\t%h0, %b0\"\n-  [(set_attr \"type\" \"alu1\")\n-   (set_attr \"mode\" \"QI\")\n-   (set_attr \"pent_pair\" \"np\")\n-   (set_attr \"athlon_decode\" \"vector\")\n-   (set_attr \"amdfam10_decode\" \"double\")])\n+  \"rol{w}\\t{$8, %0|%0, 8}\"\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"mode\" \"HI\")])\n \n (define_insn \"bswapdi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")"}, {"sha": "d678133308047582481f13ed69b25cf026deea7c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fa681e3960f7fc93b48e06bfb4131371a9e9b3ad", "patch": "@@ -1,5 +1,12 @@\n+2007-02-16  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/builtin-bswap-1.c: Remove -march=nocona.\n+\t* gcc.target/i386/builtin-bswap-3.c: Ditto.\n+\t* gcc.target/i386/xchg-1.c: New test.\n+\t* gcc.target/i386/xchg-2.c: New test. \n+\n 2007-02-16  Richard Guenther  <rguenther@suse.de>\n-\tChristian Bruel  <christian.bruel@st.com>\n+\t    Christian Bruel  <christian.bruel@st.com>\n \n \t* gcc.dg/strict-overflow-5.c: New testcase.\n "}, {"sha": "0f94025c5343941bae5f02bbafd8dd072fc7f959", "filename": "gcc/testsuite/gcc.target/i386/builtin-bswap-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin-bswap-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin-bswap-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin-bswap-1.c?ref=fa681e3960f7fc93b48e06bfb4131371a9e9b3ad", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-march=nocona\" } */\n+/* { dg-options \"-O2\" } */\n /* { dg-final { scan-assembler-not \"builtin_bswap\" } } */\n \n long foo (long a)"}, {"sha": "d5d612f607c7a8c601563d158e06a60ddbba4295", "filename": "gcc/testsuite/gcc.target/i386/builtin-bswap-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin-bswap-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin-bswap-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin-bswap-3.c?ref=fa681e3960f7fc93b48e06bfb4131371a9e9b3ad", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -march=nocona\" } */\n+/* { dg-options \"-O2\" } */\n /* { dg-final { scan-assembler-not \"bswapdi2\" } } */\n \n long long foo (long long x)"}, {"sha": "464417b607e9b7d75850fcf0d16dd033af0c5492", "filename": "gcc/testsuite/gcc.target/i386/xchg-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxchg-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxchg-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxchg-1.c?ref=fa681e3960f7fc93b48e06bfb4131371a9e9b3ad", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-O2 -march=k8\" } */\n+\n+unsigned short good(unsigned short a)\n+{\n+       return (a >> 8 | a << 8);\n+}\n+\n+/* { dg-final { scan-assembler \"rol\" } } */"}, {"sha": "1af4c98d741d41b1faaf70f02aaf2e31cc9af897", "filename": "gcc/testsuite/gcc.target/i386/xchg-2.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxchg-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa681e3960f7fc93b48e06bfb4131371a9e9b3ad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxchg-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxchg-2.c?ref=fa681e3960f7fc93b48e06bfb4131371a9e9b3ad", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-Os\" } */\n+\n+unsigned short good(unsigned short a)\n+{\n+       return (a >> 8 | a << 8);\n+}\n+\n+/* { dg-final { scan-assembler \"xchg\" } } */"}]}