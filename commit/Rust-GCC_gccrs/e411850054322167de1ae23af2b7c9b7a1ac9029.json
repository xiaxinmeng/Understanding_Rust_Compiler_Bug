{"sha": "e411850054322167de1ae23af2b7c9b7a1ac9029", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQxMTg1MDA1NDMyMjE2N2RlMWFlMjNhZjJiN2M5YjdhMWFjOTAyOQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-12-01T18:57:10Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-12-01T18:57:10Z"}, "message": "compiler: add error to list of built-in types.\n\nFrom-SVN: r181889", "tree": {"sha": "4933f4f00f1dfda27ff47044cab8049911bf2186", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4933f4f00f1dfda27ff47044cab8049911bf2186"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e411850054322167de1ae23af2b7c9b7a1ac9029", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e411850054322167de1ae23af2b7c9b7a1ac9029", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e411850054322167de1ae23af2b7c9b7a1ac9029", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e411850054322167de1ae23af2b7c9b7a1ac9029/comments", "author": null, "committer": null, "parents": [{"sha": "b0d0a2918f405c52d9b6893d3c4ed77e5d659a06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0d0a2918f405c52d9b6893d3c4ed77e5d659a06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0d0a2918f405c52d9b6893d3c4ed77e5d659a06"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "3fb7089cc7ca636dedc937cbef9081569b80fc37", "filename": "gcc/go/gofrontend/export.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e411850054322167de1ae23af2b7c9b7a1ac9029/gcc%2Fgo%2Fgofrontend%2Fexport.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e411850054322167de1ae23af2b7c9b7a1ac9029/gcc%2Fgo%2Fgofrontend%2Fexport.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexport.cc?ref=e411850054322167de1ae23af2b7c9b7a1ac9029", "patch": "@@ -337,6 +337,7 @@ Export::register_builtin_types(Gogo* gogo)\n   this->register_builtin_type(gogo, \"uintptr\", BUILTIN_UINTPTR);\n   this->register_builtin_type(gogo, \"bool\", BUILTIN_BOOL);\n   this->register_builtin_type(gogo, \"string\", BUILTIN_STRING);\n+  this->register_builtin_type(gogo, \"error\", BUILTIN_ERROR);\n }\n \n // Register one builtin type in the export table."}, {"sha": "a06b549b609a2b2aef0af25e8c69635fcba4e6c1", "filename": "gcc/go/gofrontend/export.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e411850054322167de1ae23af2b7c9b7a1ac9029/gcc%2Fgo%2Fgofrontend%2Fexport.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e411850054322167de1ae23af2b7c9b7a1ac9029/gcc%2Fgo%2Fgofrontend%2Fexport.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexport.h?ref=e411850054322167de1ae23af2b7c9b7a1ac9029", "patch": "@@ -39,8 +39,9 @@ enum Builtin_code\n   BUILTIN_STRING = -16,\n   BUILTIN_COMPLEX64 = -17,\n   BUILTIN_COMPLEX128 = -18,\n+  BUILTIN_ERROR = -19,\n \n-  SMALLEST_BUILTIN_CODE = -18\n+  SMALLEST_BUILTIN_CODE = -19\n };\n \n // This class manages exporting Go declarations.  It handles the main"}, {"sha": "075109c0c04851d21d0447ac039ad692d2df216a", "filename": "gcc/go/gofrontend/import.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e411850054322167de1ae23af2b7c9b7a1ac9029/gcc%2Fgo%2Fgofrontend%2Fimport.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e411850054322167de1ae23af2b7c9b7a1ac9029/gcc%2Fgo%2Fgofrontend%2Fimport.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fimport.cc?ref=e411850054322167de1ae23af2b7c9b7a1ac9029", "patch": "@@ -706,6 +706,7 @@ Import::register_builtin_types(Gogo* gogo)\n   this->register_builtin_type(gogo, \"uintptr\", BUILTIN_UINTPTR);\n   this->register_builtin_type(gogo, \"bool\", BUILTIN_BOOL);\n   this->register_builtin_type(gogo, \"string\", BUILTIN_STRING);\n+  this->register_builtin_type(gogo, \"error\", BUILTIN_ERROR);\n }\n \n // Register a single builtin type."}]}