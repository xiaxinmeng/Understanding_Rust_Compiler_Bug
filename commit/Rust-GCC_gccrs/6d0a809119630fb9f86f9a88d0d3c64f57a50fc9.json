{"sha": "6d0a809119630fb9f86f9a88d0d3c64f57a50fc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQwYTgwOTExOTYzMGZiOWY4NmY5YTg4ZDBkM2M2NGY1N2E1MGZjOQ==", "commit": {"author": {"name": "Dale Johannesen", "email": "dalej@apple.com", "date": "2005-06-04T21:32:40Z"}, "committer": {"name": "Dale Johannesen", "email": "dalej@gcc.gnu.org", "date": "2005-06-04T21:32:40Z"}, "message": "rs6000.c (no_global_regs_above): New.\n\n2005-06-04  Dale Johannesen  <dalej@apple.com>\n\n        * config/rs6000/rs6000.c (no_global_regs_above): New.\n        (rs6000_emit_prologue):  Use it; cosmetic formatting fixes.\n        (rs6000_emit_epilogue):  Use it; cosmetic formatting fixes.\n        (rs6000_conditional_register_usage): Don't put Darwin PIC\n        register in global_regs.\n        (rs6000_stack_info):  Don't set lr_save_p just because Darwin\n        PIC reg used.\n        (rs6000_emit_prologue):  Save LR in R0 around Darwin PIC setup,\n        if not done by lr_save_p.\n        * config/rs6000/rs6000.md (insnv1_internal1):  Back out 05-18 patch.\n        Use rotate instead of ashift.\n        (call_indirect_nonlocal_sysv):  Prefer CTR to LR.\n        (call_value_indirect_nonlocal_sysv):  Ditto.\n\nFrom-SVN: r100601", "tree": {"sha": "ccca894d71424c49311d2ee1f04b0a5f65066eb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccca894d71424c49311d2ee1f04b0a5f65066eb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d0a809119630fb9f86f9a88d0d3c64f57a50fc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0a809119630fb9f86f9a88d0d3c64f57a50fc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d0a809119630fb9f86f9a88d0d3c64f57a50fc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0a809119630fb9f86f9a88d0d3c64f57a50fc9/comments", "author": null, "committer": null, "parents": [{"sha": "d71cc23f717aa36fdff3fd6591cb27acd0f09366", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d71cc23f717aa36fdff3fd6591cb27acd0f09366", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d71cc23f717aa36fdff3fd6591cb27acd0f09366"}], "stats": {"total": 93, "additions": 64, "deletions": 29}, "files": [{"sha": "2c628c79a15335a2e40934140ea5703273e32910", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0a809119630fb9f86f9a88d0d3c64f57a50fc9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0a809119630fb9f86f9a88d0d3c64f57a50fc9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d0a809119630fb9f86f9a88d0d3c64f57a50fc9", "patch": "@@ -1,3 +1,19 @@\n+2005-06-04  Dale Johannesen  <dalej@apple.com>\n+\n+\t* config/rs6000/rs6000.c (no_global_regs_above): New.\n+\t(rs6000_emit_prologue):  Use it; cosmetic formatting fixes.\n+\t(rs6000_emit_epilogue):  Use it; cosmetic formatting fixes.\n+\t(rs6000_conditional_register_usage): Don't put Darwin PIC\n+\tregister in global_regs.\n+\t(rs6000_stack_info):  Don't set lr_save_p just because Darwin \n+\tPIC reg used.\n+\t(rs6000_emit_prologue):  Save LR in R0 around Darwin PIC setup,\n+\tif not done by lr_save_p.\n+\t* config/rs6000/rs6000.md (insnv1_internal1):  Back out 05-18 patch.\n+\tUse rotate instead of ashift.\n+\t(call_indirect_nonlocal_sysv):  Prefer CTR to LR.\n+\t(call_value_indirect_nonlocal_sysv):  Ditto.\n+\n 2005-06-04  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraphunit.c (cgraph_reset_node): Break out from ..."}, {"sha": "250644511b4d390dd0c0bfd2e70e1bdf496883b9", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 34, "deletions": 15, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0a809119630fb9f86f9a88d0d3c64f57a50fc9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0a809119630fb9f86f9a88d0d3c64f57a50fc9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=6d0a809119630fb9f86f9a88d0d3c64f57a50fc9", "patch": "@@ -573,6 +573,7 @@ static bool legitimate_indexed_address_p (rtx, int);\n static bool legitimate_lo_sum_address_p (enum machine_mode, rtx, int);\n static struct machine_function * rs6000_init_machine_status (void);\n static bool rs6000_assemble_integer (rtx, unsigned int, int);\n+static bool no_global_regs_above (int);\n #ifdef HAVE_GAS_HIDDEN\n static void rs6000_assemble_visibility (tree, int);\n #endif\n@@ -3317,8 +3318,7 @@ rs6000_conditional_register_usage (void)\n \n   if (DEFAULT_ABI == ABI_DARWIN\n       && PIC_OFFSET_TABLE_REGNUM != INVALID_REGNUM)\n-    global_regs[RS6000_PIC_OFFSET_TABLE_REGNUM]\n-      = fixed_regs[RS6000_PIC_OFFSET_TABLE_REGNUM]\n+      fixed_regs[RS6000_PIC_OFFSET_TABLE_REGNUM]\n       = call_used_regs[RS6000_PIC_OFFSET_TABLE_REGNUM]\n       = call_really_used_regs[RS6000_PIC_OFFSET_TABLE_REGNUM] = 1;\n \n@@ -12047,9 +12047,6 @@ rs6000_stack_info (void)\n \t  && !FP_SAVE_INLINE (info_ptr->first_fp_reg_save))\n       || info_ptr->first_altivec_reg_save <= LAST_ALTIVEC_REGNO\n       || (DEFAULT_ABI == ABI_V4 && current_function_calls_alloca)\n-      || (DEFAULT_ABI == ABI_DARWIN\n-\t  && flag_pic\n-\t  && current_function_uses_pic_offset_table)\n       || info_ptr->calls_p)\n     {\n       info_ptr->lr_save_p = 1;\n@@ -13229,6 +13226,19 @@ gen_frame_mem_offset (enum machine_mode mode, rtx reg, int offset)\n   return gen_rtx_MEM (mode, gen_rtx_PLUS (Pmode, reg, offset_rtx));\n }\n \n+/* Look for user-defined global regs.  We should not save and restore these,\n+   and cannot use stmw/lmw if there are any in its range.  */\n+\n+static bool\n+no_global_regs_above (int first_greg)\n+{\n+  int i;\n+  for (i = 0; i < 32 - first_greg; i++)\n+    if (global_regs[first_greg + i])\n+      return false;\n+  return true;\n+}\n+\n #ifndef TARGET_FIX_AND_CONTINUE\n #define TARGET_FIX_AND_CONTINUE 0\n #endif\n@@ -13273,7 +13283,8 @@ rs6000_emit_prologue (void)\n   using_store_multiple = (TARGET_MULTIPLE && ! TARGET_POWERPC64\n \t\t\t  && (!TARGET_SPE_ABI\n \t\t\t      || info->spe_64bit_regs_used == 0)\n-\t\t\t  && info->first_gp_reg_save < 31);\n+\t\t\t  && info->first_gp_reg_save < 31\n+\t\t\t  && no_global_regs_above (info->first_gp_reg_save));\n   saving_FPRs_inline = (info->first_fp_reg_save == 64\n \t\t\t|| FP_SAVE_INLINE (info->first_fp_reg_save)\n \t\t\t|| current_function_calls_eh_return\n@@ -13597,12 +13608,12 @@ rs6000_emit_prologue (void)\n     {\n       int i;\n       for (i = 0; i < 32 - info->first_gp_reg_save; i++)\n-\tif ((regs_ever_live[info->first_gp_reg_save+i]\n-\t     && (! call_used_regs[info->first_gp_reg_save+i]\n-\t\t || (i+info->first_gp_reg_save\n+\tif ((regs_ever_live[info->first_gp_reg_save + i]\n+\t     && (!call_used_regs[info->first_gp_reg_save + i]\n+\t\t || (i + info->first_gp_reg_save\n \t\t     == RS6000_PIC_OFFSET_TABLE_REGNUM\n \t\t     && TARGET_TOC && TARGET_MINIMAL_TOC)))\n-\t    || (i+info->first_gp_reg_save == RS6000_PIC_OFFSET_TABLE_REGNUM\n+\t    || (i + info->first_gp_reg_save == RS6000_PIC_OFFSET_TABLE_REGNUM\n \t\t&& ((DEFAULT_ABI == ABI_V4 && flag_pic != 0)\n \t\t    || (DEFAULT_ABI == ABI_DARWIN && flag_pic))))\n \t  {\n@@ -13787,12 +13798,19 @@ rs6000_emit_prologue (void)\n       rtx lr = gen_rtx_REG (Pmode, LINK_REGISTER_REGNUM);\n       rtx src = machopic_function_base_sym ();\n \n+      /* Save and restore LR locally around this call (in R0).  */\n+      if (!info->lr_save_p)\n+\trs6000_maybe_dead (emit_move_insn (gen_rtx_REG (Pmode, 0), lr));\n+\n       rs6000_maybe_dead (emit_insn (gen_load_macho_picbase (lr, src)));\n \n       insn = emit_move_insn (gen_rtx_REG (Pmode,\n \t\t\t\t\t  RS6000_PIC_OFFSET_TABLE_REGNUM),\n \t\t\t     lr);\n       rs6000_maybe_dead (insn);\n+\n+      if (!info->lr_save_p)\n+\trs6000_maybe_dead (emit_move_insn (lr, gen_rtx_REG (Pmode, 0)));\n     }\n #endif\n }\n@@ -13892,7 +13910,8 @@ rs6000_emit_epilogue (int sibcall)\n   using_load_multiple = (TARGET_MULTIPLE && ! TARGET_POWERPC64\n \t\t\t && (!TARGET_SPE_ABI\n \t\t\t     || info->spe_64bit_regs_used == 0)\n-\t\t\t && info->first_gp_reg_save < 31);\n+\t\t\t && info->first_gp_reg_save < 31\n+\t\t\t && no_global_regs_above (info->first_gp_reg_save));\n   restoring_FPRs_inline = (sibcall\n \t\t\t   || current_function_calls_eh_return\n \t\t\t   || info->first_fp_reg_save == 64\n@@ -14156,11 +14175,11 @@ rs6000_emit_epilogue (int sibcall)\n     }\n   else\n     for (i = 0; i < 32 - info->first_gp_reg_save; i++)\n-      if ((regs_ever_live[info->first_gp_reg_save+i]\n-\t   && (! call_used_regs[info->first_gp_reg_save+i]\n-\t       || (i+info->first_gp_reg_save == RS6000_PIC_OFFSET_TABLE_REGNUM\n+      if ((regs_ever_live[info->first_gp_reg_save + i]\n+\t   && (!call_used_regs[info->first_gp_reg_save + i]\n+\t       || (i + info->first_gp_reg_save == RS6000_PIC_OFFSET_TABLE_REGNUM\n \t\t   && TARGET_TOC && TARGET_MINIMAL_TOC)))\n-\t  || (i+info->first_gp_reg_save == RS6000_PIC_OFFSET_TABLE_REGNUM\n+\t  || (i + info->first_gp_reg_save == RS6000_PIC_OFFSET_TABLE_REGNUM\n \t      && ((DEFAULT_ABI == ABI_V4 && flag_pic != 0)\n \t\t  || (DEFAULT_ABI == ABI_DARWIN && flag_pic))))\n \t{"}, {"sha": "97ac84ba753df4a4c709cfffba0df7e88d0d6e48", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0a809119630fb9f86f9a88d0d3c64f57a50fc9/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0a809119630fb9f86f9a88d0d3c64f57a50fc9/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=6d0a809119630fb9f86f9a88d0d3c64f57a50fc9", "patch": "@@ -3004,7 +3004,7 @@\n   [(set (zero_extract:SI (match_operand:SI 0 \"gpc_reg_operand\" \"+r\")\n \t\t\t (match_operand:SI 1 \"const_int_operand\" \"i\")\n \t\t\t (match_operand:SI 2 \"const_int_operand\" \"i\"))\n-\t(ashift:SI (match_operand:SI 3 \"gpc_reg_operand\" \"r\")\n+\t(rotate:SI (match_operand:SI 3 \"gpc_reg_operand\" \"r\")\n \t\t   (match_operand:SI 4 \"const_int_operand\" \"i\")))]\n   \"(32 - (INTVAL (operands[4]) & 31)) >= INTVAL (operands[1])\"\n   \"*\n@@ -3014,7 +3014,7 @@\n   int size = INTVAL (operands[1]) & 31;\n \n   operands[4] = GEN_INT (shift - start - size);\n-  operands[1] = GEN_INT (start + size - 1 - shift);\n+  operands[1] = GEN_INT (start + size - 1);\n   return \\\"{rlimi|rlwimi} %0,%3,%h4,%h2,%h1\\\";\n }\"\n   [(set_attr \"type\" \"insert_word\")])\n@@ -10328,10 +10328,10 @@\n ;; which indicates how to set cr1\n \n (define_insn \"*call_indirect_nonlocal_sysv\"\n-  [(call (mem:SI (match_operand:SI 0 \"register_operand\" \"cl,cl\"))\n-\t (match_operand 1 \"\" \"g,g\"))\n-   (use (match_operand:SI 2 \"immediate_operand\" \"O,n\"))\n-   (clobber (match_scratch:SI 3 \"=l,l\"))]\n+  [(call (mem:SI (match_operand:SI 0 \"register_operand\" \"c,*l,c,*l\"))\n+\t (match_operand 1 \"\" \"g,g,g,g\"))\n+   (use (match_operand:SI 2 \"immediate_operand\" \"O,O,n,n\"))\n+   (clobber (match_scratch:SI 3 \"=l,l,l,l\"))]\n   \"DEFAULT_ABI == ABI_V4\n    || DEFAULT_ABI == ABI_DARWIN\"\n {\n@@ -10343,8 +10343,8 @@\n \n   return \"b%T0l\";\n }\n-  [(set_attr \"type\" \"jmpreg,jmpreg\")\n-   (set_attr \"length\" \"4,8\")])\n+  [(set_attr \"type\" \"jmpreg,jmpreg,jmpreg,jmpreg\")\n+   (set_attr \"length\" \"4,4,8,8\")])\n \n (define_insn \"*call_nonlocal_sysv\"\n   [(call (mem:SI (match_operand:SI 0 \"symbol_ref_operand\" \"s,s\"))\n@@ -10383,10 +10383,10 @@\n \n (define_insn \"*call_value_indirect_nonlocal_sysv\"\n   [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:SI (match_operand:SI 1 \"register_operand\" \"cl,cl\"))\n-\t      (match_operand 2 \"\" \"g,g\")))\n-   (use (match_operand:SI 3 \"immediate_operand\" \"O,n\"))\n-   (clobber (match_scratch:SI 4 \"=l,l\"))]\n+\t(call (mem:SI (match_operand:SI 1 \"register_operand\" \"c,*l,c,*l\"))\n+\t      (match_operand 2 \"\" \"g,g,g,g\")))\n+   (use (match_operand:SI 3 \"immediate_operand\" \"O,O,n,n\"))\n+   (clobber (match_scratch:SI 4 \"=l,l,l,l\"))]\n   \"DEFAULT_ABI == ABI_V4\n    || DEFAULT_ABI == ABI_DARWIN\"\n {\n@@ -10398,8 +10398,8 @@\n \n   return \"b%T1l\";\n }\n-  [(set_attr \"type\" \"jmpreg,jmpreg\")\n-   (set_attr \"length\" \"4,8\")])\n+  [(set_attr \"type\" \"jmpreg,jmpreg,jmpreg,jmpreg\")\n+   (set_attr \"length\" \"4,4,8,8\")])\n \n (define_insn \"*call_value_nonlocal_sysv\"\n   [(set (match_operand 0 \"\" \"\")"}]}