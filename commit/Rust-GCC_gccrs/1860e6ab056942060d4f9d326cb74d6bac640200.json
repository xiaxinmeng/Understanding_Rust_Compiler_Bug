{"sha": "1860e6ab056942060d4f9d326cb74d6bac640200", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg2MGU2YWIwNTY5NDIwNjBkNGY5ZDMyNmNiNzRkNmJhYzY0MDIwMA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jw@kayari.org", "date": "2002-08-20T00:44:19Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-08-20T00:44:19Z"}, "message": "configopts.html, [...]: Conform to HTML 4.01 standard.\n\n2002-08-19  Jonathan Wakely  <jw@kayari.org>\n\n\t* docs/html/configopts.html, docs/html/documentation.html,\n\tdocs/html/install.html, docs/html/22_locale/codecvt.html,\n\tdocs/html/22_locale/ctype.html, docs/html/22_locale/howto.html,\n\tdocs/html/22_locale/locale.html,\n\tdocs/html/22_locale/messages.html: Conform to HTML 4.01 standard.\n\nFrom-SVN: r56449", "tree": {"sha": "cf969673c3caeef9a94cb2a666c95a24e74f4212", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf969673c3caeef9a94cb2a666c95a24e74f4212"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1860e6ab056942060d4f9d326cb74d6bac640200", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1860e6ab056942060d4f9d326cb74d6bac640200", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1860e6ab056942060d4f9d326cb74d6bac640200", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1860e6ab056942060d4f9d326cb74d6bac640200/comments", "author": null, "committer": null, "parents": [{"sha": "3fcd079e3b3e25a7e025045b6a7994676aafe23a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fcd079e3b3e25a7e025045b6a7994676aafe23a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fcd079e3b3e25a7e025045b6a7994676aafe23a"}], "stats": {"total": 197, "additions": 112, "deletions": 85}, "files": [{"sha": "92f9ecb07d8134b10df2e5fabf23a10ae4c8249b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1860e6ab056942060d4f9d326cb74d6bac640200/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1860e6ab056942060d4f9d326cb74d6bac640200/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1860e6ab056942060d4f9d326cb74d6bac640200", "patch": "@@ -1,3 +1,11 @@\n+2002-08-19  Jonathan Wakely  <jw@kayari.org>\n+\n+\t* docs/html/configopts.html, docs/html/documentation.html,\n+\tdocs/html/install.html, docs/html/22_locale/codecvt.html,\n+\tdocs/html/22_locale/ctype.html, docs/html/22_locale/howto.html,\n+\tdocs/html/22_locale/locale.html,\n+\tdocs/html/22_locale/messages.html: Conform to HTML 4.01 standard.\n+\n 2002-08-15  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/ext/stdio_filebuf.h (stdio_filebuf): Explicitly set"}, {"sha": "a841c35fbce070adcd753991711396efd50a66d2", "filename": "libstdc++-v3/docs/html/22_locale/codecvt.html", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1860e6ab056942060d4f9d326cb74d6bac640200/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fcodecvt.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1860e6ab056942060d4f9d326cb74d6bac640200/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fcodecvt.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fcodecvt.html?ref=1860e6ab056942060d4f9d326cb74d6bac640200", "patch": "@@ -1,14 +1,19 @@\n+<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n <html>\n <head>\n+  <title>\n+  Notes on the codecvt implementation.\n+  </title>\n+</head>\n+<body>\n   <h1>\n   Notes on the codecvt implementation.\n   </h1>\n-</head>\n+<p>\n <I>\n prepared by Benjamin Kosnik (bkoz@redhat.com) on August 28, 2000\n </I>\n \n-<p>\n <h2>\n 1. Abstract\n </h2>\n@@ -142,14 +147,14 @@ <h2>\n \n <ul>\n <li>\n-</p>\n+<p>\n  Identifiers for each of the codesets involved in the conversion. For\n example, using the iconv family of functions from the Single Unix\n Specification (what used to be called X/Open) hosted on the GNU/Linux\n operating system allows bi-directional mapping between far more than\n the following tantalizing possibilities: \n-</p>\n \n+<p>\n (An edited list taken from <code>`iconv --list`</code> on a Red Hat 6.2/Intel system:\n \n <BLOCKQUOTE>\n@@ -519,4 +524,5 @@ <h2>\n The Open Group/The Institute of Electrical and Electronics Engineers, Inc.\n http://www.opennc.org/austin/docreg.html\n \n-\n+</body>\n+</html>"}, {"sha": "a47d9f81ef0261743970e48a83d567256153406e", "filename": "libstdc++-v3/docs/html/22_locale/ctype.html", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1860e6ab056942060d4f9d326cb74d6bac640200/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fctype.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1860e6ab056942060d4f9d326cb74d6bac640200/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fctype.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fctype.html?ref=1860e6ab056942060d4f9d326cb74d6bac640200", "patch": "@@ -1,9 +1,14 @@\n+<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n <html>\n <head>\n+  <title>\n+  Notes on the ctype implementation.\n+  </title>\n+</head>\n+<body>\n   <h1>\n   Notes on the ctype implementation.\n   </h1>\n-</head>\n <I>\n prepared by Benjamin Kosnik (bkoz@redhat.com) on August 30, 2000\n </I>\n@@ -60,15 +65,13 @@ <h2>\n Neither of these two required specializations deals with Unicode\n characters. As such, libstdc++-v3 implements \n \n-\n-\n <p>\n <h2>\n 5.  Examples\n </h2>\n \n <pre>\n-  typedef ctype<char> cctype;\n+  typedef ctype&lt;char&gt; cctype;\n </pre>\n \n More information can be found in the following testcases:\n@@ -98,10 +101,10 @@ <h2>\n \tstraighten out the configure-time mess that is a by-product of\n \tthis class?\n \n-\t<li> get the ctype<wchar_t>::mask stuff under control. Need to\n+\t<li> get the ctype&lt;wchar_t&gt;::mask stuff under control. Need to\n \tmake some kind of static table, and not do lookup evertime\n \tsomebody hits the do_is... functions. Too bad we can't just\n-\tredefine mask for ctype<wchar_t>\n+\tredefine mask for ctype&lt;wchar_t&gt;\n \t\n \t<li> rename abstract base class. See if just smash-overriding\n \tis a better approach. Clarify, add sanity to naming.\n@@ -143,4 +146,5 @@ <h2>\n The Open Group/The Institute of Electrical and Electronics Engineers, Inc.\n http://www.opennc.org/austin/docreg.html\n \n-\n+</body>\n+</html>"}, {"sha": "b8fe45d1e595d524374e5a2390e36b332f48231e", "filename": "libstdc++-v3/docs/html/22_locale/howto.html", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1860e6ab056942060d4f9d326cb74d6bac640200/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1860e6ab056942060d4f9d326cb74d6bac640200/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fhowto.html?ref=1860e6ab056942060d4f9d326cb74d6bac640200", "patch": "@@ -1,4 +1,4 @@\n-<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\">\n+<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n <html>\n <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n@@ -49,6 +49,7 @@ <h2><a name=\"2\">class codecvt</a></h2>\n    </p>\n \n    <p>The following is the abstract from the implementation notes:\n+   </p>\n    <blockquote>\n    The standard class codecvt attempts to address conversions between\n    different character encoding schemes. In particular, the standard\n@@ -64,7 +65,6 @@ <h2><a name=\"2\">class codecvt</a></h2>\n    the required specializations for wide and narrow characters and the\n    implementation-provided extended functionality are given.\n    </blockquote>\n-   </p>\n \n <hr>\n <h2><a name=\"3\">class ctype</a></h2>\n@@ -88,13 +88,13 @@ <h2><a name=\"5\">Stroustrup on Locales</a></h2>\n       description of locales and how to use them.\n    </p>\n    <p>He also writes:\n+   </p>\n       <blockquote><em>\n       Please note that I still consider this detailed description of\n       locales beyond the needs of most C++ programmers.  It is written\n       with experienced programmers in mind and novices will do best to\n       avoid it.\n       </em></blockquote>\n-   </p>\n \n <hr>\n <h2><a name=\"6\">Nathan Myers on Locales</a></h2>\n@@ -131,6 +131,7 @@ <h2><a name=\"7\">Correct Transformations</a></h2>\n       is created.  Then member functions of that locale are called to\n       perform minor tasks.  Continuing the example from Chapter 21, we wish\n       to use the following convenience functions:\n+   </p>\n    <pre>\n    namespace std {\n      template &lt;class charT&gt;\n@@ -140,6 +141,7 @@ <h2><a name=\"7\">Correct Transformations</a></h2>\n        charT\n        tolower (charT c, const locale&amp; loc) const;\n    }</pre>\n+   <p>\n       This function extracts the appropriate &quot;facet&quot; from the\n       locale <em>loc</em> and calls the appropriate member function of that\n       facet, passing <em>c</em> as its argument.  The resulting character\n@@ -154,6 +156,7 @@ <h2><a name=\"7\">Correct Transformations</a></h2>\n       parameter.  So we write simple wrapper structs to handle that.\n    </p>\n    <p>The next-to-final version of the code started in Chapter 21 looks like:\n+   </p>\n       <pre>\n    #include &lt;iterator&gt;    // for back_inserter\n    #include &lt;locale&gt;\n@@ -195,7 +198,6 @@ <h2><a name=\"7\">Correct Transformations</a></h2>\n       std::string  capital_s;\n       std::transform(s.begin(), s.end(), std::back_inserter(capital_s), up);\n    }</pre>\n-   </p>\n    <p>The final version of the code uses <code>bind2nd</code> to eliminate\n       the wrapper structs, but the resulting code is tricky.  I have not\n       shown it here because no compilers currently available to me will"}, {"sha": "630f59986f162f3e92efb9b753b3fc63cbbd56b2", "filename": "libstdc++-v3/docs/html/22_locale/locale.html", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1860e6ab056942060d4f9d326cb74d6bac640200/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Flocale.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1860e6ab056942060d4f9d326cb74d6bac640200/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Flocale.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Flocale.html?ref=1860e6ab056942060d4f9d326cb74d6bac640200", "patch": "@@ -1,9 +1,14 @@\n+<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n <html>\n <head>\n+  <title>\n+  Notes on the locale implementation.\n+  </title>\n+</head>\n+<body>\n   <h1>\n   Notes on the locale implementation.\n   </h1>\n-</head>\n <I>\n prepared by Benjamin Kosnik (bkoz@redhat.com) on August 8, 2001\n </I>"}, {"sha": "39ee9cfbee7ecef971726c1e8c02537abb029fcf", "filename": "libstdc++-v3/docs/html/22_locale/messages.html", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1860e6ab056942060d4f9d326cb74d6bac640200/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fmessages.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1860e6ab056942060d4f9d326cb74d6bac640200/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fmessages.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Fmessages.html?ref=1860e6ab056942060d4f9d326cb74d6bac640200", "patch": "@@ -1,9 +1,14 @@\n+<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n <html>\n <head>\n-  <h1>\n+  <title>\n   Notes on the messages implementation.\n-  </h1>\n+  </title>\n </head>\n+<body>\n+<h1>\n+Notes on the messages implementation.\n+</h1>\n <I>\n prepared by Benjamin Kosnik (bkoz@redhat.com) on August 8, 2001\n </I>"}, {"sha": "4fae2659799531e2326495f370ef3968383df105", "filename": "libstdc++-v3/docs/html/configopts.html", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1860e6ab056942060d4f9d326cb74d6bac640200/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fconfigopts.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1860e6ab056942060d4f9d326cb74d6bac640200/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fconfigopts.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fconfigopts.html?ref=1860e6ab056942060d4f9d326cb74d6bac640200", "patch": "@@ -34,6 +34,7 @@ <h1 class=\"centered\"><a name=\"top\">Interesting <code>configure</code>\n <p>The canonical way to find out the configure options that are\n    available for a given set of libstdc++ sources is to go to the\n    source directory and then type:<code>  ./configure --help</code>\n+</p>\n \n <dl>\n  <dt><code>--enable-multilib  </code>[default]\n@@ -156,16 +157,18 @@ <h1 class=\"centered\"><a name=\"top\">Interesting <code>configure</code>\n         the following puts all the libstdc++ headers into a directory\n         called &quot;2.97-20001008&quot; instead of the usual\n         &quot;g++-v3&quot;.\n+     </p>\n         <pre>\n    --with-gxx-include-dir=/foo/H-x86-gcc-3-c-gxx-inc/include/2.97-20001008</pre>\n-     </p>\n \n  <dt><code>--enable-cxx-flags=FLAGS</code>\n  <dd><p>With this option, you can pass a string of -f (functionality)\n         flags to the compiler to use when building libstdc++.  FLAGS\n         is a quoted string of options, like\n+     </p>\n         <pre>\n   --enable-cxx-flags='-fvtable-gc -fomit-frame-pointer -ansi'</pre>\n+     <p>\n         Note that the flags don't necessarily have to all be -f flags,\n         as shown, but usually those are the ones that will make sense\n         for experimentation and configure-time overriding.\n@@ -176,12 +179,13 @@ <h1 class=\"centered\"><a name=\"top\">Interesting <code>configure</code>\n         as well, so that everything matches.\n      </p>\n      <p>Fun flags to try might include combinations of\n+     </p>\n         <pre>\n   -fstrict-aliasing\n   -fno-exceptions\n   -ffunction-sections\n   -fvtable-gc</pre>\n-        and opposite forms (-fno-) of the same.  Tell us (the libstdc++\n+     <p>and opposite forms (-fno-) of the same.  Tell us (the libstdc++\n         mailing list) if you discover more!\n      </p>\n \n@@ -211,7 +215,6 @@ <h1 class=\"centered\"><a name=\"top\">Interesting <code>configure</code>\n         on.  Hopefully people will volunteer to do other 'style' options.\n      </p>\n </dl>\n-</p>\n <p>Return <a href=\"#top\">to the top of the page</a> or\n    <a href=\"http://gcc.gnu.org/libstdc++/\">to the libstdc++ homepage</a>.\n </p>"}, {"sha": "8987a521d0636177c176acb5193e0d85a1908565", "filename": "libstdc++-v3/docs/html/documentation.html", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1860e6ab056942060d4f9d326cb74d6bac640200/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1860e6ab056942060d4f9d326cb74d6bac640200/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html?ref=1860e6ab056942060d4f9d326cb74d6bac640200", "patch": "@@ -1,3 +1,4 @@\n+<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n <html>\n <head>\n  <meta name=\"KEYWORDS\" \n@@ -35,7 +36,6 @@ <h2><a name=\"1\">Introduction</a></h2>\n          <li><a href=\"17_intro/TODO\">TODO</a>\n          - tasks yet undone\n       </ul>\n-   </p>\n \n \n <hr />\n@@ -65,7 +65,6 @@ <h2><a name=\"4\">Source-Level Documentation</a></h2>\n    <li><a href=\"latest-doxygen/index.html\">&quot;the latest collection&quot;</a>\n        (for the snapshot or later; see the date on the first page)\n    </ul>\n-</p>\n <p>This generated HTML collection, as above, is also available for download in\n    the libstdc++ snapshots directory at\n    <code>&lt;URL:ftp://gcc.gnu.org/pub/gcc/libstdc++/doxygen/&gt;</code>."}, {"sha": "6c2f6668d924007d6fc9c112e8975a71cb6bbf59", "filename": "libstdc++-v3/docs/html/install.html", "status": "modified", "additions": 56, "deletions": 61, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1860e6ab056942060d4f9d326cb74d6bac640200/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1860e6ab056942060d4f9d326cb74d6bac640200/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html?ref=1860e6ab056942060d4f9d326cb74d6bac640200", "patch": "@@ -88,46 +88,45 @@ <h2><a name=\"prereqs\">Tools you will need beforehand</a></h2>\n       features if the underlying support is present.\n    </p>\n \n-    <p>Finally, a few system-specific requirements:\n-      <dl>\n-        <dt> linux\n-\n-        <dd>If you are using gcc 3.1 or later on linux, and are using\n-        the gnu locale model (enabled by default for sufficient\n-        versions of glibc), the following locales are used and tested\n-        in the libstdc++ testsuites: en_HK, en_US, fr_FR, fr_FR@euro,\n-        de_DE, de_DE@euro, ja_JP.eucjp, and it_IT. Failure to have the\n-        underlying \"C\" library locale information installed will mean\n-        that C++ named locales for the above regions will not work:\n-        because of this, the libstdc++ testsuite will not pass the\n-        named locale tests. If this isn't an issue, don't worry about\n-        it. If named locales are needed, the underlying locale\n-        information must be installed. Note that rebuilding libstdc++\n-        after locales are installed is not necessary.\n-\n-        <p> To install\n-        support for locales, do only one of the following: </p>\n-        <p>\n-          <li> install all locales\n-          <p> <code> export LC_ALL=C </code> </p>\n-          <p> <code> rpm -e glibc-common --nodeps </code> </p>\n-          <p> <code> rpm -i --define \"_install_langs all\"\n-          glibc-common-2.2.5-34.i386.rpm </code> </p>\n-          </li>\n-          <li> install just the necessary locales\n-          <p> <code> localedef -i de_DE -f ISO-8859-1 de_DE </code> </p>\n-          </li>\n-        </p>\n-        </dd>\n-      </dt>\n+    <p>Finally, a few system-specific requirements: </p>\n+    <dl>\n+      <dt> linux </dt>\n+\n+      <dd>If you are using gcc 3.1 or later on linux, and are using\n+      the gnu locale model (enabled by default for sufficient\n+      versions of glibc), the following locales are used and tested\n+      in the libstdc++ testsuites: en_HK, en_US, fr_FR, fr_FR@euro,\n+      de_DE, de_DE@euro, ja_JP.eucjp, and it_IT. Failure to have the\n+      underlying \"C\" library locale information installed will mean\n+      that C++ named locales for the above regions will not work:\n+      because of this, the libstdc++ testsuite will not pass the\n+      named locale tests. If this isn't an issue, don't worry about\n+      it. If named locales are needed, the underlying locale\n+      information must be installed. Note that rebuilding libstdc++\n+      after locales are installed is not necessary.\n+\n+      <p> To install\n+      support for locales, do only one of the following: </p>\n+      <ul>\n+        <li> install all locales\n+        <p> <code> export LC_ALL=C </code> </p>\n+        <p> <code> rpm -e glibc-common --nodeps </code> </p>\n+        <p> <code> rpm -i --define \"_install_langs all\"\n+                   glibc-common-2.2.5-34.i386.rpm </code> </p>\n+        </li>\n+        <li> install just the necessary locales\n+        <p> <code> localedef -i de_DE -f ISO-8859-1 de_DE </code> </p>\n+        </li>\n+      </ul>\n+      </dd>\n     </dl>\n-   </p>\n \n <hr>\n \n <h2><a name=\"srcsetup\">Setting up the source directories</a></h2>\n    <p>The following definitions will be used throughout the rest of this\n       document:\n+   </p>\n       <ul>\n          <li><em>gccsrcdir</em>:  The directory holding the source of the\n                  compiler.  It should have several subdirectories like\n@@ -142,7 +141,7 @@ <h2><a name=\"srcsetup\">Setting up the source directories</a></h2>\n                  the compiler/libraries, set with the --prefix option to\n                  the configure script.\n       </ul>\n-      Note:\n+      <p> Note: </p>\n       <ol>\n          <li>The 3.0 version and following are intended to replace the\n              library that comes with the compiler, so <em>libsrcdir</em>\n@@ -153,28 +152,27 @@ <h2><a name=\"srcsetup\">Setting up the source directories</a></h2>\n              separate directories. Please don't build out of the\n              source directory.\n       </ol>\n-   </p>\n \n    <p>Check out or download the GCC sources: the resulting source directory\n       (<code>gcc</code> or <code>gcc-3.0.3</code>, for example) is\n       <em>gccsrcdir</em>.\n       Once in <em>gccsrcdir</em>, you'll need to rename or delete the\n       libstdc++-v3 directory which comes with that snapshot:\n-      <pre>\n+   </p>\n+   <pre>\n    mv libstdc++-v3 libstdc++-v3-previous  <strong>[OR]</strong>\n    rm -r libstdc++-v3</pre>\n-   </p>\n    <p>Next, unpack the libstdc++-v3 library tarball into this\n       <em>gccsrcdir</em> directory; it will create a\n       <em>libsrcdir</em> called <code>libstdc++-<em>version</em></code>:\n-      <pre>\n-   gzip -dc libstdc++-version.tar.gz | tar xf -</pre>\n    </p>\n+   <pre>\n+   gzip -dc libstdc++-version.tar.gz | tar xf -</pre>\n    <p>Finally, rename <em>libsrcdir</em> to <code>libstdc++-v3</code> so that\n       gcc's configure flags will be able to deal with the new library.\n-      <pre>\n-   mv <em>libsrcdir</em> libstdc++-v3</pre>\n    </p>\n+   <pre>\n+   mv <em>libsrcdir</em> libstdc++-v3</pre>\n \n \n <hr>\n@@ -193,10 +191,9 @@ <h2><a name=\"config\">Configuring</a></h2>\n       building the C++ language parts.\n    </p>\n \n-   <p><pre>\n+   <pre>\n    cd <em>gccbuilddir</em>\n    <em>gccsrcdir</em>/configure --prefix=<em>destdir</em> --other-opts...</pre>\n-   </p>\n \n \n <hr>\n@@ -214,9 +211,10 @@ <h3>[re]building <em>everything</em></h3>\n    </p>\n \n    <h3>[re]building only libstdc++</h3>\n-   <p>To rebuild just libstdc++, use:\n-      <pre>\n+   <p>To rebuild just libstdc++, use: </p>\n+   <pre>\n    make all-target-libstdc++-v3</pre>\n+   <p>\n       This will configure and build the C++ library in the\n       <em>gccbuilddir/cpu-vendor-os/</em>libstdc++ directory.\n    </p>\n@@ -229,39 +227,38 @@ <h3>[re]building only libstdc++</h3>\n       information is causing problems, you can delete it entirely, or\n       simply edit it and remove lines.\n    </p>\n-   <p>You're done.  Now install the rebuilt pieces with\n-      <pre>\n+   <p>You're done.  Now install the rebuilt pieces with</p>\n+   <pre>\n    make install</pre>\n-      or\n-      <pre>\n+   <p>or</p>\n+   <pre>\n    make install-gcc\n    make install-target-libstdc++-v3</pre>\n-   </p>\n \n \n <hr>\n <h2><a name=\"postinstall\">Post-installation</a></h2>\n    <p>Installation will create the <em>destdir</em> directory and\n       populate it with subdirectories:\n-      <pre>\n+   </p>\n+   <pre>\n    lib/\n    include/g++-v3/\n       backward/\n       bits/\n       <em>cpu-vendor-os</em>/bits/\n       ext/</pre>\n-   </p>\n    <p>If you used the version-specific-libs configure option, then most of\n       the headers and library files will be moved under\n       <code>lib/gcc-lib/</code> instead.\n    </p>\n-   <p>You can check the status of the build without installing it using\n-      <pre>\n+   <p>You can check the status of the build without installing it using</p>\n+   <pre>\n    make check</pre>\n-      or you can check the status of the installed library using\n-      <pre>\n+   <p>or you can check the status of the installed library using</p>\n+   <pre>\n    make check-install</pre>\n-      in the <em>libbuilddir</em> directory.\n+   <p>in the <em>libbuilddir</em> directory.\n       These commands will create a 'testsuite' directory underneath\n       <em>libbuilddir</em> containing the results of the tests.  We are\n       interested in any strange failures of the testsuite; please see\n@@ -271,7 +268,7 @@ <h2><a name=\"postinstall\">Post-installation</a></h2>\n \n <hr>\n <h2><a name=\"usage\">Using the library</a></h2>\n-   <li><B>Find the new library at runtime (shared linking only)</B>\n+   <h3>Find the new library at runtime (shared linking only)</h3>\n        <p>If you only built a static library (libstdc++.a), or if you\n           specified static linking, you don't have to worry about this.\n           But if you built a shared library (libstdc++.so) and linked\n@@ -281,6 +278,7 @@ <h2><a name=\"usage\">Using the library</a></h2>\n        <p>Methods vary for different platforms and different styles, but\n           the usual ones are printed to the screen during installation.\n           They include:\n+       </p>\n           <ul>\n           <li>At runtime set LD_LIBRARY_PATH in your environment correctly,\n               so that the shared library for libstdc++ can be found and\n@@ -298,16 +296,13 @@ <h2><a name=\"usage\">Using the library</a></h2>\n   <li>More...?  Let us know!\n               </ul>\n           </ul>\n-       </p>\n        <p>Use the <code>ldd(1)</code> utility to show which library the system\n           thinks it will get at runtime.\n        </p>\n        <p>A libstdc++.la file is also installed, for use with Libtool.  If\n           you use Libtool to create your executables, these details are\n           taken care of for you.\n        </p>\n-   </ol>\n-   </p>\n \n \n <!--"}]}