{"sha": "91d024d568448e334ecc60b0c55a30b7c3ead9e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFkMDI0ZDU2ODQ0OGUzMzRlY2M2MGIwYzU1YTMwYjdjM2VhZDllNA==", "commit": {"author": {"name": "Martin v. L\u00f6wis", "email": "loewis@informatik.hu-berlin.de", "date": "2000-03-17T09:11:17Z"}, "committer": {"name": "Martin v. L\u00f6wis", "email": "loewis@gcc.gnu.org", "date": "2000-03-17T09:11:17Z"}, "message": "call.c (special_function_p): It is only malloc if it returns Pmode.\n\n\t* call.c (special_function_p): It is only malloc if it returns\n\tPmode.\n\nFrom-SVN: r32604", "tree": {"sha": "a18b85b8268fd7d336f378776d0453c2bf1571ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a18b85b8268fd7d336f378776d0453c2bf1571ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91d024d568448e334ecc60b0c55a30b7c3ead9e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d024d568448e334ecc60b0c55a30b7c3ead9e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91d024d568448e334ecc60b0c55a30b7c3ead9e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d024d568448e334ecc60b0c55a30b7c3ead9e4/comments", "author": null, "committer": null, "parents": [{"sha": "9dd8851b96d1f7a9035882874953f3dfe54aa8e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dd8851b96d1f7a9035882874953f3dfe54aa8e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dd8851b96d1f7a9035882874953f3dfe54aa8e0"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "09dffc1d613ad21e2a55dac9b801515200bf9623", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d024d568448e334ecc60b0c55a30b7c3ead9e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d024d568448e334ecc60b0c55a30b7c3ead9e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91d024d568448e334ecc60b0c55a30b7c3ead9e4", "patch": "@@ -1,3 +1,8 @@\n+2000-03-17  Martin v. L\ufffdwis  <loewis@informatik.hu-berlin.de>\n+\n+\t* call.c (special_function_p): It is only malloc if it returns\n+\tPmode.\n+\n 2000-03-17  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* config/c4x/c4x.h (ASM_SPEC, CPP_SPEC, LINK_SPEC): Support C33."}, {"sha": "6a4c1484ffc7226d88dad631dce8a048d4726d89", "filename": "gcc/calls.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d024d568448e334ecc60b0c55a30b7c3ead9e4/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d024d568448e334ecc60b0c55a30b7c3ead9e4/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=91d024d568448e334ecc60b0c55a30b7c3ead9e4", "patch": "@@ -645,9 +645,10 @@ special_function_p (fndecl, returns_twice, is_longjmp, fork_or_exec,\n          C++ operator new is not suitable because it is not required\n          to return a unique pointer; indeed, the standard placement new\n \t just returns its argument. */\n-      else if (! strcmp (tname, \"malloc\")\n-\t       || ! strcmp (tname, \"calloc\")\n-\t       || ! strcmp (tname, \"strdup\"))\n+      else if (TYPE_MODE (TREE_TYPE (TREE_TYPE (fndecl))) == Pmode\n+\t       && (! strcmp (tname, \"malloc\")\n+\t\t   || ! strcmp (tname, \"calloc\")\n+\t\t   || ! strcmp (tname, \"strdup\")))\n \t*is_malloc = 1;\n     }\n }"}]}