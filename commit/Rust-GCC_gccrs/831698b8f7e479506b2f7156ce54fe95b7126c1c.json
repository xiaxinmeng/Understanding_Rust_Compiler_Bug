{"sha": "831698b8f7e479506b2f7156ce54fe95b7126c1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMxNjk4YjhmN2U0Nzk1MDZiMmY3MTU2Y2U1NGZlOTViNzEyNmMxYw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2016-04-19T17:01:11Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2016-04-19T17:01:11Z"}, "message": "Allocate memory on cache line if requested\n\nSince GTM::gtm_thread has\n\ngtm_thread *next_thread __attribute__((__aligned__(HW_CACHELINE_SIZE)));\n\nGTM::gtm_thread::operator new () calls xmalloc with separate_cl == true.\nxmalloc must return memory on cache line in this case.\n\n\tPR libitm/70456\n\t* util.cc (xmalloc): Use posix_memalign to allocate memory on\n\ton cache line if requested.\n\nFrom-SVN: r235211", "tree": {"sha": "3273b0d938e451bbc5bab2642961a56fc6ba064b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3273b0d938e451bbc5bab2642961a56fc6ba064b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/831698b8f7e479506b2f7156ce54fe95b7126c1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/831698b8f7e479506b2f7156ce54fe95b7126c1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/831698b8f7e479506b2f7156ce54fe95b7126c1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/831698b8f7e479506b2f7156ce54fe95b7126c1c/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d855ad89cbf9f70c1f2cd1e0eea7be4e08f769d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d855ad89cbf9f70c1f2cd1e0eea7be4e08f769d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d855ad89cbf9f70c1f2cd1e0eea7be4e08f769d8"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "68b5069806b589d851bf416e2860cdf86bbb79a4", "filename": "libitm/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/831698b8f7e479506b2f7156ce54fe95b7126c1c/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/831698b8f7e479506b2f7156ce54fe95b7126c1c/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=831698b8f7e479506b2f7156ce54fe95b7126c1c", "patch": "@@ -1,3 +1,9 @@\n+2016-04-19  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR libitm/70456\n+\t* util.cc (xmalloc): Use posix_memalign to allocate memory on\n+\ton cache line if requested.\n+\n 2016-03-03  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \t* config/s390/target.h (TARGET_BEGIN_TRANSACTION_ATTRIBUTE): Define"}, {"sha": "f89b2e5cccd216c94fabe4c83800fc9aee33becf", "filename": "libitm/util.cc", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/831698b8f7e479506b2f7156ce54fe95b7126c1c/libitm%2Futil.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/831698b8f7e479506b2f7156ce54fe95b7126c1c/libitm%2Futil.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Futil.cc?ref=831698b8f7e479506b2f7156ce54fe95b7126c1c", "patch": "@@ -61,12 +61,22 @@ GTM_fatal (const char *fmt, ...)\n void *\n xmalloc (size_t size, bool separate_cl)\n {\n-  // TODO Use posix_memalign if separate_cl is true, or some other allocation\n-  // method that will avoid sharing cache lines with data used by other\n-  // threads.\n-  void *r = malloc (size);\n-  if (r == 0)\n-    GTM_fatal (\"Out of memory allocating %lu bytes\", (unsigned long) size);\n+  void *r;\n+#ifdef HAVE_POSIX_MEMALIGN\n+  if (separate_cl)\n+    {\n+      if (posix_memalign (&r, HW_CACHELINE_SIZE, size))\n+\tGTM_fatal (\"Out of memory allocating %lu bytes aligned on cache line\",\n+\t\t   (unsigned long) size);\n+    }\n+  else\n+#endif\n+    {\n+      r = malloc (size);\n+      if (r == 0)\n+\tGTM_fatal (\"Out of memory allocating %lu bytes\",\n+\t\t   (unsigned long) size);\n+    }\n   return r;\n }\n "}]}