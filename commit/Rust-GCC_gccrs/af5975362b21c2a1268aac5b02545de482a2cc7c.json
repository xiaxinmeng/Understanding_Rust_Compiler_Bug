{"sha": "af5975362b21c2a1268aac5b02545de482a2cc7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY1OTc1MzYyYjIxYzJhMTI2OGFhYzViMDI1NDVkZTQ4MmEyY2M3Yw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-04-18T20:08:44Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-04-18T20:08:44Z"}, "message": "Make Wodr warnings stable.\n\n2018-04-18  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/83983\n\tPR ipa/85391\n\t* lto.c (cmp_type_location): New function.\n\t(lto_read_decls): First collect all types, then\n\tsort them according by location before register_odr_type\n\tis called.\n2018-04-18  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/83983\n\tPR ipa/85391\n\t* g++.dg/lto/pr83121_1.C (struct Environment): Adjust expected\n\toutput.\n\nFrom-SVN: r259479", "tree": {"sha": "0cf3eaf62eae18fa7fecb4e5c9bc4e81c28ea5a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cf3eaf62eae18fa7fecb4e5c9bc4e81c28ea5a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af5975362b21c2a1268aac5b02545de482a2cc7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af5975362b21c2a1268aac5b02545de482a2cc7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af5975362b21c2a1268aac5b02545de482a2cc7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af5975362b21c2a1268aac5b02545de482a2cc7c/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3c674e3e41e8b983161b3af788f1ab09e163808d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c674e3e41e8b983161b3af788f1ab09e163808d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c674e3e41e8b983161b3af788f1ab09e163808d"}], "stats": {"total": 64, "additions": 62, "deletions": 2}, "files": [{"sha": "3df8fe8d7755947f577d5b98a21d03464b59c161", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af5975362b21c2a1268aac5b02545de482a2cc7c/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af5975362b21c2a1268aac5b02545de482a2cc7c/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=af5975362b21c2a1268aac5b02545de482a2cc7c", "patch": "@@ -1,3 +1,12 @@\n+2018-04-18  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/83983\n+\tPR ipa/85391\n+\t* lto.c (cmp_type_location): New function.\n+\t(lto_read_decls): First collect all types, then\n+\tsort them according by location before register_odr_type\n+\tis called.\n+\n 2018-04-18  Jan Hubicka  <jh@suse.cz>\n \t    Martin Liska  <mliska@suse.cz>\n "}, {"sha": "1a6b18d3e348b541166d5f10ba1e223d91754fe3", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 45, "deletions": 1, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af5975362b21c2a1268aac5b02545de482a2cc7c/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af5975362b21c2a1268aac5b02545de482a2cc7c/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=af5975362b21c2a1268aac5b02545de482a2cc7c", "patch": "@@ -1695,6 +1695,40 @@ unify_scc (struct data_in *data_in, unsigned from,\n }\n \n \n+/* Compare types based on source file location.  */\n+\n+static int\n+cmp_type_location (const void *p1_, const void *p2_)\n+{\n+  tree *p1 = (tree*)(const_cast<void *>(p1_));\n+  tree *p2 = (tree*)(const_cast<void *>(p2_));\n+  if (*p1 == *p2)\n+    return 0;\n+\n+  tree tname1 = TYPE_NAME (*p1);\n+  tree tname2 = TYPE_NAME (*p2);\n+\n+  const char *f1 = DECL_SOURCE_FILE (tname1);\n+  const char *f2 = DECL_SOURCE_FILE (tname2);\n+\n+  int r = strcmp (f1, f2);\n+  if (r == 0)\n+    {\n+      int l1 = DECL_SOURCE_LINE (tname1);\n+      int l2 = DECL_SOURCE_LINE (tname2);\n+      if (l1 == l2)\n+       {\n+\t int l1 = DECL_SOURCE_COLUMN (tname1);\n+\t int l2 = DECL_SOURCE_COLUMN (tname2);\n+\t return l1 - l2;\n+       }\n+      else\n+       return l1 - l2;\n+    }\n+  else\n+    return r;\n+}\n+\n /* Read all the symbols from buffer DATA, using descriptors in DECL_DATA.\n    RESOLUTIONS is the set of symbols picked by the linker (read from the\n    resolution file when the linker plugin is being used).  */\n@@ -1711,6 +1745,7 @@ lto_read_decls (struct lto_file_decl_data *decl_data, const void *data,\n   unsigned int i;\n   const uint32_t *data_ptr, *data_end;\n   uint32_t num_decl_states;\n+  auto_vec<tree> odr_types;\n \n   lto_input_block ib_main ((const char *) data + main_offset,\n \t\t\t   header->main_size, decl_data->mode_table);\n@@ -1780,7 +1815,7 @@ lto_read_decls (struct lto_file_decl_data *decl_data, const void *data,\n \t\t  if (!TYPE_CANONICAL (t))\n \t\t    gimple_register_canonical_type (t);\n \t\t  if (odr_type_p (t))\n-\t\t    register_odr_type (t);\n+\t\t    odr_types.safe_push (t);\n \t\t}\n \t      /* Link shared INTEGER_CSTs into TYPE_CACHED_VALUEs of its\n \t\t type which is also member of this SCC.  */\n@@ -1842,6 +1877,15 @@ lto_read_decls (struct lto_file_decl_data *decl_data, const void *data,\n       *slot = state;\n     }\n \n+  /* Sort types for the file before registering in ODR machinery.  */\n+  if (lto_location_cache::current_cache)\n+    lto_location_cache::current_cache->apply_location_cache ();\n+  odr_types.qsort (cmp_type_location);\n+\n+  /* Register ODR types.  */\n+  for (unsigned i = 0; i < odr_types.length (); i++)\n+    register_odr_type (odr_types[i]);\n+\n   if (data_ptr != data_end)\n     internal_error (\"bytecode stream: garbage at the end of symbols section\");\n "}, {"sha": "a5965b1123db04ed64b3438f219dc4942f43485a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af5975362b21c2a1268aac5b02545de482a2cc7c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af5975362b21c2a1268aac5b02545de482a2cc7c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=af5975362b21c2a1268aac5b02545de482a2cc7c", "patch": "@@ -1,3 +1,10 @@\n+2018-04-18  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/83983\n+\tPR ipa/85391\n+\t* g++.dg/lto/pr83121_1.C (struct Environment): Adjust expected\n+\toutput.\n+\n 2018-04-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/85388"}, {"sha": "01d134e1da5c191ddad489bd37e9dffb45b099e7", "filename": "gcc/testsuite/g++.dg/lto/pr83121_1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af5975362b21c2a1268aac5b02545de482a2cc7c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr83121_1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af5975362b21c2a1268aac5b02545de482a2cc7c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr83121_1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr83121_1.C?ref=af5975362b21c2a1268aac5b02545de482a2cc7c", "patch": "@@ -2,7 +2,7 @@ struct Environment {\n   struct AsyncHooks {\n     int providers_[1];\n   };\n-  AsyncHooks async_hooks_; // { dg-lto-message \"a field of same name but different type is defined in another translation unit\" }\n+  AsyncHooks async_hooks_;\n };\n void fn1() { Environment a; }\n int main ()"}]}