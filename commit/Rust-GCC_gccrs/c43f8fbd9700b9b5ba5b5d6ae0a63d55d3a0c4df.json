{"sha": "c43f8fbd9700b9b5ba5b5d6ae0a63d55d3a0c4df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQzZjhmYmQ5NzAwYjliNWJhNWI1ZDZhZTBhNjNkNTVkM2EwYzRkZg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-07T19:57:16Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-07T19:57:16Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1180", "tree": {"sha": "dcaa4aafaa1294f0a7e1d37c0918b960a53f44da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcaa4aafaa1294f0a7e1d37c0918b960a53f44da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c43f8fbd9700b9b5ba5b5d6ae0a63d55d3a0c4df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c43f8fbd9700b9b5ba5b5d6ae0a63d55d3a0c4df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c43f8fbd9700b9b5ba5b5d6ae0a63d55d3a0c4df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c43f8fbd9700b9b5ba5b5d6ae0a63d55d3a0c4df/comments", "author": null, "committer": null, "parents": [{"sha": "6bcd21bb6648952446aa36265b16ed340a109243", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bcd21bb6648952446aa36265b16ed340a109243", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bcd21bb6648952446aa36265b16ed340a109243"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "e2e2c8103e0a0837aad755c918b9a96412a43774", "filename": "gcc/config/romp/romp.md", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43f8fbd9700b9b5ba5b5d6ae0a63d55d3a0c4df/gcc%2Fconfig%2Fromp%2Fromp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43f8fbd9700b9b5ba5b5d6ae0a63d55d3a0c4df/gcc%2Fconfig%2Fromp%2Fromp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fromp.md?ref=c43f8fbd9700b9b5ba5b5d6ae0a63d55d3a0c4df", "patch": "@@ -557,7 +557,10 @@\n    && ! (GET_CODE (operands[0]) == REG\n          && REGNO (operands[0]) >= FIRST_PSEUDO_REGISTER)\n    && ! (GET_CODE (operands[1]) == REG\n-         && REGNO (operands[1]) >= FIRST_PSEUDO_REGISTER)\"\n+         && REGNO (operands[1]) >= FIRST_PSEUDO_REGISTER)\n+   && ! (GET_CODE (operands[0]) == REG && GET_CODE (operands[1]) == REG\n+\t && ! reload_completed\n+\t && reg_overlap_mentioned_p (operands[0], operands[1]))\"\n  [(parallel [(set (match_dup 2) (match_dup 3))\n \t     (clobber (match_dup 7))])\n   (parallel [(set (match_dup 4) (match_dup 5))\n@@ -872,7 +875,10 @@\n    && GET_CODE (operands[1]) != CONST_DOUBLE\n    && (GET_CODE (operands[0]) != REG || REGNO (operands[0]) < 15)\n    && (GET_CODE (operands[1]) != REG || REGNO (operands[1]) < 15)\n-   && (GET_CODE (operands[0]) == REG || GET_CODE (operands[1]) == REG)\"\n+   && (GET_CODE (operands[0]) == REG || GET_CODE (operands[1]) == REG)\n+   && ! (GET_CODE (operands[0]) == REG && GET_CODE (operands[1]) == REG\n+\t && ! reload_completed\n+\t && reg_overlap_mentioned_p (operands[0], operands[1]))\"\n   [(set (match_dup 2) (match_dup 3))\n    (set (match_dup 4) (match_dup 5))]\n   \""}, {"sha": "a10f4830bfc7d1a4309627f99fbdd827f15113bd", "filename": "gcc/integrate.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c43f8fbd9700b9b5ba5b5d6ae0a63d55d3a0c4df/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c43f8fbd9700b9b5ba5b5d6ae0a63d55d3a0c4df/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=c43f8fbd9700b9b5ba5b5d6ae0a63d55d3a0c4df", "patch": "@@ -1470,8 +1470,8 @@ expand_inline_function (fndecl, parms, target, ignore, type, structure_value_add\n \t\t  /* If we must not delete the source,\n \t\t     load it into a new temporary.  */\n \t\t  copy = emit_insn (copy_rtx_and_substitute (pattern, map));\n-\t\t  SET_DEST (pattern)\n-\t\t    = gen_reg_rtx (GET_MODE (SET_DEST (pattern)));\n+\t\t  SET_DEST (PATTERN (copy)) \n+\t\t    = gen_reg_rtx (GET_MODE (SET_DEST (PATTERN (copy))));\n \t\t}\n \t      else\n \t\tbreak;"}]}