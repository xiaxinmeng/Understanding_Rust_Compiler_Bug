{"sha": "43bb4dd14d015211a19ccd8c1802cc7e1361d8b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNiYjRkZDE0ZDAxNTIxMWExOWNjZDhjMTgwMmNjN2UxMzYxZDhiNw==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2013-05-16T10:26:51Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2013-05-16T10:26:51Z"}, "message": "re PR middle-end/57286 (infinite recursion in fold-const.c:10037)\n\n2013-05-16  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR middle-end/57286\ngcc/\n\t* fold-const.c (fold_ternary_loc) <VEC_COND_EXPR>: Disable some\n\ttransformations to avoid an infinite loop.\n\ngcc/testsuite/\n\t* gcc.dg/pr57286.c: New testcase.\n\t* gcc.dg/vector-shift-2.c: Don't assume int has size 4.\n\t* g++.dg/ext/vector22.C: Comment out transformations not\n\tperformed anymore.\n\nFrom-SVN: r198964", "tree": {"sha": "9493047601849c95b5770ec075bca0b02745c32d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9493047601849c95b5770ec075bca0b02745c32d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43bb4dd14d015211a19ccd8c1802cc7e1361d8b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43bb4dd14d015211a19ccd8c1802cc7e1361d8b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43bb4dd14d015211a19ccd8c1802cc7e1361d8b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43bb4dd14d015211a19ccd8c1802cc7e1361d8b7/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3571dde6ea6bd573390e1b3e91a646c572b6587e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3571dde6ea6bd573390e1b3e91a646c572b6587e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3571dde6ea6bd573390e1b3e91a646c572b6587e"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "3a0929cd122e3db475c14c146cd7f29f8871e7fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43bb4dd14d015211a19ccd8c1802cc7e1361d8b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43bb4dd14d015211a19ccd8c1802cc7e1361d8b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43bb4dd14d015211a19ccd8c1802cc7e1361d8b7", "patch": "@@ -1,3 +1,9 @@\n+2013-05-16  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR middle-end/57286\n+\t* fold-const.c (fold_ternary_loc) <VEC_COND_EXPR>: Disable some\n+\ttransformations to avoid an infinite loop.\n+\n 2013-05-16  Marek Polacek  <polacek@redhat.com>\n \n \t* tree-scalar-evolution.c (scev_const_prop): Add more dumps."}, {"sha": "97b5216eb7115b032d8a2c6f3983b55aca96b346", "filename": "gcc/fold-const.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43bb4dd14d015211a19ccd8c1802cc7e1361d8b7/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43bb4dd14d015211a19ccd8c1802cc7e1361d8b7/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=43bb4dd14d015211a19ccd8c1802cc7e1361d8b7", "patch": "@@ -14211,6 +14211,12 @@ fold_ternary_loc (location_t loc, enum tree_code code, tree type,\n \t\t\t\t    fold_convert_loc (loc, type,\n \t\t\t\t\t\t      TREE_OPERAND (arg0, 0)));\n \n+      /* Disable the transformations below for vectors, since\n+\t fold_binary_op_with_conditional_arg may undo them immediately,\n+\t yielding an infinite loop.  */\n+      if (code == VEC_COND_EXPR)\n+\treturn NULL_TREE;\n+\n       /* Convert A ? B : 0 into A && B if A and B are truth values.  */\n       if (integer_zerop (op2)\n \t  && truth_value_p (TREE_CODE (arg0))"}, {"sha": "6ec937c4ad5a04934bd2ea428246ef31dfc79f27", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43bb4dd14d015211a19ccd8c1802cc7e1361d8b7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43bb4dd14d015211a19ccd8c1802cc7e1361d8b7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=43bb4dd14d015211a19ccd8c1802cc7e1361d8b7", "patch": "@@ -1,3 +1,11 @@\n+2013-05-16  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR middle-end/57286\n+\t* gcc.dg/pr57286.c: New testcase.\n+\t* gcc.dg/vector-shift-2.c: Don't assume int has size 4.\n+\t* g++.dg/ext/vector22.C: Comment out transformations not\n+\tperformed anymore.\n+\n 2013-05-15  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \tPR target/57260"}, {"sha": "47f64e7e7a7f30fe0e450ef27ea77ce9ac289e9f", "filename": "gcc/testsuite/g++.dg/ext/vector22.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43bb4dd14d015211a19ccd8c1802cc7e1361d8b7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43bb4dd14d015211a19ccd8c1802cc7e1361d8b7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector22.C?ref=43bb4dd14d015211a19ccd8c1802cc7e1361d8b7", "patch": "@@ -3,13 +3,15 @@\n \n typedef unsigned vec __attribute__((vector_size(4*sizeof(int))));\n \n+/* Disabled after PR57286\n void f(vec*a,vec*b){\n   *a=(*a)?-1:(*b<10);\n   *b=(*b)?(*a<10):0;\n }\n+*/\n void g(vec*a,vec*b){\n   *a=(*a)?(*a<*a):-1;\n-  *b=(*b)?-1:(*b<*b);\n+// *b=(*b)?-1:(*b<*b);\n }\n void h(vec*a){\n   *a=(~*a==5);"}, {"sha": "c6f453054873fc87c2f0c942ca4cd3f105a73732", "filename": "gcc/testsuite/gcc.dg/pr57286.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43bb4dd14d015211a19ccd8c1802cc7e1361d8b7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57286.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43bb4dd14d015211a19ccd8c1802cc7e1361d8b7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57286.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57286.c?ref=43bb4dd14d015211a19ccd8c1802cc7e1361d8b7", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O\" } */\n+\n+typedef int vec __attribute__ ((vector_size (4*sizeof(int))));\n+void f (vec *x){\n+    *x = (*x < 0) | 1;\n+}"}, {"sha": "380f2dfb3074aee3e3d2a56b8619705a062b7897", "filename": "gcc/testsuite/gcc.dg/vector-shift-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43bb4dd14d015211a19ccd8c1802cc7e1361d8b7/gcc%2Ftestsuite%2Fgcc.dg%2Fvector-shift-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43bb4dd14d015211a19ccd8c1802cc7e1361d8b7/gcc%2Ftestsuite%2Fgcc.dg%2Fvector-shift-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvector-shift-2.c?ref=43bb4dd14d015211a19ccd8c1802cc7e1361d8b7", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O -fdump-tree-ccp1\" } */\n \n-typedef unsigned vec __attribute__ ((vector_size (16)));\n+typedef unsigned vec __attribute__ ((vector_size (4*sizeof(int))));\n void\n f (vec *a)\n {"}]}