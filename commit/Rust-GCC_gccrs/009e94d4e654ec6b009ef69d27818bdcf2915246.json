{"sha": "009e94d4e654ec6b009ef69d27818bdcf2915246", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA5ZTk0ZDRlNjU0ZWM2YjAwOWVmNjlkMjc4MThiZGNmMjkxNTI0Ng==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2005-04-19T07:10:05Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2005-04-19T07:10:05Z"}, "message": "re PR fortran/16861 ([4.0 only] segfault with doubly used module)\n\n\tPR fortran/16861\n\t* resolve.c (resolve_variable): If e->symtree is not set, this\n\tought to be a FAILURE, and not a segfault.\n\t* gfortran.dg/pr16861.f90: New test.\n\nFrom-SVN: r98391", "tree": {"sha": "8df8134ac278ca36ff0980df848ac7970a0e17d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8df8134ac278ca36ff0980df848ac7970a0e17d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/009e94d4e654ec6b009ef69d27818bdcf2915246", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/009e94d4e654ec6b009ef69d27818bdcf2915246", "html_url": "https://github.com/Rust-GCC/gccrs/commit/009e94d4e654ec6b009ef69d27818bdcf2915246", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/009e94d4e654ec6b009ef69d27818bdcf2915246/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1334b570e3beacd306e15e50ff7e7fe58cfe419b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1334b570e3beacd306e15e50ff7e7fe58cfe419b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1334b570e3beacd306e15e50ff7e7fe58cfe419b"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "998bbf3aeacaed4f6e505c298f0fc2277893871d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009e94d4e654ec6b009ef69d27818bdcf2915246/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009e94d4e654ec6b009ef69d27818bdcf2915246/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=009e94d4e654ec6b009ef69d27818bdcf2915246", "patch": "@@ -1,3 +1,9 @@\n+2005-04-19  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR fortran/16861\n+\t* resolve.c (resolve_variable): If e->symtree is not set, this\n+\tought to be a FAILURE, and not a segfault.\n+\n 2005-04-17 Paul Thomas <pault@gcc.gnu.org>\n \n \tPR fortran/17472"}, {"sha": "d75704bc8e2f2128a0c14b0dbaaac44463a3e05b", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009e94d4e654ec6b009ef69d27818bdcf2915246/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009e94d4e654ec6b009ef69d27818bdcf2915246/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=009e94d4e654ec6b009ef69d27818bdcf2915246", "patch": "@@ -2111,6 +2111,9 @@ resolve_variable (gfc_expr * e)\n   if (e->ref && resolve_ref (e) == FAILURE)\n     return FAILURE;\n \n+  if (e->symtree == NULL)\n+    return FAILURE;\n+\n   sym = e->symtree->n.sym;\n   if (sym->attr.flavor == FL_PROCEDURE && !sym->attr.function)\n     {"}, {"sha": "bf8cccd520f3229a8955e99b6fba6f20ecd27618", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009e94d4e654ec6b009ef69d27818bdcf2915246/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009e94d4e654ec6b009ef69d27818bdcf2915246/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=009e94d4e654ec6b009ef69d27818bdcf2915246", "patch": "@@ -1,3 +1,8 @@\n+2005-04-18  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR fortran/16861\n+\t* gfortran.dg/pr16861.f90: New test.\n+\n 2005-04-18  James A. Morrison  <phython@gcc.gnu.org>\n \n \t* gcc.dg/pr21085.c: New test."}, {"sha": "4a73edaf4f0345aa5ec2eb2c1251b73417ffa664", "filename": "gcc/testsuite/gfortran.dg/pr16861.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009e94d4e654ec6b009ef69d27818bdcf2915246/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr16861.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009e94d4e654ec6b009ef69d27818bdcf2915246/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr16861.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr16861.f90?ref=009e94d4e654ec6b009ef69d27818bdcf2915246", "patch": "@@ -0,0 +1,32 @@\n+! PR fortran/16861\n+! { dg-do run }\n+module foo\n+  integer :: i\n+end module foo\n+\n+module bar\n+contains\n+  subroutine baz(j)\n+    use foo\n+    integer, dimension(i) :: j\n+    integer :: n\n+\n+    do n = 1, i\n+      if (j(n) /= n**2) call abort\n+    end do\n+  end subroutine baz\n+end module bar\n+\n+subroutine quus()\n+  use foo\n+  use bar\n+\n+  i = 2\n+  call baz ((/1,4/))\n+  i = 7\n+  call baz ((/1,4,9,16,25,36,49/))\n+end subroutine quus\n+\n+program test\n+  call quus\n+end program test"}]}