{"sha": "a58f64f5c2bbd1ebd8a22251f91c7835b2010f4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU4ZjY0ZjVjMmJiZDFlYmQ4YTIyMjUxZjkxYzc4MzViMjAxMGY0Yg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-05-19T16:18:43Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-05-19T16:18:43Z"}, "message": "cpplex.c (_cpp_scan_until): Clear AUX field of tokens.\n\n\t* cpplex.c (_cpp_scan_until): Clear AUX field of tokens.\n\t* cpplib.c (do_unassert): Put the list to compare against on\n\tthe stack.\n\nFrom-SVN: r34025", "tree": {"sha": "0aad9c8e963144815de00592e7873a3ad3bb0aab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0aad9c8e963144815de00592e7873a3ad3bb0aab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a58f64f5c2bbd1ebd8a22251f91c7835b2010f4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a58f64f5c2bbd1ebd8a22251f91c7835b2010f4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a58f64f5c2bbd1ebd8a22251f91c7835b2010f4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a58f64f5c2bbd1ebd8a22251f91c7835b2010f4b/comments", "author": null, "committer": null, "parents": [{"sha": "ec5bb3cfb0fa99afb261b589bb238e830d341e94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec5bb3cfb0fa99afb261b589bb238e830d341e94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec5bb3cfb0fa99afb261b589bb238e830d341e94"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "87308c1aba388c8dda609b819c1ab5a0ec14c715", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a58f64f5c2bbd1ebd8a22251f91c7835b2010f4b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a58f64f5c2bbd1ebd8a22251f91c7835b2010f4b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a58f64f5c2bbd1ebd8a22251f91c7835b2010f4b", "patch": "@@ -1,3 +1,9 @@\n+2000-05-19  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* cpplex.c (_cpp_scan_until): Clear AUX field of tokens.\n+\t* cpplib.c (do_unassert): Put the list to compare against on\n+\tthe stack.\n+\n 2000-05-19  Bruce Korb  <bkorb@gnu.org>\n \n \t* fixinc/README:  cleaned up old documentation"}, {"sha": "b75db74d473831219d15afab2c3f6fec407e6b44", "filename": "gcc/cpplex.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a58f64f5c2bbd1ebd8a22251f91c7835b2010f4b/gcc%2Fcpplex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a58f64f5c2bbd1ebd8a22251f91c7835b2010f4b/gcc%2Fcpplex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplex.c?ref=a58f64f5c2bbd1ebd8a22251f91c7835b2010f4b", "patch": "@@ -790,6 +790,7 @@ _cpp_scan_until (pfile, list, stop)\n       list->tokens_used++;\n       TOK_TYPE  (list, i) = type;\n       TOK_COL   (list, i) = col;\n+      TOK_AUX   (list, i) = 0;\n       TOK_FLAGS (list, i) = space_before ? PREV_WHITESPACE : 0;\n       \n       TOK_LEN (list, i) = len;"}, {"sha": "16793060dbeed732e1670aa104c253e676c7b9ad", "filename": "gcc/cpplib.c", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a58f64f5c2bbd1ebd8a22251f91c7835b2010f4b/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a58f64f5c2bbd1ebd8a22251f91c7835b2010f4b/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=a58f64f5c2bbd1ebd8a22251f91c7835b2010f4b", "patch": "@@ -1607,8 +1607,9 @@ do_unassert (pfile)\n   U_CHAR *sym;\n   size_t len;\n   HASHNODE *hp;\n-  struct predicate *pred = 0;\n+  cpp_toklist ans;\n   enum cpp_ttype type;\n+  int specific = 0;\n \n   old_written = CPP_WRITTEN (pfile);\n   pfile->no_macro_expand++;\n@@ -1624,10 +1625,10 @@ do_unassert (pfile)\n   type = _cpp_get_directive_token (pfile);\n   if (type == CPP_OPEN_PAREN)\n     {\n-      pred = (struct predicate *) xmalloc (sizeof (struct predicate));\n-      _cpp_init_toklist (&pred->answer);\n+      specific = 1;\n+      _cpp_init_toklist (&ans);\n \n-      if (_cpp_scan_until (pfile, &pred->answer, CPP_CLOSE_PAREN)\n+      if (_cpp_scan_until (pfile, &ans, CPP_CLOSE_PAREN)\n \t  != CPP_CLOSE_PAREN)\n \tERROR (\"missing close paren in #unassert\");\n \n@@ -1645,13 +1646,13 @@ do_unassert (pfile)\n        goto error to clean up.  */\n     goto error;\n \n-  if (pred)\n+  if (specific)\n     {\n       /* Find this specific answer and remove it.  */\n       struct predicate *o, *p;\n \n       for (p = NULL, o = hp->value.pred; o; p = o, o = o->next)\n-\tif (_cpp_equiv_toklists (&pred->answer, &o->answer))\n+\tif (_cpp_equiv_toklists (&ans, &o->answer))\n \t  {\n \t    if (p)\n \t      p->next = o->next;\n@@ -1682,11 +1683,8 @@ do_unassert (pfile)\n   _cpp_skip_rest_of_line (pfile);\n   pfile->no_macro_expand--;\n   CPP_SET_WRITTEN (pfile, old_written);\n-  if (pred)\n-    {\n-      _cpp_free_toklist (&pred->answer);\n-      free (pred);\n-    }\n+  if (specific)\n+    _cpp_free_toklist (&ans);\n   return 0;\n }\n "}]}