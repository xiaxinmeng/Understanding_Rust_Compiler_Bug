{"sha": "3d33d06bac26650aa94d6c9de46b7ee4965af8e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2QzM2QwNmJhYzI2NjUwYWE5NGQ2YzlkZTQ2YjdlZTQ5NjVhZjhlNQ==", "commit": {"author": {"name": "Sofiane Naci", "email": "sofiane.naci@arm.com", "date": "2013-06-17T16:14:06Z"}, "committer": {"name": "Sofiane Naci", "email": "sofiane@gcc.gnu.org", "date": "2013-06-17T16:14:06Z"}, "message": "aarch64-simd.md (aarch64_dup_lane<mode>): Add r<-w alternative and update.\n\n\tgcc/\n\t* config/aarch64/aarch64-simd.md (aarch64_dup_lane<mode>): Add r<-w\n\talternative and update.\n\t(aarch64_dup_lanedi): Delete.\n\t* config/aarch64/arm_neon.h (vdup<bhsd>_lane_*): Update.\n\t* config/aarch64/aarch64-simd-builtins.def: Update.\n\n\ttestsuite/\n\t* gcc.target/aarch64/scalar_intrinsics.c: Update.\n\nFrom-SVN: r200152", "tree": {"sha": "80e58bad19741579a9b238471aef8beac087465b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80e58bad19741579a9b238471aef8beac087465b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d33d06bac26650aa94d6c9de46b7ee4965af8e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d33d06bac26650aa94d6c9de46b7ee4965af8e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d33d06bac26650aa94d6c9de46b7ee4965af8e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d33d06bac26650aa94d6c9de46b7ee4965af8e5/comments", "author": null, "committer": null, "parents": [{"sha": "ee03e71d472a3f73cbc1a132a284309f36565972", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee03e71d472a3f73cbc1a132a284309f36565972", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee03e71d472a3f73cbc1a132a284309f36565972"}], "stats": {"total": 67, "additions": 34, "deletions": 33}, "files": [{"sha": "d9e61873611f11fc22979dca7b40868cd42872f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d33d06bac26650aa94d6c9de46b7ee4965af8e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d33d06bac26650aa94d6c9de46b7ee4965af8e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d33d06bac26650aa94d6c9de46b7ee4965af8e5", "patch": "@@ -1,3 +1,11 @@\n+2013-06-17  Sofiane Naci  <sofiane.naci@arm.com>\n+\n+\t* config/aarch64/aarch64-simd.md (aarch64_dup_lane<mode>): Add r<-w\n+\talternative and update.\n+\t(aarch64_dup_lanedi): Delete.\n+\t* config/aarch64/arm_neon.h (vdup<bhsd>_lane_*): Update.\n+\t* config/aarch64/aarch64-simd-builtins.def: Update.\n+\n 2013-06-17  Richard Biener  <rguenther@suse.de>\n \n \t* lto-streamer.h (enum LTO_tags): Add LTO_tree_scc."}, {"sha": "4d9b966d0ac09db282001369028ba936df1045c6", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d33d06bac26650aa94d6c9de46b7ee4965af8e5/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d33d06bac26650aa94d6c9de46b7ee4965af8e5/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=3d33d06bac26650aa94d6c9de46b7ee4965af8e5", "patch": "@@ -64,7 +64,7 @@\n   BUILTIN_VQ (REINTERP, reinterpretv2df, 0)\n \n   BUILTIN_VDQ_I (BINOP, dup_lane, 0)\n-  BUILTIN_SDQ_I (BINOP, dup_lane, 0)\n+  BUILTIN_VDQ_I (BINOP, dup_lane_scalar, 0)\n   /* Implemented by aarch64_<sur>q<r>shl<mode>.  */\n   BUILTIN_VSDQ_I (BINOP, sqshl, 0)\n   BUILTIN_VSDQ_I (BINOP, uqshl, 0)"}, {"sha": "08826b5dd9f4c5c97eb9c5f2c1e61d07c679a8b2", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 8, "deletions": 19, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d33d06bac26650aa94d6c9de46b7ee4965af8e5/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d33d06bac26650aa94d6c9de46b7ee4965af8e5/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=3d33d06bac26650aa94d6c9de46b7ee4965af8e5", "patch": "@@ -357,29 +357,18 @@\n    (set_attr \"simd_mode\" \"<MODE>\")]\n )\n \n-(define_insn \"aarch64_dup_lane<mode>\"\n-  [(set (match_operand:ALLX 0 \"register_operand\" \"=w\")\n+(define_insn \"aarch64_dup_lane_scalar<mode>\"\n+  [(set (match_operand:<VEL> 0 \"register_operand\" \"=w, r\")\n \t(vec_select:<VEL>\n-\t  (match_operand:<VCON> 1 \"register_operand\" \"w\")\n-\t  (parallel [(match_operand:SI 2 \"immediate_operand\" \"i\")])\n+\t  (match_operand:VDQ 1 \"register_operand\" \"w, w\")\n+\t  (parallel [(match_operand:SI 2 \"immediate_operand\" \"i, i\")])\n         ))]\n   \"TARGET_SIMD\"\n-  \"dup\\\\t%<v>0<Vmtype>, %1.<Vetype>[%2]\"\n-  [(set_attr \"simd_type\" \"simd_dup\")\n-   (set_attr \"simd_mode\" \"<MODE>\")]\n-)\n-\n-(define_insn \"aarch64_dup_lanedi\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=w,r\")\n-\t(vec_select:DI\n-\t  (match_operand:V2DI 1 \"register_operand\" \"w,w\")\n-\t  (parallel [(match_operand:SI 2 \"immediate_operand\" \"i,i\")])))]\n-  \"TARGET_SIMD\"\n   \"@\n-   dup\\\\t%<v>0<Vmtype>, %1.<Vetype>[%2]\n-   umov\\t%0, %1.d[%2]\"\n-  [(set_attr \"simd_type\" \"simd_dup\")\n-   (set_attr \"simd_mode\" \"DI\")]\n+   dup\\\\t%<Vetype>0, %1.<Vetype>[%2]\n+   umov\\\\t%<vw>0, %1.<Vetype>[%2]\"\n+  [(set_attr \"simd_type\" \"simd_dup, simd_movgp\")\n+   (set_attr \"simd_mode\" \"<MODE>\")]\n )\n \n (define_insn \"aarch64_simd_dup<mode>\""}, {"sha": "760ba3dc1e1ce9f62b5edb2b0c3317c4caddd731", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d33d06bac26650aa94d6c9de46b7ee4965af8e5/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d33d06bac26650aa94d6c9de46b7ee4965af8e5/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=3d33d06bac26650aa94d6c9de46b7ee4965af8e5", "patch": "@@ -20234,49 +20234,49 @@ vcvtpq_u64_f64 (float64x2_t __a)\n __extension__ static __inline int8x1_t __attribute__ ((__always_inline__))\n vdupb_lane_s8 (int8x16_t a, int const b)\n {\n-  return __builtin_aarch64_dup_laneqi (a, b);\n+  return __builtin_aarch64_dup_lane_scalarv16qi (a, b);\n }\n \n __extension__ static __inline uint8x1_t __attribute__ ((__always_inline__))\n vdupb_lane_u8 (uint8x16_t a, int const b)\n {\n-  return (uint8x1_t) __builtin_aarch64_dup_laneqi ((int8x16_t) a, b);\n+  return (uint8x1_t) __builtin_aarch64_dup_lane_scalarv16qi ((int8x16_t) a, b);\n }\n \n __extension__ static __inline int16x1_t __attribute__ ((__always_inline__))\n vduph_lane_s16 (int16x8_t a, int const b)\n {\n-  return __builtin_aarch64_dup_lanehi (a, b);\n+  return __builtin_aarch64_dup_lane_scalarv8hi (a, b);\n }\n \n __extension__ static __inline uint16x1_t __attribute__ ((__always_inline__))\n vduph_lane_u16 (uint16x8_t a, int const b)\n {\n-  return (uint16x1_t) __builtin_aarch64_dup_lanehi ((int16x8_t) a, b);\n+  return (uint16x1_t) __builtin_aarch64_dup_lane_scalarv8hi ((int16x8_t) a, b);\n }\n \n __extension__ static __inline int32x1_t __attribute__ ((__always_inline__))\n vdups_lane_s32 (int32x4_t a, int const b)\n {\n-  return __builtin_aarch64_dup_lanesi (a, b);\n+  return __builtin_aarch64_dup_lane_scalarv4si (a, b);\n }\n \n __extension__ static __inline uint32x1_t __attribute__ ((__always_inline__))\n vdups_lane_u32 (uint32x4_t a, int const b)\n {\n-  return (uint32x1_t) __builtin_aarch64_dup_lanesi ((int32x4_t) a, b);\n+  return (uint32x1_t) __builtin_aarch64_dup_lane_scalarv4si ((int32x4_t) a, b);\n }\n \n __extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n vdupd_lane_s64 (int64x2_t a, int const b)\n {\n-  return __builtin_aarch64_dup_lanedi (a, b);\n+  return __builtin_aarch64_dup_lane_scalarv2di (a, b);\n }\n \n __extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n vdupd_lane_u64 (uint64x2_t a, int const b)\n {\n-  return (uint64x1_t) __builtin_aarch64_dup_lanedi ((int64x2_t) a, b);\n+  return (uint64x1_t) __builtin_aarch64_dup_lane_scalarv2di ((int64x2_t) a, b);\n }\n \n /* vldn */"}, {"sha": "cb05b1c3d376977a9c4d8a7b4f7818142ce7b0a8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d33d06bac26650aa94d6c9de46b7ee4965af8e5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d33d06bac26650aa94d6c9de46b7ee4965af8e5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3d33d06bac26650aa94d6c9de46b7ee4965af8e5", "patch": "@@ -1,3 +1,7 @@\n+2013-06-17  Sofiane Naci  <sofiane.naci@arm.com>\n+\n+\t* gcc.target/aarch64/scalar_intrinsics.c: Update.\n+\n 2013-06-17  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/16128"}, {"sha": "46d34499b3f6873eeaad8f4063365c903d464334", "filename": "gcc/testsuite/gcc.target/aarch64/scalar_intrinsics.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d33d06bac26650aa94d6c9de46b7ee4965af8e5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fscalar_intrinsics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d33d06bac26650aa94d6c9de46b7ee4965af8e5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fscalar_intrinsics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fscalar_intrinsics.c?ref=3d33d06bac26650aa94d6c9de46b7ee4965af8e5", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -dp\" } */\n \n #include <arm_neon.h>\n \n@@ -181,7 +181,7 @@ test_vcltzd_s64 (int64x1_t a)\n   return res;\n }\n \n-/* { dg-final { scan-assembler-times \"\\\\tdup\\\\tb\\[0-9\\]+, v\\[0-9\\]+\\.b\" 2 } } */\n+/* { dg-final { scan-assembler-times \"aarch64_dup_lane_scalarv16qi\"  2 } } */\n \n int8x1_t\n test_vdupb_lane_s8 (int8x16_t a)\n@@ -195,7 +195,7 @@ test_vdupb_lane_u8 (uint8x16_t a)\n   return vdupb_lane_u8 (a, 2);\n }\n \n-/* { dg-final { scan-assembler-times \"\\\\tdup\\\\th\\[0-9\\]+, v\\[0-9\\]+\\.h\" 2 } } */\n+/* { dg-final { scan-assembler-times \"aarch64_dup_lane_scalarv8hi\"  2 } } */\n \n int16x1_t\n test_vduph_lane_s16 (int16x8_t a)\n@@ -209,7 +209,7 @@ test_vduph_lane_u16 (uint16x8_t a)\n   return vduph_lane_u16 (a, 2);\n }\n \n-/* { dg-final { scan-assembler-times \"\\\\tdup\\\\ts\\[0-9\\]+, v\\[0-9\\]+\\.s\" 2 } } */\n+/* { dg-final { scan-assembler-times \"aarch64_dup_lane_scalarv4si\"  2 } } */\n \n int32x1_t\n test_vdups_lane_s32 (int32x4_t a)\n@@ -223,7 +223,7 @@ test_vdups_lane_u32 (uint32x4_t a)\n   return vdups_lane_u32 (a, 2);\n }\n \n-/* { dg-final { scan-assembler-times \"\\\\tumov\\\\tx\\[0-9\\]+, v\\[0-9\\]+\\.d\" 2 } } */\n+/* { dg-final { scan-assembler-times \"aarch64_dup_lane_scalarv2di\"  2 } } */\n \n int64x1_t\n test_vdupd_lane_s64 (int64x2_t a)"}]}