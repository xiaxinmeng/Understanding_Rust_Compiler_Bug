{"sha": "fd29c0247aa4af7492782e6c933c713c6732b4b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQyOWMwMjQ3YWE0YWY3NDkyNzgyZTZjOTMzYzcxM2M2NzMyYjRiMA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2014-08-01T08:20:57Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2014-08-01T08:20:57Z"}, "message": "IPA ICF pass 1/N\n\n\t* gimple-iterator.h (gsi_next_nonvirtual_phi): New function.\n\t* ipa-prop.h (count_formal_params): Global function created from static.\n\t* ipa-prop.c (count_formal_params): Likewise.\n\t* ipa-utils.c (ipa_merge_profiles): Be more tolerant if we merge\n\tprofiles for semantically equivalent functions.\n\t* passes.c (do_per_function): If we load body of a function\n\tduring WPA, this condition should behave same.\n\t* varpool.c (ctor_for_folding): More tolerant assert for variable\n\taliases created during WPA.\n\nFrom-SVN: r213417", "tree": {"sha": "34ecf6784681ee0ad5b65f264b03ec52f19e5524", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34ecf6784681ee0ad5b65f264b03ec52f19e5524"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd29c0247aa4af7492782e6c933c713c6732b4b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd29c0247aa4af7492782e6c933c713c6732b4b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd29c0247aa4af7492782e6c933c713c6732b4b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd29c0247aa4af7492782e6c933c713c6732b4b0/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0ef40c649bd668717cb99a0dfc90a7218bdfbc29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ef40c649bd668717cb99a0dfc90a7218bdfbc29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ef40c649bd668717cb99a0dfc90a7218bdfbc29"}], "stats": {"total": 51, "additions": 42, "deletions": 9}, "files": [{"sha": "d4511607a64c1d9956ff6a5d116f3a2e0afefe49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd29c0247aa4af7492782e6c933c713c6732b4b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd29c0247aa4af7492782e6c933c713c6732b4b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fd29c0247aa4af7492782e6c933c713c6732b4b0", "patch": "@@ -1,3 +1,15 @@\n+2014-08-01  Martin Liska  <mliska@suse.cz>\n+\n+\t* gimple-iterator.h (gsi_next_nonvirtual_phi): New function.\n+\t* ipa-prop.h (count_formal_params): Global function created from static.\n+\t* ipa-prop.c (count_formal_params): Likewise.\n+\t* ipa-utils.c (ipa_merge_profiles): Be more tolerant if we merge\n+\tprofiles for semantically equivalent functions.\n+\t* passes.c (do_per_function): If we load body of a function\n+\tduring WPA, this condition should behave same.\n+\t* varpool.c (ctor_for_folding): More tolerant assert for variable\n+\taliases created during WPA.\n+\n 2014-08-01  Martin Liska  <mliska@suse.cz>\n \n \t* doc/invoke.texi (Options That Control Optimization): Documentation"}, {"sha": "47168b9d646698a88cfb21211ae303ec23f6fed9", "filename": "gcc/gimple-iterator.h", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd29c0247aa4af7492782e6c933c713c6732b4b0/gcc%2Fgimple-iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd29c0247aa4af7492782e6c933c713c6732b4b0/gcc%2Fgimple-iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-iterator.h?ref=fd29c0247aa4af7492782e6c933c713c6732b4b0", "patch": "@@ -281,6 +281,30 @@ gsi_last_nondebug_bb (basic_block bb)\n   return i;\n }\n \n+/* Iterates I statement iterator to the next non-virtual statement.  */\n+\n+static inline void\n+gsi_next_nonvirtual_phi (gimple_stmt_iterator *i)\n+{\n+  gimple phi;\n+\n+  if (gsi_end_p (*i))\n+    return;\n+\n+  phi = gsi_stmt (*i);\n+  gcc_assert (phi != NULL);\n+\n+  while (virtual_operand_p (gimple_phi_result (phi)))\n+    {\n+      gsi_next (i);\n+\n+      if (gsi_end_p (*i))\n+\treturn;\n+\n+      phi = gsi_stmt (*i);\n+    }\n+}\n+\n /* Return the basic block associated with this iterator.  */\n \n static inline basic_block"}, {"sha": "4b309b97978fc4c1683398e21d828c18212493a3", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd29c0247aa4af7492782e6c933c713c6732b4b0/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd29c0247aa4af7492782e6c933c713c6732b4b0/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=fd29c0247aa4af7492782e6c933c713c6732b4b0", "patch": "@@ -212,7 +212,7 @@ ipa_populate_param_decls (struct cgraph_node *node,\n \n /* Return how many formal parameters FNDECL has.  */\n \n-static inline int\n+int\n count_formal_params (tree fndecl)\n {\n   tree parm;"}, {"sha": "e5e826851fcca5bf7223aca1fb248c8b858419de", "filename": "gcc/ipa-prop.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd29c0247aa4af7492782e6c933c713c6732b4b0/gcc%2Fipa-prop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd29c0247aa4af7492782e6c933c713c6732b4b0/gcc%2Fipa-prop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.h?ref=fd29c0247aa4af7492782e6c933c713c6732b4b0", "patch": "@@ -529,6 +529,7 @@ void ipa_free_all_edge_args (void);\n void ipa_free_all_structures_after_ipa_cp (void);\n void ipa_free_all_structures_after_iinln (void);\n void ipa_register_cgraph_hooks (void);\n+int count_formal_params (tree fndecl);\n \n /* This function ensures the array of node param infos is big enough to\n    accommodate a structure for all nodes and reallocates it if not.  */"}, {"sha": "482fc225e584005bb699938c8b22b0d46226eeec", "filename": "gcc/ipa-utils.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd29c0247aa4af7492782e6c933c713c6732b4b0/gcc%2Fipa-utils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd29c0247aa4af7492782e6c933c713c6732b4b0/gcc%2Fipa-utils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-utils.c?ref=fd29c0247aa4af7492782e6c933c713c6732b4b0", "patch": "@@ -660,13 +660,8 @@ ipa_merge_profiles (struct cgraph_node *dst,\n   if (dst->tp_first_run > src->tp_first_run && src->tp_first_run)\n     dst->tp_first_run = src->tp_first_run;\n \n-  if (src->profile_id)\n-    {\n-      if (!dst->profile_id)\n-\tdst->profile_id = src->profile_id;\n-      else\n-\tgcc_assert (src->profile_id == dst->profile_id);\n-    }\n+  if (src->profile_id && !dst->profile_id)\n+    dst->profile_id = src->profile_id;\n \n   if (!dst->count)\n     return;"}, {"sha": "dea9de1432d7a455f00c0ec193767580763285a7", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd29c0247aa4af7492782e6c933c713c6732b4b0/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd29c0247aa4af7492782e6c933c713c6732b4b0/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=fd29c0247aa4af7492782e6c933c713c6732b4b0", "patch": "@@ -1478,7 +1478,7 @@ do_per_function (void (*callback) (function *, void *data), void *data)\n     {\n       struct cgraph_node *node;\n       FOR_EACH_DEFINED_FUNCTION (node)\n-\tif (node->analyzed && gimple_has_body_p (node->decl)\n+\tif (node->analyzed && (gimple_has_body_p (node->decl) && !in_lto_p)\n \t    && (!node->clone_of || node->decl != node->clone_of->decl))\n \t  callback (DECL_STRUCT_FUNCTION (node->decl), data);\n     }"}, {"sha": "f1f6a3123b28f2835f3b8410130dc0bc2a8f1145", "filename": "gcc/varpool.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd29c0247aa4af7492782e6c933c713c6732b4b0/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd29c0247aa4af7492782e6c933c713c6732b4b0/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=fd29c0247aa4af7492782e6c933c713c6732b4b0", "patch": "@@ -405,6 +405,7 @@ ctor_for_folding (tree decl)\n   if (decl != real_decl)\n     {\n       gcc_assert (!DECL_INITIAL (decl)\n+\t\t  || (node->alias && node->get_alias_target () == real_node)\n \t\t  || DECL_INITIAL (decl) == error_mark_node);\n       if (node->weakref)\n \t{"}]}