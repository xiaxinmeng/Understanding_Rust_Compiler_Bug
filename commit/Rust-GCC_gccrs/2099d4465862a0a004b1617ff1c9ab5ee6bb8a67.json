{"sha": "2099d4465862a0a004b1617ff1c9ab5ee6bb8a67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA5OWQ0NDY1ODYyYTBhMDA0YjE2MTdmZjFjOWFiNWVlNmJiOGE2Nw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-05-31T21:32:47Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-05-31T21:32:47Z"}, "message": "runtime: drop unused C type reflection code\n    \n    In particular, drop __go_type_descriptors_equal, which is no longer\n    used, and will be made obsolete by CL 179598.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/gofrontend/+/179858\n\nFrom-SVN: r271823", "tree": {"sha": "ba0db317857e6121a9a5482590f0476a23ff0323", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba0db317857e6121a9a5482590f0476a23ff0323"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2099d4465862a0a004b1617ff1c9ab5ee6bb8a67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2099d4465862a0a004b1617ff1c9ab5ee6bb8a67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2099d4465862a0a004b1617ff1c9ab5ee6bb8a67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2099d4465862a0a004b1617ff1c9ab5ee6bb8a67/comments", "author": null, "committer": null, "parents": [{"sha": "6303331c3330222fef94eff8d8d35c99ca1d3e88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6303331c3330222fef94eff8d8d35c99ca1d3e88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6303331c3330222fef94eff8d8d35c99ca1d3e88"}], "stats": {"total": 210, "additions": 10, "deletions": 200}, "files": [{"sha": "73c432c398584fecb9c857e3a4029e9cfc799e78", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2099d4465862a0a004b1617ff1c9ab5ee6bb8a67/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2099d4465862a0a004b1617ff1c9ab5ee6bb8a67/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=2099d4465862a0a004b1617ff1c9ab5ee6bb8a67", "patch": "@@ -1,4 +1,4 @@\n-52176566485e20968394a5cb67a89ac676182594\n+4150db0e4613043e38a146a971e5b0dcacad7c2a\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "6324170816a705b37b21f54697c10d30d9071934", "filename": "libgo/Makefile.am", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2099d4465862a0a004b1617ff1c9ab5ee6bb8a67/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2099d4465862a0a004b1617ff1c9ab5ee6bb8a67/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=2099d4465862a0a004b1617ff1c9ab5ee6bb8a67", "patch": "@@ -469,7 +469,6 @@ runtime_files = \\\n \truntime/go-setenv.c \\\n \truntime/go-signal.c \\\n \truntime/go-strslice.c \\\n-\truntime/go-typedesc-equal.c \\\n \truntime/go-unsafe-pointer.c \\\n \truntime/go-unsetenv.c \\\n \truntime/go-unwind.c \\"}, {"sha": "08a39266ccc81056d72ec56c41b93019e30d2566", "filename": "libgo/Makefile.in", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2099d4465862a0a004b1617ff1c9ab5ee6bb8a67/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2099d4465862a0a004b1617ff1c9ab5ee6bb8a67/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=2099d4465862a0a004b1617ff1c9ab5ee6bb8a67", "patch": "@@ -248,13 +248,12 @@ am__objects_3 = runtime/aeshash.lo runtime/go-assert.lo \\\n \truntime/go-nanotime.lo runtime/go-now.lo runtime/go-nosys.lo \\\n \truntime/go-reflect-call.lo runtime/go-runtime-error.lo \\\n \truntime/go-setenv.lo runtime/go-signal.lo \\\n-\truntime/go-strslice.lo runtime/go-typedesc-equal.lo \\\n-\truntime/go-unsafe-pointer.lo runtime/go-unsetenv.lo \\\n-\truntime/go-unwind.lo runtime/go-varargs.lo \\\n-\truntime/env_posix.lo runtime/panic.lo runtime/print.lo \\\n-\truntime/proc.lo runtime/runtime_c.lo runtime/stack.lo \\\n-\truntime/yield.lo runtime/go-context.lo $(am__objects_1) \\\n-\t$(am__objects_2)\n+\truntime/go-strslice.lo runtime/go-unsafe-pointer.lo \\\n+\truntime/go-unsetenv.lo runtime/go-unwind.lo \\\n+\truntime/go-varargs.lo runtime/env_posix.lo runtime/panic.lo \\\n+\truntime/print.lo runtime/proc.lo runtime/runtime_c.lo \\\n+\truntime/stack.lo runtime/yield.lo runtime/go-context.lo \\\n+\t$(am__objects_1) $(am__objects_2)\n am_libgo_llgo_la_OBJECTS = $(am__objects_3)\n libgo_llgo_la_OBJECTS = $(am_libgo_llgo_la_OBJECTS)\n AM_V_lt = $(am__v_lt_@AM_V@)\n@@ -526,7 +525,6 @@ pdfdir = @pdfdir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n-runstatedir = @runstatedir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@\n@@ -904,7 +902,6 @@ runtime_files = \\\n \truntime/go-setenv.c \\\n \truntime/go-signal.c \\\n \truntime/go-strslice.c \\\n-\truntime/go-typedesc-equal.c \\\n \truntime/go-unsafe-pointer.c \\\n \truntime/go-unsetenv.c \\\n \truntime/go-unwind.c \\\n@@ -1367,8 +1364,6 @@ runtime/go-signal.lo: runtime/$(am__dirstamp) \\\n \truntime/$(DEPDIR)/$(am__dirstamp)\n runtime/go-strslice.lo: runtime/$(am__dirstamp) \\\n \truntime/$(DEPDIR)/$(am__dirstamp)\n-runtime/go-typedesc-equal.lo: runtime/$(am__dirstamp) \\\n-\truntime/$(DEPDIR)/$(am__dirstamp)\n runtime/go-unsafe-pointer.lo: runtime/$(am__dirstamp) \\\n \truntime/$(DEPDIR)/$(am__dirstamp)\n runtime/go-unsetenv.lo: runtime/$(am__dirstamp) \\\n@@ -1454,7 +1449,6 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@runtime/$(DEPDIR)/go-setenv.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@runtime/$(DEPDIR)/go-signal.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@runtime/$(DEPDIR)/go-strslice.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@runtime/$(DEPDIR)/go-typedesc-equal.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@runtime/$(DEPDIR)/go-unsafe-pointer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@runtime/$(DEPDIR)/go-unsetenv.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@runtime/$(DEPDIR)/go-unwind.Plo@am__quote@"}, {"sha": "22ef79c5118008e22785dc197dff990710a78902", "filename": "libgo/configure", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2099d4465862a0a004b1617ff1c9ab5ee6bb8a67/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2099d4465862a0a004b1617ff1c9ab5ee6bb8a67/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=2099d4465862a0a004b1617ff1c9ab5ee6bb8a67", "patch": "@@ -813,7 +813,6 @@ infodir\n docdir\n oldincludedir\n includedir\n-runstatedir\n localstatedir\n sharedstatedir\n sysconfdir\n@@ -895,7 +894,6 @@ datadir='${datarootdir}'\n sysconfdir='${prefix}/etc'\n sharedstatedir='${prefix}/com'\n localstatedir='${prefix}/var'\n-runstatedir='${localstatedir}/run'\n includedir='${prefix}/include'\n oldincludedir='/usr/include'\n docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'\n@@ -1148,15 +1146,6 @@ do\n   | -silent | --silent | --silen | --sile | --sil)\n     silent=yes ;;\n \n-  -runstatedir | --runstatedir | --runstatedi | --runstated \\\n-  | --runstate | --runstat | --runsta | --runst | --runs \\\n-  | --run | --ru | --r)\n-    ac_prev=runstatedir ;;\n-  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \\\n-  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \\\n-  | --run=* | --ru=* | --r=*)\n-    runstatedir=$ac_optarg ;;\n-\n   -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)\n     ac_prev=sbindir ;;\n   -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \\\n@@ -1294,7 +1283,7 @@ fi\n for ac_var in\texec_prefix prefix bindir sbindir libexecdir datarootdir \\\n \t\tdatadir sysconfdir sharedstatedir localstatedir includedir \\\n \t\toldincludedir docdir infodir htmldir dvidir pdfdir psdir \\\n-\t\tlibdir localedir mandir runstatedir\n+\t\tlibdir localedir mandir\n do\n   eval ac_val=\\$$ac_var\n   # Remove trailing slashes.\n@@ -1447,7 +1436,6 @@ Fine tuning of the installation directories:\n   --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]\n   --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]\n   --localstatedir=DIR     modifiable single-machine data [PREFIX/var]\n-  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]\n   --libdir=DIR            object code libraries [EPREFIX/lib]\n   --includedir=DIR        C header files [PREFIX/include]\n   --oldincludedir=DIR     C header files for non-gcc [/usr/include]\n@@ -11496,7 +11484,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11499 \"configure\"\n+#line 11487 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11602,7 +11590,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11605 \"configure\"\n+#line 11593 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "1935703acc6012058d64f32a1e49624ce96a3188", "filename": "libgo/runtime/go-type.h", "status": "modified", "additions": 0, "deletions": 140, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2099d4465862a0a004b1617ff1c9ab5ee6bb8a67/libgo%2Fruntime%2Fgo-type.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2099d4465862a0a004b1617ff1c9ab5ee6bb8a67/libgo%2Fruntime%2Fgo-type.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-type.h?ref=2099d4465862a0a004b1617ff1c9ab5ee6bb8a67", "patch": "@@ -153,53 +153,6 @@ struct __go_uncommon_type\n   struct __go_open_array __methods;\n };\n \n-/* The type descriptor for a fixed array type.  */\n-\n-struct __go_array_type\n-{\n-  /* Starts like all type descriptors.  */\n-  struct __go_type_descriptor __common;\n-\n-  /* The element type.  */\n-  struct __go_type_descriptor *__element_type;\n-\n-  /* The type of a slice of the same element type.  */\n-  struct __go_type_descriptor *__slice_type;\n-\n-  /* The length of the array.  */\n-  uintptr_t __len;\n-};\n-\n-/* The type descriptor for a slice.  */\n-\n-struct __go_slice_type\n-{\n-  /* Starts like all other type descriptors.  */\n-  struct __go_type_descriptor __common;\n-\n-  /* The element type.  */\n-  struct __go_type_descriptor *__element_type;\n-};\n-\n-/* The direction of a channel.  */\n-#define CHANNEL_RECV_DIR 1\n-#define CHANNEL_SEND_DIR 2\n-#define CHANNEL_BOTH_DIR (CHANNEL_RECV_DIR | CHANNEL_SEND_DIR)\n-\n-/* The type descriptor for a channel.  */\n-\n-struct __go_channel_type\n-{\n-  /* Starts like all other type descriptors.  */\n-  struct __go_type_descriptor __common;\n-\n-  /* The element type.  */\n-  const struct __go_type_descriptor *__element_type;\n-\n-  /* The direction.  */\n-  uintptr_t __dir;\n-};\n-\n /* The type descriptor for a function.  */\n \n struct __go_func_type\n@@ -221,34 +174,6 @@ struct __go_func_type\n   struct __go_open_array __out;\n };\n \n-/* A method on an interface type.  */\n-\n-struct __go_interface_method\n-{\n-  /* The name of the method.  */\n-  const struct String *__name;\n-\n-  /* This is NULL for an exported method, or the name of the package\n-     where it lives.  */\n-  const struct String *__pkg_path;\n-\n-  /* The real type of the method.  */\n-  struct __go_type_descriptor *__type;\n-};\n-\n-/* An interface type.  */\n-\n-struct __go_interface_type\n-{\n-  /* Starts like all other type descriptors.  */\n-  struct __go_type_descriptor __common;\n-\n-  /* Array of __go_interface_method .  The methods are sorted in the\n-     same order that they appear in the definition of the\n-     interface.  */\n-  struct __go_open_array __methods;\n-};\n-\n /* A map type.  */\n \n struct __go_map_type\n@@ -301,69 +226,4 @@ struct __go_ptr_type\n   const struct __go_type_descriptor *__element_type;\n };\n \n-/* A field in a structure.  */\n-\n-struct __go_struct_field\n-{\n-  /* The name of the field--NULL for an anonymous field.  */\n-  const struct String *__name;\n-\n-  /* This is NULL for an exported method, or the name of the package\n-     where it lives.  */\n-  const struct String *__pkg_path;\n-\n-  /* The type of the field.  */\n-  const struct __go_type_descriptor *__type;\n-\n-  /* The field tag, or NULL.  */\n-  const struct String *__tag;\n-\n-  /* The offset of the field in the struct.  */\n-  uintptr_t __offset;\n-};\n-\n-/* A struct type.  */\n-\n-struct __go_struct_type\n-{\n-  /* Starts like all other type descriptors.  */\n-  struct __go_type_descriptor __common;\n-\n-  /* An array of struct __go_struct_field.  */\n-  struct __go_open_array __fields;\n-};\n-\n-/* Whether a type descriptor is a pointer.  */\n-\n-static inline _Bool\n-__go_is_pointer_type (const struct __go_type_descriptor *td)\n-{\n-  return ((td->__code & GO_CODE_MASK) == GO_PTR\n-\t  || (td->__code & GO_CODE_MASK) == GO_UNSAFE_POINTER);\n-}\n-\n-/* Call a type hash function, given the __hashfn value.  */\n-\n-static inline uintptr_t\n-__go_call_hashfn (const FuncVal *hashfn, const void *p, uintptr_t seed,\n-\t\t  uintptr_t size)\n-{\n-  uintptr_t (*h) (const void *, uintptr_t, uintptr_t) = (void *) hashfn->fn;\n-  return __builtin_call_with_static_chain (h (p, seed, size), hashfn);\n-}\n-\n-/* Call a type equality function, given the __equalfn value.  */\n-\n-static inline _Bool\n-__go_call_equalfn (const FuncVal *equalfn, const void *p1, const void *p2,\n-\t\t   uintptr_t size)\n-{\n-  _Bool (*e) (const void *, const void *, uintptr_t) = (void *) equalfn->fn;\n-  return __builtin_call_with_static_chain (e (p1, p2, size), equalfn);\n-}\n-\n-extern _Bool\n-__go_type_descriptors_equal(const struct __go_type_descriptor*,\n-\t\t\t    const struct __go_type_descriptor*);\n-\n #endif /* !defined(LIBGO_GO_TYPE_H) */"}, {"sha": "90079f2202750ea16b79a8995b5e25efab500d47", "filename": "libgo/runtime/go-typedesc-equal.c", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6303331c3330222fef94eff8d8d35c99ca1d3e88/libgo%2Fruntime%2Fgo-typedesc-equal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6303331c3330222fef94eff8d8d35c99ca1d3e88/libgo%2Fruntime%2Fgo-typedesc-equal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-typedesc-equal.c?ref=6303331c3330222fef94eff8d8d35c99ca1d3e88", "patch": "@@ -1,28 +0,0 @@\n-/* go-typedesc-equal.c -- return whether two type descriptors are equal.\n-\n-   Copyright 2009 The Go Authors. All rights reserved.\n-   Use of this source code is governed by a BSD-style\n-   license that can be found in the LICENSE file.  */\n-\n-#include \"runtime.h\"\n-#include \"go-string.h\"\n-#include \"go-type.h\"\n-\n-/* Compare type descriptors for equality.  This is necessary because\n-   types may have different descriptors in different shared libraries.\n-   Also, unnamed types may have multiple type descriptors even in a\n-   single shared library.  */\n-\n-_Bool\n-__go_type_descriptors_equal (const struct __go_type_descriptor *td1,\n-\t\t\t     const struct __go_type_descriptor *td2)\n-{\n-  if (td1 == td2)\n-    return 1;\n-  /* In a type switch we can get a NULL descriptor.  */\n-  if (td1 == NULL || td2 == NULL)\n-    return 0;\n-  if (td1->__code != td2->__code || td1->__hash != td2->__hash)\n-    return 0;\n-  return __go_ptr_strings_equal (td1->__reflection, td2->__reflection);\n-}"}, {"sha": "0aa8ff9974f82a9d0d6c386c7dc207abba8b405d", "filename": "libgo/runtime/runtime.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2099d4465862a0a004b1617ff1c9ab5ee6bb8a67/libgo%2Fruntime%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2099d4465862a0a004b1617ff1c9ab5ee6bb8a67/libgo%2Fruntime%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fruntime.h?ref=2099d4465862a0a004b1617ff1c9ab5ee6bb8a67", "patch": "@@ -78,9 +78,7 @@ typedef\tstruct\t_panic\t\t\tPanic;\n \n typedef struct\t__go_ptr_type\t\tPtrType;\n typedef struct\t__go_func_type\t\tFuncType;\n-typedef struct\t__go_interface_type\tInterfaceType;\n typedef struct\t__go_map_type\t\tMapType;\n-typedef struct\t__go_channel_type\tChanType;\n \n typedef struct  tracebackg\tTraceback;\n "}, {"sha": "41d81b5684fd7274411030337a2d3ea9a4c9b4e8", "filename": "libgo/testsuite/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2099d4465862a0a004b1617ff1c9ab5ee6bb8a67/libgo%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2099d4465862a0a004b1617ff1c9ab5ee6bb8a67/libgo%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2FMakefile.in?ref=2099d4465862a0a004b1617ff1c9ab5ee6bb8a67", "patch": "@@ -276,7 +276,6 @@ pdfdir = @pdfdir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n-runstatedir = @runstatedir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@"}]}