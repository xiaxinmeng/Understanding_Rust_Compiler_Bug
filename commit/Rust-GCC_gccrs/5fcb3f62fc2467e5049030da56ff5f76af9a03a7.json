{"sha": "5fcb3f62fc2467e5049030da56ff5f76af9a03a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZjYjNmNjJmYzI0NjdlNTA0OTAzMGRhNTZmZjVmNzZhZjlhMDNhNw==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@gmail.com", "date": "2019-11-11T15:40:20Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2019-11-11T15:40:20Z"}, "message": "[ARC] Fix movsi_ne pattern.\n\nThe movsi_ne variants are in a wrong order, leading to wrong\ncomputation of the internal attribute \"cond\". Hence, to errors when\noutputting annul-true or annul-false instructions.\n\ngcc/\nxxxx-xx-xx  Claudiu Zissulescu  <claziss@synopsys.com>\n\t    Shahab Vahedi  <shahab@synopsys.com>\n\n\t* config/arc/arc.md (movsi_ne): Reorder instruction variants.\n\ntestsuite/\nxxxx-xx-xx  Shahab Vahedi  <shahab@synopsys.com>\n\n\t* gcc.target/arc/delay-slot-limm.c: New test.\n\nFrom-SVN: r278057", "tree": {"sha": "f6bfa9ba49aabf0b5a0a9f21a009e67545bc13d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6bfa9ba49aabf0b5a0a9f21a009e67545bc13d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fcb3f62fc2467e5049030da56ff5f76af9a03a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fcb3f62fc2467e5049030da56ff5f76af9a03a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fcb3f62fc2467e5049030da56ff5f76af9a03a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fcb3f62fc2467e5049030da56ff5f76af9a03a7/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a6dd06b6ce8be29cdcfd0b3a0c5e6c66767095e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a6dd06b6ce8be29cdcfd0b3a0c5e6c66767095e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a6dd06b6ce8be29cdcfd0b3a0c5e6c66767095e"}], "stats": {"total": 83, "additions": 72, "deletions": 11}, "files": [{"sha": "0148accee6286607655abdc2e79d4e87f3199315", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fcb3f62fc2467e5049030da56ff5f76af9a03a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fcb3f62fc2467e5049030da56ff5f76af9a03a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5fcb3f62fc2467e5049030da56ff5f76af9a03a7", "patch": "@@ -1,3 +1,8 @@\n+2019-11-11  Claudiu Zissulescu <claziss@gmail.com>\n+\n+\t* config/arc/arc.md (movsi_ne): Reorder instruction variants and\n+\tuse new register constraint letters.\n+\n 2019-11-11  Claudiu Zissulescu <claziss@gmail.com>\n \n \t* config/arc/arc.c (arc_legitimize_pic_address): Consider UNSPECs"}, {"sha": "98e962372067a4a2756c20187d2d510ace0989e5", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fcb3f62fc2467e5049030da56ff5f76af9a03a7/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fcb3f62fc2467e5049030da56ff5f76af9a03a7/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=5fcb3f62fc2467e5049030da56ff5f76af9a03a7", "patch": "@@ -3787,20 +3787,20 @@ core_3, archs4x, archs4xd, archs4xd_slow\"\n ; cond_exec patterns\n (define_insn \"*movsi_ne\"\n   [(cond_exec\n-     (ne (match_operand:CC_Z 2 \"cc_use_register\"    \"Rcc,  Rcc,  Rcc,Rcc,Rcc\") (const_int 0))\n-     (set (match_operand:SI 0 \"dest_reg_operand\" \"=Rcq#q,Rcq#q,Rcq#q,  w,w\")\n-\t  (match_operand:SI 1 \"nonmemory_operand\"   \"C_0,    h, ?Cal, Lc,?Cal\")))]\n+    (ne (match_operand:CC_Z 2 \"cc_use_register\"  \"Rcc,Rcc,Rcc,Rcc,Rcc\") (const_int 0))\n+    (set (match_operand:SI 0 \"dest_reg_operand\"   \"=q,  q,  r,  q,  r\")\n+\t (match_operand:SI 1 \"nonmemory_operand\" \"C_0,  h, Lr,Cal,Cal\")))]\n   \"\"\n   \"@\n-\t* current_insn_predicate = 0; return \\\"sub%?.ne %0,%0,%0%&\\\";\n-\t* current_insn_predicate = 0; return \\\"mov%?.ne %0,%1\\\";\n-\t* current_insn_predicate = 0; return \\\"mov%?.ne %0,%1\\\";\n-\tmov.ne %0,%1\n-\tmov.ne %0,%1\"\n+\t* current_insn_predicate = 0; return \\\"sub%?.ne\\\\t%0,%0,%0\\\";\n+\t* current_insn_predicate = 0; return \\\"mov%?.ne\\\\t%0,%1\\\";\n+\tmov.ne\\\\t%0,%1\n+\t* current_insn_predicate = 0; return \\\"mov%?.ne\\\\t%0,%1\\\";\n+\tmov.ne\\\\t%0,%1\"\n   [(set_attr \"type\" \"cmove\")\n-   (set_attr \"iscompact\" \"true,true,true_limm,false,false\")\n-   (set_attr \"length\" \"2,2,6,4,8\")\n-   (set_attr \"cpu_facility\" \"*,av2,av2,*,*\")])\n+   (set_attr \"iscompact\" \"true,true,false,true_limm,false\")\n+   (set_attr \"length\" \"2,2,4,6,8\")\n+   (set_attr \"cpu_facility\" \"*,av2,*,av2,*\")])\n \n (define_insn \"*movsi_cond_exec\"\n   [(cond_exec"}, {"sha": "e734954c98af7a6f7f769a0fd6537c1be6afa853", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fcb3f62fc2467e5049030da56ff5f76af9a03a7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fcb3f62fc2467e5049030da56ff5f76af9a03a7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5fcb3f62fc2467e5049030da56ff5f76af9a03a7", "patch": "@@ -1,3 +1,7 @@\n+2019-11-11  Claudiu Zissulescu <claziss@gmail.com>\n+\n+\t* gcc.target/arc/delay-slot-limm.c: New test.\n+\n 2019-11-11  Claudiu Zissulescu <claziss@gmail.com>\n \n \t* gcc.target/arc/pic-2.c: New file."}, {"sha": "e5de3c4baddcccb9aea449912c009f60ff883e48", "filename": "gcc/testsuite/gcc.target/arc/delay-slot-limm.c", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fcb3f62fc2467e5049030da56ff5f76af9a03a7/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fdelay-slot-limm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fcb3f62fc2467e5049030da56ff5f76af9a03a7/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fdelay-slot-limm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fdelay-slot-limm.c?ref=5fcb3f62fc2467e5049030da56ff5f76af9a03a7", "patch": "@@ -0,0 +1,52 @@\n+/* We have encountered an issue that a \"mov_s.ne\" instruction *\n+ * with  an  immediate  value  was put in the delay slot of a *\n+ * branch:                                                    *\n+ *                                                            *\n+ * bne.d @.L1      # 33    [c=20 l=4]  *branch_insn           *\n+ * mov_s.ne r0,7   # 35    [c=0 l=6]  *movsi_ne/2             *\n+ *                                                            *\n+ * This is not sanctioned and must not happen. The test below *\n+ * is a reduced version of the source  code  leading  to  the *\n+ * problem.                                                   */\n+\n+/* { dg-do compile }               */\n+/* { dg-skip-if \"\" { ! { clmcpu } } } */\n+/* { dg-options \"-mcpu=archs -Og\" } */\n+typedef struct\n+{\n+  struct\n+  {\n+    int length;\n+  } table;\n+} room;\n+\n+struct house\n+{\n+  room *r;\n+};\n+\n+int glob;\n+\n+_Bool bar();\n+\n+int func(struct house *h, int i, int whatever)\n+{\n+  for (;;)\n+  {\n+    _Bool a;\n+    if (h && h->r[i].table.length == glob)\n+    {\n+      if (whatever)\n+      {\n+        a = bar();\n+        if (__builtin_expect(!a, 0))\n+          return 7;\n+      }\n+      break;\n+    }\n+  }\n+  return 0;\n+}\n+\n+/* no 'mov_s.ne r,limm' in a delay slot */\n+/* { dg-final { scan-assembler-not \"bne.d\\.*\\n\\\\s\\+mov_s.ne\\\\s+r\\[0-9\\]+,7\" } } */"}]}