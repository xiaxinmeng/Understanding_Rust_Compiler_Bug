{"sha": "2fe5bb9b5e28ea5587110f4513edd737eede546c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZlNWJiOWI1ZTI4ZWE1NTg3MTEwZjQ1MTNlZGQ3MzdlZWRlNTQ2Yw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2007-07-12T21:08:34Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-07-12T21:08:34Z"}, "message": "pt.c (template_parms_variadic_p): Remove.\n\n\t* pt.c (template_parms_variadic_p): Remove.\n\t* cp-tree.h: Remove the prototype for template_parms_variadic_p.\n\nFrom-SVN: r126603", "tree": {"sha": "8b1a30810d2de64d543c449e12e7f4429b3bb4a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b1a30810d2de64d543c449e12e7f4429b3bb4a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fe5bb9b5e28ea5587110f4513edd737eede546c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fe5bb9b5e28ea5587110f4513edd737eede546c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fe5bb9b5e28ea5587110f4513edd737eede546c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fe5bb9b5e28ea5587110f4513edd737eede546c/comments", "author": null, "committer": null, "parents": [{"sha": "70263321170abf8049fca8451522e1c42a0fc415", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70263321170abf8049fca8451522e1c42a0fc415", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70263321170abf8049fca8451522e1c42a0fc415"}], "stats": {"total": 17, "additions": 5, "deletions": 12}, "files": [{"sha": "192c8f42738b0c6c6e73efedd6ffc96b5b3d59f5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe5bb9b5e28ea5587110f4513edd737eede546c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe5bb9b5e28ea5587110f4513edd737eede546c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2fe5bb9b5e28ea5587110f4513edd737eede546c", "patch": "@@ -1,3 +1,8 @@\n+2007-07-12  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* pt.c (template_parms_variadic_p): Remove.\n+\t* cp-tree.h: Remove the prototype for template_parms_variadic_p.\n+\n 2007-07-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/30854"}, {"sha": "86044470ab759133d0f50bf658ceedca00d892a6", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe5bb9b5e28ea5587110f4513edd737eede546c/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe5bb9b5e28ea5587110f4513edd737eede546c/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=2fe5bb9b5e28ea5587110f4513edd737eede546c", "patch": "@@ -4416,7 +4416,6 @@ extern tree instantiate_decl\t\t\t(tree, int, bool);\n extern int comp_template_parms\t\t\t(tree, tree);\n extern bool uses_parameter_packs                (tree);\n extern bool template_parameter_pack_p           (tree);\n-extern bool template_parms_variadic_p           (tree);\n extern tree make_pack_expansion                 (tree);\n extern bool check_for_bare_parameter_packs      (tree);\n extern int template_class_depth\t\t\t(tree);"}, {"sha": "3ff4706048cad948fa454441ffae480b47efe276", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe5bb9b5e28ea5587110f4513edd737eede546c/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe5bb9b5e28ea5587110f4513edd737eede546c/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=2fe5bb9b5e28ea5587110f4513edd737eede546c", "patch": "@@ -2334,17 +2334,6 @@ template_parameter_pack_p (tree parm)\n \t  && TEMPLATE_TYPE_PARAMETER_PACK (parm));\n }\n \n-/* Determine whether PARMS describes a variadic template parameter\n-   list, i.e., one that is terminated by a template parameter pack.  */\n-bool \n-template_parms_variadic_p (tree parms)\n-{\n-  int nparms = TREE_VEC_LENGTH (parms);\n-  tree last_parm = TREE_VALUE (TREE_VEC_ELT (parms, nparms - 1));\n-  \n-  return template_parameter_pack_p (last_parm);\n-}\n-\n /* Determine whether ARGS describes a variadic template args list,\n    i.e., one that is terminated by a template argument pack.  */\n static bool "}]}