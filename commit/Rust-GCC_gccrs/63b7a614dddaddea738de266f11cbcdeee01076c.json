{"sha": "63b7a614dddaddea738de266f11cbcdeee01076c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNiN2E2MTRkZGRhZGRlYTczOGRlMjY2ZjExY2JjZGVlZTAxMDc2Yw==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2019-11-04T19:52:24Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2019-11-04T19:52:24Z"}, "message": "Remove unused range_int_cst_singleton_p.\n\nFrom-SVN: r277792", "tree": {"sha": "1649912f1eb652638afd7c906e1553416da55418", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1649912f1eb652638afd7c906e1553416da55418"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63b7a614dddaddea738de266f11cbcdeee01076c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63b7a614dddaddea738de266f11cbcdeee01076c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63b7a614dddaddea738de266f11cbcdeee01076c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63b7a614dddaddea738de266f11cbcdeee01076c/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c58d50469989799d0f1cc9baff54cc61802b53ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c58d50469989799d0f1cc9baff54cc61802b53ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c58d50469989799d0f1cc9baff54cc61802b53ed"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "c585360b537d73eec31df4f011ad97e79b0e6310", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63b7a614dddaddea738de266f11cbcdeee01076c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63b7a614dddaddea738de266f11cbcdeee01076c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=63b7a614dddaddea738de266f11cbcdeee01076c", "patch": "@@ -1,3 +1,8 @@\n+2019-11-04  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* tree-vrp.c (range_int_cst_singleton_p): Remove.\n+\t* tree-vrp.h (range_int_cst_singleton_p): Remove.\n+\n 2019-11-04  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* tree-vrp.c (value_range_base::normalize_addresses): Handle"}, {"sha": "070db903147f2baace5697d56b9986812015139b", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63b7a614dddaddea738de266f11cbcdeee01076c/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63b7a614dddaddea738de266f11cbcdeee01076c/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=63b7a614dddaddea738de266f11cbcdeee01076c", "patch": "@@ -945,15 +945,6 @@ range_int_cst_p (const value_range_base *vr)\n   return (vr->kind () == VR_RANGE && range_has_numeric_bounds_p (vr));\n }\n \n-/* Return true if VR is a INTEGER_CST singleton.  */\n-\n-bool\n-range_int_cst_singleton_p (const value_range_base *vr)\n-{\n-  return (range_int_cst_p (vr)\n-\t  && tree_int_cst_equal (vr->min (), vr->max ()));\n-}\n-\n /* Return the single symbol (an SSA_NAME) contained in T if any, or NULL_TREE\n    otherwise.  We only handle additive operations and set NEG to true if the\n    symbol is negated and INV to the invariant part, if any.  */"}, {"sha": "1fde88fe0fec3ae69dc0a156bec3003075b1be2c", "filename": "gcc/tree-vrp.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63b7a614dddaddea738de266f11cbcdeee01076c/gcc%2Ftree-vrp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63b7a614dddaddea738de266f11cbcdeee01076c/gcc%2Ftree-vrp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.h?ref=63b7a614dddaddea738de266f11cbcdeee01076c", "patch": "@@ -282,7 +282,6 @@ extern bool infer_value_range (gimple *, tree, tree_code *, tree *);\n extern bool vrp_bitmap_equal_p (const_bitmap, const_bitmap);\n \n extern bool range_int_cst_p (const value_range_base *);\n-extern bool range_int_cst_singleton_p (const value_range_base *);\n \n extern int compare_values (tree, tree);\n extern int compare_values_warnv (tree, tree, bool *);"}]}