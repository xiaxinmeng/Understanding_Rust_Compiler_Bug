{"sha": "838c4534d4aebb1efb7d968d289606d6f1c89374", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM4YzQ1MzRkNGFlYmIxZWZiN2Q5NjhkMjg5NjA2ZDZmMWM4OTM3NA==", "commit": {"author": {"name": "Nicola Pero", "email": "n.pero@mi.flashnet.it", "date": "2002-09-17T11:51:40Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2002-09-17T11:51:40Z"}, "message": "Extended/updated objc documentation on constant string classes\n\nFrom-SVN: r57247", "tree": {"sha": "9a3f12ab1fb57b1832fa6ce6174c17e929461b69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a3f12ab1fb57b1832fa6ce6174c17e929461b69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/838c4534d4aebb1efb7d968d289606d6f1c89374", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/838c4534d4aebb1efb7d968d289606d6f1c89374", "html_url": "https://github.com/Rust-GCC/gccrs/commit/838c4534d4aebb1efb7d968d289606d6f1c89374", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/838c4534d4aebb1efb7d968d289606d6f1c89374/comments", "author": null, "committer": null, "parents": [{"sha": "17656182f77cf4634dad4bbff9102d759ffd03b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17656182f77cf4634dad4bbff9102d759ffd03b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17656182f77cf4634dad4bbff9102d759ffd03b2"}], "stats": {"total": 45, "additions": 34, "deletions": 11}, "files": [{"sha": "84b891eee702ed672cc2e56037633f45982079d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/838c4534d4aebb1efb7d968d289606d6f1c89374/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/838c4534d4aebb1efb7d968d289606d6f1c89374/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=838c4534d4aebb1efb7d968d289606d6f1c89374", "patch": "@@ -1,3 +1,9 @@\n+Tue Sep 17 13:40:13 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n+\n+\t* doc/objc.texi (Constant string objects): Extended documentation\n+\tto make clear that the constant string class ivar layout is\n+\tcompletely fixed.\n+\t\n 2002-09-17  Roger Sayle  <roger@eyesopen.com>\n \n \t* cfgrtl.c (flow_delete_block_noexpunge): Delete orphaned"}, {"sha": "3b652551e7c1cc6fc281a37b570d1e3f3835aa4e", "filename": "gcc/doc/objc.texi", "status": "modified", "additions": 28, "deletions": 11, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/838c4534d4aebb1efb7d968d289606d6f1c89374/gcc%2Fdoc%2Fobjc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/838c4534d4aebb1efb7d968d289606d6f1c89374/gcc%2Fdoc%2Fobjc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fobjc.texi?ref=838c4534d4aebb1efb7d968d289606d6f1c89374", "patch": "@@ -396,7 +396,7 @@ prefixing a C constant string with the character @samp{@@}:\n   id myString = @@\"this is a constant string object\";\n @end example\n \n-The constant string objects are usually instances of the\n+The constant string objects are by default instances of the\n @code{NXConstantString} class which is provided by the GNU Objective-C\n runtime.  To get the definition of this class you must include the\n @file{objc/NXConstStr.h} header file.\n@@ -409,24 +409,41 @@ as @code{NXConstantString}'s structure:\n \n @example\n \n-@@interface NXConstantString : Object\n+@@interface MyConstantStringClass\n @{\n+  Class isa;\n   char *c_string;\n   unsigned int len;\n @}\n @@end\n \n @end example\n \n-User class libraries may choose to inherit the customized constant\n-string class from a different class than @code{Object}.  There is no\n-requirement in the methods the constant string class has to implement.\n-\n-When a file is compiled with the @option{-fconstant-string-class} option,\n-all the constant string objects will be instances of the class specified\n-as argument to this option.  It is possible to have multiple compilation\n-units referring to different constant string classes, neither the\n-compiler nor the linker impose any restrictions in doing this.\n+@code{NXConstantString} inherits from @code{Object}; user class\n+libraries may choose to inherit the customized constant string class\n+from a different class than @code{Object}.  There is no requirement in\n+the methods the constant string class has to implement, but the final\n+ivar layour of the class must be the compatible with the given\n+structure.\n+\n+When the compiler creates the statically allocated constant string\n+object, the @code{c_string} field will be filled by the compiler with\n+the string; the @code{length} field will be filled by the compiler with\n+the string length; the @code{isa} pointer will be filled with\n+@code{NULL} by the compiler, and it will later be fixed up automatically\n+at runtime by the GNU Objective-C runtime library to point to the class\n+which was set by the @option{-fconstant-string-class} option when the\n+object file is loaded (if you wonder how it works behind the scenes, the\n+name of the class to use, and the list of static objects to fixup, are\n+stored by the compiler in the object file in a place where the GNU\n+runtime library will find them at runtime).\n+\n+As a result, when a file is compiled with the\n+@option{-fconstant-string-class} option, all the constant string objects\n+will be instances of the class specified as argument to this option.  It\n+is possible to have multiple compilation units referring to different\n+constant string classes, neither the compiler nor the linker impose any\n+restrictions in doing this.\n \n @c =========================================================================\n @node compatibility_alias"}]}