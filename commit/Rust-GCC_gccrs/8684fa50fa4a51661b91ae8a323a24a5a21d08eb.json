{"sha": "8684fa50fa4a51661b91ae8a323a24a5a21d08eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY4NGZhNTBmYTRhNTE2NjFiOTFhZThhMzIzYTI0YTVhMjFkMDhlYg==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2014-09-05T11:24:56Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2014-09-05T11:24:56Z"}, "message": "[PATCH AArch64 2/2] Replace temporary inline assembler for vget_high\n\n\t* config/aarch64/arm_neon.h (__GET_HIGH): New macro.\n\t(vget_high_f32, vget_high_f64, vget_high_p8, vget_high_p16,\n\tvget_high_s8, vget_high_s16, vget_high_s32, vget_high_s64,\n\tvget_high_u8, vget_high_u16, vget_high_u32, vget_high_u64):\n\tRemove temporary __asm__ and reimplement.\n\nFrom-SVN: r214952", "tree": {"sha": "273c092dba6877a1d1836481209c57a9e82a0046", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/273c092dba6877a1d1836481209c57a9e82a0046"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8684fa50fa4a51661b91ae8a323a24a5a21d08eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8684fa50fa4a51661b91ae8a323a24a5a21d08eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8684fa50fa4a51661b91ae8a323a24a5a21d08eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8684fa50fa4a51661b91ae8a323a24a5a21d08eb/comments", "author": null, "committer": null, "parents": [{"sha": "6fff10f9aa6dbb92ccc15d1b643f7148531d7458", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fff10f9aa6dbb92ccc15d1b643f7148531d7458", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fff10f9aa6dbb92ccc15d1b643f7148531d7458"}], "stats": {"total": 219, "additions": 87, "deletions": 132}, "files": [{"sha": "cb7d78becd897e63836537e94ff454db1804ca0b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8684fa50fa4a51661b91ae8a323a24a5a21d08eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8684fa50fa4a51661b91ae8a323a24a5a21d08eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8684fa50fa4a51661b91ae8a323a24a5a21d08eb", "patch": "@@ -1,3 +1,11 @@\n+2014-09-05  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* config/aarch64/arm_neon.h (__GET_HIGH): New macro.\n+\t(vget_high_f32, vget_high_f64, vget_high_p8, vget_high_p16,\n+\tvget_high_s8, vget_high_s16, vget_high_s32, vget_high_s64,\n+\tvget_high_u8, vget_high_u16, vget_high_u32, vget_high_u64):\n+\tRemove temporary __asm__ and reimplement.\n+\n 2014-09-05  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* config/aarch64/aarch64-builtins.c (aarch64_fold_builtin): Remove code"}, {"sha": "4598debcc1a659577abbee0a4c585d451d9ecbe4", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 79, "deletions": 132, "changes": 211, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8684fa50fa4a51661b91ae8a323a24a5a21d08eb/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8684fa50fa4a51661b91ae8a323a24a5a21d08eb/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=8684fa50fa4a51661b91ae8a323a24a5a21d08eb", "patch": "@@ -4328,6 +4328,85 @@ vget_low_u64 (uint64x2_t __a)\n \n #undef __GET_LOW\n \n+#define __GET_HIGH(__TYPE)\t\t\t\t\t\\\n+  uint64x2_t tmp = vreinterpretq_u64_##__TYPE (__a);\t\t\\\n+  uint64x1_t hi = vcreate_u64 (vgetq_lane_u64 (tmp, 1));\t\\\n+  return vreinterpret_##__TYPE##_u64 (hi);\n+\n+__extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n+vget_high_f32 (float32x4_t __a)\n+{\n+  __GET_HIGH (f32);\n+}\n+\n+__extension__ static __inline float64x1_t __attribute__ ((__always_inline__))\n+vget_high_f64 (float64x2_t __a)\n+{\n+  __GET_HIGH (f64);\n+}\n+\n+__extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n+vget_high_p8 (poly8x16_t __a)\n+{\n+  __GET_HIGH (p8);\n+}\n+\n+__extension__ static __inline poly16x4_t __attribute__ ((__always_inline__))\n+vget_high_p16 (poly16x8_t __a)\n+{\n+  __GET_HIGH (p16);\n+}\n+\n+__extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n+vget_high_s8 (int8x16_t __a)\n+{\n+  __GET_HIGH (s8);\n+}\n+\n+__extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n+vget_high_s16 (int16x8_t __a)\n+{\n+  __GET_HIGH (s16);\n+}\n+\n+__extension__ static __inline int32x2_t __attribute__ ((__always_inline__))\n+vget_high_s32 (int32x4_t __a)\n+{\n+  __GET_HIGH (s32);\n+}\n+\n+__extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n+vget_high_s64 (int64x2_t __a)\n+{\n+  __GET_HIGH (s64);\n+}\n+\n+__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n+vget_high_u8 (uint8x16_t __a)\n+{\n+  __GET_HIGH (u8);\n+}\n+\n+__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n+vget_high_u16 (uint16x8_t __a)\n+{\n+  __GET_HIGH (u16);\n+}\n+\n+__extension__ static __inline uint32x2_t __attribute__ ((__always_inline__))\n+vget_high_u32 (uint32x4_t __a)\n+{\n+  __GET_HIGH (u32);\n+}\n+\n+#undef __GET_HIGH\n+\n+__extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n+vget_high_u64 (uint64x2_t __a)\n+{\n+  return vcreate_u64 (vgetq_lane_u64 (__a, 1));\n+}\n+\n __extension__ static __inline int8x16_t __attribute__ ((__always_inline__))\n vcombine_s8 (int8x8_t __a, int8x8_t __b)\n {\n@@ -5770,138 +5849,6 @@ vfmsq_f64 (float64x2_t a, float64x2_t b, float64x2_t c)\n   return result;\n }\n \n-__extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n-vget_high_f32 (float32x4_t a)\n-{\n-  float32x2_t result;\n-  __asm__ (\"ins %0.d[0], %1.d[1]\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline float64x1_t __attribute__ ((__always_inline__))\n-vget_high_f64 (float64x2_t a)\n-{\n-  float64x1_t result;\n-  __asm__ (\"ins %0.d[0], %1.d[1]\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline poly8x8_t __attribute__ ((__always_inline__))\n-vget_high_p8 (poly8x16_t a)\n-{\n-  poly8x8_t result;\n-  __asm__ (\"ins %0.d[0], %1.d[1]\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline poly16x4_t __attribute__ ((__always_inline__))\n-vget_high_p16 (poly16x8_t a)\n-{\n-  poly16x4_t result;\n-  __asm__ (\"ins %0.d[0], %1.d[1]\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n-vget_high_s8 (int8x16_t a)\n-{\n-  int8x8_t result;\n-  __asm__ (\"ins %0.d[0], %1.d[1]\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline int16x4_t __attribute__ ((__always_inline__))\n-vget_high_s16 (int16x8_t a)\n-{\n-  int16x4_t result;\n-  __asm__ (\"ins %0.d[0], %1.d[1]\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline int32x2_t __attribute__ ((__always_inline__))\n-vget_high_s32 (int32x4_t a)\n-{\n-  int32x2_t result;\n-  __asm__ (\"ins %0.d[0], %1.d[1]\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline int64x1_t __attribute__ ((__always_inline__))\n-vget_high_s64 (int64x2_t a)\n-{\n-  int64x1_t result;\n-  __asm__ (\"ins %0.d[0], %1.d[1]\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline uint8x8_t __attribute__ ((__always_inline__))\n-vget_high_u8 (uint8x16_t a)\n-{\n-  uint8x8_t result;\n-  __asm__ (\"ins %0.d[0], %1.d[1]\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline uint16x4_t __attribute__ ((__always_inline__))\n-vget_high_u16 (uint16x8_t a)\n-{\n-  uint16x4_t result;\n-  __asm__ (\"ins %0.d[0], %1.d[1]\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline uint32x2_t __attribute__ ((__always_inline__))\n-vget_high_u32 (uint32x4_t a)\n-{\n-  uint32x2_t result;\n-  __asm__ (\"ins %0.d[0], %1.d[1]\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n-__extension__ static __inline uint64x1_t __attribute__ ((__always_inline__))\n-vget_high_u64 (uint64x2_t a)\n-{\n-  uint64x1_t result;\n-  __asm__ (\"ins %0.d[0], %1.d[1]\"\n-           : \"=w\"(result)\n-           : \"w\"(a)\n-           : /* No clobbers */);\n-  return result;\n-}\n-\n __extension__ static __inline int8x8_t __attribute__ ((__always_inline__))\n vhsub_s8 (int8x8_t a, int8x8_t b)\n {"}]}