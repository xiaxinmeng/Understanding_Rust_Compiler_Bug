{"sha": "ce79e7e24acdc83620782dae9b954b1ad2bdb988", "node_id": "C_kwDOANBUbNoAKGNlNzllN2UyNGFjZGM4MzYyMDc4MmRhZTliOTU0YjFhZDJiZGI5ODg", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2021-11-26T08:32:09Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-12-02T16:26:29Z"}, "message": "[Ada] Add pragma Annotate for CodePeer analysis\n\ngcc/ada/\n\n\t* libgnat/s-widthi.adb: Add pragma Annotate.", "tree": {"sha": "da7da021ebea8397b6510e0d0f6bb15ae9f3bd69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da7da021ebea8397b6510e0d0f6bb15ae9f3bd69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce79e7e24acdc83620782dae9b954b1ad2bdb988", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce79e7e24acdc83620782dae9b954b1ad2bdb988", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce79e7e24acdc83620782dae9b954b1ad2bdb988", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce79e7e24acdc83620782dae9b954b1ad2bdb988/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a54dfa801a1cfb387c8c43e7610b11905db505c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a54dfa801a1cfb387c8c43e7610b11905db505c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a54dfa801a1cfb387c8c43e7610b11905db505c"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "e47c8c13f271fdc45a790c445b73792f12ff8254", "filename": "gcc/ada/libgnat/s-widthi.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce79e7e24acdc83620782dae9b954b1ad2bdb988/gcc%2Fada%2Flibgnat%2Fs-widthi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce79e7e24acdc83620782dae9b954b1ad2bdb988/gcc%2Fada%2Flibgnat%2Fs-widthi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-widthi.adb?ref=ce79e7e24acdc83620782dae9b954b1ad2bdb988", "patch": "@@ -163,6 +163,9 @@ begin\n          pragma Loop_Invariant (Pow = Big_10 ** (W - 2));\n          pragma Loop_Invariant (Big (T) = Big (T_Init) / Pow);\n          pragma Loop_Variant (Decreases => T);\n+         pragma Annotate\n+           (CodePeer, False_Positive,\n+            \"validity check\", \"confusion on generated code\");\n       end loop;\n \n       declare"}]}