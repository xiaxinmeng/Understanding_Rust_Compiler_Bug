{"sha": "342cea9509fcfea8b53cfbb4c67ee6a74aff11cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQyY2VhOTUwOWZjZmVhOGI1M2NmYmI0YzY3ZWU2YTc0YWZmMTFjZg==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2002-06-20T14:38:06Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2002-06-20T14:38:06Z"}, "message": "re PR c++/6723 (ICE on source code successfully compiled by previous versions)\n\n\tPR c++/6723\n\t* pt.c (lookup_template_class): Don't build complete argument of\n\tBOUND_TEMPLATE_TEMPLATE_PARM if appeared as a default template\n\targument.\n\n\t* g++.dg/template/ttp4.C: New test.\n\nFrom-SVN: r54831", "tree": {"sha": "d6b6776755002c9694317b9f538c87a867849cb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6b6776755002c9694317b9f538c87a867849cb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/342cea9509fcfea8b53cfbb4c67ee6a74aff11cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/342cea9509fcfea8b53cfbb4c67ee6a74aff11cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/342cea9509fcfea8b53cfbb4c67ee6a74aff11cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/342cea9509fcfea8b53cfbb4c67ee6a74aff11cf/comments", "author": null, "committer": null, "parents": [{"sha": "5bc93be506e50bb4fdb79692cd9063c880c96601", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bc93be506e50bb4fdb79692cd9063c880c96601", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bc93be506e50bb4fdb79692cd9063c880c96601"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "b570cc32ee701cd74e35737c83b69e9a6eeec257", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/342cea9509fcfea8b53cfbb4c67ee6a74aff11cf/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/342cea9509fcfea8b53cfbb4c67ee6a74aff11cf/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=342cea9509fcfea8b53cfbb4c67ee6a74aff11cf", "patch": "@@ -1,3 +1,10 @@\n+2002-06-20  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/6723\n+\t* pt.c (lookup_template_class): Don't build complete argument of\n+\tBOUND_TEMPLATE_TEMPLATE_PARM if appeared as a default template\n+\targument.\n+\n 2002-06-19  Akim Demaille  <akim@epita.fr>\n \n \t* parse.y (TYPENAME): Rename as tTYPENAME to avoid the clash with"}, {"sha": "c10012247dc762aec0f66038099a003d26e99831", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/342cea9509fcfea8b53cfbb4c67ee6a74aff11cf/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/342cea9509fcfea8b53cfbb4c67ee6a74aff11cf/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=342cea9509fcfea8b53cfbb4c67ee6a74aff11cf", "patch": "@@ -3967,10 +3967,16 @@ lookup_template_class (d1, arglist, in_decl, context, entering_scope, complain)\n \t The template parameter level of T and U are one level larger than \n \t of TT.  To proper process the default argument of U, say when an \n \t instantiation `TT<int>' is seen, we need to build the full\n-\t arguments containing {int} as the innermost level.  Outer levels\n-\t can be obtained from `current_template_args ()'.  */\n+\t arguments containing {int} as the innermost level.  Outer levels,\n+\t available when not appearing as default template argument, can be\n+\t obtained from `current_template_args ()'.\n \n-      if (processing_template_decl)\n+\t Suppose that TT is later substituted with std::vector.  The above\n+\t instantiation is `TT<int, std::allocator<T> >' with TT at\n+\t level 1, and T at level 2, while the template arguments at level 1\n+\t becomes {std::vector} and the inner level 2 is {int}.  */\n+\n+      if (current_template_parms)\n \targlist = add_to_template_args (current_template_args (), arglist);\n \n       arglist2 = coerce_template_parms (parmlist, arglist, template,"}, {"sha": "e2e879984c7ae3d52ed8a3689fe94400ddc9ab72", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/342cea9509fcfea8b53cfbb4c67ee6a74aff11cf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/342cea9509fcfea8b53cfbb4c67ee6a74aff11cf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=342cea9509fcfea8b53cfbb4c67ee6a74aff11cf", "patch": "@@ -1,3 +1,7 @@\n+2002-06-20  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\t* g++.dg/template/ttp4.C: New test.\n+\n 2002-06-19  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.dg/opt/vt1.C: Fix regexp."}, {"sha": "4dff70103467ee3fae4688bbdcc1e39c8de739b1", "filename": "gcc/testsuite/g++.dg/template/ttp4.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/342cea9509fcfea8b53cfbb4c67ee6a74aff11cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/342cea9509fcfea8b53cfbb4c67ee6a74aff11cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp4.C?ref=342cea9509fcfea8b53cfbb4c67ee6a74aff11cf", "patch": "@@ -0,0 +1,11 @@\n+// { dg-do compile }\n+// Origin: Ewgenij Gawrilow <gawrilow@math.tu-berlin.de>\n+\n+// PR c++/6723\n+// ICE when default template argument contains instantiation of\n+// template template parameter.\n+\n+template <typename A, typename B,\n+\t  template <typename,typename> class Predicate,\n+\t  bool _matches=Predicate<A,B>::answer>\n+struct helper { };"}]}