{"sha": "484a4c96a291afbc7df2e077d734459c10387891", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg0YTRjOTZhMjkxYWZiYzdkZjJlMDc3ZDczNDQ1OWMxMDM4Nzg5MQ==", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2020-05-20T16:56:00Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T21:13:14Z"}, "message": "Don't continue to compilation to GIMPLE phase if we saw errors", "tree": {"sha": "8f857aff01575e87057716ad77c9df6a62c8a286", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f857aff01575e87057716ad77c9df6a62c8a286"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/484a4c96a291afbc7df2e077d734459c10387891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/484a4c96a291afbc7df2e077d734459c10387891", "html_url": "https://github.com/Rust-GCC/gccrs/commit/484a4c96a291afbc7df2e077d734459c10387891", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/484a4c96a291afbc7df2e077d734459c10387891/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb00023bcb0bc71ae877626400e6039ae5876920", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb00023bcb0bc71ae877626400e6039ae5876920", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb00023bcb0bc71ae877626400e6039ae5876920"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "4308ae3a03db78960261cf5302b9c81ed56efdcd", "filename": "gcc/rust/rust-session-manager.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/484a4c96a291afbc7df2e077d734459c10387891/gcc%2Frust%2Frust-session-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/484a4c96a291afbc7df2e077d734459c10387891/gcc%2Frust%2Frust-session-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-session-manager.cc?ref=484a4c96a291afbc7df2e077d734459c10387891", "patch": "@@ -1,5 +1,6 @@\n #include \"rust-session-manager.h\"\n \n+#include \"rust-diagnostics.h\"\n #include \"diagnostic.h\"\n #include \"input.h\"\n \n@@ -495,6 +496,9 @@ Session::parse_file (const char *filename)\n       return;\n     }\n \n+  if (saw_errors ())\n+    return;\n+\n   // do compile\n   Compile::Compilation::Compile (parsed_crate, backend);\n }"}]}