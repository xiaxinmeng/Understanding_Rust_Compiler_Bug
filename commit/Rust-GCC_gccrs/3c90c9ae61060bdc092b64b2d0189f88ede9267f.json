{"sha": "3c90c9ae61060bdc092b64b2d0189f88ede9267f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M5MGM5YWU2MTA2MGJkYzA5MmI2NGIyZDAxODlmODhlZGU5MjY3Zg==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-02-20T14:15:35Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-02-20T14:15:35Z"}, "message": "trans-stmt.c (gfc_trans_where_assign): Remove code to handle traversing a linked list of MASKs.\n\n\n\t* trans-stmt.c (gfc_trans_where_assign): Remove code to handle\n\ttraversing a linked list of MASKs.  The MASK is now always a\n\tsingle element requiring no ANDing during the assignment.\n\nFrom-SVN: r111301", "tree": {"sha": "ea5fe3394aa41b27c51e0729a63820918522c5da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea5fe3394aa41b27c51e0729a63820918522c5da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c90c9ae61060bdc092b64b2d0189f88ede9267f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c90c9ae61060bdc092b64b2d0189f88ede9267f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c90c9ae61060bdc092b64b2d0189f88ede9267f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c90c9ae61060bdc092b64b2d0189f88ede9267f/comments", "author": null, "committer": null, "parents": [{"sha": "a6c550f98551764dab0f1d5492c993fa94426688", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c550f98551764dab0f1d5492c993fa94426688", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6c550f98551764dab0f1d5492c993fa94426688"}], "stats": {"total": 37, "additions": 10, "deletions": 27}, "files": [{"sha": "885cdee39f006fdaf3be03213aaa41a05c09eaa2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c90c9ae61060bdc092b64b2d0189f88ede9267f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c90c9ae61060bdc092b64b2d0189f88ede9267f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3c90c9ae61060bdc092b64b2d0189f88ede9267f", "patch": "@@ -1,3 +1,9 @@\n+2006-02-20  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* trans-stmt.c (gfc_trans_where_assign): Remove code to handle\n+\ttraversing a linked list of MASKs.  The MASK is now always a\n+\tsingle element requiring no ANDing during the assignment.\n+\n 2006-02-19  Thomas Koenig  <Thomas.Koenig@online.de>\n \n         * gfortran.texi:  Document environment variables which"}, {"sha": "2ee881a165288b99acd30cedcb5b9d2ba6896fa5", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 4, "deletions": 27, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c90c9ae61060bdc092b64b2d0189f88ede9267f/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c90c9ae61060bdc092b64b2d0189f88ede9267f/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=3c90c9ae61060bdc092b64b2d0189f88ede9267f", "patch": "@@ -2740,7 +2740,7 @@ gfc_trans_where_assign (gfc_expr *expr1, gfc_expr *expr2, tree mask,\n   tree tmp;\n   stmtblock_t block;\n   stmtblock_t body;\n-  tree index, maskexpr, tmp1;\n+  tree index, maskexpr;\n \n #if 0\n   /* TODO: handle this special case.\n@@ -2835,21 +2835,10 @@ gfc_trans_where_assign (gfc_expr *expr1, gfc_expr *expr2, tree mask,\n   else\n     gfc_conv_expr (&lse, expr1);\n \n-  /* Form the mask expression according to the mask tree list.  */\n+  /* Form the mask expression according to the mask.  */\n   index = count1;\n-  tmp = mask;\n-  if (tmp != NULL)\n-    maskexpr = gfc_build_array_ref (tmp, index);\n-  else\n-    maskexpr = NULL;\n+  maskexpr = gfc_build_array_ref (mask, index);\n \n-  tmp = TREE_CHAIN (tmp);\n-  while (tmp)\n-    {\n-      tmp1 = gfc_build_array_ref (tmp, index);\n-      maskexpr = build2 (TRUTH_AND_EXPR, TREE_TYPE (tmp1), maskexpr, tmp1);\n-      tmp = TREE_CHAIN (tmp);\n-    }\n   /* Use the scalar assignment as is.  */\n   tmp = gfc_trans_scalar_assign (&lse, &rse, expr1->ts.type);\n   tmp = build3_v (COND_EXPR, maskexpr, tmp, build_empty_stmt ());\n@@ -2898,20 +2887,8 @@ gfc_trans_where_assign (gfc_expr *expr1, gfc_expr *expr2, tree mask,\n \n           /* Form the mask expression according to the mask tree list.  */\n           index = count2;\n-          tmp = mask;\n-          if (tmp != NULL)\n-            maskexpr = gfc_build_array_ref (tmp, index);\n-          else\n-            maskexpr = NULL;\n+          maskexpr = gfc_build_array_ref (mask, index);\n \n-          tmp = TREE_CHAIN (tmp);\n-          while (tmp)\n-            {\n-              tmp1 = gfc_build_array_ref (tmp, index);\n-              maskexpr = build2 (TRUTH_AND_EXPR, TREE_TYPE (tmp1),\n-\t\t\t\t maskexpr, tmp1);\n-              tmp = TREE_CHAIN (tmp);\n-            }\n           /* Use the scalar assignment as is.  */\n           tmp = gfc_trans_scalar_assign (&lse, &rse, expr1->ts.type);\n           tmp = build3_v (COND_EXPR, maskexpr, tmp, build_empty_stmt ());"}]}