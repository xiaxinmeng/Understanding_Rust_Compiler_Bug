{"sha": "ad8040243acd2a909b61b5690f7dac9ae362c945", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ4MDQwMjQzYWNkMmE5MDliNjFiNTY5MGY3ZGFjOWFlMzYyYzk0NQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-01-24T08:48:36Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-01-24T08:48:36Z"}, "message": "Fix false positive for -Walloc-size-larger-than (PR bootstrap/79132).\n\n2017-01-24  Martin Liska  <mliska@suse.cz>\n\n\tPR bootstrap/79132\n\t* tree-ssa-reassoc.c (rewrite_expr_tree_parallel): Insert assert\n\tthat would prevent us to call alloca with -1 as argument.\n\nFrom-SVN: r244857", "tree": {"sha": "00df4f7ef3eaba9b1705026a73f70f522766d990", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00df4f7ef3eaba9b1705026a73f70f522766d990"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad8040243acd2a909b61b5690f7dac9ae362c945", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad8040243acd2a909b61b5690f7dac9ae362c945", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad8040243acd2a909b61b5690f7dac9ae362c945", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad8040243acd2a909b61b5690f7dac9ae362c945/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c3b3e526fd4129731e4fe718a2de8a2ae11e929f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3b3e526fd4129731e4fe718a2de8a2ae11e929f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3b3e526fd4129731e4fe718a2de8a2ae11e929f"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "bec27d3d9921467ade9cbf370ce004f041237cda", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad8040243acd2a909b61b5690f7dac9ae362c945/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad8040243acd2a909b61b5690f7dac9ae362c945/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad8040243acd2a909b61b5690f7dac9ae362c945", "patch": "@@ -1,3 +1,9 @@\n+2017-01-24  Martin Liska  <mliska@suse.cz>\n+\n+\tPR bootstrap/79132\n+\t* tree-ssa-reassoc.c (rewrite_expr_tree_parallel): Insert assert\n+\tthat would prevent us to call alloca with -1 as argument.\n+\n 2017-01-24  Jakub Jelinek  <jakub@redhat.com>\n \n \t* dwarf2out.c (output_compilation_unit_header, output_file_names):"}, {"sha": "4a796f48864075c7d8ca2a7bc0822780be1bfe4c", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad8040243acd2a909b61b5690f7dac9ae362c945/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad8040243acd2a909b61b5690f7dac9ae362c945/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=ad8040243acd2a909b61b5690f7dac9ae362c945", "patch": "@@ -4407,6 +4407,7 @@ rewrite_expr_tree_parallel (gassign *stmt, int width,\n {\n   enum tree_code opcode = gimple_assign_rhs_code (stmt);\n   int op_num = ops.length ();\n+  gcc_assert (op_num > 0);\n   int stmt_num = op_num - 1;\n   gimple **stmts = XALLOCAVEC (gimple *, stmt_num);\n   int op_index = op_num - 1;"}]}