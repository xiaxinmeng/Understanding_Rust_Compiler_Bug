{"sha": "04b32ed7444af274054b00d8bd06f26819c97c65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRiMzJlZDc0NDRhZjI3NDA1NGIwMGQ4YmQwNmYyNjgxOWM5N2M2NQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2015-10-20T10:36:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-20T10:36:00Z"}, "message": "Update targets.\n\nFrom-SVN: r229042", "tree": {"sha": "e4b13be95ff486dee09dc6c8c14fb0795af5105c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4b13be95ff486dee09dc6c8c14fb0795af5105c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04b32ed7444af274054b00d8bd06f26819c97c65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04b32ed7444af274054b00d8bd06f26819c97c65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04b32ed7444af274054b00d8bd06f26819c97c65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04b32ed7444af274054b00d8bd06f26819c97c65/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "14f732114eaf16771c0f3865b678e491838fdc87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14f732114eaf16771c0f3865b678e491838fdc87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14f732114eaf16771c0f3865b678e491838fdc87"}], "stats": {"total": 86, "additions": 79, "deletions": 7}, "files": [{"sha": "927a112082e97c256345e8c952a57405889f9cc7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b32ed7444af274054b00d8bd06f26819c97c65/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b32ed7444af274054b00d8bd06f26819c97c65/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=04b32ed7444af274054b00d8bd06f26819c97c65", "patch": "@@ -1,3 +1,7 @@\n+2015-10-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gcc-interface/Makefile.in: Update targets.\n+\n 2015-10-20  Bob Duff  <duff@adacore.com>\n \n \t* sem_ch13.adb (Analyze_One_Aspect): Avoid"}, {"sha": "18ce6d5c244b9af2a1aa34f3368be74c44777658", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 75, "deletions": 7, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04b32ed7444af274054b00d8bd06f26819c97c65/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04b32ed7444af274054b00d8bd06f26819c97c65/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=04b32ed7444af274054b00d8bd06f26819c97c65", "patch": "@@ -885,8 +885,13 @@ ifeq ($(strip $(filter-out %86 wrs vxworks vxworks7,$(target_cpu) $(target_vendo\n      SVX=system-vxworks7\n   else\n      SVX=system-vxworks\n+     EH_MECHANISM=-gcc\n   endif\n \n+  EXTRA_LIBGNAT_OBJS+=sigtramp-vxworks.o sigtramp-vxworks-vxsim.o\n+  EXTRA_LIBGNAT_OBJS+=init-vxsim.o\n+  EXTRA_LIBGNAT_SRCS+=sigtramp.h sigtramp-vxworks-target.inc\n+\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n   i-vxwork.ads<i-vxwork-x86.ads \\\n@@ -923,13 +928,49 @@ ifeq ($(strip $(filter-out %86 wrs vxworks vxworks7,$(target_cpu) $(target_vendo\n     s-tfsetr.adb<s-tfsetr-vxworks.adb\n   endif\n \n+  # The CPU setting for VxSim varies with the\n+  # host (Windows or Linux)\n+  # target (VxWorks6 or VxWorks7)\n+  # runtime (rtp or kernel)\n+  # -------------------------------------------------------------\n+  #\t\t\t\t\tvx6\t\tvx7\n+  # Windows (host_os = mingw32)\n+  #\tkernel\t\t\t\tSIMNT\t\tSIMNT\n+  #\trtp\t\t\t\tSIMPENTIUM\tSIMNT\n+  # Linux (host_os = linux-gnu)\n+  #\tkernel\t\t\t\tSIMLINUX\tSIMLINUX\n+  #\trtp\t\t\t\tSIMPENTIUM\tSIMLINUX\n+  # -------------------------------------------------------------\n+  # It is overridden by VXSIM_CPU only in files init-vxsim.c and\n+  # sigtramp-vxworks-vxsim.c which contain functions determined at\n+  # runtime to be called if a program is running on VxSim vs real hardware\n+  # (due to differences in signal context for unwinding).\n+\n+  VXSIM_CPU =\n+\n+  ifeq ($(strip $(filter-out vxworks rtp rtp-smp,$(target_os) $(THREAD_KIND))),)\n+      VXSIM_CPU = SIMPENTIUM\n+  else\n+    ifeq ($(strip $(filter-out kernel kernel-smp rtp rtp-smp,$(THREAD_KIND))),)\n+      ifeq ($(strip $(filter-out linux%,$(host_os))),)\n+        # Linux\n+        VXSIM_CPU = SIMLINUX\n+      else\n+        # Windows\n+        VXSIM_CPU = SIMNT\n+      endif\n+    endif\n+  endif\n+\n+  GNATLIBCFLAGS_FOR_C := $(GNATLIBCFLAGS_FOR_C) -D__VXSIM_CPU__=$(VXSIM_CPU)\n+\n   ifeq ($(strip $(filter-out rtp,$(THREAD_KIND))),)\n+    # Runtime N/A for VxWorks7 (non-existent system file)\n     LIBGNAT_TARGET_PAIRS += \\\n     s-vxwext.ads<s-vxwext-rtp.ads \\\n     s-vxwext.adb<s-vxwext-rtp.adb \\\n     s-tpopsp.adb<s-tpopsp-vxworks-rtp.adb \\\n-    system.ads<system-vxworks-x86-rtp.ads\n-\n+    system.ads<$(SVX)-x86-rtp.ads\n   else\n     ifeq ($(strip $(filter-out rtp-smp, $(THREAD_KIND))),)\n       LIBGNAT_TARGET_PAIRS += \\\n@@ -949,17 +990,19 @@ ifeq ($(strip $(filter-out %86 wrs vxworks vxworks7,$(target_cpu) $(target_vendo\n         s-vxwext.ads<s-vxwext-kernel.ads \\\n         s-vxwext.adb<s-vxwext-kernel-smp.adb \\\n         system.ads<$(SVX)-x86-kernel.ads\n+\n         EXTRA_LIBGNAT_OBJS+=affinity.o\n       else\n         LIBGNAT_TARGET_PAIRS += \\\n         s-interr.adb<s-interr-hwint.adb \\\n         s-tpopsp.adb<s-tpopsp-vxworks.adb\n \n         ifeq ($(strip $(filter-out kernel,$(THREAD_KIND))),)\n+          # Runtime N/A for VxWorks7 (non-existent system file)\n           LIBGNAT_TARGET_PAIRS += \\\n           s-vxwext.ads<s-vxwext-kernel.ads \\\n           s-vxwext.adb<s-vxwext-kernel.adb \\\n-          system.ads<system-vxworks-x86-kernel.ads\n+          system.ads<$(SVX)-x86-kernel.ads\n         else\n           LIBGNAT_TARGET_PAIRS += \\\n           system.ads<system-vxworks-x86.ads\n@@ -974,6 +1017,7 @@ ifeq ($(strip $(filter-out %86 wrs vxworks vxworks7,$(target_cpu) $(target_vendo\n   EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n \n   ifneq ($(strip $(filter-out vxworks7%, $(target_os))),)\n+    GCC_SPEC_FILES+=vxworks-crtbe-link.spec\n     GCC_SPEC_FILES+=vxworks-x86-link.spec\n     GCC_SPEC_FILES+=vxworks-cert-x86-link.spec\n     GCC_SPEC_FILES+=vxworks-smp-x86-link.spec\n@@ -2381,6 +2425,17 @@ ifeq ($(strip $(filter-out darwin%,$(target_os))),)\n       system.ads<system-darwin-arm.ads\n   endif\n \n+  ifeq ($(strip $(filter-out arm64 aarch64,$(target_cpu))),)\n+    LIBGNAT_TARGET_PAIRS += \\\n+      s-intman.adb<s-intman-susv3.adb \\\n+      s-osprim.adb<s-osprim-darwin.adb \\\n+      $(ATOMICS_TARGET_PAIRS) \\\n+      $(ATOMICS_BUILTINS_TARGET_PAIRS)\n+\n+    LIBGNAT_TARGET_PAIRS += \\\n+      system.ads<system-darwin-arm64.ads\n+  endif\n+\n   TOOLS_TARGET_PAIRS =  \\\n     mlib-tgt-specific.adb<mlib-tgt-specific-darwin.adb \\\n     indepsw.adb<indepsw-darwin.adb\n@@ -2413,6 +2468,14 @@ ifeq ($(filter a-except%,$(LIBGNAT_TARGET_PAIRS)),)\n     a-except.adb<a-except-2005.adb\n endif\n \n+# Configuration of host tools\n+\n+# Under linux, host tools need to be linked with -ldl\n+\n+ifeq ($(strip $(filter-out linux%,$(host_os))),)\n+   TOOLS1_LIBS=-ldl\n+endif\n+\n # LIBGNAT_SRCS is the list of all C files (including headers) of the runtime\n # library.  LIBGNAT_OBJS is the list of object files for libgnat.\n # thread.c is special as put into GNATRTL_TASKING_OBJS by Makefile.rtl\n@@ -2618,10 +2681,10 @@ gnatlink-re: ../stamp-tools gnatmake-re\n \n # Likewise for the tools\n ../../gnatmake$(exeext): $(P) b_gnatm.o $(GNATMAKE_OBJS)\n-\t+$(GCC_LINK) $(ALL_CFLAGS) -o $@ b_gnatm.o $(GNATMAKE_OBJS) $(TOOLS_LIBS)\n+\t+$(GCC_LINK) $(ALL_CFLAGS) -o $@ b_gnatm.o $(GNATMAKE_OBJS) $(TOOLS_LIBS) $(TOOLS1_LIBS)\n \n ../../gnatlink$(exeext): $(P) b_gnatl.o $(GNATLINK_OBJS)\n-\t+$(GCC_LINK) $(ALL_CFLAGS) -o $@ b_gnatl.o $(GNATLINK_OBJS) $(TOOLS_LIBS)\n+\t+$(GCC_LINK) $(ALL_CFLAGS) -o $@ b_gnatl.o $(GNATLINK_OBJS) $(TOOLS_LIBS) $(TOOLS1_LIBS)\n \n ../stamp-gnatlib-$(RTSDIR):\n \t@if [ ! -f stamp-gnatlib-$(RTSDIR) ] ; \\\n@@ -3071,8 +3134,9 @@ mkdir.o   : mkdir.c\n socket.o  : socket.c gsocket.h\n sysdep.o  : sysdep.c\n raise.o   : raise.c raise.h\n-sigtramp-armdroid.o : sigtramp-armdroid.c sigtramp.h\n-sigtramp-vxworks.o : sigtramp-vxworks.c sigtramp.h\n+sigtramp-armdroid.o      : sigtramp-armdroid.c sigtramp.h\n+sigtramp-vxworks.o       : sigtramp-vxworks.c sigtramp.h sigtramp-vxworks-target.inc\n+sigtramp-vxworks-vxsim.o : sigtramp-vxworks-vxsim.c sigtramp.h sigtramp-vxworks-target.inc\n terminals.o : terminals.c\n vx_stack_info.o : vx_stack_info.c\n \n@@ -3089,6 +3153,10 @@ init.o    : init.c adaint.h raise.h\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n \t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n+init-vxsim.o : init-vxsim.c\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n+\t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n+\n initialize.o : initialize.c raise.h\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ADA_CFLAGS) \\\n \t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)"}]}