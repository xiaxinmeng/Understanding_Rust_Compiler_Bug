{"sha": "d4e8d1dc070abaff22405d47652b2c1da435ef51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRlOGQxZGMwNzBhYmFmZjIyNDA1ZDQ3NjUyYjJjMWRhNDM1ZWY1MQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1999-06-18T06:01:42Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1999-06-18T06:01:42Z"}, "message": "move gcc changes to gcc subdirectory\n\nFrom-SVN: r27588", "tree": {"sha": "3b0eab6a89e2ba69b11866bece527ab79e3ae8f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b0eab6a89e2ba69b11866bece527ab79e3ae8f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4e8d1dc070abaff22405d47652b2c1da435ef51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4e8d1dc070abaff22405d47652b2c1da435ef51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4e8d1dc070abaff22405d47652b2c1da435ef51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4e8d1dc070abaff22405d47652b2c1da435ef51/comments", "author": null, "committer": null, "parents": [{"sha": "e0cb3930caad81618f19381e352858163b4ff360", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0cb3930caad81618f19381e352858163b4ff360", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0cb3930caad81618f19381e352858163b4ff360"}], "stats": {"total": 86, "additions": 43, "deletions": 43}, "files": [{"sha": "a9fa0f985f7302b826cefbeaca876af0e4fafbbb", "filename": "ChangeLog", "status": "modified", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4e8d1dc070abaff22405d47652b2c1da435ef51/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4e8d1dc070abaff22405d47652b2c1da435ef51/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=d4e8d1dc070abaff22405d47652b2c1da435ef51", "patch": "@@ -1,46 +1,3 @@\n-Thu Jun 17 15:06:10 PDT 1999 Don Lindsay  <dlindsay@cygnus.com>\n-\n-        * added support for -mpcrel (PC relative addressing for m68k) \n-\tbased on code done by Michael Tiemann  <tiemann@axon.cygnus.com>.\n-\t* invoke.texi (m68000 options): Add documentation for -mpcrel flag.\n-\t* m68k.c (print_operand_address): Handle 32-bit PIC case.\n-\t(comments for general_src_operand): Add some explanation\n-\tabout EXTRA_CONSTRAINTS.\n-\t(OVERRIDE_OPTIONS): Enable -fPIC in combination with -mpcrel.\n-\t* m68kelf.h (OVERRIDE_OPTIONS): Ditto.\n-\t(LEGITIMATE_PIC_OPERAND_P): Fix typo.\n-\t(LEGITIMATE_PIC_OPERAND_P): Re-derive from m68k.h case.\n-\t* m68k.h (LEGITIMATE_PIC_OPERAND_P): Fix delete-o.\n-\t(INDIRECTABLE_1_ADDRESS): Delete spurious '/' at end of macro.\n-\t(OVERRIDE_OPTIONS): Change behavior so that -mpcrel implies -fpic\n-\tif not already set.\n-\t(OVERRIDE_OPTIONS): Merge in changes from m68k.h.\n-\t* m68k.h (TARGET_PCREL): New target flag.\n-\t(TARGET_SWITCHES): Add \"pcrel\" as a recognized switch.\n-\t(OVERRIDE_OPTIONS): Add checks for -mpcrel.\n-\t(LEGITIMATE_PIC_OPERAND_P): Don't normally accept anything that\n-\tcontains a SYMBOL_REF.  Relax this constraint during reload, since\n-\twe want to use the predicates, not reload's built-in concept of a\n-\tvalid memory address, to control what insns need reloading.\n-\t(EXTRA_CONSTRAINT): Define constraints to accept pc-relative\n-\toperands (essentially 'g', 'm', and 's' under normal circumstances).\n-\t* m68k.c (print_operand): Cause printing of pc-relative addresses\n- \tto include pc register.\n-\t(print_operand_address): Ditto.\n-\t(general_src_operand): Accept operands that are not only\n-\tgeneral_operands, but are also valid when used as a pc-relative\n-\tsource.\n-\t(nonimmediate_src_operand): Similar, for nonimmediate_operands.\n-\t(memory_src_operand): Similar, for memory_operands.\n-\t(pcrel_address): New predicate to accept the special case of a\n-\tpc-relative address.\n-\t* m68k.md (many patterns): Rewrite common SImode, HImode, and\n-\tQImode insns to accept *_src_operand instead of *_operand where\n-\tpc-relative operands can fit.  For example, a pc-relative operand\n-\tcan be used as a memory source operand for addsi3, but not as a\n-\tmemory destination.\n-\t* hp320.h linux.h m68kv4.h (LEGITIMATE_PIC_OPERAND_P) as in m68k.h.\n-\n Sun May 30 16:03:16 1999  Cort Dougan  <cort@cs.nmt.edu>\n \n \t* config.guess (ppc-*-linux-gnu): Also use ld emul elf32ppclinux."}, {"sha": "16a69b711a77567f7ecafa499205a2153324cb22", "filename": "gcc/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4e8d1dc070abaff22405d47652b2c1da435ef51/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4e8d1dc070abaff22405d47652b2c1da435ef51/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d4e8d1dc070abaff22405d47652b2c1da435ef51", "patch": "@@ -1,3 +1,46 @@\n+Thu Jun 17 15:06:10 PDT 1999 Don Lindsay  <dlindsay@cygnus.com>\n+\n+        * added support for -mpcrel (PC relative addressing for m68k) \n+\tbased on code done by Michael Tiemann  <tiemann@axon.cygnus.com>.\n+\t* invoke.texi (m68000 options): Add documentation for -mpcrel flag.\n+\t* m68k.c (print_operand_address): Handle 32-bit PIC case.\n+\t(comments for general_src_operand): Add some explanation\n+\tabout EXTRA_CONSTRAINTS.\n+\t(OVERRIDE_OPTIONS): Enable -fPIC in combination with -mpcrel.\n+\t* m68kelf.h (OVERRIDE_OPTIONS): Ditto.\n+\t(LEGITIMATE_PIC_OPERAND_P): Fix typo.\n+\t(LEGITIMATE_PIC_OPERAND_P): Re-derive from m68k.h case.\n+\t* m68k.h (LEGITIMATE_PIC_OPERAND_P): Fix delete-o.\n+\t(INDIRECTABLE_1_ADDRESS): Delete spurious '/' at end of macro.\n+\t(OVERRIDE_OPTIONS): Change behavior so that -mpcrel implies -fpic\n+\tif not already set.\n+\t(OVERRIDE_OPTIONS): Merge in changes from m68k.h.\n+\t* m68k.h (TARGET_PCREL): New target flag.\n+\t(TARGET_SWITCHES): Add \"pcrel\" as a recognized switch.\n+\t(OVERRIDE_OPTIONS): Add checks for -mpcrel.\n+\t(LEGITIMATE_PIC_OPERAND_P): Don't normally accept anything that\n+\tcontains a SYMBOL_REF.  Relax this constraint during reload, since\n+\twe want to use the predicates, not reload's built-in concept of a\n+\tvalid memory address, to control what insns need reloading.\n+\t(EXTRA_CONSTRAINT): Define constraints to accept pc-relative\n+\toperands (essentially 'g', 'm', and 's' under normal circumstances).\n+\t* m68k.c (print_operand): Cause printing of pc-relative addresses\n+ \tto include pc register.\n+\t(print_operand_address): Ditto.\n+\t(general_src_operand): Accept operands that are not only\n+\tgeneral_operands, but are also valid when used as a pc-relative\n+\tsource.\n+\t(nonimmediate_src_operand): Similar, for nonimmediate_operands.\n+\t(memory_src_operand): Similar, for memory_operands.\n+\t(pcrel_address): New predicate to accept the special case of a\n+\tpc-relative address.\n+\t* m68k.md (many patterns): Rewrite common SImode, HImode, and\n+\tQImode insns to accept *_src_operand instead of *_operand where\n+\tpc-relative operands can fit.  For example, a pc-relative operand\n+\tcan be used as a memory source operand for addsi3, but not as a\n+\tmemory destination.\n+\t* hp320.h linux.h m68kv4.h (LEGITIMATE_PIC_OPERAND_P) as in m68k.h.\n+\n Fri Jun 18 09:11:07 1999  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/arm/telf.h (ASM_OUTPUT_DEF_FROM_DECLS): New Marco: USe"}]}