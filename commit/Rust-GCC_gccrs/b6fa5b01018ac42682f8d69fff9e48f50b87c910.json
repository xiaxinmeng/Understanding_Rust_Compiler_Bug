{"sha": "b6fa5b01018ac42682f8d69fff9e48f50b87c910", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZmYTViMDEwMThhYzQyNjgyZjhkNjlmZmY5ZTQ4ZjUwYjg3YzkxMA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2009-04-19T13:27:28Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2009-04-19T13:27:28Z"}, "message": "cgraph.c (cgraph_create_edge, [...]): Set proper cfun.\n\n\t* cgraph.c (cgraph_create_edge, cgraph_set_call_stmt): Set proper cfun.\n\t(dump_cgraph_node): Dump can throw external flag.\n\t* ipa-pure-const.c (propagate): Fix propagation of nothrow flags.\n\nFrom-SVN: r146349", "tree": {"sha": "3de074636f11edaf0156c7129cfe2c981b79b950", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3de074636f11edaf0156c7129cfe2c981b79b950"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6fa5b01018ac42682f8d69fff9e48f50b87c910", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6fa5b01018ac42682f8d69fff9e48f50b87c910", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6fa5b01018ac42682f8d69fff9e48f50b87c910", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6fa5b01018ac42682f8d69fff9e48f50b87c910/comments", "author": null, "committer": null, "parents": [{"sha": "9b074dc6c18b76ce0afb1abea30de3547d020daa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b074dc6c18b76ce0afb1abea30de3547d020daa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b074dc6c18b76ce0afb1abea30de3547d020daa"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "1343784fde1c2f7f9e1d805ffd1fc182eea6438c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6fa5b01018ac42682f8d69fff9e48f50b87c910/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6fa5b01018ac42682f8d69fff9e48f50b87c910/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6fa5b01018ac42682f8d69fff9e48f50b87c910", "patch": "@@ -1,3 +1,9 @@\n+2009-04-19  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraph.c (cgraph_create_edge, cgraph_set_call_stmt): Set proper cfun.\n+\t(dump_cgraph_node): Dump can throw external flag.\n+\t* ipa-pure-const.c (propagate): Fix propagation of nothrow flags.\n+\n 2009-04-19  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR c/32061"}, {"sha": "ce696e211b65ad9387ad314307ce74cbef0913fd", "filename": "gcc/cgraph.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6fa5b01018ac42682f8d69fff9e48f50b87c910/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6fa5b01018ac42682f8d69fff9e48f50b87c910/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=b6fa5b01018ac42682f8d69fff9e48f50b87c910", "patch": "@@ -640,7 +640,9 @@ cgraph_set_call_stmt (struct cgraph_edge *e, gimple new_stmt)\n \t\t\t\t htab_hash_pointer (e->call_stmt));\n     }\n   e->call_stmt = new_stmt;\n+  push_cfun (DECL_STRUCT_FUNCTION (e->caller->decl));\n   e->can_throw_external = stmt_can_throw_external (new_stmt);\n+  pop_cfun ();\n   if (e->caller->call_site_hash)\n     {\n       void **slot;\n@@ -705,7 +707,9 @@ cgraph_create_edge (struct cgraph_node *caller, struct cgraph_node *callee,\n   edge->caller = caller;\n   edge->callee = callee;\n   edge->call_stmt = call_stmt;\n+  push_cfun (DECL_STRUCT_FUNCTION (caller->decl));\n   edge->can_throw_external = stmt_can_throw_external (call_stmt);\n+  pop_cfun ();\n   edge->prev_caller = NULL;\n   edge->next_caller = callee->callers;\n   if (callee->callers)\n@@ -1238,6 +1242,8 @@ dump_cgraph_node (FILE *f, struct cgraph_node *node)\n \t\t edge->frequency / (double)CGRAPH_FREQ_BASE);\n       if (edge->loop_nest)\n \tfprintf (f, \"(nested in %i loops) \", edge->loop_nest);\n+      if (edge->can_throw_external)\n+\tfprintf(f, \"(can throw external) \");\n     }\n   fprintf (f, \"\\n\");\n }"}, {"sha": "c938b0da1c6af55f17f5db874a96dc004ddadc06", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6fa5b01018ac42682f8d69fff9e48f50b87c910/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6fa5b01018ac42682f8d69fff9e48f50b87c910/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=b6fa5b01018ac42682f8d69fff9e48f50b87c910", "patch": "@@ -830,6 +830,7 @@ propagate (void)\n       w = node;\n       while (w)\n \t{\n+\t  funct_state w_l = get_function_state (w);\n \t  if (!can_throw && !TREE_NOTHROW (w->decl))\n \t    {\n \t      struct cgraph_edge *e;\n@@ -840,6 +841,8 @@ propagate (void)\n \t\tfprintf (dump_file, \"Function found to be nothrow: %s\\n\",  \n \t\t\t cgraph_node_name (w));\n \t    }\n+\t  else if (can_throw && !TREE_NOTHROW (w->decl))\n+\t    w_l->can_throw = true;\n \t  w_info = (struct ipa_dfs_info *) w->aux;\n \t  w = w_info->next_cycle;\n \t}"}]}