{"sha": "c3d6d603956ecd20567924888bae55af4cf99c6a", "node_id": "C_kwDOANBUbNoAKGMzZDZkNjAzOTU2ZWNkMjA1Njc5MjQ4ODhiYWU1NWFmNGNmOTljNmE", "commit": {"author": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-07-28T13:57:46Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-10-06T09:22:48Z"}, "message": "ada: Add C declarations for Storage Model support\n\nAdd needed C declarations for Storage Model support in gigi.\n\ngcc/ada/\n\n\t* fe.h (Has_Storage_Model_Type_Aspect)\n\t(Has_Designated_Storage_Model_Aspect, Storage_Model_Object)\n\t(Storage_Model_Copy_From, Storage_Model_Copy_To): Add\n\tdeclarations.\n\t* sem_util.ads: Add WARNING markers for functions for which a new\n\tC declaration has been added in fe.h", "tree": {"sha": "e4e0f654eebcd32258f816b35817a0a1f95af401", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4e0f654eebcd32258f816b35817a0a1f95af401"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3d6d603956ecd20567924888bae55af4cf99c6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3d6d603956ecd20567924888bae55af4cf99c6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3d6d603956ecd20567924888bae55af4cf99c6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3d6d603956ecd20567924888bae55af4cf99c6a/comments", "author": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1006d33b330c11952156dd41dae3a3bb2076a76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1006d33b330c11952156dd41dae3a3bb2076a76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1006d33b330c11952156dd41dae3a3bb2076a76"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "79a1b58836ec3b1e9375656dd8f07e22e824111b", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3d6d603956ecd20567924888bae55af4cf99c6a/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3d6d603956ecd20567924888bae55af4cf99c6a/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=c3d6d603956ecd20567924888bae55af4cf99c6a", "patch": "@@ -304,17 +304,27 @@ extern Boolean Compile_Time_Known_Value\t(Node_Id);\n \n #define Defining_Entity\t\t\tsem_util__defining_entity\n #define First_Actual\t\t\tsem_util__first_actual\n+#define Has_Storage_Model_Type_Aspect\tsem_util__storage_model_support__has_storage_model_type_aspect\n+#define Has_Designated_Storage_Model_Aspect sem_util__storage_model_support__has_designated_storage_model_aspect\n #define Is_Expression_Function\t\tsem_util__is_expression_function\n #define Is_Variable_Size_Record \tsem_util__is_variable_size_record\n #define Needs_Secondary_Stack\t\tsem_util__needs_secondary_stack\n #define Next_Actual\t\t\tsem_util__next_actual\n+#define Storage_Model_Object \t\tsem_util__storage_model_support__storage_model_object\n+#define Storage_Model_Copy_From \tsem_util__storage_model_support__storage_model_copy_from\n+#define Storage_Model_Copy_To \t\tsem_util__storage_model_support__storage_model_copy_to\n \n extern Entity_Id Defining_Entity\t\t(Node_Id);\n extern Node_Id First_Actual\t\t\t(Node_Id);\n+extern Boolean Has_Storage_Model_Type_Aspect\t(Entity_Id);\n+extern Boolean Has_Designated_Storage_Model_Aspect (Entity_Id);\n extern Boolean Is_Expression_Function\t\t(Entity_Id);\n extern Boolean Is_Variable_Size_Record \t\t(Entity_Id);\n extern Boolean Needs_Secondary_Stack\t\t(Entity_Id);\n extern Node_Id Next_Actual\t\t\t(Node_Id);\n+extern Entity_Id Storage_Model_Object\t\t(Entity_Id);\n+extern Entity_Id Storage_Model_Copy_From\t(Entity_Id);\n+extern Entity_Id Storage_Model_Copy_To \t\t(Entity_Id);\n \n /* sinfo: */\n "}, {"sha": "c23d358e2fbdfb86f8557762d9b36b8c007aeb7f", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3d6d603956ecd20567924888bae55af4cf99c6a/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3d6d603956ecd20567924888bae55af4cf99c6a/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=c3d6d603956ecd20567924888bae55af4cf99c6a", "patch": "@@ -3655,17 +3655,23 @@ package Sem_Util is\n       function Has_Storage_Model_Type_Aspect (Typ : Entity_Id) return Boolean;\n       --  Returns True iff Typ specifies aspect Storage_Model_Type\n \n+      --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n       function Has_Designated_Storage_Model_Aspect\n         (Typ : Entity_Id) return Boolean;\n       --  Returns True iff Typ specifies aspect Designated_Storage_Model\n \n+      --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n       function Storage_Model_Object (Typ : Entity_Id) return Entity_Id;\n       --  Given an access type Typ with aspect Designated_Storage_Model,\n       --  returns the storage-model object associated with that type.\n       --  The object Entity_Ids returned by this function can be passed\n       --  other functions declared in this interface to retrieve operations\n       --  associated with Storage_Model_Type aspect of the object's type.\n \n+      --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n       function Storage_Model_Type (Obj : Entity_Id) return Entity_Id;\n       --  Given an object Obj of a type specifying aspect Storage_Model_Type,\n       --  returns that type.\n@@ -3715,12 +3721,16 @@ package Sem_Util is\n       --  type, returns the procedure specified for the Copy_From choice in\n       --  that aspect; returns Empty if the procedure isn't specified.\n \n+      --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n       function Storage_Model_Copy_To\n         (SM_Obj_Or_Type : Entity_Id) return Entity_Id;\n       --  Given a type with aspect Storage_Model_Type or an object of such a\n       --  type, returns the procedure specified for the Copy_To choice in that\n       --  aspect; returns Empty if the procedure isn't specified.\n \n+      --  WARNING: There is a matching C declaration of this subprogram in fe.h\n+\n       function Storage_Model_Storage_Size\n         (SM_Obj_Or_Type : Entity_Id) return Entity_Id;\n       --  Given a type with aspect Storage_Model_Type or an object of such a"}]}