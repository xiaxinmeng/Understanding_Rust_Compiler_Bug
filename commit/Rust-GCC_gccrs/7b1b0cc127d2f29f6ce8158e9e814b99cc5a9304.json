{"sha": "7b1b0cc127d2f29f6ce8158e9e814b99cc5a9304", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IxYjBjYzEyN2QyZjI5ZjZjZTgxNThlOWU4MTRiOTljYzVhOTMwNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-01-09T08:25:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-01-09T08:25:13Z"}, "message": "re PR tree-optimization/78997 (ICE on valid code at -O3 on x86_64-linux-gnu: verify_gimple failed)\n\n2017-01-09  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/78997\n\t* tree-vect-slp.c (vect_mask_constant_operand_p): Handle SSA\n\tname condition properly.\n\n\t* gcc.dg/torture/pr78997.c: New testcase.\n\nFrom-SVN: r244218", "tree": {"sha": "1f9367697b31ebd05c7cf3e0388acef6fc45eeec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f9367697b31ebd05c7cf3e0388acef6fc45eeec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b1b0cc127d2f29f6ce8158e9e814b99cc5a9304", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b1b0cc127d2f29f6ce8158e9e814b99cc5a9304", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b1b0cc127d2f29f6ce8158e9e814b99cc5a9304", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b1b0cc127d2f29f6ce8158e9e814b99cc5a9304/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "813b9c0d3a1b95c653bea8db73d7971ac600b68e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/813b9c0d3a1b95c653bea8db73d7971ac600b68e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/813b9c0d3a1b95c653bea8db73d7971ac600b68e"}], "stats": {"total": 122, "additions": 119, "deletions": 3}, "files": [{"sha": "96f3c2e615d272e569d74d65bdda5aabb07efc47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1b0cc127d2f29f6ce8158e9e814b99cc5a9304/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1b0cc127d2f29f6ce8158e9e814b99cc5a9304/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b1b0cc127d2f29f6ce8158e9e814b99cc5a9304", "patch": "@@ -1,3 +1,9 @@\n+2017-01-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/78997\n+\t* tree-vect-slp.c (vect_mask_constant_operand_p): Handle SSA\n+\tname condition properly.\n+\n 2017-01-09  Richard Biener  <rguenther@suse.de>\n \n \tPR debug/79000"}, {"sha": "053d2cf76f18c2e579fb8d55bb2f2d0e62f737cd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1b0cc127d2f29f6ce8158e9e814b99cc5a9304/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1b0cc127d2f29f6ce8158e9e814b99cc5a9304/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7b1b0cc127d2f29f6ce8158e9e814b99cc5a9304", "patch": "@@ -1,3 +1,8 @@\n+2017-01-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/78997\n+\t* gcc.dg/torture/pr78997.c: New testcase.\n+\n 2017-01-09  Richard Biener  <rguenther@suse.de>\n \n \tPR debug/79000"}, {"sha": "d43b97370adc576c16afd697a33b5c14a434364c", "filename": "gcc/testsuite/gcc.dg/torture/pr78997.c", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1b0cc127d2f29f6ce8158e9e814b99cc5a9304/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78997.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1b0cc127d2f29f6ce8158e9e814b99cc5a9304/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78997.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78997.c?ref=7b1b0cc127d2f29f6ce8158e9e814b99cc5a9304", "patch": "@@ -0,0 +1,106 @@\n+/* { dg-do compile } */\n+\n+int printf (const char *, ...);\n+\n+static short f, p, q, s, u, aa, ab, ac;\n+static int b, c, d, e, h, k, l, m, n, o, r, t, v, w, x, y, z, ad, ae, af, ag, ah, ai, aj, ak, al, am, an;\n+int a, ao, ap, aq, ar, g, as, at, au, av, aw, ax, ay;\n+\n+void foo ()\n+{ \n+  int ba[2], i, j, bb;\n+  while (b)\n+    { \n+      b++;\n+      while (b)\n+\t{ \n+\t  for (; aw; aw++)\n+\t    for (; q; q++)\n+\t      { \n+\t\tshort bc[20];\n+\t\tif (k)\n+\t\t  for (i = 0; i < 4; i++)\n+\t\t    for (j = 0; j < 4; j++)\n+\t\t      if (p)\n+\t\t\tbc[i * 4 + j] = 8;\n+\t\tfor (; ad; ad--)\n+\t\t  t = bc[1];\n+\t      }\n+\t  for (bb = 0; bb < 5; bb++)\n+\t    if (m && v)\n+\t      { \n+\t\tprintf (\"%d\", n);\n+\t\tv = g && v;\n+\t\tn = 0;\n+\t      }\n+\t  ab &= ba[0];\n+\t  aw = l;\n+\t  aa++;\n+\t  x++;\n+\t  while (1)\n+\t    { \n+\t      int bd[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1};\n+\t      ap = a ? ba[1] : 0;\n+\t      if (ba[0] && o < ax)\n+\t\t{ \n+\t\t  int be[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1};\n+\t\t  for (; ae; ae++)\n+\t\t    { \n+\t\t      e ^= ba[b] ^ aa;\n+\t\t      f = r;\n+\t\t      for (; y; y++)\n+\t\t\taj &= u | ag;\n+\t\t      int e[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1};\n+\t\t      if (a)\n+\t\t\t{ \n+\t\t\t  r = c;\n+\t\t\t  aj &= ag |= aq;\n+\t\t\t}\n+\t\t      av = ai * u;\n+\t\t      af = c;\n+\t\t    }\n+\t\t  au = d;\n+\t\t  p++;\n+\t\t  u = aj;\n+\t\t  a = ba[1];\n+\t\t  at = ar = af != ai && l;\n+\t\t  as = ax = f;\n+\t\t  ao = ak ? 0 : ah;\n+\t\t  aw = ao;\n+\t\t}\n+\t      ay = c;\n+\t      int bf[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1};\n+\t      if (w < f)\n+\t\t{ \n+\t\t  int bg[] = {0};\n+\t\t  if (aw)\n+\t\t    break;\n+\t\t}\n+\t      else\n+\t\taw = aa | (h &= ag) >> d, c = b = z && am;\n+\t      for (; w; w--)\n+\t\tl = ac ^= al |= b;\n+\t      for (; k; k = 0)\n+\t\t{ \n+\t\t  int bh = m | s && n;\n+\t\t  m = bh;\n+\t\t  for (; t; t--)\n+\t\t    f = q ^= (c < (e < ah));\n+\t\t}\n+\t      d = an |= b;\n+\t      if (v)\n+\t\t{ \n+\t\t  int bi[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1};\n+\t\t  if (aw)\n+\t\t    break;\n+\t\t}\n+\t    }\n+\t}\n+    }\n+}\n+\n+int main ()\n+{ \n+  foo ();\n+  return 0;\n+}"}, {"sha": "f192c7d0ce87cb9213e2691f04d419f7471ac55c", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1b0cc127d2f29f6ce8158e9e814b99cc5a9304/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1b0cc127d2f29f6ce8158e9e814b99cc5a9304/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=7b1b0cc127d2f29f6ce8158e9e814b99cc5a9304", "patch": "@@ -2897,9 +2897,8 @@ vect_mask_constant_operand_p (gimple *stmt, int opnum)\n       tree cond = gimple_assign_rhs1 (stmt);\n \n       if (TREE_CODE (cond) == SSA_NAME)\n-\treturn false;\n-\n-      if (opnum)\n+\top = cond;\n+      else if (opnum)\n \top = TREE_OPERAND (cond, 1);\n       else\n \top = TREE_OPERAND (cond, 0);"}]}