{"sha": "c8136c3648efc126933c61e5205492c6bfecd750", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgxMzZjMzY0OGVmYzEyNjkzM2M2MWU1MjA1NDkyYzZiZmVjZDc1MA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-08-04T13:55:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-08-04T13:55:26Z"}, "message": "genmatch.c (dt_node::gen_kids_1): Use gassign and gcall in generated code.\n\n2015-08-04  Richard Biener  <rguenther@suse.de>\n\n\t* genmatch.c (dt_node::gen_kids_1): Use gassign and gcall in\n\tgenerated code.\n\t(dt_operand::gen_gimple_expr): Adjust.\n\nFrom-SVN: r226577", "tree": {"sha": "237f48ec5c857cc3d6f473ef773e8ad3612a1e02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/237f48ec5c857cc3d6f473ef773e8ad3612a1e02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8136c3648efc126933c61e5205492c6bfecd750", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8136c3648efc126933c61e5205492c6bfecd750", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8136c3648efc126933c61e5205492c6bfecd750", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8136c3648efc126933c61e5205492c6bfecd750/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59c20dc74df24fa8e14ade6aecbfd4a1c6bbe30c"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "c6dc552e7556a9b38484bc099e42888d1d8003a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8136c3648efc126933c61e5205492c6bfecd750/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8136c3648efc126933c61e5205492c6bfecd750/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8136c3648efc126933c61e5205492c6bfecd750", "patch": "@@ -1,3 +1,9 @@\n+2015-08-04  Richard Biener  <rguenther@suse.de>\n+\n+\t* genmatch.c (dt_node::gen_kids_1): Use gassign and gcall in\n+\tgenerated code.\n+\t(dt_operand::gen_gimple_expr): Adjust.\n+\n 2015-08-04  Richard Biener  <rguenther@suse.de>\n \n \t* gimple-fold.c (gimple_fold_stmt_to_constant_1): Canonicalize"}, {"sha": "f48e79d0b95f512f0867fdbaa8a46ac22237a9d4", "filename": "gcc/genmatch.c", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8136c3648efc126933c61e5205492c6bfecd750/gcc%2Fgenmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8136c3648efc126933c61e5205492c6bfecd750/gcc%2Fgenmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmatch.c?ref=c8136c3648efc126933c61e5205492c6bfecd750", "patch": "@@ -2396,7 +2396,7 @@ dt_operand::gen_gimple_expr (FILE *f, int indent)\n \t\t match this.  The only sensible operand types are\n \t\t SSA names and invariants.  */\n \t      fprintf_indent (f, indent,\n-\t\t\t      \"tree %s = TREE_OPERAND (gimple_assign_rhs1 (def_stmt), %i);\\n\",\n+\t\t\t      \"tree %s = TREE_OPERAND (gimple_assign_rhs1 (def), %i);\\n\",\n \t\t\t      child_opname, i);\n \t      fprintf_indent (f, indent,\n \t\t\t      \"if ((TREE_CODE (%s) == SSA_NAME\\n\",\n@@ -2414,12 +2414,12 @@ dt_operand::gen_gimple_expr (FILE *f, int indent)\n \t    }\n \t  else\n \t    fprintf_indent (f, indent,\n-\t\t\t    \"tree %s = gimple_assign_rhs%u (def_stmt);\\n\",\n+\t\t\t    \"tree %s = gimple_assign_rhs%u (def);\\n\",\n \t\t\t    child_opname, i + 1);\n \t}\n       else\n \tfprintf_indent (f, indent,\n-\t\t\t\"tree %s = gimple_call_arg (def_stmt, %u);\\n\",\n+\t\t\t\"tree %s = gimple_call_arg (def, %u);\\n\",\n \t\t\tchild_opname, i);\n       fprintf_indent (f, indent,\n \t\t      \"if ((%s = do_valueize (valueize, %s)))\\n\",\n@@ -2600,9 +2600,9 @@ dt_node::gen_kids_1 (FILE *f, int indent, bool gimple,\n       if (exprs_len)\n \t{\n \t  fprintf_indent (f, indent,\n-\t\t\t  \"if (is_gimple_assign (def_stmt))\\n\");\n+\t\t\t  \"if (gassign *def = dyn_cast <gassign *> (def_stmt))\\n\");\n \t  fprintf_indent (f, indent,\n-\t\t\t  \"  switch (gimple_assign_rhs_code (def_stmt))\\n\");\n+\t\t\t  \"  switch (gimple_assign_rhs_code (def))\\n\");\n \t  indent += 4;\n \t  fprintf_indent (f, indent, \"{\\n\");\n \t  for (unsigned i = 0; i < exprs_len; ++i)\n@@ -2625,16 +2625,15 @@ dt_node::gen_kids_1 (FILE *f, int indent, bool gimple,\n \n       if (fns_len)\n \t{\n-\t  if (exprs_len)\n-\t    fprintf_indent (f, indent, \"else \");\n-\t  else\n-\t    fprintf_indent (f, indent, \" \");\n-\n-\t  fprintf (f, \"if (gimple_call_builtin_p (def_stmt, BUILT_IN_NORMAL))\\n\");\n+\t  fprintf_indent (f, indent,\n+\t\t\t  \"%sif (gimple_call_builtin_p (def_stmt, BUILT_IN_NORMAL))\\n\",\n+\t\t\t  exprs_len ? \"else \" : \"\");\n \t  fprintf_indent (f, indent,\n \t\t\t  \"  {\\n\");\n \t  fprintf_indent (f, indent,\n-\t\t\t  \"    tree fndecl = gimple_call_fndecl (def_stmt);\\n\");\n+\t\t\t  \"    gcall *def = as_a <gcall *> (def_stmt);\\n\");\n+\t  fprintf_indent (f, indent,\n+\t\t\t  \"    tree fndecl = gimple_call_fndecl (def);\\n\");\n \t  fprintf_indent (f, indent,\n \t\t\t  \"    switch (DECL_FUNCTION_CODE (fndecl))\\n\");\n \t  fprintf_indent (f, indent,"}]}