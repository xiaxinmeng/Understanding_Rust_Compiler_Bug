{"sha": "ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU3YzhmZmQzM2IwOTE5ZDUyYjQxM2M0ZWI4MTYwNjJmMmU4Y2JjNQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2015-02-05T14:31:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-02-05T14:31:10Z"}, "message": "errout.adb (Error_Msg_Internal): For non-serious error set Fatal_Error to Ignored.\n\n2015-02-05  Robert Dewar  <dewar@adacore.com>\n\n\t* errout.adb (Error_Msg_Internal): For non-serious error set\n\tFatal_Error to Ignored.\n\t* lib-load.adb (Load_Unit): Minor comment updates.\n\t* sem_ch10.adb (Analyze_With_Clause): Propagate Fatal_Error\n\tsetting from with'ed unit to with'ing unit.\n\t* sem_prag.adb (Analyze_Pragma, case Warnings): Document handling\n\tof ambiguity.\n\nFrom-SVN: r220450", "tree": {"sha": "e4eb0f56500b2cba4f989892945267e5539059ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4eb0f56500b2cba4f989892945267e5539059ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5/comments", "author": null, "committer": null, "parents": [{"sha": "4ed8ef2667fcedbdc04d6ef6c0a2df702131fccc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ed8ef2667fcedbdc04d6ef6c0a2df702131fccc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ed8ef2667fcedbdc04d6ef6c0a2df702131fccc"}], "stats": {"total": 59, "additions": 58, "deletions": 1}, "files": [{"sha": "6da97c7b27c3b6860c7b02f1c4df3cb1989aeab7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5", "patch": "@@ -1,3 +1,13 @@\n+2015-02-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* errout.adb (Error_Msg_Internal): For non-serious error set\n+\tFatal_Error to Ignored.\n+\t* lib-load.adb (Load_Unit): Minor comment updates.\n+\t* sem_ch10.adb (Analyze_With_Clause): Propagate Fatal_Error\n+\tsetting from with'ed unit to with'ing unit.\n+\t* sem_prag.adb (Analyze_Pragma, case Warnings): Document handling\n+\tof ambiguity.\n+\n 2015-02-05  Yannick Moy  <moy@adacore.com>\n \n \t* sem_prag.adb, par-prag.adb: Minor code clean up."}, {"sha": "86ea13f6fbb82bada745b41f0b4852624342e3d8", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5", "patch": "@@ -1164,6 +1164,17 @@ package body Errout is\n          if Errors.Table (Cur_Msg).Serious then\n             Serious_Errors_Detected := Serious_Errors_Detected + 1;\n             Handle_Serious_Error;\n+\n+         --  If not serious error, set Fatal_Error to indicate ignored error\n+\n+         else\n+            declare\n+               U : constant Unit_Number_Type := Get_Source_Unit (Sptr);\n+            begin\n+               if Fatal_Error (U) = None then\n+                  Set_Fatal_Error (U, Error_Ignored);\n+               end if;\n+            end;\n          end if;\n       end if;\n "}, {"sha": "aef313f979b6627b7360f80c287dde617ac0fb54", "filename": "gcc/ada/lib-load.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5/gcc%2Fada%2Flib-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5/gcc%2Fada%2Flib-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.adb?ref=ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5", "patch": "@@ -740,16 +740,24 @@ package body Lib.Load is\n                goto Done;\n             end if;\n \n-            --  If loaded unit had a fatal error, then caller inherits it\n+            --  If loaded unit had a fatal error, then caller inherits setting\n \n             if Present (Error_Node) then\n                case Units.Table (Unum).Fatal_Error is\n+\n+                  --  Nothing to do if with'ed unit had no error\n+\n                   when None =>\n                      null;\n \n+                  --  If with'ed unit had a detected fatal error, propagate it\n+\n                   when Error_Detected =>\n                      Units.Table (Calling_Unit).Fatal_Error := Error_Detected;\n \n+                  --  If with'ed unit had an ignored error, then propagate it\n+                  --  but do not overide an existring setting.\n+\n                   when Error_Ignored =>\n                      if Units.Table (Calling_Unit).Fatal_Error = None then\n                         Units.Table (Calling_Unit).Fatal_Error :="}, {"sha": "31542fe30257b3c41a46ac89599946f9ea5b0da1", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5", "patch": "@@ -2821,6 +2821,29 @@ package body Sem_Ch10 is\n       if Private_Present (N) then\n          Set_Is_Immediately_Visible (E_Name, False);\n       end if;\n+\n+      --  Propagate Fatal_Error setting from with'ed unit to current unit\n+\n+      case Fatal_Error (Get_Source_Unit (Library_Unit (N))) is\n+\n+         --  Nothing to do if with'ed unit had no error\n+\n+         when None =>\n+            null;\n+\n+            --  If with'ed unit had a detected fatal error, propagate it\n+\n+         when Error_Detected =>\n+            Set_Fatal_Error (Current_Sem_Unit, Error_Detected);\n+\n+            --  If with'ed unit had an ignored error, then propagate it\n+            --  but do not overide an existring setting.\n+\n+         when Error_Ignored =>\n+            if Fatal_Error (Current_Sem_Unit) = None then\n+               Set_Fatal_Error (Current_Sem_Unit, Error_Ignored);\n+            end if;\n+      end case;\n    end Analyze_With_Clause;\n \n    ------------------------------"}, {"sha": "01fe51e263cbe45656bb958285b64d0197896b06", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ee7c8ffd33b0919d52b413c4eb816062f2e8cbc5", "patch": "@@ -21340,6 +21340,11 @@ package body Sem_Prag is\n          --  always considered to be a tool name, even if there is a string\n          --  variable of that name.\n \n+         --  Note if the second argument of DETAILS is a local_NAME then the\n+         --  second form is always understood. If the intention is to use\n+         --  the fourth form, then you can write NAME & \"\" to force the\n+         --  intepretation as a static_string_EXPRESSION.\n+\n          when Pragma_Warnings => Warnings : declare\n             Reason : String_Id;\n "}]}