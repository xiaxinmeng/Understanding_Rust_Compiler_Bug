{"sha": "59a0b1db756fc17b952c8423b015154a7bd23d10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlhMGIxZGI3NTZmYzE3Yjk1MmM4NDIzYjAxNTE1NGE3YmQyM2QxMA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-06-21T19:03:45Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-06-21T19:03:45Z"}, "message": "[Darwin, fixincludes] Fix Darwin14 header issues.\n\nThere are two issues with the Darwin14 (SDK) headers in which unguarded\nadvanced syntax elements causes any code including these headers to fail.\n\n2019-06-21  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* inclhack.def: Guard __has_attribute and __has_extension in\n\tos/base.h.\n\tGuard Apple blocks syntax in dispatch/object.h.\n\t* fixincl.x: Regenerate.\n\t* tests/base/dispatch/object.h: New file.\n\t* tests/base/os/base.h: New file.\n\nFrom-SVN: r272561", "tree": {"sha": "4abe4978c16869c56b5e3d6e26351c671ae980dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4abe4978c16869c56b5e3d6e26351c671ae980dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59a0b1db756fc17b952c8423b015154a7bd23d10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59a0b1db756fc17b952c8423b015154a7bd23d10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59a0b1db756fc17b952c8423b015154a7bd23d10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59a0b1db756fc17b952c8423b015154a7bd23d10/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d5558c518a8812276aee50cca3da8ca5cce3091", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d5558c518a8812276aee50cca3da8ca5cce3091", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d5558c518a8812276aee50cca3da8ca5cce3091"}], "stats": {"total": 192, "additions": 187, "deletions": 5}, "files": [{"sha": "49135f038a07270a99afd04b296b7733379ab7d3", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a0b1db756fc17b952c8423b015154a7bd23d10/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a0b1db756fc17b952c8423b015154a7bd23d10/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=59a0b1db756fc17b952c8423b015154a7bd23d10", "patch": "@@ -1,3 +1,12 @@\n+2019-06-21  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* inclhack.def: Guard __has_attribute and __has_extension in\n+\tos/base.h.\n+\tGuard Apple blocks syntax in dispatch/object.h.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/dispatch/object.h: New file.\n+\t* tests/base/os/base.h: New file.\n+\n 2019-05-11  Iain Sandoe  <iain@sandoe.co.uk>\n \tPR target/90379\n \tPR bootstrap/89864"}, {"sha": "7b505845bdaaad73d24e213b2d9086a6914c81f9", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 97, "deletions": 5, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a0b1db756fc17b952c8423b015154a7bd23d10/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a0b1db756fc17b952c8423b015154a7bd23d10/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=59a0b1db756fc17b952c8423b015154a7bd23d10", "patch": "@@ -2,11 +2,11 @@\n  *\n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  *\n- * It has been AutoGen-ed  May 11, 2019 at 03:09:50 PM by AutoGen 5.17.4\n+ * It has been AutoGen-ed  May 13, 2019 at 04:17:28 PM by AutoGen 5.17.4\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Sat May 11 15:09:50 BST 2019\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Mon May 13 16:17:28 BST 2019\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 252 fixup descriptions.\n+ * This file contains 254 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -2916,6 +2916,86 @@ static const char* apzDarwin_Os_Trace_3Patch[] = {\n #endif\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Darwin_Os_Base_1 fix\n+ */\n+tSCC zDarwin_Os_Base_1Name[] =\n+     \"darwin_os_base_1\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zDarwin_Os_Base_1List[] =\n+  \"os/base.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzDarwin_Os_Base_1Machs[] = {\n+        \"*-*-darwin*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zDarwin_Os_Base_1Select0[] =\n+       \"#define __has_attribute.*\\n\\\n+#endif\";\n+\n+#define    DARWIN_OS_BASE_1_TEST_CT  1\n+static tTestDesc aDarwin_Os_Base_1Tests[] = {\n+  { TT_EGREP,    zDarwin_Os_Base_1Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Darwin_Os_Base_1\n+ */\n+static const char* apzDarwin_Os_Base_1Patch[] = {\n+    \"format\",\n+    \"%0\\n\\\n+#ifndef __has_extension\\n\\\n+#define __has_extension(x) 0\\n\\\n+#endif\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Darwin_Dispatch_Object_1 fix\n+ */\n+tSCC zDarwin_Dispatch_Object_1Name[] =\n+     \"darwin_dispatch_object_1\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zDarwin_Dispatch_Object_1List[] =\n+  \"dispatch/object.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzDarwin_Dispatch_Object_1Machs[] = {\n+        \"*-*-darwin*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zDarwin_Dispatch_Object_1Select0[] =\n+       \"typedef void.*\\\\^dispatch_block_t.*\";\n+\n+#define    DARWIN_DISPATCH_OBJECT_1_TEST_CT  1\n+static tTestDesc aDarwin_Dispatch_Object_1Tests[] = {\n+  { TT_EGREP,    zDarwin_Dispatch_Object_1Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Darwin_Dispatch_Object_1\n+ */\n+static const char* apzDarwin_Dispatch_Object_1Patch[] = {\n+    \"format\",\n+    \"#if __BLOCKS__\\n\\\n+%0\\n\\\n+#endif\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Darwin_Private_Extern fix\n@@ -10230,9 +10310,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          290\n+#define REGEX_COUNT          292\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            252\n+#define FIX_COUNT            254\n \n /*\n  *  Enumerate the fixes\n@@ -10307,6 +10387,8 @@ typedef enum {\n     DARWIN_OS_TRACE_1_FIXIDX,\n     DARWIN_OS_TRACE_2_FIXIDX,\n     DARWIN_OS_TRACE_3_FIXIDX,\n+    DARWIN_OS_BASE_1_FIXIDX,\n+    DARWIN_DISPATCH_OBJECT_1_FIXIDX,\n     DARWIN_PRIVATE_EXTERN_FIXIDX,\n     DARWIN_STDINT_1_FIXIDX,\n     DARWIN_STDINT_2_FIXIDX,\n@@ -10838,6 +10920,16 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      DARWIN_OS_TRACE_3_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aDarwin_Os_Trace_3Tests,   apzDarwin_Os_Trace_3Patch, 0 },\n \n+  {  zDarwin_Os_Base_1Name,    zDarwin_Os_Base_1List,\n+     apzDarwin_Os_Base_1Machs,\n+     DARWIN_OS_BASE_1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aDarwin_Os_Base_1Tests,   apzDarwin_Os_Base_1Patch, 0 },\n+\n+  {  zDarwin_Dispatch_Object_1Name,    zDarwin_Dispatch_Object_1List,\n+     apzDarwin_Dispatch_Object_1Machs,\n+     DARWIN_DISPATCH_OBJECT_1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aDarwin_Dispatch_Object_1Tests,   apzDarwin_Dispatch_Object_1Patch, 0 },\n+\n   {  zDarwin_Private_ExternName,    zDarwin_Private_ExternList,\n      apzDarwin_Private_ExternMachs,\n      DARWIN_PRIVATE_EXTERN_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "727f7d2cb2887d35ecb4a0f7219ac04f7fff5787", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a0b1db756fc17b952c8423b015154a7bd23d10/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a0b1db756fc17b952c8423b015154a7bd23d10/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=59a0b1db756fc17b952c8423b015154a7bd23d10", "patch": "@@ -1425,6 +1425,49 @@ fix = {\n \t_EOText_;\n };\n \n+/*\n+ *  In macOS 10.10 <os/base.h>, doesn't have __has_extension guarded.\n+ */\n+fix = {\n+  hackname  = darwin_os_base_1;\n+  mach      = \"*-*-darwin*\";\n+  files     = os/base.h;\n+  select    = <<- OS_BASE_1_SEL\n+#define __has_attribute.*\n+#endif\n+OS_BASE_1_SEL;\n+  c_fix     = format;\n+  c_fix_arg = <<- OS_BASE_1_FIX\n+%0\n+#ifndef __has_extension\n+#define __has_extension(x) 0\n+#endif\n+OS_BASE_1_FIX;\n+  test_text = <<- OS_BASE_1_TEST\n+#define __has_attribute(x) 0\n+#endif\n+\n+#if __GNUC__\n+OS_BASE_1_TEST;\n+};\n+\n+/*\n+ *  In macOS 10.10 <dispatch/object.h>, has unguarded block syntax.\n+ */\n+fix = {\n+  hackname  = darwin_dispatch_object_1;\n+  mach      = \"*-*-darwin*\";\n+  files     = dispatch/object.h;\n+  select    = \"typedef void.*\\\\^dispatch_block_t.*\";\n+  c_fix     = format;\n+  c_fix_arg = \"#if __BLOCKS__\\n%0\\n#endif\";\n+  test_text = <<- DISPATCH_OBJECT_1_TEST\n+typedef void (^dispatch_block_t)(void);\n+\n+__BEGIN_DECLS\n+DISPATCH_OBJECT_1_TEST;\n+};\n+\n /*\n  *  __private_extern__ doesn't exist in FSF GCC.  Even if it did,\n  *  why would you ever put it in a system header file?"}, {"sha": "36722f4b9dcdfed599e6f51e842812cc7dbdd7e5", "filename": "fixincludes/tests/base/dispatch/object.h", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a0b1db756fc17b952c8423b015154a7bd23d10/fixincludes%2Ftests%2Fbase%2Fdispatch%2Fobject.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a0b1db756fc17b952c8423b015154a7bd23d10/fixincludes%2Ftests%2Fbase%2Fdispatch%2Fobject.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fdispatch%2Fobject.h?ref=59a0b1db756fc17b952c8423b015154a7bd23d10", "patch": "@@ -0,0 +1,18 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/dispatch/object.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( DARWIN_DISPATCH_OBJECT_1_CHECK )\n+#if __BLOCKS__\n+typedef void (^dispatch_block_t)(void);\n+#endif\n+\n+__BEGIN_DECLS\n+#endif  /* DARWIN_DISPATCH_OBJECT_1_CHECK */"}, {"sha": "44aa3932cfafc1bda69c9eb3d6865594c556fca3", "filename": "fixincludes/tests/base/os/base.h", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a0b1db756fc17b952c8423b015154a7bd23d10/fixincludes%2Ftests%2Fbase%2Fos%2Fbase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a0b1db756fc17b952c8423b015154a7bd23d10/fixincludes%2Ftests%2Fbase%2Fos%2Fbase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fos%2Fbase.h?ref=59a0b1db756fc17b952c8423b015154a7bd23d10", "patch": "@@ -0,0 +1,20 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/os/base.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( DARWIN_OS_BASE_1_CHECK )\n+#define __has_attribute(x) 0\n+#endif\n+#ifndef __has_extension\n+#define __has_extension(x) 0\n+#endif\n+\n+#if __GNUC__\n+#endif  /* DARWIN_OS_BASE_1_CHECK */"}]}