{"sha": "bc8a7013802eadc666764eb244eee2441f375954", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM4YTcwMTM4MDJlYWRjNjY2NzY0ZWIyNDRlZWUyNDQxZjM3NTk1NA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-12-08T00:16:46Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-12-08T00:16:46Z"}, "message": "Daily bump.", "tree": {"sha": "bb8b59542195b081e9a14c37d461954673f0dd2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb8b59542195b081e9a14c37d461954673f0dd2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc8a7013802eadc666764eb244eee2441f375954", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc8a7013802eadc666764eb244eee2441f375954", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc8a7013802eadc666764eb244eee2441f375954", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc8a7013802eadc666764eb244eee2441f375954/comments", "author": null, "committer": null, "parents": [{"sha": "a19a242c708060e067b4fd5a76995144e6f239d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a19a242c708060e067b4fd5a76995144e6f239d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a19a242c708060e067b4fd5a76995144e6f239d0"}], "stats": {"total": 205, "additions": 204, "deletions": 1}, "files": [{"sha": "51ee9f2bbe33a8c5239949f3c0ad9fe510d7f793", "filename": "gcc/ChangeLog", "status": "modified", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8a7013802eadc666764eb244eee2441f375954/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8a7013802eadc666764eb244eee2441f375954/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc8a7013802eadc666764eb244eee2441f375954", "patch": "@@ -1,3 +1,74 @@\n+2020-12-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/98147\n+\t* builtins.c (default_emit_call_builtin___clear_cache): Call\n+\tconvert_memory_address to ptr_mode on both begin and end.\n+\n+2020-12-07  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* ipa-param-manipulation.c\n+\t(ipa_param_body_adjustments::modify_call_stmt): Set location info.\n+\n+2020-12-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* doc/extend.texi (used function attribute): Document saving\n+\tthe declaration from linker garbage collection.\n+\t(used variable attribute): Likewise.\n+\n+2020-12-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98113\n+\t* tree-vectorizer.h (struct slp_root): New.\n+\t(_bb_vec_info::roots): New member.\n+\t* tree-vect-slp.c (vect_analyze_slp): Also walk BB info\n+\troots.\n+\t(_bb_vec_info::_bb_vec_info): Adjust.\n+\t(_bb_vec_info::~_bb_vec_info): Likewise.\n+\t(vld_cmp): New.\n+\t(vect_slp_is_lane_insert): Likewise.\n+\t(vect_slp_check_for_constructors): Match a series of\n+\tBIT_INSERT_EXPRs as vector constructor.\n+\t(vect_slp_analyze_bb_1): Continue if BB info roots is\n+\tnot empty.\n+\t(vect_slp_analyze_bb_1): Mark the whole BIT_INSERT_EXPR root\n+\tsequence as pure_slp.\n+\n+2020-12-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98117\n+\t* tree-vect-loop-manip.c (vect_gen_vector_loop_niters):\n+\tProperly handle degenerate niter when setting the vector\n+\tloop IV range.\n+\n+2020-12-07  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* config/s390/s390.c (s390_emit_stack_probe): Change Pmode to\n+\tword_mode.\n+\n+2020-12-07  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/97816\n+\t* ipa-cp.c (safe_add): Removed.\n+\t(good_cloning_opportunity_p): Remove special handling of INT_MAX.\n+\t(value_topo_info<valtype>::propagate_effects): Take care not to\n+\tpropagate from size one value to another through more sources.  Scale\n+\tpropagated times with edge frequencies.  Include local time and size\n+\tin propagates ones here.  Take care not to overflow size.\n+\t(decide_about_value): Do not add local and propagated effects when\n+\tpassing them to good_cloning_opportunity_p.\n+\n+2020-12-07  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* genextract.c (print_header): Undefine ENABLE_RTL_CHECKING\n+\tand ENABLE_RTL_FLAG_CHECKING.\n+\n+2020-12-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98137\n+\t* tree-data-ref.c (split_constant_offset_1): Use\n+\tdetermine_value_range instead of get_range_info to handle\n+\tarbitrary expressions.\n+\n 2020-12-06  H.J. Lu  <hjl.tools@gmail.com>\n \n \tPR target/98162"}, {"sha": "0793ecd0c80e25cf05af2c7a3567b9b41070303c", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8a7013802eadc666764eb244eee2441f375954/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8a7013802eadc666764eb244eee2441f375954/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=bc8a7013802eadc666764eb244eee2441f375954", "patch": "@@ -1 +1 @@\n-20201207\n+20201208"}, {"sha": "f404b3673a40fed0a1e96ae7f6b93be75b02556b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8a7013802eadc666764eb244eee2441f375954/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8a7013802eadc666764eb244eee2441f375954/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bc8a7013802eadc666764eb244eee2441f375954", "patch": "@@ -1,3 +1,45 @@\n+2020-12-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/Make-lang.in: Remove ^L characters.\n+\t* gcc-interface/decl.c (create_concat_name): Add cast.\n+\n+2020-12-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (maybe_make_gnu_thunk): Return false if the\n+\ttarget is local and thunk and target do not have the same context.\n+\n+2020-12-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (lvalue_for_aggregate_p): Also return true\n+\tfor return statements.\n+\t* gcc-interface/utils.c (gnat_write_global_declarations): Use the\n+\tmaximum index for the dummy object to avoid a name collision.\n+\n+2020-12-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <Fixed_Point_Type>: Put\n+\tback the \"else\" unduly removed.\n+\n+2020-12-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (Call_to_gnu): Also create a temporary for\n+\tthe return value if the LHS is a bit-field and the return type is\n+\ta type padding a self-referential type.\n+\t(gnat_to_gnu): Do not remove the padding on the result if it is too\n+\tsmall with regard to the natural padding size.\n+\n+2020-12-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/utils.c (convert) <INTEGER_TYPE>: Call fold_convert\n+\tin the cases where convert_to_integer is not called.\n+\t<BOOLEAN_TYPE>: Call fold_convert instead of convert_to_integer.\n+\n+2020-12-07  Matthias Klose  <doko@ubuntu.com>\n+\n+\tPR ada/97504\n+\t* Makefile.rtl (LIBGNAT_TARGET_PAIRS) <mips*-*-linux*>: Use wraplf\n+\tversion of Aux_Long_Long_Float.\n+\n 2020-11-30  Pierre-Marie de Rodat  <derodat@adacore.com>\n \n \t* libgnat/s-trasym.ads: Update the list of supported platforms."}, {"sha": "b1ea54551b640cf353904262f0d6f2d48c4d45a4", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8a7013802eadc666764eb244eee2441f375954/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8a7013802eadc666764eb244eee2441f375954/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=bc8a7013802eadc666764eb244eee2441f375954", "patch": "@@ -1,3 +1,9 @@\n+2020-12-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/98126\n+\t* c-common.c (verify_tree_lim_r): New function.\n+\t(verify_sequence_points): Use it.  Use nullptr instead of 0.\n+\n 2020-12-03  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/90629"}, {"sha": "15eaa3d24333887e728ebe4a4a354ad7e7fa56eb", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8a7013802eadc666764eb244eee2441f375954/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8a7013802eadc666764eb244eee2441f375954/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=bc8a7013802eadc666764eb244eee2441f375954", "patch": "@@ -1,3 +1,9 @@\n+2020-12-07  Martin Uecker  <muecker@gwdg.de>\n+\n+\tPR c/97981\n+\t* c-typeck.c (convert_lvalue_to_rvalue): Move the code\n+\tthat drops qualifiers to the end of the function.\n+\n 2020-11-26  Martin Uecker  <muecker@gwdg.de>\n \n \tPR c/65455"}, {"sha": "82aedc450165564f279d702a988111d99db354c1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8a7013802eadc666764eb244eee2441f375954/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8a7013802eadc666764eb244eee2441f375954/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bc8a7013802eadc666764eb244eee2441f375954", "patch": "@@ -1,3 +1,26 @@\n+2020-12-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/98043\n+\t* decl.c (pop_switch): If SWITCH_STMT_TYPE is a scoped enum type,\n+\tset it to the type of SWITCH_STMT_COND.\n+\n+2020-12-07  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* cp-tree.h (build_cplus_array_type): Add defaulted DEP parm.\n+\t* tree.c (set_array_type_common): Add DEP parm.\n+\t(build_cplus_array_type): Add DEP parm, determine dependency if\n+\tneeded.  Mark dependency of new types.\n+\t(cp_build_qualified_type_real): Adjust array-building call, assert\n+\tno surprising dependency.\n+\t(strip_typedefs): Likewise.\n+\n+2020-12-07  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/98116\n+\t* typeck.c (structural_comptypes): Move early outs to comptype.\n+\tAlways check template-alias match when comparing_specializations.\n+\t(comptypes): Do early out checking here.\n+\n 2020-12-05  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/97093"}, {"sha": "8e2eca8eae4e5181d51cea1572b624546d37808e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8a7013802eadc666764eb244eee2441f375954/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8a7013802eadc666764eb244eee2441f375954/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bc8a7013802eadc666764eb244eee2441f375954", "patch": "@@ -1,3 +1,58 @@\n+2020-12-07  Martin Uecker  <muecker@gwdg.de>\n+\n+\tPR c/97981\n+\t* gcc.dg/pr97981.c: New test.\n+\t* gcc.dg/pr60195.c: Adapt test.\n+\n+2020-12-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/98147\n+\t* gcc.dg/pr98147.c: New test.\n+\n+2020-12-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/98043\n+\t* g++.dg/cpp0x/enum41.C: New test.\n+\n+2020-12-07  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* go.test/go-test.exp (errchk): Don't backslash quote parentheses\n+\tthat are already backslash quoted.\n+\n+2020-12-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/98126\n+\t* g++.dg/warn/Wsequence-point-4.C: New test.\n+\n+2020-12-07  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/98116\n+\t* g++.dg/template/pr98116.C: Remove dg-ice.\n+\t* g++.dg/template/pr98116-2.C: New.\n+\n+2020-12-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98113\n+\t* gcc.dg/vect/bb-slp-70.c: New testcase.\n+\n+2020-12-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98117\n+\t* gcc.dg/torture/pr98117.c: New testcase.\n+\n+2020-12-07  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\t* gcc.target/s390/s390.exp: New target check s390_zarch.\n+\t* gcc.target/s390/stack-clash-1.c: Use s390_zarch instead of lp64.\n+\t* gcc.target/s390/stack-clash-2.c: Likewise.\n+\t* gcc.target/s390/stack-clash-3.c: Likewise.\n+\t* gcc.target/s390/stack-clash-5.c: New test.\n+\n+2020-12-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98137\n+\t* gcc.dg/vect/bb-slp-pr98137.c: New testcase.\n+\n 2020-12-06  H.J. Lu  <hjl.tools@gmail.com>\n \n \t* gcc.target/i386/pr98161.c: New test."}]}