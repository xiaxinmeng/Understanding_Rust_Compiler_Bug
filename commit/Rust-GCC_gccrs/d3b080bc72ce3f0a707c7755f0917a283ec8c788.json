{"sha": "d3b080bc72ce3f0a707c7755f0917a283ec8c788", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNiMDgwYmM3MmNlM2YwYTcwN2M3NzU1ZjA5MTdhMjgzZWM4Yzc4OA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-09-05T09:47:21Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-09-05T09:47:21Z"}, "message": "re PR ada/62235 (segmentation fault on Ada 2012 code)\n\n\tPR ada/62235\n\t* gcc-interface/decl.c (gnat_to_gnu_entity): Skip regular processing\n\tfor Itypes that are E_Record_Subtype with a cloned subtype.\n\t<E_Record_Subtype>: Use the DECL of the cloned type directly, if any.\n\nFrom-SVN: r251706", "tree": {"sha": "c9d08c3878aec12faca42f7ea41f0941f72f3333", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9d08c3878aec12faca42f7ea41f0941f72f3333"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3b080bc72ce3f0a707c7755f0917a283ec8c788", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3b080bc72ce3f0a707c7755f0917a283ec8c788", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3b080bc72ce3f0a707c7755f0917a283ec8c788", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3b080bc72ce3f0a707c7755f0917a283ec8c788/comments", "author": null, "committer": null, "parents": [{"sha": "a4f7374e4d6bfb7a26bfb85c2c914688d4b07b10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4f7374e4d6bfb7a26bfb85c2c914688d4b07b10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4f7374e4d6bfb7a26bfb85c2c914688d4b07b10"}], "stats": {"total": 84, "additions": 81, "deletions": 3}, "files": [{"sha": "af3b9280b4f321ba3d575b22b433517989d21d8c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b080bc72ce3f0a707c7755f0917a283ec8c788/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b080bc72ce3f0a707c7755f0917a283ec8c788/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d3b080bc72ce3f0a707c7755f0917a283ec8c788", "patch": "@@ -1,3 +1,10 @@\n+2017-09-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR ada/62235\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity): Skip regular processing\n+\tfor Itypes that are E_Record_Subtype with a cloned subtype.\n+\t<E_Record_Subtype>: Use the DECL of the cloned type directly, if any.\n+\n 2017-09-05  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (convert_with_check): Use a custom base type"}, {"sha": "a7272e4ae8e9a766e58386ab7dff418232787fda", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b080bc72ce3f0a707c7755f0917a283ec8c788/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b080bc72ce3f0a707c7755f0917a283ec8c788/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=d3b080bc72ce3f0a707c7755f0917a283ec8c788", "patch": "@@ -312,11 +312,14 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \n   /* Since a use of an Itype is a definition, process it as such if it is in\n      the main unit, except for E_Access_Subtype because it's actually a use\n-     of its base type, see below.  */\n+     of its base type, and for E_Record_Subtype with cloned subtype because\n+     it's actually a use of the cloned subtype, see below.  */\n   if (!definition\n       && is_type\n       && Is_Itype (gnat_entity)\n-      && Ekind (gnat_entity) != E_Access_Subtype\n+      && !(kind == E_Access_Subtype\n+\t   || (kind == E_Record_Subtype\n+\t       && Present (Cloned_Subtype (gnat_entity))))\n       && !present_gnu_tree (gnat_entity)\n       && In_Extended_Main_Code_Unit (gnat_entity))\n     {\n@@ -3411,7 +3414,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t{\n \t  gnu_decl = gnat_to_gnu_entity (Cloned_Subtype (gnat_entity),\n \t\t\t\t\t NULL_TREE, false);\n-\t  maybe_present = true;\n+\t  saved = true;\n \t  break;\n \t}\n "}, {"sha": "0ef3da8691bfe9ab4467228089c4b24400114f0c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b080bc72ce3f0a707c7755f0917a283ec8c788/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b080bc72ce3f0a707c7755f0917a283ec8c788/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d3b080bc72ce3f0a707c7755f0917a283ec8c788", "patch": "@@ -1,3 +1,8 @@\n+2017-09-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/incomplete5.ad[sb]: New test.\n+\t* gnat.dg/incomplete5_pkg.ad[sb]: New helper.\n+\n 2017-09-05  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/specs/uc2.ads: New test."}, {"sha": "f6b4879dc00a891b45e2d81602362bc40fb8c072", "filename": "gcc/testsuite/gnat.dg/incomplete5.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b080bc72ce3f0a707c7755f0917a283ec8c788/gcc%2Ftestsuite%2Fgnat.dg%2Fincomplete5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b080bc72ce3f0a707c7755f0917a283ec8c788/gcc%2Ftestsuite%2Fgnat.dg%2Fincomplete5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fincomplete5.adb?ref=d3b080bc72ce3f0a707c7755f0917a283ec8c788", "patch": "@@ -0,0 +1,10 @@\n+-- { dg-do compile }\n+\n+package body Incomplete5 is\n+\n+   function Get (O: Base_Object) return Integer is\n+   begin\n+      return Get_Handle(O).I;\n+   end;\n+\n+end Incomplete5;"}, {"sha": "0e0394212c8d6ea45078866b30c46ce51cd2ae46", "filename": "gcc/testsuite/gnat.dg/incomplete5.ads", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b080bc72ce3f0a707c7755f0917a283ec8c788/gcc%2Ftestsuite%2Fgnat.dg%2Fincomplete5.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b080bc72ce3f0a707c7755f0917a283ec8c788/gcc%2Ftestsuite%2Fgnat.dg%2Fincomplete5.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fincomplete5.ads?ref=d3b080bc72ce3f0a707c7755f0917a283ec8c788", "patch": "@@ -0,0 +1,25 @@\n+with Incomplete5_Pkg;\n+\n+package Incomplete5 is\n+\n+   type Rec1 is private;\n+\n+   type Rec2 is private;\n+\n+   package My_G is new Incomplete5_Pkg (Rec1);\n+\n+   use My_G;\n+\n+   function Get (O: Base_Object) return Integer;\n+\n+private\n+\n+   type Rec1 is record\n+      I : Integer;\n+   end record;\n+\n+   type Rec2 is record\n+      A : Access_Type;\n+   end record;\n+\n+end Incomplete5;"}, {"sha": "44b1411e404905f859ab543b98dba73509e62e3c", "filename": "gcc/testsuite/gnat.dg/incomplete5_pkg.adb", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b080bc72ce3f0a707c7755f0917a283ec8c788/gcc%2Ftestsuite%2Fgnat.dg%2Fincomplete5_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b080bc72ce3f0a707c7755f0917a283ec8c788/gcc%2Ftestsuite%2Fgnat.dg%2Fincomplete5_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fincomplete5_pkg.adb?ref=d3b080bc72ce3f0a707c7755f0917a283ec8c788", "patch": "@@ -0,0 +1,13 @@\n+package body Incomplete5_Pkg is\n+\n+   function Get_Handle (Object: Base_Object) return Access_Type is\n+   begin\n+      return Object.Handle;\n+   end;\n+\n+   function From_Handle (Handle: Access_Type) return Base_Object is\n+   begin\n+      return (Handle=>Handle);\n+   end;\n+\n+end Incomplete5_Pkg;"}, {"sha": "28f3809d746bc8c6974fe9830b1fc99e552c64a9", "filename": "gcc/testsuite/gnat.dg/incomplete5_pkg.ads", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b080bc72ce3f0a707c7755f0917a283ec8c788/gcc%2Ftestsuite%2Fgnat.dg%2Fincomplete5_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b080bc72ce3f0a707c7755f0917a283ec8c788/gcc%2Ftestsuite%2Fgnat.dg%2Fincomplete5_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fincomplete5_pkg.ads?ref=d3b080bc72ce3f0a707c7755f0917a283ec8c788", "patch": "@@ -0,0 +1,15 @@\n+generic\n+   type Record_Type;\n+package Incomplete5_Pkg is\n+\n+   type Access_Type is access Record_Type;\n+\n+   type Base_Object is tagged record\n+      Handle: Access_Type;\n+   end record;\n+\n+   function Get_Handle(Object: Base_Object) return Access_Type;\n+\n+   function From_Handle(Handle: Access_Type) return Base_Object;\n+\n+end Incomplete5_Pkg;"}]}