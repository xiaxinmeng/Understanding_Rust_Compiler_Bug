{"sha": "e2ebb05cd478db489afa019d4b12e116754a267e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJlYmIwNWNkNDc4ZGI0ODlhZmEwMTlkNGIxMmUxMTY3NTRhMjY3ZQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-02-18T16:31:17Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-02-18T16:31:17Z"}, "message": "PR middle-end/89294 - ICE in valid_constant_size_p\n\ngcc/c-family/ChangeLog:\n\n\tPR middle-end/89294\n\t* c-common.c (invalid_array_size_error): Handle cst_size_not_constant.\n\ngcc/ChangeLog:\n\n\tPR middle-end/89294\n\t* tree.c (valid_constant_size_p): Avoid assuming size is a constant\n\texpression.\n\t* tree.h (cst_size_error): Add the cst_size_not_constant enumerator.\n\nFrom-SVN: r268990", "tree": {"sha": "dcbec44fef694c0a6ed863c0f6271bb424e0d9df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcbec44fef694c0a6ed863c0f6271bb424e0d9df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2ebb05cd478db489afa019d4b12e116754a267e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2ebb05cd478db489afa019d4b12e116754a267e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2ebb05cd478db489afa019d4b12e116754a267e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2ebb05cd478db489afa019d4b12e116754a267e/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb8c4926c5bcec83ec7d4198e46bc9efe9a26f17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb8c4926c5bcec83ec7d4198e46bc9efe9a26f17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb8c4926c5bcec83ec7d4198e46bc9efe9a26f17"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "3caa28a8cca0b18b7a5881f3a82d319191e1f28e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ebb05cd478db489afa019d4b12e116754a267e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ebb05cd478db489afa019d4b12e116754a267e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2ebb05cd478db489afa019d4b12e116754a267e", "patch": "@@ -1,3 +1,10 @@\n+2019-02-18  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/89294\n+\t* tree.c (valid_constant_size_p): Avoid assuming size is a constant\n+\texpression.\n+\t* tree.h (cst_size_error): Add the cst_size_not_constant enumerator.\n+\n 2019-02-18  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/89296"}, {"sha": "2d3839ee5a7bf402cfbb2bc0038d7a493ecd6837", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ebb05cd478db489afa019d4b12e116754a267e/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ebb05cd478db489afa019d4b12e116754a267e/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=e2ebb05cd478db489afa019d4b12e116754a267e", "patch": "@@ -1,3 +1,8 @@\n+2019-02-18  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/89294\n+\t* c-common.c (invalid_array_size_error): Handle cst_size_not_constant.\n+\n 2019-02-16  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c++/88680"}, {"sha": "e5a5ea803d725895c569d213639995228f27653b", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ebb05cd478db489afa019d4b12e116754a267e/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ebb05cd478db489afa019d4b12e116754a267e/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=e2ebb05cd478db489afa019d4b12e116754a267e", "patch": "@@ -8248,6 +8248,13 @@ invalid_array_size_error (location_t loc, cst_size_error error,\n   tree maxsize = max_object_size ();\n   switch (error)\n     {\n+    case cst_size_not_constant:\n+      if (name)\n+\terror_at (loc, \"size of array %qE is not a constant expression\",\n+\t\t  name);\n+      else\n+\terror_at (loc, \"size of array is not a constant expression\");\n+      break;\n     case cst_size_negative:\n       if (name)\n \terror_at (loc, \"size %qE of array %qE is negative\","}, {"sha": "30e01df0ace64ac8ad11f92d7d90b8d94aee9798", "filename": "gcc/tree.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ebb05cd478db489afa019d4b12e116754a267e/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ebb05cd478db489afa019d4b12e116754a267e/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=e2ebb05cd478db489afa019d4b12e116754a267e", "patch": "@@ -7521,7 +7521,13 @@ valid_constant_size_p (const_tree size, cst_size_error *perr /* = NULL */)\n   if (!perr)\n     perr = &error;\n \n-  if (TREE_OVERFLOW (size))\n+  if (TREE_CODE (size) != INTEGER_CST)\n+    {\n+      *perr = cst_size_not_constant;\n+      return false;\n+    }\n+\n+  if (TREE_OVERFLOW_P (size))\n     {\n       *perr = cst_size_overflow;\n       return false;"}, {"sha": "0e8e8dff87607d206c60cb36e967fce69c402ab1", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ebb05cd478db489afa019d4b12e116754a267e/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ebb05cd478db489afa019d4b12e116754a267e/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=e2ebb05cd478db489afa019d4b12e116754a267e", "patch": "@@ -4352,6 +4352,7 @@ extern tree excess_precision_type (tree);\n    is not a valid size.  */\n enum cst_size_error {\n   cst_size_ok,\n+  cst_size_not_constant,\n   cst_size_negative,\n   cst_size_too_big,\n   cst_size_overflow"}]}