{"sha": "761cc32e5a1c762f91904d2a86980f106a5bc441", "node_id": "C_kwDOANBUbNoAKDc2MWNjMzJlNWExYzc2MmY5MTkwNGQyYTg2OTgwZjEwNmE1YmM0NDE", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-05-25T14:39:31Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-05-25T14:39:31Z"}, "message": "Tweak comments.\n\nAdjust some mispellings in comments.\n\n\t* gimple-range-cache.cc: Adjust comments.\n\t* gimple-range-infer.cc: Adjust comments.\n\t* gimple-range-infer.h: Adjust comments.\n\t* gimple-range.cc: Adjust comments.", "tree": {"sha": "48dbc655038fc8eb8c399c1ff3cab64b31dc049e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48dbc655038fc8eb8c399c1ff3cab64b31dc049e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/761cc32e5a1c762f91904d2a86980f106a5bc441", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/761cc32e5a1c762f91904d2a86980f106a5bc441", "html_url": "https://github.com/Rust-GCC/gccrs/commit/761cc32e5a1c762f91904d2a86980f106a5bc441", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/761cc32e5a1c762f91904d2a86980f106a5bc441/comments", "author": null, "committer": null, "parents": [{"sha": "156d7d8dbc8d65d3958486bc4112a7279935e47d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/156d7d8dbc8d65d3958486bc4112a7279935e47d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/156d7d8dbc8d65d3958486bc4112a7279935e47d"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "6e73ac706ac6e215be096ebed81bfe9e6375313c", "filename": "gcc/gimple-range-cache.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761cc32e5a1c762f91904d2a86980f106a5bc441/gcc%2Fgimple-range-cache.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761cc32e5a1c762f91904d2a86980f106a5bc441/gcc%2Fgimple-range-cache.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-cache.cc?ref=761cc32e5a1c762f91904d2a86980f106a5bc441", "patch": "@@ -1440,7 +1440,7 @@ ranger_cache::apply_inferred_ranges (gimple *s)\n   if (infer.num () == 0)\n     return;\n \n-  // Do not update the on-netry cache for block ending stmts.\n+  // Do not update the on-entry cache for block ending stmts.\n   if (stmt_ends_bb_p (s))\n     {\n       edge_iterator ei;"}, {"sha": "545d4f2de3d562675014e1c2bd65568f96d36d86", "filename": "gcc/gimple-range-infer.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761cc32e5a1c762f91904d2a86980f106a5bc441/gcc%2Fgimple-range-infer.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761cc32e5a1c762f91904d2a86980f106a5bc441/gcc%2Fgimple-range-infer.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-infer.cc?ref=761cc32e5a1c762f91904d2a86980f106a5bc441", "patch": "@@ -120,7 +120,7 @@ gimple_infer_range::gimple_infer_range (gimple *s)\n \n // -------------------------------------------------------------------------\n \n-// This class is an element in list of infered ranges.\n+// This class is an element in the list of infered ranges.\n \n class exit_range\n {"}, {"sha": "412958fe28ea313557c79cfedf1538694d950715", "filename": "gcc/gimple-range-infer.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761cc32e5a1c762f91904d2a86980f106a5bc441/gcc%2Fgimple-range-infer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761cc32e5a1c762f91904d2a86980f106a5bc441/gcc%2Fgimple-range-infer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-infer.h?ref=761cc32e5a1c762f91904d2a86980f106a5bc441", "patch": "@@ -26,7 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n \n // This class manages an on-demand summary of inferred ranges for a statement.\n // It can be instantiated as required and provides a list of inferred ranges.\n-// New inferred ranges should added in the constructor of this class.\n+// New inferred ranges should be added in the constructor of this class.\n \n class gimple_infer_range\n {\n@@ -49,7 +49,7 @@ class gimple_infer_range\n \n // This class manages a list of inferred ranges for each basic block.\n // As inferences are made, they can be registered to a block and later\n-// queried.  WHen constructed with a TRUE flag, immediate uses chains are\n+// queried.  When constructed with a TRUE flag, immediate uses chains are\n // followed the first time a name is referenced and block populated if\n // there are any inferred ranges.\n "}, {"sha": "53f4865af3b30c726dd7420acb933cbac2586e37", "filename": "gcc/gimple-range.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761cc32e5a1c762f91904d2a86980f106a5bc441/gcc%2Fgimple-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761cc32e5a1c762f91904d2a86980f106a5bc441/gcc%2Fgimple-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range.cc?ref=761cc32e5a1c762f91904d2a86980f106a5bc441", "patch": "@@ -118,7 +118,7 @@ gimple_ranger::range_of_expr (irange &r, tree expr, gimple *stmt)\n       // If name is defined in this block, try to get an range from S.\n       if (def_stmt && gimple_bb (def_stmt) == bb)\n \t{\n-\t  // Declared in ths block, if it has a global set, check for an\n+\t  // Declared in this block, if it has a global set, check for an\n \t  // override from a block walk, otherwise calculate it.\n \t  if (m_cache.get_global_range (r, expr))\n \t    m_cache.block_range (r, bb, expr, false);"}]}