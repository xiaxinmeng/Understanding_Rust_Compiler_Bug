{"sha": "754ccf7c7c9db6326708936242365c2df354ffae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU0Y2NmN2M3YzlkYjYzMjY3MDg5MzYyNDIzNjVjMmRmMzU0ZmZhZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-02-03T17:26:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-02-03T17:26:28Z"}, "message": "re PR inline-asm/39059 (ICE with fixed-point type in inline-asm)\n\n\tPR inline-asm/39059\n\t* c-parser.c (c_parser_postfix_expression): If fixed point is not\n\tsupported, don't accept FIXED_CSTs.\n\t* c-decl.c (finish_declspecs): Error if fixed point is not supported\n\tand _Sat is used without _Fract/_Accum.  Set specs->type to\n\tinteger_type_node for cts_fract/cts_accum if fixed point is not\n\tsupported.\n\n\t* parser.c (cp_parser_primary_expression): Reject FIXED_CSTs.\n\n\t* gcc.dg/nofixed-point-2.c: New test.\n\t* g++.dg/ext/fixed1.C: Adjust expected diagnostics.\n\t* g++.dg/ext/fixed2.C: Likewise.\n\t* g++.dg/other/error25.C: Likewise.\n\t* g++.dg/lookup/crash7.C: Likewise.\n\t* g++.dg/cpp0x/decltype-38655.C: Likewise.\n\nFrom-SVN: r143900", "tree": {"sha": "b0a7814cdb76726cd1bc60f57e9f3dcfc99dd568", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0a7814cdb76726cd1bc60f57e9f3dcfc99dd568"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/754ccf7c7c9db6326708936242365c2df354ffae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/754ccf7c7c9db6326708936242365c2df354ffae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/754ccf7c7c9db6326708936242365c2df354ffae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/754ccf7c7c9db6326708936242365c2df354ffae/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a36c33ebfc595336528780a71a2897d2b8dbdb94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a36c33ebfc595336528780a71a2897d2b8dbdb94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a36c33ebfc595336528780a71a2897d2b8dbdb94"}], "stats": {"total": 104, "additions": 89, "deletions": 15}, "files": [{"sha": "a92228c9b113135f21d6e210f1d0690753c079a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=754ccf7c7c9db6326708936242365c2df354ffae", "patch": "@@ -1,3 +1,13 @@\n+2009-02-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR inline-asm/39059\n+\t* c-parser.c (c_parser_postfix_expression): If fixed point is not\n+\tsupported, don't accept FIXED_CSTs.\n+\t* c-decl.c (finish_declspecs): Error if fixed point is not supported\n+\tand _Sat is used without _Fract/_Accum.  Set specs->type to\n+\tinteger_type_node for cts_fract/cts_accum if fixed point is not\n+\tsupported.\n+\n 2009-02-02  Catherine Moore  <clm@codesourcery.com>\n \n \t* sde.h (SUBTARGET_ARM_SPEC): Don;t assemble -fpic code as"}, {"sha": "262d9d9283927edafe2255140d6ea716775b276b", "filename": "gcc/c-decl.c", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=754ccf7c7c9db6326708936242365c2df354ffae", "patch": "@@ -7772,6 +7772,8 @@ finish_declspecs (struct c_declspecs *specs)\n       if (specs->saturating_p)\n \t{\n \t  error (\"%<_Sat%> is used without %<_Fract%> or %<_Accum%>\");\n+\t  if (!targetm.fixed_point_supported_p ())\n+\t    error (\"fixed-point types not supported for this target\");\n \t  specs->typespec_word = cts_fract;\n \t}\n       else if (specs->long_p || specs->short_p\n@@ -7894,8 +7896,10 @@ finish_declspecs (struct c_declspecs *specs)\n \tspecs->type = dfloat128_type_node;\n       break;\n     case cts_fract:\n-       gcc_assert (!specs->complex_p);\n-       if (specs->saturating_p)\n+      gcc_assert (!specs->complex_p);\n+      if (!targetm.fixed_point_supported_p ())\n+\tspecs->type = integer_type_node;\n+      else if (specs->saturating_p)\n \t{\n \t  if (specs->long_long_p)\n \t    specs->type = specs->unsigned_p\n@@ -7913,7 +7917,7 @@ finish_declspecs (struct c_declspecs *specs)\n \t    specs->type = specs->unsigned_p\n \t\t\t  ? sat_unsigned_fract_type_node\n \t\t\t  : sat_fract_type_node;\n-          }\n+\t}\n       else\n \t{\n \t  if (specs->long_long_p)\n@@ -7932,11 +7936,13 @@ finish_declspecs (struct c_declspecs *specs)\n \t    specs->type = specs->unsigned_p\n \t\t\t  ? unsigned_fract_type_node\n \t\t\t  : fract_type_node;\n-          }\n+\t}\n       break;\n     case cts_accum:\n-       gcc_assert (!specs->complex_p);\n-       if (specs->saturating_p)\n+      gcc_assert (!specs->complex_p);\n+      if (!targetm.fixed_point_supported_p ())\n+\tspecs->type = integer_type_node;\n+      else if (specs->saturating_p)\n \t{\n \t  if (specs->long_long_p)\n \t    specs->type = specs->unsigned_p\n@@ -7954,7 +7960,7 @@ finish_declspecs (struct c_declspecs *specs)\n \t    specs->type = specs->unsigned_p\n \t\t\t  ? sat_unsigned_accum_type_node\n \t\t\t  : sat_accum_type_node;\n-          }\n+\t}\n       else\n \t{\n \t  if (specs->long_long_p)\n@@ -7973,7 +7979,7 @@ finish_declspecs (struct c_declspecs *specs)\n \t    specs->type = specs->unsigned_p\n \t\t\t  ? unsigned_accum_type_node\n \t\t\t  : accum_type_node;\n-          }\n+\t}\n       break;\n     default:\n       gcc_unreachable ();"}, {"sha": "88447692d9a7b18c8e285934baf31dfc77969b19", "filename": "gcc/c-parser.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parser.c?ref=754ccf7c7c9db6326708936242365c2df354ffae", "patch": "@@ -5089,6 +5089,17 @@ c_parser_postfix_expression (c_parser *parser)\n   switch (c_parser_peek_token (parser)->type)\n     {\n     case CPP_NUMBER:\n+      expr.value = c_parser_peek_token (parser)->value;\n+      expr.original_code = ERROR_MARK;\n+      loc = c_parser_peek_token (parser)->location;\n+      c_parser_consume_token (parser);\n+      if (TREE_CODE (expr.value) == FIXED_CST\n+\t  && !targetm.fixed_point_supported_p ())\n+\t{\n+\t  error_at (loc, \"fixed-point types not supported for this target\");\n+\t  expr.value = error_mark_node;\n+\t}\n+      break;\n     case CPP_CHAR:\n     case CPP_CHAR16:\n     case CPP_CHAR32:"}, {"sha": "9d425ab1dfa06daefffa0dd23ced00a5ac199db8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=754ccf7c7c9db6326708936242365c2df354ffae", "patch": "@@ -1,5 +1,8 @@\n 2009-02-03  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR inline-asm/39059\n+\t* parser.c (cp_parser_primary_expression): Reject FIXED_CSTs.\n+\n \tPR c++/39056\n \t* typeck2.c (digest_init_r): Don't call process_init_constructor\n \tfor COMPLEX_TYPE."}, {"sha": "404e45a14c62d03deca408519033e263be7d7365", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=754ccf7c7c9db6326708936242365c2df354ffae", "patch": "@@ -3144,6 +3144,12 @@ cp_parser_primary_expression (cp_parser *parser,\n     case CPP_WCHAR:\n     case CPP_NUMBER:\n       token = cp_lexer_consume_token (parser->lexer);\n+      if (TREE_CODE (token->u.value) == FIXED_CST)\n+\t{\n+\t  error (\"%Hfixed-point types not supported in C++\",\n+\t\t &token->location);\n+\t  return error_mark_node;\n+\t}\n       /* Floating-point literals are only allowed in an integral\n \t constant expression if they are cast to an integral or\n \t enumeration type.  */"}, {"sha": "4062c8688a50712d438610681b3be518f7677c80", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=754ccf7c7c9db6326708936242365c2df354ffae", "patch": "@@ -1,5 +1,13 @@\n 2009-02-03  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR inline-asm/39059\n+\t* gcc.dg/nofixed-point-2.c: New test.\n+\t* g++.dg/ext/fixed1.C: Adjust expected diagnostics.\n+\t* g++.dg/ext/fixed2.C: Likewise.\n+\t* g++.dg/other/error25.C: Likewise.\n+\t* g++.dg/lookup/crash7.C: Likewise.\n+\t* g++.dg/cpp0x/decltype-38655.C: Likewise.\n+\n \tPR c++/39056\n \t* g++.dg/cpp0x/initlist13.C: New test.\n "}, {"sha": "3b8455bc13fa44e100ca62c7a5c9c924e2cbae6e", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype-38655.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-38655.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-38655.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-38655.C?ref=754ccf7c7c9db6326708936242365c2df354ffae", "patch": "@@ -1,4 +1,4 @@\n // PR c++/38655\n // { dg-options \"\" }\n \n-__decltype(0r)* p = 1; // { dg-error \"unnamed-fixed\" }\n+__decltype(0r)* p = 1; // { dg-error \"not supported|invalid\" }"}, {"sha": "5a479d6891abeddabd0288191dd9699783cdb66b", "filename": "gcc/testsuite/g++.dg/ext/fixed1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ffixed1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ffixed1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ffixed1.C?ref=754ccf7c7c9db6326708936242365c2df354ffae", "patch": "@@ -3,6 +3,6 @@\n \n template<int> struct A {};\n \n-template<typename> struct B : A<sizeof(0=0r)> {};\n+template<typename> struct B : A<sizeof(0=0r)> {};\t// { dg-error \"not supported\" }\n \n-template<typename> struct C : A<sizeof(0=0r)> {};\n+template<typename> struct C : A<sizeof(0=0r)> {};\t// { dg-error \"not supported\" }"}, {"sha": "1ee5538a1721df37e6929085223b8482f5abf42c", "filename": "gcc/testsuite/g++.dg/ext/fixed2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ffixed2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ffixed2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ffixed2.C?ref=754ccf7c7c9db6326708936242365c2df354ffae", "patch": "@@ -3,5 +3,5 @@\n \n void foo()\n {\n-  throw 0r;\n+  throw 0r;\t// { dg-error \"not supported\" }\n }"}, {"sha": "a3389a01a9735cc6604121298bcc4e89b6d73c97", "filename": "gcc/testsuite/g++.dg/lookup/crash7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fcrash7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fcrash7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fcrash7.C?ref=754ccf7c7c9db6326708936242365c2df354ffae", "patch": "@@ -5,5 +5,5 @@ void foo(int);\n \n void bar()\n {\n-  foo(1r); // { dg-error \"unnamed-fixed\" }\n+  foo(1r); // { dg-error \"not supported\" }\n }"}, {"sha": "b5b665a2edcc8b2027352e82475e0a54742acb3a", "filename": "gcc/testsuite/g++.dg/other/error25.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror25.C?ref=754ccf7c7c9db6326708936242365c2df354ffae", "patch": "@@ -1,5 +1,5 @@\n // PR c++/35338\n // { dg-options \"\" }\n \n-int i = 0r; // { dg-error \"unnamed-fixed\" }\n-bool b = !0r; // { dg-error \"0.0|argument\" }\n+int i = 0r; // { dg-error \"not supported\" }\n+bool b = !0r; // { dg-error \"not supported\" }"}, {"sha": "97bbf70225c89ab1e428910123616f4121f3a5a9", "filename": "gcc/testsuite/gcc.dg/nofixed-point-2.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Ftestsuite%2Fgcc.dg%2Fnofixed-point-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ccf7c7c9db6326708936242365c2df354ffae/gcc%2Ftestsuite%2Fgcc.dg%2Fnofixed-point-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnofixed-point-2.c?ref=754ccf7c7c9db6326708936242365c2df354ffae", "patch": "@@ -0,0 +1,30 @@\n+/* PR inline-asm/39059 */\n+/* { dg-do compile { target {! fixed_point} } } */\n+/* { dg-options \"-std=gnu99\" } */\n+\n+void\n+f1 (void)\n+{\n+  asm (\"\" : : \"r\" (0r));       /* { dg-error \"not supported\" \"reject fixed-point\" } */\n+}\n+\n+__typeof (0r)\t\t       /* { dg-error \"not supported\" \"reject fixed-point\" } */\n+b2 (void)\n+{\n+  return 0r;\t\t       /* { dg-error \"not supported\" \"reject fixed-point\" } */\n+}\n+\n+_Accum\t\t\t       /* { dg-error \"not supported\" \"reject fixed-point\" } */\n+f3 (void)\n+{\n+  return 0k;\t\t\t/* { dg-error \"not supported\" \"reject fixed-point\" } */\n+}\n+\n+_Sat\n+f4 (void)\t\t\t/* { dg-error \"not supported\" \"reject fixed-point\" } */\n+{\n+  return 0k;\t\t\t/* { dg-error \"not supported\" \"reject fixed-point\" } */\n+}\n+\n+/* { dg-warning \"defaults to\" \"\" { target *-*-* } 13 } */\n+/* { dg-error \"is used without\" \"\" { target *-*-* } 24 } */"}]}