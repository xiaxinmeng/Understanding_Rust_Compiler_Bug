{"sha": "4a5d0fb5959a5dd39e1fcf765de5912dfb2febd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE1ZDBmYjU5NTlhNWRkMzllMWZjZjc2NWRlNTkxMmRmYjJmZWJkOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-26T22:48:08Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-26T22:48:08Z"}, "message": "(eliminate_regs_in_insn): Rerecognize if move insn becomes a non-move.\n\nFrom-SVN: r2257", "tree": {"sha": "ec873348bd55969d04797de7e4caabcb2f6ba885", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec873348bd55969d04797de7e4caabcb2f6ba885"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a5d0fb5959a5dd39e1fcf765de5912dfb2febd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a5d0fb5959a5dd39e1fcf765de5912dfb2febd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a5d0fb5959a5dd39e1fcf765de5912dfb2febd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a5d0fb5959a5dd39e1fcf765de5912dfb2febd8/comments", "author": null, "committer": null, "parents": [{"sha": "a6b65dff2f9dd9f84cec3c97644a2448c1ff7fe9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6b65dff2f9dd9f84cec3c97644a2448c1ff7fe9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6b65dff2f9dd9f84cec3c97644a2448c1ff7fe9"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "42dedcaf9173bda8b3de7d67cb2d8d4d78586c71", "filename": "gcc/reload1.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5d0fb5959a5dd39e1fcf765de5912dfb2febd8/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5d0fb5959a5dd39e1fcf765de5912dfb2febd8/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=4a5d0fb5959a5dd39e1fcf765de5912dfb2febd8", "patch": "@@ -2987,9 +2987,21 @@ eliminate_regs_in_insn (insn, replace)\n   new_body = eliminate_regs (old_body, 0, replace ? insn : NULL_RTX);\n   if (new_body != old_body)\n     {\n-      if (GET_CODE (old_body) != SET || GET_CODE (SET_SRC (old_body)) != PLUS\n-\t  || ! validate_change (insn, &PATTERN (insn), new_body, 0))\n+      /* If we had a move insn but now we don't, rerecognize it.  */\n+      if (GET_CODE (old_body) == SET && GET_CODE (SET_SRC (old_body)) == REG\n+\t  && (GET_CODE (new_body) != SET\n+\t      || GET_CODE (SET_SRC (new_body)) != REG))\n+\t{\n+\t  if (! validate_change (insn, &PATTERN (insn), new_body, 0))\n+\t    abort ();\n+\t}\n+      /* If this was not a move insn, rerecognize.  */\n+      else if (GET_CODE (old_body) != SET\n+\t       || GET_CODE (SET_SRC (old_body)) != PLUS\n+\t       || ! validate_change (insn, &PATTERN (insn), new_body, 0))\n \tPATTERN (insn) = new_body;\n+      /* ??? Is it really correct to store the new body anyway\n+\t if validate_change fails?  Shouldn't this abort instead?  */\n \n       if (replace && REG_NOTES (insn))\n \tREG_NOTES (insn) = eliminate_regs (REG_NOTES (insn), 0, NULL_RTX);"}]}