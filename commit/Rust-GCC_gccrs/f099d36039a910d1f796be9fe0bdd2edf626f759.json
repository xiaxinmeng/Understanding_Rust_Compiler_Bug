{"sha": "f099d36039a910d1f796be9fe0bdd2edf626f759", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA5OWQzNjAzOWE5MTBkMWY3OTZiZTlmZTBiZGQyZWRmNjI2Zjc1OQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2003-01-31T01:42:38Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-01-31T01:42:38Z"}, "message": "Index: ChangeLog\n2003-01-30  Geoffrey Keating  <geoffk@apple.com>\n\n\t* gengtype.c (struct walk_type_data): Add needs_cast_p.\n\t(walk_type): Set needs_cast_p in walk_type_data.\n\t(write_types_process_field): Supply casts when required to suppress\n\twarnings.\n\t(write_root): Cast gt_pch_n_S to suppress warning.\n\t* Makefile.in: Remove -Wno-error from gtype-desc.o and c-decl.o.\n\t* cp/Make-lang.in: Remove -Wno-error from cp/decl.o.\n\t* config/rs6000/rs6000.c (print_operand): Mask off high bits only\n\twhen they might exist.\n\t* config/rs6000/t-rs6000: Remove -Wno-error from varasm.o,\n\tinsn-conditions.o, and rs6000.o.\n\nIndex: cp/ChangeLog\n2003-01-30  Geoffrey Keating  <geoffk@apple.com>\n\n\t* cp/Make-lang.in: Remove -Wno-error from cp/decl.o.\n\nFrom-SVN: r62170", "tree": {"sha": "ad366bc70845e5f14c9197e64c5e1a7220fae769", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad366bc70845e5f14c9197e64c5e1a7220fae769"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f099d36039a910d1f796be9fe0bdd2edf626f759", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f099d36039a910d1f796be9fe0bdd2edf626f759", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f099d36039a910d1f796be9fe0bdd2edf626f759", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f099d36039a910d1f796be9fe0bdd2edf626f759/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4f7e3dcf7e423dc2b7e8f5e9ae45fc91c7a2e406", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f7e3dcf7e423dc2b7e8f5e9ae45fc91c7a2e406", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f7e3dcf7e423dc2b7e8f5e9ae45fc91c7a2e406"}], "stats": {"total": 62, "additions": 43, "deletions": 19}, "files": [{"sha": "e7ff50b6a0dfc267c4fd3ca10f1c36abef995a56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f099d36039a910d1f796be9fe0bdd2edf626f759/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f099d36039a910d1f796be9fe0bdd2edf626f759/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f099d36039a910d1f796be9fe0bdd2edf626f759", "patch": "@@ -1,3 +1,17 @@\n+2003-01-30  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* gengtype.c (struct walk_type_data): Add needs_cast_p.\n+\t(walk_type): Set needs_cast_p in walk_type_data.\n+\t(write_types_process_field): Supply casts when required to suppress\n+\twarnings.\n+\t(write_root): Cast gt_pch_n_S to suppress warning.\n+\t* Makefile.in: Remove -Wno-error from gtype-desc.o and c-decl.o.\n+\t* cp/Make-lang.in: Remove -Wno-error from cp/decl.o.\n+\t* config/rs6000/rs6000.c (print_operand): Mask off high bits only\n+\twhen they might exist.\n+\t* config/rs6000/t-rs6000: Remove -Wno-error from varasm.o,\n+\tinsn-conditions.o, and rs6000.o.\n+\n 2003-01-30  Richard Henderson  <rth@redhat.com>\n \n \t* ggc-page.c (G.context_depth_allocations): New."}, {"sha": "8dae5fecdbf08edb24d4119270c1097846cd7338", "filename": "gcc/Makefile.in", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f099d36039a910d1f796be9fe0bdd2edf626f759/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f099d36039a910d1f796be9fe0bdd2edf626f759/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=f099d36039a910d1f796be9fe0bdd2edf626f759", "patch": "@@ -112,9 +112,6 @@ VALGRIND_DRIVER_DEFINES = @valgrind_path_defines@\n GCC_WARN_CFLAGS = $(LOOSE_WARN) $($(@D)-warn) $(NOCOMMON_FLAG) $(WERROR) $($@-warn)\n \n # These files are to have -Werror bypassed in stage2:\n-# These contain warnings from the PCH merge.\n-gtype-desc.o-warn = -Wno-error\n-c-decl.o-warn = -Wno-error\n # These are very hard to completely clean due to target complexities.\n varasm.o-warn = -Wno-error\n gcc.o-warn = -Wno-error"}, {"sha": "bf5cddd9f63581f3edac3d4a8bf2f47dd8b1f130", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f099d36039a910d1f796be9fe0bdd2edf626f759/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f099d36039a910d1f796be9fe0bdd2edf626f759/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=f099d36039a910d1f796be9fe0bdd2edf626f759", "patch": "@@ -7780,13 +7780,17 @@ print_operand (file, x, code)\n \n       if (uval & 1)\t/* Clear Left */\n \t{\n-\t  uval &= ((unsigned HOST_WIDE_INT) 1 << 63 << 1) - 1;\n+#if HOST_BITS_PER_WIDE_INT > 64\n+\t  uval &= ((unsigned HOST_WIDE_INT) 1 << 64) - 1;\n+#endif\n \t  i = 64;\n \t}\n       else\t\t/* Clear Right */\n \t{\n \t  uval = ~uval;\n-\t  uval &= ((unsigned HOST_WIDE_INT) 1 << 63 << 1) - 1;\n+#if HOST_BITS_PER_WIDE_INT > 64\n+\t  uval &= ((unsigned HOST_WIDE_INT) 1 << 64) - 1;\n+#endif\n \t  i = 63;\n \t}\n       while (uval != 0)\n@@ -10631,7 +10635,7 @@ rs6000_emit_prologue ()\n       && flag_pic && current_function_uses_pic_offset_table)\n     {\n       rtx dest = gen_rtx_REG (Pmode, LINK_REGISTER_REGNUM);\n-      char *picbase = machopic_function_base_name ();\n+      const char *picbase = machopic_function_base_name ();\n       rtx src = gen_rtx_SYMBOL_REF (Pmode, ggc_alloc_string (picbase, -1));\n \n       rs6000_maybe_dead (emit_insn (gen_load_macho_picbase (dest, src)));"}, {"sha": "8806c2e62ed2c8fd28e5c9487f6c03fd4964d258", "filename": "gcc/config/rs6000/t-rs6000", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f099d36039a910d1f796be9fe0bdd2edf626f759/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f099d36039a910d1f796be9fe0bdd2edf626f759/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-rs6000?ref=f099d36039a910d1f796be9fe0bdd2edf626f759", "patch": "@@ -15,3 +15,7 @@ rs6000-c.o: $(srcdir)/config/rs6000/rs6000-c.c \\\n     $(TM_P_H) c-pragma.h errors.h coretypes.h $(TM_H)\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/rs6000/rs6000-c.c\n \n+# The rs6000 backend doesn't cause warnings in these files.\n+varasm.o-warn =\n+insn-conditions.o-warn =\n+$(out_object_file)-warn ="}, {"sha": "a9dd91e0376e05b606954571bde3efd280882bc1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f099d36039a910d1f796be9fe0bdd2edf626f759/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f099d36039a910d1f796be9fe0bdd2edf626f759/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f099d36039a910d1f796be9fe0bdd2edf626f759", "patch": "@@ -1,3 +1,7 @@\n+2003-01-30  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* cp/Make-lang.in: Remove -Wno-error from cp/decl.o.\n+\n 2003-01-30  Mark Mitchell  <mark@codesourcery.com>\n \n \t* class.c (check_field_decls): Only check C_TYPE_FIELDS_READONLY"}, {"sha": "347b71a906a85b6d9ac12465af8ba7a57ca0dc7e", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f099d36039a910d1f796be9fe0bdd2edf626f759/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f099d36039a910d1f796be9fe0bdd2edf626f759/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=f099d36039a910d1f796be9fe0bdd2edf626f759", "patch": "@@ -90,8 +90,6 @@ CXX_OBJS = cp/call.o cp/decl.o cp/expr.o cp/pt.o cp/typeck2.o \\\n \n # Use loose warnings for this front end.\n cp-warn =\n-# This contains warnings from the PCH merge.\n-cp/decl.o-warn = -Wno-error\n \n cc1plus$(exeext): $(CXX_OBJS) $(CXX_C_OBJS) $(BACKEND) \\\n \t\t  libcpp.a $(LIBDEPS)"}, {"sha": "319553d972a14e343c5b9cbe90aca8b1e2a3f017", "filename": "gcc/gengtype.c", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f099d36039a910d1f796be9fe0bdd2edf626f759/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f099d36039a910d1f796be9fe0bdd2edf626f759/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=f099d36039a910d1f796be9fe0bdd2edf626f759", "patch": "@@ -1430,6 +1430,7 @@ struct walk_type_data\n   int used_length;\n   type_p orig_s;\n   const char *reorder_fn;\n+  int needs_cast_p;\n };\n \n /* Print a mangled name representing T to OF.  */\n@@ -1534,9 +1535,9 @@ walk_type (t, d)\n   int maybe_undef_p = 0;\n   int use_param_num = -1;\n   int use_params_p = 0;\n-  int needs_cast_p = 0;\n   options_p oo;\n   \n+  d->needs_cast_p = 0;\n   for (oo = d->opt; oo; oo = oo->next)\n     if (strcmp (oo->name, \"length\") == 0)\n       length = (const char *)oo->info;\n@@ -1603,8 +1604,9 @@ walk_type (t, d)\n \t    nt = create_array (nt, t->u.a.len);\n \t  else if (length != NULL && t->kind == TYPE_POINTER)\n \t    nt = create_pointer (nt);\n-\t  needs_cast_p = (t->kind != TYPE_POINTER\n-\t\t\t  && nt->kind == TYPE_POINTER);\n+\t  d->needs_cast_p = (t->kind != TYPE_POINTER\n+\t\t\t     && (nt->kind == TYPE_POINTER\n+\t\t\t\t || nt->kind == TYPE_STRING));\n \t  t = nt;\n \t}\n       else\n@@ -1890,13 +1892,14 @@ write_types_process_field (f, d)\n      const struct walk_type_data *d;\n {\n   const struct write_types_data *wtd;\n+  const char *cast = d->needs_cast_p ? \"(void *)\" : \"\";\n   wtd = (const struct write_types_data *) d->cookie;\n   \n   switch (f->kind)\n     {\n     case TYPE_POINTER:\n-      oprintf (d->of, \"%*s%s (%s\", d->indent, \"\", \n-\t       wtd->subfield_marker_routine, d->val);\n+      oprintf (d->of, \"%*s%s (%s%s\", d->indent, \"\", \n+\t       wtd->subfield_marker_routine, cast, d->val);\n       if (wtd->param_prefix)\n \t{\n \t  oprintf (d->of, \", %s\", d->prev_val[3]);\n@@ -1910,8 +1913,8 @@ write_types_process_field (f, d)\n \t}\n       oprintf (d->of, \");\\n\");\n       if (d->reorder_fn && wtd->reorder_note_routine)\n-\toprintf (d->of, \"%*s%s (%s, %s, %s);\\n\", d->indent, \"\", \n-\t\t wtd->reorder_note_routine, d->val,\n+\toprintf (d->of, \"%*s%s (%s%s, %s, %s);\\n\", d->indent, \"\", \n+\t\t wtd->reorder_note_routine, cast, d->val,\n \t\t d->prev_val[3], d->reorder_fn);\n       break;\n \n@@ -1925,10 +1928,10 @@ write_types_process_field (f, d)\n     case TYPE_PARAM_STRUCT:\n       oprintf (d->of, \"%*sgt_%s_\", d->indent, \"\", wtd->prefix);\n       output_mangled_typename (d->of, f);\n-      oprintf (d->of, \" (%s);\\n\", d->val);\n+      oprintf (d->of, \" (%s%s);\\n\", cast, d->val);\n       if (d->reorder_fn && wtd->reorder_note_routine)\n-\toprintf (d->of, \"%*s%s (%s, %s, %s);\\n\", d->indent, \"\", \n-\t\t wtd->reorder_note_routine, d->val, d->val,\n+\toprintf (d->of, \"%*s%s (%s%s, %s%s, %s);\\n\", d->indent, \"\", \n+\t\t wtd->reorder_note_routine, cast, d->val, cast, d->val,\n \t\t d->reorder_fn);\n       break;\n \n@@ -2654,7 +2657,7 @@ write_root (f, v, type, name, has_length, line, if_marked)\n \toprintf (f, \"    1, \\n\");\n \toprintf (f, \"    sizeof (%s),\\n\", v->name);\n \toprintf (f, \"    &gt_ggc_m_S,\\n\");\n-\toprintf (f, \"    &gt_pch_n_S\\n\");\n+\toprintf (f, \"    (gt_pointer_walker) &gt_pch_n_S\\n\");\n \toprintf (f, \"  },\\n\");\n       }\n       break;"}]}