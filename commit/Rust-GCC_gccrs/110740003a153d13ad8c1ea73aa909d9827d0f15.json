{"sha": "110740003a153d13ad8c1ea73aa909d9827d0f15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEwNzQwMDAzYTE1M2QxM2FkOGMxZWE3M2FhOTA5ZDk4MjdkMGYxNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-01-28T04:31:01Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-01-28T04:31:01Z"}, "message": "re PR c++/58812 (ICE initializing an r-value reference with an initializer list)\n\n\tPR c++/58812\n\t* call.c (convert_like_real): Give helpful error about excess braces\n\tfor ck_rvalue of scalar type.\n\nFrom-SVN: r207165", "tree": {"sha": "9438ff743a38c5681b50f3cd6f4fd753a2d54127", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9438ff743a38c5681b50f3cd6f4fd753a2d54127"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/110740003a153d13ad8c1ea73aa909d9827d0f15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/110740003a153d13ad8c1ea73aa909d9827d0f15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/110740003a153d13ad8c1ea73aa909d9827d0f15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/110740003a153d13ad8c1ea73aa909d9827d0f15/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f235ad118fed420d99d985b116a3c6a1d054d398", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f235ad118fed420d99d985b116a3c6a1d054d398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f235ad118fed420d99d985b116a3c6a1d054d398"}], "stats": {"total": 39, "additions": 34, "deletions": 5}, "files": [{"sha": "fdd9bcaceadfbae305cec98dbdaaa9730b9c2ed6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/110740003a153d13ad8c1ea73aa909d9827d0f15/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/110740003a153d13ad8c1ea73aa909d9827d0f15/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=110740003a153d13ad8c1ea73aa909d9827d0f15", "patch": "@@ -1,5 +1,10 @@\n 2014-01-27  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/58812\n+\tPR c++/58651\n+\t* call.c (convert_like_real): Give helpful error about excess braces\n+\tfor ck_rvalue of scalar type.\n+\n \tCore DR 1288\n \t* call.c (reference_binding): Only elide braces if the single\n \telement is reference-related."}, {"sha": "b72f2d42065744d9676496f2b8bc9ecc3765ce0d", "filename": "gcc/cp/call.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/110740003a153d13ad8c1ea73aa909d9827d0f15/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/110740003a153d13ad8c1ea73aa909d9827d0f15/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=110740003a153d13ad8c1ea73aa909d9827d0f15", "patch": "@@ -5879,17 +5879,25 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n       && convs->kind != ck_ambig\n       && (convs->kind != ck_ref_bind\n \t  || convs->user_conv_p)\n-      && convs->kind != ck_rvalue\n+      && (convs->kind != ck_rvalue\n+\t  || SCALAR_TYPE_P (totype))\n       && convs->kind != ck_base)\n     {\n+      bool complained = false;\n       conversion *t = convs;\n \n       /* Give a helpful error if this is bad because of excess braces.  */\n       if (BRACE_ENCLOSED_INITIALIZER_P (expr)\n \t  && SCALAR_TYPE_P (totype)\n \t  && CONSTRUCTOR_NELTS (expr) > 0\n \t  && BRACE_ENCLOSED_INITIALIZER_P (CONSTRUCTOR_ELT (expr, 0)->value))\n-\tpermerror (loc, \"too many braces around initializer for %qT\", totype);\n+\t{\n+\t  complained = permerror (loc, \"too many braces around initializer \"\n+\t\t\t\t  \"for %qT\", totype);\n+\t  while (BRACE_ENCLOSED_INITIALIZER_P (expr)\n+\t\t && CONSTRUCTOR_NELTS (expr) == 1)\n+\t    expr = CONSTRUCTOR_ELT (expr, 0)->value;\n+\t}\n \n       for (; t ; t = next_conversion (t))\n \t{\n@@ -5925,9 +5933,10 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \t  else if (t->kind == ck_identity)\n \t    break;\n \t}\n-       if (permerror (loc, \"invalid conversion from %qT to %qT\",\n-                    TREE_TYPE (expr), totype)\n-\t   && fn)\n+      if (!complained)\n+\tcomplained = permerror (loc, \"invalid conversion from %qT to %qT\",\n+\t\t\t\tTREE_TYPE (expr), totype);\n+      if (complained && fn)\n \tinform (DECL_SOURCE_LOCATION (fn),\n \t\t\"initializing argument %P of %qD\", argnum, fn);\n "}, {"sha": "ac419dde8cf38b06304b764bb823367c244e0148", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist76.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/110740003a153d13ad8c1ea73aa909d9827d0f15/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist76.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/110740003a153d13ad8c1ea73aa909d9827d0f15/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist76.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist76.C?ref=110740003a153d13ad8c1ea73aa909d9827d0f15", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/58812\n+// { dg-require-effective-target c++11 }\n+\n+int i;\n+int&& j{{ i }};\t\t\t// { dg-error \"too many braces\" }"}, {"sha": "49b9079fb44580e1ea569a94d3059d65a0b07582", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist77.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/110740003a153d13ad8c1ea73aa909d9827d0f15/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist77.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/110740003a153d13ad8c1ea73aa909d9827d0f15/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist77.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist77.C?ref=110740003a153d13ad8c1ea73aa909d9827d0f15", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/58651\n+// { dg-require-effective-target c++11 }\n+\n+struct A\n+{\n+  int i;\n+  A(int j) : i{{j}} {}\t\t// { dg-error \"too many braces\" }\n+};\n+\n+A a(0);"}]}