{"sha": "aba5fb01be1aad35abf7357adbdb893798d1b107", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJhNWZiMDFiZTFhYWQzNWFiZjczNTdhZGJkYjg5Mzc5OGQxYjEwNw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2004-11-25T12:43:39Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-11-25T12:43:39Z"}, "message": "altivec.md (VIshort): New mode macro.\n\n\t* config/rs6000/altivec.md (VIshort): New mode macro.\n\t(altivec_vaddubs, altivec_vadduhs, altivec_vadduws): Replace\n\twith ...\n\t(altivec_vaddu<VI_char>s): ... this.\n\t(altivec_vaddsbs, altivec_vaddshs, altivec_vaddsws): Replace\n\twith ...\n\t(altivec_vadds<VI_char>s): ... this.\n\t(altivec_vsububs, altivec_vsubuhs, altivec_vsubuws): Replace\n\twith ...\n\t(altivec_vsubu<VI_char>s): ... this.\n\t(altivec_vsubsbs, altivec_vsubshs, altivec_vsubsws): Replace\n\twith ...\n\t(altivec_vsubs<VI_char>s): ... this.\n\t(altivec_vavgub, altivec_vavguh, altivec_vavguw): Replace\n\twith ...\n\t(altivec_vavgu<VI_char>): ... this.\n\t(altivec_vavgsb, altivec_vavgsh, altivec_vavgsw): Replace\n\twith ...\n\t(altivec_vavgs<VI_char>): ... this.\n\t(altivec_vmsumubm, altivec_vmsumuhm): Replace with ...\n\t(altivec_vmsumu<VI_char>m): ... this.\n\t(altivec_vmsummbm, altivec_vmsummhm): Replace\n\twith ...\n\t(altivec_vmsumm<VI_char>m): ... this.\n\t(altivec_vandc): Remove.\n\t(*andc<mode>3): Renamed to ...\n\t(andc<mode>3): ... here. Swap operand 1 and 2 numbering.\n\t(altivec_vrlb, altivec_vrlh, altivec_vrlw): Replace\n\twith ...\n\t(altivec_vrl<VI_char>): ... this.\n\t(altivec_vslb, altivec_vslh, altivec_vslw): Replace\n\twith ...\n\t(altivec_vsl<VI_char>): ... this.\n\t(altivec_vsrb, altivec_vsrh, altivec_vsrw): Replace\n\twith ...\n\t(altivec_vsr<VI_char>): ... this.\n\t(altivec_vsrab, altivec_vsrah, altivec_vsraw): Replace\n\twith ...\n\t(altivec_vsra<VI_char>): ... this.\n\t(altivec_vsum4sbs, altivec_vsum4shs): Replace with ...\n\t(altivec_vsum4s<VI_char>s): ... this.\n\t(altivec_vperm_4si, altivec_vperm_8hi, altivec_vperm_16qi): Replace\n\twith ...\n\t(altivec_vperm_<mode>): ... this.\n\t(altivec_vsel_4sf): Rename to ...\n\t(altivec_vsel_v4sf): ... here.\n\t(altivec_vsel_4si, altivec_vsel_8hi, altivec_vsel_16qi): Replace\n\twith ...\n\t(altivec_vsel_<mode>): ... this.\n\t(altivec_vsldoi_4si, altivec_vsldoi_8hi,\n\taltivec_vsldoi_16qi): Rename to ...\n\t(altivec_vsldoi_v4si, altivec_vsldoi_v8hi,\n\taltivec_vsldoi_v16qi): ... here.\n\t(altivec_vsldoi_4sf): Rename to ...\n\t(altivec_vsldoi_v4sf): ... here.\n\t(altivec_predicate_v4si, altivec_predicate_v8hi,\n\taltivec_predicate_v16qi): Replace with ...\n\t(altivec_predicate_<mode>): ... this.\n\t(altivec_lvebx, altivec_lvehx, altivec_lvewx): Replace\n\twith ...\n\t(altivec_lve<VI_char>x): ... this.\n\t(altivec_stvebx, altivec_stvehx, altivec_stvewx): Replace\n\twith ...\n\t(altivec_stve<VI_char>x): ... this.\n\t(absv16qi2, absv8hi2, absv4si2): Replace\n\twith ...\n\t(abs<mode>2): ... this.\n\t(altivec_abss_v16qi, altivec_abss_v8hi, altivec_abss_v4si): Replace\n\twith ...\n\t(altivec_abss_<mode>): ... this.\n\t(vec_realign_load_v16qi, vec_realign_load_v8hi,\n\tvec_realign_load_v4si): Replace with ...\n\t(vec_realign_load_<mode>): ... this.\n\t* config/rs6000/rs6000.c (bdesc_3arg, bdesc_2arg): Update tweaked\n\tinsn names.\n\t(rs6000_expand_ternop_builtin): Likewise.\n\nFrom-SVN: r91287", "tree": {"sha": "3e84f85f6b5783dac8f4a6f4989d0a6d2b4a3ec1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e84f85f6b5783dac8f4a6f4989d0a6d2b4a3ec1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aba5fb01be1aad35abf7357adbdb893798d1b107", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aba5fb01be1aad35abf7357adbdb893798d1b107", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aba5fb01be1aad35abf7357adbdb893798d1b107", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aba5fb01be1aad35abf7357adbdb893798d1b107/comments", "author": null, "committer": null, "parents": [{"sha": "8f9bd7769aac77da2805204bdc7fd883deb59e8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f9bd7769aac77da2805204bdc7fd883deb59e8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f9bd7769aac77da2805204bdc7fd883deb59e8a"}], "stats": {"total": 662, "additions": 208, "deletions": 454}, "files": [{"sha": "3868cf8e1ecb0cf8a19e9c7fc2312b5f30243b23", "filename": "gcc/ChangeLog", "status": "modified", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aba5fb01be1aad35abf7357adbdb893798d1b107/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aba5fb01be1aad35abf7357adbdb893798d1b107/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aba5fb01be1aad35abf7357adbdb893798d1b107", "patch": "@@ -1,3 +1,82 @@\n+2004-11-25  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* config/rs6000/altivec.md (VIshort): New mode macro.\n+\t(altivec_vaddubs, altivec_vadduhs, altivec_vadduws): Replace\n+\twith ...\n+\t(altivec_vaddu<VI_char>s): ... this.\n+\t(altivec_vaddsbs, altivec_vaddshs, altivec_vaddsws): Replace\n+\twith ...\n+\t(altivec_vadds<VI_char>s): ... this.\n+\t(altivec_vsububs, altivec_vsubuhs, altivec_vsubuws): Replace\n+\twith ...\n+\t(altivec_vsubu<VI_char>s): ... this.\n+\t(altivec_vsubsbs, altivec_vsubshs, altivec_vsubsws): Replace\n+\twith ...\n+\t(altivec_vsubs<VI_char>s): ... this.\n+\t(altivec_vavgub, altivec_vavguh, altivec_vavguw): Replace\n+\twith ...\n+\t(altivec_vavgu<VI_char>): ... this.\n+\t(altivec_vavgsb, altivec_vavgsh, altivec_vavgsw): Replace\n+\twith ...\n+\t(altivec_vavgs<VI_char>): ... this.\n+\t(altivec_vmsumubm, altivec_vmsumuhm): Replace with ...\n+\t(altivec_vmsumu<VI_char>m): ... this.\n+\t(altivec_vmsummbm, altivec_vmsummhm): Replace\n+\twith ...\n+\t(altivec_vmsumm<VI_char>m): ... this.\n+\t(altivec_vandc): Remove.\n+\t(*andc<mode>3): Renamed to ...\n+\t(andc<mode>3): ... here. Swap operand 1 and 2 numbering.\n+\t(altivec_vrlb, altivec_vrlh, altivec_vrlw): Replace\n+\twith ...\n+\t(altivec_vrl<VI_char>): ... this.\n+\t(altivec_vslb, altivec_vslh, altivec_vslw): Replace\n+\twith ...\n+\t(altivec_vsl<VI_char>): ... this.\n+\t(altivec_vsrb, altivec_vsrh, altivec_vsrw): Replace\n+\twith ...\n+\t(altivec_vsr<VI_char>): ... this.\n+\t(altivec_vsrab, altivec_vsrah, altivec_vsraw): Replace\n+\twith ...\n+\t(altivec_vsra<VI_char>): ... this.\n+\t(altivec_vsum4sbs, altivec_vsum4shs): Replace with ...\n+\t(altivec_vsum4s<VI_char>s): ... this.\n+\t(altivec_vperm_4si, altivec_vperm_8hi, altivec_vperm_16qi): Replace\n+\twith ...\n+\t(altivec_vperm_<mode>): ... this.\n+\t(altivec_vsel_4sf): Rename to ...\n+\t(altivec_vsel_v4sf): ... here.\n+\t(altivec_vsel_4si, altivec_vsel_8hi, altivec_vsel_16qi): Replace\n+\twith ...\n+\t(altivec_vsel_<mode>): ... this.\n+\t(altivec_vsldoi_4si, altivec_vsldoi_8hi,\n+\taltivec_vsldoi_16qi): Rename to ...\n+\t(altivec_vsldoi_v4si, altivec_vsldoi_v8hi,\n+\taltivec_vsldoi_v16qi): ... here.\n+\t(altivec_vsldoi_4sf): Rename to ...\n+\t(altivec_vsldoi_v4sf): ... here.\n+\t(altivec_predicate_v4si, altivec_predicate_v8hi,\n+\taltivec_predicate_v16qi): Replace with ...\n+\t(altivec_predicate_<mode>): ... this.\n+\t(altivec_lvebx, altivec_lvehx, altivec_lvewx): Replace\n+\twith ...\n+\t(altivec_lve<VI_char>x): ... this.\n+\t(altivec_stvebx, altivec_stvehx, altivec_stvewx): Replace\n+\twith ...\n+\t(altivec_stve<VI_char>x): ... this.\n+\t(absv16qi2, absv8hi2, absv4si2): Replace\n+\twith ...\n+\t(abs<mode>2): ... this.\n+\t(altivec_abss_v16qi, altivec_abss_v8hi, altivec_abss_v4si): Replace\n+\twith ...\n+\t(altivec_abss_<mode>): ... this.\n+\t(vec_realign_load_v16qi, vec_realign_load_v8hi,\n+\tvec_realign_load_v4si): Replace with ...\n+\t(vec_realign_load_<mode>): ... this.\n+\t* config/rs6000/rs6000.c (bdesc_3arg, bdesc_2arg): Update tweaked\n+\tinsn names.\n+\t(rs6000_expand_ternop_builtin): Likewise.\n+\n 2004-11-25  Andrew Haley  <aph@redhat.com>\n \n \t* gcc.c (process_command): Don't supply -v to linker.\n@@ -796,6 +875,7 @@\n \n 2004-11-22  Nathan Sidwell  <nathan@codesourcery.com>\n \n+\tPR target/18531\n \t* config/rs6000/altivec.md (VI_char): New mode attribute.\n \t(addv16qi3, addv8hi3, addv4ai3): Replace with ...\n \t(add<mode>3): ... this."}, {"sha": "6084e165b1ddf3a84d1ea03998ae975b359e95b7", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 111, "deletions": 437, "changes": 548, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aba5fb01be1aad35abf7357adbdb893798d1b107/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aba5fb01be1aad35abf7357adbdb893798d1b107/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=aba5fb01be1aad35abf7357adbdb893798d1b107", "patch": "@@ -48,6 +48,8 @@\n \n ;; Vec int modes\n (define_mode_macro VI [V4SI V8HI V16QI])\n+;; Short vec in modes\n+(define_mode_macro VIshort [V8HI V16QI])\n ;; Vec float modes\n (define_mode_macro VF [V4SF])\n ;; Vec modes, pity mode macros are not composable\n@@ -245,58 +247,22 @@\n   \"vaddcuw %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n-(define_insn \"altivec_vaddubs\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                       (match_operand:V16QI 2 \"register_operand\" \"v\")] 36))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n-  \"TARGET_ALTIVEC\"\n-  \"vaddubs %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vaddsbs\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                       (match_operand:V16QI 2 \"register_operand\" \"v\")] 37))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n-  \"TARGET_ALTIVEC\"\n-  \"vaddsbs %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vadduhs\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-        (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 38))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n-  \"TARGET_ALTIVEC\"\n-  \"vadduhs %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vaddshs\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-        (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 39))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n-  \"TARGET_ALTIVEC\"\n-  \"vaddshs %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vadduws\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 40))\n+(define_insn \"altivec_vaddu<VI_char>s\"\n+  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n+        (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n+                    (match_operand:VI 2 \"register_operand\" \"v\")] 36))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n-  \"vadduws %0,%1,%2\"\n+  \"vaddu<VI_char>s %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n-(define_insn \"altivec_vaddsws\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 41))\n+(define_insn \"altivec_vadds<VI_char>s\"\n+  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n+        (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n+                    (match_operand:VI 2 \"register_operand\" \"v\")] 37))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n-  \"vaddsws %0,%1,%2\"\n+  \"vadds<VI_char>s %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n ;; sub\n@@ -324,107 +290,39 @@\n   \"vsubcuw %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n-(define_insn \"altivec_vsububs\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                       (match_operand:V16QI 2 \"register_operand\" \"v\")] 125))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n-  \"TARGET_ALTIVEC\"\n-  \"vsububs %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vsubsbs\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                       (match_operand:V16QI 2 \"register_operand\" \"v\")] 126))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n-  \"TARGET_ALTIVEC\"\n-  \"vsubsbs %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vsubuhs\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-        (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 127))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n-  \"TARGET_ALTIVEC\"\n-  \"vsubuhs %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vsubshs\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-        (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 128))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n-  \"TARGET_ALTIVEC\"\n-  \"vsubshs %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vsubuws\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 129))\n+(define_insn \"altivec_vsubu<VI_char>s\"\n+  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n+        (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n+                    (match_operand:VI 2 \"register_operand\" \"v\")] 125))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n-  \"vsubuws %0,%1,%2\"\n+  \"vsubu<VI_char>s %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n-(define_insn \"altivec_vsubsws\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 130))\n+(define_insn \"altivec_vsubs<VI_char>s\"\n+  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n+        (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n+                    (match_operand:VI 2 \"register_operand\" \"v\")] 126))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n-  \"vsubsws %0,%1,%2\"\n+  \"vsubs<VI_char>s %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n ;;\n-(define_insn \"altivec_vavgub\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                       (match_operand:V16QI 2 \"register_operand\" \"v\")] 44))]\n-  \"TARGET_ALTIVEC\"\n-  \"vavgub %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vavgsb\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                       (match_operand:V16QI 2 \"register_operand\" \"v\")] 45))]\n-  \"TARGET_ALTIVEC\"\n-  \"vavgsb %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vavguh\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-        (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 46))]\n-  \"TARGET_ALTIVEC\"\n-  \"vavguh %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vavgsh\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-        (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 47))]\n-  \"TARGET_ALTIVEC\"\n-  \"vavgsh %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vavguw\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 48))]\n+(define_insn \"altivec_vavgu<VI_char>\"\n+  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n+        (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n+                    (match_operand:VI 2 \"register_operand\" \"v\")] 44))]\n   \"TARGET_ALTIVEC\"\n-  \"vavguw %0,%1,%2\"\n+  \"vavgu<VI_char> %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n-(define_insn \"altivec_vavgsw\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 49))]\n+(define_insn \"altivec_vavgs<VI_char>\"\n+  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n+        (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n+                    (match_operand:VI 2 \"register_operand\" \"v\")] 45))]\n   \"TARGET_ALTIVEC\"\n-  \"vavgsw %0,%1,%2\"\n+  \"vavgs<VI_char> %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vcmpbfp\"\n@@ -586,32 +484,22 @@\n   \"vnmsubfp %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecfloat\")])\n \n-\n-(define_insn \"altivec_vmsumubm\"\n+(define_insn \"altivec_vmsumu<VI_char>m\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (unspec:V4SI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-\t\t      (match_operand:V16QI 2 \"register_operand\" \"v\")\n+        (unspec:V4SI [(match_operand:VIshort 1 \"register_operand\" \"v\")\n+\t\t      (match_operand:VIshort 2 \"register_operand\" \"v\")\n                       (match_operand:V4SI 3 \"register_operand\" \"v\")] 65))]\n   \"TARGET_ALTIVEC\"\n-  \"vmsumubm %0,%1,%2,%3\"\n+  \"vmsumu<VI_char>m %0,%1,%2,%3\"\n   [(set_attr \"type\" \"veccomplex\")])\n \n-(define_insn \"altivec_vmsummbm\"\n+(define_insn \"altivec_vmsumm<VI_char>m\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (unspec:V4SI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-\t\t      (match_operand:V16QI 2 \"register_operand\" \"v\")\n+        (unspec:V4SI [(match_operand:VIshort 1 \"register_operand\" \"v\")\n+\t\t      (match_operand:VIshort 2 \"register_operand\" \"v\")\n                       (match_operand:V4SI 3 \"register_operand\" \"v\")] 66))]\n   \"TARGET_ALTIVEC\"\n-  \"vmsummbm %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"veccomplex\")])\n-\n-(define_insn \"altivec_vmsumuhm\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-\t\t      (match_operand:V8HI 2 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 3 \"register_operand\" \"v\")] 67))]\n-  \"TARGET_ALTIVEC\"\n-  \"vmsumuhm %0,%1,%2,%3\"\n+  \"vmsumm<VI_char>m %0,%1,%2,%3\"\n   [(set_attr \"type\" \"veccomplex\")])\n \n (define_insn \"altivec_vmsumshm\"\n@@ -936,20 +824,12 @@\n   \"vnor %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n-;; builtin_altivec_vandc (a, b) computes a & ~b, gcc's\n-;; canonicalization of that has the operands the other way round\n-(define_expand \"altivec_vandc\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (and:V4SI (not:V4SI (match_operand:V4SI 2 \"register_operand\" \"v\"))\n-                  (match_operand:V4SI 1 \"register_operand\" \"v\")))]\n-  \"TARGET_ALTIVEC\")\n-\n-(define_insn \"*andc<mode>3\"\n+(define_insn \"andc<mode>3\"\n   [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n-        (and:VI (not:VI (match_operand:VI 1 \"register_operand\" \"v\"))\n-                (match_operand:VI 2 \"register_operand\" \"v\")))]\n+        (and:VI (not:VI (match_operand:VI 2 \"register_operand\" \"v\"))\n+                (match_operand:VI 1 \"register_operand\" \"v\")))]\n   \"TARGET_ALTIVEC\"\n-  \"vandc %0,%2,%1\"\n+  \"vandc %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vpkuhum\"\n@@ -1048,52 +928,20 @@\n   \"vpkswus %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n-(define_insn \"altivec_vrlb\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                       (match_operand:V16QI 2 \"register_operand\" \"v\")] 104))]\n-  \"TARGET_ALTIVEC\"\n-  \"vrlb %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vrlh\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-        (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 105))]\n-  \"TARGET_ALTIVEC\"\n-  \"vrlh %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vrlw\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 106))]\n-  \"TARGET_ALTIVEC\"\n-  \"vrlw %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vslb\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                       (match_operand:V16QI 2 \"register_operand\" \"v\")] 107))]\n-  \"TARGET_ALTIVEC\"\n-  \"vslb %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vslh\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-        (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 108))]\n+(define_insn \"altivec_vrl<VI_char>\"\n+  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n+        (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n+                    (match_operand:VI 2 \"register_operand\" \"v\")] 104))]\n   \"TARGET_ALTIVEC\"\n-  \"vslh %0,%1,%2\"\n+  \"vrl<VI_char> %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n-(define_insn \"altivec_vslw\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 109))]\n+(define_insn \"altivec_vsl<VI_char>\"\n+  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n+        (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n+                    (match_operand:VI 2 \"register_operand\" \"v\")] 107))]\n   \"TARGET_ALTIVEC\"\n-  \"vslw %0,%1,%2\"\n+  \"vsl<VI_char> %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vslw_v4sf\"\n@@ -1120,52 +968,20 @@\n   \"vslo %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n-(define_insn \"altivec_vsrb\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                       (match_operand:V16QI 2 \"register_operand\" \"v\")] 112))]\n-  \"TARGET_ALTIVEC\"\n-  \"vsrb %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vsrh\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-        (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 113))]\n-  \"TARGET_ALTIVEC\"\n-  \"vsrh %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vsrw\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 114))]\n-  \"TARGET_ALTIVEC\"\n-  \"vsrw %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vsrab\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                       (match_operand:V16QI 2 \"register_operand\" \"v\")] 115))]\n-  \"TARGET_ALTIVEC\"\n-  \"vsrab %0,%1,%2\"\n-  [(set_attr \"type\" \"vecsimple\")])\n-\n-(define_insn \"altivec_vsrah\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-        (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"v\")] 116))]\n+(define_insn \"altivec_vsr<VI_char>\"\n+  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n+        (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n+                    (match_operand:VI 2 \"register_operand\" \"v\")] 112))]\n   \"TARGET_ALTIVEC\"\n-  \"vsrah %0,%1,%2\"\n+  \"vsr<VI_char> %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n-(define_insn \"altivec_vsraw\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 117))]\n+(define_insn \"altivec_vsra<VI_char>\"\n+  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n+        (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n+                    (match_operand:VI 2 \"register_operand\" \"v\")] 115))]\n   \"TARGET_ALTIVEC\"\n-  \"vsraw %0,%1,%2\"\n+  \"vsra<VI_char> %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vsr\"\n@@ -1193,22 +1009,13 @@\n   \"vsum4ubs %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n \n-(define_insn \"altivec_vsum4sbs\"\n+(define_insn \"altivec_vsum4s<VI_char>s\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (unspec:V4SI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n+        (unspec:V4SI [(match_operand:VIshort 1 \"register_operand\" \"v\")\n                       (match_operand:V4SI 2 \"register_operand\" \"v\")] 132))\n    (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n   \"TARGET_ALTIVEC\"\n-  \"vsum4sbs %0,%1,%2\"\n-  [(set_attr \"type\" \"veccomplex\")])\n-\n-(define_insn \"altivec_vsum4shs\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")] 133))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n-  \"TARGET_ALTIVEC\"\n-  \"vsum4shs %0,%1,%2\"\n+  \"vsum4s<VI_char>s %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n \n (define_insn \"altivec_vsum2sws\"\n@@ -1299,16 +1106,7 @@\n   \"vrfiz %0,%1\"\n   [(set_attr \"type\" \"vecfloat\")])\n \n-(define_insn \"altivec_vperm_4si\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-\t(unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-\t\t      (match_operand:V4SI 2 \"register_operand\" \"v\")\n-\t\t      (match_operand:V16QI 3 \"register_operand\" \"v\")] 144))]\n-  \"TARGET_ALTIVEC\"\n-  \"vperm %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"vecperm\")])\n-\n-(define_insn \"altivec_vperm_4sf\"\n+(define_insn \"altivec_vperm_v4sf\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n \t(unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")\n \t\t      (match_operand:V4SF 2 \"register_operand\" \"v\")\n@@ -1317,20 +1115,11 @@\n   \"vperm %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")])\n \n-(define_insn \"altivec_vperm_8hi\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-\t(unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-\t\t      (match_operand:V8HI 2 \"register_operand\" \"v\")\n-\t\t      (match_operand:V16QI 3 \"register_operand\" \"v\")] 146))]\n-  \"TARGET_ALTIVEC\"\n-  \"vperm %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"vecperm\")])\n-\n-(define_insn \"altivec_vperm_16qi\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-\t(unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-\t\t       (match_operand:V16QI 2 \"register_operand\" \"v\")\n-\t\t       (match_operand:V16QI 3 \"register_operand\" \"v\")] 147))]\n+(define_insn \"altivec_vperm_<mode>\"\n+  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n+\t(unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n+\t\t    (match_operand:VI 2 \"register_operand\" \"v\")\n+\t\t    (match_operand:V16QI 3 \"register_operand\" \"v\")] 144))]\n   \"TARGET_ALTIVEC\"\n   \"vperm %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")])\n@@ -1552,7 +1341,7 @@\n \t\")\n \n \n-(define_insn \"altivec_vsel_4si\"\n+(define_insn \"altivec_vsel_v4si\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n                       (match_operand:V4SI 2 \"register_operand\" \"v\")\n@@ -1562,7 +1351,7 @@\n   \"vsel %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")])\n \n-(define_insn \"altivec_vsel_4sf\"\n+(define_insn \"altivec_vsel_v4sf\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n         (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")\n                       (match_operand:V4SF 2 \"register_operand\" \"v\")\n@@ -1572,7 +1361,7 @@\n   \"vsel %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")])\n \n-(define_insn \"altivec_vsel_8hi\"\n+(define_insn \"altivec_vsel_v8hi\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n                       (match_operand:V8HI 2 \"register_operand\" \"v\")\n@@ -1582,7 +1371,7 @@\n   \"vsel %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")])\n \n-(define_insn \"altivec_vsel_16qi\"\n+(define_insn \"altivec_vsel_v16qi\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n                        (match_operand:V16QI 2 \"register_operand\" \"v\")\n@@ -1592,7 +1381,7 @@\n   \"vsel %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")])\n \n-(define_insn \"altivec_vsldoi_4si\"\n+(define_insn \"altivec_vsldoi_v4si\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n \t\t      (match_operand:V4SI 2 \"register_operand\" \"v\")\n@@ -1601,7 +1390,7 @@\n   \"vsldoi %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")])\n \n-(define_insn \"altivec_vsldoi_4sf\"\n+(define_insn \"altivec_vsldoi_v4sf\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n         (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")\n \t\t      (match_operand:V4SF 2 \"register_operand\" \"v\")\n@@ -1610,7 +1399,7 @@\n   \"vsldoi %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")])\n \n-(define_insn \"altivec_vsldoi_8hi\"\n+(define_insn \"altivec_vsldoi_v8hi\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n \t\t      (match_operand:V8HI 2 \"register_operand\" \"v\")\n@@ -1619,7 +1408,7 @@\n   \"vsldoi %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")])\n \n-(define_insn \"altivec_vsldoi_16qi\"\n+(define_insn \"altivec_vsldoi_v16qi\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n \t\t       (match_operand:V16QI 2 \"register_operand\" \"v\")\n@@ -1705,16 +1494,6 @@\n ;; We can get away with generating the opcode on the fly (%3 below)\n ;; because all the predicates have the same scheduling parameters.\n \n-(define_insn \"altivec_predicate_v4si\"\n-  [(set (reg:CC 74)\n-\t(unspec:CC [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-\t\t    (match_operand:V4SI 2 \"register_operand\" \"v\")\n-\t\t    (match_operand 3 \"any_operand\" \"\")] 173))\n-   (clobber (match_scratch:V4SI 0 \"=v\"))]\n-  \"TARGET_ALTIVEC\"\n-  \"%3 %0,%1,%2\"\n-[(set_attr \"type\" \"veccmp\")])\n-\n (define_insn \"altivec_predicate_v4sf\"\n   [(set (reg:CC 74)\n \t(unspec:CC [(match_operand:V4SF 1 \"register_operand\" \"v\")\n@@ -1725,22 +1504,12 @@\n   \"%3 %0,%1,%2\"\n [(set_attr \"type\" \"veccmp\")])\n \n-(define_insn \"altivec_predicate_v8hi\"\n+(define_insn \"altivec_predicate_<mode>\"\n   [(set (reg:CC 74)\n-\t(unspec:CC [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-\t\t    (match_operand:V8HI 2 \"register_operand\" \"v\")\n-\t\t    (match_operand 3 \"any_operand\" \"\")] 175))\n-   (clobber (match_scratch:V8HI 0 \"=v\"))]\n-  \"TARGET_ALTIVEC\"\n-  \"%3 %0,%1,%2\"\n-[(set_attr \"type\" \"veccmp\")])\n-\n-(define_insn \"altivec_predicate_v16qi\"\n-  [(set (reg:CC 74)\n-\t(unspec:CC [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-\t\t    (match_operand:V16QI 2 \"register_operand\" \"v\")\n-\t\t    (match_operand 3 \"any_operand\" \"\")] 175))\n-   (clobber (match_scratch:V16QI 0 \"=v\"))]\n+\t(unspec:CC [(match_operand:VI 1 \"register_operand\" \"v\")\n+\t\t    (match_operand:VI 2 \"register_operand\" \"v\")\n+\t\t    (match_operand 3 \"any_operand\" \"\")] 173))\n+   (clobber (match_scratch:VI 0 \"=v\"))]\n   \"TARGET_ALTIVEC\"\n   \"%3 %0,%1,%2\"\n [(set_attr \"type\" \"veccmp\")])\n@@ -1842,31 +1611,13 @@\n ;; Parallel some of the LVE* and STV*'s with unspecs because some have\n ;; identical rtl but different instructions-- and gcc gets confused.\n \n-(define_insn \"altivec_lvebx\"\n+(define_insn \"altivec_lve<VI_char>x\"\n   [(parallel\n-    [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-\t  (match_operand:V16QI 1 \"memory_operand\" \"m\"))\n+    [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n+\t  (match_operand:VI 1 \"memory_operand\" \"m\"))\n      (unspec [(const_int 0)] 196)])]\n   \"TARGET_ALTIVEC\"\n-  \"lvebx %0,%y1\"\n-  [(set_attr \"type\" \"vecload\")])\n-\n-(define_insn \"altivec_lvehx\"\n-  [(parallel\n-    [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-\t  (match_operand:V8HI 1 \"memory_operand\" \"m\"))\n-     (unspec [(const_int 0)] 197)])]\n-  \"TARGET_ALTIVEC\"\n-  \"lvehx %0,%y1\"\n-  [(set_attr \"type\" \"vecload\")])\n-\n-(define_insn \"altivec_lvewx\"\n-  [(parallel\n-    [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-\t  (match_operand:V4SI 1 \"memory_operand\" \"m\"))\n-     (unspec [(const_int 0)] 198)])]\n-  \"TARGET_ALTIVEC\"\n-  \"lvewx %0,%y1\"\n+  \"lve<VI_char>x %0,%y1\"\n   [(set_attr \"type\" \"vecload\")])\n \n (define_insn \"altivec_lvxl\"\n@@ -1903,60 +1654,22 @@\n   \"stvxl %1,%y0\"\n   [(set_attr \"type\" \"vecstore\")])\n \n-(define_insn \"altivec_stvebx\"\n+(define_insn \"altivec_stve<VI_char>x\"\n   [(parallel\n-    [(set (match_operand:V16QI 0 \"memory_operand\" \"=m\")\n-\t  (match_operand:V16QI 1 \"register_operand\" \"v\"))\n+    [(set (match_operand:VI 0 \"memory_operand\" \"=m\")\n+\t  (match_operand:VI 1 \"register_operand\" \"v\"))\n      (unspec [(const_int 0)] 203)])]\n   \"TARGET_ALTIVEC\"\n-  \"stvebx %1,%y0\"\n-  [(set_attr \"type\" \"vecstore\")])\n-\n-(define_insn \"altivec_stvehx\"\n-  [(parallel\n-    [(set (match_operand:V8HI 0 \"memory_operand\" \"=m\")\n-\t  (match_operand:V8HI 1 \"register_operand\" \"v\"))\n-     (unspec [(const_int 0)] 204)])]\n-  \"TARGET_ALTIVEC\"\n-  \"stvehx %1,%y0\"\n+  \"stve<VI_char>x %1,%y0\"\n   [(set_attr \"type\" \"vecstore\")])\n \n-(define_insn \"altivec_stvewx\"\n-  [(parallel\n-    [(set (match_operand:V4SI 0 \"memory_operand\" \"=m\")\n-\t  (match_operand:V4SI 1 \"register_operand\" \"v\"))\n-     (unspec [(const_int 0)] 205)])]\n-  \"TARGET_ALTIVEC\"\n-  \"stvewx %1,%y0\"\n-  [(set_attr \"type\" \"vecstore\")])\n-\n-(define_insn \"absv16qi2\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-\t(abs:V16QI (match_operand:V16QI 1 \"register_operand\" \"v\")))\n-   (clobber (match_scratch:V16QI 2 \"=&v\"))\n-   (clobber (match_scratch:V16QI 3 \"=&v\"))]\n-  \"TARGET_ALTIVEC\"\n-  \"vspltisb %2,0\\;vsububm %3,%2,%1\\;vmaxsb %0,%1,%3\"\n-  [(set_attr \"type\" \"vecsimple\")\n-   (set_attr \"length\" \"12\")])\n-\n-(define_insn \"absv8hi2\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-        (abs:V8HI (match_operand:V8HI 1 \"register_operand\" \"v\")))\n-   (clobber (match_scratch:V8HI 2 \"=&v\"))\n-   (clobber (match_scratch:V8HI 3 \"=&v\"))]\n-  \"TARGET_ALTIVEC\"\n-  \"vspltisb %2,0\\;vsubuhm %3,%2,%1\\;vmaxsh %0,%1,%3\"\n-  [(set_attr \"type\" \"vecsimple\")\n-   (set_attr \"length\" \"12\")])\n-\n-(define_insn \"absv4si2\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (abs:V4SI (match_operand:V4SI 1 \"register_operand\" \"v\")))\n-   (clobber (match_scratch:V4SI 2 \"=&v\"))\n-   (clobber (match_scratch:V4SI 3 \"=&v\"))]\n+(define_insn \"abs<mode>2\"\n+  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n+\t(abs:VI (match_operand:VI 1 \"register_operand\" \"v\")))\n+   (clobber (match_scratch:VI 2 \"=&v\"))\n+   (clobber (match_scratch:VI 3 \"=&v\"))]\n   \"TARGET_ALTIVEC\"\n-  \"vspltisb %2,0\\;vsubuwm %3,%2,%1\\;vmaxsw %0,%1,%3\"\n+  \"vspltisb %2,0\\;vsubu<VI_char>m %3,%2,%1\\;vmaxs<VI_char> %0,%1,%3\"\n   [(set_attr \"type\" \"vecsimple\")\n    (set_attr \"length\" \"12\")])\n \n@@ -1970,45 +1683,16 @@\n   [(set_attr \"type\" \"vecsimple\")\n    (set_attr \"length\" \"12\")])\n \n-(define_insn \"altivec_abss_v16qi\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")] 210))\n-   (clobber (match_scratch:V16QI 2 \"=&v\"))\n-   (clobber (match_scratch:V16QI 3 \"=&v\"))]\n-  \"TARGET_ALTIVEC\"\n-  \"vspltisb %2,0\\;vsubsbs %3,%2,%1\\;vmaxsb %0,%1,%3\"\n-  [(set_attr \"type\" \"vecsimple\")\n-   (set_attr \"length\" \"12\")])\n-\n-(define_insn \"altivec_abss_v8hi\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-        (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")] 211))\n-   (clobber (match_scratch:V8HI 2 \"=&v\"))\n-   (clobber (match_scratch:V8HI 3 \"=&v\"))]\n-  \"TARGET_ALTIVEC\"\n-  \"vspltisb %2,0\\;vsubshs %3,%2,%1\\;vmaxsh %0,%1,%3\"\n-  [(set_attr \"type\" \"vecsimple\")\n-   (set_attr \"length\" \"12\")])\n-\n-(define_insn \"altivec_abss_v4si\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")] 212))\n-   (clobber (match_scratch:V4SI 2 \"=&v\"))\n-   (clobber (match_scratch:V4SI 3 \"=&v\"))]\n+(define_insn \"altivec_abss_<mode>\"\n+  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n+        (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")] 210))\n+   (clobber (match_scratch:VI 2 \"=&v\"))\n+   (clobber (match_scratch:VI 3 \"=&v\"))]\n   \"TARGET_ALTIVEC\"\n-  \"vspltisb %2,0\\;vsubsws %3,%2,%1\\;vmaxsw %0,%1,%3\"\n+  \"vspltisb %2,0\\;vsubs<VI_char>s %3,%2,%1\\;vmaxs<VI_char> %0,%1,%3\"\n   [(set_attr \"type\" \"vecsimple\")\n    (set_attr \"length\" \"12\")])\n \n-(define_insn \"vec_realign_load_v4si\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-        (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")\n-                      (match_operand:V16QI 3 \"register_operand\" \"v\")] 215))]\n-  \"TARGET_ALTIVEC\"\n-  \"vperm %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"vecperm\")])\n-\n (define_insn \"vec_realign_load_v4sf\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n         (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")\n@@ -2018,21 +1702,11 @@\n   \"vperm %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")])\n \n-(define_insn \"vec_realign_load_v8hi\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-        (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                      (match_operand:V8HI 2 \"register_operand\" \"v\")\n-                      (match_operand:V16QI 3 \"register_operand\" \"v\")] 217))]\n-  \"TARGET_ALTIVEC\"\n-  \"vperm %0,%1,%2,%3\"\n-  [(set_attr \"type\" \"vecperm\")])\n-\n-(define_insn \"vec_realign_load_v16qi\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-        (unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n-                      (match_operand:V16QI 2 \"register_operand\" \"v\")\n-                      (match_operand:V16QI 3 \"register_operand\" \"v\")] 218))]\n+(define_insn \"vec_realign_load_<mode>\"\n+  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n+        (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n+                    (match_operand:VI 2 \"register_operand\" \"v\")\n+                    (match_operand:V16QI 3 \"register_operand\" \"v\")] 215))]\n   \"TARGET_ALTIVEC\"\n   \"vperm %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")])\n-"}, {"sha": "5511e4b71abe13ac7381945456fbb76b748a914b", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aba5fb01be1aad35abf7357adbdb893798d1b107/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aba5fb01be1aad35abf7357adbdb893798d1b107/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=aba5fb01be1aad35abf7357adbdb893798d1b107", "patch": "@@ -6150,18 +6150,18 @@ static const struct builtin_description bdesc_3arg[] =\n   { MASK_ALTIVEC, CODE_FOR_altivec_vmsumuhs, \"__builtin_altivec_vmsumuhs\", ALTIVEC_BUILTIN_VMSUMUHS },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vmsumshs, \"__builtin_altivec_vmsumshs\", ALTIVEC_BUILTIN_VMSUMSHS },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vnmsubfp, \"__builtin_altivec_vnmsubfp\", ALTIVEC_BUILTIN_VNMSUBFP },\n-  { MASK_ALTIVEC, CODE_FOR_altivec_vperm_4sf, \"__builtin_altivec_vperm_4sf\", ALTIVEC_BUILTIN_VPERM_4SF },\n-  { MASK_ALTIVEC, CODE_FOR_altivec_vperm_4si, \"__builtin_altivec_vperm_4si\", ALTIVEC_BUILTIN_VPERM_4SI },\n-  { MASK_ALTIVEC, CODE_FOR_altivec_vperm_8hi, \"__builtin_altivec_vperm_8hi\", ALTIVEC_BUILTIN_VPERM_8HI },\n-  { MASK_ALTIVEC, CODE_FOR_altivec_vperm_16qi, \"__builtin_altivec_vperm_16qi\", ALTIVEC_BUILTIN_VPERM_16QI },\n-  { MASK_ALTIVEC, CODE_FOR_altivec_vsel_4sf, \"__builtin_altivec_vsel_4sf\", ALTIVEC_BUILTIN_VSEL_4SF },\n-  { MASK_ALTIVEC, CODE_FOR_altivec_vsel_4si, \"__builtin_altivec_vsel_4si\", ALTIVEC_BUILTIN_VSEL_4SI },\n-  { MASK_ALTIVEC, CODE_FOR_altivec_vsel_8hi, \"__builtin_altivec_vsel_8hi\", ALTIVEC_BUILTIN_VSEL_8HI },\n-  { MASK_ALTIVEC, CODE_FOR_altivec_vsel_16qi, \"__builtin_altivec_vsel_16qi\", ALTIVEC_BUILTIN_VSEL_16QI },\n-  { MASK_ALTIVEC, CODE_FOR_altivec_vsldoi_16qi, \"__builtin_altivec_vsldoi_16qi\", ALTIVEC_BUILTIN_VSLDOI_16QI },\n-  { MASK_ALTIVEC, CODE_FOR_altivec_vsldoi_8hi, \"__builtin_altivec_vsldoi_8hi\", ALTIVEC_BUILTIN_VSLDOI_8HI },\n-  { MASK_ALTIVEC, CODE_FOR_altivec_vsldoi_4si, \"__builtin_altivec_vsldoi_4si\", ALTIVEC_BUILTIN_VSLDOI_4SI },\n-  { MASK_ALTIVEC, CODE_FOR_altivec_vsldoi_4sf, \"__builtin_altivec_vsldoi_4sf\", ALTIVEC_BUILTIN_VSLDOI_4SF },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vperm_v4sf, \"__builtin_altivec_vperm_4sf\", ALTIVEC_BUILTIN_VPERM_4SF },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vperm_v4si, \"__builtin_altivec_vperm_4si\", ALTIVEC_BUILTIN_VPERM_4SI },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vperm_v8hi, \"__builtin_altivec_vperm_8hi\", ALTIVEC_BUILTIN_VPERM_8HI },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vperm_v16qi, \"__builtin_altivec_vperm_16qi\", ALTIVEC_BUILTIN_VPERM_16QI },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vsel_v4sf, \"__builtin_altivec_vsel_4sf\", ALTIVEC_BUILTIN_VSEL_4SF },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vsel_v4si, \"__builtin_altivec_vsel_4si\", ALTIVEC_BUILTIN_VSEL_4SI },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vsel_v8hi, \"__builtin_altivec_vsel_8hi\", ALTIVEC_BUILTIN_VSEL_8HI },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vsel_v16qi, \"__builtin_altivec_vsel_16qi\", ALTIVEC_BUILTIN_VSEL_16QI },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vsldoi_v16qi, \"__builtin_altivec_vsldoi_16qi\", ALTIVEC_BUILTIN_VSLDOI_16QI },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vsldoi_v8hi, \"__builtin_altivec_vsldoi_8hi\", ALTIVEC_BUILTIN_VSLDOI_8HI },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vsldoi_v4si, \"__builtin_altivec_vsldoi_4si\", ALTIVEC_BUILTIN_VSLDOI_4SI },\n+  { MASK_ALTIVEC, CODE_FOR_altivec_vsldoi_v4sf, \"__builtin_altivec_vsldoi_4sf\", ALTIVEC_BUILTIN_VSLDOI_4SF },\n };\n \n /* DST operations: void foo (void *, const int, const char).  */\n@@ -6190,7 +6190,7 @@ static struct builtin_description bdesc_2arg[] =\n   { MASK_ALTIVEC, CODE_FOR_altivec_vadduws, \"__builtin_altivec_vadduws\", ALTIVEC_BUILTIN_VADDUWS },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vaddsws, \"__builtin_altivec_vaddsws\", ALTIVEC_BUILTIN_VADDSWS },\n   { MASK_ALTIVEC, CODE_FOR_andv4si3, \"__builtin_altivec_vand\", ALTIVEC_BUILTIN_VAND },\n-  { MASK_ALTIVEC, CODE_FOR_altivec_vandc, \"__builtin_altivec_vandc\", ALTIVEC_BUILTIN_VANDC },\n+  { MASK_ALTIVEC, CODE_FOR_andcv4si3, \"__builtin_altivec_vandc\", ALTIVEC_BUILTIN_VANDC },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vavgub, \"__builtin_altivec_vavgub\", ALTIVEC_BUILTIN_VAVGUB },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vavgsb, \"__builtin_altivec_vavgsb\", ALTIVEC_BUILTIN_VAVGSB },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vavguh, \"__builtin_altivec_vavguh\", ALTIVEC_BUILTIN_VAVGUH },\n@@ -6949,10 +6949,10 @@ rs6000_expand_ternop_builtin (enum insn_code icode, tree arglist, rtx target)\n       || arg2 == error_mark_node)\n     return const0_rtx;\n \n-  if (icode == CODE_FOR_altivec_vsldoi_4sf\n-      || icode == CODE_FOR_altivec_vsldoi_4si\n-      || icode == CODE_FOR_altivec_vsldoi_8hi\n-      || icode == CODE_FOR_altivec_vsldoi_16qi)\n+  if (icode == CODE_FOR_altivec_vsldoi_v4sf\n+      || icode == CODE_FOR_altivec_vsldoi_v4si\n+      || icode == CODE_FOR_altivec_vsldoi_v8hi\n+      || icode == CODE_FOR_altivec_vsldoi_v16qi)\n     {\n       /* Only allow 4-bit unsigned literals.  */\n       STRIP_NOPS (arg2);"}]}