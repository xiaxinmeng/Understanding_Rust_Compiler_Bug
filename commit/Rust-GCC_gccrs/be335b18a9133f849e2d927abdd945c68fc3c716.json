{"sha": "be335b18a9133f849e2d927abdd945c68fc3c716", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUzMzViMThhOTEzM2Y4NDllMmQ5MjdhYmRkOTQ1YzY4ZmMzYzcxNg==", "commit": {"author": {"name": "Kostya Serebryany", "email": "kcc@google.com", "date": "2010-08-12T22:56:59Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-08-12T22:56:59Z"}, "message": "c++config (_GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE, [...]): Add.\n\n2010-08-12  Kostya Serebryany <kcc@google.com>\n\t    Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/c++config (_GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE,\n\t_GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER): Add.\n\t* src/ios_init.cc (ios_base::Init::~Init): Decorate with the\n\tlatter.\n\t* include/tr1_impl/boost_sp_counted_base.h: Likewise.\n\t* include/ext/rc_string_base.h: Likewise.\n\t* include/bits/locale_classes.h: Likewise.\n\t* include/bits/basic_string.h: Likewise.\n\t* include/bits/ios_base.h: Likewise.\n\t* testsuite/27_io/ios_base/cons/assign_neg.cc: Adjust dg-error\n\tline number.\n\t* testsuite/27_io/ios_base/cons/copy_neg.cc: Likewise.\n\t* testsuite/ext/profile/mutex_extensions.cc: Likewise.\n\nCo-Authored-By: Paolo Carlini <paolo.carlini@oracle.com>\n\nFrom-SVN: r163210", "tree": {"sha": "0e6c156d49fe7f64d815154ccc4cbd3c33f02455", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e6c156d49fe7f64d815154ccc4cbd3c33f02455"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be335b18a9133f849e2d927abdd945c68fc3c716", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be335b18a9133f849e2d927abdd945c68fc3c716", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be335b18a9133f849e2d927abdd945c68fc3c716", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be335b18a9133f849e2d927abdd945c68fc3c716/comments", "author": {"login": "kcc", "id": 1789297, "node_id": "MDQ6VXNlcjE3ODkyOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1789297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kcc", "html_url": "https://github.com/kcc", "followers_url": "https://api.github.com/users/kcc/followers", "following_url": "https://api.github.com/users/kcc/following{/other_user}", "gists_url": "https://api.github.com/users/kcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/kcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kcc/subscriptions", "organizations_url": "https://api.github.com/users/kcc/orgs", "repos_url": "https://api.github.com/users/kcc/repos", "events_url": "https://api.github.com/users/kcc/events{/privacy}", "received_events_url": "https://api.github.com/users/kcc/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "644fa7acbdafe5d5c5ddea0e0dd0ca73781500ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/644fa7acbdafe5d5c5ddea0e0dd0ca73781500ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/644fa7acbdafe5d5c5ddea0e0dd0ca73781500ca"}], "stats": {"total": 114, "additions": 101, "deletions": 13}, "files": [{"sha": "f133c0a51fa867cadf4c62eb00ef9cb6a340809f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=be335b18a9133f849e2d927abdd945c68fc3c716", "patch": "@@ -1,3 +1,20 @@\n+2010-08-12  Kostya Serebryany <kcc@google.com>\n+\t    Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/c++config (_GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE,\n+\t_GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER): Add.\n+\t* src/ios_init.cc (ios_base::Init::~Init): Decorate with the\n+\tlatter.\n+\t* include/tr1_impl/boost_sp_counted_base.h: Likewise.\n+\t* include/ext/rc_string_base.h: Likewise.\n+\t* include/bits/locale_classes.h: Likewise.\n+\t* include/bits/basic_string.h: Likewise.\n+\t* include/bits/ios_base.h: Likewise.\n+\t* testsuite/27_io/ios_base/cons/assign_neg.cc: Adjust dg-error\n+\tline number.\n+\t* testsuite/27_io/ios_base/cons/copy_neg.cc: Likewise.\n+\t* testsuite/ext/profile/mutex_extensions.cc: Likewise.\n+\n 2010-08-11  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/hashtable.h (_Hashtable<>::erase(const key_type&)):"}, {"sha": "74820eb348e8c56aab2539fcafd65c2f17f1ae92", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=be335b18a9133f849e2d927abdd945c68fc3c716", "patch": "@@ -232,9 +232,16 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n #ifndef _GLIBCXX_FULLY_DYNAMIC_STRING\n \t  if (__builtin_expect(this != &_S_empty_rep(), false))\n #endif\n-\t    if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,\n-\t\t\t\t\t\t       -1) <= 0)\n-\t      _M_destroy(__a);\n+\t    {\n+\t      // Be race-detector-friendly.  For more info see bits/c++config.\n+\t      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount)\n+\t      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,\n+\t\t\t\t\t\t\t -1) <= 0)\n+\t\t{\n+\t\t  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount)\n+\t\t  _M_destroy(__a);\n+\t\t}\n+\t    }\n \t}  // XXX MT\n \n \tvoid"}, {"sha": "fef6933a3b5c390ede2c7912802e169d8bfc8a17", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=be335b18a9133f849e2d927abdd945c68fc3c716", "patch": "@@ -60,6 +60,35 @@\n # define _GLIBCXX_DEPRECATED_ATTR\n #endif\n \n+// Macros for race detectors.\n+// _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(A) and\n+// _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(A) should be used to explain\n+// atomic (lock-free) synchronization to race detectors:\n+// the race detector will infer a happens-before arc from the former to the\n+// latter when they share the same argument pointer.\n+//\n+// The most frequent use case for these macros (and the only case in the\n+// current implementation of the library) is atomic reference counting:\n+//   void _M_remove_reference()\n+//   {\n+//     _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount)\n+//     if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount, -1) <= 0)\n+//       {\n+//         _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount)\n+//         _M_destroy(__a);\n+//       }\n+//   }\n+// The annotations in this example tell the race detector that all memory\n+// accesses occurred when the refcount was positive do not race with\n+// memory accesses which occurred after the refcount became zero.\n+\n+#ifndef _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE\n+# define  _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(A)\n+#endif\n+#ifndef _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER\n+# define  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(A)\n+#endif\n+\n // Macros for activating various namespace association modes.\n // _GLIBCXX_NAMESPACE_ASSOCIATION_DEBUG\n // _GLIBCXX_NAMESPACE_ASSOCIATION_PARALLEL"}, {"sha": "6cca99166ca7172e36a1b7eaf7e3ed2f1406731a", "filename": "libstdc++-v3/include/bits/ios_base.h", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h?ref=be335b18a9133f849e2d927abdd945c68fc3c716", "patch": "@@ -474,7 +474,16 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       // 0 => OK to delete.\n       int\n       _M_remove_reference() \n-      { return __gnu_cxx::__exchange_and_add_dispatch(&_M_refcount, -1); }\n+      {\n+        // Be race-detector-friendly.  For more info see bits/c++config.\n+        _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_refcount)\n+        int __res = __gnu_cxx::__exchange_and_add_dispatch(&_M_refcount, -1);\n+        if (__res == 0)\n+          {\n+            _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_refcount)\n+          }\n+        return __res;\n+      }\n     };\n \n      _Callback_list*\t_M_callbacks;\n@@ -962,4 +971,3 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n _GLIBCXX_END_NAMESPACE\n \n #endif /* _IOS_BASE_H */\n-"}, {"sha": "c519f3584766f256e7ab5ded0c4de42db86c9a52", "filename": "libstdc++-v3/include/bits/locale_classes.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h?ref=be335b18a9133f849e2d927abdd945c68fc3c716", "patch": "@@ -402,8 +402,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     void\n     _M_remove_reference() const throw()\n     {\n+      // Be race-detector-friendly.  For more info see bits/c++config.\n+      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_refcount)\n       if (__gnu_cxx::__exchange_and_add_dispatch(&_M_refcount, -1) == 1)\n \t{\n+          _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_refcount)\n \t  __try\n \t    { delete this; }\n \t  __catch(...)\n@@ -508,8 +511,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     void\n     _M_remove_reference() throw()\n     {\n+      // Be race-detector-friendly.  For more info see bits/c++config.\n+      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_refcount)\n       if (__gnu_cxx::__exchange_and_add_dispatch(&_M_refcount, -1) == 1)\n \t{\n+          _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_refcount)\n \t  __try\n \t    { delete this; }\n \t  __catch(...)"}, {"sha": "32c9d3865aeef4d257ba1ad2b0eaa968c38a1516", "filename": "libstdc++-v3/include/ext/rc_string_base.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h?ref=be335b18a9133f849e2d927abdd945c68fc3c716", "patch": "@@ -199,9 +199,16 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       void\n       _M_dispose()\n       {\n+\t// Be race-detector-friendly.  For more info see bits/c++config.\n+\t_GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_rep()->_M_info.\n+\t\t\t\t\t\t_M_refcount)\n \tif (__exchange_and_add_dispatch(&_M_rep()->_M_info._M_refcount,\n \t\t\t\t\t-1) <= 0)\n-\t  _M_rep()->_M_destroy(_M_get_allocator());\n+\t  {\n+\t    _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_rep()->_M_info.\n+\t\t\t\t\t\t   _M_refcount)\n+\t    _M_rep()->_M_destroy(_M_get_allocator());\n+\t  }\n       }  // XXX MT\n \n       bool"}, {"sha": "a995df5bb767293e6691645a070e7b412926332f", "filename": "libstdc++-v3/include/tr1_impl/boost_sp_counted_base.h", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fboost_sp_counted_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fboost_sp_counted_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fboost_sp_counted_base.h?ref=be335b18a9133f849e2d927abdd945c68fc3c716", "patch": "@@ -1,6 +1,6 @@\n // <tr1_impl/boost_sp_counted_base.h> -*- C++ -*-\n \n-// Copyright (C) 2007, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -139,8 +139,11 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       void\n       _M_release() // nothrow\n       {\n+        // Be race-detector-friendly.  For more info see bits/c++config.\n+        _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_use_count)\n \tif (__gnu_cxx::__exchange_and_add_dispatch(&_M_use_count, -1) == 1)\n \t  {\n+            _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_use_count)\n \t    _M_dispose();\n \t    // There must be a memory barrier between dispose() and destroy()\n \t    // to ensure that the effects of dispose() are observed in the\n@@ -152,9 +155,14 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n \t        _GLIBCXX_WRITE_MEM_BARRIER;\n \t      }\n \n+            // Be race-detector-friendly.  For more info see bits/c++config.\n+            _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_weak_count)\n \t    if (__gnu_cxx::__exchange_and_add_dispatch(&_M_weak_count,\n \t\t\t\t\t\t       -1) == 1)\n-\t      _M_destroy();\n+              {\n+                _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_weak_count)\n+\t        _M_destroy();\n+              }\n \t  }\n       }\n   \n@@ -165,8 +173,11 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       void\n       _M_weak_release() // nothrow\n       {\n+        // Be race-detector-friendly. For more info see bits/c++config.\n+        _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_weak_count)\n \tif (__gnu_cxx::__exchange_and_add_dispatch(&_M_weak_count, -1) == 1)\n \t  {\n+            _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_weak_count)\n \t    if (_Mutex_base<_Lp>::_S_need_barriers)\n \t      {\n \t        // See _M_release(),"}, {"sha": "209a324a9313e0cd637da705b63144286ce43335", "filename": "libstdc++-v3/src/ios_init.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Fsrc%2Fios_init.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Fsrc%2Fios_init.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fios_init.cc?ref=be335b18a9133f849e2d927abdd945c68fc3c716", "patch": "@@ -1,7 +1,7 @@\n // Iostreams base classes -*- C++ -*-\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-// 2006, 2007, 2008, 2009\n+// 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -122,8 +122,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   ios_base::Init::~Init()\n   {\n+    // Be race-detector-friendly.  For more info see bits/c++config.\n+    _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_S_refcount)\n     if (__gnu_cxx::__exchange_and_add_dispatch(&_S_refcount, -1) == 2)\n       {\n+        _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_S_refcount)\n \t// Catch any exceptions thrown by basic_ostream::flush()\n \t__try\n \t  { "}, {"sha": "a7adff4d3f482eefdcb2a7fa9d186f84edcc6054", "filename": "libstdc++-v3/testsuite/27_io/ios_base/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fassign_neg.cc?ref=be335b18a9133f849e2d927abdd945c68fc3c716", "patch": "@@ -34,5 +34,5 @@ void test01()\n }\n // { dg-error \"synthesized\" \"\" { target *-*-* } 33 } \n // { dg-error \"within this context\" \"\" { target *-*-* } 26 } \n-// { dg-error \"is private\" \"\" { target *-*-* } 779 }\n+// { dg-error \"is private\" \"\" { target *-*-* } 788 }\n // { dg-error \"operator=\" \"\" { target *-*-* } 0 } "}, {"sha": "44f7af87da82e1d2bb3fcd2427ada33d22d7cadd", "filename": "libstdc++-v3/testsuite/27_io/ios_base/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fcons%2Fcopy_neg.cc?ref=be335b18a9133f849e2d927abdd945c68fc3c716", "patch": "@@ -34,5 +34,5 @@ void test02()\n }\n // { dg-error \"within this context\" \"\" { target *-*-* } 26 }\n // { dg-error \"synthesized\" \"\" { target *-*-* } 33 } \n-// { dg-error \"is private\" \"\" { target *-*-* } 776 } \n+// { dg-error \"is private\" \"\" { target *-*-* } 785 } \n // { dg-error \"copy constructor\" \"\" { target *-*-* } 0 } "}, {"sha": "471c4482b2d41fa19dbd47150760d70b4585da67", "filename": "libstdc++-v3/testsuite/ext/profile/mutex_extensions.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fmutex_extensions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be335b18a9133f849e2d927abdd945c68fc3c716/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fmutex_extensions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fmutex_extensions.cc?ref=be335b18a9133f849e2d927abdd945c68fc3c716", "patch": "@@ -3,7 +3,7 @@\n \n // -*- C++ -*-\n \n-// Copyright (C) 2006, 2007, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -22,4 +22,4 @@\n \n #include <vector>\n \n-// { dg-error \"Cannot use -D_GLIBCXX_PROFILE with \" \"\" { target *-*-* } 167 }\n+// { dg-error \"Cannot use -D_GLIBCXX_PROFILE with \" \"\" { target *-*-* } 196 }"}]}