{"sha": "9d18e06bd5453336dacd6aff92c186d2c69ffbe6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQxOGUwNmJkNTQ1MzMzNmRhY2Q2YWZmOTJjMTg2ZDJjNjlmZmJlNg==", "commit": {"author": {"name": "Josef Zlomek", "email": "zlomekj@suse.cz", "date": "2003-02-28T07:06:34Z"}, "committer": {"name": "Josef Zlomek", "email": "zlomek@gcc.gnu.org", "date": "2003-02-28T07:06:34Z"}, "message": "emit-rtl.c (set_reg_attrs_for_parm): New function.\n\n\t* emit-rtl.c (set_reg_attrs_for_parm): New function.\n\t* rtl.h (set_reg_attrs_for_parm): New exported function.\n\t* function.c (assign_parms): Use set_reg_attrs_for_parm instead of\n\tset_reg_attrs_from_mem.\n\nFrom-SVN: r63548", "tree": {"sha": "64aee5fc980eb3329ff36f0b9fca0f1171245975", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64aee5fc980eb3329ff36f0b9fca0f1171245975"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d18e06bd5453336dacd6aff92c186d2c69ffbe6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d18e06bd5453336dacd6aff92c186d2c69ffbe6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d18e06bd5453336dacd6aff92c186d2c69ffbe6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d18e06bd5453336dacd6aff92c186d2c69ffbe6/comments", "author": null, "committer": null, "parents": [{"sha": "486f4cd1b2bcc3dd42f3074da2b2755280c12e59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/486f4cd1b2bcc3dd42f3074da2b2755280c12e59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/486f4cd1b2bcc3dd42f3074da2b2755280c12e59"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "42db6357cc178867698913977d036bd38b5fffad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d18e06bd5453336dacd6aff92c186d2c69ffbe6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d18e06bd5453336dacd6aff92c186d2c69ffbe6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d18e06bd5453336dacd6aff92c186d2c69ffbe6", "patch": "@@ -1,3 +1,10 @@\n+2003-02-28  Josef Zlomek  <zlomekj@suse.cz>\n+\n+\t* emit-rtl.c (set_reg_attrs_for_parm): New function.\n+\t* rtl.h (set_reg_attrs_for_parm): New exported function.\n+\t* function.c (assign_parms): Use set_reg_attrs_for_parm instead of\n+\tset_reg_attrs_from_mem.\n+\n 2003-02-27  Roger Sayle  <roger@eyesopen.com>\n \t    Zack Weinberg <zack@codesourcery.com>\n "}, {"sha": "28c75ee28963857b3acc548c78fe319fafe41602", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d18e06bd5453336dacd6aff92c186d2c69ffbe6/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d18e06bd5453336dacd6aff92c186d2c69ffbe6/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=9d18e06bd5453336dacd6aff92c186d2c69ffbe6", "patch": "@@ -1,6 +1,6 @@\n /* Emit RTL for the GNU C-Compiler expander.\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -931,6 +931,32 @@ set_reg_attrs_from_mem (reg, mem)\n       = get_reg_attrs (MEM_EXPR (mem), INTVAL (MEM_OFFSET (mem)));\n }\n \n+/* Set the register attributes for registers contained in PARM_RTX.\n+   Use needed values from memory attributes of MEM.  */\n+\n+void\n+set_reg_attrs_for_parm (parm_rtx, mem)\n+     rtx parm_rtx;\n+     rtx mem;\n+{\n+  if (GET_CODE (parm_rtx) == REG)\n+    set_reg_attrs_from_mem (parm_rtx, mem);\n+  else if (GET_CODE (parm_rtx) == PARALLEL)\n+    {\n+      /* Check for a NULL entry in the first slot, used to indicate that the\n+\t parameter goes both on the stack and in registers.  */\n+      int i = XEXP (XVECEXP (parm_rtx, 0, 0), 0) ? 0 : 1;\n+      for (; i < XVECLEN (parm_rtx, 0); i++)\n+\t{\n+\t  rtx x = XVECEXP (parm_rtx, 0, i);\n+\t  if (GET_CODE (XEXP (x, 0)) == REG)\n+\t    REG_ATTRS (XEXP (x, 0))\n+\t      = get_reg_attrs (MEM_EXPR (mem),\n+\t\t\t       INTVAL (XEXP (x, 1)));\n+\t}\n+    }\n+}\n+\n /* Assign the RTX X to declaration T.  */\n void\n set_decl_rtl (t, x)"}, {"sha": "851dd246ee98402461321184c124fe5c69b531de", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d18e06bd5453336dacd6aff92c186d2c69ffbe6/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d18e06bd5453336dacd6aff92c186d2c69ffbe6/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=9d18e06bd5453336dacd6aff92c186d2c69ffbe6", "patch": "@@ -4460,7 +4460,7 @@ assign_parms (fndecl)\n \n \t/* Set also REG_ATTRS if parameter was passed in a register.  */\n \tif (entry_parm)\n-\t  set_reg_attrs_from_mem (entry_parm, stack_parm);\n+\t  set_reg_attrs_for_parm (entry_parm, stack_parm);\n       }\n \n       /* If this parameter was passed both in registers and in the stack,"}, {"sha": "89f554da724291f222ebfe1197b5dbda7675daf8", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d18e06bd5453336dacd6aff92c186d2c69ffbe6/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d18e06bd5453336dacd6aff92c186d2c69ffbe6/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=9d18e06bd5453336dacd6aff92c186d2c69ffbe6", "patch": "@@ -1378,6 +1378,7 @@ extern rtx gen_int_mode\t\t\tPARAMS ((HOST_WIDE_INT,\n extern rtx emit_copy_of_insn_after\tPARAMS ((rtx, rtx));\n extern void set_reg_attrs_from_mem\tPARAMS ((rtx, rtx));\n extern void set_mem_attrs_from_reg\tPARAMS ((rtx, rtx));\n+extern void set_reg_attrs_for_parm\tPARAMS ((rtx, rtx));\n \n /* In rtl.c */\n extern rtx rtx_alloc\t\t\tPARAMS ((RTX_CODE));"}]}