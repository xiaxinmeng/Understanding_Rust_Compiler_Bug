{"sha": "f0c0f124ebe28b71abccbd7247678c9ac608b649", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBjMGYxMjRlYmUyOGI3MWFiY2NiZDcyNDc2NzhjOWFjNjA4YjY0OQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-10-20T06:53:21Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-10-20T08:33:48Z"}, "message": "Special case shifting by zero in operator_rshift::op1_range.\n\ngcc/ChangeLog:\n\n\t* range-op.cc (operator_rshift::op1_range): Special case\n\tshifting by zero.", "tree": {"sha": "759d63dbd207a341d313783ca8783e97d9c120af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/759d63dbd207a341d313783ca8783e97d9c120af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0c0f124ebe28b71abccbd7247678c9ac608b649", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0c0f124ebe28b71abccbd7247678c9ac608b649", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0c0f124ebe28b71abccbd7247678c9ac608b649", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0c0f124ebe28b71abccbd7247678c9ac608b649/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f70460005d4fe3f8784000c631449c09c8ce57a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f70460005d4fe3f8784000c631449c09c8ce57a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f70460005d4fe3f8784000c631449c09c8ce57a"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "ee62f103598aff16549f45a0949be350f98f1848", "filename": "gcc/range-op.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c0f124ebe28b71abccbd7247678c9ac608b649/gcc%2Frange-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c0f124ebe28b71abccbd7247678c9ac608b649/gcc%2Frange-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.cc?ref=f0c0f124ebe28b71abccbd7247678c9ac608b649", "patch": "@@ -1642,6 +1642,11 @@ operator_rshift::op1_range (irange &r,\n \t\t    wi::uhwi (prec, TYPE_PRECISION (TREE_TYPE (shift))),\n \t\t    UNSIGNED))\n \treturn false;\n+      if (wi::to_wide (shift) == 0)\n+\t{\n+\t  r = lhs;\n+\t  return true;\n+\t}\n \n       // Folding the original operation may discard some impossible\n       // ranges from the LHS."}]}